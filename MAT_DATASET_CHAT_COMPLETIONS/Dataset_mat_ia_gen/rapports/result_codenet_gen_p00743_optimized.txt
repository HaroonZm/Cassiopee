================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import heapq

input=sys.stdin.readline

while True:
    n,m=map(int,input().split())
    if n==0 and m==0:
        break
    s,g=map(int,input().split())
    edges=[[] for _ in range(n+1)]
    for _ in range(m):
        x,y,d,c=map(int,input().split())
        edges[x].append((y,d,c))
        edges[y].append((x,d,c))
    # state: (city, speed, prev_city)
    # speed from 1 to max 30 (speed limit max)
    # prev_city from 0 to n (0 means start no prev)
    # We'll do Dijkstra on (city,speed,prev_city)
    INF=float('inf')
    dist=[[[INF]*(n+1) for _ in range(31)] for __ in range(n+1)]
    # initial: at start city s, prev_city=0(no prev), speed=1 before going on first road, but speed applies on roads not cities
    # The car must run first road at speed=1, so for first move we start at s with no speed yet.
    # We'll model initial moves by pushing all edges from s with speed=1 only.
    # So initial states: from s, speed=1, prev_city=0, dist=0. Will relax neighbors accordingly.
    # Actually, to include speed from arrivals, we must push a dummy state at s with speed=0 and prev=0 and cost=0, then from s generate speed=1 edges.
    pq=[]
    for v in range(31):
        for p in range(n+1):
            dist[s][v][p]=INF
    dist[s][0][0]=0.0
    heapq.heappush(pq,(0.0,s,0,0)) #(cost, city, speed, prev_city)
    while pq:
        cost,u,v,pv=heapq.heappop(pq)
        if dist[u][v][pv]<cost:
            continue
        # If reached goal city g at speed=1 (speed on last road must be 1)
        # Actually, arrival at g must be at speed=1 edge, so state is city=g and speed=1, prev_city can be any.
        if u==g and v==1:
            print(f'{cost:.5f}')
            break
        for w,d,c in edges[u]:
            if w==pv:
                continue
            # from city u, came with speed v, can leave with speed nv in {v-1,v,v+1} if in range [1..c]
            for nv in [v-1,v,v+1]:
                if nv<1 or nv>c:
                    continue
                # on first move: if v=0 means initial position, must leave at speed 1 only
                if v==0 and nv!=1:
                    continue
                ncost=cost+d/nv
                if dist[w][nv][u]>ncost:
                    dist[w][nv][u]=ncost
                    heapq.heappush(pq,(ncost,w,nv,u))
    else:
        print("unreachable")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5976144671440125
    2. '.' → logprob: -0.9726144671440125
    3. '<|end|>' → logprob: -3.8476145267486572
    4. '\' → logprob: -3.9726145267486572
    5. 'import' → logprob: -4.347614288330078
    6. 'newline' → logprob: -5.222614288330078
    7. '' → logprob: -5.972614288330078
    8. '\r' → logprob: -6.222614288330078
    9. '
' → logprob: -6.222614288330078
    10. '<|end|>' → logprob: -6.347614288330078

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00043126524542458355
    2. 'os' → logprob: -7.750431060791016
    3. '"os' → logprob: -15.125431060791016
    4. ' re' → logprob: -16.375431060791016
    5. ' math' → logprob: -16.625431060791016
    6. '	os' → logprob: -17.125431060791016
    7. '_os' → logprob: -17.250431060791016
    8. ' o' → logprob: -17.375431060791016
    9. ' json' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.250431060791016

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3582626283168793
    2. '\n' → logprob: -2.358262538909912
    3. 'import' → logprob: -2.608262538909912
    4. '
' → logprob: -2.983262538909912
    5. '\' → logprob: -3.233262538909912
    6. '```' → logprob: -4.233262538909912
    7. '

' → logprob: -4.483262538909912
    8. '' → logprob: -5.608262538909912
    9. ',' → logprob: -5.733262538909912
    10. '<|end|>' → logprob: -5.858262538909912

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7989353537559509
    2. '\n' → logprob: -1.5489354133605957
    3. 'import' → logprob: -2.2989354133605957
    4. '
' → logprob: -2.5489354133605957
    5. '```' → logprob: -3.0489354133605957
    6. '\' → logprob: -3.2989354133605957
    7. '

' → logprob: -3.2989354133605957
    8. '<|end|>' → logprob: -4.048935413360596
    9. ',' → logprob: -5.048935413360596
    10. '' → logprob: -5.923935413360596

Token 7: ' heap' (ID: 37237)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.2647969722747803
    2. ' os' → logprob: -1.5147969722747803
    3. 'random' → logprob: -4.764797210693359
    4. ' random' → logprob: -5.889797210693359
    5. ' numpy' → logprob: -8.13979721069336
    6. 're' → logprob: -8.26479721069336
    7. 'numpy' → logprob: -8.63979721069336
    8. ' re' → logprob: -8.63979721069336
    9. 'collections' → logprob: -9.13979721069336
    10. 'time' → logprob: -9.51479721069336

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.9888433093437925e-05
    2. '.' → logprob: -11.125040054321289
    3. '#' → logprob: -12.000040054321289
    4. '<|end|>' → logprob: -12.500040054321289
    5. 't' → logprob: -12.750040054321289
    6. 's' → logprob: -13.000040054321289
    7. 'u' → logprob: -13.375040054321289
    8. '_' → logprob: -13.500040054321289
    9. '
' → logprob: -13.875040054321289
    10. 'ify' → logprob: -14.500040054321289

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1617487668991089
    2. '<|end|>' → logprob: -1.5367487668991089
    3. '
' → logprob: -1.6617487668991089
    4. '

' → logprob: -2.2867488861083984
    5. '\n' → logprob: -2.6617488861083984
    6. '<|end|>' → logprob: -3.4117488861083984
    7. 'import' → logprob: -3.6617488861083984
    8. '```' → logprob: -3.9117488861083984
    9. '\' → logprob: -4.411748886108398
    10. '' → logprob: -5.661748886108398

Token 10: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.192091941833496
    2. '\' → logprob: -1.442091941833496
    3. '.' → logprob: -1.692091941833496
    4. '```' → logprob: -2.442091941833496
    5. 'import' → logprob: -2.817091941833496
    6. '\n' → logprob: -2.942091941833496
    7. 'from' → logprob: -3.442091941833496
    8. '
' → logprob: -4.067091941833496
    9. 'class' → logprob: -4.817091941833496
    10. '' → logprob: -5.192091941833496

Token 11: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00399600388482213
    2. '.' → logprob: -5.628995895385742
    3. ')' → logprob: -8.503995895385742
    4. '()' → logprob: -9.628995895385742
    5. '(.)' → logprob: -10.628995895385742
    6. '=' → logprob: -11.128995895385742
    7. '```' → logprob: -11.503995895385742
    8. '(
' → logprob: -11.628995895385742
    9. '("("' → logprob: -12.003995895385742
    10. '<|end|>' → logprob: -12.003995895385742

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003890854713972658
    2. '.readline' → logprob: -8.500389099121094
    3. '[' → logprob: -9.125389099121094
    4. ' .' → logprob: -11.000389099121094
    5. '.get' → logprob: -11.375389099121094
    6. '.stdin' → logprob: -11.625389099121094
    7. '['' → logprob: -12.000389099121094
    8. '```' → logprob: -12.625389099121094
    9. '.
' → logprob: -12.750389099121094
    10. '.[' → logprob: -12.875389099121094

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05134773626923561
    2. '.' → logprob: -3.1763477325439453
    3. '.read' → logprob: -4.801347732543945
    4. '.Read' → logprob: -9.551347732543945
    5. '.readlines' → logprob: -12.301347732543945
    6. '.Reader' → logprob: -12.426347732543945
    7. '.READ' → logprob: -12.551347732543945
    8. '.get' → logprob: -13.676347732543945
    9. '```' → logprob: -13.926347732543945
    10. '.reader' → logprob: -14.051347732543945

Token 14: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10801639407873154
    2. '(' → logprob: -2.3580164909362793
    3. '()
' → logprob: -6.233016490936279
    4. '
' → logprob: -6.483016490936279
    5. '(
' → logprob: -6.608016490936279
    6. '()\' → logprob: -6.858016490936279
    7. '<|end|>' → logprob: -7.608016490936279
    8. ')' → logprob: -8.233016014099121
    9. '()

' → logprob: -8.358016014099121
    10. '

' → logprob: -8.608016014099121

Token 15: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5948644876480103
    2. 'n' → logprob: -0.8448644876480103
    3. '(n' → logprob: -4.094864368438721
    4. '(' → logprob: -7.219864368438721
    5. 'class' → logprob: -7.219864368438721
    6. 'for' → logprob: -8.969864845275879
    7. '()' → logprob: -9.344864845275879
    8. 's' → logprob: -9.594864845275879
    9. 't' → logprob: -9.719864845275879
    10. '\' → logprob: -9.844864845275879

Token 16: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046429894864559174
    2. ' True' → logprob: -3.4214298725128174
    3. ' (' → logprob: -4.9214301109313965
    4. ' not' → logprob: -6.2964301109313965
    5. '  ' → logprob: -6.5464301109313965
    6. '(' → logprob: -6.6714301109313965
    7. ' )' → logprob: -8.421429634094238
    8. ' space' → logprob: -9.046429634094238
    9. '    ' → logprob: -9.296429634094238
    10. ' ' → logprob: -9.421429634094238

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035506997257471085
    2. '():' → logprob: -3.4105069637298584
    3. ' :' → logprob: -6.5355072021484375
    4. ':**' → logprob: -9.285507202148438
    5. '(:' → logprob: -9.535507202148438
    6. '):' → logprob: -9.535507202148438
    7. ' ():' → logprob: -10.160507202148438
    8. '   ' → logprob: -10.285507202148438
    9. '(' → logprob: -10.660507202148438
    10. '(':' → logprob: -11.410507202148438

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0382470041513443
    2. '    
' → logprob: -4.288247108459473
    3. ':' → logprob: -4.413247108459473
    4. '    ' → logprob: -5.163247108459473
    5. ' :' → logprob: -6.288247108459473
    6. ' ' → logprob: -7.038247108459473
    7. '     
' → logprob: -7.163247108459473
    8. ' 
' → logprob: -7.288247108459473
    9. ':
' → logprob: -7.663247108459473
    10. '  
' → logprob: -7.788247108459473

Token 19: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2934502065181732
    2. 'line' → logprob: -2.293450117111206
    3. 'n' (adapté à ' n') → logprob: -2.543450117111206
    4. '   ' → logprob: -3.418450117111206
    5. ' n' → logprob: -3.543450117111206
    6. ' try' → logprob: -5.668450355529785
    7. 'data' → logprob: -6.043450355529785
    8. 'try' → logprob: -6.543450355529785
    9. 'q' → logprob: -7.043450355529785
    10. ' data' → logprob: -7.168450355529785

Token 20: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19083872437477112
    2. '=' → logprob: -1.8158386945724487
    3. ' ==' → logprob: -5.190838813781738
    4. ' ' → logprob: -5.315838813781738
    5. '=int' → logprob: -8.190838813781738
    6. ' >' → logprob: -9.315838813781738
    7. '==' → logprob: -9.565838813781738
    8. ' :=' → logprob: -10.690838813781738
    9. '>' → logprob: -10.940838813781738
    10. '=input' → logprob: -10.940838813781738

Token 21: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931845545768738
    2. ' =' → logprob: -0.6931845545768738
    3. '=input' → logprob: -10.568184852600098
    4. ',' → logprob: -12.443184852600098
    5. '=int' → logprob: -12.568184852600098
    6. ' ' → logprob: -13.318184852600098
    7. '    ' → logprob: -14.943184852600098
    8. '=line' → logprob: -15.193184852600098
    9. ')' → logprob: -15.318184852600098
    10. '=

' → logprob: -15.568184852600098

Token 22: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6938290596008301
    2. ' map' → logprob: -0.6938290596008301
    3. 'input' → logprob: -7.56882905960083
    4. ' input' → logprob: -9.193828582763672
    5. 'list' → logprob: -10.068828582763672
    6. ' list' → logprob: -11.068828582763672
    7. '	map' → logprob: -12.818828582763672
    8. ' ' → logprob: -13.318828582763672
    9. '(map' → logprob: -14.318828582763672
    10. 'm' → logprob: -15.443828582763672

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23732656240463257
    2. '(' → logprob: -1.6123266220092773
    3. '(lambda' → logprob: -4.987326622009277
    4. '(str' → logprob: -6.112326622009277
    5. '(input' → logprob: -6.112326622009277
    6. '[int' → logprob: -8.737326622009277
    7. '<|end|>' → logprob: -8.737326622009277
    8. '(list' → logprob: -9.487326622009277
    9. 'int' → logprob: -9.612326622009277
    10. '(
' → logprob: -11.112326622009277

Token 24: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6186110377311707
    2. ',' → logprob: -0.8686110377311707
    3. '(input' → logprob: -3.3686110973358154
    4. '(' → logprob: -5.368610858917236
    5. ')' → logprob: -6.493610858917236
    6. 'input' → logprob: -7.493610858917236
    7. '(sys' → logprob: -8.118611335754395
    8. ' ,' → logprob: -8.868611335754395
    9. ',(' → logprob: -10.618611335754395
    10. '(),' → logprob: -10.743611335754395

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '())' → logprob: -13.125003814697266
    3. '()' → logprob: -13.125003814697266
    4. ' ().' → logprob: -15.875003814697266
    5. '()))' → logprob: -17.500003814697266
    6. ')' → logprob: -17.500003814697266
    7. '()
' → logprob: -19.375003814697266
    8. '(' → logprob: -19.375003814697266
    9. '('').' → logprob: -19.875003814697266
    10. '.readline' → logprob: -20.500003814697266

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006782504729926586
    2. 'strip' → logprob: -5.006782531738281
    3. 'rstrip' → logprob: -9.631782531738281
    4. ')' → logprob: -14.131782531738281
    5. ' split' → logprob: -14.881782531738281
    6. '(split' → logprob: -15.131782531738281
    7. '().' → logprob: -17.00678253173828
    8. 'plit' → logprob: -17.25678253173828
    9. 'read' → logprob: -17.25678253173828
    10. '_split' → logprob: -18.00678253173828

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3954318165779114
    2. '())' → logprob: -1.1454317569732666
    3. '))' → logprob: -5.270431995391846
    4. '()' → logprob: -5.895431995391846
    5. '()))' → logprob: -7.645431995391846
    6. '())
' → logprob: -9.145431518554688
    7. ')
' → logprob: -11.020431518554688
    8. '(' → logprob: -11.270431518554688
    9. ' )' → logprob: -13.395431518554688
    10. ')")' → logprob: -13.395431518554688

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23155519366264343
    2. '<|end|>' → logprob: -1.8565552234649658
    3. ' ' → logprob: -3.981555223464966
    4. ' if' → logprob: -4.731554985046387
    5. '  ' → logprob: -5.606554985046387
    6. ':' → logprob: -5.856554985046387
    7. '\n' → logprob: -5.981554985046387
    8. '```' → logprob: -6.106554985046387
    9. ')' → logprob: -6.231554985046387
    10. '    
' → logprob: -6.231554985046387

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5633615851402283
    2. '<|end|>' → logprob: -1.063361644744873
    3. ' if' → logprob: -2.813361644744873
    4. ' ' → logprob: -4.688361644744873
    5. 'if' (adapté à ' if') → logprob: -5.063361644744873
    6. '\n' → logprob: -5.938361644744873
    7. '  ' → logprob: -6.438361644744873
    8. ' 
' → logprob: -6.438361644744873
    9. '<|end|>' → logprob: -6.813361644744873
    10. '    ' → logprob: -7.313361644744873

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005365141201764345
    2. ' not' → logprob: -5.755365371704102
    3. 'n' → logprob: -6.130365371704102
    4. 'not' → logprob: -11.755365371704102
    5. ' ' → logprob: -13.880365371704102
    6. '	n' → logprob: -14.880365371704102
    7. ' (' → logprob: -16.8803653717041
    8. '(n' → logprob: -17.5053653717041
    9. ' ' → logprob: -17.7553653717041
    10. ' н' → logprob: -18.1303653717041

Token 31: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759856700897217
    2. '==' → logprob: -0.8259856700897217
    3. '=' → logprob: -10.9509859085083
    4. ')==' → logprob: -11.5759859085083
    5. ')' → logprob: -12.7009859085083
    6. ']==' → logprob: -12.8259859085083
    7. '()==' → logprob: -12.9509859085083
    8. '<' → logprob: -13.2009859085083
    9. '<=' → logprob: -13.3259859085083
    10. ' ' → logprob: -13.4509859085083

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011092156171798706
    2. ' ' → logprob: -4.511092185974121
    3. 'm' → logprob: -10.386092185974121
    4. '   ' → logprob: -12.761092185974121
    5. ' m' → logprob: -12.886092185974121
    6. '  ' → logprob: -12.948592185974121
    7. '    ' → logprob: -14.073592185974121
    8. '۰' → logprob: -14.448592185974121
    9. '```' → logprob: -14.511092185974121
    10. '=' → logprob: -15.448592185974121

Token 33: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07920482009649277
    2. 'and' → logprob: -2.579204797744751
    3. ':' → logprob: -8.954204559326172
    4. ' ' → logprob: -9.204204559326172
    5. ' or' → logprob: -10.079204559326172
    6. '   ' → logprob: -11.079204559326172
    7. '	and' → logprob: -11.329204559326172
    8. ' a' → logprob: -12.204204559326172
    9. '    ' → logprob: -12.454204559326172
    10. '  ' → logprob: -13.329204559326172

Token 34: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25193122029304504
    2. 'm' → logprob: -1.5019311904907227
    3. '   ' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '	m' → logprob: -14.626931190490723
    6. '    ' → logprob: -15.626931190490723
    7. ' ' → logprob: -17.12693214416504
    8. '  ' → logprob: -18.00193214416504
    9. '&m' → logprob: -18.62693214416504
    10. ' м' → logprob: -18.87693214416504

Token 35: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38769403100013733
    2. ' ==' → logprob: -1.137694001197815
    3. '=' → logprob: -8.137694358825684
    4. ')==' → logprob: -8.637694358825684
    5. ' ' → logprob: -8.887694358825684
    6. '<|end|>' → logprob: -9.137694358825684
    7. '0' → logprob: -10.512694358825684
    8. ']==' → logprob: -10.762694358825684
    9. '()==' → logprob: -11.262694358825684
    10. '<|end|>' → logprob: -11.387694358825684

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '۰' → logprob: -18.381715774536133
    4. '  ' → logprob: -18.506715774536133
    5. ' ' → logprob: -18.631715774536133
    6. '```' → logprob: -19.381715774536133
    7. '０' → logprob: -19.506715774536133
    8. '   ' → logprob: -19.756715774536133
    9. '<|end|>' → logprob: -20.756715774536133
    10. '০' → logprob: -20.756715774536133

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007062619552016258
    2. ':
' → logprob: -5.0070624351501465
    3. '   ' → logprob: -8.132062911987305
    4. '       ' → logprob: -10.132062911987305
    5. ':return' → logprob: -12.132062911987305
    6. ' :' → logprob: -12.632062911987305
    7. '):' → logprob: -13.632062911987305
    8. '.' → logprob: -14.507062911987305
    9. '	break' → logprob: -14.507062911987305
    10. ' :
' → logprob: -14.757062911987305

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039468807517550886
    2. '   ' → logprob: -7.875394821166992
    3. '	break' → logprob: -12.375394821166992
    4. '	' → logprob: -12.500394821166992
    5. ':' → logprob: -13.250394821166992
    6. ' break' → logprob: -13.875394821166992
    7. '	   ' → logprob: -14.125394821166992
    8. '```' → logprob: -14.625394821166992
    9. '     ' → logprob: -15.000394821166992
    10. '           ' → logprob: -15.000394821166992

Token 39: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2796604335308075
    2. '       ' → logprob: -1.6546604633331299
    3. 'break' (adapté à ' break') → logprob: -3.02966046333313
    4. '	break' → logprob: -5.779660224914551
    5. '   ' → logprob: -6.654660224914551
    6. '           ' → logprob: -10.65466022491455
    7. '        
' → logprob: -10.90466022491455
    8. '_break' → logprob: -11.15466022491455
    9. '
' → logprob: -11.77966022491455
    10. '    
' → logprob: -12.15466022491455

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24453820288181305
    2. '   ' → logprob: -2.1195383071899414
    3. '    
' → logprob: -3.3695383071899414
    4. '\n' → logprob: -3.8695383071899414
    5. 'n' → logprob: -4.369538307189941
    6. '```' → logprob: -5.119538307189941
    7. ' 
' → logprob: -5.369538307189941
    8. '  
' → logprob: -5.619538307189941
    9. '<|end|>' → logprob: -5.619538307189941
    10. 'a' → logprob: -5.869538307189941

Token 41: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.36464017629623413
    2. '   ' → logprob: -1.989640235900879
    3. 'dist' → logprob: -2.989640235900879
    4. '
' → logprob: -3.489640235900879
    5. 'distance' → logprob: -3.489640235900879
    6. '    
' → logprob: -3.739640235900879
    7. ' graph' → logprob: -3.864640235900879
    8. '```' → logprob: -5.864640235900879
    9. '	graph' → logprob: -5.864640235900879
    10. ' distances' → logprob: -5.989640235900879

Token 42: ' s' (ID: 265)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09313155710697174
    2. ' graph' → logprob: -2.5931315422058105
    3. '   ' → logprob: -5.3431315422058105
    4. 'dist' → logprob: -5.5931315422058105
    5. '    
' → logprob: -6.7181315422058105
    6. 'distance' → logprob: -6.9681315422058105
    7. 'edges' → logprob: -7.3431315422058105
    8. '
' → logprob: -8.093132019042969
    9. ' 
' → logprob: -8.593132019042969
    10. 'adj' → logprob: -8.718132019042969

Token 43: ',g' (ID: 44461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25292304158210754
    2. '=' → logprob: -3.252923011779785
    3. ',t' → logprob: -3.252923011779785
    4. 'tar' → logprob: -3.377923011779785
    5. 'p' → logprob: -4.002923011779785
    6. ' =' → logprob: -4.002923011779785
    7. 'paces' → logprob: -4.627923011779785
    8. 'ize' → logprob: -4.752923011779785
    9. ',' → logprob: -5.377923011779785
    10. 'cores' → logprob: -5.377923011779785

Token 44: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7611532211303711
    2. ',p' → logprob: -1.636153221130371
    3. ',' → logprob: -2.386153221130371
    4. ',a' → logprob: -3.011153221130371
    5. ',e' → logprob: -3.136153221130371
    6. ',d' → logprob: -3.761153221130371
    7. ' =' → logprob: -3.886153221130371
    8. ',r' → logprob: -3.886153221130371
    9. ',s' → logprob: -4.636153221130371
    10. ',u' → logprob: -4.761153221130371

Token 45: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0028153362218290567
    2. ' map' → logprob: -5.877815246582031
    3. 'list' → logprob: -12.627815246582031
    4. '	map' → logprob: -13.127815246582031
    5. '   ' → logprob: -13.252815246582031
    6. 'input' → logprob: -13.877815246582031
    7. '(map' → logprob: -14.252815246582031
    8. '[' → logprob: -15.127815246582031
    9. 'ma' → logprob: -15.127815246582031
    10. 'm' → logprob: -15.252815246582031

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.045823566731997e-05
    2. '[int' → logprob: -11.875020027160645
    3. '<int' → logprob: -11.875020027160645
    4. '=int' → logprob: -13.250020027160645
    5. 'int' → logprob: -13.375020027160645
    6. '(' → logprob: -13.500020027160645
    7. ',int' → logprob: -13.750020027160645
    8. ']int' → logprob: -15.000020027160645
    9. ':int' → logprob: -15.875020027160645
    10. ' (' → logprob: -16.12502098083496

Token 47: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.016540082171559334
    2. ',' → logprob: -4.141540050506592
    3. ',int' → logprob: -7.766540050506592
    4. ' ,' → logprob: -10.26654052734375
    5. '(input' → logprob: -10.76654052734375
    6. '(),' → logprob: -11.76654052734375
    7. '(' → logprob: -11.89154052734375
    8. ',index' → logprob: -13.39154052734375
    9. ',line' → logprob: -13.39154052734375
    10. '`,' → logprob: -14.01654052734375

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.625003814697266
    3. '.' → logprob: -15.750003814697266
    4. '(' → logprob: -16.250003814697266
    5. ' ().' → logprob: -16.375003814697266
    6. ')' → logprob: -16.750003814697266
    7. '().__' → logprob: -17.000003814697266
    8. '())' → logprob: -17.250003814697266
    9. '.split' → logprob: -18.000003814697266
    10. '()-' → logprob: -18.125003814697266

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.5
    3. '(split' → logprob: -16.75
    4. 'strip' → logprob: -17.625
    5. 'spl' → logprob: -17.875
    6. 'rstrip' → logprob: -18.25
    7. '.split' → logprob: -18.625
    8. ')' → logprob: -19.25
    9. 'plit' → logprob: -19.625
    10. 's' → logprob: -19.875

Token 50: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11541051417589188
    2. ')' → logprob: -2.740410566329956
    3. '()' → logprob: -3.115410566329956
    4. '())
' → logprob: -10.365410804748535
    5. '(' → logprob: -10.740410804748535
    6. ' )' → logprob: -11.115410804748535
    7. ' ())' → logprob: -11.740410804748535
    8. '().' → logprob: -12.240410804748535
    9. '()
' → logprob: -13.115410804748535
    10. '(),' → logprob: -13.365410804748535

Token 51: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.30467599630355835
    2. '   ' → logprob: -2.429676055908203
    3. 'edges' → logprob: -2.429676055908203
    4. 'dist' → logprob: -3.054676055908203
    5. 'adj' → logprob: -4.179676055908203
    6. 'roads' → logprob: -4.554676055908203
    7. '    
' → logprob: -6.304676055908203
    8. 'train' → logprob: -6.554676055908203
    9. 'u' → logprob: -6.679676055908203
    10. 'stairs' → logprob: -6.804676055908203

Token 52: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06627810001373291
    2. 'edges' (adapté à ' edges') → logprob: -3.9412779808044434
    3. 'dist' → logprob: -4.316277980804443
    4. '   ' → logprob: -4.566277980804443
    5. ' graph' → logprob: -5.316277980804443
    6. '
' → logprob: -6.066277980804443
    7. 'roads' → logprob: -6.191277980804443
    8. 'd' → logprob: -6.316277980804443
    9. 'adj' → logprob: -6.566277980804443
    10. 'distance' → logprob: -6.566277980804443

Token 53: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18316440284252167
    2. ' =' → logprob: -1.808164358139038
    3. '=[]' → logprob: -6.183164596557617
    4. '={}' → logprob: -6.808164596557617
    5. '[' → logprob: -9.058164596557617
    6. '=[' → logprob: -9.433164596557617
    7. '={' → logprob: -10.558164596557617
    8. ' =[' → logprob: -12.308164596557617
    9. '[]' → logprob: -12.683164596557617
    10. ',' → logprob: -12.933164596557617

Token 54: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002072357019642368
    2. ' []' → logprob: -8.62520694732666
    3. '{}' → logprob: -11.37520694732666
    4. '[]
' → logprob: -11.87520694732666
    5. 'list' → logprob: -12.37520694732666
    6. '[' → logprob: -13.25020694732666
    7. '([]' → logprob: -13.25020694732666
    8. '   ' → logprob: -14.87520694732666
    9. '[]

' → logprob: -15.37520694732666
    10. 'set' → logprob: -15.75020694732666

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0380699522793293
    2. 'for' → logprob: -3.2880699634552
    3. ']' → logprob: -11.538069725036621
    4. '	for' → logprob: -11.663069725036621
    5. ' ' → logprob: -12.538069725036621
    6. ')' → logprob: -12.538069725036621
    7. ',' → logprob: -13.788069725036621
    8. '   ' → logprob: -13.913069725036621
    9. '()' → logprob: -15.288069725036621
    10. '
' → logprob: -16.288070678710938

Token 56: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009343287092633545
    2. ' _' → logprob: -7.75093412399292
    3. ' in' → logprob: -8.000934600830078
    4. ' range' → logprob: -9.625934600830078
    5. 'range' → logprob: -9.875934600830078
    6. '_range' → logprob: -10.375934600830078
    7. 'in' → logprob: -11.250934600830078
    8. '_in' → logprob: -13.000934600830078
    9. '(range' → logprob: -13.125934600830078
    10. '_i' → logprob: -14.125934600830078

Token 57: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4291505813598633
    2. ' in' → logprob: -1.0541505813598633
    3. 'range' → logprob: -7.929150581359863
    4. 'n' → logprob: -9.929150581359863
    5. 's' → logprob: -11.679150581359863
    6. 'i' → logprob: -12.054150581359863
    7. 'x' → logprob: -12.429150581359863
    8. ' ' → logprob: -12.554150581359863
    9. '_' → logprob: -12.679150581359863
    10. 'import' → logprob: -13.304150581359863

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020806640386581
    2. ' range' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.475208282470703
    4. '(range' → logprob: -15.225208282470703
    5. '	range' → logprob: -15.475208282470703
    6. '   ' → logprob: -16.100208282470703
    7. '  ' → logprob: -16.475208282470703
    8. '_range' → logprob: -16.725208282470703
    9. 'rang' → logprob: -16.850208282470703
    10. '_' → logprob: -16.850208282470703

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '((' → logprob: -17.125017166137695
    4. ' (' → logprob: -17.750017166137695
    5. '(m' → logprob: -18.000017166137695
    6. 'n' → logprob: -18.250017166137695
    7. '(N' → logprob: -19.250017166137695
    8. '(s' → logprob: -19.875017166137695
    9. '(nx' → logprob: -20.500017166137695
    10. '(
' → logprob: -21.000017166137695

Token 60: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.2961512513575144e-05
    2. ' )' → logprob: -11.625022888183594
    3. ')' → logprob: -11.750022888183594
    4. ']' → logprob: -13.000022888183594
    5. ')]
' → logprob: -13.125022888183594
    6. '+' → logprob: -14.000022888183594
    7. ')]

' → logprob: -15.625022888183594
    8. ')],' → logprob: -16.125022888183594
    9. ' ]' → logprob: -16.125022888183594
    10. ')])' → logprob: -16.125022888183594

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003003081073984504
    2. ' ' → logprob: -8.125300407409668
    3. '2' → logprob: -12.625300407409668
    4. '   ' → logprob: -15.375300407409668
    5. '3' → logprob: -16.37529945373535
    6. '１' → logprob: -16.37529945373535
    7. '0' → logprob: -16.50029945373535
    8. ')' → logprob: -16.50029945373535
    9. '```' → logprob: -16.50029945373535
    10. '7' → logprob: -16.62529945373535

Token 62: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.416665640543215e-05
    2. ']' → logprob: -11.00003433227539
    3. ')' → logprob: -11.25003433227539
    4. ')]
' → logprob: -13.12503433227539
    5. ' )' → logprob: -13.75003433227539
    6. '   ' → logprob: -14.75003433227539
    7. '])' → logprob: -15.62503433227539
    8. ' ]' → logprob: -16.00003433227539
    9. ')]

' → logprob: -16.25003433227539
    10. ' ' → logprob: -16.25003433227539

Token 63: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4148988723754883
    2. '   ' → logprob: -1.7898988723754883
    3. ' for' → logprob: -1.9148988723754883
    4. '<|end|>' → logprob: -4.039898872375488
    5. '    
' → logprob: -5.914898872375488
    6. '	for' → logprob: -5.914898872375488
    7. '    ' → logprob: -7.414898872375488
    8. '<|end|>' → logprob: -7.789898872375488
    9. ' ' → logprob: -8.164898872375488
    10. '
' → logprob: -8.164898872375488

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28166288137435913
    2. ' for' → logprob: -1.406662940979004
    3. '	for' → logprob: -7.906662940979004
    4. '   ' → logprob: -9.656662940979004
    5. '
' → logprob: -10.531662940979004
    6. ' 
' → logprob: -10.906662940979004
    7. '<|end|>' → logprob: -11.031662940979004
    8. ' ' → logprob: -12.156662940979004
    9. '```' → logprob: -13.031662940979004
    10. '    
' → logprob: -13.031662940979004

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16024108231067657
    2. '_' → logprob: -1.9102411270141602
    3. '_i' → logprob: -11.28524112701416
    4. ' ' → logprob: -12.91024112701416
    5. ' i' → logprob: -13.28524112701416
    6. 'i' → logprob: -16.535240173339844
    7. ' in' → logprob: -17.160240173339844
    8. ' __' → logprob: -17.910240173339844
    9. '_j' → logprob: -18.160240173339844
    10. ' ' → logprob: -18.535240173339844

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38715484738349915
    2. 'in' → logprob: -1.1371548175811768
    3. ' ' → logprob: -8.387154579162598
    4. 'range' → logprob: -10.887154579162598
    5. 'm' → logprob: -11.512154579162598
    6. '```' → logprob: -11.762154579162598
    7. '_' → logprob: -11.887154579162598
    8. '  ' → logprob: -12.887154579162598
    9. 'import' → logprob: -13.637154579162598
    10. '<|end|>' → logprob: -13.637154579162598

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028299614787101746
    2. ' range' → logprob: -5.8778300285339355
    3. ' ' → logprob: -12.252829551696777
    4. 'ange' → logprob: -12.252829551696777
    5. 'm' → logprob: -12.377829551696777
    6. '(range' → logprob: -12.627829551696777
    7. '	range' → logprob: -13.377829551696777
    8. '   ' → logprob: -13.502829551696777
    9. '  ' → logprob: -13.752829551696777
    10. 'r' → logprob: -14.127829551696777

Token 68: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00027182576013728976
    2. ' (' → logprob: -8.500271797180176
    3. '(' → logprob: -9.750271797180176
    4. ' m' → logprob: -11.750271797180176
    5. 'm' → logprob: -13.625271797180176
    6. '   ' → logprob: -14.625271797180176
    7. '	m' → logprob: -15.000271797180176
    8. '(M' → logprob: -15.875271797180176
    9. ' ' → logprob: -17.875272750854492
    10. ',m' → logprob: -18.125272750854492

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007195804500952363
    2. ' ):' → logprob: -7.5007195472717285
    3. '):
' → logprob: -9.125720024108887
    4. ')' → logprob: -10.000720024108887
    5. ':' → logprob: -11.750720024108887
    6. '):
' → logprob: -13.875720024108887
    7. '   ' → logprob: -14.000720024108887
    8. ',' → logprob: -14.250720024108887
    9. '():' → logprob: -15.250720024108887
    10. ' ' → logprob: -15.375720024108887

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24796834588050842
    2. '   ' → logprob: -1.747968316078186
    3. ' ' → logprob: -4.1229681968688965
    4. '    ' → logprob: -4.1229681968688965
    5. '<|end|>' → logprob: -5.2479681968688965
    6. '  ' → logprob: -6.3729681968688965
    7. ',' → logprob: -6.3729681968688965
    8. '        
' → logprob: -6.4979681968688965
    9. '    
' → logprob: -7.7479681968688965
    10. '      ' → logprob: -7.8729681968688965

Token 71: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22930434346199036
    2. 'u' → logprob: -1.604304313659668
    3. ' a' → logprob: -6.229304313659668
    4. ' u' → logprob: -6.979304313659668
    5. 'x' (adapté à ' x') → logprob: -7.729304313659668
    6. '   ' → logprob: -8.854304313659668
    7. 'f' → logprob: -9.104304313659668
    8. 'v' → logprob: -9.354304313659668
    9. 'p' → logprob: -10.479304313659668
    10. 'start' → logprob: -10.604304313659668

Token 72: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.12715120613574982
    2. ',' → logprob: -2.1271512508392334
    3. ' ,' → logprob: -8.752151489257812
    4. ',u' → logprob: -10.752151489257812
    5. 'y' → logprob: -11.252151489257812
    6. ',a' → logprob: -12.252151489257812
    7. ',x' → logprob: -12.502151489257812
    8. ',v' → logprob: -12.752151489257812
    9. ',j' → logprob: -12.752151489257812
    10. ' y' → logprob: -13.002151489257812

Token 73: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.1137133464217186
    2. ',c' → logprob: -2.363713264465332
    3. ',d' → logprob: -4.738713264465332
    4. ',z' → logprob: -5.988713264465332
    5. ',' → logprob: -6.988713264465332
    6. ',t' → logprob: -7.613713264465332
    7. ',time' → logprob: -8.613713264465332
    8. ',p' → logprob: -9.238713264465332
    9. ',l' → logprob: -9.238713264465332
    10. ',q' → logprob: -9.363713264465332

Token 74: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009226576657965779
    2. ' =' → logprob: -7.750922679901123
    3. ',w' → logprob: -8.500922203063965
    4. ',' → logprob: -9.625922203063965
    5. '=int' → logprob: -10.000922203063965
    6. ',c' → logprob: -10.625922203063965
    7. ',q' → logprob: -10.875922203063965
    8. ',v' → logprob: -11.000922203063965
    9. '=input' → logprob: -11.125922203063965
    10. 'istance' → logprob: -11.375922203063965

Token 75: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001532401074655354
    2. ' =' → logprob: -10.000153541564941
    3. '=sys' → logprob: -10.250153541564941
    4. '=input' → logprob: -10.500153541564941
    5. '=int' → logprob: -10.625153541564941
    6. '=line' → logprob: -12.000153541564941
    7. '=list' → logprob: -12.875153541564941
    8. '=os' → logprob: -13.500153541564941
    9. '=edge' → logprob: -13.875153541564941
    10. '=

' → logprob: -14.000153541564941

Token 76: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.22543933987617493
    2. ' map' → logprob: -1.6004393100738525
    3. '	map' → logprob: -11.100439071655273
    4. ' ' → logprob: -11.975439071655273
    5. 'm' → logprob: -13.475439071655273
    6. '   ' → logprob: -13.725439071655273
    7. '  ' → logprob: -14.350439071655273
    8. 'list' → logprob: -14.725439071655273
    9. '(map' → logprob: -14.850439071655273
    10. ' ' → logprob: -14.975439071655273

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011486753646750003
    2. '(' → logprob: -9.250114440917969
    3. '<|end|>' → logprob: -12.250114440917969
    4. '<int' → logprob: -12.500114440917969
    5. '[int' → logprob: -12.625114440917969
    6. ' (' → logprob: -13.000114440917969
    7. '=int' → logprob: -13.750114440917969
    8. '(lambda' → logprob: -14.000114440917969
    9. 'int' → logprob: -14.000114440917969
    10. ',int' → logprob: -14.375114440917969

Token 78: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03900008648633957
    2. ',int' → logprob: -3.2890000343322754
    3. ',' → logprob: -7.164000034332275
    4. '(input' → logprob: -8.914000511169434
    5. '(int' → logprob: -10.664000511169434
    6. ' ,' → logprob: -11.914000511169434
    7. '(' → logprob: -12.164000511169434
    8. 'input' → logprob: -13.039000511169434
    9. '=input' → logprob: -13.039000511169434
    10. ',(' → logprob: -13.289000511169434

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.500004768371582
    3. '()' → logprob: -14.500004768371582
    4. ' ().' → logprob: -14.625004768371582
    5. ')' → logprob: -16.2500057220459
    6. '().__' → logprob: -16.2500057220459
    7. '.split' → logprob: -16.3750057220459
    8. '.readline' → logprob: -17.0000057220459
    9. '>().' → logprob: -17.1250057220459
    10. ').' → logprob: -17.7500057220459

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -15.875
    3. ' split' → logprob: -17.0
    4. 'spl' → logprob: -18.0
    5. '(split' → logprob: -18.75
    6. '.split' → logprob: -19.375
    7. 'plit' → logprob: -19.5
    8. 'sp' → logprob: -20.25
    9. 'rstrip' → logprob: -20.5
    10. 's' → logprob: -20.625

Token 81: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004748503211885691
    2. '())' → logprob: -6.004748344421387
    3. '()' → logprob: -6.129748344421387
    4. ' )' → logprob: -10.129748344421387
    5. '))' → logprob: -10.504748344421387
    6. ')
' → logprob: -11.129748344421387
    7. '(' → logprob: -12.504748344421387
    8. '`)' → logprob: -13.629748344421387
    9. ')`' → logprob: -13.879748344421387
    10. '   ' → logprob: -14.629748344421387

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02355804108083248
    2. '   ' → logprob: -4.148558139801025
    3. '
' → logprob: -5.398558139801025
    4. 'edges' → logprob: -7.023558139801025
    5. ' edges' → logprob: -7.523558139801025
    6. '<|end|>' → logprob: -7.523558139801025
    7. ')
' → logprob: -7.773558139801025
    8. ')' → logprob: -8.523557662963867
    9. '        
' → logprob: -8.773557662963867
    10. ',' → logprob: -10.148557662963867

Token 83: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.292628675699234
    2. 'edges' (adapté à ' edges') → logprob: -1.4176286458969116
    3. '   ' → logprob: -4.917628765106201
    4. '       ' → logprob: -5.542628765106201
    5. '.edges' → logprob: -9.542628288269043
    6. '(edges' → logprob: -9.917628288269043
    7. '_edges' → logprob: -11.542628288269043
    8. '<|end|>' → logprob: -11.792628288269043
    9. '```' → logprob: -11.917628288269043
    10. '           ' → logprob: -12.417628288269043

Token 84: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.750009536743164
    3. '[y' → logprob: -14.000009536743164
    4. ' [' → logprob: -14.625009536743164
    5. 'x' → logprob: -15.875009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '```' → logprob: -16.500009536743164
    8. '[c' → logprob: -16.875009536743164
    9. '[int' → logprob: -17.250009536743164
    10. '[s' → logprob: -17.750009536743164

Token 85: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0041739679872989655
    2. ').' → logprob: -5.754173755645752
    3. '.' → logprob: -7.379173755645752
    4. '.append' → logprob: -8.25417423248291
    5. '[' → logprob: -10.25417423248291
    6. '   ' → logprob: -10.50417423248291
    7. ' ].' → logprob: -10.62917423248291
    8. ']' → logprob: -11.25417423248291
    9. '       ' → logprob: -13.37917423248291
    10. '][' → logprob: -13.50417423248291

Token 86: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.875000953674316
    3. ' append' → logprob: -14.875000953674316
    4. 'app' → logprob: -16.0
    5. 'appen' → logprob: -17.125
    6. ' ' → logprob: -18.75
    7. 'push' → logprob: -19.375
    8. '_append' → logprob: -19.5
    9. '	append' → logprob: -19.75
    10. 'add' → logprob: -20.25

Token 87: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006037696730345488
    2. '(y' → logprob: -5.256037712097168
    3. '(' → logprob: -7.131037712097168
    4. '([' → logprob: -12.881037712097168
    5. ' (' → logprob: -15.006037712097168
    6. ' ((' → logprob: -15.131037712097168
    7. '(x' → logprob: -15.381037712097168
    8. '   ' → logprob: -15.506037712097168
    9. '[(' → logprob: -17.00603675842285
    10. '(((' → logprob: -17.88103675842285

Token 88: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00280558317899704
    2. ' y' → logprob: -5.877805709838867
    3. '	y' → logprob: -15.877805709838867
    4. ')y' → logprob: -15.877805709838867
    5. ',y' → logprob: -16.127805709838867
    6. ' ' → logprob: -16.252805709838867
    7. '   ' → logprob: -16.377805709838867
    8. '(y' → logprob: -16.502805709838867
    9. ''y' → logprob: -16.877805709838867
    10. '<|end|>' → logprob: -17.502805709838867

Token 89: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.3166723847389221
    2. ',' → logprob: -1.3166723251342773
    3. ' ,' → logprob: -5.691672325134277
    4. ',c' → logprob: -10.566672325134277
    5. ',n' → logprob: -14.316672325134277
    6. ' ' → logprob: -14.441672325134277
    7. ',
' → logprob: -14.691672325134277
    8. 'd' → logprob: -14.941672325134277
    9. '   ' → logprob: -15.066672325134277
    10. ' d' → logprob: -15.316672325134277

Token 90: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.23425517976284027
    2. ',' → logprob: -1.6092551946640015
    3. ' ,' → logprob: -4.734255313873291
    4. ',d' → logprob: -12.984254837036133
    5. ' ' → logprob: -13.859254837036133
    6. ',int' → logprob: -13.984254837036133
    7. ',
' → logprob: -13.984254837036133
    8. ',color' → logprob: -13.984254837036133
    9. ' c' → logprob: -14.484254837036133
    10. ',n' → logprob: -14.734254837036133

Token 91: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012592797866091132
    2. ')' → logprob: -6.8762593269348145
    3. ' ))' → logprob: -8.626258850097656
    4. '))
' → logprob: -10.251258850097656
    5. ',' → logprob: -12.126258850097656
    6. ')))' → logprob: -13.126258850097656
    7. ' )' → logprob: -13.626258850097656
    8. '),' → logprob: -14.001258850097656
    9. '   ' → logprob: -14.376258850097656
    10. ' ' → logprob: -14.501258850097656

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013707150937989354
    2. 'edges' → logprob: -7.126370906829834
    3. ' edges' → logprob: -8.251370429992676
    4. '   ' → logprob: -8.501370429992676
    5. '<|end|>' → logprob: -9.626370429992676
    6. '	' → logprob: -11.751370429992676
    7. '(edges' → logprob: -12.001370429992676
    8. '<|end|>' → logprob: -12.001370429992676
    9. '           ' → logprob: -12.876370429992676
    10. ' ' → logprob: -13.251370429992676

Token 93: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6653361916542053
    2. 'edges' (adapté à ' edges') → logprob: -1.0403361320495605
    3. '       ' → logprob: -2.0403361320495605
    4. '(edges' → logprob: -7.2903361320495605
    5. '<|end|>' → logprob: -7.4153361320495605
    6. '   ' → logprob: -7.5403361320495605
    7. '.edges' → logprob: -8.040336608886719
    8. ' ' → logprob: -9.665336608886719
    9. '           ' → logprob: -9.915336608886719
    10. '_edges' → logprob: -10.540336608886719

Token 94: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00023488728038500994
    2. '[' → logprob: -8.500234603881836
    3. '[x' → logprob: -10.750234603881836
    4. ' [' → logprob: -12.875234603881836
    5. '[s' → logprob: -13.375234603881836
    6. '[z' → logprob: -14.375234603881836
    7. '[u' → logprob: -14.500234603881836
    8. '[g' → logprob: -14.625234603881836
    9. '[user' → logprob: -14.625234603881836
    10. '[
' → logprob: -14.750234603881836

Token 95: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5465861558914185
    2. ').' → logprob: -1.1715861558914185
    3. '.append' → logprob: -2.796586036682129
    4. '.' → logprob: -3.046586036682129
    5. '}.' → logprob: -7.046586036682129
    6. '       ' → logprob: -7.171586036682129
    7. ' .' → logprob: -7.546586036682129
    8. '   ' → logprob: -8.296586036682129
    9. ' ].' → logprob: -10.046586036682129
    10. '>.' → logprob: -10.296586036682129

Token 96: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.438573680294212e-06
    2. '.append' → logprob: -12.750005722045898
    3. 'appen' → logprob: -13.250005722045898
    4. ' append' → logprob: -14.500005722045898
    5. '	append' → logprob: -15.625005722045898
    6. 'app' → logprob: -17.5000057220459
    7. ' ' → logprob: -18.0000057220459
    8. '_append' → logprob: -18.8750057220459
    9. '```' → logprob: -18.8750057220459
    10. 'Append' → logprob: -19.1250057220459

Token 97: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -11.375029563903809
    3. '(x' → logprob: -11.625029563903809
    4. ' ((' → logprob: -12.000029563903809
    5. ' (' → logprob: -12.875029563903809
    6. ' ' → logprob: -16.625028610229492
    7. '(
' → logprob: -17.500028610229492
    8. '<|end|>' → logprob: -17.750028610229492
    9. '(y' → logprob: -18.000028610229492
    10. ')((' → logprob: -18.000028610229492

Token 98: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22747251391410828
    2. 'x' → logprob: -1.6024725437164307
    3. ' (' → logprob: -6.352472305297852
    4. ' x' → logprob: -8.602472305297852
    5. ',x' → logprob: -9.352472305297852
    6. '(' → logprob: -10.727472305297852
    7. ',' → logprob: -12.352472305297852
    8. '{x' → logprob: -12.477472305297852
    9. '(
' → logprob: -12.602472305297852
    10. '	x' → logprob: -13.102472305297852

Token 99: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0003490514063742012
    2. ',' → logprob: -8.125349044799805
    3. ' ,' → logprob: -9.875349044799805
    4. 'd' → logprob: -14.875349044799805
    5. '	d' → logprob: -15.000349044799805
    6. '   ' → logprob: -15.375349044799805
    7. ' ' → logprob: -15.750349044799805
    8. '	' → logprob: -16.125349044799805
    9. ' d' → logprob: -16.500349044799805
    10. ',
' → logprob: -17.000349044799805

Token 100: ',c' (ID: 22261)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.02878960780799389
    2. ',c' → logprob: -3.903789520263672
    3. ',' → logprob: -4.903789520263672
    4. ' ,' → logprob: -7.153789520263672
    5. '   ' → logprob: -12.278789520263672
    6. 'd' → logprob: -12.903789520263672
    7. ' ' → logprob: -13.528789520263672
    8. ',
' → logprob: -14.403789520263672
    9. ',b' → logprob: -14.528789520263672
    10. '  ' → logprob: -14.528789520263672

Token 101: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.077528764260933e-05
    2. '))
' → logprob: -9.625081062316895
    3. ' ))' → logprob: -11.750081062316895
    4. ')' → logprob: -12.000081062316895
    5. ')))' → logprob: -15.250081062316895
    6. '))

' → logprob: -15.875081062316895
    7. '       ' → logprob: -16.375080108642578
    8. '   ' → logprob: -16.500080108642578
    9. '));' → logprob: -17.250080108642578
    10. '))
' → logprob: -17.375080108642578

Token 102: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25185245275497437
    2. '   ' → logprob: -2.001852512359619
    3. '
' → logprob: -3.376852512359619
    4. 'def' → logprob: -4.126852512359619
    5. '    
' → logprob: -4.501852512359619
    6. 'distance' → logprob: -4.751852512359619
    7. ' dist' → logprob: -5.376852512359619
    8. 'import' → logprob: -5.626852512359619
    9. 'dp' → logprob: -5.626852512359619
    10. 'cost' → logprob: -6.251852512359619

Token 103: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.24619273841381073
    2. 'INF' → logprob: -2.496192693710327
    3. 'dp' → logprob: -2.621192693710327
    4. 'cost' → logprob: -3.871192693710327
    5. 'def' → logprob: -3.996192693710327
    6. 'distance' → logprob: -4.621192932128906
    7. '   ' → logprob: -6.246192932128906
    8. 'import' → logprob: -6.371192932128906
    9. 'max' → logprob: -6.496192932128906
    10. '    
' → logprob: -6.621192932128906

Token 104: ' state' (ID: 2608)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15783821046352386
    2. ' dist' → logprob: -2.4078381061553955
    3. 'dp' → logprob: -4.282838344573975
    4. 'distance' → logprob: -4.407838344573975
    5. 'INF' → logprob: -4.782838344573975
    6. 'def' → logprob: -5.032838344573975
    7. '   ' → logprob: -5.782838344573975
    8. 'cost' → logprob: -5.907838344573975
    9. 'import' → logprob: -6.282838344573975
    10. ' INF' → logprob: -6.657838344573975

Token 105: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08123040944337845
    2. 's' → logprob: -3.206230401992798
    3. ',' → logprob: -3.831230401992798
    4. '=' → logprob: -4.456230640411377
    5. '_space' → logprob: -6.456230640411377
    6. '   ' → logprob: -7.706230640411377
    7. ' ,' → logprob: -8.206230163574219
    8. 'space' → logprob: -8.331230163574219
    9. '_queue' → logprob: -8.456230163574219
    10. ')' → logprob: -8.581230163574219

Token 106: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4805184304714203
    2. '(n' → logprob: -2.355518341064453
    3. '(s' → logprob: -2.855518341064453
    4. '(distance' → logprob: -2.855518341064453
    5. '(current' → logprob: -2.980518341064453
    6. 'distance' → logprob: -3.980518341064453
    7. '(cost' → logprob: -4.230518341064453
    8. '(node' → logprob: -4.605518341064453
    9. '(dist' → logprob: -4.730518341064453
    10. '(heap' → logprob: -4.980518341064453

Token 107: 'city' (ID: 17500)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.27182748913764954
    2. 'distance' → logprob: -1.8968274593353271
    3. ' cost' → logprob: -3.521827459335327
    4. 'dist' → logprob: -3.646827459335327
    5. 'total' → logprob: -4.646827697753906
    6. ' distance' → logprob: -5.396827697753906
    7. 'c' → logprob: -5.521827697753906
    8. 'd' → logprob: -5.646827697753906
    9. 'current' → logprob: -6.146827697753906
    10. ' dist' → logprob: -6.271827697753906

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014325566589832306
    2. ' ,' → logprob: -4.3893256187438965
    3. ',d' → logprob: -7.3893256187438965
    4. ',c' → logprob: -8.139325141906738
    5. '   ' → logprob: -8.889325141906738
    6. 'distance' → logprob: -9.014325141906738
    7. 'cost' → logprob: -9.389325141906738
    8. ',current' → logprob: -9.389325141906738
    9. ',state' → logprob: -9.889325141906738
    10. ',time' → logprob: -10.139325141906738

Token 109: ' speed' (ID: 7733)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4687797427177429
    2. ' cost' → logprob: -1.5937798023223877
    3. 'distance' → logprob: -3.0937798023223877
    4. 'money' → logprob: -3.4687798023223877
    5. ' money' → logprob: -4.343779563903809
    6. 'time' → logprob: -4.718779563903809
    7. ' distance' → logprob: -4.718779563903809
    8. 'total' → logprob: -4.843779563903809
    9. 'fuel' → logprob: -4.843779563903809
    10. 'dist' → logprob: -5.093779563903809

Token 110: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11329364031553268
    2. ',' → logprob: -2.2382936477661133
    3. '   ' → logprob: -9.238293647766113
    4. ' )' → logprob: -9.363293647766113
    5. '))' → logprob: -9.738293647766113
    6. '),' → logprob: -9.738293647766113
    7. ' ,' → logprob: -10.363293647766113
    8. ')
' → logprob: -10.488293647766113
    9. ',)' → logprob: -10.613293647766113
    10. '=' → logprob: -11.363293647766113

Token 111: ' prev' (ID: 10258)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.24139608442783356
    2. ' cost' → logprob: -2.241396188735962
    3. 'fuel' → logprob: -3.241396188735962
    4. 'time' → logprob: -3.491396188735962
    5. ' fuel' → logprob: -5.116395950317383
    6. 'distance' → logprob: -5.116395950317383
    7. 'money' → logprob: -5.491395950317383
    8. 't' → logprob: -5.741395950317383
    9. ' time' → logprob: -5.741395950317383
    10. 'total' → logprob: -6.553895950317383

Token 112: '_city' (ID: 60413)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47053012251853943
    2. '_city' → logprob: -1.2205301523208618
    3. ')_' → logprob: -3.9705300331115723
    4. '_)' → logprob: -4.095530033111572
    5. '_node' → logprob: -4.345530033111572
    6. '_cost' → logprob: -4.595530033111572
    7. '_speed' → logprob: -5.345530033111572
    8. '_edge' → logprob: -5.470530033111572
    9. '_' → logprob: -5.470530033111572
    10. 'city' → logprob: -6.720530033111572

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03633445128798485
    2. ',' → logprob: -3.41133451461792
    3. '   ' → logprob: -6.03633451461792
    4. ' )' → logprob: -9.161334037780762
    5. ')
' → logprob: -9.786334037780762
    6. ',state' → logprob: -9.911334037780762
    7. ' ,' → logprob: -11.161334037780762
    8. '))' → logprob: -11.286334037780762
    9. ',)' → logprob: -12.036334037780762
    10. '),' → logprob: -12.411334037780762

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06806367635726929
    2. 'dist' → logprob: -3.193063735961914
    3. '
' → logprob: -4.443063735961914
    4. 'distance' → logprob: -5.193063735961914
    5. 'import' → logprob: -5.693063735961914
    6. 'dp' → logprob: -7.193063735961914
    7. '    
' → logprob: -7.193063735961914
    8. ' dist' → logprob: -7.318063735961914
    9. 'def' → logprob: -7.818063735961914
    10. ')' → logprob: -8.193063735961914

Token 115: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8595871925354004
    2. 'dp' → logprob: -0.9845871925354004
    3. 'import' → logprob: -2.3595871925354004
    4. '   ' → logprob: -2.6095871925354004
    5. 'pq' → logprob: -4.9845871925354
    6. 'from' → logprob: -5.1095871925354
    7. 'heap' → logprob: -5.1095871925354
    8. 'distance' → logprob: -5.7345871925354
    9. 'start' → logprob: -6.1095871925354
    10. 'def' → logprob: -6.1095871925354

Token 116: ' speed' (ID: 7733)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3251900374889374
    2. 'import' → logprob: -2.0751900672912598
    3. 'dp' → logprob: -2.3251900672912598
    4. ' dist' → logprob: -4.07519006729126
    5. 'heap' → logprob: -4.82519006729126
    6. 'def' → logprob: -4.95019006729126
    7. 'distance' → logprob: -5.57519006729126
    8. 'pq' → logprob: -5.57519006729126
    9. 'hq' → logprob: -5.70019006729126
    10. 'from' → logprob: -5.70019006729126

Token 117: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6461332440376282
    2. ',' → logprob: -1.3961331844329834
    3. ' =' → logprob: -2.0211331844329834
    4. ')' → logprob: -2.3961331844329834
    5. ' ,' → logprob: -6.8961334228515625
    6. 's' → logprob: -7.3961334228515625
    7. ')=' → logprob: -8.021133422851562
    8. ' )' → logprob: -8.021133422851562
    9. ' ' → logprob: -8.646133422851562
    10. '_list' → logprob: -8.646133422851562

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15886639058589935
    2. '1' → logprob: -2.7838664054870605
    3. 'prev' → logprob: -3.9088664054870605
    4. ' ' → logprob: -4.2838664054870605
    5. 'edges' → logprob: -4.4088664054870605
    6. 'city' → logprob: -4.9088664054870605
    7. 'the' → logprob: -5.0338664054870605
    8. 'previous' → logprob: -5.5338664054870605
    9. 'to' → logprob: -5.6588664054870605
    10. '50' → logprob: -6.4088664054870605

Token 119: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2021191120147705
    2. '1' → logprob: -2.3271191120147705
    3. 'prev' → logprob: -3.3271191120147705
    4. 'city' → logprob: -4.202118873596191
    5. 'edges' → logprob: -4.952118873596191
    6. 'previous' → logprob: -5.452118873596191
    7. 'the' → logprob: -5.702118873596191
    8. ' ' → logprob: -5.827118873596191
    9. '50' → logprob: -5.952118873596191
    10. 'state' → logprob: -6.077118873596191

Token 120: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24082918465137482
    2. ',' → logprob: -2.7408292293548584
    3. '<|end|>' → logprob: -3.3658292293548584
    4. ' ' → logprob: -3.7408292293548584
    5. '   ' → logprob: -3.8658292293548584
    6. '    ' → logprob: -4.115828990936279
    7. '
' → logprob: -4.615828990936279
    8. 'to' → logprob: -5.240828990936279
    9. ' ,' → logprob: -5.240828990936279
    10. ')' → logprob: -5.490828990936279

Token 121: ' max' (ID: 2999)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.8014775514602661
    2. '100' → logprob: -1.5514775514602661
    3. '50' → logprob: -1.6764775514602661
    4. '20' → logprob: -3.3014774322509766
    5. '250' → logprob: -3.4264774322509766
    6. '10' → logprob: -3.9264774322509766
    7. 'max' → logprob: -4.301477432250977
    8. '60' → logprob: -4.551477432250977
    9. '200' → logprob: -4.801477432250977
    10. '5' → logprob: -4.801477432250977

Token 122: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8254313468933105
    2. '_' → logprob: -1.9504313468933105
    3. '
' → logprob: -2.4504313468933105
    4. '   ' → logprob: -3.0754313468933105
    5. '\n' → logprob: -3.2004313468933105
    6. '_speed' → logprob: -3.3254313468933105
    7. 'speed' → logprob: -3.5754313468933105
    8. ',' → logprob: -3.7004313468933105
    9. ' ' → logprob: -3.8254313468933105
    10. '```' → logprob: -3.9504313468933105

Token 123: '30' (ID: 1130)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6504377126693726
    2. '50' → logprob: -1.6504377126693726
    3. 'speed' → logprob: -2.025437831878662
    4. '20' → logprob: -2.525437831878662
    5. '_speed' → logprob: -2.775437831878662
    6. '1' → logprob: -3.150437831878662
    7. '10' → logprob: -3.275437831878662
    8. '30' → logprob: -3.400437831878662
    9. '40' → logprob: -4.025437831878662
    10. '200' → logprob: -4.150437831878662

Token 124: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16700445115566254
    2. 'dp' → logprob: -2.667004346847534
    3. 'dist' → logprob: -3.292004346847534
    4. 'distance' → logprob: -3.417004346847534
    5. '
' → logprob: -4.542004585266113
    6. ' dp' → logprob: -7.292004585266113
    7. ' dist' → logprob: -7.667004585266113
    8. ' distances' → logprob: -7.667004585266113
    9. '    
' → logprob: -7.917004585266113
    10. 'max' → logprob: -8.042004585266113

Token 125: 'speed' (ID: 42880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01206984929740429
    2. '   ' → logprob: -5.7620697021484375
    3. ' )' → logprob: -6.0120697021484375
    4. '30' → logprob: -6.0120697021484375
    5. ')
' → logprob: -6.2620697021484375
    6. '31' → logprob: -7.2620697021484375
    7. '1' → logprob: -7.6370697021484375
    8. 'max' → logprob: -8.512069702148438
    9. ' ' → logprob: -8.887069702148438
    10. '
' → logprob: -9.137069702148438

Token 126: ' limit' (ID: 5967)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31879520416259766
    2. ' +' → logprob: -1.4437952041625977
    3. ')' → logprob: -3.4437952041625977
    4. 's' → logprob: -6.693795204162598
    5. ',' → logprob: -7.193795204162598
    6. ' )' → logprob: -7.318795204162598
    7. '=' → logprob: -7.818795204162598
    8. ' ' → logprob: -8.193795204162598
    9. ')+' → logprob: -8.818795204162598
    10. ' range' → logprob: -8.943795204162598

Token 127: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039844248443841934
    2. '+' → logprob: -3.414844274520874
    3. '=' → logprob: -6.414844036102295
    4. ' )' → logprob: -6.664844036102295
    5. '30' → logprob: -6.789844036102295
    6. '31' → logprob: -7.414844036102295
    7. ')
' → logprob: -8.289844512939453
    8. ',' → logprob: -8.414844512939453
    9. ':' → logprob: -8.664844512939453
    10. ' =' → logprob: -8.914844512939453

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8224319219589233
    2. '30' → logprob: -0.9474319219589233
    3. '=' → logprob: -2.447432041168213
    4. '31' → logprob: -3.072432041168213
    5. ' ' → logprob: -3.822432041168213
    6. ' is' → logprob: -5.197432041168213
    7. ' )' → logprob: -5.322432041168213
    8. ' =' → logprob: -6.072432041168213
    9. '+' → logprob: -6.822432041168213
    10. ':' → logprob: -6.947432041168213

Token 129: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.49509501457214355
    2. '   ' → logprob: -1.1200950145721436
    3. 'dp' → logprob: -3.1200950145721436
    4. 'distance' → logprob: -4.870095252990723
    5. 'import' → logprob: -5.120095252990723
    6. ' dist' → logprob: -6.745095252990723
    7. '
' → logprob: -7.120095252990723
    8. '    
' → logprob: -7.245095252990723
    9. 'while' → logprob: -7.370095252990723
    10. 'def' → logprob: -7.620095252990723

Token 130: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17620143294334412
    2. 'distance' → logprob: -2.801201343536377
    3. 'dp' → logprob: -2.801201343536377
    4. '   ' → logprob: -3.426201343536377
    5. '
' → logprob: -5.801201343536377
    6. ' dist' → logprob: -6.301201343536377
    7. 'import' → logprob: -7.301201343536377
    8. ' distances' → logprob: -8.051201820373535
    9. ' dp' → logprob: -8.051201820373535
    10. 'max' → logprob: -8.176201820373535

Token 131: ' prev' (ID: 10258)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1726081371307373
    2. 'dp' → logprob: -2.1726081371307373
    3. 'INF' → logprob: -3.9226081371307373
    4. 'import' → logprob: -4.547608375549316
    5. 'distance' → logprob: -5.297608375549316
    6. 'max' → logprob: -5.422608375549316
    7. 'def' → logprob: -6.672608375549316
    8. 'speed' → logprob: -6.672608375549316
    9. 'from' → logprob: -7.547608375549316
    10. 'visited' → logprob: -8.172608375549316

Token 132: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.1475597620010376
    2. '_' → logprob: -2.397559642791748
    3. ')_' → logprob: -3.647559642791748
    4. ')' → logprob: -4.522559642791748
    5. ' _' → logprob: -5.897559642791748
    6. '_speed' → logprob: -6.397559642791748
    7. '_c' → logprob: -6.772559642791748
    8. '=' → logprob: -7.772559642791748
    9. '=_' → logprob: -8.272560119628906
    10. '_token' → logprob: -8.397560119628906

Token 133: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.458431601524353
    2. '=' → logprob: -1.583431601524353
    3. ' =' → logprob: -2.2084317207336426
    4. ')' → logprob: -3.5834317207336426
    5. '   ' → logprob: -5.333431720733643
    6. ')=' → logprob: -5.333431720733643
    7. ',state' → logprob: -5.958431720733643
    8. 's' → logprob: -6.333431720733643
    9. '=None' → logprob: -6.458431720733643
    10. '=[]' → logprob: -6.708431720733643

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11533404141664505
    2. '-' → logprob: -2.3653340339660645
    3. '1' → logprob: -4.3653340339660645
    4. ' ' → logprob: -6.8653340339660645
    5. 'None' → logprob: -7.2403340339660645
    6. ' -' → logprob: -7.9903340339660645
    7. '[' → logprob: -9.740334510803223
    8. 'from' → logprob: -9.865334510803223
    9. '{' → logprob: -10.740334510803223
    10. '[]' → logprob: -11.615334510803223

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016592606902122498
    2. '1' → logprob: -4.641592502593994
    3. '-' → logprob: -5.016592502593994
    4. ' ' → logprob: -10.141592979431152
    5. 'from' → logprob: -10.516592979431152
    6. 'None' → logprob: -10.516592979431152
    7. 'range' → logprob: -10.891592979431152
    8. ' -' → logprob: -11.016592979431152
    9. '[' → logprob: -11.141592979431152
    10. 'import' → logprob: -12.391592979431152

Token 136: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45484602451324463
    2. ' to' → logprob: -1.7048460245132446
    3. ')' → logprob: -1.9548460245132446
    4. '):' → logprob: -3.954845905303955
    5. ':' → logprob: -4.579845905303955
    6. ',' → logprob: -5.704845905303955
    7. '
' → logprob: -6.204845905303955
    8. '<|end|>' → logprob: -6.454845905303955
    9. 'to' → logprob: -6.704845905303955
    10. '    ' → logprob: -6.954845905303955

Token 137: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004153191577643156
    2. ' n' → logprob: -5.504153251647949
    3. '30' → logprob: -9.75415325164795
    4. '31' → logprob: -11.50415325164795
    5. ' ' → logprob: -13.37915325164795
    6. '0' → logprob: -13.50415325164795
    7. '(n' → logprob: -14.12915325164795
    8. '1' → logprob: -14.25415325164795
    9. 'm' → logprob: -14.75415325164795
    10. '
' → logprob: -15.12915325164795

Token 138: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6551907062530518
    2. '   ' → logprob: -0.9051907062530518
    3. 'dp' → logprob: -3.5301907062530518
    4. 'import' → logprob: -3.5301907062530518
    5. 'distance' → logprob: -4.780190467834473
    6. 'from' → logprob: -5.905190467834473
    7. '
' → logprob: -6.030190467834473
    8. 'def' → logprob: -6.530190467834473
    9. 'max' → logprob: -7.155190467834473
    10. '    
' → logprob: -7.905190467834473

Token 139: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06666270643472672
    2. 'n' → logprob: -2.9416627883911133
    3. ')n' → logprob: -5.066662788391113
    4. ' n' → logprob: -6.066662788391113
    5. ' )' → logprob: -6.191662788391113
    6. '30' → logprob: -8.566662788391113
    7. '(n' → logprob: -8.691662788391113
    8. ' ' → logprob: -8.941662788391113
    9. '31' → logprob: -9.066662788391113
    10. '1' → logprob: -9.066662788391113

Token 140: ' means' (ID: 4748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014389616437256336
    2. '):' → logprob: -4.389389514923096
    3. '):
' → logprob: -7.389389514923096
    4. '+' → logprob: -7.389389514923096
    5. ')
' → logprob: -8.639389991760254
    6. ' )' → logprob: -9.264389991760254
    7. '   ' → logprob: -9.639389991760254
    8. ',' → logprob: -10.264389991760254
    9. '):

' → logprob: -10.264389991760254
    10. '-' → logprob: -10.389389991760254

Token 141: ' start' (ID: 1604)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.16458910703659058
    2. ' no' → logprob: -1.9145891666412354
    3. 'start' → logprob: -5.789588928222656
    4. 'none' → logprob: -7.164588928222656
    5. ' start' → logprob: -8.289588928222656
    6. 'unknown' → logprob: -9.414588928222656
    7. 'None' → logprob: -9.539588928222656
    8. 'undefined' → logprob: -10.164588928222656
    9. ' none' → logprob: -10.664588928222656
    10. 'starting' → logprob: -10.914588928222656

Token 142: ' no' (ID: 860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022486266680061817
    2. ')
' → logprob: -6.377248764038086
    3. '   ' → logprob: -7.752248764038086
    4. ' )' → logprob: -9.252248764038086
    5. ')

' → logprob: -12.377248764038086
    6. ',' → logprob: -12.627248764038086
    7. '```' → logprob: -12.877248764038086
    8. ' ' → logprob: -13.627248764038086
    9. 'state' → logprob: -13.627248764038086
    10. '`)' → logprob: -14.002248764038086

Token 143: ' prev' (ID: 10258)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -1.1171730756759644
    2. ' city' → logprob: -1.2421730756759644
    3. 'prev' → logprob: -1.7421730756759644
    4. ' previous' → logprob: -2.117173194885254
    5. 'previous' → logprob: -3.117173194885254
    6. ' prev' → logprob: -4.492173194885254
    7. ')' → logprob: -4.617173194885254
    8. '   ' → logprob: -5.367173194885254
    9. 'speed' → logprob: -5.367173194885254
    10. 'r' → logprob: -6.367173194885254

Token 144: ')
' (ID: 446)
  Prédit: '_city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.07801822572946548
    2. ')' → logprob: -3.8280181884765625
    3. 'city' → logprob: -4.0780181884765625
    4. '_' → logprob: -4.0780181884765625
    5. ')_' → logprob: -4.5780181884765625
    6. ')
' → logprob: -5.7030181884765625
    7. ' city' → logprob: -5.7030181884765625
    8. '_)' → logprob: -6.7030181884765625
    9. '_)
' → logprob: -7.5780181884765625
    10. ' _' → logprob: -8.078018188476562

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19599378108978271
    2. 'dist' → logprob: -1.8209937810897827
    3. 'import' → logprob: -4.570993900299072
    4. '
' → logprob: -6.195993900299072
    5. 'dp' → logprob: -6.320993900299072
    6. '    
' → logprob: -7.195993900299072
    7. 'distance' → logprob: -7.445993900299072
    8. 'def' → logprob: -8.695993423461914
    9. 'from' → logprob: -9.070993423461914
    10. ' dist' → logprob: -9.695993423461914

Token 146: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0673307254910469
    2. '   ' → logprob: -3.442330837249756
    3. 'dp' → logprob: -3.567330837249756
    4. 'distance' → logprob: -5.942330837249756
    5. 'import' → logprob: -7.192330837249756
    6. '
' → logprob: -7.692330837249756
    7. '    
' → logprob: -7.692330837249756
    8. 'max' → logprob: -8.317330360412598
    9. 'DIST' → logprob: -9.192330360412598
    10. 'from' → logprob: -9.817330360412598

Token 147: ' We'll' (ID: 46830)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6360017657279968
    2. 'dp' → logprob: -1.0110018253326416
    3. 'INF' → logprob: -2.3860018253326416
    4. 'max' → logprob: -4.8860015869140625
    5. 'distance' → logprob: -5.7610015869140625
    6. 'MAX' → logprob: -7.1360015869140625
    7. 'speed' → logprob: -7.7610015869140625
    8. '   ' → logprob: -7.7610015869140625
    9. 'DIST' → logprob: -7.8860015869140625
    10. 'import' → logprob: -8.136001586914062

Token 148: ' do' (ID: 621)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.20499755442142487
    2. ' use' → logprob: -2.5799975395202637
    3. 'implement' → logprob: -3.0799975395202637
    4. 'continue' → logprob: -3.5799975395202637
    5. 'define' → logprob: -4.204997539520264
    6. ' implement' → logprob: -4.704997539520264
    7. 'import' → logprob: -5.329997539520264
    8. 'initialize' → logprob: -5.579997539520264
    9. 'def' → logprob: -7.454997539520264
    10. 'dp' → logprob: -7.579997539520264

Token 149: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4492571949958801
    2. 'D' → logprob: -1.3242571353912354
    3. 'import' → logprob: -3.5742571353912354
    4. 'a' → logprob: -3.8242571353912354
    5. ' D' → logprob: -3.9492571353912354
    6. ' d' → logprob: -4.6992573738098145
    7. ' a' → logprob: -4.9492573738098145
    8. 'dist' → logprob: -5.1992573738098145
    9. 'heap' → logprob: -6.9492573738098145
    10. 'distance' → logprob: -7.0742573738098145

Token 150: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.015543191693723202
    2. 'ijk' → logprob: -4.765542984008789
    3. 'ij' → logprob: -5.890542984008789
    4. '   ' → logprob: -7.140542984008789
    5. 'i' → logprob: -7.265542984008789
    6. 'ik' → logprob: -7.515542984008789
    7. '```' → logprob: -7.765542984008789
    8. 'jk' → logprob: -8.140542984008789
    9. 'jik' → logprob: -8.265542984008789
    10. 'P' → logprob: -8.765542984008789

Token 151: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07893771678209305
    2. 'dist' → logprob: -3.4539377689361572
    3. '
' → logprob: -3.9539377689361572
    4. 'import' → logprob: -4.453937530517578
    5. '    
' → logprob: -5.328937530517578
    6. 'distance' → logprob: -5.828937530517578
    7. 'pq' → logprob: -7.328937530517578
    8. 'heap' → logprob: -7.578937530517578
    9. ')' → logprob: -7.703937530517578
    10. ',' → logprob: -7.703937530517578

Token 152: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7009002566337585
    2. ' states' → logprob: -1.9509003162384033
    3. ' distances' → logprob: -2.4509003162384033
    4. ' the' → logprob: -2.7009003162384033
    5. 'the' → logprob: -2.9509003162384033
    6. 'states' → logprob: -3.7009003162384033
    7. 'heap' → logprob: -4.200900077819824
    8. 'state' → logprob: -4.325900077819824
    9. ' a' → logprob: -4.575900077819824
    10. '(speed' → logprob: -4.575900077819824

Token 153: 'city' (ID: 17500)
  Prédit: 'city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.10878096520900726
    2. ' city' → logprob: -2.483780860900879
    3. ')' → logprob: -4.983780860900879
    4. '(city' → logprob: -5.358780860900879
    5. 'n' → logprob: -5.983780860900879
    6. '   ' → logprob: -6.358780860900879
    7. 'cost' → logprob: -6.608780860900879
    8. 'distance' → logprob: -7.358780860900879
    9. ' (' → logprob: -8.108780860900879
    10. ' n' → logprob: -8.358780860900879

Token 154: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020273735281080008
    2. '   ' → logprob: -6.87702751159668
    3. ' ,' → logprob: -7.50202751159668
    4. ')' → logprob: -8.50202751159668
    5. ',state' → logprob: -9.25202751159668
    6. ',
' → logprob: -10.12702751159668
    7. ',s' → logprob: -11.12702751159668
    8. '    ' → logprob: -11.25202751159668
    9. '<|end|>' → logprob: -11.75202751159668
    10. ',)' → logprob: -11.75202751159668

Token 155: 'peed' (ID: 6919)
  Prédit: 'peed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peed' → logprob: -0.04352797940373421
    2. ',' → logprob: -3.1685280799865723
    3. ',p' → logprob: -8.168527603149414
    4. 'speed' → logprob: -9.793527603149414
    5. 'PEED' → logprob: -10.543527603149414
    6. 'eed' → logprob: -10.543527603149414
    7. ' ,' → logprob: -11.168527603149414
    8. '_,' → logprob: -11.293527603149414
    9. 'p' → logprob: -11.543527603149414
    10. ')' → logprob: -11.543527603149414

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06593576073646545
    2. ',state' → logprob: -3.0659358501434326
    3. ')' → logprob: -4.4409356117248535
    4. ',s' → logprob: -5.8159356117248535
    5. ',c' → logprob: -7.5659356117248535
    6. '   ' → logprob: -8.315936088562012
    7. ',)' → logprob: -8.315936088562012
    8. ',current' → logprob: -8.690936088562012
    9. '_,' → logprob: -9.065936088562012
    10. ',size' → logprob: -9.190936088562012

Token 157: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.006039831321686506
    2. ' prev' → logprob: -5.131039619445801
    3. ')' → logprob: -10.2560396194458
    4. '   ' → logprob: -10.6310396194458
    5. '(prev' → logprob: -11.2560396194458
    6. '	prev' → logprob: -11.7560396194458
    7. '_prev' → logprob: -12.1310396194458
    8. ' ' → logprob: -12.5060396194458
    9. 'previous' → logprob: -12.6310396194458
    10. 'city' → logprob: -12.8810396194458

Token 158: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.021822111681103706
    2. ')' → logprob: -4.021821975708008
    3. ')_' → logprob: -6.146821975708008
    4. 'city' → logprob: -6.646821975708008
    5. ')
' → logprob: -9.896821975708008
    6. '_)' → logprob: -10.396821975708008
    7. '_' → logprob: -10.646821975708008
    8. ' city' → logprob: -11.021821975708008
    9. 'City' → logprob: -11.271821975708008
    10. '   ' → logprob: -11.271821975708008

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019269285257905722
    2. '   ' → logprob: -9.375192642211914
    3. ')
' → logprob: -9.625192642211914
    4. ' )' → logprob: -11.250192642211914
    5. ')]' → logprob: -11.500192642211914
    6. '))' → logprob: -11.875192642211914
    7. ',' → logprob: -12.875192642211914
    8. ')`' → logprob: -13.500192642211914
    9. ' ' → logprob: -14.000192642211914
    10. '),' → logprob: -14.125192642211914

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8958248496055603
    2. ':' → logprob: -1.520824909210205
    3. ')' → logprob: -1.645824909210205
    4. '
' → logprob: -2.145824909210205
    5. '):' → logprob: -4.020824909210205
    6. ',' → logprob: -4.645824909210205
    7. '    
' → logprob: -5.645824909210205
    8. '<|end|>' → logprob: -5.770824909210205
    9. ':
' → logprob: -5.895824909210205
    10. 'dist' → logprob: -6.020824909210205

Token 161: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3234861493110657
    2. '   ' → logprob: -1.948486089706421
    3. 'import' → logprob: -2.448486089706421
    4. 'distance' → logprob: -3.323486089706421
    5. 'from' → logprob: -5.198486328125
    6. 'dp' → logprob: -5.823486328125
    7. '
' → logprob: -7.323486328125
    8. ' dist' → logprob: -7.573486328125
    9. '    
' → logprob: -8.198486328125
    10. 'heap' → logprob: -8.448486328125

Token 162: '=float' (ID: 80332)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019480202347040176
    2. ' =' → logprob: -4.019480228424072
    3. '=float' → logprob: -7.019480228424072
    4. '=int' → logprob: -7.769480228424072
    5. '=sys' → logprob: -11.394479751586914
    6. '＝' → logprob: -14.019479751586914
    7. '   ' → logprob: -15.769479751586914
    8. '=max' → logprob: -16.269479751586914
    9. '=

' → logprob: -16.644479751586914
    10. '=}' → logprob: -16.894479751586914

Token 163: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.2884194552898407
    2. '('' → logprob: -2.038419485092163
    3. ''' → logprob: -2.163419485092163
    4. ''ex' → logprob: -6.913419246673584
    5. ''a' → logprob: -7.663419246673584
    6. 'inf' → logprob: -7.913419246673584
    7. '   ' → logprob: -7.913419246673584
    8. ''s' → logprob: -8.038419723510742
    9. ''ins' → logprob: -8.163419723510742
    10. ''e' → logprob: -8.413419723510742

Token 164: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00675775995478034
    2. ''in' → logprob: -5.131757736206055
    3. ''' → logprob: -7.131757736206055
    4. 'info' → logprob: -12.006757736206055
    5. 'in' → logprob: -12.256757736206055
    6. '"' → logprob: -12.256757736206055
    7. '64' → logprob: -13.506757736206055
    8. '('' → logprob: -13.631757736206055
    9. ''int' → logprob: -13.881757736206055
    10. '1' → logprob: -13.881757736206055

Token 165: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03832535818219185
    2. ')
' → logprob: -3.288325309753418
    3. '')' → logprob: -9.288325309753418
    4. ' )' → logprob: -9.538325309753418
    5. ')
' → logprob: -9.663325309753418
    6. ')

' → logprob: -10.413325309753418
    7. ' )
' → logprob: -11.038325309753418
    8. '')
' → logprob: -11.913325309753418
    9. '   ' → logprob: -15.163325309753418
    10. '
' → logprob: -15.163325309753418

Token 166: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03599493205547333
    2. 'distance' → logprob: -3.4109950065612793
    3. '   ' → logprob: -6.660995006561279
    4. 'dp' → logprob: -8.160994529724121
    5. '
' → logprob: -8.410994529724121
    6. ' dist' → logprob: -9.035994529724121
    7. '```' → logprob: -9.160994529724121
    8. 'visited' → logprob: -9.910994529724121
    9. '    
' → logprob: -10.035994529724121
    10. 'import' → logprob: -10.285994529724121

Token 167: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.1186760887503624
    2. 'dp' → logprob: -2.24367618560791
    3. 'distance' → logprob: -5.74367618560791
    4. 'cost' → logprob: -7.24367618560791
    5. '   ' → logprob: -7.74367618560791
    6. 'import' → logprob: -7.74367618560791
    7. ' dist' → logprob: -8.49367618560791
    8. 'start' → logprob: -8.61867618560791
    9. 'dis' → logprob: -9.11867618560791
    10. 'from' → logprob: -9.11867618560791

Token 168: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6910360455513
    2. '=[' → logprob: -1.0660359859466553
    3. '=' → logprob: -1.9410359859466553
    4. '=[[' → logprob: -4.566036224365234
    5. ' =[' → logprob: -8.066036224365234
    6. '[' → logprob: -8.816036224365234
    7. ')' → logprob: -10.066036224365234
    8. '=[]' → logprob: -10.316036224365234
    9. '={}' → logprob: -11.066036224365234
    10. '   ' → logprob: -11.191036224365234

Token 169: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -4.990154047845863e-05
    2. ' [[[' → logprob: -10.500049591064453
    3. '[' → logprob: -10.750049591064453
    4. ' [[' → logprob: -14.625049591064453
    5. '   ' → logprob: -15.375049591064453
    6. '[
' → logprob: -16.250049591064453
    7. '{' → logprob: -17.000049591064453
    8. '[(' → logprob: -18.000049591064453
    9. ' [' → logprob: -18.625049591064453
    10. '([[' → logprob: -18.750049591064453

Token 170: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.8624639324116288e-06
    2. 'inf' → logprob: -13.625001907348633
    3. ' INF' → logprob: -14.625001907348633
    4. '_INF' → logprob: -17.000001907348633
    5. '-INF' → logprob: -18.000001907348633
    6. 'float' → logprob: -18.000001907348633
    7. 'Inf' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. 'IN' → logprob: -20.125001907348633
    10. '
' → logprob: -20.375001907348633

Token 171: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27506572008132935
    2. 'for' → logprob: -1.5250656604766846
    3. ']' → logprob: -3.9000656604766846
    4. ']*' → logprob: -6.400065898895264
    5. ']*(' → logprob: -7.025065898895264
    6. '	for' → logprob: -10.775065422058105
    7. ')' → logprob: -10.900065422058105
    8. ' ]' → logprob: -11.025065422058105
    9. '   ' → logprob: -11.025065422058105
    10. ']+' → logprob: -13.025065422058105

Token 172: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010615098290145397
    2. '(n' → logprob: -6.87606143951416
    3. ' n' → logprob: -10.50106143951416
    4. ' (' → logprob: -14.25106143951416
    5. '(' → logprob: -15.25106143951416
    6. 'len' → logprob: -16.126062393188477
    7. '   ' → logprob: -16.251062393188477
    8. ')n' → logprob: -16.876062393188477
    9. '_n' → logprob: -17.251062393188477
    10. ')' → logprob: -17.251062393188477

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.074907287256792e-05
    2. ' +' → logprob: -9.75006103515625
    3. '+
' → logprob: -13.00006103515625
    4. '```' → logprob: -17.50006103515625
    5. '+)' → logprob: -18.00006103515625
    6. 'plus' → logprob: -18.00006103515625
    7. '
' → logprob: -18.00006103515625
    8. '＋' → logprob: -18.12506103515625
    9. ' +
' → logprob: -18.75006103515625
    10. '+n' → logprob: -18.75006103515625

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026979928952641785
    2. '2' → logprob: -8.250269889831543
    3. ' ' → logprob: -11.875269889831543
    4. '   ' → logprob: -14.125269889831543
    5. '+' → logprob: -15.500269889831543
    6. '(' → logprob: -15.625269889831543
    7. '```' → logprob: -15.750269889831543
    8. '
' → logprob: -16.625268936157227
    9. '11' → logprob: -16.750268936157227
    10. ')' → logprob: -17.375268936157227

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010536498157307506
    2. 'for' → logprob: -7.126053810119629
    3. ' )' → logprob: -8.626053810119629
    4. ' for' → logprob: -9.751053810119629
    5. ')]' → logprob: -12.376053810119629
    6. '   ' → logprob: -12.751053810119629
    7. ']' → logprob: -12.876053810119629
    8. '       ' → logprob: -14.376053810119629
    9. ')
' → logprob: -14.751053810119629
    10. ' ' → logprob: -15.126053810119629

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4742199778556824
    2. ' for' → logprob: -0.9742199778556824
    3. '   ' → logprob: -9.349220275878906
    4. ')' → logprob: -10.724220275878906
    5. '	for' → logprob: -11.474220275878906
    6. ' ' → logprob: -11.974220275878906
    7. ']' → logprob: -11.974220275878906
    8. '       ' → logprob: -12.599220275878906
    9. '  ' → logprob: -13.724220275878906
    10. '           ' → logprob: -13.724220275878906

Token 177: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0002917254460044205
    2. '_' → logprob: -8.25029182434082
    3. ' range' → logprob: -10.62529182434082
    4. ' in' → logprob: -12.75029182434082
    5. ' ' → logprob: -13.00029182434082
    6. ' i' → logprob: -14.75029182434082
    7. ' s' → logprob: -15.87529182434082
    8. ' speed' → logprob: -16.12529182434082
    9. '_s' → logprob: -16.62529182434082
    10. '_range' → logprob: -16.75029182434082

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043020881712436676
    2. 'in' → logprob: -3.1680209636688232
    3. 'range' → logprob: -11.543021202087402
    4. ' ' → logprob: -12.418021202087402
    5. '_' → logprob: -13.168021202087402
    6. ' range' → logprob: -13.293021202087402
    7. '    ' → logprob: -13.543021202087402
    8. 'n' → logprob: -13.918021202087402
    9. ' _' → logprob: -14.793021202087402
    10. '  ' → logprob: -15.293021202087402

Token 179: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931758522987366
    2. 'range' → logprob: -0.6931758522987366
    3. '31' → logprob: -11.06817626953125
    4. '(range' → logprob: -11.31817626953125
    5. '   ' → logprob: -15.31817626953125
    6. ' ' → logprob: -15.56817626953125
    7. '32' → logprob: -15.81817626953125
    8. '30' → logprob: -16.19317626953125
    9. '(' → logprob: -16.69317626953125
    10. '    ' → logprob: -16.81817626953125

Token 180: '(' (ID: 7)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.0620654933154583
    2. '(' → logprob: -2.812065601348877
    3. ' ' → logprob: -9.562065124511719
    4. ' (' → logprob: -10.687065124511719
    5. '   ' → logprob: -12.687065124511719
    6. '32' → logprob: -14.937065124511719
    7. '    ' → logprob: -15.187065124511719
    8. '  ' → logprob: -15.312065124511719
    9. '36' → logprob: -15.687065124511719
    10. '
' → logprob: -15.687065124511719

Token 181: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -3.128163257315464e-07
    2. '32' → logprob: -16.125
    3. ' ' → logprob: -16.625
    4. '(' → logprob: -17.375
    5. '35' → logprob: -17.75
    6. '33' → logprob: -18.125
    7. '30' → logprob: -18.25
    8. '51' → logprob: -19.5
    9. '301' → logprob: -19.5
    10. '41' → logprob: -19.875

Token 182: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017290872347075492
    2. ']' → logprob: -8.87517261505127
    3. ')' → logprob: -10.75017261505127
    4. ' )' → logprob: -12.12517261505127
    5. ' ]' → logprob: -12.25017261505127
    6. '   ' → logprob: -14.62517261505127
    7. ')]
' → logprob: -15.00017261505127
    8. ']]' → logprob: -15.37517261505127
    9. '])' → logprob: -16.250173568725586
    10. ' ' → logprob: -16.375173568725586

Token 183: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09362201392650604
    2. ']' → logprob: -2.5936219692230225
    3. '   ' → logprob: -4.968622207641602
    4. 'for' → logprob: -5.093622207641602
    5. ' ]' → logprob: -6.593622207641602
    6. ' ' → logprob: -9.843622207641602
    7. '       ' → logprob: -9.968622207641602
    8. '  ' → logprob: -10.968622207641602
    9. '	for' → logprob: -10.968622207641602
    10. '    ' → logprob: -11.468622207641602

Token 184: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45487818121910095
    2. ' _' → logprob: -1.3298782110214233
    3. '_' → logprob: -2.329878091812134
    4. 'range' → logprob: -6.079878330230713
    5. ' n' → logprob: -7.704878330230713
    6. ' in' → logprob: -7.829878330230713
    7. '_range' → logprob: -8.329877853393555
    8. ' (' → logprob: -8.954877853393555
    9. '(n' → logprob: -9.829877853393555
    10. '(range' → logprob: -10.329877853393555

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004934750497341156
    2. 'in' → logprob: -5.379934787750244
    3. '_' → logprob: -8.129934310913086
    4. '_in' → logprob: -12.004934310913086
    5. 'range' → logprob: -12.129934310913086
    6. ' _' → logprob: -12.254934310913086
    7. ' range' → logprob: -13.379934310913086
    8. ' ' → logprob: -13.629934310913086
    9. '_range' → logprob: -15.504934310913086
    10. 'i' → logprob: -16.629934310913086

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5761904120445251
    2. ' range' → logprob: -0.8261904120445251
    3. '(range' → logprob: -8.326189994812012
    4. '[' → logprob: -12.076189994812012
    5. '	range' → logprob: -13.076189994812012
    6. '_range' → logprob: -14.826189994812012
    7. '.range' → logprob: -15.451189994812012
    8. ' xrange' → logprob: -15.701189994812012
    9. ' ' → logprob: -16.076190948486328
    10. '(' → logprob: -16.326190948486328

Token 187: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014068979071453214
    2. 'n' → logprob: -6.751406669616699
    3. '(' → logprob: -8.5014066696167
    4. ' (' → logprob: -10.5014066696167
    5. 'range' → logprob: -13.2514066696167
    6. '[n' → logprob: -13.6264066696167
    7. ' n' → logprob: -13.6264066696167
    8. '   ' → logprob: -14.7514066696167
    9. '(range' → logprob: -14.7514066696167
    10. ']' → logprob: -15.3764066696167

Token 188: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -13.250004768371582
    3. '+
' → logprob: -13.750004768371582
    4. ' +' → logprob: -14.000004768371582
    5. ')]' → logprob: -14.875004768371582
    6. ')+' → logprob: -15.250004768371582
    7. ']+' → logprob: -16.0000057220459
    8. '＋' → logprob: -16.1250057220459
    9. ')])' → logprob: -16.5000057220459
    10. '()+' → logprob: -16.5000057220459

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '+' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.250003814697266
    6. '6' → logprob: -16.125003814697266
    7. '```' → logprob: -16.625003814697266
    8. '(' → logprob: -16.875003814697266
    9. '
' → logprob: -17.000003814697266
    10. ')' → logprob: -18.000003814697266

Token 190: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.05499910004437e-05
    2. ']' → logprob: -10.125090599060059
    3. '   ' → logprob: -11.000090599060059
    4. ')' → logprob: -11.000090599060059
    5. ')]
' → logprob: -11.375090599060059
    6. '])]' → logprob: -13.000090599060059
    7. ')])' → logprob: -14.000090599060059
    8. ')]
' → logprob: -14.125090599060059
    9. '])' → logprob: -15.000090599060059
    10. ')][' → logprob: -15.125090599060059

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09720456600189209
    2. 'dist' → logprob: -3.0972046852111816
    3. '
' → logprob: -3.4722046852111816
    4. '    
' → logprob: -4.847204685211182
    5. ' dist' → logprob: -6.097204685211182
    6. 'heap' → logprob: -6.347204685211182
    7. '  
' → logprob: -6.347204685211182
    8. 'pq' → logprob: -7.597204685211182
    9. ' 
' → logprob: -7.722204685211182
    10. '<|end|>' → logprob: -7.847204685211182

Token 192: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02643522061407566
    2. '   ' → logprob: -3.901435136795044
    3. ' dist' → logprob: -6.026435375213623
    4. 'heap' → logprob: -6.151435375213623
    5. 'pq' → logprob: -7.401435375213623
    6. 'start' → logprob: -8.276434898376465
    7. '    
' → logprob: -8.776434898376465
    8. '
' → logprob: -9.151434898376465
    9. '	dist' → logprob: -9.651434898376465
    10. '```' → logprob: -11.026434898376465

Token 193: ' initial' (ID: 4871)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008832250721752644
    2. ' dist' → logprob: -5.6338324546813965
    3. 'import' → logprob: -6.1338324546813965
    4. 'heap' → logprob: -6.5088324546813965
    5. '   ' → logprob: -6.8838324546813965
    6. 'for' → logprob: -8.633831977844238
    7. 'pq' → logprob: -9.883831977844238
    8. 'start' → logprob: -9.883831977844238
    9. '```' → logprob: -10.008831977844238
    10. 'hq' → logprob: -10.133831977844238

Token 194: ':' (ID: 25)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07708176225423813
    2. '_dist' → logprob: -3.7020816802978516
    3. 't' → logprob: -4.577081680297852
    4. ' dist' → logprob: -4.577081680297852
    5. 'd' → logprob: -5.077081680297852
    6. 'city' → logprob: -5.577081680297852
    7. 'state' → logprob: -5.577081680297852
    8. 's' → logprob: -6.327081680297852
    9. '   ' → logprob: -6.702081680297852
    10. ' =' → logprob: -6.702081680297852

Token 195: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.045129165053367615
    2. '   ' → logprob: -3.7951290607452393
    3. ' dist' → logprob: -3.9201290607452393
    4. 'heap' → logprob: -6.420129299163818
    5. ' heap' → logprob: -9.92012882232666
    6. 'for' → logprob: -9.92012882232666
    7. 'import' → logprob: -10.42012882232666
    8. '
' → logprob: -11.42012882232666
    9. '    
' → logprob: -11.92012882232666
    10. ' for' → logprob: -12.17012882232666

Token 196: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07902947068214417
    2. ' s' → logprob: -2.5790295600891113
    3. '   ' → logprob: -9.454029083251953
    4. '(s' → logprob: -10.079029083251953
    5. ' (' → logprob: -11.704029083251953
    6. '[s' → logprob: -12.704029083251953
    7. '0' → logprob: -13.454029083251953
    8. ' ' → logprob: -13.829029083251953
    9. ',' → logprob: -14.204029083251953
    10. ')' → logprob: -14.454029083251953

Token 197: ' city' (ID: 5030)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23546035587787628
    2. '[s' → logprob: -1.8604604005813599
    3. '   ' → logprob: -3.3604602813720703
    4. 's' → logprob: -4.48546028137207
    5. ' dist' → logprob: -5.48546028137207
    6. '[' → logprob: -6.36046028137207
    7. '][' → logprob: -7.61046028137207
    8. '(s' → logprob: -8.11046028137207
    9. '
' → logprob: -8.23546028137207
    10. '0' → logprob: -8.61046028137207

Token 198: ' s' (ID: 265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22269676625728607
    2. '   ' → logprob: -1.7226967811584473
    3. ' dist' → logprob: -3.9726967811584473
    4. '[s' → logprob: -7.597696781158447
    5. ',' → logprob: -7.847696781158447
    6. '
' → logprob: -7.972696781158447
    7. '[' → logprob: -8.097696304321289
    8. '(dist' → logprob: -8.472696304321289
    9. '    
' → logprob: -9.097696304321289
    10. 'for' → logprob: -9.597696304321289

Token 199: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5299458503723145
    2. 'dist' → logprob: -1.1549458503723145
    3. ' dist' → logprob: -2.5299458503723145
    4. ',' → logprob: -4.2799458503723145
    5. ' ,' → logprob: -7.0299458503723145
    6. '	dist' → logprob: -7.9049458503723145
    7. '_dist' → logprob: -8.154945373535156
    8. '
' → logprob: -8.279945373535156
    9. ' for' → logprob: -8.404945373535156
    10. '.dist' → logprob: -8.654945373535156

Token 200: ' prev' (ID: 10258)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.2859692573547363
    2. '0' → logprob: -1.4109692573547363
    3. 'dist' → logprob: -2.1609692573547363
    4. ' at' → logprob: -2.6609692573547363
    5. ' dist' → logprob: -2.6609692573547363
    6. ' speed' → logprob: -2.7859692573547363
    7. 'for' → logprob: -2.7859692573547363
    8. 'at' → logprob: -3.5359692573547363
    9. 'prev' → logprob: -4.035969257354736
    10. ' for' → logprob: -4.035969257354736

Token 201: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.0349775105714798
    2. '=' → logprob: -4.534977436065674
    3. '_' → logprob: -4.659977436065674
    4. ' =' → logprob: -5.659977436065674
    5. ' city' → logprob: -5.659977436065674
    6. 'city' → logprob: -5.659977436065674
    7. ' _' → logprob: -6.659977436065674
    8. ' ' → logprob: -7.284977436065674
    9. '_speed' → logprob: -7.409977436065674
    10. '0' → logprob: -8.284977912902832

Token 202: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6473547220230103
    2. '=' → logprob: -1.1473547220230103
    3. ' ' → logprob: -2.1473546028137207
    4. ' =' → logprob: -3.3973546028137207
    5. ',' → logprob: -5.397354602813721
    6. '[' → logprob: -6.772354602813721
    7. 's' → logprob: -7.147354602813721
    8. ' s' → logprob: -7.147354602813721
    9. '][' → logprob: -8.272355079650879
    10. ' at' → logprob: -8.397355079650879

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. 's' → logprob: -17.000001907348633
    4. '```' → logprob: -19.125001907348633
    5. '=' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.875001907348633
    7. '   ' → logprob: -21.625001907348633
    8. '`' → logprob: -21.875001907348633
    9. '<|end|>' → logprob: -21.875001907348633
    10. ',' → logprob: -22.125001907348633

Token 204: '(no' (ID: 67114)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45661434531211853
    2. 'dist' → logprob: -1.206614375114441
    3. ' dist' → logprob: -3.8316142559051514
    4. ',' → logprob: -3.8316142559051514
    5. ' for' → logprob: -4.0816144943237305
    6. 'for' → logprob: -5.0816144943237305
    7. ' ,' → logprob: -8.33161449432373
    8. '	dist' → logprob: -8.58161449432373
    9. '_dist' → logprob: -9.45661449432373
    10. '(dist' → logprob: -9.45661449432373

Token 205: ' prev' (ID: 10258)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.20594756305217743
    2. ' speed' → logprob: -1.8309475183486938
    3. ')' → logprob: -4.330947399139404
    4. ' )' → logprob: -5.080947399139404
    5. 'prev' → logprob: -5.955947399139404
    6. '_speed' → logprob: -6.080947399139404
    7. ' prev' → logprob: -8.330947875976562
    8. 's' → logprob: -8.455947875976562
    9. ',' → logprob: -8.580947875976562
    10. 'space' → logprob: -8.580947875976562

Token 206: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05690431222319603
    2. ',' → logprob: -3.1819043159484863
    3. '_city' → logprob: -5.681904315948486
    4. ')' → logprob: -5.931904315948486
    5. 'city' → logprob: -6.306904315948486
    6. ' ),' → logprob: -6.431904315948486
    7. ' ,' → logprob: -6.681904315948486
    8. 'speed' → logprob: -7.056904315948486
    9. '_speed' → logprob: -7.181904315948486
    10. ')
' → logprob: -7.681904315948486

Token 207: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.9619393348693848
    2. 'dist' → logprob: -1.0869393348693848
    3. '0' → logprob: -1.4619393348693848
    4. ' dist' → logprob: -4.086939334869385
    5. ' speed' → logprob: -4.461939334869385
    6. 'for' → logprob: -4.586939334869385
    7. '   ' → logprob: -5.461939334869385
    8. 'cur' → logprob: -7.086939334869385
    9. 'current' → logprob: -7.086939334869385
    10. ' ' → logprob: -7.086939334869385

Token 208: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07595299929380417
    2. '[' → logprob: -2.7009530067443848
    3. ' =' → logprob: -5.825953006744385
    4. '0' → logprob: -6.075953006744385
    5. '1' → logprob: -8.325952529907227
    6. '=[' → logprob: -8.825952529907227
    7. ' ' → logprob: -9.075952529907227
    8. '
' → logprob: -9.700952529907227
    9. '][' → logprob: -9.950952529907227
    10. '   ' → logprob: -10.450952529907227

Token 209: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023166537284851074
    2. '1' → logprob: -6.127316474914551
    3. '10' → logprob: -9.62731647491455
    4. '30' → logprob: -10.25231647491455
    5. '`' → logprob: -12.00231647491455
    6. 'start' → logprob: -12.75231647491455
    7. '```' → logprob: -12.75231647491455
    8. '``' → logprob: -12.75231647491455
    9. ' ' → logprob: -12.87731647491455
    10. 's' → logprob: -13.12731647491455

Token 210: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33227139711380005
    2. 'dist' → logprob: -1.3322713375091553
    3. '
' → logprob: -4.207271575927734
    4. ' dist' → logprob: -5.707271575927734
    5. '	dist' → logprob: -7.957271575927734
    6. '    
' → logprob: -8.457271575927734
    7. ' 
' → logprob: -11.957271575927734
    8. '
' → logprob: -12.082271575927734
    9. '  
' → logprob: -12.082271575927734
    10. ',' → logprob: -12.082271575927734

Token 211: ' going' (ID: 2966)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07780428975820541
    2. ' dist' → logprob: -3.2028043270111084
    3. '   ' → logprob: -3.8278043270111084
    4. '
' → logprob: -4.702804088592529
    5. '    
' → logprob: -7.202804088592529
    6. 'for' → logprob: -7.327804088592529
    7. ' for' → logprob: -7.702804088592529
    8. 'heap' → logprob: -7.702804088592529
    9. 'queue' → logprob: -8.077804565429688
    10. '_dist' → logprob: -8.827804565429688

Token 212: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8041209578514099
    2. 'to' → logprob: -1.5541210174560547
    3. '=' → logprob: -2.0541210174560547
    4. '   ' → logprob: -2.8041210174560547
    5. ' s' → logprob: -3.0541210174560547
    6. ' =' → logprob: -3.1791210174560547
    7. ' to' → logprob: -3.5541210174560547
    8. 'out' → logprob: -4.304121017456055
    9. '=s' → logprob: -5.429121017456055
    10. ' ' → logprob: -5.804121017456055

Token 213: ' first' (ID: 1577)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.3737319707870483
    2. 'heap' → logprob: -1.6237319707870483
    3. 's' → logprob: -1.7487319707870483
    4. ' dist' → logprob: -2.498732089996338
    5. ' edges' → logprob: -2.873732089996338
    6. ' s' → logprob: -2.873732089996338
    7. 'edges' → logprob: -2.998732089996338
    8. '   ' → logprob: -3.373732089996338
    9. 'queue' → logprob: -3.498732089996338
    10. 'q' → logprob: -3.873732089996338

Token 214: ' road' (ID: 8733)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5647388696670532
    2. 'line' → logprob: -2.0647387504577637
    3. 'edge' → logprob: -2.3147387504577637
    4. 'road' → logprob: -2.9397387504577637
    5. ' edge' → logprob: -3.1897387504577637
    6. 'city' → logprob: -3.6897387504577637
    7. ' city' → logprob: -4.064738750457764
    8. ' road' → logprob: -4.064738750457764
    9. '_' → logprob: -4.564738750457764
    10. '_line' → logprob: -5.189738750457764

Token 215: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3161887526512146
    2. '   ' → logprob: -1.3161888122558594
    3. ' dist' → logprob: -6.066188812255859
    4. '
' → logprob: -7.816188812255859
    5. '	dist' → logprob: -8.94118881225586
    6. '    
' → logprob: -10.69118881225586
    7. '.dist' → logprob: -11.44118881225586
    8. ',' → logprob: -11.56618881225586
    9. '_dist' → logprob: -12.31618881225586
    10. '```' → logprob: -12.31618881225586

Token 216: ' but' (ID: 889)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03984459117054939
    2. '   ' → logprob: -3.539844512939453
    3. ' dist' → logprob: -4.664844512939453
    4. '
' → logprob: -8.164844512939453
    5. 'for' → logprob: -8.539844512939453
    6. ' for' → logprob: -9.789844512939453
    7. '	dist' → logprob: -10.789844512939453
    8. '```' → logprob: -11.039844512939453
    9. '    
' → logprob: -11.289844512939453
    10. 'import' → logprob: -11.789844512939453

Token 217: ' speed' (ID: 7733)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9301527142524719
    2. 'not' → logprob: -1.3051526546478271
    3. ' not' → logprob: -2.555152654647827
    4. ' dist' → logprob: -2.680152654647827
    5. 'we' → logprob: -3.430152654647827
    6. ' we' → logprob: -4.305152893066406
    7. 'since' → logprob: -4.430152893066406
    8. 'prev' → logprob: -4.430152893066406
    9. 'speed' → logprob: -4.430152893066406
    10. 'the' → logprob: -4.430152893066406

Token 218: ' applies' (ID: 28134)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006411593407392502
    2. ' =' → logprob: -5.131411552429199
    3. '1' → logprob: -9.2564115524292
    4. '   ' → logprob: -9.8814115524292
    5. ' is' → logprob: -9.8814115524292
    6. '[' → logprob: -10.1314115524292
    7. '+' → logprob: -10.1314115524292
    8. ' ' → logprob: -10.2564115524292
    9. ')' → logprob: -10.7564115524292
    10. 's' → logprob: -10.8814115524292

Token 219: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4975871741771698
    2. ' =' → logprob: -1.6225872039794922
    3. ' to' → logprob: -2.497587203979492
    4. '   ' → logprob: -2.872587203979492
    5. '[' → logprob: -4.247587203979492
    6. 'to' → logprob: -4.747587203979492
    7. ' at' → logprob: -4.747587203979492
    8. ')' → logprob: -5.247587203979492
    9. ',' → logprob: -6.122587203979492
    10. '    ' → logprob: -6.122587203979492

Token 220: ' roads' (ID: 30027)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0790406465530396
    2. ' the' → logprob: -1.8290406465530396
    3. 'edges' → logprob: -2.20404052734375
    4. ' next' → logprob: -2.32904052734375
    5. 'next' → logprob: -2.45404052734375
    6. ' edges' → logprob: -2.95404052734375
    7. ' first' → logprob: -3.32904052734375
    8. 'first' → logprob: -3.32904052734375
    9. ' s' → logprob: -4.45404052734375
    10. 'edge' → logprob: -4.57904052734375

Token 221: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05265213921666145
    2. 'dist' → logprob: -3.05265212059021
    3. '
' → logprob: -6.177652359008789
    4. ' dist' → logprob: -6.552652359008789
    5. '	dist' → logprob: -8.302652359008789
    6. '    
' → logprob: -8.927652359008789
    7. ',' → logprob: -9.927652359008789
    8. '(dist' → logprob: -10.302652359008789
    9. '.dist' → logprob: -10.427652359008789
    10. '_dist' → logprob: -11.677652359008789

Token 222: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.17417004704475403
    2. 'on' → logprob: -2.6741700172424316
    3. 'city' → logprob: -3.4241700172424316
    4. 'nodes' → logprob: -4.174170017242432
    5. 'at' → logprob: -4.299170017242432
    6. 'in' → logprob: -4.299170017242432
    7. ' on' → logprob: -5.549170017242432
    8. ' cities' → logprob: -5.674170017242432
    9. ' city' → logprob: -6.299170017242432
    10. 'the' → logprob: -6.549170017242432

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18791155517101288
    2. '
' → logprob: -1.9379115104675293
    3. 'dist' → logprob: -3.8129115104675293
    4. '    
' → logprob: -5.562911510467529
    5. ' dist' → logprob: -7.687911510467529
    6. 'heap' → logprob: -8.562911987304688
    7. '  
' → logprob: -8.687911987304688
    8. ' 
' → logprob: -8.937911987304688
    9. '	dist' → logprob: -9.187911987304688
    10. '
' → logprob: -9.812911987304688

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18685920536518097
    2. 'dist' → logprob: -1.8118592500686646
    3. ' dist' → logprob: -5.686859130859375
    4. '
' → logprob: -5.811859130859375
    5. '	dist' → logprob: -8.186859130859375
    6. '    
' → logprob: -8.311859130859375
    7. '(dist' → logprob: -10.561859130859375
    8. '.dist' → logprob: -10.686859130859375
    9. ',' → logprob: -10.811859130859375
    10. '  
' → logprob: -10.811859130859375

Token 225: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15310586988925934
    2. '   ' → logprob: -2.0281059741973877
    3. 'heap' → logprob: -5.528105735778809
    4. '
' → logprob: -5.778105735778809
    5. ' dist' → logprob: -5.903105735778809
    6. 'pq' → logprob: -8.403105735778809
    7. 'import' → logprob: -9.653105735778809
    8. '	dist' → logprob: -9.653105735778809
    9. '    
' → logprob: -10.028105735778809
    10. ' heap' → logprob: -10.153105735778809

Token 226: ' The' (ID: 623)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030690666288137436
    2. 'for' → logprob: -4.655690670013428
    3. 'import' → logprob: -4.905690670013428
    4. 'heap' → logprob: -5.030690670013428
    5. '   ' → logprob: -6.030690670013428
    6. ' dist' → logprob: -6.280690670013428
    7. 'pq' → logprob: -6.780690670013428
    8. 'hq' → logprob: -7.405690670013428
    9. 'h' → logprob: -8.40569019317627
    10. ' for' → logprob: -8.78069019317627

Token 227: ' car' (ID: 1669)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15530069172382355
    2. ' next' → logprob: -3.7803006172180176
    3. ' dist' → logprob: -3.7803006172180176
    4. 'initial' → logprob: -4.155300617218018
    5. 'next' → logprob: -4.280300617218018
    6. ' initial' → logprob: -4.530300617218018
    7. ' code' → logprob: -4.780300617218018
    8. 'speed' → logprob: -5.280300617218018
    9. 'code' → logprob: -5.405300617218018
    10. 'start' → logprob: -5.405300617218018

Token 228: ' must' (ID: 2804)
  Prédit: ' starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' starts' → logprob: -1.146416425704956
    2. '=' → logprob: -1.771416425704956
    3. ' can' → logprob: -2.396416425704956
    4. ''s' → logprob: -2.396416425704956
    5. ' is' → logprob: -2.521416425704956
    6. 's' → logprob: -3.021416425704956
    7. ' =' → logprob: -3.771416425704956
    8. '_' → logprob: -3.771416425704956
    9. '_speed' → logprob: -3.771416425704956
    10. '   ' → logprob: -4.021416664123535

Token 229: ' run' (ID: 2461)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.606200635433197
    2. 'start' → logprob: -1.3562006950378418
    3. ' always' → logprob: -2.981200695037842
    4. ' not' → logprob: -4.106200695037842
    5. ' go' → logprob: -4.356200695037842
    6. 'always' → logprob: -4.481200695037842
    7. 'go' → logprob: -4.606200695037842
    8. ' move' → logprob: -4.731200695037842
    9. ' stop' → logprob: -5.106200695037842
    10. 'speed' → logprob: -5.356200695037842

Token 230: ' first' (ID: 1577)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.11647103726863861
    2. ' on' → logprob: -3.1164710521698
    3. ' the' → logprob: -3.9914710521698
    4. 'at' → logprob: -4.116470813751221
    5. ' first' → logprob: -4.241470813751221
    6. ' edges' → logprob: -5.491470813751221
    7. 'on' → logprob: -6.366470813751221
    8. ' a' → logprob: -6.491470813751221
    9. ' with' → logprob: -6.616470813751221
    10. '   ' → logprob: -6.991470813751221

Token 231: ' road' (ID: 8733)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.12561169266700745
    2. 'on' → logprob: -3.0006117820739746
    3. ' at' → logprob: -4.250611782073975
    4. ' speed' → logprob: -4.750611782073975
    5. '_' → logprob: -4.875611782073975
    6. 'speed' → logprob: -5.000611782073975
    7. 'token' → logprob: -5.625611782073975
    8. '   ' → logprob: -5.625611782073975
    9. 'ning' → logprob: -6.000611782073975
    10. '_speed' → logprob: -6.000611782073975

Token 232: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11956719309091568
    2. '
' → logprob: -2.8695671558380127
    3. 'dist' → logprob: -3.2445671558380127
    4. 'pq' → logprob: -5.369567394256592
    5. 'heap' → logprob: -5.494567394256592
    6. '    
' → logprob: -5.869567394256592
    7. ' =' → logprob: -6.744567394256592
    8. 'q' → logprob: -7.119567394256592
    9. 'import' → logprob: -7.619567394256592
    10. '  
' → logprob: -7.869567394256592

Token 233: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.469095379114151
    2. '1' → logprob: -1.3440953493118286
    3. ' speed' → logprob: -2.219095468521118
    4. 'least' → logprob: -6.469095230102539
    5. ' ' → logprob: -6.969095230102539
    6. '0' → logprob: -7.594095230102539
    7. ' least' → logprob: -8.094095230102539
    8. '20' → logprob: -8.219095230102539
    9. '30' → logprob: -8.344095230102539
    10. 'spe' → logprob: -9.094095230102539

Token 234: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011194592341780663
    2. ' ' → logprob: -4.511194705963135
    3. '0' → logprob: -10.261194229125977
    4. '```' → logprob: -10.386194229125977
    5. '10' → logprob: -10.636194229125977
    6. '=' → logprob: -10.886194229125977
    7. '30' → logprob: -11.636194229125977
    8. '20' → logprob: -12.011194229125977
    9. '   ' → logprob: -12.386194229125977
    10. '`' → logprob: -12.886194229125977

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00231143063865602
    2. '0' → logprob: -6.7523112297058105
    3. '30' → logprob: -7.1273112297058105
    4. 'start' → logprob: -9.627311706542969
    5. '10' → logprob: -9.752311706542969
    6. 's' → logprob: -9.877311706542969
    7. 'max' → logprob: -10.752311706542969
    8. '```' → logprob: -10.877311706542969
    9. 'speed' → logprob: -11.002311706542969
    10. 'd' → logprob: -11.127311706542969

Token 236: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44262275099754333
    2. 'dist' → logprob: -1.0676227807998657
    3. '
' → logprob: -4.442622661590576
    4. ' dist' → logprob: -7.192622661590576
    5. '	dist' → logprob: -7.192622661590576
    6. '    
' → logprob: -7.817622661590576
    7. 'import' → logprob: -10.692623138427734
    8. '
' → logprob: -10.942623138427734
    9. 'for' → logprob: -11.067623138427734
    10. '  
' → logprob: -11.192623138427734

Token 237: ' so' (ID: 813)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07590118795633316
    2. '   ' → logprob: -3.0759012699127197
    3. ' dist' → logprob: -3.7009012699127197
    4. '
' → logprob: -6.950901031494141
    5. 'heap' → logprob: -7.450901031494141
    6. 'import' → logprob: -8.32590103149414
    7. 'for' → logprob: -9.20090103149414
    8. ' for' → logprob: -9.57590103149414
    9. '	dist' → logprob: -9.82590103149414
    10. ' heap' → logprob: -9.82590103149414

Token 238: ' for' (ID: 395)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011157349683344364
    2. ' dist' → logprob: -4.761157512664795
    3. '   ' → logprob: -6.386157512664795
    4. 'for' → logprob: -7.511157512664795
    5. 'import' → logprob: -8.386157035827637
    6. ' for' → logprob: -9.886157035827637
    7. 'heap' → logprob: -10.886157035827637
    8. '
' → logprob: -13.386157035827637
    9. '	dist' → logprob: -13.511157035827637
    10. 'queue' → logprob: -13.636157035827637

Token 239: ' first' (ID: 1577)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -1.0044736862182617
    2. 'prev' → logprob: -1.2544736862182617
    3. ' speed' → logprob: -2.1294736862182617
    4. 'speed' → logprob: -2.5044736862182617
    5. ' city' → logprob: -3.8794736862182617
    6. 'v' → logprob: -4.004473686218262
    7. '_' → logprob: -4.129473686218262
    8. 'dist' → logprob: -4.504473686218262
    9. 'city' → logprob: -4.629473686218262
    10. ' _' → logprob: -4.629473686218262

Token 240: ' move' (ID: 5275)
  Prédit: ' road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.465257465839386
    2. 'road' → logprob: -1.4652574062347412
    3. '_' → logprob: -3.715257406234741
    4. ' s' → logprob: -3.840257406234741
    5. ' line' → logprob: -4.21525764465332
    6. ' edge' → logprob: -4.59025764465332
    7. ' _' → logprob: -4.59025764465332
    8. ' roads' → logprob: -4.59025764465332
    9. ' city' → logprob: -4.96525764465332
    10. 'edge' → logprob: -5.46525764465332

Token 241: ' we' (ID: 581)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5693320631980896
    2. '   ' → logprob: -1.6943321228027344
    3. ':' → logprob: -2.1943321228027344
    4. ':
' → logprob: -2.4443321228027344
    5. ',
' → logprob: -3.5693321228027344
    6. '
' → logprob: -5.194332122802734
    7. 'dist' → logprob: -5.694332122802734
    8. ')' → logprob: -5.819332122802734
    9. '    
' → logprob: -6.194332122802734
    10. '[' → logprob: -6.319332122802734

Token 242: ' start' (ID: 1604)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18535514175891876
    2. ' set' → logprob: -3.3103551864624023
    3. ' should' → logprob: -3.5603551864624023
    4. ' have' → logprob: -4.060355186462402
    5. 'have' → logprob: -4.310355186462402
    6. ' dist' → logprob: -4.560355186462402
    7. ' will' → logprob: -4.560355186462402
    8. ' need' → logprob: -4.685355186462402
    9. 'should' → logprob: -4.935355186462402
    10. ' use' → logprob: -5.310355186462402

Token 243: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25421836972236633
    2. ' with' → logprob: -2.504218339920044
    3. 'with' → logprob: -2.504218339920044
    4. '   ' → logprob: -3.379218339920044
    5. ' dist' → logprob: -4.379218578338623
    6. ' at' → logprob: -5.254218578338623
    7. '[' → logprob: -5.879218578338623
    8. 'from' → logprob: -6.254218578338623
    9. '_dist' → logprob: -7.004218578338623
    10. 'd' → logprob: -7.504218578338623

Token 244: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030798571184277534
    2. ' s' → logprob: -3.6557986736297607
    3. '(s' → logprob: -6.280798435211182
    4. ' (' → logprob: -6.655798435211182
    5. 'dist' → logprob: -6.905798435211182
    6. ' dist' → logprob: -9.03079891204834
    7. '[s' → logprob: -9.53079891204834
    8. '   ' → logprob: -9.90579891204834
    9. 'distance' → logprob: -10.53079891204834
    10. '(' → logprob: -11.53079891204834

Token 245: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.313107430934906
    2. '   ' → logprob: -1.8131074905395508
    3. '[' → logprob: -2.438107490539551
    4. '[s' → logprob: -4.688107490539551
    5. '
' → logprob: -5.313107490539551
    6. ',' → logprob: -6.563107490539551
    7. ' dist' → logprob: -7.313107490539551
    8. '_dist' → logprob: -7.313107490539551
    9. '.dist' → logprob: -7.438107490539551
    10. '	dist' → logprob: -8.68810749053955

Token 246: ' no' (ID: 860)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3790939450263977
    2. 'dist' → logprob: -1.879093885421753
    3. 'speed' → logprob: -2.254093885421753
    4. '0' → logprob: -3.004093885421753
    5. 'distance' → logprob: -6.004094123840332
    6. 'prev' → logprob: -6.754094123840332
    7. ' dist' → logprob: -7.004094123840332
    8. ' speed' → logprob: -7.129094123840332
    9. ' ' → logprob: -7.254094123840332
    10. 'state' → logprob: -7.504094123840332

Token 247: ' speed' (ID: 7733)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.4169950783252716
    2. 'speed' → logprob: -1.4169950485229492
    3. ' speed' → logprob: -2.916995048522949
    4. ' prev' → logprob: -3.416995048522949
    5. '_prev' → logprob: -5.791995048522949
    6. ' previous' → logprob: -7.041995048522949
    7. 'distance' → logprob: -7.041995048522949
    8. 'space' → logprob: -7.291995048522949
    9. '_speed' → logprob: -7.416995048522949
    10. 'neighbors' → logprob: -7.416995048522949

Token 248: ' yet' (ID: 5073)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17498917877674103
    2. '][' → logprob: -3.0499892234802246
    3. 'dist' → logprob: -3.5499892234802246
    4. '[s' → logprob: -3.5499892234802246
    5. '=' → logprob: -4.299989223480225
    6. 's' → logprob: -4.424989223480225
    7. ' =' → logprob: -4.799989223480225
    8. ']' → logprob: -4.924989223480225
    9. '   ' → logprob: -5.674989223480225
    10. '
' → logprob: -5.924989223480225

Token 249: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39516615867614746
    2. '
' → logprob: -1.7701661586761475
    3. '   ' → logprob: -1.8951661586761475
    4. 'heap' → logprob: -6.395166397094727
    5. '    
' → logprob: -6.520166397094727
    6. ',' → logprob: -7.395166397094727
    7. 'pq' → logprob: -7.395166397094727
    8. ' dist' → logprob: -7.770166397094727
    9. '
' → logprob: -8.520166397094727
    10. 'import' → logprob: -8.520166397094727

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5517860054969788
    2. 'dist' → logprob: -0.9267860054969788
    3. 'heap' → logprob: -4.801785945892334
    4. '
' → logprob: -4.926785945892334
    5. '    
' → logprob: -5.176785945892334
    6. ' dist' → logprob: -5.926785945892334
    7. ' 
' → logprob: -7.301785945892334
    8. '  
' → logprob: -7.551785945892334
    9. '	dist' → logprob: -7.801785945892334
    10. 'd' → logprob: -7.926785945892334

Token 251: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.27162569761276245
    2. 'heap' → logprob: -1.8966257572174072
    3. '   ' → logprob: -2.6466257572174072
    4. 'pq' → logprob: -4.396625518798828
    5. '
' → logprob: -6.646625518798828
    6. ' dist' → logprob: -6.771625518798828
    7. '    
' → logprob: -7.646625518798828
    8. '```' → logprob: -7.896625518798828
    9. 'd' → logprob: -8.521625518798828
    10. ' heap' → logprob: -8.646625518798828

Token 252: ' We'll' (ID: 46830)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.026806317269802094
    2. 'heap' → logprob: -3.901806354522705
    3. 'pq' → logprob: -6.151806354522705
    4. '   ' → logprob: -6.401806354522705
    5. 'hq' → logprob: -7.026806354522705
    6. 'h' → logprob: -7.651806354522705
    7. 'import' → logprob: -7.776806354522705
    8. ' dist' → logprob: -7.901806354522705
    9. 'queue' → logprob: -9.526805877685547
    10. 'for' → logprob: -9.651805877685547

Token 253: ' model' (ID: 2359)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.15988577902317047
    2. 'initialize' → logprob: -3.034885883331299
    3. ' push' → logprob: -3.534885883331299
    4. 'start' → logprob: -3.909885883331299
    5. 'set' → logprob: -4.034885883331299
    6. 'use' → logprob: -4.409885883331299
    7. 'put' → logprob: -5.159885883331299
    8. 'dist' → logprob: -5.659885883331299
    9. ' use' → logprob: -5.659885883331299
    10. 'continue' → logprob: -6.284885883331299

Token 254: ' initial' (ID: 4871)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8692461252212524
    2. ' the' → logprob: -0.9942461252212524
    3. 'the' → logprob: -2.619246006011963
    4. ' dist' → logprob: -2.619246006011963
    5. ' it' → logprob: -4.369246006011963
    6. 'd' → logprob: -4.369246006011963
    7. ' states' → logprob: -4.744246006011963
    8. 'state' → logprob: -4.994246006011963
    9. ' s' → logprob: -5.244246006011963
    10. 'states' → logprob: -5.994246006011963

Token 255: ' moves' (ID: 19523)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21507181227207184
    2. ' dist' → logprob: -2.7150719165802
    3. 'state' → logprob: -2.9650719165802
    4. '_dist' → logprob: -3.7150719165802
    5. ' state' → logprob: -3.8400719165802
    6. '_state' → logprob: -4.215071678161621
    7. ' =' → logprob: -5.215071678161621
    8. '=' → logprob: -6.465071678161621
    9. 'distance' → logprob: -6.715071678161621
    10. '_distance' → logprob: -7.090071678161621

Token 256: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08314232528209686
    2. 'import' → logprob: -3.4581422805786133
    3. 'dist' → logprob: -3.7081422805786133
    4. 'heap' → logprob: -4.458142280578613
    5. ',' → logprob: -5.333142280578613
    6. 'pq' → logprob: -6.208142280578613
    7. '    
' → logprob: -6.583142280578613
    8. '
' → logprob: -6.958142280578613
    9. 'q' → logprob: -7.458142280578613
    10. ' =' → logprob: -7.583142280578613

Token 257: ' pushing' (ID: 34364)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4742881953716278
    2. ' pushing' → logprob: -1.4742882251739502
    3. 'dist' → logprob: -2.72428822517395
    4. 'he' → logprob: -3.47428822517395
    5. 'heap' → logprob: -4.224287986755371
    6. 'setting' → logprob: -4.599287986755371
    7. 'for' → logprob: -4.724287986755371
    8. 'push' → logprob: -4.974287986755371
    9. 'put' → logprob: -5.474287986755371
    10. 'adding' → logprob: -6.724287986755371

Token 258: ' all' (ID: 722)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6747526526451111
    2. '(' → logprob: -0.9247526526451111
    3. '(heap' → logprob: -3.424752712249756
    4. '   ' → logprob: -3.674752712249756
    5. 'heap' → logprob: -3.924752712249756
    6. ' (' → logprob: -4.174752712249756
    7. 'import' → logprob: -7.674752712249756
    8. ' heap' → logprob: -8.424752235412598
    9. '(h' → logprob: -9.549752235412598
    10. '[(' → logprob: -10.174752235412598

Token 259: ' edges' (ID: 22569)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20466341078281403
    2. '(s' → logprob: -1.9546633958816528
    3. ' (' → logprob: -3.9546635150909424
    4. '   ' → logprob: -3.9546635150909424
    5. 'states' → logprob: -6.329663276672363
    6. '[(' → logprob: -7.204663276672363
    7. 'possible' → logprob: -8.079663276672363
    8. ' ' → logprob: -8.204663276672363
    9. 'neighbors' → logprob: -8.204663276672363
    10. '((' → logprob: -8.454663276672363

Token 260: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059071898460388184
    2. 'heap' → logprob: -4.434072017669678
    3. 'pq' → logprob: -4.684072017669678
    4. ' =' → logprob: -4.934072017669678
    5. 'for' → logprob: -5.059072017669678
    6. ',' → logprob: -5.184072017669678
    7. '
' → logprob: -5.434072017669678
    8. ' for' → logprob: -6.184072017669678
    9. '    
' → logprob: -6.309072017669678
    10. ')' → logprob: -6.434072017669678

Token 261: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931532025337219
    2. ' s' → logprob: -0.6931532025337219
    3. ' (' → logprob: -13.443153381347656
    4. '(s' → logprob: -13.568153381347656
    5. ' ' → logprob: -14.068153381347656
    6. '(' → logprob: -14.443153381347656
    7. '   ' → logprob: -14.818153381347656
    8. '	s' → logprob: -15.193153381347656
    9. '[s' → logprob: -15.443153381347656
    10. '_s' → logprob: -15.568153381347656

Token 262: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2023690789937973
    2. 'pq' → logprob: -2.327368974685669
    3. 'for' → logprob: -3.202368974685669
    4. 'heap' → logprob: -3.702368974685669
    5. ' for' → logprob: -4.327369213104248
    6. ' pq' → logprob: -6.202369213104248
    7. 'hq' → logprob: -6.577369213104248
    8. '
' → logprob: -6.702369213104248
    9. ' heap' → logprob: -7.202369213104248
    10. 'q' → logprob: -7.327369213104248

Token 263: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.05768205597996712
    2. ' speed' → logprob: -2.9326820373535156
    3. '(speed' → logprob: -6.807682037353516
    4. 'distance' → logprob: -7.182682037353516
    5. '(' → logprob: -7.307682037353516
    6. ' (' → logprob: -9.557682037353516
    7. '1' → logprob: -9.557682037353516
    8. 'cost' → logprob: -10.932682037353516
    9. 'velocity' → logprob: -11.432682037353516
    10. '	speed' → logprob: -11.557682037353516

Token 264: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010853286366909742
    2. '1' → logprob: -6.87608528137207
    3. ' =' → logprob: -10.37608528137207
    4. '=[' → logprob: -12.50108528137207
    5. '0' → logprob: -12.75108528137207
    6. '=[]' → logprob: -12.87608528137207
    7. '   ' → logprob: -13.12608528137207
    8. ']=' → logprob: -13.37608528137207
    9. ' ' → logprob: -13.62608528137207
    10. '=
' → logprob: -13.62608528137207

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '0' → logprob: -14.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. '[' → logprob: -17.937501907348633
    6. '=' → logprob: -17.937501907348633
    7. '   ' → logprob: -18.000001907348633
    8. '`' → logprob: -18.062501907348633
    9. '10' → logprob: -18.125001907348633
    10. '' → logprob: -18.750001907348633

Token 266: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14673814177513123
    2. 'pq' → logprob: -2.271738052368164
    3. 'heap' → logprob: -3.521738052368164
    4. 'hq' → logprob: -6.021738052368164
    5. 'q' → logprob: -7.521738052368164
    6. 'import' → logprob: -8.521738052368164
    7. '    
' → logprob: -8.521738052368164
    8. 'for' → logprob: -8.646738052368164
    9. '
' → logprob: -9.521738052368164
    10. 'h' → logprob: -10.146738052368164

Token 267: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.145608589053154
    2. 'pq' → logprob: -2.14560866355896
    3. 'heap' → logprob: -4.395608425140381
    4. '
' → logprob: -5.770608425140381
    5. 'hq' → logprob: -7.020608425140381
    6. '    
' → logprob: -7.020608425140381
    7. 'q' → logprob: -7.145608425140381
    8. 'import' → logprob: -9.145608901977539
    9. 'for' → logprob: -9.520608901977539
    10. ' pq' → logprob: -9.895608901977539

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.307706743478775
    2. 'heap' → logprob: -1.6827067136764526
    3. 'pq' → logprob: -2.807706832885742
    4. '
' → logprob: -4.807706832885742
    5. 'for' → logprob: -5.307706832885742
    6. '    
' → logprob: -5.807706832885742
    7. 'q' → logprob: -7.807706832885742
    8. ' heap' → logprob: -7.807706832885742
    9. ' for' → logprob: -7.932706832885742
    10. 'dist' → logprob: -8.432706832885742

Token 269: ' #' (ID: 1069)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.6909925937652588
    2. 'heap' → logprob: -1.4409925937652588
    3. 'for' → logprob: -2.315992593765259
    4. '   ' → logprob: -2.315992593765259
    5. 'hq' → logprob: -3.065992593765259
    6. 'q' → logprob: -4.31599235534668
    7. 'h' → logprob: -5.81599235534668
    8. 'queue' → logprob: -7.56599235534668
    9. ' for' → logprob: -7.94099235534668
    10. 'dq' → logprob: -7.94099235534668

Token 270: ' So' (ID: 2632)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.8969217538833618
    2. 'heap' → logprob: -1.1469217538833618
    3. 'pq' → logprob: -1.3969217538833618
    4. 'for' → logprob: -4.396921634674072
    5. 'q' → logprob: -5.146921634674072
    6. 'h' → logprob: -5.146921634674072
    7. '   ' → logprob: -6.021921634674072
    8. 'queue' → logprob: -7.521921634674072
    9. 'que' → logprob: -9.64692211151123
    10. 'hp' → logprob: -9.89692211151123

Token 271: ' initial' (ID: 4871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8413403034210205
    2. 'dist' → logprob: -1.5913403034210205
    3. ' for' → logprob: -2.2163403034210205
    4. 'heap' → logprob: -2.7163403034210205
    5. 'hq' → logprob: -3.0913403034210205
    6. '   ' → logprob: -3.2163403034210205
    7. 'pq' → logprob: -3.4663403034210205
    8. ' dist' → logprob: -3.5913403034210205
    9. 'h' → logprob: -4.341340065002441
    10. ' heap' → logprob: -4.341340065002441

Token 272: ' states' (ID: 9407)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0671576261520386
    2. 'heap' → logprob: -1.0671576261520386
    3. '_dist' → logprob: -2.817157745361328
    4. 'queue' → logprob: -3.317157745361328
    5. 'for' → logprob: -3.442157745361328
    6. '=' → logprob: -3.692157745361328
    7. 'q' → logprob: -3.692157745361328
    8. ' =' → logprob: -4.192157745361328
    9. '_edges' → logprob: -4.317157745361328
    10. 'pq' → logprob: -4.317157745361328

Token 273: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2480194568634033
    2. '=[]' → logprob: -1.4980194568634033
    3. '=' → logprob: -1.6230194568634033
    4. '=[]
' → logprob: -1.8730194568634033
    5. '   ' → logprob: -2.3730194568634033
    6. 'heap' → logprob: -4.248019218444824
    7. '.append' → logprob: -4.873019218444824
    8. '.' → logprob: -4.998019218444824
    9. '=[' → logprob: -5.623019218444824
    10. 'for' → logprob: -6.123019218444824

Token 274: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0675405263900757
    2. 'for' → logprob: -1.0675405263900757
    3. '   ' → logprob: -1.1925405263900757
    4. 'heap' → logprob: -5.442540645599365
    5. 'pq' → logprob: -6.192540645599365
    6. ' heap' → logprob: -6.692540645599365
    7. 'hq' → logprob: -7.817540645599365
    8. 'import' → logprob: -8.067540168762207
    9. ' pq' → logprob: -8.067540168762207
    10. 'q' → logprob: -9.442540168762207

Token 275: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7260599732398987
    2. ' s' → logprob: -0.7260599732398987
    3. ' edges' → logprob: -3.976059913635254
    4. 'edges' → logprob: -4.601059913635254
    5. ' (' → logprob: -7.476059913635254
    6. 'for' → logprob: -7.601059913635254
    7. ' for' → logprob: -7.851059913635254
    8. '_s' → logprob: -7.976059913635254
    9. '(s' → logprob: -8.351059913635254
    10. '0' → logprob: -8.351059913635254

Token 276: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1564228534698486
    2. ',' → logprob: -1.2814228534698486
    3. '   ' → logprob: -1.6564228534698486
    4. ' for' → logprob: -1.7814228534698486
    5. ' ,' → logprob: -4.0314226150512695
    6. ']' → logprob: -4.4064226150512695
    7. '][' → logprob: -5.0314226150512695
    8. ')' → logprob: -6.1564226150512695
    9. ',
' → logprob: -6.2814226150512695
    10. 'edges' → logprob: -6.9064226150512695

Token 277: ' speed' (ID: 7733)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6925200819969177
    2. 'for' → logprob: -0.9425200819969177
    3. '0' → logprob: -3.0675201416015625
    4. 'prev' → logprob: -3.3175201416015625
    5. '   ' → logprob: -4.5675201416015625
    6. ' ' → logprob: -5.1925201416015625
    7. ' prev' → logprob: -5.6925201416015625
    8. 'dist' → logprob: -6.5675201416015625
    9. ',' → logprob: -6.9425201416015625
    10. 'edges' → logprob: -7.4425201416015625

Token 278: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001778353238478303
    2. ',' → logprob: -7.0017781257629395
    3. ' =' → logprob: -7.6267781257629395
    4. '1' → logprob: -8.001778602600098
    5. ' ' → logprob: -11.751778602600098
    6. '   ' → logprob: -11.876778602600098
    7. ' ,' → logprob: -12.001778602600098
    8. 's' → logprob: -12.501778602600098
    9. ']=' → logprob: -12.626778602600098
    10. '==' → logprob: -12.626778602600098

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.000005722045898
    4. '=' → logprob: -17.8750057220459
    5. '   ' → logprob: -19.1250057220459
    6. '' → logprob: -19.6250057220459
    7. '```' → logprob: -20.0000057220459
    8. '１' → logprob: -20.3750057220459
    9. '[' → logprob: -20.5000057220459
    10. '`' → logprob: -20.5625057220459

Token 280: ',' (ID: 11)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.0015077590942383
    2. '   ' → logprob: -1.2515077590942383
    3. 'pq' → logprob: -1.3765077590942383
    4. 'hq' → logprob: -3.3765077590942383
    5. '=' → logprob: -3.7515077590942383
    6. 'q' → logprob: -4.251507759094238
    7. ' =' → logprob: -5.251507759094238
    8. 'h' → logprob: -5.751507759094238
    9. ',' → logprob: -5.751507759094238
    10. ')' → logprob: -6.126507759094238

Token 281: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.09030015766620636
    2. ' prev' → logprob: -2.4653000831604004
    3. '   ' → logprob: -7.3403000831604
    4. '0' → logprob: -7.4653000831604
    5. ' ' → logprob: -9.715300559997559
    6. 'dist' → logprob: -10.590300559997559
    7. ' dist' → logprob: -11.465300559997559
    8. 'for' → logprob: -11.715300559997559
    9. '  ' → logprob: -12.090300559997559
    10. '	prev' → logprob: -12.340300559997559

Token 282: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.0045817880891263485
    2. '=' → logprob: -5.629581928253174
    3. 'city' → logprob: -7.379581928253174
    4. '_' → logprob: -8.504581451416016
    5. '_=' → logprob: -9.754581451416016
    6. ' =' → logprob: -10.629581451416016
    7. '=_' → logprob: -11.129581451416016
    8. ' city' → logprob: -11.129581451416016
    9. '0' → logprob: -11.254581451416016
    10. ' ' → logprob: -11.754581451416016

Token 283: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003869070205837488
    2. '=s' → logprob: -6.25386905670166
    3. ',' → logprob: -6.87886905670166
    4. '0' → logprob: -7.87886905670166
    5. ' =' → logprob: -8.00386905670166
    6. ']=' → logprob: -9.87886905670166
    7. ',s' → logprob: -10.37886905670166
    8. 's' → logprob: -10.50386905670166
    9. '=[]' → logprob: -11.37886905670166
    10. '=[' → logprob: -11.62886905670166

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.215330409351736e-05
    2. ' ' → logprob: -10.125041961669922
    3. 's' → logprob: -13.125041961669922
    4. ' s' → logprob: -18.125041961669922
    5. '۰' → logprob: -19.750041961669922
    6. '   ' → logprob: -20.500041961669922
    7. '```' → logprob: -21.000041961669922
    8. 'g' → logprob: -21.125041961669922
    9. '  ' → logprob: -21.375041961669922
    10. ' ' → logprob: -21.437541961669922

Token 285: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1410868167877197
    2. '   ' → logprob: -1.1410868167877197
    3. 'dist' → logprob: -1.3910868167877197
    4. 'heap' → logprob: -2.6410868167877197
    5. 'pq' → logprob: -3.8910868167877197
    6. 'for' → logprob: -5.141086578369141
    7. '    
' → logprob: -5.141086578369141
    8. ')' → logprob: -6.641086578369141
    9. ',' → logprob: -6.891086578369141
    10. ' for' → logprob: -7.016086578369141

Token 286: ' dist' (ID: 3601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5029000639915466
    2. '   ' → logprob: -1.7529001235961914
    3. 'dist' → logprob: -2.3779001235961914
    4. 'for' → logprob: -3.1279001235961914
    5. 'pq' → logprob: -3.7529001235961914
    6. 'hq' → logprob: -3.8779001235961914
    7. ' heap' → logprob: -4.127900123596191
    8. ' for' → logprob: -4.627900123596191
    9. 'h' → logprob: -5.127900123596191
    10. 'import' → logprob: -5.877900123596191

Token 287: '=' (ID: 28)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0005175283877179027
    2. 's' → logprob: -8.375517845153809
    3. '][' → logprob: -9.500517845153809
    4. '=s' → logprob: -9.750517845153809
    5. '   ' → logprob: -10.125517845153809
    6. '=' → logprob: -10.375517845153809
    7. '
' → logprob: -10.625517845153809
    8. '[' → logprob: -10.875517845153809
    9. ' =' → logprob: -11.750517845153809
    10. ']' → logprob: -11.875517845153809

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018593525514006615
    2. 's' → logprob: -4.3935933113098145
    3. '[s' → logprob: -5.2685933113098145
    4. ' ' → logprob: -7.3935933113098145
    5. '[' → logprob: -8.643593788146973
    6. '   ' → logprob: -10.143593788146973
    7. ' s' → logprob: -10.643593788146973
    8. '
' → logprob: -11.393593788146973
    9. '```' → logprob: -11.768593788146973
    10. '(s' → logprob: -12.268593788146973

Token 289: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07112167030572891
    2. 'heap' → logprob: -3.6961216926574707
    3. 'dist' → logprob: -4.071121692657471
    4. '
' → logprob: -4.571121692657471
    5. 'pq' → logprob: -4.821121692657471
    6. 'for' → logprob: -5.446121692657471
    7. 'hq' → logprob: -7.071121692657471
    8. '    
' → logprob: -7.071121692657471
    9. 'q' → logprob: -7.196121692657471
    10. 'import' → logprob: -7.446121692657471

Token 290: ' Will' (ID: 6835)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9126082062721252
    2. '   ' → logprob: -1.0376081466674805
    3. 'heap' → logprob: -1.6626081466674805
    4. '
' → logprob: -3.0376081466674805
    5. 'pq' → logprob: -6.1626081466674805
    6. ' heap' → logprob: -7.1626081466674805
    7. 'import' → logprob: -7.1626081466674805
    8. '    
' → logprob: -7.2876081466674805
    9. ' dist' → logprob: -7.4126081466674805
    10. 'for' → logprob: -7.4126081466674805

Token 291: ' relax' (ID: 11424)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1414378881454468
    2. 'heap' → logprob: -1.1414378881454468
    3. 'push' → logprob: -1.5164378881454468
    4. 'he' → logprob: -2.8914380073547363
    5. 'continue' → logprob: -3.6414380073547363
    6. ' heap' → logprob: -4.391438007354736
    7. 'import' → logprob: -4.516438007354736
    8. '   ' → logprob: -4.891438007354736
    9. 'append' → logprob: -5.141438007354736
    10. ' push' → logprob: -5.516438007354736

Token 292: ' neighbors' (ID: 31655)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5448430180549622
    2. 'dist' → logprob: -1.1698429584503174
    3. 'heap' → logprob: -2.7948429584503174
    4. 'import' → logprob: -4.1698431968688965
    5. '
' → logprob: -4.2948431968688965
    6. ',' → logprob: -5.4198431968688965
    7. '(heap' → logprob: -5.9198431968688965
    8. '    
' → logprob: -6.6698431968688965
    9. 's' → logprob: -6.7948431968688965
    10. ',
' → logprob: -7.1698431968688965

Token 293: ' accordingly' (ID: 44041)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.36926689743995667
    2. '   ' → logprob: -1.4942668676376343
    3. 'heap' → logprob: -3.244266986846924
    4. '
' → logprob: -3.369266986846924
    5. '    
' → logprob: -5.494266986846924
    6. 'pq' → logprob: -5.744266986846924
    7. 'for' → logprob: -6.994266986846924
    8. '```' → logprob: -7.619266986846924
    9. '  
' → logprob: -7.869266986846924
    10. ',' → logprob: -7.994266986846924

Token 294: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09260737150907516
    2. '   ' → logprob: -2.592607259750366
    3. 'heap' → logprob: -4.842607498168945
    4. '
' → logprob: -5.842607498168945
    5. 'pq' → logprob: -6.467607498168945
    6. '    
' → logprob: -7.717607498168945
    7. 'for' → logprob: -8.217607498168945
    8. ' dist' → logprob: -9.092607498168945
    9. '```' → logprob: -9.092607498168945
    10. 'import' → logprob: -10.092607498168945

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3218890130519867
    2. 'dist' → logprob: -1.321889042854309
    3. 'heap' → logprob: -5.4468889236450195
    4. '    
' → logprob: -6.4468889236450195
    5. '```' → logprob: -6.8218889236450195
    6. '
' → logprob: -7.4468889236450195
    7. ' dist' → logprob: -8.32188892364502
    8. ' 
' → logprob: -8.94688892364502
    9. '	dist' → logprob: -9.07188892364502
    10. '  
' → logprob: -9.07188892364502

Token 296: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0691620334982872
    2. '   ' → logprob: -2.819162130355835
    3. 'heap' → logprob: -5.194161891937256
    4. '
' → logprob: -7.694161891937256
    5. 'pq' → logprob: -8.194162368774414
    6. '```' → logprob: -8.194162368774414
    7. ' dist' → logprob: -8.194162368774414
    8. '    
' → logprob: -8.819162368774414
    9. 'for' → logprob: -10.569162368774414
    10. 'while' → logprob: -10.944162368774414

Token 297: ' Actually' (ID: 50557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17051418125629425
    2. 'heap' → logprob: -1.9205142259597778
    3. 'pq' → logprob: -5.170514106750488
    4. '   ' → logprob: -5.670514106750488
    5. 'import' → logprob: -7.920514106750488
    6. 'hq' → logprob: -8.420514106750488
    7. '```' → logprob: -8.670514106750488
    8. 'h' → logprob: -9.045514106750488
    9. ' dist' → logprob: -9.420514106750488
    10. 'queue' → logprob: -10.045514106750488

Token 298: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04532434046268463
    2. ' dist' → logprob: -3.4203243255615234
    3. '    ' → logprob: -4.920324325561523
    4. '
' → logprob: -6.295324325561523
    5. '   ' → logprob: -6.545324325561523
    6. ',' → logprob: -8.045324325561523
    7. ' ,' → logprob: -9.045324325561523
    8. '_dist' → logprob: -9.045324325561523
    9. '    
' → logprob: -9.545324325561523
    10. ' 
' → logprob: -9.545324325561523

Token 299: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14922359585762024
    2. ' dist' → logprob: -2.649223566055298
    3. 'for' → logprob: -3.649223566055298
    4. 'heap' → logprob: -3.649223566055298
    5. ' for' → logprob: -5.024223804473877
    6. 'import' → logprob: -5.399223804473877
    7. ' heap' → logprob: -5.649223804473877
    8. '   ' → logprob: -7.774223804473877
    9. '#' → logprob: -8.024223327636719
    10. '
' → logprob: -8.899223327636719

Token 300: ' include' (ID: 3931)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07446827739477158
    2. 'continue' → logprob: -3.4494683742523193
    3. 'start' → logprob: -4.57446813583374
    4. 'avoid' → logprob: -4.57446813583374
    5. 'initialize' → logprob: -5.07446813583374
    6. 'd' → logprob: -6.32446813583374
    7. ' avoid' → logprob: -6.57446813583374
    8. 'push' → logprob: -6.69946813583374
    9. '   ' → logprob: -6.94946813583374
    10. ' continue' → logprob: -7.07446813583374

Token 301: ' speed' (ID: 7733)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7197878956794739
    2. 'dist' → logprob: -1.594787836074829
    3. ' the' → logprob: -2.344787836074829
    4. 's' → logprob: -2.719787836074829
    5. ' all' → logprob: -3.594787836074829
    6. 'prev' → logprob: -3.594787836074829
    7. ' s' → logprob: -3.844787836074829
    8. 'all' → logprob: -3.844787836074829
    9. 'initial' → logprob: -3.969787836074829
    10. '
' → logprob: -5.094788074493408

Token 302: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012095170095562935
    2. ',' → logprob: -4.887094974517822
    3. ' =' → logprob: -6.262094974517822
    4. ')' → logprob: -7.762094974517822
    5. '=[' → logprob: -7.762094974517822
    6. '   ' → logprob: -8.38709545135498
    7. ']' → logprob: -8.51209545135498
    8. ' ,' → logprob: -8.63709545135498
    9. ']=' → logprob: -8.63709545135498
    10. '),' → logprob: -8.88709545135498

Token 303: ' arrivals' (ID: 126339)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49246492981910706
    2. 'start' → logprob: -1.9924649000167847
    3. 's' → logprob: -2.492465019226074
    4. 'the' → logprob: -2.992465019226074
    5. ' ' → logprob: -3.367465019226074
    6. '1' → logprob: -3.367465019226074
    7. ' s' → logprob: -4.367465019226074
    8. 'prev' → logprob: -4.617465019226074
    9. 'edges' → logprob: -4.617465019226074
    10. ' start' → logprob: -6.117465019226074

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0668532848358154
    2. '   ' → logprob: -1.4418532848358154
    3. '):' → logprob: -2.1918532848358154
    4. ':' → logprob: -2.3168532848358154
    5. '=' → logprob: -2.8168532848358154
    6. ')' → logprob: -3.3168532848358154
    7. '):
' → logprob: -3.8168532848358154
    8. ']' → logprob: -4.0668535232543945
    9. ',
' → logprob: -4.5668535232543945
    10. '[' → logprob: -4.6918535232543945

Token 305: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.508030116558075
    2. ' dist' → logprob: -1.6330301761627197
    3. '   ' → logprob: -2.6330301761627197
    4. ' for' → logprob: -3.1330301761627197
    5. 'for' → logprob: -3.3830301761627197
    6. 'heap' → logprob: -3.3830301761627197
    7. ' heap' → logprob: -4.758029937744141
    8. 'import' → logprob: -5.133029937744141
    9. '
' → logprob: -6.133029937744141
    10. ' import' → logprob: -7.133029937744141

Token 306: ' must' (ID: 2804)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43651023507118225
    2. 'continue' → logprob: -1.5615102052688599
    3. 'push' → logprob: -2.6865103244781494
    4. '   ' → logprob: -3.3115103244781494
    5. ' continue' → logprob: -4.43651008605957
    6. 'initialize' → logprob: -5.31151008605957
    7. 'need' → logprob: -5.43651008605957
    8. ' need' → logprob: -5.68651008605957
    9. ' can' → logprob: -5.93651008605957
    10. 'should' → logprob: -6.06151008605957

Token 307: ' push' (ID: 9349)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13991670310497284
    2. 'set' → logprob: -2.5149166584014893
    3. 'initialize' → logprob: -3.3899166584014893
    4. '   ' → logprob: -4.764916896820068
    5. 'push' → logprob: -6.389916896820068
    6. ' set' → logprob: -6.639916896820068
    7. ' initialize' → logprob: -6.889916896820068
    8. 'continue' → logprob: -7.139916896820068
    9. 'for' → logprob: -7.139916896820068
    10. ' dist' → logprob: -7.139916896820068

Token 308: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3903051018714905
    2. '(s' → logprob: -1.6403050422668457
    3. ' (' → logprob: -2.7653050422668457
    4. '(' → logprob: -3.8903050422668457
    5. '(heap' → logprob: -4.015305042266846
    6. 'dist' → logprob: -4.765305042266846
    7. 'heap' → logprob: -4.765305042266846
    8. 'import' → logprob: -4.890305042266846
    9. '(dist' → logprob: -6.890305042266846
    10. ' heap' → logprob: -7.140305042266846

Token 309: ' dummy' (ID: 34516)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.031337082386016846
    2. 'ny' → logprob: -3.781337022781372
    3. 'heap' → logprob: -6.281337261199951
    4. '(s' → logprob: -7.031337261199951
    5. ' tuple' → logprob: -7.031337261199951
    6. 'pp' → logprob: -7.531337261199951
    7. ' heap' → logprob: -7.656337261199951
    8. 'state' → logprob: -7.656337261199951
    9. 'tuple' → logprob: -8.031336784362793
    10. 'dd' → logprob: -8.656336784362793

Token 310: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.20705825090408325
    2. ' state' → logprob: -2.9570581912994385
    3. 'token' → logprob: -3.0820581912994385
    4. ' (' → logprob: -3.5820581912994385
    5. '(' → logprob: -3.8320581912994385
    6. 'node' → logprob: -4.332058429718018
    7. 'dist' → logprob: -4.832058429718018
    8. ' token' → logprob: -4.957058429718018
    9. ' node' → logprob: -5.457058429718018
    10. '_state' → logprob: -6.957058429718018

Token 311: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36322712898254395
    2. 'dist' → logprob: -1.363227128982544
    3. '
' → logprob: -4.363226890563965
    4. 'heap' → logprob: -4.488226890563965
    5. 's' → logprob: -4.988226890563965
    6. '(s' → logprob: -4.988226890563965
    7. 'while' → logprob: -6.113226890563965
    8. 'import' → logprob: -6.238226890563965
    9. '    
' → logprob: -6.488226890563965
    10. '(' → logprob: -6.863226890563965

Token 312: ' s' (ID: 265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.32648879289627075
    2. 's' → logprob: -1.576488733291626
    3. '(s' → logprob: -2.826488733291626
    4. ' (' → logprob: -5.451488971710205
    5. ' dist' → logprob: -5.576488971710205
    6. ' s' → logprob: -6.076488971710205
    7. '   ' → logprob: -6.826488971710205
    8. '(' → logprob: -7.826488971710205
    9. '(dist' → logprob: -8.201488494873047
    10. 'distance' → logprob: -8.451488494873047

Token 313: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45984163880348206
    2. '   ' → logprob: -1.4598416090011597
    3. '.push' → logprob: -3.209841728210449
    4. ',' → logprob: -3.459841728210449
    5. ' =' → logprob: -3.709841728210449
    6. '
' → logprob: -5.084841728210449
    7. ' dist' → logprob: -5.709841728210449
    8. '.dist' → logprob: -5.709841728210449
    9. '.append' → logprob: -6.084841728210449
    10. '=' → logprob: -6.084841728210449

Token 314: ' speed' (ID: 7733)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21869350969791412
    2. '0' → logprob: -1.718693494796753
    3. 'distance' → logprob: -4.843693733215332
    4. 'speed' → logprob: -5.843693733215332
    5. ' dist' → logprob: -6.093693733215332
    6. 'city' → logprob: -6.593693733215332
    7. '1' → logprob: -6.718693733215332
    8. '   ' → logprob: -7.468693733215332
    9. 'prev' → logprob: -8.718693733215332
    10. 's' → logprob: -8.968693733215332

Token 315: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00047690561041235924
    2. ' =' → logprob: -8.250476837158203
    3. '0' → logprob: -8.500476837158203
    4. ' ' → logprob: -11.875476837158203
    5. '1' → logprob: -13.250476837158203
    6. '   ' → logprob: -14.250476837158203
    7. '=int' → logprob: -14.500476837158203
    8. '=
' → logprob: -14.750476837158203
    9. '==' → logprob: -15.125476837158203
    10. '```' → logprob: -15.125476837158203

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011886836728081107
    2. '1' → logprob: -6.7511887550354
    3. ' ' → logprob: -11.001188278198242
    4. '```' → logprob: -14.501188278198242
    5. '   ' → logprob: -15.251188278198242
    6. '  ' → logprob: -15.438688278198242
    7. '`' → logprob: -15.813688278198242
    8. '=' → logprob: -16.001188278198242
    9. '-' → logprob: -16.438688278198242
    10. '[' → logprob: -16.751188278198242

Token 317: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8603013753890991
    2. 'dist' → logprob: -1.2353013753890991
    3. '   ' → logprob: -1.9853013753890991
    4. ',' → logprob: -2.6103014945983887
    5. ')' → logprob: -3.1103014945983887
    6. ',
' → logprob: -5.360301494598389
    7. ')
' → logprob: -5.485301494598389
    8. '    
' → logprob: -5.985301494598389
    9. ' dist' → logprob: -6.235301494598389
    10. ':' → logprob: -6.235301494598389

Token 318: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.03157122805714607
    2. ' prev' → logprob: -4.031571388244629
    3. '0' → logprob: -4.406571388244629
    4. 'dist' → logprob: -7.531571388244629
    5. 'city' → logprob: -9.281571388244629
    6. '   ' → logprob: -9.281571388244629
    7. 'cost' → logprob: -9.406571388244629
    8. ' ' → logprob: -9.531571388244629
    9. 'distance' → logprob: -9.656571388244629
    10. ' dist' → logprob: -10.281571388244629

Token 319: '=' (ID: 28)
  Prédit: '_city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.010322241112589836
    2. '_' → logprob: -4.635322093963623
    3. ' _' → logprob: -9.135322570800781
    4. '=' → logprob: -9.135322570800781
    5. '_speed' → logprob: -9.260322570800781
    6. '=_' → logprob: -9.385322570800781
    7. '_token' → logprob: -10.385322570800781
    8. 'ocity' → logprob: -10.385322570800781
    9. 'city' → logprob: -10.385322570800781
    10. '_=' → logprob: -10.885322570800781

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -17.875051498413086
    4. 's' → logprob: -18.000051498413086
    5. '   ' → logprob: -18.750051498413086
    6. '  ' → logprob: -19.875051498413086
    7. '=' → logprob: -20.000051498413086
    8. '۰' → logprob: -20.375051498413086
    9. '_' → logprob: -20.500051498413086
    10. ')' → logprob: -20.750051498413086

Token 321: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04141959547996521
    2. '   ' → logprob: -3.916419506072998
    3. 'dist' → logprob: -4.166419506072998
    4. '    
' → logprob: -6.041419506072998
    5. '
' → logprob: -8.166419982910156
    6. ')' → logprob: -8.166419982910156
    7. '  
' → logprob: -8.291419982910156
    8. '(dist' → logprob: -8.416419982910156
    9. ' dist' → logprob: -8.541419982910156
    10. ')
' → logprob: -8.666419982910156

Token 322: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04030727595090866
    2. ' dist' → logprob: -3.7903072834014893
    3. 'heap' → logprob: -4.54030704498291
    4. '0' → logprob: -5.41530704498291
    5. ' heap' → logprob: -7.54030704498291
    6. 'he' → logprob: -7.79030704498291
    7. 'distance' → logprob: -8.04030704498291
    8. '
' → logprob: -8.66530704498291
    9. '   ' → logprob: -8.91530704498291
    10. 'push' → logprob: -9.41530704498291

Token 323: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007661986164748669
    2. ' =' → logprob: -4.882661819458008
    3. '0' → logprob: -10.132661819458008
    4. ' ' → logprob: -12.007661819458008
    5. '   ' → logprob: -13.257661819458008
    6. '+=' → logprob: -13.507661819458008
    7. ',' → logprob: -13.507661819458008
    8. ')' → logprob: -13.757661819458008
    9. '=
' → logprob: -14.132661819458008
    10. '=-' → logprob: -14.257661819458008

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.750003814697266
    4. '{' → logprob: -19.000003814697266
    5. 'INF' → logprob: -19.000003814697266
    6. '[' → logprob: -19.625003814697266
    7. '
' → logprob: -19.875003814697266
    8. '-' → logprob: -20.000003814697266
    9. ' ' → logprob: -20.125003814697266
    10. '```' → logprob: -20.375003814697266

Token 325: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1801483929157257
    2. 'dist' → logprob: -2.5551483631134033
    3. 'heap' → logprob: -3.1801483631134033
    4. '   ' → logprob: -4.055148601531982
    5. '    
' → logprob: -5.555148601531982
    6. '
' → logprob: -5.805148601531982
    7. '(heap' → logprob: -5.805148601531982
    8. '  
' → logprob: -6.430148601531982
    9. ' =' → logprob: -6.430148601531982
    10. 'import' → logprob: -6.555148601531982

Token 326: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29070016741752625
    2. 'dist' → logprob: -1.9157001972198486
    3. 'heap' → logprob: -3.1657001972198486
    4. ')' → logprob: -3.5407001972198486
    5. ' dist' → logprob: -4.5406999588012695
    6. '
' → logprob: -4.7906999588012695
    7. ')
' → logprob: -5.1656999588012695
    8. '0' → logprob: -5.9156999588012695
    9. ' heap' → logprob: -6.4156999588012695
    10. '    
' → logprob: -6.6656999588012695

Token 327: ' from' (ID: 591)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.024766968563199043
    2. '   ' → logprob: -4.39976692199707
    3. ' heap' → logprob: -5.02476692199707
    4. 'dist' → logprob: -5.52476692199707
    5. '
' → logprob: -6.77476692199707
    6. 'import' → logprob: -8.02476692199707
    7. 'pq' → logprob: -9.52476692199707
    8. 'he' → logprob: -11.14976692199707
    9. 'queue' → logprob: -11.64976692199707
    10. '```' → logprob: -11.64976692199707

Token 328: ' s' (ID: 265)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.023930100724101067
    2. 'dist' → logprob: -4.523930072784424
    3. '   ' → logprob: -5.273930072784424
    4. 'pq' → logprob: -5.398930072784424
    5. ' heap' → logprob: -6.773930072784424
    6. 'hq' → logprob: -7.148930072784424
    7. '```' → logprob: -7.273930072784424
    8. '
' → logprob: -8.773930549621582
    9. 'queue' → logprob: -9.398930549621582
    10. 'q' → logprob: -9.523930549621582

Token 329: ' generate' (ID: 10419)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5808231830596924
    2. '   ' → logprob: -1.8308231830596924
    3. ',' → logprob: -2.3308231830596924
    4. 'import' → logprob: -2.7058231830596924
    5. '
' → logprob: -3.7058231830596924
    6. 'heap' → logprob: -4.455822944641113
    7. '.' → logprob: -4.955822944641113
    8. ')' → logprob: -4.955822944641113
    9. ' dist' → logprob: -5.205822944641113
    10. '[' → logprob: -5.330822944641113

Token 330: ' speed' (ID: 7733)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7975376844406128
    2. '(' → logprob: -1.9225376844406128
    3. '   ' → logprob: -2.1725378036499023
    4. ' heap' → logprob: -2.7975378036499023
    5. '[(' → logprob: -2.9225378036499023
    6. 'dist' → logprob: -2.9225378036499023
    7. '0' → logprob: -3.6725378036499023
    8. 'states' → logprob: -3.9225378036499023
    9. ' (' → logprob: -4.047537803649902
    10. 'for' → logprob: -4.547537803649902

Token 331: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034594216849654913
    2. '0' → logprob: -6.628459453582764
    3. ' =' → logprob: -6.753459453582764
    4. 's' → logprob: -7.753459453582764
    5. '1' → logprob: -8.878458976745605
    6. '   ' → logprob: -9.128458976745605
    7. ' ' → logprob: -9.503458976745605
    8. 'states' → logprob: -9.628458976745605
    9. ' states' → logprob: -10.503458976745605
    10. ']=' → logprob: -10.628458976745605

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.25003719329834
    3. '0' → logprob: -13.37503719329834
    4. '   ' → logprob: -15.87503719329834
    5. '=' → logprob: -16.625038146972656
    6. '```' → logprob: -17.062538146972656
    7. '[' → logprob: -17.687538146972656
    8. '' → logprob: -17.750038146972656
    9. '  ' → logprob: -17.875038146972656
    10. '+' → logprob: -17.875038146972656

Token 333: ' edges' (ID: 22569)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2719743251800537
    2. '   ' → logprob: -1.2719743251800537
    3. 'heap' → logprob: -2.1469743251800537
    4. ',' → logprob: -2.3969743251800537
    5. 'q' → logprob: -2.6469743251800537
    6. ' =' → logprob: -3.0219743251800537
    7. 'dist' → logprob: -3.2719743251800537
    8. '(heap' → logprob: -4.021974563598633
    9. '=' → logprob: -4.521974563598633
    10. ')' → logprob: -5.021974563598633

Token 334: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5710623264312744
    2. '   ' → logprob: -1.6960623264312744
    3. 'heap' → logprob: -1.9460623264312744
    4. 'dist' → logprob: -2.6960623264312744
    5. 'pq' → logprob: -3.9460623264312744
    6. '    
' → logprob: -5.196062088012695
    7. 'q' → logprob: -5.321062088012695
    8. 'import' → logprob: -5.571062088012695
    9. ' dist' → logprob: -6.821062088012695
    10. ' heap' → logprob: -7.071062088012695

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1127297505736351
    2. 'heap' → logprob: -2.737729787826538
    3. 'dist' → logprob: -3.612729787826538
    4. '    
' → logprob: -4.987729549407959
    5. '
' → logprob: -5.612729549407959
    6. '  
' → logprob: -6.862729549407959
    7. ' 
' → logprob: -6.987729549407959
    8. 'pq' → logprob: -7.737729549407959
    9. 'import' → logprob: -8.237730026245117
    10. ')' → logprob: -8.237730026245117

Token 336: ' pq' (ID: 65424)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09348490089178085
    2. '
' → logprob: -2.468484878540039
    3. '   ' → logprob: -7.093484878540039
    4. '```' → logprob: -7.218484878540039
    5. 'heap' → logprob: -7.218484878540039
    6. '    
' → logprob: -7.593484878540039
    7. '(
' → logprob: -8.218484878540039
    8. ' dist' → logprob: -8.343484878540039
    9. ' 
' → logprob: -8.718484878540039
    10. '  
' → logprob: -8.968484878540039

Token 337: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9065641760826111
    2. '=[]' → logprob: -1.0315642356872559
    3. ' =' → logprob: -1.7815642356872559
    4. '=[' → logprob: -2.656564235687256
    5. '=[]
' → logprob: -7.531564235687256
    6. '=[
' → logprob: -7.906564235687256
    7. ' =[' → logprob: -9.406563758850098
    8. '=[],' → logprob: -10.781563758850098
    9. '=[]
' → logprob: -10.781563758850098
    10. '.append' → logprob: -11.906563758850098

Token 338: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34487399458885193
    2. 'heap' → logprob: -1.4698740243911743
    3. '(heap' → logprob: -3.2198739051818848
    4. 'he' → logprob: -4.344873905181885
    5. 'dist' → logprob: -5.719873905181885
    6. ' heap' → logprob: -5.719873905181885
    7. '   ' → logprob: -7.469873905181885
    8. '(' → logprob: -7.469873905181885
    9. '```' → logprob: -8.219874382019043
    10. '.heap' → logprob: -9.094874382019043

Token 339: ' for' (ID: 395)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.03320344537496567
    2. 'dist' → logprob: -3.533203363418579
    3. '   ' → logprob: -6.658203601837158
    4. 'import' → logprob: -6.908203601837158
    5. ' heap' → logprob: -7.283203601837158
    6. '
' → logprob: -8.533203125
    7. 'he' → logprob: -8.908203125
    8. '    
' → logprob: -9.033203125
    9. ' dist' → logprob: -11.033203125
    10. '```' → logprob: -12.783203125

Token 340: ' v' (ID: 323)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5927240252494812
    2. ' neighbor' → logprob: -1.592724084854126
    3. ' v' → logprob: -3.092724084854126
    4. 'edge' → logprob: -3.717724084854126
    5. 'v' → logprob: -3.717724084854126
    6. ' (' → logprob: -4.092723846435547
    7. ' edge' → logprob: -4.217723846435547
    8. ' next' → logprob: -4.467723846435547
    9. '(ne' → logprob: -4.467723846435547
    10. '(' → logprob: -4.467723846435547

Token 341: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6909679770469666
    2. 'in' → logprob: -1.1909680366516113
    3. ',v' → logprob: -2.1909680366516113
    4. ',' → logprob: -2.5659680366516113
    5. ' ' → logprob: -6.315968036651611
    6. ' ,' → logprob: -6.440968036651611
    7. ',in' → logprob: -7.440968036651611
    8. '_in' → logprob: -7.690968036651611
    9. ',_' → logprob: -8.190967559814453
    10. '   ' → logprob: -8.315967559814453

Token 342: ' range' (ID: 3352)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.024263858795166016
    2. ' edges' → logprob: -3.774263858795166
    3. 'range' → logprob: -7.399263858795166
    4. '[' → logprob: -8.274263381958008
    5. ' range' → logprob: -9.524263381958008
    6. '(edges' → logprob: -10.149263381958008
    7. '   ' → logprob: -11.524263381958008
    8. '[(' → logprob: -11.774263381958008
    9. ' ' → logprob: -12.649263381958008
    10. ' [' → logprob: -13.149263381958008

Token 343: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5415956974029541
    2. '(' → logprob: -0.9165956974029541
    3. '(n' → logprob: -4.041595458984375
    4. '(m' → logprob: -7.666595458984375
    5. 'len' → logprob: -8.291595458984375
    6. '(s' → logprob: -12.166595458984375
    7. '1' → logprob: -12.916595458984375
    8. '[len' → logprob: -13.916595458984375
    9. '(l' → logprob: -14.041595458984375
    10. 'n' → logprob: -14.291595458984375

Token 344: '31' (ID: 2911)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20168912410736084
    2. 'len' → logprob: -1.9516891241073608
    3. 'n' → logprob: -4.45168924331665
    4. '(' → logprob: -4.45168924331665
    5. '(len' → logprob: -4.70168924331665
    6. '31' → logprob: -5.70168924331665
    7. 'm' → logprob: -6.07668924331665
    8. '(n' → logprob: -6.45168924331665
    9. '0' → logprob: -7.57668924331665
    10. '(m' → logprob: -8.326688766479492

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029830439016222954
    2. '):
' → logprob: -3.5298304557800293
    3. ' ):' → logprob: -9.779829978942871
    4. '):
' → logprob: -11.279829978942871
    5. ')' → logprob: -11.779829978942871
    6. '   ' → logprob: -13.529829978942871
    7. ' ):
' → logprob: -14.279829978942871
    8. ':' → logprob: -15.029829978942871
    9. '):

' → logprob: -15.154829978942871
    10. '}:' → logprob: -15.654829978942871

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03827236592769623
    2. '   ' → logprob: -3.5382723808288574
    3. ':' → logprob: -5.038272380828857
    4. '<|end|>' → logprob: -7.038272380828857
    5. ':
' → logprob: -8.1632719039917
    6. ' :' → logprob: -9.1632719039917
    7. ',' → logprob: -9.1632719039917
    8. ' if' → logprob: -9.1632719039917
    9. '    ' → logprob: -9.5382719039917
    10. '):
' → logprob: -9.7882719039917

Token 347: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3777765929698944
    2. '       ' → logprob: -2.252776622772217
    3. 'for' (adapté à ' for') → logprob: -2.377776622772217
    4. '           ' → logprob: -2.627776622772217
    5. ' for' → logprob: -3.127776622772217
    6. ' ' → logprob: -7.502776622772217
    7. '	for' → logprob: -9.252776145935059
    8. '     ' → logprob: -11.252776145935059
    9. '               ' → logprob: -11.752776145935059
    10. '	   ' → logprob: -12.127776145935059

Token 348: ' p' (ID: 275)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.704206109046936
    2. '_' → logprob: -1.829206109046936
    3. ' range' → logprob: -2.3292059898376465
    4. ' j' → logprob: -2.4542059898376465
    5. ' city' → logprob: -2.7042059898376465
    6. ' prev' → logprob: -2.7042059898376465
    7. 'prev' → logprob: -2.8292059898376465
    8. 'c' → logprob: -3.3292059898376465
    9. ' c' → logprob: -3.3292059898376465
    10. 'range' → logprob: -3.3292059898376465

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024178219959139824
    2. 'in' → logprob: -3.7741782665252686
    3. 'n' → logprob: -8.274178504943848
    4. 'v' → logprob: -8.524178504943848
    5. ' ' → logprob: -9.149178504943848
    6. '_' → logprob: -9.149178504943848
    7. '_in' → logprob: -9.774178504943848
    8. '<|end|>' → logprob: -10.524178504943848
    9. '=' → logprob: -10.774178504943848
    10. '0' → logprob: -11.024178504943848

Token 350: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5232778191566467
    2. 'range' → logprob: -0.8982778191566467
    3. '(range' → logprob: -9.14827823638916
    4. 'n' → logprob: -11.14827823638916
    5. 'in' → logprob: -11.77327823638916
    6. ' in' → logprob: -12.02327823638916
    7. '_range' → logprob: -12.14827823638916
    8. 'ange' → logprob: -12.52327823638916
    9. '   ' → logprob: -12.52327823638916
    10. '	range' → logprob: -13.52327823638916

Token 351: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0029189956840127707
    2. 'n' → logprob: -5.8779191970825195
    3. '(' → logprob: -9.12791919708252
    4. '0' → logprob: -12.87791919708252
    5. '31' → logprob: -14.12791919708252
    6. ' n' → logprob: -15.25291919708252
    7. ' (' → logprob: -15.37791919708252
    8. '   ' → logprob: -15.37791919708252
    9. '[n' → logprob: -15.50291919708252
    10. '(len' → logprob: -15.50291919708252

Token 352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.011373155459296e-05
    2. ' +' → logprob: -10.500030517578125
    3. '+
' → logprob: -13.250030517578125
    4. ')+' → logprob: -15.125030517578125
    5. '1' → logprob: -15.750030517578125
    6. '   ' → logprob: -16.000030517578125
    7. '＋' → logprob: -17.000030517578125
    8. '()+' → logprob: -17.375030517578125
    9. '+)' → logprob: -17.500030517578125
    10. '):
' → logprob: -17.625030517578125

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002100965939462185
    2. '+' → logprob: -8.50020980834961
    3. '   ' → logprob: -13.12520980834961
    4. ' ' → logprob: -13.25020980834961
    5. '2' → logprob: -13.87520980834961
    6. '```' → logprob: -14.75020980834961
    7. ')' → logprob: -15.50020980834961
    8. ',' → logprob: -15.75020980834961
    9. '0' → logprob: -15.75020980834961
    10. '(' → logprob: -16.12520980834961

Token 354: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12781517207622528
    2. '):
' → logprob: -2.1278152465820312
    3. ']:' → logprob: -8.002815246582031
    4. ')' → logprob: -8.877815246582031
    5. '   ' → logprob: -9.002815246582031
    6. '):
' → logprob: -9.127815246582031
    7. ':' → logprob: -9.877815246582031
    8. '       ' → logprob: -10.002815246582031
    9. ']):' → logprob: -10.252815246582031
    10. '[' → logprob: -11.377815246582031

Token 355: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018406514078378677
    2. '   ' → logprob: -4.393406391143799
    3. ':' → logprob: -5.393406391143799
    4. 'dist' → logprob: -8.143406867980957
    5. ' dist' → logprob: -8.518406867980957
    6. ':
' → logprob: -8.768406867980957
    7. '           ' → logprob: -9.018406867980957
    8. '<|end|>' → logprob: -9.393406867980957
    9. '```' → logprob: -9.518406867980957
    10. '	dist' → logprob: -9.518406867980957

Token 356: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0044914777390658855
    2. '   ' → logprob: -6.504491329193115
    3. '               ' → logprob: -6.629491329193115
    4. '           ' → logprob: -7.129491329193115
    5. ' dist' → logprob: -8.129491806030273
    6. '       ' → logprob: -8.129491806030273
    7. '	dist' → logprob: -8.879491806030273
    8. 'for' → logprob: -9.004491806030273
    9. '                   ' → logprob: -12.129491806030273
    10. ' for' → logprob: -13.379491806030273

Token 357: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -8.244413766078651e-05
    2. '[' → logprob: -9.625082015991211
    3. '[n' → logprob: -12.000082015991211
    4. '[v' → logprob: -12.125082015991211
    5. '   ' → logprob: -13.000082015991211
    6. ')[' → logprob: -14.500082015991211
    7. '```' → logprob: -14.625082015991211
    8. '[i' → logprob: -15.250082015991211
    9. ' [' → logprob: -15.250082015991211
    10. '][' → logprob: -15.625082015991211

Token 358: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.860340752406046e-05
    2. ']' → logprob: -9.8750581741333
    3. '[' → logprob: -13.0000581741333
    4. ' ][' → logprob: -13.7500581741333
    5. '[v' → logprob: -13.7500581741333
    6. ')][' → logprob: -14.8750581741333
    7. '][_' → logprob: -15.0000581741333
    8. ']][' → logprob: -15.1250581741333
    9. '"][' → logprob: -15.1250581741333
    10. ''][' → logprob: -15.2500581741333

Token 359: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -13.500001907348633
    3. 'p' → logprob: -17.000001907348633
    4. ' v' → logprob: -17.125001907348633
    5. '1' → logprob: -17.500001907348633
    6. '[v' → logprob: -17.875001907348633
    7. '	v' → logprob: -19.000001907348633
    8. ')v' → logprob: -19.250001907348633
    9. '(v' → logprob: -19.875001907348633
    10. '30' → logprob: -20.375001907348633

Token 360: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010759611177491024
    2. ']' → logprob: -9.500107765197754
    3. ' ][' → logprob: -11.125107765197754
    4. 'p' → logprob: -12.125107765197754
    5. '[p' → logprob: -12.375107765197754
    6. ']=' → logprob: -12.875107765197754
    7. '0' → logprob: -13.500107765197754
    8. '[' → logprob: -14.000107765197754
    9. '=' → logprob: -14.125107765197754
    10. ''][' → logprob: -14.625107765197754

Token 361: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.125
    3. ' p' → logprob: -16.5
    4. '   ' → logprob: -18.375
    5. '           ' → logprob: -20.75
    6. ' ' → logprob: -21.0
    7. '    ' → logprob: -21.375
    8. '<p' → logprob: -21.5
    9. '_p' → logprob: -21.625
    10. '  ' → logprob: -21.875

Token 362: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.04341452941298485
    2. ']' → logprob: -3.29341459274292
    3. '=float' → logprob: -5.54341459274292
    4. '=' → logprob: -6.54341459274292
    5. '=sys' → logprob: -13.918414115905762
    6. ']=(' → logprob: -14.043414115905762
    7. ']={' → logprob: -14.168414115905762
    8. ']=-' → logprob: -14.168414115905762
    9. ' =' → logprob: -14.668414115905762
    10. '']=' → logprob: -14.668414115905762

Token 363: 'INF' (ID: 64358)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0017975156661123037
    2. '0' → logprob: -6.751797676086426
    3. 'INF' → logprob: -8.001797676086426
    4. 'inf' → logprob: -8.376797676086426
    5. ' float' → logprob: -10.376797676086426
    6. 'sys' → logprob: -11.126797676086426
    7. '=float' → logprob: -12.376797676086426
    8. 'math' → logprob: -12.626797676086426
    9. '(float' → logprob: -13.251797676086426
    10. '	float' → logprob: -14.001797676086426

Token 364: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1861875057220459
    2. 'dist' → logprob: -2.436187505722046
    3. '<|end|>' → logprob: -3.061187505722046
    4. '   ' → logprob: -3.436187505722046
    5. '    
' → logprob: -6.686187744140625
    6. '  
' → logprob: -7.186187744140625
    7. ')' → logprob: -8.311187744140625
    8. '	dist' → logprob: -8.811187744140625
    9. ' 
' → logprob: -8.936187744140625
    10. '
' → logprob: -8.936187744140625

Token 365: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008925358764827251
    2. '   ' → logprob: -4.883925437927246
    3. '
' → logprob: -6.883925437927246
    4. ' dist' → logprob: -8.508925437927246
    5. '<|end|>' → logprob: -10.383925437927246
    6. '	dist' → logprob: -10.758925437927246
    7. '    
' → logprob: -11.008925437927246
    8. '```' → logprob: -11.383925437927246
    9. 'Dist' → logprob: -12.133925437927246
    10. '_dist' → logprob: -13.258925437927246

Token 366: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.011187282390892506
    2. '   ' → logprob: -4.5111870765686035
    3. ' dist' → logprob: -9.511187553405762
    4. '	dist' → logprob: -9.886187553405762
    5. 'import' → logprob: -11.636187553405762
    6. 'Dist' → logprob: -13.136187553405762
    7. '```' → logprob: -13.261187553405762
    8. '_dist' → logprob: -14.011187553405762
    9. '    
' → logprob: -14.886187553405762
    10. '.dist' → logprob: -15.261187553405762

Token 367: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -3.173704271830502e-06
    2. 's' → logprob: -13.62500286102295
    3. ' [' → logprob: -13.62500286102295
    4. '[' → logprob: -14.75000286102295
    5. '```' → logprob: -16.250003814697266
    6. '\[' → logprob: -16.375003814697266
    7. '[start' → logprob: -17.750003814697266
    8. '[S' → logprob: -18.375003814697266
    9. '=s' → logprob: -18.625003814697266
    10. ')[' → logprob: -18.625003814697266

Token 368: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028841642197221518
    2. '[' → logprob: -5.877884387969971
    3. ']' → logprob: -9.627883911132812
    4. ' ][' → logprob: -12.002883911132812
    5. '0' → logprob: -12.752883911132812
    6. '   ' → logprob: -13.627883911132812
    7. ']
' → logprob: -14.377883911132812
    8. '```' → logprob: -14.627883911132812
    9. ' ' → logprob: -15.002883911132812
    10. '"][' → logprob: -15.127883911132812

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.375000953674316
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -16.625
    5. '```' → logprob: -19.25
    6. '۰' → logprob: -19.5625
    7. '    ' → logprob: -19.9375
    8. '０' → logprob: -20.25
    9. '00' → logprob: -20.5
    10. 's' → logprob: -20.625

Token 370: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017004783148877323
    2. '[' → logprob: -8.87516975402832
    3. ']' → logprob: -10.87516975402832
    4. ' ][' → logprob: -11.62516975402832
    5. '0' → logprob: -13.37516975402832
    6. ''][' → logprob: -15.50016975402832
    7. '"][' → logprob: -15.75016975402832
    8. '   ' → logprob: -16.25016975402832
    9. ' ' → logprob: -17.37516975402832
    10. '```' → logprob: -17.37516975402832

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '۰' → logprob: -21.375
    4. '   ' → logprob: -22.75
    5. '০' → logprob: -24.125
    6. 's' → logprob: -24.25
    7. '```' → logprob: -24.5
    8. '०' → logprob: -24.75
    9. '<|end|>' → logprob: -24.75
    10. '０' → logprob: -25.125

Token 372: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.03805112838745117
    2. ']' → logprob: -3.288051128387451
    3. '=' → logprob: -11.66305160522461
    4. ' ]' → logprob: -14.66305160522461
    5. ']+=' → logprob: -15.16305160522461
    6. ']=(' → logprob: -16.03805160522461
    7. ')=' → logprob: -16.41305160522461
    8. ']=-' → logprob: -16.91305160522461
    9. '']=' → logprob: -17.28805160522461
    10. ']={' → logprob: -17.78805160522461

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '   ' → logprob: -22.0
    4. '۰' → logprob: -22.875
    5. '```' → logprob: -24.625
    6. '０' → logprob: -24.625
    7. '00' → logprob: -25.0
    8. '=' → logprob: -25.0
    9. '000' → logprob: -25.375
    10. ' ' → logprob: -25.5

Token 374: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20201976597309113
    2. 'heap' → logprob: -1.7020198106765747
    3. 'import' → logprob: -8.077019691467285
    4. ' heap' → logprob: -8.577019691467285
    5. '(heap' → logprob: -9.952019691467285
    6. '
' → logprob: -10.577019691467285
    7. '```' → logprob: -11.077019691467285
    8. '    
' → logprob: -11.702019691467285
    9. '.heap' → logprob: -12.702019691467285
    10. ',' → logprob: -13.202019691467285

Token 375: '0' (ID: 15)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.07104149460792542
    2. 'heap' → logprob: -2.8210415840148926
    3. ' he' → logprob: -4.821041584014893
    4. 'import' → logprob: -7.946041584014893
    5. 'q' → logprob: -8.196041107177734
    6. 'append' → logprob: -9.321041107177734
    7. 'push' → logprob: -9.446041107177734
    8. '
' → logprob: -9.446041107177734
    9. ' heap' → logprob: -10.821041107177734
    10. '```' → logprob: -10.946041107177734

Token 376: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0014972452772781253
    2. 'import' → logprob: -6.876497268676758
    3. '   ' → logprob: -7.751497268676758
    4. ' heap' → logprob: -10.876497268676758
    5. '```' → logprob: -12.001497268676758
    6. '(heap' → logprob: -12.751497268676758
    7. '
' → logprob: -12.876497268676758
    8. 'pq' → logprob: -13.876497268676758
    9. 'he' → logprob: -13.876497268676758
    10. '    
' → logprob: -14.501497268676758

Token 377: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00678796274587512
    2. 'import' → logprob: -5.1317877769470215
    3. '   ' → logprob: -7.1317877769470215
    4. ' heap' → logprob: -10.13178825378418
    5. '```' → logprob: -12.00678825378418
    6. '(heap' → logprob: -12.38178825378418
    7. 'he' → logprob: -12.88178825378418
    8. '_heap' → logprob: -12.88178825378418
    9. '
' → logprob: -13.75678825378418
    10. '.heap' → logprob: -13.75678825378418

Token 378: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.620622712536715e-05
    2. 'import' → logprob: -10.125045776367188
    3. '```' → logprob: -12.625045776367188
    4. ' heap' → logprob: -13.125045776367188
    5. '   ' → logprob: -15.000045776367188
    6. 'he' → logprob: -15.375045776367188
    7. '    
' → logprob: -16.375045776367188
    8. '
' → logprob: -16.375045776367188
    9. 'pq' → logprob: -16.750045776367188
    10. '(heap' → logprob: -17.000045776367188

Token 379: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.700132997939363e-05
    2. '=[]' → logprob: -12.250017166137695
    3. '```' → logprob: -12.750017166137695
    4. '.push' → logprob: -12.750017166137695
    5. '.he' → logprob: -13.250017166137695
    6. 'push' → logprob: -13.500017166137695
    7. 'he' → logprob: -14.250017166137695
    8. '.append' → logprob: -14.375017166137695
    9. 'ify' → logprob: -14.750017166137695
    10. 'app' → logprob: -15.125017166137695

Token 380: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.3902033970225602e-05
    2. '.heap' → logprob: -11.375014305114746
    3. '.push' → logprob: -13.500014305114746
    4. '.' → logprob: -14.125014305114746
    5. ' .' → logprob: -17.00001335144043
    6. 'he' → logprob: -17.37501335144043
    7. '.He' → logprob: -17.62501335144043
    8. '​.' → logprob: -17.62501335144043
    9. '.h' → logprob: -17.87501335144043
    10. ').' → logprob: -18.12501335144043

Token 381: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.749814019713085e-06
    2. 'ap' → logprob: -12.000006675720215
    3. 'pp' → logprob: -14.500006675720215
    4. '```' → logprob: -17.50000762939453
    5. 'push' → logprob: -18.87500762939453
    6. 'a' → logprob: -19.00000762939453
    7. 'ап' → logprob: -19.25000762939453
    8. 'appen' → logprob: -19.50000762939453
    9. '[' → logprob: -19.75000762939453
    10. '(app' → logprob: -20.00000762939453

Token 382: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.007710970006883144
    2. 'q' → logprob: -5.507710933685303
    3. 'uf' → logprob: -6.132710933685303
    4. 'op' → logprob: -6.882710933685303
    5. 'p' → logprob: -8.882711410522461
    6. 'u' → logprob: -9.632711410522461
    7. 'push' → logprob: -9.757711410522461
    8. 'ut' → logprob: -10.007711410522461
    9. 'le' → logprob: -10.257711410522461
    10. 'nd' → logprob: -10.882711410522461

Token 383: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.250001907348633
    3. 'pq' → logprob: -14.625001907348633
    4. ' (' → logprob: -15.000001907348633
    5. '(q' → logprob: -16.125001907348633
    6. '```' → logprob: -16.500001907348633
    7. '(
' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'p' → logprob: -18.375001907348633
    10. '((' → logprob: -19.375001907348633

Token 384: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007065945537760854
    2. '(p' → logprob: -7.750706672668457
    3. '(q' → logprob: -8.375706672668457
    4. 'Q' → logprob: -10.875706672668457
    5. '(s' → logprob: -12.625706672668457
    6. 'pq' → logprob: -12.625706672668457
    7. ' q' → logprob: -13.000706672668457
    8. '	q' → logprob: -13.125706672668457
    9. '[q' → logprob: -13.375706672668457
    10. '   ' → logprob: -13.500706672668457

Token 385: ',(' (ID: 27243)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05790763720870018
    2. '((' → logprob: -3.0579075813293457
    3. ' (' → logprob: -5.182907581329346
    4. '(dist' → logprob: -5.932907581329346
    5. '   ' → logprob: -7.307907581329346
    6. '(s' → logprob: -8.182908058166504
    7. ')' → logprob: -10.682908058166504
    8. ' ' → logprob: -10.807908058166504
    9. '```' → logprob: -11.932908058166504
    10. '([' → logprob: -12.307908058166504

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -18.75
    4. '(' → logprob: -20.25
    5. '```' → logprob: -21.375
    6. ')' → logprob: -21.875
    7. 'dist' → logprob: -22.0
    8. ',' → logprob: -22.5
    9. '
' → logprob: -22.75
    10. '۰' → logprob: -22.875

Token 387: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20280084013938904
    2. ',s' → logprob: -1.7028008699417114
    3. '.' → logprob: -6.952800750732422
    4. ' ,' → logprob: -8.202800750732422
    5. '0' → logprob: -9.202800750732422
    6. 's' → logprob: -10.327800750732422
    7. ',(' → logprob: -12.202800750732422
    8. ' ' → logprob: -12.577800750732422
    9. ' s' → logprob: -12.952800750732422
    10. ')' → logprob: -13.077800750732422

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001674587489105761
    2. 's' → logprob: -6.501674652099609
    3. ',' → logprob: -8.75167465209961
    4. ',s' → logprob: -11.87667465209961
    5. 'dist' → logprob: -12.62667465209961
    6. '   ' → logprob: -14.00167465209961
    7. ' s' → logprob: -14.12667465209961
    8. ')' → logprob: -14.62667465209961
    9. ' ' → logprob: -15.00167465209961
    10. '[s' → logprob: -15.00167465209961

Token 389: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.3869103789329529
    2. ',' → logprob: -1.1369104385375977
    3. 's' → logprob: -10.636910438537598
    4. ' ,' → logprob: -11.136910438537598
    5. ' s' → logprob: -15.761910438537598
    6. ',n' → logprob: -16.26190948486328
    7. ',
' → logprob: -16.51190948486328
    8. '	s' → logprob: -16.88690948486328
    9. ',v' → logprob: -17.13690948486328
    10. ',b' → logprob: -17.26190948486328

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ' ,' → logprob: -11.000028610229492
    3. '0' → logprob: -11.375028610229492
    4. ',
' → logprob: -16.750028610229492
    5. '   ' → logprob: -17.875028610229492
    6. ' ' → logprob: -18.500028610229492
    7. '```' → logprob: -18.750028610229492
    8. '	' → logprob: -20.250028610229492
    9. '  ' → logprob: -20.625028610229492
    10. '，' → logprob: -20.625028610229492

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '  ' → logprob: -20.750001907348633
    5. '1' → logprob: -21.062501907348633
    6. '۰' → logprob: -21.062501907348633
    7. '```' → logprob: -21.312501907348633
    8. ')' → logprob: -21.875001907348633
    9. '０' → logprob: -22.187501907348633
    10. '    ' → logprob: -22.437501907348633

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.911954500945285e-05
    2. '0' → logprob: -9.625088691711426
    3. ' ,' → logprob: -10.750088691711426
    4. '))' → logprob: -14.125088691711426
    5. ')' → logprob: -14.500088691711426
    6. '00' → logprob: -17.000089645385742
    7. ' ' → logprob: -17.062589645385742
    8. ',
' → logprob: -17.312589645385742
    9. '```' → logprob: -17.750089645385742
    10. '   ' → logprob: -17.812589645385742

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.000007629394531
    3. '))' → logprob: -13.750007629394531
    4. ')' → logprob: -14.250007629394531
    5. '   ' → logprob: -17.12500762939453
    6. '```' → logprob: -17.25000762939453
    7. ')))' → logprob: -17.87500762939453
    8. '  ' → logprob: -18.00000762939453
    9. '))
' → logprob: -18.75000762939453
    10. ' ))' → logprob: -19.25000762939453

Token 394: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010404328349977732
    2. ')' → logprob: -6.876040458679199
    3. '))
' → logprob: -12.1260404586792
    4. ')))' → logprob: -13.5010404586792
    5. ' ))' → logprob: -14.3760404586792
    6. ')
' → logprob: -16.251039505004883
    7. '));' → logprob: -16.626039505004883
    8. '))

' → logprob: -16.876039505004883
    9. '),' → logprob: -17.251039505004883
    10. '   ' → logprob: -17.626039505004883

Token 395: ' #(' (ID: 195764)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014212633483111858
    2. 'while' → logprob: -5.014212608337402
    3. ' while' → logprob: -5.389212608337402
    4. ')' → logprob: -6.264212608337402
    5. '    
' → logprob: -8.014212608337402
    6. '
' → logprob: -8.139212608337402
    7. '	while' → logprob: -8.639212608337402
    8. '```' → logprob: -9.639212608337402
    9. '  
' → logprob: -10.514212608337402
    10. '<|end|>' → logprob: -10.514212608337402

Token 396: 'cost' (ID: 33457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10378323495388031
    2. 'cost' → logprob: -2.603783130645752
    3. 'dist' → logprob: -3.728783130645752
    4. ')' → logprob: -8.35378360748291
    5. 'distance' → logprob: -9.47878360748291
    6. 'time' → logprob: -9.47878360748291
    7. ' ' → logprob: -10.22878360748291
    8. ' dist' → logprob: -10.72878360748291
    9. 'd' → logprob: -10.72878360748291
    10. '
' → logprob: -11.10378360748291

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11996101588010788
    2. ',s' → logprob: -2.2449610233306885
    3. ')' → logprob: -5.619960784912109
    4. ',v' → logprob: -6.494960784912109
    5. ',time' → logprob: -7.619960784912109
    6. ',n' → logprob: -7.869960784912109
    7. ',c' → logprob: -7.994960784912109
    8. ' ,' → logprob: -8.74496078491211
    9. ',current' → logprob: -9.24496078491211
    10. ',d' → logprob: -9.36996078491211

Token 398: ' city' (ID: 5030)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4184974730014801
    2. 'city' → logprob: -1.5434974431991577
    3. ')' → logprob: -2.5434975624084473
    4. '0' → logprob: -3.1684975624084473
    5. 'cost' → logprob: -6.043497562408447
    6. '<|end|>' → logprob: -6.293497562408447
    7. ' s' → logprob: -7.418497562408447
    8. ')s' → logprob: -7.668497562408447
    9. 'current' → logprob: -7.668497562408447
    10. ' city' → logprob: -7.918497562408447

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021131496876478195
    2. ',s' → logprob: -3.8961315155029297
    3. ')' → logprob: -8.64613151550293
    4. ',v' → logprob: -9.02113151550293
    5. ',state' → logprob: -9.02113151550293
    6. ' ,' → logprob: -9.64613151550293
    7. '0' → logprob: -10.89613151550293
    8. ',t' → logprob: -11.52113151550293
    9. ',current' → logprob: -11.52113151550293
    10. ',next' → logprob: -11.77113151550293

Token 400: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0015205761883407831
    2. ' speed' → logprob: -6.50152063369751
    3. 'prev' → logprob: -11.251520156860352
    4. '	speed' → logprob: -13.501520156860352
    5. '   ' → logprob: -13.751520156860352
    6. 'spe' → logprob: -14.376520156860352
    7. ' ' → logprob: -14.876520156860352
    8. 'spd' → logprob: -15.001520156860352
    9. 'velocity' → logprob: -15.251520156860352
    10. 'Speed' → logprob: -15.251520156860352

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ',p' → logprob: -10.750042915344238
    3. ' ,' → logprob: -10.875042915344238
    4. ',parent' → logprob: -14.250042915344238
    5. '0' → logprob: -14.750042915344238
    6. ',next' → logprob: -14.875042915344238
    7. 'prev' → logprob: -15.000042915344238
    8. ')' → logprob: -15.000042915344238
    9. ',
' → logprob: -15.250042915344238
    10. ',last' → logprob: -16.250043869018555

Token 402: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -7.52919222577475e-05
    2. ' prev' → logprob: -9.625075340270996
    3. '0' → logprob: -12.875075340270996
    4. 'previous' → logprob: -13.250075340270996
    5. '	prev' → logprob: -13.625075340270996
    6. 'pre' → logprob: -13.750075340270996
    7. 'p' → logprob: -14.375075340270996
    8. '.prev' → logprob: -15.000075340270996
    9. '_prev' → logprob: -15.000075340270996
    10. ')' → logprob: -15.375075340270996

Token 403: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.07538061589002609
    2. ')' → logprob: -2.825380563735962
    3. '_)' → logprob: -4.950380802154541
    4. ')_' → logprob: -5.575380802154541
    5. '_' → logprob: -6.075380802154541
    6. 'city' → logprob: -8.950380325317383
    7. '_)
' → logprob: -12.200380325317383
    8. ')
' → logprob: -12.575380325317383
    9. ' city' → logprob: -13.075380325317383
    10. '_CITY' → logprob: -13.325380325317383

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -14.000001907348633
    4. ')
' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.500001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '),' → logprob: -18.500001907348633
    8. '`)' → logprob: -18.875001907348633
    9. ')))' → logprob: -19.125001907348633
    10. ')#' → logprob: -19.250001907348633

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045892391353845596
    2. 'while' → logprob: -3.7958924770355225
    3. ' while' → logprob: -4.170892238616943
    4. ')' → logprob: -5.670892238616943
    5. '	while' → logprob: -6.295892238616943
    6. '```' → logprob: -6.920892238616943
    7. '<|end|>' → logprob: -8.545892715454102
    8. ':' → logprob: -9.045892715454102
    9. '       ' → logprob: -9.170892715454102
    10. '.' → logprob: -9.545892715454102

Token 406: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10159222781658173
    2. '   ' → logprob: -2.3515923023223877
    3. ' while' → logprob: -6.726592063903809
    4. '```' → logprob: -9.101592063903809
    5. '	while' → logprob: -9.601592063903809
    6. 'While' → logprob: -12.851592063903809
    7. '    
' → logprob: -12.851592063903809
    8. ')' → logprob: -14.476592063903809
    9. '
' → logprob: -14.851592063903809
    10. '  
' → logprob: -15.476592063903809

Token 407: ' pq' (ID: 65424)
  Prédit: ' pq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pq' → logprob: -0.005320089403539896
    2. 'pq' → logprob: -5.255320072174072
    3. ' len' → logprob: -9.38032054901123
    4. 'len' → logprob: -14.25532054901123
    5. '(p' → logprob: -14.88032054901123
    6. '
' → logprob: -15.63032054901123
    7. ' ' → logprob: -15.88032054901123
    8. '	p' → logprob: -15.88032054901123
    9. '   ' → logprob: -16.005319595336914
    10. '[p' → logprob: -16.255319595336914

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006918672472238541
    2. ':
' → logprob: -5.006918907165527
    3. '[' → logprob: -9.131918907165527
    4. 'and' → logprob: -9.756918907165527
    5. ' and' → logprob: -10.881918907165527
    6. '):' → logprob: -12.256918907165527
    7. '):
' → logprob: -13.006918907165527
    8. '   ' → logprob: -13.131918907165527
    9. '>:' → logprob: -13.131918907165527
    10. '!=' → logprob: -13.256918907165527

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017651435919106007
    2. ',' → logprob: -7.501765251159668
    3. '```' → logprob: -7.751765251159668
    4. '   ' → logprob: -7.876765251159668
    5. '(cost' → logprob: -9.251765251159668
    6. '0' → logprob: -9.876765251159668
    7. '        
' → logprob: -10.501765251159668
    8. ' (' → logprob: -10.501765251159668
    9. '(' → logprob: -10.501765251159668
    10. '    ' → logprob: -10.876765251159668

Token 410: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -5.7888184528565034e-05
    2. '(cost' → logprob: -10.8750581741333
    3. 'cur' → logprob: -11.0000581741333
    4. 'c' → logprob: -11.1250581741333
    5. ' cost' → logprob: -12.0000581741333
    6. 'curr' → logprob: -14.5000581741333
    7. 'dist' → logprob: -14.7500581741333
    8. '_cost' → logprob: -16.000057220458984
    9. 'd' → logprob: -16.625057220458984
    10. 'co' → logprob: -16.875057220458984

Token 411: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16495203971862793
    2. ',c' → logprob: -2.164952039718628
    3. ',u' → logprob: -3.539952039718628
    4. ',current' → logprob: -5.914952278137207
    5. ',time' → logprob: -6.789952278137207
    6. ',v' → logprob: -6.789952278137207
    7. ',d' → logprob: -6.789952278137207
    8. ',p' → logprob: -7.789952278137207
    9. ',q' → logprob: -8.164952278137207
    10. ',n' → logprob: -8.164952278137207

Token 412: ',v' (ID: 30680)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.7759170532226562
    2. ',' → logprob: -1.0259170532226562
    3. ',u' → logprob: -2.1509170532226562
    4. '=' → logprob: -3.4009170532226562
    5. ',v' → logprob: -4.525917053222656
    6. ',t' → logprob: -4.650917053222656
    7. ',d' → logprob: -6.650917053222656
    8. ',q' → logprob: -6.900917053222656
    9. ',k' → logprob: -7.025917053222656
    10. ',p' → logprob: -7.025917053222656

Token 413: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.619521975517273
    2. ',w' → logprob: -1.369521975517273
    3. ',k' → logprob: -3.1195220947265625
    4. '=' → logprob: -3.3695220947265625
    5. ',c' → logprob: -3.3695220947265625
    6. ',s' → logprob: -3.4945220947265625
    7. ',u' → logprob: -3.9945220947265625
    8. ',p' → logprob: -5.2445220947265625
    9. ',user' → logprob: -5.2445220947265625
    10. ',d' → logprob: -5.4945220947265625

Token 414: 'v' (ID: 85)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043281487887725234
    2. ' =' → logprob: -8.125432968139648
    3. ')=' → logprob: -9.125432968139648
    4. '=
' → logprob: -11.750432968139648
    5. '=sys' → logprob: -12.250432968139648
    6. '=u' → logprob: -12.375432968139648
    7. '=q' → logprob: -13.250432968139648
    8. '=

' → logprob: -13.375432968139648
    9. '=query' → logprob: -13.875432968139648
    10. ']=' → logprob: -13.875432968139648

Token 415: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002882721892092377
    2. ' =' → logprob: -8.375288009643555
    3. ')=' → logprob: -10.375288009643555
    4. '=
' → logprob: -11.750288009643555
    5. '=sys' → logprob: -12.000288009643555
    6. '=

' → logprob: -12.875288009643555
    7. '=line' → logprob: -13.375288009643555
    8. '=data' → logprob: -13.500288009643555
    9. '=_' → logprob: -13.875288009643555
    10. '=u' → logprob: -14.250288009643555

Token 416: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -8.180258191714529e-06
    2. ' heap' → logprob: -11.750008583068848
    3. 'he' → logprob: -15.625008583068848
    4. '   ' → logprob: -19.87500762939453
    5. '(heap' → logprob: -20.00000762939453
    6. '.heap' → logprob: -20.87500762939453
    7. '_heap' → logprob: -21.75000762939453
    8. 'queue' → logprob: -23.75000762939453
    9. 'hq' → logprob: -23.87500762939453
    10. 'hep' → logprob: -24.50000762939453

Token 417: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. 'pop' → logprob: -15.875000953674316
    4. '.he' → logprob: -16.625
    5. 'op' → logprob: -17.25
    6. 'he' → logprob: -17.25
    7. 'p' → logprob: -17.25
    8. 'app' → logprob: -17.625
    9. '```' → logprob: -17.875
    10. 'replace' → logprob: -18.0

Token 418: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.10285332798957825
    2. 'q' → logprob: -2.727853298187256
    3. 'he' → logprob: -3.602853298187256
    4. 'pop' → logprob: -6.352853298187256
    5. 'op' → logprob: -6.852853298187256
    6. '```' → logprob: -7.102853298187256
    7. '[' → logprob: -7.852853298187256
    8. ' he' → logprob: -8.227853775024414
    9. '.heap' → logprob: -8.352853775024414
    10. '.pop' → logprob: -8.352853775024414

Token 419: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.004696090007201e-05
    2. 'ap' → logprob: -9.750069618225098
    3. 'pp' → logprob: -11.750069618225098
    4. '```' → logprob: -13.125069618225098
    5. 'appe' → logprob: -14.625069618225098
    6. '[' → logprob: -14.625069618225098
    7. '   ' → logprob: -15.875069618225098
    8. 'q' → logprob: -16.125070571899414
    9. 'appen' → logprob: -16.125070571899414
    10. 'a' → logprob: -16.375070571899414

Token 420: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.018382767215371132
    2. 'ush' → logprob: -4.018382549285889
    3. 'q' → logprob: -9.768383026123047
    4. 'pop' → logprob: -9.893383026123047
    5. '       ' → logprob: -10.143383026123047
    6. 'app' → logprob: -10.393383026123047
    7. 'p' → logprob: -10.893383026123047
    8. '   ' → logprob: -11.518383026123047
    9. 'pp' → logprob: -12.393383026123047
    10. 'push' → logprob: -12.518383026123047

Token 421: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -11.250020027160645
    3. '(q' → logprob: -12.750020027160645
    4. 'pq' → logprob: -13.000020027160645
    5. ' (' → logprob: -14.000020027160645
    6. '(
' → logprob: -14.375020027160645
    7. ' pq' → logprob: -15.250020027160645
    8. 'p' → logprob: -15.875020027160645
    9. '   ' → logprob: -16.25002098083496
    10. 'q' → logprob: -16.37502098083496

Token 422: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.465036105713807e-06
    2. '
' → logprob: -13.125007629394531
    3. ')
' → logprob: -13.625007629394531
    4. ')' → logprob: -13.750007629394531
    5. '_q' → logprob: -13.875007629394531
    6. '[q' → logprob: -14.750007629394531
    7. ' q' → logprob: -15.000007629394531
    8. '	q' → logprob: -15.500007629394531
    9. '[' → logprob: -15.500007629394531
    10. 'Q' → logprob: -15.750007629394531

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47410091757774353
    2. ')
' → logprob: -0.9741009473800659
    3. '       ' → logprob: -11.224101066589355
    4. ')
' → logprob: -11.974101066589355
    5. '   ' → logprob: -12.724101066589355
    6. ')

' → logprob: -14.974101066589355
    7. '):
' → logprob: -15.099101066589355
    8. '
' → logprob: -15.474101066589355
    9. ')`
' → logprob: -16.09910011291504
    10. '),' → logprob: -16.22410011291504

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12480980902910233
    2. '   ' → logprob: -2.999809741973877
    3. 'if' → logprob: -3.499809741973877
    4. '
' → logprob: -4.624809741973877
    5. ' if' → logprob: -4.624809741973877
    6. '        
' → logprob: -4.624809741973877
    7. '    
' → logprob: -5.999809741973877
    8. '<|end|>' → logprob: -5.999809741973877
    9. '  
' → logprob: -6.499809741973877
    10. '```' → logprob: -7.749809741973877

Token 425: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.203409844194539e-05
    2. ' if' → logprob: -10.750041961669922
    3. '       ' → logprob: -11.000041961669922
    4. '        
' → logprob: -13.000041961669922
    5. '   ' → logprob: -13.625041961669922
    6. '
' → logprob: -15.125041961669922
    7. '    
' → logprob: -16.625041961669922
    8. '	if' → logprob: -17.375041961669922
    9. '```' → logprob: -17.500041961669922
    10. '#' → logprob: -19.000041961669922

Token 426: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2833476662635803
    2. 'u' → logprob: -2.0333476066589355
    3. 'cost' → logprob: -2.1583476066589355
    4. ' dist' → logprob: -8.533348083496094
    5. 'v' → logprob: -10.283348083496094
    6. ' cost' → logprob: -10.908348083496094
    7. ' u' → logprob: -11.283348083496094
    8. '(dist' → logprob: -11.283348083496094
    9. 'city' → logprob: -11.658348083496094
    10. 'p' → logprob: -12.283348083496094

Token 427: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0280383548888494e-06
    2. '[s' → logprob: -14.000000953674316
    3. 'u' → logprob: -15.875000953674316
    4. '[v' → logprob: -17.875001907348633
    5. '```' → logprob: -18.875001907348633
    6. '<u' → logprob: -19.250001907348633
    7. ' [' → logprob: -19.375001907348633
    8. '][' → logprob: -20.000001907348633
    9. 's' → logprob: -20.000001907348633
    10. '[' → logprob: -20.125001907348633

Token 428: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6940147876739502
    2. '[v' → logprob: -0.6940147876739502
    3. 'v' → logprob: -7.069014549255371
    4. '[' → logprob: -11.944014549255371
    5. ']' → logprob: -13.069014549255371
    6. ' ][' → logprob: -13.069014549255371
    7. '[u' → logprob: -13.569014549255371
    8. '<v' → logprob: -13.819014549255371
    9. '
' → logprob: -14.319014549255371
    10. '```' → logprob: -14.694014549255371

Token 429: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.375000953674316
    3. '[v' → logprob: -17.125
    4. '	v' → logprob: -19.5
    5. '
' → logprob: -20.25
    6. ')v' → logprob: -20.75
    7. 'u' → logprob: -21.375
    8. '<v' → logprob: -21.75
    9. '```' → logprob: -22.625
    10. '$v' → logprob: -22.875

Token 430: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.024623213335871696
    2. ']' → logprob: -4.274623394012451
    3. ']!=' → logprob: -4.899623394012451
    4. ']>' → logprob: -6.149623394012451
    5. '[u' → logprob: -8.524622917175293
    6. '[p' → logprob: -8.649622917175293
    7. ']==' → logprob: -8.899622917175293
    8. ']<' → logprob: -9.024622917175293
    9. '[' → logprob: -9.274622917175293
    10. ']][' → logprob: -10.899622917175293

Token 431: 'pv' (ID: 57708)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38687339425086975
    2. 'pv' → logprob: -1.1368733644485474
    3. ' p' → logprob: -13.511873245239258
    4. ' pv' → logprob: -13.886873245239258
    5. '	p' → logprob: -17.636873245239258
    6. '
' → logprob: -17.636873245239258
    7. '[p' → logprob: -17.761873245239258
    8. '   ' → logprob: -17.886873245239258
    9. ' ' → logprob: -17.886873245239258
    10. '_p' → logprob: -18.886873245239258

Token 432: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.32018598914146423
    2. '<' → logprob: -1.6951860189437866
    3. ']' → logprob: -2.945185899734497
    4. ']!=' → logprob: -3.320185899734497
    5. '!=' → logprob: -7.695186138153076
    6. '<u' → logprob: -7.820186138153076
    7. '<v' → logprob: -8.445185661315918
    8. '<m' → logprob: -9.445185661315918
    9. ']<=' → logprob: -9.570185661315918
    10. ' <' → logprob: -9.945185661315918

Token 433: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001234428636962548
    2. ' cost' → logprob: -9.000123023986816
    3. '(cost' → logprob: -18.500123977661133
    4. '=' → logprob: -21.875123977661133
    5. '_cost' → logprob: -22.000123977661133
    6. '-cost' → logprob: -22.250123977661133
    7. '0' → logprob: -22.375123977661133
    8. '.cost' → logprob: -22.375123977661133
    9. '   ' → logprob: -23.250123977661133
    10. 'cos' → logprob: -23.750123977661133

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04870932176709175
    2. ':
' → logprob: -3.0487093925476074
    3. 'continue' → logprob: -9.17370891571045
    4. ' continue' → logprob: -11.42370891571045
    5. '	continue' → logprob: -12.92370891571045
    6. ':return' → logprob: -13.67370891571045
    7. '       ' → logprob: -13.92370891571045
    8. '_continue' → logprob: -14.17370891571045
    9. ' continues' → logprob: -14.42370891571045
    10. '   ' → logprob: -14.67370891571045

Token 435: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5215519070625305
    2. 'continue' → logprob: -1.2715518474578857
    3. ' continue' → logprob: -2.2715518474578857
    4. '	continue' → logprob: -4.271552085876465
    5. '           ' → logprob: -4.771552085876465
    6. '_continue' → logprob: -8.771552085876465
    7. '   ' → logprob: -9.021552085876465
    8. '```' → logprob: -10.146552085876465
    9. '	       ' → logprob: -10.646552085876465
    10. ' continues' → logprob: -10.646552085876465

Token 436: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.009388166479766369
    2. ' continue' → logprob: -4.759387969970703
    3. '       ' → logprob: -7.259387969970703
    4. '           ' → logprob: -10.134387969970703
    5. '	continue' → logprob: -10.509387969970703
    6. 'contin' → logprob: -13.759387969970703
    7. '_continue' → logprob: -13.759387969970703
    8. '```' → logprob: -14.884387969970703
    9. 'continu' → logprob: -15.259387969970703
    10. '   ' → logprob: -16.384387969970703

Token 437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003241881961002946
    2. 'for' → logprob: -7.253242015838623
    3. 'if' → logprob: -7.503242015838623
    4. '<|end|>' → logprob: -7.503242015838623
    5. '   ' → logprob: -7.628242015838623
    6. ' for' → logprob: -8.003241539001465
    7. 'continue' → logprob: -8.253241539001465
    8. ' if' → logprob: -9.628241539001465
    9. '        
' → logprob: -9.753241539001465
    10. '```' → logprob: -10.003241539001465

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1701240837574005
    2. 'for' → logprob: -2.545124053955078
    3. '   ' → logprob: -2.795124053955078
    4. ' for' → logprob: -4.670124053955078
    5. 'if' → logprob: -5.045124053955078
    6. '        
' → logprob: -8.670124053955078
    7. '```' → logprob: -8.670124053955078
    8. '<|end|>' → logprob: -8.795124053955078
    9. ' if' → logprob: -8.920124053955078
    10. '
' → logprob: -9.045124053955078

Token 439: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5964811444282532
    2. 'if' → logprob: -0.8464811444282532
    3. '   ' → logprob: -4.2214813232421875
    4. ' for' → logprob: -5.5964813232421875
    5. ' if' → logprob: -6.5964813232421875
    6. '       ' → logprob: -7.5964813232421875
    7. '```' → logprob: -9.721481323242188
    8. '        
' → logprob: -12.471481323242188
    9. '	for' → logprob: -12.846481323242188
    10. '    
' → logprob: -12.971481323242188

Token 440: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12740375101566315
    2. 'if' → logprob: -2.127403736114502
    3. '   ' → logprob: -7.877403736114502
    4. ' for' → logprob: -9.50240421295166
    5. ' if' → logprob: -11.37740421295166
    6. '    
' → logprob: -11.87740421295166
    7. '       ' → logprob: -14.12740421295166
    8. '        
' → logprob: -14.25240421295166
    9. '#' → logprob: -14.75240421295166
    10. '```' → logprob: -15.25240421295166

Token 441: ' reached' (ID: 15237)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005234713666141033
    2. ' u' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.130234718322754
    4. '	u' → logprob: -16.880233764648438
    5. ' ' → logprob: -17.005233764648438
    6. '  ' → logprob: -17.755233764648438
    7. '
' → logprob: -17.880233764648438
    8. '(u' → logprob: -17.880233764648438
    9. '    ' → logprob: -18.630233764648438
    10. '[u' → logprob: -18.755233764648438

Token 442: ' goal' (ID: 8583)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03763526678085327
    2. ' g' → logprob: -3.412635326385498
    3. 'u' → logprob: -5.787635326385498
    4. '   ' → logprob: -7.537635326385498
    5. ' u' → logprob: -7.912635326385498
    6. ' ' → logprob: -11.66263484954834
    7. '  ' → logprob: -13.41263484954834
    8. 's' → logprob: -13.53763484954834
    9. '    ' → logprob: -13.78763484954834
    10. 'n' → logprob: -13.91263484954834

Token 443: ' city' (ID: 5030)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3201853036880493
    2. ' and' → logprob: -1.4451853036880493
    3. 'and' → logprob: -3.8201851844787598
    4. ' if' → logprob: -4.44518518447876
    5. ' u' → logprob: -6.57018518447876
    6. 'u' → logprob: -6.69518518447876
    7. 'if' → logprob: -6.94518518447876
    8. '   ' → logprob: -7.57018518447876
    9. '           ' → logprob: -8.820185661315918
    10. ',' → logprob: -9.195185661315918

Token 444: ' g' (ID: 329)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009888299740850925
    2. 'and' → logprob: -5.259888172149658
    3. 'u' → logprob: -5.884888172149658
    4. '       ' → logprob: -6.884888172149658
    5. ' u' → logprob: -7.134888172149658
    6. '           ' → logprob: -11.134888648986816
    7. '(u' → logprob: -12.509888648986816
    8. '   ' → logprob: -12.634888648986816
    9. '=u' → logprob: -12.634888648986816
    10. '[u' → logprob: -12.759888648986816

Token 445: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7872923612594604
    2. ' and' → logprob: -0.7872923612594604
    3. 'and' → logprob: -2.41229248046875
    4. ',' → logprob: -9.16229248046875
    5. ':' → logprob: -10.16229248046875
    6. '   ' → logprob: -10.41229248046875
    7. '           ' → logprob: -10.78729248046875
    8. ' if' → logprob: -10.91229248046875
    9. '      ' → logprob: -11.41229248046875
    10. 'if' → logprob: -11.91229248046875

Token 446: ' speed' (ID: 7733)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.22215202450752258
    2. 'u' → logprob: -1.9721519947052002
    3. 'g' → logprob: -3.9721519947052
    4. '0' → logprob: -4.097152233123779
    5. 'any' → logprob: -4.472152233123779
    6. 'speed' → logprob: -5.722152233123779
    7. '(u' → logprob: -6.097152233123779
    8. '(v' → logprob: -6.847152233123779
    9. ' v' → logprob: -7.097152233123779
    10. 'prev' → logprob: -7.097152233123779

Token 447: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05773359537124634
    2. '0' → logprob: -3.1827335357666016
    3. '==' → logprob: -4.432733535766602
    4. '=' → logprob: -7.307733535766602
    5. '>=' → logprob: -7.432733535766602
    6. '
' → logprob: -7.682733535766602
    7. '>' → logprob: -7.807733535766602
    8. ',' → logprob: -8.682733535766602
    9. ' ' → logprob: -9.057733535766602
    10. '   ' → logprob: -9.682733535766602

Token 448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0822838842868805
    2. '0' → logprob: -2.5822839736938477
    3. 'v' → logprob: -5.832283973693848
    4. '30' → logprob: -8.707283973693848
    5. 'any' → logprob: -9.207283973693848
    6. ' ' → logprob: -9.832283973693848
    7. '[' → logprob: -11.207283973693848
    8. '   ' → logprob: -11.332283973693848
    9. 'u' → logprob: -11.457283973693848
    10. '```' → logprob: -11.457283973693848

Token 449: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3924013674259186
    2. 'and' → logprob: -1.7674013376235962
    3. '       ' → logprob: -1.8924013376235962
    4. '           ' → logprob: -6.017401218414307
    5. ',' → logprob: -7.767401218414307
    6. ':' → logprob: -9.017401695251465
    7. '   ' → logprob: -10.392401695251465
    8. ' if' → logprob: -10.767401695251465
    9. 'if' → logprob: -11.267401695251465
    10. '        ' → logprob: -11.892401695251465

Token 450: 'speed' (ID: 42880)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.089820496737957
    2. ' and' → logprob: -2.964820384979248
    3. ')' → logprob: -4.089820384979248
    4. '0' → logprob: -4.839820384979248
    5. '):' → logprob: -5.089820384979248
    6. '1' → logprob: -6.714820384979248
    7. 'if' → logprob: -7.339820384979248
    8. '),' → logprob: -7.964820384979248
    9. '
' → logprob: -8.089820861816406
    10. '30' → logprob: -8.214820861816406

Token 451: ' on' (ID: 402)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8005456328392029
    2. '==' → logprob: -1.3005456924438477
    3. ')' → logprob: -2.4255456924438477
    4. ' and' → logprob: -2.6755456924438477
    5. 'and' → logprob: -3.1755456924438477
    6. '):
' → logprob: -3.5505456924438477
    7. ')==' → logprob: -3.6755456924438477
    8. ' ==' → logprob: -3.9255456924438477
    9. ' or' → logprob: -6.425545692443848
    10. '=' → logprob: -6.425545692443848

Token 452: ' last' (ID: 2174)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9720091223716736
    2. 'road' → logprob: -1.0970091819763184
    3. 'first' → logprob: -2.2220091819763184
    4. 'edges' → logprob: -2.9720091819763184
    5. 'a' → logprob: -3.5970091819763184
    6. 'u' → logprob: -3.9720091819763184
    7. 'roads' → logprob: -4.347009181976318
    8. 'edge' → logprob: -4.347009181976318
    9. 'last' → logprob: -4.722009181976318
    10. ' the' → logprob: -4.722009181976318

Token 453: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.5613377690315247
    2. ')' → logprob: -1.0613377094268799
    3. 'edge' → logprob: -3.18633770942688
    4. ' road' → logprob: -4.061337947845459
    5. ' )' → logprob: -4.561337947845459
    6. ' ' → logprob: -6.061337947845459
    7. 'line' → logprob: -6.561337947845459
    8. '_)' → logprob: -6.561337947845459
    9. ' edge' → logprob: -6.686337947845459
    10. '```' → logprob: -6.686337947845459

Token 454: ' must' (ID: 2804)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.085996389389038
    2. ' and' → logprob: -1.210996389389038
    3. ')' → logprob: -2.085996389389038
    4. '):' → logprob: -2.210996389389038
    5. '),' → logprob: -2.335996389389038
    6. '       ' → logprob: -4.460996627807617
    7. ',' → logprob: -4.585996627807617
    8. '):
' → logprob: -5.085996627807617
    9. '   ' → logprob: -6.585996627807617
    10. '           ' → logprob: -6.710996627807617

Token 455: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.0892295315861702
    2. ' be' → logprob: -2.4642295837402344
    3. '```' → logprob: -9.214229583740234
    4. '==' → logprob: -9.839229583740234
    5. '=' → logprob: -10.089229583740234
    6. ')' → logprob: -10.214229583740234
    7. '_be' → logprob: -10.464229583740234
    8. 'have' → logprob: -12.089229583740234
    9. '),' → logprob: -12.214229583740234
    10. 'not' → logprob: -12.464229583740234

Token 456: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005603004829026759
    2. ' ' → logprob: -8.000560760498047
    3. 'exact' → logprob: -9.375560760498047
    4. '```' → logprob: -9.875560760498047
    5. '0' → logprob: -10.750560760498047
    6. ')' → logprob: -10.875560760498047
    7. ' exactly' → logprob: -11.000560760498047
    8. '
' → logprob: -11.750560760498047
    9. '   ' → logprob: -12.125560760498047
    10. '=' → logprob: -12.375560760498047

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -10.500051498413086
    3. '0' → logprob: -11.750051498413086
    4. '```' → logprob: -12.000051498413086
    5. 'exact' → logprob: -13.000051498413086
    6. ')' → logprob: -13.000051498413086
    7. ' exactly' → logprob: -13.375051498413086
    8. '30' → logprob: -13.625051498413086
    9. '=' → logprob: -14.375051498413086
    10. '   ' → logprob: -14.875051498413086

Token 458: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14150670170783997
    2. ')' → logprob: -2.7665066719055176
    3. 'and' → logprob: -3.2665066719055176
    4. '):' → logprob: -4.016506671905518
    5. '),' → logprob: -5.266506671905518
    6. '       ' → logprob: -5.266506671905518
    7. '):
' → logprob: -6.516506671905518
    8. '           ' → logprob: -7.641506671905518
    9. ':' → logprob: -8.266507148742676
    10. ',' → logprob: -9.016507148742676

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.159660890465602e-05
    2. 'if' → logprob: -10.37507152557373
    3. ' if' → logprob: -11.12507152557373
    4. '<|end|>' → logprob: -11.25007152557373
    5. '   ' → logprob: -12.12507152557373
    6. ',' → logprob: -12.87507152557373
    7. '           ' → logprob: -13.25007152557373
    8. '<|end|>' → logprob: -14.25007152557373
    9. '      ' → logprob: -14.62507152557373
    10. '```' → logprob: -14.87507152557373

Token 460: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016080588102340698
    2. 'if' → logprob: -6.501607894897461
    3. ' if' → logprob: -9.501607894897461
    4. '   ' → logprob: -10.501607894897461
    5. '      ' → logprob: -13.876607894897461
    6. '           ' → logprob: -14.376607894897461
    7. '<|end|>' → logprob: -14.376607894897461
    8. '        
' → logprob: -14.501607894897461
    9. '	   ' → logprob: -15.376607894897461
    10. '     ' → logprob: -15.376607894897461

Token 461: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7050280570983887
    2. 'if' → logprob: -0.7050280570983887
    3. ' if' → logprob: -4.455028057098389
    4. '   ' → logprob: -8.580028533935547
    5. '           ' → logprob: -13.830028533935547
    6. '	if' → logprob: -13.955028533935547
    7. '      ' → logprob: -15.080028533935547
    8. ' ' → logprob: -15.455028533935547
    9. '     ' → logprob: -15.830028533935547
    10. '    ' → logprob: -16.205028533935547

Token 462: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5647326111793518
    2. 'if' → logprob: -1.314732551574707
    3. '       ' → logprob: -1.814732551574707
    4. '           ' → logprob: -11.064732551574707
    5. '   ' → logprob: -11.689732551574707
    6. '
' → logprob: -11.689732551574707
    7. '```' → logprob: -12.314732551574707
    8. '<|end|>' → logprob: -12.564732551574707
    9. '      ' → logprob: -12.689732551574707
    10. '        ' → logprob: -12.689732551574707

Token 463: ' arrival' (ID: 24861)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001070919563062489
    2. ' if' → logprob: -7.001070976257324
    3. '       ' → logprob: -8.751070976257324
    4. '```' → logprob: -14.126070976257324
    5. '   ' → logprob: -15.751070976257324
    6. '           ' → logprob: -16.126070022583008
    7. 'for' → logprob: -16.501070022583008
    8. '#' → logprob: -16.626070022583008
    9. '
' → logprob: -17.626070022583008
    10. '	if' → logprob: -19.126070022583008

Token 464: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.02502092719078064
    2. 'at' → logprob: -3.9000208377838135
    3. '   ' → logprob: -6.775021076202393
    4. '       ' → logprob: -6.900021076202393
    5. 'city' → logprob: -7.025021076202393
    6. ' city' → logprob: -8.025020599365234
    7. 'u' → logprob: -8.275020599365234
    8. ' if' → logprob: -8.650020599365234
    9. 'if' → logprob: -8.900020599365234
    10. ' u' → logprob: -9.025020599365234

Token 465: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005950132850557566
    2. ' g' → logprob: -5.130949974060059
    3. 'city' → logprob: -11.255949974060059
    4. ' city' → logprob: -12.505949974060059
    5. 'goal' → logprob: -13.880949974060059
    6. 'the' → logprob: -13.880949974060059
    7. ' the' → logprob: -14.505949974060059
    8. '   ' → logprob: -14.505949974060059
    9. 'destination' → logprob: -14.880949974060059
    10. '
' → logprob: -15.005949974060059

Token 466: ' must' (ID: 2804)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29185765981674194
    2. 'and' → logprob: -1.5418577194213867
    3. '==' → logprob: -3.7918577194213867
    4. ' ==' → logprob: -4.666857719421387
    5. '   ' → logprob: -6.416857719421387
    6. ':' → logprob: -7.041857719421387
    7. '       ' → logprob: -7.041857719421387
    8. ' if' → logprob: -7.291857719421387
    9. '           ' → logprob: -7.666857719421387
    10. ' ' → logprob: -7.666857719421387

Token 467: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08807205408811569
    2. ' have' → logprob: -2.8380720615386963
    3. '==' → logprob: -4.713071823120117
    4. 'be' → logprob: -5.088071823120117
    5. 'have' → logprob: -5.838071823120117
    6. ' happen' → logprob: -6.213071823120117
    7. ' not' → logprob: -6.838071823120117
    8. '=' → logprob: -6.963071823120117
    9. ' ==' → logprob: -7.338071823120117
    10. '   ' → logprob: -7.588071823120117

Token 468: ' at' (ID: 540)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.43983495235443115
    2. ' at' → logprob: -1.5648349523544312
    3. ' v' → logprob: -2.3148350715637207
    4. ' with' → logprob: -3.6898350715637207
    5. 'at' → logprob: -4.689835071563721
    6. 'with' → logprob: -4.814835071563721
    7. '(v' → logprob: -6.814835071563721
    8. ' (' → logprob: -6.814835071563721
    9. ' done' → logprob: -6.939835071563721
    10. '(' → logprob: -7.439835071563721

Token 469: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.02164083905518055
    2. 'v' → logprob: -4.646640777587891
    3. ' speed' → logprob: -5.771640777587891
    4. 'g' → logprob: -5.771640777587891
    5. '1' → logprob: -6.021640777587891
    6. '0' → logprob: -6.771640777587891
    7. '(' → logprob: -7.021640777587891
    8. '(speed' → logprob: -7.771640777587891
    9. '```' → logprob: -8.64664077758789
    10. 'velocity' → logprob: -9.27164077758789

Token 470: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14406931400299072
    2. '==' → logprob: -2.019069194793701
    3. '1' → logprob: -7.019069194793701
    4. ' ==' → logprob: -7.769069194793701
    5. ' =' → logprob: -10.89406967163086
    6. '```' → logprob: -10.89406967163086
    7. '==
' → logprob: -11.51906967163086
    8. ' and' → logprob: -12.64406967163086
    9. ' ' → logprob: -12.64406967163086
    10. ':' → logprob: -13.01906967163086

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.750005722045898
    3. ' ' → logprob: -12.750005722045898
    4. '```' → logprob: -17.0625057220459
    5. '=' → logprob: -17.6250057220459
    6. '`' → logprob: -17.8125057220459
    7. '   ' → logprob: -18.0625057220459
    8. '
' → logprob: -18.1250057220459
    9. '' → logprob: -18.2500057220459
    10. '۱' → logprob: -18.3125057220459

Token 472: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020616286201402545
    2. ' if' → logprob: -8.875205993652344
    3. ',' → logprob: -10.250205993652344
    4. 'if' → logprob: -11.000205993652344
    5. '   ' → logprob: -12.250205993652344
    6. '
' → logprob: -13.125205993652344
    7. '        
' → logprob: -13.250205993652344
    8. '<|end|>' → logprob: -13.250205993652344
    9. '           ' → logprob: -13.750205993652344
    10. '      ' → logprob: -14.000205993652344

Token 473: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006870561628602445
    2. ',' → logprob: -7.875687122344971
    3. ' if' → logprob: -8.375686645507812
    4. '   ' → logprob: -10.625686645507812
    5. ' and' → logprob: -10.750686645507812
    6. '<|end|>' → logprob: -11.625686645507812
    7. 'if' → logprob: -12.500686645507812
    8. '      ' → logprob: -12.875686645507812
    9. 'and' → logprob: -12.875686645507812
    10. ')' → logprob: -13.000686645507812

Token 474: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13943827152252197
    2. '       ' → logprob: -2.1394381523132324
    3. ' if' → logprob: -4.389438152313232
    4. '   ' → logprob: -10.88943862915039
    5. '           ' → logprob: -12.51443862915039
    6. '
' → logprob: -14.63943862915039
    7. '#' → logprob: -15.26443862915039
    8. '```' → logprob: -15.26443862915039
    9. 'for' → logprob: -15.26443862915039
    10. '      ' → logprob: -15.51443862915039

Token 475: ' state' (ID: 2608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002841610461473465
    2. ' if' → logprob: -6.252841472625732
    3. '       ' → logprob: -7.002841472625732
    4. '   ' → logprob: -13.37784194946289
    5. 'for' → logprob: -14.00284194946289
    6. '```' → logprob: -15.00284194946289
    7. '
' → logprob: -15.12784194946289
    8. '           ' → logprob: -15.75284194946289
    9. '	if' → logprob: -17.12784194946289
    10. 'continue' → logprob: -17.37784194946289

Token 476: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8993824124336243
    2. '[' → logprob: -2.0243823528289795
    3. ' =' → logprob: -2.0243823528289795
    4. ' ==' → logprob: -3.1493823528289795
    5. ' u' → logprob: -3.1493823528289795
    6. '[u' → logprob: -3.2743823528289795
    7. '=' → logprob: -3.2743823528289795
    8. '=u' → logprob: -3.2743823528289795
    9. '==' → logprob: -3.8993823528289795
    10. ':' → logprob: -3.8993823528289795

Token 477: ' city' (ID: 5030)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.09679398685693741
    2. ' (' → logprob: -2.5967938899993896
    3. '(' → logprob: -4.846794128417969
    4. '(g' → logprob: -5.721794128417969
    5. 'g' → logprob: -6.346794128417969
    6. ' if' → logprob: -6.971794128417969
    7. '(cost' → logprob: -6.971794128417969
    8. 'if' → logprob: -7.096794128417969
    9. '[u' → logprob: -7.221794128417969
    10. 'cost' → logprob: -8.096794128417969

Token 478: '=g' (ID: 90890)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31608375906944275
    2. ' ==' → logprob: -1.3160837888717651
    3. ',g' → logprob: -6.691083908081055
    4. ',' → logprob: -7.066083908081055
    5. ' g' → logprob: -8.191083908081055
    6. 'g' → logprob: -8.566083908081055
    7. ' ,' → logprob: -9.816083908081055
    8. '```' → logprob: -10.191083908081055
    9. '=g' → logprob: -10.191083908081055
    10. '==
' → logprob: -10.691083908081055

Token 479: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2612486481666565
    2. 'and' → logprob: -1.5112485885620117
    3. '   ' → logprob: -5.011248588562012
    4. '       ' → logprob: -6.386248588562012
    5. ':' → logprob: -7.636248588562012
    6. ',' → logprob: -8.761248588562012
    7. ':
' → logprob: -9.136248588562012
    8. ')' → logprob: -10.011248588562012
    9. '<|end|>' → logprob: -10.136248588562012
    10. '           ' → logprob: -10.636248588562012

Token 480: ' speed' (ID: 7733)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002686586929485202
    2. ' v' → logprob: -6.627686500549316
    3. 'speed' → logprob: -6.877686500549316
    4. '1' → logprob: -8.252686500549316
    5. ' speed' → logprob: -10.377686500549316
    6. '0' → logprob: -10.502686500549316
    7. '(' → logprob: -12.627686500549316
    8. ' ' → logprob: -13.127686500549316
    9. 'velocity' → logprob: -13.752686500549316
    10. '(v' → logprob: -13.877686500549316

Token 481: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935480833053589
    2. '==' → logprob: -0.6935480833053589
    3. ' ==' → logprob: -8.693548202514648
    4. '```' → logprob: -8.818548202514648
    5. '1' → logprob: -10.443548202514648
    6. '==
' → logprob: -10.818548202514648
    7. ')==' → logprob: -11.693548202514648
    8. '`' → logprob: -11.818548202514648
    9. ']==' → logprob: -12.193548202514648
    10. '===' → logprob: -12.443548202514648

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '0' → logprob: -16.125
    4. '```' → logprob: -17.75
    5. '=' → logprob: -18.125
    6. '   ' → logprob: -18.625
    7. '۱' → logprob: -20.6875
    8. '`' → logprob: -20.6875
    9. '<|end|>' → logprob: -20.8125
    10. '
' → logprob: -20.9375

Token 483: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.066769540309906
    2. ' and' → logprob: -2.816769599914551
    3. 'and' → logprob: -5.566769599914551
    4. ',' → logprob: -7.316769599914551
    5. ':' → logprob: -9.19176959991455
    6. ' if' → logprob: -9.81676959991455
    7. '<|end|>' → logprob: -10.31676959991455
    8. '   ' → logprob: -10.44176959991455
    9. ':
' → logprob: -11.19176959991455
    10. '      ' → logprob: -11.31676959991455

Token 484: ' prev' (ID: 10258)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09368117898702621
    2. ' if' → logprob: -2.4686810970306396
    3. 'and' → logprob: -6.718681335449219
    4. '           ' → logprob: -6.843681335449219
    5. '       ' → logprob: -7.093681335449219
    6. '
' → logprob: -7.343681335449219
    7. 'prev' → logprob: -7.343681335449219
    8. ' and' → logprob: -8.468681335449219
    9. ' prev' → logprob: -10.468681335449219
    10. '   ' → logprob: -10.718681335449219

Token 485: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.00024358915106859058
    2. '_' → logprob: -9.375243186950684
    3. '=' → logprob: -10.500243186950684
    4. ')' → logprob: -10.500243186950684
    5. 'city' → logprob: -10.625243186950684
    6. ')_' → logprob: -10.875243186950684
    7. '```' → logprob: -11.000243186950684
    8. '==' → logprob: -11.125243186950684
    9. '=_' → logprob: -11.875243186950684
    10. '_CITY' → logprob: -12.625243186950684

Token 486: ' can' (ID: 665)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20422831177711487
    2. ' ==' → logprob: -3.079228401184082
    3. ',' → logprob: -3.704228401184082
    4. ':' → logprob: -4.079228401184082
    5. '=' → logprob: -4.079228401184082
    6. ']==' → logprob: -4.454228401184082
    7. ')' → logprob: -4.704228401184082
    8. 'and' → logprob: -4.704228401184082
    9. ' and' → logprob: -4.829228401184082
    10. '       ' → logprob: -5.079228401184082

Token 487: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.37011927366256714
    2. 'be' → logprob: -1.620119333267212
    3. '0' → logprob: -2.370119333267212
    4. '=' → logprob: -4.370119094848633
    5. 'continue' → logprob: -6.745119094848633
    6. ' continue' → logprob: -7.245119094848633
    7. 'range' → logprob: -7.245119094848633
    8. ' ' → logprob: -7.495119094848633
    9. ' range' → logprob: -7.620119094848633
    10. 'any' → logprob: -7.870119094848633

Token 488: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.652370810508728
    2. '0' → logprob: -1.277370810508728
    3. 'anything' → logprob: -1.652370810508728
    4. ' any' → logprob: -5.402370929718018
    5. ' anything' → logprob: -6.027370929718018
    6. 'u' → logprob: -6.902370929718018
    7. 'p' → logprob: -8.02737045288086
    8. 'g' → logprob: -9.27737045288086
    9. ' ' → logprob: -9.65237045288086
    10. 'ar' → logprob: -9.77737045288086

Token 489: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018076261039823294
    2. '
' → logprob: -6.751807689666748
    3. 'if' → logprob: -8.37680721282959
    4. ' if' → logprob: -8.50180721282959
    5. '   ' → logprob: -9.50180721282959
    6. '        
' → logprob: -9.62680721282959
    7. '<|end|>' → logprob: -10.25180721282959
    8. ',' → logprob: -11.87680721282959
    9. ')
' → logprob: -12.75180721282959
    10. '    
' → logprob: -13.00180721282959

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005745336879044771
    2. '   ' → logprob: -5.8807454109191895
    3. '
' → logprob: -6.5057454109191895
    4. 'if' → logprob: -7.3807454109191895
    5. ' if' → logprob: -7.6307454109191895
    6. '        
' → logprob: -8.380744934082031
    7. '<|end|>' → logprob: -10.005744934082031
    8. '    
' → logprob: -11.005744934082031
    9. '```' → logprob: -11.130744934082031
    10. '  
' → logprob: -11.505744934082031

Token 491: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15043659508228302
    2. 'if' (adapté à ' if') → logprob: -2.1504366397857666
    3. '   ' → logprob: -4.1504364013671875
    4. ' if' → logprob: -4.9004364013671875
    5. '
' → logprob: -11.025436401367188
    6. '	if' → logprob: -12.275436401367188
    7. '        
' → logprob: -12.525436401367188
    8. '           ' → logprob: -13.025436401367188
    9. '```' → logprob: -13.150436401367188
    10. 'If' → logprob: -13.900436401367188

Token 492: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.31326597929000854
    2. ' u' → logprob: -1.3132660388946533
    3. '(u' → logprob: -12.688265800476074
    4. '	u' → logprob: -14.688265800476074
    5. ' (' → logprob: -15.688265800476074
    6. '   ' → logprob: -15.813265800476074
    7. ' ' → logprob: -15.813265800476074
    8. '
' → logprob: -16.18826675415039
    9. '```' → logprob: -16.56326675415039
    10. '[u' → logprob: -16.81326675415039

Token 493: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12693272531032562
    2. ' ==' → logprob: -2.1269326210021973
    3. ')==' → logprob: -13.251933097839355
    4. '==
' → logprob: -13.501933097839355
    5. ']==' → logprob: -14.251933097839355
    6. '=' → logprob: -14.876933097839355
    7. '===' → logprob: -15.501933097839355
    8. '()==' → logprob: -15.751933097839355
    9. '==(' → logprob: -16.12693214416504
    10. '```' → logprob: -16.87693214416504

Token 494: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0001234428636962548
    2. ' g' → logprob: -9.000123023986816
    3. '	g' → logprob: -18.875123977661133
    4. '   ' → logprob: -19.250123977661133
    5. ''g' → logprob: -19.875123977661133
    6. '#g' → logprob: -20.375123977661133
    7. '=g' → logprob: -21.625123977661133
    8. '_g' → logprob: -21.750123977661133
    9. '.g' → logprob: -22.000123977661133
    10. '
' → logprob: -22.500123977661133

Token 495: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021044313907623
    2. 'and' → logprob: -2.350210428237915
    3. '       ' → logprob: -13.225210189819336
    4. '   ' → logprob: -14.350210189819336
    5. '	and' → logprob: -14.600210189819336
    6. '           ' → logprob: -14.850210189819336
    7. ' ' → logprob: -15.475210189819336
    8. '        ' → logprob: -15.600210189819336
    9. '      ' → logprob: -16.350210189819336
    10. '    ' → logprob: -16.475210189819336

Token 496: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10020806640386581
    2. ' v' → logprob: -2.350208044052124
    3. '1' → logprob: -13.850208282470703
    4. '	v' → logprob: -15.350208282470703
    5. ' ' → logprob: -16.475208282470703
    6. '   ' → logprob: -16.600208282470703
    7. '(v' → logprob: -16.725208282470703
    8. '
' → logprob: -18.350208282470703
    9. ')v' → logprob: -18.350208282470703
    10. '    ' → logprob: -18.850208282470703

Token 497: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005273361224681139
    2. ' ==' → logprob: -5.255273342132568
    3. '1' → logprob: -10.880273818969727
    4. '==
' → logprob: -11.880273818969727
    5. ']==' → logprob: -12.130273818969727
    6. '=' → logprob: -12.255273818969727
    7. ')==' → logprob: -13.130273818969727
    8. '()==' → logprob: -14.380273818969727
    9. '```' → logprob: -14.505273818969727
    10. '===' → logprob: -15.630273818969727

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -21.375009536743164
    4. '0' → logprob: -22.250009536743164
    5. '   ' → logprob: -22.875009536743164
    6. '１' → logprob: -23.000009536743164
    7. '`' → logprob: -23.250009536743164
    8. '۱' → logprob: -23.500009536743164
    9. '
' → logprob: -23.750009536743164
    10. '' → logprob: -23.750009536743164

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16040031611919403
    2. ':
' → logprob: -1.9104002714157104
    3. '       ' → logprob: -9.285400390625
    4. ':return' → logprob: -11.035400390625
    5. ':
' → logprob: -11.160400390625
    6. ' and' → logprob: -11.160400390625
    7. '   ' → logprob: -11.535400390625
    8. '):
' → logprob: -11.535400390625
    9. '):' → logprob: -11.910400390625
    10. '           ' → logprob: -12.285400390625

Token 500: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18157652020454407
    2. '           ' → logprob: -2.3065764904022217
    3. ':
' → logprob: -2.8065764904022217
    4. ':' → logprob: -5.181576728820801
    5. '
' → logprob: -8.8065767288208
    6. '   ' → logprob: -8.9315767288208
    7. '):
' → logprob: -10.6815767288208
    8. ':return' → logprob: -10.6815767288208
    9. '               ' → logprob: -11.0565767288208
    10. '        
' → logprob: -11.8065767288208

Token 501: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0032605347223579884
    2. '       ' → logprob: -5.753260612487793
    3. '   ' → logprob: -10.003260612487793
    4. ' print' → logprob: -10.253260612487793
    5. '           ' → logprob: -13.253260612487793
    6. 'break' → logprob: -15.003260612487793
    7. '```' → logprob: -16.003259658813477
    8. '	print' → logprob: -16.753259658813477
    9. '
' → logprob: -17.878259658813477
    10. 'result' → logprob: -18.253259658813477

Token 502: '(f' (ID: 1526)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5915424823760986
    2. '(cost' → logprob: -0.8415424823760986
    3. '(f' → logprob: -4.4665422439575195
    4. '(round' → logprob: -5.8415422439575195
    5. 'cost' → logprob: -7.5915422439575195
    6. 'int' → logprob: -8.34154224395752
    7. '("%.' → logprob: -9.09154224395752
    8. '("{' → logprob: -9.21654224395752
    9. '(' → logprob: -9.34154224395752
    10. '(dist' → logprob: -11.59154224395752

Token 503: ''{' (ID: 47735)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.013661880977451801
    2. '"{' → logprob: -4.888661861419678
    3. 'int' → logprob: -5.388661861419678
    4. '(cost' → logprob: -7.638661861419678
    5. '(int' → logprob: -8.013662338256836
    6. 'cost' → logprob: -8.263662338256836
    7. ''{' → logprob: -8.888662338256836
    8. '(f' → logprob: -9.138662338256836
    9. '("{' → logprob: -9.138662338256836
    10. '('{' → logprob: -10.763662338256836

Token 504: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001149867384810932
    2. 'dist' → logprob: -9.375115394592285
    3. 'int' → logprob: -10.625115394592285
    4. 'math' → logprob: -13.125115394592285
    5. ' cost' → logprob: -13.250115394592285
    6. '(cost' → logprob: -13.875115394592285
    7. 'round' → logprob: -14.875115394592285
    8. '{' → logprob: -15.250115394592285
    9. 'float' → logprob: -16.00011444091797
    10. 'format' → logprob: -16.12511444091797

Token 505: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -2.8087270038668066e-05
    2. '}')' → logprob: -11.125027656555176
    3. ':' → logprob: -11.750027656555176
    4. ' :.' → logprob: -12.250027656555176
    5. '.' → logprob: -14.500027656555176
    6. '}')
' → logprob: -16.625028610229492
    7. '')' → logprob: -17.500028610229492
    8. '   ' → logprob: -18.000028610229492
    9. ':e' → logprob: -18.125028610229492
    10. ' .' → logprob: -18.375028610229492

Token 506: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3882070481777191
    2. '2' → logprob: -1.7632070779800415
    3. '3' → logprob: -2.763206958770752
    4. '4' → logprob: -3.763206958770752
    5. '9' → logprob: -3.888206958770752
    6. '1' → logprob: -4.638206958770752
    7. '10' → logprob: -4.638206958770752
    8. '7' → logprob: -4.888206958770752
    9. '8' → logprob: -4.888206958770752
    10. '5' → logprob: -5.138206958770752

Token 507: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -18.625
    3. 'lf' → logprob: -20.25
    4. '}' → logprob: -22.375
    5. '{' → logprob: -22.875
    6. ' f' → logprob: -23.625
    7. ''f' → logprob: -23.625
    8. 'fi' → logprob: -23.75
    9. '```' → logprob: -24.0
    10. '
' → logprob: -24.125

Token 508: '}')
' (ID: 70168)
  Prédit: '}')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}')' → logprob: -0.1269553005695343
    2. '}')
' → logprob: -2.126955270767212
    3. '')' → logprob: -11.376955032348633
    4. '}' → logprob: -11.376955032348633
    5. '}')

' → logprob: -14.001955032348633
    6. ')' → logprob: -14.001955032348633
    7. ')')
' → logprob: -14.126955032348633
    8. '})' → logprob: -14.626955032348633
    9. '}")' → logprob: -14.626955032348633
    10. '')
' → logprob: -15.126955032348633

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023434028029441833
    2. '       ' → logprob: -3.7734339237213135
    3. '   ' → logprob: -9.648433685302734
    4. '<|end|>' → logprob: -9.773433685302734
    5. '```' → logprob: -10.773433685302734
    6. '               ' → logprob: -10.898433685302734
    7. '		' → logprob: -11.523433685302734
    8. '	       ' → logprob: -12.523433685302734
    9. '<|end|>' → logprob: -13.148433685302734
    10. 'continue' → logprob: -13.398433685302734

Token 510: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01191825233399868
    2. 'break' (adapté à ' break') → logprob: -5.011918067932129
    3. '       ' → logprob: -5.386918067932129
    4. ' break' → logprob: -7.511918067932129
    5. '   ' → logprob: -9.761918067932129
    6. '
' → logprob: -12.636918067932129
    7. '	break' → logprob: -13.261918067932129
    8. '               ' → logprob: -13.386918067932129
    9. '		' → logprob: -13.886918067932129
    10. '```' → logprob: -15.261918067932129

Token 511: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005679258611053228
    2. '   ' → logprob: -7.87556791305542
    3. 'for' → logprob: -9.125568389892578
    4. '```' → logprob: -9.875568389892578
    5. '        
' → logprob: -11.625568389892578
    6. 'else' → logprob: -11.875568389892578
    7. ' for' → logprob: -12.625568389892578
    8. '           ' → logprob: -12.875568389892578
    9. 'next' → logprob: -13.500568389892578
    10. '    
' → logprob: -14.125568389892578

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.874882430769503e-05
    2. '   ' → logprob: -9.750079154968262
    3. 'else' → logprob: -11.625079154968262
    4. '        
' → logprob: -12.375079154968262
    5. '```' → logprob: -12.625079154968262
    6. '           ' → logprob: -13.500079154968262
    7. 'for' → logprob: -13.750079154968262
    8. '    
' → logprob: -15.125079154968262
    9. 'next' → logprob: -15.250079154968262
    10. '     ' → logprob: -15.500079154968262

Token 513: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.050704535096883774
    2. '   ' → logprob: -3.0507044792175293
    3. ' for' → logprob: -6.175704479217529
    4. '       ' → logprob: -10.800704956054688
    5. '    
' → logprob: -12.175704956054688
    6. '	for' → logprob: -12.550704956054688
    7. 'next' → logprob: -12.800704956054688
    8. '```' → logprob: -13.050704956054688
    9. 'if' → logprob: -14.175704956054688
    10. '        
' → logprob: -14.800704956054688

Token 514: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7046397924423218
    2. '(w' → logprob: -1.0796397924423218
    3. '(nx' → logprob: -2.4546399116516113
    4. 'nx' → logprob: -3.2046399116516113
    5. '(n' → logprob: -3.8296399116516113
    6. 'to' → logprob: -5.704639911651611
    7. '(x' → logprob: -5.954639911651611
    8. '(next' → logprob: -6.204639911651611
    9. 'nv' → logprob: -6.204639911651611
    10. ' w' → logprob: -6.454639911651611

Token 515: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2391308546066284
    2. ',(' → logprob: -1.3641308546066284
    3. ',c' → logprob: -1.9891308546066284
    4. ',v' → logprob: -2.114130973815918
    5. ',d' → logprob: -2.864130973815918
    6. ' in' → logprob: -2.864130973815918
    7. ',u' → logprob: -3.239130973815918
    8. ' ,' → logprob: -4.239130973815918
    9. ',x' → logprob: -4.739130973815918
    10. 'in' → logprob: -5.114130973815918

Token 516: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0006545356009155512
    2. ',' → logprob: -8.125654220581055
    3. ',v' → logprob: -9.125654220581055
    4. ',w' → logprob: -9.500654220581055
    5. ',(' → logprob: -10.000654220581055
    6. ' ,' → logprob: -10.000654220581055
    7. ',y' → logprob: -10.250654220581055
    8. ',x' → logprob: -10.750654220581055
    9. ',p' → logprob: -12.000654220581055
    10. ',k' → logprob: -12.625654220581055

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08332748711109161
    2. 'in' → logprob: -2.583327531814575
    3. ',v' → logprob: -6.458327293395996
    4. ',' → logprob: -7.083327293395996
    5. '   ' → logprob: -7.458327293395996
    6. ')' → logprob: -7.833327293395996
    7. ',w' → logprob: -8.208327293395996
    8. ',in' → logprob: -9.208327293395996
    9. '),(' → logprob: -9.208327293395996
    10. '```' → logprob: -9.583327293395996

Token 518: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0015029559144750237
    2. ' edges' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.251502990722656
    4. '(edges' → logprob: -15.751502990722656
    5. '.edges' → logprob: -16.501502990722656
    6. '```' → logprob: -17.376502990722656
    7. '
' → logprob: -17.376502990722656
    8. ' ' → logprob: -18.626502990722656
    9. '_edges' → logprob: -18.751502990722656
    10. '[' → logprob: -18.876502990722656

Token 519: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.7432603272027336e-06
    2. 'u' → logprob: -13.375001907348633
    3. '(u' → logprob: -16.625001907348633
    4. '[' → logprob: -17.125001907348633
    5. '[v' → logprob: -17.250001907348633
    6. '
' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.000001907348633
    8. '[w' → logprob: -19.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. '=u' → logprob: -19.375001907348633

Token 520: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.47457021474838257
    2. ']:' → logprob: -0.9745702147483826
    3. '       ' → logprob: -8.974570274353027
    4. ']' → logprob: -9.474570274353027
    5. ':' → logprob: -9.599570274353027
    6. '):
' → logprob: -9.724570274353027
    7. ']:
' → logprob: -9.849570274353027
    8. '[' → logprob: -10.474570274353027
    9. ']:

' → logprob: -10.849570274353027
    10. '):' → logprob: -10.974570274353027

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001711709308438003
    2. '   ' → logprob: -7.751711845397949
    3. '       ' → logprob: -7.876711845397949
    4. '<|end|>' → logprob: -8.25171184539795
    5. ' if' → logprob: -8.37671184539795
    6. '            
' → logprob: -9.62671184539795
    7. '               ' → logprob: -10.00171184539795
    8. '	       ' → logprob: -10.12671184539795
    9. '          ' → logprob: -10.25171184539795
    10. '         ' → logprob: -10.50171184539795

Token 522: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23683468997478485
    2. 'for' → logprob: -1.6118346452713013
    3. '           ' → logprob: -5.111834526062012
    4. '#' → logprob: -5.361834526062012
    5. ' if' → logprob: -8.986834526062012
    6. 'nv' → logprob: -9.236834526062012
    7. 'next' → logprob: -9.486834526062012
    8. ' for' → logprob: -9.486834526062012
    9. 'new' → logprob: -9.486834526062012
    10. 'import' → logprob: -10.611834526062012

Token 523: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6101359128952026
    2. ' v' → logprob: -1.9851359128952026
    3. '(v' → logprob: -2.485136032104492
    4. 'w' → logprob: -3.110136032104492
    5. 'abs' → logprob: -3.110136032104492
    6. ' abs' → logprob: -3.485136032104492
    7. '(' → logprob: -3.985136032104492
    8. ' (' → logprob: -3.985136032104492
    9. ' w' → logprob: -4.110136032104492
    10. '(p' → logprob: -4.110136032104492

Token 524: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.044230878353118896
    2. '!=' → logprob: -3.5442309379577637
    3. ' ==' → logprob: -4.294230937957764
    4. ' !=' → logprob: -7.544230937957764
    5. '==
' → logprob: -10.044230461120605
    6. 'not' → logprob: -10.044230461120605
    7. ' not' → logprob: -10.294230461120605
    8. '=' → logprob: -10.919230461120605
    9. ']==' → logprob: -10.919230461120605
    10. '```' → logprob: -10.919230461120605

Token 525: 'pv' (ID: 57708)
  Prédit: 'pv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pv' → logprob: -0.00380281126126647
    2. 'p' → logprob: -5.62880277633667
    3. ' pv' → logprob: -8.878803253173828
    4. 'u' → logprob: -9.753803253173828
    5. 'v' → logprob: -13.128803253173828
    6. ' p' → logprob: -13.503803253173828
    7. 'pw' → logprob: -14.878803253173828
    8. 'prev' → logprob: -15.003803253173828
    9. ' ' → logprob: -15.253803253173828
    10. 'uv' → logprob: -15.253803253173828

Token 526: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11117126792669296
    2. ':' → logprob: -2.736171245574951
    3. ':
' → logprob: -3.361171245574951
    4. '           ' → logprob: -5.986171245574951
    5. '               ' → logprob: -6.111171245574951
    6. ' and' → logprob: -8.11117172241211
    7. ':return' → logprob: -8.36117172241211
    8. ' continue' → logprob: -8.86117172241211
    9. 'continue' → logprob: -9.36117172241211
    10. 'or' → logprob: -9.61117172241211

Token 527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002543678041547537
    2. ' continue' → logprob: -6.6275434494018555
    3. ' or' → logprob: -7.7525434494018555
    4. ' and' → logprob: -8.502543449401855
    5. 'continue' → logprob: -8.502543449401855
    6. '           ' → logprob: -8.502543449401855
    7. ':
' → logprob: -9.252543449401855
    8. ':' → logprob: -10.377543449401855
    9. ',' → logprob: -11.627543449401855
    10. '	continue' → logprob: -12.002543449401855

Token 528: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4089062213897705
    2. '               ' → logprob: -1.4089062213897705
    3. ' continue' → logprob: -2.4089062213897705
    4. '           ' → logprob: -6.908905982971191
    5. '   ' → logprob: -8.658905982971191
    6. '	continue' → logprob: -9.658905982971191
    7. '                   ' → logprob: -10.658905982971191
    8. '       ' → logprob: -11.283905982971191
    9. ' ' → logprob: -12.158905982971191
    10. ' ' → logprob: -12.283905982971191

Token 529: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004328045062720776
    2. '
' → logprob: -5.50432825088501
    3. '            
' → logprob: -8.504327774047852
    4. ' 
' → logprob: -11.129327774047852
    5. '  
' → logprob: -12.129327774047852
    6. '           
' → logprob: -12.379327774047852
    7. '          ' → logprob: -12.379327774047852
    8. '    
' → logprob: -13.004327774047852
    9. '            ' → logprob: -13.379327774047852
    10. '       ' → logprob: -13.504327774047852

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000698376854415983
    2. '            
' → logprob: -7.750698566436768
    3. '               ' → logprob: -9.87569808959961
    4. ' 
' → logprob: -9.87569808959961
    5. '  
' → logprob: -10.50069808959961
    6. '            ' → logprob: -10.75069808959961
    7. '       ' → logprob: -11.12569808959961
    8. '<|end|>' → logprob: -11.12569808959961
    9. '          ' → logprob: -11.25069808959961
    10. '           
' → logprob: -11.50069808959961

Token 531: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3849587142467499
    2. ' for' → logprob: -1.3849587440490723
    3. 'if' → logprob: -3.3849587440490723
    4. '           ' → logprob: -4.134958744049072
    5. ' if' → logprob: -4.259958744049072
    6. 'new' → logprob: -6.384958744049072
    7. ' new' → logprob: -6.509958744049072
    8. '```' → logprob: -8.009958267211914
    9. '            
' → logprob: -8.509958267211914
    10. '   ' → logprob: -8.634958267211914

Token 532: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10740992426872253
    2. 'if' → logprob: -2.357409954071045
    3. '#' → logprob: -6.232409954071045
    4. 'new' → logprob: -6.357409954071045
    5. '           ' → logprob: -6.732409954071045
    6. 'min' → logprob: -7.482409954071045
    7. 'next' → logprob: -7.607409954071045
    8. 'possible' → logprob: -8.107409477233887
    9. 'speed' → logprob: -8.857409477233887
    10. 'ns' → logprob: -8.857409477233887

Token 533: ' city' (ID: 5030)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2058803290128708
    2. ' v' → logprob: -2.2058804035186768
    3. '1' → logprob: -3.3308804035186768
    4. 'u' → logprob: -3.9558804035186768
    5. ' ' → logprob: -5.205880165100098
    6. ' u' → logprob: -5.580880165100098
    7. '(v' → logprob: -5.955880165100098
    8. '(u' → logprob: -6.205880165100098
    9. '0' → logprob: -6.455880165100098
    10. 'speed' → logprob: -6.705880165100098

Token 534: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5117982029914856
    2. 'u' → logprob: -1.0117981433868408
    3. ',' → logprob: -4.01179838180542
    4. ',u' → logprob: -4.76179838180542
    5. '=u' → logprob: -6.51179838180542
    6. '_,' → logprob: -6.76179838180542
    7. ' ,' → logprob: -7.01179838180542
    8. ' for' → logprob: -7.13679838180542
    9. ' =' → logprob: -7.26179838180542
    10. '   ' → logprob: -7.51179838180542

Token 535: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.65986567735672
    2. ',' → logprob: -1.0348656177520752
    3. ' for' → logprob: -2.409865617752075
    4. 'for' → logprob: -3.909865617752075
    5. ' ,' → logprob: -5.159865856170654
    6. ' to' → logprob: -5.909865856170654
    7. '
' → logprob: -6.534865856170654
    8. ' if' → logprob: -6.784865856170654
    9. '   ' → logprob: -7.034865856170654
    10. '            
' → logprob: -7.409865856170654

Token 536: ' came' (ID: 5831)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06820598989725113
    2. ' for' → logprob: -2.8182060718536377
    3. '#' → logprob: -5.818205833435059
    4. 'if' → logprob: -6.193205833435059
    5. 'next' → logprob: -7.443205833435059
    6. ' if' → logprob: -8.818205833435059
    7. 'new' → logprob: -9.318205833435059
    8. ' next' → logprob: -9.443205833435059
    9. 'possible' → logprob: -9.693205833435059
    10. '   ' → logprob: -10.193205833435059

Token 537: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0149025917053223
    2. ' at' → logprob: -1.5149025917053223
    3. ' with' → logprob: -1.5149025917053223
    4. 'with' → logprob: -2.3899025917053223
    5. '           ' → logprob: -3.3899025917053223
    6. ',' → logprob: -3.6399025917053223
    7. 'v' → logprob: -5.139902591705322
    8. ' ,' → logprob: -5.264902591705322
    9. 'at' → logprob: -5.389902591705322
    10. '=' → logprob: -5.514902591705322

Token 538: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.10817175358533859
    2. ' speed' → logprob: -2.7331717014312744
    3. 'v' → logprob: -3.3581717014312744
    4. ' v' → logprob: -6.7331719398498535
    5. 'a' → logprob: -7.9831719398498535
    6. 'some' → logprob: -8.358171463012695
    7. 'velocity' → logprob: -8.733171463012695
    8. 'prev' → logprob: -8.733171463012695
    9. 'previous' → logprob: -8.858171463012695
    10. '
' → logprob: -9.608171463012695

Token 539: ' v' (ID: 323)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40810126066207886
    2. '=v' → logprob: -2.1581013202667236
    3. 'v' → logprob: -2.5331013202667236
    4. ' v' → logprob: -2.7831013202667236
    5. ' =' → logprob: -3.2831013202667236
    6. ',' → logprob: -3.6581013202667236
    7. '1' → logprob: -5.5331010818481445
    8. ',v' → logprob: -6.1581010818481445
    9. '+' → logprob: -6.5331010818481445
    10. ' ' → logprob: -6.5331010818481445

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1403311938047409
    2. '           ' → logprob: -2.265331268310547
    3. ' ,' → logprob: -4.640331268310547
    4. ' and' → logprob: -5.265331268310547
    5. '            
' → logprob: -6.015331268310547
    6. ' to' → logprob: -6.640331268310547
    7. ' if' → logprob: -6.765331268310547
    8. ',
' → logprob: -6.765331268310547
    9. ' (' → logprob: -7.390331268310547
    10. '
' → logprob: -7.390331268310547

Token 541: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7278613448143005
    2. ' for' → logprob: -0.8528613448143005
    3. ' if' → logprob: -3.1028614044189453
    4. 'if' → logprob: -3.7278614044189453
    5. ' new' → logprob: -5.102861404418945
    6. '#' → logprob: -5.352861404418945
    7. 'new' → logprob: -6.102861404418945
    8. ' next' → logprob: -6.352861404418945
    9. '           ' → logprob: -6.477861404418945
    10. ' #' → logprob: -6.477861404418945

Token 542: ' leave' (ID: 7668)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.22256051003932953
    2. 'go' → logprob: -1.9725605249404907
    3. ' run' → logprob: -4.722560405731201
    4. ' use' → logprob: -4.847560405731201
    5. 'not' → logprob: -5.097560405731201
    6. ' not' → logprob: -5.597560405731201
    7. 'choose' → logprob: -5.972560405731201
    8. '   ' → logprob: -6.222560405731201
    9. ' choose' → logprob: -6.222560405731201
    10. 'run' → logprob: -6.347560405731201

Token 543: ' with' (ID: 483)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7429665327072144
    2. ' at' → logprob: -1.3679665327072144
    3. ' w' → logprob: -2.492966651916504
    4. 'with' → logprob: -3.367966651916504
    5. '           ' → logprob: -3.492966651916504
    6. 'at' → logprob: -3.617966651916504
    7. 'for' → logprob: -3.867966651916504
    8. ' with' → logprob: -3.992966651916504
    9. 'from' → logprob: -4.242966651916504
    10. 'u' → logprob: -4.492966651916504

Token 544: ' speed' (ID: 7733)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5990941524505615
    2. 'speed' → logprob: -1.5990941524505615
    3. '1' → logprob: -2.4740941524505615
    4. 'new' → logprob: -2.9740941524505615
    5. 'v' → logprob: -3.7240941524505615
    6. 'for' → logprob: -4.349094390869141
    7. 'next' → logprob: -4.474094390869141
    8. '```' → logprob: -4.599094390869141
    9. 'range' → logprob: -5.349094390869141
    10. 'c' → logprob: -5.349094390869141

Token 545: ' nv' (ID: 68641)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3927690088748932
    2. '1' → logprob: -2.1427690982818604
    3. ' =' → logprob: -2.5177690982818604
    4. 'for' → logprob: -4.017768859863281
    5. 'w' → logprob: -4.392768859863281
    6. 'v' → logprob: -4.392768859863281
    7. ' for' → logprob: -4.392768859863281
    8. '=v' → logprob: -4.392768859863281
    9. ' next' → logprob: -4.642768859863281
    10. '=w' → logprob: -4.892768859863281

Token 546: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1141071543097496
    2. ' =' → logprob: -2.489107131958008
    3. ' in' → logprob: -4.114107131958008
    4. ' for' → logprob: -5.989107131958008
    5. ' if' → logprob: -6.489107131958008
    6. ',' → logprob: -7.239107131958008
    7. '=
' → logprob: -7.614107131958008
    8. ')' → logprob: -7.989107131958008
    9. '=n' → logprob: -7.989107131958008
    10. '=[' → logprob: -8.114107131958008

Token 547: ' {' (ID: 354)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027056969702243805
    2. '[' → logprob: -3.902056932449341
    3. ' range' → logprob: -5.65205717086792
    4. '[v' → logprob: -6.27705717086792
    5. '1' → logprob: -7.40205717086792
    6. '{' → logprob: -8.527056694030762
    7. '(' → logprob: -9.027056694030762
    8. 'v' → logprob: -9.777056694030762
    9. '[n' → logprob: -10.527056694030762
    10. '(range' → logprob: -10.652056694030762

Token 548: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5566592812538147
    2. 'max' → logprob: -1.43165922164917
    3. '1' → logprob: -1.68165922164917
    4. ' max' → logprob: -7.43165922164917
    5. '0' → logprob: -7.55665922164917
    6. '   ' → logprob: -8.556659698486328
    7. '{' → logprob: -8.806659698486328
    8. ' v' → logprob: -8.806659698486328
    9. ' ' → logprob: -10.056659698486328
    10. '(max' → logprob: -10.306659698486328

Token 549: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04461696743965149
    2. '1' → logprob: -4.169617176055908
    3. ',' → logprob: -4.294617176055908
    4. '+' → logprob: -5.044617176055908
    5. ' -' → logprob: -5.044617176055908
    6. ' ,' → logprob: -7.419617176055908
    7. ' ' → logprob: -7.794617176055908
    8. '   ' → logprob: -8.79461669921875
    9. '           ' → logprob: -9.54461669921875
    10. ',v' → logprob: -9.54461669921875

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2070896476507187
    2. 'v' → logprob: -1.7070896625518799
    3. '0' → logprob: -5.707089424133301
    4. 'max' → logprob: -6.707089424133301
    5. ' v' → logprob: -8.0820894241333
    6. ' ' → logprob: -8.5820894241333
    7. '(v' → logprob: -8.8320894241333
    8. ',' → logprob: -9.0820894241333
    9. '-' → logprob: -9.3320894241333
    10. '   ' → logprob: -9.5820894241333

Token 551: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019886383786797523
    2. ',v' → logprob: -4.019886493682861
    3. ' ,' → logprob: -6.394886493682861
    4. ',n' → logprob: -10.894886016845703
    5. ',
' → logprob: -11.019886016845703
    6. '1' → logprob: -12.019886016845703
    7. '-' → logprob: -12.269886016845703
    8. ' ' → logprob: -12.894886016845703
    9. 'v' → logprob: -13.019886016845703
    10. ',m' → logprob: -13.269886016845703

Token 552: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.025333508849143982
    2. ',' → logprob: -3.7753334045410156
    3. ' ,' → logprob: -6.275333404541016
    4. ',n' → logprob: -9.775333404541016
    5. '-' → logprob: -9.775333404541016
    6. '   ' → logprob: -10.900333404541016
    7. ',w' → logprob: -11.025333404541016
    8. '0' → logprob: -11.525333404541016
    9. '+' → logprob: -11.525333404541016
    10. 'v' → logprob: -11.775333404541016

Token 553: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010722271399572492
    2. ',v' → logprob: -7.001072406768799
    3. '1' → logprob: -9.12607192993164
    4. ',' → logprob: -10.62607192993164
    5. ' +' → logprob: -11.00107192993164
    6. 'v' → logprob: -12.50107192993164
    7. '+,' → logprob: -12.75107192993164
    8. '}' → logprob: -14.12607192993164
    9. '}+' → logprob: -14.12607192993164
    10. '+
' → logprob: -14.75107192993164

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012047011114191264
    2. '0' → logprob: -9.500120162963867
    3. ' ' → logprob: -10.000120162963867
    4. '```' → logprob: -16.250120162963867
    5. '}' → logprob: -17.250120162963867
    6. '+' → logprob: -17.375120162963867
    7. '   ' → logprob: -17.625120162963867
    8. '``' → logprob: -19.125120162963867
    9. '
' → logprob: -19.500120162963867
    10. '  ' → logprob: -19.625120162963867

Token 555: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.007779114414006472
    2. '}
' → logprob: -5.632779121398926
    3. ',' → logprob: -5.882779121398926
    4. '           ' → logprob: -7.382779121398926
    5. ' }' → logprob: -8.132779121398926
    6. '               ' → logprob: -8.257779121398926
    7. '}

' → logprob: -10.132779121398926
    8. ' ,' → logprob: -10.257779121398926
    9. '}:' → logprob: -10.382779121398926
    10. '}
' → logprob: -11.382779121398926

Token 556: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007293514790944755
    2. '            
' → logprob: -8.37572956085205
    3. ',' → logprob: -9.12572956085205
    4. '       ' → logprob: -10.00072956085205
    5. ' if' → logprob: -10.00072956085205
    6. '          ' → logprob: -10.12572956085205
    7. '	       ' → logprob: -10.37572956085205
    8. '   ' → logprob: -10.62572956085205
    9. '		' → logprob: -10.62572956085205
    10. '           
' → logprob: -10.62572956085205

Token 557: ' in' (ID: 306)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0711665153503418
    2. ' ' → logprob: -2.696166515350342
    3. '0' → logprob: -7.571166515350342
    4. 'v' → logprob: -7.696166515350342
    5. 'nv' → logprob: -9.3211669921875
    6. ' v' → logprob: -9.5711669921875
    7. '   ' → logprob: -10.4461669921875
    8. '```' → logprob: -10.9461669921875
    9. '  ' → logprob: -11.3211669921875
    10. ' nv' → logprob: -11.6961669921875

Token 558: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7546191215515137
    2. 'range' → logprob: -1.5046191215515137
    3. '1' → logprob: -1.7546191215515137
    4. ' range' → logprob: -2.5046191215515137
    5. ' [' → logprob: -3.7546191215515137
    6. '{' → logprob: -3.7546191215515137
    7. ' ' → logprob: -5.629619121551514
    8. ' {' → logprob: -6.254619121551514
    9. '(' → logprob: -8.129619598388672
    10. '   ' → logprob: -9.004619598388672

Token 559: ' [' (ID: 723)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0361417755484581
    2. ' and' → logprob: -3.536141872406006
    3. '               ' → logprob: -6.161141872406006
    4. ',' → logprob: -6.411141872406006
    5. ' if' → logprob: -7.161141872406006
    6. 'and' → logprob: -7.536141872406006
    7. ' (' → logprob: -8.286141395568848
    8. '   ' → logprob: -8.536141395568848
    9. ':
' → logprob: -8.661141395568848
    10. '          ' → logprob: -9.411141395568848

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001984146365430206
    2. ' ' → logprob: -8.625198364257812
    3. 'max' → logprob: -11.625198364257812
    4. '   ' → logprob: -12.250198364257812
    5. '(' → logprob: -13.625198364257812
    6. ' max' → logprob: -13.875198364257812
    7. '0' → logprob: -13.875198364257812
    8. '```' → logprob: -14.250198364257812
    9. '
' → logprob: -15.250198364257812
    10. ',' → logprob: -15.250198364257812

Token 561: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008222936652600765
    2. ' ,' → logprob: -4.883223056793213
    3. '1' → logprob: -7.758223056793213
    4. '30' → logprob: -9.508222579956055
    5. ',
' → logprob: -10.133222579956055
    6. '```' → logprob: -10.883222579956055
    7. '3' → logprob: -11.133222579956055
    8. '31' → logprob: -11.383222579956055
    9. '           ' → logprob: -12.008222579956055
    10. '   ' → logprob: -12.008222579956055

Token 562: 'c' (ID: 66)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.250019073486328
    3. '31' → logprob: -12.500019073486328
    4. '```' → logprob: -14.125019073486328
    5. '
' → logprob: -14.750019073486328
    6. '1' → logprob: -14.875019073486328
    7. '   ' → logprob: -15.000019073486328
    8. '3' → logprob: -15.375019073486328
    9. '``' → logprob: -17.250019073486328
    10. '  ' → logprob: -17.500019073486328

Token 563: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09912453591823578
    2. ']' → logprob: -2.9741244316101074
    3. '1' → logprob: -4.224124431610107
    4. '30' → logprob: -4.224124431610107
    5. ' ,' → logprob: -5.099124431610107
    6. ']:
' → logprob: -6.099124431610107
    7. '   ' → logprob: -6.349124431610107
    8. '],' → logprob: -7.224124431610107
    9. ',
' → logprob: -7.349124431610107
    10. ' ' → logprob: -7.349124431610107

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026973435655236244
    2. '               ' → logprob: -3.9019734859466553
    3. ' and' → logprob: -7.151973247528076
    4. '       ' → logprob: -7.276973247528076
    5. ',' → logprob: -7.401973247528076
    6. '            
' → logprob: -7.401973247528076
    7. '                           ' → logprob: -7.776973247528076
    8. '                   ' → logprob: -7.776973247528076
    9. '          ' → logprob: -7.901973247528076
    10. ' if' → logprob: -8.276973724365234

Token 565: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008230387233197689
    2. ' for' → logprob: -5.008230209350586
    3. 'for' (adapté à ' for') → logprob: -6.883230209350586
    4. '
' → logprob: -8.758230209350586
    5. '            
' → logprob: -9.883230209350586
    6. ' 
' → logprob: -9.883230209350586
    7. '		' → logprob: -10.008230209350586
    8. '               ' → logprob: -10.383230209350586
    9. '	       ' → logprob: -10.383230209350586
    10. '       ' → logprob: -10.758230209350586

Token 566: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.06996922940015793
    2. ' nv' → logprob: -2.6949691772460938
    3. '   ' → logprob: -11.694969177246094
    4. '```' → logprob: -11.944969177246094
    5. 'n' → logprob: -12.069969177246094
    6. '_nv' → logprob: -12.569969177246094
    7. '`' → logprob: -12.694969177246094
    8. 'new' → logprob: -13.444969177246094
    9. ' ' → logprob: -13.694969177246094
    10. '  ' → logprob: -14.319969177246094

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47411954402923584
    2. 'in' → logprob: -0.9741195440292358
    3. '	in' → logprob: -10.224119186401367
    4. '   ' → logprob: -13.849119186401367
    5. ' ' → logprob: -14.224119186401367
    6. 'n' → logprob: -14.349119186401367
    7. '_in' → logprob: -14.474119186401367
    8. 'inthe' → logprob: -14.724119186401367
    9. '  ' → logprob: -14.849119186401367
    10. 'In' → logprob: -14.849119186401367

Token 568: ' [' (ID: 723)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.08707910031080246
    2. ' range' → logprob: -3.4620790481567383
    3. '(v' → logprob: -3.5870790481567383
    4. 'range' → logprob: -3.8370790481567383
    5. ' v' → logprob: -6.587079048156738
    6. 'v' → logprob: -6.837079048156738
    7. ' [' → logprob: -8.462079048156738
    8. ' (' → logprob: -9.712079048156738
    9. '{' → logprob: -10.962079048156738
    10. '(range' → logprob: -11.212079048156738

Token 569: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.873571692267433e-05
    2. 'max' → logprob: -9.750068664550781
    3. ' v' → logprob: -12.000068664550781
    4. '   ' → logprob: -12.625068664550781
    5. ' ' → logprob: -15.500068664550781
    6. '(v' → logprob: -15.750068664550781
    7. '	v' → logprob: -16.25006866455078
    8. '`' → logprob: -17.00006866455078
    9. ' max' → logprob: -17.00006866455078
    10. 'x' → logprob: -17.25006866455078

Token 570: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0021876145619899035
    2. ' -' → logprob: -6.127187728881836
    3. ',' → logprob: -13.502187728881836
    4. ',v' → logprob: -14.127187728881836
    5. '1' → logprob: -15.752187728881836
    6. 'v' → logprob: -16.377187728881836
    7. '```' → logprob: -16.627187728881836
    8. ']' → logprob: -17.002187728881836
    9. '   ' → logprob: -17.002187728881836
    10. '-
' → logprob: -17.252187728881836

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -11.250025749206543
    3. '-' → logprob: -11.500025749206543
    4. 'v' → logprob: -13.625025749206543
    5. '0' → logprob: -14.375025749206543
    6. '   ' → logprob: -15.000025749206543
    7. ',' → logprob: -15.750025749206543
    8. ' -' → logprob: -15.750025749206543
    9. 'max' → logprob: -16.50002670288086
    10. '(v' → logprob: -16.75002670288086

Token 572: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.20438118278980255
    2. ',' → logprob: -1.7043812274932861
    3. ' ,' → logprob: -5.829380989074707
    4. 'v' → logprob: -11.329380989074707
    5. ',n' → logprob: -11.829380989074707
    6. ',
' → logprob: -13.204380989074707
    7. ',w' → logprob: -14.204380989074707
    8. ' v' → logprob: -14.829380989074707
    9. '   ' → logprob: -15.204380989074707
    10. 'n' → logprob: -15.954380989074707

Token 573: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.007884489372372627
    2. ',' → logprob: -5.132884502410889
    3. ' ,' → logprob: -6.257884502410889
    4. 'v' → logprob: -10.38288402557373
    5. ',n' → logprob: -12.50788402557373
    6. ' v' → logprob: -13.00788402557373
    7. ',
' → logprob: -14.25788402557373
    8. ' ' → logprob: -15.38288402557373
    9. '   ' → logprob: -15.38288402557373
    10. 'nv' → logprob: -15.50788402557373

Token 574: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.394135612528771e-05
    2. '1' → logprob: -10.625043869018555
    3. ',v' → logprob: -11.125043869018555
    4. ' +' → logprob: -13.125043869018555
    5. 'v' → logprob: -13.250043869018555
    6. ',' → logprob: -14.375043869018555
    7. '+
' → logprob: -15.625043869018555
    8. '+,' → logprob: -16.500043869018555
    9. ']+' → logprob: -16.625043869018555
    10. '```' → logprob: -17.875043869018555

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '+' → logprob: -11.250025749206543
    3. ' ' → logprob: -11.500025749206543
    4. '0' → logprob: -12.875025749206543
    5. '
' → logprob: -16.31252670288086
    6. '   ' → logprob: -16.56252670288086
    7. '```' → logprob: -16.75002670288086
    8. ']' → logprob: -17.81252670288086
    9. '  ' → logprob: -18.18752670288086
    10. '2' → logprob: -18.31252670288086

Token 576: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.012976689264178276
    2. ']:' → logprob: -4.38797664642334
    3. ']:
' → logprob: -8.01297664642334
    4. ']' → logprob: -10.01297664642334
    5. ']:

' → logprob: -10.63797664642334
    6. '       ' → logprob: -10.88797664642334
    7. ' ]' → logprob: -10.88797664642334
    8. '               ' → logprob: -11.51297664642334
    9. '           ' → logprob: -12.01297664642334
    10. '   ' → logprob: -12.63797664642334

Token 577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2235860824584961
    2. ' if' → logprob: -1.723586082458496
    3. ' ' → logprob: -5.098586082458496
    4. '                               ' → logprob: -5.598586082458496
    5. '           ' → logprob: -5.973586082458496
    6. 'if' → logprob: -6.098586082458496
    7. '<|end|>' → logprob: -6.348586082458496
    8. '       ' → logprob: -6.848586082458496
    9. '   ' → logprob: -7.098586082458496
    10. '              ' → logprob: -7.973586082458496

Token 578: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12251543998718262
    2. ' if' → logprob: -2.4975154399871826
    3. '                ' → logprob: -3.9975154399871826
    4. '                   ' → logprob: -4.497515678405762
    5. 'if' (adapté à ' if') → logprob: -6.372515678405762
    6. '                               ' → logprob: -7.497515678405762
    7. '   ' → logprob: -8.247515678405762
    8. '	               ' → logprob: -8.747515678405762
    9. ' ' → logprob: -8.872515678405762
    10. '<|end|>' → logprob: -9.372515678405762

Token 579: ' nv' (ID: 68641)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13329297304153442
    2. ' ' → logprob: -2.1332929134368896
    3. 'nv' → logprob: -5.508293151855469
    4. ' nv' → logprob: -6.133293151855469
    5. '   ' → logprob: -9.633293151855469
    6. '0' → logprob: -11.133293151855469
    7. '                   ' → logprob: -11.508293151855469
    8. '  ' → logprob: -12.008293151855469
    9. '_nv' → logprob: -12.195793151855469
    10. 'v' → logprob: -12.320793151855469

Token 580: '<' (ID: 27)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.19221843779087067
    2. ' >=' → logprob: -2.067218542098999
    3. '>' → logprob: -3.317218542098999
    4. '<' → logprob: -4.81721830368042
    5. ' <' → logprob: -6.06721830368042
    6. ' >' → logprob: -6.81721830368042
    7. '<=' → logprob: -8.692218780517578
    8. '==' → logprob: -9.192218780517578
    9. ' in' → logprob: -9.692218780517578
    10. ' <=' → logprob: -10.067218780517578

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.250016212463379
    3. '=' → logprob: -13.000016212463379
    4. '   ' → logprob: -15.250016212463379
    5. '
' → logprob: -16.125015258789062
    6. '```' → logprob: -16.125015258789062
    7. '0' → logprob: -16.875015258789062
    8. '>' → logprob: -18.375015258789062
    9. '>=' → logprob: -19.062515258789062
    10. '  ' → logprob: -19.062515258789062

Token 582: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.033798299729824066
    2. 'or' → logprob: -3.4087982177734375
    3. '               ' → logprob: -9.033798217773438
    4. '                   ' → logprob: -10.658798217773438
    5. '	or' → logprob: -12.908798217773438
    6. '```' → logprob: -13.033798217773438
    7. '                ' → logprob: -13.783798217773438
    8. '           ' → logprob: -14.408798217773438
    9. '<|end|>' → logprob: -14.408798217773438
    10. '                       ' → logprob: -14.533798217773438

Token 583: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.00029685118352063
    2. ' nv' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.125296592712402
    4. '                   ' → logprob: -15.625296592712402
    5. '               ' → logprob: -16.12529754638672
    6. '_nv' → logprob: -16.37529754638672
    7. '           ' → logprob: -17.12529754638672
    8. 'n' → logprob: -17.37529754638672
    9. '    ' → logprob: -17.75029754638672
    10. '       ' → logprob: -17.87529754638672

Token 584: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008617766201496124
    2. ' >' → logprob: -4.758617877960205
    3. '1' → logprob: -14.383617401123047
    4. ' ' → logprob: -14.758617401123047
    5. '>=' → logprob: -15.133617401123047
    6. '()>' → logprob: -15.633617401123047
    7. '```' → logprob: -15.633617401123047
    8. '   ' → logprob: -15.883617401123047
    9. '>C' → logprob: -15.883617401123047
    10. '0' → logprob: -15.883617401123047

Token 585: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015872348740231246
    2. ' c' → logprob: -8.750158309936523
    3. '30' → logprob: -16.500158309936523
    4. '	c' → logprob: -16.625158309936523
    5. ' ' → logprob: -17.625158309936523
    6. '   ' → logprob: -18.750158309936523
    7. 'max' → logprob: -19.250158309936523
    8. '
' → logprob: -19.375158309936523
    9. '=c' → logprob: -19.750158309936523
    10. '  ' → logprob: -19.875158309936523

Token 586: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39129638671875
    2. ':
' → logprob: -1.14129638671875
    3. ' or' → logprob: -6.26629638671875
    4. '               ' → logprob: -6.76629638671875
    5. '                   ' → logprob: -7.01629638671875
    6. 'continue' → logprob: -9.14129638671875
    7. '                       ' → logprob: -9.39129638671875
    8. ' continue' → logprob: -9.51629638671875
    9. '           ' → logprob: -9.51629638671875
    10. '	continue' → logprob: -9.76629638671875

Token 587: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007299474673345685
    2. 'continue' → logprob: -8.12572956085205
    3. '               ' → logprob: -8.50072956085205
    4. ' continue' → logprob: -9.00072956085205
    5. '                       ' → logprob: -10.00072956085205
    6. '   ' → logprob: -10.62572956085205
    7. '           ' → logprob: -10.75072956085205
    8. '	continue' → logprob: -12.37572956085205
    9. '       ' → logprob: -12.50072956085205
    10. '		           ' → logprob: -13.25072956085205

Token 588: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2079191505908966
    2. '                   ' → logprob: -1.7079191207885742
    3. ' continue' → logprob: -5.457919120788574
    4. '                       ' → logprob: -6.332919120788574
    5. '	continue' → logprob: -8.707919120788574
    6. '   ' → logprob: -8.707919120788574
    7. '               ' → logprob: -9.582919120788574
    8. '       ' → logprob: -10.957919120788574
    9. '           ' → logprob: -10.957919120788574
    10. ' ' → logprob: -13.082919120788574

Token 589: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036416458897292614
    2. '                   ' → logprob: -6.503641605377197
    3. '                
' → logprob: -6.628641605377197
    4. '           ' → logprob: -8.003642082214355
    5. '
' → logprob: -9.003642082214355
    6. '                    
' → logprob: -9.628642082214355
    7. '<|end|>' → logprob: -9.878642082214355
    8. '       ' → logprob: -10.253642082214355
    9. '                        
' → logprob: -10.503642082214355
    10. '                ' → logprob: -10.503642082214355

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07661360502243042
    2. '                   ' → logprob: -2.701613664627075
    3. '                       ' → logprob: -5.826613426208496
    4. '```' → logprob: -6.826613426208496
    5. '                               ' → logprob: -7.576613426208496
    6. '                ' → logprob: -7.701613426208496
    7. '                           ' → logprob: -7.826613426208496
    8. '                
' → logprob: -8.201613426208496
    9. '                        
' → logprob: -8.576613426208496
    10. '                    
' → logprob: -8.951613426208496

Token 591: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.34663528203964233
    2. 'time' → logprob: -2.471635341644287
    3. 'nt' → logprob: -3.096635341644287
    4. 'ntime' → logprob: -3.221635341644287
    5. 'n' → logprob: -3.596635341644287
    6. '               ' → logprob: -3.721635341644287
    7. 'nd' → logprob: -3.721635341644287
    8. 'next' → logprob: -3.721635341644287
    9. 'if' → logprob: -4.346635341644287
    10. 'nc' → logprob: -6.221635341644287

Token 592: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9937745332717896
    2. 'time' → logprob: -1.2437745332717896
    3. 'nt' → logprob: -2.2437744140625
    4. 'n' → logprob: -2.4937744140625
    5. 'ntime' → logprob: -2.4937744140625
    6. 'nd' → logprob: -3.2437744140625
    7. 'next' → logprob: -4.2437744140625
    8. 'nc' → logprob: -5.4937744140625
    9. 'if' → logprob: -5.8687744140625
    10. 'travel' → logprob: -6.2437744140625

Token 593: ' first' (ID: 1577)
  Prédit: ' road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.32209861278533936
    2. 'road' → logprob: -1.4470986127853394
    3. ' roads' → logprob: -5.072098731994629
    4. ' new' → logprob: -5.447098731994629
    5. 'new' → logprob: -5.447098731994629
    6. 'w' → logprob: -5.572098731994629
    7. ' next' → logprob: -5.697098731994629
    8. 'edges' → logprob: -5.822098731994629
    9. 'next' → logprob: -6.072098731994629
    10. 'e' → logprob: -6.322098731994629

Token 594: ' move' (ID: 5275)
  Prédit: ' road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.6508117318153381
    2. 'road' → logprob: -1.7758116722106934
    3. ' line' → logprob: -2.0258116722106934
    4. ' move' → logprob: -2.6508116722106934
    5. ' edge' → logprob: -3.9008116722106934
    6. 'move' → logprob: -4.025811672210693
    7. '                   ' → logprob: -4.275811672210693
    8. ' if' → logprob: -4.400811672210693
    9. '               ' → logprob: -4.900811672210693
    10. 'edge' → logprob: -5.025811672210693

Token 595: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22081124782562256
    2. ' if' → logprob: -2.095811367034912
    3. ',' → logprob: -2.720811367034912
    4. 'if' → logprob: -5.220811367034912
    5. '                   ' → logprob: -6.345811367034912
    6. ' cost' → logprob: -7.970811367034912
    7. ' ,' → logprob: -8.095810890197754
    8. 'distance' → logprob: -8.470810890197754
    9. 'cost' → logprob: -8.845810890197754
    10. ' (' → logprob: -8.970810890197754

Token 596: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37029922008514404
    2. 'if' → logprob: -1.245299220085144
    3. '               ' → logprob: -3.8702993392944336
    4. '                   ' → logprob: -7.370299339294434
    5. '                       ' → logprob: -10.370299339294434
    6. '   ' → logprob: -11.370299339294434
    7. '                ' → logprob: -11.370299339294434
    8. 'dist' → logprob: -11.495299339294434
    9. 'new' → logprob: -11.745299339294434
    10. '           ' → logprob: -11.870299339294434

Token 597: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7356535792350769
    2. ' v' → logprob: -1.1106536388397217
    3. ' u' → logprob: -2.3606536388397217
    4. 'u' → logprob: -2.6106536388397217
    5. ' pv' → logprob: -4.360653400421143
    6. 'pv' → logprob: -4.985653400421143
    7. ' s' → logprob: -6.860653400421143
    8. 'p' → logprob: -7.235653400421143
    9. ' p' → logprob: -7.235653400421143
    10. 's' → logprob: -7.360653400421143

Token 598: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00761869503185153
    2. ' ==' → logprob: -4.8826189041137695
    3. ']==' → logprob: -12.00761890411377
    4. '=' → logprob: -13.00761890411377
    5. '==
' → logprob: -13.50761890411377
    6. ')==' → logprob: -13.63261890411377
    7. '0' → logprob: -14.63261890411377
    8. '===' → logprob: -15.50761890411377
    9. '```' → logprob: -15.50761890411377
    10. '']==' → logprob: -15.88261890411377

Token 599: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.125017166137695
    3. '=' → logprob: -13.125017166137695
    4. '1' → logprob: -14.500017166137695
    5. '==' → logprob: -16.875017166137695
    6. '   ' → logprob: -17.000017166137695
    7. '```' → logprob: -17.687517166137695
    8. '...' → logprob: -17.937517166137695
    9. '  ' → logprob: -18.187517166137695
    10. '۰' → logprob: -18.562517166137695

Token 600: ' means' (ID: 4748)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1283760368824005
    2. '                   ' → logprob: -2.878376007080078
    3. ':
' → logprob: -3.753376007080078
    4. '               ' → logprob: -4.253376007080078
    5. ':' → logprob: -4.628376007080078
    6. 'and' → logprob: -4.878376007080078
    7. ',' → logprob: -5.378376007080078
    8. ' or' → logprob: -5.753376007080078
    9. '                       ' → logprob: -6.878376007080078
    10. '           ' → logprob: -9.503376007080078

Token 601: ' initial' (ID: 4871)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.7215920090675354
    2. ' nv' → logprob: -0.7215920090675354
    3. ' u' → logprob: -4.471591949462891
    4. 'u' → logprob: -4.846591949462891
    5. ' True' → logprob: -5.721591949462891
    6. 'True' → logprob: -6.221591949462891
    7. 'n' → logprob: -7.096591949462891
    8. 'v' → logprob: -7.221591949462891
    9. '1' → logprob: -8.22159194946289
    10. '#' → logprob: -8.22159194946289

Token 602: ' position' (ID: 4010)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0154370069503784
    2. 'state' → logprob: -1.5154370069503784
    3. ',' → logprob: -2.140437126159668
    4. ' (' → logprob: -2.390437126159668
    5. ' move' → logprob: -2.640437126159668
    6. ' state' → logprob: -2.890437126159668
    7. '               ' → logprob: -4.015437126159668
    8. 'move' → logprob: -4.265437126159668
    9. '                       ' → logprob: -5.015437126159668
    10. '
' → logprob: -5.390437126159668

Token 603: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5432848334312439
    2. ' and' → logprob: -1.9182848930358887
    3. ',' → logprob: -2.0432848930358887
    4. '               ' → logprob: -2.1682848930358887
    5. ':' → logprob: -4.168284893035889
    6. ':
' → logprob: -4.668284893035889
    7. 'and' → logprob: -6.918284893035889
    8. '                       ' → logprob: -7.793284893035889
    9. ' if' → logprob: -8.04328441619873
    10. ' ,' → logprob: -8.16828441619873

Token 604: ' must' (ID: 2804)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.2471866607666016
    2. 'if' → logprob: -1.3721866607666016
    3. 'nv' → logprob: -1.7471866607666016
    4. ' if' → logprob: -2.2471866607666016
    5. '#' → logprob: -2.4971866607666016
    6. 'dist' → logprob: -3.1221866607666016
    7. '               ' → logprob: -4.247186660766602
    8. ' #' → logprob: -4.747186660766602
    9. ' nv' → logprob: -4.997186660766602
    10. '                       ' → logprob: -5.372186660766602

Token 605: ' leave' (ID: 7668)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0024458118714392185
    2. ' nv' → logprob: -7.002445697784424
    3. 'be' → logprob: -7.002445697784424
    4. 'v' → logprob: -8.252446174621582
    5. ' be' → logprob: -8.752446174621582
    6. '_nv' → logprob: -8.877446174621582
    7. '                   ' → logprob: -10.627446174621582
    8. 'continue' → logprob: -11.502446174621582
    9. '=' → logprob: -12.502446174621582
    10. 'only' → logprob: -12.627446174621582

Token 606: ' at' (ID: 540)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -1.1264158487319946
    2. ' nv' → logprob: -1.2514158487319946
    3. 'with' → logprob: -1.6264158487319946
    4. ' with' → logprob: -1.8764158487319946
    5. ' at' → logprob: -3.501415729522705
    6. 'from' → logprob: -5.876415729522705
    7. 'at' → logprob: -6.001415729522705
    8. '```' → logprob: -7.126415729522705
    9. '               ' → logprob: -7.376415729522705
    10. ' from' → logprob: -7.751415729522705

Token 607: ' speed' (ID: 7733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5672058463096619
    2. 'speed' → logprob: -0.9422058463096619
    3. 'nv' → logprob: -3.1922059059143066
    4. ' nv' → logprob: -7.317205905914307
    5. ' speed' → logprob: -7.317205905914307
    6. '```' → logprob: -7.942205905914307
    7. ' ' → logprob: -8.817205429077148
    8. 'v' → logprob: -9.067205429077148
    9. 'velocity' → logprob: -11.317205429077148
    10. 'n' → logprob: -11.692205429077148

Token 608: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871736228466034
    2. '1' → logprob: -1.1371736526489258
    3. ' ' → logprob: -9.137173652648926
    4. '==' → logprob: -9.637173652648926
    5. '                   ' → logprob: -9.762173652648926
    6. '```' → logprob: -10.637173652648926
    7. ' =' → logprob: -10.887173652648926
    8. '               ' → logprob: -11.512173652648926
    9. '                       ' → logprob: -12.012173652648926
    10. '>' → logprob: -13.012173652648926

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931670308113098
    2. '=' → logprob: -0.6931670308113098
    3. '```' → logprob: -11.818166732788086
    4. ' ' → logprob: -12.193166732788086
    5. '==' → logprob: -12.568166732788086
    6. ' =' → logprob: -12.943166732788086
    7. '`' → logprob: -15.443166732788086
    8. '<|end|>' → logprob: -15.693166732788086
    9. '>' → logprob: -15.818166732788086
    10. '=
' → logprob: -15.943166732788086

Token 610: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24403081834316254
    2. '                   ' → logprob: -1.6190308332443237
    3. ' and' → logprob: -4.869030952453613
    4. ',' → logprob: -5.369030952453613
    5. ':' → logprob: -6.244030952453613
    6. ' if' → logprob: -6.369030952453613
    7. '                       ' → logprob: -7.119030952453613
    8. '           ' → logprob: -8.244030952453613
    9. '                ' → logprob: -8.369030952453613
    10. 'if' → logprob: -8.619030952453613

Token 611: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041160158812999725
    2. '                   ' → logprob: -3.2911601066589355
    3. ' if' → logprob: -6.4161601066589355
    4. '                ' → logprob: -8.166160583496094
    5. 'if' → logprob: -8.291160583496094
    6. '           ' → logprob: -8.541160583496094
    7. '                       ' → logprob: -8.541160583496094
    8. ' and' → logprob: -8.666160583496094
    9. ',' → logprob: -9.416160583496094
    10. '              ' → logprob: -9.791160583496094

Token 612: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043647125363349915
    2. '                   ' → logprob: -3.168647050857544
    3. '           ' → logprob: -8.668646812438965
    4. '                       ' → logprob: -8.918646812438965
    5. '```' → logprob: -9.418646812438965
    6. ' if' → logprob: -9.668646812438965
    7. '                ' → logprob: -9.918646812438965
    8. ' and' → logprob: -10.668646812438965
    9. '                           ' → logprob: -10.918646812438965
    10. '                               ' → logprob: -11.043646812438965

Token 613: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5943646430969238
    2. 'if' (adapté à ' if') → logprob: -1.4693646430969238
    3. ' if' → logprob: -1.8443646430969238
    4. '               ' → logprob: -2.844364643096924
    5. '                           ' → logprob: -7.719364643096924
    6. '                       ' → logprob: -7.844364643096924
    7. '                ' → logprob: -8.344364166259766
    8. '                               ' → logprob: -8.719364166259766
    9. '           ' → logprob: -9.344364166259766
    10. '```' → logprob: -9.469364166259766

Token 614: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3869001865386963
    2. ' v' → logprob: -1.1369001865386963
    3. '(v' → logprob: -11.636899948120117
    4. '   ' → logprob: -11.761899948120117
    5. ' ' → logprob: -12.511899948120117
    6. '	v' → logprob: -12.761899948120117
    7. '  ' → logprob: -13.136899948120117
    8. '    ' → logprob: -13.886899948120117
    9. ' (' → logprob: -14.386899948120117
    10. ' not' → logprob: -14.761899948120117

Token 615: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011064798571169376
    2. ' ==' → logprob: -4.5110650062561035
    3. '=' → logprob: -12.136064529418945
    4. '==
' → logprob: -12.511064529418945
    5. ']==' → logprob: -12.511064529418945
    6. ')==' → logprob: -13.136064529418945
    7. '0' → logprob: -14.386064529418945
    8. '```' → logprob: -14.386064529418945
    9. '()==' → logprob: -15.261064529418945
    10. '===' → logprob: -15.386064529418945

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '1' → logprob: -17.625001907348633
    4. '=' → logprob: -18.750001907348633
    5. '>' → logprob: -19.000001907348633
    6. '۰' → logprob: -19.375001907348633
    7. '<|end|>' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '...' → logprob: -20.875001907348633
    10. '
' → logprob: -20.937501907348633

Token 617: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1806931346654892
    2. 'and' → logprob: -1.8056931495666504
    3. '                   ' → logprob: -7.43069314956665
    4. '               ' → logprob: -9.055692672729492
    5. '                       ' → logprob: -9.055692672729492
    6. '	and' → logprob: -9.930692672729492
    7. '                           ' → logprob: -10.680692672729492
    8. ' ' → logprob: -11.680692672729492
    9. ':
' → logprob: -12.305692672729492
    10. ':' → logprob: -12.430692672729492

Token 618: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.25193455815315247
    2. ' nv' → logprob: -1.50193452835083
    3. '_nv' → logprob: -13.001935005187988
    4. '   ' → logprob: -13.626935005187988
    5. 'n' → logprob: -13.751935005187988
    6. ' ' → logprob: -15.376935005187988
    7. '    ' → logprob: -15.501935005187988
    8. '  ' → logprob: -15.751935005187988
    9. '                   ' → logprob: -16.751934051513672
    10. '       ' → logprob: -16.751934051513672

Token 619: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023325840011239052
    2. '==' → logprob: -4.0233259201049805
    3. ' !=' → logprob: -5.2733259201049805
    4. ' ==' → logprob: -10.64832592010498
    5. '1' → logprob: -12.39832592010498
    6. '```' → logprob: -13.27332592010498
    7. '()!=' → logprob: -13.52332592010498
    8. '!==' → logprob: -13.64832592010498
    9. ')!=' → logprob: -13.77332592010498
    10. ']!=' → logprob: -14.14832592010498

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.75
    4. '
' → logprob: -19.375
    5. '   ' → logprob: -20.5
    6. '0' → logprob: -20.5
    7. '  ' → logprob: -21.0
    8. '۱' → logprob: -21.125
    9. '<|end|>' → logprob: -21.125
    10. '`' → logprob: -21.375

Token 621: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4808758795261383
    2. ':' → logprob: -0.9808758497238159
    3. '                   ' → logprob: -5.7308759689331055
    4. '               ' → logprob: -6.1058759689331055
    5. '                       ' → logprob: -7.9808759689331055
    6. 'continue' → logprob: -7.9808759689331055
    7. '           ' → logprob: -8.355875968933105
    8. ' continue' → logprob: -8.605875968933105
    9. '	continue' → logprob: -9.480875968933105
    10. '                           ' → logprob: -9.730875968933105

Token 622: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012401100248098373
    2. 'continue' → logprob: -7.126240253448486
    3. '                       ' → logprob: -8.376239776611328
    4. '               ' → logprob: -9.126239776611328
    5. '   ' → logprob: -10.126239776611328
    6. ' continue' → logprob: -10.251239776611328
    7. '           ' → logprob: -12.001239776611328
    8. '	continue' → logprob: -12.126239776611328
    9. '                  ' → logprob: -12.626239776611328
    10. '                           ' → logprob: -13.126239776611328

Token 623: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.00028040475444868207
    2. '                   ' → logprob: -8.750280380249023
    3. ' continue' → logprob: -9.250280380249023
    4. '                       ' → logprob: -11.250280380249023
    5. '   ' → logprob: -11.500280380249023
    6. '               ' → logprob: -13.500280380249023
    7. '	continue' → logprob: -13.875280380249023
    8. 'break' → logprob: -16.000280380249023
    9. '           ' → logprob: -16.125280380249023
    10. '                           ' → logprob: -16.375280380249023

Token 624: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008532279753126204
    2. '                
' → logprob: -7.375853061676025
    3. '                   ' → logprob: -9.250853538513184
    4. '           ' → logprob: -10.125853538513184
    5. '```' → logprob: -10.875853538513184
    6. '                ' → logprob: -11.125853538513184
    7. '              ' → logprob: -11.500853538513184
    8. '                    
' → logprob: -11.625853538513184
    9. '<|end|>' → logprob: -11.625853538513184
    10. '       ' → logprob: -12.625853538513184

Token 625: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001264282618649304
    2. 'cost' → logprob: -7.8762640953063965
    3. '```' → logprob: -8.251264572143555
    4. '                
' → logprob: -8.501264572143555
    5. '                   ' → logprob: -9.376264572143555
    6. 'new' → logprob: -10.001264572143555
    7. 'next' → logprob: -10.001264572143555
    8. '           ' → logprob: -10.251264572143555
    9. 'distance' → logprob: -10.251264572143555
    10. ' cost' → logprob: -10.501264572143555

Token 626: ' n' (ID: 297)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9697376489639282
    2. 'new' → logprob: -1.0947376489639282
    3. 'n' (adapté à ' n') → logprob: -2.7197375297546387
    4. 'nd' → logprob: -2.7197375297546387
    5. 'ntime' → logprob: -2.7197375297546387
    6. 'nt' → logprob: -3.3447375297546387
    7. 'next' → logprob: -4.094737529754639
    8. 'nc' → logprob: -4.719737529754639
    9. 'if' → logprob: -5.094737529754639
    10. 't' → logprob: -5.594737529754639

Token 627: 'cost' (ID: 33457)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.40099290013313293
    2. 'dist' → logprob: -2.6509928703308105
    3. 'cost' → logprob: -2.6509928703308105
    4. 'new' → logprob: -3.0259928703308105
    5. 'nv' → logprob: -3.0259928703308105
    6. 'n' → logprob: -3.4009928703308105
    7. 'nc' → logprob: -4.0259928703308105
    8. 'd' → logprob: -4.4009928703308105
    9. 'w' → logprob: -4.6509928703308105
    10. 'ext' → logprob: -5.0259928703308105

Token 628: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016037534922361374
    2. ' =' → logprob: -4.141037464141846
    3. '=c' → logprob: -13.766037940979004
    4. '=float' → logprob: -14.891037940979004
    5. 'cost' → logprob: -15.016037940979004
    6. '=cut' → logprob: -15.266037940979004
    7. '   ' → logprob: -15.641037940979004
    8. '＝' → logprob: -15.891037940979004
    9. '_=' → logprob: -16.016036987304688
    10. '=new' → logprob: -16.141036987304688

Token 629: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001234428636962548
    2. ' cost' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.500123977661133
    4. '
' → logprob: -18.375123977661133
    5. '(cost' → logprob: -19.000123977661133
    6. ' ' → logprob: -19.750123977661133
    7. '```' → logprob: -20.500123977661133
    8. '  ' → logprob: -20.875123977661133
    9. '
' → logprob: -21.375123977661133
    10. '_cost' → logprob: -21.625123977661133

Token 630: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32662433385849
    2. '+d' → logprob: -1.3266243934631348
    3. ' +' → logprob: -4.451624393463135
    4. '+(' → logprob: -6.451624393463135
    5. '+r' → logprob: -12.076623916625977
    6. '+c' → logprob: -12.451623916625977
    7. '+D' → logprob: -12.451623916625977
    8. '+n' → logprob: -12.701623916625977
    9. '+=' → logprob: -12.701623916625977
    10. '+s' → logprob: -12.826623916625977

Token 631: '/n' (ID: 18292)
  Prédit: '/n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.029822243377566338
    2. '/' → logprob: -3.52982234954834
    3. ' /' → logprob: -9.77982234954834
    4. '/v' → logprob: -12.15482234954834
    5. '/ng' → logprob: -12.65482234954834
    6. '/s' → logprob: -13.27982234954834
    7. '/
' → logprob: -13.77982234954834
    8. '/ec' → logprob: -13.90482234954834
    9. '/c' → logprob: -14.02982234954834
    10. '/div' → logprob: -14.52982234954834

Token 632: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5928495486150496e-05
    2. 'nv' → logprob: -11.750016212463379
    3. '```' → logprob: -13.250016212463379
    4. 'w' → logprob: -13.250016212463379
    5. 'c' → logprob: -13.875016212463379
    6. 'V' → logprob: -14.500016212463379
    7. '_nv' → logprob: -14.750016212463379
    8. '
' → logprob: -15.000016212463379
    9. 'ow' → logprob: -15.125016212463379
    10. '`' → logprob: -15.625016212463379

Token 633: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5106444358825684
    2. '
' → logprob: -1.7606444358825684
    3. ' if' → logprob: -1.7606444358825684
    4. 'if' → logprob: -3.2606444358825684
    5. '       ' → logprob: -5.135644435882568
    6. '           ' → logprob: -5.260644435882568
    7. ')' → logprob: -5.885644435882568
    8. ')
' → logprob: -7.135644435882568
    9. '                
' → logprob: -7.385644435882568
    10. '                   ' → logprob: -7.510644435882568

Token 634: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7807222008705139
    2. ' if' → logprob: -1.0307221412658691
    3. 'if' → logprob: -2.030722141265869
    4. '<|end|>' → logprob: -3.530722141265869
    5. ')' → logprob: -5.280722141265869
    6. '           ' → logprob: -5.405722141265869
    7. '
' → logprob: -5.655722141265869
    8. '                   ' → logprob: -5.780722141265869
    9. '       ' → logprob: -6.405722141265869
    10. '                               ' → logprob: -6.780722141265869

Token 635: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001600347168277949
    2. ' if' → logprob: -9.000160217285156
    3. '               ' → logprob: -10.250160217285156
    4. '                   ' → logprob: -14.125160217285156
    5. '           ' → logprob: -14.875160217285156
    6. '                       ' → logprob: -17.375160217285156
    7. '```' → logprob: -17.500160217285156
    8. '                
' → logprob: -17.750160217285156
    9. 'If' → logprob: -18.000160217285156
    10. '	if' → logprob: -18.375160217285156

Token 636: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15771858394145966
    2. ' dist' → logprob: -2.0327186584472656
    3. 'n' → logprob: -4.532718658447266
    4. ' n' → logprob: -6.032718658447266
    5. 'nc' → logprob: -6.407718658447266
    6. ' nc' → logprob: -9.782718658447266
    7. '   ' → logprob: -10.407718658447266
    8. '	dist' → logprob: -10.907718658447266
    9. '(dist' → logprob: -11.657718658447266
    10. '	n' → logprob: -12.907718658447266

Token 637: '[w' (ID: 94341)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.088346359931165e-07
    2. '[n' → logprob: -15.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. '[w' → logprob: -15.625000953674316
    5. 'u' → logprob: -16.125
    6. '[' → logprob: -16.875
    7. '=u' → logprob: -17.375
    8. '[s' → logprob: -18.125
    9. ' u' → logprob: -18.625
    10. '[v' → logprob: -18.625

Token 638: '][' (ID: 2696)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.45539790391921997
    2. '][' → logprob: -1.7053978443145752
    3. '[n' → logprob: -1.7053978443145752
    4. '[' → logprob: -6.330398082733154
    5. '```' → logprob: -8.705397605895996
    6. 'w' → logprob: -9.455397605895996
    7. '[v' → logprob: -9.455397605895996
    8. ')[' → logprob: -9.580397605895996
    9. '[now' → logprob: -10.205397605895996
    10. ']' → logprob: -10.580397605895996

Token 639: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0002217748697148636
    2. ' nv' → logprob: -8.750222206115723
    3. 'nc' → logprob: -10.250222206115723
    4. '_nv' → logprob: -11.000222206115723
    5. 'n' → logprob: -12.000222206115723
    6. '
' → logprob: -12.625222206115723
    7. '   ' → logprob: -14.125222206115723
    8. '```' → logprob: -15.000222206115723
    9. '[n' → logprob: -15.625222206115723
    10. '                   ' → logprob: -16.625221252441406

Token 640: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6549301147460938
    2. '[u' → logprob: -0.7799301147460938
    3. '[w' → logprob: -3.9049301147460938
    4. '[' → logprob: -6.404930114746094
    5. '[v' → logprob: -9.529930114746094
    6. 'w' → logprob: -10.029930114746094
    7. '[n' → logprob: -10.154930114746094
    8. '[p' → logprob: -10.529930114746094
    9. '```' → logprob: -10.654930114746094
    10. ']' → logprob: -11.404930114746094

Token 641: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -5.5577775128767826e-06
    2. ' u' → logprob: -12.125005722045898
    3. '	u' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.8750057220459
    5. '
' → logprob: -19.5000057220459
    6. '    
' → logprob: -21.5000057220459
    7. ' ' → logprob: -21.7500057220459
    8. '  ' → logprob: -22.0000057220459
    9. 'user' → logprob: -22.0000057220459
    10. ',u' → logprob: -22.2500057220459

Token 642: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.011201199144124985
    2. ']' → logprob: -4.51120138168335
    3. '>' → logprob: -8.886200904846191
    4. ']>
' → logprob: -11.886200904846191
    5. ']==' → logprob: -12.261200904846191
    6. ']<=' → logprob: -14.261200904846191
    7. ']>=' → logprob: -14.636200904846191
    8. ' ]' → logprob: -14.761200904846191
    9. ']!=' → logprob: -14.886200904846191
    10. ']+' → logprob: -15.136200904846191

Token 643: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.6405310816480778e-05
    2. ' n' → logprob: -11.375016212463379
    3. 'n' → logprob: -12.500016212463379
    4. ' nc' → logprob: -14.000016212463379
    5. '
' → logprob: -16.250017166137695
    6. '   ' → logprob: -16.375017166137695
    7. '```' → logprob: -16.625017166137695
    8. '	n' → logprob: -17.625017166137695
    9. 'ncmp' → logprob: -18.125017166137695
    10. '``' → logprob: -18.500017166137695

Token 644: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.3132747709751129
    2. 'cost' → logprob: -1.3132747411727905
    3. '_cost' → logprob: -11.563274383544922
    4. ' cost' → logprob: -13.313274383544922
    5. 'Cost' → logprob: -13.688274383544922
    6. '(cost' → logprob: -14.938274383544922
    7. 'o' → logprob: -15.938274383544922
    8. '.cost' → logprob: -15.938274383544922
    9. 'oc' → logprob: -16.313274383544922
    10. '-cost' → logprob: -16.813274383544922

Token 645: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07994826138019562
    2. ':
' → logprob: -2.5799481868743896
    3. '):' → logprob: -7.829948425292969
    4. '=' → logprob: -7.829948425292969
    5. '):
' → logprob: -8.704948425292969
    6. ']:' → logprob: -10.704948425292969
    7. '<|end|>' → logprob: -11.079948425292969
    8. ':
' → logprob: -11.954948425292969
    9. ']:
' → logprob: -12.204948425292969
    10. '           ' → logprob: -12.204948425292969

Token 646: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2381281554698944
    2. '```' → logprob: -1.9881281852722168
    3. '                       ' → logprob: -3.363128185272217
    4. '               ' → logprob: -3.988128185272217
    5. '                           ' → logprob: -4.613128185272217
    6. '                               ' → logprob: -5.613128185272217
    7. 'dist' → logprob: -6.238128185272217
    8. '                                           ' → logprob: -6.363128185272217
    9. '           ' → logprob: -6.613128185272217
    10. '<|end|>' → logprob: -7.488128185272217

Token 647: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.004089916590601206
    2. ' dist' → logprob: -5.504089832305908
    3. '                   ' → logprob: -12.129090309143066
    4. '                       ' → logprob: -12.879090309143066
    5. '	dist' → logprob: -13.004090309143066
    6. '```' → logprob: -13.754090309143066
    7. '_dist' → logprob: -16.87908935546875
    8. '.dist' → logprob: -17.00408935546875
    9. '               ' → logprob: -17.00408935546875
    10. '(dist' → logprob: -17.00408935546875

Token 648: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -7.226628895296017e-06
    2. 'w' → logprob: -12.125007629394531
    3. '=w' → logprob: -13.625007629394531
    4. '<w' → logprob: -15.375007629394531
    5. '[u' → logprob: -16.37500762939453
    6. '	w' → logprob: -16.87500762939453
    7. ',w' → logprob: -17.12500762939453
    8. '[' → logprob: -17.25000762939453
    9. '```' → logprob: -17.75000762939453
    10. '(w' → logprob: -17.75000762939453

Token 649: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.42901143431663513
    2. '[n' → logprob: -1.0540114641189575
    3. '[' → logprob: -8.804011344909668
    4. '[w' → logprob: -9.429011344909668
    5. '"][' → logprob: -11.054011344909668
    6. '[v' → logprob: -11.179011344909668
    7. ']' → logprob: -11.679011344909668
    8. ''][' → logprob: -12.054011344909668
    9. '```' → logprob: -12.179011344909668
    10. ' ][' → logprob: -12.304011344909668

Token 650: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -8.804671233519912e-05
    2. 'nc' → logprob: -9.62508773803711
    3. ' nv' → logprob: -10.75008773803711
    4. '_nv' → logprob: -15.75008773803711
    5. '
' → logprob: -15.87508773803711
    6. '   ' → logprob: -16.75008773803711
    7. 'v' → logprob: -16.87508773803711
    8. 'n' → logprob: -17.37508773803711
    9. 'nk' → logprob: -17.50008773803711
    10. 'nm' → logprob: -18.12508773803711

Token 651: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.30173277854919434
    2. '[n' → logprob: -1.4267327785491943
    3. '[' → logprob: -3.9267327785491943
    4. ']=' → logprob: -9.301733016967773
    5. '[w' → logprob: -9.301733016967773
    6. '=' → logprob: -9.426733016967773
    7. '"][' → logprob: -9.676733016967773
    8. ']' → logprob: -10.051733016967773
    9. ''][' → logprob: -10.176733016967773
    10. '                   ' → logprob: -10.301733016967773

Token 652: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3209044337272644
    2. 'nc' → logprob: -2.195904493331909
    3. 'pv' → logprob: -2.695904493331909
    4. 'pc' → logprob: -3.320904493331909
    5. 'p' → logprob: -3.320904493331909
    6. 'cost' → logprob: -3.820904493331909
    7. 'c' → logprob: -7.19590425491333
    8. 'nv' → logprob: -8.570904731750488
    9. ' u' → logprob: -8.945904731750488
    10. 'w' → logprob: -9.195904731750488

Token 653: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029766106978058815
    2. ']=' → logprob: -3.529766082763672
    3. ')=' → logprob: -11.654766082763672
    4. ']' → logprob: -12.279766082763672
    5. ' =' → logprob: -13.529766082763672
    6. '}=' → logprob: -14.779766082763672
    7. '=n' → logprob: -15.029766082763672
    8. '']=' → logprob: -15.654766082763672
    9. '"]=' → logprob: -15.779766082763672
    10. '=
' → logprob: -17.154766082763672

Token 654: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -3.173704271830502e-06
    2. ' nc' → logprob: -12.75000286102295
    3. 'n' → logprob: -16.500003814697266
    4. '_nc' → logprob: -17.875003814697266
    5. '
' → logprob: -19.750003814697266
    6. ' n' → logprob: -20.000003814697266
    7. 'NC' → logprob: -20.250003814697266
    8. '.nc' → logprob: -20.375003814697266
    9. '(n' → logprob: -20.750003814697266
    10. '[n' → logprob: -22.250003814697266

Token 655: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.03805181756615639
    2. 'cost' → logprob: -3.2880518436431885
    3. 'st' → logprob: -11.91305160522461
    4. ' cost' → logprob: -13.28805160522461
    5. '_cost' → logprob: -13.91305160522461
    6. 'Cost' → logprob: -14.16305160522461
    7. 'ост' → logprob: -16.78805160522461
    8. 'c' → logprob: -17.03805160522461
    9. 'oc' → logprob: -17.16305160522461
    10. 'kost' → logprob: -17.28805160522461

Token 656: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016973186284303665
    2. 'heap' → logprob: -7.001697540283203
    3. '```' → logprob: -7.626697540283203
    4. '               ' → logprob: -9.501697540283203
    5. '           ' → logprob: -9.626697540283203
    6. '
' → logprob: -9.876697540283203
    7. ' heap' → logprob: -11.126697540283203
    8. '				' → logprob: -11.251697540283203
    9. '                       ' → logprob: -11.251697540283203
    10. '   ' → logprob: -11.501697540283203

Token 657: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06610360741615295
    2. 'heap' → logprob: -2.81610369682312
    3. '```' → logprob: -5.566103458404541
    4. ' heap' → logprob: -8.9411039352417
    5. '   ' → logprob: -9.8161039352417
    6. '           ' → logprob: -9.9411039352417
    7. '               ' → logprob: -10.5661039352417
    8. '                       ' → logprob: -11.4411039352417
    9. '``' → logprob: -11.4411039352417
    10. '				' → logprob: -12.1911039352417

Token 658: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: 0.0
    2. ' heap' → logprob: -16.75
    3. '                   ' → logprob: -22.0
    4. 'he' → logprob: -22.375
    5. '```' → logprob: -22.5
    6. '   ' → logprob: -23.375
    7. '                       ' → logprob: -25.0
    8. '                           ' → logprob: -25.0
    9. '(heap' → logprob: -25.25
    10. '.heap' → logprob: -25.375

Token 659: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -18.375
    3. '```' → logprob: -19.125
    4. 'app' → logprob: -20.625
    5. 'qe' → logprob: -21.375
    6. 'h' → logprob: -21.625
    7. 'push' → logprob: -21.75
    8. 'he' → logprob: -21.875
    9. '	q' → logprob: -21.875
    10. '.he' → logprob: -22.25

Token 660: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.9153885558771435e-06
    2. 'he' → logprob: -12.875005722045898
    3. '.heap' → logprob: -12.875005722045898
    4. 'q' → logprob: -15.250005722045898
    5. '.' → logprob: -15.250005722045898
    6. ' he' → logprob: -16.7500057220459
    7. '.push' → logprob: -17.1250057220459
    8. '.h' → logprob: -17.3750057220459
    9. '_he' → logprob: -17.5000057220459
    10. 'heap' → logprob: -17.7500057220459

Token 661: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.5776860184123507e-06
    2. 'pp' → logprob: -13.25000286102295
    3. 'ap' → logprob: -14.12500286102295
    4. 'push' → logprob: -17.375001907348633
    5. 'ush' → logprob: -19.750001907348633
    6. 'appen' → logprob: -19.875001907348633
    7. '```' → logprob: -20.375001907348633
    8. '_app' → logprob: -20.375001907348633
    9. ' app' → logprob: -20.500001907348633
    10. 'apps' → logprob: -20.625001907348633

Token 662: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0008065330912359059
    2. 'push' → logprob: -7.2508063316345215
    3. 'app' → logprob: -9.87580680847168
    4. 'pp' → logprob: -10.37580680847168
    5. 'p' → logprob: -11.37580680847168
    6. 'op' → logprob: -13.37580680847168
    7. 'q' → logprob: -15.50080680847168
    8. 'sh' → logprob: -15.75080680847168
    9. 'h' → logprob: -15.87580680847168
    10. '.push' → logprob: -16.12580680847168

Token 663: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.128163257315464e-07
    2. 'pq' → logprob: -16.0
    3. '(' → logprob: -16.25
    4. '(q' → logprob: -17.75
    5. 'p' → logprob: -18.0
    6. ' (' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '(
' → logprob: -19.625
    9. ' pq' → logprob: -20.75
    10. '((' → logprob: -21.25

Token 664: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0018653334118425846
    2. '(p' → logprob: -6.376865386962891
    3. '(q' → logprob: -8.75186538696289
    4. 'pq' → logprob: -12.37686538696289
    5. ' pq' → logprob: -15.75186538696289
    6. '	q' → logprob: -16.00186538696289
    7. '[q' → logprob: -16.50186538696289
    8. 'aq' → logprob: -16.50186538696289
    9. ' (' → logprob: -16.87686538696289
    10. '[p' → logprob: -16.87686538696289

Token 665: ',(' (ID: 27243)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0014397578779608011
    2. '((' → logprob: -7.126439571380615
    3. '(' → logprob: -7.376439571380615
    4. ' (' → logprob: -12.501440048217773
    5. '(q' → logprob: -12.751440048217773
    6. ',(' → logprob: -13.751440048217773
    7. ',p' → logprob: -15.001440048217773
    8. 'pq' → logprob: -15.251440048217773
    9. '=(' → logprob: -15.251440048217773
    10. '   ' → logprob: -15.501440048217773

Token 666: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -4.246537173457909e-06
    2. '(n' → logprob: -12.750003814697266
    3. 'n' → logprob: -13.750003814697266
    4. ' nc' → logprob: -15.875003814697266
    5. ' n' → logprob: -19.125003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '_nc' → logprob: -19.750003814697266
    8. '```' → logprob: -20.125003814697266
    9. '	n' → logprob: -20.625003814697266
    10. '
' → logprob: -21.250003814697266

Token 667: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.005240514408797026
    2. 'cost' → logprob: -5.255240440368652
    3. 'st' → logprob: -12.880240440368652
    4. '_cost' → logprob: -13.005240440368652
    5. '(cost' → logprob: -14.630240440368652
    6. 'Cost' → logprob: -15.255240440368652
    7. 'ост' → logprob: -15.380240440368652
    8. ' cost' → logprob: -15.630240440368652
    9. '=' → logprob: -16.25524139404297
    10. 'oc' → logprob: -16.38024139404297

Token 668: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.03807477280497551
    2. ',' → logprob: -3.2880747318267822
    3. ' ,' → logprob: -10.663074493408203
    4. ',u' → logprob: -12.038074493408203
    5. ',n' → logprob: -13.413074493408203
    6. ',v' → logprob: -13.538074493408203
    7. ',(' → logprob: -15.288074493408203
    8. ',
' → logprob: -15.663074493408203
    9. '   ' → logprob: -15.913074493408203
    10. '```' → logprob: -16.788074493408203

Token 669: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.006134380120784044
    2. ',' → logprob: -5.506134510040283
    3. 'nv' → logprob: -6.256134510040283
    4. ' nv' → logprob: -9.256134033203125
    5. '_nv' → logprob: -11.006134033203125
    6. ' ,' → logprob: -11.256134033203125
    7. 'n' → logprob: -12.881134033203125
    8. '(n' → logprob: -13.631134033203125
    9. '```' → logprob: -14.006134033203125
    10. '
' → logprob: -14.131134033203125

Token 670: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. 'nv' → logprob: -14.250000953674316
    3. '```' → logprob: -16.375001907348633
    4. 'в' → logprob: -17.625001907348633
    5. '	v' → logprob: -17.625001907348633
    6. ' nv' → logprob: -17.750001907348633
    7. ' v' → logprob: -17.875001907348633
    8. '_nv' → logprob: -17.875001907348633
    9. 'w' → logprob: -18.125001907348633
    10. 'av' → logprob: -18.250001907348633

Token 671: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.018574446439743042
    2. 'u' → logprob: -4.018574237823486
    3. ',' → logprob: -7.768574237823486
    4. ',n' → logprob: -14.393574714660645
    5. ',p' → logprob: -14.768574714660645
    6. ' ,' → logprob: -15.518574714660645
    7. ' u' → logprob: -16.018573760986328
    8. ',w' → logprob: -16.268573760986328
    9. ',v' → logprob: -16.518573760986328
    10. '```' → logprob: -17.268573760986328

Token 672: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.2200749754119897e-06
    2. '))
' → logprob: -13.500001907348633
    3. ')' → logprob: -14.250001907348633
    4. ')))' → logprob: -16.125001907348633
    5. ' ))' → logprob: -17.875001907348633
    6. '));' → logprob: -20.000001907348633
    7. '))

' → logprob: -20.375001907348633
    8. '])' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '))
' → logprob: -20.750001907348633

Token 673: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0005059692775830626
    2. '```' → logprob: -8.375506401062012
    3. ' else' → logprob: -9.125506401062012
    4. '<|end|>' → logprob: -9.375506401062012
    5. '   ' → logprob: -10.250506401062012
    6. 'continue' → logprob: -10.750506401062012
    7. '...' → logprob: -11.750506401062012
    8. '#' → logprob: -12.000506401062012
    9. '
' → logprob: -13.000506401062012
    10. '#else' → logprob: -13.375506401062012

Token 675: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8495368361473083
    2. '   ' → logprob: -1.2245368957519531
    3. ':
' → logprob: -1.5995368957519531
    4. '       ' → logprob: -2.599536895751953
    5. 'print' → logprob: -6.349536895751953
    6. ' print' → logprob: -9.349536895751953
    7. '    
' → logprob: -9.599536895751953
    8. '           ' → logprob: -9.849536895751953
    9. '     ' → logprob: -10.474536895751953
    10. '(' → logprob: -10.599536895751953

Token 676: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20165666937828064
    2. 'print' → logprob: -1.701656699180603
    3. '```' → logprob: -8.701656341552734
    4. '       ' → logprob: -9.951656341552734
    5. ' print' → logprob: -11.326656341552734
    6. '	print' → logprob: -11.326656341552734
    7. '``' → logprob: -12.451656341552734
    8. 'printf' → logprob: -14.826656341552734
    9. '   ' → logprob: -14.951656341552734
    10. '    
' → logprob: -15.326656341552734

Token 677: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005239445250481367
    2. '   ' → logprob: -5.255239486694336
    3. ' print' → logprob: -12.505239486694336
    4. '```' → logprob: -13.755239486694336
    5. '	print' → logprob: -14.255239486694336
    6. '       ' → logprob: -15.255239486694336
    7. '    
' → logprob: -18.005239486694336
    8. '``' → logprob: -18.130239486694336
    9. '  ' → logprob: -18.630239486694336
    10. '#print' → logprob: -19.255239486694336

Token 678: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.32197946310043335
    2. '(-' → logprob: -1.8219795227050781
    3. '("' → logprob: -2.196979522705078
    4. '('-' → logprob: -7.071979522705078
    5. '   ' → logprob: -7.321979522705078
    6. '("-' → logprob: -7.446979522705078
    7. '(' → logprob: -8.071979522705078
    8. '('?' → logprob: -11.196979522705078
    9. '-' → logprob: -11.821979522705078
    10. '       ' → logprob: -12.696979522705078

Token 679: 'un' (ID: 373)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02218211628496647
    2. 'Impossible' → logprob: -3.8971822261810303
    3. '"' → logprob: -7.647181987762451
    4. 'No' → logprob: -7.897181987762451
    5. 'im' → logprob: -8.27218246459961
    6. ' -' → logprob: -8.89718246459961
    7. 'IMP' → logprob: -9.77218246459961
    8. ''' → logprob: -9.89718246459961
    9. 'un' → logprob: -10.14718246459961
    10. 'INF' → logprob: -10.27218246459961

Token 680: 'reachable' (ID: 101900)
  Prédit: 'reachable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0013626165455207229
    2. 'def' → logprob: -7.7513628005981445
    3. 'able' → logprob: -8.001362800598145
    4. 'reach' → logprob: -8.876362800598145
    5. 'defined' → logprob: -9.251362800598145
    6. 'visited' → logprob: -9.376362800598145
    7. 'known' → logprob: -9.626362800598145
    8. 'r' → logprob: -9.751362800598145
    9. 'possible' → logprob: -10.251362800598145
    10. 're' → logprob: -10.376362800598145

Token 681: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00013274075172375888
    2. ')' → logprob: -9.50013256072998
    3. ')")' → logprob: -9.87513256072998
    4. '()' → logprob: -12.37513256072998
    5. '")
' → logprob: -14.25013256072998
    6. '}")' → logprob: -14.50013256072998
    7. '")}' → logprob: -14.62513256072998
    8. '')' → logprob: -15.87513256072998
    9. '("' → logprob: -16.000133514404297
    10. '");' → logprob: -16.125133514404297


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 679
Tokens correctement prédits (1ère position, stricte): 278
Tokens correctement prédits (1ère position, avec adaptation): 298
Tokens correctement prédits (top 10): 491
Précision stricte (1ère position): 40.94%
Précision adaptée (1ère position): 43.89%
Précision (top 10): 72.31%
================================================================================
