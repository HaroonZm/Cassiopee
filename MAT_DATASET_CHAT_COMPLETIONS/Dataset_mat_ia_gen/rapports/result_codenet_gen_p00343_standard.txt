================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def can_place(card_set, table):
    return [c for c in card_set if c - 1 in table or c + 1 in table]

def solve(first_cards):
    second_cards = set(c for c in range(1,14) if c != 7) - set(first_cards)
    table = {7}
    memo = {}

    def dfs(f_cards, s_cards, turn):
        key = (tuple(sorted(f_cards)), tuple(sorted(s_cards)), turn)
        if key in memo:
            return memo[key]
        if not f_cards:
            memo[key] = True
            return True
        if not s_cards:
            memo[key] = False
            return False
        if turn == 0:
            places = can_place(f_cards, table)
            if places:
                for c in places:
                    table.add(c)
                    if dfs(f_cards - {c}, s_cards, 1):
                        table.remove(c)
                        memo[key] = True
                        return True
                    table.remove(c)
                memo[key] = False
                return False
            else:
                res = dfs(f_cards, s_cards, 1)
                memo[key] = res
                return res
        else:
            places = can_place(s_cards, table)
            if places:
                for c in places:
                    table.add(c)
                    # Opponent tries to prevent our win; all branches must lead us to failure to lose
                    if not dfs(f_cards, s_cards - {c}, 0):
                        table.remove(c)
                        memo[key] = False
                        return False
                    table.remove(c)
                memo[key] = True
                return True
            else:
                res = dfs(f_cards, s_cards, 0)
                memo[key] = res
                return res

    return dfs(set(first_cards), second_cards, 0)

input = sys.stdin.readline
N = int(input())
for _ in range(N):
    first = list(map(int, input().split()))
    print("yes" if solve(first) else "no")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031966082751750946
    2. '9' → logprob: -6.003196716308594
    3. '8' → logprob: -7.378196716308594
    4. '6' → logprob: -9.253196716308594
    5. ' ' → logprob: -16.253196716308594
    6. '```' → logprob: -16.378196716308594
    7. ')' → logprob: -18.503196716308594
    8. '(' → logprob: -19.628196716308594
    9. '``' → logprob: -20.003196716308594
    10. '}' → logprob: -20.753196716308594

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005499837454408407
    2. '\' → logprob: -6.380499839782715
    3. ')' → logprob: -6.505499839782715
    4. '```' → logprob: -7.130499839782715
    5. 'n' → logprob: -8.255499839782715
    6. '\n' → logprob: -8.880499839782715
    7. 'import' → logprob: -8.880499839782715
    8. '`' → logprob: -9.005499839782715
    9. ',' → logprob: -9.005499839782715
    10. 'a' → logprob: -9.005499839782715

Token 14: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8520979285240173
    2. ' factorial' → logprob: -0.8520979285240173
    3. ' dfs' → logprob: -2.227097988128662
    4. ' space' → logprob: -4.852097988128662
    5. ' factor' → logprob: -5.352097988128662
    6. ' f' → logprob: -5.352097988128662
    7. ' my' → logprob: -5.477097988128662
    8. ' fibonacci' → logprob: -5.852097988128662
    9. ' recursive' → logprob: -6.227097988128662
    10. ' main' → logprob: -6.352097988128662

Token 15: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47850993275642395
    2. ' _' → logprob: -1.3535099029541016
    3. '_continue' → logprob: -3.4785099029541016
    4. ' ' → logprob: -4.103509902954102
    5. '_jump' → logprob: -4.353509902954102
    6. '_accept' → logprob: -4.478509902954102
    7. '_return' → logprob: -4.978509902954102
    8. '_access' → logprob: -5.728509902954102
    9. '_run' → logprob: -5.853509902954102
    10. '_cons' → logprob: -5.978509902954102

Token 16: '(card' (ID: 51112)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3064865171909332
    2. '_tile' → logprob: -2.3064866065979004
    3. '_block' → logprob: -3.4314866065979004
    4. '(' → logprob: -3.9314866065979004
    5. '_piece' → logprob: -3.9314866065979004
    6. '_cell' → logprob: -4.4314866065979
    7. '_position' → logprob: -4.8064866065979
    8. '_space' → logprob: -4.9314866065979
    9. '_token' → logprob: -5.0564866065979
    10. '(board' → logprob: -5.3064866065979

Token 17: '_set' (ID: 5451)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16520270705223083
    2. '):' → logprob: -2.0402026176452637
    3. ')' → logprob: -4.290202617645264
    4. 's' → logprob: -5.040202617645264
    5. '_,' → logprob: -7.915202617645264
    6. '[' → logprob: -8.165203094482422
    7. ' ,' → logprob: -8.415203094482422
    8. '_positions' → logprob: -8.540203094482422
    9. '_' → logprob: -8.665203094482422
    10. '_at' → logprob: -9.165203094482422

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021445509046316147
    2. ')' → logprob: -6.6271443367004395
    3. '):' → logprob: -7.8771443367004395
    4. '[' → logprob: -8.127144813537598
    5. ' ,' → logprob: -10.127144813537598
    6. 's' → logprob: -10.502144813537598
    7. '_,' → logprob: -11.252144813537598
    8. '(' → logprob: -11.502144813537598
    9. '(card' → logprob: -12.127144813537598
    10. ',c' → logprob: -12.502144813537598

Token 19: ' table' (ID: 3293)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.5767308473587036
    2. ' position' → logprob: -1.8267308473587036
    3. ' row' → logprob: -3.076730728149414
    4. ' positions' → logprob: -3.201730728149414
    5. ' board' → logprob: -3.576730728149414
    6. ' pos' → logprob: -3.701730728149414
    7. ' index' → logprob: -3.951730728149414
    8. ' current' → logprob: -4.576730728149414
    9. ' available' → logprob: -4.701730728149414
    10. ' new' → logprob: -4.826730728149414

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6825981736183167
    2. ',' → logprob: -0.8075981736183167
    3. '_cards' → logprob: -3.557598114013672
    4. ')' → logprob: -4.432598114013672
    5. '_positions' → logprob: -5.432598114013672
    6. '_set' → logprob: -6.682598114013672
    7. '_' → logprob: -7.182598114013672
    8. '_,' → logprob: -8.432598114013672
    9. '):
' → logprob: -8.682598114013672
    10. ' ):' → logprob: -8.682598114013672

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026217740029096603
    2. '    ' → logprob: -4.026217937469482
    3. ':' → logprob: -5.401217937469482
    4. '    
' → logprob: -7.151217937469482
    5. ' ' → logprob: -7.901217937469482
    6. '[' → logprob: -7.901217937469482
    7. '[]' → logprob: -8.026217460632324
    8. '     
' → logprob: -8.151217460632324
    9. '```' → logprob: -8.651217460632324
    10. ' 
' → logprob: -8.651217460632324

Token 22: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5889185667037964
    2. '    ' → logprob: -1.9639185667037964
    3. '   ' → logprob: -2.088918685913086
    4. ' 
' → logprob: -2.713918685913086
    5. '     
' → logprob: -3.713918685913086
    6. ' for' → logprob: -3.838918685913086
    7. ' :' → logprob: -4.213918685913086
    8. ' ' → logprob: -4.213918685913086
    9. '[' → logprob: -4.838918685913086
    10. ':
' → logprob: -4.963918685913086

Token 23: ' [' (ID: 723)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.7198703289031982
    2. ' all' → logprob: -1.3448703289031982
    3. ' not' → logprob: -2.7198703289031982
    4. ' len' → logprob: -2.9698703289031982
    5. ' any' → logprob: -3.0948703289031982
    6. 'card' → logprob: -3.3448703289031982
    7. ' set' → logprob: -3.9698703289031982
    8. 'all' → logprob: -4.219870567321777
    9. 'len' → logprob: -4.469870567321777
    10. ' True' → logprob: -5.719870567321777

Token 24: 'c' (ID: 66)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.3392478823661804
    2. 'c' → logprob: -1.5892479419708252
    3. 'x' → logprob: -3.339247941970825
    4. 'all' → logprob: -4.964247703552246
    5. 'True' → logprob: -5.214247703552246
    6. 'not' → logprob: -5.339247703552246
    7. 'i' → logprob: -5.464247703552246
    8. 'set' → logprob: -5.714247703552246
    9. ' card' → logprob: -5.714247703552246
    10. 'False' → logprob: -6.089247703552246

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0873812884092331
    2. ' in' → logprob: -2.837381362915039
    3. 'for' → logprob: -4.087381362915039
    4. ' ' → logprob: -5.712381362915039
    5. 'in' → logprob: -5.712381362915039
    6. ' not' → logprob: -7.212381362915039
    7. '   ' → logprob: -8.337381362915039
    8. '  ' → logprob: -8.587381362915039
    9. 'not' → logprob: -9.087381362915039
    10. '	for' → logprob: -9.087381362915039

Token 26: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.011098281480371952
    2. 'c' → logprob: -5.261098384857178
    3. ' card' → logprob: -5.261098384857178
    4. ' in' → logprob: -7.636098384857178
    5. 'card' → logprob: -9.38609790802002
    6. ' ' → logprob: -10.01109790802002
    7. '	c' → logprob: -11.51109790802002
    8. '<|end|>' → logprob: -11.63609790802002
    9. '<|end|>' → logprob: -12.01109790802002
    10. '  ' → logprob: -12.26109790802002

Token 27: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01120732817798853
    2. ' in' → logprob: -4.761207103729248
    3. 'in' → logprob: -6.136207103729248
    4. ' n' → logprob: -8.386207580566406
    5. ' ' → logprob: -9.511207580566406
    6. 's' → logprob: -10.011207580566406
    7. 'f' → logprob: -11.636207580566406
    8. '_' → logprob: -11.886207580566406
    9. '_n' → logprob: -12.136207580566406
    10. '  ' → logprob: -12.136207580566406

Token 28: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.12919895350933075
    2. 'card' → logprob: -2.1291990280151367
    3. ' table' → logprob: -6.254199028015137
    4. 'table' → logprob: -8.254199028015137
    5. '	card' → logprob: -10.379199028015137
    6. ' ' → logprob: -10.879199028015137
    7. '(card' → logprob: -11.254199028015137
    8. ' range' → logprob: -11.629199028015137
    9. '   ' → logprob: -12.816699028015137
    10. ' cardinal' → logprob: -13.504199028015137

Token 29: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00020854694594163448
    2. '_s' → logprob: -9.125208854675293
    3. '_' → logprob: -9.750208854675293
    4. 's' → logprob: -10.375208854675293
    5. '_sets' → logprob: -12.000208854675293
    6. ' _' → logprob: -12.875208854675293
    7. 'set' → logprob: -14.125208854675293
    8. '   ' → logprob: -16.500207901000977
    9. '_SET' → logprob: -16.500207901000977
    10. ' set' → logprob: -16.500207901000977

Token 30: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001171652227640152
    2. 'if' → logprob: -6.751171588897705
    3. '   ' → logprob: -13.626172065734863
    4. '    ' → logprob: -16.251171112060547
    5. '	if' → logprob: -16.251171112060547
    6. ' ' → logprob: -16.751171112060547
    7. ' not' → logprob: -18.001171112060547
    8. '       ' → logprob: -18.126171112060547
    9. ' in' → logprob: -19.001171112060547
    10. '  ' → logprob: -19.001171112060547

Token 31: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16201017796993256
    2. 'c' → logprob: -1.9120101928710938
    3. ' all' → logprob: -6.787010192871094
    4. ' not' → logprob: -7.787010192871094
    5. 'all' → logprob: -9.912010192871094
    6. ' any' → logprob: -9.912010192871094
    7. 'not' → logprob: -10.287010192871094
    8. ' ' → logprob: -10.287010192871094
    9. ' card' → logprob: -10.787010192871094
    10. ' len' → logprob: -11.162010192871094

Token 32: ' -' (ID: 533)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17138421535491943
    2. ' not' → logprob: -1.9213842153549194
    3. 'in' → logprob: -5.046384334564209
    4. ' ' → logprob: -5.921384334564209
    5. 'not' → logprob: -6.296384334564209
    6. '>' → logprob: -9.92138385772705
    7. ' >' → logprob: -10.29638385772705
    8. '  ' → logprob: -11.17138385772705
    9. ')' → logprob: -11.79638385772705
    10. ' <=' → logprob: -12.04638385772705

Token 33: ' ' (ID: 220)
  Prédit: ' table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -1.2054592370986938
    2. '1' → logprob: -1.3304592370986938
    3. ' ' → logprob: -1.3304592370986938
    4. 'table' → logprob: -2.4554591178894043
    5. ' max' → logprob: -2.9554591178894043
    6. ' not' → logprob: -5.205459117889404
    7. '0' → logprob: -5.455459117889404
    8. '2' → logprob: -5.455459117889404
    9. ' min' → logprob: -5.580459117889404
    10. ' card' → logprob: -6.080459117889404

Token 34: '1' (ID: 16)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.24527771770954132
    2. '1' → logprob: -1.995277762413025
    3. 'max' → logprob: -2.9952776432037354
    4. 'min' → logprob: -4.1202778816223145
    5. 'len' → logprob: -4.6202778816223145
    6. ' table' → logprob: -6.1202778816223145
    7. ' max' → logprob: -7.3702778816223145
    8. 'set' → logprob: -7.8702778816223145
    9. 'card' → logprob: -7.9952778816223145
    10. ' ' → logprob: -7.9952778816223145

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08902878314256668
    2. 'in' → logprob: -2.464028835296631
    3. ' ' → logprob: -9.714028358459473
    4. ' not' → logprob: -10.839028358459473
    5. ' and' → logprob: -13.214028358459473
    6. 'not' → logprob: -13.464028358459473
    7. 'and' → logprob: -13.464028358459473
    8. ')' → logprob: -14.089028358459473
    9. '	in' → logprob: -14.714028358459473
    10. '0' → logprob: -14.839028358459473

Token 36: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.038043100386857986
    2. 'table' → logprob: -3.2880430221557617
    3. ')table' → logprob: -13.913043022155762
    4. '	table' → logprob: -15.038043022155762
    5. '(table' → logprob: -16.163043975830078
    6. ' ' → logprob: -16.663043975830078
    7. ' card' → logprob: -17.163043975830078
    8. ' set' → logprob: -17.288043975830078
    9. '<table' → logprob: -17.538043975830078
    10. 'tabl' → logprob: -17.913043975830078

Token 37: ' or' (ID: 503)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3518180549144745
    2. ' or' → logprob: -1.4768180847167969
    3. ' and' → logprob: -2.726818084716797
    4. 'or' → logprob: -6.851818084716797
    5. ' ]' → logprob: -6.851818084716797
    6. 'and' → logprob: -7.726818084716797
    7. '   ' → logprob: -8.601818084716797
    8. ' ' → logprob: -10.726818084716797
    9. '  ' → logprob: -11.851818084716797
    10. '	or' → logprob: -11.851818084716797

Token 38: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.014303826726973057
    2. 'c' → logprob: -4.264303684234619
    3. '    ' → logprob: -10.014304161071777
    4. '   ' → logprob: -10.139304161071777
    5. ' ' → logprob: -11.014304161071777
    6. ' ' → logprob: -11.139304161071777
    7. '  ' → logprob: -11.264304161071777
    8. '	c' → logprob: -12.264304161071777
    9. '(c' → logprob: -13.139304161071777
    10. ' not' → logprob: -13.639304161071777

Token 39: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1793169528245926
    2. '+' → logprob: -1.9293169975280762
    3. ' -' → logprob: -4.429316997528076
    4. '-' → logprob: -5.929316997528076
    5. ' ' → logprob: -6.304316997528076
    6. ' in' → logprob: -6.304316997528076
    7. '<|end|>' → logprob: -8.179316520690918
    8. '[' → logprob: -9.179316520690918
    9. '  ' → logprob: -9.554316520690918
    10. 'import' → logprob: -10.679316520690918

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759503841400146
    2. '1' → logprob: -0.8259503841400146
    3. '0' → logprob: -12.325950622558594
    4. '<|end|>' → logprob: -12.700950622558594
    5. '2' → logprob: -13.575950622558594
    6. '```' → logprob: -13.950950622558594
    7. '  ' → logprob: -14.950950622558594
    8. ' ' → logprob: -15.200950622558594
    9. '   ' → logprob: -15.388450622558594
    10. '<|end|>' → logprob: -16.200950622558594

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080420359969139
    2. ' ' → logprob: -5.504080295562744
    3. '0' → logprob: -14.379080772399902
    4. '<|end|>' → logprob: -14.504080772399902
    5. '  ' → logprob: -15.379080772399902
    6. '[' → logprob: -15.504080772399902
    7. '```' → logprob: -16.004079818725586
    8. 'table' → logprob: -16.379079818725586
    9. '   ' → logprob: -16.754079818725586
    10. '-' → logprob: -17.004079818725586

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020617449656128883
    2. 'in' → logprob: -3.8956174850463867
    3. ' ' → logprob: -10.270617485046387
    4. ')' → logprob: -10.395617485046387
    5. ']' → logprob: -12.270617485046387
    6. '<|end|>' → logprob: -13.520617485046387
    7. ' for' → logprob: -14.020617485046387
    8. ' ' → logprob: -14.770617485046387
    9. '	in' → logprob: -14.895617485046387
    10. ' is' → logprob: -14.895617485046387

Token 43: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.12693136930465698
    2. 'table' → logprob: -2.1269314289093018
    3. ')table' → logprob: -13.251931190490723
    4. '	table' → logprob: -14.001931190490723
    5. ' card' → logprob: -16.12693214416504
    6. 'tabl' → logprob: -16.50193214416504
    7. '<table' → logprob: -16.62693214416504
    8. 'card' → logprob: -16.62693214416504
    9. '(table' → logprob: -16.75193214416504
    10. ' ' → logprob: -16.75193214416504

Token 44: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000170882252859883
    2. ' ]' → logprob: -8.750170707702637
    3. ' or' → logprob: -11.875170707702637
    4. ')]' → logprob: -13.125170707702637
    5. '   ' → logprob: -13.250170707702637
    6. ']
' → logprob: -14.750170707702637
    7. '`]' → logprob: -15.125170707702637
    8. ')' → logprob: -15.625170707702637
    9. '()]' → logprob: -15.625170707702637
    10. ' ' → logprob: -15.875170707702637

Token 45: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' solve' (ID: 17722)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.28184860944747925
    2. ' place' → logprob: -2.406848669052124
    3. ' dfs' → logprob: -3.156848669052124
    4. ' play' → logprob: -3.531848669052124
    5. ' solve' → logprob: -3.531848669052124
    6. ' is' → logprob: -4.656848430633545
    7. ' main' → logprob: -4.781848430633545
    8. ' find' → logprob: -5.031848430633545
    9. ' check' → logprob: -5.781848430633545
    10. ' card' → logprob: -6.156848430633545

Token 47: '(first' (ID: 31998)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.5226678848266602
    2. '(' → logprob: -2.02266788482666
    3. '(cards' → logprob: -2.02266788482666
    4. '():' → logprob: -2.27266788482666
    5. '(n' → logprob: -3.64766788482666
    6. '(deck' → logprob: -5.39766788482666
    7. '(nums' → logprob: -6.52266788482666
    8. '(a' → logprob: -7.14766788482666
    9. '(N' → logprob: -7.14766788482666
    10. '(s' → logprob: -7.39766788482666

Token 48: '_cards' (ID: 101651)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.5395051836967468
    2. '_cards' → logprob: -2.1645052433013916
    3. '_card' → logprob: -2.2895052433013916
    4. ',' → logprob: -3.1645052433013916
    5. '_set' → logprob: -3.1645052433013916
    6. '_' → logprob: -3.4145052433013916
    7. '_move' → logprob: -4.1645050048828125
    8. 'hand' → logprob: -4.1645050048828125
    9. '_player' → logprob: -4.7895050048828125
    10. '(cards' → logprob: -4.9145050048828125

Token 49: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5244258642196655
    2. '):' → logprob: -0.8994258642196655
    3. ')' → logprob: -7.024425983428955
    4. ' ,' → logprob: -8.524425506591797
    5. '):
' → logprob: -9.274425506591797
    6. ' ):' → logprob: -9.899425506591797
    7. '   ' → logprob: -11.149425506591797
    8. ':' → logprob: -11.774425506591797
    9. '),' → logprob: -12.774425506591797
    10. '_' → logprob: -12.774425506591797

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003411201061680913
    2. '```' → logprob: -6.753411293029785
    3. ' table' → logprob: -7.878411293029785
    4. '    
' → logprob: -7.878411293029785
    5. '   ' → logprob: -8.503411293029785
    6. ' deck' → logprob: -8.628411293029785
    7. ' current' → logprob: -8.628411293029785
    8. ' cards' → logprob: -9.128411293029785
    9. ' indentation' → logprob: -9.253411293029785
    10. ' if' → logprob: -9.503411293029785

Token 51: ' second' (ID: 3099)
  Prédit: ' table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.7165539264678955
    2. '   ' → logprob: -1.3415539264678955
    3. 'table' → logprob: -2.0915539264678955
    4. ' if' → logprob: -3.3415539264678955
    5. ' placed' → logprob: -3.4665539264678955
    6. ' hand' → logprob: -4.716553688049316
    7. 'placed' → logprob: -5.091553688049316
    8. 'if' → logprob: -5.341553688049316
    9. ' current' → logprob: -5.341553688049316
    10. ' used' → logprob: -5.466553688049316

Token 52: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.005739999003708363
    2. '_hand' → logprob: -6.880740165710449
    3. ' =' → logprob: -7.130740165710449
    4. '=' → logprob: -7.255740165710449
    5. '_set' → logprob: -7.255740165710449
    6. '_' → logprob: -7.255740165710449
    7. '_players' → logprob: -7.630740165710449
    8. 's' → logprob: -7.755740165710449
    9. '_card' → logprob: -8.00574016571045
    10. '_place' → logprob: -9.38074016571045

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003621331648901105
    2. '=' → logprob: -5.6286211013793945
    3. ',' → logprob: -11.003621101379395
    4. ' ' → logprob: -12.878621101379395
    5. '   ' → logprob: -14.003621101379395
    6. ' ,' → logprob: -14.753621101379395
    7. '=[]' → logprob: -15.003621101379395
    8. '  ' → logprob: -15.753621101379395
    9. '=set' → logprob: -16.62862205505371
    10. ' =)' → logprob: -16.62862205505371

Token 54: ' set' (ID: 920)
  Prédit: '[first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -0.9613422155380249
    2. ' set' → logprob: -1.836342215538025
    3. ' [' → logprob: -2.0863423347473145
    4. 'set' → logprob: -2.2113423347473145
    5. ' first' → logprob: -2.7113423347473145
    6. '[' → logprob: -2.8363423347473145
    7. '[]' → logprob: -3.4613423347473145
    8. 'first' → logprob: -3.9613423347473145
    9. ' list' → logprob: -4.3363423347473145
    10. ' []' → logprob: -4.3363423347473145

Token 55: '(c' (ID: 2410)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11359693855047226
    2. '(first' → logprob: -2.3635969161987305
    3. '(range' → logprob: -4.3635969161987305
    4. '(' → logprob: -8.23859691619873
    5. '()
' → logprob: -8.86359691619873
    6. '([]' → logprob: -10.23859691619873
    7. '(card' → logprob: -10.36359691619873
    8. 'first' → logprob: -10.61359691619873
    9. '([' → logprob: -11.23859691619873
    10. '()]' → logprob: -11.61359691619873

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3260934352874756
    2. 'for' → logprob: -1.3260934352874756
    3. 'first' → logprob: -4.826093673706055
    4. ' first' → logprob: -6.576093673706055
    5. 'or' → logprob: -6.826093673706055
    6. 'irst' → logprob: -7.076093673706055
    7. '   ' → logprob: -7.826093673706055
    8. '+' → logprob: -8.201093673706055
    9. ' ' → logprob: -8.201093673706055
    10. '-' → logprob: -9.576093673706055

Token 57: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.29744774103164673
    2. 'c' → logprob: -1.547447681427002
    3. ' first' → logprob: -3.172447681427002
    4. ' range' → logprob: -6.922447681427002
    5. 'first' → logprob: -7.047447681427002
    6. ' in' → logprob: -8.04744815826416
    7. ' ' → logprob: -8.79744815826416
    8. 'range' → logprob: -9.67244815826416
    9. '  ' → logprob: -9.79744815826416
    10. '_c' → logprob: -10.67244815826416

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002873465418815613
    2. 'in' → logprob: -5.877873420715332
    3. ' ' → logprob: -10.002873420715332
    4. 'n' → logprob: -11.627873420715332
    5. '  ' → logprob: -12.002873420715332
    6. ' first' → logprob: -13.002873420715332
    7. 'i' → logprob: -14.377873420715332
    8. ' n' → logprob: -14.377873420715332
    9. ' ' → logprob: -14.377873420715332
    10. 'first' → logprob: -14.377873420715332

Token 59: ' range' (ID: 3352)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6153148412704468
    2. ' first' → logprob: -0.8653148412704468
    3. ' range' → logprob: -3.7403149604797363
    4. 'range' → logprob: -4.240314960479736
    5. ' ' → logprob: -9.115314483642578
    6. '[first' → logprob: -9.365314483642578
    7. 'f' → logprob: -10.052814483642578
    8. '   ' → logprob: -10.552814483642578
    9. '  ' → logprob: -10.677814483642578
    10. '[' → logprob: -10.740314483642578

Token 60: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024518726859241724
    2. '(min' → logprob: -6.6274518966674805
    3. '(first' → logprob: -7.8774518966674805
    4. '(len' → logprob: -8.12745189666748
    5. '(max' → logprob: -8.25245189666748
    6. '1' → logprob: -8.75245189666748
    7. ' (' → logprob: -11.12745189666748
    8. '(-' → logprob: -11.62745189666748
    9. ' ' → logprob: -13.50245189666748
    10. '(n' → logprob: -13.75245189666748

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006404604762792587
    2. ' ' → logprob: -6.131404399871826
    3. '2' → logprob: -6.756404399871826
    4. '10' → logprob: -7.381404399871826
    5. 'len' → logprob: -8.131404876708984
    6. '11' → logprob: -8.506404876708984
    7. 'min' → logprob: -8.631404876708984
    8. '20' → logprob: -8.881404876708984
    9. '52' → logprob: -8.881404876708984
    10. 'max' → logprob: -9.006404876708984

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.567575034452602e-05
    2. ' ,' → logprob: -9.37509536743164
    3. '6' → logprob: -13.12509536743164
    4. '1' → logprob: -13.25009536743164
    5. '2' → logprob: -13.25009536743164
    6. '0' → logprob: -13.75009536743164
    7. '7' → logprob: -13.87509536743164
    8. ' ' → logprob: -14.62509536743164
    9. ',len' → logprob: -14.75009536743164
    10. '9' → logprob: -15.00009536743164

Token 63: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.044690489768982
    2. '53' → logprob: -1.294690489768982
    3. '11' → logprob: -1.919690489768982
    4. '21' → logprob: -2.5446906089782715
    5. '10' → logprob: -3.4196906089782715
    6. '15' → logprob: -3.6696906089782715
    7. ' ' → logprob: -4.0446906089782715
    8. '13' → logprob: -4.1696906089782715
    9. '27' → logprob: -4.7946906089782715
    10. '20' → logprob: -4.7946906089782715

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015117661096155643
    2. '))' → logprob: -6.751511573791504
    3. '+' → logprob: -8.251511573791504
    4. ' )' → logprob: -10.376511573791504
    5. ')
' → logprob: -11.376511573791504
    6. '7' → logprob: -11.501511573791504
    7. ' if' → logprob: -11.876511573791504
    8. '5' → logprob: -12.126511573791504
    9. '4' → logprob: -12.626511573791504
    10. ' +' → logprob: -12.626511573791504

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.024914417415857315
    2. ')' → logprob: -4.399914264678955
    3. 'if' → logprob: -4.399914264678955
    4. '   ' → logprob: -10.899914741516113
    5. ' )' → logprob: -11.399914741516113
    6. ' ' → logprob: -12.024914741516113
    7. '))' → logprob: -12.149914741516113
    8. ').' → logprob: -13.274914741516113
    9. '}' → logprob: -13.524914741516113
    10. '	if' → logprob: -13.899914741516113

Token 66: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03365515172481537
    2. 'c' → logprob: -3.4086551666259766
    3. ' ' → logprob: -12.783655166625977
    4. '	c' → logprob: -12.908655166625977
    5. ' ' → logprob: -13.658655166625977
    6. '   ' → logprob: -14.283655166625977
    7. ' not' → logprob: -14.408655166625977
    8. '```' → logprob: -14.408655166625977
    9. '    ' → logprob: -14.783655166625977
    10. '  ' → logprob: -15.033655166625977

Token 67: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0011720098555088043
    2. 'not' → logprob: -6.751172065734863
    3. ' in' → logprob: -14.251172065734863
    4. ' ' → logprob: -14.626172065734863
    5. '<|end|>' → logprob: -15.001172065734863
    6. ')' → logprob: -15.126172065734863
    7. '	not' → logprob: -16.501171112060547
    8. ' ' → logprob: -16.501171112060547
    9. '<|end|>' → logprob: -17.751171112060547
    10. ' !=' → logprob: -17.876171112060547

Token 68: ' ' (ID: 220)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4741741716861725
    2. ' first' → logprob: -0.9741741418838501
    3. ' ' → logprob: -9.724174499511719
    4. '	first' → logprob: -10.974174499511719
    5. ' None' → logprob: -12.474174499511719
    6. 'f' → logprob: -12.724174499511719
    7. '0' → logprob: -13.474174499511719
    8. 'None' → logprob: -13.474174499511719
    9. '[first' → logprob: -13.724174499511719
    10. '   ' → logprob: -13.724174499511719

Token 69: '7' (ID: 22)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0015506906202062964
    2. ' first' → logprob: -6.501550674438477
    3. 'f' → logprob: -11.001550674438477
    4. 'fi' → logprob: -11.876550674438477
    5. ' ' → logprob: -12.501550674438477
    6. '0' → logprob: -12.751550674438477
    7. '	first' → logprob: -13.001550674438477
    8. 'None' → logprob: -13.376550674438477
    9. '1' → logprob: -13.501550674438477
    10. '   ' → logprob: -13.626550674438477

Token 70: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08412015438079834
    2. ')' → logprob: -2.584120273590088
    3. 'and' → logprob: -5.834120273590088
    4. ' )' → logprob: -6.084120273590088
    5. '    ' → logprob: -12.95911979675293
    6. ' ' → logprob: -13.33411979675293
    7. '))' → logprob: -13.45911979675293
    8. '   ' → logprob: -13.83411979675293
    9. ')
' → logprob: -14.08411979675293
    10. '7' → logprob: -14.08411979675293

Token 71: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1948002576828003
    2. '<|end|>' → logprob: -1.1948002576828003
    3. ' ' → logprob: -1.8198002576828003
    4. '   ' → logprob: -2.19480037689209
    5. '  
' → logprob: -3.81980037689209
    6. ' 
' → logprob: -3.81980037689209
    7. ')' → logprob: -3.94480037689209
    8. '<|end|>' → logprob: -4.31980037689209
    9. '    
' → logprob: -4.44480037689209
    10. '.' → logprob: -4.81980037689209

Token 72: ' set' (ID: 920)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.46799248456954956
    2. ' set' → logprob: -1.3429925441741943
    3. 'first' → logprob: -2.4679925441741943
    4. 'set' → logprob: -3.5929925441741943
    5. '{' → logprob: -8.342992782592773
    6. ' ' → logprob: -9.717992782592773
    7. ' {' → logprob: -10.467992782592773
    8. ' card' → logprob: -10.967992782592773
    9. '	first' → logprob: -11.655492782592773
    10. '   ' → logprob: -11.780492782592773

Token 73: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0015118853189051151
    2. '(' → logprob: -6.501512050628662
    3. '(second' → logprob: -11.876511573791504
    4. 'first' → logprob: -14.001511573791504
    5. '(f' → logprob: -15.001511573791504
    6. '(s' → logprob: -15.126511573791504
    7. '(c' → logprob: -15.626511573791504
    8. '()' → logprob: -15.751511573791504
    9. '(initial' → logprob: -16.12651252746582
    10. '((' → logprob: -16.25151252746582

Token 74: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.1756367712223437e-05
    2. '(cards' → logprob: -11.500011444091797
    3. 'cards' → logprob: -14.250011444091797
    4. '_' → logprob: -15.250011444091797
    5. ')' → logprob: -15.375011444091797
    6. '(' → logprob: -16.750011444091797
    7. ')_' → logprob: -16.875011444091797
    8. 'Cards' → logprob: -16.875011444091797
    9. '(first' → logprob: -17.000011444091797
    10. '```' → logprob: -17.000011444091797

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. '())' → logprob: -10.875051498413086
    3. ' )' → logprob: -11.250051498413086
    4. ')
' → logprob: -11.875051498413086
    5. '()' → logprob: -12.625051498413086
    6. '   ' → logprob: -12.625051498413086
    7. '))' → logprob: -12.750051498413086
    8. ')

' → logprob: -14.750051498413086
    9. '(' → logprob: -15.250051498413086
    10. ')set' → logprob: -15.500051498413086

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6908776164054871
    2. '
' → logprob: -0.8158776164054871
    3. '    
' → logprob: -3.565877676010132
    4. '<|end|>' → logprob: -3.690877676010132
    5. '  
' → logprob: -7.565877437591553
    6. ' 
' → logprob: -7.690877437591553
    7. '<|end|>' → logprob: -8.065877914428711
    8. ':' → logprob: -8.315877914428711
    9. '	
' → logprob: -8.315877914428711
    10. '   
' → logprob: -8.565877914428711

Token 77: ' table' (ID: 3293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2931494414806366
    2. '   ' → logprob: -1.418149471282959
    3. '    
' → logprob: -5.168149471282959
    4. '<|end|>' → logprob: -6.168149471282959
    5. ' table' → logprob: -7.168149471282959
    6. ' for' → logprob: -8.1681489944458
    7. '  
' → logprob: -8.1681489944458
    8. 'table' (adapté à ' table') → logprob: -8.2931489944458
    9. ':' → logprob: -8.2931489944458
    10. '[' → logprob: -8.5431489944458

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759520530700684
    2. '=' → logprob: -0.8259520530700684
    3. '=set' → logprob: -11.325952529907227
    4. 's' → logprob: -15.825952529907227
    5. ' ' → logprob: -16.200952529907227
    6. '＝' → logprob: -16.325952529907227
    7. '=[]' → logprob: -16.700952529907227
    8. ',' → logprob: -17.325952529907227
    9. '   ' → logprob: -17.575952529907227
    10. ')' → logprob: -17.700952529907227

Token 79: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08184011280536652
    2. 'set' → logprob: -3.0818400382995605
    3. ' {' → logprob: -3.5818400382995605
    4. ' set' → logprob: -5.3318400382995605
    5. '[' → logprob: -10.831840515136719
    6. '{}' → logprob: -12.081840515136719
    7. 'first' → logprob: -12.331840515136719
    8. '[first' → logprob: -12.706840515136719
    9. ' ' → logprob: -12.831840515136719
    10. '(set' → logprob: -13.456840515136719

Token 80: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00031973462319001555
    2. ' ' → logprob: -8.125319480895996
    3. '   ' → logprob: -11.625319480895996
    4. 'first' → logprob: -11.625319480895996
    5. 'c' → logprob: -14.125319480895996
    6. '}' → logprob: -14.375319480895996
    7. 'second' → logprob: -14.375319480895996
    8. ' ' → logprob: -14.500319480895996
    9. ' first' → logprob: -14.500319480895996
    10. '  ' → logprob: -14.625319480895996

Token 81: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0005410005105659366
    2. '}
' → logprob: -7.6255412101745605
    3. ' }' → logprob: -10.250540733337402
    4. ',' → logprob: -11.375540733337402
    5. '}

' → logprob: -12.250540733337402
    6. ')' → logprob: -14.500540733337402
    7. '<|end|>' → logprob: -14.875540733337402
    8. '<|end|>' → logprob: -16.00054168701172
    9. '}
' → logprob: -16.25054168701172
    10. ',
' → logprob: -16.75054168701172

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1154126301407814
    2. ' for' → logprob: -3.240412712097168
    3. '
' → logprob: -3.365412712097168
    4. '    
' → logprob: -3.865412712097168
    5. '<|end|>' → logprob: -4.865412712097168
    6. 'for' → logprob: -5.490412712097168
    7. '```' → logprob: -7.365412712097168
    8. ' while' → logprob: -7.490412712097168
    9. 'while' → logprob: -8.365412712097168
    10. '<|end|>' → logprob: -8.865412712097168

Token 83: ' memo' (ID: 46393)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6515384912490845
    2. 'for' → logprob: -1.2765384912490845
    3. '   ' → logprob: -2.026538372039795
    4. ' while' → logprob: -3.651538372039795
    5. 'while' → logprob: -4.026538372039795
    6. '    
' → logprob: -4.526538372039795
    7. ' next' → logprob: -5.651538372039795
    8. 'next' → logprob: -6.651538372039795
    9. ' stack' → logprob: -6.776538372039795
    10. 'stack' → logprob: -6.776538372039795

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289535462856293
    2. '=' → logprob: -2.2378952503204346
    3. ':' → logprob: -10.487895011901855
    4. ',' → logprob: -10.487895011901855
    5. '={}' → logprob: -11.987895011901855
    6. '[' → logprob: -12.737895011901855
    7. ' ' → logprob: -13.237895011901855
    8. ')' → logprob: -13.862895011901855
    9. '.setdefault' → logprob: -14.112895011901855
    10. '.' → logprob: -14.112895011901855

Token 85: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.47423267364501953
    2. ' {}' → logprob: -0.9742326736450195
    3. ' set' → logprob: -9.22423267364502
    4. 'set' → logprob: -10.22423267364502
    5. 'dict' → logprob: -11.09923267364502
    6. ' dict' → logprob: -12.34923267364502
    7. '={}' → logprob: -14.22423267364502
    8. ' {}\' → logprob: -15.84923267364502
    9. ' {};' → logprob: -16.224231719970703
    10. ' {}
' → logprob: -16.474231719970703

Token 86: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7036005854606628
    2. '   ' → logprob: -0.8286005854606628
    3. '<|end|>' → logprob: -3.0786006450653076
    4. '
' → logprob: -4.3286004066467285
    5. ' def' → logprob: -5.8286004066467285
    6. '    
' → logprob: -6.4536004066467285
    7. ')' → logprob: -6.7036004066467285
    8. '    ' → logprob: -6.8286004066467285
    9. '<|end|>' → logprob: -6.8286004066467285
    10. ':' → logprob: -7.9536004066467285

Token 87: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.253090865968261e-06
    2. ' def' → logprob: -12.250009536743164
    3. '   ' → logprob: -12.625009536743164
    4. '
' → logprob: -14.875009536743164
    5. 'key' → logprob: -15.750009536743164
    6. ')' → logprob: -16.000009536743164
    7. '```' → logprob: -16.000009536743164
    8. '(' → logprob: -16.625009536743164
    9. 'while' → logprob: -16.750009536743164
    10. 'stack' → logprob: -16.875009536743164

Token 88: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.029736949130892754
    2. ' back' → logprob: -4.0297369956970215
    3. 'dfs' → logprob: -4.6547369956970215
    4. ' search' → logprob: -7.4047369956970215
    5. ' play' → logprob: -7.4047369956970215
    6. ' dp' → logprob: -7.7797369956970215
    7. ' can' → logprob: -9.154736518859863
    8. ' helper' → logprob: -9.904736518859863
    9. 'back' → logprob: -10.154736518859863
    10. ' place' → logprob: -10.279736518859863

Token 89: '(f' (ID: 1526)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.8354899287223816
    2. '(table' → logprob: -1.4604899883270264
    3. '(cards' → logprob: -1.7104899883270264
    4. '(' → logprob: -2.0854899883270264
    5. '(state' → logprob: -4.585489749908447
    6. '(current' → logprob: -4.585489749908447
    7. ' (' → logprob: -5.585489749908447
    8. '(first' → logprob: -6.335489749908447
    9. '(player' → logprob: -7.460489749908447
    10. '(deck' → logprob: -7.585489749908447

Token 90: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.35669010877609253
    2. 'irst' → logprob: -1.2316901683807373
    3. 'cards' → logprob: -5.731689929962158
    4. '_' → logprob: -6.481689929962158
    5. 'irs' → logprob: -7.481689929962158
    6. '_card' → logprob: -8.106690406799316
    7. ',' → logprob: -8.106690406799316
    8. ' cards' → logprob: -8.481690406799316
    9. 'st' → logprob: -8.731690406799316
    10. '_c' → logprob: -8.981690406799316

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05005864426493645
    2. '):' → logprob: -3.050058603286743
    3. ' ,' → logprob: -6.675058841705322
    4. '):
' → logprob: -9.800058364868164
    5. ' ):' → logprob: -10.300058364868164
    6. ')' → logprob: -10.550058364868164
    7. ',f' → logprob: -10.550058364868164
    8. ':' → logprob: -10.675058364868164
    9. '   ' → logprob: -11.925058364868164
    10. '  ' → logprob: -12.425058364868164

Token 92: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20211286842823029
    2. ' t' → logprob: -1.7021129131317139
    3. 's' → logprob: -8.327113151550293
    4. ' s' → logprob: -8.577113151550293
    5. ' ' → logprob: -9.452113151550293
    6. '   ' → logprob: -9.827113151550293
    7. '           ' → logprob: -10.702113151550293
    8. '                   ' → logprob: -11.202113151550293
    9. '       ' → logprob: -11.327113151550293
    10. '    ' → logprob: -11.952113151550293

Token 93: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00035262384335510433
    2. '_' → logprob: -8.00035285949707
    3. 'cards' → logprob: -12.00035285949707
    4. '_c' → logprob: -12.00035285949707
    5. '_card' → logprob: -13.75035285949707
    6. '_chars' → logprob: -14.25035285949707
    7. '_tokens' → logprob: -14.50035285949707
    8. '_codes' → logprob: -14.87535285949707
    9. '<|end|>' → logprob: -15.37535285949707
    10. ' cards' → logprob: -15.50035285949707

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22581446170806885
    2. ',' → logprob: -1.6008144617080688
    3. '):
' → logprob: -8.100814819335938
    4. ' ):' → logprob: -10.350814819335938
    5. ')' → logprob: -10.475814819335938
    6. '   ' → logprob: -10.850814819335938
    7. ' ,' → logprob: -12.350814819335938
    8. ':' → logprob: -12.475814819335938
    9. '):

' → logprob: -13.600814819335938
    10. '):
' → logprob: -13.600814819335938

Token 95: ' turn' (ID: 3716)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5123494267463684
    2. ' table' → logprob: -1.6373493671417236
    3. 't' → logprob: -2.5123493671417236
    4. ' turn' → logprob: -3.0123493671417236
    5. ' current' → logprob: -3.7623493671417236
    6. 'table' → logprob: -4.137349605560303
    7. ' player' → logprob: -4.637349605560303
    8. ' ' → logprob: -5.387349605560303
    9. 'turn' → logprob: -5.512349605560303
    10. 'player' → logprob: -5.637349605560303

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00027456742827780545
    2. ',' → logprob: -8.500274658203125
    3. ')' → logprob: -10.250274658203125
    4. '):
' → logprob: -10.750274658203125
    5. ':' → logprob: -12.125274658203125
    6. '=' → logprob: -12.750274658203125
    7. ' ):' → logprob: -13.000274658203125
    8. '):

' → logprob: -14.125274658203125
    9. ')):' → logprob: -14.500274658203125
    10. 's' → logprob: -15.125274658203125

Token 97: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06322740018367767
    2. '):' → logprob: -3.188227415084839
    3. '       ' → logprob: -4.43822717666626
    4. '():' → logprob: -5.06322717666626
    5. '<|end|>' → logprob: -7.18822717666626
    6. '   ' → logprob: -8.063227653503418
    7. ' :' → logprob: -8.313227653503418
    8. ',' → logprob: -8.938227653503418
    9. '):
' → logprob: -9.188227653503418
    10. ')' → logprob: -9.813227653503418

Token 98: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6157911419868469
    2. ' if' → logprob: -1.3657910823822021
    3. '       ' → logprob: -1.9907910823822021
    4. '<|end|>' → logprob: -3.115791082382202
    5. '        ' → logprob: -4.865791320800781
    6. ')' → logprob: -5.365791320800781
    7. ':' → logprob: -5.865791320800781
    8. ' ' → logprob: -6.615791320800781
    9. '   ' → logprob: -6.740791320800781
    10. '           ' → logprob: -6.990791320800781

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889066636562347
    2. '=' → logprob: -2.578890562057495
    3. ' =(' → logprob: -14.328890800476074
    4. '=(' → logprob: -15.828890800476074
    5. ',' → logprob: -16.453889846801758
    6. ')' → logprob: -17.328889846801758
    7. ' =)' → logprob: -17.328889846801758
    8. ' =
' → logprob: -17.578889846801758
    9. ')=' → logprob: -18.453889846801758
    10. '=
' → logprob: -18.703889846801758

Token 100: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.14828616380691528
    2. '(tuple' → logprob: -2.1482861042022705
    3. ' (' → logprob: -4.14828634262085
    4. '(' → logprob: -5.39828634262085
    5. '(str' → logprob: -7.77328634262085
    6. '(hash' → logprob: -8.648285865783691
    7. '(sorted' → logprob: -9.648285865783691
    8. '(t' → logprob: -10.398285865783691
    9. '(len' → logprob: -10.773285865783691
    10. '(s' → logprob: -10.773285865783691

Token 101: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5760908722877502
    2. 'fro' → logprob: -0.8260908722877502
    3. ' tuple' → logprob: -9.076090812683105
    4. '(tuple' → logprob: -11.326090812683105
    5. ' fro' → logprob: -11.451090812683105
    6. '   ' → logprob: -11.826090812683105
    7. 'f' → logprob: -12.326090812683105
    8. '
' → logprob: -14.201090812683105
    9. 'tu' → logprob: -14.826090812683105
    10. ' ' → logprob: -15.076090812683105

Token 102: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.31907525658607483
    2. '(f' → logprob: -1.3190752267837524
    3. 'sorted' → logprob: -5.194075107574463
    4. '(' → logprob: -9.194075584411621
    5. 'f' → logprob: -9.444075584411621
    6. ' sorted' → logprob: -9.819075584411621
    7. '(s' → logprob: -12.069075584411621
    8. '(
' → logprob: -12.694075584411621
    9. ')' → logprob: -13.694075584411621
    10. '(map' → logprob: -14.944075584411621

Token 103: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00012606535165105015
    2. 'f' → logprob: -9.000125885009766
    3. ' f' → logprob: -13.750125885009766
    4. '(' → logprob: -13.750125885009766
    5. ' (' → logprob: -15.625125885009766
    6. '	f' → logprob: -16.000125885009766
    7. '(
' → logprob: -16.500125885009766
    8. '((' → logprob: -17.000125885009766
    9. '[f' → logprob: -17.000125885009766
    10. 's' → logprob: -17.500125885009766

Token 104: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.2200749754119897e-06
    2. '(cards' → logprob: -14.000001907348633
    3. '_c' → logprob: -14.625001907348633
    4. 'cards' → logprob: -15.500001907348633
    5. ')_' → logprob: -15.750001907348633
    6. '_card' → logprob: -15.875001907348633
    7. '```' → logprob: -17.125001907348633
    8. 'Cards' → logprob: -17.250001907348633
    9. '_courses' → logprob: -17.250001907348633
    10. '_' → logprob: -17.375001907348633

Token 105: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.0005359939532354474
    2. '))' → logprob: -7.87553596496582
    3. ' ' → logprob: -9.25053596496582
    4. ')),
' → logprob: -10.25053596496582
    5. ',' → logprob: -11.37553596496582
    6. ')' → logprob: -12.37553596496582
    7. '()' → logprob: -13.00053596496582
    8. '   ' → logprob: -13.37553596496582
    9. ')),
' → logprob: -13.75053596496582
    10. '),' → logprob: -14.00053596496582

Token 106: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.25199663639068604
    2. ' tuple' → logprob: -1.501996636390686
    3. '(tuple' → logprob: -10.376996994018555
    4. ' ' → logprob: -11.751996994018555
    5. '         ' → logprob: -12.126996994018555
    6. '        ' → logprob: -12.126996994018555
    7. '           ' → logprob: -12.251996994018555
    8. '          ' → logprob: -12.876996994018555
    9. '       ' → logprob: -13.001996994018555
    10. '  ' → logprob: -13.001996994018555

Token 107: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -1.0206720617134124e-05
    2. 'sorted' → logprob: -11.50001049041748
    3. '(' → logprob: -18.000009536743164
    4. ' sorted' → logprob: -19.000009536743164
    5. '_sorted' → logprob: -19.750009536743164
    6. '.sorted' → logprob: -20.875009536743164
    7. 'Sorted' → logprob: -21.000009536743164
    8. '(s' → logprob: -21.875009536743164
    9. '(sort' → logprob: -22.750009536743164
    10. ' (' → logprob: -23.125009536743164

Token 108: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.017927029868588e-05
    2. 's' → logprob: -9.500080108642578
    3. '(' → logprob: -12.250080108642578
    4. ' s' → logprob: -15.125080108642578
    5. ' (' → logprob: -15.625080108642578
    6. ')s' → logprob: -18.000080108642578
    7. 'def' → logprob: -18.500080108642578
    8. '   ' → logprob: -18.625080108642578
    9. 'second' → logprob: -18.625080108642578
    10. '((' → logprob: -18.750080108642578

Token 109: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.4272752852994017e-05
    2. '_c' → logprob: -11.00002384185791
    3. '_' → logprob: -12.50002384185791
    4. ')_' → logprob: -14.00002384185791
    5. 'cards' → logprob: -14.87502384185791
    6. '(cards' → logprob: -14.87502384185791
    7. '_chars' → logprob: -15.37502384185791
    8. ')' → logprob: -15.62502384185791
    9. '_card' → logprob: -15.87502384185791
    10. '   ' → logprob: -15.87502384185791

Token 110: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.0016550635918974876
    2. '),' → logprob: -6.501655101776123
    3. '))' → logprob: -9.626654624938965
    4. ',' → logprob: -9.751654624938965
    5. ')' → logprob: -10.751654624938965
    6. ' ' → logprob: -12.876654624938965
    7. '       ' → logprob: -13.376654624938965
    8. '   ' → logprob: -14.126654624938965
    9. ')),
' → logprob: -14.126654624938965
    10. ' ),' → logprob: -15.001654624938965

Token 111: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5759404897689819
    2. ' turn' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.950940132141113
    4. '   ' → logprob: -15.075940132141113
    5. '(turn' → logprob: -15.450940132141113
    6. ' turno' → logprob: -16.32594108581543
    7. '    ' → logprob: -16.95094108581543
    8. '.turn' → logprob: -17.32594108581543
    9. ')' → logprob: -17.45094108581543
    10. '
' → logprob: -17.82594108581543

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')
' → logprob: -10.625031471252441
    3. ' )' → logprob: -11.875031471252441
    4. '       ' → logprob: -15.250031471252441
    5. ')

' → logprob: -16.875032424926758
    6. '   ' → logprob: -17.500032424926758
    7. ')return' → logprob: -17.750032424926758
    8. ')`' → logprob: -18.750032424926758
    9. '))' → logprob: -19.000032424926758
    10. '),' → logprob: -19.125032424926758

Token 113: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9693925976753235
    2. '       ' → logprob: -0.9693925976753235
    3. '<|end|>' → logprob: -2.0943925380706787
    4. '):' → logprob: -2.5943925380706787
    5. ')' → logprob: -3.3443925380706787
    6. '   ' → logprob: -6.094392776489258
    7. '):
' → logprob: -6.469392776489258
    8. '<|end|>' → logprob: -6.594392776489258
    9. ':
' → logprob: -6.969392776489258
    10. '
' → logprob: -7.594392776489258

Token 114: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2784886062145233
    2. ' if' → logprob: -1.9034886360168457
    3. 'if' (adapté à ' if') → logprob: -2.9034886360168457
    4. '   ' → logprob: -3.2784886360168457
    5. '    ' → logprob: -7.778488636016846
    6. '        
' → logprob: -8.653488159179688
    7. ':' → logprob: -8.778488159179688
    8. ' ' → logprob: -8.903488159179688
    9. '	if' → logprob: -9.153488159179688
    10. '    
' → logprob: -9.278488159179688

Token 115: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.05209362879395485
    2. 'key' → logprob: -3.052093744277954
    3. ' not' → logprob: -5.677093505859375
    4. 'not' → logprob: -9.677093505859375
    5. ' len' → logprob: -11.927093505859375
    6. ' ' → logprob: -12.177093505859375
    7. 'len' → logprob: -13.552093505859375
    8. '(key' → logprob: -15.052093505859375
    9. '	key' → logprob: -16.177093505859375
    10. '_key' → logprob: -16.302093505859375

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011067629791796207
    2. 'in' → logprob: -4.511067867279053
    3. ' ' → logprob: -11.761067390441895
    4. ')' → logprob: -12.136067390441895
    5. ' not' → logprob: -13.011067390441895
    6. '<|end|>' → logprob: -13.886067390441895
    7. 'not' → logprob: -14.261067390441895
    8. '   ' → logprob: -14.261067390441895
    9. '  ' → logprob: -14.761067390441895
    10. '	in' → logprob: -15.136067390441895

Token 117: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.11282987147569656
    2. ' memo' → logprob: -2.2378299236297607
    3. 'm' → logprob: -12.48783016204834
    4. 'mem' → logprob: -13.73783016204834
    5. '   ' → logprob: -13.98783016204834
    6. '.memo' → logprob: -14.48783016204834
    7. '
' → logprob: -14.73783016204834
    8. ' ' → logprob: -15.11283016204834
    9. 'memory' → logprob: -15.48783016204834
    10. ' memoir' → logprob: -15.98783016204834

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033798301592469215
    2. ':
' → logprob: -5.753379821777344
    3. ':return' → logprob: -9.128379821777344
    4. '       ' → logprob: -9.878379821777344
    5. '):' → logprob: -10.753379821777344
    6. ' :' → logprob: -11.628379821777344
    7. '):
' → logprob: -12.128379821777344
    8. '           ' → logprob: -12.503379821777344
    9. ':
' → logprob: -14.378379821777344
    10. ',' → logprob: -15.128379821777344

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005673506762832403
    2. 'return' → logprob: -5.630673408508301
    3. ' return' → logprob: -6.255673408508301
    4. '       ' → logprob: -8.8806734085083
    5. ':return' → logprob: -12.2556734085083
    6. '   ' → logprob: -13.5056734085083
    7. '<|end|>' → logprob: -13.8806734085083
    8. ',' → logprob: -13.8806734085083
    9. '{return' → logprob: -14.2556734085083
    10. '          ' → logprob: -14.8806734085083

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3876630663871765
    2. '           ' → logprob: -1.3876631259918213
    3. ' return' → logprob: -2.6376631259918213
    4. '       ' → logprob: -9.012662887573242
    5. ':return' → logprob: -10.762662887573242
    6. '   ' → logprob: -11.512662887573242
    7. '               ' → logprob: -11.887662887573242
    8. '
' → logprob: -12.387662887573242
    9. '{return' → logprob: -12.762662887573242
    10. '	return' → logprob: -12.887662887573242

Token 121: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.00148486637044698
    2. ' memo' → logprob: -6.6264848709106445
    3. 'False' → logprob: -9.001484870910645
    4. ' False' → logprob: -10.876484870910645
    5. 'm' → logprob: -11.126484870910645
    6. 'mem' → logprob: -14.376484870910645
    7. 'memory' → logprob: -15.001484870910645
    8. '   ' → logprob: -15.251484870910645
    9. 'mime' → logprob: -15.501484870910645
    10. 'True' → logprob: -15.626484870910645

Token 122: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0012040425790473819
    2. 'key' → logprob: -6.751204013824463
    3. '[' → logprob: -10.876204490661621
    4. 'memo' → logprob: -11.876204490661621
    5. ' key' → logprob: -12.376204490661621
    6. '(key' → logprob: -12.751204490661621
    7. 'True' → logprob: -15.251204490661621
    8. '[(' → logprob: -15.251204490661621
    9. '[m' → logprob: -15.376204490661621
    10. 'False' → logprob: -16.876203536987305

Token 123: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040165456011891365
    2. '])' → logprob: -5.879016399383545
    3. ']' → logprob: -6.754016399383545
    4. ')
' → logprob: -11.004016876220703
    5. ')]' → logprob: -11.754016876220703
    6. ' )' → logprob: -11.754016876220703
    7. '）' → logprob: -13.129016876220703
    8. ')])' → logprob: -13.254016876220703
    9. '[' → logprob: -13.629016876220703
    10. '`)' → logprob: -13.879016876220703

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1254945695400238
    2. '<|end|>' → logprob: -2.2504944801330566
    3. '
' → logprob: -4.500494480133057
    4. '        
' → logprob: -7.625494480133057
    5. '<|end|>' → logprob: -7.875494480133057
    6. ')' → logprob: -8.250494956970215
    7. ' if' → logprob: -9.500494956970215
    8. ',' → logprob: -10.000494956970215
    9. '```' → logprob: -10.375494956970215
    10. '#' → logprob: -10.625494956970215

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40250077843666077
    2. '       ' → logprob: -1.5275007486343384
    3. ' if' → logprob: -2.652500867843628
    4. 'moves' → logprob: -4.277500629425049
    5. '
' → logprob: -4.652500629425049
    6. 'next' → logprob: -4.902500629425049
    7. 'possible' → logprob: -5.402500629425049
    8. '        
' → logprob: -5.402500629425049
    9. ' moves' → logprob: -7.152500629425049
    10. 'move' → logprob: -7.277500629425049

Token 126: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31864795088768005
    2. ' not' → logprob: -1.3186479806900024
    3. '(not' → logprob: -5.568647861480713
    4. 'turn' → logprob: -7.193647861480713
    5. 'len' → logprob: -7.818647861480713
    6. '(turn' → logprob: -8.443648338317871
    7. ' turn' → logprob: -9.943648338317871
    8. '(len' → logprob: -10.068648338317871
    9. ' (' → logprob: -10.318648338317871
    10. ' ' → logprob: -10.818648338317871

Token 127: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.129086434841156
    2. '(f' → logprob: -2.879086494445801
    3. ' f' → logprob: -4.129086494445801
    4. '(can' → logprob: -4.129086494445801
    5. 'can' → logprob: -4.254086494445801
    6. ' (' → logprob: -4.879086494445801
    7. '(first' → logprob: -6.004086494445801
    8. ' can' → logprob: -6.129086494445801
    9. 'first' → logprob: -6.254086494445801
    10. '(' → logprob: -6.504086494445801

Token 128: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.05501633137464523
    2. 'irst' → logprob: -2.930016279220581
    3. 'f' → logprob: -10.05501651763916
    4. '_' → logprob: -10.80501651763916
    5. 'first' → logprob: -11.05501651763916
    6. 'cards' → logprob: -11.55501651763916
    7. 'IRST' → logprob: -11.80501651763916
    8. '_card' → logprob: -11.80501651763916
    9. 'or' → logprob: -12.18001651763916
    10. 'Cards' → logprob: -12.80501651763916

Token 129: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.44267162680625916
    2. ':' → logprob: -1.0676716566085815
    3. 'or' → logprob: -4.817671775817871
    4. ' and' → logprob: -5.317671775817871
    5. 'and' → logprob: -7.567671775817871
    6. ':
' → logprob: -8.317671775817871
    7. ':return' → logprob: -9.192671775817871
    8. '<|end|>' → logprob: -12.317671775817871
    9. '	or' → logprob: -12.442671775817871
    10. '   ' → logprob: -12.442671775817871

Token 130: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49303779006004333
    2. '           ' → logprob: -1.7430378198623657
    3. ':' → logprob: -1.9930378198623657
    4. ':
' → logprob: -2.618037700653076
    5. ' or' → logprob: -6.118037700653076
    6. ' and' → logprob: -6.118037700653076
    7. '   ' → logprob: -8.868038177490234
    8. ':return' → logprob: -8.868038177490234
    9. '):
' → logprob: -9.368038177490234
    10. ',' → logprob: -10.118038177490234

Token 131: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.7990666627883911
    2. '       ' → logprob: -1.1740666627883911
    3. 'return' → logprob: -2.2990665435791016
    4. ' memo' → logprob: -2.5490665435791016
    5. '           ' → logprob: -3.1740665435791016
    6. ' return' → logprob: -4.424066543579102
    7. '
' → logprob: -6.049066543579102
    8. 'if' → logprob: -6.174066543579102
    9. ' if' → logprob: -6.299066543579102
    10. 'result' → logprob: -6.674066543579102

Token 132: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.04328451678156853
    2. '[' → logprob: -3.1682844161987305
    3. '[(' → logprob: -8.41828441619873
    4. '[f' → logprob: -10.91828441619873
    5. 'key' → logprob: -11.54328441619873
    6. '[value' → logprob: -11.91828441619873
    7. '[first' → logprob: -12.16828441619873
    8. '[token' → logprob: -12.54328441619873
    9. '[val' → logprob: -12.79328441619873
    10. '[
' → logprob: -13.54328441619873

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002990655368193984
    2. ']=' → logprob: -5.87799072265625
    3. '=' → logprob: -8.62799072265625
    4. ' ]' → logprob: -12.62799072265625
    5. ' =' → logprob: -13.00299072265625
    6. 'return' → logprob: -15.25299072265625
    7. '=True' → logprob: -15.50299072265625
    8. '[' → logprob: -15.75299072265625
    9. ']
' → logprob: -15.75299072265625
    10. 'True' → logprob: -16.37799072265625

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020563611760735512
    2. ' =' → logprob: -3.8955636024475098
    3. '=True' → logprob: -11.270564079284668
    4. '[' → logprob: -12.395564079284668
    5. '<|end|>' → logprob: -13.270564079284668
    6. '=
' → logprob: -13.895564079284668
    7. ']=' → logprob: -14.520564079284668
    8. ' ' → logprob: -14.645564079284668
    9. '=False' → logprob: -14.770564079284668
    10. '
' → logprob: -15.645564079284668

Token 135: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25593486428260803
    2. 'False' → logprob: -1.6309348344802856
    3. 'turn' → logprob: -4.130934715270996
    4. ' True' → logprob: -5.130934715270996
    5. '"' → logprob: -5.880934715270996
    6. ''' → logprob: -6.505934715270996
    7. ' False' → logprob: -7.005934715270996
    8. '1' → logprob: -7.380934715270996
    9. '(True' → logprob: -7.505934715270996
    10. '0' → logprob: -7.630934715270996

Token 136: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00434977188706398
    2. '       ' → logprob: -5.504349708557129
    3. '<|end|>' → logprob: -9.004349708557129
    4. '
' → logprob: -9.379349708557129
    5. 'return' → logprob: -10.629349708557129
    6. '		' → logprob: -11.879349708557129
    7. '               ' → logprob: -11.879349708557129
    8. ' and' → logprob: -12.254349708557129
    9. '<|end|>' → logprob: -12.254349708557129
    10. '   ' → logprob: -12.379349708557129

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007646257057785988
    2. '       ' → logprob: -4.882646083831787
    3. '   ' → logprob: -10.882646560668945
    4. 'return' → logprob: -12.382646560668945
    5. '<|end|>' → logprob: -12.632646560668945
    6. ' return' → logprob: -12.757646560668945
    7. ' if' → logprob: -13.382646560668945
    8. '               ' → logprob: -13.507646560668945
    9. 'elif' → logprob: -13.882646560668945
    10. ' for' → logprob: -13.882646560668945

Token 138: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4129001796245575
    2. 'return' (adapté à ' return') → logprob: -1.6629002094268799
    3. ' return' → logprob: -1.9129002094268799
    4. '       ' → logprob: -6.912899971008301
    5. '   ' → logprob: -11.0378999710083
    6. '	return' → logprob: -11.2878999710083
    7. '	       ' → logprob: -13.1628999710083
    8. '               ' → logprob: -13.2878999710083
    9. ' ' → logprob: -14.0378999710083
    10. ':return' → logprob: -14.2878999710083

Token 139: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00385446660220623
    2. 'False' → logprob: -6.253854274749756
    3. ' True' → logprob: -6.253854274749756
    4. ' False' → logprob: -13.878854751586914
    5. '(True' → logprob: -17.128854751586914
    6. 'memo' → logprob: -19.378854751586914
    7. '
' → logprob: -22.378854751586914
    8. '=True' → logprob: -22.753854751586914
    9. 'true' → logprob: -23.128854751586914
    10. '   ' → logprob: -23.503854751586914

Token 140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024618604220449924
    2. 'if' → logprob: -6.752461910247803
    3. ' if' → logprob: -6.877461910247803
    4. '
' → logprob: -9.252461433410645
    5. 's' → logprob: -9.877461433410645
    6. '        
' → logprob: -9.877461433410645
    7. '   ' → logprob: -10.252461433410645
    8. 'next' → logprob: -12.627461433410645
    9. '<|end|>' → logprob: -12.752461433410645
    10. ',' → logprob: -13.002461433410645

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002292875200510025
    2. 'if' → logprob: -6.377293109893799
    3. ' if' → logprob: -8.00229263305664
    4. '
' → logprob: -9.75229263305664
    5. '   ' → logprob: -10.00229263305664
    6. 's' → logprob: -10.00229263305664
    7. 'next' → logprob: -10.12729263305664
    8. '        
' → logprob: -10.37729263305664
    9. 'possible' → logprob: -11.62729263305664
    10. ' next' → logprob: -12.00229263305664

Token 142: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.46987026929855347
    2. '       ' → logprob: -2.2198703289031982
    3. 'next' → logprob: -2.2198703289031982
    4. 'possible' → logprob: -2.4698703289031982
    5. 'current' → logprob: -3.9698703289031982
    6. 'f' → logprob: -4.094870090484619
    7. 'moves' → logprob: -4.594870090484619
    8. 'for' → logprob: -4.594870090484619
    9. 'available' → logprob: -5.344870090484619
    10. 'valid' → logprob: -5.969870090484619

Token 143: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20626866817474365
    2. 'turn' → logprob: -1.7062686681747437
    3. ' not' → logprob: -5.581268787384033
    4. '   ' → logprob: -7.706268787384033
    5. ' turn' → logprob: -8.206268310546875
    6. '(not' → logprob: -8.956268310546875
    7. '(turn' → logprob: -9.081268310546875
    8. '	not' → logprob: -10.831268310546875
    9. ' ' → logprob: -10.956268310546875
    10. '
' → logprob: -10.956268310546875

Token 144: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01817932352423668
    2. ' s' → logprob: -4.018179416656494
    3. 'second' → logprob: -10.643178939819336
    4. 'turn' → logprob: -13.643178939819336
    5. ' second' → logprob: -13.893178939819336
    6. 'f' → logprob: -14.143178939819336
    7. 'can' → logprob: -14.643178939819336
    8. 'dfs' → logprob: -14.643178939819336
    9. '
' → logprob: -15.143178939819336
    10. 'first' → logprob: -15.268178939819336

Token 145: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -13.125005722045898
    3. '_f' → logprob: -13.125005722045898
    4. '_chars' → logprob: -14.875005722045898
    5. '```' → logprob: -15.000005722045898
    6. 'cards' → logprob: -15.375005722045898
    7. '_codes' → logprob: -15.875005722045898
    8. 'f' → logprob: -16.2500057220459
    9. '_c' → logprob: -16.5000057220459
    10. '._' → logprob: -16.6250057220459

Token 146: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06201395019888878
    2. ':' → logprob: -2.812013864517212
    3. '   ' → logprob: -10.687013626098633
    4. ' or' → logprob: -11.937013626098633
    5. '       ' → logprob: -12.437013626098633
    6. '):
' → logprob: -12.562013626098633
    7. ':

' → logprob: -12.937013626098633
    8. ' and' → logprob: -12.937013626098633
    9. '           ' → logprob: -13.562013626098633
    10. ':
' → logprob: -14.312013626098633

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26210737228393555
    2. '       ' → logprob: -1.5121073722839355
    3. 'memo' → logprob: -4.8871073722839355
    4. '   ' → logprob: -6.1371073722839355
    5. ' memo' → logprob: -8.387107849121094
    6. ':
' → logprob: -9.887107849121094
    7. '
' → logprob: -10.262107849121094
    8. ':' → logprob: -11.012107849121094
    9. '{
' → logprob: -11.012107849121094
    10. 'if' → logprob: -11.387107849121094

Token 148: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.002602887572720647
    2. ' memo' → logprob: -6.627603054046631
    3. '           ' → logprob: -7.252603054046631
    4. '       ' → logprob: -7.502603054046631
    5. '   ' → logprob: -11.627602577209473
    6. '.memo' → logprob: -12.377602577209473
    7. 'mem' → logprob: -13.877602577209473
    8. '               ' → logprob: -14.877602577209473
    9. 'm' → logprob: -15.127602577209473
    10. '
' → logprob: -15.377602577209473

Token 149: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.27099974633893e-05
    2. '[token' → logprob: -11.375012397766113
    3. '[user' → logprob: -14.875012397766113
    4. '_key' → logprob: -15.750012397766113
    5. '[' → logprob: -15.875012397766113
    6. 'key' → logprob: -15.875012397766113
    7. '[first' → logprob: -16.50001335144043
    8. '[k' → logprob: -16.62501335144043
    9. '_cards' → logprob: -17.25001335144043
    10. '[cell' → logprob: -18.12501335144043

Token 150: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018193958327174187
    2. ' =' → logprob: -4.01819372177124
    3. ']' → logprob: -11.268194198608398
    4. '   ' → logprob: -11.518194198608398
    5. '=False' → logprob: -11.643194198608398
    6. ')' → logprob: -11.768194198608398
    7. ']=' → logprob: -13.393194198608398
    8. '=
' → logprob: -13.768194198608398
    9. '=True' → logprob: -14.393194198608398
    10. ')=' → logprob: -14.518194198608398

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028299614787101746
    2. ' =' → logprob: -5.8778300285339355
    3. '       ' → logprob: -11.877829551696777
    4. '=False' → logprob: -12.002829551696777
    5. '=
' → logprob: -12.252829551696777
    6. '           ' → logprob: -12.252829551696777
    7. '   ' → logprob: -13.752829551696777
    8. ' ' → logprob: -15.002829551696777
    9. '=True' → logprob: -15.127829551696777
    10. '        ' → logprob: -15.252829551696777

Token 152: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00038705902989022434
    2. ' False' → logprob: -7.875387191772461
    3. 'True' → logprob: -12.000387191772461
    4. '   ' → logprob: -14.250387191772461
    5. '(False' → logprob: -17.25038719177246
    6. '
' → logprob: -17.62538719177246
    7. ' ' → logprob: -17.75038719177246
    8. 'memo' → logprob: -18.00038719177246
    9. '  ' → logprob: -18.50038719177246
    10. '       ' → logprob: -19.00038719177246

Token 153: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0394536517560482
    2. '<|end|>' → logprob: -3.2894537448883057
    3. '<|end|>' → logprob: -8.289453506469727
    4. ',' → logprob: -8.539453506469727
    5. '           ' → logprob: -8.539453506469727
    6. 'import' → logprob: -8.664453506469727
    7. '
' → logprob: -8.789453506469727
    8. '        
' → logprob: -9.039453506469727
    9. ')' → logprob: -9.789453506469727
    10. '```' → logprob: -10.164453506469727

Token 154: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003891161410138011
    2. '<|end|>' → logprob: -5.7538909912109375
    3. '
' → logprob: -8.503890991210938
    4. '   ' → logprob: -9.378890991210938
    5. '```' → logprob: -9.878890991210938
    6. 'return' → logprob: -9.878890991210938
    7. '        
' → logprob: -10.003890991210938
    8. 's' → logprob: -10.128890991210938
    9. '<|end|>' → logprob: -10.128890991210938
    10. ')' → logprob: -10.503890991210938

Token 155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5237482190132141
    2. 'memo' → logprob: -1.2737481594085693
    3. ' return' → logprob: -2.5237481594085693
    4. '       ' → logprob: -3.5237481594085693
    5. ' memo' → logprob: -4.273748397827148
    6. '   ' → logprob: -5.773748397827148
    7. '           ' → logprob: -7.023748397827148
    8. '
' → logprob: -8.898748397827148
    9. 'import' → logprob: -9.398748397827148
    10. ' ' → logprob: -10.898748397827148

Token 156: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003424951864872128
    2. ' False' → logprob: -8.00034236907959
    3. 'memo' → logprob: -12.00034236907959
    4. 'True' → logprob: -14.00034236907959
    5. '(False' → logprob: -17.625343322753906
    6. ' memo' → logprob: -17.750343322753906
    7. 'false' → logprob: -18.125343322753906
    8. 'None' → logprob: -18.625343322753906
    9. '0' → logprob: -19.875343322753906
    10. '
' → logprob: -20.750343322753906

Token 157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06388898938894272
    2. '       ' → logprob: -3.0638890266418457
    3. '        
' → logprob: -4.938889026641846
    4. '<|end|>' → logprob: -5.188889026641846
    5. '
' → logprob: -7.438889026641846
    6. '  
' → logprob: -7.688889026641846
    7. '    
' → logprob: -7.813889026641846
    8. 'newline' → logprob: -8.563888549804688
    9. '```' → logprob: -8.813888549804688
    10. '\n' → logprob: -9.063888549804688

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05367310345172882
    2. 'if' → logprob: -3.803673028945923
    3. '        
' → logprob: -5.053673267364502
    4. 'next' → logprob: -5.178673267364502
    5. '
' → logprob: -5.303673267364502
    6. 'possible' → logprob: -5.553673267364502
    7. ' if' → logprob: -5.803673267364502
    8. '   ' → logprob: -6.803673267364502
    9. ' next' → logprob: -6.803673267364502
    10. 'for' → logprob: -6.928673267364502

Token 159: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4205944538116455
    2. 'if' (adapté à ' if') → logprob: -1.2955944538116455
    3. 'next' → logprob: -3.7955944538116455
    4. 'possible' → logprob: -3.7955944538116455
    5. ' if' → logprob: -5.045594215393066
    6. 'f' → logprob: -5.170594215393066
    7. 'current' → logprob: -5.670594215393066
    8. 'moves' → logprob: -5.920594215393066
    9. ' next' → logprob: -6.670594215393066
    10. '        
' → logprob: -6.670594215393066

Token 160: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.003673471510410309
    2. ' turn' → logprob: -5.628673553466797
    3. '   ' → logprob: -10.128673553466797
    4. 'not' → logprob: -10.753673553466797
    5. 'can' → logprob: -12.628673553466797
    6. ' not' → logprob: -13.128673553466797
    7. '
' → logprob: -13.253673553466797
    8. '(turn' → logprob: -13.628673553466797
    9. ' ' → logprob: -13.753673553466797
    10. '  ' → logprob: -14.003673553466797

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22300106287002563
    2. '==' → logprob: -1.7230010032653809
    3. ':' → logprob: -3.848001003265381
    4. '=' → logprob: -11.973001480102539
    5. ')==' → logprob: -11.973001480102539
    6. '):' → logprob: -12.598001480102539
    7. ')' → logprob: -12.598001480102539
    8. ' :' → logprob: -12.723001480102539
    9. ' ' → logprob: -13.223001480102539
    10. ':
' → logprob: -13.223001480102539

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02086055651307106
    2. ' ' → logprob: -4.39586067199707
    3. '1' → logprob: -5.64586067199707
    4. ''' → logprob: -5.64586067199707
    5. 'True' → logprob: -7.02086067199707
    6. ' True' → logprob: -9.02086067199707
    7. '"' → logprob: -9.14586067199707
    8. 'False' → logprob: -9.89586067199707
    9. ' '' → logprob: -10.39586067199707
    10. ''f' → logprob: -10.64586067199707

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02498941496014595
    2. '1' → logprob: -4.024989604949951
    3. ''' → logprob: -5.524989604949951
    4. 'True' → logprob: -6.149989604949951
    5. '"' → logprob: -8.274989128112793
    6. ''f' → logprob: -8.774989128112793
    7. 'False' → logprob: -9.149989128112793
    8. 'first' → logprob: -9.274989128112793
    9. ''s' → logprob: -9.899989128112793
    10. ' ' → logprob: -11.774989128112793

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014165629632771015
    2. ':
' → logprob: -4.26416540145874
    3. ':

' → logprob: -14.264165878295898
    4. ' and' → logprob: -15.264165878295898
    5. ':
' → logprob: -15.264165878295898
    6. '):
' → logprob: -15.389165878295898
    7. ' :' → logprob: -15.389165878295898
    8. '   ' → logprob: -15.639165878295898
    9. '):' → logprob: -15.764165878295898
    10. ',' → logprob: -15.764165878295898

Token 165: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06310496479272842
    2. 'f' → logprob: -4.06310510635376
    3. ' for' → logprob: -4.56310510635376
    4. 'for' → logprob: -5.06310510635376
    5. 'possible' → logprob: -5.06310510635376
    6. '           ' → logprob: -5.18810510635376
    7. ' f' → logprob: -5.43810510635376
    8. 'moves' → logprob: -6.18810510635376
    9. ' possible' → logprob: -6.56310510635376
    10. ' moves' → logprob: -6.68810510635376

Token 166: ' places' (ID: 9610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050313178449869156
    2. 'f' → logprob: -3.8003132343292236
    3. 'possible' → logprob: -4.4253129959106445
    4. 'moves' → logprob: -4.9253129959106445
    5. 'options' → logprob: -6.1753129959106445
    6. 'available' → logprob: -6.1753129959106445
    7. 'next' → logprob: -7.4253129959106445
    8. '       ' → logprob: -7.5503129959106445
    9. 'first' → logprob: -7.9253129959106445
    10. ' for' → logprob: -7.9253129959106445

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25951674580574036
    2. ' =' → logprob: -1.509516716003418
    3. 'able' → logprob: -5.009516716003418
    4. 'ble' → logprob: -7.634516716003418
    5. '   ' → logprob: -8.884516716003418
    6. 'd' → logprob: -9.509516716003418
    7. '       ' → logprob: -9.634516716003418
    8. 'ible' → logprob: -10.134516716003418
    9. 'sible' → logprob: -11.259516716003418
    10. '           ' → logprob: -11.384516716003418

Token 168: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.005234952084720135
    2. ' can' → logprob: -5.255234718322754
    3. '	can' → logprob: -14.380234718322754
    4. '   ' → logprob: -15.755234718322754
    5. '[' → logprob: -15.755234718322754
    6. 'set' → logprob: -16.63023567199707
    7. '(can' → logprob: -17.00523567199707
    8. ' ' → logprob: -17.13023567199707
    9. 'list' → logprob: -17.50523567199707
    10. 'Can' → logprob: -18.13023567199707

Token 169: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -6.392202976712724e-06
    2. 'place' → logprob: -12.250006675720215
    3. '_places' → logprob: -14.000006675720215
    4. '_' → logprob: -14.125006675720215
    5. '_put' → logprob: -17.5000057220459
    6. '-place' → logprob: -18.0000057220459
    7. ' place' → logprob: -18.7500057220459
    8. 'Place' → logprob: -18.8750057220459
    9. '_PLACE' → logprob: -19.1250057220459
    10. ' _' → logprob: -19.8750057220459

Token 170: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0010760379955172539
    2. '(set' → logprob: -7.0010762214660645
    3. '([' → logprob: -9.376075744628906
    4. '(list' → logprob: -10.001075744628906
    5. '(first' → logprob: -11.001075744628906
    6. '(' → logprob: -11.751075744628906
    7. '(s' → logprob: -12.376075744628906
    8. '(sorted' → logprob: -12.376075744628906
    9. '(tuple' → logprob: -15.001075744628906
    10. '({' → logprob: -15.251075744628906

Token 171: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0001951961312443018
    2. '_' → logprob: -9.125195503234863
    3. 'irst' → logprob: -9.750195503234863
    4. '(cards' → logprob: -11.875195503234863
    5. '_card' → logprob: -12.375195503234863
    6. '(' → logprob: -12.875195503234863
    7. '_places' → logprob: -13.250195503234863
    8. ')' → logprob: -13.500195503234863
    9. '_c' → logprob: -13.625195503234863
    10. 'cards' → logprob: -13.625195503234863

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021903318702243268
    2. ' ,' → logprob: -8.625219345092773
    3. ')' → logprob: -11.000219345092773
    4. '(table' → logprob: -11.125219345092773
    5. ',
' → logprob: -12.875219345092773
    6. ',set' → logprob: -13.625219345092773
    7. ')table' → logprob: -14.250219345092773
    8. 'table' → logprob: -14.250219345092773
    9. ' ' → logprob: -14.500219345092773
    10. '   ' → logprob: -14.500219345092773

Token 173: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.023252584040164948
    2. ' table' → logprob: -3.773252487182617
    3. '   ' → logprob: -12.523252487182617
    4. ' ' → logprob: -13.648252487182617
    5. '	table' → logprob: -14.273252487182617
    6. '
' → logprob: -14.773252487182617
    7. ')table' → logprob: -15.523252487182617
    8. ' ' → logprob: -15.648252487182617
    9. '  ' → logprob: -15.898252487182617
    10. ')' → logprob: -16.023252487182617

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02641153894364834
    2. ')
' → logprob: -3.651411533355713
    3. '   ' → logprob: -9.776412010192871
    4. ' )' → logprob: -10.526412010192871
    5. ')
' → logprob: -11.651412010192871
    6. '())' → logprob: -11.901412010192871
    7. ' ' → logprob: -12.776412010192871
    8. '()' → logprob: -12.776412010192871
    9. '())
' → logprob: -13.276412010192871
    10. ' )
' → logprob: -13.276412010192871

Token 175: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05454911291599274
    2. ' for' → logprob: -3.179549217224121
    3. '   ' → logprob: -5.429549217224121
    4. ' if' → logprob: -5.804549217224121
    5. '<|end|>' → logprob: -5.929549217224121
    6. 'for' → logprob: -7.304549217224121
    7. '           ' → logprob: -7.679549217224121
    8. 'if' → logprob: -9.304549217224121
    9. '<|end|>' → logprob: -9.929549217224121
    10. ',' → logprob: -10.179549217224121

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4689332842826843
    2. '       ' → logprob: -1.218933343887329
    3. '   ' → logprob: -3.843933343887329
    4. '           ' → logprob: -3.843933343887329
    5. 'if' (adapté à ' if') → logprob: -4.09393310546875
    6. ' for' → logprob: -4.46893310546875
    7. '
' → logprob: -5.71893310546875
    8. '        
' → logprob: -7.09393310546875
    9. ' 
' → logprob: -7.09393310546875
    10. ' ' → logprob: -7.21893310546875

Token 177: ' places' (ID: 9610)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6326257586479187
    2. 'not' → logprob: -0.7576257586479187
    3. 'places' → logprob: -11.507625579833984
    4. '   ' → logprob: -11.882625579833984
    5. '	not' → logprob: -12.507625579833984
    6. ' ' → logprob: -13.007625579833984
    7. '(not' → logprob: -14.257625579833984
    8. ' places' → logprob: -14.257625579833984
    9. 'len' → logprob: -14.757625579833984
    10. '!' → logprob: -14.882625579833984

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001399283530190587
    2. '==' → logprob: -7.501399517059326
    3. ' ==' → logprob: -7.751399517059326
    4. ' :' → logprob: -8.501399040222168
    5. ':
' → logprob: -9.001399040222168
    6. '=' → logprob: -10.251399040222168
    7. '):' → logprob: -10.251399040222168
    8. ')' → logprob: -12.876399040222168
    9. ' =' → logprob: -13.126399040222168
    10. 'and' → logprob: -13.126399040222168

Token 179: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.162643700838089
    2. '               ' → logprob: -2.0376436710357666
    3. 'for' → logprob: -4.162643909454346
    4. '           ' → logprob: -5.912643909454346
    5. ':
' → logprob: -7.412643909454346
    6. '       ' → logprob: -8.037643432617188
    7. ':' → logprob: -8.162643432617188
    8. ',' → logprob: -9.412643432617188
    9. '
' → logprob: -9.787643432617188
    10. '   ' → logprob: -10.662643432617188

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07123612612485886
    2. 'for' (adapté à ' for') → logprob: -2.6962361335754395
    3. '               ' → logprob: -6.6962361335754395
    4. '           ' → logprob: -10.071235656738281
    5. '                   ' → logprob: -12.196235656738281
    6. '
' → logprob: -12.321235656738281
    7. '   ' → logprob: -12.821235656738281
    8. ' return' → logprob: -13.446235656738281
    9. '                
' → logprob: -13.571235656738281
    10. 'return' → logprob: -13.821235656738281

Token 181: ' c' (ID: 274)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6153838038444519
    2. ' card' → logprob: -0.9903838038444519
    3. 'p' → logprob: -3.2403838634490967
    4. 'c' → logprob: -3.6153838634490967
    5. ' p' → logprob: -4.615383625030518
    6. 'place' → logprob: -4.865383625030518
    7. ' c' → logprob: -5.740383625030518
    8. ' place' → logprob: -7.240383625030518
    9. ' move' → logprob: -8.990384101867676
    10. 'pos' → logprob: -9.240384101867676

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009267069399356842
    2. 'in' → logprob: -7.000926494598389
    3. ' ' → logprob: -11.875926971435547
    4. 'c' → logprob: -13.125926971435547
    5. '  ' → logprob: -13.125926971435547
    6. 's' → logprob: -13.375926971435547
    7. '	in' → logprob: -13.875926971435547
    8. 'i' → logprob: -14.750926971435547
    9. ' ' → logprob: -15.625926971435547
    10. '   ' → logprob: -15.750926971435547

Token 183: ' places' (ID: 9610)
  Prédit: 'places'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'places' → logprob: -0.04302145540714264
    2. ' places' → logprob: -3.1680214405059814
    3. 'can' → logprob: -11.168021202087402
    4. ' can' → logprob: -12.418021202087402
    5. 'place' → logprob: -13.668021202087402
    6. 'placements' → logprob: -13.918021202087402
    7. '[' → logprob: -15.043021202087402
    8. 'plac' → logprob: -15.043021202087402
    9. 'placed' → logprob: -15.043021202087402
    10. 'Places' → logprob: -15.418021202087402

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027379589155316353
    2. ':
' → logprob: -3.6523795127868652
    3. '                   ' → logprob: -7.402379512786865
    4. '<|end|>' → logprob: -9.152379989624023
    5. ',' → logprob: -9.402379989624023
    6. ' :' → logprob: -9.902379989624023
    7. '<|end|>' → logprob: -10.027379989624023
    8. '):
' → logprob: -10.152379989624023
    9. '):' → logprob: -10.277379989624023
    10. '           ' → logprob: -10.652379989624023

Token 185: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003572150133550167
    2. '                    
' → logprob: -6.6285719871521
    3. ' if' → logprob: -7.2535719871521
    4. ' new' → logprob: -8.253572463989258
    5. '                    ' → logprob: -8.253572463989258
    6. '           ' → logprob: -8.378572463989258
    7. '
' → logprob: -8.753572463989258
    8. '                       ' → logprob: -9.003572463989258
    9. '<|end|>' → logprob: -9.878572463989258
    10. ' 
' → logprob: -9.878572463989258

Token 186: ' table' (ID: 3293)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.551600992679596
    2. ' f' → logprob: -1.3016009330749512
    3. 'f' → logprob: -2.801600933074951
    4. 'new' → logprob: -3.426600933074951
    5. ' table' → logprob: -3.551600933074951
    6. 'table' (adapté à ' table') → logprob: -4.176600933074951
    7. '                       ' → logprob: -5.301600933074951
    8. '                   ' → logprob: -5.801600933074951
    9. '           ' → logprob: -6.301600933074951
    10. '       ' → logprob: -6.426600933074951

Token 187: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.010572569444775581
    2. '.remove' → logprob: -4.76057243347168
    3. '.' → logprob: -6.26057243347168
    4. ' .' → logprob: -10.01057243347168
    5. 'add' → logprob: -14.88557243347168
    6. '.dis' → logprob: -15.01057243347168
    7. '.append' → logprob: -16.26057243347168
    8. '   ' → logprob: -17.01057243347168
    9. ' add' → logprob: -17.38557243347168
    10. ' ' → logprob: -17.51057243347168

Token 188: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.575563020305708e-05
    2. '(' → logprob: -9.875065803527832
    3. 'c' → logprob: -11.375065803527832
    4. '(
' → logprob: -13.500065803527832
    5. ' (' → logprob: -13.625065803527832
    6. ' c' → logprob: -16.500064849853516
    7. '(code' → logprob: -16.875064849853516
    8. '	c' → logprob: -17.000064849853516
    9. '(card' → logprob: -17.625064849853516
    10. '   ' → logprob: -18.750064849853516

Token 189: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7718913555145264
    2. ')
' → logprob: -1.1468913555145264
    3. ')' → logprob: -1.5218913555145264
    4. '
' → logprob: -6.5218915939331055
    5. '                    
' → logprob: -9.271891593933105
    6. ')
' → logprob: -9.646891593933105
    7. ' )
' → logprob: -10.021891593933105
    8. '               ' → logprob: -10.021891593933105
    9. '                    ' → logprob: -10.396891593933105
    10. ' )' → logprob: -10.646891593933105

Token 190: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0715818703174591
    2. '
' → logprob: -3.0715818405151367
    3. '                    
' → logprob: -3.9465818405151367
    4. '                    ' → logprob: -7.571581840515137
    5. ' 
' → logprob: -7.696581840515137
    6. '<|end|>' → logprob: -8.071581840515137
    7. '				' → logprob: -8.321581840515137
    8. '    
' → logprob: -8.696581840515137
    9. '  
' → logprob: -8.821581840515137
    10. 'f' → logprob: -8.821581840515137

Token 191: ' if' (ID: 538)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2842656075954437
    2. 'new' → logprob: -1.9092656373977661
    3. ' new' → logprob: -3.1592655181884766
    4. ' f' → logprob: -3.5342655181884766
    5. 'if' (adapté à ' if') → logprob: -4.284265518188477
    6. 'res' → logprob: -5.659265518188477
    7. '                   ' → logprob: -5.909265518188477
    8. 'next' → logprob: -6.034265518188477
    9. 'result' → logprob: -6.034265518188477
    10. ' if' → logprob: -6.409265518188477

Token 192: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.46898066997528076
    2. ' not' → logprob: -1.5939806699752808
    3. 'dfs' → logprob: -1.8439806699752808
    4. 'not' → logprob: -4.34398078918457
    5. '   ' → logprob: -10.46898078918457
    6. ' ' → logprob: -11.84398078918457
    7. 'df' → logprob: -12.15648078918457
    8. '
' → logprob: -12.34398078918457
    9. ' DFS' → logprob: -12.90648078918457
    10. '!' → logprob: -13.09398078918457

Token 193: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06895220279693604
    2. '(tuple' → logprob: -3.8189520835876465
    3. '({' → logprob: -4.3189520835876465
    4. '(set' → logprob: -4.4439520835876465
    5. '((' → logprob: -4.9439520835876465
    6. '([' → logprob: -5.3189520835876465
    7. '(' → logprob: -5.3189520835876465
    8. '(s' → logprob: -6.0689520835876465
    9. '(
' → logprob: -8.568952560424805
    10. '(c' → logprob: -9.943952560424805

Token 194: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0011676029535010457
    2. '_places' → logprob: -7.6261677742004395
    3. '_' → logprob: -8.501167297363281
    4. '(cards' → logprob: -9.001167297363281
    5. '(' → logprob: -9.501167297363281
    6. '(f' → logprob: -9.876167297363281
    7. '
' → logprob: -10.376167297363281
    8. '_c' → logprob: -11.376167297363281
    9. 'cards' → logprob: -11.626167297363281
    10. '(_' → logprob: -11.626167297363281

Token 195: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3645440340042114
    2. '-' → logprob: -2.489543914794922
    3. '-{' → logprob: -2.489543914794922
    4. '.d' → logprob: -2.739543914794922
    5. '.remove' → logprob: -3.614543914794922
    6. '{' → logprob: -4.364543914794922
    7. '.' → logprob: -5.239543914794922
    8. '-f' → logprob: -5.364543914794922
    9. ' {' → logprob: -5.614543914794922
    10. ' .' → logprob: -5.614543914794922

Token 196: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -4.8232690460281447e-05
    2. ' {' → logprob: -10.000048637390137
    3. 'set' → logprob: -13.625048637390137
    4. '{s' → logprob: -13.750048637390137
    5. '{i' → logprob: -15.500048637390137
    6. '{x' → logprob: -16.12504768371582
    7. '{sub' → logprob: -17.50004768371582
    8. '{text' → logprob: -18.00004768371582
    9. '{return' → logprob: -18.50004768371582
    10. '{name' → logprob: -18.50004768371582

Token 197: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.630610641877865e-06
    2. ' c' → logprob: -12.500006675720215
    3. '{' → logprob: -12.750006675720215
    4. '   ' → logprob: -18.0000057220459
    5. '	c' → logprob: -18.2500057220459
    6. '(c' → logprob: -18.8750057220459
    7. '
' → logprob: -19.0000057220459
    8. '                   ' → logprob: -19.0000057220459
    9. ' ' → logprob: -19.3750057220459
    10. ')c' → logprob: -21.1250057220459

Token 198: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009332557674497366
    2. ' ,' → logprob: -7.2509331703186035
    3. '},' → logprob: -8.500933647155762
    4. ',c' → logprob: -11.125933647155762
    5. ',
' → logprob: -13.375933647155762
    6. '                   ' → logprob: -14.000933647155762
    7. ' },' → logprob: -14.125933647155762
    8. '),' → logprob: -14.250933647155762
    9. '                       ' → logprob: -15.125933647155762
    10. ',s' → logprob: -15.375933647155762

Token 199: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22561471164226532
    2. ' s' → logprob: -1.6006146669387817
    3. '                   ' → logprob: -9.725614547729492
    4. '   ' → logprob: -9.975614547729492
    5. ' ' → logprob: -11.225614547729492
    6. '  ' → logprob: -11.475614547729492
    7. '    ' → logprob: -11.475614547729492
    8. '               ' → logprob: -11.850614547729492
    9. '           ' → logprob: -11.975614547729492
    10. '                       ' → logprob: -12.225614547729492

Token 200: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.010135210119187832
    2. 's' → logprob: -5.635135173797607
    3. '{s' → logprob: -6.510135173797607
    4. '{' → logprob: -6.635135173797607
    5. 'cards' → logprob: -6.635135173797607
    6. 'c' → logprob: -6.635135173797607
    7. '_places' → logprob: -8.510135650634766
    8. '
' → logprob: -8.885135650634766
    9. '(c' → logprob: -9.260135650634766
    10. '_s' → logprob: -9.635135650634766

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006384541047737002
    2. ' ,' → logprob: -7.375638484954834
    3. ',c' → logprob: -12.375638008117676
    4. '                   ' → logprob: -12.875638008117676
    5. ',
' → logprob: -13.125638008117676
    6. ' ' → logprob: -14.250638008117676
    7. '   ' → logprob: -15.125638008117676
    8. '),' → logprob: -15.125638008117676
    9. ')' → logprob: -15.250638008117676
    10. '                    ' → logprob: -15.375638008117676

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05852035805583
    2. 'turn' → logprob: -3.4335203170776367
    3. '0' → logprob: -4.058520317077637
    4. ' ' → logprob: -6.058520317077637
    5. '(turn' → logprob: -6.058520317077637
    6. '   ' → logprob: -6.558520317077637
    7. ' turn' → logprob: -7.308520317077637
    8. '(' → logprob: -8.058520317077637
    9. ' (' → logprob: -9.683520317077637
    10. '  ' → logprob: -10.558520317077637

Token 203: '1' (ID: 16)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.32425135374069214
    2. '1' → logprob: -1.324251413345337
    3. '0' → logprob: -5.074251174926758
    4. ' turn' → logprob: -6.199251174926758
    5. '(turn' → logprob: -6.324251174926758
    6. ' ' → logprob: -7.574251174926758
    7. '(' → logprob: -8.449251174926758
    8. '   ' → logprob: -9.949251174926758
    9. '
' → logprob: -11.011751174926758
    10. ' (' → logprob: -11.824251174926758

Token 204: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17386272549629211
    2. '):' → logprob: -1.9238626956939697
    3. ')' → logprob: -4.673862934112549
    4. '                   ' → logprob: -5.548862934112549
    5. '):
' → logprob: -9.29886245727539
    6. '):

' → logprob: -9.42386245727539
    7. ' ):
' → logprob: -10.42386245727539
    8. '                       ' → logprob: -10.79886245727539
    9. '                  ' → logprob: -10.92386245727539
    10. '               ' → logprob: -10.92386245727539

Token 205: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003914695407729596
    2. '):
' → logprob: -9.625391006469727
    3. '                   ' → logprob: -9.750391006469727
    4. ' table' → logprob: -10.000391006469727
    5. ' return' → logprob: -10.250391006469727
    6. ')' → logprob: -10.250391006469727
    7. '                        
' → logprob: -10.250391006469727
    8. '                        ' → logprob: -10.625391006469727
    9. '                           ' → logprob: -11.250391006469727
    10. ',' → logprob: -11.750391006469727

Token 206: ' table' (ID: 3293)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.12853088974952698
    2. ' memo' → logprob: -2.128530979156494
    3. '                   ' → logprob: -7.378530979156494
    4. '                       ' → logprob: -7.503530979156494
    5. '                           ' → logprob: -7.878530979156494
    6. '               ' → logprob: -10.878530502319336
    7. 'table' (adapté à ' table') → logprob: -11.378530502319336
    8. '           ' → logprob: -12.128530502319336
    9. '
' → logprob: -12.503530502319336
    10. '   ' → logprob: -12.753530502319336

Token 207: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0031193646136671305
    2. '.' → logprob: -6.503119468688965
    3. '.dis' → logprob: -6.753119468688965
    4. '.add' → logprob: -7.753119468688965
    5. 'remove' → logprob: -11.503119468688965
    6. '.update' → logprob: -12.253119468688965
    7. ' .' → logprob: -13.253119468688965
    8. 'dis' → logprob: -13.878119468688965
    9. 'discard' → logprob: -14.128119468688965
    10. '.clear' → logprob: -15.503119468688965

Token 208: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.704273118884885e-07
    2. 'c' → logprob: -14.500000953674316
    3. '(' → logprob: -16.75
    4. '(card' → logprob: -17.875
    5. '©' → logprob: -18.625
    6. '{' → logprob: -19.625
    7. '	c' → logprob: -19.75
    8. ' (' → logprob: -19.875
    9. '(
' → logprob: -20.625
    10. '[c' → logprob: -21.25

Token 209: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007714278530329466
    2. '                   ' → logprob: -5.88271427154541
    3. ')
' → logprob: -5.88271427154541
    4. ')' → logprob: -6.25771427154541
    5. '                           ' → logprob: -10.00771427154541
    6. '                        
' → logprob: -10.38271427154541
    7. '               ' → logprob: -10.75771427154541
    8. '                        ' → logprob: -10.75771427154541
    9. '           ' → logprob: -11.13271427154541
    10. '
' → logprob: -11.50771427154541

Token 210: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00011808603449026123
    2. '                   ' → logprob: -10.000118255615234
    3. '                        ' → logprob: -10.750118255615234
    4. '               ' → logprob: -11.375118255615234
    5. '                           ' → logprob: -11.625118255615234
    6. '					' → logprob: -11.875118255615234
    7. '                        
' → logprob: -11.875118255615234
    8. '           ' → logprob: -12.125118255615234
    9. '                      ' → logprob: -13.250118255615234
    10. '       ' → logprob: -13.375118255615234

Token 211: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.10348167270421982
    2. '                       ' → logprob: -3.3534817695617676
    3. 'return' → logprob: -3.3534817695617676
    4. ' memo' → logprob: -3.6034817695617676
    5. '                           ' → logprob: -7.728481769561768
    6. ' return' → logprob: -7.853481769561768
    7. 'm' → logprob: -9.47848129272461
    8. '                   ' → logprob: -9.60348129272461
    9. '                        ' → logprob: -10.10348129272461
    10. '               ' → logprob: -10.22848129272461

Token 212: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '[token' → logprob: -17.375001907348633
    4. '[
' → logprob: -17.875001907348633
    5. 'key' → logprob: -19.000001907348633
    6. '[user' → logprob: -19.375001907348633
    7. ' key' → logprob: -19.500001907348633
    8. '[...]' → logprob: -20.250001907348633
    9. ',key' → logprob: -20.625001907348633
    10. '(key' → logprob: -20.625001907348633

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26511719822883606
    2. '=' → logprob: -1.8901171684265137
    3. ' =' → logprob: -3.1401171684265137
    4. ']=' → logprob: -3.2651171684265137
    5. '                   ' → logprob: -9.015117645263672
    6. ' ]' → logprob: -9.140117645263672
    7. '                       ' → logprob: -9.265117645263672
    8. '           ' → logprob: -12.140117645263672
    9. '                        ' → logprob: -12.140117645263672
    10. '                           ' → logprob: -12.515117645263672

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019293478690087795
    2. ' =' → logprob: -6.25192928314209
    3. '=
' → logprob: -14.75192928314209
    4. ']=' → logprob: -16.251930236816406
    5. '                   ' → logprob: -16.501930236816406
    6. '=True' → logprob: -16.501930236816406
    7. '           ' → logprob: -17.251930236816406
    8. '                       ' → logprob: -17.376930236816406
    9. '=

' → logprob: -17.626930236816406
    10. '[' → logprob: -17.751930236816406

Token 215: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. '(True' → logprob: -21.75009536743164
    4. 'False' → logprob: -23.25009536743164
    5. 'true' → logprob: -23.50009536743164
    6. '                   ' → logprob: -23.87509536743164
    7. '               ' → logprob: -25.00009536743164
    8. '                       ' → logprob: -25.25009536743164
    9. '=True' → logprob: -25.25009536743164
    10. '           ' → logprob: -25.62509536743164

Token 216: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.8789383830153383e-05
    2. '                   ' → logprob: -11.500019073486328
    3. '               ' → logprob: -12.625019073486328
    4. '<|end|>' → logprob: -13.875019073486328
    5. 'return' → logprob: -14.125019073486328
    6. '                        
' → logprob: -14.500019073486328
    7. '	                   ' → logprob: -14.750019073486328
    8. '           ' → logprob: -14.750019073486328
    9. '					' → logprob: -14.750019073486328
    10. '                        ' → logprob: -14.875019073486328

Token 217: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -3.6312321753939614e-05
    2. '                   ' → logprob: -10.750036239624023
    3. '               ' → logprob: -12.125036239624023
    4. '<|end|>' → logprob: -13.375036239624023
    5. 'return' → logprob: -13.500036239624023
    6. '					' → logprob: -13.625036239624023
    7. '	                   ' → logprob: -14.250036239624023
    8. '           ' → logprob: -14.250036239624023
    9. '                        
' → logprob: -14.250036239624023
    10. '                        ' → logprob: -14.375036239624023

Token 218: ' return' (ID: 622)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008800579234957695
    2. 'return' (adapté à ' return') → logprob: -4.758800506591797
    3. ' return' → logprob: -8.758800506591797
    4. '                   ' → logprob: -11.008800506591797
    5. '               ' → logprob: -12.133800506591797
    6. '           ' → logprob: -13.258800506591797
    7. '					' → logprob: -13.758800506591797
    8. '                           ' → logprob: -14.383800506591797
    9. '                        
' → logprob: -14.383800506591797
    10. '                      ' → logprob: -14.633800506591797

Token 219: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019291093340143561
    2. ' True' → logprob: -6.25192928314209
    3. 'memo' → logprob: -14.87692928314209
    4. '(True' → logprob: -16.251928329467773
    5. 'False' → logprob: -17.376928329467773
    6. 'true' → logprob: -18.626928329467773
    7. ' memo' → logprob: -19.001928329467773
    8. '=True' → logprob: -19.876928329467773
    9. '```' → logprob: -20.876928329467773
    10. 'Yes' → logprob: -21.001928329467773

Token 220: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00020926215802319348
    2. '           ' → logprob: -9.000208854675293
    3. '               ' → logprob: -10.125208854675293
    4. 'table' → logprob: -10.500208854675293
    5. ' table' → logprob: -11.625208854675293
    6. '       ' → logprob: -13.125208854675293
    7. '                       ' → logprob: -13.375208854675293
    8. '   ' → logprob: -13.375208854675293
    9. '                    ' → logprob: -13.875208854675293
    10. '                  ' → logprob: -14.000208854675293

Token 221: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006813380168750882
    2. '           ' → logprob: -8.000680923461914
    3. 'table' → logprob: -8.625680923461914
    4. '               ' → logprob: -9.000680923461914
    5. ' table' → logprob: -10.625680923461914
    6. '       ' → logprob: -11.875680923461914
    7. '   ' → logprob: -12.375680923461914
    8. '                       ' → logprob: -13.375680923461914
    9. '                  ' → logprob: -13.625680923461914
    10. '				' → logprob: -14.125680923461914

Token 222: ' table' (ID: 3293)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05480498448014259
    2. 'table' (adapté à ' table') → logprob: -3.304805040359497
    3. ' table' → logprob: -4.679804801940918
    4. '           ' → logprob: -5.554804801940918
    5. '               ' → logprob: -5.804804801940918
    6. '   ' → logprob: -8.304804801940918
    7. '       ' → logprob: -8.804804801940918
    8. '                       ' → logprob: -11.429804801940918
    9. '	table' → logprob: -11.679804801940918
    10. '         ' → logprob: -11.804804801940918

Token 223: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.000340111117111519
    2. '.' → logprob: -8.000340461730957
    3. '.add' → logprob: -13.000340461730957
    4. 'remove' → logprob: -13.250340461730957
    5. ' .' → logprob: -14.500340461730957
    6. '.dis' → logprob: -16.75033950805664
    7. '	remove' → logprob: -18.87533950805664
    8. ' remove' → logprob: -19.25033950805664
    9. '.Remove' → logprob: -19.62533950805664
    10. '_remove' → logprob: -20.00033950805664

Token 224: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -18.375
    4. '(
' → logprob: -20.75
    5. '(card' → logprob: -20.75
    6. '()' → logprob: -21.0
    7. '©' → logprob: -21.5
    8. 'c' → logprob: -22.0
    9. '(code' → logprob: -22.25
    10. '(token' → logprob: -22.25

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016576196998357773
    2. ')
' → logprob: -4.266576290130615
    3. '               ' → logprob: -7.391576290130615
    4. ')return' → logprob: -7.516576290130615
    5. '
' → logprob: -7.891576290130615
    6. '<|end|>' → logprob: -8.016575813293457
    7. '                   ' → logprob: -8.891575813293457
    8. '           ' → logprob: -9.391575813293457
    9. 'return' → logprob: -9.391575813293457
    10. ')c' → logprob: -10.016575813293457

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03312307596206665
    2. '           ' → logprob: -3.658123016357422
    3. 'else' → logprob: -5.908123016357422
    4. 'places' → logprob: -6.033123016357422
    5. '       ' → logprob: -7.283123016357422
    6. ' places' → logprob: -7.908123016357422
    7. ' else' → logprob: -8.033123016357422
    8. 'return' → logprob: -9.783123016357422
    9. 'for' → logprob: -10.033123016357422
    10. '                
' → logprob: -10.533123016357422

Token 227: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.015054804272949696
    2. '           ' → logprob: -5.140054702758789
    3. '               ' → logprob: -5.515054702758789
    4. ' memo' → logprob: -6.015054702758789
    5. '       ' → logprob: -6.265054702758789
    6. 'else' → logprob: -7.390054702758789
    7. '   ' → logprob: -10.140054702758789
    8. '                   ' → logprob: -10.640054702758789
    9. 'm' → logprob: -11.515054702758789
    10. 'mem' → logprob: -11.765054702758789

Token 228: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '[token' → logprob: -17.625
    4. '[user' → logprob: -18.375
    5. '```' → logprob: -19.0
    6. ' [' → logprob: -19.375
    7. 'key' → logprob: -19.375
    8. '[k' → logprob: -20.25
    9. '	key' → logprob: -20.25
    10. '[
' → logprob: -20.375

Token 229: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13095714151859283
    2. ']' → logprob: -2.3809571266174316
    3. ' =' → logprob: -3.5059571266174316
    4. ']=' → logprob: -8.25595760345459
    5. '=False' → logprob: -13.50595760345459
    6. ' ]' → logprob: -13.63095760345459
    7. ')' → logprob: -13.88095760345459
    8. '   ' → logprob: -14.00595760345459
    9. ' ' → logprob: -16.005956649780273
    10. '[' → logprob: -16.130956649780273

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=False' → logprob: -18.375911712646484
    4. '=
' → logprob: -19.875911712646484
    5. ']=' → logprob: -19.875911712646484
    6. ']' → logprob: -20.125911712646484
    7. '＝' → logprob: -20.625911712646484
    8. '=

' → logprob: -21.375911712646484
    9. ' ' → logprob: -21.500911712646484
    10. '[' → logprob: -21.875911712646484

Token 231: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -20.00009536743164
    4. '=False' → logprob: -20.62509536743164
    5. '   ' → logprob: -22.12509536743164
    6. 'false' → logprob: -22.50009536743164
    7. '.False' → logprob: -23.37509536743164
    8. '
' → logprob: -24.12509536743164
    9. '_false' → logprob: -24.25009536743164
    10. 'True' → logprob: -24.37509536743164

Token 232: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003266361076384783
    2. '           ' → logprob: -5.753266334533691
    3. '       ' → logprob: -9.878266334533691
    4. 'return' → logprob: -10.628266334533691
    5. '                   ' → logprob: -12.128266334533691
    6. ' return' → logprob: -13.253266334533691
    7. '		       ' → logprob: -13.378266334533691
    8. '	           ' → logprob: -13.628266334533691
    9. '	       ' → logprob: -14.253266334533691
    10. '```' → logprob: -14.628266334533691

Token 233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07052550464868546
    2. '           ' → logprob: -2.6955254077911377
    3. '       ' → logprob: -7.695525646209717
    4. 'return' → logprob: -9.445525169372559
    5. '                   ' → logprob: -10.070525169372559
    6. 'else' → logprob: -12.445525169372559
    7. ' return' → logprob: -13.195525169372559
    8. '   ' → logprob: -13.570525169372559
    9. '	           ' → logprob: -13.570525169372559
    10. '```' → logprob: -13.570525169372559

Token 234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02297232113778591
    2. ' return' → logprob: -4.272972106933594
    3. '               ' → logprob: -4.772972106933594
    4. '       ' → logprob: -8.647972106933594
    5. '           ' → logprob: -9.397972106933594
    6. '	return' → logprob: -10.147972106933594
    7. '   ' → logprob: -11.272972106933594
    8. ' ' → logprob: -12.647972106933594
    9. ':return' → logprob: -15.147972106933594
    10. '                   ' → logprob: -15.397972106933594

Token 235: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -22.75
    4. 'True' → logprob: -23.875
    5. 'false' → logprob: -24.625
    6. 'memo' → logprob: -25.0
    7. '=False' → logprob: -27.25
    8. '_false' → logprob: -27.625
    9. '.False' → logprob: -28.375
    10. 'None' → logprob: -28.5

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02780519239604473
    2. '           ' → logprob: -3.6528050899505615
    3. 'else' → logprob: -6.777805328369141
    4. '   ' → logprob: -8.65280532836914
    5. ' else' → logprob: -9.90280532836914
    6. 'elif' → logprob: -10.02780532836914
    7. '
' → logprob: -10.77780532836914
    8. '	       ' → logprob: -10.90280532836914
    9. '<|end|>' → logprob: -11.65280532836914
    10. '        
' → logprob: -11.77780532836914

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06269503384828568
    2. '           ' → logprob: -2.812695026397705
    3. 'else' → logprob: -7.312695026397705
    4. '
' → logprob: -11.062695503234863
    5. ' else' → logprob: -11.062695503234863
    6. '   ' → logprob: -11.187695503234863
    7. '               ' → logprob: -12.562695503234863
    8. 'elif' → logprob: -12.562695503234863
    9. '        
' → logprob: -13.562695503234863
    10. 'return' → logprob: -13.937695503234863

Token 238: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20279033482074738
    2. 'else' (adapté à ' else') → logprob: -1.702790379524231
    3. ' else' → logprob: -7.077790260314941
    4. 'places' → logprob: -8.577790260314941
    5. '           ' → logprob: -9.577790260314941
    6. '
' → logprob: -9.577790260314941
    7. '   ' → logprob: -9.827790260314941
    8. 'place' → logprob: -9.952790260314941
    9. 'elif' → logprob: -10.077790260314941
    10. 'return' → logprob: -10.952790260314941

Token 239: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07997070997953415
    2. '           ' → logprob: -3.079970598220825
    3. ':
' → logprob: -4.079970836639404
    4. ':' → logprob: -4.704970836639404
    5. 'memo' → logprob: -6.204970836639404
    6. '       ' → logprob: -6.454970836639404
    7. '   ' → logprob: -7.829970836639404
    8. 'return' → logprob: -8.454970359802246
    9. ' memo' → logprob: -8.454970359802246
    10. 'if' → logprob: -9.329970359802246

Token 240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1792510747909546
    2. 'memo' → logprob: -1.9292510747909546
    3. '       ' → logprob: -4.679251194000244
    4. '           ' → logprob: -4.804251194000244
    5. 'table' → logprob: -7.554251194000244
    6. '   ' → logprob: -8.429250717163086
    7. ' memo' → logprob: -8.429250717163086
    8. 'pass' → logprob: -8.929250717163086
    9. 'turn' → logprob: -9.304250717163086
    10. 'if' → logprob: -9.554250717163086

Token 241: ' res' (ID: 694)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.07840681076049805
    2. '               ' → logprob: -3.328406810760498
    3. 'return' → logprob: -4.203406810760498
    4. 'if' → logprob: -4.453406810760498
    5. 'result' → logprob: -5.453406810760498
    6. '#' → logprob: -5.453406810760498
    7. '           ' → logprob: -6.703406810760498
    8. ' memo' → logprob: -7.078406810760498
    9. '   ' → logprob: -7.203406810760498
    10. '                   ' → logprob: -7.453406810760498

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760543346405029
    2. '=' → logprob: -0.8260543346405029
    3. '   ' → logprob: -9.451054573059082
    4. '=False' → logprob: -11.451054573059082
    5. '               ' → logprob: -12.201054573059082
    6. 'eturn' → logprob: -12.326054573059082
    7. '=True' → logprob: -12.701054573059082
    8. 'turn' → logprob: -12.826054573059082
    9. ' ' → logprob: -13.201054573059082
    10. '=m' → logprob: -13.326054573059082

Token 243: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.07147299498319626
    2. ' dfs' → logprob: -2.6964728832244873
    3. ' not' → logprob: -7.571473121643066
    4. 'not' → logprob: -7.571473121643066
    5. 'False' → logprob: -8.696473121643066
    6. '   ' → logprob: -9.196473121643066
    7. 'df' → logprob: -9.821473121643066
    8. ' False' → logprob: -10.571473121643066
    9. '    ' → logprob: -10.946473121643066
    10. '           ' → logprob: -11.071473121643066

Token 244: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.002865973860025406
    2. '(s' → logprob: -5.877865791320801
    3. '(' → logprob: -10.2528657913208
    4. 'f' → logprob: -10.8778657913208
    5. '(second' → logprob: -12.3778657913208
    6. ' (' → logprob: -13.6278657913208
    7. '(first' → logprob: -14.6278657913208
    8. 'second' → logprob: -14.7528657913208
    9. 's' → logprob: -15.1278657913208
    10. '((' → logprob: -16.002866744995117

Token 245: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.004517346620559692
    2. '(f' → logprob: -5.754517555236816
    3. 'irst' → logprob: -7.879517555236816
    4. '(s' → logprob: -8.004517555236816
    5. '_s' → logprob: -9.254517555236816
    6. 's' → logprob: -9.629517555236816
    7. '_scores' → logprob: -9.754517555236816
    8. '(first' → logprob: -10.129517555236816
    9. '_second' → logprob: -10.254517555236816
    10. '(' → logprob: -10.254517555236816

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028217731043696404
    2. '(s' → logprob: -4.028217792510986
    3. 's' → logprob: -5.403217792510986
    4. ',s' → logprob: -5.903217792510986
    5. ' ,' → logprob: -6.153217792510986
    6. ' s' → logprob: -7.653217792510986
    7. '(' → logprob: -9.778217315673828
    8. ' (' → logprob: -10.278217315673828
    9. '(f' → logprob: -10.528217315673828
    10. ',
' → logprob: -11.528217315673828

Token 247: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016060879454016685
    2. ' s' → logprob: -4.141060829162598
    3. '   ' → logprob: -11.391060829162598
    4. 'second' → logprob: -12.141060829162598
    5. ' ' → logprob: -13.016060829162598
    6. '       ' → logprob: -13.266060829162598
    7. '           ' → logprob: -13.391060829162598
    8. '
' → logprob: -14.016060829162598
    9. ' second' → logprob: -14.516060829162598
    10. '{s' → logprob: -14.766060829162598

Token 248: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.011927674524486065
    2. '{s' → logprob: -5.511927604675293
    3. '{' → logprob: -6.136927604675293
    4. '-' → logprob: -6.136927604675293
    5. 's' → logprob: -6.511927604675293
    6. '_sets' → logprob: -8.011927604675293
    7. '_s' → logprob: -8.136927604675293
    8. '(s' → logprob: -8.386927604675293
    9. '-{' → logprob: -9.011927604675293
    10. '_answers' → logprob: -9.386927604675293

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.029847231227905e-05
    2. ' ,' → logprob: -9.625080108642578
    3. '1' → logprob: -11.625080108642578
    4. ',
' → logprob: -13.375080108642578
    5. '(' → logprob: -13.625080108642578
    6. 's' → logprob: -14.875080108642578
    7. '                   ' → logprob: -15.000080108642578
    8. '),' → logprob: -15.000080108642578
    9. ')' → logprob: -15.250080108642578
    10. '0' → logprob: -15.625080108642578

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -15.125007629394531
    4. '(' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.62500762939453
    6. '           ' → logprob: -17.75000762939453
    7. '               ' → logprob: -18.87500762939453
    8. 'not' → logprob: -19.00000762939453
    9. '```' → logprob: -19.12500762939453
    10. '                   ' → logprob: -19.50000762939453

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.125009536743164
    3. '0' → logprob: -12.375009536743164
    4. '   ' → logprob: -17.000009536743164
    5. '(' → logprob: -17.125009536743164
    6. 'turn' → logprob: -18.625009536743164
    7. '           ' → logprob: -18.625009536743164
    8. '
' → logprob: -19.187509536743164
    9. '               ' → logprob: -19.375009536743164
    10. '```' → logprob: -19.625009536743164

Token 252: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10278449952602386
    2. ')' → logprob: -2.3527843952178955
    3. '               ' → logprob: -5.977784633636475
    4. ')
' → logprob: -10.352784156799316
    5. ')

' → logprob: -12.227784156799316
    6. ')return' → logprob: -13.977784156799316
    7. '           ' → logprob: -14.352784156799316
    8. ' )
' → logprob: -14.352784156799316
    9. '()' → logprob: -15.102784156799316
    10. '())
' → logprob: -15.227784156799316

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028171599842607975
    2. 'memo' → logprob: -9.25028133392334
    3. '           ' → logprob: -9.50028133392334
    4. 'return' → logprob: -9.62528133392334
    5. '<|end|>' → logprob: -11.62528133392334
    6. 'mem' → logprob: -12.12528133392334
    7. 'else' → logprob: -12.12528133392334
    8. '       ' → logprob: -12.25028133392334
    9. '			' → logprob: -12.50028133392334
    10. '```' → logprob: -12.62528133392334

Token 254: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.2530231773853302
    2. '               ' → logprob: -1.5030231475830078
    3. ' memo' → logprob: -6.878023147583008
    4. '           ' → logprob: -10.628023147583008
    5. 'mem' → logprob: -10.753023147583008
    6. 'm' → logprob: -12.003023147583008
    7. '   ' → logprob: -12.753023147583008
    8. 'memory' → logprob: -13.003023147583008
    9. 'return' → logprob: -13.253023147583008
    10. '.memo' → logprob: -13.253023147583008

Token 255: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '[user' → logprob: -18.125
    4. ' [' → logprob: -19.75
    5. 'key' → logprob: -20.625
    6. '```' → logprob: -20.75
    7. '[token' → logprob: -21.375
    8. ',key' → logprob: -21.75
    9. '\[' → logprob: -22.5
    10. '[k' → logprob: -22.625

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000285530521068722
    2. ']=' → logprob: -8.375285148620605
    3. ')' → logprob: -10.750285148620605
    4. '=' → logprob: -11.000285148620605
    5. '[' → logprob: -11.625285148620605
    6. ' ]' → logprob: -11.875285148620605
    7. ']
' → logprob: -14.500285148620605
    8. '   ' → logprob: -16.125286102294922
    9. '])' → logprob: -16.625286102294922
    10. ' =' → logprob: -16.750286102294922

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -16.383615493774414
    4. '[' → logprob: -17.258615493774414
    5. '=

' → logprob: -17.508615493774414
    6. ']=' → logprob: -17.758615493774414
    7. ')=' → logprob: -18.258615493774414
    8. '   ' → logprob: -18.758615493774414
    9. ']' → logprob: -18.883615493774414
    10. '＝' → logprob: -19.258615493774414

Token 258: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001664717128733173
    2. ' res' → logprob: -9.250166893005371
    3. 'dfs' → logprob: -9.750166893005371
    4. 'False' → logprob: -11.500166893005371
    5. 'not' → logprob: -13.375166893005371
    6. ' dfs' → logprob: -15.750166893005371
    7. 'True' → logprob: -16.125165939331055
    8. '   ' → logprob: -17.375165939331055
    9. 'solve' → logprob: -17.625165939331055
    10. ' not' → logprob: -18.000165939331055

Token 259: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017503881826996803
    2. 'return' → logprob: -6.751750469207764
    3. '       ' → logprob: -7.501750469207764
    4. '           ' → logprob: -10.876749992370605
    5. ' return' → logprob: -11.876749992370605
    6. '                   ' → logprob: -15.001749992370605
    7. '```' → logprob: -15.001749992370605
    8. '   ' → logprob: -15.501749992370605
    9. '              ' → logprob: -15.876749992370605
    10. '<|end|>' → logprob: -16.001750946044922

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01612551510334015
    2. 'return' → logprob: -4.141125679016113
    3. ' return' → logprob: -10.016125679016113
    4. '       ' → logprob: -10.266125679016113
    5. '           ' → logprob: -11.766125679016113
    6. '	return' → logprob: -13.766125679016113
    7. '			' → logprob: -14.016125679016113
    8. '   ' → logprob: -14.766125679016113
    9. '		       ' → logprob: -14.766125679016113
    10. '```' → logprob: -14.766125679016113

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005648017395287752
    2. ' return' → logprob: -5.755648136138916
    3. '               ' → logprob: -6.005648136138916
    4. '	return' → logprob: -13.755647659301758
    5. '       ' → logprob: -14.130647659301758
    6. '           ' → logprob: -14.880647659301758
    7. '   ' → logprob: -15.005647659301758
    8. ':return' → logprob: -17.755647659301758
    9. 'eturn' → logprob: -17.880647659301758
    10. ' ' → logprob: -17.880647659301758

Token 262: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.15310683415737e-05
    2. ' res' → logprob: -10.750021934509277
    3. 'False' → logprob: -20.62502098083496
    4. 're' → logprob: -20.87502098083496
    5. '(res' → logprob: -21.87502098083496
    6. 'r' → logprob: -21.87502098083496
    7. '	res' → logprob: -22.00002098083496
    8. 'ress' → logprob: -22.75002098083496
    9. 'resi' → logprob: -23.00002098083496
    10. 'rec' → logprob: -23.25002098083496

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036084887688048184
    2. '<|end|>' → logprob: -8.625360488891602
    3. 'else' → logprob: -9.375360488891602
    4. '
' → logprob: -10.500360488891602
    5. 'elif' → logprob: -11.000360488891602
    6. '        
' → logprob: -11.500360488891602
    7. '	' → logprob: -11.875360488891602
    8. ')' → logprob: -11.875360488891602
    9. '<|end|>' → logprob: -12.000360488891602
    10. '```' → logprob: -12.250360488891602

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004674811381846666
    2. 'else' → logprob: -5.379674911499023
    3. ' else' → logprob: -10.379674911499023
    4. 'elif' → logprob: -11.004674911499023
    5. '	' → logprob: -13.379674911499023
    6. '<|end|>' → logprob: -13.379674911499023
    7. '   ' → logprob: -13.754674911499023
    8. '	else' → logprob: -14.254674911499023
    9. '```' → logprob: -15.129674911499023
    10. '#' → logprob: -15.129674911499023

Token 265: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11840704828500748
    2. ' else' → logprob: -2.3684070110321045
    3. '       ' → logprob: -4.118407249450684
    4. '   ' → logprob: -6.368407249450684
    5. '
' → logprob: -10.618407249450684
    6. 'elif' → logprob: -11.493407249450684
    7. '	else' → logprob: -11.618407249450684
    8. '        
' → logprob: -12.743407249450684
    9. '    
' → logprob: -13.993407249450684
    10. '```' → logprob: -14.243407249450684

Token 266: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18514476716518402
    2. ':' → logprob: -1.9351447820663452
    3. '           ' → logprob: -3.8101446628570557
    4. '       ' → logprob: -6.060144901275635
    5. ' places' → logprob: -10.310144424438477
    6. '):
' → logprob: -10.810144424438477
    7. '   ' → logprob: -11.310144424438477
    8. '        ' → logprob: -11.435144424438477
    9. ':

' → logprob: -11.810144424438477
    10. ' :
' → logprob: -11.935144424438477

Token 267: '           ' (ID: 352)
  Prédit: 'places'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'places' → logprob: -0.7093853950500488
    2. '       ' → logprob: -0.8343853950500488
    3. '           ' → logprob: -3.084385395050049
    4. ' places' → logprob: -3.584385395050049
    5. '   ' → logprob: -8.58438491821289
    6. '_places' → logprob: -9.20938491821289
    7. '        ' → logprob: -10.08438491821289
    8. 'Places' → logprob: -11.58438491821289
    9. '               ' → logprob: -11.83438491821289
    10. 's' → logprob: -11.83438491821289

Token 268: ' places' (ID: 9610)
  Prédit: 'places'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'places' (adapté à ' places') → logprob: -0.0027894231025129557
    2. '           ' → logprob: -6.127789497375488
    3. ' places' → logprob: -7.877789497375488
    4. '       ' → logprob: -9.752789497375488
    5. '               ' → logprob: -9.877789497375488
    6. '   ' → logprob: -10.127789497375488
    7. 'moves' → logprob: -10.377789497375488
    8. 'placements' → logprob: -11.752789497375488
    9. 'spots' → logprob: -12.252789497375488
    10. '_places' → logprob: -12.252789497375488

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.126928329467773
    4. '   ' → logprob: -17.626928329467773
    5. ')' → logprob: -19.126928329467773
    6. '＝' → logprob: -19.126928329467773
    7. ' ' → logprob: -19.376928329467773
    8. 's' → logprob: -19.626928329467773
    9. '```' → logprob: -19.626928329467773
    10. '=c' → logprob: -20.001928329467773

Token 270: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.1002107709646225
    2. ' can' → logprob: -2.350210666656494
    3. '(can' → logprob: -12.725211143493652
    4. '	can' → logprob: -14.100211143493652
    5. '.can' → logprob: -16.100210189819336
    6. '_can' → logprob: -16.475210189819336
    7. ' ' → logprob: -17.475210189819336
    8. '[' → logprob: -18.100210189819336
    9. '```' → logprob: -18.350210189819336
    10. 'Can' → logprob: -18.600210189819336

Token 271: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -5.288163083605468e-05
    2. 'place' → logprob: -9.875052452087402
    3. '_places' → logprob: -13.750052452087402
    4. '_' → logprob: -15.500052452087402
    5. 'Place' → logprob: -16.37505340576172
    6. 's' → logprob: -18.00005340576172
    7. 'places' → logprob: -18.12505340576172
    8. 'plac' → logprob: -18.50005340576172
    9. '_PLACE' → logprob: -18.50005340576172
    10. '_put' → logprob: -19.00005340576172

Token 272: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3856492842023727e-06
    2. 's' → logprob: -13.750000953674316
    3. '(second' → logprob: -15.625000953674316
    4. 'second' → logprob: -16.875001907348633
    5. '(' → logprob: -18.000001907348633
    6. '(
' → logprob: -20.000001907348633
    7. 'Second' → logprob: -20.750001907348633
    8. ' (' → logprob: -20.875001907348633
    9. '```' → logprob: -21.500001907348633
    10. 'def' → logprob: -22.000001907348633

Token 273: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.750006675720215
    3. '_s' → logprob: -12.750006675720215
    4. '_codes' → logprob: -16.2500057220459
    5. '(cards' → logprob: -16.2500057220459
    6. 's' → logprob: -16.3750057220459
    7. 'cards' → logprob: -16.6250057220459
    8. '_c' → logprob: -17.2500057220459
    9. '_card' → logprob: -17.8750057220459
    10. '```' → logprob: -18.1250057220459

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ' ,' → logprob: -10.125043869018555
    3. '(table' → logprob: -12.875043869018555
    4. '(' → logprob: -15.125043869018555
    5. ')' → logprob: -15.125043869018555
    6. ',
' → logprob: -15.375043869018555
    7. '           ' → logprob: -15.500043869018555
    8. ')table' → logprob: -16.625043869018555
    9. '),' → logprob: -16.750043869018555
    10. '[' → logprob: -16.750043869018555

Token 275: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.006715370807796717
    2. ' table' → logprob: -5.006715297698975
    3. '(table' → logprob: -18.131715774536133
    4. '	table' → logprob: -18.756715774536133
    5. '   ' → logprob: -19.006715774536133
    6. ')table' → logprob: -19.381715774536133
    7. '           ' → logprob: -19.631715774536133
    8. '{' → logprob: -19.631715774536133
    9. ' ' → logprob: -19.881715774536133
    10. '<table' → logprob: -20.256715774536133

Token 276: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10030188411474228
    2. ')' → logprob: -2.35030198097229
    3. '           ' → logprob: -9.350301742553711
    4. '   ' → logprob: -12.475301742553711
    5. ')
' → logprob: -12.975301742553711
    6. '       ' → logprob: -13.475301742553711
    7. ')

' → logprob: -14.850301742553711
    8. ' )
' → logprob: -14.975301742553711
    9. ' )' → logprob: -17.35030174255371
    10. '):
' → logprob: -17.72530174255371

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002881903201341629
    2. ' if' → logprob: -6.37788200378418
    3. 'if' → logprob: -7.37788200378418
    4. '       ' → logprob: -8.00288200378418
    5. '   ' → logprob: -9.00288200378418
    6. '               ' → logprob: -10.00288200378418
    7. '
' → logprob: -11.50288200378418
    8. '<|end|>' → logprob: -11.50288200378418
    9. '	if' → logprob: -12.25288200378418
    10. '          ' → logprob: -12.37788200378418

Token 278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08515875786542892
    2. ' if' → logprob: -2.5851588249206543
    3. '           ' → logprob: -5.085158824920654
    4. 'for' → logprob: -10.210158348083496
    5. '       ' → logprob: -11.210158348083496
    6. '               ' → logprob: -12.585158348083496
    7. ' for' → logprob: -12.585158348083496
    8. '   ' → logprob: -13.210158348083496
    9. ' ' → logprob: -14.085158348083496
    10. '	if' → logprob: -14.585158348083496

Token 279: ' places' (ID: 9610)
  Prédit: 'places'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'places' → logprob: -0.523167610168457
    2. ' places' → logprob: -0.898167610168457
    3. ' not' → logprob: -10.898167610168457
    4. 'not' → logprob: -11.148167610168457
    5. 'place' → logprob: -11.898167610168457
    6. 'Places' → logprob: -13.648167610168457
    7. 'len' → logprob: -14.523167610168457
    8. '_places' → logprob: -14.523167610168457
    9. 'spaces' → logprob: -14.898167610168457
    10. 'plac' → logprob: -15.085667610168457

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6331769227981567
    2. ':
' → logprob: -0.7581769227981567
    3. '               ' → logprob: -7.508176803588867
    4. '           ' → logprob: -11.633176803588867
    5. '):
' → logprob: -11.883176803588867
    6. ':

' → logprob: -12.758176803588867
    7. ':
' → logprob: -13.133176803588867
    8. '=' → logprob: -13.508176803588867
    9. '[' → logprob: -13.633176803588867
    10. '():
' → logprob: -13.633176803588867

Token 281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019432762637734413
    2. ' for' → logprob: -6.376943111419678
    3. 'for' → logprob: -8.376943588256836
    4. '           ' → logprob: -12.251943588256836
    5. '```' → logprob: -12.626943588256836
    6. '	           ' → logprob: -14.376943588256836
    7. '                   ' → logprob: -14.376943588256836
    8. '			' → logprob: -14.876943588256836
    9. '<|end|>' → logprob: -15.251943588256836
    10. '	for' → logprob: -15.751943588256836

Token 282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16372404992580414
    2. ' for' → logprob: -1.9137240648269653
    3. '               ' → logprob: -5.663723945617676
    4. '           ' → logprob: -11.038723945617676
    5. '	for' → logprob: -12.038723945617676
    6. '                   ' → logprob: -13.538723945617676
    7. '   ' → logprob: -14.538723945617676
    8. ' ' → logprob: -15.163723945617676
    9. '       ' → logprob: -16.538724899291992
    10. '```' → logprob: -16.788724899291992

Token 283: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132622241973877
    2. ' c' → logprob: -1.3132622241973877
    3. '	c' → logprob: -15.188261985778809
    4. ' ' → logprob: -16.563262939453125
    5. '   ' → logprob: -16.813262939453125
    6. '```' → logprob: -17.063262939453125
    7. 's' → logprob: -17.563262939453125
    8. ' ' → logprob: -17.625762939453125
    9. '(c' → logprob: -17.875762939453125
    10. '`' → logprob: -18.000762939453125

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004035017918795347
    2. 'in' → logprob: -7.87540340423584
    3. '                   ' → logprob: -11.00040340423584
    4. '               ' → logprob: -13.62540340423584
    5. ' ' → logprob: -14.50040340423584
    6. ' c' → logprob: -14.50040340423584
    7. 's' → logprob: -14.87540340423584
    8. ':' → logprob: -14.87540340423584
    9. ' =' → logprob: -15.00040340423584
    10. '   ' → logprob: -15.12540340423584

Token 285: ' places' (ID: 9610)
  Prédit: 'places'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'places' → logprob: -0.42872992157936096
    2. ' places' → logprob: -1.0537298917770386
    3. ' can' → logprob: -11.303730010986328
    4. 'can' → logprob: -12.053730010986328
    5. 'place' → logprob: -13.178730010986328
    6. 'c' → logprob: -13.303730010986328
    7. ' ' → logprob: -13.678730010986328
    8. '_places' → logprob: -13.678730010986328
    9. '   ' → logprob: -14.053730010986328
    10. ' c' → logprob: -14.553730010986328

Token 286: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45115289092063904
    2. '               ' → logprob: -1.9511529207229614
    3. ':' → logprob: -2.201152801513672
    4. ':
' → logprob: -2.576152801513672
    5. '<|end|>' → logprob: -3.701152801513672
    6. '           ' → logprob: -6.701152801513672
    7. '<|end|>' → logprob: -6.701152801513672
    8. '                       ' → logprob: -6.951152801513672
    9. '   ' → logprob: -6.951152801513672
    10. ',' → logprob: -7.076152801513672

Token 287: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1213163286447525
    2. '               ' → logprob: -2.246316432952881
    3. ' table' → logprob: -5.121316432952881
    4. 'table' → logprob: -6.746316432952881
    5. '   ' → logprob: -7.121316432952881
    6. '                       ' → logprob: -8.246315956115723
    7. '           ' → logprob: -9.121315956115723
    8. '```' → logprob: -9.871315956115723
    9. '                ' → logprob: -10.871315956115723
    10. '       ' → logprob: -11.621315956115723

Token 288: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.39176055788993835
    2. 'table' (adapté à ' table') → logprob: -1.1417605876922607
    3. '                   ' → logprob: -5.391760349273682
    4. '	table' → logprob: -8.76676082611084
    5. '           ' → logprob: -9.26676082611084
    6. '               ' → logprob: -10.51676082611084
    7. '   ' → logprob: -10.76676082611084
    8. ' ' → logprob: -12.26676082611084
    9. '<table' → logprob: -12.26676082611084
    10. '                       ' → logprob: -12.51676082611084

Token 289: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00033939589047804475
    2. '.' → logprob: -8.00033950805664
    3. ' .' → logprob: -12.75033950805664
    4. '.remove' → logprob: -14.00033950805664
    5. 'add' → logprob: -15.62533950805664
    6. '   ' → logprob: -18.50033950805664
    7. '.append' → logprob: -18.87533950805664
    8. '.Add' → logprob: -19.00033950805664
    9. '	add' → logprob: -19.50033950805664
    10. '.clear' → logprob: -19.62533950805664

Token 290: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.25000286102295
    3. '(' → logprob: -14.25000286102295
    4. '   ' → logprob: -19.250001907348633
    5. '©' → logprob: -19.625001907348633
    6. '(
' → logprob: -19.750001907348633
    7. '                   ' → logprob: -20.125001907348633
    8. '(s' → logprob: -20.750001907348633
    9. '(C' → logprob: -21.000001907348633
    10. '```' → logprob: -21.250001907348633

Token 291: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07031162828207016
    2. ')
' → logprob: -2.8203115463256836
    3. '
' → logprob: -5.820311546325684
    4. '(c' → logprob: -5.820311546325684
    5. 'c' → logprob: -6.820311546325684
    6. ')' → logprob: -7.320311546325684
    7. ' c' → logprob: -8.945311546325684
    8. '               ' → logprob: -9.320311546325684
    9. '           ' → logprob: -9.820311546325684
    10. ')c' → logprob: -9.820311546325684

Token 292: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0035168027970939875
    2. 's' → logprob: -6.253516674041748
    3. ' s' → logprob: -7.628516674041748
    4. 'c' → logprob: -7.878516674041748
    5. '           ' → logprob: -8.628517150878906
    6. '
' → logprob: -8.628517150878906
    7. '               ' → logprob: -8.878517150878906
    8. '   ' → logprob: -9.878517150878906
    9. '                    ' → logprob: -10.628517150878906
    10. ' c' → logprob: -10.628517150878906

Token 293: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10778919607400894
    2. ' if' → logprob: -2.8577892780303955
    3. '                   ' → logprob: -3.1077892780303955
    4. '           ' → logprob: -9.857789039611816
    5. '               ' → logprob: -10.607789039611816
    6. '   ' → logprob: -12.607789039611816
    7. '       ' → logprob: -12.982789039611816
    8. '	if' → logprob: -13.982789039611816
    9. '                    ' → logprob: -14.482789039611816
    10. '
' → logprob: -14.607789039611816

Token 294: ' Opp' (ID: 55440)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012362991692498326
    2. ' if' → logprob: -6.751236438751221
    3. '                   ' → logprob: -9.626235961914062
    4. '               ' → logprob: -16.251235961914062
    5. '           ' → logprob: -17.376235961914062
    6. '```' → logprob: -17.501235961914062
    7. '   ' → logprob: -18.126235961914062
    8. '                       ' → logprob: -18.251235961914062
    9. '
' → logprob: -18.626235961914062
    10. '       ' → logprob: -18.876235961914062

Token 295: 'onent' (ID: 130930)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23966096341609955
    2. '               ' → logprob: -2.3646609783172607
    3. 'onent' → logprob: -3.2396609783172607
    4. 'osite' → logprob: -3.3646609783172607
    5. '           ' → logprob: -3.4896609783172607
    6. '```' → logprob: -5.864660739898682
    7. '                       ' → logprob: -5.989660739898682
    8. 'osit' → logprob: -6.489660739898682
    9. '``' → logprob: -6.614660739898682
    10. 'for' → logprob: -6.989660739898682

Token 296: ' tries' (ID: 30519)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.660655677318573
    2. ' if' → logprob: -0.785655677318573
    3. 'if' → logprob: -3.7856557369232178
    4. '<|end|>' → logprob: -5.785655498504639
    5. '                       ' → logprob: -7.785655498504639
    6. '               ' → logprob: -7.910655498504639
    7. '<|end|>' → logprob: -8.035655975341797
    8. ' has' → logprob: -9.035655975341797
    9. ''s' → logprob: -9.160655975341797
    10. '                    
' → logprob: -9.285655975341797

Token 297: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16848480701446533
    2. 'if' → logprob: -2.043484687805176
    3. ' if' → logprob: -4.043484687805176
    4. '                       ' → logprob: -5.918484687805176
    5. '               ' → logprob: -6.168484687805176
    6. ' to' → logprob: -6.918484687805176
    7. '           ' → logprob: -7.418484687805176
    8. '       ' → logprob: -7.668484687805176
    9. 'to' → logprob: -8.043484687805176
    10. '   ' → logprob: -8.543484687805176

Token 298: ' prevent' (ID: 7332)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028105884790420532
    2. 'dfs' → logprob: -4.153105735778809
    3. ' if' → logprob: -4.653105735778809
    4. '                   ' → logprob: -6.403105735778809
    5. 'block' → logprob: -7.778105735778809
    6. ' dfs' → logprob: -9.028105735778809
    7. '
' → logprob: -9.903105735778809
    8. '               ' → logprob: -10.153105735778809
    9. 'prevent' → logprob: -10.528105735778809
    10. 'win' → logprob: -10.653105735778809

Token 299: ' our' (ID: 1039)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40509364008903503
    2. 'if' → logprob: -1.2800936698913574
    3. ' if' → logprob: -4.030093669891357
    4. 'f' → logprob: -4.155093669891357
    5. 'c' → logprob: -5.155093669891357
    6. 'dfs' → logprob: -5.780093669891357
    7. 's' → logprob: -6.155093669891357
    8. '               ' → logprob: -6.155093669891357
    9. '                       ' → logprob: -6.405093669891357
    10. '(c' → logprob: -6.780093669891357

Token 300: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.1675480306148529
    2. 'return' → logprob: -3.2925479412078857
    3. 'dfs' → logprob: -3.4175479412078857
    4. '
' → logprob: -3.6675479412078857
    5. 'c' → logprob: -4.542548179626465
    6. 'f' → logprob: -4.667548179626465
    7. 'wins' → logprob: -4.917548179626465
    8. 'cards' → logprob: -5.167548179626465
    9. 'vict' → logprob: -5.167548179626465
    10. 'op' → logprob: -5.542548179626465

Token 301: ';' (ID: 26)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004834634251892567
    2. '<|end|>' → logprob: -6.5048346519470215
    3. '                    
' → logprob: -6.8798346519470215
    4. ' if' → logprob: -7.1298346519470215
    5. 'if' → logprob: -7.2548346519470215
    6. '
' → logprob: -7.3798346519470215
    7. '               ' → logprob: -10.004834175109863
    8. '<|end|>' → logprob: -10.504834175109863
    9. '           ' → logprob: -11.004834175109863
    10. '                        
' → logprob: -11.504834175109863

Token 302: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020057233050465584
    2. '                   ' → logprob: -4.145057201385498
    3. ' if' → logprob: -5.520057201385498
    4. '               ' → logprob: -12.770057678222656
    5. '```' → logprob: -13.020057678222656
    6. '           ' → logprob: -14.020057678222656
    7. '   ' → logprob: -14.020057678222656
    8. '                       ' → logprob: -14.145057678222656
    9. '                    
' → logprob: -15.145057678222656
    10. 'return' → logprob: -15.520057678222656

Token 303: ' branches' (ID: 34625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.252858430147171
    2. '                   ' → logprob: -2.0028584003448486
    3. ' if' → logprob: -2.5028584003448486
    4. 'must' → logprob: -6.877858638763428
    5. ' must' → logprob: -7.002858638763428
    6. 'moves' → logprob: -7.127858638763428
    7. 'dfs' → logprob: -7.127858638763428
    8. 'c' → logprob: -7.502858638763428
    9. '               ' → logprob: -8.12785816192627
    10. 'not' → logprob: -8.12785816192627

Token 304: ' must' (ID: 2804)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7523049116134644
    2. 'must' → logprob: -0.8773049116134644
    3. ' must' → logprob: -2.252305030822754
    4. 'have' → logprob: -5.752305030822754
    5. ' need' → logprob: -7.127305030822754
    6. '```' → logprob: -7.252305030822754
    7. ' have' → logprob: -7.252305030822754
    8. '                       ' → logprob: -7.377305030822754
    9. 'need' → logprob: -7.377305030822754
    10. 'should' → logprob: -7.752305030822754

Token 305: ' lead' (ID: 4124)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.14127643406391144
    2. ' fail' → logprob: -2.1412763595581055
    3. '                   ' → logprob: -5.1412763595581055
    4. 'return' → logprob: -6.2662763595581055
    5. ' return' → logprob: -6.5162763595581055
    6. 'pass' → logprob: -6.8912763595581055
    7. ' be' → logprob: -7.2662763595581055
    8. 'be' → logprob: -7.3912763595581055
    9. ' lead' → logprob: -7.6412763595581055
    10. '               ' → logprob: -7.6412763595581055

Token 306: ' us' (ID: 765)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22638030350208282
    2. ' to' → logprob: -1.7263803482055664
    3. '                   ' → logprob: -3.7263803482055664
    4. '                       ' → logprob: -7.726380348205566
    5. '                     ' → logprob: -10.601380348205566
    6. 'c' → logprob: -10.601380348205566
    7. '```' → logprob: -10.726380348205566
    8. '                    ' → logprob: -10.976380348205566
    9. ' ' → logprob: -11.476380348205566
    10. '               ' → logprob: -11.476380348205566

Token 307: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1202508956193924
    2. ' to' → logprob: -2.370250940322876
    3. '                   ' → logprob: -3.995250940322876
    4. '                       ' → logprob: -6.745250701904297
    5. '```' → logprob: -9.495250701904297
    6. 'not' → logprob: -9.620250701904297
    7. '               ' → logprob: -10.495250701904297
    8. '                     ' → logprob: -10.995250701904297
    9. '                    ' → logprob: -11.495250701904297
    10. ' not' → logprob: -11.495250701904297

Token 308: ' failure' (ID: 14090)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.020228618755936623
    2. ' False' → logprob: -4.020228385925293
    3. 'True' → logprob: -6.395228385925293
    4. 'lose' → logprob: -9.020228385925293
    5. ' True' → logprob: -9.645228385925293
    6. ' defeat' → logprob: -9.645228385925293
    7. 'loss' → logprob: -9.770228385925293
    8. 'win' → logprob: -10.395228385925293
    9. ' loss' → logprob: -10.395228385925293
    10. ' lose' → logprob: -11.645228385925293

Token 309: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005952148232609034
    2. '<|end|>' → logprob: -5.75595235824585
    3. ' if' → logprob: -6.50595235824585
    4. ' for' → logprob: -7.88095235824585
    5. ' to' → logprob: -8.755951881408691
    6. 'if' → logprob: -8.880951881408691
    7. 'for' → logprob: -8.880951881408691
    8. '               ' → logprob: -9.380951881408691
    9. 'to' → logprob: -9.505951881408691
    10. '                       ' → logprob: -10.005951881408691

Token 310: ' lose' (ID: 12577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9318290948867798
    2. 'fail' → logprob: -1.4318290948867798
    3. '                       ' → logprob: -1.9318290948867798
    4. ' return' → logprob: -2.8068289756774902
    5. 'break' → logprob: -2.8068289756774902
    6. '                   ' → logprob: -3.0568289756774902
    7. ' fail' → logprob: -3.6818289756774902
    8. 'prevent' → logprob: -5.18182897567749
    9. 'not' → logprob: -5.55682897567749
    10. ' break' → logprob: -5.68182897567749

Token 311: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001207615016028285
    2. '<|end|>' → logprob: -7.1262078285217285
    3. ' if' → logprob: -9.25120735168457
    4. '               ' → logprob: -9.75120735168457
    5. ' for' → logprob: -10.12620735168457
    6. 'if' → logprob: -10.37620735168457
    7. 'for' → logprob: -10.37620735168457
    8. '                       ' → logprob: -10.75120735168457
    9. '<|end|>' → logprob: -11.00120735168457
    10. ' to' → logprob: -11.00120735168457

Token 312: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00025323365116491914
    2. ' if' → logprob: -9.000253677368164
    3. '<|end|>' → logprob: -10.125253677368164
    4. 'if' → logprob: -10.250253677368164
    5. '               ' → logprob: -10.750253677368164
    6. '
' → logprob: -11.750253677368164
    7. '           ' → logprob: -12.000253677368164
    8. '                       ' → logprob: -12.125253677368164
    9. '```' → logprob: -13.000253677368164
    10. '   ' → logprob: -13.000253677368164

Token 313: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024539116770029068
    2. '                   ' → logprob: -4.149538993835449
    3. ' if' → logprob: -4.774538993835449
    4. '               ' → logprob: -11.39953899383545
    5. '   ' → logprob: -11.77453899383545
    6. '           ' → logprob: -12.39953899383545
    7. 'result' → logprob: -13.89953899383545
    8. ' ' → logprob: -14.27453899383545
    9. '       ' → logprob: -14.27453899383545
    10. '                       ' → logprob: -14.27453899383545

Token 314: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6467608213424683
    2. ' not' → logprob: -0.7717608213424683
    3. 'dfs' → logprob: -4.521760940551758
    4. ' dfs' → logprob: -5.771760940551758
    5. '(not' → logprob: -10.646760940551758
    6. '   ' → logprob: -10.959260940551758
    7. '!' → logprob: -11.959260940551758
    8. '	not' → logprob: -12.334260940551758
    9. '
' → logprob: -12.646760940551758
    10. ' ' → logprob: -12.646760940551758

Token 315: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.014165159314870834
    2. ' dfs' → logprob: -4.264164924621582
    3. '
' → logprob: -14.514164924621582
    4. '   ' → logprob: -14.889164924621582
    5. 'df' → logprob: -14.889164924621582
    6. ' ' → logprob: -15.264164924621582
    7. '  ' → logprob: -16.8891658782959
    8. 'DFS' → logprob: -17.3891658782959
    9. 'dfa' → logprob: -17.7641658782959
    10. '

' → logprob: -18.1391658782959

Token 316: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0006046222406439483
    2. '(s' → logprob: -7.500604629516602
    3. '(' → logprob: -10.000604629516602
    4. ' (' → logprob: -12.250604629516602
    5. 'f' → logprob: -14.000604629516602
    6. '(
' → logprob: -15.500604629516602
    7. '   ' → logprob: -15.875604629516602
    8. 's' → logprob: -16.7506046295166
    9. '(second' → logprob: -17.0006046295166
    10. ' ' → logprob: -17.1256046295166

Token 317: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.07110657542943954
    2. '(f' → logprob: -2.6961066722869873
    3. '(s' → logprob: -7.446106433868408
    4. '(cards' → logprob: -9.321106910705566
    5. '_s' → logprob: -9.571106910705566
    6. '_f' → logprob: -9.571106910705566
    7. '(first' → logprob: -9.946106910705566
    8. 'Cards' → logprob: -10.321106910705566
    9. '(c' → logprob: -10.946106910705566
    10. 'f' → logprob: -10.946106910705566

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013972028158605099
    2. ' ,' → logprob: -4.51397180557251
    3. '-' → logprob: -7.13897180557251
    4. ' s' → logprob: -7.26397180557251
    5. 's' → logprob: -7.63897180557251
    6. ' -' → logprob: -7.76397180557251
    7. ',s' → logprob: -7.88897180557251
    8. '(s' → logprob: -10.138972282409668
    9. ',
' → logprob: -11.138972282409668
    10. ',{' → logprob: -11.388972282409668

Token 319: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5235632061958313
    2. 's' → logprob: -0.8985632061958313
    3. '{s' → logprob: -9.148563385009766
    4. ' ' → logprob: -9.398563385009766
    5. '   ' → logprob: -9.523563385009766
    6. '                   ' → logprob: -10.398563385009766
    7. '  ' → logprob: -10.648563385009766
    8. '
' → logprob: -10.648563385009766
    9. '               ' → logprob: -11.523563385009766
    10. '           ' → logprob: -11.648563385009766

Token 320: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0024521113373339176
    2. '_s' → logprob: -7.1274518966674805
    3. 's' → logprob: -7.2524518966674805
    4. '-' → logprob: -7.7524518966674805
    5. '{' → logprob: -9.50245189666748
    6. ' -' → logprob: -9.50245189666748
    7. ' s' → logprob: -9.50245189666748
    8. '{s' → logprob: -9.75245189666748
    9. 'cards' → logprob: -10.00245189666748
    10. '_' → logprob: -10.62745189666748

Token 321: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014174087904393673
    2. '-' → logprob: -4.264173984527588
    3. ' ' → logprob: -11.889174461364746
    4. ' ' → logprob: -13.514174461364746
    5. ' {' → logprob: -13.889174461364746
    6. '-{' → logprob: -14.389174461364746
    7. '{' → logprob: -15.264174461364746
    8. '-remove' → logprob: -15.889174461364746
    9. '	' → logprob: -16.26417350769043
    10. ',' → logprob: -16.38917350769043

Token 322: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0031827057246118784
    2. ' {' → logprob: -5.753182888031006
    3. '{s' → logprob: -12.253182411193848
    4. '{x' → logprob: -16.253183364868164
    5. '{return' → logprob: -17.253183364868164
    6. '{i' → logprob: -17.503183364868164
    7. ' ' → logprob: -17.878183364868164
    8. '{name' → logprob: -18.003183364868164
    9. '{sub' → logprob: -18.128183364868164
    10. '{id' → logprob: -18.628183364868164

Token 323: 'c' (ID: 66)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -3.547789674485102e-05
    2. ' {' → logprob: -10.250035285949707
    3. '{x' → logprob: -19.250036239624023
    4. '{s' → logprob: -19.250036239624023
    5. '[c' → logprob: -20.000036239624023
    6. '<c' → logprob: -20.125036239624023
    7. '{
' → logprob: -20.125036239624023
    8. '   ' → logprob: -20.375036239624023
    9. 'c' → logprob: -20.375036239624023
    10. '(c' → logprob: -20.500036239624023

Token 324: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.315100759267807
    2. ',' → logprob: -1.3151007890701294
    3. ' },' → logprob: -7.06510066986084
    4. '),' → logprob: -7.56510066986084
    5. ' ,' → logprob: -8.31510066986084
    6. '                   ' → logprob: -9.31510066986084
    7. '}' → logprob: -9.69010066986084
    8. '               ' → logprob: -10.81510066986084
    9. '           ' → logprob: -11.81510066986084
    10. '],' → logprob: -12.19010066986084

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.625097274780273
    3. '1' → logprob: -10.500097274780273
    4. '   ' → logprob: -13.250097274780273
    5. '
' → logprob: -15.250097274780273
    6. '```' → logprob: -15.750097274780273
    7. '               ' → logprob: -16.500097274780273
    8. 'turn' → logprob: -16.750097274780273
    9. '           ' → logprob: -16.750097274780273
    10. '                   ' → logprob: -16.875097274780273

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. '1' → logprob: -11.750016212463379
    3. ' ' → logprob: -12.000016212463379
    4. '   ' → logprob: -14.000016212463379
    5. '
' → logprob: -15.375016212463379
    6. '```' → logprob: -15.437516212463379
    7. '           ' → logprob: -16.562515258789062
    8. '2' → logprob: -16.625015258789062
    9. '``' → logprob: -16.750015258789062
    10. '  ' → logprob: -16.750015258789062

Token 327: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20195001363754272
    2. '):' → logprob: -1.7019500732421875
    3. '                   ' → logprob: -7.9519500732421875
    4. '):
' → logprob: -9.701950073242188
    5. '):

' → logprob: -9.826950073242188
    6. ')' → logprob: -9.951950073242188
    7. '                       ' → logprob: -11.326950073242188
    8. ' ):
' → logprob: -12.451950073242188
    9. ':' → logprob: -13.076950073242188
    10. '               ' → logprob: -14.076950073242188

Token 328: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0025032442063093185
    2. ':
' → logprob: -6.627503395080566
    3. '                   ' → logprob: -7.877503395080566
    4. '):
' → logprob: -7.877503395080566
    5. ':' → logprob: -9.252503395080566
    6. '<|end|>' → logprob: -9.377503395080566
    7. '```' → logprob: -9.877503395080566
    8. '                      ' → logprob: -10.252503395080566
    9. '
' → logprob: -10.252503395080566
    10. '                        
' → logprob: -10.502503395080566

Token 329: ' table' (ID: 3293)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35494619607925415
    2. 'table' (adapté à ' table') → logprob: -1.3549461364746094
    3. ' table' → logprob: -3.2299461364746094
    4. '                   ' → logprob: -7.479946136474609
    5. '   ' → logprob: -7.854946136474609
    6. '                           ' → logprob: -9.47994613647461
    7. '               ' → logprob: -9.72994613647461
    8. ' ' → logprob: -10.10494613647461
    9. '	table' → logprob: -10.10494613647461
    10. '       ' → logprob: -10.35494613647461

Token 330: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.007210098672658205
    2. '.add' → logprob: -5.0072102546691895
    3. '.' → logprob: -7.8822102546691895
    4. ' .' → logprob: -10.257209777832031
    5. '           ' → logprob: -10.257209777832031
    6. '                   ' → logprob: -10.882209777832031
    7. '               ' → logprob: -11.382209777832031
    8. '                       ' → logprob: -12.007209777832031
    9. '   ' → logprob: -12.382209777832031
    10. 'remove' → logprob: -12.882209777832031

Token 331: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.500001907348633
    3. 'c' → logprob: -14.750001907348633
    4. '(' → logprob: -15.250001907348633
    5. ' c' → logprob: -20.375001907348633
    6. '(
' → logprob: -20.500001907348633
    7. '	c' → logprob: -20.750001907348633
    8. ' ' → logprob: -21.375001907348633
    9. ')c' → logprob: -21.625001907348633
    10. ')' → logprob: -21.750001907348633

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8258839845657349
    2. '                   ' → logprob: -1.3258839845657349
    3. '                       ' → logprob: -1.4508839845657349
    4. ')
' → logprob: -3.2008838653564453
    5. '<|end|>' → logprob: -4.075883865356445
    6. ')c' → logprob: -6.700883865356445
    7. '               ' → logprob: -7.325883865356445
    8. '				' → logprob: -7.950883865356445
    9. '           ' → logprob: -8.450883865356445
    10. '					' → logprob: -8.450883865356445

Token 333: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003288820618763566
    2. '                   ' → logprob: -6.628288745880127
    3. '					' → logprob: -7.378288745880127
    4. '<|end|>' → logprob: -7.628288745880127
    5. '	               ' → logprob: -8.753289222717285
    6. '```' → logprob: -9.128289222717285
    7. '		               ' → logprob: -9.253289222717285
    8. '	                   ' → logprob: -9.253289222717285
    9. '               ' → logprob: -9.378289222717285
    10. '                        
' → logprob: -9.503289222717285

Token 334: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.020394377410411835
    2. '                       ' → logprob: -4.020394325256348
    3. ' memo' → logprob: -6.145394325256348
    4. 'm' → logprob: -10.645394325256348
    5. '                   ' → logprob: -10.645394325256348
    6. '                           ' → logprob: -10.770394325256348
    7. '```' → logprob: -12.020394325256348
    8. 'return' → logprob: -12.270394325256348
    9. '               ' → logprob: -12.270394325256348
    10. 'mem' → logprob: -12.770394325256348

Token 335: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.320199877838604e-07
    2. '[user' → logprob: -15.25
    3. '[' → logprob: -15.75
    4. 'key' → logprob: -17.125
    5. '	key' → logprob: -18.25
    6. '[
' → logprob: -18.5
    7. '_key' → logprob: -18.5
    8. '```' → logprob: -18.875
    9. '[token' → logprob: -19.0
    10. ' key' → logprob: -19.125

Token 336: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13190871477127075
    2. ']' → logprob: -2.631908655166626
    3. ' =' → logprob: -3.131908655166626
    4. ']=' → logprob: -4.881908893585205
    5. '                       ' → logprob: -8.381908416748047
    6. '                   ' → logprob: -9.756908416748047
    7. ')' → logprob: -10.006908416748047
    8. '[' → logprob: -10.381908416748047
    9. ')=' → logprob: -11.256908416748047
    10. '                           ' → logprob: -11.631908416748047

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198941916227341
    2. ' =' → logprob: -2.8119893074035645
    3. ']' → logprob: -12.311989784240723
    4. '[' → logprob: -12.436989784240723
    5. '                       ' → logprob: -12.436989784240723
    6. ']=' → logprob: -12.561989784240723
    7. '                   ' → logprob: -13.561989784240723
    8. '=False' → logprob: -13.936989784240723
    9. '           ' → logprob: -14.186989784240723
    10. '               ' → logprob: -14.311989784240723

Token 338: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00021366903092712164
    2. ' False' → logprob: -8.500213623046875
    3. 'True' → logprob: -11.500213623046875
    4. '(False' → logprob: -18.125213623046875
    5. ' True' → logprob: -19.125213623046875
    6. '=False' → logprob: -19.500213623046875
    7. '_false' → logprob: -20.125213623046875
    8. '.False' → logprob: -20.625213623046875
    9. 'false' → logprob: -20.750213623046875
    10. '   ' → logprob: -23.125213623046875

Token 339: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00024192029377445579
    2. '					' → logprob: -9.500242233276367
    3. '               ' → logprob: -9.750242233276367
    4. '<|end|>' → logprob: -10.000242233276367
    5. '                   ' → logprob: -10.875242233276367
    6. '		               ' → logprob: -11.375242233276367
    7. '				       ' → logprob: -12.125242233276367
    8. '	                   ' → logprob: -12.375242233276367
    9. '```' → logprob: -12.500242233276367
    10. '			           ' → logprob: -12.500242233276367

Token 340: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019308974733576179
    2. '					' → logprob: -6.6269307136535645
    3. '                   ' → logprob: -9.001931190490723
    4. '               ' → logprob: -9.251931190490723
    5. '		               ' → logprob: -9.626931190490723
    6. '	                   ' → logprob: -10.001931190490723
    7. '```' → logprob: -10.001931190490723
    8. '<|end|>' → logprob: -10.001931190490723
    9. '				       ' → logprob: -10.501931190490723
    10. '	               ' → logprob: -10.626931190490723

Token 341: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2816638946533203
    2. 'return' (adapté à ' return') → logprob: -1.6566638946533203
    3. '                       ' → logprob: -2.9066638946533203
    4. '                        ' → logprob: -11.78166389465332
    5. '                        
' → logprob: -11.90666389465332
    6. '                   ' → logprob: -12.40666389465332
    7. '```' → logprob: -12.40666389465332
    8. '                           ' → logprob: -12.78166389465332
    9. '               ' → logprob: -13.03166389465332
    10. ' ' → logprob: -13.15666389465332

Token 342: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.3902033970225602e-05
    2. ' False' → logprob: -11.500014305114746
    3. 'True' → logprob: -12.500014305114746
    4. '(False' → logprob: -19.00001335144043
    5. 'false' → logprob: -22.25001335144043
    6. '_false' → logprob: -23.37501335144043
    7. ' True' → logprob: -23.62501335144043
    8. '=False' → logprob: -23.87501335144043
    9. '.False' → logprob: -23.87501335144043
    10. 'None' → logprob: -24.87501335144043

Token 343: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012030149810016155
    2. '				' → logprob: -5.012030124664307
    3. '		           ' → logprob: -6.762030124664307
    4. '	table' → logprob: -7.137030124664307
    5. '           ' → logprob: -7.262030124664307
    6. '			       ' → logprob: -7.512030124664307
    7. '```' → logprob: -7.762030124664307
    8. '	               ' → logprob: -8.137030601501465
    9. '               ' → logprob: -8.137030601501465
    10. 'table' → logprob: -8.387030601501465

Token 344: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003385614836588502
    2. '           ' → logprob: -8.500338554382324
    3. '               ' → logprob: -9.125338554382324
    4. '```' → logprob: -11.875338554382324
    5. 'table' → logprob: -12.125338554382324
    6. '                       ' → logprob: -12.500338554382324
    7. '       ' → logprob: -12.500338554382324
    8. '   ' → logprob: -13.250338554382324
    9. '				' → logprob: -13.875338554382324
    10. '		           ' → logprob: -14.125338554382324

Token 345: ' table' (ID: 3293)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12235564738512039
    2. 'table' (adapté à ' table') → logprob: -2.4973556995391846
    3. ' table' → logprob: -3.7473556995391846
    4. '	table' → logprob: -5.3723554611206055
    5. '				' → logprob: -5.4973554611206055
    6. '   ' → logprob: -8.747355461120605
    7. '		           ' → logprob: -9.372355461120605
    8. '           ' → logprob: -9.497355461120605
    9. '               ' → logprob: -9.747355461120605
    10. '	               ' → logprob: -10.122355461120605

Token 346: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -3.690834273584187e-05
    2. 'remove' → logprob: -10.37503719329834
    3. '_remove' → logprob: -12.75003719329834
    4. '.' → logprob: -13.75003719329834
    5. '                   ' → logprob: -14.25003719329834
    6. '               ' → logprob: -15.00003719329834
    7. '           ' → logprob: -15.50003719329834
    8. ' .' → logprob: -16.000036239624023
    9. '	remove' → logprob: -16.000036239624023
    10. '.add' → logprob: -16.625036239624023

Token 347: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.779520092299208e-05
    2. 'c' → logprob: -9.500078201293945
    3. '(' → logprob: -12.750078201293945
    4. ' (' → logprob: -17.375078201293945
    5. 's' → logprob: -18.375078201293945
    6. '(
' → logprob: -18.750078201293945
    7. '	c' → logprob: -20.375078201293945
    8. ' c' → logprob: -20.625078201293945
    9. '[c' → logprob: -20.625078201293945
    10. ' ' → logprob: -21.500078201293945

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03365953266620636
    2. ')
' → logprob: -3.6586594581604004
    3. '               ' → logprob: -5.0336594581604
    4. '           ' → logprob: -7.9086594581604
    5. '                   ' → logprob: -8.533659934997559
    6. '       ' → logprob: -9.658659934997559
    7. ')c' → logprob: -10.033659934997559
    8. '<|end|>' → logprob: -10.158659934997559
    9. 'c' → logprob: -10.533659934997559
    10. '                       ' → logprob: -11.033659934997559

Token 349: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009505256894044578
    2. '           ' → logprob: -7.125950336456299
    3. '       ' → logprob: -9.375950813293457
    4. 'memo' → logprob: -10.125950813293457
    5. '```' → logprob: -11.375950813293457
    6. '                   ' → logprob: -12.375950813293457
    7. 'm' → logprob: -13.250950813293457
    8. '   ' → logprob: -13.375950813293457
    9. '              ' → logprob: -14.375950813293457
    10. '			' → logprob: -14.500950813293457

Token 350: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.1317417472600937
    2. '               ' → logprob: -2.131741762161255
    3. '       ' → logprob: -6.381741523742676
    4. ' memo' → logprob: -6.506741523742676
    5. '           ' → logprob: -7.006741523742676
    6. '   ' → logprob: -7.381741523742676
    7. '                   ' → logprob: -9.756741523742676
    8. 'mem' → logprob: -11.506741523742676
    9. '
' → logprob: -12.506741523742676
    10. '             ' → logprob: -13.006741523742676

Token 351: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. '[token' → logprob: -17.5
    3. '[' → logprob: -17.75
    4. '_key' → logprob: -18.0
    5. '[user' → logprob: -19.0
    6. 'key' → logprob: -19.375
    7. '[
' → logprob: -19.5
    8. '```' → logprob: -20.375
    9. '	key' → logprob: -20.5
    10. ' [' → logprob: -21.625

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.264344722032547
    2. '=' → logprob: -1.6393446922302246
    3. ' =' → logprob: -4.014344692230225
    4. ')' → logprob: -4.264344692230225
    5. ']=' → logprob: -5.264344692230225
    6. '   ' → logprob: -8.264345169067383
    7. '[key' → logprob: -8.889345169067383
    8. '           ' → logprob: -9.139345169067383
    9. ')=' → logprob: -9.139345169067383
    10. '               ' → logprob: -9.514345169067383

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05530547350645065
    2. ' =' → logprob: -2.9303054809570312
    3. '[' → logprob: -7.930305480957031
    4. '           ' → logprob: -10.680305480957031
    5. '   ' → logprob: -11.305305480957031
    6. '               ' → logprob: -11.555305480957031
    7. ']' → logprob: -12.430305480957031
    8. '       ' → logprob: -13.055305480957031
    9. '                   ' → logprob: -13.055305480957031
    10. '[key' → logprob: -13.180305480957031

Token 354: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005532711511477828
    2. ' True' → logprob: -7.500553131103516
    3. '(True' → logprob: -16.250553131103516
    4. '=True' → logprob: -16.375553131103516
    5. 'False' → logprob: -18.375553131103516
    6. 'Tr' → logprob: -18.750553131103516
    7. '.True' → logprob: -20.000553131103516
    8. '
' → logprob: -20.875553131103516
    9. 'true' → logprob: -21.500553131103516
    10. ' Tru' → logprob: -22.125553131103516

Token 355: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010300694266334176
    2. '                       ' → logprob: -7.251029968261719
    3. '<|end|>' → logprob: -8.876029968261719
    4. '		       ' → logprob: -9.751029968261719
    5. '       ' → logprob: -10.001029968261719
    6. 'return' → logprob: -10.251029968261719
    7. '           ' → logprob: -10.751029968261719
    8. ' return' → logprob: -12.626029968261719
    9. '	       ' → logprob: -13.001029968261719
    10. '			' → logprob: -13.001029968261719

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007320931763388216
    2. '                       ' → logprob: -7.750731945037842
    3. 'return' → logprob: -8.375732421875
    4. '           ' → logprob: -10.625732421875
    5. '		       ' → logprob: -10.875732421875
    6. ' return' → logprob: -11.625732421875
    7. '       ' → logprob: -11.750732421875
    8. '                   ' → logprob: -12.750732421875
    9. '	           ' → logprob: -13.500732421875
    10. '<|end|>' → logprob: -13.500732421875

Token 357: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011167021468281746
    2. ' return' → logprob: -4.511167049407959
    3. '               ' → logprob: -9.2611665725708
    4. '       ' → logprob: -10.7611665725708
    5. '           ' → logprob: -13.1361665725708
    6. '   ' → logprob: -14.5111665725708
    7. '	return' → logprob: -15.7611665725708
    8. '                   ' → logprob: -16.386167526245117
    9. ' ' → logprob: -16.636167526245117
    10. '                       ' → logprob: -18.261167526245117

Token 358: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. '(True' → logprob: -18.375036239624023
    4. 'False' → logprob: -19.000036239624023
    5. 'true' → logprob: -21.125036239624023
    6. 'memo' → logprob: -22.000036239624023
    7. '=True' → logprob: -24.375036239624023
    8. 'TRUE' → logprob: -24.500036239624023
    9. '
' → logprob: -24.500036239624023
    10. 'Tr' → logprob: -24.625036239624023

Token 359: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007952123996801674
    2. '       ' → logprob: -7.750795364379883
    3. 'else' → logprob: -8.250795364379883
    4. '               ' → logprob: -9.375795364379883
    5. '
' → logprob: -11.625795364379883
    6. ' else' → logprob: -12.500795364379883
    7. '   ' → logprob: -12.750795364379883
    8. 'return' → logprob: -14.125795364379883
    9. 'import' → logprob: -14.750795364379883
    10. '          ' → logprob: -14.875795364379883

Token 360: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.477688193321228
    2. '           ' → logprob: -0.977688193321228
    3. '               ' → logprob: -6.102688312530518
    4. '   ' → logprob: -6.852688312530518
    5. 'return' → logprob: -8.47768783569336
    6. 'else' → logprob: -10.35268783569336
    7. '<|end|>' → logprob: -10.60268783569336
    8. '    
' → logprob: -12.22768783569336
    9. '```' → logprob: -12.35268783569336
    10. '        
' → logprob: -12.35268783569336

Token 361: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10590501129627228
    2. 'else' (adapté à ' else') → logprob: -2.355905055999756
    3. '           ' → logprob: -6.230905055999756
    4. '               ' → logprob: -6.230905055999756
    5. ' else' → logprob: -6.730905055999756
    6. '   ' → logprob: -7.605905055999756
    7. 'return' → logprob: -11.230904579162598
    8. '
' → logprob: -11.855904579162598
    9. '<|end|>' → logprob: -11.855904579162598
    10. '	' → logprob: -11.980904579162598

Token 362: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06065893545746803
    2. ':' → logprob: -3.5606589317321777
    3. ':
' → logprob: -3.8106589317321777
    4. '           ' → logprob: -4.810658931732178
    5. '       ' → logprob: -9.435659408569336
    6. ':return' → logprob: -10.810659408569336
    7. 'return' → logprob: -11.185659408569336
    8. '```' → logprob: -11.935659408569336
    9. ' return' → logprob: -12.310659408569336
    10. '):
' → logprob: -12.310659408569336

Token 363: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011953481007367373
    2. 'res' → logprob: -7.376195430755615
    3. '           ' → logprob: -7.876195430755615
    4. '       ' → logprob: -9.001194953918457
    5. 'return' → logprob: -10.126194953918457
    6. ' res' → logprob: -11.376194953918457
    7. '   ' → logprob: -11.626194953918457
    8. ' return' → logprob: -13.126194953918457
    9. '                   ' → logprob: -13.376194953918457
    10. '```' → logprob: -13.876194953918457

Token 364: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0001334559783572331
    2. 'return' → logprob: -9.250133514404297
    3. '               ' → logprob: -10.250133514404297
    4. ' res' → logprob: -13.250133514404297
    5. '           ' → logprob: -17.250133514404297
    6. '                   ' → logprob: -17.375133514404297
    7. '                
' → logprob: -17.750133514404297
    8. '
' → logprob: -17.875133514404297
    9. '   ' → logprob: -18.500133514404297
    10. ' return' → logprob: -18.625133514404297

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '=d' → logprob: -17.27975082397461
    4. '=sys' → logprob: -18.15475082397461
    5. '＝' → logprob: -19.27975082397461
    6. '=
' → logprob: -19.77975082397461
    7. '=res' → logprob: -19.90475082397461
    8. ' ' → logprob: -20.15475082397461
    9. '   ' → logprob: -20.27975082397461
    10. '=s' → logprob: -20.27975082397461

Token 366: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.038056179881095886
    2. ' dfs' → logprob: -3.2880561351776123
    3. 'df' → logprob: -11.413056373596191
    4. 'd' → logprob: -13.163056373596191
    5. '   ' → logprob: -14.913056373596191
    6. 'dfa' → logprob: -15.413056373596191
    7. 'solve' → logprob: -15.413056373596191
    8. 'not' → logprob: -16.163055419921875
    9. ' ' → logprob: -16.163055419921875
    10. '               ' → logprob: -16.288055419921875

Token 367: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.961759259458631e-06
    2. '(s' → logprob: -12.625004768371582
    3. '(' → logprob: -13.375004768371582
    4. ' (' → logprob: -17.8750057220459
    5. '(first' → logprob: -18.1250057220459
    6. '(
' → logprob: -18.3750057220459
    7. '(second' → logprob: -19.3750057220459
    8. 'f' → logprob: -20.5000057220459
    9. '(d' → logprob: -21.0000057220459
    10. '(c' → logprob: -21.6250057220459

Token 368: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.8789383830153383e-05
    2. '(f' → logprob: -11.750019073486328
    3. '_codes' → logprob: -11.750019073486328
    4. '_chars' → logprob: -13.750019073486328
    5. '(cards' → logprob: -14.375019073486328
    6. 'Cards' → logprob: -15.125019073486328
    7. 'cards' → logprob: -15.375019073486328
    8. '_' → logprob: -15.625019073486328
    9. '_args' → logprob: -15.875019073486328
    10. '_can' → logprob: -16.125019073486328

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',s' → logprob: -11.62501335144043
    3. ' ,' → logprob: -12.37501335144043
    4. ',
' → logprob: -16.00001335144043
    5. '   ' → logprob: -17.25001335144043
    6. '           ' → logprob: -17.37501335144043
    7. '               ' → logprob: -18.37501335144043
    8. ',f' → logprob: -18.62501335144043
    9. 's' → logprob: -19.00001335144043
    10. ',

' → logprob: -19.50001335144043

Token 370: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048592254519462585
    2. ' s' → logprob: -3.0485923290252686
    3. '   ' → logprob: -13.423592567443848
    4. '           ' → logprob: -13.548592567443848
    5. ' ' → logprob: -13.923592567443848
    6. '  ' → logprob: -15.173592567443848
    7. '       ' → logprob: -15.548592567443848
    8. '               ' → logprob: -16.04859161376953
    9. ',' → logprob: -16.17359161376953
    10. '    ' → logprob: -16.17359161376953

Token 371: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.003931879531592131
    2. ',' → logprob: -6.753931999206543
    3. '   ' → logprob: -7.128931999206543
    4. 's' → logprob: -7.628931999206543
    5. ' s' → logprob: -8.253931999206543
    6. ' ' → logprob: -8.878931999206543
    7. 'Cards' → logprob: -8.878931999206543
    8. '-' → logprob: -8.878931999206543
    9. '_,' → logprob: -9.503931999206543
    10. '_' → logprob: -9.503931999206543

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012535012501757592
    2. ' ,' → logprob: -9.00012493133545
    3. '               ' → logprob: -13.87512493133545
    4. '           ' → logprob: -15.00012493133545
    5. ',
' → logprob: -15.12512493133545
    6. '                   ' → logprob: -16.500125885009766
    7. '   ' → logprob: -16.500125885009766
    8. '       ' → logprob: -16.500125885009766
    9. '              ' → logprob: -17.750125885009766
    10. '```' → logprob: -17.750125885009766

Token 373: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023607931507285684
    2. ' ' → logprob: -8.375236511230469
    3. '               ' → logprob: -12.875236511230469
    4. '           ' → logprob: -13.750236511230469
    5. '   ' → logprob: -14.125236511230469
    6. 'turn' → logprob: -14.750236511230469
    7. '1' → logprob: -15.125236511230469
    8. '(' → logprob: -15.625236511230469
    9. '                   ' → logprob: -16.00023651123047
    10. '       ' → logprob: -16.37523651123047

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.875005722045898
    5. 'turn' → logprob: -15.750005722045898
    6. '           ' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.7500057220459
    8. '(' → logprob: -17.8750057220459
    9. '               ' → logprob: -18.5625057220459
    10. ' turn' → logprob: -18.7500057220459

Token 375: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03898793086409569
    2. '               ' → logprob: -3.288987874984741
    3. ')' → logprob: -7.16398811340332
    4. ')
' → logprob: -9.16398811340332
    5. '           ' → logprob: -9.78898811340332
    6. '       ' → logprob: -11.78898811340332
    7. '              ' → logprob: -13.53898811340332
    8. '                   ' → logprob: -14.16398811340332
    9. ')

' → logprob: -14.78898811340332
    10. '   ' → logprob: -15.03898811340332

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014561474381480366
    2. '
' → logprob: -10.12514591217041
    3. '       ' → logprob: -10.12514591217041
    4. '```' → logprob: -10.50014591217041
    5. '           ' → logprob: -10.62514591217041
    6. '                
' → logprob: -12.25014591217041
    7. '              ' → logprob: -13.25014591217041
    8. '                ' → logprob: -13.62514591217041
    9. '			' → logprob: -14.00014591217041
    10. '
' → logprob: -14.25014591217041

Token 377: ' memo' (ID: 46393)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25459936261177063
    2. 'memo' (adapté à ' memo') → logprob: -1.5045993328094482
    3. ' memo' → logprob: -6.004599571228027
    4. '       ' → logprob: -9.254599571228027
    5. '           ' → logprob: -9.629599571228027
    6. '   ' → logprob: -11.129599571228027
    7. 'mem' → logprob: -11.379599571228027
    8. '              ' → logprob: -12.754599571228027
    9. 'memory' → logprob: -12.879599571228027
    10. '                   ' → logprob: -13.504599571228027

Token 378: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. '[user' → logprob: -17.625
    3. '[' → logprob: -17.875
    4. '[token' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. 'key' → logprob: -20.625
    7. '[index' → logprob: -21.0
    8. '[
' → logprob: -21.25
    9. '_key' → logprob: -21.375
    10. '[word' → logprob: -22.125

Token 379: ']' (ID: 60)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.000919200771022588
    2. '[' → logprob: -7.250919342041016
    3. ']' → logprob: -9.125919342041016
    4. '[c' → logprob: -10.500919342041016
    5. '[
' → logprob: -10.750919342041016
    6. '[user' → logprob: -11.125919342041016
    7. 'key' → logprob: -11.875919342041016
    8. '=' → logprob: -12.000919342041016
    9. ']=' → logprob: -12.125919342041016
    10. '][' → logprob: -12.625919342041016

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019289902411401272
    2. ' =' → logprob: -6.251928806304932
    3. ']=' → logprob: -16.251928329467773
    4. ']' → logprob: -16.251928329467773
    5. '   ' → logprob: -16.501928329467773
    6. '[' → logprob: -16.751928329467773
    7. '=
' → logprob: -17.501928329467773
    8. ')' → logprob: -17.876928329467773
    9. ')=' → logprob: -18.001928329467773
    10. '       ' → logprob: -18.626928329467773

Token 381: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1002068892121315
    2. ' res' → logprob: -2.3502068519592285
    3. '(res' → logprob: -16.72520637512207
    4. '$res' → logprob: -16.72520637512207
    5. '=res' → logprob: -17.47520637512207
    6. '	res' → logprob: -17.47520637512207
    7. ',res' → logprob: -18.47520637512207
    8. 'r' → logprob: -18.97520637512207
    9. '   ' → logprob: -18.97520637512207
    10. ' ' → logprob: -19.22520637512207

Token 382: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001003155019134283
    2. '       ' → logprob: -7.626003265380859
    3. 'return' → logprob: -8.12600326538086
    4. ' return' → logprob: -8.87600326538086
    5. '
' → logprob: -10.12600326538086
    6. '			' → logprob: -11.50100326538086
    7. '           ' → logprob: -12.12600326538086
    8. '<|end|>' → logprob: -12.25100326538086
    9. '	' → logprob: -12.62600326538086
    10. '		       ' → logprob: -12.87600326538086

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012072573881596327
    2. 'return' → logprob: -7.00120735168457
    3. ' return' → logprob: -8.87620735168457
    4. '       ' → logprob: -9.12620735168457
    5. '```' → logprob: -10.87620735168457
    6. '           ' → logprob: -11.87620735168457
    7. '   ' → logprob: -12.25120735168457
    8. '			' → logprob: -12.87620735168457
    9. '
' → logprob: -13.25120735168457
    10. '	return' → logprob: -13.50120735168457

Token 384: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3135157823562622
    2. ' return' → logprob: -1.3135157823562622
    3. '               ' → logprob: -8.313515663146973
    4. '       ' → logprob: -12.188515663146973
    5. '   ' → logprob: -13.313515663146973
    6. '           ' → logprob: -13.438515663146973
    7. ' ' → logprob: -14.813515663146973
    8. '	return' → logprob: -16.18851661682129
    9. 'eturn' → logprob: -16.81351661682129
    10. '                   ' → logprob: -17.06351661682129

Token 385: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -16.0
    3. 'rec' → logprob: -22.25
    4. '(res' → logprob: -23.125
    5. 're' → logprob: -24.125
    6. '	res' → logprob: -24.125
    7. '$res' → logprob: -24.125
    8. 'ress' → logprob: -24.25
    9. '
' → logprob: -24.25
    10. 'resp' → logprob: -25.0

Token 386: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04539051651954651
    2. ')' → logprob: -3.9203906059265137
    3. '    
' → logprob: -4.045390605926514
    4. '<|end|>' → logprob: -6.545390605926514
    5. '' → logprob: -7.170390605926514
    6. 'first' → logprob: -7.420390605926514
    7. 'return' → logprob: -7.420390605926514
    8. ' first' → logprob: -7.795390605926514
    9. ',' → logprob: -7.795390605926514
    10. '  
' → logprob: -7.920390605926514

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7557736039161682
    2. 'first' → logprob: -1.7557735443115234
    3. 'def' → logprob: -2.3807735443115234
    4. 'return' → logprob: -2.6307735443115234
    5. ' first' → logprob: -3.0057735443115234
    6. '```' → logprob: -3.1307735443115234
    7. '<|end|>' → logprob: -3.8807735443115234
    8. '[first' → logprob: -4.255773544311523
    9. 'for' → logprob: -4.505773544311523
    10. '(first' → logprob: -4.505773544311523

Token 388: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007378002628684044
    2. ' return' → logprob: -7.75073766708374
    3. '   ' → logprob: -8.250738143920898
    4. 'result' → logprob: -10.000738143920898
    5. 'if' → logprob: -15.375738143920898
    6. '
' → logprob: -16.2507381439209
    7. 'results' → logprob: -16.6257381439209
    8. '```' → logprob: -16.6257381439209
    9. '    
' → logprob: -16.8757381439209
    10. 'res' → logprob: -17.1257381439209

Token 389: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.009191522374749184
    2. ' dfs' → logprob: -4.759191513061523
    3. 'True' → logprob: -7.759191513061523
    4. 'df' → logprob: -9.259191513061523
    5. ' True' → logprob: -10.884191513061523
    6. 'any' → logprob: -11.634191513061523
    7. 'False' → logprob: -11.634191513061523
    8. 'len' → logprob: -12.759191513061523
    9. 'not' → logprob: -13.009191513061523
    10. 'all' → logprob: -13.134191513061523

Token 390: '(set' (ID: 25904)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.023808348923921585
    2. '(' → logprob: -3.773808240890503
    3. 'first' → logprob: -8.898808479309082
    4. '[first' → logprob: -9.648808479309082
    5. '<|end|>' → logprob: -9.898808479309082
    6. '(
' → logprob: -10.023808479309082
    7. '_first' → logprob: -10.148808479309082
    8. '(second' → logprob: -10.523808479309082
    9. '(f' → logprob: -10.523808479309082
    10. ')' → logprob: -10.523808479309082

Token 391: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -4.723352049040841e-06
    2. 'first' → logprob: -12.375004768371582
    3. '[first' → logprob: -15.500004768371582
    4. '(' → logprob: -16.500003814697266
    5. '(second' → logprob: -18.250003814697266
    6. ' first' → logprob: -18.375003814697266
    7. '(initial' → logprob: -18.875003814697266
    8. '((' → logprob: -19.875003814697266
    9. '([' → logprob: -19.875003814697266
    10. '	first' → logprob: -20.375003814697266

Token 392: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.816093228830141e-06
    2. '(cards' → logprob: -13.37500286102295
    3. '(first' → logprob: -14.75000286102295
    4. 'cards' → logprob: -15.00000286102295
    5. ')' → logprob: -15.75000286102295
    6. 'first' → logprob: -16.000001907348633
    7. 'Cards' → logprob: -16.625001907348633
    8. '_' → logprob: -17.000001907348633
    9. '_codes' → logprob: -17.500001907348633
    10. ' cards' → logprob: -17.875001907348633

Token 393: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034315004013478756
    2. ')' → logprob: -6.00343132019043
    3. '),' → logprob: -7.75343132019043
    4. '<|end|>' → logprob: -8.00343132019043
    5. ' ,' → logprob: -8.87843132019043
    6. ',)' → logprob: -11.00343132019043
    7. '<|end|>' → logprob: -11.75343132019043
    8. '   ' → logprob: -11.75343132019043
    9. '‌,' → logprob: -12.75343132019043
    10. ',None' → logprob: -12.87843132019043

Token 394: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.07891016453504562
    2. ' second' → logprob: -2.5789101123809814
    3. 'set' → logprob: -10.953909873962402
    4. ' set' → logprob: -13.453909873962402
    5. '   ' → logprob: -14.328909873962402
    6. '	second' → logprob: -15.078909873962402
    7. '(second' → logprob: -15.453909873962402
    8. ' ' → logprob: -16.07891082763672
    9. 'Second' → logprob: -16.07891082763672
    10. 's' → logprob: -16.45391082763672

Token 395: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -6.749814019713085e-06
    2. '(cards' → logprob: -12.250006675720215
    3. '(_' → logprob: -14.750006675720215
    4. 'set' → logprob: -15.125006675720215
    5. '(set' → logprob: -15.125006675720215
    6. 'cards' → logprob: -15.125006675720215
    7. '_set' → logprob: -15.375006675720215
    8. '```' → logprob: -16.25000762939453
    9. 'Cards' → logprob: -16.75000762939453
    10. ')_' → logprob: -16.75000762939453

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046592652797698975
    2. ')' → logprob: -5.379659175872803
    3. ' ,' → logprob: -10.254659652709961
    4. '   ' → logprob: -13.629659652709961
    5. '),' → logprob: -14.504659652709961
    6. '(),' → logprob: -14.629659652709961
    7. '))' → logprob: -15.004659652709961
    8. '<|end|>' → logprob: -15.004659652709961
    9. ' )' → logprob: -15.129659652709961
    10. ',)' → logprob: -15.254659652709961

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.7500057220459
    4. '1' → logprob: -19.7500057220459
    5. '۰' → logprob: -19.9375057220459
    6. '```' → logprob: -20.1250057220459
    7. '  ' → logprob: -21.1250057220459
    8. '０' → logprob: -21.1875057220459
    9. '
' → logprob: -21.5000057220459
    10. ')' → logprob: -21.6250057220459

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -20.625
    4. '1' → logprob: -20.75
    5. '   ' → logprob: -21.375
    6. '０' → logprob: -21.4375
    7. '```' → logprob: -21.5
    8. ')' → logprob: -21.75
    9. '
' → logprob: -21.9375
    10. '=' → logprob: -23.0625

Token 399: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.000001907348633
    5. ')return' → logprob: -16.125001907348633
    6. ')}' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.375001907348633
    8. ')}}' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.125001907348633
    10. ')))' → logprob: -18.500001907348633

Token 400: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2313302755355835
    2. 'n' → logprob: -1.9813302755355835
    3. 'first' → logprob: -3.481330394744873
    4. 'print' → logprob: -3.731330394744873
    5. '#' → logprob: -5.231330394744873
    6. 'for' → logprob: -5.231330394744873
    7. '7' → logprob: -7.356330394744873
    8. 'cards' → logprob: -7.856330394744873
    9. 'def' → logprob: -7.981330394744873
    10. ' if' → logprob: -8.231329917907715

Token 401: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32522356510162354
    2. '_data' → logprob: -1.4502235651016235
    3. '_line' → logprob: -3.950223445892334
    4. '_lines' → logprob: -4.575223445892334
    5. ' =' → logprob: -5.325223445892334
    6. '().' → logprob: -5.450223445892334
    7. '=' → logprob: -6.825223445892334
    8. '_str' → logprob: -6.950223445892334
    9. '_list' → logprob: -7.325223445892334
    10. '_text' → logprob: -7.950223445892334

Token 402: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6540518403053284
    2. 'input' → logprob: -0.9040518403053284
    3. ' sys' → logprob: -2.9040517807006836
    4. ' input' → logprob: -3.9040517807006836
    5. 'lambda' → logprob: -9.279051780700684
    6. '__' → logprob: -10.029051780700684
    7. '```' → logprob: -11.279051780700684
    8. ' lambda' → logprob: -11.904051780700684
    9. 'open' → logprob: -12.029051780700684
    10. '=input' → logprob: -12.529051780700684

Token 403: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007998613873496652
    2. 'stdin' → logprob: -7.250799655914307
    3. '.readline' → logprob: -10.500800132751465
    4. '.std' → logprob: -10.750800132751465
    5. '.stdout' → logprob: -10.875800132751465
    6. '.argv' → logprob: -11.625800132751465
    7. '.' → logprob: -12.625800132751465
    8. '(stdin' → logprob: -12.625800132751465
    9. 'import' → logprob: -13.375800132751465
    10. '.setdefault' → logprob: -14.000800132751465

Token 404: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00019936825265176594
    2. '.read' → logprob: -9.000199317932129
    3. '.readlines' → logprob: -10.000199317932129
    4. '.' → logprob: -11.000199317932129
    5. '.stdin' → logprob: -12.250199317932129
    6. 'read' → logprob: -12.750199317932129
    7. '.buffer' → logprob: -13.375199317932129
    8. '=' → logprob: -14.000199317932129
    9. '_read' → logprob: -14.125199317932129
    10. '_buffer' → logprob: -14.375199317932129

Token 405: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2055090218782425
    2. 'n' → logprob: -1.955509066581726
    3. 'for' → logprob: -3.9555089473724365
    4. '<|end|>' → logprob: -4.830509185791016
    5. 'N' → logprob: -5.080509185791016
    6. '  
' → logprob: -6.080509185791016
    7. 'number' → logprob: -6.455509185791016
    8. '()' → logprob: -6.580509185791016
    9. 'num' → logprob: -6.955509185791016
    10. 'def' → logprob: -7.330509185791016

Token 406: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03530126437544823
    2. 'N' → logprob: -3.7853012084960938
    3. 'for' → logprob: -5.035301208496094
    4. 'T' → logprob: -5.410301208496094
    5. 't' → logprob: -7.160301208496094
    6. 'num' → logprob: -9.410301208496094
    7. 'def' → logprob: -10.285301208496094
    8. 'print' → logprob: -10.285301208496094
    9. '_' → logprob: -10.785301208496094
    10. 'Q' → logprob: -10.910301208496094

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5777902007102966
    2. ' =' → logprob: -0.8277902007102966
    3. '=int' → logprob: -6.327790260314941
    4. ' ' → logprob: -10.202790260314941
    5. ',' → logprob: -11.702790260314941
    6. '=input' → logprob: -12.452790260314941
    7. '.' → logprob: -12.827790260314941
    8. ')' → logprob: -13.077790260314941
    9. 'int' → logprob: -13.327790260314941
    10. '_' → logprob: -13.452790260314941

Token 408: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005235648714005947
    2. ' int' → logprob: -5.25523567199707
    3. '7' → logprob: -13.38023567199707
    4. ' ' → logprob: -16.38023567199707
    5. '(int' → logprob: -16.63023567199707
    6. '[int' → logprob: -17.25523567199707
    7. '	int' → logprob: -17.75523567199707
    8. '<int' → logprob: -17.88023567199707
    9. '1' → logprob: -18.25523567199707
    10. 'len' → logprob: -18.25523567199707

Token 409: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16160336136817932
    2. '(input' → logprob: -1.911603331565857
    3. 'input' → logprob: -7.0366034507751465
    4. '(' → logprob: -8.036602973937988
    5. '(sys' → logprob: -8.786602973937988
    6. '()
' → logprob: -12.161602973937988
    7. '().' → logprob: -12.411602973937988
    8. ' ()' → logprob: -12.661602973937988
    9. '();' → logprob: -13.161602973937988
    10. '()\' → logprob: -13.286602973937988

Token 410: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06048358604311943
    2. '().' → logprob: -3.310483694076538
    3. '()' → logprob: -3.810483694076538
    4. '())
' → logprob: -9.935483932495117
    5. '()
' → logprob: -12.810483932495117
    6. ')' → logprob: -13.560483932495117
    7. ' ())' → logprob: -13.810483932495117
    8. '(' → logprob: -14.310483932495117
    9. '())

' → logprob: -15.185483932495117
    10. '();)' → logprob: -15.560483932495117

Token 411: 'for' (ID: 1938)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.049887072294950485
    2. 'for' → logprob: -3.049887180328369
    3. 'cards' → logprob: -7.049887180328369
    4. 'A' → logprob: -9.174886703491211
    5. 'player' → logprob: -9.174886703491211
    6. 'a' → logprob: -9.424886703491211
    7. 'hand' → logprob: -10.299886703491211
    8. 'initial' → logprob: -11.299886703491211
    9. '```' → logprob: -11.299886703491211
    10. 'print' → logprob: -11.549886703491211

Token 412: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6953145861625671
    2. ' _' → logprob: -0.6953145861625671
    3. ' i' → logprob: -6.320314407348633
    4. '_i' → logprob: -7.945314407348633
    5. 'i' → logprob: -11.570314407348633
    6. '_first' → logprob: -14.320314407348633
    7. ' ' → logprob: -14.820314407348633
    8. ' first' → logprob: -14.820314407348633
    9. '_player' → logprob: -16.445314407348633
    10. '_cards' → logprob: -16.445314407348633

Token 413: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05189942568540573
    2. ' range' → logprob: -3.0518994331359863
    3. ' in' → logprob: -6.176899433135986
    4. 'in' → logprob: -6.926899433135986
    5. '_' → logprob: -8.301898956298828
    6. '(range' → logprob: -15.426898956298828
    7. '_range' → logprob: -16.426898956298828
    8. 'ange' → logprob: -16.551898956298828
    9. '	range' → logprob: -16.551898956298828
    10. '```' → logprob: -17.551898956298828

Token 414: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. 'r' → logprob: -18.625017166137695
    4. '
' → logprob: -19.875017166137695
    5. '(range' → logprob: -19.875017166137695
    6. '	range' → logprob: -20.125017166137695
    7. 'rang' → logprob: -20.250017166137695
    8. '_' → logprob: -20.750017166137695
    9. '```' → logprob: -21.000017166137695
    10. 'input' → logprob: -21.875017166137695

Token 415: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05123075470328331
    2. '(' → logprob: -3.0512306690216064
    3. ' (' → logprob: -6.1762309074401855
    4. 'N' → logprob: -7.9262309074401855
    5. '(
' → logprob: -9.801230430603027
    6. '()' → logprob: -9.801230430603027
    7. ' N' → logprob: -10.051230430603027
    8. '(int' → logprob: -11.051230430603027
    9. '(n' → logprob: -11.676230430603027
    10. ' ' → logprob: -12.051230430603027

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5243590474128723
    2. '):
' → logprob: -0.8993590474128723
    3. ':' → logprob: -7.649359226226807
    4. ' ):' → logprob: -7.899359226226807
    5. ' ):
' → logprob: -8.649358749389648
    6. ')' → logprob: -9.774358749389648
    7. ',' → logprob: -10.024358749389648
    8. ':
' → logprob: -10.024358749389648
    9. '():
' → logprob: -10.149358749389648
    10. '):
' → logprob: -11.524358749389648

Token 417: '   ' (ID: 271)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.24830904603004456
    2. '   ' → logprob: -1.7483090162277222
    3. 'data' → logprob: -3.8733091354370117
    4. ' first' → logprob: -3.9983091354370117
    5. '```' → logprob: -6.123309135437012
    6. 'cards' → logprob: -6.748309135437012
    7. '	first' → logprob: -7.623309135437012
    8. 'a' → logprob: -7.748309135437012
    9. 'print' → logprob: -7.748309135437012
    10. '    
' → logprob: -8.248309135437012

Token 418: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.39776721596717834
    2. 'cards' → logprob: -1.147767186164856
    3. ' first' → logprob: -5.522767066955566
    4. ' cards' → logprob: -5.772767066955566
    5. 'data' → logprob: -6.522767066955566
    6. 'hand' → logprob: -7.522767066955566
    7. 'nums' → logprob: -7.772767066955566
    8. 'arr' → logprob: -8.772767066955566
    9. '    
' → logprob: -9.022767066955566
    10. 'print' → logprob: -9.147767066955566

Token 419: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0002233245177194476
    2. 'cards' → logprob: -9.125223159790039
    3. '_' → logprob: -10.125223159790039
    4. ' =' → logprob: -10.875223159790039
    5. ',' → logprob: -11.125223159790039
    6. '=' → logprob: -11.875223159790039
    7. '   ' → logprob: -12.000223159790039
    8. 'Cards' → logprob: -12.250223159790039
    9. '_list' → logprob: -12.250223159790039
    10. '_line' → logprob: -12.750223159790039

Token 420: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1401713341474533
    2. 'set' → logprob: -2.1401712894439697
    3. ' list' → logprob: -4.390171527862549
    4. ' set' → logprob: -7.390171527862549
    5. 'map' → logprob: -8.89017105102539
    6. '[list' → logprob: -14.01517105102539
    7. 'sorted' → logprob: -14.39017105102539
    8. ' map' → logprob: -15.01517105102539
    9. '(list' → logprob: -15.39017105102539
    10. '{' → logprob: -15.51517105102539

Token 421: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.339278580620885e-06
    2. 'map' → logprob: -13.250001907348633
    3. '(' → logprob: -14.500001907348633
    4. '(int' → logprob: -17.500001907348633
    5. '(input' → logprob: -18.250001907348633
    6. '()' → logprob: -18.875001907348633
    7. '	map' → logprob: -19.000001907348633
    8. ' map' → logprob: -19.000001907348633
    9. '.map' → logprob: -19.625001907348633
    10. '(m' → logprob: -20.125001907348633

Token 422: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03817494958639145
    2. 'int' → logprob: -3.288174867630005
    3. ',int' → logprob: -9.288174629211426
    4. ' int' → logprob: -11.413174629211426
    5. '=int' → logprob: -11.788174629211426
    6. '[int' → logprob: -11.913174629211426
    7. '<int' → logprob: -12.288174629211426
    8. '   ' → logprob: -12.538174629211426
    9. 'str' → logprob: -13.288174629211426
    10. '(' → logprob: -13.788174629211426

Token 423: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2302534282207489
    2. ',' → logprob: -1.6052534580230713
    3. '(input' → logprob: -5.605253219604492
    4. 'input' → logprob: -7.355253219604492
    5. '   ' → logprob: -8.980253219604492
    6. ',int' → logprob: -9.355253219604492
    7. '(' → logprob: -9.480253219604492
    8. '=input' → logprob: -9.605253219604492
    9. '(),' → logprob: -9.980253219604492
    10. ' ,' → logprob: -10.355253219604492

Token 424: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -18.503177642822266
    4. '<input' → logprob: -19.253177642822266
    5. 'sys' → logprob: -19.378177642822266
    6. 'str' → logprob: -20.003177642822266
    7. ',input' → logprob: -20.378177642822266
    8. '	input' → logprob: -20.753177642822266
    9. 'lambda' → logprob: -20.753177642822266
    10. '=input' → logprob: -21.128177642822266

Token 425: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '.readline' → logprob: -14.000000953674316
    3. '()' → logprob: -15.000000953674316
    4. '.split' → logprob: -17.250001907348633
    5. '()
' → logprob: -17.875001907348633
    6. '.strip' → logprob: -18.250001907348633
    7. '().__' → logprob: -18.250001907348633
    8. '(' → logprob: -18.875001907348633
    9. ' ().' → logprob: -18.875001907348633
    10. '()[' → logprob: -19.375001907348633

Token 426: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20217004418373108
    2. 'strip' → logprob: -1.7021700143814087
    3. 'rstrip' → logprob: -7.827169895172119
    4. 'read' → logprob: -7.952169895172119
    5. '().' → logprob: -12.327170372009277
    6. '(split' → logprob: -14.827170372009277
    7. ' strip' → logprob: -15.202170372009277
    8. '.readline' → logprob: -15.452170372009277
    9. ' split' → logprob: -15.452170372009277
    10. '.strip' → logprob: -16.32716941833496

Token 427: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00217857351526618
    2. '()' → logprob: -6.87717866897583
    3. '()))
' → logprob: -7.25217866897583
    4. '))' → logprob: -7.87717866897583
    5. '(' → logprob: -10.002178192138672
    6. '())' → logprob: -12.252178192138672
    7. '()));' → logprob: -13.127178192138672
    8. '().' → logprob: -13.377178192138672
    9. '()[' → logprob: -13.752178192138672
    10. '()))

' → logprob: -14.627178192138672

Token 428: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16237831115722656
    2. '   ' → logprob: -1.9123783111572266
    3. 'if' → logprob: -6.287378311157227
    4. '```' → logprob: -9.037378311157227
    5. 'result' → logprob: -9.287378311157227
    6. ' print' → logprob: -10.162378311157227
    7. '    
' → logprob: -11.037378311157227
    8. '	print' → logprob: -11.412378311157227
    9. '``' → logprob: -12.662378311157227
    10. '<|end|>' → logprob: -12.912378311157227

Token 429: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008640571613796055
    2. 'if' → logprob: -8.000864028930664
    3. 'result' → logprob: -8.125864028930664
    4. '   ' → logprob: -8.750864028930664
    5. ' print' → logprob: -10.125864028930664
    6. 'res' → logprob: -10.500864028930664
    7. 'answer' → logprob: -13.000864028930664
    8. 'pr' → logprob: -13.375864028930664
    9. 'ans' → logprob: -14.000864028930664
    10. 'for' → logprob: -14.125864028930664

Token 430: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.020299773663282394
    2. '('' → logprob: -4.020299911499023
    3. '(' → logprob: -6.395299911499023
    4. '(s' → logprob: -7.770299911499023
    5. '(int' → logprob: -10.270299911499023
    6. '"' → logprob: -11.520299911499023
    7. '(("' → logprob: -12.395299911499023
    8. '(
' → logprob: -12.770299911499023
    9. '(True' → logprob: -14.145299911499023
    10. 'solve' → logprob: -14.395299911499023

Token 431: 'yes' (ID: 6763)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.3154504895210266
    2. '"' → logprob: -2.065450429916382
    3. 'YES' → logprob: -2.190450429916382
    4. 'First' → logprob: -4.190450668334961
    5. 'Win' → logprob: -5.315450668334961
    6. 'WIN' → logprob: -6.065450668334961
    7. '1' → logprob: -6.690450668334961
    8. 'W' → logprob: -7.065450668334961
    9. '{"' → logprob: -7.315450668334961
    10. 'Can' → logprob: -7.440450668334961

Token 432: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.9623810658231378e-05
    2. '")' → logprob: -10.875020027160645
    3. 'if' → logprob: -14.875020027160645
    4. ' if' → logprob: -16.125019073486328
    5. '```' → logprob: -16.250019073486328
    6. ''' → logprob: -16.750019073486328
    7. '")
' → logprob: -16.875019073486328
    8. '\n' → logprob: -17.250019073486328
    9. ' "' → logprob: -17.375019073486328
    10. ')' → logprob: -18.875019073486328

Token 433: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24101601541042328
    2. 'if' → logprob: -1.6160160303115845
    3. ')' → logprob: -4.491015911102295
    4. '()' → logprob: -5.866015911102295
    5. '"' → logprob: -6.866015911102295
    6. '   ' → logprob: -7.991015911102295
    7. ' ' → logprob: -10.991016387939453
    8. '```' → logprob: -10.991016387939453
    9. 'end' → logprob: -12.616016387939453
    10. '")' → logprob: -12.616016387939453

Token 434: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5759435892105103
    2. 'solve' → logprob: -0.8259435892105103
    3. '   ' → logprob: -13.075943946838379
    4. '.solve' → logprob: -13.700943946838379
    5. 'sol' → logprob: -14.700943946838379
    6. ' ' → logprob: -14.950943946838379
    7. ' can' → logprob: -16.950942993164062
    8. 's' → logprob: -16.950942993164062
    9. '    ' → logprob: -17.450942993164062
    10. ')' → logprob: -17.575942993164062

Token 435: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. '(tuple' → logprob: -14.250004768371582
    4. 'first' → logprob: -16.000003814697266
    5. '[first' → logprob: -16.875003814697266
    6. ' (' → logprob: -16.875003814697266
    7. '(f' → logprob: -18.250003814697266
    8. '(list' → logprob: -18.375003814697266
    9. ' first' → logprob: -18.750003814697266
    10. '(second' → logprob: -18.875003814697266

Token 436: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010699660051614046
    2. '(first' → logprob: -7.001070022583008
    3. ')==' → logprob: -10.376070022583008
    4. 'else' → logprob: -10.751070022583008
    5. '   ' → logprob: -10.751070022583008
    6. 'first' → logprob: -10.876070022583008
    7. '[first' → logprob: -11.001070022583008
    8. ' else' → logprob: -11.126070022583008
    9. '))' → logprob: -11.376070022583008
    10. ' )' → logprob: -11.376070022583008

Token 437: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1297466903924942
    2. 'else' → logprob: -2.129746675491333
    3. ')' → logprob: -6.379746913909912
    4. '==' → logprob: -7.129746913909912
    5. '("' → logprob: -8.629746437072754
    6. ' ==' → logprob: -9.879746437072754
    7. '(' → logprob: -10.129746437072754
    8. '()' → logprob: -10.879746437072754
    9. '   ' → logprob: -11.629746437072754
    10. ' ' → logprob: -11.879746437072754

Token 438: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -9.698698704596609e-05
    2. ' "' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.875097274780273
    4. ''' → logprob: -15.000097274780273
    5. ' ' → logprob: -15.875097274780273
    6. ' yes' → logprob: -17.250097274780273
    7. ' ' → logprob: -17.250097274780273
    8. '	' → logprob: -18.000097274780273
    9. '
' → logprob: -18.000097274780273
    10. '  ' → logprob: -18.125097274780273

Token 439: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0002165299083571881
    2. '"' → logprob: -8.500216484069824
    3. ' no' → logprob: -11.250216484069824
    4. '"No' → logprob: -16.75021743774414
    5. 'No' → logprob: -16.87521743774414
    6. '	no' → logprob: -17.50021743774414
    7. 'NO' → logprob: -18.50021743774414
    8. '```' → logprob: -20.00021743774414
    9. ''' → logprob: -20.62521743774414
    10. '
' → logprob: -20.87521743774414

Token 440: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5773372650146484
    2. ')' → logprob: -0.8273372650146484
    3. ')")' → logprob: -6.577337265014648
    4. '())' → logprob: -12.952337265014648
    5. '')' → logprob: -13.952337265014648
    6. '}")' → logprob: -15.077337265014648
    7. '!")' → logprob: -15.077337265014648
    8. '`)' → logprob: -15.327337265014648
    9. '")
' → logprob: -15.702337265014648
    10. '))' → logprob: -15.702337265014648


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 438
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 217
Tokens correctement prédits (top 10): 386
Précision stricte (1ère position): 43.84%
Précision adaptée (1ère position): 49.54%
Précision (top 10): 88.13%
================================================================================
