================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    HP_init, HP_max = map(int, input().split())
    if HP_init == 0 and HP_max == 0:
        break
    R, C = map(int, input().split())
    cave = [list(input()) for _ in range(R)]

    T = int(input())
    trap_damage = {}
    for _ in range(T):
        line = input().split()
        trap_damage[line[0]] = int(line[1])

    S = int(input())
    moves = []
    for _ in range(S):
        d, n = input().split()
        moves.append((d, int(n)))

    P = int(input())
    potions = [int(input()) for _ in range(P)]

    # Starting position and HP
    x, y = 0, 0
    HP = HP_init

    # For movement directions
    dx = {'U':-1, 'D':1, 'L':0, 'R':0}
    dy = {'U':0, 'D':0, 'L':-1, 'R':1}

    # Function to use potions to maximize HP before entering a cell
    def use_potions(hp):
        hp_possible = set([hp])
        for p in potions:
            new_hp_possible = set()
            for val in hp_possible:
                # use potion or not
                new_val = val + p
                if new_val > HP_max:
                    new_val = HP_max
                new_hp_possible.add(val)
                new_hp_possible.add(new_val)
            hp_possible = new_hp_possible
        return max(hp_possible)

    alive = True
    for d, n in moves:
        for _ in range(n):
            nx = x + dx[d]
            ny = y + dy[d]
            # use potions before entering
            HP = use_potions(HP)
            # enter cell
            trap = cave[nx][ny]
            damage = trap_damage.get(trap, 0)
            HP -= damage
            if HP <= 0:
                alive = False
                break
            x, y = nx, ny
        if not alive:
            break

    if alive and HP > 0:
        print("YES")
    else:
        print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' HP' (ID: 21979)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108775019645691
    2. '    ' → logprob: -1.6858775615692139
    3. '```' → logprob: -3.435877561569214
    4. ' ' → logprob: -3.810877561569214
    5. '       ' → logprob: -4.810877323150635
    6. '    
' → logprob: -5.935877323150635
    7. '  ' → logprob: -6.185877323150635
    8. '\' → logprob: -6.185877323150635
    9. '\n' → logprob: -6.685877323150635
    10. '\t' → logprob: -6.810877323150635

Token 5: '_init' (ID: 13909)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1643848419189453
    2. '+' → logprob: -2.0393848419189453
    3. '=' → logprob: -2.0393848419189453
    4. '[' → logprob: -2.0393848419189453
    5. ' +=' → logprob: -2.9143848419189453
    6. '.' → logprob: -3.0393848419189453
    7. '>' → logprob: -3.4143848419189453
    8. ' ' → logprob: -3.5393848419189453
    9. ' -=' → logprob: -3.6643848419189453
    10. ')' → logprob: -3.9143848419189453

Token 6: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0675274133682251
    2. '=' → logprob: -3.4425272941589355
    3. ' =' → logprob: -4.1925272941589355
    4. '[' → logprob: -4.6925272941589355
    5. ')' → logprob: -6.0675272941589355
    6. '+' → logprob: -6.6925272941589355
    7. ' _' → logprob: -6.8175272941589355
    8. '-' → logprob: -7.4425272941589355
    9. '.' → logprob: -7.4425272941589355
    10. ' ' → logprob: -7.6925272941589355

Token 7: ' HP' (ID: 21979)
  Prédit: ' HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.13946884870529175
    2. 'HP' → logprob: -2.7644689083099365
    3. ' =' → logprob: -4.639468669891357
    4. ' ' → logprob: -4.951968669891357
    5. ' max' → logprob: -5.389468669891357
    6. ' _' → logprob: -5.451968669891357
    7. '_' → logprob: -5.514468669891357
    8. ' H' → logprob: -5.639468669891357
    9. '    ' → logprob: -5.701968669891357
    10. ' hp' → logprob: -5.826968669891357

Token 8: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24995167553424835
    2. ' =' → logprob: -2.4999516010284424
    3. ',' → logprob: -2.7499516010284424
    4. '=' → logprob: -3.2499516010284424
    5. '_max' → logprob: -4.6249518394470215
    6. '_,' → logprob: -4.9999518394470215
    7. '_space' → logprob: -5.8749518394470215
    8. '_current' → logprob: -6.3749518394470215
    9. '_init' → logprob: -6.7499518394470215
    10. '_rest' → logprob: -6.7499518394470215

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6202388405799866
    2. ' =' → logprob: -0.8702388405799866
    3. ',' → logprob: -3.370238780975342
    4. '_' → logprob: -5.120238780975342
    5. ')' → logprob: -6.370238780975342
    6. ' ,' → logprob: -7.870238780975342
    7. ' ' → logprob: -8.3702392578125
    8. '[' → logprob: -8.6202392578125
    9. '   ' → logprob: -9.1202392578125
    10. '.' → logprob: -9.3702392578125

Token 10: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.072393536567688
    2. ' map' → logprob: -1.447393536567688
    3. ' HP' → logprob: -1.822393536567688
    4. '0' → logprob: -1.947393536567688
    5. 'map' → logprob: -3.6973934173583984
    6. '100' → logprob: -3.9473934173583984
    7. ' randint' → logprob: -4.197393417358398
    8. 'HP' → logprob: -4.572393417358398
    9. '1' → logprob: -5.072393417358398
    10. ' int' → logprob: -5.197393417358398

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16511709988117218
    2. '(lambda' → logprob: -2.790117025375366
    3. '(str' → logprob: -3.040117025375366
    4. '(' → logprob: -3.165117025375366
    5. 'int' → logprob: -8.165117263793945
    6. '()' → logprob: -9.290117263793945
    7. '(input' → logprob: -9.790117263793945
    8. '[int' → logprob: -9.915117263793945
    9. '<|end|>' → logprob: -10.290117263793945
    10. '(float' → logprob: -10.415117263793945

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7901343703269958
    2. ')' → logprob: -0.9151343703269958
    3. '(' → logprob: -2.0401344299316406
    4. '(user' → logprob: -5.040134429931641
    5. 'input' → logprob: -6.290134429931641
    6. '())' → logprob: -6.665134429931641
    7. '('' → logprob: -7.290134429931641
    8. '()' → logprob: -7.290134429931641
    9. ' )' → logprob: -7.665134429931641
    10. '<|end|>' → logprob: -7.790134429931641

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023772716522217
    2. ' input' → logprob: -2.3502378463745117
    3. ')' → logprob: -11.225237846374512
    4. '(input' → logprob: -11.475237846374512
    5. '```' → logprob: -12.975237846374512
    6. ',input' → logprob: -13.975237846374512
    7. ' ' → logprob: -14.225237846374512
    8. '	input' → logprob: -14.600237846374512
    9. '   ' → logprob: -14.600237846374512
    10. 'user' → logprob: -14.850237846374512

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8115141987800598
    2. '(' → logprob: -1.436514139175415
    3. '())' → logprob: -1.436514139175415
    4. ')' → logprob: -3.186514139175415
    5. '('' → logprob: -3.811514139175415
    6. '(()' → logprob: -5.686514377593994
    7. '(""))' → logprob: -5.811514377593994
    8. '());' → logprob: -6.061514377593994
    9. '(input' → logprob: -6.686514377593994
    10. '()))' → logprob: -6.811514377593994

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002128382766386494
    2. 'strip' → logprob: -8.500212669372559
    3. 'rstrip' → logprob: -12.125212669372559
    4. ')' → logprob: -12.875212669372559
    5. ' split' → logprob: -14.250212669372559
    6. '(split' → logprob: -14.375212669372559
    7. 'replace' → logprob: -17.000213623046875
    8. 'spl' → logprob: -17.125213623046875
    9. 'read' → logprob: -17.375213623046875
    10. 'startswith' → logprob: -17.375213623046875

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08880596607923508
    2. ')' → logprob: -2.838805913925171
    3. '()))' → logprob: -4.33880615234375
    4. '))' → logprob: -4.83880615234375
    5. '()' → logprob: -5.21380615234375
    6. '('' → logprob: -10.58880615234375
    7. '(' → logprob: -11.58880615234375
    8. ' ())' → logprob: -12.21380615234375
    9. '()),' → logprob: -12.33880615234375
    10. '())
' → logprob: -12.46380615234375

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19980168342590332
    2. ')' → logprob: -2.1998016834259033
    3. '<|end|>' → logprob: -3.9498016834259033
    4. '):' → logprob: -4.074801445007324
    5. ' if' → logprob: -4.324801445007324
    6. '   ' → logprob: -5.199801445007324
    7. ' ' → logprob: -5.699801445007324
    8. ',' → logprob: -5.949801445007324
    9. 'if' → logprob: -6.449801445007324
    10. '```' → logprob: -6.699801445007324

Token 18: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5064361095428467
    2. '<|end|>' → logprob: -1.6314361095428467
    3. '   ' → logprob: -2.0064361095428467
    4. ')' → logprob: -2.2564361095428467
    5. ':' → logprob: -2.3814361095428467
    6. 'if' (adapté à ' if') → logprob: -2.6314361095428467
    7. ' ' → logprob: -2.6314361095428467
    8. ',' → logprob: -3.5064361095428467
    9. '\n' → logprob: -4.131436347961426
    10. '```' → logprob: -4.756436347961426

Token 19: ' HP' (ID: 21979)
  Prédit: ' HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.004486138932406902
    2. ' not' → logprob: -5.754486083984375
    3. ' ' → logprob: -6.879486083984375
    4. 'HP' → logprob: -8.254486083984375
    5. 'not' → logprob: -11.754486083984375
    6. ' ' → logprob: -12.254486083984375
    7. '_HP' → logprob: -12.254486083984375
    8. ' (' → logprob: -14.879486083984375
    9. ' H' → logprob: -15.129486083984375
    10. '  ' → logprob: -15.379486083984375

Token 20: '_init' (ID: 13909)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.212401032447815
    2. ' _' → logprob: -1.212401032447815
    3. ' ==' → logprob: -1.712401032447815
    4. ' ' → logprob: -1.962401032447815
    5. ' <=' → logprob: -3.8374009132385254
    6. ' <' → logprob: -3.9624009132385254
    7. '_init' → logprob: -4.337400913238525
    8. '==' → logprob: -5.087400913238525
    9. '```' → logprob: -5.587400913238525
    10. '[' → logprob: -5.837400913238525

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5309345126152039
    2. ' <=' → logprob: -1.1559345722198486
    3. ' <' → logprob: -3.4059345722198486
    4. ' >=' → logprob: -3.5309345722198486
    5. ' ' → logprob: -4.0309343338012695
    6. '==' → logprob: -4.5309343338012695
    7. ' >' → logprob: -5.9059343338012695
    8. '<=' → logprob: -6.6559343338012695
    9. '<' → logprob: -7.6559343338012695
    10. ')' → logprob: -7.9059343338012695

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026715563610196114
    2. ' ' → logprob: -3.6517155170440674
    3. '-' → logprob: -8.026715278625488
    4. ' -' → logprob: -9.401715278625488
    5. 'HP' → logprob: -12.401715278625488
    6. ' HP' → logprob: -14.526715278625488
    7. '   ' → logprob: -15.339215278625488
    8. '1' → logprob: -16.026716232299805
    9. ')' → logprob: -16.151716232299805
    10. ' and' → logprob: -16.214216232299805

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10036312788724899
    2. ' ' → logprob: -2.35036301612854
    3. '-' → logprob: -9.725362777709961
    4. 'HP' → logprob: -9.850362777709961
    5. ' -' → logprob: -10.600362777709961
    6. ' HP' → logprob: -11.787862777709961
    7. ' and' → logprob: -13.350362777709961
    8. '  ' → logprob: -13.350362777709961
    9. 'and' → logprob: -13.725362777709961
    10. '1' → logprob: -13.850362777709961

Token 24: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012049584649503231
    2. 'and' → logprob: -4.762049674987793
    3. ':' → logprob: -5.887049674987793
    4. ' ' → logprob: -7.887049674987793
    5. ' or' → logprob: -8.262049674987793
    6. '   ' → logprob: -11.637049674987793
    7. ' :' → logprob: -12.762049674987793
    8. '  ' → logprob: -13.012049674987793
    9. ' a' → logprob: -13.387049674987793
    10. '	and' → logprob: -13.512049674987793

Token 25: ' HP' (ID: 21979)
  Prédit: ' HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.07384014129638672
    2. ' ' → logprob: -2.6988401412963867
    3. 'HP' → logprob: -5.698840141296387
    4. ' H' → logprob: -8.073840141296387
    5. ' ' → logprob: -8.948840141296387
    6. '<|end|>' → logprob: -10.198840141296387
    7. '_HP' → logprob: -11.448840141296387
    8. '<|end|>' → logprob: -11.573840141296387
    9. '  ' → logprob: -11.948840141296387
    10. ' ‌' → logprob: -11.948840141296387

Token 26: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.000387535837944597
    2. '_' → logprob: -7.875387668609619
    3. ' _' → logprob: -12.375387191772461
    4. 'max' → logprob: -13.000387191772461
    5. '_init' → logprob: -15.000387191772461
    6. '_m' → logprob: -15.000387191772461
    7. '_ma' → logprob: -15.750387191772461
    8. '_

' → logprob: -17.12538719177246
    9. '_MAX' → logprob: -17.37538719177246
    10. '_min' → logprob: -17.87538719177246

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014126835390925407
    2. '==' → logprob: -4.389126777648926
    3. ' ' → logprob: -6.639126777648926
    4. '=' → logprob: -9.264126777648926
    5. ':' → logprob: -9.514126777648926
    6. ' =' → logprob: -10.514126777648926
    7. '<|end|>' → logprob: -11.139126777648926
    8. ' ' → logprob: -11.264126777648926
    9. '   ' → logprob: -11.389126777648926
    10. ')' → logprob: -11.764126777648926

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993743777275085
    2. ' ' → logprob: -2.6949374675750732
    3. '   ' → logprob: -14.819937705993652
    4. '  ' → logprob: -15.194937705993652
    5. ' ' → logprob: -15.569937705993652
    6. '<|end|>' → logprob: -16.069936752319336
    7. '۰' → logprob: -16.632436752319336
    8. '<|end|>' → logprob: -17.132436752319336
    9. '```' → logprob: -17.632436752319336
    10. '‌' → logprob: -18.382436752319336

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -17.375036239624023
    4. '০' → logprob: -18.625036239624023
    5. '  ' → logprob: -18.687536239624023
    6. '```' → logprob: -18.812536239624023
    7. '   ' → logprob: -18.937536239624023
    8. ')' → logprob: -19.000036239624023
    9. '०' → logprob: -19.062536239624023
    10. '-' → logprob: -19.062536239624023

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.1689596148207784e-05
    2. ':
' → logprob: -10.000051498413086
    3. '   ' → logprob: -12.500051498413086
    4. ':return' → logprob: -13.750051498413086
    5. ' :' → logprob: -14.125051498413086
    6. '       ' → logprob: -15.125051498413086
    7. '):' → logprob: -15.500051498413086
    8. ' break' → logprob: -17.000051498413086
    9. '：' → logprob: -17.625051498413086
    10. '	break' → logprob: -18.000051498413086

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041729263961315155
    2. '   ' → logprob: -3.291729211807251
    3. ' break' → logprob: -6.29172945022583
    4. ':' → logprob: -6.66672945022583
    5. '<|end|>' → logprob: -8.666728973388672
    6. '	break' → logprob: -8.916728973388672
    7. '\n' → logprob: -9.416728973388672
    8. '\t' → logprob: -10.166728973388672
    9. '   ' → logprob: -11.041728973388672
    10. '      ' → logprob: -11.166728973388672

Token 32: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.20083297789096832
    2. '       ' → logprob: -1.8258329629898071
    3. 'break' (adapté à ' break') → logprob: -3.9508330821990967
    4. '   ' → logprob: -7.075832843780518
    5. '	break' → logprob: -7.200832843780518
    6. '_break' → logprob: -11.450833320617676
    7. '           ' → logprob: -11.950833320617676
    8. '\n' → logprob: -12.075833320617676
    9. 'Break' → logprob: -12.700833320617676
    10. '-break' → logprob: -12.950833320617676

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10758613049983978
    2. '    
' → logprob: -3.107586145401001
    3. '#' → logprob: -4.107585906982422
    4. '\n' → logprob: -4.357585906982422
    5. ':' → logprob: -4.732585906982422
    6. ')' → logprob: -4.982585906982422
    7. '<|end|>' → logprob: -5.857585906982422
    8. '    ' → logprob: -6.607585906982422
    9. ' ' → logprob: -6.607585906982422
    10. '
' → logprob: -6.857585906982422

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04809793829917908
    2. '#' → logprob: -4.298098087310791
    3. '    
' → logprob: -4.298098087310791
    4. ':' → logprob: -4.798098087310791
    5. '\n' → logprob: -5.798098087310791
    6. ')' → logprob: -6.298098087310791
    7. '
' → logprob: -6.423098087310791
    8. ',' → logprob: -7.298098087310791
    9. '       ' → logprob: -7.548098087310791
    10. '<|end|>' → logprob: -7.673098087310791

Token 35: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15652765333652496
    2. 'n' → logprob: -2.9065277576446533
    3. '       ' → logprob: -4.031527519226074
    4. '    ' → logprob: -4.156527519226074
    5. ',' → logprob: -5.031527519226074
    6. '\' → logprob: -5.031527519226074
    7. ')' → logprob: -5.156527519226074
    8. ' ' → logprob: -5.281527519226074
    9. '#' → logprob: -5.531527519226074
    10. '    
' → logprob: -5.531527519226074

Token 36: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8569502234458923
    2. 'P' → logprob: -1.981950283050537
    3. ' =' → logprob: -2.606950283050537
    4. 'andom' → logprob: -2.606950283050537
    5. 'E' → logprob: -2.856950283050537
    6. 'eturn' → logprob: -3.731950283050537
    7. 'aise' → logprob: -3.981950283050537
    8. ',' → logprob: -4.231950283050537
    9. '=' → logprob: -4.356950283050537
    10. 'a' → logprob: -4.481950283050537

Token 37: ' C' (ID: 363)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -2.2600820064544678
    2. 'D' → logprob: -2.3850820064544678
    3. ' S' → logprob: -2.5100820064544678
    4. 'S' → logprob: -2.5100820064544678
    5. ' M' → logprob: -2.6350820064544678
    6. 'A' → logprob: -2.8850820064544678
    7. ' A' → logprob: -3.1350820064544678
    8. 'M' → logprob: -3.1350820064544678
    9. ' H' → logprob: -3.6350820064544678
    10. 'H' → logprob: -3.7600820064544678

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25244081020355225
    2. '=' → logprob: -1.5024408102035522
    3. ',' → logprob: -7.627440929412842
    4. ' ,' → logprob: -11.377440452575684
    5. ' ' → logprob: -12.127440452575684
    6. ')' → logprob: -12.877440452575684
    7. ' =
' → logprob: -13.627440452575684
    8. '   ' → logprob: -13.877440452575684
    9. '    ' → logprob: -14.252440452575684
    10. '=int' → logprob: -14.877440452575684

Token 39: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0011730826226994395
    2. 'map' → logprob: -6.75117301940918
    3. ' mapa' → logprob: -13.12617301940918
    4. '	map' → logprob: -15.12617301940918
    5. ' ' → logprob: -15.25117301940918
    6. '    ' → logprob: -16.37617301940918
    7. '(map' → logprob: -16.62617301940918
    8. '_map' → logprob: -17.00117301940918
    9. ' m' → logprob: -17.12617301940918
    10. ',map' → logprob: -17.12617301940918

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3489767014980316
    2. '(' → logprob: -1.223976731300354
    3. '(str' → logprob: -7.9739766120910645
    4. '<int' → logprob: -10.223977088928223
    5. ' (' → logprob: -11.098977088928223
    6. '(lambda' → logprob: -11.098977088928223
    7. '(float' → logprob: -11.348977088928223
    8. '[int' → logprob: -11.598977088928223
    9. '()(' → logprob: -11.598977088928223
    10. '(
' → logprob: -11.723977088928223

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08083806186914444
    2. '(int' → logprob: -3.5808379650115967
    3. '(),' → logprob: -4.080838203430176
    4. ',int' → logprob: -4.205838203430176
    5. '(' → logprob: -4.955838203430176
    6. ',input' → logprob: -5.455838203430176
    7. '(input' → logprob: -5.705838203430176
    8. ')' → logprob: -5.955838203430176
    9. ' ,' → logprob: -7.705838203430176
    10. '()' → logprob: -9.955838203430176

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8215342164039612
    2. ' input' → logprob: -0.8215342164039612
    3. 'int' → logprob: -2.1965341567993164
    4. ' int' → logprob: -4.696534156799316
    5. 'map' → logprob: -9.321534156799316
    6. ' map' → logprob: -9.946534156799316
    7. 'str' → logprob: -11.321534156799316
    8. '(int' → logprob: -11.696534156799316
    9. '[int' → logprob: -12.946534156799316
    10. '(input' → logprob: -13.571534156799316

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011841575615108013
    2. '()' → logprob: -6.751183986663818
    3. '())' → logprob: -11.626184463500977
    4. '(' → logprob: -13.126184463500977
    5. ')' → logprob: -13.876184463500977
    6. ' ().' → logprob: -14.501184463500977
    7. '.' → logprob: -14.876184463500977
    8. '()).' → logprob: -15.001184463500977
    9. '()
' → logprob: -15.126184463500977
    10. '()[' → logprob: -16.501184463500977

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. ' split' → logprob: -13.00000286102295
    3. 'strip' → logprob: -14.25000286102295
    4. ')' → logprob: -16.250003814697266
    5. 'spl' → logprob: -16.625003814697266
    6. 'rstrip' → logprob: -16.875003814697266
    7. '_split' → logprob: -17.000003814697266
    8. 's' → logprob: -17.125003814697266
    9. '(split' → logprob: -17.375003814697266
    10. 'plit' → logprob: -17.875003814697266

Token 45: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.882728099822998
    2. '())' → logprob: -0.882728099822998
    3. '()' → logprob: -1.757728099822998
    4. '())
' → logprob: -8.757728576660156
    5. '()
' → logprob: -10.257728576660156
    6. ')
' → logprob: -10.882728576660156
    7. '))' → logprob: -11.382728576660156
    8. '`)' → logprob: -11.882728576660156
    9. '()))' → logprob: -12.507728576660156
    10. ' )' → logprob: -13.007728576660156

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40121352672576904
    2. '\n' → logprob: -2.4012136459350586
    3. '    
' → logprob: -2.7762136459350586
    4. ' 
' → logprob: -3.5262136459350586
    5. '\' → logprob: -3.6512136459350586
    6. '<|end|>' → logprob: -3.6512136459350586
    7. ' ' → logprob: -3.7762136459350586
    8. '    ' → logprob: -4.151213645935059
    9. '#' → logprob: -4.901213645935059
    10. '
' → logprob: -5.151213645935059

Token 47: ' cave' (ID: 44365)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.9895067811012268
    2. '[' → logprob: -1.864506721496582
    3. '   ' → logprob: -2.239506721496582
    4. 'n' → logprob: -2.489506721496582
    5. ' grid' → logprob: -3.239506721496582
    6. 'm' → logprob: -3.614506721496582
    7. ' ' → logprob: -3.614506721496582
    8. 'matrix' → logprob: -3.739506721496582
    9. '    ' → logprob: -4.114506721496582
    10. 'r' → logprob: -4.114506721496582

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3284876346588135
    2. '[' → logprob: -1.5784876346588135
    3. '=' → logprob: -2.8284876346588135
    4. '_' → logprob: -4.578487396240234
    5. ' ' → logprob: -6.203487396240234
    6. '_map' → logprob: -7.703487396240234
    7. '[:]' → logprob: -7.703487396240234
    8. '[][]' → logprob: -8.453487396240234
    9. '[]' → logprob: -8.578487396240234
    10. '   ' → logprob: -8.578487396240234

Token 49: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3545779287815094
    2. '[]' → logprob: -1.854577898979187
    3. ' [' → logprob: -2.4795780181884766
    4. '[' → logprob: -2.8545780181884766
    5. ' ' → logprob: -9.104578018188477
    6. '[input' → logprob: -9.479578018188477
    7. '[list' → logprob: -9.604578018188477
    8. '[c' → logprob: -9.604578018188477
    9. '[int' → logprob: -9.729578018188477
    10. '[n' → logprob: -10.104578018188477

Token 50: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0334097221493721
    2. ' list' → logprob: -3.533409833908081
    3. 'input' → logprob: -5.658409595489502
    4. '[list' → logprob: -9.65841007232666
    5. '[input' → logprob: -10.03341007232666
    6. ' input' → logprob: -10.53341007232666
    7. '[]' → logprob: -10.90841007232666
    8. '[' → logprob: -12.03341007232666
    9. '   ' → logprob: -13.03341007232666
    10. ' [' → logprob: -13.40841007232666

Token 51: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4502439796924591
    2. '(input' → logprob: -1.4502439498901367
    3. '(' → logprob: -2.0752439498901367
    4. '()' → logprob: -6.325243949890137
    5. '(int' → logprob: -7.950243949890137
    6. '(str' → logprob: -8.575243949890137
    7. 'map' → logprob: -9.450243949890137
    8. '(
' → logprob: -10.450243949890137
    9. 'input' → logprob: -11.325243949890137
    10. '(range' → logprob: -11.575243949890137

Token 52: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00570409232750535
    2. '()' → logprob: -5.255703926086426
    3. '().' → logprob: -8.005703926086426
    4. '()]' → logprob: -9.130703926086426
    5. ' ())' → logprob: -11.755703926086426
    6. '()))' → logprob: -12.005703926086426
    7. '()>' → logprob: -12.755703926086426
    8. '());' → logprob: -13.005703926086426
    9. '()),' → logprob: -13.130703926086426
    10. '();)' → logprob: -13.505703926086426

Token 53: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016460261540487409
    2. '()]' → logprob: -7.376646041870117
    3. 'for' → logprob: -7.501646041870117
    4. ' for' → logprob: -8.751646041870117
    5. ')' → logprob: -8.876646041870117
    6. '())' → logprob: -9.501646041870117
    7. '(' → logprob: -10.251646041870117
    8. ']' → logprob: -11.001646041870117
    9. '   ' → logprob: -11.251646041870117
    10. '().' → logprob: -11.251646041870117

Token 54: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.022391147911548615
    2. ' range' → logprob: -4.397391319274902
    3. '_' → logprob: -4.647391319274902
    4. ' ' → logprob: -8.897391319274902
    5. '(range' → logprob: -10.772391319274902
    6. ' i' → logprob: -10.897391319274902
    7. '<|end|>' → logprob: -11.272391319274902
    8. '(' → logprob: -11.397391319274902
    9. '_range' → logprob: -11.522391319274902
    10. 'range' → logprob: -11.522391319274902

Token 55: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4771742820739746
    2. ' in' → logprob: -1.1021742820739746
    3. 'range' → logprob: -3.1021742820739746
    4. 'in' → logprob: -6.352174282073975
    5. '(range' → logprob: -7.977174282073975
    6. '_range' → logprob: -9.227174758911133
    7. '	range' → logprob: -9.227174758911133
    8. '_' → logprob: -10.352174758911133
    9. ' _' → logprob: -11.227174758911133
    10. '(' → logprob: -11.852174758911133

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693148672580719
    2. 'range' → logprob: -0.693148672580719
    3. '	range' → logprob: -14.193148612976074
    4. '(range' → logprob: -14.443148612976074
    5. '_range' → logprob: -16.31814956665039
    6. '.range' → logprob: -16.69314956665039
    7. 'rang' → logprob: -17.44314956665039
    8. 'r' → logprob: -17.69314956665039
    9. ' xrange' → logprob: -17.94314956665039
    10. '   ' → logprob: -18.06814956665039

Token 57: '(R' (ID: 4092)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7941234111785889
    2. '(R' → logprob: -0.9191234111785889
    3. '(' → logprob: -1.9191234111785889
    4. ' (' → logprob: -6.044123649597168
    5. '(
' → logprob: -11.044123649597168
    6. ')' → logprob: -11.669123649597168
    7. '(int' → logprob: -12.544123649597168
    8. ' R' → logprob: -12.544123649597168
    9. ' C' → logprob: -12.919123649597168
    10. '(s' → logprob: -13.419123649597168

Token 58: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002784077310934663
    2. ')' → logprob: -6.002784252166748
    3. ']' → logprob: -8.12778377532959
    4. '   ' → logprob: -12.37778377532959
    5. ' )' → logprob: -12.50278377532959
    6. ')]
' → logprob: -13.75278377532959
    7. '')]' → logprob: -14.37778377532959
    8. '）' → logprob: -14.50278377532959
    9. ')
' → logprob: -14.62778377532959
    10. '))' → logprob: -14.87778377532959

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8785681128501892
    2. '
' → logprob: -1.253568172454834
    3. '\n' → logprob: -2.378568172454834
    4. '<|end|>' → logprob: -2.503568172454834
    5. '#' → logprob: -3.503568172454834
    6. ' ' → logprob: -3.753568172454834
    7. '    
' → logprob: -3.753568172454834
    8. ':' → logprob: -4.628568172454834
    9. ' 
' → logprob: -4.878568172454834
    10. '\' → logprob: -5.003568172454834

Token 60: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0994658470153809
    2. ' ' → logprob: -1.7244658470153809
    3. 'n' → logprob: -2.099465847015381
    4. '    ' → logprob: -2.349465847015381
    5. '#' → logprob: -2.849465847015381
    6. 's' → logprob: -3.099465847015381
    7. 'i' → logprob: -3.599465847015381
    8. 'd' → logprob: -4.099465847015381
    9. 'for' → logprob: -4.099465847015381
    10. ' 
' → logprob: -4.349465847015381

Token 61: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -1.4175108671188354
    2. 'r' → logprob: -1.9175108671188354
    3. 'urn' → logprob: -2.292510986328125
    4. '=' → logprob: -2.292510986328125
    5. '_' → logprob: -2.417510986328125
    6. ' =' → logprob: -2.667510986328125
    7. 'o' → logprob: -3.167510986328125
    8. 'ele' → logprob: -3.292510986328125
    9. 'arget' → logprob: -3.792510986328125
    10. 'h' → logprob: -4.292510986328125

Token 62: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8393931984901428
    2. '0' → logprob: -1.714393138885498
    3. ' ' → logprob: -2.464393138885498
    4. ' int' → logprob: -2.589393138885498
    5. '10' → logprob: -2.839393138885498
    6. '[int' → logprob: -3.464393138885498
    7. '[' → logprob: -3.714393138885498
    8. '[]' → logprob: -4.339393138885498
    9. ' []' → logprob: -4.339393138885498
    10. 'len' → logprob: -4.464393138885498

Token 63: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38757002353668213
    2. '(input' → logprob: -1.1375700235366821
    3. '()' → logprob: -7.637569904327393
    4. '('' → logprob: -8.76257038116455
    5. 'input' → logprob: -10.88757038116455
    6. ' (' → logprob: -11.01257038116455
    7. '("' → logprob: -12.13757038116455
    8. '(space' → logprob: -12.76257038116455
    9. '(
' → logprob: -12.88757038116455
    10. '(in' → logprob: -13.13757038116455

Token 64: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14586465060710907
    2. '()' → logprob: -2.520864725112915
    3. ')' → logprob: -2.895864725112915
    4. '(' → logprob: -9.895864486694336
    5. '())
' → logprob: -11.520864486694336
    6. ' ())' → logprob: -11.645864486694336
    7. '()
' → logprob: -12.770864486694336
    8. ' )' → logprob: -13.020864486694336
    9. '().' → logprob: -13.145864486694336
    10. '()))' → logprob: -13.520864486694336

Token 65: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2873202562332153
    2. '   ' → logprob: -1.6623202562332153
    3. '\n' → logprob: -1.9123202562332153
    4. '    ' → logprob: -2.037320137023926
    5. '<|end|>' → logprob: -2.412320137023926
    6. '    
' → logprob: -3.537320137023926
    7. ' 
' → logprob: -4.037320137023926
    8. 'for' → logprob: -4.162320137023926
    9. '\' → logprob: -4.287320137023926
    10. ' for' → logprob: -4.412320137023926

Token 66: ' trap' (ID: 34270)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7358444333076477
    2. 't' → logprob: -2.360844373703003
    3. '   ' → logprob: -2.735844373703003
    4. ' for' → logprob: -3.235844373703003
    5. 'actions' → logprob: -3.360844373703003
    6. 'moves' → logprob: -3.485844373703003
    7. 's' → logprob: -3.735844373703003
    8. 'a' → logprob: -3.735844373703003
    9. 'n' → logprob: -3.735844373703003
    10. 'd' → logprob: -3.860844373703003

Token 67: '_damage' (ID: 124305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05715968459844589
    2. '_' → logprob: -3.182159662246704
    3. ' =' → logprob: -5.932159900665283
    4. '_positions' → logprob: -5.932159900665283
    5. '_s' → logprob: -6.307159900665283
    6. '_pos' → logprob: -7.182159900665283
    7. '_count' → logprob: -7.432159900665283
    8. '_map' → logprob: -7.432159900665283
    9. '_time' → logprob: -7.432159900665283
    10. '_damage' → logprob: -7.557159900665283

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21674548089504242
    2. '=' → logprob: -2.466745376586914
    3. 's' → logprob: -2.716745376586914
    4. '[' → logprob: -4.091745376586914
    5. ',' → logprob: -4.341745376586914
    6. '_' → logprob: -4.591745376586914
    7. ' ' → logprob: -5.966745376586914
    8. '[]' → logprob: -8.466745376586914
    9. 'es' → logprob: -8.591745376586914
    10. ')' → logprob: -8.716745376586914

Token 69: ' {}
' (ID: 11421)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1601157188415527
    2. '[' → logprob: -1.5351157188415527
    3. '[]' → logprob: -1.9101157188415527
    4. ' []' → logprob: -2.0351157188415527
    5. '{}' → logprob: -2.9101157188415527
    6. ' list' → logprob: -3.0351157188415527
    7. ' [' → logprob: -3.4101157188415527
    8. '[int' → logprob: -3.5351157188415527
    9. '[list' → logprob: -3.9101157188415527
    10. ' {}' → logprob: -5.660115718841553

Token 70: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7054708003997803
    2. '   ' → logprob: -1.8304708003997803
    3. ' for' → logprob: -1.8304708003997803
    4. '<|end|>' → logprob: -2.0804708003997803
    5. ' ' → logprob: -3.2054708003997803
    6. '<|end|>' → logprob: -5.205471038818359
    7. '[' → logprob: -5.455471038818359
    8. '    
' → logprob: -6.205471038818359
    9. '	for' → logprob: -6.455471038818359
    10. '[token' → logprob: -6.580471038818359

Token 71: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023308252915740013
    2. ' for' → logprob: -3.773308277130127
    3. '	for' → logprob: -10.773307800292969
    4. ' ' → logprob: -11.148307800292969
    5. '   ' → logprob: -11.773307800292969
    6. 't' → logprob: -11.898307800292969
    7. 'f' → logprob: -12.773307800292969
    8. ')' → logprob: -12.898307800292969
    9. '[' → logprob: -13.023307800292969
    10. '<|end|>' → logprob: -13.148307800292969

Token 72: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04944683238863945
    2. '_' → logprob: -3.0494468212127686
    3. ' ' → logprob: -7.299447059631348
    4. ' i' → logprob: -8.799447059631348
    5. ' ' → logprob: -10.924447059631348
    6. ' ‌' → logprob: -11.924447059631348
    7. ' ▁' → logprob: -12.924447059631348
    8. ' ​' → logprob: -13.049447059631348
    9. '_i' → logprob: -13.674447059631348
    10. '  ' → logprob: -15.174447059631348

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16994266211986542
    2. 'in' → logprob: -1.9199426174163818
    3. ' ' → logprob: -5.294942855834961
    4. 'n' → logprob: -6.544942855834961
    5. ' _' → logprob: -7.044942855834961
    6. 'i' → logprob: -7.294942855834961
    7. ' i' → logprob: -7.419942855834961
    8. 'range' → logprob: -7.669942855834961
    9. 's' → logprob: -8.669942855834961
    10. '_' → logprob: -8.919942855834961

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022777557373047
    2. ' range' → logprob: -1.9102277755737305
    3. '	range' → logprob: -13.78522777557373
    4. '_' → logprob: -14.03522777557373
    5. ' ' → logprob: -14.41022777557373
    6. '_range' → logprob: -14.78522777557373
    7. '(range' → logprob: -15.03522777557373
    8. 'rang' → logprob: -15.53522777557373
    9. 'r' → logprob: -16.160228729248047
    10. '  ' → logprob: -16.410228729248047

Token 75: '(T' (ID: 7014)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.07389472424983978
    2. '(T' → logprob: -2.823894739151001
    3. '(' → logprob: -5.198894500732422
    4. ' (' → logprob: -5.448894500732422
    5. 'T' → logprob: -6.323894500732422
    6. ' ' → logprob: -8.573894500732422
    7. ' range' → logprob: -11.073894500732422
    8. ')' → logprob: -11.823894500732422
    9. '(range' → logprob: -12.198894500732422
    10. '(
' → logprob: -12.448894500732422

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005502322688698769
    2. ' ):' → logprob: -5.880502223968506
    3. ')' → logprob: -6.130502223968506
    4. '):
' → logprob: -8.005502700805664
    5. ':' → logprob: -8.880502700805664
    6. ' )' → logprob: -11.130502700805664
    7. '   ' → logprob: -11.380502700805664
    8. ',' → logprob: -12.005502700805664
    9. ' ' → logprob: -13.005502700805664
    10. ']:' → logprob: -13.255502700805664

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01468696165829897
    2. '<|end|>' → logprob: -5.0146870613098145
    3. '    ' → logprob: -5.2646870613098145
    4. ' ' → logprob: -7.3896870613098145
    5. ' ind' → logprob: -8.014686584472656
    6. '   ' → logprob: -8.639686584472656
    7. '<|end|>' → logprob: -8.639686584472656
    8. ' ‌' → logprob: -8.764686584472656
    9. '‌' → logprob: -9.139686584472656
    10. ' s' → logprob: -9.202186584472656

Token 78: ' line' (ID: 2543)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.7627604007720947
    2. 'trap' → logprob: -1.8877604007720947
    3. 't' → logprob: -2.1377604007720947
    4. 'c' → logprob: -2.8877604007720947
    5. ' key' → logprob: -2.8877604007720947
    6. ' c' → logprob: -3.0127604007720947
    7. 's' → logprob: -3.1377604007720947
    8. 'ch' → logprob: -3.1377604007720947
    9. ' trap' → logprob: -3.3877604007720947
    10. 'name' → logprob: -3.5127604007720947

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048659928143024445
    2. '=' → logprob: -3.0486600399017334
    3. 's' → logprob: -10.798660278320312
    4. '=line' → logprob: -11.173660278320312
    5. ' ' → logprob: -11.423660278320312
    6. '_tokens' → logprob: -12.423660278320312
    7. '_input' → logprob: -12.423660278320312
    8. '=input' → logprob: -12.548660278320312
    9. '_' → logprob: -12.673660278320312
    10. '   ' → logprob: -12.923660278320312

Token 80: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11296340078115463
    2. ' input' → logprob: -2.2379634380340576
    3. 'list' → logprob: -8.987963676452637
    4. ' list' → logprob: -11.237963676452637
    5. '=input' → logprob: -13.987963676452637
    6. '	input' → logprob: -14.612963676452637
    7. 'in' → logprob: -14.987963676452637
    8. '[input' → logprob: -15.237963676452637
    9. '(input' → logprob: -15.362963676452637
    10. ' ' → logprob: -15.737963676452637

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05511979013681412
    2. '()' → logprob: -2.930119752883911
    3. '.' → logprob: -8.680119514465332
    4. '(' → logprob: -10.055119514465332
    5. ')' → logprob: -11.930119514465332
    6. ' ().' → logprob: -12.055119514465332
    7. ' .' → logprob: -12.680119514465332
    8. '.split' → logprob: -12.805119514465332
    9. ' ()' → logprob: -12.805119514465332
    10. '())' → logprob: -14.055119514465332

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.146429223008454e-05
    2. 'strip' → logprob: -10.37506103515625
    3. 'rstrip' → logprob: -10.75006103515625
    4. 'spl' → logprob: -11.87506103515625
    5. ' split' → logprob: -14.00006103515625
    6. 's' → logprob: -14.75006103515625
    7. 'replace' → logprob: -15.25006103515625
    8. '(split' → logprob: -16.50006103515625
    9. 'rs' → logprob: -16.62506103515625
    10. 'sp' → logprob: -16.75006103515625

Token 83: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001517238444648683
    2. '(' → logprob: -6.626517295837402
    3. '('' → logprob: -9.251517295837402
    4. '()
' → logprob: -9.626517295837402
    5. ' ()' → logprob: -12.001517295837402
    6. '()[' → logprob: -12.126517295837402
    7. '()]' → logprob: -12.251517295837402
    8. '())' → logprob: -12.376517295837402
    9. '()

' → logprob: -13.251517295837402
    10. ')' → logprob: -13.876517295837402

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15712890028953552
    2. ' trap' → logprob: -2.1571288108825684
    3. 'trap' → logprob: -4.032128810882568
    4. ' ' → logprob: -5.157128810882568
    5. '<|end|>' → logprob: -6.282128810882568
    6. '    ' → logprob: -6.532128810882568
    7. '  ' → logprob: -7.782128810882568
    8. '	tr' → logprob: -8.282129287719727
    9. '       ' → logprob: -8.282129287719727
    10. '    
' → logprob: -8.407129287719727

Token 85: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' (adapté à ' trap') → logprob: -0.0046769496984779835
    2. 'c' → logprob: -6.254676818847656
    3. '   ' → logprob: -6.629676818847656
    4. 't' → logprob: -7.629676818847656
    5. ' trap' → logprob: -8.254676818847656
    6. 'd' → logprob: -9.129676818847656
    7. 'ch' → logprob: -9.379676818847656
    8. 'char' → logprob: -9.504676818847656
    9. 'if' → logprob: -9.754676818847656
    10. 'k' → logprob: -9.754676818847656

Token 86: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.012958917766809464
    2. '_' → logprob: -4.387959003448486
    3. '_type' → logprob: -8.637958526611328
    4. '_d' → logprob: -9.137958526611328
    5. '_name' → logprob: -9.262958526611328
    6. '[' → logprob: -10.637958526611328
    7. '_DAMAGE' → logprob: -12.012958526611328
    8. 'damage' → logprob: -12.137958526611328
    9. '	damage' → logprob: -12.512958526611328
    10. ' _' → logprob: -12.512958526611328

Token 87: '[line' (ID: 129099)
  Prédit: '[line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.011083542369306087
    2. '[' → logprob: -4.511083602905273
    3. '[int' → logprob: -10.386083602905273
    4. '[...]' → logprob: -13.011083602905273
    5. ' [' → logprob: -13.886083602905273
    6. '[
' → logprob: -15.511083602905273
    7. '[list' → logprob: -15.511083602905273
    8. '[str' → logprob: -15.761083602905273
    9. '=line' → logprob: -16.136083602905273
    10. '[`' → logprob: -16.261083602905273

Token 88: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. '[
' → logprob: -12.62501049041748
    3. '][' → logprob: -13.50001049041748
    4. ']' → logprob: -13.62501049041748
    5. '0' → logprob: -13.62501049041748
    6. '[-' → logprob: -14.37501049041748
    7. ' [' → logprob: -14.37501049041748
    8. ' ' → logprob: -15.18751049041748
    9. '
' → logprob: -15.37501049041748
    10. 's' → logprob: -15.62501049041748

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007551893359050155
    2. '1' → logprob: -7.375755310058594
    3. ' ' → logprob: -9.250755310058594
    4. '-' → logprob: -11.750755310058594
    5. ']' → logprob: -11.938255310058594
    6. '[' → logprob: -12.188255310058594
    7. '2' → logprob: -12.438255310058594
    8. '   ' → logprob: -13.250755310058594
    9. ':' → logprob: -13.813255310058594
    10. '(' → logprob: -14.500755310058594

Token 90: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002922564512118697
    2. ']=' → logprob: -6.627922534942627
    3. ']]' → logprob: -6.877922534942627
    4. ' ]' → logprob: -8.002923011779785
    5. '[' → logprob: -9.627923011779785
    6. ')]' → logprob: -9.752923011779785
    7. ']]=' → logprob: -9.752923011779785
    8. ']+=' → logprob: -11.877923011779785
    9. '']' → logprob: -12.127923011779785
    10. '`]' → logprob: -12.502923011779785

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632969319820404
    2. ' =' → logprob: -0.757969319820404
    3. '=int' → logprob: -8.00796890258789
    4. ']' → logprob: -10.75796890258789
    5. ']=' → logprob: -12.50796890258789
    6. ' ' → logprob: -12.63296890258789
    7. ',' → logprob: -12.88296890258789
    8. '[' → logprob: -13.88296890258789
    9. 'int' → logprob: -13.88296890258789
    10. ')' → logprob: -13.88296890258789

Token 92: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025115699972957373
    2. ' int' → logprob: -6.002511501312256
    3. '[int' → logprob: -10.877511978149414
    4. ']int' → logprob: -12.002511978149414
    5. '=int' → logprob: -12.252511978149414
    6. '<int' → logprob: -12.877511978149414
    7. '(int' → logprob: -12.877511978149414
    8. ',int' → logprob: -15.002511978149414
    9. '<|end|>' → logprob: -15.502511978149414
    10. ':int' → logprob: -15.752511978149414

Token 93: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.023246755823493004
    2. '(' → logprob: -3.7732467651367188
    3. '(

' → logprob: -14.648246765136719
    4. '(
' → logprob: -15.023246765136719
    5. '(lines' → logprob: -16.14824676513672
    6. ' (' → logprob: -16.52324676513672
    7. '[line' → logprob: -16.77324676513672
    8. '#line' → logprob: -16.77324676513672
    9. '=line' → logprob: -16.89824676513672
    10. '('' → logprob: -17.02324676513672

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002134675160050392
    2. ']' → logprob: -6.877134799957275
    3. '1' → logprob: -7.252134799957275
    4. '][' → logprob: -8.252134323120117
    5. '])' → logprob: -9.877134323120117
    6. ' [' → logprob: -11.002134323120117
    7. '[-' → logprob: -11.252134323120117
    8. ')' → logprob: -11.502134323120117
    9. '```' → logprob: -11.502134323120117
    10. '-' → logprob: -11.877134323120117

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.792751032160595e-05
    2. '2' → logprob: -9.62508773803711
    3. '-' → logprob: -11.37508773803711
    4. ' ' → logprob: -12.50008773803711
    5. '   ' → logprob: -12.75008773803711
    6. '[' → logprob: -14.00008773803711
    7. '```' → logprob: -14.00008773803711
    8. '])' → logprob: -14.37508773803711
    9. ']' → logprob: -15.25008773803711
    10. ' -' → logprob: -15.25008773803711

Token 96: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019502983195707202
    2. '])' → logprob: -6.251950263977051
    3. '))' → logprob: -12.37695026397705
    4. ']' → logprob: -12.75195026397705
    5. '})' → logprob: -12.75195026397705
    6. ')
' → logprob: -12.87695026397705
    7. ')]' → logprob: -12.87695026397705
    8. ' )' → logprob: -13.12695026397705
    9. '）' → logprob: -13.25195026397705
    10. ')])' → logprob: -13.87695026397705

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17170663177967072
    2. 'n' → logprob: -3.7967066764831543
    3. '    
' → logprob: -3.7967066764831543
    4. 's' → logprob: -4.171706676483154
    5. '
' → logprob: -4.296706676483154
    6. 'i' → logprob: -4.671706676483154
    7. ' while' → logprob: -4.796706676483154
    8. '    ' → logprob: -4.921706676483154
    9. ' ' → logprob: -5.171706676483154
    10. 'while' → logprob: -5.171706676483154

Token 98: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.361142635345459
    2. 'dp' → logprob: -2.236142635345459
    3. 'dist' → logprob: -2.736142635345459
    4. 'moves' → logprob: -2.861142635345459
    5. 'steps' → logprob: -2.986142635345459
    6. 'move' → logprob: -3.111142635345459
    7. 'd' → logprob: -3.111142635345459
    8. 'current' → logprob: -3.486142635345459
    9. 'player' → logprob: -3.611142635345459
    10. 'DP' → logprob: -3.736142635345459

Token 99: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7227359414100647
    2. ' =' → logprob: -1.09773588180542
    3. '_row' → logprob: -2.59773588180542
    4. 'R' → logprob: -3.34773588180542
    5. 'r' → logprob: -4.47273588180542
    6. '=' → logprob: -4.97273588180542
    7. '_' → logprob: -5.09773588180542
    8. 'T' → logprob: -5.34773588180542
    9. '_pos' → logprob: -5.47273588180542
    10. 'tar' → logprob: -5.59773588180542

Token 100: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6792280077934265
    2. ' input' → logprob: -1.0542280673980713
    3. 'int' → logprob: -2.3042280673980713
    4. ' int' → logprob: -3.3042280673980713
    5. 'list' → logprob: -5.679227828979492
    6. ' list' → logprob: -6.054227828979492
    7. '[input' → logprob: -7.429227828979492
    8. '[]' → logprob: -8.554227828979492
    9. '[int' → logprob: -8.679227828979492
    10. ' []' → logprob: -8.679227828979492

Token 101: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00036263695801608264
    2. '(' → logprob: -8.000362396240234
    3. '(int' → logprob: -11.125362396240234
    4. ' (' → logprob: -11.625362396240234
    5. 'input' → logprob: -12.750362396240234
    6. ' input' → logprob: -15.625362396240234
    7. '=input' → logprob: -16.125362396240234
    8. '(
' → logprob: -16.500362396240234
    9. '(in' → logprob: -16.500362396240234
    10. '()' → logprob: -16.750362396240234

Token 102: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.811637818813324
    2. ')' → logprob: -1.0616378784179688
    3. '()' → logprob: -1.5616378784179688
    4. '()
' → logprob: -9.436637878417969
    5. ' )' → logprob: -10.436637878417969
    6. '())
' → logprob: -10.811637878417969
    7. '   ' → logprob: -10.811637878417969
    8. '(' → logprob: -11.061637878417969
    9. ' ())' → logprob: -11.311637878417969
    10. ')
' → logprob: -12.561637878417969

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2591998279094696
    2. 'steps' → logprob: -2.634199857711792
    3. 'path' → logprob: -3.509199857711792
    4. 'moves' → logprob: -3.759199857711792
    5. 'start' → logprob: -4.009199619293213
    6. 'actions' → logprob: -4.634199619293213
    7. ' steps' → logprob: -4.884199619293213
    8. ' path' → logprob: -4.884199619293213
    9. 'sequence' → logprob: -5.009199619293213
    10. 'positions' → logprob: -5.259199619293213

Token 104: ' moves' (ID: 19523)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.4550542831420898
    2. 'start' → logprob: -1.7050542831420898
    3. 'steps' → logprob: -1.9550542831420898
    4. 'for' → logprob: -2.83005428314209
    5. 'moves' (adapté à ' moves') → logprob: -2.83005428314209
    6. ' path' → logprob: -2.83005428314209
    7. 'sequence' → logprob: -3.45505428314209
    8. 'player' → logprob: -3.58005428314209
    9. 'actions' → logprob: -3.70505428314209
    10. ' start' → logprob: -4.20505428314209

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014173267409205437
    2. '=' → logprob: -4.2641730308532715
    3. '_' → logprob: -12.76417350769043
    4. ' ' → logprob: -13.01417350769043
    5. ',' → logprob: -13.88917350769043
    6. '_line' → logprob: -14.76417350769043
    7. '[' → logprob: -15.13917350769043
    8. '   ' → logprob: -15.13917350769043
    9. ')' → logprob: -15.26417350769043
    10. 's' → logprob: -15.26417350769043

Token 106: ' []
' (ID: 8911)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6002714037895203
    2. 'input' → logprob: -0.8502714037895203
    3. ' list' → logprob: -4.225271224975586
    4. 'list' → logprob: -4.725271224975586
    5. '[input' → logprob: -7.725271224975586
    6. '[]' → logprob: -10.100271224975586
    7. ' []' → logprob: -10.475271224975586
    8. ' ' → logprob: -11.350271224975586
    9. ' [' → logprob: -11.850271224975586
    10. '=input' → logprob: -11.975271224975586

Token 107: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06985928118228912
    2. ' for' → logprob: -3.194859266281128
    3. '   ' → logprob: -4.319859504699707
    4. '<|end|>' → logprob: -4.944859504699707
    5. '[' → logprob: -6.069859504699707
    6. '[]' → logprob: -7.069859504699707
    7. 'while' → logprob: -7.319859504699707
    8. '	for' → logprob: -8.069859504699707
    9. '[
' → logprob: -8.319859504699707
    10. '_' → logprob: -8.819859504699707

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.612634362885728e-05
    2. ' for' → logprob: -9.500076293945312
    3. '   ' → logprob: -15.125076293945312
    4. 'moves' → logprob: -15.125076293945312
    5. 'move' → logprob: -15.625076293945312
    6. '_' → logprob: -16.250076293945312
    7. 'while' → logprob: -16.250076293945312
    8. '
' → logprob: -17.625076293945312
    9. 'next' → logprob: -17.750076293945312
    10. '	for' → logprob: -17.750076293945312

Token 109: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.47408777475357056
    2. '_' → logprob: -0.9740877747535706
    3. ' ' → logprob: -11.849087715148926
    4. ' ' → logprob: -13.224087715148926
    5. ' i' → logprob: -13.349087715148926
    6. ' ‌' → logprob: -17.224088668823242
    7. ' range' → logprob: -17.474088668823242
    8. ' ​' → logprob: -18.099088668823242
    9. ' ▁' → logprob: -18.474088668823242
    10. ' in' → logprob: -18.474088668823242

Token 110: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03809347376227379
    2. ' in' → logprob: -3.2880935668945312
    3. 'range' → logprob: -10.538093566894531
    4. ' ' → logprob: -11.788093566894531
    5. '  ' → logprob: -12.413093566894531
    6. '   ' → logprob: -12.538093566894531
    7. 'S' → logprob: -13.163093566894531
    8. 'i' → logprob: -13.413093566894531
    9. '```' → logprob: -13.413093566894531
    10. '
' → logprob: -14.163093566894531

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011712945997714996
    2. ' range' → logprob: -6.751171112060547
    3. '(range' → logprob: -14.751171112060547
    4. 'input' → logprob: -15.626171112060547
    5. 'in' → logprob: -15.876171112060547
    6. 'ange' → logprob: -16.376171112060547
    7. 'ran' → logprob: -16.751171112060547
    8. '	range' → logprob: -17.001171112060547
    9. '   ' → logprob: -17.376171112060547
    10. ' ' → logprob: -17.376171112060547

Token 112: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -6.670925358776003e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -14.375066757202148
    4. '(s' → logprob: -17.00006675720215
    5. '(int' → logprob: -19.37506675720215
    6. '(
' → logprob: -19.37506675720215
    7. 'S' → logprob: -19.37506675720215
    8. ' S' → logprob: -20.12506675720215
    9. '(range' → logprob: -20.37506675720215
    10. ' ' → logprob: -21.00006675720215

Token 113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.387261301279068
    2. '):' → logprob: -1.1372612714767456
    3. '   ' → logprob: -9.012261390686035
    4. '):
' → logprob: -9.137261390686035
    5. ')' → logprob: -9.262261390686035
    6. ':' → logprob: -10.512261390686035
    7. ':
' → logprob: -10.762261390686035
    8. ' ):
' → logprob: -12.262261390686035
    9. '():
' → logprob: -12.637261390686035
    10. ',' → logprob: -12.887261390686035

Token 114: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10278826951980591
    2. ' moves' → logprob: -2.727788209915161
    3. '       ' → logprob: -3.727788209915161
    4. 'moves' → logprob: -4.85278844833374
    5. '<|end|>' → logprob: -8.477787971496582
    6. '_moves' → logprob: -9.227787971496582
    7. '.moves' → logprob: -9.977787971496582
    8. '<|end|>' → logprob: -10.852787971496582
    9. 'm' → logprob: -11.102787971496582
    10. '	m' → logprob: -11.102787971496582

Token 115: ' d' (ID: 272)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.13244220614433289
    2. ' moves' → logprob: -2.1324422359466553
    3. 'move' → logprob: -5.507441997528076
    4. ' move' → logprob: -7.132441997528076
    5. 'm' → logprob: -7.882441997528076
    6. '   ' → logprob: -8.882442474365234
    7. 'mv' → logprob: -10.507442474365234
    8. 'mov' → logprob: -10.632442474365234
    9. '
' → logprob: -10.882442474365234
    10. '_moves' → logprob: -11.257442474365234

Token 116: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15305809676647186
    2. 'irection' → logprob: -2.6530580520629883
    3. 'ir' → logprob: -3.2780580520629883
    4. '=' → logprob: -3.5280580520629883
    5. ' ' → logprob: -6.903058052062988
    6. 'irections' → logprob: -7.028058052062988
    7. 'ef' → logprob: -7.778058052062988
    8. 'ire' → logprob: -8.153058052062988
    9. '=input' → logprob: -8.403058052062988
    10. 'e' → logprob: -8.403058052062988

Token 117: ' n' (ID: 297)
  Prédit: '_='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_=' → logprob: -1.8810279369354248
    2. 't' → logprob: -2.381027936935425
    3. ' t' → logprob: -2.381027936935425
    4. '_' → logprob: -2.506027936935425
    5. 'n' → logprob: -2.631027936935425
    6. ' s' → logprob: -3.006027936935425
    7. ' n' → logprob: -3.006027936935425
    8. 's' → logprob: -3.131027936935425
    9. 'l' → logprob: -3.131027936935425
    10. 'c' → logprob: -3.381027936935425

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519541084766388
    2. ' =' → logprob: -1.5019540786743164
    3. ')' → logprob: -11.126954078674316
    4. ' ' → logprob: -12.751954078674316
    5. '=line' → logprob: -13.251954078674316
    6. 's' → logprob: -13.501954078674316
    7. '=int' → logprob: -14.126954078674316
    8. ',' → logprob: -14.376954078674316
    9. '<|end|>' → logprob: -14.876954078674316
    10. '=input' → logprob: -15.001954078674316

Token 119: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12695278227329254
    2. 'input' → logprob: -2.126952886581421
    3. ' ' → logprob: -11.126953125
    4. '=input' → logprob: -13.001953125
    5. '	input' → logprob: -13.251953125
    6. '(input' → logprob: -13.501953125
    7. ' line' → logprob: -13.751953125
    8. ' map' → logprob: -14.001953125
    9. '    ' → logprob: -14.876953125
    10. ',input' → logprob: -14.876953125

Token 120: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.662937372922897e-05
    2. '()' → logprob: -9.250096321105957
    3. ' ().' → logprob: -15.000096321105957
    4. '(' → logprob: -16.500097274780273
    5. '.' → logprob: -17.500097274780273
    6. '()
' → logprob: -17.750097274780273
    7. 'split' → logprob: -18.500097274780273
    8. '.split' → logprob: -18.500097274780273
    9. '()[' → logprob: -18.625097274780273
    10. '()

' → logprob: -19.000097274780273

Token 121: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.750000953674316
    3. ' split' → logprob: -15.250000953674316
    4. 'spl' → logprob: -15.750000953674316
    5. 'rstrip' → logprob: -16.875
    6. '(split' → logprob: -17.0
    7. '.split' → logprob: -20.0
    8. 'plit' → logprob: -20.625
    9. '_split' → logprob: -21.375
    10. 'rs' → logprob: -22.25

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11172237247228622
    2. ')' → logprob: -2.986722469329834
    3. ',' → logprob: -3.236722469329834
    4. '<|end|>' → logprob: -4.486722469329834
    5. '   ' → logprob: -6.361722469329834
    6. '<|end|>' → logprob: -6.861722469329834
    7. '(' → logprob: -7.611722469329834
    8. '()
' → logprob: -8.111721992492676
    9. '[' → logprob: -8.861721992492676
    10. ']' → logprob: -9.111721992492676

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.51076740026474
    2. '<|end|>' → logprob: -1.1357674598693848
    3. '   ' → logprob: -2.7607674598693848
    4. ')' → logprob: -5.135767459869385
    5. '<|end|>' → logprob: -5.260767459869385
    6. ',' → logprob: -6.385767459869385
    7. '    ' → logprob: -7.510767459869385
    8. '        ' → logprob: -8.010766983032227
    9. ' n' → logprob: -8.135766983032227
    10. ')n' → logprob: -8.260766983032227

Token 124: ' moves' (ID: 19523)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12921142578125
    2. '       ' → logprob: -2.50421142578125
    3. ' moves' → logprob: -4.37921142578125
    4. 'n' → logprob: -4.37921142578125
    5. '<|end|>' → logprob: -5.37921142578125
    6. 'moves' (adapté à ' moves') → logprob: -6.00421142578125
    7. ' 
' → logprob: -6.25421142578125
    8. '        ' → logprob: -6.50421142578125
    9. '    ' → logprob: -7.37921142578125
    10. ' ' → logprob: -7.37921142578125

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025629340671002865
    2. '.' → logprob: -6.002562999725342
    3. ' .' → logprob: -9.502562522888184
    4. '.extend' → logprob: -11.502562522888184
    5. '.ap' → logprob: -14.002562522888184
    6. '.app' → logprob: -14.127562522888184
    7. '.setdefault' → logprob: -15.377562522888184
    8. '.py' → logprob: -15.877562522888184
    9. '.Append' → logprob: -16.0025634765625
    10. ').' → logprob: -16.0025634765625

Token 126: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002477677771821618
    2. '(' → logprob: -6.002477645874023
    3. '([' → logprob: -14.002477645874023
    4. '(d' → logprob: -14.877477645874023
    5. '   ' → logprob: -15.252477645874023
    6. ' ((' → logprob: -15.502477645874023
    7. '(int' → logprob: -16.127477645874023
    8. '(('' → logprob: -16.377477645874023
    9. '(
' → logprob: -16.502477645874023
    10. ' (' → logprob: -16.752477645874023

Token 127: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.1689596148207784e-05
    2. ' d' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.000051498413086
    4. ''d' → logprob: -16.750051498413086
    5. ' ' → logprob: -17.125051498413086
    6. '
' → logprob: -18.250051498413086
    7. '	d' → logprob: -18.250051498413086
    8. '  ' → logprob: -18.375051498413086
    9. '    ' → logprob: -18.625051498413086
    10. ')d' → logprob: -18.875051498413086

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019938242621719837
    2. ',int' → logprob: -6.501993656158447
    3. ',n' → logprob: -7.876993656158447
    4. ' ,' → logprob: -9.126994132995605
    5. 'int' → logprob: -13.251994132995605
    6. ',Integer' → logprob: -14.751994132995605
    7. ',float' → logprob: -15.001994132995605
    8. ',num' → logprob: -15.001994132995605
    9. ',
' → logprob: -16.12699317932129
    10. '[int' → logprob: -16.75199317932129

Token 129: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. '(int' → logprob: -19.001171112060547
    4. 'n' → logprob: -19.126171112060547
    5. '[int' → logprob: -19.376171112060547
    6. ',int' → logprob: -20.626171112060547
    7. '=int' → logprob: -21.126171112060547
    8. ' ' → logprob: -21.376171112060547
    9. '<int' → logprob: -21.376171112060547
    10. ':int' → logprob: -21.626171112060547

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004732102679554373
    2. '(' → logprob: -8.375473022460938
    3. 'n' → logprob: -8.375473022460938
    4. ')n' → logprob: -11.875473022460938
    5. ')' → logprob: -12.500473022460938
    6. ' (' → logprob: -14.250473022460938
    7. ' n' → logprob: -14.500473022460938
    8. ')(' → logprob: -15.750473022460938
    9. '(
' → logprob: -15.750473022460938
    10. '_n' → logprob: -17.750473022460938

Token 131: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.3882003128528595
    2. '))' → logprob: -1.138200283050537
    3. ')' → logprob: -6.638200283050537
    4. '))))' → logprob: -11.763200759887695
    5. ')))
' → logprob: -12.263200759887695
    6. '))
' → logprob: -13.638200759887695
    7. ' ))' → logprob: -13.763200759887695
    8. ')));' → logprob: -13.763200759887695
    9. ' ' → logprob: -13.888200759887695
    10. ')))

' → logprob: -14.638200759887695

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0833600759506226
    2. 'pos' → logprob: -1.5833600759506226
    3. '#' → logprob: -1.8333600759506226
    4. 'x' → logprob: -2.458360195159912
    5. ' pos' → logprob: -3.083360195159912
    6. 'r' → logprob: -3.833360195159912
    7. 'position' → logprob: -3.833360195159912
    8. 'player' → logprob: -4.083360195159912
    9. ' x' → logprob: -4.833360195159912
    10. ' #' → logprob: -4.833360195159912

Token 133: ' P' (ID: 398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.189811110496521
    2. 'player' → logprob: -1.439811110496521
    3. 'x' → logprob: -1.689811110496521
    4. '#' → logprob: -2.1898112297058105
    5. 'y' → logprob: -3.8148112297058105
    6. 'row' → logprob: -3.9398112297058105
    7. 'cur' → logprob: -4.0648112297058105
    8. 'r' → logprob: -4.3148112297058105
    9. 'current' → logprob: -4.3148112297058105
    10. 'px' → logprob: -4.3148112297058105

Token 134: ' =' (ID: 314)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1608104556798935
    2. '_x' → logprob: -3.1608104705810547
    3. ' =' → logprob: -3.6608104705810547
    4. '_pos' → logprob: -4.410810470581055
    5. 'layer' → logprob: -4.785810470581055
    6. '_hp' → logprob: -5.035810470581055
    7. '_HP' → logprob: -5.160810470581055
    8. 'osition' → logprob: -5.160810470581055
    9. '=' → logprob: -5.410810470581055
    10. 'r' → logprob: -5.535810470581055

Token 135: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3574376404285431
    2. 'HP' → logprob: -1.6074376106262207
    3. '0' → logprob: -3.3574376106262207
    4. ' HP' → logprob: -3.9824376106262207
    5. ' int' → logprob: -4.482437610626221
    6. '1' → logprob: -4.982437610626221
    7. '[]' → logprob: -4.982437610626221
    8. '[' → logprob: -5.482437610626221
    9. '[int' → logprob: -5.607437610626221
    10. '(int' → logprob: -6.232437610626221

Token 136: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00017302791820839047
    2. '(' → logprob: -9.25017261505127
    3. 'input' → logprob: -9.75017261505127
    4. '()' → logprob: -11.62517261505127
    5. ')' → logprob: -12.50017261505127
    6. '(int' → logprob: -13.00017261505127
    7. '=input' → logprob: -13.75017261505127
    8. ',input' → logprob: -14.25017261505127
    9. '[input' → logprob: -14.75017261505127
    10. ' input' → logprob: -15.00017261505127

Token 137: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4985130727291107
    2. '())' → logprob: -1.248513102531433
    3. '()' → logprob: -2.2485129833221436
    4. '()
' → logprob: -10.373513221740723
    5. '())
' → logprob: -11.248513221740723
    6. '(' → logprob: -11.373513221740723
    7. '();)' → logprob: -12.123513221740723
    8. ')
' → logprob: -12.498513221740723
    9. ' ())' → logprob: -12.498513221740723
    10. '   ' → logprob: -13.498513221740723

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1443587839603424
    2. 'items' → logprob: -3.6443588733673096
    3. ' pot' → logprob: -4.1443586349487305
    4. 'player' → logprob: -4.7693586349487305
    5. ' items' → logprob: -4.8943586349487305
    6. ' potion' → logprob: -4.8943586349487305
    7. 'p' → logprob: -5.7068586349487305
    8. 'item' → logprob: -5.8318586349487305
    9. 'inventory' → logprob: -5.8318586349487305
    10. 'loot' → logprob: -6.2068586349487305

Token 139: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' (adapté à ' pot') → logprob: -0.36920616030693054
    2. 'items' → logprob: -3.369206190109253
    3. 'player' → logprob: -3.619206190109253
    4. 'p' → logprob: -3.619206190109253
    5. 'pos' → logprob: -3.619206190109253
    6. 'path' → logprob: -3.869206190109253
    7. 'players' → logprob: -3.869206190109253
    8. ' pot' → logprob: -4.369205951690674
    9. 'port' → logprob: -4.369205951690674
    10. 'party' → logprob: -4.369205951690674

Token 140: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.002682064427062869
    2. 'ion' → logprob: -6.002682209014893
    3. 's' → logprob: -8.752681732177734
    4. 'ency' → logprob: -11.377681732177734
    5. '   ' → logprob: -12.127681732177734
    6. '=' → logprob: -12.252681732177734
    7. 'ents' → logprob: -12.377681732177734
    8. 'encies' → logprob: -12.877681732177734
    9. 'entials' → logprob: -13.002681732177734
    10. 'items' → logprob: -13.002681732177734

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34855303168296814
    2. '=' → logprob: -1.2235530614852905
    3. '_' → logprob: -9.473552703857422
    4. '=[]' → logprob: -11.973552703857422
    5. '<|end|>' → logprob: -11.973552703857422
    6. 's' → logprob: -12.223552703857422
    7. ')' → logprob: -12.848552703857422
    8. ',' → logprob: -13.598552703857422
    9. '＝' → logprob: -13.848552703857422
    10. '[' → logprob: -13.973552703857422

Token 142: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6415945291519165
    2. ' {}' → logprob: -0.8915945291519165
    3. ' []' → logprob: -3.141594409942627
    4. '[]' → logprob: -4.141594409942627
    5. 'set' → logprob: -6.266594409942627
    6. ' set' → logprob: -7.141594409942627
    7. ' [' → logprob: -7.641594409942627
    8. 'list' → logprob: -8.266594886779785
    9. ' {}
' → logprob: -8.516594886779785
    10. 'dict' → logprob: -8.766594886779785

Token 143: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7268014550209045
    2. 'tuple' → logprob: -1.6018013954162598
    3. 'list' → logprob: -1.7268013954162598
    4. 'input' → logprob: -2.3518013954162598
    5. '0' → logprob: -3.6018013954162598
    6. '(int' → logprob: -5.35180139541626
    7. '[]' → logprob: -5.60180139541626
    8. '[int' → logprob: -5.97680139541626
    9. '{}' → logprob: -7.22680139541626
    10. '[' → logprob: -7.72680139541626

Token 144: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.742448022123426e-05
    2. '(' → logprob: -10.750067710876465
    3. '(x' → logprob: -10.875067710876465
    4. 'input' → logprob: -11.250067710876465
    5. '()' → logprob: -11.750067710876465
    6. '(i' → logprob: -13.000067710876465
    7. '()]' → logprob: -13.250067710876465
    8. '(
' → logprob: -13.625067710876465
    9. ']' → logprob: -15.000067710876465
    10. '
' → logprob: -16.50006675720215

Token 145: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007590038585476577
    2. '()' → logprob: -7.250759124755859
    3. '()]' → logprob: -10.75075912475586
    4. '())
' → logprob: -10.87575912475586
    5. ')' → logprob: -12.62575912475586
    6. '()
' → logprob: -13.37575912475586
    7. ' ())' → logprob: -13.50075912475586
    8. '()),' → logprob: -13.75075912475586
    9. '()))' → logprob: -14.37575912475586
    10. '()`' → logprob: -15.37575912475586

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2275402992963791
    2. 'for' → logprob: -1.8525402545928955
    3. '()' → logprob: -3.6025402545928955
    4. ')' → logprob: -3.9775402545928955
    5. ']' → logprob: -7.977540493011475
    6. ')]' → logprob: -9.102540016174316
    7. '	for' → logprob: -9.227540016174316
    8. '   ' → logprob: -9.227540016174316
    9. '()]' → logprob: -10.602540016174316
    10. ' ' → logprob: -12.977540016174316

Token 147: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.217234268784523
    2. ' range' → logprob: -1.7172342538833618
    3. 'range' → logprob: -4.217234134674072
    4. ' _' → logprob: -7.342234134674072
    5. '_range' → logprob: -8.09223461151123
    6. ' in' → logprob: -12.96723461151123
    7. '(range' → logprob: -14.21723461151123
    8. 'in' → logprob: -15.71723461151123
    9. '_in' → logprob: -15.84223461151123
    10. '	range' → logprob: -16.342233657836914

Token 148: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.23917081207037e-05
    2. ' range' → logprob: -10.125041961669922
    3. '(range' → logprob: -13.125041961669922
    4. '   ' → logprob: -16.000041961669922
    5. '	range' → logprob: -17.250041961669922
    6. '_range' → logprob: -17.750041961669922
    7. '
' → logprob: -18.125041961669922
    8. 'in' → logprob: -18.375041961669922
    9. '```' → logprob: -18.875041961669922
    10. '  ' → logprob: -19.125041961669922

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615161292254925
    2. ' range' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.883615493774414
    4. ' ' → logprob: -16.258615493774414
    5. '	range' → logprob: -16.258615493774414
    6. '(range' → logprob: -16.383615493774414
    7. '  ' → logprob: -16.633615493774414
    8. 'rang' → logprob: -17.633615493774414
    9. '
' → logprob: -18.633615493774414
    10. '    ' → logprob: -18.758615493774414

Token 150: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0005120449932292104
    2. ' range' → logprob: -8.12551212310791
    3. 'range' → logprob: -9.25051212310791
    4. '(range' → logprob: -9.25051212310791
    5. '(' → logprob: -11.37551212310791
    6. ' (' → logprob: -11.75051212310791
    7. 'P' → logprob: -13.00051212310791
    8. '   ' → logprob: -14.12551212310791
    9. 'Range' → logprob: -14.50051212310791
    10. '((' → logprob: -15.25051212310791

Token 151: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.18011903762817383
    2. ']' → logprob: -1.9301190376281738
    3. ')' → logprob: -3.930119037628174
    4. '])' → logprob: -10.555118560791016
    5. '   ' → logprob: -11.930118560791016
    6. ' ]' → logprob: -12.180118560791016
    7. '])]' → logprob: -12.180118560791016
    8. ']
' → logprob: -12.680118560791016
    9. ' )' → logprob: -13.055118560791016
    10. ')])' → logprob: -13.305118560791016

Token 152: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.181609645485878
    2. 'i' → logprob: -3.431609630584717
    3. '   ' → logprob: -3.681609630584717
    4. ' ' → logprob: -4.181609630584717
    5. 'd' → logprob: -4.431609630584717
    6. ' 
' → logprob: -4.431609630584717
    7. '<|end|>' → logprob: -4.681609630584717
    8. ' #' → logprob: -5.181609630584717
    9. '
' → logprob: -5.181609630584717
    10. 'x' → logprob: -5.306609630584717

Token 153: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0512821674346924
    2. 'player' → logprob: -1.4262821674346924
    3. '#' (adapté à ' #') → logprob: -1.9262821674346924
    4. 'x' → logprob: -2.4262821674346924
    5. 'hp' → logprob: -3.1762821674346924
    6. 'HP' → logprob: -3.8012821674346924
    7. 'start' → logprob: -4.051281929016113
    8. 'current' → logprob: -4.051281929016113
    9. 'cur' → logprob: -4.676281929016113
    10. 'position' → logprob: -4.926281929016113

Token 154: ' Starting' (ID: 46049)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22707751393318176
    2. 'pos' → logprob: -2.4770774841308594
    3. 'hp' → logprob: -3.7270774841308594
    4. 'start' → logprob: -3.9770774841308594
    5. 'player' → logprob: -3.9770774841308594
    6. 'current' → logprob: -4.227077484130859
    7. 'from' → logprob: -5.227077484130859
    8. ' #' → logprob: -5.477077484130859
    9. 'cur' → logprob: -5.602077484130859
    10. 'for' → logprob: -5.602077484130859

Token 155: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.2948201596736908
    2. '_' → logprob: -2.7948200702667236
    3. '_hp' → logprob: -2.7948200702667236
    4. 'pos' → logprob: -3.0448200702667236
    5. 'HP' → logprob: -3.5448200702667236
    6. '_position' → logprob: -4.044820308685303
    7. '_row' → logprob: -4.169820308685303
    8. '_x' → logprob: -5.169820308685303
    9. '_point' → logprob: -5.544820308685303
    10. 'row' → logprob: -5.669820308685303

Token 156: ' and' (ID: 326)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2950772047042847
    2. '<|end|>' → logprob: -1.2950772047042847
    3. 'x' → logprob: -1.7950772047042847
    4. 'row' → logprob: -2.670077323913574
    5. '
' → logprob: -3.170077323913574
    6. ':' → logprob: -3.545077323913574
    7. ' for' → logprob: -3.670077323913574
    8. 'for' → logprob: -4.045077323913574
    9. ' pos' → logprob: -4.420077323913574
    10. 'i' → logprob: -4.670077323913574

Token 157: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.2324448823928833
    2. '#' → logprob: -1.7324448823928833
    3. 'current' → logprob: -2.6074447631835938
    4. 'found' → logprob: -2.7324447631835938
    5. ' HP' → logprob: -2.7324447631835938
    6. 'direction' → logprob: -3.1074447631835938
    7. 'status' → logprob: -3.3574447631835938
    8. 'for' → logprob: -3.4824447631835938
    9. 'player' → logprob: -3.4824447631835938
    10. 'hp' → logprob: -3.6074447631835938

Token 158: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3336048126220703
    2. '   ' → logprob: -1.8336048126220703
    3. 'r' → logprob: -2.3336048126220703
    4. 'x' → logprob: -2.4586048126220703
    5. ' for' → logprob: -2.5836048126220703
    6. '
' → logprob: -3.0836048126220703
    7. 'i' → logprob: -3.2086048126220703
    8. 'row' → logprob: -3.2086048126220703
    9. 'for' → logprob: -3.2086048126220703
    10. 'y' → logprob: -3.3336048126220703

Token 159: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' x' (ID: 1215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.5207490921020508
    2. 'r' → logprob: -2.395749092102051
    3. 'x' (adapté à ' x') → logprob: -2.395749092102051
    4. ' pos' → logprob: -2.520749092102051
    5. 'row' → logprob: -2.645749092102051
    6. 'start' → logprob: -2.770749092102051
    7. 'y' → logprob: -2.895749092102051
    8. ' for' → logprob: -3.020749092102051
    9. 'player' → logprob: -3.145749092102051
    10. ' start' → logprob: -3.145749092102051

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011316720396280289
    2. ',y' → logprob: -4.886316776275635
    3. ' =' → logprob: -6.011316776275635
    4. '=' → logprob: -7.011316776275635
    5. ' ,' → logprob: -8.261316299438477
    6. 'y' → logprob: -10.011316299438477
    7. '<|end|>' → logprob: -11.136316299438477
    8. ',x' → logprob: -11.886316299438477
    9. '=y' → logprob: -12.011316299438477
    10. ' y' → logprob: -12.011316299438477

Token 162: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08910751342773438
    2. ' y' → logprob: -2.4641075134277344
    3. '0' → logprob: -8.839107513427734
    4. '<|end|>' → logprob: -11.839107513427734
    5. '=' → logprob: -12.214107513427734
    6. ' =' → logprob: -12.339107513427734
    7. ' ' → logprob: -12.839107513427734
    8. '	y' → logprob: -13.214107513427734
    9. ',' → logprob: -14.589107513427734
    10. ',y' → logprob: -14.964107513427734

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02172483317553997
    2. '=' → logprob: -4.021724700927734
    3. ',' → logprob: -5.646724700927734
    4. ')' → logprob: -10.646724700927734
    5. '<|end|>' → logprob: -11.896724700927734
    6. ' ,' → logprob: -12.396724700927734
    7. ' ' → logprob: -13.521724700927734
    8. ' =
' → logprob: -14.521724700927734
    9. ' =)' → logprob: -14.646724700927734
    10. '<|end|>' → logprob: -15.021724700927734

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00218583014793694
    2. '-' → logprob: -6.627185821533203
    3. ' ' → logprob: -8.127185821533203
    4. 'next' → logprob: -8.752185821533203
    5. 'c' → logprob: -8.877185821533203
    6. '[' → logprob: -9.502185821533203
    7. '(' → logprob: -9.627185821533203
    8. ' -' → logprob: -10.377185821533203
    9. ' next' → logprob: -11.002185821533203
    10. '1' → logprob: -11.002185821533203

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006080791936255991
    2. '-' → logprob: -8.125608444213867
    3. 'next' → logprob: -9.375608444213867
    4. '[' → logprob: -9.750608444213867
    5. '(' → logprob: -10.000608444213867
    6. ' ' → logprob: -10.250608444213867
    7. 'R' → logprob: -11.000608444213867
    8. '1' → logprob: -11.250608444213867
    9. 'map' → logprob: -11.375608444213867
    10. 'c' → logprob: -11.625608444213867

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006738223135471344
    2. '<|end|>' → logprob: -5.131738185882568
    3. ' ,' → logprob: -7.256738185882568
    4. '<|end|>' → logprob: -9.756738662719727
    5. ' ' → logprob: -10.881738662719727
    6. '0' → logprob: -11.631738662719727
    7. '
' → logprob: -12.256738662719727
    8. ',y' → logprob: -12.756738662719727
    9. '‌,' → logprob: -13.131738662719727
    10. ',
' → logprob: -13.256738662719727

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462154159322381
    2. ' ' → logprob: -5.379621505737305
    3. '<|end|>' → logprob: -14.254621505737305
    4. 'C' → logprob: -15.317121505737305
    5. '   ' → logprob: -16.067121505737305
    6. '    ' → logprob: -16.567121505737305
    7. '  ' → logprob: -16.629621505737305
    8. ' C' → logprob: -16.754621505737305
    9. '۰' → logprob: -17.379621505737305
    10. 'R' → logprob: -17.379621505737305

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.750025749206543
    3. 'C' → logprob: -12.875025749206543
    4. 'R' → logprob: -14.437525749206543
    5. '   ' → logprob: -14.625025749206543
    6. '    ' → logprob: -15.687525749206543
    7. 'c' → logprob: -16.06252670288086
    8. '  ' → logprob: -16.25002670288086
    9. '-' → logprob: -16.81252670288086
    10. '1' → logprob: -16.87502670288086

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2750636339187622
    2. '<|end|>' → logprob: -2.0250635147094727
    3. '   ' → logprob: -3.0250635147094727
    4. ' ' → logprob: -4.025063514709473
    5. ',' → logprob: -4.400063514709473
    6. ' 
' → logprob: -4.525063514709473
    7. '#' → logprob: -4.900063514709473
    8. '    
' → logprob: -5.775063514709473
    9. ' while' → logprob: -6.775063514709473
    10. '    ' → logprob: -7.025063514709473

Token 170: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11595853418111801
    2. ' 
' → logprob: -3.4909584522247314
    3. '<|end|>' → logprob: -3.4909584522247314
    4. '   ' → logprob: -3.8659584522247314
    5. ' ' → logprob: -4.9909586906433105
    6. ',' → logprob: -5.2409586906433105
    7. '#' → logprob: -5.4909586906433105
    8. '    
' → logprob: -5.4909586906433105
    9. '  
' → logprob: -6.4909586906433105
    10. '\n' → logprob: -6.9909586906433105

Token 171: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' (adapté à ' HP') → logprob: -0.6523098945617676
    2. ' HP' → logprob: -1.9023098945617676
    3. 'hp' → logprob: -2.1523098945617676
    4. ' hp' → logprob: -2.5273098945617676
    5. 'current' → logprob: -2.9023098945617676
    6. ' current' → logprob: -3.5273098945617676
    7. 'H' → logprob: -4.527309894561768
    8. ' ' → logprob: -5.152309894561768
    9. '   ' → logprob: -5.277309894561768
    10. 'h' → logprob: -5.652309894561768

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054363179951906204
    2. ' =' → logprob: -3.054363250732422
    3. '_' → logprob: -5.179363250732422
    4. '_current' → logprob: -9.304363250732422
    5. '_=' → logprob: -10.804363250732422
    6. ',' → logprob: -12.179363250732422
    7. '_init' → logprob: -12.679363250732422
    8. '=_' → logprob: -12.929363250732422
    9. ' ' → logprob: -13.929363250732422
    10. ' _' → logprob: -14.554363250732422

Token 173: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0021938022691756487
    2. ' HP' → logprob: -6.127193927764893
    3. '_HP' → logprob: -11.877193450927734
    4. '   ' → logprob: -13.502193450927734
    5. ' ' → logprob: -15.752193450927734
    6. 'PH' → logprob: -16.627193450927734
    7. '_hp' → logprob: -16.877193450927734
    8. '  ' → logprob: -16.877193450927734
    9. ' ' → logprob: -17.002193450927734
    10. 'H' → logprob: -17.752193450927734

Token 174: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.22628019750118256
    2. '_max' → logprob: -1.6012802124023438
    3. '_' → logprob: -7.351280212402344
    4. 'max' → logprob: -8.726280212402344
    5. '_initial' → logprob: -11.226280212402344
    6. '_ini' → logprob: -11.351280212402344
    7. ' _' → logprob: -11.601280212402344
    8. 'init' → logprob: -11.976280212402344
    9. '_in' → logprob: -12.351280212402344
    10. '_min' → logprob: -12.601280212402344

Token 175: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.436015784740448
    2. '<|end|>' → logprob: -1.6860158443450928
    3. '   ' → logprob: -2.0610158443450928
    4. ',' → logprob: -4.311015605926514
    5. '    
' → logprob: -5.061015605926514
    6. ' while' → logprob: -5.811015605926514
    7. 'while' → logprob: -5.936015605926514
    8. '\n' → logprob: -6.061015605926514
    9. '<|end|>' → logprob: -6.061015605926514
    10. ')' → logprob: -6.436015605926514

Token 176: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' #' (ID: 1069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2800140082836151
    2. 'for' → logprob: -2.0300140380859375
    3. 'direction' → logprob: -2.5300140380859375
    4. 'dir' → logprob: -4.1550140380859375
    5. 'dx' → logprob: -4.2800140380859375
    6. 'dirs' → logprob: -6.2800140380859375
    7. 'move' → logprob: -7.2800140380859375
    8. 'd' → logprob: -7.6550140380859375
    9. 'damage' → logprob: -8.655014038085938
    10. 'moves' → logprob: -8.905014038085938

Token 178: ' For' (ID: 2214)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.12072643637657166
    2. 'dx' → logprob: -3.6207263469696045
    3. 'direction' → logprob: -3.6207263469696045
    4. 'for' → logprob: -3.7457263469696045
    5. '#' → logprob: -4.745726585388184
    6. 'dir' → logprob: -4.995726585388184
    7. ' directions' → logprob: -5.120726585388184
    8. 'dirs' → logprob: -5.370726585388184
    9. 'from' → logprob: -5.995726585388184
    10. 'move' → logprob: -6.245726585388184

Token 179: ' movement' (ID: 12772)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.6980493664741516
    2. ' d' → logprob: -1.0730493068695068
    3. ' direction' → logprob: -2.323049306869507
    4. ' directions' → logprob: -4.198049545288086
    5. ' _' → logprob: -4.323049545288086
    6. 'dx' → logprob: -5.198049545288086
    7. 'direction' → logprob: -5.198049545288086
    8. ' dir' → logprob: -5.573049545288086
    9. 'd' → logprob: -5.823049545288086
    10. ' i' → logprob: -5.948049545288086

Token 180: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.40921708941459656
    2. 'dire' → logprob: -1.284217119216919
    3. 'dx' → logprob: -4.15921688079834
    4. 'direction' → logprob: -4.65921688079834
    5. 'moves' → logprob: -4.78421688079834
    6. ' dx' → logprob: -4.90921688079834
    7. ',' → logprob: -5.65921688079834
    8. ' direction' → logprob: -5.90921688079834
    9. '<|end|>' → logprob: -6.15921688079834
    10. 'delta' → logprob: -6.40921688079834

Token 181: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.20200251042842865
    2. ' directions' → logprob: -2.32700252532959
    3. '   ' → logprob: -2.70200252532959
    4. 'direction' → logprob: -4.70200252532959
    5. 'dir' → logprob: -6.07700252532959
    6. 'd' → logprob: -6.20200252532959
    7. 'dirs' → logprob: -6.57700252532959
    8. 'moves' → logprob: -6.82700252532959
    9. ':' → logprob: -7.45200252532959
    10. ' direction' → logprob: -7.70200252532959

Token 182: '   ' (ID: 271)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.3383084535598755
    2. 'dire' → logprob: -1.7133084535598755
    3. '   ' → logprob: -2.463308334350586
    4. ' moves' → logprob: -4.963308334350586
    5. 'moves' → logprob: -5.713308334350586
    6. 'dirs' → logprob: -6.088308334350586
    7. ' direction' → logprob: -6.088308334350586
    8. ' dir' → logprob: -6.338308334350586
    9. ' dirs' → logprob: -6.338308334350586
    10. 'direction' → logprob: -6.838308334350586

Token 183: ' dx' (ID: 29472)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.14904120564460754
    2. ' directions' → logprob: -2.024041175842285
    3. 'dirs' → logprob: -6.399041175842285
    4. 'direction' → logprob: -6.649041175842285
    5. 'moves' → logprob: -6.899041175842285
    6. 'dir' → logprob: -7.399041175842285
    7. ' moves' → logprob: -7.399041175842285
    8. ' direction' → logprob: -7.649041175842285
    9. 'dx' (adapté à ' dx') → logprob: -8.149041175842285
    10. ' dirs' → logprob: -8.899041175842285

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20158125460147858
    2. '=' → logprob: -1.7015812397003174
    3. ',' → logprob: -9.576581001281738
    4. 's' → logprob: -10.951581001281738
    5. 'dy' → logprob: -10.951581001281738
    6. '=[' → logprob: -11.076581001281738
    7. '={'' → logprob: -11.201581001281738
    8. '=
' → logprob: -12.076581001281738
    9. '[' → logprob: -12.201581001281738
    10. ' =
' → logprob: -12.451581001281738

Token 185: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.7701877951622009
    2. '[' → logprob: -0.8951877951622009
    3. '{' → logprob: -2.5201878547668457
    4. '{"' → logprob: -3.1451878547668457
    5. ' {'' → logprob: -6.145187854766846
    6. ' [' → logprob: -6.895187854766846
    7. '{
' → logprob: -6.895187854766846
    8. '[-' → logprob: -7.520187854766846
    9. '0' → logprob: -8.770187377929688
    10. '{-' → logprob: -9.770187377929688

Token 186: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.24440795183181763
    2. 'L' → logprob: -2.119407892227173
    3. 'R' → logprob: -2.494407892227173
    4. 'D' → logprob: -4.994408130645752
    5. 'r' → logprob: -6.494408130645752
    6. 'l' → logprob: -6.869408130645752
    7. 'u' → logprob: -6.869408130645752
    8. 'N' → logprob: -6.869408130645752
    9. 'd' → logprob: -7.119408130645752
    10. 'W' → logprob: -7.119408130645752

Token 187: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0008068907191045582
    2. ''' → logprob: -7.12580680847168
    3. '':'' → logprob: -14.12580680847168
    4. ' ':' → logprob: -14.12580680847168
    5. ':' → logprob: -14.37580680847168
    6. '":' → logprob: -15.62580680847168
    7. '':[' → logprob: -16.12580680847168
    8. '-' → logprob: -17.25080680847168
    9. ':'' → logprob: -18.00080680847168
    10. '’:' → logprob: -18.12580680847168

Token 188: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011737978784367442
    2. ' -' → logprob: -6.751173973083496
    3. '1' → logprob: -13.126173973083496
    4. '0' → logprob: -13.626173973083496
    5. '   ' → logprob: -15.751173973083496
    6. ' ' → logprob: -16.25117301940918
    7. '	' → logprob: -17.62617301940918
    8. '
' → logprob: -18.06367301940918
    9. '-
' → logprob: -18.12617301940918
    10. '```' → logprob: -18.25117301940918

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '-' → logprob: -18.875001907348633
    5. '```' → logprob: -19.750001907348633
    6. '
' → logprob: -20.000001907348633
    7. '<|end|>' → logprob: -20.187501907348633
    8. '１' → logprob: -20.437501907348633
    9. '0' → logprob: -20.625001907348633
    10. '

' → logprob: -20.687501907348633

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000377049611415714
    2. ','' → logprob: -8.12537670135498
    3. ' ,' → logprob: -9.50037670135498
    4. ',y' → logprob: -13.12537670135498
    5. '',' → logprob: -13.25037670135498
    6. ',
' → logprob: -13.37537670135498
    7. ' ,'' → logprob: -15.75037670135498
    8. ',x' → logprob: -15.87537670135498
    9. ',"' → logprob: -15.87537670135498
    10. '   ' → logprob: -16.250377655029297

Token 191: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -1.0513755083084106
    2. ''' → logprob: -1.1763755083084106
    3. ' '' → logprob: -1.3013755083084106
    4. ''U' → logprob: -3.301375389099121
    5. ''D' → logprob: -4.176375389099121
    6. ''x' → logprob: -4.551375389099121
    7. ''d' → logprob: -5.426375389099121
    8. ''u' → logprob: -7.051375389099121
    9. ''S' → logprob: -7.676375389099121
    10. ''C' → logprob: -7.926375389099121

Token 192: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002694416616577655
    2. 'R' → logprob: -8.750269889831543
    3. ''D' → logprob: -9.375269889831543
    4. ' D' → logprob: -11.250269889831543
    5. ''' → logprob: -11.625269889831543
    6. '	D' → logprob: -13.875269889831543
    7. 'L' → logprob: -13.875269889831543
    8. '"D' → logprob: -14.875269889831543
    9. 'd' → logprob: -15.375269889831543
    10. 'U' → logprob: -15.625269889831543

Token 193: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004486377350986004
    2. ':' → logprob: -5.754486560821533
    3. '',' → logprob: -7.879486560821533
    4. ':'' → logprob: -8.004486083984375
    5. '':'' → logprob: -8.254486083984375
    6. ','' → logprob: -8.879486083984375
    7. ''' → logprob: -9.254486083984375
    8. ',' → logprob: -9.504486083984375
    9. ':',' → logprob: -11.504486083984375
    10. ' :' → logprob: -12.379486083984375

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.750060081481934
    3. '+' → logprob: -13.250060081481934
    4. '
' → logprob: -17.12506103515625
    5. '   ' → logprob: -17.75006103515625
    6. ''' → logprob: -17.87506103515625
    7. '

' → logprob: -18.12506103515625
    8. ' +' → logprob: -18.87506103515625
    9. ''+' → logprob: -19.25006103515625
    10. '  ' → logprob: -19.37506103515625

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015407454338856041
    2. ' ,' → logprob: -9.375154495239258
    3. ','' → logprob: -9.625154495239258
    4. '',' → logprob: -13.625154495239258
    5. ',
' → logprob: -14.250154495239258
    6. '   ' → logprob: -14.500154495239258
    7. ',y' → logprob: -15.375154495239258
    8. '}' → logprob: -15.625154495239258
    9. ' ,'' → logprob: -15.750154495239258
    10. ' ' → logprob: -17.750154495239258

Token 196: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5390169024467468
    2. ''' → logprob: -1.2890169620513916
    3. ''U' → logprob: -2.1640169620513916
    4. ''S' → logprob: -4.6640167236328125
    5. ''C' → logprob: -5.0390167236328125
    6. '0' → logprob: -5.2890167236328125
    7. ''A' → logprob: -6.7890167236328125
    8. ''y' → logprob: -6.9140167236328125
    9. ''D' → logprob: -7.2890167236328125
    10. '   ' → logprob: -7.2890167236328125

Token 197: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002380761317908764
    2. ''' → logprob: -6.627380847930908
    3. ''U' → logprob: -7.377380847930908
    4. ' ' → logprob: -7.877380847930908
    5. 'U' → logprob: -10.87738037109375
    6. ' '' → logprob: -11.87738037109375
    7. ''S' → logprob: -12.00238037109375
    8. '   ' → logprob: -12.25238037109375
    9. ''u' → logprob: -12.75238037109375
    10. '  ' → logprob: -13.00238037109375

Token 198: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.05102686956524849
    2. '':'' → logprob: -4.176026821136475
    3. '',' → logprob: -4.301026821136475
    4. ':' → logprob: -4.301026821136475
    5. ',' → logprob: -5.551026821136475
    6. ''' → logprob: -6.801026821136475
    7. ','' → logprob: -6.926026821136475
    8. '','' → logprob: -7.426026821136475
    9. ':'' → logprob: -8.301027297973633
    10. '<|end|>' → logprob: -8.426027297973633

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '-' → logprob: -15.375109672546387
    4. '<|end|>' → logprob: -17.12510871887207
    5. '
' → logprob: -17.50010871887207
    6. '  ' → logprob: -17.87510871887207
    7. '   ' → logprob: -18.00010871887207
    8. '۰' → logprob: -18.50010871887207
    9. '```' → logprob: -18.81260871887207
    10. '>' → logprob: -19.12510871887207

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.813969957875088e-05
    2. ' ,' → logprob: -10.125067710876465
    3. ','' → logprob: -10.625067710876465
    4. ',
' → logprob: -13.125067710876465
    5. '   ' → logprob: -13.500067710876465
    6. '}' → logprob: -16.37506866455078
    7. '',' → logprob: -16.50006866455078
    8. ' ,'' → logprob: -16.50006866455078
    9. ',y' → logprob: -17.12506866455078
    10. ' ' → logprob: -17.87506866455078

Token 201: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.34068742394447327
    2. ''' → logprob: -1.4656873941421509
    3. 'R' → logprob: -3.7156875133514404
    4. ''r' → logprob: -4.215687274932861
    5. ''y' → logprob: -4.965687274932861
    6. ' ' → logprob: -5.465687274932861
    7. ' R' → logprob: -6.465687274932861
    8. '0' → logprob: -6.590687274932861
    9. '   ' → logprob: -6.590687274932861
    10. ''s' → logprob: -6.965687274932861

Token 202: 'R' (ID: 49)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.045069463551044464
    2. '0' → logprob: -3.295069456100464
    3. '-' → logprob: -5.545069694519043
    4. ' ' → logprob: -5.795069694519043
    5. '   ' → logprob: -11.045069694519043
    6. '  ' → logprob: -11.170069694519043
    7. ' -' → logprob: -11.170069694519043
    8. '+' → logprob: -12.920069694519043
    9. '```' → logprob: -13.045069694519043
    10. '<|end|>' → logprob: -13.045069694519043

Token 203: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.698698704596609e-05
    2. '':' → logprob: -9.500097274780273
    3. '1' → logprob: -11.375097274780273
    4. ' :' → logprob: -11.875097274780273
    5. '0' → logprob: -13.250097274780273
    6. '}:' → logprob: -13.625097274780273
    7. '`:' → logprob: -16.125097274780273
    8. '```' → logprob: -16.125097274780273
    9. '}' → logprob: -16.375097274780273
    10. '2' → logprob: -16.375097274780273

Token 204: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.625011444091797
    4. '+' → logprob: -19.750011444091797
    5. '0' → logprob: -19.750011444091797
    6. '```' → logprob: -20.000011444091797
    7. '  ' → logprob: -20.500011444091797
    8. '-' → logprob: -21.000011444091797
    9. '
' → logprob: -22.000011444091797
    10. '    ' → logprob: -22.375011444091797

Token 205: '}
' (ID: 739)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03838478773832321
    2. '}' → logprob: -3.2883846759796143
    3. ','' → logprob: -8.038384437561035
    4. '   ' → logprob: -11.913384437561035
    5. ',
' → logprob: -11.913384437561035
    6. ' ,' → logprob: -12.413384437561035
    7. '}
' → logprob: -13.538384437561035
    8. ' }' → logprob: -14.163384437561035
    9. ',y' → logprob: -14.788384437561035
    10. ')' → logprob: -15.788384437561035

Token 206: '   ' (ID: 271)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.003440176835283637
    2. '   ' → logprob: -5.7534403800964355
    3. ' dy' → logprob: -8.253439903259277
    4. ',' → logprob: -13.378439903259277
    5. '.dy' → logprob: -14.753439903259277
    6. 'Dy' → logprob: -15.878439903259277
    7. '  ' → logprob: -17.753440856933594
    8. '	d' → logprob: -17.753440856933594
    9. '    ' → logprob: -18.378440856933594
    10. '```' → logprob: -18.503440856933594

Token 207: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -4.572941179503687e-05
    2. ' dy' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.125045776367188
    4. '.dy' → logprob: -18.875045776367188
    5. '```' → logprob: -19.625045776367188
    6. 'Dy' → logprob: -19.625045776367188
    7. '  ' → logprob: -20.000045776367188
    8. 'd' → logprob: -20.500045776367188
    9. ' ' → logprob: -20.625045776367188
    10. '    ' → logprob: -20.875045776367188

Token 208: ' =' (ID: 314)
  Prédit: '={''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={'' → logprob: -0.3168962597846985
    2. ' =' → logprob: -1.6918962001800537
    3. '=' → logprob: -2.4418962001800537
    4. '{'' → logprob: -8.316896438598633
    5. '={' → logprob: -8.816896438598633
    6. ' ={' → logprob: -11.691896438598633
    7. '={
' → logprob: -11.816896438598633
    8. '='' → logprob: -12.441896438598633
    9. '<|end|>' → logprob: -12.441896438598633
    10. '={"' → logprob: -12.691896438598633

Token 209: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.0003032881941180676
    2. ' {'' → logprob: -8.125303268432617
    3. '{' → logprob: -12.000303268432617
    4. '{"' → logprob: -14.625303268432617
    5. '['' → logprob: -15.375303268432617
    6. '={'' → logprob: -15.500303268432617
    7. '({'' → logprob: -15.875303268432617
    8. '   ' → logprob: -17.125303268432617
    9. '{
' → logprob: -17.750303268432617
    10. '[' → logprob: -18.375303268432617

Token 210: 'U' (ID: 52)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.46820247173309326
    2. 'L' → logprob: -1.2182024717330933
    3. '-' → logprob: -2.843202590942383
    4. ''' → logprob: -4.843202590942383
    5. ''U' → logprob: -4.843202590942383
    6. '-L' → logprob: -6.218202590942383
    7. ''-' → logprob: -7.218202590942383
    8. '-'' → logprob: -7.968202590942383
    9. ' '' → logprob: -8.218202590942383
    10. '{'' → logprob: -8.343202590942383

Token 211: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014214867725968361
    2. ':' → logprob: -4.264214992523193
    3. ''' → logprob: -10.389214515686035
    4. '0' → logprob: -11.514214515686035
    5. '":' → logprob: -12.389214515686035
    6. '':[' → logprob: -13.264214515686035
    7. '’:' → logprob: -14.139214515686035
    8. '<|end|>' → logprob: -14.139214515686035
    9. '`:' → logprob: -14.514214515686035
    10. '»:' → logprob: -14.764214515686035

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '-' → logprob: -15.000123977661133
    4. '<|end|>' → logprob: -17.750123977661133
    5. '  ' → logprob: -18.250123977661133
    6. '۰' → logprob: -18.375123977661133
    7. '   ' → logprob: -19.000123977661133
    8. ' -' → logprob: -19.062623977661133
    9. '00' → logprob: -19.562623977661133
    10. '```' → logprob: -19.875123977661133

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019526603864505887
    2. ','' → logprob: -6.251952648162842
    3. ' ,' → logprob: -11.126953125
    4. ',R' → logprob: -12.251953125
    5. '',' → logprob: -13.751953125
    6. ''' → logprob: -13.876953125
    7. ' ,'' → logprob: -14.001953125
    8. ',L' → logprob: -14.501953125
    9. ',
' → logprob: -14.626953125
    10. '   ' → logprob: -15.751953125

Token 214: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006354853976517916
    2. ' ' → logprob: -5.131354808807373
    3. ''' → logprob: -8.006355285644531
    4. ' '' → logprob: -9.506355285644531
    5. '-' → logprob: -12.131355285644531
    6. 'R' → logprob: -12.506355285644531
    7. '{'' → logprob: -13.131355285644531
    8. '   ' → logprob: -13.131355285644531
    9. ''y' → logprob: -14.256355285644531
    10. '  ' → logprob: -14.256355285644531

Token 215: 'D' (ID: 35)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760091543197632
    2. '1' → logprob: -0.8260091543197632
    3. ' -' → logprob: -9.951008796691895
    4. ' ' → logprob: -10.826008796691895
    5. '{'' → logprob: -14.451008796691895
    6. ''' → logprob: -14.701008796691895
    7. '   ' → logprob: -15.076008796691895
    8. 'R' → logprob: -15.076008796691895
    9. '<|end|>' → logprob: -15.576008796691895
    10. '+' → logprob: -16.32600975036621

Token 216: '':' (ID: 2337)
  Prédit: ':-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.6423815488815308
    2. '-' → logprob: -1.6423815488815308
    3. ':' → logprob: -1.6423815488815308
    4. '1' → logprob: -2.8923816680908203
    5. '':' → logprob: -3.5173816680908203
    6. ''-' → logprob: -6.64238166809082
    7. ',-' → logprob: -8.89238166809082
    8. ''' → logprob: -9.14238166809082
    9. ' -' → logprob: -9.26738166809082
    10. ' ' → logprob: -10.14238166809082

Token 217: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -11.875007629394531
    3. ' -' → logprob: -14.000007629394531
    4. '{-' → logprob: -19.00000762939453
    5. '{'' → logprob: -19.50000762939453
    6. '<|end|>' → logprob: -20.12500762939453
    7. '```' → logprob: -20.12500762939453
    8. ' ' → logprob: -20.37500762939453
    9. '−' → logprob: -21.25000762939453
    10. '   ' → logprob: -21.37500762939453

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006771022453904152
    2. ','' → logprob: -5.006771087646484
    3. ' ,' → logprob: -10.506771087646484
    4. ',L' → logprob: -12.006771087646484
    5. ''L' → logprob: -12.381771087646484
    6. ' ,'' → logprob: -12.506771087646484
    7. ''' → logprob: -12.631771087646484
    8. '',' → logprob: -12.881771087646484
    9. '   ' → logprob: -13.006771087646484
    10. ',R' → logprob: -13.256771087646484

Token 219: ' '' (ID: 461)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030065637081861496
    2. '1' → logprob: -3.5300655364990234
    3. ' -' → logprob: -8.155065536499023
    4. ' ' → logprob: -11.030065536499023
    5. '{'' → logprob: -11.530065536499023
    6. '   ' → logprob: -14.155065536499023
    7. ''' → logprob: -14.405065536499023
    8. '{-' → logprob: -15.405065536499023
    9. ' {'' → logprob: -16.030065536499023
    10. '{
' → logprob: -16.280065536499023

Token 220: 'L' (ID: 43)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.386901319026947
    2. '-' → logprob: -1.1369013786315918
    3. ' -' → logprob: -10.636900901794434
    4. ' ' → logprob: -12.261900901794434
    5. '```' → logprob: -14.261900901794434
    6. 'L' → logprob: -15.761900901794434
    7. '   ' → logprob: -15.761900901794434
    8. '<|end|>' → logprob: -16.01190185546875
    9. '>' → logprob: -16.26190185546875
    10. '{'' → logprob: -16.26190185546875

Token 221: '':' (ID: 2337)
  Prédit: ':-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.0014077324885874987
    2. '-' → logprob: -7.001407623291016
    3. ':' → logprob: -7.626407623291016
    4. '':' → logprob: -12.626407623291016
    5. '):-' → logprob: -12.751407623291016
    6. '1' → logprob: -13.501407623291016
    7. ''-' → logprob: -14.501407623291016
    8. ':'' → logprob: -14.876407623291016
    9. ' :-' → logprob: -16.251407623291016
    10. ' -' → logprob: -16.376407623291016

Token 222: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.625000953674316
    3. ' -' → logprob: -15.250000953674316
    4. '   ' → logprob: -20.875
    5. '<|end|>' → logprob: -21.75
    6. '‌' → logprob: -22.75
    7. '{-' → logprob: -22.75
    8. '﻿' → logprob: -22.75
    9. '```' → logprob: -22.875
    10. ' ' → logprob: -22.875

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -17.875
    4. '<|end|>' → logprob: -19.125
    5. '```' → logprob: -19.4375
    6. ',' → logprob: -19.625
    7. '+' → logprob: -19.75
    8. '   ' → logprob: -19.875
    9. '১' → logprob: -20.0625
    10. '
' → logprob: -20.1875

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028785800095647573
    2. ','' → logprob: -6.002878665924072
    3. '}' → logprob: -8.002878189086914
    4. ' ,' → logprob: -10.127878189086914
    5. ')' → logprob: -12.002878189086914
    6. ''' → logprob: -12.127878189086914
    7. '',' → logprob: -12.252878189086914
    8. ',
' → logprob: -12.627878189086914
    9. ' ,'' → logprob: -13.002878189086914
    10. ',R' → logprob: -13.127878189086914

Token 225: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. ''' → logprob: -13.750041961669922
    4. '0' → logprob: -15.375041961669922
    5. '+' → logprob: -15.500041961669922
    6. '   ' → logprob: -17.750041961669922
    7. '```' → logprob: -18.375041961669922
    8. ' '' → logprob: -18.625041961669922
    9. '
' → logprob: -19.000041961669922
    10. '  ' → logprob: -19.250041961669922

Token 226: 'R' (ID: 49)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -16.500003814697266
    4. '0' → logprob: -18.625003814697266
    5. '<|end|>' → logprob: -18.625003814697266
    6. '```' → logprob: -19.187503814697266
    7. '   ' → logprob: -19.250003814697266
    8. '
' → logprob: -19.500003814697266
    9. '  ' → logprob: -19.562503814697266
    10. ',' → logprob: -19.812503814697266

Token 227: '':' (ID: 2337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3328017592430115
    2. ':' → logprob: -1.9578018188476562
    3. '':' → logprob: -2.2078018188476562
    4. '}' → logprob: -3.7078018188476562
    5. ''}' → logprob: -5.582801818847656
    6. '0' → logprob: -6.332801818847656
    7. ''' → logprob: -6.832801818847656
    8. '=' → logprob: -8.332801818847656
    9. ' ' → logprob: -9.082801818847656
    10. ''=' → logprob: -9.082801818847656

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -18.0000057220459
    4. '<|end|>' → logprob: -19.6250057220459
    5. '   ' → logprob: -19.7500057220459
    6. '```' → logprob: -20.3750057220459
    7. '  ' → logprob: -20.5000057220459
    8. '>' → logprob: -21.3750057220459
    9. '
' → logprob: -21.5000057220459
    10. '۱' → logprob: -21.5625057220459

Token 229: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.173704271830502e-06
    2. '}

' → logprob: -13.50000286102295
    3. '}
' → logprob: -14.00000286102295
    4. ' }' → logprob: -14.12500286102295
    5. '   ' → logprob: -16.000003814697266
    6. '}`' → logprob: -18.875003814697266
    7. ')' → logprob: -19.250003814697266
    8. '})' → logprob: -20.500003814697266
    9. ''}' → logprob: -20.875003814697266
    10. '}\' → logprob: -20.875003814697266

Token 230: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1663680225610733
    2. ' for' → logprob: -2.166368007659912
    3. '   ' → logprob: -3.291368007659912
    4. 'def' → logprob: -7.416368007659912
    5. 'i' → logprob: -8.41636848449707
    6. 'result' → logprob: -8.91636848449707
    7. 'current' → logprob: -9.79136848449707
    8. 'damage' → logprob: -9.91636848449707
    9. ' i' → logprob: -10.04136848449707
    10. '#' → logprob: -10.41636848449707

Token 231: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002090184949338436
    2. 'def' → logprob: -6.627089977264404
    3. 'result' → logprob: -8.377090454101562
    4. '#' (adapté à ' #') → logprob: -9.627090454101562
    5. 'current' → logprob: -10.002090454101562
    6. 'found' → logprob: -10.002090454101562
    7. 'pos' → logprob: -10.252090454101562
    8. 'damage' → logprob: -10.502090454101562
    9. 'dead' → logprob: -10.627090454101562
    10. 'f' → logprob: -10.627090454101562

Token 232: ' Function' (ID: 11035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08098835498094559
    2. 'def' → logprob: -3.5809884071350098
    3. ' for' → logprob: -4.45598840713501
    4. 'pos' → logprob: -4.70598840713501
    5. 'found' → logprob: -4.83098840713501
    6. '#' → logprob: -5.08098840713501
    7. 'current' → logprob: -5.70598840713501
    8. 'result' → logprob: -6.08098840713501
    9. 'visited' → logprob: -6.33098840713501
    10. 'dead' → logprob: -7.20598840713501

Token 233: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31808626651763916
    2. ' def' → logprob: -1.3180862665176392
    3. ' calculate' → logprob: -6.69308614730835
    4. '_def' → logprob: -7.19308614730835
    5. '<|end|>' → logprob: -7.56808614730835
    6. ' check' → logprob: -7.69308614730835
    7. ' ' → logprob: -8.068086624145508
    8. ' evaluate' → logprob: -8.693086624145508
    9. '   ' → logprob: -8.943086624145508
    10. '_' → logprob: -9.193086624145508

Token 234: ' use' (ID: 1199)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08599843829870224
    2. ' in' → logprob: -2.83599853515625
    3. ' def' → logprob: -4.58599853515625
    4. 'in' → logprob: -4.83599853515625
    5. 'is' → logprob: -6.46099853515625
    6. 'damage' → logprob: -7.58599853515625
    7. ' check' → logprob: -7.83599853515625
    8. 'check' → logprob: -8.08599853515625
    9. 'range' → logprob: -8.33599853515625
    10. ' safe' → logprob: -8.46099853515625

Token 235: ' pot' (ID: 3208)
  Prédit: ' potion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' potion' → logprob: -1.0219225883483887
    2. 'p' → logprob: -1.2719225883483887
    3. 'def' → logprob: -1.2719225883483887
    4. ' pot' → logprob: -3.3969225883483887
    5. 'pot' → logprob: -3.8969225883483887
    6. ' def' → logprob: -4.271922588348389
    7. '_p' → logprob: -4.771922588348389
    8. 'Potion' → logprob: -6.646922588348389
    9. '```' → logprob: -7.646922588348389
    10. ' p' → logprob: -7.646922588348389

Token 236: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.35300275683403015
    2. 'ion' → logprob: -1.6030027866363525
    3. 'def' → logprob: -2.3530027866363525
    4. '   ' → logprob: -7.478002548217773
    5. '```' → logprob: -8.103002548217773
    6. ' def' → logprob: -8.853002548217773
    7. 'otion' → logprob: -11.353002548217773
    8. 'otions' → logprob: -12.228002548217773
    9. '       ' → logprob: -12.728002548217773
    10. 'ione' → logprob: -12.728002548217773

Token 237: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005486906506121159
    2. ':' → logprob: -6.755486965179443
    3. ' def' → logprob: -6.755486965179443
    4. ':def' → logprob: -6.880486965179443
    5. '()' → logprob: -7.130486965179443
    6. '
' → logprob: -8.130486488342285
    7. '()
' → logprob: -8.255486488342285
    8. '(def' → logprob: -8.630486488342285
    9. '   ' → logprob: -8.880486488342285
    10. '(' → logprob: -8.880486488342285

Token 238: ' maximize' (ID: 44207)
  Prédit: 'restore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restore' → logprob: -0.5797626376152039
    2. ' restore' → logprob: -1.3297626972198486
    3. 'recover' → logprob: -3.2047626972198486
    4. 'while' → logprob: -3.4547626972198486
    5. ' heal' → logprob: -3.5797626972198486
    6. 'heal' → logprob: -3.7047626972198486
    7. 'increase' → logprob: -4.3297624588012695
    8. ' while' → logprob: -4.3297624588012695
    9. 'def' → logprob: -4.9547624588012695
    10. ' recover' → logprob: -4.9547624588012695

Token 239: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.08231683820486069
    2. 'he' → logprob: -4.082316875457764
    3. ' recovery' → logprob: -4.332316875457764
    4. ' HP' → logprob: -4.582316875457764
    5. 'def' → logprob: -4.832316875457764
    6. 'current' → logprob: -5.082316875457764
    7. ' the' → logprob: -5.707316875457764
    8. 're' → logprob: -5.707316875457764
    9. 'health' → logprob: -5.832316875457764
    10. ' healing' → logprob: -5.957316875457764

Token 240: ' before' (ID: 2254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011359314667060971
    2. ' def' → logprob: -7.50113582611084
    3. '
' → logprob: -7.75113582611084
    4. '   ' → logprob: -9.25113582611084
    5. ':' → logprob: -11.00113582611084
    6. ':def' → logprob: -11.12613582611084
    7. ')' → logprob: -12.12613582611084
    8. '```' → logprob: -12.50113582611084
    9. '    
' → logprob: -12.87613582611084
    10. '<|end|>' → logprob: -12.87613582611084

Token 241: ' entering' (ID: 25605)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.31278103590011597
    2. ' moving' → logprob: -2.4377810955047607
    3. 'taking' → logprob: -3.5627810955047607
    4. 'enc' → logprob: -4.062780857086182
    5. 'enter' → logprob: -4.062780857086182
    6. 'next' → logprob: -4.562780857086182
    7. 'any' → logprob: -4.687780857086182
    8. 'continu' → logprob: -4.687780857086182
    9. 'damage' → logprob: -4.937780857086182
    10. ' any' → logprob: -4.937780857086182

Token 242: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1228787899017334
    2. 'a' → logprob: -1.2478787899017334
    3. 'the' → logprob: -1.7478787899017334
    4. ' a' → logprob: -2.8728787899017334
    5. ' the' → logprob: -2.9978787899017334
    6. 'any' → logprob: -3.7478787899017334
    7. '#' → logprob: -4.4978790283203125
    8. 'c' → logprob: -4.4978790283203125
    9. 'next' → logprob: -4.4978790283203125
    10. '   ' → logprob: -4.6228790283203125

Token 243: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -1.2383368015289307
    2. 'cell' → logprob: -1.2383368015289307
    3. ' room' → logprob: -2.3633368015289307
    4. 'room' → logprob: -2.7383368015289307
    5. 'tile' → logprob: -2.9883368015289307
    6. ' new' → logprob: -2.9883368015289307
    7. 'new' → logprob: -3.4883368015289307
    8. 'trap' → logprob: -3.4883368015289307
    9. ' tile' → logprob: -3.6133368015289307
    10. ' trap' → logprob: -4.113336563110352

Token 244: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0071336389519274235
    2. '   ' → logprob: -5.632133483886719
    3. '
' → logprob: -6.132133483886719
    4. ' def' → logprob: -6.757133483886719
    5. '<|end|>' → logprob: -9.507133483886719
    6. ':def' → logprob: -10.382133483886719
    7. '    
' → logprob: -11.007133483886719
    8. ':' → logprob: -11.007133483886719
    9. 'ndef' → logprob: -11.632133483886719
    10. ')' → logprob: -11.757133483886719

Token 245: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013817211613059044
    2. '   ' → logprob: -4.513817310333252
    3. ' def' → logprob: -6.013817310333252
    4. '
' → logprob: -8.638816833496094
    5. '    
' → logprob: -10.388816833496094
    6. ':def' → logprob: -10.388816833496094
    7. ')' → logprob: -10.638816833496094
    8. ' 
' → logprob: -11.263816833496094
    9. '<|end|>' → logprob: -11.763816833496094
    10. 'ndef' → logprob: -11.763816833496094

Token 246: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002826627343893051
    2. ' def' → logprob: -5.877826690673828
    3. '
' → logprob: -11.127826690673828
    4. '   ' → logprob: -12.377826690673828
    5. 'de' → logprob: -13.627826690673828
    6. 'from' → logprob: -14.877826690673828
    7. ' 
' → logprob: -15.127826690673828
    8. ')' → logprob: -15.377826690673828
    9. '    
' → logprob: -15.752826690673828
    10. '```' → logprob: -15.752826690673828

Token 247: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.13381585478782654
    2. 'use' → logprob: -2.1338157653808594
    3. ' maximize' → logprob: -6.133815765380859
    4. ' apply' → logprob: -6.883815765380859
    5. ' optimize' → logprob: -7.008815765380859
    6. ' heal' → logprob: -7.133815765380859
    7. ' max' → logprob: -7.383815765380859
    8. ' restore' → logprob: -8.13381576538086
    9. 'maximize' → logprob: -8.25881576538086
    10. 'max' → logprob: -8.63381576538086

Token 248: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0013308331836014986
    2. 'pot' → logprob: -7.501330852508545
    3. '_' → logprob: -7.626330852508545
    4. ' pot' → logprob: -9.126330375671387
    5. '(p' → logprob: -9.251330375671387
    6. 'p' → logprob: -11.376330375671387
    7. ':' → logprob: -11.376330375671387
    8. '   ' → logprob: -11.876330375671387
    9. 'def' → logprob: -11.876330375671387
    10. '():' → logprob: -12.001330375671387

Token 249: 'otions' (ID: 54764)
  Prédit: 'otions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otions' → logprob: -0.13269653916358948
    2. 'otion' → logprob: -2.1326966285705566
    3. 'ot' → logprob: -5.257696628570557
    4. 'o' → logprob: -8.507696151733398
    5. 'pot' → logprob: -9.132696151733398
    6. 'oti' → logprob: -9.507696151733398
    7. '_' → logprob: -11.132696151733398
    8. 'otential' → logprob: -11.507696151733398
    9. 'oton' → logprob: -11.757696151733398
    10. 't' → logprob: -11.820196151733398

Token 250: '(h' (ID: 8120)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7966870665550232
    2. '(' → logprob: -1.171687126159668
    3. '(current' → logprob: -1.796687126159668
    4. '(target' → logprob: -3.421687126159668
    5. '():
' → logprob: -4.296687126159668
    6. '(amount' → logprob: -4.671687126159668
    7. '(required' → logprob: -5.296687126159668
    8. '(des' → logprob: -5.796687126159668
    9. '(h' → logprob: -6.296687126159668
    10. '(cur' → logprob: -6.421687126159668

Token 251: 'p' (ID: 79)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06886041909456253
    2. 'p' → logprob: -2.8188605308532715
    3. 'e' → logprob: -5.6938605308532715
    4. '):
' → logprob: -6.4438605308532715
    5. ',' → logprob: -7.1938605308532715
    6. ')' → logprob: -7.6938605308532715
    7. '):' → logprob: -8.193860054016113
    8. ' P' → logprob: -9.443860054016113
    9. '(' → logprob: -9.693860054016113
    10. '):

' → logprob: -9.943860054016113

Token 252: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04941496625542641
    2. '):' → logprob: -3.049414873123169
    3. '):
' → logprob: -7.424415111541748
    4. ',current' → logprob: -9.04941463470459
    5. ')' → logprob: -10.54941463470459
    6. ' ,' → logprob: -10.67441463470459
    7. ',
' → logprob: -11.29941463470459
    8. ':' → logprob: -11.54941463470459
    9. '):
' → logprob: -12.29941463470459
    10. ',p' → logprob: -12.42441463470459

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004361879080533981
    2. '<|end|>' → logprob: -6.004362106323242
    3. ',' → logprob: -6.879362106323242
    4. '   ' → logprob: -8.004362106323242
    5. '    ' → logprob: -8.504362106323242
    6. ' while' → logprob: -9.004362106323242
    7. ' for' → logprob: -10.254362106323242
    8. '        
' → logprob: -10.254362106323242
    9. ' ' → logprob: -11.379362106323242
    10. '        ' → logprob: -11.379362106323242

Token 254: ' hp' (ID: 37774)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32689425349235535
    2. 'for' → logprob: -1.7018942832946777
    3. ' for' → logprob: -3.4518942832946777
    4. '       ' → logprob: -3.8268942832946777
    5. 'non' → logprob: -4.326894283294678
    6. 'global' → logprob: -4.576894283294678
    7. ' non' → logprob: -5.201894283294678
    8. 'while' → logprob: -5.576894283294678
    9. '    ' → logprob: -6.201894283294678
    10. 'pot' → logprob: -6.451894283294678

Token 255: '_possible' (ID: 185849)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42227184772491455
    2. ' =' → logprob: -1.6722718477249146
    3. '_' → logprob: -3.297271728515625
    4. '_current' → logprob: -3.547271728515625
    5. '_max' → logprob: -4.172271728515625
    6. ' +=' → logprob: -4.297271728515625
    7. '+=' → logprob: -4.797271728515625
    8. '_new' → logprob: -4.797271728515625
    9. 'max' → logprob: -5.047271728515625
    10. '_remaining' → logprob: -5.047271728515625

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6836639046669006
    2. '=' → logprob: -1.1836638450622559
    3. 's' → logprob: -1.6836638450622559
    4. ',' → logprob: -7.308663845062256
    5. '=[]' → logprob: -7.308663845062256
    6. '_values' → logprob: -8.183664321899414
    7. 'max' → logprob: -8.308664321899414
    8. '   ' → logprob: -8.433664321899414
    9. '_states' → logprob: -8.558664321899414
    10. '_max' → logprob: -9.308664321899414

Token 257: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5202308297157288
    2. ' [' → logprob: -1.395230770111084
    3. '{' → logprob: -2.895230770111084
    4. ' set' → logprob: -3.645230770111084
    5. 'hp' → logprob: -3.770230770111084
    6. 'set' → logprob: -3.895230770111084
    7. ' hp' → logprob: -4.520230770111084
    8. ' {' → logprob: -4.645230770111084
    9. '[]' → logprob: -4.895230770111084
    10. '[]
' → logprob: -6.145230770111084

Token 258: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00579807860776782
    2. '()' → logprob: -5.255797863006592
    3. '()
' → logprob: -7.505797863006592
    4. '({' → logprob: -12.13079833984375
    5. '()

' → logprob: -12.88079833984375
    6. '(' → logprob: -13.25579833984375
    7. '([(' → logprob: -13.63079833984375
    8. '(h' → logprob: -13.75579833984375
    9. '{' → logprob: -14.13079833984375
    10. '(range' → logprob: -14.50579833984375

Token 259: 'hp' (ID: 45478)
  Prédit: 'hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -4.5252596464706585e-05
    2. ' hp' → logprob: -10.625044822692871
    3. '(h' → logprob: -11.125044822692871
    4. '(' → logprob: -12.875044822692871
    5. 'HP' → logprob: -13.250044822692871
    6. '_hp' → logprob: -14.500044822692871
    7. '   ' → logprob: -15.125044822692871
    8. '```' → logprob: -15.500044822692871
    9. '0' → logprob: -16.000045776367188
    10. '.hp' → logprob: -16.125045776367188

Token 260: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4288848042488098
    2. '])
' → logprob: -1.053884744644165
    3. ' ])' → logprob: -9.303884506225586
    4. ' ])
' → logprob: -10.053884506225586
    5. '])

' → logprob: -10.553884506225586
    6. '])
' → logprob: -11.553884506225586
    7. '   ' → logprob: -12.428884506225586
    8. '       ' → logprob: -12.428884506225586
    9. ')' → logprob: -13.053884506225586
    10. ')
' → logprob: -13.428884506225586

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2652908265590668
    2. '       ' → logprob: -1.5152908563613892
    3. ' for' → logprob: -4.7652907371521
    4. '	' → logprob: -7.1402907371521
    5. '	for' → logprob: -7.2652907371521
    6. 'for' → logprob: -7.5152907371521
    7. '
' → logprob: -7.5152907371521
    8. '    ' → logprob: -7.7652907371521
    9. '<|end|>' → logprob: -7.8902907371521
    10. ',' → logprob: -8.140291213989258

Token 262: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8115217685699463
    2. 'for' (adapté à ' for') → logprob: -0.9365217685699463
    3. '   ' → logprob: -1.8115217685699463
    4. '	for' → logprob: -8.936521530151367
    5. ' ' → logprob: -9.311521530151367
    6. '       ' → logprob: -9.311521530151367
    7. ' new' → logprob: -10.436521530151367
    8. '  ' → logprob: -10.811521530151367
    9. '    ' → logprob: -11.186521530151367
    10. '
' → logprob: -11.311521530151367

Token 263: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3197791576385498
    2. 'p' → logprob: -1.4447791576385498
    3. ' potion' → logprob: -3.81977915763855
    4. ' pot' → logprob: -4.319779396057129
    5. 'pot' → logprob: -6.944779396057129
    6. ' amount' → logprob: -7.819779396057129
    7. 'amount' → logprob: -8.819779396057129
    8. 'ph' → logprob: -9.194779396057129
    9. ' hp' → logprob: -9.194779396057129
    10. ' ph' → logprob: -9.569779396057129

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10092668235301971
    2. 'in' → logprob: -2.350926637649536
    3. 'p' → logprob: -8.100926399230957
    4. '   ' → logprob: -8.850926399230957
    5. 'n' → logprob: -9.600926399230957
    6. 's' → logprob: -10.475926399230957
    7. ' ' → logprob: -10.850926399230957
    8. 'o' → logprob: -10.975926399230957
    9. 't' → logprob: -11.225926399230957
    10. ' p' → logprob: -11.725926399230957

Token 265: ' pot' (ID: 3208)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.11285105347633362
    2. ' pot' → logprob: -2.237851142883301
    3. ' ' → logprob: -11.4878511428833
    4. 'p' → logprob: -12.3628511428833
    5. '   ' → logprob: -12.6128511428833
    6. 'pots' → logprob: -13.0503511428833
    7. ' range' → logprob: -13.6128511428833
    8. '
' → logprob: -13.9253511428833
    9. '

' → logprob: -14.3628511428833
    10. '	p' → logprob: -14.7378511428833

Token 266: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.1322716921567917
    2. 'otions' → logprob: -2.1322717666625977
    3. 's' → logprob: -5.507271766662598
    4. 'ons' → logprob: -7.007271766662598
    5. 't' → logprob: -9.632271766662598
    6. 'p' → logprob: -9.632271766662598
    7. '   ' → logprob: -9.882271766662598
    8. 'IONS' → logprob: -10.632271766662598
    9. 'ptions' → logprob: -10.757271766662598
    10. 'ot' → logprob: -11.007271766662598

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022963248193264008
    2. ':
' → logprob: -6.127296447753906
    3. '):' → logprob: -9.877296447753906
    4. ' :' → logprob: -10.002296447753906
    5. ',' → logprob: -11.752296447753906
    6. '):
' → logprob: -12.877296447753906
    7. ']:' → logprob: -14.002296447753906
    8. ':

' → logprob: -14.752296447753906
    9. '   ' → logprob: -14.877296447753906
    10. '       ' → logprob: -14.877296447753906

Token 268: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31580495834350586
    2. '           ' → logprob: -1.3158049583435059
    3. '        ' → logprob: -7.190804958343506
    4. ',' → logprob: -7.315804958343506
    5. '   ' → logprob: -8.065805435180664
    6. '        
' → logprob: -8.565805435180664
    7. '         ' → logprob: -9.065805435180664
    8. ' new' → logprob: -9.190805435180664
    9. '
' → logprob: -9.315805435180664
    10. '          ' → logprob: -9.690805435180664

Token 269: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5858035683631897
    2. 'new' (adapté à ' new') → logprob: -0.8358035683631897
    3. ' next' → logprob: -5.585803508758545
    4. 'next' → logprob: -6.210803508758545
    5. '   ' → logprob: -6.335803508758545
    6. ' hp' → logprob: -6.585803508758545
    7. 'hp' → logprob: -7.085803508758545
    8. '       ' → logprob: -10.710803985595703
    9. 'temp' → logprob: -10.835803985595703
    10. ' temp' → logprob: -12.210803985595703

Token 270: '_hp' (ID: 117795)
  Prédit: '_hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.009723862633109093
    2. '_h' → logprob: -5.384723663330078
    3. 'hp' → logprob: -5.509723663330078
    4. ' =' → logprob: -7.884723663330078
    5. '_p' → logprob: -8.259723663330078
    6. '_possible' → logprob: -8.384723663330078
    7. '=' → logprob: -9.759723663330078
    8. '_pos' → logprob: -10.134723663330078
    9. '   ' → logprob: -10.509723663330078
    10. 's' → logprob: -11.134723663330078

Token 271: '_possible' (ID: 185849)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22581855952739716
    2. ' =' → logprob: -2.100818634033203
    3. '=' → logprob: -3.225818634033203
    4. ' in' → logprob: -4.600818634033203
    5. '_values' → logprob: -4.725818634033203
    6. '_set' → logprob: -4.850818634033203
    7. '_' → logprob: -4.850818634033203
    8. ' s' → logprob: -6.725818634033203
    9. '_s' → logprob: -6.975818634033203
    10. '   ' → logprob: -7.475818634033203

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20153087377548218
    2. ' =' → logprob: -1.701530933380127
    3. '=set' → logprob: -9.076530456542969
    4. ' ' → logprob: -13.826530456542969
    5. '.update' → logprob: -14.201530456542969
    6. '   ' → logprob: -14.826530456542969
    7. 's' → logprob: -14.951530456542969
    8. 'update' → logprob: -15.201530456542969
    9. 'set' → logprob: -15.451530456542969
    10. ' ={' → logprob: -16.07653045654297

Token 273: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -5.8961017202818766e-05
    2. 'hp' → logprob: -10.375059127807617
    3. ' set' → logprob: -10.500059127807617
    4. '[]' → logprob: -16.500059127807617
    5. '	set' → logprob: -17.500059127807617
    6. '{' → logprob: -17.625059127807617
    7. '=set' → logprob: -18.000059127807617
    8. 'se' → logprob: -18.250059127807617
    9. '(set' → logprob: -18.500059127807617
    10. '{}' → logprob: -19.000059127807617

Token 274: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1269972026348114
    2. '()
' → logprob: -2.126997232437134
    3. '()

' → logprob: -9.751996994018555
    4. '([' → logprob: -12.251996994018555
    5. '(h' → logprob: -13.001996994018555
    6. '()
' → logprob: -13.626996994018555
    7. '([]' → logprob: -14.501996994018555
    8. '[]' → logprob: -14.751996994018555
    9. '()`' → logprob: -15.126996994018555
    10. '(' → logprob: -15.251996994018555

Token 275: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.427322119474411
    2. ' for' → logprob: -1.8023221492767334
    3. '           ' → logprob: -2.0523221492767334
    4. 'for' → logprob: -2.9273221492767334
    5. '               ' → logprob: -8.427322387695312
    6. '   ' → logprob: -8.802322387695312
    7. '
' → logprob: -8.927322387695312
    8. '<|end|>' → logprob: -9.677322387695312
    9. '        
' → logprob: -10.052322387695312
    10. '	       ' → logprob: -10.177322387695312

Token 276: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5043150782585144
    2. ' for' → logprob: -1.0043151378631592
    3. '           ' → logprob: -3.629315137863159
    4. '       ' → logprob: -5.75431489944458
    5. '   ' → logprob: -10.129315376281738
    6. '
' → logprob: -10.379315376281738
    7. '	for' → logprob: -12.879315376281738
    8. ' ' → logprob: -13.004315376281738
    9. '               ' → logprob: -13.004315376281738
    10. '<|end|>' → logprob: -13.629315376281738

Token 277: ' val' (ID: 1459)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2935383915901184
    2. 'hp' → logprob: -2.4185383319854736
    3. 'val' → logprob: -2.5435383319854736
    4. 'cur' → logprob: -3.6685383319854736
    5. 'curr' → logprob: -4.043538570404053
    6. 'v' → logprob: -4.043538570404053
    7. 'current' → logprob: -4.543538570404053
    8. ' h' → logprob: -5.418538570404053
    9. ' val' → logprob: -5.918538570404053
    10. 'value' → logprob: -6.168538570404053

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059806969948112965
    2. 'in' → logprob: -5.130980491638184
    3. ' ' → logprob: -10.380980491638184
    4. '   ' → logprob: -11.505980491638184
    5. 'alue' → logprob: -13.130980491638184
    6. '  ' → logprob: -13.130980491638184
    7. 'al' → logprob: -13.380980491638184
    8. 's' → logprob: -13.630980491638184
    9. '    ' → logprob: -14.630980491638184
    10. '_in' → logprob: -14.880980491638184

Token 279: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.012524133548140526
    2. ' hp' → logprob: -4.387524127960205
    3. '   ' → logprob: -11.637524604797363
    4. ' ' → logprob: -13.012524604797363
    5. 'HP' → logprob: -13.762524604797363
    6. '_hp' → logprob: -13.887524604797363
    7. '.hp' → logprob: -14.137524604797363
    8. '
' → logprob: -15.512524604797363
    9. '  ' → logprob: -15.762524604797363
    10. '[' → logprob: -16.012523651123047

Token 280: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -2.951771421066951e-05
    2. 'possible' → logprob: -10.500029563903809
    3. ' possible' → logprob: -14.750029563903809
    4. '+' → logprob: -14.750029563903809
    5. '   ' → logprob: -14.750029563903809
    6. 'Possible' → logprob: -15.000029563903809
    7. '_' → logprob: -15.625029563903809
    8. '
' → logprob: -16.750028610229492
    9. '_plus' → logprob: -16.750028610229492
    10. '           ' → logprob: -17.625028610229492

Token 281: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09109295904636383
    2. '               ' → logprob: -2.591093063354492
    3. ':' → logprob: -4.466093063354492
    4. ':
' → logprob: -8.466093063354492
    5. '):
' → logprob: -9.216093063354492
    6. '           ' → logprob: -9.716093063354492
    7. '              ' → logprob: -9.966093063354492
    8. ':

' → logprob: -10.216093063354492
    9. ' :
' → logprob: -10.216093063354492
    10. '                ' → logprob: -10.466093063354492

Token 282: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.682846287731081e-05
    2. '
' → logprob: -10.625066757202148
    3. ':
' → logprob: -11.375066757202148
    4. '                
' → logprob: -11.750066757202148
    5. '           ' → logprob: -12.000066757202148
    6. ' if' → logprob: -12.375066757202148
    7. ' new' → logprob: -12.875066757202148
    8. '   ' → logprob: -13.000066757202148
    9. '              ' → logprob: -13.250066757202148
    10. ',' → logprob: -13.375066757202148

Token 283: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08034403622150421
    2. ' new' → logprob: -2.5803439617156982
    3. 'if' → logprob: -7.080344200134277
    4. '               ' → logprob: -7.955344200134277
    5. ' if' → logprob: -9.455344200134277
    6. '                   ' → logprob: -9.705344200134277
    7. '   ' → logprob: -9.955344200134277
    8. 'for' → logprob: -10.455344200134277
    9. '
' → logprob: -11.330344200134277
    10. '           ' → logprob: -11.330344200134277

Token 284: ' use' (ID: 1199)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.020058751106262207
    2. 'if' → logprob: -4.020058631896973
    3. 'for' → logprob: -6.895058631896973
    4. 'val' → logprob: -8.145058631896973
    5. ' new' → logprob: -9.020058631896973
    6. 'hp' → logprob: -9.270058631896973
    7. 'use' → logprob: -9.395058631896973
    8. 'used' → logprob: -10.395058631896973
    9. '#' → logprob: -10.520058631896973
    10. 'add' → logprob: -10.770058631896973

Token 285: ' potion' (ID: 152801)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.09143853932619095
    2. 'new' → logprob: -2.4664385318756104
    3. '_new' → logprob: -6.9664387702941895
    4. '               ' → logprob: -7.0914387702941895
    5. '                   ' → logprob: -8.716438293457031
    6. ' =' → logprob: -9.091438293457031
    7. ' or' → logprob: -9.216438293457031
    8. '           ' → logprob: -9.466438293457031
    9. '_p' → logprob: -9.716438293457031
    10. '=' → logprob: -10.716438293457031

Token 286: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2417051792144775
    2. ' if' → logprob: -1.3667051792144775
    3. '           ' → logprob: -2.3667051792144775
    4. ' or' → logprob: -2.3667051792144775
    5. ' and' → logprob: -2.7417051792144775
    6. 'if' → logprob: -2.9917051792144775
    7. '                   ' → logprob: -3.2417051792144775
    8. ',' → logprob: -3.2417051792144775
    9. 'new' → logprob: -3.6167051792144775
    10. ' new' → logprob: -3.7417051792144775

Token 287: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17979919910430908
    2. 'not' → logprob: -1.804799199104309
    3. '               ' → logprob: -11.17979907989502
    4. '(not' → logprob: -11.17979907989502
    5. '_not' → logprob: -12.05479907989502
    6. ' don't' → logprob: -12.67979907989502
    7. ' skip' → logprob: -13.05479907989502
    8. 'pass' → logprob: -13.30479907989502
    9. ' keep' → logprob: -13.42979907989502
    10. ' pass' → logprob: -13.55479907989502

Token 288: '
' (ID: 198)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.078140139579773
    2. '               ' → logprob: -1.203140139579773
    3. 'new' → logprob: -1.203140139579773
    4. '                   ' → logprob: -2.9531402587890625
    5. '
' → logprob: -5.4531402587890625
    6. ',' → logprob: -6.5781402587890625
    7. '           ' → logprob: -7.9531402587890625
    8. '   ' → logprob: -8.578140258789062
    9. ',new' → logprob: -8.828140258789062
    10. '(new' → logprob: -9.078140258789062

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04569815844297409
    2. ' new' → logprob: -3.4206981658935547
    3. '                   ' → logprob: -4.545698165893555
    4. ',' → logprob: -7.420698165893555
    5. 'new' → logprob: -7.920698165893555
    6. ' for' → logprob: -9.670698165893555
    7. '<|end|>' → logprob: -9.795698165893555
    8. '           ' → logprob: -9.920698165893555
    9. '                       ' → logprob: -10.170698165893555
    10. ' and' → logprob: -10.295698165893555

Token 290: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2815419137477875
    2. 'new' (adapté à ' new') → logprob: -1.4065419435501099
    3. '               ' → logprob: -8.53154182434082
    4. '                   ' → logprob: -8.78154182434082
    5. '   ' → logprob: -10.53154182434082
    6. ' ' → logprob: -12.28154182434082
    7. '
' → logprob: -12.78154182434082
    8. '           ' → logprob: -13.15654182434082
    9. '	new' → logprob: -13.40654182434082
    10. ' ' → logprob: -14.03154182434082

Token 291: '_val' (ID: 13694)
  Prédit: '_hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -1.27099974633893e-05
    2. 'hp' → logprob: -11.375012397766113
    3. '_' → logprob: -15.250012397766113
    4. '_val' → logprob: -15.375012397766113
    5. ' _' → logprob: -15.875012397766113
    6. '_possible' → logprob: -16.25001335144043
    7. '   ' → logprob: -16.62501335144043
    8. '_h' → logprob: -17.00001335144043
    9. '_p' → logprob: -17.00001335144043
    10. '.hp' → logprob: -17.12501335144043

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4344259798526764
    2. '=' → logprob: -1.059425950050354
    3. '.add' → logprob: -6.4344258308410645
    4. '
' → logprob: -6.9344258308410645
    5. 's' → logprob: -7.4344258308410645
    6. ' ' → logprob: -7.6844258308410645
    7. '1' → logprob: -8.059426307678223
    8. '.' → logprob: -8.059426307678223
    9. 'new' → logprob: -8.184426307678223
    10. '=new' → logprob: -8.684426307678223

Token 293: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04922046512365341
    2. ' val' → logprob: -3.049220561981201
    3. 'min' → logprob: -7.799220561981201
    4. ' min' → logprob: -8.924220085144043
    5. 'max' → logprob: -9.549220085144043
    6. ' max' → logprob: -12.049220085144043
    7. '	val' → logprob: -12.924220085144043
    8. 'p' → logprob: -13.299220085144043
    9. '   ' → logprob: -13.549220085144043
    10. '(val' → logprob: -13.924220085144043

Token 294: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6337507367134094
    2. ' +' → logprob: -1.0087506771087646
    3. '+p' → logprob: -2.2587506771087646
    4. '
' → logprob: -9.008750915527344
    5. ',' → logprob: -10.383750915527344
    6. '+
' → logprob: -10.633750915527344
    7. 'p' → logprob: -11.258750915527344
    8. '+h' → logprob: -11.758750915527344
    9. '+c' → logprob: -11.883750915527344
    10. '   ' → logprob: -12.883750915527344

Token 295: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009115827269852161
    2. ' p' → logprob: -7.000911712646484
    3. '_p' → logprob: -18.250911712646484
    4. '   ' → logprob: -19.125911712646484
    5. ' ' → logprob: -19.250911712646484
    6. '	p' → logprob: -20.000911712646484
    7. '<p' → logprob: -20.875911712646484
    8. ' ' → logprob: -21.375911712646484
    9. '(p' → logprob: -21.375911712646484
    10. '           ' → logprob: -21.750911712646484

Token 296: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04585561901330948
    2. '<|end|>' → logprob: -3.2958555221557617
    3. 'new' → logprob: -4.920855522155762
    4. ' new' → logprob: -8.920855522155762
    5. '
' → logprob: -9.295855522155762
    6. ' if' → logprob: -9.795855522155762
    7. '<|end|>' → logprob: -10.420855522155762
    8. '1' → logprob: -10.420855522155762
    9. '+' → logprob: -10.545855522155762
    10. '_new' → logprob: -10.795855522155762

Token 297: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07828501611948013
    2. '<|end|>' → logprob: -3.203284978866577
    3. 'new' → logprob: -3.703284978866577
    4. ' if' → logprob: -5.453285217285156
    5. ' new' → logprob: -6.328285217285156
    6. '               ' → logprob: -6.828285217285156
    7. '<|end|>' → logprob: -7.328285217285156
    8. '           ' → logprob: -7.578285217285156
    9. '_new' → logprob: -7.953285217285156
    10. '
' → logprob: -8.578285217285156

Token 298: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6353604197502136
    2. 'if' (adapté à ' if') → logprob: -0.8853604197502136
    3. ' new' → logprob: -3.2603604793548584
    4. 'new' → logprob: -4.010360240936279
    5. '               ' → logprob: -7.135360240936279
    6. '
' → logprob: -7.885360240936279
    7. '           ' → logprob: -12.135360717773438
    8. ' ' → logprob: -13.510360717773438
    9. 'for' → logprob: -13.510360717773438
    10. ' 
' → logprob: -14.010360717773438

Token 299: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5759982466697693
    2. 'new' → logprob: -0.8259982466697693
    3. '	new' → logprob: -10.825998306274414
    4. '0' → logprob: -11.450998306274414
    5. '(new' → logprob: -11.825998306274414
    6. ' ' → logprob: -12.825998306274414
    7. '   ' → logprob: -13.013498306274414
    8. '[new' → logprob: -13.200998306274414
    9. 'New' → logprob: -13.325998306274414
    10. '1' → logprob: -13.575998306274414

Token 300: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0005736440070904791
    2. '_hp' → logprob: -8.000574111938477
    3. '_p' → logprob: -9.375574111938477
    4. '_' → logprob: -9.625574111938477
    5. '<=' → logprob: -10.625574111938477
    6. 'val' → logprob: -11.000574111938477
    7. 'hp' → logprob: -11.500574111938477
    8. '<p' → logprob: -11.875574111938477
    9. '<' → logprob: -12.500574111938477
    10. 'p' → logprob: -13.125574111938477

Token 301: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31329140067100525
    2. '<=' → logprob: -1.3132914304733276
    3. ')<=' → logprob: -11.438291549682617
    4. '>' → logprob: -11.813291549682617
    5. ' >' → logprob: -12.313291549682617
    6. ')' → logprob: -12.938291549682617
    7. ']<=' → logprob: -13.438291549682617
    8. '<|end|>' → logprob: -13.813291549682617
    9. '<' → logprob: -14.813291549682617
    10. '>=' → logprob: -14.813291549682617

Token 302: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.03806949034333229
    2. ' HP' → logprob: -3.288069486618042
    3. '_HP' → logprob: -10.913069725036621
    4. '   ' → logprob: -12.413069725036621
    5. 'hp' → logprob: -12.913069725036621
    6. ' ' → logprob: -13.913069725036621
    7. '100' → logprob: -14.788069725036621
    8. '0' → logprob: -15.038069725036621
    9. '_hp' → logprob: -15.850569725036621
    10. '  ' → logprob: -16.038068771362305

Token 303: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0003032881941180676
    2. 'max' → logprob: -8.125303268432617
    3. '_' → logprob: -12.375303268432617
    4. '_init' → logprob: -13.125303268432617
    5. '_MAX' → logprob: -14.750303268432617
    6. 'Max' → logprob: -15.250303268432617
    7. ' max' → logprob: -15.875303268432617
    8. '   ' → logprob: -17.000303268432617
    9. '	max' → logprob: -17.500303268432617
    10. ' _' → logprob: -17.750303268432617

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5771938562393188
    2. ':
' → logprob: -0.8271938562393188
    3. '               ' → logprob: -7.827193737030029
    4. '                   ' → logprob: -8.077194213867188
    5. 'new' → logprob: -8.452194213867188
    6. '           ' → logprob: -9.077194213867188
    7. '):
' → logprob: -9.452194213867188
    8. ':new' → logprob: -9.827194213867188
    9. ':

' → logprob: -11.202194213867188
    10. '):' → logprob: -11.327194213867188

Token 305: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4192888140678406
    2. ':
' → logprob: -1.5442888736724854
    3. ':' → logprob: -2.9192888736724854
    4. '               ' → logprob: -2.9192888736724854
    5. 'new' → logprob: -4.669288635253906
    6. ' new' → logprob: -4.794288635253906
    7. '):
' → logprob: -6.544288635253906
    8. '           ' → logprob: -7.294288635253906
    9. '                       ' → logprob: -7.919288635253906
    10. ',' → logprob: -8.919288635253906

Token 306: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.21640171110630035
    2. 'new' (adapté à ' new') → logprob: -1.7164016962051392
    3. '                   ' → logprob: -4.46640157699585
    4. '               ' → logprob: -6.09140157699585
    5. ' continue' → logprob: -7.46640157699585
    6. 'continue' → logprob: -8.216402053833008
    7. '   ' → logprob: -9.091402053833008
    8. '                       ' → logprob: -9.466402053833008
    9. '           ' → logprob: -10.591402053833008
    10. '	new' → logprob: -11.716402053833008

Token 307: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6334429383277893
    2. '_hp' → logprob: -0.7584429383277893
    3. '_' → logprob: -7.8834428787231445
    4. '_max' → logprob: -9.133442878723145
    5. '_HP' → logprob: -9.383442878723145
    6. 'HP' → logprob: -9.508442878723145
    7. 'val' → logprob: -9.633442878723145
    8. 'hp' → logprob: -10.508442878723145
    9. '_p' → logprob: -11.008442878723145
    10. ' HP' → logprob: -11.383442878723145

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2265811413526535
    2. ' =' → logprob: -1.60158109664917
    3. ' new' → logprob: -7.72658109664917
    4. 'new' → logprob: -7.97658109664917
    5. '=new' → logprob: -8.351581573486328
    6. '=max' → logprob: -10.101581573486328
    7. '<|end|>' → logprob: -10.351581573486328
    8. ')' → logprob: -10.601581573486328
    9. ' ' → logprob: -10.726581573486328
    10. '=set' → logprob: -12.351581573486328

Token 309: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.048589304089546204
    2. ' HP' → logprob: -3.0485892295837402
    3. '_HP' → logprob: -13.548589706420898
    4. ' ' → logprob: -15.298589706420898
    5. 'hp' → logprob: -15.673589706420898
    6. '   ' → logprob: -16.7985897064209
    7. 'H' → logprob: -17.1735897064209
    8. 'val' → logprob: -18.1735897064209
    9. '               ' → logprob: -18.1735897064209
    10. ' hp' → logprob: -18.5485897064209

Token 310: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.6550729419104755e-05
    2. 'max' → logprob: -10.250036239624023
    3. '_' → logprob: -14.125036239624023
    4. '_m' → logprob: -16.375036239624023
    5. ' _' → logprob: -16.375036239624023
    6. '_MAX' → logprob: -16.750036239624023
    7. '_init' → logprob: -16.875036239624023
    8. 'Max' → logprob: -17.500036239624023
    9. '_ma' → logprob: -17.750036239624023
    10. 'maxlength' → logprob: -18.375036239624023

Token 311: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011212872341275215
    2. '
' → logprob: -4.6362128257751465
    3. 'new' → logprob: -7.2612128257751465
    4. '                
' → logprob: -7.6362128257751465
    5. ' new' → logprob: -8.511213302612305
    6. '           ' → logprob: -10.511213302612305
    7. '                    
' → logprob: -12.011213302612305
    8. '            
' → logprob: -12.511213302612305
    9. '              ' → logprob: -12.511213302612305
    10. '<|end|>' → logprob: -12.636213302612305

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011509364703670144
    2. ' new' → logprob: -7.501151084899902
    3. '
' → logprob: -8.376151084899902
    4. 'new' → logprob: -8.376151084899902
    5. '                
' → logprob: -9.251151084899902
    6. '                   ' → logprob: -11.501151084899902
    7. '<|end|>' → logprob: -11.501151084899902
    8. '           ' → logprob: -11.876151084899902
    9. ',' → logprob: -12.501151084899902
    10. '              ' → logprob: -13.751151084899902

Token 313: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38506588339805603
    2. ' new' → logprob: -1.2600659132003784
    3. 'new' (adapté à ' new') → logprob: -3.385065793991089
    4. '
' → logprob: -6.260066032409668
    5. '           ' → logprob: -9.385066032409668
    6. '                   ' → logprob: -10.635066032409668
    7. '                
' → logprob: -10.635066032409668
    8. '
' → logprob: -11.260066032409668
    9. '$new' → logprob: -12.510066032409668
    10. ',' → logprob: -12.885066032409668

Token 314: '_hp' (ID: 117795)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.03422139585018158
    2. '_hp' → logprob: -3.5342214107513428
    3. '_' → logprob: -5.534221172332764
    4. '_possible' → logprob: -8.409221649169922
    5. 'val' → logprob: -9.284221649169922
    6. '_p' → logprob: -10.284221649169922
    7. '_pos' → logprob: -10.409221649169922
    8. ' _' → logprob: -10.534221649169922
    9. 'hp' → logprob: -10.659221649169922
    10. 'Val' → logprob: -11.159221649169922

Token 315: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.00044056313345208764
    2. 'possible' → logprob: -7.87544059753418
    3. '_' → logprob: -10.00044059753418
    4. 'Possible' → logprob: -12.37544059753418
    5. '_val' → logprob: -12.50044059753418
    6. '_pos' → logprob: -13.75044059753418
    7. ' =' → logprob: -13.75044059753418
    8. '=' → logprob: -13.87544059753418
    9. ' possible' → logprob: -14.25044059753418
    10. '   ' → logprob: -14.25044059753418

Token 316: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0707680955529213
    2. '.update' → logprob: -3.070768117904663
    3. '.' → logprob: -3.820768117904663
    4. '|' → logprob: -11.195768356323242
    5. ' |=' → logprob: -12.320768356323242
    6. 'add' → logprob: -12.445768356323242
    7. 'update' → logprob: -13.320768356323242
    8. '.union' → logprob: -13.570768356323242
    9. ' .' → logprob: -15.820768356323242
    10. '.|' → logprob: -16.320768356323242

Token 317: '(val' (ID: 17391)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.038151539862155914
    2. '(val' → logprob: -3.288151502609253
    3. 'new' → logprob: -9.663151741027832
    4. '(' → logprob: -10.538151741027832
    5. 'val' → logprob: -10.913151741027832
    6. ' new' → logprob: -14.663151741027832
    7. ' (' → logprob: -15.538151741027832
    8. '(vals' → logprob: -15.663151741027832
    9. '(n' → logprob: -16.288150787353516
    10. '(value' → logprob: -16.413150787353516

Token 318: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10107441991567612
    2. ')' → logprob: -2.351074457168579
    3. 'new' → logprob: -7.72607421875
    4. '               ' → logprob: -8.85107421875
    5. ')new' → logprob: -8.85107421875
    6. ' )
' → logprob: -9.97607421875
    7. ' new' → logprob: -10.10107421875
    8. '           ' → logprob: -10.85107421875
    9. ')
' → logprob: -11.22607421875
    10. '                   ' → logprob: -12.60107421875

Token 319: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07170670479536057
    2. ' new' → logprob: -3.196706771850586
    3. '
' → logprob: -4.071706771850586
    4. 'new' → logprob: -5.071706771850586
    5. '           ' → logprob: -5.571706771850586
    6. '       ' → logprob: -7.571706771850586
    7. ' 
' → logprob: -8.696706771850586
    8. ',' → logprob: -9.571706771850586
    9. '                   ' → logprob: -9.571706771850586
    10. ',new' → logprob: -9.571706771850586

Token 320: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.3486272990703583
    2. ' new' → logprob: -1.2236273288726807
    3. '               ' → logprob: -8.723627090454102
    4. '_new' → logprob: -12.348627090454102
    5. '(new' → logprob: -12.598627090454102
    6. '	new' → logprob: -12.973627090454102
    7. '
' → logprob: -13.473627090454102
    8. '[new' → logprob: -13.598627090454102
    9. '           ' → logprob: -13.848627090454102
    10. ' ' → logprob: -14.098627090454102

Token 321: '_hp' (ID: 117795)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5759562253952026
    2. '_hp' → logprob: -0.8259562253952026
    3. '_' → logprob: -11.450956344604492
    4. 'hp' → logprob: -12.950956344604492
    5. 'val' → logprob: -14.450956344604492
    6. '_HP' → logprob: -14.700956344604492
    7. ' _' → logprob: -14.825956344604492
    8. 'Val' → logprob: -15.075956344604492
    9. '```' → logprob: -15.450956344604492
    10. '_va' → logprob: -15.700956344604492

Token 322: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -2.935296834039036e-06
    2. 'Possible' → logprob: -13.37500286102295
    3. 'possible' → logprob: -13.62500286102295
    4. ' possible' → logprob: -17.500003814697266
    5. '_pos' → logprob: -18.500003814697266
    6. '_' → logprob: -18.500003814697266
    7. '```' → logprob: -18.625003814697266
    8. '_p' → logprob: -19.375003814697266
    9. '_val' → logprob: -21.125003814697266
    10. '=' → logprob: -21.250003814697266

Token 323: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00024358915106859058
    2. '.' → logprob: -8.375243186950684
    3. '.update' → logprob: -11.375243186950684
    4. 'add' → logprob: -13.500243186950684
    5. ' .' → logprob: -15.375243186950684
    6. '.append' → logprob: -18.250244140625
    7. ')add' → logprob: -18.500244140625
    8. '=' → logprob: -19.125244140625
    9. ' add' → logprob: -19.375244140625
    10. ',' → logprob: -19.750244140625

Token 324: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.625011444091797
    3. 'new' → logprob: -12.875011444091797
    4. ' new' → logprob: -15.625011444091797
    5. ' (' → logprob: -15.875011444091797
    6. '(
' → logprob: -17.375011444091797
    7. ')new' → logprob: -20.000011444091797
    8. '=new' → logprob: -20.125011444091797
    9. '(n' → logprob: -20.250011444091797
    10. ',new' → logprob: -20.625011444091797

Token 325: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.27099974633893e-05
    2. 'val' → logprob: -11.375012397766113
    3. '_' → logprob: -14.250012397766113
    4. '_va' → logprob: -14.750012397766113
    5. '_hp' → logprob: -16.75001335144043
    6. '_v' → logprob: -16.87501335144043
    7. 'Val' → logprob: -17.50001335144043
    8. '_VAL' → logprob: -17.75001335144043
    9. '_p' → logprob: -17.75001335144043
    10. ' val' → logprob: -18.12501335144043

Token 326: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061243053525686264
    2. ')' → logprob: -3.6862430572509766
    3. ')
' → logprob: -3.6862430572509766
    4. '
' → logprob: -5.186243057250977
    5. '       ' → logprob: -6.186243057250977
    6. 'new' → logprob: -7.061243057250977
    7. ' new' → logprob: -7.936243057250977
    8. '               ' → logprob: -8.061243057250977
    9. ')new' → logprob: -10.186243057250977
    10. '   ' → logprob: -11.686243057250977

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010306637705070898
    2. 'new' → logprob: -10.125102996826172
    3. '               ' → logprob: -10.875102996826172
    4. '       ' → logprob: -11.000102996826172
    5. ' new' → logprob: -11.500102996826172
    6. '
' → logprob: -12.625102996826172
    7. 'import' → logprob: -13.250102996826172
    8. '          ' → logprob: -13.625102996826172
    9. '<|end|>' → logprob: -13.750102996826172
    10. 'p' → logprob: -13.875102996826172

Token 328: ' hp' (ID: 37774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13850872218608856
    2. '           ' → logprob: -2.6385087966918945
    3. 'hp' (adapté à ' hp') → logprob: -3.5135087966918945
    4. '
' → logprob: -4.6385087966918945
    5. ' hp' → logprob: -4.6385087966918945
    6. '   ' → logprob: -5.0135087966918945
    7. '        
' → logprob: -7.5135087966918945
    8. '
' → logprob: -7.6385087966918945
    9. '               ' → logprob: -8.763508796691895
    10. '    ' → logprob: -8.888508796691895

Token 329: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -4.320199877838604e-07
    2. '_p' → logprob: -16.5
    3. 'possible' → logprob: -16.5
    4. '_' → logprob: -16.625
    5. '=' → logprob: -17.125
    6. '_pos' → logprob: -17.375
    7. 'Possible' → logprob: -18.75
    8. ' =' → logprob: -19.75
    9. '=_' → logprob: -20.0
    10. '\' → logprob: -20.125

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009119403548538685
    2. ' =' → logprob: -7.000911712646484
    3. '.update' → logprob: -15.875911712646484
    4. '=

' → logprob: -16.000911712646484
    5. '|' → logprob: -16.250911712646484
    6. ' |=' → logprob: -17.500911712646484
    7. '.=' → logprob: -17.625911712646484
    8. 'update' → logprob: -19.000911712646484
    9. '=
' → logprob: -19.125911712646484
    10. ',' → logprob: -19.125911712646484

Token 331: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.011048170737922192
    2. ' new' → logprob: -4.511048316955566
    3. '	new' → logprob: -16.88604736328125
    4. '_new' → logprob: -16.88604736328125
    5. '```' → logprob: -17.01104736328125
    6. '   ' → logprob: -17.13604736328125
    7. '
' → logprob: -17.26104736328125
    8. ' ' → logprob: -17.38604736328125
    9. '{' → logprob: -17.63604736328125
    10. '(new' → logprob: -18.01104736328125

Token 332: '_hp' (ID: 117795)
  Prédit: '_hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.017793651670217514
    2. 'hp' → logprob: -4.642793655395508
    3. '_val' → logprob: -5.267793655395508
    4. 'possible' → logprob: -6.142793655395508
    5. 'val' → logprob: -8.392793655395508
    6. '_pos' → logprob: -9.017793655395508
    7. '_possible' → logprob: -9.017793655395508
    8. '_p' → logprob: -9.642793655395508
    9. 'p' → logprob: -10.017793655395508
    10. 'HP' → logprob: -10.392793655395508

Token 333: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0008085522567853332
    2. 'possible' → logprob: -7.1258087158203125
    3. 'Possible' → logprob: -14.000808715820312
    4. '_pos' → logprob: -14.375808715820312
    5. '```' → logprob: -14.375808715820312
    6. 'pos' → logprob: -14.625808715820312
    7. 'poss' → logprob: -14.625808715820312
    8. '_p' → logprob: -15.250808715820312
    9. '_' → logprob: -15.875808715820312
    10. ' possible' → logprob: -16.125808715820312

Token 334: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005133562372066081
    2. '
' → logprob: -7.750513553619385
    3. ' return' → logprob: -10.500513076782227
    4. '   ' → logprob: -10.750513076782227
    5. 'return' → logprob: -10.750513076782227
    6. '<|end|>' → logprob: -12.500513076782227
    7. ',' → logprob: -13.000513076782227
    8. '
' → logprob: -13.875513076782227
    9. '           ' → logprob: -13.875513076782227
    10. '        
' → logprob: -14.125513076782227

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003009076928719878
    2. '   ' → logprob: -6.253008842468262
    3. '
' → logprob: -7.503008842468262
    4. '<|end|>' → logprob: -7.878008842468262
    5. ' return' → logprob: -9.503008842468262
    6. 'return' → logprob: -10.753008842468262
    7. '	return' → logprob: -11.253008842468262
    8. '    
' → logprob: -11.878008842468262
    9. '<|end|>' → logprob: -12.003008842468262
    10. '           ' → logprob: -12.253008842468262

Token 336: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001833561109378934
    2. 'return' (adapté à ' return') → logprob: -7.251833438873291
    3. ' return' → logprob: -7.376833438873291
    4. '   ' → logprob: -7.626833438873291
    5. '
' → logprob: -12.37683391571045
    6. 'def' → logprob: -13.62683391571045
    7. '    ' → logprob: -14.00183391571045
    8. '           ' → logprob: -14.37683391571045
    9. '      ' → logprob: -14.37683391571045
    10. '<|end|>' → logprob: -14.62683391571045

Token 337: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011424791067838669
    2. ' max' → logprob: -4.511425018310547
    3. 'min' → logprob: -8.011425018310547
    4. 'HP' → logprob: -10.636425018310547
    5. 'hp' → logprob: -11.386425018310547
    6. ' min' → logprob: -12.136425018310547
    7. '(max' → logprob: -12.886425018310547
    8. ' HP' → logprob: -14.386425018310547
    9. 'set' → logprob: -14.511425018310547
    10. ' hp' → logprob: -15.136425018310547

Token 338: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.500004768371582
    3. 'hp' → logprob: -14.250004768371582
    4. '(
' → logprob: -18.500003814697266
    5. '(ht' → logprob: -18.750003814697266
    6. '(hr' → logprob: -18.750003814697266
    7. '_hp' → logprob: -18.750003814697266
    8. '(max' → logprob: -19.125003814697266
    9. ' hp' → logprob: -19.250003814697266
    10. '(val' → logprob: -19.250003814697266

Token 339: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006525091012008488
    2. '_possible' → logprob: -8.125652313232422
    3. 'P' → logprob: -8.625652313232422
    4. '_p' → logprob: -9.000652313232422
    5. 'possible' → logprob: -10.250652313232422
    6. 'hp' → logprob: -12.750652313232422
    7. 'Possible' → logprob: -12.875652313232422
    8. '_hp' → logprob: -13.500652313232422
    9. 'ip' → logprob: -13.750652313232422
    10. '_' → logprob: -14.000652313232422

Token 340: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.000293751887511462
    2. ')' → logprob: -8.375293731689453
    3. 'possible' → logprob: -10.000293731689453
    4. '_)' → logprob: -11.625293731689453
    5. 'Possible' → logprob: -12.000293731689453
    6. ')_' → logprob: -14.250293731689453
    7. '_' → logprob: -14.750293731689453
    8. '_used' → logprob: -14.750293731689453
    9. '))' → logprob: -15.250293731689453
    10. ' possible' → logprob: -15.750293731689453

Token 341: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ' )' → logprob: -11.125028610229492
    3. '<|end|>' → logprob: -11.875028610229492
    4. '   ' → logprob: -13.250028610229492
    5. '}' → logprob: -13.375028610229492
    6. ')}' → logprob: -14.000028610229492
    7. ')
' → logprob: -14.000028610229492
    8. '())' → logprob: -15.000028610229492
    9. '))' → logprob: -15.125028610229492
    10. ',' → logprob: -15.125028610229492

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4070197641849518
    2. '
' → logprob: -1.1570197343826294
    3. '<|end|>' → logprob: -4.28201961517334
    4. '    
' → logprob: -6.28201961517334
    5. ' while' → logprob: -6.53201961517334
    6. 'while' → logprob: -6.90701961517334
    7. ' for' → logprob: -7.28201961517334
    8. ')' → logprob: -8.15701961517334
    9. 'for' → logprob: -8.40701961517334
    10. '  
' → logprob: -9.28201961517334

Token 343: ' alive' (ID: 23757)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04009268060326576
    2. ' for' → logprob: -3.415092706680298
    3. '   ' → logprob: -5.165092468261719
    4. 'def' → logprob: -8.540092468261719
    5. 'current' → logprob: -8.665092468261719
    6. '
' → logprob: -9.665092468261719
    7. 'result' → logprob: -10.165092468261719
    8. '    
' → logprob: -10.165092468261719
    9. 'pos' → logprob: -10.665092468261719
    10. 'while' → logprob: -10.665092468261719

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07233475148677826
    2. '=' → logprob: -2.6973347663879395
    3. '_' → logprob: -6.0723347663879395
    4. ' ' → logprob: -10.197334289550781
    5. ' ==' → logprob: -10.822334289550781
    6. ',' → logprob: -11.447334289550781
    7. ')' → logprob: -12.822334289550781
    8. ' +=' → logprob: -12.822334289550781
    9. '=True' → logprob: -13.072334289550781
    10. '   ' → logprob: -13.197334289550781

Token 345: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019438649760559201
    2. ' True' → logprob: -6.251944065093994
    3. 'HP' → logprob: -11.251943588256836
    4. '(True' → logprob: -13.126943588256836
    5. 'true' → logprob: -16.126943588256836
    6. '=True' → logprob: -16.376943588256836
    7. '   ' → logprob: -17.126943588256836
    8. '1' → logprob: -17.751943588256836
    9. ' HP' → logprob: -18.001943588256836
    10. 'TRUE' → logprob: -18.376943588256836

Token 346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3813888728618622
    2. 'for' → logprob: -2.0063889026641846
    3. '
' → logprob: -2.5063889026641846
    4. ' for' → logprob: -2.7563889026641846
    5. '    
' → logprob: -4.3813886642456055
    6. '<|end|>' → logprob: -4.5063886642456055
    7. ' 
' → logprob: -5.6313886642456055
    8. 'while' → logprob: -6.1313886642456055
    9. '  
' → logprob: -6.3813886642456055
    10. ',' → logprob: -6.6313886642456055

Token 347: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48851439356803894
    2. '   ' → logprob: -1.1135144233703613
    3. ' for' → logprob: -2.8635144233703613
    4. 'i' → logprob: -7.863514423370361
    5. 'pos' → logprob: -8.613513946533203
    6. 'while' → logprob: -9.363513946533203
    7. ' i' → logprob: -9.738513946533203
    8. 'idx' → logprob: -9.863513946533203
    9. '    
' → logprob: -10.113513946533203
    10. 'current' → logprob: -10.238513946533203

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.4881879400927573e-05
    2. 'i' → logprob: -11.250035285949707
    3. ' for' → logprob: -11.375035285949707
    4. '   ' → logprob: -12.750035285949707
    5. 'idx' → logprob: -13.125035285949707
    6. 'pos' → logprob: -13.250035285949707
    7. 'def' → logprob: -14.375035285949707
    8. 'fo' → logprob: -14.375035285949707
    9. 'move' → logprob: -14.625035285949707
    10. 'index' → logprob: -14.625035285949707

Token 349: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.019177252426743507
    2. 'd' → logprob: -4.144177436828613
    3. ' direction' → logprob: -6.019177436828613
    4. 'direction' → logprob: -8.394177436828613
    5. '(d' → logprob: -8.894177436828613
    6. ' (' → logprob: -9.019177436828613
    7. '	d' → logprob: -9.519177436828613
    8. ' dir' → logprob: -10.019177436828613
    9. '_d' → logprob: -11.019177436828613
    10. ' ' → logprob: -11.269177436828613

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005732863210141659
    2. ' ,' → logprob: -7.75057315826416
    3. ',n' → logprob: -9.00057315826416
    4. ',num' → logprob: -12.62557315826416
    5. ',m' → logprob: -12.62557315826416
    6. ' in' → logprob: -12.75057315826416
    7. '_,' → logprob: -13.00057315826416
    8. ',length' → logprob: -13.87557315826416
    9. ',i' → logprob: -14.25057315826416
    10. 'n' → logprob: -14.25057315826416

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02026483602821827
    2. ' n' → logprob: -4.020264625549316
    3. 'steps' → logprob: -6.270264625549316
    4. 'num' → logprob: -9.770264625549316
    5. 'dist' → logprob: -9.770264625549316
    6. 'step' → logprob: -10.270264625549316
    7. ' steps' → logprob: -10.520264625549316
    8. '   ' → logprob: -11.520264625549316
    9. 'cnt' → logprob: -11.520264625549316
    10. ' ' → logprob: -12.270264625549316

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014169150963425636
    2. 'in' → logprob: -4.264169216156006
    3. '   ' → logprob: -13.139168739318848
    4. ' ' → logprob: -13.639168739318848
    5. '  ' → logprob: -14.514168739318848
    6. '	in' → logprob: -14.639168739318848
    7. 's' → logprob: -15.389168739318848
    8. ',' → logprob: -15.389168739318848
    9. 'n' → logprob: -15.389168739318848
    10. ' i' → logprob: -15.514168739318848

Token 353: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.5071372985839844
    2. 'moves' → logprob: -1.0071372985839844
    3. 'range' → logprob: -4.132137298583984
    4. ' range' → logprob: -4.132137298583984
    5. 'move' → logprob: -8.882137298583984
    6. 'm' → logprob: -9.507137298583984
    7. ' ' → logprob: -9.757137298583984
    8. ' move' → logprob: -10.257137298583984
    9. '.moves' → logprob: -11.007137298583984
    10. '   ' → logprob: -11.132137298583984

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033796546631492674
    2. ':
' → logprob: -8.000337600708008
    3. ' :' → logprob: -13.875337600708008
    4. '=' → logprob: -14.750337600708008
    5. '   ' → logprob: -14.875337600708008
    6. '):' → logprob: -15.375337600708008
    7. ':
' → logprob: -15.625337600708008
    8. ':

' → logprob: -16.000337600708008
    9. ',' → logprob: -17.250337600708008
    10. ':**' → logprob: -17.500337600708008

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3003636598587036
    2. ':' → logprob: -1.6753636598587036
    3. ':
' → logprob: -3.425363540649414
    4. '<|end|>' → logprob: -3.800363540649414
    5. '   ' → logprob: -4.925363540649414
    6. '
' → logprob: -6.050363540649414
    7. ',' → logprob: -6.050363540649414
    8. '    ' → logprob: -6.800363540649414
    9. '<|end|>' → logprob: -7.050363540649414
    10. ' for' → logprob: -7.425363540649414

Token 356: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028470108285546303
    2. 'for' (adapté à ' for') → logprob: -3.653470039367676
    3. '       ' → logprob: -7.028470039367676
    4. '    ' → logprob: -7.778470039367676
    5. '   ' → logprob: -7.778470039367676
    6. '
' → logprob: -8.278470039367676
    7. ' 
' → logprob: -9.278470039367676
    8. '        
' → logprob: -10.778470039367676
    9. '	for' → logprob: -10.778470039367676
    10. '    
' → logprob: -11.403470039367676

Token 357: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.008631349541246891
    2. '_' → logprob: -4.758631229400635
    3. '_step' → logprob: -11.258631706237793
    4. ' i' → logprob: -13.008631706237793
    5. ' step' → logprob: -14.258631706237793
    6. '_i' → logprob: -14.633631706237793
    7. ' ' → logprob: -14.633631706237793
    8. 'step' → logprob: -16.758630752563477
    9. '_steps' → logprob: -17.008630752563477
    10. 'i' → logprob: -18.008630752563477

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368869423866272
    2. 'in' → logprob: -3.40868878364563
    3. ' ' → logprob: -10.15868854522705
    4. '  ' → logprob: -14.03368854522705
    5. ' _' → logprob: -14.28368854522705
    6. ' i' → logprob: -14.40868854522705
    7. '	in' → logprob: -14.53368854522705
    8. '   ' → logprob: -14.65868854522705
    9. 'i' → logprob: -15.15868854522705
    10. '0' → logprob: -15.65868854522705

Token 359: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.50020408630371
    4. '	range' → logprob: -19.00020408630371
    5. '_range' → logprob: -19.75020408630371
    6. 'rang' → logprob: -19.87520408630371
    7. '   ' → logprob: -20.37520408630371
    8. 'n' → logprob: -21.12520408630371
    9. 'ran' → logprob: -21.37520408630371
    10. 'r' → logprob: -21.50020408630371

Token 360: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -11.250033378601074
    3. ' (' → logprob: -11.250033378601074
    4. 'n' → logprob: -12.375033378601074
    5. ' n' → logprob: -12.750033378601074
    6. '   ' → logprob: -19.125032424926758
    7. '	n' → logprob: -19.375032424926758
    8. '(int' → logprob: -20.750032424926758
    9. '(
' → logprob: -21.125032424926758
    10. '    ' → logprob: -21.375032424926758

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14323261380195618
    2. '):
' → logprob: -2.018232583999634
    3. ' ):' → logprob: -7.893232822418213
    4. '       ' → logprob: -9.768232345581055
    5. ' ):
' → logprob: -10.143232345581055
    6. ')' → logprob: -10.893232345581055
    7. ':' → logprob: -10.893232345581055
    8. '           ' → logprob: -11.018232345581055
    9. '   ' → logprob: -11.143232345581055
    10. '):
' → logprob: -11.643232345581055

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01341044157743454
    2. '
' → logprob: -4.638410568237305
    3. '            
' → logprob: -6.263410568237305
    4. ' 
' → logprob: -7.888410568237305
    5. ' if' → logprob: -8.013410568237305
    6. ',' → logprob: -8.888410568237305
    7. '<|end|>' → logprob: -9.263410568237305
    8. '       ' → logprob: -9.388410568237305
    9. ' x' → logprob: -9.388410568237305
    10. ':
' → logprob: -9.513410568237305

Token 363: ' nx' (ID: 50118)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4478665590286255
    2. 'x' → logprob: -1.4478665590286255
    3. ' nx' → logprob: -2.322866439819336
    4. 'nx' (adapté à ' nx') → logprob: -3.697866439819336
    5. ' new' → logprob: -6.572866439819336
    6. '   ' → logprob: -7.822866439819336
    7. '           ' → logprob: -8.072866439819336
    8. 'new' → logprob: -8.322866439819336
    9. '	x' → logprob: -8.572866439819336
    10. ' if' → logprob: -8.822866439819336

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0703529641032219
    2. '=' → logprob: -2.6953530311584473
    3. ',' → logprob: -7.820353031158447
    4. '=x' → logprob: -11.695352554321289
    5. ' ' → logprob: -13.195352554321289
    6. ' +=' → logprob: -13.445352554321289
    7. 'x' → logprob: -13.695352554321289
    8. ' ,' → logprob: -14.570352554321289
    9. ',x' → logprob: -14.820352554321289
    10. ')' → logprob: -15.195352554321289

Token 365: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. '	x' → logprob: -18.251928329467773
    4. '   ' → logprob: -20.626928329467773
    5. '(x' → logprob: -21.876928329467773
    6. ' ' → logprob: -22.376928329467773
    7. '"x' → logprob: -22.376928329467773
    8. ')x' → logprob: -22.501928329467773
    9. '
' → logprob: -23.001928329467773
    10. ',x' → logprob: -23.251928329467773

Token 366: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020915418863297
    2. '+' → logprob: -2.3502092361450195
    3. '<|end|>' → logprob: -14.60020923614502
    4. ' +=' → logprob: -14.72520923614502
    5. ' +
' → logprob: -14.97520923614502
    6. ' ' → logprob: -15.10020923614502
    7. ' ' → logprob: -15.22520923614502
    8. '+x' → logprob: -15.72520923614502
    9. '+y' → logprob: -16.475208282470703
    10. '+n' → logprob: -16.475208282470703

Token 367: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0007110013975761831
    2. ' dx' → logprob: -7.250710964202881
    3. '1' → logprob: -14.875711441040039
    4. '(dx' → logprob: -15.000711441040039
    5. '_dx' → logprob: -16.25071144104004
    6. '
' → logprob: -16.25071144104004
    7. '.dx' → logprob: -16.50071144104004
    8. 'd' → logprob: -17.00071144104004
    9. 'DX' → logprob: -17.62571144104004
    10. '   ' → logprob: -17.75071144104004

Token 368: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.27099974633893e-05
    2. 'd' → logprob: -11.375012397766113
    3. '[' → logprob: -13.875012397766113
    4. '(d' → logprob: -16.00001335144043
    5. ' [' → logprob: -16.37501335144043
    6. '```' → logprob: -17.87501335144043
    7. ' d' → logprob: -18.25001335144043
    8. '[
' → logprob: -18.25001335144043
    9. '
' → logprob: -18.87501335144043
    10. '	d' → logprob: -19.12501335144043

Token 369: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.42910417914390564
    2. ']' → logprob: -1.054104208946228
    3. ']
' → logprob: -8.05410385131836
    4. ']

' → logprob: -10.30410385131836
    5. '][' → logprob: -11.17910385131836
    6. '[x' → logprob: -11.80410385131836
    7. '[y' → logprob: -12.05410385131836
    8. '[' → logprob: -12.17910385131836
    9. ' ]
' → logprob: -12.42910385131836
    10. '],' → logprob: -12.42910385131836

Token 370: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' ny' (ID: 4423)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8186259269714355
    2. 'ny' (adapté à ' ny') → logprob: -1.0686259269714355
    3. ' ny' → logprob: -1.5686259269714355
    4. ' y' → logprob: -4.9436259269714355
    5. '   ' → logprob: -11.193626403808594
    6. 'n' → logprob: -13.443626403808594
    7. 'vy' → logprob: -13.818626403808594
    8. '    ' → logprob: -14.068626403808594
    9. 'uy' → logprob: -14.193626403808594
    10. 'py' → logprob: -14.443626403808594

Token 372: ' =' (ID: 314)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0049300044775009155
    2. '[d' → logprob: -5.879930019378662
    3. '[x' → logprob: -6.754930019378662
    4. '[' → logprob: -7.129930019378662
    5. 'y' → logprob: -9.754929542541504
    6. '][' → logprob: -10.504929542541504
    7. '<|end|>' → logprob: -10.879929542541504
    8. ' y' → logprob: -11.629929542541504
    9. ' [' → logprob: -11.754929542541504
    10. '[user' → logprob: -11.879929542541504

Token 373: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018150178715586662
    2. ' y' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.143150329589844
    4. '	y' → logprob: -16.518150329589844
    5. '           ' → logprob: -18.143150329589844
    6. '(y' → logprob: -18.143150329589844
    7. ' ' → logprob: -18.893150329589844
    8. ''y' → logprob: -19.018150329589844
    9. '  ' → logprob: -19.268150329589844
    10. '       ' → logprob: -19.393150329589844

Token 374: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16027773916721344
    2. '+' → logprob: -1.9102777242660522
    3. '+d' → logprob: -10.035277366638184
    4. '[d' → logprob: -12.660277366638184
    5. '<|end|>' → logprob: -13.160277366638184
    6. ' +
' → logprob: -13.535277366638184
    7. '[' → logprob: -13.910277366638184
    8. '+[' → logprob: -14.160277366638184
    9. '+
' → logprob: -14.285277366638184
    10. ' +=' → logprob: -15.160277366638184

Token 375: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.08119051903486252
    2. ' dy' → logprob: -2.581190586090088
    3. '1' → logprob: -6.081190586090088
    4. 'y' → logprob: -11.83119010925293
    5. 'd' → logprob: -13.08119010925293
    6. ' ' → logprob: -13.95619010925293
    7. ' y' → logprob: -14.33119010925293
    8. '.dy' → logprob: -14.33119010925293
    9. 'dx' → logprob: -14.95619010925293
    10. 'dj' → logprob: -16.08119010925293

Token 376: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -2.1008713702030946e-06
    2. 'd' → logprob: -13.125001907348633
    3. ' d' → logprob: -17.375001907348633
    4. '[' → logprob: -18.000001907348633
    5. '(d' → logprob: -18.625001907348633
    6. '=d' → logprob: -19.250001907348633
    7. ' [' → logprob: -19.750001907348633
    8. '	d' → logprob: -20.000001907348633
    9. ')d' → logprob: -20.125001907348633
    10. '[D' → logprob: -20.375001907348633

Token 377: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017195509281009436
    2. ']
' → logprob: -9.250171661376953
    3. '[d' → logprob: -10.250171661376953
    4. '']' → logprob: -11.250171661376953
    5. '           ' → logprob: -11.375171661376953
    6. ' ]' → logprob: -12.000171661376953
    7. '       ' → logprob: -12.875171661376953
    8. ']>' → logprob: -13.625171661376953
    9. '"]' → logprob: -13.750171661376953
    10. ']

' → logprob: -14.000171661376953

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021350428462028503
    2. '            
' → logprob: -4.521350383758545
    3. '
' → logprob: -5.271350383758545
    4. '<|end|>' → logprob: -6.021350383758545
    5. ' if' → logprob: -7.146350383758545
    6. ' 
' → logprob: -7.396350383758545
    7. '  
' → logprob: -8.021350860595703
    8. '```' → logprob: -8.271350860595703
    9. 'if' → logprob: -8.896350860595703
    10. '           
' → logprob: -9.396350860595703

Token 379: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5133588910102844
    2. 'if' → logprob: -1.3883588314056396
    3. '           ' → logprob: -1.8883588314056396
    4. ' x' → logprob: -8.263359069824219
    5. 'x' → logprob: -8.763359069824219
    6. '#' (adapté à ' #') → logprob: -9.388359069824219
    7. '            
' → logprob: -9.513359069824219
    8. '   ' → logprob: -9.638359069824219
    9. '```' → logprob: -10.638359069824219
    10. '       ' → logprob: -11.263359069824219

Token 380: ' use' (ID: 1199)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013815441634505987
    2. '#' → logprob: -6.6263813972473145
    3. ' if' → logprob: -10.376381874084473
    4. '           ' → logprob: -11.001381874084473
    5. 'If' → logprob: -11.876381874084473
    6. '
' → logprob: -15.126381874084473
    7. '            
' → logprob: -15.876381874084473
    8. '```' → logprob: -16.001380920410156
    9. '   ' → logprob: -16.376380920410156
    10. 'continue' → logprob: -16.876380920410156

Token 381: ' pot' (ID: 3208)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0675051212310791
    2. ' pot' → logprob: -3.192505121231079
    3. 'pot' → logprob: -4.1925048828125
    4. '_' → logprob: -4.8175048828125
    5. 'HP' → logprob: -7.9425048828125
    6. ' ' → logprob: -9.3175048828125
    7. '           ' → logprob: -9.6925048828125
    8. 'p' → logprob: -9.9425048828125
    9. ' HP' → logprob: -9.9425048828125
    10. '_hp' → logprob: -9.9425048828125

Token 382: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.008680874481797218
    2. 'otions' → logprob: -4.758680820465088
    3. 't' → logprob: -10.258681297302246
    4. 'ion' → logprob: -12.008681297302246
    5. 's' → logprob: -12.133681297302246
    6. 'ations' → logprob: -12.258681297302246
    7. 'utions' → logprob: -12.258681297302246
    8. '_' → logprob: -13.383681297302246
    9. '_p' → logprob: -13.383681297302246
    10. 'ons' → logprob: -14.008681297302246

Token 383: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1943548023700714
    2. '=' → logprob: -2.444354772567749
    3. ' =' → logprob: -2.444354772567749
    4. '            ' → logprob: -6.569355010986328
    5. '(' → logprob: -7.694355010986328
    6. '               ' → logprob: -7.819355010986328
    7. '            
' → logprob: -8.819355010986328
    8. ' (' → logprob: -9.069355010986328
    9. '          ' → logprob: -9.444355010986328
    10. '   ' → logprob: -9.444355010986328

Token 384: ' entering' (ID: 25605)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.8068938851356506
    2. 'enter' → logprob: -1.3068938255310059
    3. ' moving' → logprob: -2.306893825531006
    4. 'x' → logprob: -2.306893825531006
    5. ' entering' → logprob: -2.556893825531006
    6. ' x' → logprob: -5.556893825531006
    7. '           ' → logprob: -6.931893825531006
    8. '   ' → logprob: -8.181894302368164
    9. '(x' → logprob: -8.306894302368164
    10. ' stepping' → logprob: -8.556894302368164

Token 385: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7538952827453613
    2. '(nx' → logprob: -1.3788952827453613
    3. 'if' → logprob: -2.2538952827453613
    4. ' if' → logprob: -2.6288952827453613
    5. ' (' → logprob: -3.5038952827453613
    6. 'nx' → logprob: -3.6288952827453613
    7. '(' → logprob: -4.253895282745361
    8. '(c' → logprob: -4.878895282745361
    9. '            ' → logprob: -5.253895282745361
    10. 'c' → logprob: -5.503895282745361

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005636520218104124
    2. '            
' → logprob: -6.255636692047119
    3. ' if' → logprob: -6.630636692047119
    4. '            ' → logprob: -7.380636692047119
    5. 'if' → logprob: -7.755636692047119
    6. ' (' → logprob: -7.755636692047119
    7. 'HP' → logprob: -8.505636215209961
    8. '(' → logprob: -8.505636215209961
    9. ' ' → logprob: -8.630636215209961
    10. '               ' → logprob: -10.380636215209961

Token 387: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' (adapté à ' HP') → logprob: -0.0015121236210688949
    2. '           ' → logprob: -6.876512050628662
    3. ' HP' → logprob: -7.751512050628662
    4. 'if' → logprob: -10.37651252746582
    5. '   ' → logprob: -11.62651252746582
    6. ' if' → logprob: -12.50151252746582
    7. '               ' → logprob: -13.62651252746582
    8. ' ' → logprob: -14.12651252746582
    9. '            ' → logprob: -14.50151252746582
    10. '```' → logprob: -14.62651252746582

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.72520637512207
    4. '＝' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.22520637512207
    6. '   ' → logprob: -17.72520637512207
    7. ',' → logprob: -17.97520637512207
    8. '[' → logprob: -17.97520637512207
    9. '<|end|>' → logprob: -18.10020637512207
    10. '<|end|>' → logprob: -18.22520637512207

Token 389: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.2519298195838928
    2. ' use' → logprob: -1.501929759979248
    3. 'max' → logprob: -14.751930236816406
    4. '	use' → logprob: -16.001930236816406
    5. ' max' → logprob: -16.126930236816406
    6. '(use' → logprob: -16.626930236816406
    7. '   ' → logprob: -18.251930236816406
    8. 'min' → logprob: -18.751930236816406
    9. ' ' → logprob: -18.876930236816406
    10. ' min' → logprob: -19.126930236816406

Token 390: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.125001907348633
    3. '_P' → logprob: -19.625001907348633
    4. '```' → logprob: -19.750001907348633
    5. '_use' → logprob: -19.875001907348633
    6. ' _' → logprob: -20.750001907348633
    7. '_put' → logprob: -21.500001907348633
    8. '_pos' → logprob: -21.500001907348633
    9. '_tokens' → logprob: -21.750001907348633
    10. '_pres' → logprob: -21.875001907348633

Token 391: 'otions' (ID: 54764)
  Prédit: 'otions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otions' → logprob: -0.0008753741858527064
    2. 'pot' → logprob: -7.500875473022461
    3. 'ot' → logprob: -8.125875473022461
    4. '_p' → logprob: -11.500875473022461
    5. '_' → logprob: -11.875875473022461
    6. 't' → logprob: -13.500875473022461
    7. '
' → logprob: -13.625875473022461
    8. 's' → logprob: -13.750875473022461
    9. 'o' → logprob: -14.250875473022461
    10. 'otion' → logprob: -14.375875473022461

Token 392: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.047134305234067e-05
    2. ' (' → logprob: -10.875030517578125
    3. '(H' → logprob: -11.625030517578125
    4. '(
' → logprob: -14.250030517578125
    5. 'HP' → logprob: -14.250030517578125
    6. '()' → logprob: -15.375030517578125
    7. '(max' → logprob: -15.500030517578125
    8. ' ' → logprob: -15.875030517578125
    9. ')' → logprob: -15.875030517578125
    10. '((' → logprob: -16.125030517578125

Token 393: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.004132661037147045
    2. '(' → logprob: -5.5041327476501465
    3. ')' → logprob: -10.004132270812988
    4. ' HP' → logprob: -11.754132270812988
    5. '_HP' → logprob: -14.629132270812988
    6. 'Hp' → logprob: -15.129132270812988
    7. ')(' → logprob: -15.879132270812988
    8. 'hp' → logprob: -16.629133224487305
    9. '   ' → logprob: -17.379133224487305
    10. '(H' → logprob: -17.754133224487305

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25205230712890625
    2. ')
' → logprob: -1.5020523071289062
    3. ')
' → logprob: -9.502052307128906
    4. ')

' → logprob: -10.502052307128906
    5. '           ' → logprob: -11.377052307128906
    6. '-' → logprob: -12.627052307128906
    7. ' )
' → logprob: -13.502052307128906
    8. ' )' → logprob: -13.502052307128906
    9. ' -' → logprob: -14.377052307128906
    10. '   ' → logprob: -14.877052307128906

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034386925399303436
    2. '<|end|>' → logprob: -3.5343868732452393
    3. ' if' → logprob: -6.284387111663818
    4. '            
' → logprob: -6.409387111663818
    5. '
' → logprob: -8.03438663482666
    6. 'if' → logprob: -8.40938663482666
    7. '   ' → logprob: -9.15938663482666
    8. '  
' → logprob: -9.53438663482666
    9. '```' → logprob: -9.65938663482666
    10. '<|end|>' → logprob: -9.65938663482666

Token 396: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.94426429271698
    2. 'if' → logprob: -1.06926429271698
    3. ' if' → logprob: -1.31926429271698
    4. 'x' → logprob: -8.81926441192627
    5. '   ' → logprob: -9.19426441192627
    6. '<|end|>' → logprob: -10.06926441192627
    7. '#' (adapté à ' #') → logprob: -10.19426441192627
    8. ' x' → logprob: -10.56926441192627
    9. '            
' → logprob: -10.56926441192627
    10. '            ' → logprob: -10.81926441192627

Token 397: ' enter' (ID: 5747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05758392810821533
    2. 'x' → logprob: -2.932583808898926
    3. '#' → logprob: -6.307583808898926
    4. ' if' → logprob: -7.307583808898926
    5. '           ' → logprob: -8.932583808898926
    6. ' x' → logprob: -10.807583808898926
    7. 'If' → logprob: -11.057583808898926
    8. '
' → logprob: -11.182583808898926
    9. '   ' → logprob: -11.557583808898926
    10. 'c' → logprob: -12.807583808898926

Token 398: ' cell' (ID: 4206)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2380409240722656
    2. ' cave' → logprob: -1.2380409240722656
    3. 'c' → logprob: -1.7380409240722656
    4. 'if' → logprob: -1.7380409240722656
    5. 'cell' → logprob: -4.113040924072266
    6. ' the' → logprob: -4.613040924072266
    7. 'x' → logprob: -4.863040924072266
    8. ' =' → logprob: -4.988040924072266
    9. ' cell' → logprob: -5.238040924072266
    10. ' (' → logprob: -5.238040924072266

Token 399: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012423822656273842
    2. ' if' → logprob: -5.512423992156982
    3. '<|end|>' → logprob: -5.887423992156982
    4. 'x' → logprob: -6.012423992156982
    5. 'if' → logprob: -6.887423992156982
    6. ' x' → logprob: -7.012423992156982
    7. '            
' → logprob: -8.137423515319824
    8. '   ' → logprob: -8.262423515319824
    9. ' =' → logprob: -8.887423515319824
    10. '            ' → logprob: -9.387423515319824

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1255950927734375
    2. ' if' → logprob: -2.7505950927734375
    3. ' x' → logprob: -3.6255950927734375
    4. 'if' → logprob: -4.5005950927734375
    5. 'x' → logprob: -4.6255950927734375
    6. '   ' → logprob: -5.8755950927734375
    7. ' =' → logprob: -6.3755950927734375
    8. '            
' → logprob: -7.2505950927734375
    9. '
' → logprob: -8.000595092773438
    10. '            ' → logprob: -8.250595092773438

Token 401: ' trap' (ID: 34270)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38804343342781067
    2. 'if' → logprob: -1.1380434036254883
    3. ' if' → logprob: -8.013043403625488
    4. '   ' → logprob: -8.388043403625488
    5. '           ' → logprob: -8.763043403625488
    6. 'cell' → logprob: -8.763043403625488
    7. '#' → logprob: -9.138043403625488
    8. 'c' → logprob: -9.138043403625488
    9. ' x' → logprob: -9.638043403625488
    10. 'char' → logprob: -12.263043403625488

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29550814628601074
    2. '=' → logprob: -1.9205081462860107
    3. '_type' → logprob: -2.4205081462860107
    4. '_char' → logprob: -4.92050838470459
    5. '_damage' → logprob: -5.17050838470459
    6. '_' → logprob: -5.29550838470459
    7. '_cell' → logprob: -6.42050838470459
    8. '_symbol' → logprob: -8.54550838470459
    9. 'type' → logprob: -8.79550838470459
    10. 'damage' → logprob: -9.54550838470459

Token 403: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023438217118382454
    2. ' cave' → logprob: -3.7734382152557373
    3. 'None' → logprob: -10.023438453674316
    4. '   ' → logprob: -10.273438453674316
    5. ' c' → logprob: -10.523438453674316
    6. 'trap' → logprob: -10.523438453674316
    7. ' None' → logprob: -10.648438453674316
    8. ' ' → logprob: -11.523438453674316
    9. '	c' → logprob: -12.023438453674316
    10. ''' → logprob: -12.898438453674316

Token 404: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.87500286102295
    3. '```' → logprob: -13.87500286102295
    4. '[x' → logprob: -14.50000286102295
    5. 'nx' → logprob: -15.37500286102295
    6. ' [' → logprob: -15.50000286102295
    7. '(nx' → logprob: -16.750003814697266
    8. '

' → logprob: -17.125003814697266
    9. '\[' → logprob: -17.125003814697266
    10. '``' → logprob: -17.250003814697266

Token 405: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001991298486245796
    2. '[x' → logprob: -8.625199317932129
    3. '[' → logprob: -11.875199317932129
    4. '```' → logprob: -12.250199317932129
    5. '[n' → logprob: -12.500199317932129
    6. 'nx' → logprob: -14.625199317932129
    7. '   ' → logprob: -14.750199317932129
    8. '``' → logprob: -14.875199317932129
    9. '][' → logprob: -14.875199317932129
    10. '
' → logprob: -14.875199317932129

Token 406: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004331725067459047
    2. '[n' → logprob: -8.125432968139648
    3. '[' → logprob: -9.125432968139648
    4. ']' → logprob: -11.250432968139648
    5. ' ][' → logprob: -12.125432968139648
    6. '"][' → logprob: -12.250432968139648
    7. ''][' → logprob: -12.500432968139648
    8. '   ' → logprob: -14.875432968139648
    9. '```' → logprob: -15.250432968139648
    10. ']][' → logprob: -16.12543296813965

Token 407: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.696889623621246e-06
    2. ' ny' → logprob: -13.00000286102295
    3. 'nyi' → logprob: -14.87500286102295
    4. '
' → logprob: -17.500001907348633
    5. 'n' → logprob: -18.250001907348633
    6. 'ney' → logprob: -18.500001907348633
    7. 'y' → logprob: -18.875001907348633
    8. 'nye' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.750001907348633
    10. 'nya' → logprob: -20.000001907348633

Token 408: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007615509908646345
    2. ']
' → logprob: -4.882615566253662
    3. ']

' → logprob: -12.382615089416504
    4. ']
' → logprob: -12.882615089416504
    5. ' ]' → logprob: -13.257615089416504
    6. '']' → logprob: -14.882615089416504
    7. '])' → logprob: -16.25761604309082
    8. ')' → logprob: -16.50761604309082
    9. ']]' → logprob: -16.88261604309082
    10. '];' → logprob: -17.13261604309082

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5001665949821472
    2. '
' → logprob: -1.500166654586792
    3. ' if' → logprob: -2.625166654586792
    4. 'if' → logprob: -3.125166654586792
    5. '<|end|>' → logprob: -3.250166654586792
    6. '            
' → logprob: -4.750166416168213
    7. ')' → logprob: -6.875166416168213
    8. '```' → logprob: -6.875166416168213
    9. '<|end|>' → logprob: -7.125166416168213
    10. '   ' → logprob: -7.125166416168213

Token 410: ' damage' (ID: 10364)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06678113341331482
    2. ' if' → logprob: -3.1917810440063477
    3. 'HP' → logprob: -3.9417810440063477
    4. '           ' → logprob: -5.566781044006348
    5. '   ' → logprob: -8.816781044006348
    6. '
' → logprob: -10.566781044006348
    7. ' HP' → logprob: -10.566781044006348
    8. 'hp' → logprob: -10.941781044006348
    9. '            
' → logprob: -11.441781044006348
    10. '#' → logprob: -11.691781044006348

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132622241973877
    2. ' =' → logprob: -1.3132622241973877
    3. ' ' → logprob: -16.313262939453125
    4. ')' → logprob: -16.438262939453125
    5. '_' → logprob: -17.063262939453125
    6. '	' → logprob: -17.188262939453125
    7. ' +=' → logprob: -17.563262939453125
    8. ',' → logprob: -17.688262939453125
    9. '＝' → logprob: -17.688262939453125
    10. ']' → logprob: -17.813262939453125

Token 412: ' trap' (ID: 34270)
  Prédit: 'trap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trap' → logprob: -0.04415515437722206
    2. ' trap' → logprob: -3.1691551208496094
    3. '0' → logprob: -6.794155120849609
    4. ' ' → logprob: -10.66915512084961
    5. 'tr' → logprob: -12.29415512084961
    6. '   ' → logprob: -12.54415512084961
    7. 'Trap' → logprob: -14.54415512084961
    8. ' ' → logprob: -14.79415512084961
    9. '1' → logprob: -14.91915512084961
    10. 'trip' → logprob: -14.98165512084961

Token 413: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.2663550078868866
    2. 'if' → logprob: -2.516355037689209
    3. ' if' → logprob: -2.766355037689209
    4. 'trap' → logprob: -2.891355037689209
    5. 'damage' → logprob: -3.766355037689209
    6. '.get' → logprob: -5.516355037689209
    7. '=' → logprob: -5.641355037689209
    8. 'get' → logprob: -6.766355037689209
    9. '[' → logprob: -7.141355037689209
    10. '	damage' → logprob: -7.766355037689209

Token 414: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.75000286102295
    3. 'get' → logprob: -13.75000286102295
    4. '.' → logprob: -14.62500286102295
    5. ' .' → logprob: -14.62500286102295
    6. 'trap' → logprob: -18.125003814697266
    7. '.setdefault' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.625003814697266
    9. ' ' → logprob: -22.375003814697266
    10. '.Get' → logprob: -22.625003814697266

Token 415: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. 'trap' → logprob: -15.375000953674316
    4. '/tr' → logprob: -19.5
    5. ' trap' → logprob: -19.5
    6. ' (' → logprob: -20.0
    7. '(t' → logprob: -20.0
    8. '(trg' → logprob: -20.0
    9. '(trim' → logprob: -20.875
    10. '	tr' → logprob: -20.875

Token 416: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -3.8889261304575484e-06
    2. 'trap' → logprob: -13.250003814697266
    3. '(ap' → logprob: -14.375003814697266
    4. 'a' → logprob: -14.500003814697266
    5. '[' → logprob: -14.750003814697266
    6. 'ап' → logprob: -15.625003814697266
    7. '	ap' → logprob: -15.875003814697266
    8. 'op' → logprob: -16.000003814697266
    9. 'AP' → logprob: -17.375003814697266
    10. '_ap' → logprob: -17.875003814697266

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001375089050270617
    2. '0' → logprob: -9.250137329101562
    3. 'if' → logprob: -10.875137329101562
    4. ' ,' → logprob: -11.375137329101562
    5. ')' → logprob: -11.625137329101562
    6. ' if' → logprob: -14.500137329101562
    7. '(),' → logprob: -15.000137329101562
    8. '1' → logprob: -15.875137329101562
    9. ',
' → logprob: -15.875137329101562
    10. ')
' → logprob: -16.000137329101562

Token 418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038407891406677663
    2. ' ' → logprob: -7.8753838539123535
    3. ')' → logprob: -12.750384330749512
    4. '   ' → logprob: -15.125384330749512
    5. '1' → logprob: -15.375384330749512
    6. '           ' → logprob: -16.437883377075195
    7. '```' → logprob: -16.625383377075195
    8. '               ' → logprob: -17.000383377075195
    9. ' ' → logprob: -17.250383377075195
    10. '                   ' → logprob: -17.312883377075195

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. ')' → logprob: -14.437541961669922
    4. '   ' → logprob: -15.000041961669922
    5. '1' → logprob: -15.312541961669922
    6. '۰' → logprob: -17.375041961669922
    7. '```' → logprob: -17.437541961669922
    8. '  ' → logprob: -17.875041961669922
    9. '=' → logprob: -18.062541961669922
    10. '
' → logprob: -18.062541961669922

Token 420: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38691988587379456
    2. ')' → logprob: -1.1369198560714722
    3. ')
' → logprob: -10.386919975280762
    4. '           ' → logprob: -11.136919975280762
    5. ')

' → logprob: -12.886919975280762
    6. ' )
' → logprob: -15.261919975280762
    7. '   ' → logprob: -16.386919021606445
    8. '```' → logprob: -16.636919021606445
    9. '       ' → logprob: -16.761919021606445
    10. '-' → logprob: -16.761919021606445

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03308189660310745
    2. '
' → logprob: -3.5330820083618164
    3. '   ' → logprob: -6.783082008361816
    4. '            
' → logprob: -7.033082008361816
    5. '<|end|>' → logprob: -7.783082008361816
    6. 'HP' → logprob: -8.158082008361816
    7. '```' → logprob: -9.283082008361816
    8. '    
' → logprob: -9.283082008361816
    9. ' HP' → logprob: -9.533082008361816
    10. '\n' → logprob: -10.033082008361816

Token 422: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' (adapté à ' HP') → logprob: -0.008793608285486698
    2. '           ' → logprob: -4.883793830871582
    3. '
' → logprob: -7.258793830871582
    4. '   ' → logprob: -8.133793830871582
    5. ' HP' → logprob: -9.008793830871582
    6. '            
' → logprob: -10.758793830871582
    7. '```' → logprob: -10.883793830871582
    8. '_HP' → logprob: -12.258793830871582
    9. 'if' → logprob: -12.383793830871582
    10. '
' → logprob: -12.758793830871582

Token 423: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.16137909889221191
    2. ' -=' → logprob: -1.911379098892212
    3. '-' → logprob: -6.786378860473633
    4. '=' → logprob: -10.661378860473633
    5. ' -' → logprob: -13.786378860473633
    6. '+=' → logprob: -14.536378860473633
    7. '	' → logprob: -16.036378860473633
    8. ' ' → logprob: -16.411378860473633
    9. '   ' → logprob: -17.036378860473633
    10. '```' → logprob: -17.036378860473633

Token 424: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.00020354038861114532
    2. ' damage' → logprob: -8.500203132629395
    3. '	damage' → logprob: -17.75020408630371
    4. '.damage' → logprob: -20.37520408630371
    5. 'dam' → logprob: -20.62520408630371
    6. '_damage' → logprob: -22.00020408630371
    7. 'd' → logprob: -22.12520408630371
    8. 'Damage' → logprob: -22.75020408630371
    9. 'amage' → logprob: -23.25020408630371
    10. '
' → logprob: -23.87520408630371

Token 425: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006488138460554183
    2. '
' → logprob: -7.7506489753723145
    3. ' if' → logprob: -9.000648498535156
    4. '<|end|>' → logprob: -9.875648498535156
    5. 'if' → logprob: -10.875648498535156
    6. '            
' → logprob: -11.500648498535156
    7. ',' → logprob: -12.625648498535156
    8. '		' → logprob: -13.000648498535156
    9. '```' → logprob: -13.000648498535156
    10. '<|end|>' → logprob: -13.375648498535156

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017709736712276936
    2. ' if' → logprob: -6.626770973205566
    3. '<|end|>' → logprob: -8.876770973205566
    4. 'if' → logprob: -9.001770973205566
    5. '            
' → logprob: -9.376770973205566
    6. '
' → logprob: -10.501770973205566
    7. '   ' → logprob: -10.876770973205566
    8. '       ' → logprob: -11.001770973205566
    9. ' 
' → logprob: -11.501770973205566
    10. '  
' → logprob: -12.376770973205566

Token 427: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18364624679088593
    2. '           ' → logprob: -2.1836462020874023
    3. ' if' → logprob: -2.9336462020874023
    4. 'x' → logprob: -6.433646202087402
    5. ' x' → logprob: -8.058646202087402
    6. '   ' → logprob: -11.558646202087402
    7. '       ' → logprob: -13.308646202087402
    8. '```' → logprob: -14.183646202087402
    9. ' ' → logprob: -14.433646202087402
    10. '            ' → logprob: -14.683646202087402

Token 428: ' HP' (ID: 21979)
  Prédit: ' HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.018152514472603798
    2. 'HP' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.143152236938477
    4. '   ' → logprob: -15.018152236938477
    5. '_HP' → logprob: -15.268152236938477
    6. ' ' → logprob: -16.393152236938477
    7. '  ' → logprob: -17.893152236938477
    8. ' not' → logprob: -17.893152236938477
    9. 'H' → logprob: -18.143152236938477
    10. '	' → logprob: -18.643152236938477

Token 429: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04858827963471413
    2. ' <=' → logprob: -3.048588275909424
    3. ')<=' → logprob: -14.923588752746582
    4. '<' → logprob: -15.423588752746582
    5. '==' → logprob: -15.923588752746582
    6. '[' → logprob: -16.048587799072266
    7. ']<=' → logprob: -16.798587799072266
    8. ' ' → logprob: -16.798587799072266
    9. 'le' → logprob: -17.048587799072266
    10. '```' → logprob: -17.298587799072266

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -19.250335693359375
    4. '   ' → logprob: -19.500335693359375
    5. '00' → logprob: -19.750335693359375
    6. '۰' → logprob: -20.375335693359375
    7. '  ' → logprob: -21.000335693359375
    8. 'zero' → logprob: -21.250335693359375
    9. '<|end|>' → logprob: -21.250335693359375
    10. '000' → logprob: -21.500335693359375

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '00' → logprob: -20.5
    4. '```' → logprob: -21.125
    5. '000' → logprob: -21.25
    6. '۰' → logprob: -22.5
    7. '_' → logprob: -22.625
    8. '
' → logprob: -22.625
    9. ')' → logprob: -23.0
    10. '   ' → logprob: -23.125

Token 432: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5248015522956848
    2. ':' → logprob: -0.8998015522956848
    3. '               ' → logprob: -6.774801731109619
    4. '           ' → logprob: -8.274801254272461
    5. ' and' → logprob: -8.774801254272461
    6. ' or' → logprob: -9.649801254272461
    7. '):
' → logprob: -11.399801254272461
    8. ':

' → logprob: -11.399801254272461
    9. ',' → logprob: -11.774801254272461
    10. ':
' → logprob: -12.274801254272461

Token 433: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02839781530201435
    2. 'alive' → logprob: -3.903397798538208
    3. ' alive' → logprob: -5.278398036956787
    4. '           ' → logprob: -6.028398036956787
    5. '                   ' → logprob: -9.653397560119629
    6. 'break' → logprob: -9.903397560119629
    7. '   ' → logprob: -10.028397560119629
    8. '```' → logprob: -10.153397560119629
    9. ' break' → logprob: -10.528397560119629
    10. '_alive' → logprob: -10.528397560119629

Token 434: ' alive' (ID: 23757)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' (adapté à ' alive') → logprob: -0.13133592903614044
    2. ' alive' → logprob: -2.131335973739624
    3. 'x' → logprob: -6.381335735321045
    4. '               ' → logprob: -6.756335735321045
    5. ' x' → logprob: -7.381335735321045
    6. '           ' → logprob: -8.131336212158203
    7. 'print' → logprob: -8.131336212158203
    8. '   ' → logprob: -8.881336212158203
    9. '                   ' → logprob: -9.006336212158203
    10. ' print' → logprob: -11.006336212158203

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6360245943069458
    2. '=' → logprob: -0.7610245943069458
    3. '=False' → logprob: -6.261024475097656
    4. '==' → logprob: -7.011024475097656
    5. ' ==' → logprob: -7.636024475097656
    6. '=True' → logprob: -9.761024475097656
    7. ':' → logprob: -10.136024475097656
    8. '   ' → logprob: -12.011024475097656
    9. ' ' → logprob: -12.261024475097656
    10. '[' → logprob: -12.511024475097656

Token 436: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. '(False' → logprob: -20.500017166137695
    4. '   ' → logprob: -21.250017166137695
    5. 'false' → logprob: -21.750017166137695
    6. '=False' → logprob: -22.125017166137695
    7. 'F' → logprob: -24.375017166137695
    8. '```' → logprob: -24.625017166137695
    9. '_false' → logprob: -24.750017166137695
    10. 'break' → logprob: -24.875017166137695

Token 437: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002323437249287963
    2. '<|end|>' → logprob: -7.252323627471924
    3. ',' → logprob: -7.627323627471924
    4. '
' → logprob: -7.752323627471924
    5. '                   ' → logprob: -8.127323150634766
    6. ' and' → logprob: -8.877323150634766
    7. '                
' → logprob: -9.377323150634766
    8. '           ' → logprob: -9.627323150634766
    9. '                ' → logprob: -10.627323150634766
    10. '              ' → logprob: -11.002323150634766

Token 438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00040517066372558475
    2. '           ' → logprob: -8.250405311584473
    3. '                   ' → logprob: -9.375405311584473
    4. '       ' → logprob: -11.250405311584473
    5. '              ' → logprob: -11.375405311584473
    6. '                
' → logprob: -11.625405311584473
    7. '                ' → logprob: -12.125405311584473
    8. ',' → logprob: -12.500405311584473
    9. '   ' → logprob: -12.875405311584473
    10. '             ' → logprob: -13.375405311584473

Token 439: ' break' (ID: 2338)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6501652002334595
    2. 'break' (adapté à ' break') → logprob: -0.7751652002334595
    3. ' break' → logprob: -4.65016508102417
    4. ' x' → logprob: -5.27516508102417
    5. '           ' → logprob: -6.77516508102417
    6. 'print' → logprob: -7.15016508102417
    7. '               ' → logprob: -7.27516508102417
    8. '                   ' → logprob: -9.900165557861328
    9. '   ' → logprob: -10.900165557861328
    10. '       ' → logprob: -11.025165557861328

Token 440: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03361077234148979
    2. '<|end|>' → logprob: -3.9086108207702637
    3. '
' → logprob: -4.533610820770264
    4. '       ' → logprob: -7.283610820770264
    5. '            
' → logprob: -7.283610820770264
    6. '          ' → logprob: -8.908610343933105
    7. '<|end|>' → logprob: -9.283610343933105
    8. '               ' → logprob: -9.283610343933105
    9. '		' → logprob: -9.533610343933105
    10. '  
' → logprob: -9.533610343933105

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032176414970308542
    2. '<|end|>' → logprob: -6.628217697143555
    3. '
' → logprob: -7.378217697143555
    4. '       ' → logprob: -7.503217697143555
    5. 'x' → logprob: -8.253217697143555
    6. '            
' → logprob: -9.253217697143555
    7. '               ' → logprob: -9.628217697143555
    8. '```' → logprob: -9.753217697143555
    9. '          ' → logprob: -9.878217697143555
    10. '		' → logprob: -10.378217697143555

Token 442: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05887321010231972
    2. 'x' (adapté à ' x') → logprob: -2.933873176574707
    3. ' x' → logprob: -6.433873176574707
    4. '   ' → logprob: -7.058873176574707
    5. '       ' → logprob: -7.058873176574707
    6. '
' → logprob: -7.433873176574707
    7. '            
' → logprob: -11.433873176574707
    8. '               ' → logprob: -11.683873176574707
    9. '          ' → logprob: -11.808873176574707
    10. ' ' → logprob: -11.808873176574707

Token 443: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.137961283326149
    2. ',' → logprob: -2.1379613876342773
    3. ' =' → logprob: -4.512961387634277
    4. ',n' → logprob: -13.137961387634277
    5. ',y' → logprob: -13.887961387634277
    6. ' ,' → logprob: -13.887961387634277
    7. '=

' → logprob: -14.262961387634277
    8. '=n' → logprob: -14.387961387634277
    9. '<|end|>' → logprob: -14.637961387634277
    10. '+=' → logprob: -15.012961387634277

Token 444: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004727733787149191
    2. ' y' → logprob: -5.504727840423584
    3. 'ny' → logprob: -7.379727840423584
    4. ' ny' → logprob: -10.629727363586426
    5. 'nx' → logprob: -14.254727363586426
    6. '	y' → logprob: -14.879727363586426
    7. ' nx' → logprob: -17.129728317260742
    8. 'yn' → logprob: -17.629728317260742
    9. ''y' → logprob: -17.754728317260742
    10. '<|end|>' → logprob: -17.754728317260742

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004080658778548241
    2. ' =' → logprob: -5.504080772399902
    3. ',' → logprob: -13.129080772399902
    4. '=n' → logprob: -15.629080772399902
    5. '=

' → logprob: -18.004079818725586
    6. '<|end|>' → logprob: -18.129079818725586
    7. '.=' → logprob: -18.254079818725586
    8. '+=' → logprob: -18.379079818725586
    9. '＝' → logprob: -18.504079818725586
    10. '=x' → logprob: -18.754079818725586

Token 446: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.008754019625484943
    2. ' nx' → logprob: -4.758754253387451
    3. '(nx' → logprob: -8.883753776550293
    4. 'n' → logprob: -14.133753776550293
    5. 'ny' → logprob: -16.13375473022461
    6. '   ' → logprob: -17.63375473022461
    7. 'Nx' → logprob: -17.75875473022461
    8. '
' → logprob: -17.88375473022461
    9. '```' → logprob: -18.75875473022461
    10. 'new' → logprob: -19.13375473022461

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9981420336989686e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',y' → logprob: -12.875020027160645
    4. ',n' → logprob: -13.000020027160645
    5. ',
' → logprob: -15.500020027160645
    6. '<|end|>' → logprob: -16.750019073486328
    7. ',new' → logprob: -17.250019073486328
    8. ',next' → logprob: -17.750019073486328
    9. '‌,' → logprob: -17.750019073486328
    10. ',num' → logprob: -18.625019073486328

Token 448: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0015036711702123284
    2. ' ny' → logprob: -6.5015034675598145
    3. 'nyi' → logprob: -14.001503944396973
    4. 'nye' → logprob: -16.626502990722656
    5. 'nym' → logprob: -16.751502990722656
    6. ''ny' → logprob: -17.126502990722656
    7. ' ' → logprob: -17.251502990722656
    8. 'ney' → logprob: -17.251502990722656
    9. 'n' → logprob: -17.251502990722656
    10. 'nyt' → logprob: -17.376502990722656

Token 449: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3124910891056061
    2. '<|end|>' → logprob: -1.8124910593032837
    3. '   ' → logprob: -2.5624911785125732
    4. 'if' → logprob: -4.187490940093994
    5. '
' → logprob: -5.062490940093994
    6. ' if' → logprob: -5.437490940093994
    7. '<|end|>' → logprob: -7.812490940093994
    8. '           ' → logprob: -7.812490940093994
    9. '    
' → logprob: -8.562491416931152
    10. '```' → logprob: -8.562491416931152

Token 450: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3141753077507019
    2. 'if' → logprob: -1.4391753673553467
    3. '<|end|>' → logprob: -3.9391753673553467
    4. ' if' → logprob: -4.439175128936768
    5. 'print' → logprob: -8.064175605773926
    6. '       ' → logprob: -8.189175605773926
    7. '```' → logprob: -8.814175605773926
    8. 'else' → logprob: -8.939175605773926
    9. '	if' → logprob: -9.314175605773926
    10. ')' → logprob: -9.564175605773926

Token 451: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5176423788070679
    2. 'if' (adapté à ' if') → logprob: -1.1426423788070679
    3. '       ' → logprob: -2.5176424980163574
    4. ' if' → logprob: -5.517642498016357
    5. '<|end|>' → logprob: -8.0176420211792
    6. '	if' → logprob: -10.5176420211792
    7. ' ' → logprob: -10.6426420211792
    8. '           ' → logprob: -11.0176420211792
    9. '    ' → logprob: -11.8926420211792
    10. '
' → logprob: -11.8926420211792

Token 452: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.033648815006017685
    2. 'not' → logprob: -3.408648729324341
    3. ' alive' → logprob: -13.658648490905762
    4. 'alive' → logprob: -14.658648490905762
    5. '(not' → logprob: -14.658648490905762
    6. '	not' → logprob: -14.908648490905762
    7. 'break' → logprob: -15.283648490905762
    8. ' break' → logprob: -15.908648490905762
    9. ' ' → logprob: -16.158649444580078
    10. '   ' → logprob: -16.408649444580078

Token 453: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -0.5759419798851013
    2. 'alive' → logprob: -0.8259419798851013
    3. '_alive' → logprob: -13.075942039489746
    4. ' ' → logprob: -15.450942039489746
    5. 'al' → logprob: -15.950942039489746
    6. 'Alive' → logprob: -16.70094108581543
    7. ' ' → logprob: -16.95094108581543
    8. '   ' → logprob: -18.32594108581543
    9. 'dead' → logprob: -19.57594108581543
    10. '  ' → logprob: -19.57594108581543

Token 454: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008732284419238567
    2. ':
' → logprob: -4.758732318878174
    3. 'break' → logprob: -9.633731842041016
    4. '       ' → logprob: -11.383731842041016
    5. ' break' → logprob: -11.383731842041016
    6. '   ' → logprob: -11.633731842041016
    7. ':return' → logprob: -12.258731842041016
    8. '           ' → logprob: -12.383731842041016
    9. '_break' → logprob: -12.883731842041016
    10. '	break' → logprob: -13.008731842041016

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008965740562416613
    2. 'break' → logprob: -8.000896453857422
    3. ' break' → logprob: -8.250896453857422
    4. '       ' → logprob: -8.250896453857422
    5. '   ' → logprob: -10.500896453857422
    6. '               ' → logprob: -12.000896453857422
    7. '	break' → logprob: -12.875896453857422
    8. '	       ' → logprob: -14.125896453857422
    9. '		' → logprob: -14.375896453857422
    10. '          ' → logprob: -14.500896453857422

Token 456: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04152378812432289
    2. ' break' → logprob: -3.2915236949920654
    3. '           ' → logprob: -6.0415239334106445
    4. '       ' → logprob: -6.9165239334106445
    5. '   ' → logprob: -9.541523933410645
    6. '	break' → logprob: -10.291523933410645
    7. '               ' → logprob: -14.791523933410645
    8. '_break' → logprob: -15.166523933410645
    9. '```' → logprob: -15.291523933410645
    10. ' ' → logprob: -15.541523933410645

Token 457: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8118540048599243
    2. 'if' → logprob: -1.0618540048599243
    3. 'print' → logprob: -1.5618540048599243
    4. ' if' → logprob: -8.686854362487793
    5. '```' → logprob: -9.061854362487793
    6. '    
' → logprob: -10.186854362487793
    7. '<|end|>' → logprob: -10.436854362487793
    8. '
' → logprob: -10.811854362487793
    9. 'else' → logprob: -11.186854362487793
    10. ' print' → logprob: -11.936854362487793

Token 458: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2473136931657791
    2. '   ' → logprob: -1.7473137378692627
    3. 'if' → logprob: -3.1223137378692627
    4. '```' → logprob: -7.622313499450684
    5. ' if' → logprob: -8.997313499450684
    6. ' print' → logprob: -9.372313499450684
    7. '    
' → logprob: -9.997313499450684
    8. '
' → logprob: -10.372313499450684
    9. 'else' → logprob: -10.997313499450684
    10. '<|end|>' → logprob: -11.747313499450684

Token 459: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10022090375423431
    2. 'print' → logprob: -2.3502209186553955
    3. '   ' → logprob: -11.600220680236816
    4. ' if' → logprob: -12.600220680236816
    5. '```' → logprob: -13.850220680236816
    6. 'else' → logprob: -14.475220680236816
    7. ' print' → logprob: -16.100221633911133
    8. '    
' → logprob: -16.850221633911133
    9. '``' → logprob: -17.725221633911133
    10. 'for' → logprob: -17.975221633911133

Token 460: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -0.0009148012613877654
    2. 'alive' → logprob: -7.000914573669434
    3. ' not' → logprob: -13.250914573669434
    4. ' HP' → logprob: -14.875914573669434
    5. 'HP' → logprob: -14.875914573669434
    6. '_alive' → logprob: -15.125914573669434
    7. ' ' → logprob: -15.250914573669434
    8. 'Alive' → logprob: -16.37591552734375
    9. ' ' → logprob: -16.50091552734375
    10. ' al' → logprob: -17.25091552734375

Token 461: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01112587470561266
    2. ':
' → logprob: -4.5111260414123535
    3. '==' → logprob: -10.511125564575195
    4. ' and' → logprob: -11.136125564575195
    5. '       ' → logprob: -11.761125564575195
    6. '   ' → logprob: -11.761125564575195
    7. 'and' → logprob: -12.386125564575195
    8. ' ==' → logprob: -12.636125564575195
    9. 'print' → logprob: -12.761125564575195
    10. '=' → logprob: -13.136125564575195

Token 462: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.995624840259552
    2. '(x' → logprob: -1.4956247806549072
    3. 'x' → logprob: -1.9956247806549072
    4. 'c' → logprob: -2.1206247806549072
    5. '(c' → logprob: -2.2456247806549072
    6. '(' → logprob: -4.120625019073486
    7. ' HP' → logprob: -4.495625019073486
    8. ' (' → logprob: -5.245625019073486
    9. ' x' → logprob: -5.370625019073486
    10. ' cave' → logprob: -5.620625019073486

Token 463: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3171001970767975
    2. ' >' → logprob: -1.317100167274475
    3. ' ==' → logprob: -6.6921000480651855
    4. '==' → logprob: -6.6921000480651855
    5. '<=' → logprob: -7.5671000480651855
    6. '>=' → logprob: -7.9421000480651855
    7. ' <=' → logprob: -8.192100524902344
    8. ' >=' → logprob: -8.692100524902344
    9. ' ' → logprob: -11.817100524902344
    10. '<' → logprob: -11.942100524902344

Token 464: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019325626781210303
    2. ' ' → logprob: -6.251932621002197
    3. '=' → logprob: -12.626932144165039
    4. '   ' → logprob: -16.06443214416504
    5. ' ' → logprob: -16.50193214416504
    6. '  ' → logprob: -16.68943214416504
    7. '```' → logprob: -16.68943214416504
    8. '۰' → logprob: -17.43943214416504
    9. '00' → logprob: -17.50193214416504
    10. '100' → logprob: -17.62693214416504

Token 465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -9.500076293945312
    3. '
' → logprob: -16.062576293945312
    4. '1' → logprob: -16.062576293945312
    5. '   ' → logprob: -16.187576293945312
    6. '```' → logprob: -16.250076293945312
    7. '۰' → logprob: -16.312576293945312
    8. '00' → logprob: -16.375076293945312
    9. ' ' → logprob: -16.437576293945312
    10. '100' → logprob: -16.500076293945312

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3896467685699463
    2. ':
' → logprob: -1.1396467685699463
    3. ' and' → logprob: -6.014646530151367
    4. 'and' → logprob: -9.514646530151367
    5. '       ' → logprob: -9.639646530151367
    6. '   ' → logprob: -9.639646530151367
    7. '==' → logprob: -9.764646530151367
    8. ',' → logprob: -11.014646530151367
    9. ':

' → logprob: -11.264646530151367
    10. ' ==' → logprob: -11.764646530151367

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035372322890907526
    2. 'print' → logprob: -6.378537178039551
    3. ' print' → logprob: -7.253537178039551
    4. ':' → logprob: -7.503537178039551
    5. ':
' → logprob: -8.00353717803955
    6. '   ' → logprob: -8.50353717803955
    7. ' and' → logprob: -10.87853717803955
    8. ',' → logprob: -12.25353717803955
    9. '        
' → logprob: -13.00353717803955
    10. '):
' → logprob: -13.37853717803955

Token 468: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0026642426382750273
    2. ' print' → logprob: -6.002664089202881
    3. '   ' → logprob: -8.752664566040039
    4. '       ' → logprob: -10.627664566040039
    5. '           ' → logprob: -12.627664566040039
    6. '
' → logprob: -13.877664566040039
    7. 'for' → logprob: -14.502664566040039
    8. '```' → logprob: -14.752664566040039
    9. 'if' → logprob: -15.377664566040039
    10. '	print' → logprob: -15.877664566040039

Token 469: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2074272185564041
    2. '(' → logprob: -1.8324272632598877
    3. '('' → logprob: -4.332427024841309
    4. '(x' → logprob: -4.332427024841309
    5. '(f' → logprob: -7.082427024841309
    6. '((' → logprob: -10.082427024841309
    7. '"' → logprob: -10.582427024841309
    8. '(H' → logprob: -10.707427024841309
    9. '(("' → logprob: -11.332427024841309
    10. ' ("' → logprob: -11.582427024841309

Token 470: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.9376690983772278
    2. 'YES' → logprob: -1.562669038772583
    3. 'SUCCESS' → logprob: -2.312669038772583
    4. 'Alive' → logprob: -2.437669038772583
    5. 'CLEAR' → logprob: -3.312669038772583
    6. 'AL' → logprob: -3.437669038772583
    7. '"' → logprob: -3.437669038772583
    8. 'Clear' → logprob: -4.437669277191162
    9. 'Success' → logprob: -4.687669277191162
    10. 'alive' → logprob: -4.812669277191162

Token 471: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14392995834350586
    2. '",' → logprob: -2.018929958343506
    3. '")
' → logprob: -7.518929958343506
    4. ',' → logprob: -7.768929958343506
    5. ' ",' → logprob: -9.143930435180664
    6. '"' → logprob: -9.518930435180664
    7. ',",' → logprob: -9.893930435180664
    8. ' ")' → logprob: -11.643930435180664
    9. ')' → logprob: -11.643930435180664
    10. '",{' → logprob: -11.893930435180664

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0179731585085392
    2. '       ' → logprob: -4.892972946166992
    3. 'else' → logprob: -4.892972946166992
    4. ' else' → logprob: -6.017972946166992
    5. ',' → logprob: -8.642972946166992
    6. '<|end|>' → logprob: -9.142972946166992
    7. 'elif' → logprob: -10.142972946166992
    8. 'print' → logprob: -11.017972946166992
    9. '.' → logprob: -12.142972946166992
    10. ' elif' → logprob: -12.142972946166992

Token 473: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06415947526693344
    2. ' else' → logprob: -2.814159393310547
    3. '   ' → logprob: -6.189159393310547
    4. 'elif' → logprob: -8.939159393310547
    5. ' elif' → logprob: -12.064159393310547
    6. '	else' → logprob: -14.814159393310547
    7. ' ' → logprob: -15.189159393310547
    8. '       ' → logprob: -16.064159393310547
    9. '  ' → logprob: -16.689159393310547
    10. ',' → logprob: -17.314159393310547

Token 474: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034040290862321854
    2. ':
' → logprob: -3.4090402126312256
    3. '   ' → logprob: -7.909040451049805
    4. '       ' → logprob: -11.284040451049805
    5. ' :' → logprob: -11.909040451049805
    6. ' :
' → logprob: -13.409040451049805
    7. '{' → logprob: -14.034040451049805
    8. ':

' → logprob: -14.284040451049805
    9. '    ' → logprob: -14.284040451049805
    10. 'print' → logprob: -14.409040451049805

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5015643835067749
    2. '       ' → logprob: -1.501564383506775
    3. 'print' → logprob: -1.876564383506775
    4. ' print' → logprob: -4.0015645027160645
    5. '           ' → logprob: -9.251564025878906
    6. '	print' → logprob: -9.501564025878906
    7. '    ' → logprob: -10.251564025878906
    8. '	   ' → logprob: -11.751564025878906
    9. '     ' → logprob: -12.126564025878906
    10. '	' → logprob: -12.626564025878906

Token 476: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00034476007567718625
    2. ' print' → logprob: -8.000345230102539
    3. '   ' → logprob: -11.750345230102539
    4. '       ' → logprob: -13.625345230102539
    5. '	print' → logprob: -15.375345230102539
    6. '           ' → logprob: -17.25034523010254
    7. '```' → logprob: -19.25034523010254
    8. ' ' → logprob: -19.37534523010254
    9. '.print' → logprob: -19.62534523010254
    10. '    ' → logprob: -19.87534523010254

Token 477: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002627662615850568
    2. '(' → logprob: -8.250263214111328
    3. '("("' → logprob: -13.750263214111328
    4. '('' → logprob: -15.375263214111328
    5. '("(' → logprob: -16.000263214111328
    6. '(
' → logprob: -17.000263214111328
    7. '("")' → logprob: -18.250263214111328
    8. '()' → logprob: -18.625263214111328
    9. '(""' → logprob: -18.625263214111328
    10. ' ("' → logprob: -18.625263214111328

Token 478: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.16060307621955872
    2. '"' → logprob: -1.9106030464172363
    3. '"No' → logprob: -7.910603046417236
    4. 'DE' → logprob: -12.410603523254395
    5. '"N' → logprob: -12.910603523254395
    6. '"D' → logprob: -13.160603523254395
    7. ''' → logprob: -13.535603523254395
    8. '"H' → logprob: -14.660603523254395
    9. '
' → logprob: -14.910603523254395
    10. '"K' → logprob: -15.285603523254395

Token 479: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011952406726777554
    2. '")' → logprob: -4.5119524002075195
    3. ')")' → logprob: -7.0119524002075195
    4. '())' → logprob: -13.63695240020752
    5. '()' → logprob: -14.51195240020752
    6. ')
' → logprob: -15.13695240020752
    7. '))' → logprob: -15.13695240020752
    8. '')' → logprob: -15.13695240020752
    9. ')"' → logprob: -15.13695240020752
    10. ' )' → logprob: -15.51195240020752


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 477
Tokens correctement prédits (1ère position, stricte): 208
Tokens correctement prédits (1ère position, avec adaptation): 227
Tokens correctement prédits (top 10): 413
Précision stricte (1ère position): 43.61%
Précision adaptée (1ère position): 47.59%
Précision (top 10): 86.58%
================================================================================
