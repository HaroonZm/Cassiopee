================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from typing import List, Tuple, Optional, Dict


class Point:
    def __init__(self, x: float, y: float):
        self.x = x  # horizontal distance along the route from start
        self.y = y  # altitude relative to start

    def distance_to(self, other: "Point") -> float:
        # Euclidean distance on the surface
        return math.hypot(self.x - other.x, self.y - other.y)

    def __repr__(self):
        return f"Point(x={self.x}, y={self.y})"


class RouteSegment:
    def __init__(self, start: Point, end: Point):
        self.start = start
        self.end = end
        self.length = self.start.distance_to(self.end)

    def point_at(self, t: float) -> Point:
        # linear interpolation along segment for t in [0,1]
        x = self.start.x + t * (self.end.x - self.start.x)
        y = self.start.y + t * (self.end.y - self.start.y)
        return Point(x, y)

    def __repr__(self):
        return f"RouteSegment(start={self.start}, end={self.end}, length={self.length})"


class Route:
    def __init__(self, points: List[Point]):
        self.points = points
        self.segments: List[RouteSegment] = []
        self.lengths_prefix: List[float] = [0.0]
        self.total_length: float = 0.0
        self._build()

    def _build(self):
        # create segments and prefix sums of lengths
        for i in range(len(self.points) - 1):
            seg = RouteSegment(self.points[i], self.points[i + 1])
            self.segments.append(seg)
            self.lengths_prefix.append(self.lengths_prefix[-1] + seg.length)
        self.total_length = self.lengths_prefix[-1]

    def point_at_distance(self, d: float) -> Point:
        # locate the segment for distance d and return the point on the route
        if d < 0:
            return self.points[0]
        if d >= self.total_length:
            return self.points[-1]
        # binary search segment
        left, right = 0, len(self.segments) - 1
        while left <= right:
            mid = (left + right) // 2
            if self.lengths_prefix[mid] <= d < self.lengths_prefix[mid + 1]:
                seg = self.segments[mid]
                t = (d - self.lengths_prefix[mid]) / seg.length
                return seg.point_at(t)
            elif d < self.lengths_prefix[mid]:
                right = mid - 1
            else:
                left = mid + 1
        # fallback
        return self.points[-1]

    def altitude_at_distance(self, d: float) -> float:
        return self.point_at_distance(d).y


class MeetingAttemptSolver:
    def __init__(self, route: Route):
        self.route = route
        self.memo: Dict[Tuple[float, float], Optional[float]] = dict()
        # discretization tolerance for DP states
        self.eps = 1e-6
        # We solve on distances dA and dB from each start (0 -> total_length)
        self.L = self.route.total_length

    def altitude_equal(self, dA: float, dB: float) -> bool:
        # Check if altitudes are equal at respective distances (from respective ends)
        # dA measured from start point (x1,y1 = 0,0)
        # dB measured from end point backward, so route.L - dB from start
        altA = self.route.altitude_at_distance(dA)
        altB = self.route.altitude_at_distance(self.L - dB)
        return math.isclose(altA, altB, abs_tol=1e-9)

    def next_positions(self, dA: float, dB: float) -> List[Tuple[float, float]]:
        # Generate possible moves for both climbers:
        # each can move forward (+small step) or backward (-small step) along the route,
        # but distances must stay in [0, L].
        # However problem states climbers start at ends (0 and L) and cannot be below ground,
        # but they can move back and forth while keeping altitudes equal.
        #
        # To prevent infinite states, we consider a finite set of candidate positions.
        # We take all points of the route as possible stops.
        # We allow only moves to points with equal altitudes on both legs.
        #
        # The problem asks for minimal sum length of moves until meeting at same point.
        # The two climbers start at 0 and L respectively (in distance measure),
        # and must eventually meet at some distance d where d == L - d (=> d = L/2),
        # or more generally at same physical point on route,
        # which means their positions must correspond after reverse path for climber B.
        #
        # We try all road points and their reverse corresponding points,
        # and moves are between discrete points on the route.
        #
        # So next positions here generate all pairs (dA', dB') where dA' and dB' are points on route,
        # with altitude equal, and reachable from dA and dB by moving forward/backward along route.
        #
        # To not explode search space, we limit to route points + current positions.
        #
        candidates = []
        route_points_distances = self.route.lengths_prefix  # distances of all points

        # Prepare list of candidate dA and dB points
        possible_dA = []
        for dist in route_points_distances:
            if dist < -self.eps or dist > self.L + self.eps:
                continue
            if abs(dist - dA) > self.eps:  # allow standing still?
                possible_dA.append(dist)
        possible_dA.append(dA)  # allow standing still

        possible_dB = []
        for dist in route_points_distances:
            if dist < -self.eps or dist > self.L + self.eps:
                continue
            if abs(dist - dB) > self.eps:
                possible_dB.append(dist)
        possible_dB.append(dB)

        # Generate pairs where altitudes match
        for ndA in possible_dA:
            for ndB in possible_dB:
                if abs(ndA - dA) < self.eps and abs(ndB - dB) < self.eps:
                    continue  # skip no move
                # check if from current positions can move directly to these
                # moves along route must be continuous without gaps:
                # we allow forward/backward moves along route segments,
                # so if the difference is > segment length, we disallow
                # but for complexity, allow moves only to route points for now.
                # Also allow standing still for one and move in other?

                # Limit moves to steps (from current position) no bigger than max segment ~ max 1000 length 
                # but better limit to segment adjacents
                # So moves allowed only to neighbors on route or stay still.

                # Check neighbors of dA and dB in route points:
                neighbors_dA = []
                idxA = None
                for i, dist in enumerate(route_points_distances):
                    if abs(dist - dA) < self.eps:
                        idxA = i
                        break
                if idxA is None:
                    continue
                if idxA > 0:
                    neighbors_dA.append(route_points_distances[idxA - 1])
                neighbors_dA.append(route_points_distances[idxA])
                if idxA < len(route_points_distances) - 1:
                    neighbors_dA.append(route_points_distances[idxA + 1])

                neighbors_dB = []
                idxB = None
                for i, dist in enumerate(route_points_distances):
                    if abs(dist - dB) < self.eps:
                        idxB = i
                        break
                if idxB is None:
                    continue
                if idxB > 0:
                    neighbors_dB.append(route_points_distances[idxB - 1])
                neighbors_dB.append(route_points_distances[idxB])
                if idxB < len(route_points_distances) - 1:
                    neighbors_dB.append(route_points_distances[idxB + 1])

                if ndA not in neighbors_dA:
                    continue
                if ndB not in neighbors_dB:
                    continue

                # Check altitudes equal at ndA and ndB positions
                # Remember climber B pos dB is distance from end, so invert for altitude check:
                altA = self.route.altitude_at_distance(ndA)
                altB = self.route.altitude_at_distance(self.L - ndB)
                if abs(altA - altB) < 1e-9:
                    candidates.append((ndA, ndB))
        return candidates

    def solve(self) -> float:
        # The problem is to find minimal sum of lengths of moves until climbers meet at a point.
        # Possible meeting points correspond to distance dA == L - dB (i.e., same physical point)
        # and same altitude.
        #
        # We represent state as (dA, dB) with distances from each start point.
        # Start: (0, 0)
        # End: any position where dA == dB and altitude equal = where climbers physically meet.
        #
        # We'll do Dijkstra-like shortest path on states:
        # nodes = pairs (dA,dB), edges = moves to neighboring positions preserving altitude equality.
        #
        # To keep complexity manageable, states are discrete distance points = route vertices only.
        #
        # Initialize queue and distances dictionary.
        import heapq

        start = (0.0, 0.0)
        dist_map: Dict[Tuple[float, float], float] = {start: 0.0}
        heap = [(0.0, start)]

        route_points = self.route.lengths_prefix
        # Precompute all candidate states: pairs of route points (dA,dB) where altitudes equal
        candidates_states = []
        altitude_map = {}
        for dA in route_points:
            altitude_map[dA] = self.route.altitude_at_distance(dA)
        for dB in route_points:
            altitude_map[dB + self.L + 1] = self.route.altitude_at_distance(self.L - dB)
        candidate_pairs = []
        for dA in route_points:
            altA = altitude_map[dA]
            for dB in route_points:
                altB = altitude_map[dB + self.L + 1]
                if abs(altA - altB) < 1e-9:
                    candidate_pairs.append((dA, dB))

        # For quick neighbors lookup, create a set of all pairs for fast membership check
        candidate_set = set(candidate_pairs)

        # Precompute neighbors for each dA and dB point (route points neighbors)
        neighbors_map = {}
        for i, d in enumerate(route_points):
            neighbors = []
            if i > 0:
                neighbors.append(route_points[i - 1])
            neighbors.append(d)
            if i < len(route_points) - 1:
                neighbors.append(route_points[i + 1])
            neighbors_map[d] = neighbors

        while heap:
            cur_dist, (dA, dB) = heapq.heappop(heap)
            # If dA==dB and altitudes equal => meeting point
            if abs(dA - dB) < 1e-9:
                # They meet physically same point
                return cur_dist

            if dist_map[(dA, dB)] < cur_dist - 1e-15:
                continue

            # try all neighbors of dA and dB from candidates that preserve altitude equality
            for ndA in neighbors_map[dA]:
                for ndB in neighbors_map[dB]:
                    if (ndA, ndB) in candidate_set:
                        # cost is sum of distances moved by each climber along the route surface
                        cost = self.route.point_at_distance(dA).distance_to(self.route.point_at_distance(ndA)) + \
                               self.route.point_at_distance(self.L - dB).distance_to(self.route.point_at_distance(self.L - ndB))
                        next_dist = cur_dist + cost
                        if (ndA, ndB) not in dist_map or dist_map[(ndA, ndB)] > next_dist + 1e-15:
                            dist_map[(ndA, ndB)] = next_dist
                            heapq.heappush(heap, (next_dist, (ndA, ndB)))

        # theoretically unreachable if input guaranteed solvable
        return float('inf')


class InputReader:
    def __init__(self):
        pass

    def read_datasets(self) -> List[Route]:
        routes = []
        while True:
            try:
                line = input()
            except EOFError:
                break
            if line.strip() == '':
                continue
            n = int(line)
            if n == 0:
                break
            points = []
            for _ in range(n):
                x, y = map(int, input().split())
                points.append(Point(x, y))
            routes.append(Route(points))
        return routes


class OutputWriter:
    def __init__(self):
        pass

    def write_results(self, results: List[float]) -> None:
        for res in results:
            # output with no more than 0.01 error
            print(f"{res:.10f}".rstrip('0').rstrip('.') if '.' in f"{res:.10f}" else f"{res:.10f}")


def main():
    reader = InputReader()
    routes = reader.read_datasets()
    solver_results = []
    for route in routes:
        solver = MeetingAttemptSolver(route)
        result = solver.solve()
        solver_results.append(result)
    writer = OutputWriter()
    writer.write_results(solver_results)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005013990215957165
    2. '\n' → logprob: -6.380013942718506
    3. '\' → logprob: -6.755013942718506
    4. '```' → logprob: -7.005013942718506
    5. '<|end|>' → logprob: -7.880013942718506
    6. 'import' → logprob: -8.130014419555664
    7. '.\' → logprob: -9.505014419555664
    8. '.pi' → logprob: -10.005014419555664
    9. '.
' → logprob: -10.130014419555664
    10. '.

' → logprob: -10.255014419555664

Token 4: ' typing' (ID: 34152)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8161807060241699
    2. ' os' → logprob: -1.31618070602417
    3. ' collections' → logprob: -2.44118070602417
    4. ' sys' → logprob: -3.06618070602417
    5. 'math' → logprob: -3.19118070602417
    6. ' numpy' → logprob: -3.69118070602417
    7. ' statistics' → logprob: -3.94118070602417
    8. 'os' → logprob: -4.19118070602417
    9. 'cmath' → logprob: -4.44118070602417
    10. ' random' → logprob: -4.56618070602417

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35695675015449524
    2. 'import' → logprob: -1.2319567203521729
    3. '.' → logprob: -4.981956958770752
    4. '```' → logprob: -7.231956958770752
    5. '.import' → logprob: -8.231956481933594
    6. ' ' → logprob: -8.231956481933594
    7. '_import' → logprob: -9.356956481933594
    8. '<|end|>' → logprob: -10.106956481933594
    9. ' .' → logprob: -10.356956481933594
    10. ' as' → logprob: -10.481956481933594

Token 6: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4214340150356293
    2. 'Any' → logprob: -1.1714340448379517
    3. 'Optional' → logprob: -4.046433925628662
    4. ' List' → logprob: -4.921433925628662
    5. 'Union' → logprob: -5.421433925628662
    6. ' Any' → logprob: -5.921433925628662
    7. 'Iterable' → logprob: -7.171433925628662
    8. ' Optional' → logprob: -7.546433925628662
    9. 'Callable' → logprob: -8.29643440246582
    10. ' Union' → logprob: -8.79643440246582

Token 7: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24115970730781555
    2. '```' → logprob: -2.491159677505493
    3. '

' → logprob: -2.991159677505493
    4. '\n' → logprob: -3.366159677505493
    5. '
' → logprob: -3.866159677505493
    6. '\' → logprob: -4.241159915924072
    7. '<|end|>' → logprob: -5.616159915924072
    8. ',' → logprob: -6.241159915924072
    9. 'import' → logprob: -6.491159915924072
    10. '``' → logprob: -6.866159915924072

Token 8: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.7517396807670593
    2. 'Tuple' → logprob: -1.751739740371704
    3. ' Optional' → logprob: -2.126739740371704
    4. ' Union' → logprob: -3.001739740371704
    5. ' Callable' → logprob: -3.001739740371704
    6. ' Tuple' → logprob: -3.126739740371704
    7. 'Callable' → logprob: -3.376739740371704
    8. 'Union' → logprob: -3.501739740371704
    9. 'Any' → logprob: -4.126739501953125
    10. ' Any' → logprob: -6.251739501953125

Token 9: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7066433429718018
    2. '```' → logprob: -1.2066433429718018
    3. '\n' → logprob: -2.4566433429718018
    4. '\' → logprob: -2.8316433429718018
    5. '

' → logprob: -3.5816433429718018
    6. '
' → logprob: -5.081643104553223
    7. 'class' → logprob: -5.081643104553223
    8. ':' → logprob: -5.206643104553223
    9. '``' → logprob: -5.456643104553223
    10. 'import' → logprob: -5.706643104553223

Token 10: ' Optional' (ID: 19351)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.5122310519218445
    2. ' Callable' → logprob: -1.7622311115264893
    3. 'Union' → logprob: -2.6372311115264893
    4. ' Optional' → logprob: -2.8872311115264893
    5. 'Callable' → logprob: -3.6372311115264893
    6. 'Optional' → logprob: -3.7622311115264893
    7. ' Dict' → logprob: -4.01223087310791
    8. 'Any' → logprob: -4.51223087310791
    9. ' Any' → logprob: -4.76223087310791
    10. 'Dict' → logprob: -5.51223087310791

Token 11: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4320089519023895
    2. '```' → logprob: -1.182008981704712
    3. '\n' → logprob: -4.182008743286133
    4. '
' → logprob: -4.432008743286133
    5. '

' → logprob: -5.182008743286133
    6. '\' → logprob: -5.307008743286133
    7. 'class' → logprob: -5.682008743286133
    8. ':' → logprob: -7.057008743286133
    9. '``' → logprob: -7.182008743286133
    10. ',' → logprob: -7.932008743286133

Token 12: ' Dict' (ID: 55179)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.7173880338668823
    2. ' Union' → logprob: -1.4673880338668823
    3. 'Any' → logprob: -2.092388153076172
    4. 'Dict' → logprob: -2.342388153076172
    5. 'Callable' → logprob: -4.092388153076172
    6. ' Dict' → logprob: -4.342388153076172
    7. ' Callable' → logprob: -4.717388153076172
    8. ' Any' → logprob: -5.092388153076172
    9. 'Iterable' → logprob: -5.592388153076172
    10. 'dict' → logprob: -5.717388153076172

Token 13: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3513825535774231
    2. '```' → logprob: -2.1013824939727783
    3. '
' → logprob: -3.2263824939727783
    4. '\n' → logprob: -3.3513824939727783
    5. '

' → logprob: -3.3513824939727783
    6. 'class' → logprob: -3.4763824939727783
    7. 'import' → logprob: -4.601382732391357
    8. '\' → logprob: -4.726382732391357
    9. '<|end|>' → logprob: -5.101382732391357
    10. ',' → logprob: -5.851382732391357

Token 14: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014382440596818924
    2. 'class' → logprob: -4.264382362365723
    3. '```' → logprob: -8.514382362365723
    4. 'd' → logprob: -11.764382362365723
    5. 'de' → logprob: -12.139382362365723
    6. ' def' → logprob: -13.514382362365723
    7. '\' → logprob: -14.014382362365723
    8. '``' → logprob: -14.389382362365723
    9. 'import' → logprob: -14.639382362365723
    10. '#' → logprob: -14.889382362365723

Token 15: ' Point' (ID: 9971)
  Prédit: ' Geometry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Geometry' → logprob: -0.8450351357460022
    2. ' Calculator' → logprob: -1.9700350761413574
    3. ' Vector' → logprob: -2.0950350761413574
    4. ' My' → logprob: -2.2200350761413574
    5. ' Math' → logprob: -2.4700350761413574
    6. ' Shape' → logprob: -3.5950350761413574
    7. ' Factor' → logprob: -3.9700350761413574
    8. ' Sphere' → logprob: -4.470035076141357
    9. ' Solver' → logprob: -4.845035076141357
    10. ' Circle' → logprob: -5.220035076141357

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032966553699225187
    2. '(' → logprob: -5.753296852111816
    3. '():' → logprob: -9.753296852111816
    4. '):' → logprob: -10.503296852111816
    5. '<|end|>' → logprob: -11.378296852111816
    6. ':
' → logprob: -11.878296852111816
    7. ':**' → logprob: -12.503296852111816
    8. ' :' → logprob: -12.628296852111816
    9. '(Point' → logprob: -13.503296852111816
    10. '(object' → logprob: -13.878296852111816

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012671749107539654
    2. '(' → logprob: -5.137671947479248
    3. '   ' → logprob: -5.637671947479248
    4. '<|end|>' → logprob: -6.512671947479248
    5. ' ' → logprob: -7.762671947479248
    6. ' :' → logprob: -8.13767147064209
    7. '```' → logprob: -8.26267147064209
    8. '():' → logprob: -9.01267147064209
    9. '):' → logprob: -9.26267147064209
    10. '(object' → logprob: -9.38767147064209

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4221709966659546
    2. '   ' → logprob: -1.5471709966659546
    3. 'def' (adapté à ' def') → logprob: -2.047171115875244
    4. '    ' → logprob: -7.547171115875244
    5. 'class' → logprob: -8.047170639038086
    6. '```' → logprob: -8.047170639038086
    7. ' ' → logprob: -8.172170639038086
    8. '(' → logprob: -8.672170639038086
    9. ' (' → logprob: -8.922170639038086
    10. ' __' → logprob: -9.297170639038086

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00037955286097712815
    2. '__' → logprob: -8.50037956237793
    3. ' ' → logprob: -9.62537956237793
    4. ' _' → logprob: -10.00037956237793
    5. ' init' → logprob: -11.00037956237793
    6. ' ' → logprob: -11.25037956237793
    7. 'inition' → logprob: -11.50037956237793
    8. '_init' → logprob: -11.87537956237793
    9. '_' → logprob: -12.00037956237793
    10. 'init' → logprob: -13.00037956237793

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.625
    3. 'inite' → logprob: -17.875
    4. '_init' → logprob: -18.0
    5. 'in' → logprob: -18.125
    6. 'int' → logprob: -18.5
    7. ' init' → logprob: -19.625
    8. 'inti' → logprob: -19.875
    9. 'innit' → logprob: -20.75
    10. '	init' → logprob: -21.375

Token 21: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04141433537006378
    2. '__' → logprob: -3.666414260864258
    3. '(' → logprob: -5.166414260864258
    4. '(self' → logprob: -5.291414260864258
    5. '__(
' → logprob: -6.416414260864258
    6. '<|end|>' → logprob: -7.041414260864258
    7. ' (' → logprob: -7.291414260864258
    8. '__((' → logprob: -8.166414260864258
    9. '__(*' → logprob: -8.666414260864258
    10. 'self' → logprob: -8.916414260864258

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020401719666551799
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.625204086303711
    4. '_self' → logprob: -15.875204086303711
    5. ')' → logprob: -17.00020408630371
    6. 's' → logprob: -18.37520408630371
    7. '	self' → logprob: -18.37520408630371
    8. ',self' → logprob: -18.62520408630371
    9. ' ' → logprob: -18.87520408630371
    10. ',' → logprob: -18.87520408630371

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17751891911029816
    2. 'self' → logprob: -2.427518844604492
    3. ' ,' → logprob: -2.927518844604492
    4. ' self' → logprob: -4.552518844604492
    5. '(self' → logprob: -5.427518844604492
    6. ')' → logprob: -6.052518844604492
    7. ' )' → logprob: -7.177518844604492
    8. '<|end|>' → logprob: -7.552518844604492
    9. '_self' → logprob: -7.677518844604492
    10. ' (' → logprob: -7.677518844604492

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6120641231536865
    2. 'x' → logprob: -0.8620641231536865
    3. 'self' → logprob: -3.8620641231536865
    4. ' self' → logprob: -4.237064361572266
    5. '   ' → logprob: -12.987064361572266
    6. ' ' → logprob: -13.112064361572266
    7. '	x' → logprob: -14.862064361572266
    8. ')x' → logprob: -14.987064361572266
    9. '    ' → logprob: -16.362064361572266
    10. ')' → logprob: -16.487064361572266

Token 25: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018740253522992134
    2. ':' → logprob: -4.143740177154541
    3. ')' → logprob: -6.643740177154541
    4. ' ,' → logprob: -7.518740177154541
    5. ':int' → logprob: -7.518740177154541
    6. '<|end|>' → logprob: -9.1437406539917
    7. '=' → logprob: -9.5187406539917
    8. '):' → logprob: -9.8937406539917
    9. '<|end|>' → logprob: -10.3937406539917
    10. ',int' → logprob: -11.2687406539917

Token 26: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7732829451560974
    2. ' ' → logprob: -1.7732830047607422
    3. ' int' → logprob: -2.148283004760742
    4. 'float' → logprob: -2.648283004760742
    5. ' float' → logprob: -2.773283004760742
    6. '<|end|>' → logprob: -2.773283004760742
    7. ' )' → logprob: -3.148283004760742
    8. ')' → logprob: -5.023283004760742
    9. '0' → logprob: -6.398283004760742
    10. ':int' → logprob: -6.523283004760742

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020854694594163448
    2. '<|end|>' → logprob: -9.125208854675293
    3. ' ,' → logprob: -10.000208854675293
    4. ')' → logprob: -10.375208854675293
    5. '):' → logprob: -12.000208854675293
    6. ',x' → logprob: -12.500208854675293
    7. '<|end|>' → logprob: -12.500208854675293
    8. ',float' → logprob: -13.000208854675293
    9. ',int' → logprob: -13.375208854675293
    10. ',y' → logprob: -13.750208854675293

Token 28: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.018154270946979523
    2. 'y' → logprob: -4.018154144287109
    3. ' ' → logprob: -13.26815414428711
    4. '<|end|>' → logprob: -13.51815414428711
    5. ' ' → logprob: -14.51815414428711
    6. '	y' → logprob: -14.51815414428711
    7. '<|end|>' → logprob: -15.76815414428711
    8. ')' → logprob: -17.14315414428711
    9. ')y' → logprob: -17.26815414428711
    10. ',y' → logprob: -17.39315414428711

Token 29: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25518232583999634
    2. ':' → logprob: -1.8801822662353516
    3. ')' → logprob: -2.6301822662353516
    4. '<|end|>' → logprob: -8.130182266235352
    5. '):
' → logprob: -8.755182266235352
    6. '<|end|>' → logprob: -10.005182266235352
    7. ',' → logprob: -10.505182266235352
    8. '=' → logprob: -10.755182266235352
    9. ' ):' → logprob: -11.255182266235352
    10. ':int' → logprob: -11.880182266235352

Token 30: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.011084253899753094
    2. 'float' → logprob: -4.511084079742432
    3. '=float' → logprob: -10.63608455657959
    4. '	float' → logprob: -12.38608455657959
    5. ' ' → logprob: -12.51108455657959
    6. ',float' → logprob: -13.26108455657959
    7. ')' → logprob: -13.76108455657959
    8. '(float' → logprob: -14.13608455657959
    9. '<float' → logprob: -14.76108455657959
    10. ' )' → logprob: -16.011083602905273

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04312547296285629
    2. ')' → logprob: -3.1681253910064697
    3. '):
' → logprob: -9.66812515258789
    4. ':' → logprob: -10.04312515258789
    5. ' ):' → logprob: -11.29312515258789
    6. ',' → logprob: -12.41812515258789
    7. '   ' → logprob: -14.54312515258789
    8. ' )' → logprob: -14.54312515258789
    9. '),' → logprob: -14.66812515258789
    10. ' ' → logprob: -15.04312515258789

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5158998370170593
    2. '):' → logprob: -1.515899896621704
    3. ')' → logprob: -2.390899896621704
    4. 'x' → logprob: -3.640899896621704
    5. ' ):' → logprob: -3.765899896621704
    6. '    ' → logprob: -4.140899658203125
    7. ' )' → logprob: -4.390899658203125
    8. ',' → logprob: -5.390899658203125
    9. '   ' → logprob: -5.640899658203125
    10. ' ' → logprob: -6.265899658203125

Token 33: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0453692190349102
    2. ' self' → logprob: -3.2953691482543945
    3. '       ' → logprob: -4.9203691482543945
    4. ' ' → logprob: -13.295369148254395
    5. '```' → logprob: -14.170369148254395
    6. '   ' → logprob: -14.295369148254395
    7. '	self' → logprob: -14.545369148254395
    8. '(self' → logprob: -15.045369148254395
    9. ' ' → logprob: -15.170369148254395
    10. '_self' → logprob: -16.17037010192871

Token 34: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012627365998923779
    2. '.x' → logprob: -4.387627601623535
    3. ' .' → logprob: -10.137627601623535
    4. 'x' → logprob: -10.637627601623535
    5. ',' → logprob: -10.887627601623535
    6. '<|end|>' → logprob: -11.512627601623535
    7. ' ' → logprob: -11.762627601623535
    8. ')' → logprob: -12.637627601623535
    9. '<|end|>' → logprob: -12.887627601623535
    10. ' x' → logprob: -13.387627601623535

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5816566348075867
    2. '=' → logprob: -0.8316566348075867
    3. ',' → logprob: -6.206656455993652
    4. '<|end|>' → logprob: -6.456656455993652
    5. ')' → logprob: -6.581656455993652
    6. ' )' → logprob: -8.581656455993652
    7. '<|end|>' → logprob: -8.581656455993652
    8. ' ' → logprob: -8.706656455993652
    9. ' ,' → logprob: -9.581656455993652
    10. ' =)' → logprob: -10.456656455993652

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.474077433347702
    2. 'x' → logprob: -0.9740774631500244
    3. '	x' → logprob: -15.474077224731445
    4. ' ' → logprob: -16.599077224731445
    5. ')x' → logprob: -16.724077224731445
    6. ' ' → logprob: -16.974077224731445
    7. '<|end|>' → logprob: -17.474077224731445
    8. '(x' → logprob: -18.724077224731445
    9. '<|end|>' → logprob: -18.849077224731445
    10. '$x' → logprob: -19.099077224731445

Token 37: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02433844283223152
    2. '<|end|>' → logprob: -3.774338483810425
    3. '
' → logprob: -7.274338245391846
    4. '<|end|>' → logprob: -9.149338722229004
    5. '        
' → logprob: -9.399338722229004
    6. ' ' → logprob: -9.649338722229004
    7. ' 
' → logprob: -10.524338722229004
    8. '  
' → logprob: -10.649338722229004
    9. ',' → logprob: -10.899338722229004
    10. '      ' → logprob: -11.149338722229004

Token 38: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009926313534379005
    2. '<|end|>' → logprob: -5.2599263191223145
    3. 'self' → logprob: -5.8849263191223145
    4. '
' → logprob: -6.5099263191223145
    5. ',' → logprob: -9.134925842285156
    6. '      ' → logprob: -10.009925842285156
    7. ' ' → logprob: -10.009925842285156
    8. '        
' → logprob: -10.009925842285156
    9. '   ' → logprob: -10.009925842285156
    10. '<|end|>' → logprob: -10.759925842285156

Token 39: ' horizontal' (ID: 25511)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12033671885728836
    2. ' x' → logprob: -2.2453367710113525
    3. ' float' → logprob: -5.495336532592773
    4. 'float' → logprob: -5.745336532592773
    5. ' ' → logprob: -9.370336532592773
    6. '=float' → logprob: -10.745336532592773
    7. '=' → logprob: -10.870336532592773
    8. 'value' → logprob: -12.120336532592773
    9. '<|end|>' → logprob: -12.120336532592773
    10. ')' → logprob: -12.120336532592773

Token 40: ' distance' (ID: 9324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' along' (ID: 4251)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.014362934976816177
    2. 'the' → logprob: -5.014362812042236
    3. ' x' → logprob: -5.014362812042236
    4. 'x' → logprob: -7.764362812042236
    5. ' a' → logprob: -8.264363288879395
    6. ' horizontal' → logprob: -9.264363288879395
    7. ' an' → logprob: -9.764363288879395
    8. ' plane' → logprob: -10.014363288879395
    9. ' ' → logprob: -10.514363288879395
    10. ' axis' → logprob: -10.889363288879395

Token 43: ' route' (ID: 9656)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1326289027929306
    2. 'x' → logprob: -2.257628917694092
    3. ' plane' → logprob: -4.382628917694092
    4. ' horizontal' → logprob: -6.382628917694092
    5. ' axis' → logprob: -6.507628917694092
    6. ' line' → logprob: -7.007628917694092
    7. ' surface' → logprob: -7.507628917694092
    8. ' ground' → logprob: -7.757628917694092
    9. 'horizontal' → logprob: -8.007628440856934
    10. ' positive' → logprob: -8.382628440856934

Token 44: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2836550772190094
    2. '<|end|>' → logprob: -1.408655047416687
    3. '<|end|>' → logprob: -7.158655166625977
    4. '
' → logprob: -7.783655166625977
    5. '        
' → logprob: -8.283655166625977
    6. ')' → logprob: -8.408655166625977
    7. '\n' → logprob: -8.658655166625977
    8. '   ' → logprob: -9.033655166625977
    9. '\' → logprob: -9.283655166625977
    10. ' 
' → logprob: -9.533655166625977

Token 45: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04908938333392143
    2. 'the' → logprob: -3.5490894317626953
    3. ' start' → logprob: -5.174089431762695
    4. ' origin' → logprob: -5.924089431762695
    5. '<|end|>' → logprob: -5.924089431762695
    6. 'start' → logprob: -6.174089431762695
    7. ' source' → logprob: -6.299089431762695
    8. ' starting' → logprob: -6.549089431762695
    9. 'starting' → logprob: -7.799089431762695
    10. 'source' → logprob: -8.049089431762695

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35560745000839233
    2. '<|end|>' → logprob: -1.230607509613037
    3. '<|end|>' → logprob: -5.605607509613037
    4. '
' → logprob: -6.480607509613037
    5. ')' → logprob: -7.730607509613037
    6. '   ' → logprob: -7.855607509613037
    7. ' ' → logprob: -8.605607032775879
    8. ',' → logprob: -8.980607032775879
    9. '```' → logprob: -8.980607032775879
    10. '\' → logprob: -9.230607032775879

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025760135613381863
    2. '<|end|>' → logprob: -6.752575874328613
    3. ' ' → logprob: -7.752575874328613
    4. '   ' → logprob: -8.502575874328613
    5. '        
' → logprob: -8.627575874328613
    6. '
' → logprob: -8.877575874328613
    7. '  
' → logprob: -9.627575874328613
    8. '      ' → logprob: -9.752575874328613
    9. ' 
' → logprob: -9.877575874328613
    10. ',' → logprob: -10.002575874328613

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15374812483787537
    2. ' self' → logprob: -2.028748035430908
    3. '       ' → logprob: -4.528748035430908
    4. ' ' → logprob: -8.653748512268066
    5. '	self' → logprob: -10.903748512268066
    6. '   ' → logprob: -11.903748512268066
    7. '(self' → logprob: -12.403748512268066
    8. ' ' → logprob: -12.778748512268066
    9. '<|end|>' → logprob: -13.278748512268066
    10. '\' → logprob: -13.653748512268066

Token 49: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.4289073050022125
    2. '.' → logprob: -1.0539072751998901
    3. ' .' → logprob: -9.17890739440918
    4. 'y' → logprob: -9.80390739440918
    5. '<|end|>' → logprob: -10.67890739440918
    6. '.x' → logprob: -12.17890739440918
    7. ')' → logprob: -12.67890739440918
    8. '=' → logprob: -12.80390739440918
    9. ' ' → logprob: -12.92890739440918
    10. '<|end|>' → logprob: -13.30390739440918

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018681040033698082
    2. '=' → logprob: -4.018681049346924
    3. ' ' → logprob: -8.268680572509766
    4. '<|end|>' → logprob: -8.518680572509766
    5. ')' → logprob: -9.768680572509766
    6. ' )' → logprob: -11.893680572509766
    7. '<|end|>' → logprob: -12.518680572509766
    8. ',' → logprob: -12.893680572509766
    9. ' =)' → logprob: -14.018680572509766
    10. '.' → logprob: -14.643680572509766

Token 51: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3133429288864136
    2. 'y' → logprob: -1.3133429288864136
    3. '0' → logprob: -9.688343048095703
    4. ' ' → logprob: -11.313343048095703
    5. ' math' → logprob: -12.688343048095703
    6. 'float' → logprob: -13.438343048095703
    7. ' float' → logprob: -13.813343048095703
    8. 'math' → logprob: -14.688343048095703
    9. '	y' → logprob: -15.313343048095703
    10. ' ' → logprob: -15.313343048095703

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02360030822455883
    2. ' #' → logprob: -3.8986003398895264
    3. '<|end|>' → logprob: -6.523600101470947
    4. '#' → logprob: -7.398600101470947
    5. '  ' → logprob: -7.398600101470947
    6. '   ' → logprob: -8.773600578308105
    7. ')' → logprob: -9.648600578308105
    8. '<|end|>' → logprob: -10.398600578308105
    9. ' =' → logprob: -10.773600578308105
    10. ':' → logprob: -11.023600578308105

Token 53: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48376497626304626
    2. ' ' → logprob: -1.6087650060653687
    3. ' #' → logprob: -1.7337650060653687
    4. '   ' → logprob: -6.358765125274658
    5. '  ' → logprob: -6.858765125274658
    6. '=' → logprob: -7.108765125274658
    7. '<|end|>' → logprob: -7.233765125274658
    8. ')' → logprob: -7.358765125274658
    9. '       ' → logprob: -7.483765125274658
    10. '+' → logprob: -7.608765125274658

Token 54: ' altitude' (ID: 66032)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.07303564995527267
    2. ' elevation' → logprob: -3.448035717010498
    3. 'vertical' → logprob: -3.573035717010498
    4. ' lateral' → logprob: -6.385535717010498
    5. ' altitude' → logprob: -6.448035717010498
    6. ' ' → logprob: -6.448035717010498
    7. ' perpendicular' → logprob: -6.510535717010498
    8. 'e' → logprob: -7.198035717010498
    9. ' distance' → logprob: -7.323035717010498
    10. ' cumulative' → logprob: -8.38553524017334

Token 55: ' relative' (ID: 15001)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6377182006835938
    2. '<|end|>' → logprob: -0.7627182006835938
    3. '<|end|>' → logprob: -6.137718200683594
    4. '

' → logprob: -6.762718200683594
    5. '\n' → logprob: -7.012718200683594
    6. '   ' → logprob: -8.762718200683594
    7. ')' → logprob: -8.887718200683594
    8. '    
' → logprob: -9.262718200683594
    9. '```' → logprob: -9.262718200683594
    10. ' 
' → logprob: -9.512718200683594

Token 56: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.033816855400800705
    2. 'to' → logprob: -3.4088168144226074
    3. '<|end|>' → logprob: -9.158817291259766
    4. '=' → logprob: -10.533817291259766
    5. '_to' → logprob: -10.908817291259766
    6. ' ' → logprob: -12.408817291259766
    7. 'To' → logprob: -12.408817291259766
    8. ' =' → logprob: -13.033817291259766
    9. '0' → logprob: -13.033817291259766
    10. 'import' → logprob: -13.283817291259766

Token 57: ' start' (ID: 1604)
  Prédit: ' sea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sea' → logprob: -0.7997239828109741
    2. ' ground' → logprob: -1.5497239828109741
    3. ' mean' → logprob: -2.1747241020202637
    4. ' start' → logprob: -2.2997241020202637
    5. ' the' → logprob: -2.7997241020202637
    6. ' previous' → logprob: -4.424724102020264
    7. ' ' → logprob: -4.424724102020264
    8. ' starting' → logprob: -4.674724102020264
    9. 'start' → logprob: -4.799724102020264
    10. 'sea' → logprob: -5.424724102020264

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06592170149087906
    2. '

' → logprob: -3.4409217834472656
    3. '<|end|>' → logprob: -4.565921783447266
    4. '   ' → logprob: -5.190921783447266
    5. '    
' → logprob: -5.315921783447266
    6. '\n' → logprob: -5.565921783447266
    7. '
    
' → logprob: -6.065921783447266
    8. '


' → logprob: -6.440921783447266
    9. ' ' → logprob: -7.690921783447266
    10. '<|end|>' → logprob: -8.190921783447266

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014131537638604641
    2. '   ' → logprob: -5.014131546020508
    3. '

' → logprob: -5.389131546020508
    4. '    
' → logprob: -6.764131546020508
    5. '<|end|>' → logprob: -7.264131546020508
    6. 'def' → logprob: -8.639131546020508
    7. ' 
' → logprob: -8.639131546020508
    8. '\n' → logprob: -8.889131546020508
    9. ' ' → logprob: -9.139131546020508
    10. '


' → logprob: -9.639131546020508

Token 60: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5831683278083801
    2. '
' → logprob: -0.9581683278083801
    3. '<|end|>' → logprob: -3.5831682682037354
    4. ' def' → logprob: -4.4581685066223145
    5. '   ' → logprob: -4.4581685066223145
    6. '

' → logprob: -5.9581685066223145
    7. '    
' → logprob: -6.7081685066223145
    8. ' ' → logprob: -7.2081685066223145
    9. '<|end|>' → logprob: -7.3331685066223145
    10. '```' → logprob: -7.8331685066223145

Token 61: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.557273268699646
    2. ' ' → logprob: -0.932273268699646
    3. ' calculate' → logprob: -4.5572733879089355
    4. '_' → logprob: -4.9322733879089355
    5. '_distance' → logprob: -5.3072733879089355
    6. 'distance' → logprob: -5.4322733879089355
    7. ' def' → logprob: -5.6822733879089355
    8. ' get' → logprob: -7.3072733879089355
    9. ' space' → logprob: -7.4322733879089355
    10. ' _' → logprob: -7.8072733879089355

Token 62: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4903632402420044
    2. '(' → logprob: -0.9903632402420044
    3. '_' → logprob: -4.490363121032715
    4. '(self' → logprob: -5.740363121032715
    5. 'to' → logprob: -6.990363121032715
    6. 'To' → logprob: -8.365363121032715
    7. ' (' → logprob: -8.865363121032715
    8. '<|end|>' → logprob: -9.115363121032715
    9. '_from' → logprob: -9.365363121032715
    10. '_(' → logprob: -10.365363121032715

Token 63: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20230980217456818
    2. '(' → logprob: -1.7023098468780518
    3. '<|end|>' → logprob: -8.077309608459473
    4. '(other' → logprob: -8.202309608459473
    5. ' (' → logprob: -8.827309608459473
    6. 'self' → logprob: -10.577309608459473
    7. '(
' → logprob: -10.702309608459473
    8. '(Point' → logprob: -10.827309608459473
    9. '<|end|>' → logprob: -11.077309608459473
    10. ')' → logprob: -11.327309608459473

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008408344583585858
    2. ' ,' → logprob: -7.500840663909912
    3. 'other' → logprob: -9.00084114074707
    4. ')' → logprob: -9.62584114074707
    5. 'another' → logprob: -10.50084114074707
    6. 'self' → logprob: -10.62584114074707
    7. '<|end|>' → logprob: -11.00084114074707
    8. ' ' → logprob: -11.62584114074707
    9. '(' → logprob: -12.12584114074707
    10. '<|end|>' → logprob: -12.37584114074707

Token 65: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16890938580036163
    2. ' other' → logprob: -1.9189094305038452
    3. 'self' → logprob: -4.793909549713135
    4. ' self' → logprob: -8.043909072875977
    5. 'point' → logprob: -10.918909072875977
    6. ' point' → logprob: -11.543909072875977
    7. 'another' → logprob: -12.293909072875977
    8. '<|end|>' → logprob: -12.793909072875977
    9. '_other' → logprob: -13.043909072875977
    10. ' ' → logprob: -13.293909072875977

Token 66: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6917790174484253
    2. ':' → logprob: -0.9417790174484253
    3. '):' → logprob: -2.316779136657715
    4. '<|end|>' → logprob: -5.316779136657715
    5. ' )' → logprob: -5.941779136657715
    6. '_point' → logprob: -7.191779136657715
    7. ' ' → logprob: -7.441779136657715
    8. ' ):' → logprob: -7.441779136657715
    9. '<|end|>' → logprob: -7.691779136657715
    10. '):
' → logprob: -8.191779136657715

Token 67: ' "' (ID: 392)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.7545451521873474
    2. ')' → logprob: -1.5045452117919922
    3. ' )' → logprob: -1.5045452117919922
    4. 'Point' → logprob: -2.629545211791992
    5. '<|end|>' → logprob: -5.254545211791992
    6. ' ' → logprob: -5.504545211791992
    7. '<Point' → logprob: -7.254545211791992
    8. '(Point' → logprob: -7.879545211791992
    9. '_Point' → logprob: -7.879545211791992
    10. ' self' → logprob: -7.879545211791992

Token 68: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.006730526220053434
    2. ' Point' → logprob: -5.006730556488037
    3. '	Point' → logprob: -12.006730079650879
    4. '_Point' → logprob: -12.506730079650879
    5. '.Point' → logprob: -13.756730079650879
    6. '<Point' → logprob: -13.881730079650879
    7. 'Points' → logprob: -14.006730079650879
    8. 'Po' → logprob: -14.256730079650879
    9. 'P' → logprob: -14.631730079650879
    10. '_point' → logprob: -15.006730079650879

Token 69: '")' (ID: 1405)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.47615933418273926
    2. '")' → logprob: -0.9761593341827393
    3. ')' → logprob: -6.47615909576416
    4. '):' → logprob: -8.10115909576416
    5. '"):
' → logprob: -9.10115909576416
    6. '"' → logprob: -9.35115909576416
    7. ' ")' → logprob: -11.72615909576416
    8. ')")' → logprob: -11.97615909576416
    9. '"):
' → logprob: -12.35115909576416
    10. ''):' → logprob: -12.60115909576416

Token 70: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -1.03646981716156
    2. ')->' → logprob: -1.28646981716156
    3. ' ->' → logprob: -1.41146981716156
    4. ')' → logprob: -2.4114699363708496
    5. ':' → logprob: -3.5364699363708496
    6. '):' → logprob: -5.66146993637085
    7. '()->' → logprob: -7.03646993637085
    8. '<|end|>' → logprob: -7.41146993637085
    9. ',' → logprob: -7.91146993637085
    10. ' )->' → logprob: -8.036469459533691

Token 71: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0072187380865216255
    2. 'float' → logprob: -5.007218837738037
    3. ' ' → logprob: -7.632218837738037
    4. '	float' → logprob: -11.507218360900879
    5. ' ' → logprob: -12.257218360900879
    6. '(float' → logprob: -14.007218360900879
    7. '<float' → logprob: -14.507218360900879
    8. '=float' → logprob: -14.507218360900879
    9. ',float' → logprob: -14.507218360900879
    10. '<|end|>' → logprob: -15.132218360900879

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014617849374189973
    2. '():' → logprob: -7.376461982727051
    3. '):' → logprob: -7.376461982727051
    4. ' :' → logprob: -9.00146198272705
    5. ':
' → logprob: -9.87646198272705
    6. ':**' → logprob: -11.75146198272705
    7. ':return' → logprob: -12.00146198272705
    8. ',' → logprob: -12.12646198272705
    9. '(' → logprob: -12.50146198272705
    10. '<|end|>' → logprob: -13.12646198272705

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011443293653428555
    2. ' return' → logprob: -5.261443138122559
    3. 'return' → logprob: -6.011443138122559
    4. '        ' → logprob: -6.886443138122559
    5. '    ' → logprob: -7.136443138122559
    6. '(' → logprob: -8.386443138122559
    7. '   ' → logprob: -8.386443138122559
    8. ')' → logprob: -8.636443138122559
    9. ' ' → logprob: -8.761443138122559
    10. ',' → logprob: -8.761443138122559

Token 74: ' #' (ID: 1069)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.20773069560527802
    2. 'return' → logprob: -2.207730770111084
    3. ' math' → logprob: -2.707730770111084
    4. '       ' → logprob: -4.707730770111084
    5. ' return' → logprob: -6.707730770111084
    6. '(math' → logprob: -7.832730770111084
    7. 'import' → logprob: -8.207730293273926
    8. '.math' → logprob: -11.707730293273926
    9. '```' → logprob: -11.957730293273926
    10. 'Math' → logprob: -13.582730293273926

Token 75: ' Eu' (ID: 10237)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0753676891326904
    2. 'math' → logprob: -1.3253676891326904
    3. ' math' → logprob: -1.4503676891326904
    4. 'import' → logprob: -2.3253676891326904
    5. ' return' → logprob: -2.9503676891326904
    6. '       ' → logprob: -5.0753679275512695
    7. ' import' → logprob: -6.3253679275512695
    8. '```' → logprob: -8.32536792755127
    9. '   ' → logprob: -8.82536792755127
    10. '(math' → logprob: -9.95036792755127

Token 76: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.23088844120502472
    2. '.' → logprob: -2.9808883666992188
    3. 'clid' → logprob: -2.9808883666992188
    4. '       ' → logprob: -3.8558883666992188
    5. '.sqrt' → logprob: -4.105888366699219
    6. 'm' → logprob: -4.230888366699219
    7. ')' → logprob: -4.730888366699219
    8. 's' → logprob: -4.855888366699219
    9. 'cmath' → logprob: -4.980888366699219
    10. '-' → logprob: -5.480888366699219

Token 77: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.343801736831665
    2. '(' → logprob: -1.468801736831665
    3. ')' → logprob: -1.968801736831665
    4. '<|end|>' → logprob: -2.343801736831665
    5. ' ' → logprob: -3.218801736831665
    6. ' (' → logprob: -3.468801736831665
    7. '(math' → logprob: -3.843801736831665
    8. '        ' → logprob: -3.968801736831665
    9. 'return' → logprob: -3.968801736831665
    10. ' math' → logprob: -3.968801736831665

Token 78: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6596850752830505
    2. '<|end|>' → logprob: -0.9096850752830505
    3. '<|end|>' → logprob: -3.1596851348876953
    4. '(' → logprob: -4.659685134887695
    5. ',' → logprob: -5.409685134887695
    6. 'return' → logprob: -5.534685134887695
    7. ')' → logprob: -5.659685134887695
    8. ':' → logprob: -6.159685134887695
    9. '(self' → logprob: -6.284685134887695
    10. '(
' → logprob: -6.534685134887695

Token 79: ' the' (ID: 290)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.37410882115364075
    2. ' the' → logprob: -1.3741087913513184
    3. 'math' → logprob: -3.6241087913513184
    4. ' a' → logprob: -3.9991087913513184
    5. 'the' → logprob: -5.249108791351318
    6. ' self' → logprob: -5.624108791351318
    7. '(math' → logprob: -6.249108791351318
    8. '<|end|>' → logprob: -6.499108791351318
    9. 'self' → logprob: -6.874108791351318
    10. ' (' → logprob: -8.624109268188477

Token 80: ' surface' (ID: 9753)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.42191970348358154
    2. 'math' → logprob: -1.2969197034835815
    3. 'x' → logprob: -3.921919822692871
    4. ' plane' → logprob: -4.046919822692871
    5. 'self' → logprob: -4.296919822692871
    6. ' x' → logprob: -4.921919822692871
    7. 'plane' → logprob: -6.171919822692871
    8. ' horizontal' → logprob: -6.171919822692871
    9. 'horizontal' → logprob: -6.171919822692871
    10. ' self' → logprob: -6.421919822692871

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04430386424064636
    2. '(' → logprob: -4.044303894042969
    3. ',' → logprob: -5.044303894042969
    4. ':' → logprob: -5.294303894042969
    5. 'return' → logprob: -5.794303894042969
    6. ')' → logprob: -6.294303894042969
    7. '(self' → logprob: -6.294303894042969
    8. ' (' → logprob: -6.419303894042969
    9. '.' → logprob: -6.919303894042969
    10. '(
' → logprob: -7.169303894042969

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001298927003517747
    2. ',' → logprob: -8.126298904418945
    3. ':' → logprob: -8.126298904418945
    4. 'return' → logprob: -9.001298904418945
    5. '        ' → logprob: -9.626298904418945
    6. '(' → logprob: -9.626298904418945
    7. '<|end|>' → logprob: -9.626298904418945
    8. '   ' → logprob: -9.751298904418945
    9. '      ' → logprob: -9.876298904418945
    10. ')' → logprob: -9.876298904418945

Token 83: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34984394907951355
    2. '       ' → logprob: -1.349843978881836
    3. 'import' → logprob: -4.224843978881836
    4. 'math' → logprob: -4.474843978881836
    5. ' return' → logprob: -5.099843978881836
    6. ' math' → logprob: -5.599843978881836
    7. '(math' → logprob: -9.974843978881836
    8. ' import' → logprob: -10.724843978881836
    9. '```' → logprob: -10.724843978881836
    10. '.math' → logprob: -12.349843978881836

Token 84: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1602409929037094
    2. 'math' → logprob: -1.9102410078048706
    3. '(math' → logprob: -11.03524112701416
    4. '   ' → logprob: -15.66024112701416
    5. '.math' → logprob: -15.66024112701416
    6. ' ((' → logprob: -16.035240173339844
    7. '       ' → logprob: -16.535240173339844
    8. '_math' → logprob: -16.910240173339844
    9. ' ' → logprob: -17.160240173339844
    10. '((' → logprob: -17.285240173339844

Token 85: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.693358302116394
    2. '.sqrt' → logprob: -0.693358302116394
    3. '.s' → logprob: -8.693358421325684
    4. '.Sqrt' → logprob: -11.318358421325684
    5. '.dist' → logprob: -11.568358421325684
    6. '.atan' → logprob: -11.943358421325684
    7. '.h' → logprob: -12.193358421325684
    8. '.pi' → logprob: -12.318358421325684
    9. '.pow' → logprob: -13.068358421325684
    10. ' .' → logprob: -14.318358421325684

Token 86: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -5.3954463510308415e-05
    2. 'sqrt' → logprob: -11.000054359436035
    3. 'hyp' → logprob: -11.125054359436035
    4. 'y' → logprob: -11.250054359436035
    5. '.sqrt' → logprob: -12.000054359436035
    6. 'at' → logprob: -13.625054359436035
    7. 'ot' → logprob: -14.875054359436035
    8. 'ath' → logprob: -14.875054359436035
    9. 'yper' → logprob: -15.375054359436035
    10. 'ypy' → logprob: -15.875054359436035

Token 87: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0007915244204923511
    2. 'at' → logprob: -7.625791549682617
    3. 'sqrt' → logprob: -8.875791549682617
    4. 'o' → logprob: -10.000791549682617
    5. 't' → logprob: -10.125791549682617
    6. '       ' → logprob: -10.625791549682617
    7. '```' → logprob: -10.750791549682617
    8. '.sqrt' → logprob: -12.000791549682617
    9. 's' → logprob: -12.250791549682617
    10. 'otate' → logprob: -13.125791549682617

Token 88: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01772104576230049
    2. '(' → logprob: -4.267721176147461
    3. '(other' → logprob: -5.642721176147461
    4. '((' → logprob: -12.517721176147461
    5. 'self' → logprob: -12.767721176147461
    6. '(
' → logprob: -14.267721176147461
    7. ' (' → logprob: -15.392721176147461
    8. 'other' → logprob: -15.767721176147461
    9. ' self' → logprob: -16.39272117614746
    10. '(next' → logprob: -16.51772117614746

Token 89: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.38689112663269043
    2. '.' → logprob: -1.1368911266326904
    3. ' .' → logprob: -11.76189136505127
    4. ' ' → logprob: -12.26189136505127
    5. ').' → logprob: -12.88689136505127
    6. '.
' → logprob: -13.51189136505127
    7. ')' → logprob: -13.88689136505127
    8. ',' → logprob: -14.26189136505127
    9. '.

' → logprob: -14.63689136505127
    10. 'x' → logprob: -14.63689136505127

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03806673735380173
    2. '-' → logprob: -3.2880666255950928
    3. '-other' → logprob: -11.288066864013672
    4. ' ' → logprob: -11.413066864013672
    5. ' -,' → logprob: -15.038066864013672
    6. ' -
' → logprob: -15.038066864013672
    7. ' –' → logprob: -15.163066864013672
    8. '-self' → logprob: -15.163066864013672
    9. ',' → logprob: -15.788066864013672
    10. 'other' → logprob: -17.163066864013672

Token 91: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.061968810856342316
    2. 'other' → logprob: -2.8119688034057617
    3. '(other' → logprob: -14.686968803405762
    4. 'Other' → logprob: -15.186968803405762
    5. '.other' → logprob: -15.186968803405762
    6. '_other' → logprob: -15.311968803405762
    7. '<|end|>' → logprob: -18.061969757080078
    8. ' oth' → logprob: -18.561969757080078
    9. ' ' → logprob: -18.811969757080078
    10. ' Other' → logprob: -19.436969757080078

Token 92: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.011065863072872162
    2. '.' → logprob: -4.51106595993042
    3. ' .' → logprob: -11.886065483093262
    4. '<|end|>' → logprob: -12.511065483093262
    5. ').' → logprob: -13.386065483093262
    6. 'x' → logprob: -13.386065483093262
    7. ' ' → logprob: -13.636065483093262
    8. '.
' → logprob: -14.011065483093262
    9. '.

' → logprob: -15.636065483093262

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001673061487963423
    2. ' ,' → logprob: -8.750166893005371
    3. ',
' → logprob: -12.250166893005371
    4. ',

' → logprob: -13.375166893005371
    5. ')' → logprob: -14.000166893005371
    6. ',self' → logprob: -14.000166893005371
    7. '),' → logprob: -15.000166893005371
    8. ',y' → logprob: -16.125167846679688
    9. 'self' → logprob: -16.500167846679688
    10. '‌,' → logprob: -16.625167846679688

Token 94: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.441045880317688
    2. 'other' → logprob: -1.066045880317688
    3. ' self' → logprob: -5.191045761108398
    4. 'self' → logprob: -5.191045761108398
    5. ' ' → logprob: -7.566045761108398
    6. 'Other' → logprob: -8.191045761108398
    7. '<|end|>' → logprob: -8.816045761108398
    8. ' ' → logprob: -9.316045761108398
    9. ')' → logprob: -10.441045761108398
    10. '0' → logprob: -11.191045761108398

Token 95: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.009850294329226017
    2. '.' → logprob: -4.63485050201416
    3. '.x' → logprob: -9.50985050201416
    4. '<|end|>' → logprob: -11.25985050201416
    5. ' .' → logprob: -12.25985050201416
    6. '<|end|>' → logprob: -14.38485050201416
    7. ').' → logprob: -14.88485050201416
    8. ' ' → logprob: -14.88485050201416
    9. 'y' → logprob: -15.00985050201416
    10. '.
' → logprob: -15.13485050201416

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0012977349106222391
    2. '-' → logprob: -6.751297950744629
    3. ')' → logprob: -9.001297950744629
    4. '-)' → logprob: -13.626297950744629
    5. ' )' → logprob: -13.751297950744629
    6. ' ' → logprob: -14.626297950744629
    7. ' -
' → logprob: -15.251297950744629
    8. '.y' → logprob: -15.376297950744629
    9. ' y' → logprob: -15.501297950744629
    10. '-y' → logprob: -15.751297950744629

Token 97: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.14268247783184052
    2. ' other' → logprob: -2.0176825523376465
    3. ' ' → logprob: -12.767682075500488
    4. '<|end|>' → logprob: -13.892682075500488
    5. ')' → logprob: -14.017682075500488
    6. '(other' → logprob: -14.392682075500488
    7. '.other' → logprob: -14.642682075500488
    8. 'Other' → logprob: -14.892682075500488
    9. ' y' → logprob: -15.017682075500488
    10. '0' → logprob: -15.392682075500488

Token 98: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005561012774705887
    2. ')' → logprob: -5.380560874938965
    3. '.' → logprob: -7.255560874938965
    4. 'y' → logprob: -8.630560874938965
    5. '<|end|>' → logprob: -10.255560874938965
    6. '.x' → logprob: -12.005560874938965
    7. '.)' → logprob: -12.630560874938965
    8. ').' → logprob: -12.755560874938965
    9. ')y' → logprob: -12.880560874938965
    10. '	y' → logprob: -13.630560874938965

Token 99: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -13.875005722045898
    4. ')return' → logprob: -15.250005722045898
    5. '))' → logprob: -17.0000057220459
    6. ')

' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.2500057220459
    8. '       ' → logprob: -17.3750057220459
    9. '<|end|>' → logprob: -17.3750057220459
    10. ')`' → logprob: -18.5000057220459

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02655583806335926
    2. '

' → logprob: -4.401556015014648
    3. '   ' → logprob: -5.026556015014648
    4. '<|end|>' → logprob: -6.401556015014648
    5. '    
' → logprob: -6.526556015014648
    6. ' ' → logprob: -6.651556015014648
    7. ' 
' → logprob: -7.276556015014648
    8. '


' → logprob: -7.401556015014648
    9. '\n' → logprob: -8.026556015014648
    10. '  
' → logprob: -8.026556015014648

Token 101: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2783355712890625
    2. 'def' (adapté à ' def') → logprob: -1.9033355712890625
    3. '   ' → logprob: -3.0283355712890625
    4. '<|end|>' → logprob: -3.6533355712890625
    5. '    
' → logprob: -5.0283355712890625
    6. '

' → logprob: -5.2783355712890625
    7. ' ' → logprob: -6.1533355712890625
    8. '```' → logprob: -6.5283355712890625
    9. ' def' → logprob: -6.6533355712890625
    10. ' 
' → logprob: -6.9033355712890625

Token 102: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0871671736240387
    2. ' ' → logprob: -2.837167263031006
    3. '_' → logprob: -4.337167263031006
    4. ' def' → logprob: -5.462167263031006
    5. '__' → logprob: -5.587167263031006
    6. ' _' → logprob: -6.712167263031006
    7. ' ' → logprob: -6.962167263031006
    8. ' repr' → logprob: -7.587167263031006
    9. '_repr' → logprob: -7.962167263031006
    10. 'repr' → logprob: -8.962166786193848

Token 103: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.10316067188978195
    2. 'repr' → logprob: -2.3531606197357178
    3. 'str' → logprob: -5.853160858154297
    4. ' eq' → logprob: -10.353160858154297
    5. 'lt' → logprob: -10.978160858154297
    6. 'init' → logprob: -11.853160858154297
    7. '_eq' → logprob: -11.978160858154297
    8. ' ' → logprob: -12.228160858154297
    9. ' repr' → logprob: -12.353160858154297
    10. 'hash' → logprob: -12.978160858154297

Token 104: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.36595097184181213
    2. '__' → logprob: -1.3659509420394897
    3. '__('' → logprob: -3.7409510612487793
    4. '__("' → logprob: -3.7409510612487793
    5. '__(
' → logprob: -5.615951061248779
    6. '__((' → logprob: -9.240950584411621
    7. '(' → logprob: -9.990950584411621
    8. '__(*' → logprob: -10.365950584411621
    9. '(self' → logprob: -11.240950584411621
    10. '__.__' → logprob: -11.490950584411621

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009189624106511474
    2. ')' → logprob: -7.000918865203857
    3. ' self' → logprob: -12.125919342041016
    4. ' ' → logprob: -14.125919342041016
    5. '
' → logprob: -14.875919342041016
    6. '(self' → logprob: -15.375919342041016
    7. '   ' → logprob: -15.875919342041016
    8. '),' → logprob: -16.000919342041016
    9. '  ' → logprob: -16.375919342041016
    10. '

' → logprob: -16.625919342041016

Token 106: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11030656844377518
    2. '__' → logprob: -2.61030650138855
    3. '__)' → logprob: -4.235306739807129
    4. '):
' → logprob: -5.485306739807129
    5. 'self' → logprob: -5.860306739807129
    6. ')__' → logprob: -5.860306739807129
    7. '):' → logprob: -6.485306739807129
    8. '__('' → logprob: -7.235306739807129
    9. ').__' → logprob: -7.360306739807129
    10. ' )' → logprob: -7.360306739807129

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029389522969722748
    2. 'return' → logprob: -6.377938747406006
    3. ' return' → logprob: -6.877938747406006
    4. 'f' → logprob: -9.127939224243164
    5. ' f' → logprob: -9.377939224243164
    6. '      ' → logprob: -12.627939224243164
    7. '   ' → logprob: -13.002939224243164
    8. '        ' → logprob: -13.502939224243164
    9. '           ' → logprob: -13.627939224243164
    10. '"' → logprob: -14.252939224243164

Token 108: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9379993677139282
    2. '       ' → logprob: -1.1879993677139282
    3. 'return' (adapté à ' return') → logprob: -1.6879993677139282
    4. ' f' → logprob: -2.4379992485046387
    5. ' return' → logprob: -3.6879992485046387
    6. '   ' → logprob: -5.062999248504639
    7. '           ' → logprob: -9.812999725341797
    8. '    ' → logprob: -10.062999725341797
    9. '     ' → logprob: -10.187999725341797
    10. ' ' → logprob: -11.187999725341797

Token 109: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.03805262967944145
    2. 'f' → logprob: -3.288052558898926
    3. ' ' → logprob: -11.788052558898926
    4. '	f' → logprob: -13.163052558898926
    5. ' ' → logprob: -13.913052558898926
    6. '"' → logprob: -14.538052558898926
    7. ' F' → logprob: -15.288052558898926
    8. '(f' → logprob: -16.788053512573242
    9. 'F' → logprob: -17.163053512573242
    10. ''f' → logprob: -17.788053512573242

Token 110: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03785613551735878
    2. 'f' → logprob: -3.537856101989746
    3. ''' → logprob: -5.787856101989746
    4. 'Point' → logprob: -5.912856101989746
    5. '(f' → logprob: -6.912856101989746
    6. '("' → logprob: -7.662856101989746
    7. '(Point' → logprob: -7.787856101989746
    8. '<Point' → logprob: -9.412856101989746
    9. ' Point' → logprob: -9.412856101989746
    10. '"P' → logprob: -9.537856101989746

Token 111: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0002755174064077437
    2. '(Point' → logprob: -8.875275611877441
    3. '<Point' → logprob: -9.625275611877441
    4. '"' → logprob: -10.125275611877441
    5. ' Point' → logprob: -11.250275611877441
    6. 'Points' → logprob: -12.625275611877441
    7. '	Point' → logprob: -12.625275611877441
    8. '.Point' → logprob: -12.750275611877441
    9. '_Point' → logprob: -13.750275611877441
    10. 'P' → logprob: -13.875275611877441

Token 112: '(x' (ID: 4061)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.19677592813968658
    2. '(' → logprob: -2.1967759132385254
    3. '(x' → logprob: -2.6967759132385254
    4. '(self' → logprob: -11.321776390075684
    5. '(
' → logprob: -12.071776390075684
    6. '(({' → logprob: -12.446776390075684
    7. '(`' → logprob: -12.821776390075684
    8. '(f' → logprob: -12.946776390075684
    9. '(

' → logprob: -12.946776390075684
    10. '{x' → logprob: -12.946776390075684

Token 113: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.03900329768657684
    2. '=' → logprob: -3.289003372192383
    3. '=self' → logprob: -7.414003372192383
    4. '{' → logprob: -8.039003372192383
    5. '=}' → logprob: -10.914003372192383
    6. 'self' → logprob: -12.039003372192383
    7. '={`' → logprob: -12.789003372192383
    8. '=

' → logprob: -13.039003372192383
    9. '=f' → logprob: -13.039003372192383
    10. '={
' → logprob: -14.289003372192383

Token 114: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.778209353797138e-05
    2. '{' → logprob: -10.250067710876465
    3. ' self' → logprob: -10.375067710876465
    4. '
' → logprob: -14.875067710876465
    5. ' ' → logprob: -15.875067710876465
    6. 'sel' → logprob: -16.12506866455078
    7. '   ' → logprob: -16.25006866455078
    8. '

' → logprob: -17.12506866455078
    9. '{
' → logprob: -17.25006866455078
    10. 'repr' → logprob: -17.37506866455078

Token 115: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03383149579167366
    2. '.' → logprob: -3.4088315963745117
    3. ' .' → logprob: -8.908831596374512
    4. '<|end|>' → logprob: -10.408831596374512
    5. ' ' → logprob: -12.533831596374512
    6. '.xtext' → logprob: -13.033831596374512
    7. '<|end|>' → logprob: -13.033831596374512
    8. '.
' → logprob: -13.158831596374512
    9. '‌.' → logprob: -13.908831596374512
    10. ').' → logprob: -13.908831596374512

Token 116: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.006734795868396759
    2. ',' → logprob: -5.006734848022461
    3. '}' → logprob: -12.006734848022461
    4. ' },' → logprob: -12.381734848022461
    5. '),' → logprob: -13.256734848022461
    6. '.' → logprob: -13.381734848022461
    7. '",' → logprob: -13.756734848022461
    8. ' ,' → logprob: -14.131734848022461
    9. '],' → logprob: -14.256734848022461
    10. '`,' → logprob: -14.381734848022461

Token 117: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.01911374367773533
    2. 'y' → logprob: -4.019113540649414
    3. ' self' → logprob: -7.519113540649414
    4. 'self' → logprob: -8.144113540649414
    5. ' ' → logprob: -10.269113540649414
    6. '<|end|>' → logprob: -10.269113540649414
    7. '{' → logprob: -10.519113540649414
    8. ',' → logprob: -11.269113540649414
    9. ' {' → logprob: -11.519113540649414
    10. ' ' → logprob: -12.769113540649414

Token 118: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.001299522933550179
    2. '=' → logprob: -7.2512993812561035
    3. '{' → logprob: -7.8762993812561035
    4. '}' → logprob: -8.876299858093262
    5. '=f' → logprob: -10.626299858093262
    6. '=}' → logprob: -10.751299858093262
    7. '=self' → logprob: -11.751299858093262
    8. ')' → logprob: -12.251299858093262
    9. '<|end|>' → logprob: -13.126299858093262
    10. ' ={' → logprob: -13.376299858093262

Token 119: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006633530138060451
    2. ' self' → logprob: -7.5006632804870605
    3. '{' → logprob: -9.125663757324219
    4. '       ' → logprob: -15.625663757324219
    5. ' ' → logprob: -15.625663757324219
    6. '	self' → logprob: -15.625663757324219
    7. '(self' → logprob: -15.750663757324219
    8. '   ' → logprob: -16.00066375732422
    9. '[self' → logprob: -16.25066375732422
    10. '0' → logprob: -16.50066375732422

Token 120: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0036180049646645784
    2. '.' → logprob: -5.628618240356445
    3. '.x' → logprob: -11.878618240356445
    4. ' .' → logprob: -12.503618240356445
    5. ')' → logprob: -12.878618240356445
    6. '})' → logprob: -13.128618240356445
    7. '}' → logprob: -13.878618240356445
    8. '

' → logprob: -15.253618240356445
    9. '}")' → logprob: -15.378618240356445
    10. '<|end|>' → logprob: -15.378618240356445

Token 121: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.10146212577819824
    2. ')' → logprob: -2.3514621257781982
    3. ')")' → logprob: -6.976462364196777
    4. '})' → logprob: -9.226462364196777
    5. ')">' → logprob: -9.476462364196777
    6. '}"' → logprob: -10.101462364196777
    7. ')}' → logprob: -10.351462364196777
    8. '}")' → logprob: -10.726462364196777
    9. ')`' → logprob: -10.726462364196777
    10. '")' → logprob: -11.726462364196777

Token 122: '"


' (ID: 36470)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40650734305381775
    2. '"' → logprob: -1.6565073728561401
    3. '")' → logprob: -2.0315072536468506
    4. '<|end|>' → logprob: -4.78150749206543
    5. '```' → logprob: -7.03150749206543
    6. ')"' → logprob: -7.03150749206543
    7. '"""' → logprob: -7.90650749206543
    8. '}' → logprob: -8.03150749206543
    9. '\n' → logprob: -8.28150749206543
    10. '
' → logprob: -8.40650749206543

Token 123: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00749032711610198
    2. '
' → logprob: -5.007490158081055
    3. '

' → logprob: -7.257490158081055
    4. ' class' → logprob: -10.007490158081055
    5. '


' → logprob: -12.257490158081055
    6. '  
' → logprob: -12.507490158081055
    7. 'def' → logprob: -12.757490158081055
    8. '"class' → logprob: -13.257490158081055
    9. '```' → logprob: -13.257490158081055
    10. '
' → logprob: -13.382490158081055

Token 124: ' Route' (ID: 17215)
  Prédit: ' Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Route' → logprob: -0.16585765779018402
    2. 'Route' → logprob: -2.2908575534820557
    3. ' Profile' → logprob: -4.540857791900635
    4. ' Terrain' → logprob: -4.540857791900635
    5. ' Elev' → logprob: -4.665857791900635
    6. ' Segment' → logprob: -5.790857791900635
    7. 'Elevation' → logprob: -6.290857791900635
    8. ' Track' → logprob: -6.290857791900635
    9. ' Gradient' → logprob: -6.415857791900635
    10. 'Profile' → logprob: -6.415857791900635

Token 125: 'Segment' (ID: 24880)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007667447789572179
    2. ':
' → logprob: -7.625766754150391
    3. '(' → logprob: -9.50076675415039
    4. 'Point' → logprob: -9.87576675415039
    5. '):' → logprob: -9.87576675415039
    6. '():' → logprob: -10.25076675415039
    7. 'Segment' → logprob: -11.25076675415039
    8. ' :' → logprob: -11.50076675415039
    9. 'Step' → logprob: -12.00076675415039
    10. 'Polyline' → logprob: -12.00076675415039

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019145958358421922
    2. ':
' → logprob: -6.6269145011901855
    3. '):' → logprob: -7.7519145011901855
    4. '(' → logprob: -9.001914978027344
    5. ' :' → logprob: -11.001914978027344
    6. '>:' → logprob: -12.751914978027344
    7. '<|end|>' → logprob: -12.751914978027344
    8. ':

' → logprob: -12.876914978027344
    9. '():' → logprob: -12.876914978027344
    10. '):
' → logprob: -13.751914978027344

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013021418126299977
    2. ':' → logprob: -7.126302242279053
    3. ' def' → logprob: -8.876301765441895
    4. '    
' → logprob: -9.126301765441895
    5. 'def' → logprob: -9.126301765441895
    6. ':
' → logprob: -9.876301765441895
    7. '(' → logprob: -10.251301765441895
    8. '<|end|>' → logprob: -11.751301765441895
    9. ')' → logprob: -12.001301765441895
    10. ',' → logprob: -12.126301765441895

Token 128: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5185034275054932
    2. ' def' → logprob: -1.0185034275054932
    3. '   ' → logprob: -3.143503427505493
    4. 'class' → logprob: -9.268503189086914
    5. ':' → logprob: -9.768503189086914
    6. ' ' → logprob: -9.893503189086914
    7. '  ' → logprob: -10.643503189086914
    8. '    ' → logprob: -11.143503189086914
    9. '	def' → logprob: -11.268503189086914
    10. ' 
' → logprob: -11.643503189086914

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04019894450902939
    2. ' def' → logprob: -3.665199041366577
    3. '__' → logprob: -4.790198802947998
    4. ' ' → logprob: -6.290198802947998
    5. '_init' → logprob: -7.290198802947998
    6. 'def' → logprob: -7.415198802947998
    7. ' Point' → logprob: -7.665198802947998
    8. 'init' → logprob: -7.790198802947998
    9. '<|end|>' → logprob: -8.040199279785156
    10. ' init' → logprob: -8.290199279785156

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.001348211313597858
    2. '_init' → logprob: -7.12634801864624
    3. 'class' → logprob: -8.126348495483398
    4. 'def' → logprob: -9.251348495483398
    5. ' init' → logprob: -9.501348495483398
    6. '   ' → logprob: -10.251348495483398
    7. '__' → logprob: -10.751348495483398
    8. '```' → logprob: -12.376348495483398
    9. '    ' → logprob: -13.126348495483398
    10. ' __' → logprob: -13.251348495483398

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0035835569724440575
    2. '(self' → logprob: -5.7535834312438965
    3. '__' → logprob: -8.753583908081055
    4. '__(
' → logprob: -9.003583908081055
    5. ' (' → logprob: -9.628583908081055
    6. '_(' → logprob: -10.253583908081055
    7. '(' → logprob: -10.878583908081055
    8. 'self' → logprob: -13.128583908081055
    9. '__((' → logprob: -13.253583908081055
    10. ' ' → logprob: -15.253583908081055

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014190541580319405
    2. ' self' → logprob: -4.264190673828125
    3. ',' → logprob: -11.139190673828125
    4. '   ' → logprob: -12.514190673828125
    5. '
' → logprob: -13.014190673828125
    6. ' ' → logprob: -13.139190673828125
    7. '(self' → logprob: -13.764190673828125
    8. '	self' → logprob: -14.014190673828125
    9. '0' → logprob: -14.139190673828125
    10. ')' → logprob: -14.889190673828125

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011699594557285309
    2. ' ,' → logprob: -4.511699676513672
    3. 'self' → logprob: -7.386699676513672
    4. ' self' → logprob: -10.761699676513672
    5. ',
' → logprob: -12.886699676513672
    6. ' ' → logprob: -12.886699676513672
    7. ',self' → logprob: -13.511699676513672
    8. '(self' → logprob: -13.636699676513672
    9. '   ' → logprob: -14.136699676513672
    10. '
' → logprob: -14.636699676513672

Token 134: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.47844988107681274
    2. ' start' → logprob: -0.9784498810768127
    3. 'length' → logprob: -6.728449821472168
    4. 'points' → logprob: -7.228449821472168
    5. ' length' → logprob: -7.353449821472168
    6. '   ' → logprob: -7.478449821472168
    7. 'self' → logprob: -7.728449821472168
    8. ' points' → logprob: -8.103449821472168
    9. 'point' → logprob: -8.603449821472168
    10. ' self' → logprob: -9.978449821472168

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044771209359169006
    2. ',' → logprob: -3.169771194458008
    3. ' ,' → logprob: -7.294771194458008
    4. ' :' → logprob: -8.044771194458008
    5. '_point' → logprob: -8.294771194458008
    6. '<|end|>' → logprob: -8.419771194458008
    7. ')' → logprob: -9.294771194458008
    8. '=' → logprob: -9.294771194458008
    9. '):' → logprob: -10.544771194458008
    10. ' =' → logprob: -10.919771194458008

Token 136: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10023277252912521
    2. ' Point' → logprob: -2.3502328395843506
    3. '	Point' → logprob: -11.35023307800293
    4. ')' → logprob: -11.85023307800293
    5. '_Point' → logprob: -12.85023307800293
    6. '_point' → logprob: -13.10023307800293
    7. 'Optional' → logprob: -14.60023307800293
    8. '<Point' → logprob: -14.85023307800293
    9. '.Point' → logprob: -14.97523307800293
    10. ' ' → logprob: -15.10023307800293

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000632139970548451
    2. ' ,' → logprob: -7.375632286071777
    3. ')' → logprob: -12.875632286071777
    4. '‌,' → logprob: -13.875632286071777
    5. '<|end|>' → logprob: -14.125632286071777
    6. ',
' → logprob: -14.625632286071777
    7. ',start' → logprob: -15.875632286071777
    8. ' ' → logprob: -15.875632286071777
    9. '),' → logprob: -16.00063133239746
    10. '<|end|>' → logprob: -16.75063133239746

Token 138: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10021928697824478
    2. 'end' → logprob: -2.350219249725342
    3. ' ' → logprob: -12.1002197265625
    4. '	end' → logprob: -12.9752197265625
    5. ' stop' → logprob: -13.8502197265625
    6. ',' → logprob: -14.2252197265625
    7. ',end' → logprob: -14.2252197265625
    8. 'stop' → logprob: -14.3502197265625
    9. ' finish' → logprob: -15.1002197265625
    10. '_end' → logprob: -15.1002197265625

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019078121986240149
    2. '):' → logprob: -6.751907825469971
    3. ',' → logprob: -7.751907825469971
    4. ')' → logprob: -8.126907348632812
    5. ' :' → logprob: -12.126907348632812
    6. ' ):' → logprob: -13.126907348632812
    7. '=' → logprob: -13.501907348632812
    8. '):
' → logprob: -13.751907348632812
    9. '}:' → logprob: -14.501907348632812
    10. ' )' → logprob: -14.751907348632812

Token 140: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.0012543961638584733
    2. 'Point' → logprob: -6.751254558563232
    3. '	Point' → logprob: -10.376254081726074
    4. ')' → logprob: -10.876254081726074
    5. ' )' → logprob: -11.251254081726074
    6. ' ' → logprob: -11.876254081726074
    7. ' ' → logprob: -12.376254081726074
    8. ' Points' → logprob: -12.751254081726074
    9. '_Point' → logprob: -12.876254081726074
    10. '(Point' → logprob: -13.501254081726074

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010972357355058193
    2. ')' → logprob: -5.260972499847412
    3. ',' → logprob: -5.510972499847412
    4. '):
' → logprob: -6.760972499847412
    5. ' ):' → logprob: -7.635972499847412
    6. ':' → logprob: -11.010972023010254
    7. '   ' → logprob: -11.760972023010254
    8. ' )' → logprob: -12.010972023010254
    9. ' ,' → logprob: -13.010972023010254
    10. ' ' → logprob: -13.135972023010254

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03738081827759743
    2. ',' → logprob: -3.9123809337615967
    3. ')' → logprob: -5.037380695343018
    4. '):' → logprob: -6.037380695343018
    5. ':' → logprob: -6.287380695343018
    6. '   ' → logprob: -6.412380695343018
    7. ' ' → logprob: -6.537380695343018
    8. '):
' → logprob: -6.537380695343018
    9. '<|end|>' → logprob: -7.662380695343018
    10. '      ' → logprob: -8.787381172180176

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15022170543670654
    2. ' self' → logprob: -2.150221824645996
    3. '       ' → logprob: -3.775221824645996
    4. '	self' → logprob: -10.275221824645996
    5. ' ' → logprob: -10.650221824645996
    6. ' ' → logprob: -11.275221824645996
    7. '        ' → logprob: -11.650221824645996
    8. '   ' → logprob: -12.525221824645996
    9. '	' → logprob: -13.275221824645996
    10. '      ' → logprob: -13.275221824645996

Token 144: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0789656862616539
    2. '.start' → logprob: -2.703965663909912
    3. ' start' → logprob: -5.578965663909912
    4. ' ' → logprob: -6.203965663909912
    5. 'start' → logprob: -6.328965663909912
    6. ' .' → logprob: -7.078965663909912
    7. '=start' → logprob: -8.82896614074707
    8. ' =' → logprob: -9.20396614074707
    9. ':' → logprob: -9.95396614074707
    10. '=' → logprob: -9.95396614074707

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38724932074546814
    2. '=' → logprob: -1.1372493505477905
    3. ',' → logprob: -8.762248992919922
    4. ')' → logprob: -9.387248992919922
    5. '<|end|>' → logprob: -9.512248992919922
    6. ' ' → logprob: -10.887248992919922
    7. '=start' → logprob: -11.387248992919922
    8. '=end' → logprob: -11.387248992919922
    9. ' ,' → logprob: -11.637248992919922
    10. ':' → logprob: -12.387248992919922

Token 146: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.026584511622786522
    2. 'start' → logprob: -3.6515846252441406
    3. ' ' → logprob: -8.65158462524414
    4. ' ' → logprob: -9.65158462524414
    5. ' end' → logprob: -10.40158462524414
    6. '<|end|>' → logprob: -11.90158462524414
    7. 'end' → logprob: -12.77658462524414
    8. '	start' → logprob: -13.15158462524414
    9. '=start' → logprob: -14.27658462524414
    10. ')' → logprob: -14.65158462524414

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001169152557849884
    2. '
' → logprob: -7.376169204711914
    3. '<|end|>' → logprob: -7.626169204711914
    4. '<|end|>' → logprob: -11.501169204711914
    5. ' ' → logprob: -11.626169204711914
    6. ',' → logprob: -11.751169204711914
    7. '        
' → logprob: -12.126169204711914
    8. '   ' → logprob: -12.251169204711914
    9. 'self' → logprob: -12.376169204711914
    10. '      ' → logprob: -12.501169204711914

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19997550547122955
    2. '<|end|>' → logprob: -2.1999754905700684
    3. '
' → logprob: -2.6999754905700684
    4. '  
' → logprob: -6.949975490570068
    5. '        
' → logprob: -7.074975490570068
    6. ' 
' → logprob: -7.449975490570068
    7. ' ' → logprob: -7.949975490570068
    8. '<|end|>' → logprob: -8.324975967407227
    9. ',' → logprob: -9.699975967407227
    10. '   ' → logprob: -10.074975967407227

Token 149: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2047603875398636
    2. ' self' → logprob: -1.7047604322433472
    3. '       ' → logprob: -5.704760551452637
    4. ' ' → logprob: -12.079760551452637
    5. '   ' → logprob: -12.704760551452637
    6. '	self' → logprob: -13.204760551452637
    7. ' ' → logprob: -16.07975959777832
    8. '(self' → logprob: -16.20475959777832
    9. '
' → logprob: -16.20475959777832
    10. '        ' → logprob: -16.32975959777832

Token 150: '.end' (ID: 10289)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.696697473526001
    2. '.end' → logprob: -0.821697473526001
    3. ' .' → logprob: -3.946697473526001
    4. 'end' → logprob: -4.321697235107422
    5. ' end' → logprob: -4.696697235107422
    6. ' =' → logprob: -4.821697235107422
    7. '=' → logprob: -5.446697235107422
    8. ' ' → logprob: -5.446697235107422
    9. '=end' → logprob: -6.321697235107422
    10. ')' → logprob: -8.071697235107422

Token 151: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.11283444613218307
    2. 'end' → logprob: -2.2378344535827637
    3. '	end' → logprob: -12.237833976745605
    4. '=end' → logprob: -12.737833976745605
    5. ' ' → logprob: -13.612833976745605
    6. '(end' → logprob: -14.237833976745605
    7. '[end' → logprob: -14.362833976745605
    8. ' ' → logprob: -14.487833976745605
    9. '<|end|>' → logprob: -14.487833976745605
    10. '>end' → logprob: -16.237834930419922

Token 153: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24834606051445007
    2. 'self' (adapté à ' self') → logprob: -2.1233460903167725
    3. 'def' → logprob: -3.2483460903167725
    4. ' self' → logprob: -3.2483460903167725
    5. '   ' → logprob: -3.8733460903167725
    6. ' def' → logprob: -6.748345851898193
    7. '
' → logprob: -8.623346328735352
    8. ' ' → logprob: -8.623346328735352
    9. '	self' → logprob: -9.873346328735352
    10. '    
' → logprob: -10.248346328735352

Token 156: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.7877092361450195
    2. '.' → logprob: -0.9127092361450195
    3. '.distance' → logprob: -2.4127092361450195
    4. ' .' → logprob: -4.0377092361450195
    5. '_length' → logprob: -4.5377092361450195
    6. '._' → logprob: -4.7877092361450195
    7. 'length' → logprob: -6.1627092361450195
    8. '.dist' → logprob: -6.2877092361450195
    9. '.height' → logprob: -6.4127092361450195
    10. '.points' → logprob: -6.5377092361450195

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016040703281760216
    2. '=' → logprob: -4.141040802001953
    3. ' ' → logprob: -12.141040802001953
    4. ':' → logprob: -15.141040802001953
    5. '   ' → logprob: -15.266040802001953
    6. '_' → logprob: -15.516040802001953
    7. ')' → logprob: -16.391040802001953
    8. '    ' → logprob: -16.391040802001953
    9. ' =
' → logprob: -16.641040802001953
    10. ',' → logprob: -17.391040802001953

Token 158: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.345535546541214
    2. 'self' → logprob: -1.3455355167388916
    3. ' end' → logprob: -4.095535755157471
    4. 'end' → logprob: -4.470535755157471
    5. ' start' → logprob: -6.095535755157471
    6. 'start' → logprob: -6.720535755157471
    7. ' abs' → logprob: -9.845535278320312
    8. ' ' → logprob: -10.095535278320312
    9. ' math' → logprob: -10.345535278320312
    10. '   ' → logprob: -10.595535278320312

Token 159: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.021022001281380653
    2. '.end' → logprob: -4.646021842956543
    3. 'start' → logprob: -5.146021842956543
    4. '.' → logprob: -5.271021842956543
    5. ' .' → logprob: -9.021021842956543
    6. '.distance' → logprob: -9.396021842956543
    7. ' start' → logprob: -11.521021842956543
    8. '_.' → logprob: -12.396021842956543
    9. ').' → logprob: -12.521021842956543
    10. 'end' → logprob: -12.771021842956543

Token 160: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.003192566568031907
    2. '.' → logprob: -5.75319242477417
    3. ' .' → logprob: -12.128192901611328
    4. '.dist' → logprob: -12.753192901611328
    5. '.point' → logprob: -12.753192901611328
    6. 'distance' → logprob: -12.753192901611328
    7. '.Distance' → logprob: -14.878192901611328
    8. '.position' → logprob: -16.253192901611328
    9. '.points' → logprob: -16.878192901611328
    10. '.x' → logprob: -17.003192901611328

Token 161: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.2723104848410003e-05
    2. '_' → logprob: -11.000022888183594
    3. '_t' → logprob: -12.375022888183594
    4. ' _' → logprob: -14.000022888183594
    5. 'to' → logprob: -14.500022888183594
    6. ' to' → logprob: -15.750022888183594
    7. '_distance' → logprob: -17.375022888183594
    8. '_from' → logprob: -17.500022888183594
    9. '(_' → logprob: -17.625022888183594
    10. '_point' → logprob: -17.625022888183594

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0053985766135156155
    2. '(' → logprob: -5.255398750305176
    3. '(end' → logprob: -8.880398750305176
    4. 'self' → logprob: -10.880398750305176
    5. '(
' → logprob: -12.630398750305176
    6. ' self' → logprob: -13.630398750305176
    7. ' (' → logprob: -13.880398750305176
    8. '(other' → logprob: -13.880398750305176
    9. '(

' → logprob: -15.630398750305176
    10. '(this' → logprob: -16.63039779663086

Token 163: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.00038991993642412126
    2. '.' → logprob: -8.00039005279541
    3. ' .' → logprob: -9.87539005279541
    4. 'end' → logprob: -13.00039005279541
    5. ').' → logprob: -15.87539005279541
    6. '	end' → logprob: -16.250389099121094
    7. '.endpoint' → logprob: -16.500389099121094
    8. ' ' → logprob: -16.625389099121094
    9. ',end' → logprob: -16.750389099121094
    10. '.END' → logprob: -16.750389099121094

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002740906202234328
    2. ' )' → logprob: -8.250273704528809
    3. '())' → logprob: -12.000273704528809
    4. ')
' → logprob: -12.750273704528809
    5. '()' → logprob: -13.000273704528809
    6. ' ' → logprob: -14.000273704528809
    7. '<|end|>' → logprob: -16.000274658203125
    8. ')return' → logprob: -16.125274658203125
    9. '))' → logprob: -16.625274658203125
    10. '   ' → logprob: -16.875274658203125

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8040281534194946
    2. '<|end|>' → logprob: -1.1790281534194946
    3. '   ' → logprob: -1.4290281534194946
    4. '

' → logprob: -6.179028034210205
    5. 'def' → logprob: -6.804028034210205
    6. '    
' → logprob: -7.554028034210205
    7. '<|end|>' → logprob: -7.554028034210205
    8. ' ' → logprob: -7.804028034210205
    9. ')' → logprob: -8.304028511047363
    10. ' def' → logprob: -8.929028511047363

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0785001665353775
    2. '   ' → logprob: -2.703500270843506
    3. ' def' → logprob: -5.078500270843506
    4. '
' → logprob: -6.828500270843506
    5. '    
' → logprob: -7.328500270843506
    6. ' ' → logprob: -8.328499794006348
    7. '<|end|>' → logprob: -8.578499794006348
    8. '

' → logprob: -10.578499794006348
    9. ' 
' → logprob: -11.203499794006348
    10. '@property' → logprob: -11.328499794006348

Token 167: ' point' (ID: 2438)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6694747805595398
    2. 'is' → logprob: -2.4194748401641846
    3. 'e' → logprob: -2.6694748401641846
    4. ' slope' → logprob: -2.6694748401641846
    5. ' is' → logprob: -2.9194748401641846
    6. ' interpolate' → logprob: -3.2944748401641846
    7. ' length' → logprob: -3.7944748401641846
    8. ' get' → logprob: -3.9194748401641846
    9. ' elevation' → logprob: -3.9194748401641846
    10. 'inter' → logprob: -4.1694746017456055

Token 168: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.024395333603024483
    2. 's' → logprob: -4.14939546585083
    3. '_al' → logprob: -4.89939546585083
    4. '_on' → logprob: -7.64939546585083
    5. '_a' → logprob: -8.899394989013672
    6. '_' → logprob: -9.524394989013672
    7. '_inside' → logprob: -9.899394989013672
    8. '(self' → logprob: -10.274394989013672
    9. '_between' → logprob: -10.899394989013672
    10. '_b' → logprob: -10.899394989013672

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014480321668088436
    2. '(' → logprob: -4.389480113983154
    3. '<|end|>' → logprob: -6.514480113983154
    4. 'self' → logprob: -8.889480590820312
    5. '_fraction' → logprob: -9.139480590820312
    6. ' (' → logprob: -9.514480590820312
    7. '(
' → logprob: -9.889480590820312
    8. '_ratio' → logprob: -10.389480590820312
    9. '(s' → logprob: -11.139480590820312
    10. ' ' → logprob: -11.389480590820312

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014215784904081374
    2. ' ,' → logprob: -8.875142097473145
    3. ' ' → logprob: -14.500142097473145
    4. 'self' → logprob: -14.875142097473145
    5. '   ' → logprob: -15.000142097473145
    6. 'index' → logprob: -15.000142097473145
    7. ')' → logprob: -15.000142097473145
    8. ',
' → logprob: -16.37514305114746
    9. ',float' → logprob: -16.37514305114746
    10. ',index' → logprob: -16.87514305114746

Token 171: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11806462705135345
    2. ' t' → logprob: -2.8680646419525146
    3. 'self' → logprob: -3.6180646419525146
    4. 'fraction' → logprob: -4.1180644035339355
    5. 'ratio' → logprob: -4.9930644035339355
    6. '   ' → logprob: -6.4930644035339355
    7. ' self' → logprob: -6.7430644035339355
    8. 'frac' → logprob: -7.4930644035339355
    9. 'distance' → logprob: -7.8680644035339355
    10. ' fraction' → logprob: -7.8680644035339355

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005704291397705674
    2. ')' → logprob: -8.000570297241211
    3. '):' → logprob: -8.875570297241211
    4. ' :' → logprob: -9.375570297241211
    5. '=' → logprob: -11.875570297241211
    6. ' )' → logprob: -14.000570297241211
    7. ' ):' → logprob: -14.375570297241211
    8. ' ' → logprob: -14.500570297241211
    9. '):
' → logprob: -14.500570297241211
    10. '<|end|>' → logprob: -15.000570297241211

Token 173: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12908653914928436
    2. 'float' → logprob: -2.129086494445801
    3. '0' → logprob: -6.379086494445801
    4. ')' → logprob: -8.0040864944458
    5. ' ' → logprob: -9.3790864944458
    6. '1' → logprob: -11.1290864944458
    7. ' )' → logprob: -11.7540864944458
    8. '(float' → logprob: -11.7540864944458
    9. '=float' → logprob: -12.2540864944458
    10. ',float' → logprob: -13.1290864944458

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002273774443892762
    2. '):' → logprob: -8.875226974487305
    3. ' )' → logprob: -9.375226974487305
    4. '):
' → logprob: -13.750226974487305
    5. ')->' → logprob: -13.875226974487305
    6. ' ):' → logprob: -15.625226974487305
    7. '   ' → logprob: -15.875226974487305
    8. ' ' → logprob: -15.875226974487305
    9. '):

' → logprob: -16.500226974487305
    10. ')`' → logprob: -16.875226974487305

Token 175: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.09282631427049637
    2. '->' → logprob: -2.5928263664245605
    3. ':' → logprob: -4.3428263664245605
    4. ')' → logprob: -7.5928263664245605
    5. ')->' → logprob: -8.217825889587402
    6. '   ' → logprob: -10.217825889587402
    7. ' )->' → logprob: -11.592825889587402
    8. ' ' → logprob: -12.217825889587402
    9. ',' → logprob: -12.717825889587402
    10. ' :' → logprob: -12.717825889587402

Token 176: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.1270461231470108
    2. 'Point' → logprob: -2.1270461082458496
    3. '"' → logprob: -9.877046585083008
    4. '	Point' → logprob: -10.502046585083008
    5. ' "' → logprob: -10.877046585083008
    6. '_Point' → logprob: -11.127046585083008
    7. '<Point' → logprob: -13.502046585083008
    8. '(Point' → logprob: -13.627046585083008
    9. '_point' → logprob: -14.127046585083008
    10. ' ' → logprob: -14.127046585083008

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030510276556015015
    2. '):' → logprob: -6.003050804138184
    3. ':
' → logprob: -8.128050804138184
    4. '<|end|>' → logprob: -9.253050804138184
    5. ' :' → logprob: -9.878050804138184
    6. ',' → logprob: -10.128050804138184
    7. ')' → logprob: -10.503050804138184
    8. '):
' → logprob: -10.503050804138184
    9. '       ' → logprob: -11.128050804138184
    10. '   ' → logprob: -12.253050804138184

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.64708495605737e-05
    2. '   ' → logprob: -10.500066757202148
    3. ' return' → logprob: -11.500066757202148
    4. ')' → logprob: -11.875066757202148
    5. ',' → logprob: -12.125066757202148
    6. '      ' → logprob: -12.250066757202148
    7. ':' → logprob: -12.625066757202148
    8. '        
' → logprob: -13.500066757202148
    9. ' x' → logprob: -13.750066757202148
    10. '     ' → logprob: -13.875066757202148

Token 179: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5513990521430969
    2. 'x' → logprob: -1.3013989925384521
    3. '       ' → logprob: -1.9263989925384521
    4. ' return' → logprob: -5.676399230957031
    5. 'return' → logprob: -6.426399230957031
    6. ' dx' → logprob: -7.801399230957031
    7. 'dx' → logprob: -7.801399230957031
    8. ' ' → logprob: -9.926399230957031
    9. '        ' → logprob: -10.176399230957031
    10. '   ' → logprob: -10.301399230957031

Token 180: ' linear' (ID: 23876)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5241779685020447
    2. ' x' → logprob: -0.8991779685020447
    3. '   ' → logprob: -8.274177551269531
    4. ' Point' → logprob: -8.399177551269531
    5. '       ' → logprob: -8.524177551269531
    6. 'Point' → logprob: -8.899177551269531
    7. ' ' → logprob: -9.524177551269531
    8. 'return' → logprob: -10.524177551269531
    9. ' new' → logprob: -10.899177551269531
    10. ' interpol' → logprob: -10.899177551269531

Token 181: ' interpolation' (ID: 85086)
  Prédit: ' interpolation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interpolation' → logprob: -0.04901696741580963
    2. 'inter' → logprob: -3.0490169525146484
    3. '_inter' → logprob: -8.424016952514648
    4. 'interp' → logprob: -8.924016952514648
    5. ' interp' → logprob: -10.799016952514648
    6. 'Interpolation' → logprob: -11.424016952514648
    7. '_interp' → logprob: -11.424016952514648
    8. ' return' → logprob: -11.924016952514648
    9. ' interpol' → logprob: -11.924016952514648
    10. 'x' → logprob: -12.424016952514648

Token 182: ' along' (ID: 4251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006236517336219549
    2. ' return' → logprob: -5.381236553192139
    3. 'return' → logprob: -7.256236553192139
    4. '        ' → logprob: -8.00623607635498
    5. ':' → logprob: -8.50623607635498
    6. ' =' → logprob: -9.50623607635498
    7. ' x' → logprob: -9.63123607635498
    8. '<|end|>' → logprob: -9.75623607635498
    9. ',' → logprob: -10.13123607635498
    10. '=' → logprob: -10.75623607635498

Token 183: ' segment' (ID: 14806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11629541963338852
    2. 'the' → logprob: -2.241295337677002
    3. 'self' → logprob: -6.241295337677002
    4. ' self' → logprob: -6.616295337677002
    5. 'segment' → logprob: -9.99129581451416
    6. ' ' → logprob: -10.11629581451416
    7. ' segment' → logprob: -10.36629581451416
    8. ' a' → logprob: -10.49129581451416
    9. '   ' → logprob: -11.61629581451416
    10. ' x' → logprob: -12.11629581451416

Token 184: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006892018136568367
    2. ' return' → logprob: -8.000689506530762
    3. 'return' → logprob: -8.750689506530762
    4. '<|end|>' → logprob: -9.625689506530762
    5. ':' → logprob: -9.875689506530762
    6. ',' → logprob: -10.250689506530762
    7. ' x' → logprob: -12.250689506530762
    8. '
' → logprob: -12.500689506530762
    9. ')' → logprob: -12.625689506530762
    10. '        ' → logprob: -12.875689506530762

Token 185: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.308337688446045
    2. 'x' → logprob: -1.433337688446045
    3. ' the' → logprob: -1.933337688446045
    4. ' x' → logprob: -2.433337688446045
    5. ' t' → logprob: -2.683337688446045
    6. 'the' → logprob: -2.808337688446045
    7. '0' → logprob: -3.433337688446045
    8. ' given' → logprob: -3.558337688446045
    9. ' a' → logprob: -3.933337688446045
    10. 'a' → logprob: -4.683337688446045

Token 186: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019893161952495575
    2. ':' → logprob: -4.394893169403076
    3. '=' → logprob: -6.144893169403076
    4. ')' → logprob: -6.769893169403076
    5. ',' → logprob: -7.019893169403076
    6. ' *' → logprob: -7.144893169403076
    7. ':
' → logprob: -7.394893169403076
    8. ' =' → logprob: -7.769893169403076
    9. '   ' → logprob: -7.894893169403076
    10. '        ' → logprob: -9.269892692565918

Token 187: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023302311077713966
    2. ' [' → logprob: -3.7733023166656494
    3. '0' → logprob: -9.89830207824707
    4. ' ' → logprob: -12.27330207824707
    5. '   ' → logprob: -13.52330207824707
    6. ')' → logprob: -15.64830207824707
    7. 'range' → logprob: -15.89830207824707
    8. ' range' → logprob: -16.14830207824707
    9. '  ' → logprob: -16.77330207824707
    10. '{' → logprob: -17.02330207824707

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002190233441069722
    2. ' ' → logprob: -6.127190113067627
    3. '   ' → logprob: -12.627190589904785
    4. ')' → logprob: -14.377190589904785
    5. ',' → logprob: -14.377190589904785
    6. '  ' → logprob: -15.252190589904785
    7. '1' → logprob: -15.627190589904785
    8. ']' → logprob: -16.43968963623047
    9. '       ' → logprob: -16.68968963623047
    10. '
' → logprob: -16.81468963623047

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001041978714056313
    2. ' ,' → logprob: -6.876041889190674
    3. ' ' → logprob: -12.001042366027832
    4. ']' → logprob: -13.251042366027832
    5. '0' → logprob: -14.751042366027832
    6. '1' → logprob: -15.751042366027832
    7. ',
' → logprob: -15.751042366027832
    8. ')' → logprob: -15.751042366027832
    9. '.' → logprob: -16.001041412353516
    10. '   ' → logprob: -16.251041412353516

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038058020174503326
    2. ' ' → logprob: -3.288058042526245
    3. '   ' → logprob: -11.913058280944824
    4. ',' → logprob: -12.413058280944824
    5. '
' → logprob: -13.538058280944824
    6. ']' → logprob: -13.788058280944824
    7. '  ' → logprob: -13.975558280944824
    8. '

' → logprob: -14.788058280944824
    9. ' ' → logprob: -14.850558280944824
    10. ')' → logprob: -14.913058280944824

Token 191: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019797448068857193
    2. ']:' → logprob: -4.144797325134277
    3. ']
' → logprob: -6.519797325134277
    4. ')' → logprob: -7.269797325134277
    5. ']:
' → logprob: -7.394797325134277
    6. ' ]' → logprob: -7.769797325134277
    7. '       ' → logprob: -8.144797325134277
    8. '):' → logprob: -9.269797325134277
    9. '   ' → logprob: -9.644797325134277
    10. '])' → logprob: -10.519797325134277

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.539801688631997e-05
    2. ' return' → logprob: -10.000065803527832
    3. 'return' → logprob: -11.125065803527832
    4. ',' → logprob: -13.625065803527832
    5. ':' → logprob: -13.875065803527832
    6. ' x' → logprob: -13.875065803527832
    7. '      ' → logprob: -14.500065803527832
    8. '<|end|>' → logprob: -14.625065803527832
    9. '   ' → logprob: -15.375065803527832
    10. 'x' → logprob: -15.625065803527832

Token 193: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.725500226020813
    2. 'return' → logprob: -1.600500226020813
    3. ' x' → logprob: -1.975500226020813
    4. ' return' → logprob: -2.2255001068115234
    5. '       ' → logprob: -2.7255001068115234
    6. 'dx' → logprob: -6.725500106811523
    7. ' dx' → logprob: -8.225500106811523
    8. '   ' → logprob: -8.350500106811523
    9. ' ' → logprob: -9.100500106811523
    10. 'inter' → logprob: -11.725500106811523

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023264825344086
    2. ' =' → logprob: -1.910232663154602
    3. '=self' → logprob: -12.285232543945312
    4. '       ' → logprob: -13.910232543945312
    5. ' +' → logprob: -13.910232543945312
    6. '   ' → logprob: -14.285232543945312
    7. 'self' → logprob: -14.660232543945312
    8. '+' → logprob: -15.285232543945312
    9. ':' → logprob: -15.910232543945312
    10. 'return' → logprob: -15.910232543945312

Token 195: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931505799293518
    2. 'self' → logprob: -0.6931505799293518
    3. ' ' → logprob: -13.443150520324707
    4. '(self' → logprob: -14.318150520324707
    5. '       ' → logprob: -14.693150520324707
    6. '   ' → logprob: -14.818150520324707
    7. '	self' → logprob: -15.318150520324707
    8. ' (' → logprob: -15.818150520324707
    9. '  ' → logprob: -16.943151473999023
    10. '(' → logprob: -17.068151473999023

Token 196: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0013032146962359548
    2. 'start' → logprob: -6.751303195953369
    3. '.' → logprob: -9.001303672790527
    4. ' start' → logprob: -12.126303672790527
    5. ' .' → logprob: -12.501303672790527
    6. '	start' → logprob: -15.501303672790527
    7. '_start' → logprob: -16.25130271911621
    8. '.s' → logprob: -16.25130271911621
    9. '[start' → logprob: -16.37630271911621
    10. ':start' → logprob: -17.12630271911621

Token 197: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00043519894825294614
    2. '.' → logprob: -7.7504353523254395
    3. 'x' → logprob: -12.500434875488281
    4. ' .' → logprob: -14.500434875488281
    5. ' +' → logprob: -15.375434875488281
    6. '+' → logprob: -16.87543487548828
    7. '+.' → logprob: -17.50043487548828
    8. ' ' → logprob: -18.37543487548828
    9. ' x' → logprob: -18.87543487548828
    10. '[' → logprob: -19.00043487548828

Token 198: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602255403995514
    2. '+' → logprob: -1.910225510597229
    3. '+(' → logprob: -14.660225868225098
    4. '+t' → logprob: -14.910225868225098
    5. ' ' → logprob: -15.660225868225098
    6. ' +(' → logprob: -15.785225868225098
    7. ' plus' → logprob: -15.785225868225098
    8. ' ' → logprob: -16.66022491455078
    9. ' *' → logprob: -17.78522491455078
    10. ' +
' → logprob: -18.03522491455078

Token 199: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5865556597709656
    2. 't' → logprob: -0.8365556597709656
    3. ' (' → logprob: -4.586555480957031
    4. '(t' → logprob: -8.211555480957031
    5. '(' → logprob: -9.336555480957031
    6. ' ' → logprob: -12.461555480957031
    7. '(S' → logprob: -13.086555480957031
    8. '(B' → logprob: -13.961555480957031
    9. '   ' → logprob: -14.586555480957031
    10. '	t' → logprob: -14.649055480957031

Token 200: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01419076882302761
    2. '*' → logprob: -4.264190673828125
    3. '*(' → logprob: -10.514190673828125
    4. ' ' → logprob: -17.014190673828125
    5. ' ' → logprob: -17.514190673828125
    6. '*self' → logprob: -19.014190673828125
    7. '   ' → logprob: -19.014190673828125
    8. '*object' → logprob: -19.264190673828125
    9. ' *(' → logprob: -20.139190673828125
    10. '**' → logprob: -20.264190673828125

Token 201: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25269815325737
    2. '(self' → logprob: -1.5026981830596924
    3. '(end' → logprob: -7.252697944641113
    4. '(' → logprob: -10.002697944641113
    5. '(abs' → logprob: -12.502697944641113
    6. ' ' → logprob: -13.127697944641113
    7. '(e' → logprob: -13.502697944641113
    8. '(this' → logprob: -14.127697944641113
    9. '(endpoint' → logprob: -14.127697944641113
    10. '   ' → logprob: -14.502697944641113

Token 202: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062255483120679855
    2. ' self' → logprob: -2.812255382537842
    3. '(self' → logprob: -8.187255859375
    4. ' (' → logprob: -11.812255859375
    5. '[self' → logprob: -14.437255859375
    6. '	self' → logprob: -14.437255859375
    7. ' ' → logprob: -15.437255859375
    8. '       ' → logprob: -15.687255859375
    9. ')' → logprob: -15.937255859375
    10. '   ' → logprob: -16.062255859375

Token 203: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -5.657694418914616e-05
    2. '.' → logprob: -9.875056266784668
    3. 'end' → logprob: -12.875056266784668
    4. ' .' → logprob: -13.125056266784668
    5. '@end' → logprob: -16.500057220458984
    6. ').' → logprob: -16.625057220458984
    7. ':end' → logprob: -16.875057220458984
    8. '=end' → logprob: -16.875057220458984
    9. '.ends' → logprob: -17.000057220458984
    10. '_end' → logprob: -17.250057220458984

Token 204: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.792751032160595e-05
    2. '.' → logprob: -9.37508773803711
    3. ' .' → logprob: -12.75008773803711
    4. ').' → logprob: -15.75008773803711
    5. 'x' → logprob: -16.87508773803711
    6. ' ' → logprob: -18.12508773803711
    7. ' -' → logprob: -18.25008773803711
    8. '   ' → logprob: -19.75008773803711
    9. '._' → logprob: -19.87508773803711
    10. '<|end|>' → logprob: -19.87508773803711

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006132603157311678
    2. '-' → logprob: -5.13113260269165
    3. '.x' → logprob: -8.756133079528809
    4. ' ' → logprob: -10.131133079528809
    5. '.' → logprob: -12.631133079528809
    6. '   ' → logprob: -13.756133079528809
    7. ' -
' → logprob: -14.006133079528809
    8. '-x' → logprob: -15.006133079528809
    9. '  ' → logprob: -15.006133079528809
    10. ' .' → logprob: -15.131133079528809

Token 206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519386410713196
    2. ' self' → logprob: -1.5019385814666748
    3. ')' → logprob: -12.626938819885254
    4. '<|end|>' → logprob: -13.751938819885254
    5. '	self' → logprob: -13.876938819885254
    6. ' ' → logprob: -13.876938819885254
    7. '(self' → logprob: -14.126938819885254
    8. '[self' → logprob: -14.501938819885254
    9. ' ' → logprob: -15.189438819885254
    10. '_self' → logprob: -15.376938819885254

Token 207: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0034948268439620733
    2. 'start' → logprob: -5.753494739532471
    3. '.' → logprob: -8.253495216369629
    4. '.x' → logprob: -10.003495216369629
    5. ' start' → logprob: -11.628495216369629
    6. ' .' → logprob: -13.628495216369629
    7. '.s' → logprob: -14.753495216369629
    8. ').' → logprob: -15.503495216369629
    9. '[start' → logprob: -15.503495216369629
    10. '_start' → logprob: -16.003494262695312

Token 208: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00014585316239390522
    2. 'x' → logprob: -9.50014591217041
    3. '.' → logprob: -9.62514591217041
    4. ')' → logprob: -12.62514591217041
    5. ' .' → logprob: -14.25014591217041
    6. ').' → logprob: -14.50014591217041
    7. ')x' → logprob: -15.87514591217041
    8. ' x' → logprob: -16.125144958496094
    9. '.)' → logprob: -17.125144958496094
    10. '	x' → logprob: -17.250144958496094

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038717821007594466
    2. ')
' → logprob: -7.875387191772461
    3. ' )' → logprob: -12.625387191772461
    4. ')

' → logprob: -12.750387191772461
    5. ')x' → logprob: -15.125387191772461
    6. '       ' → logprob: -15.500387191772461
    7. ')
' → logprob: -15.750387191772461
    8. '),' → logprob: -16.37538719177246
    9. '<|end|>' → logprob: -17.00038719177246
    10. ')y' → logprob: -17.12538719177246

Token 210: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3566199839115143
    2. '       ' → logprob: -1.356619954109192
    3. '
' → logprob: -3.4816200733184814
    4. ',' → logprob: -5.856619834899902
    5. ',y' → logprob: -6.106619834899902
    6. '<|end|>' → logprob: -6.231619834899902
    7. 'y' → logprob: -6.356619834899902
    8. ' ' → logprob: -6.856619834899902
    9. ' 
' → logprob: -7.481619834899902
    10. '	y' → logprob: -8.481619834899902

Token 211: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.018150178715586662
    2. 'y' (adapté à ' y') → logprob: -4.018150329589844
    3. '	y' → logprob: -15.268150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '       ' → logprob: -17.393150329589844
    6. ' ' → logprob: -18.643150329589844
    7. '   ' → logprob: -20.018150329589844
    8. ',y' → logprob: -20.393150329589844
    9. '    ' → logprob: -20.893150329589844
    10. '        ' → logprob: -21.018150329589844

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619712732732296
    2. '=' → logprob: -2.8119711875915527
    3. ' ' → logprob: -12.561971664428711
    4. '=self' → logprob: -17.06197166442871
    5. '<|end|>' → logprob: -17.18697166442871
    6. ')' → logprob: -17.43697166442871
    7. '   ' → logprob: -18.56197166442871
    8. ' ' → logprob: -18.68697166442871
    9. ' =
' → logprob: -18.93697166442871
    10. ' =)' → logprob: -19.06197166442871

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693022191524506
    2. ' self' → logprob: -2.1269302368164062
    3. '(self' → logprob: -13.626930236816406
    4. '	self' → logprob: -15.126930236816406
    5. '[self' → logprob: -15.376930236816406
    6. ' ' → logprob: -16.126930236816406
    7. '=self' → logprob: -16.626930236816406
    8. '   ' → logprob: -16.626930236816406
    9. '       ' → logprob: -17.126930236816406
    10. '<|end|>' → logprob: -17.626930236816406

Token 214: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.005843823775649071
    2. '.y' → logprob: -5.755843639373779
    3. '.' → logprob: -6.005843639373779
    4. 'start' → logprob: -8.630844116210938
    5. '.s' → logprob: -11.505844116210938
    6. ' .' → logprob: -11.880844116210938
    7. '.end' → logprob: -14.255844116210938
    8. ' start' → logprob: -14.505844116210938
    9. 'y' → logprob: -15.005844116210938
    10. '[start' → logprob: -15.005844116210938

Token 215: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.14816004037857056
    2. '.' → logprob: -2.023159980773926
    3. ' +' → logprob: -6.148159980773926
    4. '+' → logprob: -6.398159980773926
    5. '.x' → logprob: -6.898159980773926
    6. ' .' → logprob: -7.398159980773926
    7. '[' → logprob: -10.773159980773926
    8. ' ' → logprob: -12.023159980773926
    9. ')' → logprob: -12.273159980773926
    10. 'y' → logprob: -12.898159980773926

Token 216: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196846812963486
    2. '+' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.936968803405762
    4. ' plus' → logprob: -15.311968803405762
    5. ' +
' → logprob: -15.811968803405762
    6. ' ' → logprob: -16.936967849731445
    7. ')' → logprob: -17.936967849731445
    8. '+
' → logprob: -18.436967849731445
    9. '<|end|>' → logprob: -18.436967849731445
    10. '+y' → logprob: -18.561967849731445

Token 217: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.023245826363563538
    2. 't' → logprob: -3.7732458114624023
    3. '	t' → logprob: -15.648245811462402
    4. '(t' → logprob: -15.773245811462402
    5. '`t' → logprob: -17.39824676513672
    6. ' т' → logprob: -17.64824676513672
    7. ' ' → logprob: -17.77324676513672
    8. ' ' → logprob: -17.89824676513672
    9. ')t' → logprob: -18.64824676513672
    10. '[t' → logprob: -19.27324676513672

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005535095697268844
    2. '*' → logprob: -7.500553607940674
    3. ' ' → logprob: -14.875553131103516
    4. '*(' → logprob: -15.625553131103516
    5. ' ' → logprob: -18.000553131103516
    6. ' *(' → logprob: -18.250553131103516
    7. '<|end|>' → logprob: -18.875553131103516
    8. ' **' → logprob: -19.750553131103516
    9. ')' → logprob: -20.250553131103516
    10. '   ' → logprob: -20.500553131103516

Token 219: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00013274075172375888
    2. '(' → logprob: -9.37513256072998
    3. '(self' → logprob: -10.37513256072998
    4. ' ' → logprob: -11.25013256072998
    5. '(end' → logprob: -14.37513256072998
    6. ')' → logprob: -14.50013256072998
    7. '(s' → logprob: -14.62513256072998
    8. ' ((' → logprob: -15.37513256072998
    9. ' ' → logprob: -15.37513256072998
    10. '"' → logprob: -15.50013256072998

Token 220: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21186839044094086
    2. 'self' → logprob: -2.3368682861328125
    3. ' (' → logprob: -2.7118682861328125
    4. ' self' → logprob: -3.5868682861328125
    5. ')' → logprob: -8.961868286132812
    6. ' ' → logprob: -10.711868286132812
    7. '(' → logprob: -11.336868286132812
    8. '   ' → logprob: -11.586868286132812
    9. '*self' → logprob: -12.086868286132812
    10. '	self' → logprob: -12.336868286132812

Token 221: '.end' (ID: 10289)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.21799388527870178
    2. '.' → logprob: -2.592993974685669
    3. '.end' → logprob: -3.092993974685669
    4. ')' → logprob: -3.842993974685669
    5. '(end' → logprob: -4.21799373626709
    6. ' (' → logprob: -4.21799373626709
    7. '(y' → logprob: -5.09299373626709
    8. '*(' → logprob: -5.21799373626709
    9. ' *' → logprob: -5.71799373626709
    10. '(' → logprob: -6.09299373626709

Token 222: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.01840943843126297
    2. '-' → logprob: -4.643409252166748
    3. '.' → logprob: -5.768409252166748
    4. ')' → logprob: -5.768409252166748
    5. ' -' → logprob: -7.018409252166748
    6. 'y' → logprob: -7.643409252166748
    7. '*' → logprob: -8.018409729003906
    8. '_y' → logprob: -8.893409729003906
    9. ' ' → logprob: -9.018409729003906
    10. '_' → logprob: -9.518409729003906

Token 223: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.013561930507421494
    2. ')' → logprob: -4.763561725616455
    3. '-' → logprob: -5.388561725616455
    4. ' )' → logprob: -8.138562202453613
    5. '<|end|>' → logprob: -10.263562202453613
    6. ' ' → logprob: -10.513562202453613
    7. ' -
' → logprob: -13.013562202453613
    8. '-)' → logprob: -13.013562202453613
    9. '       ' → logprob: -13.388562202453613
    10. '<|end|>' → logprob: -13.513562202453613

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5092108249664307
    2. ' self' → logprob: -1.5092108249664307
    3. '(self' → logprob: -2.2592108249664307
    4. ' (' → logprob: -2.6342108249664307
    5. '(' → logprob: -6.759210586547852
    6. ')' → logprob: -8.009210586547852
    7. ' ' → logprob: -9.384210586547852
    8. ' y' → logprob: -10.259210586547852
    9. '-self' → logprob: -10.384210586547852
    10. '1' → logprob: -10.884210586547852

Token 225: '.start' (ID: 10181)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5455901622772217
    2. 'y' → logprob: -1.5455901622772217
    3. ' -' → logprob: -2.2955901622772217
    4. '.y' → logprob: -3.0455901622772217
    5. '-y' → logprob: -3.2955901622772217
    6. ')' → logprob: -4.045590400695801
    7. ' y' → logprob: -5.670590400695801
    8. '.' → logprob: -7.295590400695801
    9. ' ' → logprob: -9.4205904006958
    10. '-start' → logprob: -9.7955904006958

Token 226: '.y' (ID: 4486)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22484594583511353
    2. '.y' → logprob: -1.7248458862304688
    3. ' -' → logprob: -4.474845886230469
    4. '-' → logprob: -4.974845886230469
    5. ')
' → logprob: -6.724845886230469
    6. ' ' → logprob: -7.474845886230469
    7. '.' → logprob: -7.599845886230469
    8. '       ' → logprob: -7.724845886230469
    9. '.x' → logprob: -7.974845886230469
    10. '   ' → logprob: -7.974845886230469

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008604847243987024
    2. ')
' → logprob: -7.125860691070557
    3. ' )' → logprob: -10.125860214233398
    4. '       ' → logprob: -11.125860214233398
    5. ')return' → logprob: -14.875860214233398
    6. ')
' → logprob: -14.875860214233398
    7. ' )
' → logprob: -15.250860214233398
    8. ')

' → logprob: -15.750860214233398
    9. '   ' → logprob: -15.875860214233398
    10. ')`' → logprob: -17.3758602142334

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002079240046441555
    2. ' return' → logprob: -6.627079010009766
    3. 'return' → logprob: -7.502079010009766
    4. '
' → logprob: -8.627079010009766
    5. '	' → logprob: -12.377079010009766
    6. '<|end|>' → logprob: -12.377079010009766
    7. '	return' → logprob: -12.627079010009766
    8. ')' → logprob: -12.752079010009766
    9. '        
' → logprob: -12.877079010009766
    10. '   ' → logprob: -13.627079010009766

Token 229: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1056073009967804
    2. 'return' (adapté à ' return') → logprob: -2.730607271194458
    3. ' return' → logprob: -3.355607271194458
    4. '
' → logprob: -9.105607032775879
    5. '	return' → logprob: -10.605607032775879
    6. '   ' → logprob: -11.980607032775879
    7. ')' → logprob: -12.730607032775879
    8. '	' → logprob: -12.980607032775879
    9. ')return' → logprob: -13.605607032775879
    10. 'eturn' → logprob: -14.105607032775879

Token 230: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.029751179739832878
    2. 'Point' → logprob: -3.5297510623931885
    3. '	Point' → logprob: -14.90475082397461
    4. '(Point' → logprob: -15.90475082397461
    5. '_Point' → logprob: -16.40475082397461
    6. ' ' → logprob: -16.40475082397461
    7. '.Point' → logprob: -18.02975082397461
    8. '<Point' → logprob: -18.90475082397461
    9. ' ' → logprob: -19.15475082397461
    10. '_point' → logprob: -19.90475082397461

Token 231: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31335094571113586
    2. '(' → logprob: -1.3133509159088135
    3. '(
' → logprob: -9.938350677490234
    4. 'x' → logprob: -10.313350677490234
    5. ' (' → logprob: -11.813350677490234
    6. '(

' → logprob: -15.313350677490234
    7. '```' → logprob: -17.938350677490234
    8. '(
' → logprob: -18.063350677490234
    9. '((' → logprob: -18.313350677490234
    10. 'f' → logprob: -18.813350677490234

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001337624154984951
    2. ',y' → logprob: -6.87633752822876
    3. ' ,' → logprob: -8.126338005065918
    4. ',
' → logprob: -12.251338005065918
    5. 'y' → logprob: -12.626338005065918
    6. ')' → logprob: -14.626338005065918
    7. ' ' → logprob: -15.501338005065918
    8. ',x' → logprob: -15.876338005065918
    9. ',

' → logprob: -16.7513370513916
    10. ' y' → logprob: -17.0013370513916

Token 233: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020667314529419
    2. ' y' → logprob: -2.3502066135406494
    3. '	y' → logprob: -17.97520637512207
    4. ' ' → logprob: -18.47520637512207
    5. ')y' → logprob: -18.85020637512207
    6. ' ' → logprob: -19.60020637512207
    7. '
' → logprob: -20.60020637512207
    8. ')' → logprob: -20.72520637512207
    9. '<|end|>' → logprob: -20.97520637512207
    10. '   ' → logprob: -21.10020637512207

Token 234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.000021934509277
    4. '<|end|>' → logprob: -16.125022888183594
    5. ')

' → logprob: -16.375022888183594
    6. '   ' → logprob: -17.750022888183594
    7. ')return' → logprob: -17.750022888183594
    8. '),' → logprob: -18.875022888183594
    9. '}' → logprob: -19.000022888183594
    10. '       ' → logprob: -19.250022888183594

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5653160214424133
    2. '<|end|>' → logprob: -1.4403159618377686
    3. '   ' → logprob: -1.6903159618377686
    4. '

' → logprob: -5.690316200256348
    5. ' ' → logprob: -6.315316200256348
    6. '    
' → logprob: -6.690316200256348
    7. '<|end|>' → logprob: -7.065316200256348
    8. 'class' → logprob: -7.065316200256348
    9. ' 
' → logprob: -7.315316200256348
    10. '```' → logprob: -7.565316200256348

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014170228969305754
    2. '   ' → logprob: -6.87641716003418
    3. ' def' → logprob: -8.12641716003418
    4. '    
' → logprob: -10.37641716003418
    5. '
' → logprob: -10.50141716003418
    6. ' ' → logprob: -11.62641716003418
    7. '```' → logprob: -12.00141716003418
    8. '<|end|>' → logprob: -12.62641716003418
    9. '  ' → logprob: -13.25141716003418
    10. '	def' → logprob: -13.50141716003418

Token 237: ' __' (ID: 2516)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24629366397857666
    2. ' slope' → logprob: -2.121293544769287
    3. 'e' → logprob: -3.746293544769287
    4. 'angle' → logprob: -3.871293544769287
    5. '__' → logprob: -4.121293544769287
    6. 'gradient' → logprob: -4.246293544769287
    7. ' __' → logprob: -4.746293544769287
    8. ' elevation' → logprob: -6.121293544769287
    9. 'is' → logprob: -6.246293544769287
    10. ' angle' → logprob: -6.371293544769287

Token 238: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -5.5577775128767826e-06
    2. 'str' → logprob: -12.250005722045898
    3. 'eq' → logprob: -14.625005722045898
    4. ' repr' → logprob: -15.500005722045898
    5. '_repr' → logprob: -17.2500057220459
    6. 'rep' → logprob: -17.3750057220459
    7. 'len' → logprob: -19.7500057220459
    8. 'lt' → logprob: -21.0000057220459
    9. 'hash' → logprob: -21.0000057220459
    10. ' ' → logprob: -21.1250057220459

Token 239: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00035274302354082465
    2. '__' → logprob: -8.50035285949707
    3. '(self' → logprob: -9.25035285949707
    4. '__(
' → logprob: -9.87535285949707
    5. '__("' → logprob: -14.37535285949707
    6. '(' → logprob: -14.75035285949707
    7. '__('' → logprob: -14.87535285949707
    8. '_(' → logprob: -15.12535285949707
    9. '__((' → logprob: -16.37535285949707
    10. 'self' → logprob: -17.12535285949707

Token 240: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020103710994590074
    2. ')' → logprob: -9.000201225280762
    3. ' self' → logprob: -9.500201225280762
    4. '")' → logprob: -13.625201225280762
    5. 'f' → logprob: -14.000201225280762
    6. '
' → logprob: -15.500201225280762
    7. ')
' → logprob: -15.875201225280762
    8. '	self' → logprob: -16.000200271606445
    9. ' ' → logprob: -16.375200271606445
    10. '):
' → logprob: -17.000200271606445

Token 241: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.550669252872467
    2. '):' → logprob: -0.925669252872467
    3. '):
' → logprob: -4.550669193267822
    4. ')' → logprob: -5.425669193267822
    5. '__)' → logprob: -5.425669193267822
    6. ')__' → logprob: -5.425669193267822
    7. '__:' → logprob: -6.425669193267822
    8. ').__' → logprob: -7.050669193267822
    9. '__).' → logprob: -8.42566967010498
    10. '__)
' → logprob: -8.92566967010498

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00839258637279272
    2. ' f' → logprob: -5.758392810821533
    3. 'f' → logprob: -5.883392810821533
    4. 'return' → logprob: -6.258392810821533
    5. ' return' → logprob: -7.633392810821533
    6. '   ' → logprob: -11.508392333984375
    7. 'self' → logprob: -12.883392333984375
    8. '     ' → logprob: -13.258392333984375
    9. '      ' → logprob: -13.258392333984375
    10. '           ' → logprob: -14.258392333984375

Token 243: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030441977083683014
    2. '       ' → logprob: -3.530441999435425
    3. ' return' → logprob: -7.280441761016846
    4. 'f' → logprob: -13.405442237854004
    5. '   ' → logprob: -14.655442237854004
    6. '	return' → logprob: -15.030442237854004
    7. '
' → logprob: -17.405441284179688
    8. '     ' → logprob: -17.905441284179688
    9. '           ' → logprob: -18.155441284179688
    10. '{return' → logprob: -18.905441284179688

Token 244: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0040785204619169235
    2. 'f' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.379077911376953
    4. '	f' → logprob: -18.879077911376953
    5. ' ' → logprob: -19.504077911376953
    6. '"' → logprob: -20.629077911376953
    7. '   ' → logprob: -20.754077911376953
    8. '(f' → logprob: -20.879077911376953
    9. '       ' → logprob: -22.379077911376953
    10. '    ' → logprob: -22.379077911376953

Token 245: '"' (ID: 1)
  Prédit: '(Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Route' → logprob: -0.07862447202205658
    2. 'Route' → logprob: -2.7036244869232178
    3. '(f' → logprob: -5.328624248504639
    4. '"' → logprob: -6.453624248504639
    5. '<Route' → logprob: -6.953624248504639
    6. 'f' → logprob: -7.578624248504639
    7. ' Route' → logprob: -8.453624725341797
    8. '	Route' → logprob: -8.953624725341797
    9. '.Route' → logprob: -9.078624725341797
    10. '"(' → logprob: -9.453624725341797

Token 246: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -2.0339031834737398e-05
    2. '<Route' → logprob: -12.125020027160645
    3. '"' → logprob: -12.250020027160645
    4. ' Route' → logprob: -12.875020027160645
    5. 'Segment' → logprob: -13.000020027160645
    6. ''' → logprob: -13.125020027160645
    7. 'f' → logprob: -13.750020027160645
    8. '	Route' → logprob: -14.750020027160645
    9. '{' → logprob: -15.000020027160645
    10. 'Range' → logprob: -15.375020027160645

Token 247: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'Seg' → logprob: -17.25
    3. ' Segment' → logprob: -17.75
    4. 'Segments' → logprob: -19.875
    5. 'segment' → logprob: -20.5
    6. '_segment' → logprob: -21.125
    7. 'Section' → logprob: -21.625
    8. 'S' → logprob: -21.625
    9. 'Segue' → logprob: -21.875
    10. 'egment' → logprob: -22.125

Token 248: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00012570773833431304
    2. '(' → logprob: -9.000125885009766
    3. '(
' → logprob: -14.000125885009766
    4. 'start' → logprob: -14.375125885009766
    5. '(x' → logprob: -15.000125885009766
    6. ' (' → logprob: -15.500125885009766
    7. '(self' → logprob: -16.000125885009766
    8. '(s' → logprob: -16.125125885009766
    9. '(Start' → logprob: -16.500125885009766
    10. '[start' → logprob: -17.875125885009766

Token 249: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.005122988484799862
    2. '=' → logprob: -5.505123138427734
    3. '=self' → logprob: -6.880123138427734
    4. 'self' → logprob: -11.630123138427734
    5. '=
' → logprob: -12.630123138427734
    6. '=

' → logprob: -13.505123138427734
    7. '{' → logprob: -13.630123138427734
    8. '=}' → logprob: -14.880123138427734
    9. '={
' → logprob: -15.005123138427734
    10. '=<' → logprob: -15.630123138427734

Token 250: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.423219696851447e-05
    2. ' self' → logprob: -9.500083923339844
    3. 'repr' → logprob: -11.625083923339844
    4. '{' → logprob: -14.875083923339844
    5. ' repr' → logprob: -18.625083923339844
    6. '(self' → logprob: -19.500083923339844
    7. '
' → logprob: -19.500083923339844
    8. 's' → logprob: -20.375083923339844
    9. '	self' → logprob: -20.375083923339844
    10. ' ' → logprob: -20.625083923339844

Token 251: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.875000953674316
    3. 'start' → logprob: -15.625000953674316
    4. ',' → logprob: -16.000001907348633
    5. ' .' → logprob: -16.750001907348633
    6. '

' → logprob: -17.375001907348633
    7. '.s' → logprob: -17.625001907348633
    8. '.point' → logprob: -18.125001907348633
    9. '.end' → logprob: -18.250001907348633
    10. '.Start' → logprob: -18.625001907348633

Token 252: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8921695047756657e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',
' → logprob: -14.500028610229492
    4. '},' → logprob: -15.000028610229492
    5. '),' → logprob: -15.125028610229492
    6. ',

' → logprob: -16.625028610229492
    7. '‌,' → logprob: -17.250028610229492
    8. ')' → logprob: -17.875028610229492
    9. '",' → logprob: -18.000028610229492
    10. ',end' → logprob: -18.250028610229492

Token 253: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.0004884536610916257
    2. 'end' → logprob: -7.62548828125
    3. ',end' → logprob: -15.00048828125
    4. ',' → logprob: -16.75048828125
    5. '	end' → logprob: -17.62548828125
    6. '=end' → logprob: -18.25048828125
    7. 'endo' → logprob: -19.00048828125
    8. '(end' → logprob: -19.00048828125
    9. ''end' → logprob: -19.37548828125
    10. ' ' → logprob: -19.37548828125

Token 254: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0005730479606427252
    2. '=' → logprob: -7.50057315826416
    3. '=self' → logprob: -11.62557315826416
    4. '{' → logprob: -12.50057315826416
    5. '={
' → logprob: -12.62557315826416
    6. '=}' → logprob: -13.37557315826416
    7. '={'' → logprob: -14.25057315826416
    8. '={}' → logprob: -15.12557315826416
    9. '=${' → logprob: -15.37557315826416
    10. '<|end|>' → logprob: -15.37557315826416

Token 255: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023447655141353607
    2. '{' → logprob: -3.7734477519989014
    3. ' self' → logprob: -8.52344799041748
    4. ' {' → logprob: -14.14844799041748
    5. '{return' → logprob: -14.39844799041748
    6. '(self' → logprob: -14.64844799041748
    7. '$self' → logprob: -14.64844799041748
    8. '=self' → logprob: -15.02344799041748
    9. '	self' → logprob: -15.27344799041748
    10. '{
' → logprob: -15.77344799041748

Token 256: '.end' (ID: 10289)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.44504305720329285
    2. ')' → logprob: -2.1950430870056152
    3. '}' → logprob: -2.4450430870056152
    4. '.end' → logprob: -2.6950430870056152
    5. ')}' → logprob: -3.3200430870056152
    6. '.' → logprob: -3.6950430870056152
    7. '}")' → logprob: -3.6950430870056152
    8. '.start' → logprob: -5.820043087005615
    9. '.point' → logprob: -6.820043087005615
    10. '{' → logprob: -7.320043087005615

Token 257: '},' (ID: 4180)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.0007338665891438723
    2. ')' → logprob: -7.250733852386475
    3. ')")' → logprob: -11.375734329223633
    4. '}"' → logprob: -12.625734329223633
    5. ')}' → logprob: -13.000734329223633
    6. ')">' → logprob: -13.375734329223633
    7. '})' → logprob: -13.500734329223633
    8. ')`' → logprob: -13.625734329223633
    9. ')”' → logprob: -13.750734329223633
    10. ' )' → logprob: -14.875734329223633

Token 258: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.00861456897109747
    2. 'length' → logprob: -4.758614540100098
    3. ' lenght' → logprob: -17.508615493774414
    4. ' len' → logprob: -18.258615493774414
    5. 'leng' → logprob: -19.258615493774414
    6. 'len' → logprob: -19.508615493774414
    7. ' lengths' → logprob: -19.633615493774414
    8. '"' → logprob: -19.758615493774414
    9. ' l' → logprob: -19.883615493774414
    10. ' ' → logprob: -20.133615493774414

Token 259: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.01118563674390316
    2. '=' → logprob: -4.511185646057129
    3. '=self' → logprob: -9.011185646057129
    4. '=}' → logprob: -12.011185646057129
    5. '{' → logprob: -12.886185646057129
    6. ']={' → logprob: -13.511185646057129
    7. '=
' → logprob: -13.886185646057129
    8. '}' → logprob: -14.011185646057129
    9. 'self' → logprob: -14.011185646057129
    10. '={
' → logprob: -14.136185646057129

Token 260: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007183883571997285
    2. '{' → logprob: -7.250718593597412
    3. ' self' → logprob: -11.875718116760254
    4. 'round' → logprob: -13.500718116760254
    5. '{
' → logprob: -17.25071907043457
    6. '"{' → logprob: -18.50071907043457
    7. '
' → logprob: -18.50071907043457
    8. '	self' → logprob: -19.00071907043457
    9. '(self' → logprob: -19.25071907043457
    10. 'sel' → logprob: -19.25071907043457

Token 261: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.012554273009300232
    2. '.' → logprob: -4.387554168701172
    3. ' .' → logprob: -10.887554168701172
    4. 'length' → logprob: -11.387554168701172
    5. ' length' → logprob: -13.012554168701172
    6. ':.' → logprob: -13.012554168701172
    7. '}' → logprob: -13.262554168701172
    8. ' ' → logprob: -13.387554168701172
    9. ')' → logprob: -13.637554168701172
    10. ':length' → logprob: -13.762554168701172

Token 262: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6939268708229065
    2. ')"' → logprob: -0.6939268708229065
    3. ')")' → logprob: -7.318926811218262
    4. ')">' → logprob: -9.443926811218262
    5. ' )' → logprob: -11.318926811218262
    6. ')`' → logprob: -11.443926811218262
    7. '")' → logprob: -12.068926811218262
    8. ')}' → logprob: -12.443926811218262
    9. ')”' → logprob: -13.818926811218262
    10. '})' → logprob: -14.193926811218262

Token 263: '"


' (ID: 36470)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23952117562294006
    2. '<|end|>' → logprob: -1.6145211458206177
    3. '

' → logprob: -4.489521026611328
    4. '


' → logprob: -6.739521026611328
    5. '<|end|>' → logprob: -7.489521026611328
    6. '\n' → logprob: -7.989521026611328
    7. '```' → logprob: -8.114521026611328
    8. ')' → logprob: -8.989521026611328
    9. 'class' → logprob: -8.989521026611328
    10. '
' → logprob: -10.114521026611328

Token 264: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003411201061680913
    2. '
' → logprob: -5.753411293029785
    3. '

' → logprob: -8.378411293029785
    4. ' class' → logprob: -13.628411293029785
    5. '<class' → logprob: -14.003411293029785
    6. '
' → logprob: -14.378411293029785
    7. '


' → logprob: -15.128411293029785
    8. '"class' → logprob: -15.378411293029785
    9. 'from' → logprob: -15.753411293029785
    10. '```' → logprob: -16.12841033935547

Token 265: ' Route' (ID: 17215)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.1591295450925827
    2. ' Route' → logprob: -2.0341296195983887
    3. 'Elevation' → logprob: -4.534129619598389
    4. ' Elev' → logprob: -6.659129619598389
    5. 'Profile' → logprob: -6.909129619598389
    6. 'Altitude' → logprob: -8.03412914276123
    7. 'Segment' → logprob: -8.28412914276123
    8. 'Gradient' → logprob: -8.40912914276123
    9. 'Elev' → logprob: -8.59662914276123
    10. ' Profile' → logprob: -8.59662914276123

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017364670056849718
    2. ':
' → logprob: -6.376736640930176
    3. 'Segment' → logprob: -11.251736640930176
    4. '(List' → logprob: -11.876736640930176
    5. '(' → logprob: -12.626736640930176
    6. 'Segments' → logprob: -12.876736640930176
    7. 'def' → logprob: -13.126736640930176
    8. '):' → logprob: -13.751736640930176
    9. '   ' → logprob: -14.126736640930176
    10. ':def' → logprob: -14.126736640930176

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008145138621330261
    2. 'def' → logprob: -5.508145332336426
    3. ' def' → logprob: -5.508145332336426
    4. '	def' → logprob: -13.383145332336426
    5. ':' → logprob: -13.633145332336426
    6. ':def' → logprob: -14.508145332336426
    7. '    
' → logprob: -14.633145332336426
    8. '
' → logprob: -15.008145332336426
    9. ':
' → logprob: -15.383145332336426
    10. 'class' → logprob: -16.00814437866211

Token 268: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25201416015625
    2. 'def' (adapté à ' def') → logprob: -1.50201416015625
    3. '   ' → logprob: -9.37701416015625
    4. 'class' → logprob: -16.00201416015625
    5. ' ' → logprob: -16.25201416015625
    6. '	def' → logprob: -16.37701416015625
    7. 'from' → logprob: -18.12701416015625
    8. 'de' → logprob: -18.75201416015625
    9. '  ' → logprob: -18.75201416015625
    10. 'import' → logprob: -19.12701416015625

Token 269: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03407186269760132
    2. ' def' → logprob: -3.534071922302246
    3. ' init' → logprob: -6.534071922302246
    4. '__' → logprob: -6.909071922302246
    5. ' ' → logprob: -7.159071922302246
    6. 'init' → logprob: -7.909071922302246
    7. 'def' → logprob: -8.159071922302246
    8. '_init' → logprob: -8.659071922302246
    9. ' _' → logprob: -9.284071922302246
    10. ' ___' → logprob: -9.409071922302246

Token 270: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'it' → logprob: -13.750000953674316
    3. 'int' → logprob: -15.875000953674316
    4. 'nit' → logprob: -16.000001907348633
    5. ' init' → logprob: -17.625001907348633
    6. 'def' → logprob: -18.125001907348633
    7. 'class' → logprob: -18.250001907348633
    8. '_init' → logprob: -18.750001907348633
    9. 'name' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.250001907348633

Token 271: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000443420372903347
    2. '(self' → logprob: -7.875443458557129
    3. '__(
' → logprob: -10.250443458557129
    4. '__' → logprob: -10.750443458557129
    5. '_(' → logprob: -12.375443458557129
    6. 'self' → logprob: -13.750443458557129
    7. ' (' → logprob: -14.375443458557129
    8. '(' → logprob: -15.500443458557129
    9. '   ' → logprob: -15.750443458557129
    10. '=self' → logprob: -17.000442504882812

Token 272: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.1318875446449965e-05
    2. ' self' → logprob: -10.500041007995605
    3. '       ' → logprob: -11.250041007995605
    4. '   ' → logprob: -14.750041007995605
    5. '
' → logprob: -16.000041961669922
    6. ',' → logprob: -16.625041961669922
    7. '(self' → logprob: -17.125041961669922
    8. '	self' → logprob: -17.625041961669922
    9. ' ' → logprob: -18.625041961669922
    10. '    ' → logprob: -19.125041961669922

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002479700604453683
    2. 'self' → logprob: -6.252479553222656
    3. '       ' → logprob: -7.752479553222656
    4. ' ,' → logprob: -9.252479553222656
    5. '   ' → logprob: -11.252479553222656
    6. ',
' → logprob: -12.252479553222656
    7. ' self' → logprob: -13.002479553222656
    8. ',self' → logprob: -13.002479553222656
    9. '):
' → logprob: -13.877479553222656
    10. '
' → logprob: -14.002479553222656

Token 274: ' points' (ID: 5571)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3550296127796173
    2. 'points' → logprob: -1.230029582977295
    3. ' points' → logprob: -5.355029582977295
    4. ' segments' → logprob: -6.355029582977295
    5. 'self' → logprob: -9.730030059814453
    6. 'way' → logprob: -11.105030059814453
    7. 'segment' → logprob: -12.230030059814453
    8. '   ' → logprob: -12.730030059814453
    9. 'se' → logprob: -12.855030059814453
    10. '	points' → logprob: -13.105030059814453

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1041145626222715e-05
    2. '):' → logprob: -12.000011444091797
    3. '":' → logprob: -13.125011444091797
    4. '_:' → logprob: -13.750011444091797
    5. ' :' → logprob: -14.000011444091797
    6. '}:' → logprob: -15.125011444091797
    7. ']:' → logprob: -15.500011444091797
    8. ')' → logprob: -15.875011444091797
    9. '__:' → logprob: -16.000011444091797
    10. '):
' → logprob: -16.625011444091797

Token 276: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.4744220972061157
    2. 'List' → logprob: -0.9744220972061157
    3. '[List' → logprob: -7.974421977996826
    4. '	List' → logprob: -14.974422454833984
    5. ' list' → logprob: -15.474422454833984
    6. 'Optional' → logprob: -16.849422454833984
    7. '(List' → logprob: -16.849422454833984
    8. 'list' → logprob: -17.099422454833984
    9. ' Optional' → logprob: -17.224422454833984
    10. '   ' → logprob: -17.224422454833984

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '<Point' → logprob: -13.50000286102295
    3. 'Point' → logprob: -14.00000286102295
    4. '[
' → logprob: -15.62500286102295
    5. '	Point' → logprob: -15.87500286102295
    6. ' [' → logprob: -15.87500286102295
    7. '(Point' → logprob: -17.250003814697266
    8. '```' → logprob: -17.250003814697266
    9. '["' → logprob: -17.375003814697266
    10. ']' → logprob: -17.625003814697266

Token 278: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.088346359931165e-07
    2. ' Point' → logprob: -14.000000953674316
    3. '	Point' → logprob: -17.0
    4. 'float' → logprob: -18.75
    5. '[' → logprob: -19.125
    6. '<Point' → logprob: -20.375
    7. '_point' → logprob: -21.875
    8. '_Point' → logprob: -22.0
    9. '(Point' → logprob: -22.125
    10. 'Tuple' → logprob: -23.25

Token 279: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.5055205821990967
    2. ']):' → logprob: -1.0055205821990967
    3. ']' → logprob: -3.5055205821990967
    4. '])' → logprob: -7.005520820617676
    5. ')' → logprob: -11.880520820617676
    6. '],' → logprob: -13.380520820617676
    7. ' ]' → logprob: -13.505520820617676
    8. ']
' → logprob: -13.630520820617676
    9. ']:' → logprob: -13.880520820617676
    10. '):' → logprob: -14.005520820617676

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002516839886084199
    2. 'self' → logprob: -8.500251770019531
    3. ' self' → logprob: -11.125251770019531
    4. ':' → logprob: -11.500251770019531
    5. '):
' → logprob: -11.750251770019531
    6. '   ' → logprob: -12.000251770019531
    7. ',' → logprob: -13.250251770019531
    8. '```' → logprob: -13.375251770019531
    9. '
' → logprob: -14.125251770019531
    10. 'assert' → logprob: -14.250251770019531

Token 281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17577533423900604
    2. ' self' → logprob: -1.9257752895355225
    3. '       ' → logprob: -4.175775527954102
    4. ' if' → logprob: -10.300775527954102
    5. 'if' → logprob: -10.550775527954102
    6. '   ' → logprob: -12.425775527954102
    7. 'assert' → logprob: -13.300775527954102
    8. ' ' → logprob: -14.425775527954102
    9. '	self' → logprob: -14.425775527954102
    10. ' assert' → logprob: -14.550775527954102

Token 282: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.035416219383478165
    2. '.' → logprob: -3.4104161262512207
    3. ' .' → logprob: -6.660416126251221
    4. ':' → logprob: -8.410416603088379
    5. 'points' → logprob: -8.910416603088379
    6. ' points' → logprob: -10.160416603088379
    7. '   ' → logprob: -11.035416603088379
    8. '.Point' → logprob: -11.160416603088379
    9. '_points' → logprob: -11.160416603088379
    10. '	points' → logprob: -11.410416603088379

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519579827785492
    2. ' =' → logprob: -1.5019580125808716
    3. ':' → logprob: -10.751957893371582
    4. ')' → logprob: -12.626957893371582
    5. '=[]' → logprob: -13.001957893371582
    6. ' ' → logprob: -14.126957893371582
    7. '.' → logprob: -15.376957893371582
    8. '=[]
' → logprob: -15.501957893371582
    9. '[' → logprob: -15.626957893371582
    10. ']' → logprob: -15.876957893371582

Token 284: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.04301813989877701
    2. ' points' → logprob: -3.168018102645874
    3. '[' → logprob: -11.293018341064453
    4. '	points' → logprob: -12.793018341064453
    5. ' [' → logprob: -14.168018341064453
    6. '(points' → logprob: -14.293018341064453
    7. '[]' → logprob: -14.543018341064453
    8. 'point' → logprob: -14.668018341064453
    9. '   ' → logprob: -15.168018341064453
    10. '[]
' → logprob: -15.168018341064453

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03154027834534645
    2. '
' → logprob: -3.9065403938293457
    3. '<|end|>' → logprob: -4.656540393829346
    4. '   ' → logprob: -8.031539916992188
    5. ',' → logprob: -8.031539916992188
    6. ')' → logprob: -8.156539916992188
    7. 'self' → logprob: -8.906539916992188
    8. '<|end|>' → logprob: -9.531539916992188
    9. ' ' → logprob: -9.781539916992188
    10. '        
' → logprob: -10.406539916992188

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004374638374429196
    2. 'self' → logprob: -8.12543773651123
    3. '
' → logprob: -9.75043773651123
    4. '   ' → logprob: -10.50043773651123
    5. ' self' → logprob: -10.62543773651123
    6. '<|end|>' → logprob: -11.25043773651123
    7. ',' → logprob: -11.62543773651123
    8. ')' → logprob: -13.12543773651123
    9. ' ' → logprob: -13.62543773651123
    10. '        
' → logprob: -13.75043773651123

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012227067723870277
    2. '       ' → logprob: -4.5122270584106445
    3. ' self' → logprob: -6.7622270584106445
    4. '#' → logprob: -11.637227058410645
    5. '   ' → logprob: -12.137227058410645
    6. 'if' → logprob: -12.637227058410645
    7. '
' → logprob: -13.387227058410645
    8. '        
' → logprob: -13.512227058410645
    9. 'assert' → logprob: -13.887227058410645
    10. '	self' → logprob: -15.262227058410645

Token 288: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.004217301495373249
    2. '.length' → logprob: -6.254217147827148
    3. '._' → logprob: -7.129217147827148
    4. ' .' → logprob: -7.629217147827148
    5. '.segment' → logprob: -8.254217147827148
    6. 'segments' → logprob: -8.504217147827148
    7. '_segments' → logprob: -8.504217147827148
    8. '.' → logprob: -8.879217147827148
    9. '.points' → logprob: -9.004217147827148
    10. 'length' → logprob: -11.254217147827148

Token 289: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -3.953082341467962e-05
    2. 'g' → logprob: -10.250039100646973
    3. 'gements' → logprob: -12.500039100646973
    4. 'gment' → logprob: -15.750039100646973
    5. 'gm' → logprob: -16.62504005432129
    6. 'ments' → logprob: -17.12504005432129
    7. 'quences' → logprob: -17.25004005432129
    8. '   ' → logprob: -17.37504005432129
    9. '```' → logprob: -17.87504005432129
    10. 'segments' → logprob: -18.25004005432129

Token 290: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015659024938941002
    2. '=' → logprob: -4.640658855438232
    3. ':' → logprob: -5.140658855438232
    4. ' :' → logprob: -10.64065933227539
    5. '=[]' → logprob: -12.14065933227539
    6. ' =[' → logprob: -13.51565933227539
    7. ' ' → logprob: -14.26565933227539
    8. '=[]
' → logprob: -15.64065933227539
    9. '=[' → logprob: -16.01565933227539
    10. '[' → logprob: -16.26565933227539

Token 291: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.25194594264030457
    2. ' List' → logprob: -1.501945972442627
    3. '[List' → logprob: -11.001945495605469
    4. '	List' → logprob: -16.37694549560547
    5. '[' → logprob: -17.75194549560547
    6. 'list' → logprob: -18.50194549560547
    7. ' ' → logprob: -18.62694549560547
    8. '[]' → logprob: -19.00194549560547
    9. 'Optional' → logprob: -20.12694549560547
    10. 'Dict' → logprob: -20.12694549560547

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[
' → logprob: -14.125000953674316
    3. '<Route' → logprob: -14.875000953674316
    4. 'Route' → logprob: -17.250001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '	Route' → logprob: -17.875001907348633
    7. '```' → logprob: -18.000001907348633
    8. ' =' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '=' → logprob: -18.625001907348633

Token 293: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -5.512236498361744e-07
    2. ' Route' → logprob: -14.625000953674316
    3. '	Route' → logprob: -18.0
    4. 'Point' → logprob: -19.25
    5. '<Route' → logprob: -19.625
    6. '[' → logprob: -20.375
    7. 'Optional' → logprob: -20.625
    8. '_route' → logprob: -21.125
    9. 'Router' → logprob: -21.625
    10. '.Route' → logprob: -21.875

Token 294: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.75
    3. ' Segment' → logprob: -17.875
    4. '[' → logprob: -18.25
    5. '_segment' → logprob: -18.5
    6. 'Segments' → logprob: -19.0
    7. 'segment' → logprob: -20.125
    8. 'Seg' → logprob: -20.125
    9. '   ' → logprob: -20.5
    10. '_SEG' → logprob: -21.25

Token 295: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.082895273109898e-05
    2. ']=' → logprob: -10.500030517578125
    3. '=' → logprob: -13.000030517578125
    4. ' ]' → logprob: -15.000030517578125
    5. ')' → logprob: -15.250030517578125
    6. '"]' → logprob: -16.000030517578125
    7. '[' → logprob: -16.625030517578125
    8. ']
' → logprob: -16.625030517578125
    9. ' =' → logprob: -17.250030517578125
    10. '']' → logprob: -17.375030517578125

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132672905921936
    2. ' =' → logprob: -1.3132672309875488
    3. '=[]' → logprob: -12.188267707824707
    4. ' ' → logprob: -15.438267707824707
    5. '[]' → logprob: -16.18826675415039
    6. ')' → logprob: -16.81326675415039
    7. '=[]
' → logprob: -16.81326675415039
    8. ']' → logprob: -17.31326675415039
    9. '=create' → logprob: -18.68826675415039
    10. '[' → logprob: -18.81326675415039

Token 297: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46411776542663574
    2. '[]' → logprob: -1.2141177654266357
    3. '[]
' → logprob: -2.9641177654266357
    4. '[
' → logprob: -4.714118003845215
    5. ' [' → logprob: -4.964118003845215
    6. ' []' → logprob: -5.839118003845215
    7. '[self' → logprob: -6.464118003845215
    8. '[array' → logprob: -7.839118003845215
    9. '[]

' → logprob: -8.339118003845215
    10. '[list' → logprob: -8.464118003845215

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08528683334589005
    2. ' for' → logprob: -2.585286855697632
    3. 'for' → logprob: -5.085286617279053
    4. '<|end|>' → logprob: -9.960287094116211
    5. 'n' → logprob: -10.210287094116211
    6. ' if' → logprob: -10.710287094116211
    7. '   ' → logprob: -10.960287094116211
    8. ',' → logprob: -10.960287094116211
    9. '	' → logprob: -11.710287094116211
    10. ' self' → logprob: -12.210287094116211

Token 299: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4831157624721527
    2. 'prev' → logprob: -1.733115792274475
    3. '       ' → logprob: -2.4831156730651855
    4. 'if' → logprob: -3.7331156730651855
    5. ' for' → logprob: -3.7331156730651855
    6. 'cum' → logprob: -4.3581156730651855
    7. 'length' → logprob: -4.6081156730651855
    8. 'distance' → logprob: -4.7331156730651855
    9. 'total' → logprob: -4.9831156730651855
    10. 'self' (adapté à ' self') → logprob: -5.1081156730651855

Token 300: '.length' (ID: 3116)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.23803280293941498
    2. '.length' → logprob: -1.8630328178405762
    3. '.total' → logprob: -3.238032817840576
    4. '.current' → logprob: -4.988032817840576
    5. '.' → logprob: -5.988032817840576
    6. '.distance' → logprob: -5.988032817840576
    7. '.calculate' → logprob: -6.863032817840576
    8. '.segment' → logprob: -7.238032817840576
    9. '.build' → logprob: -7.738032817840576
    10. '_length' → logprob: -7.863032817840576

Token 301: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932446956634521
    2. ' =' → logprob: -0.6932446956634521
    3. 's' → logprob: -10.318244934082031
    4. '_' → logprob: -10.693244934082031
    5. ' ' → logprob: -11.318244934082031
    6. '=sum' → logprob: -11.318244934082031
    7. ' +=' → logprob: -11.943244934082031
    8. ')' → logprob: -12.568244934082031
    9. '_sum' → logprob: -13.193244934082031
    10. 'sum' → logprob: -13.693244934082031

Token 302: '_prefix' (ID: 33197)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050175998359918594
    2. '=' → logprob: -3.050175905227661
    3. ':' → logprob: -6.80017614364624
    4. '=[]' → logprob: -8.175175666809082
    5. ' ' → logprob: -8.800175666809082
    6. '.append' → logprob: -10.925175666809082
    7. ' :' → logprob: -12.175175666809082
    8. '=[]
' → logprob: -12.550175666809082
    9. ' =[' → logprob: -12.800175666809082
    10. '[:]' → logprob: -13.175175666809082

Token 303: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6271116733551025
    2. '=' → logprob: -0.8771116733551025
    3. '_sum' → logprob: -3.8771116733551025
    4. 'sum' → logprob: -4.502111434936523
    5. '=[]' → logprob: -4.502111434936523
    6. '_s' → logprob: -5.377111434936523
    7. '_' → logprob: -7.377111434936523
    8. ':' → logprob: -7.877111434936523
    9. '=[' → logprob: -8.127111434936523
    10. 'es' → logprob: -8.252111434936523

Token 304: ' List' (ID: 2655)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12683328986167908
    2. ' [' → logprob: -2.251833200454712
    3. '[List' → logprob: -4.626833438873291
    4. 'List' → logprob: -5.751833438873291
    5. ' List' → logprob: -7.126833438873291
    6. '[]' → logprob: -9.126832962036133
    7. ' []' → logprob: -10.626832962036133
    8. ' =' → logprob: -12.751832962036133
    9. ' ' → logprob: -13.251832962036133
    10. '[int' → logprob: -13.376832962036133

Token 305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002918446552939713
    2. ' [' → logprob: -9.25029182434082
    3. '[int' → logprob: -9.87529182434082
    4. ' =' → logprob: -10.00029182434082
    5. 'float' → logprob: -10.25029182434082
    6. '   ' → logprob: -10.75029182434082
    7. '=float' → logprob: -11.37529182434082
    8. '=[' → logprob: -11.75029182434082
    9. '[List' → logprob: -12.25029182434082
    10. ':' → logprob: -12.50029182434082

Token 306: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00014847563579678535
    2. '[' → logprob: -9.37514877319336
    3. ' float' → logprob: -9.75014877319336
    4. '	float' → logprob: -13.37514877319336
    5. '=float' → logprob: -13.37514877319336
    6. '<float' → logprob: -14.25014877319336
    7. 'flo' → logprob: -14.75014877319336
    8. ',float' → logprob: -14.87514877319336
    9. '(float' → logprob: -15.50014877319336
    10. '```' → logprob: -16.00014877319336

Token 307: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2556374669075012
    2. '=' → logprob: -1.5056374073028564
    3. ']' → logprob: -5.6306376457214355
    4. ')' → logprob: -10.005637168884277
    5. '[' → logprob: -10.755637168884277
    6. ' ' → logprob: -11.255637168884277
    7. ']=' → logprob: -11.255637168884277
    8. ' =[' → logprob: -11.880637168884277
    9. '=[]' → logprob: -11.880637168884277
    10. '=[' → logprob: -12.505637168884277

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38692328333854675
    2. '=' → logprob: -1.1369233131408691
    3. '.append' → logprob: -11.011922836303711
    4. '=[]' → logprob: -11.261922836303711
    5. ' =[' → logprob: -11.886922836303711
    6. '[' → logprob: -11.886922836303711
    7. '=[' → logprob: -12.261922836303711
    8. '   ' → logprob: -13.011922836303711
    9. ' ' → logprob: -13.761922836303711
    10. '=[]
' → logprob: -15.011922836303711

Token 309: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.114600834436715e-05
    2. '[]' → logprob: -10.000091552734375
    3. ' [' → logprob: -10.000091552734375
    4. '[]
' → logprob: -15.375091552734375
    5. '0' → logprob: -17.500091552734375
    6. ' []' → logprob: -18.250091552734375
    7. '[self' → logprob: -18.625091552734375
    8. '[length' → logprob: -18.750091552734375
    9. '[len' → logprob: -19.125091552734375
    10. ' ' → logprob: -19.500091552734375

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.75
    4. ')' → logprob: -18.125
    5. '۰' → logprob: -18.5
    6. ']' → logprob: -19.125
    7. '  ' → logprob: -19.3125
    8. '    ' → logprob: -19.625
    9. '
' → logprob: -20.1875
    10. '[' → logprob: -20.1875

Token 311: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03024781309068203
    2. '.' → logprob: -3.530247926712036
    3. '0' → logprob: -8.405247688293457
    4. ')' → logprob: -9.405247688293457
    5. ']
' → logprob: -9.655247688293457
    6. '])' → logprob: -9.905247688293457
    7. '.]' → logprob: -10.155247688293457
    8. ' ]' → logprob: -11.530247688293457
    9. '[' → logprob: -12.155247688293457
    10. ',' → logprob: -12.280247688293457

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ']' → logprob: -13.750000953674316
    3. ' ' → logprob: -15.750000953674316
    4. ')' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ']
' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. '])' → logprob: -18.750001907348633
    9. '.' → logprob: -19.125001907348633
    10. 'float' → logprob: -19.250001907348633

Token 313: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005188359646126628
    2. ' ]' → logprob: -7.750518798828125
    3. ']
' → logprob: -9.500518798828125
    4. ',' → logprob: -12.000518798828125
    5. ']

' → logprob: -12.375518798828125
    6. '
' → logprob: -14.125518798828125
    7. ')' → logprob: -14.500518798828125
    8. '0' → logprob: -15.000518798828125
    9. '"]' → logprob: -15.250518798828125
    10. '],' → logprob: -15.250518798828125

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002265636110678315
    2. ' for' → logprob: -6.252265453338623
    3. 'for' → logprob: -8.627265930175781
    4. '
' → logprob: -9.877265930175781
    5. '	' → logprob: -10.002265930175781
    6. '   ' → logprob: -10.127265930175781
    7. '	for' → logprob: -12.252265930175781
    8. '        
' → logprob: -12.252265930175781
    9. ',' → logprob: -12.502265930175781
    10. '<|end|>' → logprob: -13.127265930175781

Token 315: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7766329646110535
    2. 'for' → logprob: -0.7766329646110535
    3. ' for' → logprob: -2.5266330242156982
    4. '   ' → logprob: -9.276633262634277
    5. 'prev' → logprob: -9.901633262634277
    6. 'total' → logprob: -12.401633262634277
    7. 'current' → logprob: -12.526633262634277
    8. '
' → logprob: -12.651633262634277
    9. ' ' → logprob: -13.151633262634277
    10. ' prev' → logprob: -13.276633262634277

Token 316: '.total' (ID: 23374)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020912738516926765
    2. 'for' → logprob: -4.6459126472473145
    3. '._' → logprob: -5.0209126472473145
    4. '.for' → logprob: -5.6459126472473145
    5. ' for' → logprob: -7.1459126472473145
    6. ' .' → logprob: -10.020913124084473
    7. '.
' → logprob: -10.270913124084473
    8. '.length' → logprob: -10.895913124084473
    9. '.points' → logprob: -10.895913124084473
    10. '.se' → logprob: -11.395913124084473

Token 317: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0007337473216466606
    2. '_' → logprob: -7.250733852386475
    3. ' _' → logprob: -11.250733375549316
    4. '_distance' → logprob: -12.000733375549316
    5. '_len' → logprob: -13.250733375549316
    6. '_l' → logprob: -14.000733375549316
    7. 'length' → logprob: -14.000733375549316
    8. '_lengths' → logprob: -14.000733375549316
    9. '_le' → logprob: -16.625734329223633
    10. ' length' → logprob: -16.750734329223633

Token 318: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147863030433655
    2. '=' → logprob: -1.7014786005020142
    3. ':' → logprob: -9.826478958129883
    4. ' ' → logprob: -11.451478958129883
    5. ' :' → logprob: -15.451478958129883
    6. '   ' → logprob: -16.451478958129883
    7. ',' → logprob: -16.701478958129883
    8. ')' → logprob: -16.951478958129883
    9. '=[]' → logprob: -16.951478958129883
    10. '<|end|>' → logprob: -16.951478958129883

Token 319: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22561326622962952
    2. ' ' → logprob: -1.6006132364273071
    3. ' self' → logprob: -9.975613594055176
    4. ' sum' → logprob: -10.225613594055176
    5. 'sum' → logprob: -10.475613594055176
    6. ' points' → logprob: -10.725613594055176
    7. ' float' → logprob: -10.850613594055176
    8. 'self' → logprob: -11.225613594055176
    9. 'float' → logprob: -11.725613594055176
    10. 'points' → logprob: -11.725613594055176

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.568147659301758
    4. ':' → logprob: -15.443147659301758
    5. '0' → logprob: -18.693147659301758
    6. '=None' → logprob: -19.318147659301758
    7. '   ' → logprob: -19.318147659301758
    8. '  ' → logprob: -20.443147659301758
    9. ' :' → logprob: -20.443147659301758
    10. '=len' → logprob: -20.943147659301758

Token 321: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015347852604463696
    2. 'self' → logprob: -9.500153541564941
    3. ' ' → logprob: -9.625153541564941
    4. 'sum' → logprob: -11.750153541564941
    5. ' self' → logprob: -12.500153541564941
    6. '   ' → logprob: -14.375153541564941
    7. ' sum' → logprob: -15.375153541564941
    8. 'points' → logprob: -17.250152587890625
    9. '       ' → logprob: -17.500152587890625
    10. '  ' → logprob: -17.500152587890625

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8828707804204896e-05
    2. 'sum' → logprob: -10.250048637390137
    3. 'self' → logprob: -11.250048637390137
    4. ' ' → logprob: -15.375048637390137
    5. 'points' → logprob: -16.750049591064453
    6. '   ' → logprob: -17.375049591064453
    7. '
' → logprob: -17.625049591064453
    8. ' sum' → logprob: -17.750049591064453
    9. 'float' → logprob: -17.875049591064453
    10. ' self' → logprob: -18.625049591064453

Token 323: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001589618914294988
    2. '.
' → logprob: -8.75015926361084
    3. '
' → logprob: -15.25015926361084
    4. '.

' → logprob: -16.000158309936523
    5. '       ' → logprob: -17.500158309936523
    6. '.​' → logprob: -18.125158309936523
    7. '   ' → logprob: -18.250158309936523
    8. '.
' → logprob: -18.375158309936523
    9. '    
' → logprob: -19.250158309936523
    10. ' .' → logprob: -19.625158309936523

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '  ' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. 'def' → logprob: -21.0
    6. '   ' → logprob: -21.25
    7. '       ' → logprob: -21.75
    8. '.' → logprob: -21.875
    9. 'length' → logprob: -22.0
    10. 'to' → logprob: -22.0

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22970424592494965
    2. '
' → logprob: -1.8547042608261108
    3. ' for' → logprob: -3.8547041416168213
    4. '<|end|>' → logprob: -3.8547041416168213
    5. 'for' → logprob: -5.8547043800354
    6. '   ' → logprob: -6.9797043800354
    7. '        
' → logprob: -7.4797043800354
    8. ',' → logprob: -7.7297043800354
    9. '  
' → logprob: -7.7297043800354
    10. '<|end|>' → logprob: -8.479703903198242

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004397005774080753
    2. ' for' → logprob: -6.004396915435791
    3. '
' → logprob: -7.004396915435791
    4. 'for' → logprob: -7.004396915435791
    5. '   ' → logprob: -9.87939739227295
    6. '        
' → logprob: -10.25439739227295
    7. ',' → logprob: -12.75439739227295
    8. '    
' → logprob: -12.87939739227295
    9. '  
' → logprob: -12.87939739227295
    10. '<|end|>' → logprob: -12.87939739227295

Token 327: ' self' (ID: 1051)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7319021224975586
    2. '       ' → logprob: -1.2319021224975586
    3. 'for' → logprob: -1.4819021224975586
    4. '
' → logprob: -10.481902122497559
    5. '   ' → logprob: -10.481902122497559
    6. '        
' → logprob: -12.481902122497559
    7. ' ' → logprob: -13.231902122497559
    8. '	for' → logprob: -13.481902122497559
    9. ' if' → logprob: -15.231902122497559
    10. '    
' → logprob: -15.481902122497559

Token 328: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6413081884384155
    2. '._' → logprob: -0.7663081884384155
    3. '.build' → logprob: -5.891308307647705
    4. ' for' → logprob: -6.766308307647705
    5. '.for' → logprob: -6.891308307647705
    6. 'for' → logprob: -7.016308307647705
    7. ' .' → logprob: -7.141308307647705
    8. '.calculate' → logprob: -7.391308307647705
    9. '.initialize' → logprob: -8.016307830810547
    10. '.setup' → logprob: -8.766307830810547

Token 329: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.02629275433719158
    2. 'compute' → logprob: -3.7762928009033203
    3. 'calculate' → logprob: -6.52629280090332
    4. 'initialize' → logprob: -6.90129280090332
    5. 'construct' → logprob: -8.27629280090332
    6. 'create' → logprob: -8.90129280090332
    7. 'init' → logprob: -9.15129280090332
    8. '_build' → logprob: -10.15129280090332
    9. 'prepare' → logprob: -10.77629280090332
    10. 'calc' → logprob: -12.65129280090332

Token 330: '()

' (ID: 5874)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.03959803655743599
    2. '_route' → logprob: -3.539597988128662
    3. '_' → logprob: -5.039597988128662
    4. '()' → logprob: -5.914597988128662
    5. '(' → logprob: -8.41459846496582
    6. 'segments' → logprob: -8.66459846496582
    7. '_routes' → logprob: -8.66459846496582
    8. '_path' → logprob: -11.41459846496582
    9. '_segment' → logprob: -11.78959846496582
    10. ' segments' → logprob: -12.03959846496582

Token 331: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08381137996912003
    2. '   ' → logprob: -2.9588112831115723
    3. 'def' → logprob: -3.8338112831115723
    4. '    
' → logprob: -5.958811283111572
    5. ' def' → logprob: -6.583811283111572
    6. '<|end|>' → logprob: -6.833811283111572
    7. '  
' → logprob: -7.458811283111572
    8. ' 
' → logprob: -7.833811283111572
    9. ' ' → logprob: -8.33381175994873
    10. '

' → logprob: -9.08381175994873

Token 332: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014510520733892918
    2. '   ' → logprob: -4.264510631561279
    3. ' def' → logprob: -8.014510154724121
    4. '
' → logprob: -11.889510154724121
    5. '	def' → logprob: -12.139510154724121
    6. '    
' → logprob: -12.514510154724121
    7. ' ' → logprob: -15.014510154724121
    8. '  
' → logprob: -17.514511108398438
    9. '

' → logprob: -17.639511108398438
    10. ' 
' → logprob: -18.014511108398438

Token 333: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.00014442270912695676
    2. ' _' → logprob: -8.875144004821777
    3. '_' → logprob: -12.625144004821777
    4. '_builder' → logprob: -14.375144004821777
    5. '_b' → logprob: -15.250144004821777
    6. 'def' → logprob: -15.750144004821777
    7. 'build' → logprob: -16.000144958496094
    8. ' ' → logprob: -17.375144958496094
    9. '_BUILD' → logprob: -18.125144958496094
    10. '   ' → logprob: -18.125144958496094

Token 334: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -5.512236498361744e-07
    2. '_build' → logprob: -14.625000953674316
    3. ' build' → logprob: -17.125
    4. 'b' → logprob: -18.0
    5. '	build' → logprob: -18.875
    6. '.build' → logprob: -19.5
    7. '(build' → logprob: -20.625
    8. 'uild' → logprob: -20.875
    9. 'building' → logprob: -21.625
    10. 'built' → logprob: -22.0

Token 335: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003577495808713138
    2. '(' → logprob: -8.000357627868652
    3. 'self' → logprob: -11.125357627868652
    4. ' (' → logprob: -12.750357627868652
    5. '()' → logprob: -13.000357627868652
    6. '   ' → logprob: -14.250357627868652
    7. ' self' → logprob: -14.250357627868652
    8. '(
' → logprob: -14.875357627868652
    9. '(s' → logprob: -15.250357627868652
    10. ' ' → logprob: -15.500357627868652

Token 336: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7172380685806274
    2. '):
' → logprob: -1.3422380685806274
    3. '(self' → logprob: -1.8422380685806274
    4. 'self' → logprob: -2.467237949371338
    5. ')' → logprob: -5.342237949371338
    6. '   ' → logprob: -6.717237949371338
    7. ')(' → logprob: -7.717237949371338
    8. '       ' → logprob: -8.342238426208496
    9. ' ' → logprob: -8.592238426208496
    10. '):
' → logprob: -8.967238426208496

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002181311370804906
    2. ':' → logprob: -6.627181529998779
    3. ' for' → logprob: -7.127181529998779
    4. 'for' → logprob: -10.877181053161621
    5. ',' → logprob: -11.127181053161621
    6. '   ' → logprob: -11.877181053161621
    7. '        
' → logprob: -13.377181053161621
    8. ')' → logprob: -13.877181053161621
    9. '<|end|>' → logprob: -13.877181053161621
    10. '
' → logprob: -14.002181053161621

Token 338: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42237773537635803
    2. '       ' → logprob: -1.4223777055740356
    3. ' for' → logprob: -2.422377824783325
    4. 'self' → logprob: -4.297377586364746
    5. ' self' → logprob: -6.922377586364746
    6. 'prev' → logprob: -10.047377586364746
    7. '   ' → logprob: -10.547377586364746
    8. ' ' → logprob: -13.797377586364746
    9. ' prev' → logprob: -14.172377586364746
    10. 'if' → logprob: -14.797377586364746

Token 339: ' create' (ID: 2501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20879198610782623
    2. 'self' → logprob: -1.833791971206665
    3. ' for' → logprob: -4.583792209625244
    4. '       ' → logprob: -4.708792209625244
    5. 'prev' → logprob: -5.208792209625244
    6. ' self' → logprob: -5.583792209625244
    7. ' prev' → logprob: -9.833791732788086
    8. 'previous' → logprob: -9.833791732788086
    9. 'if' → logprob: -10.708791732788086
    10. '   ' → logprob: -10.708791732788086

Token 340: ' segments' (ID: 33749)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2652432918548584
    2. 'for' → logprob: -1.5152432918548584
    3. 'segments' → logprob: -5.1402435302734375
    4. ' segments' → logprob: -6.0152435302734375
    5. 'self' → logprob: -6.2652435302734375
    6. ' self' → logprob: -6.2652435302734375
    7. '       ' → logprob: -7.0152435302734375
    8. '   ' → logprob: -9.265243530273438
    9. ' previous' → logprob: -9.890243530273438
    10. 'prev' → logprob: -10.015243530273438

Token 341: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2808484733104706
    2. '       ' → logprob: -1.530848503112793
    3. 'for' → logprob: -3.780848503112793
    4. ' from' → logprob: -6.030848503112793
    5. ' and' → logprob: -6.405848503112793
    6. ',' → logprob: -7.405848503112793
    7. 'from' → logprob: -7.655848503112793
    8. '   ' → logprob: -8.655848503112793
    9. '<|end|>' → logprob: -8.655848503112793
    10. '        
' → logprob: -9.405848503112793

Token 342: ' prefix' (ID: 18633)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.8879774808883667
    2. 'acc' → logprob: -1.7629774808883667
    3. 'compute' → logprob: -1.8879774808883667
    4. ' accumulate' → logprob: -3.0129776000976562
    5. 'calculate' → logprob: -3.1379776000976562
    6. 'for' → logprob: -3.1379776000976562
    7. 'self' → logprob: -3.5129776000976562
    8. 'length' → logprob: -3.5129776000976562
    9. ' compute' → logprob: -3.7629776000976562
    10. 'update' → logprob: -4.387977600097656

Token 343: ' sums' (ID: 73121)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.825835645198822
    2. ' lengths' → logprob: -1.2008357048034668
    3. ' sums' → logprob: -2.075835704803467
    4. '       ' → logprob: -2.325835704803467
    5. '_' → logprob: -4.825835704803467
    6. '_s' → logprob: -4.950835704803467
    7. 'length' → logprob: -4.950835704803467
    8. '   ' → logprob: -5.325835704803467
    9. '_length' → logprob: -5.950835704803467
    10. '_sum' → logprob: -6.200835704803467

Token 344: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2570900619029999
    2. ' for' → logprob: -1.5070900917053223
    3. 'for' → logprob: -6.132090091705322
    4. '
' → logprob: -6.757090091705322
    5. '        
' → logprob: -7.507090091705322
    6. ',' → logprob: -7.882090091705322
    7. ':' → logprob: -8.007089614868164
    8. '   ' → logprob: -8.507089614868164
    9. '<|end|>' → logprob: -9.132089614868164
    10. ':
' → logprob: -10.132089614868164

Token 345: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5856126546859741
    2. ' lengths' → logprob: -1.2106126546859741
    3. 'segment' → logprob: -2.2106127738952637
    4. ' segment' → logprob: -3.8356127738952637
    5. 'self' → logprob: -4.710612773895264
    6. ' length' → logprob: -6.460612773895264
    7. ' self' → logprob: -6.835612773895264
    8. '[length' → logprob: -7.085612773895264
    9. '_lengths' → logprob: -7.835612773895264
    10. 'segments' → logprob: -8.085612297058105

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04131448268890381
    2. '
' → logprob: -4.041314601898193
    3. ' for' → logprob: -4.041314601898193
    4. '        
' → logprob: -5.541314601898193
    5. ',' → logprob: -8.166314125061035
    6. 'for' → logprob: -8.291314125061035
    7. '<|end|>' → logprob: -8.416314125061035
    8. '   ' → logprob: -8.541314125061035
    9. '  
' → logprob: -9.166314125061035
    10. ':' → logprob: -9.416314125061035

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023008473217487335
    2. ' for' → logprob: -6.37730073928833
    3. '
' → logprob: -8.252301216125488
    4. 'for' → logprob: -8.502301216125488
    5. ',' → logprob: -10.127301216125488
    6. '        
' → logprob: -10.502301216125488
    7. '   ' → logprob: -10.752301216125488
    8. ':' → logprob: -10.877301216125488
    9. '```' → logprob: -11.627301216125488
    10. '<|end|>' → logprob: -12.252301216125488

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04987392574548721
    2. '       ' → logprob: -3.2998738288879395
    3. 'self' → logprob: -4.9248738288879395
    4. ' for' → logprob: -5.4248738288879395
    5. 'prev' → logprob: -10.174874305725098
    6. ' self' → logprob: -10.424874305725098
    7. '   ' → logprob: -10.674874305725098
    8. 'previous' → logprob: -13.799874305725098
    9. '
' → logprob: -14.924874305725098
    10. 'last' → logprob: -15.299874305725098

Token 349: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078758880496025
    2. ' i' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.87907886505127
    4. '	i' → logprob: -16.754077911376953
    5. 'idx' → logprob: -18.629077911376953
    6. ' ' → logprob: -18.629077911376953
    7. 'index' → logprob: -19.754077911376953
    8. '  ' → logprob: -20.379077911376953
    9. '    ' → logprob: -21.004077911376953
    10. '       ' → logprob: -22.254077911376953

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036142051685601473
    2. 'in' → logprob: -5.62861442565918
    3. ' ' → logprob: -11.62861442565918
    4. ' i' → logprob: -13.62861442565918
    5. '	in' → logprob: -14.00361442565918
    6. '+' → logprob: -14.37861442565918
    7. '1' → logprob: -14.37861442565918
    8. ',' → logprob: -14.62861442565918
    9. '_in' → logprob: -14.62861442565918
    10. '   ' → logprob: -15.25361442565918

Token 351: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740808606147766
    2. 'range' → logprob: -0.9740808606147766
    3. '   ' → logprob: -13.474081039428711
    4. ' ' → logprob: -13.599081039428711
    5. '	range' → logprob: -14.224081039428711
    6. '(range' → logprob: -14.724081039428711
    7. '  ' → logprob: -15.974081039428711
    8. ' xrange' → logprob: -17.22408103942871
    9. '_range' → logprob: -17.47408103942871
    10. '.range' → logprob: -18.22408103942871

Token 352: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933480501174927
    2. '(len' → logprob: -0.6933480501174927
    3. 'len' → logprob: -9.568347930908203
    4. ' (' → logprob: -9.693347930908203
    5. ' len' → logprob: -10.318347930908203
    6. '1' → logprob: -10.318347930908203
    7. ' ' → logprob: -12.943347930908203
    8. '(self' → logprob: -14.693347930908203
    9. '   ' → logprob: -15.318347930908203
    10. '	len' → logprob: -16.193347930908203

Token 353: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. 'self' → logprob: -15.125003814697266
    4. ' self' → logprob: -17.500003814697266
    5. ' (' → logprob: -17.750003814697266
    6. '(
' → logprob: -19.625003814697266
    7. '(s' → logprob: -19.750003814697266
    8. '	self' → logprob: -20.375003814697266
    9. ')' → logprob: -20.500003814697266
    10. '[self' → logprob: -20.750003814697266

Token 354: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.03253290057182312
    2. '(points' → logprob: -3.5325329303741455
    3. 'points' → logprob: -6.532532691955566
    4. '(self' → logprob: -7.157532691955566
    5. ' points' → logprob: -8.407532691955566
    6. 'self' → logprob: -8.407532691955566
    7. '	points' → logprob: -10.282532691955566
    8. '-' → logprob: -11.282532691955566
    9. '.' → logprob: -11.282532691955566
    10. ' self' → logprob: -11.657532691955566

Token 355: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.025738371536135674
    2. '-' → logprob: -3.775738477706909
    3. ')' → logprob: -6.02573823928833
    4. ' ' → logprob: -9.775738716125488
    5. ' )' → logprob: -11.775738716125488
    6. '   ' → logprob: -12.025738716125488
    7. '()' → logprob: -13.400738716125488
    8. '1' → logprob: -13.900738716125488
    9. ')-' → logprob: -15.025738716125488
    10. '	' → logprob: -15.525738716125488

Token 356: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06997589766979218
    2. '-' → logprob: -2.6949758529663086
    3. ' ' → logprob: -10.444975852966309
    4. ')' → logprob: -11.694975852966309
    5. '   ' → logprob: -13.819975852966309
    6. '1' → logprob: -14.944975852966309
    7. '
' → logprob: -15.819975852966309
    8. ')-' → logprob: -16.069976806640625
    9. ' -
' → logprob: -16.319976806640625
    10. ' ' → logprob: -16.444976806640625

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.625158309936523
    4. '  ' → logprob: -18.000158309936523
    5. '```' → logprob: -18.000158309936523
    6. '<|end|>' → logprob: -18.375158309936523
    7. ')' → logprob: -19.000158309936523
    8. '       ' → logprob: -19.125158309936523
    9. 'import' → logprob: -19.187658309936523
    10. '    ' → logprob: -19.250158309936523

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.7500057220459
    4. '```' → logprob: -20.7500057220459
    5. '
' → logprob: -21.0000057220459
    6. '2' → logprob: -21.3750057220459
    7. '۱' → logprob: -21.5000057220459
    8. '  ' → logprob: -21.5000057220459
    9. ')' → logprob: -22.0000057220459
    10. 'import' → logprob: -22.1250057220459

Token 359: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5765551328659058
    2. '):' → logprob: -0.8265551328659058
    3. ' ):' → logprob: -8.076555252075195
    4. ' ):
' → logprob: -8.326555252075195
    5. '):
' → logprob: -10.076555252075195
    6. ':' → logprob: -11.701555252075195
    7. '       ' → logprob: -12.326555252075195
    8. '   ' → logprob: -12.701555252075195
    9. ')' → logprob: -12.701555252075195
    10. '):

' → logprob: -14.201555252075195

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025305950548499823
    2. '       ' → logprob: -6.627530574798584
    3. ',' → logprob: -7.752530574798584
    4. ':' → logprob: -8.002531051635742
    5. '):
' → logprob: -9.377531051635742
    6. '
' → logprob: -9.627531051635742
    7. ':
' → logprob: -9.877531051635742
    8. '```' → logprob: -9.877531051635742
    9. '            
' → logprob: -10.377531051635742
    10. '   ' → logprob: -10.502531051635742

Token 361: ' seg' (ID: 3055)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.07032841444015503
    2. ' segment' → logprob: -2.9453284740448
    3. 'seg' (adapté à ' seg') → logprob: -4.320328235626221
    4. '           ' → logprob: -6.445328235626221
    5. ' seg' → logprob: -7.820328235626221
    6. 'self' → logprob: -10.445328712463379
    7. ' self' → logprob: -13.070328712463379
    8. '.segment' → logprob: -13.070328712463379
    9. '   ' → logprob: -13.320328712463379
    10. '               ' → logprob: -13.445328712463379

Token 362: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.2086210995912552
    2. ' =' → logprob: -1.7086211442947388
    3. '=' → logprob: -5.208621025085449
    4. 'm' → logprob: -6.583621025085449
    5. 'ments' → logprob: -9.20862102508545
    6. 'мент' → logprob: -9.20862102508545
    7. '_' → logprob: -10.58362102508545
    8. 'メント' → logprob: -10.70862102508545
    9. '   ' → logprob: -10.83362102508545
    10. ' ' → logprob: -10.95862102508545

Token 363: ' Route' (ID: 17215)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.6931617259979248
    2. ' Route' → logprob: -0.6931617259979248
    3. '	Route' → logprob: -11.318161964416504
    4. '           ' → logprob: -13.693161964416504
    5. '(Route' → logprob: -14.943161964416504
    6. '<Route' → logprob: -15.068161964416504
    7. '.Route' → logprob: -15.693161964416504
    8. 'Router' → logprob: -16.318161010742188
    9. 'self' → logprob: -16.693161010742188
    10. '   ' → logprob: -16.943161010742188

Token 364: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. 'Segments' → logprob: -16.125
    3. 'segment' → logprob: -16.75
    4. 'Seg' → logprob: -16.75
    5. ' Segment' → logprob: -17.75
    6. '_segment' → logprob: -18.25
    7. 'egment' → logprob: -18.5
    8. 'Route' → logprob: -19.875
    9. 'segments' → logprob: -20.0
    10. 'gment' → logprob: -20.0

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -13.000003814697266
    3. 'self' → logprob: -14.000003814697266
    4. '(
' → logprob: -15.000003814697266
    5. '=self' → logprob: -16.625003814697266
    6. ' self' → logprob: -17.500003814697266
    7. '(points' → logprob: -18.500003814697266
    8. '[self' → logprob: -19.125003814697266
    9. ',self' → logprob: -19.250003814697266
    10. '	self' → logprob: -19.625003814697266

Token 366: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.00014728360110893846
    2. 'points' → logprob: -9.000146865844727
    3. 'oints' → logprob: -11.750146865844727
    4. '.' → logprob: -12.125146865844727
    5. '	points' → logprob: -12.750146865844727
    6. ' points' → logprob: -12.750146865844727
    7. ' .' → logprob: -13.000146865844727
    8. '(points' → logprob: -13.875146865844727
    9. '.point' → logprob: -15.125146865844727
    10. ').' → logprob: -15.375146865844727

Token 367: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. '[' → logprob: -11.375014305114746
    3. '[
' → logprob: -13.375014305114746
    4. ' [' → logprob: -15.375014305114746
    5. '   ' → logprob: -16.12501335144043
    6. '[I' → logprob: -16.37501335144043
    7. '
' → logprob: -16.50001335144043
    8. 'i' → logprob: -17.00001335144043
    9. ')[' → logprob: -17.25001335144043
    10. ' ' → logprob: -17.37501335144043

Token 368: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000526938121765852
    2. ',' → logprob: -7.6255269050598145
    3. ' ],' → logprob: -10.750527381896973
    4. ']' → logprob: -11.750527381896973
    5. '],
' → logprob: -12.500527381896973
    6. '   ' → logprob: -13.125527381896973
    7. '),' → logprob: -13.875527381896973
    8. '+' → logprob: -14.375527381896973
    9. ' ,' → logprob: -14.500527381896973
    10. '       ' → logprob: -14.500527381896973

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6326420307159424
    2. ' self' → logprob: -0.7576420307159424
    3. '           ' → logprob: -10.757641792297363
    4. '            ' → logprob: -12.007641792297363
    5. '	self' → logprob: -12.632641792297363
    6. '[self' → logprob: -13.257641792297363
    7. '               ' → logprob: -13.507641792297363
    8. '(self' → logprob: -13.632641792297363
    9. ' ' → logprob: -13.632641792297363
    10. '          ' → logprob: -13.757641792297363

Token 370: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.0005620885640382767
    2. 'points' → logprob: -7.5005621910095215
    3. ' points' → logprob: -12.500561714172363
    4. 'oints' → logprob: -13.000561714172363
    5. '	points' → logprob: -13.125561714172363
    6. '.' → logprob: -14.375561714172363
    7. '(points' → logprob: -15.500561714172363
    8. ').' → logprob: -16.00056266784668
    9. '_points' → logprob: -16.37556266784668
    10. ' .' → logprob: -16.50056266784668

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0037449754308909178
    2. 'i' → logprob: -6.003745079040527
    3. '+' → logprob: -6.753745079040527
    4. '[' → logprob: -10.753745079040527
    5. '{i' → logprob: -10.753745079040527
    6. '+i' → logprob: -11.003745079040527
    7. '   ' → logprob: -11.378745079040527
    8. '(i' → logprob: -11.753745079040527
    9. '1' → logprob: -12.503745079040527
    10. '.i' → logprob: -12.503745079040527

Token 372: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00671584764495492
    2. ' +' → logprob: -5.006715774536133
    3. '+
' → logprob: -15.131715774536133
    4. '1' → logprob: -16.006715774536133
    5. ' ' → logprob: -17.756715774536133
    6. '])' → logprob: -18.131715774536133
    7. '＋' → logprob: -18.256715774536133
    8. ']+' → logprob: -18.381715774536133
    9. '+i' → logprob: -18.381715774536133
    10. ' +
' → logprob: -18.506715774536133

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.125019073486328
    4. '```' → logprob: -19.250019073486328
    5. '
' → logprob: -19.500019073486328
    6. '  ' → logprob: -19.750019073486328
    7. '0' → logprob: -20.500019073486328
    8. 'i' → logprob: -20.875019073486328
    9. ')' → logprob: -21.437519073486328
    10. '۱' → logprob: -21.812519073486328

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -17.6250057220459
    4. '   ' → logprob: -19.1250057220459
    5. '  ' → logprob: -20.0000057220459
    6. ')' → logprob: -20.5000057220459
    7. '```' → logprob: -20.5000057220459
    8. '0' → logprob: -21.3750057220459
    9. 'i' → logprob: -21.3750057220459
    10. ']' → logprob: -21.5625057220459

Token 375: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04861154779791832
    2. ')
' → logprob: -3.048611640930176
    3. '       ' → logprob: -11.798611640930176
    4. ')
' → logprob: -12.173611640930176
    5. '])' → logprob: -12.798611640930176
    6. '           ' → logprob: -12.798611640930176
    7. ')`
' → logprob: -13.173611640930176
    8. '))' → logprob: -13.298611640930176
    9. ')`' → logprob: -14.048611640930176
    10. ' )' → logprob: -14.798611640930176

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004961982485838234
    2. 'self' → logprob: -8.125495910644531
    3. '
' → logprob: -9.375495910644531
    4. ' self' → logprob: -10.125495910644531
    5. ',' → logprob: -10.375495910644531
    6. '            
' → logprob: -11.250495910644531
    7. '       ' → logprob: -11.500495910644531
    8. '.' → logprob: -12.500495910644531
    9. ')' → logprob: -12.625495910644531
    10. '<|end|>' → logprob: -13.125495910644531

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3321218490600586
    2. '           ' → logprob: -1.9571218490600586
    3. ' self' → logprob: -1.9571218490600586
    4. '       ' → logprob: -9.957121849060059
    5. '   ' → logprob: -11.957121849060059
    6. '	self' → logprob: -12.457121849060059
    7. '               ' → logprob: -12.957121849060059
    8. ' ' → logprob: -12.957121849060059
    9. '
' → logprob: -13.582121849060059
    10. '          ' → logprob: -14.082121849060059

Token 378: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -3.650518920039758e-06
    2. ' .' → logprob: -14.125003814697266
    3. '.seg' → logprob: -14.125003814697266
    4. '.' → logprob: -14.375003814697266
    5. '.points' → logprob: -14.750003814697266
    6. '.length' → logprob: -14.875003814697266
    7. '.segment' → logprob: -14.875003814697266
    8. 'segments' → logprob: -15.500003814697266
    9. '.s' → logprob: -16.000003814697266
    10. '.sections' → logprob: -17.000003814697266

Token 379: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -8.180258191714529e-06
    2. 'g' → logprob: -12.375008583068848
    3. 'gment' → logprob: -13.375008583068848
    4. 'gements' → logprob: -13.625008583068848
    5. 'ments' → logprob: -14.125008583068848
    6. 'segments' → logprob: -14.875008583068848
    7. 'gm' → logprob: -17.50000762939453
    8. '_segments' → logprob: -19.00000762939453
    9. 'Segments' → logprob: -20.00000762939453
    10. '   ' → logprob: -20.12500762939453

Token 380: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.387458365177736e-05
    2. '.' → logprob: -9.500083923339844
    3. '.app' → logprob: -12.125083923339844
    4. '.ap' → logprob: -12.750083923339844
    5. '.Append' → logprob: -15.000083923339844
    6. ' .' → logprob: -16.125083923339844
    7. '.push' → logprob: -16.375083923339844
    8. ').' → logprob: -16.750083923339844
    9. '.extend' → logprob: -17.125083923339844
    10. '.add' → logprob: -17.375083923339844

Token 381: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: 0.0
    2. '(' → logprob: -17.875
    3. 'seg' → logprob: -18.25
    4. '(sess' → logprob: -18.75
    5. '(segment' → logprob: -19.375
    6. '(sel' → logprob: -19.625
    7. '(sig' → logprob: -19.875
    8. '(se' → logprob: -20.75
    9. '(
' → logprob: -21.5
    10. '(sec' → logprob: -21.875

Token 382: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06060037761926651
    2. ')
' → logprob: -3.1856002807617188
    3. ')' → logprob: -4.060600280761719
    4. '
' → logprob: -8.935600280761719
    5. ',' → logprob: -10.060600280761719
    6. 'self' → logprob: -11.935600280761719
    7. ',
' → logprob: -12.060600280761719
    8. '       ' → logprob: -12.310600280761719
    9. '),' → logprob: -12.435600280761719
    10. ')
' → logprob: -12.685600280761719

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015833048382773995
    2. 'self' → logprob: -6.876583099365234
    3. ' self' → logprob: -7.751583099365234
    4. '   ' → logprob: -9.876583099365234
    5. '       ' → logprob: -9.876583099365234
    6. '
' → logprob: -11.251583099365234
    7. ',' → logprob: -13.751583099365234
    8. '               ' → logprob: -13.876583099365234
    9. '            
' → logprob: -14.001583099365234
    10. ' ' → logprob: -14.751583099365234

Token 384: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009364743018522859
    2. ' self' → logprob: -7.500936508178711
    3. '           ' → logprob: -7.875936508178711
    4. 'length' → logprob: -13.000936508178711
    5. '   ' → logprob: -14.750936508178711
    6. 'total' → logprob: -15.250936508178711
    7. '	self' → logprob: -15.250936508178711
    8. 'current' → logprob: -15.750936508178711
    9. 'last' → logprob: -15.875936508178711
    10. ' ' → logprob: -16.50093650817871

Token 385: '.length' (ID: 3116)
  Prédit: '.total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.31340140104293823
    2. '.length' → logprob: -1.313401460647583
    3. '.' → logprob: -9.313401222229004
    4. ' .' → logprob: -10.688401222229004
    5. 'total' → logprob: -10.813401222229004
    6. '_lengths' → logprob: -13.063401222229004
    7. '       ' → logprob: -14.063401222229004
    8. 'length' → logprob: -14.063401222229004
    9. '   ' → logprob: -14.563401222229004
    10. '           ' → logprob: -15.188401222229004

Token 386: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.575563020305708e-05
    2. '_prefix' → logprob: -10.250065803527832
    3. 'prefix' → logprob: -10.875065803527832
    4. '=' → logprob: -12.875065803527832
    5. ' =' → logprob: -12.875065803527832
    6. ' s' → logprob: -13.125065803527832
    7. '=s' → logprob: -13.875065803527832
    8. '_lengths' → logprob: -14.500065803527832
    9. 'Prefix' → logprob: -14.625065803527832
    10. ' +=' → logprob: -14.625065803527832

Token 387: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -2.15310683415737e-05
    2. '_suffix' → logprob: -11.000021934509277
    3. 'prefix' → logprob: -12.875021934509277
    4. '_PREFIX' → logprob: -14.625021934509277
    5. '_pref' → logprob: -14.625021934509277
    6. '_append' → logprob: -15.375021934509277
    7. 'refix' → logprob: -15.875021934509277
    8. '.append' → logprob: -15.875021934509277
    9. ')_' → logprob: -16.12502098083496
    10. '=_' → logprob: -16.37502098083496

Token 388: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014334988372866064
    2. '.' → logprob: -9.125143051147461
    3. '.app' → logprob: -10.500143051147461
    4. '.ap' → logprob: -12.250143051147461
    5. ' .' → logprob: -13.500143051147461
    6. '[-' → logprob: -14.250143051147461
    7. '.extend' → logprob: -17.25014305114746
    8. '_append' → logprob: -18.50014305114746
    9. 'append' → logprob: -18.50014305114746
    10. '.Append' → logprob: -18.87514305114746

Token 389: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002005364978685975
    2. 'self' → logprob: -6.252005577087402
    3. '(' → logprob: -9.877005577087402
    4. ' self' → logprob: -10.752005577087402
    5. '	self' → logprob: -14.127005577087402
    6. '(
' → logprob: -14.252005577087402
    7. '(seg' → logprob: -14.252005577087402
    8. '   ' → logprob: -14.627005577087402
    9. '=self' → logprob: -14.752005577087402
    10. '[self' → logprob: -15.002005577087402

Token 390: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.07973331958055496
    2. '.total' → logprob: -2.579733371734619
    3. '.' → logprob: -8.079732894897461
    4. 'length' → logprob: -8.579732894897461
    5. '_lengths' → logprob: -8.954732894897461
    6. 'total' → logprob: -9.204732894897461
    7. 's' → logprob: -9.704732894897461
    8. '._' → logprob: -10.829732894897461
    9. ' .' → logprob: -11.454732894897461
    10. 'Lengths' → logprob: -12.329732894897461

Token 391: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5776860184123507e-06
    2. '_prefix' → logprob: -14.37500286102295
    3. 'prefix' → logprob: -14.62500286102295
    4. '_lengths' → logprob: -14.62500286102295
    5. 'seg' → logprob: -15.50000286102295
    6. '+' → logprob: -16.250001907348633
    7. 'length' → logprob: -16.375001907348633
    8. 'с' → logprob: -16.500001907348633
    9. 'segments' → logprob: -16.750001907348633
    10. '_segments' → logprob: -17.000001907348633

Token 392: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -2.6895233531831764e-05
    2. 'prefix' → logprob: -10.62502670288086
    3. '[-' → logprob: -13.37502670288086
    4. 'Prefix' → logprob: -14.62502670288086
    5. '_PREFIX' → logprob: -15.50002670288086
    6. '_suffix' → logprob: -16.25002670288086
    7. '-prefix' → logprob: -16.37502670288086
    8. '
' → logprob: -16.50002670288086
    9. '[i' → logprob: -16.75002670288086
    10. '_' → logprob: -17.50002670288086

Token 393: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.935296834039036e-06
    2. '[i' → logprob: -12.75000286102295
    3. ' [-' → logprob: -18.375003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '[' → logprob: -20.125003814697266
    6. '
' → logprob: -20.625003814697266
    7. '[
' → logprob: -21.000003814697266
    8. '```' → logprob: -21.625003814697266
    9. '-' → logprob: -21.750003814697266
    10. '][-' → logprob: -22.375003814697266

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. ']' → logprob: -16.250001907348633
    4. 'len' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '()' → logprob: -17.250001907348633
    7. '-' → logprob: -17.375001907348633
    8. 'value' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. '(' → logprob: -17.750001907348633

Token 395: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692894041538239
    2. '+' → logprob: -2.1269290447235107
    3. '+self' → logprob: -15.12692928314209
    4. ')' → logprob: -16.001928329467773
    5. ' +
' → logprob: -16.001928329467773
    6. ' ' → logprob: -16.251928329467773
    7. ' plus' → logprob: -16.376928329467773
    8. ' ' → logprob: -16.501928329467773
    9. ')+' → logprob: -16.876928329467773
    10. '<|end|>' → logprob: -17.126928329467773

Token 396: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868716359138489
    2. '+' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.761871337890625
    4. ' +
' → logprob: -15.886871337890625
    5. '+
' → logprob: -16.386871337890625
    6. ' ' → logprob: -17.011871337890625
    7. '+self' → logprob: -17.011871337890625
    8. ')+' → logprob: -17.261871337890625
    9. '
' → logprob: -17.261871337890625
    10. ')' → logprob: -17.636871337890625

Token 397: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0009119403548538685
    2. ' seg' → logprob: -7.000911712646484
    3. '(seg' → logprob: -15.125911712646484
    4. 'segment' → logprob: -15.375911712646484
    5. 'segments' → logprob: -18.250911712646484
    6. '           ' → logprob: -19.125911712646484
    7. '_seg' → logprob: -19.875911712646484
    8. 'sig' → logprob: -20.000911712646484
    9. 'sess' → logprob: -20.625911712646484
    10. 'sel' → logprob: -21.250911712646484

Token 398: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -7.896309739408025e-07
    2. 'length' → logprob: -14.875000953674316
    3. '.' → logprob: -15.500000953674316
    4. '.len' → logprob: -16.875
    5. '.l' → logprob: -17.25
    6. '.LENGTH' → logprob: -18.125
    7. 'ength' → logprob: -18.25
    8. ' .' → logprob: -18.5
    9. '.size' → logprob: -18.75
    10. '.Length' → logprob: -19.0

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.750009536743164
    3. '<|end|>' → logprob: -13.750009536743164
    4. ' )' → logprob: -15.125009536743164
    5. '       ' → logprob: -15.500009536743164
    6. ')return' → logprob: -16.250009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '),' → logprob: -17.375009536743164
    9. ')

' → logprob: -17.625009536743164
    10. '
' → logprob: -18.375009536743164

Token 400: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36226755380630493
    2. 'self' (adapté à ' self') → logprob: -1.7372674942016602
    3. ' self' → logprob: -2.11226749420166
    4. '<|end|>' → logprob: -5.61226749420166
    5. '   ' → logprob: -6.86226749420166
    6. ' ' → logprob: -7.23726749420166
    7. '```' → logprob: -7.73726749420166
    8. '	self' → logprob: -8.48726749420166
    9. '           ' → logprob: -8.61226749420166
    10. '
' → logprob: -8.73726749420166

Token 402: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.00012523093027994037
    2. '.' → logprob: -9.00012493133545
    3. ' .' → logprob: -14.50012493133545
    4. '.length' → logprob: -14.87512493133545
    5. '._' → logprob: -15.00012493133545
    6. 'total' → logprob: -15.25012493133545
    7. '.t' → logprob: -15.62512493133545
    8. '
' → logprob: -17.875125885009766
    9. '.current' → logprob: -18.000125885009766
    10. '.user' → logprob: -18.000125885009766

Token 403: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.9361264946837764e-07
    2. '_l' → logprob: -17.125
    3. '_len' → logprob: -17.125
    4. '_' → logprob: -18.0
    5. '_le' → logprob: -18.25
    6. ' _' → logprob: -19.125
    7. '_lengths' → logprob: -19.5
    8. 'length' → logprob: -19.75
    9. '_leg' → logprob: -21.375
    10. '_line' → logprob: -22.875

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022545099258423
    2. '=' → logprob: -1.9102253913879395
    3. ' +=' → logprob: -13.785225868225098
    4. '=self' → logprob: -16.41022491455078
    5. '+=' → logprob: -16.66022491455078
    6. ' ' → logprob: -17.16022491455078
    7. ' =
' → logprob: -18.03522491455078
    8. '.=' → logprob: -18.41022491455078
    9. ' ' → logprob: -18.78522491455078
    10. '=len' → logprob: -19.28522491455078

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '	self' → logprob: -18.131715774536133
    4. '=self' → logprob: -18.131715774536133
    5. '       ' → logprob: -18.381715774536133
    6. '(self' → logprob: -18.881715774536133
    7. '
' → logprob: -19.006715774536133
    8. '[self' → logprob: -19.381715774536133
    9. '   ' → logprob: -19.881715774536133
    10. '           ' → logprob: -19.881715774536133

Token 406: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -2.696889623621246e-06
    2. 'length' → logprob: -13.37500286102295
    3. ' .' → logprob: -14.00000286102295
    4. 'ength' → logprob: -16.000001907348633
    5. '.' → logprob: -16.250001907348633
    6. ':length' → logprob: -17.375001907348633
    7. '.l' → logprob: -18.625001907348633
    8. '	length' → logprob: -18.625001907348633
    9. ',length' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.750001907348633

Token 407: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.383526149671525e-05
    2. '_prefix' → logprob: -10.375053405761719
    3. '_lengths' → logprob: -11.125053405761719
    4. 'length' → logprob: -12.750053405761719
    5. 'prefix' → logprob: -13.625053405761719
    6. 'ss' → logprob: -14.125053405761719
    7. ' s' → logprob: -14.625053405761719
    8. '_s' → logprob: -15.000053405761719
    9. 'st' → logprob: -15.375053405761719
    10. '_length' → logprob: -15.625053405761719

Token 408: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -6.825890159234405e-05
    2. 'prefix' → logprob: -9.625068664550781
    3. 'Prefix' → logprob: -14.000068664550781
    4. 'refix' → logprob: -14.250068664550781
    5. '-prefix' → logprob: -15.250068664550781
    6. '_PREFIX' → logprob: -15.875068664550781
    7. 's' → logprob: -16.12506866455078
    8. '_suffix' → logprob: -16.75006866455078
    9. '[' → logprob: -17.37506866455078
    10. '.prefix' → logprob: -17.62506866455078

Token 409: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. ' [-' → logprob: -21.75
    3. '[' → logprob: -22.125
    4. '[
' → logprob: -22.375
    5. '-' → logprob: -22.5
    6. '][-' → logprob: -22.75
    7. '   ' → logprob: -23.75
    8. '[len' → logprob: -24.5
    9. '
' → logprob: -25.0
    10. '```' → logprob: -25.375

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. ']' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.062503814697266
    5. '```' → logprob: -16.312503814697266
    6. ')' → logprob: -17.000003814697266
    7. '0' → logprob: -17.125003814697266
    8. '
' → logprob: -18.125003814697266
    9. '۱' → logprob: -18.375003814697266
    10. '  ' → logprob: -18.500003814697266

Token 411: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049148861318826675
    2. '<|end|>' → logprob: -3.2991487979888916
    3. '   ' → logprob: -4.924149036407471
    4. '

' → logprob: -6.299149036407471
    5. 'def' → logprob: -6.924149036407471
    6. '<|end|>' → logprob: -8.174148559570312
    7. '    
' → logprob: -8.299148559570312
    8. ' def' → logprob: -9.549148559570312
    9. '```' → logprob: -9.549148559570312
    10. ' 
' → logprob: -10.174148559570312

Token 413: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3416990637779236
    2. 'def' (adapté à ' def') → logprob: -1.5916991233825684
    3. '   ' → logprob: -2.7166991233825684
    4. ' def' → logprob: -4.341699123382568
    5. '<|end|>' → logprob: -6.091699123382568
    6. ' ' → logprob: -6.341699123382568
    7. '    
' → logprob: -7.091699123382568
    8. '

' → logprob: -7.341699123382568
    9. '```' → logprob: -7.466699123382568
    10. '  
' → logprob: -8.34169864654541

Token 414: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.1841835081577301
    2. ' position' → logprob: -2.0591835975646973
    3. 'point' → logprob: -3.5591835975646973
    4. 'position' → logprob: -5.434183597564697
    5. ' get' → logprob: -6.309183597564697
    6. ' length' → logprob: -6.559183597564697
    7. ' find' → logprob: -6.809183597564697
    8. ' interpolate' → logprob: -7.059183597564697
    9. ' sample' → logprob: -7.309183597564697
    10. ' distance' → logprob: -7.934183597564697

Token 415: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00014728360110893846
    2. '_al' → logprob: -9.125146865844727
    3. '_' → logprob: -11.250146865844727
    4. '_on' → logprob: -12.000146865844727
    5. '_between' → logprob: -12.250146865844727
    6. '_a' → logprob: -12.375146865844727
    7. 's' → logprob: -13.125146865844727
    8. '(self' → logprob: -13.375146865844727
    9. 'at' → logprob: -13.750146865844727
    10. '_before' → logprob: -13.875146865844727

Token 416: '_distance' (ID: 45537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001584258396178484
    2. '(' → logprob: -6.751584053039551
    3. 'self' → logprob: -8.12658405303955
    4. 'distance' → logprob: -10.25158405303955
    5. '_distance' → logprob: -10.37658405303955
    6. ' (' → logprob: -11.12658405303955
    7. '(distance' → logprob: -12.00158405303955
    8. '_length' → logprob: -12.12658405303955
    9. 's' → logprob: -12.12658405303955
    10. '(s' → logprob: -12.50158405303955

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004350797680672258
    2. '(' → logprob: -7.750434875488281
    3. ' (' → logprob: -13.125434875488281
    4. '(
' → logprob: -13.250434875488281
    5. 'self' → logprob: -14.625434875488281
    6. '(s' → logprob: -15.625434875488281
    7. '   ' → logprob: -16.75043487548828
    8. ' ' → logprob: -18.00043487548828
    9. ' self' → logprob: -18.12543487548828
    10. '(sel' → logprob: -18.37543487548828

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0160656925290823
    2. 'self' → logprob: -4.76606559753418
    3. '(self' → logprob: -5.14106559753418
    4. ' ,' → logprob: -6.64106559753418
    5. ')' → logprob: -9.14106559753418
    6. '(' → logprob: -10.26606559753418
    7. ',
' → logprob: -10.26606559753418
    8. ' (' → logprob: -10.39106559753418
    9. ' self' → logprob: -11.14106559753418
    10. 's' → logprob: -11.14106559753418

Token 419: ' d' (ID: 272)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5109212398529053
    2. 'self' → logprob: -1.1359212398529053
    3. 'd' → logprob: -2.7609212398529053
    4. 'dist' → logprob: -4.635921478271484
    5. ' distance' → logprob: -5.885921478271484
    6. 's' → logprob: -6.260921478271484
    7. ' self' → logprob: -7.385921478271484
    8. '   ' → logprob: -7.885921478271484
    9. ' d' → logprob: -9.010921478271484
    10. ' dist' → logprob: -9.885921478271484

Token 420: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015784210991114378
    2. '):' → logprob: -6.751578330993652
    3. ')' → logprob: -8.626578330993652
    4. ' :' → logprob: -8.751578330993652
    5. '):
' → logprob: -10.126578330993652
    6. ' ):' → logprob: -11.376578330993652
    7. '_:' → logprob: -11.751578330993652
    8. '   ' → logprob: -12.626578330993652
    9. ':int' → logprob: -13.126578330993652
    10. ' )' → logprob: -13.376578330993652

Token 421: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007137430948205292
    2. ' float' → logprob: -7.25071382522583
    3. ')' → logprob: -13.250713348388672
    4. '=float' → logprob: -14.000713348388672
    5. '	float' → logprob: -14.125713348388672
    6. 'loat' → logprob: -15.625713348388672
    7. '(float' → logprob: -16.000713348388672
    8. '<float' → logprob: -16.375713348388672
    9. ',float' → logprob: -16.375713348388672
    10. '.float' → logprob: -16.625713348388672

Token 422: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. '):' → logprob: -11.62501335144043
    3. ' )' → logprob: -12.75001335144043
    4. ')->' → logprob: -14.25001335144043
    5. '):
' → logprob: -15.12501335144043
    6. '   ' → logprob: -15.12501335144043
    7. ':' → logprob: -16.00001335144043
    8. ' ' → logprob: -16.50001335144043
    9. ',' → logprob: -17.25001335144043
    10. '       ' → logprob: -17.50001335144043

Token 423: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08897273242473602
    2. ' ->' → logprob: -2.713972806930542
    3. '->' → logprob: -4.088972568511963
    4. ')' → logprob: -6.213972568511963
    5. ')->' → logprob: -9.838973045349121
    6. '   ' → logprob: -10.963973045349121
    7. ',' → logprob: -12.088973045349121
    8. ':
' → logprob: -12.088973045349121
    9. '):' → logprob: -12.213973045349121
    10. '       ' → logprob: -12.338973045349121

Token 424: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.26298895478248596
    2. 'Optional' → logprob: -1.5129889249801636
    3. ' Point' → logprob: -4.762989044189453
    4. ' Optional' → logprob: -6.012989044189453
    5. '"' → logprob: -12.012989044189453
    6. '	Point' → logprob: -13.262989044189453
    7. '(Optional' → logprob: -14.137989044189453
    8. 'None' → logprob: -14.262989044189453
    9. '_Point' → logprob: -14.262989044189453
    10. 'optional' → logprob: -14.637989044189453

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04316303879022598
    2. ':
' → logprob: -3.1681630611419678
    3. '       ' → logprob: -9.293163299560547
    4. '):
' → logprob: -10.793163299560547
    5. '   ' → logprob: -10.918163299560547
    6. ',' → logprob: -11.168163299560547
    7. '):' → logprob: -11.668163299560547
    8. ')' → logprob: -13.168163299560547
    9. ':
' → logprob: -13.418163299560547
    10. '[' → logprob: -13.918163299560547

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006500666029751301
    2. ' if' → logprob: -5.131500720977783
    3. 'if' → logprob: -7.506500720977783
    4. ':' → logprob: -12.381500244140625
    5. 'import' → logprob: -12.381500244140625
    6. ',' → logprob: -12.631500244140625
    7. '#' → logprob: -13.131500244140625
    8. ' for' → logprob: -13.256500244140625
    9. '```' → logprob: -14.006500244140625
    10. 'for' → logprob: -14.131500244140625

Token 427: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0041457111947238445
    2. '       ' → logprob: -5.754145622253418
    3. '#' (adapté à ' #') → logprob: -7.004145622253418
    4. ' if' → logprob: -9.879145622253418
    5. 'd' → logprob: -12.004145622253418
    6. '"""' → logprob: -14.379145622253418
    7. '   ' → logprob: -14.754145622253418
    8. 'for' → logprob: -15.004145622253418
    9. 'import' → logprob: -15.004145622253418
    10. '```' → logprob: -15.129145622253418

Token 428: ' locate' (ID: 29006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012218352407217026
    2. 'd' → logprob: -4.512218475341797
    3. '#' → logprob: -7.512218475341797
    4. ' if' → logprob: -7.637218475341797
    5. 'import' → logprob: -9.637218475341797
    6. '       ' → logprob: -9.762218475341797
    7. 'If' → logprob: -12.012218475341797
    8. '   ' → logprob: -12.262218475341797
    9. 'from' → logprob: -12.762218475341797
    10. '"""' → logprob: -13.387218475341797

Token 429: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17655758559703827
    2. ' if' → logprob: -1.9265575408935547
    3. 'd' → logprob: -4.801557540893555
    4. 'segment' → logprob: -5.801557540893555
    5. 'import' → logprob: -6.426557540893555
    6. '       ' → logprob: -7.551557540893555
    7. 'i' → logprob: -7.551557540893555
    8. 'for' → logprob: -7.676557540893555
    9. '#' → logprob: -8.176557540893555
    10. ' the' → logprob: -8.426557540893555

Token 430: ' segment' (ID: 14806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012648794800043106
    2. 'segment' → logprob: -4.762648582458496
    3. ' if' → logprob: -6.762648582458496
    4. '#' → logprob: -6.762648582458496
    5. 'd' → logprob: -7.012648582458496
    6. 'import' → logprob: -7.262648582458496
    7. 'left' → logprob: -10.887648582458496
    8. '```' → logprob: -11.137648582458496
    9. ' segment' → logprob: -11.387648582458496
    10. 'index' → logprob: -11.387648582458496

Token 431: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3481035232543945
    2. '=' → logprob: -1.4731035232543945
    3. '_index' → logprob: -1.5981035232543945
    4. ' if' → logprob: -2.2231035232543945
    5. '       ' → logprob: -2.7231035232543945
    6. 'if' → logprob: -2.9731035232543945
    7. 'import' → logprob: -3.5981035232543945
    8. '   ' → logprob: -4.8481035232543945
    9. ',' → logprob: -4.8481035232543945
    10. ':' → logprob: -4.9731035232543945

Token 432: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007653592154383659
    2. ' d' → logprob: -4.882653713226318
    3. 'distance' → logprob: -10.63265323638916
    4. 'self' → logprob: -12.13265323638916
    5. ' the' → logprob: -12.38265323638916
    6. 'the' → logprob: -12.63265323638916
    7. 'next' → logprob: -13.50765323638916
    8. '       ' → logprob: -13.63265323638916
    9. 'segment' → logprob: -13.63265323638916
    10. ' self' → logprob: -13.75765323638916

Token 433: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3212571144104004
    2. ' if' → logprob: -1.5712571144104004
    3. '       ' → logprob: -1.8212571144104004
    4. ' =' → logprob: -1.9462571144104004
    5. '=' → logprob: -2.4462571144104004
    6. 'd' → logprob: -3.8212571144104004
    7. ',' → logprob: -3.9462571144104004
    8. '   ' → logprob: -4.0712571144104
    9. ':' → logprob: -4.5712571144104
    10. ' d' → logprob: -4.8212571144104

Token 434: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28409522771835327
    2. ' if' → logprob: -1.534095287322998
    3. 'if' → logprob: -4.534095287322998
    4. '=' → logprob: -5.034095287322998
    5. ':' → logprob: -5.409095287322998
    6. ',' → logprob: -5.659095287322998
    7. '        
' → logprob: -7.034095287322998
    8. '<|end|>' → logprob: -7.284095287322998
    9. 'import' → logprob: -7.409095287322998
    10. ' and' → logprob: -7.659095287322998

Token 435: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.287845253944397
    2. ' find' → logprob: -1.537845253944397
    3. 'inter' → logprob: -1.537845253944397
    4. ' return' → logprob: -1.912845253944397
    5. 't' → logprob: -2.9128451347351074
    6. ' interpolate' → logprob: -3.1628451347351074
    7. 'find' → logprob: -3.5378451347351074
    8. ' t' → logprob: -5.412845134735107
    9. 'get' → logprob: -5.912845134735107
    10. 'd' → logprob: -5.912845134735107

Token 436: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03369583934545517
    2. ' self' → logprob: -3.408695936203003
    3. '       ' → logprob: -10.033696174621582
    4. '   ' → logprob: -13.533696174621582
    5. ' the' → logprob: -13.658696174621582
    6. 'the' → logprob: -13.658696174621582
    7. '(self' → logprob: -13.908696174621582
    8. '	self' → logprob: -14.533696174621582
    9. '=self' → logprob: -15.533696174621582
    10. 'if' → logprob: -15.908696174621582

Token 437: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.32225003838539124
    2. ' point' → logprob: -1.3222500085830688
    3. 'self' → logprob: -4.822249889373779
    4. ' self' → logprob: -7.822249889373779
    5. ' corresponding' → logprob: -8.822250366210938
    6. 'segment' → logprob: -8.822250366210938
    7. 'cor' → logprob: -9.572250366210938
    8. 'inter' → logprob: -10.447250366210938
    9. ' segment' → logprob: -10.822250366210938
    10. 'Point' → logprob: -10.822250366210938

Token 438: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13678690791130066
    2. ' if' → logprob: -2.136786937713623
    3. '=' → logprob: -6.011786937713623
    4. 'if' → logprob: -6.261786937713623
    5. ':' → logprob: -6.636786937713623
    6. '_' → logprob: -7.386786937713623
    7. '   ' → logprob: -7.386786937713623
    8. '        ' → logprob: -7.761786937713623
    9. ',' → logprob: -7.886786937713623
    10. ' on' → logprob: -8.011786460876465

Token 439: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6065711379051208
    2. 'that' → logprob: -0.8565711379051208
    3. ' that' → logprob: -4.106571197509766
    4. ' the' → logprob: -4.731571197509766
    5. 'self' → logprob: -6.106571197509766
    6. 'it' → logprob: -6.231571197509766
    7. 'segment' → logprob: -7.606571197509766
    8. ' it' → logprob: -8.731571197509766
    9. ' self' → logprob: -11.856571197509766
    10. 'this' → logprob: -12.106571197509766

Token 440: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.3887583017349243
    2. 'segment' → logprob: -1.1387583017349243
    3. ' route' → logprob: -6.638758182525635
    4. 'self' → logprob: -8.388758659362793
    5. 'line' → logprob: -9.138758659362793
    6. '_route' → logprob: -9.763758659362793
    7. 'cor' → logprob: -9.888758659362793
    8. ' segment' → logprob: -9.888758659362793
    9. 'Route' → logprob: -10.388758659362793
    10. '
' → logprob: -11.388758659362793

Token 441: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22773295640945435
    2. ' if' → logprob: -1.6027328968048096
    3. 'if' → logprob: -6.352733135223389
    4. ':' → logprob: -9.10273265838623
    5. 'd' → logprob: -9.35273265838623
    6. '   ' → logprob: -9.47773265838623
    7. '
' → logprob: -9.47773265838623
    8. ',' → logprob: -9.72773265838623
    9. '=' → logprob: -10.47773265838623
    10. ' at' → logprob: -11.10273265838623

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01185852661728859
    2. ' if' → logprob: -4.8868584632873535
    3. ':' → logprob: -6.1368584632873535
    4. '   ' → logprob: -6.8868584632873535
    5. '
' → logprob: -8.011858940124512
    6. '        
' → logprob: -8.386858940124512
    7. 'if' → logprob: -8.886858940124512
    8. ',' → logprob: -9.511858940124512
    9. ')' → logprob: -9.511858940124512
    10. '{' → logprob: -10.886858940124512

Token 443: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005896322429180145
    2. '       ' → logprob: -5.505896091461182
    3. 'd' → logprob: -7.130896091461182
    4. ' if' → logprob: -7.630896091461182
    5. '#' → logprob: -8.13089656829834
    6. 'import' → logprob: -9.00589656829834
    7. 'for' → logprob: -9.38089656829834
    8. 'left' → logprob: -10.88089656829834
    9. 'low' → logprob: -13.00589656829834
    10. '   ' → logprob: -13.25589656829834

Token 444: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2519342005252838
    2. ' d' → logprob: -1.5019341707229614
    3. '	d' → logprob: -13.126934051513672
    4. ' not' → logprob: -13.876934051513672
    5. 'not' → logprob: -14.126934051513672
    6. '_d' → logprob: -14.876934051513672
    7. ' ' → logprob: -15.376934051513672
    8. '   ' → logprob: -15.626934051513672
    9. ' ' → logprob: -16.001934051513672
    10. '```' → logprob: -16.814434051513672

Token 445: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08423051238059998
    2. ' <' → logprob: -2.709230422973633
    3. '<=' → logprob: -4.334230422973633
    4. '<' → logprob: -6.834230422973633
    5. ' ' → logprob: -13.209230422973633
    6. ' ≤' → logprob: -14.334230422973633
    7. ' ==' → logprob: -14.834230422973633
    8. ')<=' → logprob: -15.209230422973633
    9. ' >=' → logprob: -15.709230422973633
    10. '0' → logprob: -15.709230422973633

Token 446: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032159762922674417
    2. '=' → logprob: -6.128215789794922
    3. ' ' → logprob: -6.878215789794922
    4. ' =' → logprob: -15.503215789794922
    5. '   ' → logprob: -15.628215789794922
    6. '
' → logprob: -17.753215789794922
    7. '۰' → logprob: -18.253215789794922
    8. '  ' → logprob: -18.378215789794922
    9. '```' → logprob: -18.503215789794922
    10. '1' → logprob: -18.503215789794922

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. '=' → logprob: -10.500038146972656
    3. ' ' → logprob: -11.500038146972656
    4. 'self' → logprob: -17.625038146972656
    5. '   ' → logprob: -17.750038146972656
    6. '
' → logprob: -17.750038146972656
    7. '       ' → logprob: -19.375038146972656
    8. ' =' → logprob: -19.375038146972656
    9. '```' → logprob: -19.375038146972656
    10. '

' → logprob: -19.500038146972656

Token 448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4566146433353424
    2. ':
' → logprob: -1.70661461353302
    3. ' or' → logprob: -1.70661461353302
    4. 'or' → logprob: -6.7066144943237305
    5. '       ' → logprob: -6.7066144943237305
    6. ':return' → logprob: -7.0816144943237305
    7. '.' → logprob: -8.83161449432373
    8. '   ' → logprob: -9.33161449432373
    9. ':
' → logprob: -10.33161449432373
    10. '           ' → logprob: -10.95661449432373

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0604592561721802
    2. '       ' → logprob: -1.1854592561721802
    3. ' or' → logprob: -1.8104592561721802
    4. ':' → logprob: -2.3104591369628906
    5. ':
' → logprob: -3.0604591369628906
    6. '0' → logprob: -3.4354591369628906
    7. '.' → logprob: -6.185459136962891
    8. ':return' → logprob: -6.560459136962891
    9. 'd' → logprob: -7.310459136962891
    10. 'return' → logprob: -7.810459136962891

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23915664851665497
    2. 'd' → logprob: -2.364156723022461
    3. ' return' → logprob: -2.364156723022461
    4. '           ' → logprob: -3.739156723022461
    5. ' d' → logprob: -7.864156723022461
    6. 'raise' → logprob: -7.989156723022461
    7. '       ' → logprob: -9.489156723022461
    8. ' raise' → logprob: -10.239156723022461
    9. '   ' → logprob: -11.489156723022461
    10. '               ' → logprob: -11.614156723022461

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693965435028076
    2. ' self' → logprob: -2.1269397735595703
    3. ' Point' → logprob: -12.12693977355957
    4. 'Point' → logprob: -12.25193977355957
    5. '	self' → logprob: -14.62693977355957
    6. ' ' → logprob: -15.37693977355957
    7. 'None' → logprob: -15.87693977355957
    8. '   ' → logprob: -16.00193977355957
    9. '(self' → logprob: -16.25193977355957
    10. '       ' → logprob: -16.25193977355957

Token 452: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.00026455431361682713
    2. '.point' → logprob: -8.625264167785645
    3. '.se' → logprob: -9.625264167785645
    4. '.p' → logprob: -12.125264167785645
    5. 'points' → logprob: -12.125264167785645
    6. '.' → logprob: -12.375264167785645
    7. ').' → logprob: -13.125264167785645
    8. '.Point' → logprob: -14.500264167785645
    9. '.po' → logprob: -14.500264167785645
    10. '	points' → logprob: -15.625264167785645

Token 453: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004311460361350328
    2. '0' → logprob: -7.750431060791016
    3. ' ' → logprob: -14.750431060791016
    4. '1' → logprob: -17.375431060791016
    5. ' [' → logprob: -18.000431060791016
    6. '   ' → logprob: -18.125431060791016
    7. 's' → logprob: -18.500431060791016
    8. '[
' → logprob: -18.625431060791016
    9. '
' → logprob: -18.750431060791016
    10. '```' → logprob: -19.375431060791016

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '[' → logprob: -15.75000286102295
    4. '
' → logprob: -16.875003814697266
    5. '۰' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.500003814697266
    7. '00' → logprob: -18.875003814697266
    8. '  ' → logprob: -19.062503814697266
    9. '1' → logprob: -19.125003814697266
    10. '٠' → logprob: -20.062503814697266

Token 455: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.693672776222229
    2. ']
' → logprob: -0.693672776222229
    3. ')' → logprob: -8.318673133850098
    4. '
' → logprob: -9.193673133850098
    5. ')
' → logprob: -9.318673133850098
    6. '       ' → logprob: -9.568673133850098
    7. ']
' → logprob: -11.568673133850098
    8. '])' → logprob: -12.943673133850098
    9. ']

' → logprob: -13.443673133850098
    10. ' ' → logprob: -13.443673133850098

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003087397664785385
    2. '
' → logprob: -6.003087520599365
    3. 'if' → logprob: -8.253087043762207
    4. ' if' → logprob: -8.378087043762207
    5. 'elif' → logprob: -9.503087043762207
    6. '        
' → logprob: -11.503087043762207
    7. '   ' → logprob: -11.753087043762207
    8. ' elif' → logprob: -12.003087043762207
    9. '.
' → logprob: -12.503087043762207
    10. ')
' → logprob: -12.503087043762207

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14263753592967987
    2. ' if' → logprob: -2.2676374912261963
    3. '       ' → logprob: -3.6426374912261963
    4. 'elif' → logprob: -5.767637729644775
    5. ' elif' → logprob: -9.767637252807617
    6. '
' → logprob: -13.142637252807617
    7. '   ' → logprob: -13.267637252807617
    8. '        
' → logprob: -14.017637252807617
    9. ')' → logprob: -14.392637252807617
    10. '	if' → logprob: -14.517637252807617

Token 458: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014164329506456852
    2. ' d' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.889163970947266
    4. '       ' → logprob: -15.139163970947266
    5. '           ' → logprob: -16.389163970947266
    6. '	d' → logprob: -16.889163970947266
    7. '    ' → logprob: -17.389163970947266
    8. ' ' → logprob: -17.764163970947266
    9. '>d' → logprob: -17.764163970947266
    10. '  ' → logprob: -18.014163970947266

Token 459: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03887246921658516
    2. ' >' → logprob: -3.288872480392456
    3. '>=' → logprob: -7.163872241973877
    4. ' >=' → logprob: -9.788872718811035
    5. ' ' → logprob: -15.288872718811035
    6. '>
' → logprob: -16.16387176513672
    7. '()>' → logprob: -16.91387176513672
    8. '>b' → logprob: -17.41387176513672
    9. ' >
' → logprob: -17.91387176513672
    10. '   ' → logprob: -18.03887176513672

Token 460: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196925416588783
    2. ' self' → logprob: -2.81196928024292
    3. '       ' → logprob: -14.061968803405762
    4. '           ' → logprob: -14.186968803405762
    5. '	self' → logprob: -17.061969757080078
    6. '=self' → logprob: -17.436969757080078
    7. '   ' → logprob: -17.436969757080078
    8. '(self' → logprob: -17.561969757080078
    9. ' ' → logprob: -17.811969757080078
    10. '[self' → logprob: -18.561969757080078

Token 461: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -3.1424973713001236e-05
    2. 'total' → logprob: -10.625031471252441
    3. '.length' → logprob: -12.375031471252441
    4. '.' → logprob: -12.875031471252441
    5. '.points' → logprob: -15.375031471252441
    6. ' .' → logprob: -17.250030517578125
    7. '.t' → logprob: -17.875030517578125
    8. ' total' → logprob: -18.375030517578125
    9. '	total' → logprob: -18.625030517578125
    10. '$total' → logprob: -19.875030517578125

Token 462: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: 0.0
    2. '_l' → logprob: -18.125
    3. '_distance' → logprob: -19.0
    4. 'length' → logprob: -19.625
    5. '_LENGTH' → logprob: -20.625
    6. '_' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. ' _' → logprob: -21.5
    9. '_lengths' → logprob: -21.625
    10. '_le' → logprob: -22.25

Token 463: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5763564109802246
    2. ':' → logprob: -0.8263564109802246
    3. '       ' → logprob: -8.701356887817383
    4. ':return' → logprob: -8.701356887817383
    5. ' :
' → logprob: -10.451356887817383
    6. '):
' → logprob: -10.826356887817383
    7. ':
' → logprob: -11.576356887817383
    8. '   ' → logprob: -11.951356887817383
    9. '):' → logprob: -12.201356887817383
    10. '           ' → logprob: -12.451356887817383

Token 464: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43696296215057373
    2. '       ' → logprob: -1.1869629621505737
    3. 'return' → logprob: -3.1869630813598633
    4. '           ' → logprob: -4.936963081359863
    5. '   ' → logprob: -8.061963081359863
    6. '	return' → logprob: -10.561963081359863
    7. ':return' → logprob: -10.561963081359863
    8. ' ' → logprob: -12.061963081359863
    9. '{return' → logprob: -13.186963081359863
    10. '    ' → logprob: -13.311963081359863

Token 465: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20141783356666565
    2. ' return' → logprob: -1.7014178037643433
    3. '           ' → logprob: -12.951417922973633
    4. '       ' → logprob: -13.326417922973633
    5. '	return' → logprob: -15.201417922973633
    6. '   ' → logprob: -15.576417922973633
    7. ' ' → logprob: -16.201417922973633
    8. 'eturn' → logprob: -16.951417922973633
    9. ':return' → logprob: -17.451417922973633
    10. '{return' → logprob: -18.326417922973633

Token 466: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931476593017578
    2. 'self' → logprob: -0.6931476593017578
    3. '	self' → logprob: -15.193147659301758
    4. ' ' → logprob: -16.193147659301758
    5. '   ' → logprob: -17.318147659301758
    6. '(self' → logprob: -17.943147659301758
    7. '  ' → logprob: -18.443147659301758
    8. '=self' → logprob: -18.443147659301758
    9. ' ' → logprob: -18.568147659301758
    10. 'Self' → logprob: -18.568147659301758

Token 467: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -5.080963092041202e-06
    2. 'points' → logprob: -12.375004768371582
    3. '.' → logprob: -14.875004768371582
    4. '	points' → logprob: -15.750004768371582
    5. '.p' → logprob: -15.875004768371582
    6. '.point' → logprob: -16.8750057220459
    7. ' points' → logprob: -16.8750057220459
    8. ' .' → logprob: -17.5000057220459
    9. '.Point' → logprob: -18.2500057220459
    10. '(points' → logprob: -19.0000057220459

Token 468: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -19.875
    3. '[
' → logprob: -21.125
    4. '-' → logprob: -22.0
    5. '   ' → logprob: -22.875
    6. ' [-' → logprob: -23.375
    7. '
' → logprob: -23.625
    8. '```' → logprob: -23.875
    9. '][-' → logprob: -24.75
    10. '[len' → logprob: -25.375

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.625001907348633
    4. '１' → logprob: -17.187501907348633
    5. '۱' → logprob: -17.187501907348633
    6. '   ' → logprob: -17.500001907348633
    7. '
' → logprob: -17.750001907348633
    8. '  ' → logprob: -18.375001907348633
    9. '0' → logprob: -18.562501907348633
    10. '

' → logprob: -18.625001907348633

Token 470: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.423175185918808
    2. '       ' → logprob: -1.2981752157211304
    3. ']' → logprob: -2.673175096511841
    4. '
' → logprob: -6.67317533493042
    5. ')
' → logprob: -7.17317533493042
    6. ' )' → logprob: -8.673174858093262
    7. '<|end|>' → logprob: -8.673174858093262
    8. ']
' → logprob: -8.798174858093262
    9. '}' → logprob: -9.048174858093262
    10. ' ]' → logprob: -9.548174858093262

Token 471: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6544500589370728
    2. '       ' → logprob: -0.7794500589370728
    3. '        
' → logprob: -3.904449939727783
    4. '    
' → logprob: -7.779449939727783
    5. '  
' → logprob: -7.904449939727783
    6. '

' → logprob: -9.029450416564941
    7. 'import' → logprob: -9.154450416564941
    8. '   ' → logprob: -9.154450416564941
    9. ' 
' → logprob: -9.654450416564941
    10. '
' → logprob: -10.029450416564941

Token 472: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.48644518852233887
    2. '       ' → logprob: -1.4864451885223389
    3. '#' (adapté à ' #') → logprob: -2.611445188522339
    4. 'left' → logprob: -3.111445188522339
    5. 'low' → logprob: -4.236445426940918
    6. 'for' → logprob: -4.861445426940918
    7. '```' → logprob: -5.111445426940918
    8. ' left' → logprob: -5.236445426940918
    9. 'lo' → logprob: -6.111445426940918
    10. ' for' → logprob: -6.611445426940918

Token 473: ' binary' (ID: 15600)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1538764238357544
    2. 'left' → logprob: -1.1538764238357544
    3. 'import' → logprob: -1.6538764238357544
    4. 'low' → logprob: -1.7788764238357544
    5. 'lo' → logprob: -4.903876304626465
    6. 'for' → logprob: -7.153876304626465
    7. 'from' → logprob: -7.653876304626465
    8. 'l' → logprob: -8.278876304626465
    9. ' left' → logprob: -10.403876304626465
    10. '       ' → logprob: -10.403876304626465

Token 474: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.4782635271549225
    2. 'search' → logprob: -0.9782634973526001
    3. '_search' → logprob: -5.4782633781433105
    4. '-search' → logprob: -14.103263854980469
    5. '_' → logprob: -15.228263854980469
    6. 'Search' → logprob: -16.60326385498047
    7. 'import' → logprob: -17.10326385498047
    8. '   ' → logprob: -17.35326385498047
    9. '```' → logprob: -17.47826385498047
    10. ' searching' → logprob: -17.85326385498047

Token 475: ' segment' (ID: 14806)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.560296356678009
    2. '       ' → logprob: -1.3102962970733643
    3. ' lo' → logprob: -2.6852962970733643
    4. ' left' → logprob: -3.6852962970733643
    5. 'left' → logprob: -3.9352962970733643
    6. 'low' → logprob: -4.310296535491943
    7. ' low' → logprob: -4.310296535491943
    8. 'lo' → logprob: -4.810296535491943
    9. ',' → logprob: -5.185296535491943
    10. ' import' → logprob: -5.810296535491943

Token 476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.786249577999115
    2. 'import' → logprob: -0.786249577999115
    3. 'left' → logprob: -3.9112496376037598
    4. '_lo' → logprob: -4.28624963760376
    5. 'low' → logprob: -4.53624963760376
    6. ',' → logprob: -4.66124963760376
    7. 'lo' → logprob: -4.91124963760376
    8. ' lo' → logprob: -5.03624963760376
    9. '_left' → logprob: -5.28624963760376
    10. ' left' → logprob: -5.41124963760376

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05501079931855202
    2. 'import' → logprob: -3.5550107955932617
    3. ' left' → logprob: -5.430010795593262
    4. ':' → logprob: -5.555010795593262
    5. 'left' → logprob: -5.805010795593262
    6. ',' → logprob: -6.055010795593262
    7. '_left' → logprob: -6.180010795593262
    8. ' =' → logprob: -6.555010795593262
    9. '_start' → logprob: -6.680010795593262
    10. '_index' → logprob: -7.055010795593262

Token 478: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -1.0778294801712036
    2. 'import' → logprob: -1.5778294801712036
    3. 'low' → logprob: -1.5778294801712036
    4. 'lo' → logprob: -2.327829360961914
    5. ' left' → logprob: -2.577829360961914
    6. ' lo' → logprob: -2.827829360961914
    7. ' low' → logprob: -4.827829360961914
    8. ' import' → logprob: -5.202829360961914
    9. '       ' → logprob: -7.327829360961914
    10. 'l' → logprob: -9.952829360961914

Token 479: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9440953135490417
    2. ' =' → logprob: -1.0690953731536865
    3. ',' → logprob: -1.3190953731536865
    4. ' ,' → logprob: -8.819095611572266
    5. ' ' → logprob: -9.944095611572266
    6. '<|end|>' → logprob: -10.694095611572266
    7. '0' → logprob: -10.819095611572266
    8. 'import' → logprob: -11.444095611572266
    9. ')' → logprob: -12.944095611572266
    10. ',right' → logprob: -13.194095611572266

Token 480: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.31326285004615784
    2. ' right' → logprob: -1.3132628202438354
    3. '	right' → logprob: -13.938262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '[right' → logprob: -17.188262939453125
    6. ',right' → logprob: -17.313262939453125
    7. '  ' → logprob: -18.813262939453125
    8. '=' → logprob: -19.063262939453125
    9. '```' → logprob: -19.188262939453125
    10. '<|end|>' → logprob: -19.188262939453125

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132897615432739
    2. '=' → logprob: -1.313289761543274
    3. ' ' → logprob: -10.563289642333984
    4. ',' → logprob: -13.438289642333984
    5. '<|end|>' → logprob: -15.188289642333984
    6. '=self' → logprob: -16.688289642333984
    7. ':' → logprob: -16.813289642333984
    8. ' =
' → logprob: -16.813289642333984
    9. '=len' → logprob: -16.938289642333984
    10. ' =)' → logprob: -16.938289642333984

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.500139236450195
    4. '۰' → logprob: -18.750139236450195
    5. '  ' → logprob: -20.000139236450195
    6. '       ' → logprob: -20.875139236450195
    7. '00' → logprob: -21.125139236450195
    8. '=' → logprob: -21.250139236450195
    9. '
' → logprob: -21.625139236450195
    10. '<|end|>' → logprob: -21.750139236450195

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -19.250003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '=' → logprob: -21.750003814697266
    6. '00' → logprob: -21.875003814697266
    7. '
' → logprob: -22.250003814697266
    8. '  ' → logprob: -22.250003814697266
    9. '1' → logprob: -23.000003814697266
    10. '０' → logprob: -23.250003814697266

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05919358506798744
    2. ' ,' → logprob: -3.4341936111450195
    3. ',len' → logprob: -3.6841936111450195
    4. ',length' → logprob: -10.18419361114502
    5. ',
' → logprob: -10.43419361114502
    6. '<|end|>' → logprob: -11.68419361114502
    7. ' ,
' → logprob: -12.05919361114502
    8. ' ' → logprob: -12.30919361114502
    9. '       ' → logprob: -12.55919361114502
    10. 'len' → logprob: -12.68419361114502

Token 485: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001170225441455841
    2. ' len' → logprob: -6.7511701583862305
    3. '(len' → logprob: -16.751171112060547
    4. '=len' → logprob: -16.751171112060547
    5. '	len' → logprob: -18.501171112060547
    6. '[len' → logprob: -19.126171112060547
    7. ',len' → logprob: -21.501171112060547
    8. '<len' → logprob: -22.001171112060547
    9. '       ' → logprob: -22.751171112060547
    10. '   ' → logprob: -24.626171112060547

Token 486: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.625014305114746
    3. 'self' → logprob: -12.250014305114746
    4. '(
' → logprob: -16.62501335144043
    5. ' self' → logprob: -17.37501335144043
    6. '(this' → logprob: -17.50001335144043
    7. '=self' → logprob: -18.00001335144043
    8. ' (' → logprob: -18.50001335144043
    9. '[self' → logprob: -18.50001335144043
    10. ')' → logprob: -19.37501335144043

Token 487: '.se' (ID: 5877)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39342179894447327
    2. 'self' → logprob: -1.3934217691421509
    3. '.se' → logprob: -3.0184218883514404
    4. '.self' → logprob: -4.268421649932861
    5. '.length' → logprob: -5.018421649932861
    6. ' self' → logprob: -5.893421649932861
    7. ').' → logprob: -6.643421649932861
    8. '.segment' → logprob: -6.893421649932861
    9. '.' → logprob: -7.768421649932861
    10. 'segments' → logprob: -7.893421649932861

Token 488: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -2.6537622034084052e-05
    2. 'segments' → logprob: -11.37502670288086
    3. 'g' → logprob: -11.75002670288086
    4. 'ments' → logprob: -12.12502670288086
    5. 'gements' → logprob: -13.50002670288086
    6. 'gment' → logprob: -15.50002670288086
    7. 'r' → logprob: -17.00002670288086
    8. 'Segments' → logprob: -17.12502670288086
    9. '_segments' → logprob: -17.50002670288086
    10. 'gm' → logprob: -18.50002670288086

Token 489: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008820313960313797
    2. ' -' → logprob: -5.133820533752441
    3. '-' → logprob: -6.633820533752441
    4. ')-' → logprob: -6.883820533752441
    5. ' )' → logprob: -7.883820533752441
    6. '<|end|>' → logprob: -9.133820533752441
    7. '-)' → logprob: -10.508820533752441
    8. '       ' → logprob: -11.633820533752441
    9. '()' → logprob: -12.008820533752441
    10. ')
' → logprob: -12.258820533752441

Token 490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5492463111877441
    2. ' -' → logprob: -0.9242463111877441
    3. '<|end|>' → logprob: -4.299246311187744
    4. '
' → logprob: -4.424246311187744
    5. '<|end|>' → logprob: -9.049245834350586
    6. '```' → logprob: -10.424245834350586
    7. ' 
' → logprob: -11.174245834350586
    8. ')' → logprob: -11.174245834350586
    9. ' ' → logprob: -11.174245834350586
    10. '       ' → logprob: -11.924245834350586

Token 491: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '<|end|>' → logprob: -15.003178596496582
    4. '```' → logprob: -16.503177642822266
    5. '   ' → logprob: -16.753177642822266
    6. '0' → logprob: -16.753177642822266
    7. '  ' → logprob: -18.378177642822266
    8. '       ' → logprob: -18.878177642822266
    9. '2' → logprob: -19.003177642822266
    10. '
' → logprob: -19.003177642822266

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -18.625036239624023
    4. '<|end|>' → logprob: -18.750036239624023
    5. '   ' → logprob: -19.250036239624023
    6. '  ' → logprob: -19.750036239624023
    7. '0' → logprob: -20.000036239624023
    8. '2' → logprob: -20.250036239624023
    9. '
' → logprob: -20.750036239624023
    10. ',' → logprob: -21.562536239624023

Token 493: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5762564539909363
    2. '<|end|>' → logprob: -0.9512564539909363
    3. '       ' → logprob: -3.326256513595581
    4. '<|end|>' → logprob: -5.451256275177002
    5. '  
' → logprob: -6.201256275177002
    6. '```' → logprob: -6.326256275177002
    7. ',' → logprob: -6.326256275177002
    8. ' 
' → logprob: -6.451256275177002
    9. '        
' → logprob: -7.076256275177002
    10. ')' → logprob: -7.201256275177002

Token 494: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.2987920045852661
    2. ' ' → logprob: -1.7987920045852661
    3. '
' → logprob: -2.5487918853759766
    4. '  
' → logprob: -5.298791885375977
    5. ' while' → logprob: -6.048791885375977
    6. '   ' → logprob: -6.423791885375977
    7. '<|end|>' → logprob: -6.423791885375977
    8. '    
' → logprob: -7.048791885375977
    9. '[' → logprob: -7.548791885375977
    10. '   
' → logprob: -7.673791885375977

Token 495: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6454395651817322
    2. ' 
' → logprob: -1.395439624786377
    3. 'while' (adapté à ' while') → logprob: -2.395439624786377
    4. ' ' → logprob: -2.645439624786377
    5. '       ' → logprob: -3.520439624786377
    6. '
' → logprob: -3.520439624786377
    7. '        
' → logprob: -6.020439624786377
    8. '  
' → logprob: -6.520439624786377
    9. '   ' → logprob: -7.520439624786377
    10. '	while' → logprob: -7.520439624786377

Token 496: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3132794201374054
    2. 'left' → logprob: -1.313279390335083
    3. ' lef' → logprob: -11.063279151916504
    4. '	left' → logprob: -13.313279151916504
    5. 'lef' → logprob: -16.43828010559082
    6. '[left' → logprob: -16.56328010559082
    7. '_left' → logprob: -17.06328010559082
    8. '(left' → logprob: -17.06328010559082
    9. ' ' → logprob: -17.93828010559082
    10. '   ' → logprob: -18.56328010559082

Token 497: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16022931039333344
    2. '<=' → logprob: -1.9102293252944946
    3. ')<=' → logprob: -12.910229682922363
    4. ']<=' → logprob: -13.535229682922363
    5. '<|end|>' → logprob: -14.160229682922363
    6. ' <' → logprob: -15.660229682922363
    7. '<' → logprob: -15.785229682922363
    8. ' <=",' → logprob: -16.285228729248047
    9. ' ' → logprob: -16.285228729248047
    10. ' ≤' → logprob: -16.785228729248047

Token 498: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03364893049001694
    2. ' right' → logprob: -3.40864896774292
    3. '	right' → logprob: -13.033648490905762
    4. ' ' → logprob: -14.908648490905762
    5. '[right' → logprob: -15.908648490905762
    6. '
' → logprob: -16.283649444580078
    7. '_right' → logprob: -16.408649444580078
    8. '(right' → logprob: -16.783649444580078
    9. ',right' → logprob: -16.908649444580078
    10. '   ' → logprob: -17.283649444580078

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020596778020262718
    2. ':
' → logprob: -3.895596742630005
    3. ' :' → logprob: -11.020596504211426
    4. ',' → logprob: -11.520596504211426
    5. '<|end|>' → logprob: -11.520596504211426
    6. '       ' → logprob: -12.020596504211426
    7. '):
' → logprob: -13.145596504211426
    8. ':

' → logprob: -13.395596504211426
    9. ' and' → logprob: -13.395596504211426
    10. '):' → logprob: -13.520596504211426

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07426035404205322
    2. ' ' → logprob: -3.8242602348327637
    3. ',' → logprob: -4.324260234832764
    4. ':' → logprob: -4.574260234832764
    5. '       ' → logprob: -4.949260234832764
    6. ' 
' → logprob: -5.699260234832764
    7. '<|end|>' → logprob: -5.949260234832764
    8. ':
' → logprob: -6.199260234832764
    9. '   ' → logprob: -6.199260234832764
    10. ')' → logprob: -6.824260234832764

Token 501: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.019347848370671272
    2. 'mid' (adapté à ' mid') → logprob: -4.144347667694092
    3. ' middle' → logprob: -6.019347667694092
    4. ' midpoint' → logprob: -7.394347667694092
    5. 'middle' → logprob: -9.51934814453125
    6. '           ' → logprob: -9.64434814453125
    7. ' mids' → logprob: -10.26934814453125
    8. '_mid' → logprob: -10.64434814453125
    9. '[mid' → logprob: -10.89434814453125
    10. 'm' → logprob: -11.14434814453125

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4445384740829468
    2. '=' → logprob: -1.0695384740829468
    3. '<|end|>' → logprob: -4.569538593292236
    4. ' ' → logprob: -5.444538593292236
    5. ':' → logprob: -7.944538593292236
    6. ')' → logprob: -7.944538593292236
    7. ',' → logprob: -8.444538116455078
    8. '<|end|>' → logprob: -10.319538116455078
    9. ']' → logprob: -11.569538116455078
    10. '```' → logprob: -11.694538116455078

Token 503: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.3868935704231262
    2. ' (' → logprob: -1.1368935108184814
    3. ' left' → logprob: -11.261893272399902
    4. 'left' → logprob: -12.886893272399902
    5. '[left' → logprob: -12.886893272399902
    6. '(right' → logprob: -13.136893272399902
    7. '           ' → logprob: -13.261893272399902
    8. ' ' → logprob: -14.511893272399902
    9. '   ' → logprob: -15.761893272399902
    10. ',left' → logprob: -16.01189422607422

Token 504: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -9.088346359931165e-07
    2. ' left' → logprob: -14.000000953674316
    3. '	left' → logprob: -19.875
    4. 'lef' → logprob: -20.0
    5. '[left' → logprob: -20.125
    6. 'right' → logprob: -20.125
    7. '(left' → logprob: -20.875
    8. '_left' → logprob: -22.625
    9. ')' → logprob: -22.875
    10. '.left' → logprob: -23.125

Token 505: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.126929372549057
    2. '+' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.50192928314209
    4. ')' → logprob: -14.50192928314209
    5. ' +
' → logprob: -15.37692928314209
    6. '+
' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.626930236816406
    8. ' )' → logprob: -18.876930236816406
    9. ')+' → logprob: -19.501930236816406
    10. '```' → logprob: -19.626930236816406

Token 506: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0019289902411401272
    2. ' right' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.75192928314209
    4. '	right' → logprob: -16.251928329467773
    5. '   ' → logprob: -16.376928329467773
    6. '
' → logprob: -18.001928329467773
    7. '(right' → logprob: -18.251928329467773
    8. '[right' → logprob: -18.376928329467773
    9. ')' → logprob: -19.126928329467773
    10. '```' → logprob: -19.376928329467773

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.888114098226652e-05
    2. ')//' → logprob: -9.375088691711426
    3. ' )' → logprob: -12.750088691711426
    4. ')>>' → logprob: -13.750088691711426
    5. ')
' → logprob: -16.500089645385742
    6. '）' → logprob: -18.875089645385742
    7. ' ' → logprob: -20.375089645385742
    8. '//' → logprob: -20.375089645385742
    9. ' ' → logprob: -20.375089645385742
    10. ']' → logprob: -20.500089645385742

Token 508: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003289178479462862
    2. ' //' → logprob: -5.878289222717285
    3. ' )' → logprob: -8.503289222717285
    4. '//' → logprob: -9.003289222717285
    5. ')//' → logprob: -9.503289222717285
    6. ' >>' → logprob: -10.003289222717285
    7. '>>' → logprob: -11.378289222717285
    8. ']' → logprob: -11.378289222717285
    9. ')>>' → logprob: -12.128289222717285
    10. '```' → logprob: -12.878289222717285

Token 509: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.250911712646484
    4. '```' → logprob: -18.625911712646484
    5. '  ' → logprob: -18.875911712646484
    6. '1' → logprob: -18.875911712646484
    7. '۲' → logprob: -18.875911712646484
    8. 'mid' → logprob: -19.688411712646484
    9. '3' → logprob: -19.813411712646484
    10. '
' → logprob: -20.188411712646484

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.00004005432129
    4. '```' → logprob: -19.12504005432129
    5. '۲' → logprob: -19.81254005432129
    6. '  ' → logprob: -20.12504005432129
    7. '=' → logprob: -20.43754005432129
    8. '
' → logprob: -20.50004005432129
    9. '1' → logprob: -20.62504005432129
    10. '２' → logprob: -20.87504005432129

Token 511: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4076419770717621
    2. '           ' → logprob: -1.1576420068740845
    3. '       ' → logprob: -5.282641887664795
    4. ' if' → logprob: -5.407641887664795
    5. '<|end|>' → logprob: -5.657641887664795
    6. ',' → logprob: -6.032641887664795
    7. 'if' → logprob: -6.657641887664795
    8. '            
' → logprob: -7.532641887664795
    9. '  
' → logprob: -7.657641887664795
    10. ')' → logprob: -7.782641887664795

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009795872494578362
    2. ' if' → logprob: -5.134795665740967
    3. 'if' → logprob: -6.384795665740967
    4. '       ' → logprob: -6.759795665740967
    5. 'd' → logprob: -7.509795665740967
    6. '   ' → logprob: -8.759796142578125
    7. '
' → logprob: -9.259796142578125
    8. '            
' → logprob: -9.634796142578125
    9. ',' → logprob: -11.259796142578125
    10. '		' → logprob: -11.384796142578125

Token 513: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2320510894060135
    2. 'mid' → logprob: -1.607051134109497
    3. ' if' → logprob: -6.482050895690918
    4. '           ' → logprob: -6.482050895690918
    5. 'start' → logprob: -6.607050895690918
    6. 'seg' → logprob: -6.857050895690918
    7. 'current' → logprob: -7.607050895690918
    8. 'segment' → logprob: -8.232050895690918
    9. 'curr' → logprob: -9.357050895690918
    10. ' mid' → logprob: -9.482050895690918

Token 514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032253677491098642
    2. ' self' → logprob: -5.753225326538086
    3. 'd' → logprob: -10.003225326538086
    4. '	self' → logprob: -13.378225326538086
    5. '   ' → logprob: -14.503225326538086
    6. '(self' → logprob: -15.378225326538086
    7. ' ' → logprob: -16.378225326538086
    8. '=self' → logprob: -17.878225326538086
    9. ' d' → logprob: -18.378225326538086
    10. '  ' → logprob: -18.503225326538086

Token 515: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -5.5577775128767826e-06
    2. 'length' → logprob: -12.500005722045898
    3. ' .' → logprob: -14.125005722045898
    4. '.total' → logprob: -14.750005722045898
    5. '.' → logprob: -15.250005722045898
    6. '.l' → logprob: -16.7500057220459
    7. '
' → logprob: -17.2500057220459
    8. ' ' → logprob: -17.3750057220459
    9. ':length' → logprob: -17.3750057220459
    10. '	length' → logprob: -17.5000057220459

Token 516: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6240566083070007e-06
    2. 'prefix' → logprob: -14.375001907348633
    3. '_prefix' → logprob: -14.625001907348633
    4. '_lengths' → logprob: -15.750001907348633
    5. 'suffix' → logprob: -16.750001907348633
    6. 'length' → logprob: -16.875001907348633
    7. '_s' → logprob: -17.000001907348633
    8. ' s' → logprob: -17.000001907348633
    9. 'с' → logprob: -17.750001907348633
    10. 'ss' → logprob: -17.875001907348633

Token 517: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -1.771655115589965e-05
    2. 'prefix' → logprob: -11.250018119812012
    3. '_' → logprob: -13.000018119812012
    4. '_suffix' → logprob: -13.625018119812012
    5. '_pref' → logprob: -15.000018119812012
    6. '```' → logprob: -15.500018119812012
    7. '_mid' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.500017166137695
    9. '_PREFIX' → logprob: -16.625017166137695
    10. '[' → logprob: -17.000017166137695

Token 518: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -2.5776860184123507e-06
    2. '[m' → logprob: -13.12500286102295
    3. '[
' → logprob: -15.00000286102295
    4. '[' → logprob: -16.375001907348633
    5. '
' → logprob: -17.000001907348633
    6. 'mid' → logprob: -17.000001907348633
    7. ' [' → logprob: -18.625001907348633
    8. '(mid' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '[mem' → logprob: -19.750001907348633

Token 519: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.049108862876892
    2. '<' → logprob: -1.299108862876892
    3. ']' → logprob: -1.799108862876892
    4. '<=' → logprob: -2.0491089820861816
    5. ' <' → logprob: -3.0491089820861816
    6. ']<=' → logprob: -4.299108982086182
    7. ' <=' → logprob: -4.424108982086182
    8. ']<' → logprob: -5.174108982086182
    9. ' ' → logprob: -6.424108982086182
    10. ' +' → logprob: -6.674108982086182

Token 520: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.14510184526443481
    2. ' <=' → logprob: -2.02010178565979
    3. '<' → logprob: -6.395102024078369
    4. '>' → logprob: -7.645102024078369
    5. ' <' → logprob: -8.395101547241211
    6. ' >' → logprob: -10.395101547241211
    7. ' ' → logprob: -12.270101547241211
    8. ')<=' → logprob: -12.395101547241211
    9. ']<=' → logprob: -12.645101547241211
    10. '≤' → logprob: -12.895101547241211

Token 521: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012510828673839569
    2. ' d' → logprob: -4.387510776519775
    3. '	d' → logprob: -14.137511253356934
    4. '
' → logprob: -15.887511253356934
    5. '_d' → logprob: -16.387510299682617
    6. ')d' → logprob: -16.512510299682617
    7. '>d' → logprob: -17.387510299682617
    8. ' ' → logprob: -17.512510299682617
    9. '   ' → logprob: -17.637510299682617
    10. '           ' → logprob: -18.387510299682617

Token 522: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3871779441833496
    2. '<' → logprob: -1.1371779441833496
    3. ' and' → logprob: -9.137178421020508
    4. 'and' → logprob: -9.512178421020508
    5. '<n' → logprob: -10.387178421020508
    6. '<m' → logprob: -10.512178421020508
    7. ':' → logprob: -11.137178421020508
    8. '<s' → logprob: -11.637178421020508
    9. '<len' → logprob: -12.137178421020508
    10. ':
' → logprob: -12.262178421020508

Token 523: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011772511061280966
    2. ' self' → logprob: -6.7511773109436035
    3. '           ' → logprob: -12.126176834106445
    4. '=self' → logprob: -13.751176834106445
    5. '[self' → logprob: -15.501176834106445
    6. '	self' → logprob: -16.001176834106445
    7. '(self' → logprob: -16.501176834106445
    8. '       ' → logprob: -17.001176834106445
    9. '               ' → logprob: -17.251176834106445
    10. '   ' → logprob: -17.501176834106445

Token 524: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.11294785141944885
    2. 'length' → logprob: -2.237947940826416
    3. 'ength' → logprob: -9.237947463989258
    4. '[length' → logprob: -11.862947463989258
    5. '.' → logprob: -12.612947463989258
    6. ' .' → logprob: -12.737947463989258
    7. '	length' → logprob: -12.862947463989258
    8. 's' → logprob: -13.112947463989258
    9. ' lengths' → logprob: -13.112947463989258
    10. '   ' → logprob: -13.237947463989258

Token 525: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030357904732227325
    2. '_prefix' → logprob: -3.655357837677002
    3. 'prefix' → logprob: -5.530357837677002
    4. '_lengths' → logprob: -10.78035831451416
    5. 'ss' → logprob: -11.28035831451416
    6. 'es' → logprob: -11.40535831451416
    7. 'suffix' → logprob: -11.78035831451416
    8. '_suffix' → logprob: -11.90535831451416
    9. '_s' → logprob: -12.15535831451416
    10. 'x' → logprob: -12.65535831451416

Token 526: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.016076600179076195
    2. 'prefix' → logprob: -4.141076564788818
    3. '[mid' → logprob: -11.391077041625977
    4. 'refix' → logprob: -11.891077041625977
    5. 'Prefix' → logprob: -12.391077041625977
    6. 'mid' → logprob: -12.516077041625977
    7. '_pref' → logprob: -12.641077041625977
    8. '_[' → logprob: -13.016077041625977
    9. '_PREFIX' → logprob: -13.266077041625977
    10. '_suffix' → logprob: -14.141077041625977

Token 527: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -6.704273118884885e-07
    2. 'mid' → logprob: -14.375000953674316
    3. '[' → logprob: -17.625
    4. '[m' → logprob: -17.75
    5. '[
' → logprob: -18.125
    6. '(mid' → logprob: -19.0
    7. ' [' → logprob: -20.75
    8. '   ' → logprob: -20.75
    9. '
' → logprob: -21.5
    10. '[mem' → logprob: -21.625

Token 528: ' +' (ID: 659)
  Prédit: '[mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.43139520287513733
    2. '+' → logprob: -1.181395173072815
    3. 'mid' → logprob: -3.1813952922821045
    4. ' +' → logprob: -6.681395053863525
    5. '[' → logprob: -7.556395053863525
    6. '(mid' → logprob: -9.181395530700684
    7. ' mid' → logprob: -9.931395530700684
    8. '
' → logprob: -10.806395530700684
    9. '   ' → logprob: -10.931395530700684
    10. '[
' → logprob: -11.056395530700684

Token 529: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -19.875001907348633
    5. '2' → logprob: -20.000001907348633
    6. '
' → logprob: -20.312501907348633
    7. '+' → logprob: -20.375001907348633
    8. '۱' → logprob: -20.875001907348633
    9. '{' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.375001907348633

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.187503814697266
    4. '2' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.812503814697266
    6. '
' → logprob: -18.375003814697266
    7. '۱' → logprob: -18.937503814697266
    8. '  ' → logprob: -19.187503814697266
    9. ']' → logprob: -19.250003814697266
    10. '+' → logprob: -19.562503814697266

Token 531: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5015754103660583
    2. ']:
' → logprob: -1.5015754699707031
    3. '):
' → logprob: -2.626575469970703
    4. ':' → logprob: -2.876575469970703
    5. '           ' → logprob: -3.376575469970703
    6. '       ' → logprob: -5.251575469970703
    7. ']:' → logprob: -6.126575469970703
    8. '               ' → logprob: -7.501575469970703
    9. ']' → logprob: -7.876575469970703
    10. '):' → logprob: -8.751575469970703

Token 532: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5287918448448181
    2. '               ' → logprob: -0.9037918448448181
    3. ':' → logprob: -5.528791904449463
    4. ':
' → logprob: -7.028791904449463
    5. 'left' → logprob: -9.403791427612305
    6. '[left' → logprob: -9.403791427612305
    7. ' left' → logprob: -9.528791427612305
    8. '):
' → logprob: -10.028791427612305
    9. ')' → logprob: -10.028791427612305
    10. ':left' → logprob: -10.153791427612305

Token 533: ' seg' (ID: 3055)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4772357642650604
    2. ' t' → logprob: -1.1022357940673828
    3. '               ' → logprob: -4.102235794067383
    4. ' segment' → logprob: -4.477235794067383
    5. 'segment' → logprob: -4.727235794067383
    6. 'seg' (adapté à ' seg') → logprob: -5.727235794067383
    7. ' seg' → logprob: -6.352235794067383
    8. '           ' → logprob: -6.602235794067383
    9. 'offset' → logprob: -6.852235794067383
    10. 'break' → logprob: -7.102235794067383

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028423182666301727
    2. '=' → logprob: -6.127842426300049
    3. 'ment' → logprob: -8.25284194946289
    4. ' ' → logprob: -8.62784194946289
    5. '.' → logprob: -9.75284194946289
    6. 'mentation' → logprob: -10.00284194946289
    7. 'gment' → logprob: -10.12784194946289
    8. 'm' → logprob: -11.12784194946289
    9. ',' → logprob: -12.00284194946289
    10. '	' → logprob: -12.12784194946289

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234713666141033
    2. ' self' → logprob: -5.255234718322754
    3. '           ' → logprob: -15.005234718322754
    4. '	self' → logprob: -15.755234718322754
    5. '       ' → logprob: -16.005233764648438
    6. '   ' → logprob: -16.255233764648438
    7. '(self' → logprob: -16.755233764648438
    8. ' ' → logprob: -16.755233764648438
    9. '=self' → logprob: -17.130233764648438
    10. '[self' → logprob: -17.380233764648438

Token 536: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -8.780830830801278e-05
    2. 'segments' → logprob: -9.37508773803711
    3. 'se' → logprob: -13.00008773803711
    4. '.' → logprob: -15.25008773803711
    5. '	se' → logprob: -15.37508773803711
    6. '.seg' → logprob: -16.50008773803711
    7. '.s' → logprob: -17.00008773803711
    8. 's' → logprob: -17.12508773803711
    9. 'Segments' → logprob: -18.00008773803711
    10. '.segment' → logprob: -18.12508773803711

Token 537: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.0003472633252386004
    2. 'ments' → logprob: -8.000347137451172
    3. 'g' → logprob: -12.000347137451172
    4. 'gment' → logprob: -13.000347137451172
    5. 'gements' → logprob: -13.250347137451172
    6. 'segments' → logprob: -13.375347137451172
    7. 'lements' → logprob: -17.875347137451172
    8. 'agments' → logprob: -18.125347137451172
    9. '```' → logprob: -18.250347137451172
    10. '[' → logprob: -18.500347137451172

Token 538: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.000116655595775228
    2. '[m' → logprob: -9.500116348266602
    3. '[' → logprob: -10.125116348266602
    4. '[
' → logprob: -14.625116348266602
    5. 'mid' → logprob: -14.750116348266602
    6. '[mem' → logprob: -15.000116348266602
    7. ' [' → logprob: -15.250116348266602
    8. '[min' → logprob: -16.3751163482666
    9. '
' → logprob: -17.0001163482666
    10. '\[' → logprob: -17.6251163482666

Token 539: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9196537733078003
    2. ')
' → logprob: -1.0446537733078003
    3. ')' → logprob: -1.4196537733078003
    4. '           ' → logprob: -5.54465389251709
    5. ',' → logprob: -6.91965389251709
    6. ']
' → logprob: -6.91965389251709
    7. ']' → logprob: -7.54465389251709
    8. '
' → logprob: -7.66965389251709
    9. '                ' → logprob: -8.79465389251709
    10. '       ' → logprob: -8.91965389251709

Token 540: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21531790494918823
    2. ' t' → logprob: -2.090317964553833
    3. 't' → logprob: -2.715317964553833
    4. ' remainder' → logprob: -6.840317726135254
    5. 'offset' → logprob: -7.465317726135254
    6. ' offset' → logprob: -7.590317726135254
    7. '           ' → logprob: -8.090317726135254
    8. ' break' → logprob: -8.215317726135254
    9. ',' → logprob: -8.215317726135254
    10. '                
' → logprob: -9.090317726135254

Token 541: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.08359045535326004
    2. 'break' → logprob: -3.583590507507324
    3. 'offset' → logprob: -3.708590507507324
    4. 'local' → logprob: -4.208590507507324
    5. '               ' → logprob: -5.333590507507324
    6. 'rel' → logprob: -6.583590507507324
    7. 'dist' → logprob: -6.708590507507324
    8. ' t' → logprob: -6.708590507507324
    9. 'segment' → logprob: -6.958590507507324
    10. 'relative' → logprob: -7.333590507507324

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22542375326156616
    2. '=' → logprob: -1.600423812866211
    3. ' ' → logprob: -12.475423812866211
    4. ')' → logprob: -12.850423812866211
    5. '<|end|>' → logprob: -12.975423812866211
    6. 's' → logprob: -14.100423812866211
    7. ',' → logprob: -14.350423812866211
    8. 'd' → logprob: -14.850423812866211
    9. ':' → logprob: -15.725423812866211
    10. '.' → logprob: -16.10042381286621

Token 543: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011048289015889168
    2. ' (' → logprob: -4.511048316955566
    3. '(' → logprob: -15.636048316955566
    4. '(D' → logprob: -15.636048316955566
    5. '(s' → logprob: -16.63604736328125
    6. '   ' → logprob: -17.13604736328125
    7. ' ' → logprob: -17.51104736328125
    8. '
' → logprob: -17.63604736328125
    9. '(self' → logprob: -18.26104736328125
    10. '(t' → logprob: -19.01104736328125

Token 544: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019300628919154406
    2. ' d' → logprob: -6.251930236816406
    3. '(d' → logprob: -13.751930236816406
    4. '	d' → logprob: -15.626930236816406
    5. ')d' → logprob: -16.251930236816406
    6. '
' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.501930236816406
    8. '_d' → logprob: -17.751930236816406
    9. '           ' → logprob: -18.251930236816406
    10. '```' → logprob: -18.376930236816406

Token 545: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012509997934103012
    2. '-' → logprob: -4.387509822845459
    3. ' ' → logprob: -15.012510299682617
    4. ' ' → logprob: -17.012510299682617
    5. ' -
' → logprob: -17.637510299682617
    6. '   ' → logprob: -17.637510299682617
    7. ')' → logprob: -18.637510299682617
    8. ',' → logprob: -18.887510299682617
    9. '[' → logprob: -19.700010299682617
    10. '  ' → logprob: -19.700010299682617

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324652671813965
    2. ' self' → logprob: -3.7732465267181396
    3. '           ' → logprob: -15.273246765136719
    4. '[self' → logprob: -15.648246765136719
    5. 'length' → logprob: -16.27324676513672
    6. '(self' → logprob: -16.27324676513672
    7. '```' → logprob: -16.52324676513672
    8. ')' → logprob: -16.64824676513672
    9. '   ' → logprob: -16.77324676513672
    10. ' ' → logprob: -16.89824676513672

Token 547: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.003180563682690263
    2. 'length' → logprob: -5.753180503845215
    3. ' .' → logprob: -13.378180503845215
    4. '.' → logprob: -14.753180503845215
    5. '[length' → logprob: -15.878180503845215
    6. '	length' → logprob: -16.12818145751953
    7. '.l' → logprob: -16.12818145751953
    8. ':length' → logprob: -16.37818145751953
    9. '_lengths' → logprob: -16.37818145751953
    10. 'ength' → logprob: -16.75318145751953

Token 548: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013352400856092572
    2. '_prefix' → logprob: -6.751335144042969
    3. 'prefix' → logprob: -8.751335144042969
    4. 'es' → logprob: -12.751335144042969
    5. 'ss' → logprob: -13.751335144042969
    6. 'refix' → logprob: -14.251335144042969
    7. '_lengths' → logprob: -14.376335144042969
    8. 'x' → logprob: -15.376335144042969
    9. '[s' → logprob: -15.876335144042969
    10. '_s' → logprob: -16.12633514404297

Token 549: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0015586663503199816
    2. 'prefix' → logprob: -6.501558780670166
    3. 'refix' → logprob: -10.001558303833008
    4. 'Prefix' → logprob: -12.251558303833008
    5. '-prefix' → logprob: -13.751558303833008
    6. '_PREFIX' → logprob: -14.001558303833008
    7. '```' → logprob: -14.251558303833008
    8. '_suffix' → logprob: -14.376558303833008
    9. '[mid' → logprob: -14.501558303833008
    10. 'PREFIX' → logprob: -14.876558303833008

Token 550: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.00000286102295
    3. '[m' → logprob: -14.25000286102295
    4. '[
' → logprob: -16.000003814697266
    5. ' [' → logprob: -16.000003814697266
    6. '[mem' → logprob: -17.125003814697266
    7. 'mid' → logprob: -17.875003814697266
    8. ')[' → logprob: -19.375003814697266
    9. '[min' → logprob: -19.375003814697266
    10. '(mid' → logprob: -20.125003814697266

Token 551: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011868205183418468
    2. ' )' → logprob: -9.375118255615234
    3. ')/' → logprob: -10.375118255615234
    4. ')/(' → logprob: -14.125118255615234
    5. '[' → logprob: -14.500118255615234
    6. ']' → logprob: -14.875118255615234
    7. '   ' → logprob: -15.500118255615234
    8. '])' → logprob: -15.750118255615234
    9. ')
' → logprob: -15.875118255615234
    10. ' ' → logprob: -16.000118255615234

Token 552: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.38707852363586426
    2. ' /' → logprob: -1.1370785236358643
    3. ')' → logprob: -8.512078285217285
    4. ')/' → logprob: -12.762078285217285
    5. '/
' → logprob: -13.262078285217285
    6. ' /
' → logprob: -14.512078285217285
    7. '(seg' → logprob: -15.762078285217285
    8. ' ' → logprob: -15.887078285217285
    9. ' )' → logprob: -16.0120792388916
    10. '.' → logprob: -16.5120792388916

Token 553: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.048636533319950104
    2. ' seg' → logprob: -3.0486364364624023
    3. '(seg' → logprob: -9.923636436462402
    4. 'segment' → logprob: -16.92363739013672
    5. ' (' → logprob: -17.67363739013672
    6. '_seg' → logprob: -17.67363739013672
    7. 'se' → logprob: -17.67363739013672
    8. '(' → logprob: -17.79863739013672
    9. 'segments' → logprob: -18.54863739013672
    10. 'Seg' → logprob: -18.92363739013672

Token 554: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: 0.0
    2. '.' → logprob: -17.625
    3. 'length' → logprob: -18.0
    4. '.l' → logprob: -18.875
    5. '.size' → logprob: -19.125
    6. ' .' → logprob: -19.375
    7. '.width' → logprob: -19.5
    8. '.len' → logprob: -20.75
    9. '.LENGTH' → logprob: -20.875
    10. '.height' → logprob: -21.625

Token 555: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07429730892181396
    2. ')' → logprob: -3.5742974281311035
    3. ')
' → logprob: -3.8242974281311035
    4. '
' → logprob: -4.3242974281311035
    5. '           ' → logprob: -5.0742974281311035
    6. '                
' → logprob: -6.9492974281311035
    7. 'return' → logprob: -7.5742974281311035
    8. '       ' → logprob: -8.199296951293945
    9. '            
' → logprob: -9.449296951293945
    10. ' return' → logprob: -9.949296951293945

Token 556: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06827002018690109
    2. ' return' → logprob: -2.943269968032837
    3. 'return' → logprob: -4.693270206451416
    4. '           ' → logprob: -6.443270206451416
    5. '       ' → logprob: -6.568270206451416
    6. ')' → logprob: -7.318270206451416
    7. '
' → logprob: -8.943269729614258
    8. ' ' → logprob: -9.568269729614258
    9. '                
' → logprob: -9.818269729614258
    10. ' 
' → logprob: -10.193269729614258

Token 557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20378249883651733
    2. ' return' → logprob: -1.703782558441162
    3. '               ' → logprob: -6.078782558441162
    4. '	return' → logprob: -9.828782081604004
    5. '           ' → logprob: -12.203782081604004
    6. ':return' → logprob: -12.203782081604004
    7. '       ' → logprob: -12.703782081604004
    8. '
' → logprob: -12.703782081604004
    9. ')return' → logprob: -13.203782081604004
    10. 'eturn' → logprob: -13.828782081604004

Token 558: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.25193363428115845
    2. ' seg' → logprob: -1.5019335746765137
    3. 'self' → logprob: -13.126934051513672
    4. '(seg' → logprob: -13.126934051513672
    5. 'segment' → logprob: -15.001934051513672
    6. ' self' → logprob: -16.001934051513672
    7. 'se' → logprob: -17.126934051513672
    8. ' segment' → logprob: -17.376934051513672
    9. 'Segment' → logprob: -17.626934051513672
    10. 'Seg' → logprob: -17.876934051513672

Token 559: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -15.875004768371582
    4. '	point' → logprob: -16.2500057220459
    5. 'point' → logprob: -16.5000057220459
    6. ' point' → logprob: -16.6250057220459
    7. '(point' → logprob: -18.1250057220459
    8. '.Point' → logprob: -18.6250057220459
    9. '.p' → logprob: -19.8750057220459
    10. '.points' → logprob: -20.1250057220459

Token 560: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: 0.0
    2. '_' → logprob: -17.625
    3. 'at' → logprob: -17.875
    4. '	at' → logprob: -20.0
    5. '_to' → logprob: -20.75
    6. ' at' → logprob: -21.0
    7. '(at' → logprob: -21.25
    8. 'At' → logprob: -21.25
    9. '_a' → logprob: -21.625
    10. '   ' → logprob: -21.875

Token 561: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.16051869094371796
    2. '(' → logprob: -1.9105186462402344
    3. 't' → logprob: -8.660518646240234
    4. '(
' → logprob: -9.035518646240234
    5. ' (' → logprob: -13.660518646240234
    6. ' t' → logprob: -14.035518646240234
    7. '(

' → logprob: -17.035518646240234
    8. '()' → logprob: -18.035518646240234
    9. '((' → logprob: -18.035518646240234
    10. '(s' → logprob: -18.660518646240234

Token 562: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000915039679966867
    2. ')
' → logprob: -7.000915050506592
    3. ' )' → logprob: -12.750914573669434
    4. ')
' → logprob: -15.250914573669434
    5. '       ' → logprob: -15.750914573669434
    6. ')

' → logprob: -16.25091552734375
    7. '   ' → logprob: -16.50091552734375
    8. ' )
' → logprob: -17.12591552734375
    9. ')`' → logprob: -17.25091552734375
    10. ')return' → logprob: -17.62591552734375

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001787159708328545
    2. '       ' → logprob: -6.376787185668945
    3. 'left' → logprob: -10.376787185668945
    4. 'elif' → logprob: -10.501787185668945
    5. '   ' → logprob: -11.376787185668945
    6. '		' → logprob: -13.126787185668945
    7. ' elif' → logprob: -13.376787185668945
    8. 'else' → logprob: -13.376787185668945
    9. '          ' → logprob: -13.376787185668945
    10. '               ' → logprob: -13.876787185668945

Token 564: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.24258875846862793
    2. ' elif' → logprob: -2.117588758468628
    3. '           ' → logprob: -3.367588758468628
    4. 'if' → logprob: -3.492588758468628
    5. ' if' → logprob: -3.867588758468628
    6. '       ' → logprob: -4.742588996887207
    7. '   ' → logprob: -7.992588996887207
    8. 'left' → logprob: -9.117588996887207
    9. 'else' → logprob: -9.742588996887207
    10. '
' → logprob: -10.867588996887207

Token 565: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.033796798437833786
    2. 'self' → logprob: -3.408796787261963
    3. ' d' → logprob: -9.158797264099121
    4. ' self' → logprob: -10.158797264099121
    5. '   ' → logprob: -12.283797264099121
    6. '	d' → logprob: -14.033797264099121
    7. '       ' → logprob: -15.158797264099121
    8. ' ' → logprob: -15.283797264099121
    9. '  ' → logprob: -15.908797264099121
    10. '	self' → logprob: -16.096296310424805

Token 566: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07890795916318893
    2. ' <' → logprob: -2.5789079666137695
    3. '>=' → logprob: -11.70390796661377
    4. '<m' → logprob: -13.07890796661377
    5. '>' → logprob: -13.32890796661377
    6. ' >=' → logprob: -13.95390796661377
    7. '<len' → logprob: -14.07890796661377
    8. '<th' → logprob: -14.20390796661377
    9. ' ' → logprob: -14.45390796661377
    10. '<n' → logprob: -14.57890796661377

Token 567: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716674659401178
    2. ' self' → logprob: -5.006716728210449
    3. '=self' → logprob: -13.75671672821045
    4. '           ' → logprob: -16.631715774536133
    5. '	self' → logprob: -16.881715774536133
    6. '(self' → logprob: -17.256715774536133
    7. '[self' → logprob: -17.256715774536133
    8. '=' → logprob: -18.256715774536133
    9. 'Self' → logprob: -19.506715774536133
    10. '0' → logprob: -19.756715774536133

Token 568: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00011129142512800172
    2. 'length' → logprob: -9.12511157989502
    3. '[length' → logprob: -14.25011157989502
    4. 'ength' → logprob: -14.25011157989502
    5. ' .' → logprob: -15.62511157989502
    6. ':length' → logprob: -15.62511157989502
    7. 's' → logprob: -15.87511157989502
    8. '.' → logprob: -16.375110626220703
    9. 'self' → logprob: -16.500110626220703
    10. '	length' → logprob: -17.250110626220703

Token 569: 's' (ID: 82)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0659896656870842
    2. 's' → logprob: -3.5659897327423096
    3. 'x' → logprob: -4.3159894943237305
    4. 'eft' → logprob: -5.1909894943237305
    5. 'ex' → logprob: -5.6909894943237305
    6. 'prefix' → logprob: -5.9409894943237305
    7. 'refix' → logprob: -6.0659894943237305
    8. 'fix' → logprob: -6.4409894943237305
    9. '[' → logprob: -6.9409894943237305
    10. '[mid' → logprob: -7.0659894943237305

Token 570: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.002601460786536336
    2. '[mid' → logprob: -6.627601623535156
    3. 'prefix' → logprob: -7.127601623535156
    4. 'refix' → logprob: -7.877601623535156
    5. 'Prefix' → logprob: -9.502601623535156
    6. '_mid' → logprob: -12.627601623535156
    7. '_PREFIX' → logprob: -12.627601623535156
    8. 'mid' → logprob: -12.627601623535156
    9. 'uffix' → logprob: -13.377601623535156
    10. '_pref' → logprob: -13.752601623535156

Token 571: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: 0.0
    2. '[left' → logprob: -17.0
    3. '[' → logprob: -17.5
    4. 'mid' → logprob: -17.5
    5. ' [' → logprob: -20.0
    6. '[m' → logprob: -20.0
    7. '(mid' → logprob: -20.875
    8. '[
' → logprob: -21.125
    9. '
' → logprob: -22.125
    10. '[mem' → logprob: -22.25

Token 572: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6448574662208557
    2. ':' → logprob: -0.8948574662208557
    3. ']:' → logprob: -2.894857406616211
    4. '):
' → logprob: -4.769857406616211
    5. '>:' → logprob: -6.894857406616211
    6. ':
' → logprob: -7.894857406616211
    7. '[mid' → logprob: -7.894857406616211
    8. '[' → logprob: -8.269857406616211
    9. ']:
' → logprob: -8.269857406616211
    10. ' ):' → logprob: -8.644857406616211

Token 573: '               ' (ID: 506)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.33720922470092773
    2. 'right' → logprob: -1.8372092247009277
    3. '               ' → logprob: -2.0872092247009277
    4. '	right' → logprob: -6.712209224700928
    5. '           ' → logprob: -7.087209224700928
    6. '[right' → logprob: -7.962209224700928
    7. ',right' → logprob: -8.837209701538086
    8. '.right' → logprob: -9.337209701538086
    9. ':right' → logprob: -9.712209701538086
    10. '			' → logprob: -9.712209701538086

Token 574: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2519327998161316
    2. 'right' (adapté à ' right') → logprob: -1.5019328594207764
    3. '               ' → logprob: -13.251933097839355
    4. '	right' → logprob: -13.376933097839355
    5. '.right' → logprob: -15.876933097839355
    6. '[right' → logprob: -15.876933097839355
    7. '_right' → logprob: -17.00193214416504
    8. ' left' → logprob: -17.62693214416504
    9. 'left' → logprob: -18.00193214416504
    10. ',right' → logprob: -18.37693214416504

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406685829163
    2. ' =' → logprob: -0.8259406685829163
    3. ' ' → logprob: -14.32594108581543
    4. ' -=' → logprob: -15.20094108581543
    5. ',' → logprob: -15.70094108581543
    6. '<|end|>' → logprob: -16.20094108581543
    7. '-=' → logprob: -16.95094108581543
    8. ' +=' → logprob: -17.70094108581543
    9. '=end' → logprob: -18.07594108581543
    10. '=
' → logprob: -18.32594108581543

Token 576: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.048587486147880554
    2. ' mid' → logprob: -3.0485875606536865
    3. '[mid' → logprob: -16.548587799072266
    4. 'm' → logprob: -17.923587799072266
    5. '_mid' → logprob: -18.173587799072266
    6. '(mid' → logprob: -18.423587799072266
    7. '   ' → logprob: -18.798587799072266
    8. ' ' → logprob: -19.173587799072266
    9. 'middle' → logprob: -19.673587799072266
    10. ' midpoint' → logprob: -20.048587799072266

Token 577: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11298917233943939
    2. '-' → logprob: -2.2379891872406006
    3. ' ' → logprob: -8.73798942565918
    4. 's' → logprob: -14.23798942565918
    5. ' -=' → logprob: -14.23798942565918
    6. '<|end|>' → logprob: -14.36298942565918
    7. ' ' → logprob: -14.73798942565918
    8. '   ' → logprob: -14.86298942565918
    9. '           ' → logprob: -14.98798942565918
    10. 'ight' → logprob: -15.23798942565918

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -18.375017166137695
    4. '
' → logprob: -19.375017166137695
    5. '<|end|>' → logprob: -20.625017166137695
    6. '   ' → logprob: -21.250017166137695
    7. '۱' → logprob: -22.000017166137695
    8. 's' → logprob: -22.937517166137695
    9. ' ' → logprob: -23.000017166137695
    10. '0' → logprob: -23.062517166137695

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.375001907348633
    4. '
' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '<|end|>' → logprob: -22.125001907348633
    7. '۱' → logprob: -22.625001907348633
    8. '           ' → logprob: -23.312501907348633
    9. '0' → logprob: -23.375001907348633
    10. '       ' → logprob: -23.812501907348633

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01236060168594122
    2. 'else' → logprob: -4.762360572814941
    3. ' else' → logprob: -5.637360572814941
    4. '		' → logprob: -9.137360572814941
    5. 'elif' → logprob: -10.262360572814941
    6. '	       ' → logprob: -11.012360572814941
    7. ' elif' → logprob: -12.137360572814941
    8. '          ' → logprob: -13.012360572814941
    9. '	else' → logprob: -13.137360572814941
    10. '   ' → logprob: -13.762360572814941

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1093592643737793
    2. 'else' → logprob: -2.3593592643737793
    3. ' else' → logprob: -4.734359264373779
    4. '		' → logprob: -8.484359741210938
    5. 'elif' → logprob: -9.234359741210938
    6. ' elif' → logprob: -12.234359741210938
    7. '	else' → logprob: -12.609359741210938
    8. '	       ' → logprob: -12.609359741210938
    9. '       ' → logprob: -12.984359741210938
    10. '          ' → logprob: -13.609359741210938

Token 582: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10083238780498505
    2. ' else' → logprob: -2.350832462310791
    3. '           ' → logprob: -7.850832462310791
    4. '       ' → logprob: -8.475831985473633
    5. '	else' → logprob: -11.350831985473633
    6. 'elif' → logprob: -11.975831985473633
    7. '		' → logprob: -12.350831985473633
    8. '   ' → logprob: -13.100831985473633
    9. '        ' → logprob: -13.975831985473633
    10. ' elif' → logprob: -14.600831985473633

Token 583: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31726348400115967
    2. ':' → logprob: -1.4422634840011597
    3. ':
' → logprob: -4.192263603210449
    4. ':left' → logprob: -4.817263603210449
    5. 'left' → logprob: -5.442263603210449
    6. ' left' → logprob: -5.942263603210449
    7. ' :' → logprob: -6.442263603210449
    8. '[left' → logprob: -6.692263603210449
    9. '	left' → logprob: -7.192263603210449
    10. '.left' → logprob: -7.942263603210449

Token 584: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06125235930085182
    2. 'left' → logprob: -3.5612523555755615
    3. ' left' → logprob: -3.5612523555755615
    4. '	left' → logprob: -6.436252593994141
    5. '[left' → logprob: -8.18625259399414
    6. '   ' → logprob: -8.43625259399414
    7. '			' → logprob: -8.43625259399414
    8. '                ' → logprob: -10.06125259399414
    9. ':left' → logprob: -10.06125259399414
    10. '       ' → logprob: -10.18625259399414

Token 585: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.2532964050769806
    2. ' left' → logprob: -1.5032963752746582
    3. '[left' → logprob: -7.378296375274658
    4. '	left' → logprob: -8.128296852111816
    5. ':left' → logprob: -8.753296852111816
    6. '                   ' → logprob: -9.003296852111816
    7. '               ' → logprob: -9.128296852111816
    8. '.left' → logprob: -10.878296852111816
    9. ',left' → logprob: -11.503296852111816
    10. '                       ' → logprob: -11.878296852111816

Token 586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. ' ' → logprob: -20.511871337890625
    4. '＝' → logprob: -21.136871337890625
    5. '=
' → logprob: -21.511871337890625
    6. '.=' → logprob: -22.136871337890625
    7. ' =
' → logprob: -22.136871337890625
    8. ' +=' → logprob: -22.261871337890625
    9. '+=' → logprob: -22.761871337890625
    10. '	' → logprob: -23.511871337890625

Token 587: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3868747651576996
    2. ' mid' → logprob: -1.136874794960022
    3. '[mid' → logprob: -13.51187515258789
    4. ' ' → logprob: -14.01187515258789
    5. '(mid' → logprob: -14.26187515258789
    6. ' midpoint' → logprob: -15.51187515258789
    7. 'left' → logprob: -15.88687515258789
    8. 'm' → logprob: -15.88687515258789
    9. '_mid' → logprob: -16.01187515258789
    10. ' left' → logprob: -16.26187515258789

Token 588: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023371728137135506
    2. ' +' → logprob: -3.773371696472168
    3. '=' → logprob: -9.023371696472168
    4. '+=' → logprob: -12.273371696472168
    5. '+
' → logprob: -14.648371696472168
    6. ' +=' → logprob: -15.273371696472168
    7. ' =' → logprob: -15.648371696472168
    8. '1' → logprob: -16.773372650146484
    9. 'plus' → logprob: -17.023372650146484
    10. ' ' → logprob: -17.648372650146484

Token 589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -18.125625610351562
    4. '0' → logprob: -19.250625610351562
    5. '   ' → logprob: -20.375625610351562
    6. '+' → logprob: -20.375625610351562
    7. '
' → logprob: -20.875625610351562
    8. '=' → logprob: -21.000625610351562
    9. '<|end|>' → logprob: -21.125625610351562
    10. '۱' → logprob: -21.625625610351562

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -16.875003814697266
    4. '```' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '  ' → logprob: -20.625003814697266
    7. '2' → logprob: -22.000003814697266
    8. '     ' → logprob: -22.062503814697266
    9. '-' → logprob: -22.125003814697266
    10. '       ' → logprob: -22.187503814697266

Token 591: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 592: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4425441324710846
    2. '<|end|>' → logprob: -1.0675441026687622
    3. '   ' → logprob: -5.942543983459473
    4. 'return' → logprob: -6.192543983459473
    5. '\n' → logprob: -6.317543983459473
    6. ' ' → logprob: -6.317543983459473
    7. '#' (adapté à ' #') → logprob: -7.192543983459473
    8. '
' → logprob: -7.442543983459473
    9. ' return' → logprob: -7.567543983459473
    10. '        
' → logprob: -7.692543983459473

Token 594: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014251177199184895
    2. '#' → logprob: -6.751425266265869
    3. ' return' → logprob: -8.751424789428711
    4. 'raise' → logprob: -9.251424789428711
    5. '       ' → logprob: -14.751424789428711
    6. ' raise' → logprob: -15.876424789428711
    7. 'assert' → logprob: -16.12642478942871
    8. '   ' → logprob: -17.00142478942871
    9. ' #' → logprob: -17.87642478942871
    10. '{return' → logprob: -18.50142478942871

Token 595: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1270376294851303
    2. ' return' → logprob: -2.127037525177002
    3. '       ' → logprob: -9.25203800201416
    4. '
' → logprob: -12.12703800201416
    5. '        
' → logprob: -12.37703800201416
    6. '{return' → logprob: -13.00203800201416
    7. ':return' → logprob: -13.75203800201416
    8. '   ' → logprob: -15.00203800201416
    9. '	return' → logprob: -15.50203800201416
    10. '```' → logprob: -16.752037048339844

Token 596: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20187003910541534
    2. 'return' → logprob: -1.701870083808899
    3. '       ' → logprob: -7.701869964599609
    4. '{return' → logprob: -13.32686996459961
    5. ':return' → logprob: -13.32686996459961
    6. '	return' → logprob: -13.82686996459961
    7. '        
' → logprob: -16.32686996459961
    8. '_return' → logprob: -16.57686996459961
    9. '.return' → logprob: -16.57686996459961
    10. ',' → logprob: -16.82686996459961

Token 597: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004473540757317096
    2. ' return' → logprob: -7.7504472732543945
    3. '       ' → logprob: -11.000447273254395
    4. '   ' → logprob: -17.50044822692871
    5. '	return' → logprob: -19.25044822692871
    6. '{return' → logprob: -19.62544822692871
    7. 'self' → logprob: -20.25044822692871
    8. '        
' → logprob: -20.62544822692871
    9. ':return' → logprob: -21.12544822692871
    10. '```' → logprob: -21.25044822692871

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. 'Point' → logprob: -18.250059127807617
    4. 'None' → logprob: -21.625059127807617
    5. '	self' → logprob: -22.375059127807617
    6. '(self' → logprob: -22.500059127807617
    7. 'Self' → logprob: -23.625059127807617
    8. ' ' → logprob: -23.750059127807617
    9. '=self' → logprob: -24.000059127807617
    10. ' Point' → logprob: -24.125059127807617

Token 599: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -1.0802738870552275e-05
    2. 'points' → logprob: -12.00001049041748
    3. '.se' → logprob: -12.62501049041748
    4. '.point' → logprob: -14.75001049041748
    5. '.' → logprob: -15.12501049041748
    6. '	points' → logprob: -15.37501049041748
    7. '.p' → logprob: -15.87501049041748
    8. '(points' → logprob: -16.250011444091797
    9. ' .' → logprob: -17.000011444091797
    10. ' points' → logprob: -17.250011444091797

Token 600: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0007314971298910677
    2. '[' → logprob: -7.250731468200684
    3. '-' → logprob: -10.875731468200684
    4. '0' → logprob: -12.875731468200684
    5. '[
' → logprob: -17.500732421875
    6. ' [-' → logprob: -18.125732421875
    7. '][-' → logprob: -18.625732421875
    8. '−' → logprob: -18.750732421875
    9. ' -' → logprob: -19.000732421875
    10. '1' → logprob: -19.125732421875

Token 601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '2' → logprob: -17.5
    4. '```' → logprob: -17.875
    5. '۱' → logprob: -18.875
    6. '１' → logprob: -19.125
    7. '   ' → logprob: -19.4375
    8. '<|end|>' → logprob: -20.0625
    9. '0' → logprob: -20.1875
    10. ')' → logprob: -20.1875

Token 602: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003600782947614789
    2. '<|end|>' → logprob: -5.878600597381592
    3. '}' → logprob: -7.253600597381592
    4. ']' → logprob: -10.12860107421875
    5. ')
' → logprob: -10.25360107421875
    6. '```' → logprob: -12.50360107421875
    7. '）' → logprob: -12.62860107421875
    8. '<|end|>' → logprob: -13.75360107421875
    9. ')return' → logprob: -14.37860107421875
    10. ')}' → logprob: -14.50360107421875

Token 603: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7685827016830444
    2. 'class' → logprob: -0.7685827016830444
    3. '

' → logprob: -2.643582820892334
    4. '```' → logprob: -7.143582820892334
    5. 'def' → logprob: -8.268582344055176
    6. '


' → logprob: -8.518582344055176
    7. '<|end|>' → logprob: -9.268582344055176
    8. '\n' → logprob: -10.018582344055176
    9. '
' → logprob: -10.143582344055176
    10. ' class' → logprob: -10.143582344055176

Token 604: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7057849764823914
    2. 'def' (adapté à ' def') → logprob: -0.7057849764823914
    3. 'class' → logprob: -4.830784797668457
    4. '   ' → logprob: -6.205784797668457
    5. '

' → logprob: -6.455784797668457
    6. ' def' → logprob: -7.330784797668457
    7. '```' → logprob: -9.455784797668457
    8. ' ' → logprob: -9.580784797668457
    9. '


' → logprob: -10.705784797668457
    10. '<|end|>' → logprob: -10.955784797668457

Token 605: ' altitude' (ID: 66032)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.3507031202316284
    2. ' length' → logprob: -1.3507031202316284
    3. ' reverse' → logprob: -2.600703239440918
    4. 'total' → logprob: -2.975703239440918
    5. '__' → logprob: -3.100703239440918
    6. ' __' → logprob: -3.225703239440918
    7. 'length' → logprob: -3.600703239440918
    8. ' get' → logprob: -3.725703239440918
    9. ' find' → logprob: -3.725703239440918
    10. 'reverse' → logprob: -3.850703239440918

Token 606: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0008165352046489716
    2. '(self' → logprob: -7.250816345214844
    3. '(' → logprob: -10.375816345214844
    4. 'at' → logprob: -10.375816345214844
    5. '_' → logprob: -11.375816345214844
    6. 'self' → logprob: -11.875816345214844
    7. '   ' → logprob: -12.375816345214844
    8. '_between' → logprob: -12.375816345214844
    9. 'At' → logprob: -13.000816345214844
    10. 's' → logprob: -13.375816345214844

Token 607: '_distance' (ID: 45537)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.08417680859565735
    2. '_distance' → logprob: -2.584176778793335
    3. '(self' → logprob: -5.459177017211914
    4. 'self' → logprob: -7.709177017211914
    5. '(distance' → logprob: -8.084177017211914
    6. '(' → logprob: -8.959177017211914
    7. ' distance' → logprob: -9.584177017211914
    8. 'dist' → logprob: -10.834177017211914
    9. '<|end|>' → logprob: -11.334177017211914
    10. 'Distance' → logprob: -11.459177017211914

Token 608: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.125036239624023
    4. 'self' → logprob: -15.750036239624023
    5. '   ' → logprob: -16.250036239624023
    6. '(s' → logprob: -16.875036239624023
    7. '(
' → logprob: -17.000036239624023
    8. 'def' → logprob: -18.375036239624023
    9. '       ' → logprob: -19.000036239624023
    10. ' ' → logprob: -19.125036239624023

Token 609: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016269315034151077
    2. ')' → logprob: -4.391269207000732
    3. ',' → logprob: -6.266269207000732
    4. 'self' → logprob: -6.516269207000732
    5. '(' → logprob: -9.39126968383789
    6. '       ' → logprob: -9.51626968383789
    7. '   ' → logprob: -9.76626968383789
    8. '
' → logprob: -10.14126968383789
    9. ')(' → logprob: -10.26626968383789
    10. ' (' → logprob: -10.76626968383789

Token 610: ' d' (ID: 272)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013511242344975471
    2. 'd' → logprob: -4.5135111808776855
    3. ' self' → logprob: -6.0135111808776855
    4. ' d' → logprob: -11.638511657714844
    5. 'def' → logprob: -12.638511657714844
    6. '   ' → logprob: -13.138511657714844
    7. '       ' → logprob: -14.388511657714844
    8. ' ' → logprob: -15.888511657714844
    9. '(self' → logprob: -16.263511657714844
    10. 's' → logprob: -17.013511657714844

Token 611: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028683508280664682
    2. ')' → logprob: -5.877868175506592
    3. '):' → logprob: -10.25286865234375
    4. '   ' → logprob: -11.00286865234375
    5. ' :' → logprob: -11.62786865234375
    6. '):
' → logprob: -14.37786865234375
    7. ' )' → logprob: -14.75286865234375
    8. '       ' → logprob: -14.75286865234375
    9. 'def' → logprob: -14.87786865234375
    10. ' ' → logprob: -15.12786865234375

Token 612: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.061972394585609436
    2. ' float' → logprob: -2.8119723796844482
    3. '   ' → logprob: -13.436972618103027
    4. ')' → logprob: -13.936972618103027
    5. '	float' → logprob: -14.436972618103027
    6. 'Optional' → logprob: -15.061972618103027
    7. '(float' → logprob: -15.311972618103027
    8. ' ' → logprob: -15.436972618103027
    9. 'loat' → logprob: -15.561972618103027
    10. '=float' → logprob: -15.811972618103027

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '):' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.375003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '):
' → logprob: -15.500003814697266
    6. ':' → logprob: -15.625003814697266
    7. ')->' → logprob: -17.250003814697266
    8. ' ' → logprob: -17.375003814697266
    9. '       ' → logprob: -18.000003814697266
    10. '")' → logprob: -18.250003814697266

Token 614: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7999030947685242
    2. ' ->' → logprob: -1.049903154373169
    3. '->' → logprob: -2.299903154373169
    4. ':' → logprob: -2.424903154373169
    5. '   ' → logprob: -4.79990291595459
    6. ')->' → logprob: -5.92490291595459
    7. '       ' → logprob: -7.54990291595459
    8. ' ' → logprob: -8.42490291595459
    9. 'def' → logprob: -10.04990291595459
    10. '    ' → logprob: -10.04990291595459

Token 615: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0023325940128415823
    2. ' float' → logprob: -6.37733268737793
    3. 'Optional' → logprob: -7.37733268737793
    4. ' Optional' → logprob: -12.75233268737793
    5. 'optional' → logprob: -14.00233268737793
    6. '   ' → logprob: -14.25233268737793
    7. 'flo' → logprob: -15.87733268737793
    8. '(float' → logprob: -16.37733268737793
    9. 'f' → logprob: -16.37733268737793
    10. 'return' → logprob: -16.50233268737793

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20406024158000946
    2. ':
' → logprob: -1.7040601968765259
    3. '       ' → logprob: -6.579060077667236
    4. '   ' → logprob: -7.204060077667236
    5. '{' → logprob: -8.829060554504395
    6. ')' → logprob: -9.579060554504395
    7. '):
' → logprob: -9.704060554504395
    8. '=' → logprob: -10.079060554504395
    9. ':return' → logprob: -10.204060554504395
    10. '.' → logprob: -10.454060554504395

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020098933950066566
    2. 'return' → logprob: -4.52009916305542
    3. ' return' → logprob: -5.52009916305542
    4. 'point' → logprob: -5.64509916305542
    5. ' point' → logprob: -7.02009916305542
    6. 'pt' → logprob: -8.270098686218262
    7. 'p' → logprob: -9.395098686218262
    8. ' p' → logprob: -9.520098686218262
    9. '   ' → logprob: -9.645098686218262
    10. ' pt' → logprob: -10.020098686218262

Token 618: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0284349974244833
    2. '       ' → logprob: -4.028435230255127
    3. 'point' → logprob: -4.653435230255127
    4. 'pt' → logprob: -7.778435230255127
    5. 'p' → logprob: -8.653434753417969
    6. ' return' → logprob: -9.653434753417969
    7. 'if' → logprob: -10.153434753417969
    8. '   ' → logprob: -12.778434753417969
    9. '#' → logprob: -13.278434753417969
    10. 'pos' → logprob: -14.653434753417969

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -17.500036239624023
    4. '   ' → logprob: -18.750036239624023
    5. '       ' → logprob: -18.875036239624023
    6. '
' → logprob: -19.625036239624023
    7. '[self' → logprob: -20.625036239624023
    8. '	self' → logprob: -20.750036239624023
    9. 'float' → logprob: -21.750036239624023
    10. 'd' → logprob: -22.250036239624023

Token 620: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -2.5776860184123507e-06
    2. '.points' → logprob: -13.37500286102295
    3. '.' → logprob: -14.75000286102295
    4. ' .' → logprob: -14.87500286102295
    5. '.p' → logprob: -16.125001907348633
    6. '	point' → logprob: -17.125001907348633
    7. '.Point' → logprob: -17.750001907348633
    8. 'point' → logprob: -17.750001907348633
    9. '.position' → logprob: -18.500001907348633
    10. ').' → logprob: -18.875001907348633

Token 621: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. 'at' → logprob: -15.75
    3. '_' → logprob: -17.125
    4. '_point' → logprob: -21.125
    5. 's' → logprob: -21.25
    6. 'At' → logprob: -21.375
    7. '	at' → logprob: -21.375
    8. '_a' → logprob: -21.875
    9. '_
' → logprob: -22.625
    10. '_to' → logprob: -22.625

Token 622: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0005541055579669774
    2. 'distance' → logprob: -7.500554084777832
    3. '_dist' → logprob: -14.375554084777832
    4. 'Distance' → logprob: -15.250554084777832
    5. '_at' → logprob: -16.12555503845215
    6. '_point' → logprob: -16.12555503845215
    7. '(distance' → logprob: -16.87555503845215
    8. 'd' → logprob: -17.00055503845215
    9. ' distance' → logprob: -17.12555503845215
    10. 'at' → logprob: -17.37555503845215

Token 623: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.179569077678025e-05
    2. '(' → logprob: -10.625041961669922
    3. '(distance' → logprob: -11.000041961669922
    4. ' (' → logprob: -15.000041961669922
    5. '(
' → logprob: -15.375041961669922
    6. '((' → logprob: -16.375041961669922
    7. '(dist' → logprob: -16.875041961669922
    8. '(div' → logprob: -17.250041961669922
    9. '(D' → logprob: -17.500041961669922
    10. 'd' → logprob: -18.250041961669922

Token 624: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -12.500005722045898
    3. ' ).' → logprob: -13.750005722045898
    4. ')' → logprob: -14.750005722045898
    5. '.y' → logprob: -15.625005722045898
    6. '}.' → logprob: -17.0000057220459
    7. ' ' → logprob: -17.6250057220459
    8. '.).' → logprob: -18.1250057220459
    9. '`).' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.7500057220459

Token 625: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. '.y' → logprob: -18.125
    3. '	y' → logprob: -18.375
    4. ' y' → logprob: -19.125
    5. ''y' → logprob: -19.375
    6. '_y' → logprob: -21.0
    7. 'y's' → logprob: -21.75
    8. '‘y' → logprob: -22.125
    9. '```' → logprob: -22.375
    10. '-y' → logprob: -23.125

Token 626: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0034373232629150152
    2. '
' → logprob: -5.878437519073486
    3. 'def' → logprob: -7.753437519073486
    4. '

' → logprob: -9.628437042236328
    5. '```' → logprob: -9.878437042236328
    6. ' class' → logprob: -10.128437042236328
    7. '<|end|>' → logprob: -10.878437042236328
    8. '<class' → logprob: -11.878437042236328
    9. 'from' → logprob: -12.128437042236328
    10. 'c' → logprob: -13.128437042236328

Token 628: ' Meeting' (ID: 36677)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Route' → logprob: -1.169656753540039
    2. 'Profile' → logprob: -1.919656753540039
    3. 'Elevation' → logprob: -2.419656753540039
    4. 'Track' → logprob: -3.044656753540039
    5. 'Vehicle' → logprob: -3.294656753540039
    6. ' Route' → logprob: -3.419656753540039
    7. ' Profile' → logprob: -3.544656753540039
    8. 'Segment' → logprob: -3.794656753540039
    9. 'Gradient' → logprob: -4.294656753540039
    10. 'Cl' → logprob: -4.294656753540039

Token 629: 'Attempt' (ID: 66488)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.16366514563560486
    2. ':' → logprob: -1.9136651754379272
    3. 'Place' → logprob: -6.288665294647217
    4. ':
' → logprob: -7.038665294647217
    5. 'Planner' → logprob: -7.913665294647217
    6. 'Spot' → logprob: -8.913664817810059
    7. 'Scheduler' → logprob: -10.038664817810059
    8. '_Point' → logprob: -10.413664817810059
    9. 'Request' → logprob: -10.663664817810059
    10. 'Points' → logprob: -11.038664817810059

Token 630: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008625687099993229
    2. ':
' → logprob: -4.758625507354736
    3. ' :' → logprob: -12.133625984191895
    4. '(object' → logprob: -13.258625984191895
    5. '(' → logprob: -13.883625984191895
    6. ':def' → logprob: -13.883625984191895
    7. ':

' → logprob: -14.883625984191895
    8. ':
' → logprob: -15.258625984191895
    9. '   ' → logprob: -15.383625984191895
    10. '):' → logprob: -15.633625984191895

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001195467310026288
    2. ':
' → logprob: -6.751195430755615
    3. ' :' → logprob: -10.876195907592773
    4. '(' → logprob: -12.876195907592773
    5. ':

' → logprob: -14.251195907592773
    6. '(object' → logprob: -14.251195907592773
    7. ':def' → logprob: -14.251195907592773
    8. '():' → logprob: -14.376195907592773
    9. '):' → logprob: -14.876195907592773
    10. '   ' → logprob: -16.126195907592773

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604426145553589
    2. ' def' → logprob: -1.5104426145553589
    3. 'class' → logprob: -6.385442733764648
    4. 'def' → logprob: -6.385442733764648
    5. '    ' → logprob: -6.635442733764648
    6. ' class' → logprob: -6.885442733764648
    7. ' ' → logprob: -7.260442733764648
    8. ' 
' → logprob: -8.010442733764648
    9. '```' → logprob: -8.260442733764648
    10. ' indentation' → logprob: -8.510442733764648

Token 633: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2582312822341919
    2. 'def' (adapté à ' def') → logprob: -1.508231282234192
    3. '   ' → logprob: -5.133231163024902
    4. 'class' → logprob: -7.883231163024902
    5. ' class' → logprob: -13.133231163024902
    6. ':' → logprob: -13.883231163024902
    7. ' ' → logprob: -14.008231163024902
    8. '
' → logprob: -14.258231163024902
    9. '	def' → logprob: -14.258231163024902
    10. 'import' → logprob: -14.508231163024902

Token 634: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20112344622612
    2. ' def' → logprob: -1.9511234760284424
    3. '__' → logprob: -3.5761234760284424
    4. '_init' → logprob: -5.076123237609863
    5. ' init' → logprob: -5.826123237609863
    6. 'init' → logprob: -6.701123237609863
    7. 'def' → logprob: -7.326123237609863
    8. '_' → logprob: -7.451123237609863
    9. '```' → logprob: -8.826123237609863
    10. ' ' → logprob: -9.826123237609863

Token 635: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. '_init' → logprob: -15.875000953674316
    3. 'class' → logprob: -16.375
    4. '```' → logprob: -16.625
    5. 'nit' → logprob: -17.0
    6. 'int' → logprob: -17.25
    7. 'def' → logprob: -17.375
    8. 'it' → logprob: -17.75
    9. ' init' → logprob: -18.0
    10. '(init' → logprob: -18.0

Token 636: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3494414687156677
    2. '__(' → logprob: -1.2244415283203125
    3. '(' → logprob: -7.4744415283203125
    4. ' (' → logprob: -8.599441528320312
    5. '__(
' → logprob: -9.099441528320312
    6. '_(' → logprob: -9.849441528320312
    7. 'self' → logprob: -10.724441528320312
    8. '__' → logprob: -10.849441528320312
    9. ')(' → logprob: -11.099441528320312
    10. '(
' → logprob: -12.099441528320312

Token 637: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000736846646759659
    2. ' self' → logprob: -7.375736713409424
    3. ')' → logprob: -10.125737190246582
    4. '
' → logprob: -10.375737190246582
    5. ',' → logprob: -10.500737190246582
    6. '   ' → logprob: -12.500737190246582
    7. ' ' → logprob: -13.250737190246582
    8. '(self' → logprob: -13.625737190246582
    9. '       ' → logprob: -13.625737190246582
    10. '0' → logprob: -14.125737190246582

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032791912090033293
    2. 'self' → logprob: -5.753279209136963
    3. ',
' → logprob: -10.128278732299805
    4. ' ,' → logprob: -10.503278732299805
    5. ' self' → logprob: -11.003278732299805
    6. '(self' → logprob: -11.628278732299805
    7. ',self' → logprob: -12.003278732299805
    8. ' (' → logprob: -14.003278732299805
    9. '   ' → logprob: -14.503278732299805
    10. ')' → logprob: -15.128278732299805

Token 639: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.02926090732216835
    2. ' route' → logprob: -4.279261112213135
    3. 'self' → logprob: -4.529261112213135
    4. 'start' → logprob: -7.654261112213135
    5. 'routes' → logprob: -7.779261112213135
    6. 'speed' → logprob: -8.154260635375977
    7. '   ' → logprob: -8.279260635375977
    8. ' self' → logprob: -8.341760635375977
    9. 'distance' → logprob: -8.404260635375977
    10. 'points' → logprob: -8.591760635375977

Token 640: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9307358860969543
    2. '1' → logprob: -1.1807358264923096
    3. 'A' → logprob: -1.8057358264923096
    4. '_a' → logprob: -2.0557358264923096
    5. 's' → logprob: -5.555736064910889
    6. 'a' → logprob: -7.055736064910889
    7. '_A' → logprob: -7.305736064910889
    8. '_s' → logprob: -8.43073558807373
    9. '_' → logprob: -8.68073558807373
    10. '_route' → logprob: -8.80573558807373

Token 641: ' Route' (ID: 17215)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.0005576779949478805
    2. ' Route' → logprob: -7.500557899475098
    3. '	Route' → logprob: -12.625557899475098
    4. 'Optional' → logprob: -14.750557899475098
    5. ')' → logprob: -15.000557899475098
    6. '_route' → logprob: -15.500557899475098
    7. '<Route' → logprob: -15.875557899475098
    8. '.Route' → logprob: -16.00055694580078
    9. 'Router' → logprob: -16.25055694580078
    10. 'route' → logprob: -16.50055694580078

Token 642: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004259084234945476
    2. '):
' → logprob: -8.375426292419434
    3. '):' → logprob: -8.625426292419434
    4. ')' → logprob: -12.250426292419434
    5. ' ,' → logprob: -12.500426292419434
    6. '   ' → logprob: -12.625426292419434
    7. ',
' → logprob: -12.875426292419434
    8. '):
' → logprob: -14.250426292419434
    9. '       ' → logprob: -15.125426292419434
    10. ':' → logprob: -16.500425338745117

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12416353821754456
    2. 'self' → logprob: -2.2491636276245117
    3. ',' → logprob: -4.749163627624512
    4. ' self' → logprob: -5.999163627624512
    5. '   ' → logprob: -10.374163627624512
    6. 'def' → logprob: -10.499163627624512
    7. '```' → logprob: -11.249163627624512
    8. '(self' → logprob: -11.499163627624512
    9. ')' → logprob: -11.624163627624512
    10. ',self' → logprob: -12.124163627624512

Token 644: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006261388771235943
    2. ' self' → logprob: -5.256261348724365
    3. '       ' → logprob: -6.881261348724365
    4. '	self' → logprob: -15.881261825561523
    5. '   ' → logprob: -16.006261825561523
    6. 'import' → logprob: -16.881261825561523
    7. ' ' → logprob: -17.381261825561523
    8. 'class' → logprob: -17.756261825561523
    9. '(self' → logprob: -18.006261825561523
    10. 'def' → logprob: -18.881261825561523

Token 645: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.00016945181414484978
    2. '.' → logprob: -8.75016975402832
    3. 'route' → logprob: -12.25016975402832
    4. ' .' → logprob: -12.50016975402832
    5. '.r' → logprob: -14.12516975402832
    6. '.router' → logprob: -14.12516975402832
    7. '._' → logprob: -14.37516975402832
    8. '.Route' → logprob: -16.37516975402832
    9. '.rule' → logprob: -16.50016975402832
    10. '$route' → logprob: -16.62516975402832

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043016429990530014
    2. '=' → logprob: -3.1680164337158203
    3. ':' → logprob: -11.54301643371582
    4. '   ' → logprob: -12.16801643371582
    5. ' ' → logprob: -14.04301643371582
    6. '  ' → logprob: -14.54301643371582
    7. '    ' → logprob: -15.04301643371582
    8. 's' → logprob: -15.16801643371582
    9. '.' → logprob: -16.16801643371582
    10. '	' → logprob: -16.41801643371582

Token 647: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.01814994215965271
    2. ' route' → logprob: -4.0181498527526855
    3. '(route' → logprob: -16.768150329589844
    4. '$route' → logprob: -17.393150329589844
    5. '_route' → logprob: -18.268150329589844
    6. '.route' → logprob: -19.018150329589844
    7. '   ' → logprob: -19.268150329589844
    8. 'r' → logprob: -19.518150329589844
    9. '       ' → logprob: -19.768150329589844
    10. 'rate' → logprob: -20.143150329589844

Token 648: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13493098318576813
    2. '<|end|>' → logprob: -2.1349310874938965
    3. '       ' → logprob: -5.1349310874938965
    4. '<|end|>' → logprob: -7.1349310874938965
    5. ',' → logprob: -7.7599310874938965
    6. '   ' → logprob: -8.134930610656738
    7. '    
' → logprob: -8.759930610656738
    8. ',
' → logprob: -9.634930610656738
    9. '        
' → logprob: -9.884930610656738
    10. ' ' → logprob: -9.884930610656738

Token 649: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002392890863120556
    2. '#' → logprob: -6.627392768859863
    3. 'pass' → logprob: -7.627392768859863
    4. 'def' → logprob: -8.002392768859863
    5. '       ' → logprob: -9.627392768859863
    6. ' self' → logprob: -9.752392768859863
    7. '
' → logprob: -9.877392768859863
    8. '0' → logprob: -10.752392768859863
    9. '   ' → logprob: -11.377392768859863
    10. '

' → logprob: -12.252392768859863

Token 651: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6617127656936646
    2. '.me' → logprob: -1.9117127656936646
    3. '.points' → logprob: -2.286712646484375
    4. '.positions' → logprob: -2.286712646484375
    5. '.max' → logprob: -2.786712646484375
    6. '.initial' → logprob: -3.411712646484375
    7. '.at' → logprob: -3.536712646484375
    8. '.start' → logprob: -3.536712646484375
    9. '.distance' → logprob: -3.536712646484375
    10. '.time' → logprob: -3.536712646484375

Token 652: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3508640229701996
    2. ':' → logprob: -1.850864052772522
    3. '=' → logprob: -1.975864052772522
    4. 'ization' → logprob: -8.97586441040039
    5. '_' → logprob: -10.85086441040039
    6. '={}' → logprob: -11.35086441040039
    7. 'ize' → logprob: -12.47586441040039
    8. 'ized' → logprob: -12.97586441040039
    9. ' :' → logprob: -13.35086441040039
    10. '_:' → logprob: -13.47586441040039

Token 653: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0001637300301808864
    2. ' Dict' → logprob: -8.750164031982422
    3. 'dict' → logprob: -12.375164031982422
    4. 'Optional' → logprob: -14.375164031982422
    5. 'Dic' → logprob: -16.000164031982422
    6. '{}' → logprob: -16.250164031982422
    7. 'List' → logprob: -16.625164031982422
    8. '.Dict' → logprob: -16.875164031982422
    9. '```' → logprob: -17.875164031982422
    10. '_dict' → logprob: -18.000164031982422

Token 654: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32311517000198364
    2. '[int' → logprob: -1.3231151103973389
    3. '[str' → logprob: -4.698115348815918
    4. '[
' → logprob: -8.073115348815918
    5. '[(' → logprob: -8.073115348815918
    6. '<|end|>' → logprob: -10.198115348815918
    7. '[[' → logprob: -11.698115348815918
    8. ' =' → logprob: -12.198115348815918
    9. '<int' → logprob: -12.448115348815918
    10. 'int' → logprob: -13.073115348815918

Token 655: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0013397661969065666
    2. 'float' → logprob: -6.751339912414551
    3. 'str' → logprob: -9.37633991241455
    4. 'int' → logprob: -10.00133991241455
    5. ' Tuple' → logprob: -10.75133991241455
    6. '[' → logprob: -11.87633991241455
    7. 'tuple' → logprob: -12.00133991241455
    8. '[int' → logprob: -13.37633991241455
    9. '[str' → logprob: -13.37633991241455
    10. ']' → logprob: -14.12633991241455

Token 656: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25198671221733093
    2. '[int' → logprob: -1.5019867420196533
    3. 'float' → logprob: -11.001986503601074
    4. '[str' → logprob: -11.126986503601074
    5. ',float' → logprob: -11.751986503601074
    6. '[
' → logprob: -11.751986503601074
    7. 'int' → logprob: -12.376986503601074
    8. '   ' → logprob: -14.001986503601074
    9. 'flo' → logprob: -14.126986503601074
    10. '[f' → logprob: -14.251986503601074

Token 657: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.049794528633356094
    2. 'int' → logprob: -3.0497944355010986
    3. 'str' → logprob: -7.049794673919678
    4. 'flo' → logprob: -8.92479419708252
    5. 'bool' → logprob: -10.42479419708252
    6. 'Optional' → logprob: -10.42479419708252
    7. 'Tuple' → logprob: -10.79979419708252
    8. ' float' → logprob: -10.92479419708252
    9. '...' → logprob: -11.17479419708252
    10. '(float' → logprob: -11.29979419708252

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028835684061050415
    2. ',float' → logprob: -5.877883434295654
    3. ' ,' → logprob: -9.627883911132812
    4. ',f' → logprob: -12.627883911132812
    5. ',int' → logprob: -13.002883911132812
    6. ',double' → logprob: -13.127883911132812
    7. ',bool' → logprob: -13.377883911132812
    8. ',
' → logprob: -13.627883911132812
    9. 'float' → logprob: -14.252883911132812
    10. '],' → logprob: -14.752883911132812

Token 659: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00512393843382597
    2. 'int' → logprob: -6.130124092102051
    3. 'bool' → logprob: -6.880124092102051
    4. 'Optional' → logprob: -7.005124092102051
    5. '...' → logprob: -8.13012409210205
    6. 'str' → logprob: -8.38012409210205
    7. 'Tuple' → logprob: -8.75512409210205
    8. ' float' → logprob: -9.00512409210205
    9. '...]' → logprob: -9.13012409210205
    10. ']' → logprob: -10.88012409210205

Token 660: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02633397839963436
    2. ',' → logprob: -3.651334047317505
    3. ' ],' → logprob: -10.401333808898926
    4. ']' → logprob: -14.026333808898926
    5. ' ,' → logprob: -14.276333808898926
    6. ']]' → logprob: -15.026333808898926
    7. '),' → logprob: -15.151333808898926
    8. '       ' → logprob: -15.776333808898926
    9. '"],' → logprob: -15.776333808898926
    10. '],
' → logprob: -15.901333808898926

Token 661: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.13679397106170654
    2. 'bool' → logprob: -2.136794090270996
    3. 'float' → logprob: -4.761794090270996
    4. 'int' → logprob: -7.136794090270996
    5. ' Optional' → logprob: -9.011794090270996
    6. 'Tuple' → logprob: -9.136794090270996
    7. 'optional' → logprob: -9.261794090270996
    8. 'str' → logprob: -9.386794090270996
    9. 'List' → logprob: -10.636794090270996
    10. ' bool' → logprob: -11.386794090270996

Token 662: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055575691163539886
    2. '[int' → logprob: -2.9305756092071533
    3. '[str' → logprob: -7.680575847625732
    4. '[List' → logprob: -8.430575370788574
    5. '["' → logprob: -12.430575370788574
    6. '[
' → logprob: -12.805575370788574
    7. 'Point' → logprob: -13.305575370788574
    8. ']' → logprob: -13.430575370788574
    9. 'float' → logprob: -14.180575370788574
    10. '[np' → logprob: -14.430575370788574

Token 663: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06612557917833328
    2. 'bool' → logprob: -3.1911256313323975
    3. 'Point' → logprob: -4.066125392913818
    4. 'Tuple' → logprob: -5.691125392913818
    5. 'int' → logprob: -6.941125392913818
    6. 'List' → logprob: -7.191125392913818
    7. 'str' → logprob: -8.441125869750977
    8. 'Meeting' → logprob: -9.066125869750977
    9. '[' → logprob: -9.316125869750977
    10. 'Route' → logprob: -10.066125869750977

Token 664: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0011999934213235974
    2. ']' → logprob: -6.751200199127197
    3. ' ]]' → logprob: -11.251199722290039
    4. ']]=' → logprob: -11.501199722290039
    5. ']=' → logprob: -13.376199722290039
    6. ']>' → logprob: -13.626199722290039
    7. '[' → logprob: -13.876199722290039
    8. ' ]' → logprob: -14.501199722290039
    9. ')]' → logprob: -14.751199722290039
    10. '   ' → logprob: -14.876199722290039

Token 665: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.292907877039397e-06
    2. '{}
' → logprob: -13.00000286102295
    3. 'dict' → logprob: -14.62500286102295
    4. '{}

' → logprob: -15.37500286102295
    5. '{})' → logprob: -15.75000286102295
    6. '{' → logprob: -16.000003814697266
    7. ' {}' → logprob: -18.000003814697266
    8. '{},' → logprob: -18.500003814697266
    9. '={}' → logprob: -19.000003814697266
    10. '{}\' → logprob: -19.250003814697266

Token 667: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016468366084154695
    2. '()
' → logprob: -8.875164985656738
    3. '(' → logprob: -11.250164985656738
    4. '()

' → logprob: -12.250164985656738
    5. '(),' → logprob: -13.125164985656738
    6. '().' → logprob: -13.500164985656738
    7. '()\' → logprob: -13.750164985656738
    8. '()]' → logprob: -14.125164985656738
    9. '())' → logprob: -14.750164985656738
    10. '();' → logprob: -15.250164985656738

Token 668: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09656249731779099
    2. '
' → logprob: -2.471562385559082
    3. 'def' → logprob: -5.471562385559082
    4. '    
' → logprob: -6.096562385559082
    5. '<|end|>' → logprob: -7.096562385559082
    6. ' def' → logprob: -8.846562385559082
    7. '        
' → logprob: -10.096562385559082
    8. ' 
' → logprob: -10.221562385559082
    9. '

' → logprob: -10.346562385559082
    10. '<|end|>' → logprob: -11.346562385559082

Token 669: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24471984803676605
    2. '<|end|>' → logprob: -2.3697197437286377
    3. '   ' → logprob: -2.6197197437286377
    4. '
' → logprob: -3.3697197437286377
    5. ' def' → logprob: -4.494719982147217
    6. '       ' → logprob: -6.744719982147217
    7. '<|end|>' → logprob: -6.744719982147217
    8. ' ' → logprob: -6.869719982147217
    9. '    
' → logprob: -7.119719982147217
    10. '        
' → logprob: -8.119719505310059

Token 670: ' discret' (ID: 111140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02997332066297531
    2. 'def' → logprob: -4.40497350692749
    3. '#' → logprob: -5.02997350692749
    4. 'pass' → logprob: -5.52997350692749
    5. '       ' → logprob: -5.65497350692749
    6. '   ' → logprob: -6.52997350692749
    7. ' self' → logprob: -6.52997350692749
    8. 'import' → logprob: -8.654973030090332
    9. '...' → logprob: -11.154973030090332
    10. 'class' → logprob: -11.154973030090332

Token 671: 'ization' (ID: 2860)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7765538096427917
    2. 'ize' → logprob: -0.9015538096427917
    3. 'ization' → logprob: -2.0265538692474365
    4. 'ized' → logprob: -6.651553630828857
    5. ' ' → logprob: -8.026554107666016
    6. 'izing' → logprob: -8.776554107666016
    7. 'ation' → logprob: -9.151554107666016
    8. 'iz' → logprob: -9.651554107666016
    9. 'izer' → logprob: -9.776554107666016
    10. '   ' → logprob: -10.276554107666016

Token 672: ' tolerance' (ID: 46581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0947834253311157
    2. '<|end|>' → logprob: -1.5947834253311157
    3. ' step' → logprob: -1.7197834253311157
    4. '_step' → logprob: -2.594783306121826
    5. ' ' → logprob: -3.344783306121826
    6. '<|end|>' → logprob: -3.594783306121826
    7. ' self' → logprob: -3.844783306121826
    8. ' =' → logprob: -3.969783306121826
    9. '   ' → logprob: -4.094783306121826
    10. '_steps' → logprob: -4.344783306121826

Token 673: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027060333639383316
    2. ',' → logprob: -4.277060508728027
    3. '0' → logprob: -5.277060508728027
    4. ' ' → logprob: -6.277060508728027
    5. ' self' → logprob: -6.902060508728027
    6. 'self' → logprob: -7.027060508728027
    7. '   ' → logprob: -7.152060508728027
    8. '=' → logprob: -7.152060508728027
    9. '        
' → logprob: -7.652060508728027
    10. '10' → logprob: -8.152060508728027

Token 674: ' DP' (ID: 51992)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4159087836742401
    2. 'self' → logprob: -2.2909088134765625
    3. ' distance' → logprob: -2.9159088134765625
    4. ' distances' → logprob: -3.0409088134765625
    5. 'time' → logprob: -3.9159088134765625
    6. ' self' → logprob: -3.9159088134765625
    7. ' the' → logprob: -4.0409088134765625
    8. 'dist' → logprob: -4.0409088134765625
    9. 'the' → logprob: -4.0409088134765625
    10. ' time' → logprob: -4.5409088134765625

Token 675: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016126571223139763
    2. 'self' → logprob: -4.89112663269043
    3. ' self' → logprob: -5.14112663269043
    4. ',' → logprob: -6.76612663269043
    5. '   ' → logprob: -7.64112663269043
    6. ' ' → logprob: -8.26612663269043
    7. '        
' → logprob: -8.39112663269043
    8. '
' → logprob: -8.64112663269043
    9. '0' → logprob: -9.89112663269043
    10. '100' → logprob: -10.01612663269043

Token 676: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016153080388903618
    2. ' ' → logprob: -5.016152858734131
    3. '   ' → logprob: -5.766152858734131
    4. ' self' → logprob: -6.891152858734131
    5. '0' → logprob: -7.141152858734131
    6. ',' → logprob: -7.266152858734131
    7. 'self' → logprob: -7.266152858734131
    8. '        
' → logprob: -7.266152858734131
    9. '<|end|>' → logprob: -7.391152858734131
    10. '10' → logprob: -7.891152858734131

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011933216592296958
    2. 'self' → logprob: -6.876193523406982
    3. ' self' → logprob: -8.876193046569824
    4. ',' → logprob: -11.876193046569824
    5. '   ' → logprob: -12.376193046569824
    6. '
' → logprob: -13.251193046569824
    7. '20' → logprob: -13.501193046569824
    8. '10' → logprob: -13.751193046569824
    9. '        
' → logprob: -13.751193046569824
    10. '      ' → logprob: -13.876193046569824

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01339750923216343
    2. '       ' → logprob: -4.638397693634033
    3. ' self' → logprob: -5.638397693634033
    4. '   ' → logprob: -10.388397216796875
    5. '0' → logprob: -10.513397216796875
    6. '10' → logprob: -12.138397216796875
    7. '1' → logprob: -12.763397216796875
    8. '100' → logprob: -13.013397216796875
    9. ' ' → logprob: -13.138397216796875
    10. '20' → logprob: -13.513397216796875

Token 679: '.e' (ID: 2560)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.3970516324043274
    2. '.e' → logprob: -2.1470515727996826
    3. '.' → logprob: -2.3970515727996826
    4. '.step' → logprob: -2.6470515727996826
    5. '.prec' → logprob: -3.7720515727996826
    6. '.dis' → logprob: -5.522051811218262
    7. '._' → logprob: -5.647051811218262
    8. '.state' → logprob: -5.772051811218262
    9. '.dp' → logprob: -6.022051811218262
    10. '.delta' → logprob: -6.147051811218262

Token 680: 'ps' (ID: 947)
  Prédit: 'psilon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.08989524096250534
    2. 'ps' → logprob: -2.464895248413086
    3. 'psi' → logprob: -7.464895248413086
    4. 'p' → logprob: -8.964895248413086
    5. 'rror' → logprob: -9.214895248413086
    6. '=' → logprob: -10.714895248413086
    7. 'PS' → logprob: -10.839895248413086
    8. '-' → logprob: -11.214895248413086
    9. '_ps' → logprob: -11.339895248413086
    10. '_' → logprob: -11.339895248413086

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023711606860160828
    2. '=' → logprob: -3.773711681365967
    3. ' ' → logprob: -8.273711204528809
    4. ':' → logprob: -8.648711204528809
    5. '_' → logprob: -10.773711204528809
    6. '  ' → logprob: -12.148711204528809
    7. '_space' → logprob: -12.773711204528809
    8. ',' → logprob: -14.023711204528809
    9. ' :' → logprob: -14.023711204528809
    10. 'space' → logprob: -14.648711204528809

Token 682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11283113807439804
    2. '0' → logprob: -2.2378311157226562
    3. ' ' → logprob: -12.237831115722656
    4. '5' → logprob: -13.737831115722656
    5. '-' → logprob: -13.862831115722656
    6. '=' → logprob: -14.112831115722656
    7. '2' → logprob: -14.862831115722656
    8. '   ' → logprob: -15.862831115722656
    9. '```' → logprob: -16.050331115722656
    10. 'e' → logprob: -16.175331115722656

Token 683: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287152588367462
    2. '1' → logprob: -1.0537152290344238
    3. '-' → logprob: -12.553715705871582
    4. '5' → logprob: -12.553715705871582
    5. ' ' → logprob: -12.928715705871582
    6. '2' → logprob: -13.053715705871582
    7. '3' → logprob: -13.928715705871582
    8. '4' → logprob: -14.303715705871582
    9. '6' → logprob: -14.678715705871582
    10. '100' → logprob: -15.053715705871582

Token 684: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6975979208946228
    2. '.' → logprob: -0.8225979208946228
    3. '-' → logprob: -3.0725979804992676
    4. '0' → logprob: -4.197597980499268
    5. '.e' → logprob: -7.947597980499268
    6. '3' → logprob: -8.44759750366211
    7. '6' → logprob: -8.57259750366211
    8. ' .' → logprob: -8.82259750366211
    9. '00' → logprob: -9.19759750366211
    10. '4' → logprob: -9.57259750366211

Token 685: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.599403423024341e-05
    2. '3' → logprob: -10.125065803527832
    3. '5' → logprob: -11.875065803527832
    4. '2' → logprob: -11.875065803527832
    5. '4' → logprob: -12.250065803527832
    6. '6' → logprob: -12.375065803527832
    7. '1' → logprob: -14.250065803527832
    8. '0' → logprob: -14.500065803527832
    9. '7' → logprob: -14.625065803527832
    10. '8' → logprob: -15.375065803527832

Token 686: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7202051281929016
    2. '5' → logprob: -1.5952050685882568
    3. '4' → logprob: -1.8452050685882568
    4. '6' → logprob: -1.9702050685882568
    5. '2' → logprob: -4.470205307006836
    6. '7' → logprob: -6.720205307006836
    7. '-' → logprob: -8.220205307006836
    8. '1' → logprob: -9.345205307006836
    9. '8' → logprob: -10.595205307006836
    10. '9' → logprob: -11.595205307006836

Token 687: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09995999932289124
    2. '<|end|>' → logprob: -3.0999600887298584
    3. '   ' → logprob: -3.8499600887298584
    4. 'self' → logprob: -4.349959850311279
    5. '
' → logprob: -4.849959850311279
    6. ' def' → logprob: -5.474959850311279
    7. '       ' → logprob: -5.849959850311279
    8. '    
' → logprob: -8.724960327148438
    9. '        
' → logprob: -8.974960327148438
    10. ' self' → logprob: -8.974960327148438

Token 690: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007691679522395134
    2. 'def' → logprob: -5.632691860198975
    3. '#' → logprob: -5.757691860198975
    4. 'max' → logprob: -8.257691383361816
    5. '...' → logprob: -8.757691383361816
    6. 'import' → logprob: -8.757691383361816
    7. '<|end|>' → logprob: -9.132691383361816
    8. ' self' → logprob: -9.257691383361816
    9. 'from' → logprob: -10.507691383361816
    10. 'pass' → logprob: -10.507691383361816

Token 691: ' solve' (ID: 17722)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0352438688278198
    2. ' can' → logprob: -2.2852439880371094
    3. ' need' → logprob: -2.5352439880371094
    4. '   ' → logprob: -2.5352439880371094
    5. ' def' → logprob: -2.7852439880371094
    6. ' have' → logprob: -3.0352439880371094
    7. 're' → logprob: -3.4102439880371094
    8. ' want' → logprob: -3.4102439880371094
    9. 'def' → logprob: -3.6602439880371094
    10. ' will' → logprob: -3.6602439880371094

Token 692: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8874022364616394
    2. 'def' → logprob: -1.3874022960662842
    3. 'the' → logprob: -2.012402296066284
    4. ' for' → logprob: -2.137402296066284
    5. 'self' → logprob: -3.512402296066284
    6. ' the' → logprob: -3.762402296066284
    7. '<|end|>' → logprob: -4.262402057647705
    8. '   ' → logprob: -5.512402057647705
    9. '       ' → logprob: -5.637402057647705
    10. 'a' → logprob: -6.012402057647705

Token 693: ' distances' (ID: 48294)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2725839614868164
    2. 'a' → logprob: -1.5225839614868164
    3. ' the' → logprob: -1.5225839614868164
    4. ' a' → logprob: -2.1475839614868164
    5. 'self' → logprob: -2.5225839614868164
    6. '[' → logprob: -3.5225839614868164
    7. 'interval' → logprob: -4.647583961486816
    8. ' self' → logprob: -5.022583961486816
    9. ' [' → logprob: -5.147583961486816
    10. ' distances' → logprob: -5.272583961486816

Token 694: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 695: 'A' (ID: 32)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4382694959640503
    2. '_a' → logprob: -2.06326961517334
    3. 'A' → logprob: -2.18826961517334
    4. 'a' → logprob: -2.43826961517334
    5. '_A' → logprob: -4.93826961517334
    6. '_' → logprob: -4.93826961517334
    7. ' A' → logprob: -5.31326961517334
    8. ',' → logprob: -6.31326961517334
    9. ' a' → logprob: -6.43826961517334
    10. ' ' → logprob: -7.18826961517334

Token 696: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06844904273748398
    2. ' and' → logprob: -2.818449020385742
    3. ' ,' → logprob: -5.443449020385742
    4. 'and' → logprob: -6.318449020385742
    5. ' ' → logprob: -8.818449020385742
    6. '=' → logprob: -10.443449020385742
    7. '   ' → logprob: -10.693449020385742
    8. '_' → logprob: -10.943449020385742
    9. ',
' → logprob: -11.443449020385742
    10. '<|end|>' → logprob: -11.443449020385742

Token 697: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6327427625656128
    2. ' d' → logprob: -0.7577427625656128
    3. ' ' → logprob: -9.007742881774902
    4. '   ' → logprob: -11.632742881774902
    5. ' ' → logprob: -11.882742881774902
    6. '_d' → logprob: -13.257742881774902
    7. '  ' → logprob: -13.507742881774902
    8. '	d' → logprob: -14.320242881774902
    9. 'B' → logprob: -15.632742881774902
    10. ',' → logprob: -15.695242881774902

Token 698: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.660315895918757e-05
    2. '_B' → logprob: -9.875076293945312
    3. ' B' → logprob: -11.625076293945312
    4. ',' → logprob: -12.625076293945312
    5. 'd' → logprob: -12.625076293945312
    6. '_' → logprob: -13.125076293945312
    7. ' ' → logprob: -13.250076293945312
    8. 'A' → logprob: -14.125076293945312
    9. '1' → logprob: -14.312576293945312
    10. 'Bob' → logprob: -14.500076293945312

Token 699: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.16689932346344
    2. '       ' → logprob: -1.16689932346344
    3. '   ' → logprob: -1.29189932346344
    4. '.' → logprob: -3.6668992042541504
    5. ' ' → logprob: -3.6668992042541504
    6. '<|end|>' → logprob: -3.7918992042541504
    7. ':' → logprob: -5.41689920425415
    8. '  ' → logprob: -5.54189920425415
    9. '
' → logprob: -5.54189920425415
    10. '    ' → logprob: -5.66689920425415

Token 700: ' each' (ID: 2454)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40834125876426697
    2. 'start' → logprob: -1.2833412885665894
    3. 'the' → logprob: -3.2833411693573
    4. 'self' → logprob: -4.908341407775879
    5. ' start' → logprob: -5.158341407775879
    6. ' the' → logprob: -5.658341407775879
    7. ' ' → logprob: -6.408341407775879
    8. 'each' → logprob: -7.033341407775879
    9. 'both' → logprob: -7.658341407775879
    10. 'route' → logprob: -8.283341407775879

Token 701: ' start' (ID: 1604)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.3991807997226715
    2. 'other' → logprob: -1.3991807699203491
    3. 'start' → logprob: -4.149180889129639
    4. 'point' → logprob: -4.149180889129639
    5. 'self' → logprob: -4.399180889129639
    6. 'def' → logprob: -4.399180889129639
    7. 'class' → logprob: -4.899180889129639
    8. 'of' → logprob: -5.274180889129639
    9. 'agent' → logprob: -5.274180889129639
    10. 'end' → logprob: -6.274180889129639

Token 702: ' (' (ID: 350)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.3945821225643158
    2. 'points' → logprob: -1.8945821523666382
    3. ' positions' → logprob: -2.6445820331573486
    4. ' point' → logprob: -3.5195820331573486
    5. 'positions' → logprob: -3.7695820331573486
    6. '_points' → logprob: -4.019582271575928
    7. 'point' → logprob: -4.519582271575928
    8. ',' → logprob: -4.519582271575928
    9. '_point' → logprob: -5.519582271575928
    10. '_positions' → logprob: -5.894582271575928

Token 703: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2404988557100296
    2. ',' → logprob: -3.1154987812042236
    3. ' and' → logprob: -3.3654987812042236
    4. ' for' → logprob: -3.6154987812042236
    5. 'A' → logprob: -3.9904987812042236
    6. ' to' → logprob: -4.490499019622803
    7. ' )' → logprob: -4.490499019622803
    8. ')
' → logprob: -4.740499019622803
    9. ' route' → logprob: -4.990499019622803
    10. 'for' → logprob: -5.740499019622803

Token 704: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18022257089614868
    2. ')' → logprob: -2.805222511291504
    3. '),' → logprob: -3.430222511291504
    4. '.' → logprob: -3.555222511291504
    5. ' ,' → logprob: -3.680222511291504
    6. ' and' → logprob: -4.305222511291504
    7. '0' → logprob: -6.805222511291504
    8. ' )' → logprob: -7.555222511291504
    9. ' to' → logprob: -7.555222511291504
    10. ' ),' → logprob: -7.680222511291504

Token 705: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12571074068546295
    2. 'route' → logprob: -2.6257107257843018
    3. '1' → logprob: -3.3757107257843018
    4. ' self' → logprob: -4.875710964202881
    5. ' route' → logprob: -6.500710964202881
    6. ' ' → logprob: -7.375710964202881
    7. '100' → logprob: -7.750710964202881
    8. 'total' → logprob: -7.875710964202881
    9. '0' → logprob: -8.500710487365723
    10. ')' → logprob: -8.625710487365723

Token 706: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00010890735575230792
    2. '_distance' → logprob: -9.62510871887207
    3. ')' → logprob: -10.87510871887207
    4. '_' → logprob: -11.37510871887207
    5. 'length' → logprob: -12.12510871887207
    6. '_route' → logprob: -13.00010871887207
    7. ' length' → logprob: -13.50010871887207
    8. 'Length' → logprob: -14.00010871887207
    9. ')_' → logprob: -14.37510871887207
    10. '   ' → logprob: -15.12510871887207

Token 707: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05148441717028618
    2. ',' → logprob: -3.4264843463897705
    3. ').' → logprob: -5.42648458480835
    4. '),' → logprob: -5.42648458480835
    5. ' for' → logprob: -5.92648458480835
    6. ')
' → logprob: -6.30148458480835
    7. ' )' → logprob: -7.05148458480835
    8. '   ' → logprob: -7.80148458480835
    9. ' of' → logprob: -7.92648458480835
    10. ';' → logprob: -7.92648458480835

Token 708: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 709: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: '.L' (ID: 2024)
  Prédit: '.total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.41681766510009766
    2. '.max' → logprob: -2.1668176651000977
    3. '.def' → logprob: -2.4168176651000977
    4. '.route' → logprob: -3.4168176651000977
    5. 'def' → logprob: -3.7918176651000977
    6. '.' → logprob: -3.9168176651000977
    7. '.dp' → logprob: -4.416817665100098
    8. '.e' → logprob: -4.666817665100098
    9. '.start' → logprob: -4.666817665100098
    10. '.min' → logprob: -5.416817665100098

Token 711: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023263299837708473
    2. '=' → logprob: -3.7732632160186768
    3. ':' → logprob: -11.648262977600098
    4. '=self' → logprob: -12.898262977600098
    5. 'A' → logprob: -13.148262977600098
    6. ',' → logprob: -13.773262977600098
    7. '   ' → logprob: -14.398262977600098
    8. 'f' → logprob: -14.398262977600098
    9. '_total' → logprob: -14.398262977600098
    10. '_' → logprob: -14.648262977600098

Token 712: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18835896253585815
    2. ' self' → logprob: -2.063359022140503
    3. 'route' → logprob: -3.188359022140503
    4. ' route' → logprob: -5.688358783721924
    5. '   ' → logprob: -11.063359260559082
    6. ' ' → logprob: -11.688359260559082
    7. '1' → logprob: -13.688359260559082
    8. '0' → logprob: -14.438359260559082
    9. '100' → logprob: -14.438359260559082
    10. 'float' → logprob: -14.438359260559082

Token 713: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -6.909333023941144e-05
    2. 'route' → logprob: -9.750068664550781
    3. '.' → logprob: -11.875068664550781
    4. '.total' → logprob: -12.500068664550781
    5. ' route' → logprob: -17.37506866455078
    6. ' .' → logprob: -17.37506866455078
    7. '$route' → logprob: -18.25006866455078
    8. '.routes' → logprob: -18.37506866455078
    9. '.user' → logprob: -18.75006866455078
    10. '_route' → logprob: -18.87506866455078

Token 714: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0011834424221888185
    2. '.' → logprob: -6.75118350982666
    3. '.length' → logprob: -12.25118350982666
    4. ' .' → logprob: -13.00118350982666
    5. 'total' → logprob: -13.37618350982666
    6. '.points' → logprob: -13.87618350982666
    7. '
' → logprob: -14.62618350982666
    8. '   ' → logprob: -14.75118350982666
    9. ' ' → logprob: -14.87618350982666
    10. ').' → logprob: -15.00118350982666

Token 715: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: 0.0
    2. 'length' → logprob: -17.0
    3. '_l' → logprob: -18.0
    4. '_' → logprob: -19.25
    5. '_len' → logprob: -19.625
    6. '_le' → logprob: -20.875
    7. '_lengths' → logprob: -21.5
    8. '_LENGTH' → logprob: -21.75
    9. '_distance' → logprob: -21.875
    10. 'ength' → logprob: -21.875

Token 716: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6044872999191284
    2. 'def' → logprob: -1.3544872999191284
    3. '<|end|>' → logprob: -1.8544872999191284
    4. ' def' → logprob: -4.104487419128418
    5. '
' → logprob: -4.479487419128418
    6. '    
' → logprob: -4.979487419128418
    7. '<|end|>' → logprob: -6.479487419128418
    8. ')' → logprob: -7.354487419128418
    9. ' ' → logprob: -7.479487419128418
    10. ',' → logprob: -7.729487419128418

Token 718: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.578184497309849e-05
    2. ' def' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.000085830688477
    4. '```' → logprob: -17.625085830688477
    5. '	def' → logprob: -17.875085830688477
    6. ')' → logprob: -18.125085830688477
    7. 'self' → logprob: -18.375085830688477
    8. '    
' → logprob: -18.375085830688477
    9. '
' → logprob: -18.375085830688477
    10. '        
' → logprob: -19.500085830688477

Token 719: ' altitude' (ID: 66032)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2885058522224426
    2. 'can' → logprob: -1.9135057926177979
    3. 'solve' → logprob: -3.913505792617798
    4. ' max' → logprob: -4.413506031036377
    5. 'maximize' → logprob: -4.663506031036377
    6. 'best' → logprob: -4.663506031036377
    7. 'meet' → logprob: -4.788506031036377
    8. 'find' → logprob: -4.913506031036377
    9. 'min' → logprob: -5.038506031036377
    10. 'time' → logprob: -5.288506031036377

Token 720: '_equal' (ID: 27882)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0010075619211420417
    2. '_difference' → logprob: -7.501007556915283
    3. '_' → logprob: -10.001008033752441
    4. '_to' → logprob: -10.126008033752441
    5. '_diff' → logprob: -10.126008033752441
    6. '_between' → logprob: -10.126008033752441
    7. 'def' → logprob: -10.251008033752441
    8. '_s' → logprob: -10.876008033752441
    9. 's' → logprob: -10.876008033752441
    10. '   ' → logprob: -11.001008033752441

Token 721: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.598253071308136
    2. '_at' → logprob: -0.973253071308136
    3. '(' → logprob: -2.973253011703491
    4. '_' → logprob: -4.09825325012207
    5. '_to' → logprob: -6.72325325012207
    6. '_(' → logprob: -6.84825325012207
    7. 'ity' → logprob: -7.22325325012207
    8. 's' → logprob: -7.72325325012207
    9. '   ' → logprob: -8.09825325012207
    10. 'self' → logprob: -8.59825325012207

Token 722: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6502014398574829
    2. '_at' → logprob: -0.7752014398574829
    3. '(' → logprob: -4.150201320648193
    4. ')' → logprob: -7.525201320648193
    5. '   ' → logprob: -8.525201797485352
    6. 'at' → logprob: -8.650201797485352
    7. '_to' → logprob: -8.775201797485352
    8. ',' → logprob: -9.275201797485352
    9. '(a' → logprob: -9.275201797485352
    10. '(at' → logprob: -9.525201797485352

Token 723: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00878060981631279
    2. 'self' → logprob: -5.383780479431152
    3. '   ' → logprob: -6.258780479431152
    4. 'dist' → logprob: -7.258780479431152
    5. 'da' → logprob: -7.633780479431152
    6. ' d' → logprob: -7.633780479431152
    7. '       ' → logprob: -8.258780479431152
    8. 'a' → logprob: -9.258780479431152
    9. 'alt' → logprob: -9.633780479431152
    10. ')' → logprob: -9.883780479431152

Token 724: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02243136242032051
    2. ':' → logprob: -4.397431373596191
    3. ',' → logprob: -4.772431373596191
    4. 'a' → logprob: -7.397431373596191
    5. '_A' → logprob: -7.897431373596191
    6. '_a' → logprob: -8.272431373596191
    7. ')' → logprob: -10.022431373596191
    8. '   ' → logprob: -10.022431373596191
    9. ' A' → logprob: -10.647431373596191
    10. '):' → logprob: -10.897431373596191

Token 725: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000896693323738873
    2. ':' → logprob: -7.62589693069458
    3. ' ,' → logprob: -8.000896453857422
    4. ',d' → logprob: -9.875896453857422
    5. '   ' → logprob: -11.750896453857422
    6. 'd' → logprob: -12.125896453857422
    7. ',float' → logprob: -13.125896453857422
    8. ',
' → logprob: -13.250896453857422
    9. ')' → logprob: -13.625896453857422
    10. ':,' → logprob: -13.750896453857422

Token 726: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.012520721182227135
    2. ' float' → logprob: -4.387520790100098
    3. 'flo' → logprob: -12.387520790100098
    4. ',float' → logprob: -13.012520790100098
    5. '   ' → logprob: -13.762520790100098
    6. ',' → logprob: -14.262520790100098
    7. 'd' → logprob: -14.512520790100098
    8. '	float' → logprob: -14.762520790100098
    9. ' ' → logprob: -14.762520790100098
    10. '=float' → logprob: -15.137520790100098

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -9.750070571899414
    3. ',d' → logprob: -11.500070571899414
    4. '   ' → logprob: -14.375070571899414
    5. ',
' → logprob: -14.750070571899414
    6. ')' → logprob: -15.250070571899414
    7. 'd' → logprob: -15.625070571899414
    8. ',float' → logprob: -15.625070571899414
    9. '‌,' → logprob: -16.375070571899414
    10. ':' → logprob: -16.500070571899414

Token 728: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3132859468460083
    2. ' d' → logprob: -1.3132859468460083
    3. '   ' → logprob: -11.563285827636719
    4. ' ' → logprob: -12.063285827636719
    5. '    ' → logprob: -12.313285827636719
    6. '  ' → logprob: -13.938285827636719
    7. '	d' → logprob: -14.188285827636719
    8. '     ' → logprob: -14.313285827636719
    9. ' ' → logprob: -14.313285827636719
    10. '       ' → logprob: -15.125785827636719

Token 729: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.020800422877073288
    2. ',' → logprob: -3.8958003520965576
    3. '.' → logprob: -9.395800590515137
    4. 'A' → logprob: -9.645800590515137
    5. '=' → logprob: -10.395800590515137
    6. ':' → logprob: -10.645800590515137
    7. 'd' → logprob: -10.895800590515137
    8. '   ' → logprob: -11.270800590515137
    9. ')' → logprob: -12.145800590515137
    10. '```' → logprob: -12.270800590515137

Token 730: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3875828683376312
    2. ')' → logprob: -1.1375828981399536
    3. '):' → logprob: -7.637582778930664
    4. '   ' → logprob: -9.012582778930664
    5. ' )' → logprob: -9.387582778930664
    6. '):
' → logprob: -11.512582778930664
    7. ',' → logprob: -11.887582778930664
    8. ' :' → logprob: -13.137582778930664
    9. ' ' → logprob: -13.637582778930664
    10. '       ' → logprob: -14.387582778930664

Token 731: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.000553151941858232
    2. ' float' → logprob: -7.500553131103516
    3. 'flo' → logprob: -16.500553131103516
    4. '(float' → logprob: -17.000553131103516
    5. '	float' → logprob: -17.125553131103516
    6. ')' → logprob: -17.375553131103516
    7. '   ' → logprob: -17.625553131103516
    8. ' ' → logprob: -17.875553131103516
    9. '=float' → logprob: -18.250553131103516
    10. '<float' → logprob: -18.500553131103516

Token 732: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016528061823919415
    2. ':' → logprob: -6.501652717590332
    3. '   ' → logprob: -9.251652717590332
    4. ' )' → logprob: -10.251652717590332
    5. '")' → logprob: -11.876652717590332
    6. '):' → logprob: -12.501652717590332
    7. ' ' → logprob: -12.626652717590332
    8. '):
' → logprob: -13.626652717590332
    9. '    ' → logprob: -14.376652717590332
    10. '`)' → logprob: -14.376652717590332

Token 733: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.13118915259838104
    2. ' ->' → logprob: -2.1311891078948975
    3. ')' → logprob: -6.006189346313477
    4. ':' → logprob: -6.881189346313477
    5. ')->' → logprob: -7.381189346313477
    6. '   ' → logprob: -9.256189346313477
    7. ',' → logprob: -11.881189346313477
    8. '       ' → logprob: -12.006189346313477
    9. '-' → logprob: -12.131189346313477
    10. '->[' → logprob: -12.381189346313477

Token 734: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.8325677703833207e-05
    2. ' bool' → logprob: -10.875028610229492
    3. 'float' → logprob: -11.750028610229492
    4. 'Optional' → logprob: -13.875028610229492
    5. 'abs' → logprob: -15.375028610229492
    6. '	bool' → logprob: -16.250028610229492
    7. '   ' → logprob: -16.750028610229492
    8. 'int' → logprob: -17.125028610229492
    9. '(bool' → logprob: -17.625028610229492
    10. ' ' → logprob: -17.875028610229492

Token 735: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12534861266613007
    2. '       ' → logprob: -3.1253485679626465
    3. ':
' → logprob: -3.2503485679626465
    4. '<|end|>' → logprob: -4.3753485679626465
    5. '(self' → logprob: -4.5003485679626465
    6. '   ' → logprob: -5.2503485679626465
    7. ',' → logprob: -6.0003485679626465
    8. '(' → logprob: -6.7503485679626465
    9. 'self' → logprob: -8.000349044799805
    10. '):
' → logprob: -8.125349044799805

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002880337997339666
    2. ' return' → logprob: -8.750288009643555
    3. '   ' → logprob: -9.500288009643555
    4. '    ' → logprob: -11.125288009643555
    5. 'return' → logprob: -11.750288009643555
    6. '        
' → logprob: -12.000288009643555
    7. '<|end|>' → logprob: -12.250288009643555
    8. '        ' → logprob: -12.375288009643555
    9. '     ' → logprob: -12.750288009643555
    10. '           ' → logprob: -13.125288009643555

Token 737: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.050232112407684326
    2. 'abs' → logprob: -3.050232172012329
    3. '       ' → logprob: -6.42523193359375
    4. ' return' → logprob: -10.80023193359375
    5. '   ' → logprob: -14.17523193359375
    6. ' abs' → logprob: -14.55023193359375
    7. 'self' → logprob: -14.92523193359375
    8. 'diff' → logprob: -15.05023193359375
    9. 'dist' → logprob: -15.42523193359375
    10. '```' → logprob: -15.42523193359375

Token 738: ' Check' (ID: 6208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3869608938694
    2. 'abs' → logprob: -1.1369608640670776
    3. '       ' → logprob: -9.761960983276367
    4. '   ' → logprob: -10.636960983276367
    5. ' return' → logprob: -12.386960983276367
    6. ' abs' → logprob: -14.011960983276367
    7. 'math' → logprob: -14.136960983276367
    8. 'self' → logprob: -14.761960983276367
    9. 'def' → logprob: -15.011960983276367
    10. 'threshold' → logprob: -15.136960983276367

Token 739: ' if' (ID: 538)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7333096861839294
    2. ' abs' → logprob: -0.8583096861839294
    3. 'return' → logprob: -3.108309745788574
    4. ' return' → logprob: -3.233309745788574
    5. '       ' → logprob: -4.483309745788574
    6. 'self' → logprob: -8.983309745788574
    7. 'math' → logprob: -9.108309745788574
    8. ' self' → logprob: -9.733309745788574
    9. ' math' → logprob: -9.983309745788574
    10. '   ' → logprob: -10.233309745788574

Token 740: ' alt' (ID: 5001)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.000343210413120687
    2. 'math' → logprob: -8.000343322753906
    3. ' abs' → logprob: -11.875343322753906
    4. '   ' → logprob: -14.250343322753906
    5. 'self' → logprob: -16.125343322753906
    6. '(abs' → logprob: -16.875343322753906
    7. '       ' → logprob: -18.375343322753906
    8. '
' → logprob: -19.125343322753906
    9. 'fabs' → logprob: -19.625343322753906
    10. '```' → logprob: -20.250343322753906

Token 741: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.00025156480842269957
    2. '   ' → logprob: -8.875251770019531
    3. 'i' → logprob: -10.125251770019531
    4. ' ' → logprob: -10.750251770019531
    5. '       ' → logprob: -11.125251770019531
    6. '  ' → logprob: -11.625251770019531
    7. 'it' → logprob: -12.125251770019531
    8. '     ' → logprob: -12.375251770019531
    9. 'itudes' → logprob: -12.375251770019531
    10. 'itud' → logprob: -12.625251770019531

Token 742: ' are' (ID: 553)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.26327189803123474
    2. ' are' → logprob: -1.6382719278335571
    3. 'self' → logprob: -4.763271808624268
    4. 'are' → logprob: -4.888271808624268
    5. 'at' → logprob: -5.013271808624268
    6. '       ' → logprob: -5.013271808624268
    7. '   ' → logprob: -5.638271808624268
    8. ' self' → logprob: -6.888271808624268
    9. ' of' → logprob: -7.638271808624268
    10. '(self' → logprob: -7.763271808624268

Token 743: ' equal' (ID: 12629)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.014474676921963692
    2. 'math' → logprob: -4.264474868774414
    3. ' abs' → logprob: -8.389474868774414
    4. 'equal' → logprob: -10.264474868774414
    5. ' math' → logprob: -11.014474868774414
    6. 'close' → logprob: -11.514474868774414
    7. 'self' → logprob: -11.764474868774414
    8. '(abs' → logprob: -12.514474868774414
    9. 'approximately' → logprob: -12.889474868774414
    10. '```' → logprob: -12.889474868774414

Token 744: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17850206792354584
    2. ' and' → logprob: -2.303502082824707
    3. '(' → logprob: -3.553502082824707
    4. '(self' → logprob: -4.428502082824707
    5. ' (' → logprob: -4.803502082824707
    6. '   ' → logprob: -5.178502082824707
    7. ',' → logprob: -5.803502082824707
    8. 'and' → logprob: -6.553502082824707
    9. 'return' → logprob: -7.178502082824707
    10. ' at' → logprob: -7.553502082824707

Token 745: ' respective' (ID: 24958)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03584612160921097
    2. ' d' → logprob: -4.03584623336792
    3. 'self' → logprob: -5.41084623336792
    4. 'the' → logprob: -5.78584623336792
    5. 'round' → logprob: -6.03584623336792
    6. ' the' → logprob: -6.03584623336792
    7. ' distances' → logprob: -6.78584623336792
    8. ' (' → logprob: -7.16084623336792
    9. 'distance' → logprob: -7.16084623336792
    10. 'abs' → logprob: -7.41084623336792

Token 746: ' distances' (ID: 48294)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4150432050228119
    2. 'dist' → logprob: -1.2900432348251343
    3. ' distances' → logprob: -3.1650431156158447
    4. 'distance' → logprob: -4.665043354034424
    5. 'self' → logprob: -5.290043354034424
    6. ' d' → logprob: -6.165043354034424
    7. 'A' → logprob: -6.790043354034424
    8. 'positions' → logprob: -6.915043354034424
    9. 'points' → logprob: -7.040043354034424
    10. ' points' → logprob: -7.790043354034424

Token 747: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5038319230079651
    2. '(self' → logprob: -1.8788318634033203
    3. ' (' → logprob: -2.1288318634033203
    4. '(' → logprob: -2.2538318634033203
    5. '   ' → logprob: -5.12883186340332
    6. 'self' → logprob: -5.37883186340332
    7. 'from' → logprob: -6.12883186340332
    8. ' from' → logprob: -6.75383186340332
    9. ',' → logprob: -6.75383186340332
    10. ' ' → logprob: -7.00383186340332

Token 748: 'from' (ID: 2845)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7154495716094971
    2. 'self' → logprob: -2.090449571609497
    3. 'd' → logprob: -2.215449571609497
    4. '       ' → logprob: -2.340449571609497
    5. ')' → logprob: -2.465449571609497
    6. 'return' → logprob: -2.965449571609497
    7. 'from' → logprob: -4.340449333190918
    8. ' abs' → logprob: -4.590449333190918
    9. ')
' → logprob: -5.465449333190918
    10. 'def' → logprob: -5.965449333190918

Token 749: ' respective' (ID: 24958)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33421391248703003
    2. 'start' → logprob: -2.209213972091675
    3. ')' → logprob: -2.959213972091675
    4. 'the' → logprob: -3.584213972091675
    5. ' start' → logprob: -3.834213972091675
    6. 'both' → logprob: -3.834213972091675
    7. ' self' → logprob: -4.209213733673096
    8. ' the' → logprob: -4.709213733673096
    9. ' both' → logprob: -4.834213733673096
    10. 'A' → logprob: -5.084213733673096

Token 750: ' ends' (ID: 17095)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.03785555809736252
    2. 'routes' → logprob: -4.162855625152588
    3. ' starts' → logprob: -4.287855625152588
    4. 'route' → logprob: -5.912855625152588
    5. 'start' → logprob: -6.287855625152588
    6. ')' → logprob: -6.412855625152588
    7. ' routes' → logprob: -6.912855625152588
    8. 'ends' → logprob: -8.78785514831543
    9. 'starting' → logprob: -8.78785514831543
    10. 's' → logprob: -9.66285514831543

Token 751: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013360454700887203
    2. ')
' → logprob: -4.638360500335693
    3. ' )' → logprob: -6.263360500335693
    4. '       ' → logprob: -7.013360500335693
    5. '):
' → logprob: -8.263360023498535
    6. '):' → logprob: -8.388360023498535
    7. ' )
' → logprob: -9.138360023498535
    8. '   ' → logprob: -9.763360023498535
    9. ').' → logprob: -10.388360023498535
    10. ',' → logprob: -10.513360023498535

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027384241111576557
    2. '(' → logprob: -7.0027384757995605
    3. '   ' → logprob: -7.8777384757995605
    4. ':' → logprob: -8.002737998962402
    5. ')' → logprob: -8.002737998962402
    6. ',' → logprob: -8.127737998962402
    7. '<|end|>' → logprob: -8.627737998962402
    8. '(self' → logprob: -10.127737998962402
    9. ' (' → logprob: -10.127737998962402
    10. '        
' → logprob: -10.502737998962402

Token 753: ' #' (ID: 1069)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.5129913687705994
    2. 'return' → logprob: -1.3879914283752441
    3. '       ' → logprob: -2.512991428375244
    4. 'a' → logprob: -3.637991428375244
    5. 'y' → logprob: -3.887991428375244
    6. 'h' → logprob: -4.012991428375244
    7. '   ' → logprob: -6.137991428375244
    8. 'A' → logprob: -7.387991428375244
    9. 'left' → logprob: -7.512991428375244
    10. 'abs' → logprob: -7.637991428375244

Token 754: ' d' (ID: 272)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.13882078230381012
    2. 'a' → logprob: -3.0138208866119385
    3. 'y' → logprob: -3.3888208866119385
    4. 'h' → logprob: -3.6388208866119385
    5. 'return' → logprob: -4.138820648193359
    6. '   ' → logprob: -6.388820648193359
    7. 'point' → logprob: -6.513820648193359
    8. 'pos' → logprob: -8.01382064819336
    9. 'height' → logprob: -8.76382064819336
    10. 'A' → logprob: -9.01382064819336

Token 755: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002529290970414877
    2. 'B' → logprob: -7.002529144287109
    3. 'istance' → logprob: -7.502529144287109
    4. ' =' → logprob: -7.627529144287109
    5. '=' → logprob: -8.12752914428711
    6. 'return' → logprob: -9.12752914428711
    7. 'ifference' → logprob: -10.12752914428711
    8. 'ist' → logprob: -10.75252914428711
    9. 'iff' → logprob: -11.25252914428711
    10. '_alt' → logprob: -11.62752914428711

Token 756: ' measured' (ID: 26489)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_alt' → logprob: -1.465993046760559
    2. 'd' → logprob: -2.0909929275512695
    3. ',' → logprob: -2.4659929275512695
    4. ')' → logprob: -2.8409929275512695
    5. 'and' → logprob: -2.9659929275512695
    6. 'A' → logprob: -2.9659929275512695
    7. ' is' → logprob: -3.0909929275512695
    8. ' and' → logprob: -3.2159929275512695
    9. 'def' → logprob: -3.4659929275512695
    10. '=' → logprob: -3.4659929275512695

Token 757: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17754027247428894
    2. ' from' → logprob: -1.9275403022766113
    3. '_from' → logprob: -5.427540302276611
    4. '>=' → logprob: -5.552540302276611
    5. ',' → logprob: -5.927540302276611
    6. ')' → logprob: -6.552540302276611
    7. ' >=' → logprob: -6.802540302276611
    8. '=' → logprob: -7.052540302276611
    9. ' as' → logprob: -7.802540302276611
    10. '==' → logprob: -7.927540302276611

Token 758: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3155970275402069
    2. 'start' → logprob: -1.5655970573425293
    3. 'self' → logprob: -3.3155970573425293
    4. 'the' → logprob: -3.8155970573425293
    5. 'A' → logprob: -6.940597057342529
    6. ' start' → logprob: -7.190597057342529
    7. 'front' → logprob: -7.690597057342529
    8. ' ' → logprob: -7.815597057342529
    9. ' the' → logprob: -8.065596580505371
    10. 'left' → logprob: -8.565596580505371

Token 759: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7495835423469543
    2. ' and' → logprob: -0.7495835423469543
    3. ',' → logprob: -3.3745834827423096
    4. 'and' → logprob: -4.249583721160889
    5. ')' → logprob: -5.499583721160889
    6. '
' → logprob: -7.249583721160889
    7. '<|end|>' → logprob: -7.749583721160889
    8. '   ' → logprob: -7.999583721160889
    9. '        
' → logprob: -8.49958324432373
    10. ' ' → logprob: -9.24958324432373

Token 760: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5598000288009644
    2. '       ' → logprob: -0.9348000288009644
    3. ',' → logprob: -3.934800148010254
    4. 'and' → logprob: -5.059800148010254
    5. ')' → logprob: -5.184800148010254
    6. '   ' → logprob: -6.434800148010254
    7. '
' → logprob: -6.934800148010254
    8. '        
' → logprob: -7.309800148010254
    9. '<|end|>' → logprob: -8.684800148010254
    10. ' ' → logprob: -8.934800148010254

Token 761: 'x' (ID: 87)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1586501598358154
    2. '0' → logprob: -1.2836501598358154
    3. ')' → logprob: -1.6586501598358154
    4. 'd' → logprob: -2.4086501598358154
    5. 'def' → logprob: -3.2836501598358154
    6. '),' → logprob: -3.6586501598358154
    7. 'A' → logprob: -4.0336503982543945
    8. ')
' → logprob: -4.2836503982543945
    9. 'start' → logprob: -5.2836503982543945
    10. 'return' → logprob: -5.7836503982543945

Token 762: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17856189608573914
    2. ')' → logprob: -2.1785619258880615
    3. '),' → logprob: -3.9285619258880615
    4. '0' → logprob: -4.678561687469482
    5. ')
' → logprob: -5.303561687469482
    6. ' =' → logprob: -5.428561687469482
    7. 'A' → logprob: -5.678561687469482
    8. '==' → logprob: -6.428561687469482
    9. ' )' → logprob: -6.678561687469482
    10. ' ==' → logprob: -7.053561687469482

Token 763: ',y' (ID: 16103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0193817615509033
    2. ',' → logprob: -1.1443817615509033
    3. '),' → logprob: -1.2693817615509033
    4. ' ),' → logprob: -5.269381523132324
    5. ')
' → logprob: -5.394381523132324
    6. ' +' → logprob: -5.394381523132324
    7. ' )' → logprob: -5.394381523132324
    8. ' ,' → logprob: -5.519381523132324
    9. ' and' → logprob: -5.644381523132324
    10. '+' → logprob: -6.269381523132324

Token 764: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11945623904466629
    2. '),' → logprob: -2.7444562911987305
    3. '=' → logprob: -3.8694562911987305
    4. ')
' → logprob: -4.3694562911987305
    5. '1' → logprob: -4.6194562911987305
    6. '0' → logprob: -6.3694562911987305
    7. 'A' → logprob: -7.1194562911987305
    8. ',' → logprob: -7.6194562911987305
    9. ' =' → logprob: -8.24445629119873
    10. '),
' → logprob: -8.61945629119873

Token 765: ' =' (ID: 314)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21411775052547455
    2. ')' → logprob: -2.0891177654266357
    3. '),' → logprob: -2.7141177654266357
    4. '       ' → logprob: -7.089117527008057
    5. ' )
' → logprob: -7.339117527008057
    6. ')

' → logprob: -7.589117527008057
    7. ')
' → logprob: -8.464118003845215
    8. '   ' → logprob: -9.089118003845215
    9. ',' → logprob: -9.214118003845215
    10. '),
' → logprob: -9.464118003845215

Token 766: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35669782757759094
    2. 'self' → logprob: -1.2316977977752686
    3. ' ' → logprob: -5.606698036193848
    4. ' self' → logprob: -5.731698036193848
    5. '(' → logprob: -8.106698036193848
    6. 'route' → logprob: -8.106698036193848
    7. 'Point' → logprob: -8.856698036193848
    8. 'start' → logprob: -8.856698036193848
    9. 'Route' → logprob: -9.481698036193848
    10. '(self' → logprob: -9.606698036193848

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3508423864841461
    2. 'self' → logprob: -1.2258423566818237
    3. ' ' → logprob: -6.975842475891113
    4. ' self' → logprob: -7.100842475891113
    5. 'route' → logprob: -8.100842475891113
    6. ')' → logprob: -9.600842475891113
    7. 'Route' → logprob: -9.975842475891113
    8. 'Point' → logprob: -10.288342475891113
    9. '(' → logprob: -10.350842475891113
    10. '(self' → logprob: -10.850842475891113

Token 768: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4847044050693512
    2. ')
' → logprob: -1.6097043752670288
    3. ',' → logprob: -2.1097044944763184
    4. '),' → logprob: -2.9847044944763184
    5. '0' → logprob: -5.609704494476318
    6. ' )' → logprob: -6.484704494476318
    7. ',y' → logprob: -6.609704494476318
    8. '.' → logprob: -6.859704494476318
    9. ' ,' → logprob: -6.984704494476318
    10. ' )
' → logprob: -7.109704494476318

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17723678052425385
    2. 'y' → logprob: -2.052236795425415
    3. ' y' → logprob: -3.927236795425415
    4. ' ' → logprob: -4.302236557006836
    5. ')' → logprob: -8.552236557006836
    6. 'd' → logprob: -9.052236557006836
    7. '   ' → logprob: -9.677236557006836
    8. 'x' → logprob: -9.677236557006836
    9. '  ' → logprob: -10.239736557006836
    10. '    ' → logprob: -10.677236557006836

Token 770: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12182672321796417
    2. ')' → logprob: -2.621826648712158
    3. '),' → logprob: -3.246826648712158
    4. ' )
' → logprob: -6.496826648712158
    5. ')

' → logprob: -7.246826648712158
    6. ')
' → logprob: -7.621826648712158
    7. '),
' → logprob: -9.621827125549316
    8. ' )' → logprob: -9.871827125549316
    9. '       ' → logprob: -9.996827125549316
    10. ',' → logprob: -9.996827125549316

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009521945030428469
    2. ',' → logprob: -7.875952243804932
    3. ')' → logprob: -8.375951766967773
    4. '   ' → logprob: -9.500951766967773
    5. '<|end|>' → logprob: -9.500951766967773
    6. ' and' → logprob: -10.375951766967773
    7. '        
' → logprob: -10.375951766967773
    8. '```' → logprob: -11.000951766967773
    9. '
' → logprob: -11.125951766967773
    10. '        ' → logprob: -11.250951766967773

Token 772: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10559216886758804
    2. 'd' → logprob: -2.3555922508239746
    3. ' d' → logprob: -6.230592250823975
    4. 'alt' → logprob: -6.480592250823975
    5. ' alt' → logprob: -7.480592250823975
    6. '   ' → logprob: -7.980592250823975
    7. 'A' → logprob: -8.730591773986816
    8. 'return' → logprob: -8.730591773986816
    9. 'if' → logprob: -8.855591773986816
    10. 'a' → logprob: -9.355591773986816

Token 773: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013411503285169601
    2. '       ' → logprob: -5.263411521911621
    3. '#' → logprob: -5.388411521911621
    4. 'alt' → logprob: -5.888411521911621
    5. '   ' → logprob: -8.638411521911621
    6. 'return' → logprob: -8.638411521911621
    7. ' d' → logprob: -8.763411521911621
    8. 'y' → logprob: -9.388411521911621
    9. 'def' → logprob: -9.888411521911621
    10. 'e' → logprob: -11.450911521911621

Token 774: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0008101018611341715
    2. 'A' → logprob: -7.125810146331787
    3. ' B' → logprob: -13.250809669494629
    4. '#' → logprob: -13.500809669494629
    5. '=' → logprob: -14.625809669494629
    6. '_B' → logprob: -15.000809669494629
    7. '   ' → logprob: -15.375809669494629
    8. 'def' → logprob: -16.000810623168945
    9. 'from' → logprob: -16.063310623168945
    10. ')' → logprob: -16.125810623168945

Token 775: ' measured' (ID: 26489)
  Prédit: ' measured'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' measured' → logprob: -0.0375923290848732
    2. 'me' → logprob: -3.6625924110412598
    3. ' =' → logprob: -4.91259241104126
    4. '_me' → logprob: -6.41259241104126
    5. '=' → logprob: -7.53759241104126
    6. ':' → logprob: -7.66259241104126
    7. '#' → logprob: -7.91259241104126
    8. 'from' → logprob: -8.162591934204102
    9. ' is' → logprob: -8.537591934204102
    10. '   ' → logprob: -8.912591934204102

Token 776: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20145748555660248
    2. ' from' → logprob: -1.7014575004577637
    3. '_from' → logprob: -10.201457023620605
    4. ' ' → logprob: -13.326457023620605
    5. '	from' → logprob: -13.451457023620605
    6. 'to' → logprob: -14.076457023620605
    7. 'From' → logprob: -14.326457023620605
    8. ',' → logprob: -14.576457023620605
    9. '.from' → logprob: -14.576457023620605
    10. ')' → logprob: -14.951457023620605

Token 777: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.08703365921974182
    2. 'self' → logprob: -3.337033748626709
    3. 'the' → logprob: -3.837033748626709
    4. ' end' → logprob: -4.087033748626709
    5. 'start' → logprob: -5.087033748626709
    6. ' the' → logprob: -5.837033748626709
    7. 'other' → logprob: -9.21203327178955
    8. ' self' → logprob: -9.33703327178955
    9. ' start' → logprob: -9.71203327178955
    10. 'endpoint' → logprob: -10.58703327178955

Token 778: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.4297771155834198
    2. 'point' → logprob: -1.0547771453857422
    3. '_point' → logprob: -7.679777145385742
    4. '(point' → logprob: -8.679777145385742
    5. ' of' → logprob: -9.429777145385742
    6. '       ' → logprob: -9.429777145385742
    7. ' (' → logprob: -9.804777145385742
    8. '   ' → logprob: -10.054777145385742
    9. '-point' → logprob: -10.304777145385742
    10. '	point' → logprob: -10.804777145385742

Token 779: ' backward' (ID: 58986)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06633968651294708
    2. '       ' → logprob: -3.8163397312164307
    3. '(self' → logprob: -4.441339492797852
    4. ' of' → logprob: -4.566339492797852
    5. ' =' → logprob: -5.316339492797852
    6. ':' → logprob: -5.316339492797852
    7. ')' → logprob: -6.316339492797852
    8. 'self' → logprob: -6.441339492797852
    9. '(' → logprob: -6.691339492797852
    10. '   ' → logprob: -6.941339492797852

Token 780: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035229793284088373
    2. '
' → logprob: -6.253522872924805
    3. '   ' → logprob: -7.503522872924805
    4. ',' → logprob: -8.003522872924805
    5. ':' → logprob: -8.628522872924805
    6. '<|end|>' → logprob: -9.003522872924805
    7. ')' → logprob: -9.503522872924805
    8. '        
' → logprob: -9.878522872924805
    9. ' (' → logprob: -10.378522872924805
    10. ' return' → logprob: -10.503522872924805

Token 781: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.5556799173355103
    2. ' i' → logprob: -1.5556799173355103
    3. ' d' → logprob: -2.9306797981262207
    4. 'i' → logprob: -2.9306797981262207
    5. 'so' → logprob: -3.6806797981262207
    6. '       ' → logprob: -3.8056797981262207
    7. 'd' → logprob: -4.430679798126221
    8. ' meaning' → logprob: -4.680679798126221
    9. ' but' → logprob: -4.805679798126221
    10. 'self' → logprob: -5.430679798126221

Token 782: ' route' (ID: 9656)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1599913239479065
    2. 'return' → logprob: -2.7849912643432617
    3. 'B' → logprob: -3.7849912643432617
    4. 'self' → logprob: -4.034991264343262
    5. '       ' → logprob: -4.659991264343262
    6. '   ' → logprob: -4.909991264343262
    7. ' d' → logprob: -5.409991264343262
    8. 'point' → logprob: -5.784991264343262
    9. 'the' → logprob: -5.909991264343262
    10. 'at' → logprob: -6.034991264343262

Token 783: '.L' (ID: 2024)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9724077582359314
    2. '.' → logprob: -1.3474078178405762
    3. '.length' → logprob: -1.8474078178405762
    4. '_length' → logprob: -2.972407817840576
    5. '_point' → logprob: -3.597407817840576
    6. 'point' → logprob: -3.722407817840576
    7. ' length' → logprob: -3.847407817840576
    8. 'points' → logprob: -4.222407817840576
    9. '.reverse' → logprob: -4.722407817840576
    10. '.points' → logprob: -5.222407817840576

Token 784: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16025316715240479
    2. '-' → logprob: -1.9102531671524048
    3. ')' → logprob: -11.160253524780273
    4. '.' → logprob: -12.910253524780273
    5. ' ' → logprob: -13.160253524780273
    6. ',' → logprob: -13.160253524780273
    7. 'd' → logprob: -13.535253524780273
    8. '<|end|>' → logprob: -13.660253524780273
    9. ' ' → logprob: -13.972753524780273
    10. '-d' → logprob: -14.722753524780273

Token 785: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009115827269852161
    2. ' d' → logprob: -7.000911712646484
    3. ')d' → logprob: -17.750911712646484
    4. 'self' → logprob: -18.750911712646484
    5. '   ' → logprob: -19.000911712646484
    6. ')' → logprob: -19.500911712646484
    7. ' self' → logprob: -19.875911712646484
    8. ' ' → logprob: -19.875911712646484
    9. '	d' → logprob: -20.250911712646484
    10. '...' → logprob: -20.875911712646484

Token 786: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00021438424300868064
    2. 'A' → logprob: -8.750214576721191
    3. ')' → logprob: -10.625214576721191
    4. '-' → logprob: -11.250214576721191
    5. ',' → logprob: -12.625214576721191
    6. '<|end|>' → logprob: -12.625214576721191
    7. ' B' → logprob: -12.875214576721191
    8. '_B' → logprob: -13.250214576721191
    9. '.' → logprob: -14.000214576721191
    10. ' -' → logprob: -14.125214576721191

Token 787: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12788040935993195
    2. ')' → logprob: -3.627880334854126
    3. '   ' → logprob: -3.627880334854126
    4. ' ==' → logprob: -4.252880573272705
    5. ' <=' → logprob: -4.502880573272705
    6. ':' → logprob: -4.752880573272705
    7. ',' → logprob: -5.002880573272705
    8. '
' → logprob: -5.127880573272705
    9. '==' → logprob: -5.752880573272705
    10. 'return' → logprob: -6.002880573272705

Token 788: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09486811608076096
    2. 'the' → logprob: -3.0948681831359863
    3. '0' → logprob: -3.3448681831359863
    4. 'self' → logprob: -4.844868183135986
    5. ' start' → logprob: -6.719868183135986
    6. 'end' → logprob: -8.094867706298828
    7. ' the' → logprob: -8.594867706298828
    8. 'A' → logprob: -9.219867706298828
    9. 'd' → logprob: -9.594867706298828
    10. ' ' → logprob: -9.594867706298828

Token 789: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004547250457108021
    2. '   ' → logprob: -6.504547119140625
    3. '
' → logprob: -6.504547119140625
    4. ')' → logprob: -7.754547119140625
    5. ',' → logprob: -8.004547119140625
    6. '<|end|>' → logprob: -8.254547119140625
    7. ':' → logprob: -9.379547119140625
    8. '        
' → logprob: -9.629547119140625
    9. 'return' → logprob: -9.879547119140625
    10. '<|end|>' → logprob: -10.004547119140625

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015252856246661395
    2. ',' → logprob: -9.750152587890625
    3. '
' → logprob: -10.000152587890625
    4. '   ' → logprob: -11.375152587890625
    5. '        
' → logprob: -12.125152587890625
    6. 'return' → logprob: -12.375152587890625
    7. ')' → logprob: -12.750152587890625
    8. 'd' → logprob: -12.750152587890625
    9. '=' → logprob: -13.125152587890625
    10. 'self' → logprob: -13.250152587890625

Token 791: ' alt' (ID: 5001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11632831394672394
    2. 'return' → logprob: -2.991328239440918
    3. 'a' → logprob: -3.366328239440918
    4. 'A' → logprob: -4.116328239440918
    5. 'alt' (adapté à ' alt') → logprob: -5.241328239440918
    6. 'self' → logprob: -6.991328239440918
    7. ' return' → logprob: -7.741328239440918
    8. ' alt' → logprob: -7.866328239440918
    9. '```' → logprob: -8.241328239440918
    10. ' a' → logprob: -8.366328239440918

Token 792: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04166237637400627
    2. '_A' → logprob: -3.6666624546051025
    3. '_a' → logprob: -4.416662216186523
    4. '1' → logprob: -6.291662216186523
    5. 'itude' → logprob: -6.791662216186523
    6. ' =' → logprob: -9.041662216186523
    7. '_route' → logprob: -10.916662216186523
    8. '_start' → logprob: -11.291662216186523
    9. '=A' → logprob: -11.791662216186523
    10. 'a' → logprob: -11.791662216186523

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740792512893677
    2. ' =' → logprob: -0.9740792512893677
    3. '   ' → logprob: -14.224079132080078
    4. '=self' → logprob: -14.349079132080078
    5. 'A' → logprob: -15.224079132080078
    6. '       ' → logprob: -15.724079132080078
    7. '==' → logprob: -15.974079132080078
    8. ' ' → logprob: -16.224079132080078
    9. 'self' → logprob: -16.474079132080078
    10. ',' → logprob: -16.474079132080078

Token 794: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019293478690087795
    2. ' self' → logprob: -6.25192928314209
    3. '       ' → logprob: -14.50192928314209
    4. '	self' → logprob: -16.001930236816406
    5. '(self' → logprob: -17.126930236816406
    6. '=self' → logprob: -17.501930236816406
    7. '   ' → logprob: -18.001930236816406
    8. '[self' → logprob: -18.126930236816406
    9. '
' → logprob: -19.876930236816406
    10. 'Self' → logprob: -20.501930236816406

Token 795: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.00011188744247192517
    2. '.alt' → logprob: -9.37511157989502
    3. 'route' → logprob: -10.75011157989502
    4. '.' → logprob: -12.75011157989502
    5. 'alt' → logprob: -13.50011157989502
    6. '.point' → logprob: -14.25011157989502
    7. '$route' → logprob: -15.87511157989502
    8. '.al' → logprob: -16.375112533569336
    9. 'self' → logprob: -16.375112533569336
    10. '   ' → logprob: -17.125112533569336

Token 796: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -2.081584716506768e-05
    2. '.point' → logprob: -11.750020980834961
    3. '.' → logprob: -12.000020980834961
    4. 'alt' → logprob: -12.750020980834961
    5. ' .' → logprob: -13.250020980834961
    6. '.al' → logprob: -14.000020980834961
    7. '.at' → logprob: -14.625020980834961
    8. '.points' → logprob: -15.625020980834961
    9. '.latitude' → logprob: -16.25002098083496
    10. '```' → logprob: -16.37502098083496

Token 797: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.08968819677829742
    2. '_at' → logprob: -2.464688301086426
    3. 'it' → logprob: -8.089688301086426
    4. '_' → logprob: -9.089688301086426
    5. 'at' → logprob: -9.214688301086426
    6. 't' → logprob: -9.464688301086426
    7. '_it' → logprob: -10.589688301086426
    8. '_alt' → logprob: -10.839688301086426
    9. 'itut' → logprob: -10.839688301086426
    10. 'itud' → logprob: -10.964688301086426

Token 798: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -6.704273118884885e-07
    2. 'at' → logprob: -14.375000953674316
    3. '_' → logprob: -16.875
    4. '	at' → logprob: -18.5
    5. 'At' → logprob: -18.625
    6. '_to' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '_a' → logprob: -19.0
    9. ' at' → logprob: -19.625
    10. '
' → logprob: -19.625

Token 799: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01818658411502838
    2. 'distance' → logprob: -4.018186569213867
    3. 'd' → logprob: -11.018186569213867
    4. 'Distance' → logprob: -11.768186569213867
    5. '(distance' → logprob: -11.768186569213867
    6. 'dist' → logprob: -13.643186569213867
    7. ' distance' → logprob: -13.768186569213867
    8. '_dist' → logprob: -14.768186569213867
    9. '_point' → logprob: -14.893186569213867
    10. '_DISTANCE' → logprob: -15.018186569213867

Token 800: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00018446780450176448
    2. '(' → logprob: -8.625184059143066
    3. 'd' → logprob: -12.375184059143066
    4. ' (' → logprob: -15.375184059143066
    5. '(
' → logprob: -15.500184059143066
    6. ' d' → logprob: -16.250185012817383
    7. '((' → logprob: -17.250185012817383
    8. ')d' → logprob: -19.125185012817383
    9. '(distance' → logprob: -19.250185012817383
    10. '(round' → logprob: -19.375185012817383

Token 801: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0280383548888494e-06
    2. ' A' → logprob: -14.500000953674316
    3. ')' → logprob: -14.875000953674316
    4. 'B' → logprob: -16.125001907348633
    5. '=' → logprob: -17.750001907348633
    6. 'А' → logprob: -18.250001907348633
    7. ',' → logprob: -18.375001907348633
    8. '_A' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.625001907348633
    10. 'a' → logprob: -18.625001907348633

Token 802: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38707318902015686
    2. ')' → logprob: -1.1370731592178345
    3. ' )
' → logprob: -9.137073516845703
    4. ')
' → logprob: -9.512073516845703
    5. ' )' → logprob: -11.762073516845703
    6. '       ' → logprob: -11.887073516845703
    7. ')

' → logprob: -12.387073516845703
    8. '   ' → logprob: -14.137073516845703
    9. '),' → logprob: -15.512073516845703
    10. ' ' → logprob: -15.637073516845703

Token 803: '       ' (ID: 309)
  Prédit: ' alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alt' → logprob: -0.2626151740550995
    2. '       ' → logprob: -1.5126152038574219
    3. 'alt' → logprob: -4.637615203857422
    4. '        
' → logprob: -7.887615203857422
    5. '        ' → logprob: -9.012615203857422
    6. ',' → logprob: -9.387615203857422
    7. '.alt' → logprob: -9.887615203857422
    8. ' ' → logprob: -10.012615203857422
    9. '_alt' → logprob: -10.137615203857422
    10. '<|end|>' → logprob: -10.262615203857422

Token 804: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' (adapté à ' alt') → logprob: -0.17989282310009003
    2. ' alt' → logprob: -1.8048927783966064
    3. '       ' → logprob: -8.929892539978027
    4. ' al' → logprob: -12.304892539978027
    5. 'al' → logprob: -12.679892539978027
    6. '_alt' → logprob: -12.679892539978027
    7. '.alt' → logprob: -14.304892539978027
    8. 'alts' → logprob: -14.429892539978027
    9. '   ' → logprob: -14.804892539978027
    10. '        ' → logprob: -14.929892539978027

Token 805: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.6240566083070007e-06
    2. '_B' → logprob: -14.125001907348633
    3. '_' → logprob: -15.250001907348633
    4. ' =' → logprob: -15.375001907348633
    5. ' B' → logprob: -15.500001907348633
    6. '=' → logprob: -16.625001907348633
    7. '_b' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '	B' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.375001907348633

Token 806: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022473573684692
    2. '=' → logprob: -1.9102246761322021
    3. '=self' → logprob: -14.535224914550781
    4. ' ' → logprob: -16.28522491455078
    5. ' ==' → logprob: -18.53522491455078
    6. ' ' → logprob: -18.91022491455078
    7. ')' → logprob: -18.91022491455078
    8. 'self' → logprob: -19.16022491455078
    9. '=
' → logprob: -19.41022491455078
    10. ':' → logprob: -19.53522491455078

Token 807: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5760018229484558
    2. ' self' → logprob: -0.8260018229484558
    3. '	self' → logprob: -9.82600212097168
    4. '   ' → logprob: -12.82600212097168
    5. '       ' → logprob: -12.82600212097168
    6. ' ' → logprob: -14.57600212097168
    7. ' ' → logprob: -14.57600212097168
    8. '(self' → logprob: -14.70100212097168
    9. '=self' → logprob: -14.82600212097168
    10. 'se' → logprob: -14.95100212097168

Token 808: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.011116675101220608
    2. 'route' → logprob: -4.5111165046691895
    3. 'self' → logprob: -9.886116981506348
    4. ' route' → logprob: -11.261116981506348
    5. '$route' → logprob: -13.136116981506348
    6. '_route' → logprob: -13.886116981506348
    7. '.' → logprob: -14.886116981506348
    8. 'Route' → logprob: -15.261116981506348
    9. '   ' → logprob: -15.261116981506348
    10. 'r' → logprob: -15.261116981506348

Token 809: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -6.861651490908116e-05
    2. 'alt' → logprob: -10.125068664550781
    3. '.route' → logprob: -11.000068664550781
    4. '_alt' → logprob: -12.250068664550781
    5. ' .' → logprob: -12.625068664550781
    6. '.' → logprob: -13.625068664550781
    7. '_.' → logprob: -14.000068664550781
    8. '.al' → logprob: -15.000068664550781
    9. '.at' → logprob: -15.250068664550781
    10. '```' → logprob: -15.500068664550781

Token 810: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.009768364951014519
    2. 'B' → logprob: -5.009768486022949
    3. '       ' → logprob: -6.884768486022949
    4. 'ude' → logprob: -7.759768486022949
    5. 'At' → logprob: -8.13476848602295
    6. 'A' → logprob: -8.25976848602295
    7. 'ute' → logprob: -8.50976848602295
    8. 'ut' → logprob: -8.63476848602295
    9. '   ' → logprob: -8.88476848602295
    10. 'at' → logprob: -8.88476848602295

Token 811: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -3.292907877039397e-06
    2. 'At' → logprob: -12.75000286102295
    3. '_' → logprob: -16.250003814697266
    4. 'at' → logprob: -17.625003814697266
    5. ' at' → logprob: -17.750003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '_for' → logprob: -18.000003814697266
    8. '_from' → logprob: -18.250003814697266
    9. '_as' → logprob: -18.250003814697266
    10. '_to' → logprob: -18.375003814697266

Token 812: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.04109266772866249
    2. 'distance' → logprob: -3.41609263420105
    3. 'Distance' → logprob: -4.916092872619629
    4. 'self' → logprob: -9.666092872619629
    5. '_length' → logprob: -12.041092872619629
    6. '(self' → logprob: -12.166092872619629
    7. ' distance' → logprob: -12.791092872619629
    8. 'B' → logprob: -13.416092872619629
    9. '`' → logprob: -13.541092872619629
    10. '(distance' → logprob: -13.541092872619629

Token 813: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -10.625040054321289
    3. 'self' → logprob: -11.125040054321289
    4. ' self' → logprob: -14.500040054321289
    5. ' (' → logprob: -14.750040054321289
    6. '(
' → logprob: -15.625040054321289
    7. '((' → logprob: -15.625040054321289
    8. '(s' → logprob: -16.50004005432129
    9. '[self' → logprob: -17.87504005432129
    10. '(sel' → logprob: -18.00004005432129

Token 814: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.005248818546533585
    2. 'L' → logprob: -5.2552490234375
    3. '.' → logprob: -12.2552490234375
    4. ' L' → logprob: -12.7552490234375
    5. '.total' → logprob: -12.8802490234375
    6. 'total' → logprob: -13.2552490234375
    7. 'self' → logprob: -13.2552490234375
    8. '.route' → logprob: -14.6302490234375
    9. 'route' → logprob: -14.8802490234375
    10. '	L' → logprob: -15.8802490234375

Token 815: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020545274019241333
    2. '-' → logprob: -3.895545244216919
    3. ' ' → logprob: -13.64554500579834
    4. ' ' → logprob: -13.77054500579834
    5. ')' → logprob: -14.14554500579834
    6. ' -
' → logprob: -16.270545959472656
    7. '-self' → logprob: -17.020545959472656
    8. '-d' → logprob: -17.145545959472656
    9. '-
' → logprob: -17.270545959472656
    10. '-end' → logprob: -17.270545959472656

Token 816: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011703446507453918
    2. ' d' → logprob: -6.7511701583862305
    3. ')d' → logprob: -16.501171112060547
    4. '	d' → logprob: -18.876171112060547
    5. 'д' → logprob: -21.626171112060547
    6. '   ' → logprob: -21.876171112060547
    7. '(d' → logprob: -22.001171112060547
    8. ' д' → logprob: -22.501171112060547
    9. '>d' → logprob: -22.501171112060547
    10. '_d' → logprob: -22.501171112060547

Token 817: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0921942703134846e-05
    2. ' B' → logprob: -12.00001049041748
    3. '_B' → logprob: -13.50001049041748
    4. ')' → logprob: -13.62501049041748
    5. 'b' → logprob: -13.62501049041748
    6. 'd' → logprob: -14.62501049041748
    7. '.' → logprob: -15.87501049041748
    8. '.B' → logprob: -16.250011444091797
    9. '<|end|>' → logprob: -16.500011444091797
    10. ',' → logprob: -16.750011444091797

Token 818: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009797642007470131
    2. ')
' → logprob: -4.6347975730896
    3. ' )' → logprob: -10.384798049926758
    4. '       ' → logprob: -12.759798049926758
    5. ')
' → logprob: -12.759798049926758
    6. ' )
' → logprob: -13.134798049926758
    7. ')return' → logprob: -13.759798049926758
    8. ')

' → logprob: -13.884798049926758
    9. '   ' → logprob: -15.884798049926758
    10. ')==' → logprob: -15.884798049926758

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012655739672482014
    2. '<|end|>' → logprob: -4.887655735015869
    3. ' return' → logprob: -6.387655735015869
    4. ')' → logprob: -6.637655735015869
    5. 'return' → logprob: -6.887655735015869
    6. '
' → logprob: -7.887655735015869
    7. '   ' → logprob: -8.512656211853027
    8. ' ' → logprob: -9.012656211853027
    9. '	return' → logprob: -10.012656211853027
    10. '        
' → logprob: -10.137656211853027

Token 820: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5491594672203064
    2. 'return' (adapté à ' return') → logprob: -0.9241594672203064
    3. ' return' → logprob: -3.799159526824951
    4. '
' → logprob: -6.174159526824951
    5. '   ' → logprob: -7.299159526824951
    6. '        
' → logprob: -8.049159049987793
    7. '	return' → logprob: -9.924159049987793
    8. ')' → logprob: -10.299159049987793
    9. '        ' → logprob: -10.424159049987793
    10. ':return' → logprob: -11.174159049987793

Token 821: ' math' (ID: 13324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07889155298471451
    2. 'math' → logprob: -2.5788915157318115
    3. ' abs' → logprob: -13.57889175415039
    4. '(abs' → logprob: -14.70389175415039
    5. 'Math' → logprob: -16.95389175415039
    6. ' math' → logprob: -17.45389175415039
    7. '(math' → logprob: -17.45389175415039
    8. 'alt' → logprob: -17.57889175415039
    9. 'fabs' → logprob: -19.07889175415039
    10. 'Abs' → logprob: -19.32889175415039

Token 822: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.004837957210838795
    2. '.' → logprob: -6.254837989807129
    3. '.abs' → logprob: -6.254837989807129
    4. '.isnan' → logprob: -7.004837989807129
    5. '.f' → logprob: -9.879837989807129
    6. ' .' → logprob: -11.754837989807129
    7. 'fabs' → logprob: -12.004837989807129
    8. 'is' → logprob: -12.379837989807129
    9. '.ceil' → logprob: -13.379837989807129
    10. '.floor' → logprob: -13.629837989807129

Token 823: 'close' (ID: 8722)
  Prédit: 'close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -1.9361264946837764e-07
    2. 'cl' → logprob: -16.25
    3. '_close' → logprob: -17.75
    4. 'clos' → logprob: -18.25
    5. 'abs' → logprob: -18.5
    6. '.close' → logprob: -18.75
    7. '
' → logprob: -18.875
    8. 'finite' → logprob: -19.0
    9. 'qrt' → logprob: -19.0
    10. 'approx' → logprob: -19.625

Token 824: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(
' → logprob: -15.125
    3. ' (' → logprob: -17.375
    4. 'alt' → logprob: -19.375
    5. '(left' → logprob: -20.0
    6. '(abs' → logprob: -20.875
    7. '(round' → logprob: -21.125
    8. '(a' → logprob: -21.5
    9. '((' → logprob: -21.75
    10. '(indent' → logprob: -21.75

Token 825: 'alt' (ID: 3271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16022758185863495
    2. 'alt' → logprob: -1.9102275371551514
    3. ' alt' → logprob: -13.28522777557373
    4. 'Alt' → logprob: -13.78522777557373
    5. '_alt' → logprob: -15.28522777557373
    6. '(
' → logprob: -15.91022777557373
    7. '   ' → logprob: -16.035226821899414
    8. ')' → logprob: -16.035226821899414
    9. '.alt' → logprob: -16.910226821899414
    10. ''alt' → logprob: -17.035226821899414

Token 826: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.981667537620524e-06
    2. 'itude' → logprob: -13.750001907348633
    3. 'B' → logprob: -15.500001907348633
    4. ',' → logprob: -15.500001907348633
    5. '       ' → logprob: -15.500001907348633
    6. '   ' → logprob: -16.500001907348633
    7. ' A' → logprob: -17.500001907348633
    8. '(' → logprob: -17.500001907348633
    9. ')' → logprob: -18.000001907348633
    10. 'a' → logprob: -18.250001907348633

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018065694894175977
    2. ' ,' → logprob: -8.6251802444458
    3. ',
' → logprob: -14.3751802444458
    4. ' alt' → logprob: -15.7501802444458
    5. 'alt' → logprob: -16.375181198120117
    6. '<|end|>' → logprob: -16.750181198120117
    7. ' ' → logprob: -17.000181198120117
    8. '‌,' → logprob: -17.000181198120117
    9. '   ' → logprob: -17.125181198120117
    10. 'and' → logprob: -17.250181198120117

Token 828: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.023246292024850845
    2. ' alt' → logprob: -3.7732462882995605
    3. '   ' → logprob: -15.773246765136719
    4. '_alt' → logprob: -16.27324676513672
    5. 'Alt' → logprob: -16.39824676513672
    6. '       ' → logprob: -16.39824676513672
    7. 'al' → logprob: -16.52324676513672
    8. ' ' → logprob: -17.02324676513672
    9. 'opt' → logprob: -17.52324676513672
    10. '           ' → logprob: -17.52324676513672

Token 829: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.8206473871250637e-05
    2. 'A' → logprob: -10.500028610229492
    3. ')' → logprob: -14.875028610229492
    4. ',' → logprob: -15.750028610229492
    5. 'itude' → logprob: -16.875028610229492
    6. '_B' → logprob: -17.250028610229492
    7. ' B' → logprob: -17.625028610229492
    8. '```' → logprob: -18.125028610229492
    9. '   ' → logprob: -18.375028610229492
    10. 'alt' → logprob: -18.375028610229492

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008641763124614954
    2. ')' → logprob: -7.750864028930664
    3. ' ,' → logprob: -7.750864028930664
    4. '   ' → logprob: -14.500864028930664
    5. ',
' → logprob: -14.500864028930664
    6. ',self' → logprob: -14.750864028930664
    7. ',d' → logprob: -15.125864028930664
    8. '       ' → logprob: -15.375864028930664
    9. ' ' → logprob: -15.500864028930664
    10. ',float' → logprob: -16.125864028930664

Token 831: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04826310649514198
    2. 'rel' → logprob: -3.5482630729675293
    3. ' abs' → logprob: -4.048263072967529
    4. ' rel' → logprob: -7.048263072967529
    5. '           ' → logprob: -11.423263549804688
    6. '       ' → logprob: -12.548263549804688
    7. '   ' → logprob: -13.548263549804688
    8. '               ' → logprob: -13.798263549804688
    9. 'rels' → logprob: -14.298263549804688
    10. 'reld' → logprob: -14.673263549804688

Token 832: '_tol' (ID: 192904)
  Prédit: '_tol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tol' → logprob: -0.14626842737197876
    2. '=' → logprob: -2.021268367767334
    3. '=self' → logprob: -5.771268367767334
    4. '=_' → logprob: -8.521268844604492
    5. ' tolerance' → logprob: -9.271268844604492
    6. '_t' → logprob: -9.521268844604492
    7. 'self' → logprob: -10.896268844604492
    8. 't' → logprob: -11.021268844604492
    9. '=.' → logprob: -11.021268844604492
    10. 'tol' → logprob: -11.771268844604492

Token 833: '=' (ID: 28)
  Prédit: '=self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=self' → logprob: -0.47407835721969604
    2. '=' → logprob: -0.974078357219696
    3. 'self' → logprob: -13.849078178405762
    4. '=
' → logprob: -15.349078178405762
    5. ' self' → logprob: -15.974078178405762
    6. '(self' → logprob: -16.849079132080078
    7. '=

' → logprob: -18.224079132080078
    8. '1' → logprob: -18.474079132080078
    9. '	self' → logprob: -18.474079132080078
    10. '=.' → logprob: -18.724079132080078

Token 834: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11301619559526443
    2. '1' → logprob: -2.238016128540039
    3. '0' → logprob: -8.863016128540039
    4. ' self' → logprob: -10.238016128540039
    5. '   ' → logprob: -12.488016128540039
    6. '10' → logprob: -12.613016128540039
    7. '=self' → logprob: -13.113016128540039
    8. '(self' → logprob: -13.488016128540039
    9. ' ' → logprob: -13.613016128540039
    10. '2' → logprob: -13.738016128540039

Token 835: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00016313401283696294
    2. '-' → logprob: -8.750163078308105
    3. '.' → logprob: -12.750163078308105
    4. '.e' → logprob: -14.000163078308105
    5. '-e' → logprob: -14.750163078308105
    6. '1' → logprob: -16.000164031982422
    7. '6' → logprob: -16.125164031982422
    8. '
' → logprob: -16.250164031982422
    9. '```' → logprob: -16.500164031982422
    10. '           ' → logprob: -17.000164031982422

Token 836: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.4121114822482923e-06
    2. '6' → logprob: -13.125003814697266
    3. ' -' → logprob: -14.875003814697266
    4. '9' → logprob: -15.250003814697266
    5. '
' → logprob: -15.500003814697266
    6. '```' → logprob: -15.750003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '7' → logprob: -16.625003814697266
    9. '−' → logprob: -16.625003814697266
    10. '-
' → logprob: -16.875003814697266

Token 837: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.19203753769397736
    2. '9' → logprob: -1.817037582397461
    3. '7' → logprob: -4.942037582397461
    4. '8' → logprob: -5.317037582397461
    5. '5' → logprob: -9.192037582397461
    6. '06' → logprob: -10.192037582397461
    7. '10' → logprob: -11.567037582397461
    8. '12' → logprob: -12.067037582397461
    9. '09' → logprob: -12.192037582397461
    10. '3' → logprob: -12.317037582397461

Token 838: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. ')
' → logprob: -11.250020980834961
    3. '       ' → logprob: -12.375020980834961
    4. ' )' → logprob: -12.625020980834961
    5. '   ' → logprob: -14.500020980834961
    6. ')

' → logprob: -16.50002098083496
    7. '),' → logprob: -16.75002098083496
    8. ',' → logprob: -17.25002098083496
    9. '))' → logprob: -17.25002098083496
    10. ')return' → logprob: -17.37502098083496

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010579287074506283
    2. 'def' → logprob: -5.0105791091918945
    3. ' def' → logprob: -5.7605791091918945
    4. '<|end|>' → logprob: -8.385579109191895
    5. '    
' → logprob: -9.510579109191895
    6. ' ' → logprob: -9.510579109191895
    7. '```' → logprob: -9.510579109191895
    8. '	def' → logprob: -9.635579109191895
    9. '
' → logprob: -10.135579109191895
    10. ',' → logprob: -10.635579109191895

Token 840: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005402022507041693
    2. '   ' → logprob: -5.505402088165283
    3. ' def' → logprob: -6.630402088165283
    4. '	def' → logprob: -13.130401611328125
    5. '@' → logprob: -14.755401611328125
    6. '  ' → logprob: -15.880401611328125
    7. ' ' → logprob: -15.880401611328125
    8. ')' → logprob: -16.005401611328125
    9. '    
' → logprob: -16.380401611328125
    10. '
' → logprob: -17.130401611328125

Token 841: ' next' (ID: 2613)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3906354308128357
    2. ' solve' → logprob: -2.2656354904174805
    3. 'can' → logprob: -3.0156354904174805
    4. ' find' → logprob: -3.6406354904174805
    5. '_' → logprob: -3.7656354904174805
    6. 'find' → logprob: -4.0156354904174805
    7. ' can' → logprob: -4.1406354904174805
    8. 'dp' → logprob: -4.2656354904174805
    9. 'meet' → logprob: -4.5156354904174805
    10. 'min' → logprob: -4.6406354904174805

Token 842: '_positions' (ID: 93193)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.5666570067405701
    2. '_token' → logprob: -1.5666570663452148
    3. '_state' → logprob: -1.9416570663452148
    4. '_move' → logprob: -2.816657066345215
    5. '_' → logprob: -4.941657066345215
    6. '(self' → logprob: -5.941657066345215
    7. '_position' → logprob: -6.066657066345215
    8. '_distance' → logprob: -6.191657066345215
    9. '_point' → logprob: -6.316657066345215
    10. '_me' → logprob: -6.566657066345215

Token 843: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008649199269711971
    2. '(' → logprob: -4.7586493492126465
    3. '(
' → logprob: -10.508648872375488
    4. 'self' → logprob: -12.258648872375488
    5. ' (' → logprob: -13.633648872375488
    6. '(s' → logprob: -13.758648872375488
    7. '   ' → logprob: -16.383649826049805
    8. '_(' → logprob: -16.883649826049805
    9. '	self' → logprob: -17.008649826049805
    10. 's' → logprob: -17.508649826049805

Token 844: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10377742350101471
    2. ',' → logprob: -2.6037774085998535
    3. 'self' → logprob: -3.9787774085998535
    4. ')' → logprob: -6.4787774085998535
    5. ')(' → logprob: -6.4787774085998535
    6. ' (' → logprob: -7.2287774085998535
    7. '   ' → logprob: -7.4787774085998535
    8. '(' → logprob: -7.4787774085998535
    9. '):' → logprob: -7.9787774085998535
    10. ',self' → logprob: -8.728777885437012

Token 845: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08072337508201599
    2. ' d' → logprob: -2.580723285675049
    3. '   ' → logprob: -7.580723285675049
    4. 'self' → logprob: -7.705723285675049
    5. 'current' → logprob: -8.080723762512207
    6. 'pos' → logprob: -8.580723762512207
    7. ' current' → logprob: -8.955723762512207
    8. ' self' → logprob: -9.955723762512207
    9. ' ' → logprob: -10.330723762512207
    10. ')' → logprob: -10.455723762512207

Token 846: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.925185440806672e-05
    2. ',' → logprob: -9.625099182128906
    3. ')' → logprob: -11.625099182128906
    4. '   ' → logprob: -12.000099182128906
    5. 'd' → logprob: -12.375099182128906
    6. ':' → logprob: -12.500099182128906
    7. 'a' → logprob: -13.250099182128906
    8. '
' → logprob: -13.500099182128906
    9. '_A' → logprob: -13.625099182128906
    10. 'self' → logprob: -14.250099182128906

Token 847: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17985686659812927
    2. ':' → logprob: -1.8048568964004517
    3. ' ,' → logprob: -9.92985725402832
    4. ',d' → logprob: -10.42985725402832
    5. 'd' → logprob: -11.55485725402832
    6. '   ' → logprob: -11.55485725402832
    7. ':,' → logprob: -12.30485725402832
    8. ' :' → logprob: -12.42985725402832
    9. '):' → logprob: -13.67985725402832
    10. 'self' → logprob: -14.42985725402832

Token 848: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00865853950381279
    2. ' float' → logprob: -4.758658409118652
    3. 'List' → logprob: -10.758658409118652
    4. '   ' → logprob: -11.258658409118652
    5. ')' → logprob: -13.133658409118652
    6. ' ' → logprob: -13.383658409118652
    7. 'int' → logprob: -14.008658409118652
    8. '       ' → logprob: -14.258658409118652
    9. 'Tuple' → logprob: -14.258658409118652
    10. '	float' → logprob: -14.758658409118652

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -12.125009536743164
    3. ',d' → logprob: -12.625009536743164
    4. ':' → logprob: -14.500009536743164
    5. '   ' → logprob: -15.625009536743164
    6. ')' → logprob: -15.750009536743164
    7. ',
' → logprob: -16.000009536743164
    8. '‌,' → logprob: -16.625009536743164
    9. '):' → logprob: -16.875009536743164
    10. ',float' → logprob: -17.000009536743164

Token 850: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.632800281047821
    2. ' d' → logprob: -0.757800281047821
    3. '   ' → logprob: -9.632800102233887
    4. ' ' → logprob: -9.757800102233887
    5. '    ' → logprob: -10.257800102233887
    6. '  ' → logprob: -11.382800102233887
    7. '       ' → logprob: -11.757800102233887
    8. '     ' → logprob: -12.007800102233887
    9. '      ' → logprob: -12.257800102233887
    10. '	d' → logprob: -12.882800102233887

Token 851: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.778209353797138e-05
    2. ',' → logprob: -10.375067710876465
    3. 'A' → logprob: -10.875067710876465
    4. ' B' → logprob: -11.625067710876465
    5. '+' → logprob: -12.875067710876465
    6. ')' → logprob: -13.375067710876465
    7. '   ' → logprob: -13.750067710876465
    8. '_B' → logprob: -14.000067710876465
    9. '```' → logprob: -14.500067710876465
    10. ':' → logprob: -15.000067710876465

Token 852: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006641006097197533
    2. '):' → logprob: -5.381640911102295
    3. ')' → logprob: -6.631640911102295
    4. ',' → logprob: -7.381640911102295
    5. '   ' → logprob: -10.256641387939453
    6. '):
' → logprob: -10.756641387939453
    7. ' :' → logprob: -11.256641387939453
    8. ' ):' → logprob: -12.381641387939453
    9. ' )' → logprob: -13.756641387939453
    10. ' ' → logprob: -14.381641387939453

Token 853: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04307147115468979
    2. ' float' → logprob: -3.1680715084075928
    3. '   ' → logprob: -10.043071746826172
    4. ')' → logprob: -11.418071746826172
    5. 'flo' → logprob: -12.668071746826172
    6. ' ' → logprob: -12.793071746826172
    7. '	float' → logprob: -13.418071746826172
    8. 'f' → logprob: -13.543071746826172
    9. '=float' → logprob: -13.668071746826172
    10. '(float' → logprob: -13.668071746826172

Token 854: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.269565634895116e-05
    2. '):' → logprob: -9.875092506408691
    3. ',' → logprob: -10.625092506408691
    4. '):
' → logprob: -11.625092506408691
    5. ' )' → logprob: -12.250092506408691
    6. '   ' → logprob: -13.625092506408691
    7. ',)' → logprob: -14.000092506408691
    8. ')->' → logprob: -15.250092506408691
    9. '")' → logprob: -15.250092506408691
    10. '):
' → logprob: -15.750092506408691

Token 855: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.37337082624435425
    2. '->' → logprob: -1.373370885848999
    3. ')' → logprob: -2.873370885848999
    4. ':' → logprob: -6.99837064743042
    5. '   ' → logprob: -7.62337064743042
    6. ')->' → logprob: -8.123371124267578
    7. '       ' → logprob: -9.498371124267578
    8. '-' → logprob: -11.498371124267578
    9. ',' → logprob: -11.623371124267578
    10. ' ' → logprob: -11.873371124267578

Token 856: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0029705725610256195
    2. ' List' → logprob: -5.8779706954956055
    3. 'Tuple' → logprob: -8.877970695495605
    4. '[List' → logprob: -11.502970695495605
    5. 'Optional' → logprob: -11.877970695495605
    6. 'Iterator' → logprob: -12.377970695495605
    7. 'Generator' → logprob: -13.877970695495605
    8. 'list' → logprob: -14.127970695495605
    9. ' Tuple' → logprob: -14.252970695495605
    10. 'Iterable' → logprob: -14.627970695495605

Token 857: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.480199954239652e-05
    2. '[
' → logprob: -9.875064849853516
    3. '[(' → logprob: -11.250064849853516
    4. '[List' → logprob: -15.500064849853516
    5. '["' → logprob: -17.875064849853516
    6. '[[' → logprob: -18.375064849853516
    7. '   ' → logprob: -18.500064849853516
    8. '```' → logprob: -18.625064849853516
    9. '[Double' → logprob: -18.750064849853516
    10. '[T' → logprob: -18.875064849853516

Token 858: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.5941604690160602e-05
    2. 'float' → logprob: -11.125025749206543
    3. ' Tuple' → logprob: -11.750025749206543
    4. '   ' → logprob: -13.250025749206543
    5. '[' → logprob: -14.000025749206543
    6. 'Optional' → logprob: -15.000025749206543
    7. '       ' → logprob: -15.875025749206543
    8. '        
' → logprob: -16.87502670288086
    9. '    
' → logprob: -17.50002670288086
    10. '           ' → logprob: -17.50002670288086

Token 859: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023299753665924072
    2. 'float' → logprob: -3.7732996940612793
    3. '[int' → logprob: -10.773300170898438
    4. '   ' → logprob: -11.398300170898438
    5. '[
' → logprob: -12.023300170898438
    6. ' float' → logprob: -12.273300170898438
    7. ',float' → logprob: -12.273300170898438
    8. '[List' → logprob: -13.148300170898438
    9. '[str' → logprob: -13.773300170898438
    10. '	float' → logprob: -13.898300170898438

Token 860: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -8.327856630785391e-05
    2. ' float' → logprob: -9.625082969665527
    3. '[' → logprob: -12.250082969665527
    4. 'flo' → logprob: -12.375082969665527
    5. 'str' → logprob: -13.375082969665527
    6. '   ' → logprob: -13.750082969665527
    7. 'Optional' → logprob: -14.000082969665527
    8. '(float' → logprob: -14.125082969665527
    9. '	float' → logprob: -14.250082969665527
    10. 'f' → logprob: -14.625082969665527

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001941726659424603
    2. ',float' → logprob: -6.251941680908203
    3. ' ,' → logprob: -11.626941680908203
    4. ',
' → logprob: -12.876941680908203
    5. ',double' → logprob: -13.751941680908203
    6. ',int' → logprob: -16.001941680908203
    7. ',bool' → logprob: -16.126941680908203
    8. '‌,' → logprob: -16.626941680908203
    9. 'float' → logprob: -16.626941680908203
    10. ',d' → logprob: -16.751941680908203

Token 862: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001705771079286933
    2. ' float' → logprob: -6.376705646514893
    3. '...' → logprob: -13.87670612335205
    4. '	float' → logprob: -14.12670612335205
    5. '   ' → logprob: -14.37670612335205
    6. ',float' → logprob: -14.87670612335205
    7. ' ' → logprob: -15.50170612335205
    8. '<float' → logprob: -15.62670612335205
    9. '(float' → logprob: -15.62670612335205
    10. 'flo' → logprob: -16.001705169677734

Token 863: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1980506181716919
    2. ']:' → logprob: -1.823050618171692
    3. ']]:
' → logprob: -4.948050498962402
    4. ']:
' → logprob: -5.198050498962402
    5. ']' → logprob: -5.448050498962402
    6. ']:

' → logprob: -7.698050498962402
    7. ',' → logprob: -7.948050498962402
    8. ']>' → logprob: -8.198050498962402
    9. ']:


' → logprob: -10.198050498962402
    10. ' ]' → logprob: -10.573050498962402

Token 864: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011510556796565652
    2. '   ' → logprob: -7.376151084899902
    3. ':' → logprob: -8.751151084899902
    4. '[' → logprob: -8.876151084899902
    5. ',' → logprob: -10.001151084899902
    6. '	' → logprob: -10.126151084899902
    7. '        
' → logprob: -10.251151084899902
    8. '(' → logprob: -10.876151084899902
    9. '[
' → logprob: -11.001151084899902
    10. '    ' → logprob: -11.126151084899902

Token 865: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051301538944244385
    2. 'steps' → logprob: -4.0513014793396
    3. ' steps' → logprob: -4.5513014793396
    4. 'step' → logprob: -5.3013014793396
    5. 'positions' → logprob: -5.3013014793396
    6. ' positions' → logprob: -5.5513014793396
    7. ' step' → logprob: -5.8013014793396
    8. 'poss' → logprob: -6.4263014793396
    9. 'result' → logprob: -6.5513014793396
    10. 'moves' → logprob: -7.5513014793396

Token 866: ' Generate' (ID: 33886)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.09620340168476105
    2. 'positions' → logprob: -2.846203327178955
    3. 'moves' → logprob: -4.721203327178955
    4. 'step' → logprob: -4.846203327178955
    5. '   ' → logprob: -4.971203327178955
    6. 'poss' → logprob: -5.846203327178955
    7. 'res' → logprob: -6.221203327178955
    8. 'increments' → logprob: -6.471203327178955
    9. '#' → logprob: -7.221203327178955
    10. 'pos' → logprob: -7.596203327178955

Token 867: ' possible' (ID: 4149)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.38104116916656494
    2. 'steps' → logprob: -2.2560410499572754
    3. 'moves' → logprob: -2.6310410499572754
    4. '[
' → logprob: -3.2560410499572754
    5. 'next' → logprob: -3.5060410499572754
    6. 'poss' → logprob: -3.6310410499572754
    7. 'increments' → logprob: -4.256041049957275
    8. '[]
' → logprob: -4.381041049957275
    9. '[(' → logprob: -4.881041049957275
    10. '[]' → logprob: -5.506041049957275

Token 868: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.9355927109718323
    2. 'steps' → logprob: -1.0605926513671875
    3. 'next' → logprob: -2.4355926513671875
    4. ' next' → logprob: -2.8105926513671875
    5. ' steps' → logprob: -3.0605926513671875
    6. 'positions' → logprob: -3.8105926513671875
    7. 'increments' → logprob: -4.1855926513671875
    8. ' moves' → logprob: -4.1855926513671875
    9. '[
' → logprob: -5.6855926513671875
    10. '   ' → logprob: -5.6855926513671875

Token 869: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7138787508010864
    2. '[
' → logprob: -1.2138787508010864
    3. '   ' → logprob: -2.963878631591797
    4. '[(' → logprob: -3.088878631591797
    5. ':
' → logprob: -3.088878631591797
    6. '[' → logprob: -4.088878631591797
    7. ' =' → logprob: -4.338878631591797
    8. '       ' → logprob: -4.838878631591797
    9. '([
' → logprob: -4.838878631591797
    10. '(
' → logprob: -5.588878631591797

Token 870: ' both' (ID: 2973)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.527606725692749
    2. '[
' → logprob: -1.527606725692749
    3. '[]
' → logprob: -2.902606725692749
    4. ' d' → logprob: -3.027606725692749
    5. ' [
' → logprob: -3.902606725692749
    6. '[(' → logprob: -4.277606964111328
    7. '[]' → logprob: -4.527606964111328
    8. 'next' → logprob: -4.777606964111328
    9. 'self' → logprob: -5.402606964111328
    10. '[' → logprob: -5.777606964111328

Token 871: ' clim' (ID: 21324)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2422236204147339
    2. 'A' → logprob: -1.4922236204147339
    3. 'd' → logprob: -1.7422236204147339
    4. ' sides' → logprob: -2.1172237396240234
    5. ' agents' → logprob: -2.3672237396240234
    6. ' A' → logprob: -3.1172237396240234
    7. 'agents' → logprob: -4.367223739624023
    8. ' players' → logprob: -5.242223739624023
    9. ':' → logprob: -5.492223739624023
    10. ' positions' → logprob: -5.617223739624023

Token 872: 'bers' (ID: 7008)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6945937871932983
    2. 'bers' → logprob: -0.6945937871932983
    3. 'ber' → logprob: -7.319593906402588
    4. 'bs' → logprob: -7.694593906402588
    5. ' b' → logprob: -8.81959342956543
    6. 'ib' → logprob: -10.69459342956543
    7. 'B' → logprob: -11.31959342956543
    8. 'bt' → logprob: -11.44459342956543
    9. 'bb' → logprob: -11.56959342956543
    10. '   ' → logprob: -11.56959342956543

Token 873: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3612048923969269
    2. ':
' → logprob: -2.1112048625946045
    3. ':' → logprob: -2.3612048625946045
    4. 'positions' → logprob: -3.7362048625946045
    5. '
' → logprob: -4.611205101013184
    6. 'moves' → logprob: -4.736205101013184
    7. '   ' → logprob: -4.861205101013184
    8. ',' → logprob: -4.861205101013184
    9. '        
' → logprob: -5.236205101013184
    10. ' positions' → logprob: -5.736205101013184

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1972896307706833
    2. 'moves' → logprob: -2.6972897052764893
    3. ' moves' → logprob: -3.4472897052764893
    4. 'positions' → logprob: -3.6972897052764893
    5. ' positions' → logprob: -3.6972897052764893
    6. 'result' → logprob: -4.82228946685791
    7. '[
' → logprob: -5.32228946685791
    8. ' steps' → logprob: -5.57228946685791
    9. '[' → logprob: -5.69728946685791
    10. 'steps' → logprob: -6.07228946685791

Token 875: ' #' (ID: 1069)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.461815744638443
    2. '       ' → logprob: -1.5868157148361206
    3. 'steps' → logprob: -2.33681583404541
    4. 'poss' → logprob: -3.08681583404541
    5. 'm' → logprob: -4.83681583404541
    6. 'positions' → logprob: -5.33681583404541
    7. ' moves' → logprob: -5.46181583404541
    8. 'd' → logprob: -6.71181583404541
    9. ' steps' → logprob: -7.08681583404541
    10. 'result' → logprob: -7.21181583404541

Token 876: ' each' (ID: 2454)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.6447498202323914
    2. 'steps' → logprob: -0.8947498202323914
    3. 'positions' → logprob: -3.519749879837036
    4. 'poss' → logprob: -4.519749641418457
    5. '   ' → logprob: -4.769749641418457
    6. 'increments' → logprob: -5.894749641418457
    7. ' steps' → logprob: -6.144749641418457
    8. 'max' → logprob: -6.394749641418457
    9. 'step' → logprob: -6.519749641418457
    10. ' moves' → logprob: -6.519749641418457

Token 877: ' can' (ID: 665)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4936610460281372
    2. ' of' → logprob: -1.6186610460281372
    3. ' d' → logprob: -1.8686610460281372
    4. ' (' → logprob: -1.9936610460281372
    5. 'A' → logprob: -2.6186609268188477
    6. '(' → logprob: -2.8686609268188477
    7. '_d' → logprob: -2.9936609268188477
    8. ' move' → logprob: -4.243660926818848
    9. ' =' → logprob: -4.493660926818848
    10. ' step' → logprob: -4.743660926818848

Token 878: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6513697504997253
    2. ' move' → logprob: -1.0263698101043701
    3. 'advance' → logprob: -2.40136981010437
    4. 'increase' → logprob: -4.401369571685791
    5. ' advance' → logprob: -5.401369571685791
    6. 'increment' → logprob: -6.026369571685791
    7. 'd' → logprob: -6.276369571685791
    8. ' either' → logprob: -6.526369571685791
    9. 'either' → logprob: -6.526369571685791
    10. ' stay' → logprob: -6.901369571685791

Token 879: ' forward' (ID: 6687)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8524264693260193
    2. '0' → logprob: -1.227426528930664
    3. 'd' → logprob: -2.352426528930664
    4. 'by' → logprob: -2.477426528930664
    5. ' d' → logprob: -3.852426528930664
    6. '(' → logprob: -4.227426528930664
    7. ' either' → logprob: -4.352426528930664
    8. ' ' → logprob: -4.352426528930664
    9. ' (' → logprob: -4.602426528930664
    10. ' in' → logprob: -4.977426528930664

Token 880: ' (+' (ID: 36088)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0653969049453735
    2. 'by' → logprob: -1.0653969049453735
    3. '0' → logprob: -2.440396785736084
    4. ',' → logprob: -2.690396785736084
    5. ' by' → logprob: -2.815396785736084
    6. ' or' → logprob: -3.190396785736084
    7. 'in' → logprob: -3.440396785736084
    8. 'd' → logprob: -4.440396785736084
    9. '       ' → logprob: -5.815396785736084
    10. 'and' → logprob: -6.190396785736084

Token 881: 'small' (ID: 18158)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20960284769535065
    2. '0' → logprob: -1.9596028327941895
    3. ' self' → logprob: -3.5846028327941895
    4. '=' → logprob: -4.7096028327941895
    5. '1' → logprob: -4.9596028327941895
    6. ' ' → logprob: -6.0846028327941895
    7. '=self' → logprob: -6.9596028327941895
    8. 'eps' → logprob: -8.084603309631348
    9. ',' → logprob: -8.834603309631348
    10. 'delta' → logprob: -9.209603309631348

Token 882: ' step' (ID: 5983)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2495509833097458
    2. '_' → logprob: -2.6245510578155518
    3. ' ,' → logprob: -2.7495510578155518
    4. '_step' → logprob: -3.8745510578155518
    5. '_delta' → logprob: -4.124550819396973
    6. ')' → logprob: -4.624550819396973
    7. '0' → logprob: -4.999550819396973
    8. ' )' → logprob: -5.624550819396973
    9. ' _' → logprob: -5.624550819396973
    10. '),' → logprob: -5.749550819396973

Token 883: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3893391788005829
    2. '),' → logprob: -1.2643392086029053
    3. ')' → logprob: -3.7643392086029053
    4. ',),' → logprob: -5.389338970184326
    5. ',)' → logprob: -5.764338970184326
    6. '0' → logprob: -6.014338970184326
    7. '=' → logprob: -6.514338970184326
    8. ' or' → logprob: -6.764338970184326
    9. ' ,' → logprob: -7.139338970184326
    10. ',
' → logprob: -7.139338970184326

Token 884: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26546528935432434
    2. ' or' → logprob: -1.515465259552002
    3. '[' → logprob: -5.515465259552002
    4. '       ' → logprob: -6.265465259552002
    5. ' ,' → logprob: -6.265465259552002
    6. '   ' → logprob: -6.390465259552002
    7. ',
' → logprob: -6.640465259552002
    8. 'or' → logprob: -7.640465259552002
    9. '(' → logprob: -7.890465259552002
    10. ')' → logprob: -8.51546573638916

Token 885: ' backward' (ID: 58986)
  Prédit: ' stay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stay' → logprob: -0.5785619020462036
    2. 'stay' → logprob: -0.9535619020462036
    3. '0' → logprob: -3.828561782836914
    4. 'not' → logprob: -4.453561782836914
    5. 'stand' → logprob: -4.828561782836914
    6. ' not' → logprob: -5.578561782836914
    7. 'back' → logprob: -5.828561782836914
    8. 'remain' → logprob: -6.453561782836914
    9. ' ' → logprob: -6.828561782836914
    10. ' stand' → logprob: -7.203561782836914

Token 886: ' (-' (ID: 21382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9259807467460632
    2. ' (' → logprob: -0.9259807467460632
    3. ',' → logprob: -2.425980806350708
    4. ' or' → logprob: -2.425980806350708
    5. ' (+' → logprob: -4.675980567932129
    6. '(+' → logprob: -5.050980567932129
    7. ' in' → logprob: -5.425980567932129
    8. 'or' → logprob: -6.175980567932129
    9. '       ' → logprob: -6.175980567932129
    10. ' with' → logprob: -7.300980567932129

Token 887: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.46896225214004517
    2. 'self' → logprob: -1.0939621925354004
    3. '0' → logprob: -4.3439621925354
    4. '1' → logprob: -4.4689621925354
    5. ' small' → logprob: -4.5939621925354
    6. 'step' → logprob: -6.5939621925354
    7. ' self' → logprob: -6.7189621925354
    8. ')' → logprob: -7.0939621925354
    9. '_small' → logprob: -7.2189621925354
    10. ' ' → logprob: -9.093962669372559

Token 888: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.02237960323691368
    2. 'step' → logprob: -4.272379398345947
    3. '0' → logprob: -5.897379398345947
    4. '_step' → logprob: -6.522379398345947
    5. ' _' → logprob: -6.897379398345947
    6. ' ' → logprob: -6.897379398345947
    7. ')' → logprob: -7.522379398345947
    8. '_' → logprob: -7.772379398345947
    9. '1' → logprob: -8.147379875183105
    10. ' small' → logprob: -8.647379875183105

Token 889: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.399346262216568
    2. ')' → logprob: -1.1493462324142456
    3. '),' → logprob: -5.274346351623535
    4. ')
' → logprob: -5.399346351623535
    5. '       ' → logprob: -6.149346351623535
    6. ',
' → logprob: -8.899346351623535
    7. '   ' → logprob: -8.899346351623535
    8. ' ,' → logprob: -9.024346351623535
    9. ' or' → logprob: -10.649346351623535
    10. ' )' → logprob: -10.899346351623535

Token 890: ' along' (ID: 4251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33218854665756226
    2. ',' → logprob: -2.082188606262207
    3. '[' → logprob: -2.832188606262207
    4. ':' → logprob: -3.457188606262207
    5. '   ' → logprob: -4.082188606262207
    6. '(' → logprob: -4.457188606262207
    7. ' (' → logprob: -4.457188606262207
    8. ' step' → logprob: -5.207188606262207
    9. ':
' → logprob: -5.457188606262207
    10. '[
' → logprob: -5.707188606262207

Token 891: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7734884023666382
    2. 'self' → logprob: -1.2734884023666382
    3. 'the' → logprob: -1.6484884023666382
    4. ' self' → logprob: -3.3984885215759277
    5. ' their' → logprob: -5.148488521575928
    6. '[' → logprob: -5.523488521575928
    7. ' (' → logprob: -5.773488521575928
    8. '<|end|>' → logprob: -5.898488521575928
    9. 'd' → logprob: -6.023488521575928
    10. '(self' → logprob: -6.398488521575928

Token 892: ' route' (ID: 9656)
  Prédit: ' route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' route' → logprob: -0.08166149258613586
    2. 'route' → logprob: -2.5816614627838135
    3. '"' → logprob: -6.456661701202393
    4. '_route' → logprob: -7.706661701202393
    5. ' ' → logprob: -8.331661224365234
    6. 'self' → logprob: -9.081661224365234
    7. ''' → logprob: -9.706661224365234
    8. ' "' → logprob: -9.706661224365234
    9. ' routes' → logprob: -10.081661224365234
    10. ',' → logprob: -10.706661224365234

Token 893: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033613771200180054
    2. ',' → logprob: -3.908613681793213
    3. '(' → logprob: -5.408613681793213
    4. '[' → logprob: -5.658613681793213
    5. ' (' → logprob: -6.658613681793213
    6. '   ' → logprob: -6.783613681793213
    7. 'step' → logprob: -7.908613681793213
    8. '
' → logprob: -7.908613681793213
    9. ' step' → logprob: -8.283614158630371
    10. ':' → logprob: -8.408614158630371

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005311666056513786
    2. '#' → logprob: -5.505311489105225
    3. ' with' → logprob: -7.380311489105225
    4. 'with' → logprob: -8.380311965942383
    5. '   ' → logprob: -8.880311965942383
    6. '        ' → logprob: -9.630311965942383
    7. ',' → logprob: -10.005311965942383
    8. '           ' → logprob: -10.380311965942383
    9. '      ' → logprob: -10.630311965942383
    10. ' #' → logprob: -11.005311965942383

Token 895: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2603854537010193
    2. '#' (adapté à ' #') → logprob: -1.760385513305664
    3. ' with' → logprob: -3.885385513305664
    4. ' #' → logprob: -4.885385513305664
    5. '   ' → logprob: -5.385385513305664
    6. ' d' → logprob: -5.510385513305664
    7. ' but' → logprob: -5.635385513305664
    8. '        ' → logprob: -6.135385513305664
    9. ',' → logprob: -6.135385513305664
    10. 'd' → logprob: -6.385385513305664

Token 896: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.565791130065918
    2. 'steps' → logprob: -1.940791130065918
    3. 'step' → logprob: -1.940791130065918
    4. ' step' → logprob: -2.815791130065918
    5. ' steps' → logprob: -2.940791130065918
    6. '#' → logprob: -3.940791130065918
    7. 'moves' → logprob: -5.440791130065918
    8. '   ' → logprob: -5.565791130065918
    9. ' ' → logprob: -7.190791130065918
    10. ' moves' → logprob: -7.315791130065918

Token 897: ' distances' (ID: 48294)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1868441104888916
    2. ' d' → logprob: -1.1868441104888916
    3. ' not' → logprob: -1.5618441104888916
    4. ' steps' → logprob: -3.1868441104888916
    5. 'not' → logprob: -3.6868441104888916
    6. ' step' → logprob: -3.9368441104888916
    7. ' they' → logprob: -3.9368441104888916
    8. ' abs' → logprob: -4.8118438720703125
    9. 'steps' → logprob: -4.8118438720703125
    10. ' only' → logprob: -5.0618438720703125

Token 898: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.20587925612926483
    2. ' are' → logprob: -2.5808792114257812
    3. ' <=' → logprob: -2.9558792114257812
    4. 'must' → logprob: -4.580879211425781
    5. '<=' → logprob: -4.705879211425781
    6. '=' → logprob: -4.830879211425781
    7. ' d' → logprob: -5.205879211425781
    8. ' >=' → logprob: -5.330879211425781
    9. ' should' → logprob: -5.330879211425781
    10. 'd' → logprob: -6.080879211425781

Token 899: ' stay' (ID: 5092)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.3491557836532593
    2. 'not' → logprob: -1.4741557836532593
    3. 'remain' → logprob: -1.9741557836532593
    4. ' not' → logprob: -2.099155902862549
    5. 'be' → logprob: -2.724155902862549
    6. ' remain' → logprob: -3.099155902862549
    7. 'stay' → logprob: -3.224155902862549
    8. ' stay' → logprob: -3.599155902862549
    9. ' ' → logprob: -3.974155902862549
    10. 'always' → logprob: -4.349155902862549

Token 900: ' in' (ID: 306)
  Prédit: ' within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' within' → logprob: -1.069635272026062
    2. '0' → logprob: -1.569635272026062
    3. 'within' → logprob: -1.694635272026062
    4. '>=' → logprob: -1.694635272026062
    5. 'in' → logprob: -3.5696353912353516
    6. ' in' → logprob: -4.194635391235352
    7. ' between' → logprob: -4.319635391235352
    8. ' ' → logprob: -4.819635391235352
    9. ' >=' → logprob: -4.944635391235352
    10. 'between' → logprob: -4.944635391235352

Token 901: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018216434866189957
    2. '0' → logprob: -4.018216609954834
    3. ' [' → logprob: -9.768216133117676
    4. 'the' → logprob: -12.643216133117676
    5. ' ' → logprob: -12.768216133117676
    6. 'range' → logprob: -13.393216133117676
    7. 'bounds' → logprob: -14.268216133117676
    8. '   ' → logprob: -14.393216133117676
    9. '```' → logprob: -16.393217086791992
    10. '(' → logprob: -16.393217086791992

Token 902: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.87502670288086
    3. '(' → logprob: -12.50002670288086
    4. ',' → logprob: -13.75002670288086
    5. '[' → logprob: -14.25002670288086
    6. '   ' → logprob: -14.50002670288086
    7. '```' → logprob: -14.62502670288086
    8. '
' → logprob: -14.75002670288086
    9. 'self' → logprob: -16.25002670288086
    10. ' (' → logprob: -16.25002670288086

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014291257597506046
    2. '.' → logprob: -4.514291286468506
    3. 'self' → logprob: -6.139291286468506
    4. ',self' → logprob: -7.139291286468506
    5. ' ,' → logprob: -8.514290809631348
    6. '.,' → logprob: -9.764290809631348
    7. ',
' → logprob: -11.514290809631348
    8. ' self' → logprob: -12.014290809631348
    9. '```' → logprob: -12.639290809631348
    10. '(self' → logprob: -13.139290809631348

Token 904: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008054602658376098
    2. ' self' → logprob: -7.125805377960205
    3. '
' → logprob: -15.125805854797363
    4. '(self' → logprob: -15.750805854797363
    5. '	self' → logprob: -16.250804901123047
    6. '```' → logprob: -16.375804901123047
    7. ' ' → logprob: -16.625804901123047
    8. '1' → logprob: -16.750804901123047
    9. '   ' → logprob: -16.750804901123047
    10. '       ' → logprob: -17.000804901123047

Token 905: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23404455184936523
    2. ']
' → logprob: -1.6090445518493652
    3. '],' → logprob: -5.484044551849365
    4. '].' → logprob: -6.234044551849365
    5. ']
' → logprob: -7.109044551849365
    6. '       ' → logprob: -7.484044551849365
    7. ']

' → logprob: -7.984044551849365
    8. ' ]' → logprob: -8.359045028686523
    9. '].
' → logprob: -8.609045028686523
    10. '   ' → logprob: -9.609045028686523

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004926258116029203
    2. '   ' → logprob: -8.375493049621582
    3. 'step' → logprob: -9.250493049621582
    4. ' step' → logprob: -9.625493049621582
    5. 'steps' → logprob: -10.500493049621582
    6. ' steps' → logprob: -10.750493049621582
    7. '```' → logprob: -10.875493049621582
    8. 'tokens' → logprob: -12.500493049621582
    9. ',' → logprob: -12.625493049621582
    10. '        
' → logprob: -12.750493049621582

Token 907: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004149987827986479
    2. 'steps' → logprob: -5.879149913787842
    3. 'step' → logprob: -6.754149913787842
    4. 'moves' → logprob: -8.879150390625
    5. '   ' → logprob: -11.629150390625
    6. ' steps' → logprob: -11.879150390625
    7. ' step' → logprob: -12.129150390625
    8. 'poss' → logprob: -12.379150390625
    9. '```' → logprob: -12.379150390625
    10. 'd' → logprob: -13.504150390625

Token 908: ' However' (ID: 5551)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.5156676173210144
    2. 'step' → logprob: -1.3906676769256592
    3. '       ' → logprob: -2.265667676925659
    4. 'moves' → logprob: -3.515667676925659
    5. '   ' → logprob: -4.26566743850708
    6. 'poss' → logprob: -6.01566743850708
    7. 'positions' → logprob: -6.89066743850708
    8. 'res' → logprob: -7.51566743850708
    9. 'result' → logprob: -7.64066743850708
    10. 'delta' → logprob: -7.64066743850708

Token 909: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2046263962984085
    2. ',' → logprob: -1.829626441001892
    3. '   ' → logprob: -5.079626560211182
    4. ' steps' → logprob: -5.204626560211182
    5. ' step' → logprob: -5.829626560211182
    6. ' ,' → logprob: -6.204626560211182
    7. 'steps' → logprob: -6.829626560211182
    8. '<|end|>' → logprob: -7.329626560211182
    9. 'def' → logprob: -7.454626560211182
    10. 'step' → logprob: -7.454626560211182

Token 910: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5091383457183838
    2. '   ' → logprob: -2.259138345718384
    3. ':' → logprob: -2.509138345718384
    4. ' limits' → logprob: -3.384138345718384
    5. ' constraints' → logprob: -3.634138345718384
    6. ' does' → logprob: -3.634138345718384
    7. ' only' → logprob: -3.759138345718384
    8. ' step' → logprob: -4.259138107299805
    9. ' continues' → logprob: -4.384138107299805
    10. ' steps' → logprob: -4.634138107299805

Token 911: ' clim' (ID: 21324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1736571788787842
    2. '#' → logprob: -1.7986571788787842
    3. ' step' → logprob: -1.7986571788787842
    4. ' that' → logprob: -1.9236571788787842
    5. ' the' → logprob: -2.798657178878784
    6. ' steps' → logprob: -3.423657178878784
    7. ' #' → logprob: -3.673657178878784
    8. 'step' → logprob: -3.673657178878784
    9. '   ' → logprob: -4.048657417297363
    10. ' we' → logprob: -4.548657417297363

Token 912: 'bers' (ID: 7008)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34220758080482483
    2. 'bers' → logprob: -1.9672075510025024
    3. 'ber' → logprob: -2.092207670211792
    4. 'bs' → logprob: -4.842207431793213
    5. 'ate' → logprob: -5.342207431793213
    6. 'it' → logprob: -5.842207431793213
    7. 'bed' → logprob: -6.467207431793213
    8. 'iter' → logprob: -6.592207431793213
    9. 'ib' → logprob: -6.717207431793213
    10. 'iters' → logprob: -6.842207431793213

Token 913: ' start' (ID: 1604)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10563122481107712
    2. ' may' → logprob: -3.605631113052368
    3. '   ' → logprob: -3.980631113052368
    4. ' are' → logprob: -4.230631351470947
    5. ' cannot' → logprob: -4.480631351470947
    6. ' move' → logprob: -5.355631351470947
    7. 'can' → logprob: -5.605631351470947
    8. ' must' → logprob: -5.855631351470947
    9. ' only' → logprob: -5.855631351470947
    10. ' have' → logprob: -6.355631351470947

Token 914: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6724828481674194
    2. ' from' → logprob: -1.6724828481674194
    3. 'from' → logprob: -2.047482967376709
    4. ',' → logprob: -3.047482967376709
    5. ' with' → logprob: -3.297482967376709
    6. '       ' → logprob: -3.297482967376709
    7. ' and' → logprob: -4.047482967376709
    8. '=' → logprob: -5.172482967376709
    9. '   ' → logprob: -5.547482967376709
    10. ' =' → logprob: -5.547482967376709

Token 915: ' ends' (ID: 17095)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06364662200212479
    2. ' ' → logprob: -3.6886465549468994
    3. 'd' → logprob: -4.8136467933654785
    4. 'start' → logprob: -4.8136467933654785
    5. 'distance' → logprob: -4.9386467933654785
    6. 'positions' → logprob: -6.0636467933654785
    7. ' d' → logprob: -6.3136467933654785
    8. 'both' → logprob: -6.3136467933654785
    9. ' start' → logprob: -6.4386467933654785
    10. 'the' → logprob: -7.3136467933654785

Token 916: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4229586124420166
    2. ',' → logprob: -1.4229586124420166
    3. ' and' → logprob: -2.4229586124420166
    4. '        
' → logprob: -5.4229583740234375
    5. ':' → logprob: -6.0479583740234375
    6. '.' → logprob: -6.2979583740234375
    7. ' with' → logprob: -6.2979583740234375
    8. '
' → logprob: -6.9229583740234375
    9. ',
' → logprob: -7.0479583740234375
    10. ' (' → logprob: -7.1729583740234375

Token 917: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8896879553794861
    2. '0' → logprob: -1.6396880149841309
    3. '#' → logprob: -2.014688014984131
    4. '),' → logprob: -2.639688014984131
    5. ' and' → logprob: -3.264688014984131
    6. 'and' → logprob: -3.264688014984131
    7. ')
' → logprob: -3.389688014984131
    8. 'd' → logprob: -4.389688014984131
    9. ' so' → logprob: -4.639688014984131
    10. 'both' → logprob: -4.889688014984131

Token 918: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1692858636379242
    2. '.' → logprob: -2.294285774230957
    3. ')' → logprob: -3.669285774230957
    4. ' and' → logprob: -3.794285774230957
    5. ' ,' → logprob: -6.169285774230957
    6. '),' → logprob: -6.919285774230957
    7. '   ' → logprob: -6.919285774230957
    8. '0' → logprob: -7.544285774230957
    9. 'and' → logprob: -7.919285774230957
    10. '+' → logprob: -8.169285774230957

Token 919: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005563974846154451
    2. ' self' → logprob: -5.380564212799072
    3. 'L' → logprob: -7.130564212799072
    4. '0' → logprob: -9.630563735961914
    5. '1' → logprob: -10.005563735961914
    6. '   ' → logprob: -11.630563735961914
    7. ' L' → logprob: -12.005563735961914
    8. '```' → logprob: -12.630563735961914
    9. '       ' → logprob: -12.880563735961914
    10. '100' → logprob: -13.005563735961914

Token 920: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43768444657325745
    2. '),' → logprob: -1.187684416770935
    3. ')
' → logprob: -4.062684535980225
    4. ' respectively' → logprob: -4.437684535980225
    5. ',' → logprob: -4.937684535980225
    6. '+' → logprob: -5.812684535980225
    7. '),
' → logprob: -5.812684535980225
    8. '   ' → logprob: -6.437684535980225
    9. 'respect' → logprob: -7.062684535980225
    10. ' and' → logprob: -7.062684535980225

Token 921: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23968854546546936
    2. ',' → logprob: -1.614688515663147
    3. ':' → logprob: -5.239688396453857
    4. '   ' → logprob: -5.364688396453857
    5. ' and' → logprob: -6.989688396453857
    6. ',
' → logprob: -7.114688396453857
    7. ' ,' → logprob: -7.864688396453857
    8. '
' → logprob: -8.114688873291016
    9. '        
' → logprob: -8.114688873291016
    10. ':
' → logprob: -8.739688873291016

Token 922: ' cannot' (ID: 6284)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.7114201188087463
    2. 'must' → logprob: -1.8364200592041016
    3. ' move' → logprob: -2.3364200592041016
    4. '#' → logprob: -2.8364200592041016
    5. 'can' → logprob: -2.9614200592041016
    6. 'cannot' → logprob: -2.9614200592041016
    7. 'meet' → logprob: -4.086420059204102
    8. '
' → logprob: -4.086420059204102
    9. 'only' → logprob: -4.336420059204102
    10. ' must' → logprob: -5.086420059204102

Token 923: ' be' (ID: 413)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.7671474814414978
    2. ' move' → logprob: -0.8921474814414978
    3. 'move' → logprob: -2.8921475410461426
    4. ' cross' → logprob: -4.142147541046143
    5. ' pass' → logprob: -4.517147541046143
    6. 'go' → logprob: -4.892147541046143
    7. 'cross' → logprob: -5.142147541046143
    8. 'increase' → logprob: -5.517147541046143
    9. ' exceed' → logprob: -5.642147541046143
    10. ' step' → logprob: -5.642147541046143

Token 924: ' below' (ID: 4895)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15928243100643158
    2. 'outside' → logprob: -3.0342824459075928
    3. 'behind' → logprob: -3.2842824459075928
    4. 'past' → logprob: -4.034282207489014
    5. ' beyond' → logprob: -4.909282207489014
    6. 'at' → logprob: -5.034282207489014
    7. 'between' → logprob: -5.284282207489014
    8. 'on' → logprob: -5.659282207489014
    9. ' outside' → logprob: -5.909282207489014
    10. 'both' → logprob: -6.034282207489014

Token 925: ' ground' (ID: 7740)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007595999049954116
    2. ' ' → logprob: -7.375759601593018
    3. 'zero' → logprob: -9.37575912475586
    4. '   ' → logprob: -10.75075912475586
    5. ' zero' → logprob: -10.87575912475586
    6. '```' → logprob: -12.25075912475586
    7. '       ' → logprob: -14.37575912475586
    8. 'the' → logprob: -14.87575912475586
    9. 'their' → logprob: -15.00075912475586
    10. '  ' → logprob: -15.12575912475586

Token 926: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09653574973344803
    2. ',' → logprob: -2.9715356826782227
    3. '   ' → logprob: -3.5965356826782227
    4. ':' → logprob: -4.846535682678223
    5. '        
' → logprob: -6.721535682678223
    6. '[' → logprob: -7.346535682678223
    7. '
' → logprob: -7.346535682678223
    8. '.' → logprob: -7.471535682678223
    9. '(' → logprob: -7.721535682678223
    10. ' (' → logprob: -7.971535682678223

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03065090999007225
    2. '#' → logprob: -4.030651092529297
    3. '   ' → logprob: -4.530651092529297
    4. ' so' → logprob: -6.780651092529297
    5. ' and' → logprob: -9.030651092529297
    6. ' ' → logprob: -9.655651092529297
    7. ' #' → logprob: -9.780651092529297
    8. ' but' → logprob: -9.905651092529297
    9. '           ' → logprob: -10.030651092529297
    10. '    ' → logprob: -10.530651092529297

Token 928: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.7567758560180664
    2. '#' (adapté à ' #') → logprob: -1.0067758560180664
    3. '       ' → logprob: -1.8817758560180664
    4. 'so' → logprob: -4.381775856018066
    5. '   ' → logprob: -8.631775856018066
    6. ' #' → logprob: -8.881775856018066
    7. 'and' → logprob: -9.631775856018066
    8. '0' → logprob: -9.881775856018066
    9. ' ' → logprob: -10.256775856018066
    10. ' and' → logprob: -10.756775856018066

Token 929: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6950126886367798
    2. '       ' → logprob: -0.9450126886367798
    3. ' so' → logprob: -3.0700125694274902
    4. 'so' → logprob: -3.5700125694274902
    5. 'return' → logprob: -4.94501256942749
    6. 'steps' → logprob: -5.07001256942749
    7. 'and' → logprob: -5.19501256942749
    8. '   ' → logprob: -5.19501256942749
    9. ' #' → logprob: -5.57001256942749
    10. ' and' → logprob: -5.82001256942749

Token 930: ' they' (ID: 1023)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3387863636016846
    2. '       ' → logprob: -1.4637863636016846
    3. ' we' → logprob: -2.0887863636016846
    4. ' the' → logprob: -2.4637863636016846
    5. ' #' → logprob: -2.9637863636016846
    6. '   ' → logprob: -3.3387863636016846
    7. ' here' → logprob: -3.4637863636016846
    8. ' they' → logprob: -4.2137861251831055
    9. ' both' → logprob: -4.2137861251831055
    10. ' for' → logprob: -4.3387861251831055

Token 931: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5381830334663391
    2. ' cannot' → logprob: -1.7881829738616943
    3. ' must' → logprob: -2.4131829738616943
    4. ' may' → logprob: -3.2881829738616943
    5. ' are' → logprob: -3.4131829738616943
    6. 'cannot' → logprob: -3.5381829738616943
    7. 'can' → logprob: -4.288183212280273
    8. '
' → logprob: -4.913183212280273
    9. 'must' → logprob: -4.913183212280273
    10. '   ' → logprob: -5.163183212280273

Token 932: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.09506130963563919
    2. ' only' → logprob: -2.5950613021850586
    3. 'move' → logprob: -5.095061302185059
    4. '   ' → logprob: -6.220061302185059
    5. '
' → logprob: -6.345061302185059
    6. 'only' → logprob: -6.720061302185059
    7. ' go' → logprob: -7.095061302185059
    8. ' step' → logprob: -7.095061302185059
    9. ' also' → logprob: -7.220061302185059
    10. '       ' → logprob: -7.970061302185059

Token 933: ' back' (ID: 1602)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.05395054444670677
    2. 'forward' → logprob: -3.303950548171997
    3. ' only' → logprob: -5.178950309753418
    4. ' in' → logprob: -6.303950309753418
    5. ' within' → logprob: -6.928950309753418
    6. ' up' → logprob: -7.178950309753418
    7. ' forwards' → logprob: -7.303950309753418
    8. ' by' → logprob: -7.553950309753418
    9. ' ' → logprob: -7.553950309753418
    10. 'in' → logprob: -7.553950309753418

Token 934: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18614178895950317
    2. '   ' → logprob: -2.5611417293548584
    3. ' in' → logprob: -3.9361417293548584
    4. ' ,' → logprob: -3.9361417293548584
    5. '       ' → logprob: -4.0611419677734375
    6. ' by' → logprob: -5.1861419677734375
    7. 'wards' → logprob: -5.1861419677734375
    8. ' and' → logprob: -5.4361419677734375
    9. ',
' → logprob: -5.6861419677734375
    10. ' or' → logprob: -5.9361419677734375

Token 935: ' forth' (ID: 21806)
  Prédit: 'forth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forth' → logprob: -0.02105538360774517
    2. ' forth' → logprob: -3.8960554599761963
    3. 'forward' → logprob: -8.021055221557617
    4. 'f' → logprob: -8.771055221557617
    5. '0' → logprob: -12.396055221557617
    6. 'fort' → logprob: -12.521055221557617
    7. '
' → logprob: -12.771055221557617
    8. 'for' → logprob: -12.771055221557617
    9. '   ' → logprob: -12.896055221557617
    10. '```' → logprob: -13.021055221557617

Token 936: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5318729281425476
    2. ',' → logprob: -1.7818729877471924
    3. '   ' → logprob: -2.1568729877471924
    4. ':' → logprob: -2.9068729877471924
    5. '(' → logprob: -3.4068729877471924
    6. '[' → logprob: -4.906872749328613
    7. ':
' → logprob: -4.906872749328613
    8. '(step' → logprob: -5.281872749328613
    9. ',
' → logprob: -5.406872749328613
    10. '
' → logprob: -5.906872749328613

Token 937: ' keeping' (ID: 13958)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.43065816164016724
    2. 'finding' → logprob: -2.4306581020355225
    3. 'maint' → logprob: -2.8056581020355225
    4. 'trying' → logprob: -3.0556581020355225
    5. 'keeping' → logprob: -3.6806581020355225
    6. 'st' → logprob: -3.6806581020355225
    7. ' searching' → logprob: -4.180658340454102
    8. 'remaining' → logprob: -4.430658340454102
    9. 'still' → logprob: -4.430658340454102
    10. 'meeting' → logprob: -4.680658340454102

Token 938: ' alt' (ID: 5001)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005815856158733368
    2. 'd' → logprob: -5.6308159828186035
    3. ' ' → logprob: -7.1308159828186035
    4. 'distance' → logprob: -8.255815505981445
    5. 'their' → logprob: -8.630815505981445
    6. 'dist' → logprob: -8.755815505981445
    7. ' d' → logprob: -9.005815505981445
    8. ' distances' → logprob: -9.255815505981445
    9. 'both' → logprob: -9.380815505981445
    10. ' their' → logprob: -9.630815505981445

Token 939: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.1103440448641777
    2. '       ' → logprob: -2.4853439331054688
    3. 'itudes' → logprob: -3.9853439331054688
    4. '   ' → logprob: -6.985343933105469
    5. 'it' → logprob: -7.860343933105469
    6. '=' → logprob: -8.235343933105469
    7. 'itud' → logprob: -8.860343933105469
    8. '        ' → logprob: -8.985343933105469
    9. '      ' → logprob: -9.235343933105469
    10. 't' → logprob: -9.735343933105469

Token 940: ' equal' (ID: 12629)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5646512508392334
    2. '   ' → logprob: -1.1896512508392334
    3. ':' → logprob: -2.4396512508392334
    4. ',' → logprob: -3.5646512508392334
    5. ':
' → logprob: -5.5646514892578125
    6. '
' → logprob: -6.3146514892578125
    7. '=' → logprob: -6.9396514892578125
    8. '(' → logprob: -6.9396514892578125
    9. '[' → logprob: -7.4396514892578125
    10. ' =' → logprob: -7.5646514892578125

Token 941: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13051186501979828
    2. '
' → logprob: -3.75551176071167
    3. ',' → logprob: -3.88051176071167
    4. 'step' → logprob: -3.88051176071167
    5. '   ' → logprob: -4.00551176071167
    6. ':
' → logprob: -4.38051176071167
    7. ':' → logprob: -4.63051176071167
    8. '```' → logprob: -5.38051176071167
    9. 'steps' → logprob: -5.50551176071167
    10. '        
' → logprob: -6.50551176071167

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00834080670028925
    2. '   ' → logprob: -5.508340835571289
    3. '[' → logprob: -6.258340835571289
    4. '```' → logprob: -6.883340835571289
    5. '[
' → logprob: -7.133340835571289
    6. '
' → logprob: -8.633340835571289
    7. '        
' → logprob: -9.883340835571289
    8. ',' → logprob: -10.008340835571289
    9. '[]' → logprob: -10.508340835571289
    10. 'def' → logprob: -10.883340835571289

Token 943: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014837427996098995
    2. 'steps' → logprob: -4.889837265014648
    3. 'step' → logprob: -5.139837265014648
    4. 'moves' → logprob: -7.264837265014648
    5. ' step' → logprob: -8.514837265014648
    6. ' steps' → logprob: -8.764837265014648
    7. '   ' → logprob: -9.264837265014648
    8. '```' → logprob: -9.514837265014648
    9. 'poss' → logprob: -10.514837265014648
    10. '
' → logprob: -11.139837265014648

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.553032628493384e-05
    2. '   ' → logprob: -10.000075340270996
    3. 'step' → logprob: -10.750075340270996
    4. ' step' → logprob: -12.125075340270996
    5. 'steps' → logprob: -13.250075340270996
    6. '           ' → logprob: -14.875075340270996
    7. ' steps' → logprob: -14.875075340270996
    8. '
' → logprob: -16.125076293945312
    9. 'import' → logprob: -16.500076293945312
    10. '      ' → logprob: -16.625076293945312

Token 945: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7856645584106445
    2. 'step' → logprob: -0.7856645584106445
    3. ' step' → logprob: -3.5356645584106445
    4. 'steps' → logprob: -3.6606645584106445
    5. '       ' → logprob: -3.7856645584106445
    6. 'moves' → logprob: -5.4106645584106445
    7. '#' (adapté à ' #') → logprob: -6.1606645584106445
    8. ' ' → logprob: -6.2856645584106445
    9. ' steps' → logprob: -7.0356645584106445
    10. '  ' → logprob: -8.285664558410645

Token 946: ' To' (ID: 2514)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.31513792276382446
    2. 'steps' → logprob: -1.4401378631591797
    3. '   ' → logprob: -4.31513786315918
    4. '       ' → logprob: -4.81513786315918
    5. 'moves' → logprob: -4.94013786315918
    6. 'res' → logprob: -5.94013786315918
    7. 'result' → logprob: -7.69013786315918
    8. 'positions' → logprob: -7.94013786315918
    9. 'poss' → logprob: -8.19013786315918
    10. 'def' → logprob: -8.31513786315918

Token 947: ' prevent' (ID: 7332)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.7183290719985962
    2. 'steps' → logprob: -1.4683290719985962
    3. 'def' → logprob: -2.8433289527893066
    4. ' steps' → logprob: -3.2183289527893066
    5. 's' → logprob: -3.4683289527893066
    6. '       ' → logprob: -3.4683289527893066
    7. ' step' → logprob: -3.7183289527893066
    8. 'return' → logprob: -4.093328952789307
    9. 'generate' → logprob: -4.343328952789307
    10. '   ' → logprob: -4.468328952789307

Token 948: ' infinite' (ID: 48413)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2191470861434937
    2. 'step' → logprob: -1.3441470861434937
    3. ' step' → logprob: -1.4691470861434937
    4. ' steps' → logprob: -1.8441470861434937
    5. 'pos' → logprob: -3.844147205352783
    6. 'delta' → logprob: -5.219147205352783
    7. 'moves' → logprob: -5.344147205352783
    8. 'positions' → logprob: -5.594147205352783
    9. ' delta' → logprob: -6.344147205352783
    10. 'd' → logprob: -6.344147205352783

Token 949: ' states' (ID: 9407)
  Prédit: ' loops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' loops' → logprob: -0.18003670871257782
    2. 'loops' → logprob: -2.055036783218384
    3. ' loop' → logprob: -3.805036783218384
    4. 'loop' → logprob: -4.680036544799805
    5. ' recursion' → logprob: -6.680036544799805
    6. 'moves' → logprob: -6.805036544799805
    7. ' looping' → logprob: -6.930036544799805
    8. 'steps' → logprob: -7.055036544799805
    9. ' steps' → logprob: -7.805036544799805
    10. '#' → logprob: -8.555036544799805

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017886051908135414
    2. ',
' → logprob: -4.642886161804199
    3. ' ,' → logprob: -5.517886161804199
    4. '       ' → logprob: -6.392886161804199
    5. ' and' → logprob: -7.017886161804199
    6. ' we' → logprob: -8.0178861618042
    7. ' while' → logprob: -8.8928861618042
    8. ' for' → logprob: -9.1428861618042
    9. ' of' → logprob: -9.3928861618042
    10. ' (' → logprob: -9.3928861618042

Token 951: ' we' (ID: 581)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8743263483047485
    2. ' steps' → logprob: -0.8743263483047485
    3. 'step' → logprob: -2.499326229095459
    4. 'steps' → logprob: -2.624326229095459
    5. '       ' → logprob: -5.374326229095459
    6. ' moves' → logprob: -5.874326229095459
    7. 'moves' → logprob: -6.624326229095459
    8. ' res' → logprob: -7.124326229095459
    9. ' result' → logprob: -8.249326705932617
    10. 'result' → logprob: -8.374326705932617

Token 952: ' consider' (ID: 3331)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.3849600851535797
    2. ' use' → logprob: -2.134960174560547
    3. '   ' → logprob: -2.634960174560547
    4. 'step' → logprob: -3.259960174560547
    5. ' consider' → logprob: -3.384960174560547
    6. ' steps' → logprob: -3.634960174560547
    7. '       ' → logprob: -4.884960174560547
    8. ' allow' → logprob: -5.759960174560547
    9. ' generate' → logprob: -6.009960174560547
    10. '_step' → logprob: -6.259960174560547

Token 953: ' a' (ID: 261)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.4255509078502655
    2. ' steps' → logprob: -1.300550937652588
    3. 'step' → logprob: -3.425550937652588
    4. '[' → logprob: -4.175550937652588
    5. ' step' → logprob: -4.425550937652588
    6. '   ' → logprob: -4.675550937652588
    7. '[
' → logprob: -5.675550937652588
    8. ' [' → logprob: -7.550550937652588
    9. 'increments' → logprob: -8.67555046081543
    10. ' small' → logprob: -8.92555046081543

Token 954: ' finite' (ID: 73104)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'small' → logprob: -1.3247677087783813
    2. ' small' → logprob: -1.4497677087783813
    3. ' fixed' → logprob: -1.4497677087783813
    4. 'fixed' → logprob: -1.8247677087783813
    5. 'step' → logprob: -2.699767589569092
    6. ' step' → logprob: -3.699767589569092
    7. 'steps' → logprob: -4.949767589569092
    8. ' steps' → logprob: -6.699767589569092
    9. ' set' → logprob: -7.199767589569092
    10. '   ' → logprob: -7.824767589569092

Token 955: ' set' (ID: 920)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.758389949798584
    2. 'step' → logprob: -1.383389949798584
    3. 'steps' → logprob: -1.883389949798584
    4. ' steps' → logprob: -2.508389949798584
    5. ' set' → logprob: -3.258389949798584
    6. '_step' → logprob: -6.008389949798584
    7. 'delta' → logprob: -6.633389949798584
    8. '_steps' → logprob: -6.633389949798584
    9. '   ' → logprob: -6.758389949798584
    10. 'set' → logprob: -7.008389949798584

Token 956: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0099280821159482
    2. 'of' → logprob: -5.384928226470947
    3. '   ' → logprob: -5.759928226470947
    4. '[' → logprob: -6.884928226470947
    5. '    ' → logprob: -8.134927749633789
    6. ' ' → logprob: -8.134927749633789
    7. ' [' → logprob: -8.259927749633789
    8. '[
' → logprob: -9.259927749633789
    9. '       ' → logprob: -10.134927749633789
    10. ' [
' → logprob: -10.259927749633789

Token 957: ' candidate' (ID: 17098)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.05511753261089325
    2. ' steps' → logprob: -3.680117607116699
    3. 'step' → logprob: -3.680117607116699
    4. 'moves' → logprob: -6.555117607116699
    5. 'd' → logprob: -7.305117607116699
    6. ' step' → logprob: -7.805117607116699
    7. 'delta' → logprob: -8.1801176071167
    8. 'increments' → logprob: -8.4301176071167
    9. 'possible' → logprob: -10.1801176071167
    10. ' moves' → logprob: -10.5551176071167

Token 958: ' positions' (ID: 15897)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.3449425995349884
    2. 'steps' → logprob: -1.344942569732666
    3. ' step' → logprob: -4.219942569732666
    4. 'step' → logprob: -5.219942569732666
    5. ' next' → logprob: -6.094942569732666
    6. 'moves' → logprob: -6.594942569732666
    7. ' distances' → logprob: -6.844942569732666
    8. 'd' → logprob: -6.844942569732666
    9. 'next' → logprob: -6.969942569732666
    10. '_steps' → logprob: -7.094942569732666

Token 959: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3391067385673523
    2. ':' → logprob: -1.589106798171997
    3. ',' → logprob: -3.714106798171997
    4. '=' → logprob: -4.464106559753418
    5. ' =' → logprob: -4.464106559753418
    6. '   ' → logprob: -4.589106559753418
    7. '[' → logprob: -4.839106559753418
    8. ':
' → logprob: -5.714106559753418
    9. 'def' → logprob: -5.964106559753418
    10. '        
' → logprob: -6.089106559753418

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01777574047446251
    2. '   ' → logprob: -4.142775535583496
    3. '        
' → logprob: -7.767775535583496
    4. '
' → logprob: -8.142775535583496
    5. '[
' → logprob: -8.392775535583496
    6. '[' → logprob: -8.392775535583496
    7. '    
' → logprob: -9.142775535583496
    8. 'tokens' → logprob: -9.267775535583496
    9. '```' → logprob: -9.892775535583496
    10. ',' → logprob: -10.267775535583496

Token 961: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016224168241024017
    2. ' step' → logprob: -5.016224384307861
    3. 'step' → logprob: -5.391224384307861
    4. 'steps' → logprob: -6.141224384307861
    5. ' steps' → logprob: -6.266224384307861
    6. '   ' → logprob: -8.391223907470703
    7. 'positions' → logprob: -8.641223907470703
    8. '
' → logprob: -9.141223907470703
    9. ' positions' → logprob: -9.266223907470703
    10. 'moves' → logprob: -10.016223907470703

Token 962: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17586322128772736
    2. 'step' → logprob: -2.425863265991211
    3. 'steps' → logprob: -3.175863265991211
    4. 'c' → logprob: -4.175863265991211
    5. 'positions' → logprob: -4.925863265991211
    6. '   ' → logprob: -5.675863265991211
    7. 'moves' → logprob: -5.925863265991211
    8. 'poss' → logprob: -6.800863265991211
    9. ' step' → logprob: -8.800863265991211
    10. 'pos' → logprob: -8.925863265991211

Token 963: ' take' (ID: 2304)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -1.0209038257598877
    2. 'step' → logprob: -2.0209038257598877
    3. ' step' → logprob: -2.0209038257598877
    4. 'steps' → logprob: -2.2709038257598877
    5. '   ' → logprob: -2.8959038257598877
    6. 'def' → logprob: -3.1459038257598877
    7. ' def' → logprob: -3.2709038257598877
    8. '       ' → logprob: -3.3959038257598877
    9. ' consider' → logprob: -3.6459038257598877
    10. '_steps' → logprob: -3.7709038257598877

Token 964: ' all' (ID: 722)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.436348021030426
    2. 'steps' → logprob: -1.3113479614257812
    3. ' step' → logprob: -3.1863479614257812
    4. '[' → logprob: -4.311347961425781
    5. 'step' → logprob: -4.311347961425781
    6. '[
' → logprob: -4.936347961425781
    7. ' [' → logprob: -5.061347961425781
    8. '   ' → logprob: -6.686347961425781
    9. ' [
' → logprob: -8.061347961425781
    10. ' increments' → logprob: -8.811347961425781

Token 965: ' points' (ID: 5571)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.4295700788497925
    2. ' steps' → logprob: -1.6795700788497925
    3. 'step' → logprob: -3.429570198059082
    4. ' step' → logprob: -3.804570198059082
    5. 'd' → logprob: -4.054570198059082
    6. '   ' → logprob: -4.304570198059082
    7. '[' → logprob: -4.304570198059082
    8. 'dist' → logprob: -4.429570198059082
    9. '[
' → logprob: -4.554570198059082
    10. '_steps' → logprob: -4.679570198059082

Token 966: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5693702101707458
    2. 'on' → logprob: -2.0693702697753906
    3. ' on' → logprob: -2.3193702697753906
    4. ' in' → logprob: -3.3193702697753906
    5. ' from' → logprob: -3.5693702697753906
    6. 'in' → logprob: -3.8193702697753906
    7. ' along' → logprob: -3.8193702697753906
    8. 'along' → logprob: -4.194370269775391
    9. ',' → logprob: -4.444370269775391
    10. '=' → logprob: -4.944370269775391

Token 967: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5741617679595947
    2. 'the' → logprob: -1.3241617679595947
    3. '[' → logprob: -2.3241617679595947
    4. 'intersection' → logprob: -3.8241617679595947
    5. 'interest' → logprob: -4.074161529541016
    6. ' the' → logprob: -4.949161529541016
    7. 'segments' → logprob: -5.449161529541016
    8. '[self' → logprob: -5.574161529541016
    9. ' [' → logprob: -5.699161529541016
    10. '0' → logprob: -5.824161529541016

Token 968: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.008574622683227062
    2. 'self' → logprob: -6.008574485778809
    3. ' route' → logprob: -6.133574485778809
    4. 'segments' → logprob: -6.133574485778809
    5. 'segment' → logprob: -7.508574485778809
    6. 'Route' → logprob: -7.758574485778809
    7. 'class' → logprob: -8.883574485778809
    8. '[' → logprob: -9.133574485778809
    9. '```' → logprob: -9.133574485778809
    10. '[
' → logprob: -9.883574485778809

Token 969: ' as' (ID: 472)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.674241840839386
    2. '+' → logprob: -1.7992417812347412
    3. ',' → logprob: -1.7992417812347412
    4. '       ' → logprob: -2.549241781234741
    5. ' plus' → logprob: -3.674241781234741
    6. ' and' → logprob: -5.29924201965332
    7. '[' → logprob: -5.42424201965332
    8. 'self' → logprob: -5.54924201965332
    9. '.' → logprob: -5.67424201965332
    10. 'and' → logprob: -6.04924201965332

Token 970: ' possible' (ID: 4149)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.504784107208252
    2. 'candidate' → logprob: -1.754784107208252
    3. 'possible' → logprob: -1.879784107208252
    4. 'next' → logprob: -3.254784107208252
    5. ' candidates' → logprob: -4.629784107208252
    6. ' next' → logprob: -5.129784107208252
    7. ' candidate' → logprob: -5.129784107208252
    8. 'potential' → logprob: -5.254784107208252
    9. 'positions' → logprob: -6.629784107208252
    10. ' potential' → logprob: -6.754784107208252

Token 971: ' stops' (ID: 29924)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9520123600959778
    2. 'next' → logprob: -1.077012300491333
    3. ' next' → logprob: -1.827012300491333
    4. 'positions' → logprob: -2.577012300491333
    5. ' candidates' → logprob: -4.327012538909912
    6. ' positions' → logprob: -4.827012538909912
    7. 'candidate' → logprob: -4.827012538909912
    8. 'steps' → logprob: -5.702012538909912
    9. 'd' → logprob: -7.452012538909912
    10. '   ' → logprob: -7.827012538909912

Token 972: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31082743406295776
    2. ',' → logprob: -1.5608274936676025
    3. ' +' → logprob: -4.185827255249023
    4. '.' → logprob: -4.185827255249023
    5. ' and' → logprob: -4.810827255249023
    6. ':' → logprob: -5.810827255249023
    7. '<|end|>' → logprob: -5.935827255249023
    8. ' (' → logprob: -6.185827255249023
    9. '+' → logprob: -6.560827255249023
    10. ' with' → logprob: -7.185827255249023

Token 973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003131784324068576
    2. '	' → logprob: -8.875312805175781
    3. '   ' → logprob: -10.250312805175781
    4. 'return' → logprob: -10.250312805175781
    5. 'tokens' → logprob: -10.500312805175781
    6. ',' → logprob: -11.500312805175781
    7. '```' → logprob: -11.750312805175781
    8. '	   ' → logprob: -11.750312805175781
    9. 'result' → logprob: -11.875312805175781
    10. '        
' → logprob: -12.125312805175781

Token 974: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047450605779886246
    2. 'positions' → logprob: -3.422450542449951
    3. ' positions' → logprob: -5.797450542449951
    4. 'points' → logprob: -6.047450542449951
    5. 'next' → logprob: -6.172450542449951
    6. 'poss' → logprob: -6.297450542449951
    7. 'result' → logprob: -6.672450542449951
    8. 'moves' → logprob: -7.047450542449951
    9. 'c' → logprob: -7.422450542449951
    10. ' next' → logprob: -7.922450542449951

Token 975: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03334666043519974
    2. 'positions' → logprob: -3.658346652984619
    3. 'points' → logprob: -5.908346652984619
    4. 'poss' → logprob: -6.783346652984619
    5. 'result' → logprob: -7.033346652984619
    6. 'c' → logprob: -7.033346652984619
    7. 'next' → logprob: -7.908346652984619
    8. 'pts' → logprob: -8.408347129821777
    9. 'possible' → logprob: -8.783347129821777
    10. 'dist' → logprob: -8.908347129821777

Token 976: ' allow' (ID: 3763)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46918782591819763
    2. 'def' → logprob: -2.7191877365112305
    3. '   ' → logprob: -2.9691877365112305
    4. ' next' → logprob: -3.7191877365112305
    5. 'result' → logprob: -3.7191877365112305
    6. 'next' → logprob: -3.9691877365112305
    7. 'res' → logprob: -4.0941877365112305
    8. 'consider' → logprob: -4.2191877365112305
    9. ' steps' → logprob: -4.4691877365112305
    10. ' def' → logprob: -4.4691877365112305

Token 977: ' only' (ID: 1606)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.872445285320282
    2. 'positions' → logprob: -1.7474453449249268
    3. 'steps' → logprob: -2.2474453449249268
    4. ' moves' → logprob: -2.8724453449249268
    5. '   ' → logprob: -3.2474453449249268
    6. 'c' → logprob: -3.2474453449249268
    7. 'd' → logprob: -3.4974453449249268
    8. 'possible' → logprob: -3.7474453449249268
    9. 'next' → logprob: -4.122445106506348
    10. ' next' → logprob: -4.247445106506348

Token 978: ' moves' (ID: 19523)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8663738965988159
    2. 'steps' → logprob: -0.9913738965988159
    3. 'moves' → logprob: -3.2413740158081055
    4. 'small' → logprob: -3.3663740158081055
    5. 'increments' → logprob: -3.7413740158081055
    6. 'the' → logprob: -3.8663740158081055
    7. '+' → logprob: -4.4913740158081055
    8. ' steps' → logprob: -4.7413740158081055
    9. 'positions' → logprob: -4.8663740158081055
    10. 'dist' → logprob: -4.8663740158081055

Token 979: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.340982049703598
    2. ' by' → logprob: -2.090981960296631
    3. 'to' → logprob: -2.590981960296631
    4. '=' → logprob: -3.340981960296631
    5. '_to' → logprob: -3.965981960296631
    6. ' of' → logprob: -4.090981960296631
    7. ' =' → logprob: -5.465981960296631
    8. ' forward' → logprob: -5.965981960296631
    9. ' in' → logprob: -6.215981960296631
    10. 'by' → logprob: -6.215981960296631

Token 980: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.353503942489624
    2. 'points' → logprob: -1.353503942489624
    3. 'positions' → logprob: -1.728503942489624
    4. 'd' → logprob: -2.353503942489624
    5. 'the' → logprob: -2.728503942489624
    6. 'self' → logprob: -3.728503942489624
    7. 'dist' → logprob: -3.853503942489624
    8. ' the' → logprob: -3.853503942489624
    9. ' distances' → logprob: -3.978503942489624
    10. ' positions' → logprob: -4.228504180908203

Token 981: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.398018479347229
    2. '[i' → logprob: -1.898018479347229
    3. ' that' → logprob: -2.3980183601379395
    4. '[' → logprob: -2.6480183601379395
    5. ' on' → logprob: -2.7730183601379395
    6. 'in' → logprob: -3.0230183601379395
    7. ']' → logprob: -3.1480183601379395
    8. '=' → logprob: -3.3980183601379395
    9. 'that' → logprob: -3.3980183601379395
    10. ' of' → logprob: -3.7730183601379395

Token 982: ' equal' (ID: 12629)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6966153979301453
    2. 'distance' → logprob: -1.82161545753479
    3. 'alt' → logprob: -1.82161545753479
    4. 'dist' → logprob: -2.32161545753479
    5. '0' → logprob: -3.82161545753479
    6. 'abs' → logprob: -4.571615219116211
    7. ' distances' → logprob: -4.571615219116211
    8. ' alt' → logprob: -5.321615219116211
    9. ' d' → logprob: -5.446615219116211
    10. 'in' → logprob: -5.446615219116211

Token 983: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.3261243402957916
    2. ' alt' → logprob: -1.5761243104934692
    3. ' altitude' → logprob: -2.701124429702759
    4. '_alt' → logprob: -5.95112419128418
    5. 'e' → logprob: -6.82612419128418
    6. '-alt' → logprob: -8.95112419128418
    7. '   ' → logprob: -9.20112419128418
    8. '.alt' → logprob: -9.70112419128418
    9. ' or' → logprob: -9.95112419128418
    10. ' ' → logprob: -10.32612419128418

Token 984: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.35159656405448914
    2. 'itudes' → logprob: -1.2265965938568115
    3. 't' → logprob: -5.976596355438232
    4. 'it' → logprob: -8.35159683227539
    5. '   ' → logprob: -9.47659683227539
    6. '       ' → logprob: -9.72659683227539
    7. 'itud' → logprob: -9.85159683227539
    8. '      ' → logprob: -10.60159683227539
    9. '#' → logprob: -10.72659683227539
    10. '```' → logprob: -11.22659683227539

Token 985: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004126842133700848
    2. '        
' → logprob: -6.129127025604248
    3. '
' → logprob: -6.879127025604248
    4. ',' → logprob: -7.879127025604248
    5. ':' → logprob: -8.12912654876709
    6. '    
' → logprob: -10.25412654876709
    7. '   ' → logprob: -10.50412654876709
    8. '<|end|>' → logprob: -10.75412654876709
    9. ':
' → logprob: -11.00412654876709
    10. '  
' → logprob: -11.25412654876709

Token 986: ' both' (ID: 2973)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.49182766675949097
    2. 'both' → logprob: -0.991827666759491
    3. ' the' → logprob: -5.741827487945557
    4. 'self' → logprob: -5.741827487945557
    5. 'route' → logprob: -5.991827487945557
    6. 'their' → logprob: -5.991827487945557
    7. ' both' → logprob: -6.116827487945557
    8. 'b' → logprob: -6.616827487945557
    9. 'either' → logprob: -6.991827487945557
    10. 'each' → logprob: -7.991827487945557

Token 987: ' legs' (ID: 23024)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'routes' → logprob: -0.24937133491039276
    2. 's' → logprob: -1.6243712902069092
    3. 'route' → logprob: -3.999371290206909
    4. '   ' → logprob: -6.874371528625488
    5. ' routes' → logprob: -6.874371528625488
    6. 'the' → logprob: -7.124371528625488
    7. 'A' → logprob: -7.624371528625488
    8. 'lines' → logprob: -7.749371528625488
    9. 'segments' → logprob: -7.874371528625488
    10. '#' → logprob: -8.374371528625488

Token 988: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13154007494449615
    2. ':' → logprob: -3.006540060043335
    3. '
' → logprob: -3.256540060043335
    4. ',' → logprob: -4.006540298461914
    5. '        
' → logprob: -4.631540298461914
    6. '.' → logprob: -6.256540298461914
    7. ':
' → logprob: -6.756540298461914
    8. '   ' → logprob: -7.006540298461914
    9. '    
' → logprob: -7.881540298461914
    10. 'return' → logprob: -8.131540298461914

Token 989: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014966767048463225
    2. '
' → logprob: -9.375149726867676
    3. '        
' → logprob: -11.250149726867676
    4. '   ' → logprob: -11.750149726867676
    5. '	' → logprob: -11.875149726867676
    6. '```' → logprob: -11.875149726867676
    7. 'return' → logprob: -12.625149726867676
    8. ',' → logprob: -12.625149726867676
    9. 'tokens' → logprob: -12.875149726867676
    10. 's' → logprob: -13.375149726867676

Token 990: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011948877945542336
    2. 'positions' → logprob: -5.011949062347412
    3. 'next' → logprob: -6.261949062347412
    4. 'points' → logprob: -6.761949062347412
    5. 'possible' → logprob: -8.011948585510254
    6. 'result' → logprob: -8.261948585510254
    7. 'moves' → logprob: -8.386948585510254
    8. '```' → logprob: -8.636948585510254
    9. ' positions' → logprob: -8.886948585510254
    10. ' next' → logprob: -9.011948585510254

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.596781946020201e-05
    2. '   ' → logprob: -10.625045776367188
    3. 'points' → logprob: -12.000045776367188
    4. 'next' → logprob: -12.250045776367188
    5. 'def' → logprob: -12.625045776367188
    6. 'positions' → logprob: -13.125045776367188
    7. 'd' → logprob: -13.625045776367188
    8. 'steps' → logprob: -14.250045776367188
    9. '        
' → logprob: -14.625045776367188
    10. 'result' → logprob: -15.000045776367188

Token 992: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6131263375282288
    2. 'c' → logprob: -1.863126277923584
    3. 'positions' → logprob: -2.113126277923584
    4. 'moves' → logprob: -2.988126277923584
    5. 'poss' → logprob: -3.238126277923584
    6. 'result' → logprob: -3.488126277923584
    7. 'res' → logprob: -4.363126277923584
    8. 'next' → logprob: -4.488126277923584
    9. 'possible' → logprob: -4.488126277923584
    10. 'points' → logprob: -5.113126277923584

Token 993: ' The' (ID: 623)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5053067803382874
    2. 'positions' → logprob: -1.7553067207336426
    3. 'next' → logprob: -2.7553067207336426
    4. 'result' → logprob: -3.0053067207336426
    5. 'res' → logprob: -3.3803067207336426
    6. 'moves' → logprob: -3.5053067207336426
    7. 'possible' → logprob: -4.255306720733643
    8. '   ' → logprob: -4.755306720733643
    9. 'candidate' → logprob: -5.130306720733643
    10. 'poss' → logprob: -5.255306720733643

Token 994: ' problem' (ID: 4792)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8617897033691406
    2. 'result' → logprob: -1.7367897033691406
    3. 'positions' → logprob: -2.1117897033691406
    4. 'next' → logprob: -2.6117897033691406
    5. 'res' → logprob: -2.9867897033691406
    6. 'moves' → logprob: -2.9867897033691406
    7. 'candidate' → logprob: -3.4867897033691406
    8. 'possible' → logprob: -3.4867897033691406
    9. '   ' → logprob: -4.236789703369141
    10. 'steps' → logprob: -4.611789703369141

Token 995: ' asks' (ID: 31064)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17186827957630157
    2. '   ' → logprob: -3.421868324279785
    3. 'is' → logprob: -3.546868324279785
    4. ' continues' → logprob: -3.671868324279785
    5. '#' → logprob: -4.046868324279785
    6. ':' → logprob: -4.171868324279785
    7. ' context' → logprob: -5.046868324279785
    8. 'context' → logprob: -5.921868324279785
    9. ' description' → logprob: -6.296868324279785
    10. '.' → logprob: -6.296868324279785

Token 996: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8818705081939697
    2. ' to' → logprob: -1.2568705081939697
    3. 'to' → logprob: -1.5068705081939697
    4. 'for' → logprob: -3.0068705081939697
    5. ' for' → logprob: -4.131870269775391
    6. '   ' → logprob: -5.006870269775391
    7. '#' → logprob: -5.256870269775391
    8. 'def' → logprob: -6.881870269775391
    9. 'return' → logprob: -8.25687026977539
    10. ' us' → logprob: -8.50687026977539

Token 997: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8531255722045898
    2. 'minimal' → logprob: -0.9781255722045898
    3. ' minimal' → logprob: -2.72812557220459
    4. 'minimum' → logprob: -3.10312557220459
    5. 'a' → logprob: -3.85312557220459
    6. 'finding' → logprob: -3.97812557220459
    7. 'min' → logprob: -4.85312557220459
    8. ' the' → logprob: -4.97812557220459
    9. 'return' → logprob: -5.10312557220459
    10. 'all' → logprob: -5.22812557220459

Token 998: ' sum' (ID: 4215)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.5835750102996826
    2. ' meeting' → logprob: -1.7085750102996826
    3. ' time' → logprob: -2.0835750102996826
    4. ' steps' → logprob: -2.2085750102996826
    5. 'time' → logprob: -2.5835750102996826
    6. 'distance' → logprob: -2.5835750102996826
    7. ' distance' → logprob: -3.0835750102996826
    8. 'steps' → logprob: -3.3335750102996826
    9. ' number' → logprob: -3.4585750102996826
    10. 'meeting' → logprob: -3.4585750102996826

Token 999: ' length' (ID: 5517)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.25447118282318115
    2. '       ' → logprob: -2.2544713020324707
    3. '   ' → logprob: -2.8794713020324707
    4. 'of' → logprob: -3.7544713020324707
    5. '_of' → logprob: -4.129471302032471
    6. ' distances' → logprob: -5.379471302032471
    7. '_distance' → logprob: -5.879471302032471
    8. ' ' → logprob: -6.004471302032471
    9. '(' → logprob: -6.504471302032471
    10. '    ' → logprob: -6.754471302032471

Token 1000: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.704237699508667
    2. '   ' → logprob: -1.954237699508667
    3. ' of' → logprob: -2.204237699508667
    4. ',' → logprob: -2.829237699508667
    5. '_of' → logprob: -2.829237699508667
    6. 'of' → logprob: -4.204237937927246
    7. '(' → logprob: -4.204237937927246
    8. ')' → logprob: -4.329237937927246
    9. '_move' → logprob: -4.579237937927246
    10. '_moves' → logprob: -4.704237937927246

Token 1001: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.1959095001220703
    2. 'steps' → logprob: -1.3209095001220703
    3. 'paths' → logprob: -1.4459095001220703
    4. 'the' → logprob: -2.5709095001220703
    5. 'path' → logprob: -3.3209095001220703
    6. 'mov' → logprob: -3.6959095001220703
    7. 'both' → logprob: -4.19590950012207
    8. 'their' → logprob: -4.57090950012207
    9. 'd' → logprob: -5.32090950012207
    10. 'segments' → logprob: -5.82090950012207

Token 1002: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02621912769973278
    2. ',' → logprob: -4.151218891143799
    3. '
' → logprob: -6.526218891143799
    4. '.' → logprob: -6.526218891143799
    5. ':' → logprob: -6.776218891143799
    6. '   ' → logprob: -6.901218891143799
    7. ' to' → logprob: -7.651218891143799
    8. ' (' → logprob: -7.651218891143799
    9. '(' → logprob: -7.901218891143799
    10. '        
' → logprob: -7.901218891143799

Token 1003: ' meeting' (ID: 9176)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.5249766707420349
    2. 'they' → logprob: -1.6499767303466797
    3. 'meeting' → logprob: -2.5249767303466797
    4. 'the' → logprob: -2.6499767303466797
    5. 'alt' → logprob: -3.1499767303466797
    6. 'd' → logprob: -4.39997673034668
    7. ' both' → logprob: -5.89997673034668
    8. 'a' → logprob: -6.27497673034668
    9. 'meet' → logprob: -7.02497673034668
    10. ' they' → logprob: -7.27497673034668

Token 1004: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010676257312297821
    2. 'points' → logprob: -6.010676383972168
    3. ',' → logprob: -6.135676383972168
    4. ' at' → logprob: -6.760676383972168
    5. ':' → logprob: -7.385676383972168
    6. 'positions' → logprob: -7.510676383972168
    7. '#' → logprob: -7.635676383972168
    8. '.' → logprob: -7.635676383972168
    9. 'possible' → logprob: -7.635676383972168
    10. '   ' → logprob: -8.510676383972168

Token 1005: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.37928134202957153
    2. 'some' → logprob: -2.1292812824249268
    3. 'same' → logprob: -2.2542812824249268
    4. 'a' → logprob: -2.8792812824249268
    5. ' the' → logprob: -4.129281520843506
    6. 'alt' → logprob: -5.379281520843506
    7. 'equal' → logprob: -5.754281520843506
    8. ' same' → logprob: -5.879281520843506
    9. ' some' → logprob: -6.254281520843506
    10. 'distance' → logprob: -6.504281520843506

Token 1006: ' point' (ID: 2438)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.673940122127533
    2. 'alt' → logprob: -1.4239401817321777
    3. 'point' → logprob: -2.0489401817321777
    4. 'position' → logprob: -3.4239401817321777
    5. ' point' → logprob: -3.5489401817321777
    6. ' altitude' → logprob: -4.048940181732178
    7. ' distance' → logprob: -4.673940181732178
    8. 'd' → logprob: -4.923940181732178
    9. ' position' → logprob: -5.298940181732178
    10. 'e' → logprob: -5.423940181732178

Token 1007: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01823551394045353
    2. ',' → logprob: -4.768235683441162
    3. '.' → logprob: -5.268235683441162
    4. '<|end|>' → logprob: -6.643235683441162
    5. ' and' → logprob: -6.768235683441162
    6. ' at' → logprob: -7.143235683441162
    7. '<|end|>' → logprob: -8.893235206604004
    8. '#' → logprob: -9.018235206604004
    9. ' (' → logprob: -9.143235206604004
    10. 'import' → logprob: -9.268235206604004

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006934931734576821
    2. 'steps' → logprob: -8.875693321228027
    3. 'moves' → logprob: -8.875693321228027
    4. 'd' → logprob: -9.125693321228027
    5. 'next' → logprob: -9.375693321228027
    6. 'positions' → logprob: -10.000693321228027
    7. 'def' → logprob: -10.125693321228027
    8. 'step' → logprob: -10.500693321228027
    9. '   ' → logprob: -10.625693321228027
    10. 'points' → logprob: -11.375693321228027

Token 1009: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0323602631688118
    2. 'steps' → logprob: -4.657360076904297
    3. 'step' → logprob: -4.907360076904297
    4. 'moves' → logprob: -4.907360076904297
    5. 'positions' → logprob: -6.282360076904297
    6. 'next' → logprob: -6.657360076904297
    7. 'possible' → logprob: -6.907360076904297
    8. ' step' → logprob: -7.282360076904297
    9. 'c' → logprob: -7.657360076904297
    10. 'poss' → logprob: -8.282360076904297

Token 1010: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023532424122095108
    2. 'moves' → logprob: -4.773532390594482
    3. 'step' → logprob: -5.023532390594482
    4. 'steps' → logprob: -5.648532390594482
    5. 'next' → logprob: -6.648532390594482
    6. 'positions' → logprob: -7.148532390594482
    7. 'points' → logprob: -7.648532390594482
    8. 'possible' → logprob: -7.773532390594482
    9. 'n' → logprob: -7.898532390594482
    10. 'd' → logprob: -7.898532390594482

Token 1011: ' two' (ID: 1920)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5382696986198425
    2. 'step' → logprob: -1.6632697582244873
    3. '   ' → logprob: -2.1632697582244873
    4. 'steps' → logprob: -3.9132697582244873
    5. '       ' → logprob: -4.288269519805908
    6. ' steps' → logprob: -4.413269519805908
    7. 'moves' → logprob: -4.538269519805908
    8. 'result' → logprob: -4.538269519805908
    9. ' next' → logprob: -5.038269519805908
    10. ' result' → logprob: -5.038269519805908

Token 1012: ' clim' (ID: 21324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9671545028686523
    2. ' clim' → logprob: -1.7171545028686523
    3. 'cl' → logprob: -2.8421545028686523
    4. ' ' → logprob: -3.2171545028686523
    5. ' can' → logprob: -3.2171545028686523
    6. '.' → logprob: -3.4671545028686523
    7. ' positions' → logprob: -3.7171545028686523
    8. ')' → logprob: -3.8421545028686523
    9. 'positions' → logprob: -3.8421545028686523
    10. '_positions' → logprob: -3.8421545028686523

Token 1013: 'bers' (ID: 7008)
  Prédit: 'bers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bers' → logprob: -0.0007609111489728093
    2. 'b' → logprob: -7.625761032104492
    3. 'ber' → logprob: -8.875761032104492
    4. 'mb' → logprob: -10.500761032104492
    5. '```' → logprob: -11.625761032104492
    6. 'mers' → logprob: -11.750761032104492
    7. '``' → logprob: -12.000761032104492
    8. '#' → logprob: -12.000761032104492
    9. '
' → logprob: -12.000761032104492
    10. 'hers' → logprob: -12.375761032104492

Token 1014: ' start' (ID: 1604)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10388537496328354
    2. 'can' → logprob: -2.4788854122161865
    3. '   ' → logprob: -5.103885173797607
    4. ' may' → logprob: -5.728885173797607
    5. '
' → logprob: -6.728885173797607
    6. ' must' → logprob: -6.853885173797607
    7. '#' → logprob: -6.978885173797607
    8. 'must' → logprob: -7.603885173797607
    9. 'may' → logprob: -7.728885173797607
    10. '       ' → logprob: -8.853885650634766

Token 1015: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.8241416811943054
    2. ' at' → logprob: -0.9491416811943054
    3. 'from' → logprob: -2.07414174079895
    4. '       ' → logprob: -3.69914174079895
    5. '   ' → logprob: -4.824141502380371
    6. ',' → logprob: -4.949141502380371
    7. '=' → logprob: -5.949141502380371
    8. ' from' → logprob: -6.449141502380371
    9. 'and' → logprob: -7.199141502380371
    10. 'with' → logprob: -7.449141502380371

Token 1016: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24337148666381836
    2. '(' → logprob: -1.8683714866638184
    3. 'd' → logprob: -2.9933714866638184
    4. 'dist' → logprob: -5.493371486663818
    5. 'distance' → logprob: -5.743371486663818
    6. ' (' → logprob: -6.368371486663818
    7. 'positions' → logprob: -7.368371486663818
    8. 'self' → logprob: -7.993371486663818
    9. ' distances' → logprob: -7.993371486663818
    10. ' ' → logprob: -8.118371963500977

Token 1017: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015085804276168346
    2. '(' → logprob: -4.390085697174072
    3. 'd' → logprob: -6.140085697174072
    4. 'distance' → logprob: -8.89008617401123
    5. 'self' → logprob: -9.64008617401123
    6. 'dist' → logprob: -10.01508617401123
    7. ' (' → logprob: -10.01508617401123
    8. 'positions' → logprob: -10.14008617401123
    9. '(self' → logprob: -11.01508617401123
    10. ' ' → logprob: -11.01508617401123

Token 1018: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3762511610984802
    2. ' and' → logprob: -1.251251220703125
    3. 'and' → logprob: -4.251251220703125
    4. '.' → logprob: -4.876251220703125
    5. ' ,' → logprob: -5.751251220703125
    6. ')' → logprob: -6.876251220703125
    7. ' or' → logprob: -7.751251220703125
    8. '<|end|>' → logprob: -8.001251220703125
    9. 'A' → logprob: -9.001251220703125
    10. 'd' → logprob: -9.376251220703125

Token 1019: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06558080017566681
    2. ' self' → logprob: -2.8155808448791504
    3. 'L' → logprob: -6.06558084487915
    4. '0' → logprob: -7.31558084487915
    5. ' L' → logprob: -7.81558084487915
    6. '1' → logprob: -9.065580368041992
    7. '(self' → logprob: -11.065580368041992
    8. ' ' → logprob: -11.065580368041992
    9. '   ' → logprob: -11.315580368041992
    10. '```' → logprob: -11.315580368041992

Token 1020: ' respectively' (ID: 24364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8846560120582581
    2. '       ' → logprob: -1.1346559524536133
    3. '
' → logprob: -1.7596559524536133
    4. '   ' → logprob: -3.1346559524536133
    5. ' and' → logprob: -3.6346559524536133
    6. '.' → logprob: -5.259655952453613
    7. '        
' → logprob: -5.759655952453613
    8. ')' → logprob: -5.884655952453613
    9. '<|end|>' → logprob: -6.009655952453613
    10. ' ,' → logprob: -6.384655952453613

Token 1021: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004734376445412636
    2. ',' → logprob: -5.504734516143799
    3. ' and' → logprob: -8.50473403930664
    4. '.' → logprob: -9.00473403930664
    5. '
' → logprob: -9.25473403930664
    6. '#' → logprob: -10.12973403930664
    7. '        
' → logprob: -10.62973403930664
    8. 'import' → logprob: -11.12973403930664
    9. 'return' → logprob: -11.25473403930664
    10. 'and' → logprob: -11.25473403930664

Token 1022: 'in' (ID: 258)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.4789664149284363
    2. 'd' → logprob: -2.353966474533081
    3. 'and' → logprob: -2.603966474533081
    4. ' respectively' → logprob: -2.978966474533081
    5. '       ' → logprob: -3.228966474533081
    6. ')' → logprob: -3.478966474533081
    7. 'self' → logprob: -3.603966474533081
    8. ')
' → logprob: -4.978966236114502
    9. '),' → logprob: -4.978966236114502
    10. ' and' → logprob: -4.978966236114502

Token 1023: ' distance' (ID: 9324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2340646982192993
    2. 'd' → logprob: -1.9840646982192993
    3. '[' → logprob: -2.1090645790100098
    4. 'the' → logprob: -2.3590645790100098
    5. 'distance' → logprob: -2.4840645790100098
    6. 'route' → logprob: -2.7340645790100098
    7. 'dist' → logprob: -2.9840645790100098
    8. 'code' → logprob: -3.6090645790100098
    9. 'terms' → logprob: -4.10906457901001
    10. 'this' → logprob: -4.35906457901001

Token 1024: ' measure' (ID: 9714)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38299691677093506
    2. 'along' → logprob: -2.2579970359802246
    3. ')' → logprob: -2.8829970359802246
    4. '),' → logprob: -3.2579970359802246
    5. 'units' → logprob: -3.2579970359802246
    6. ',' → logprob: -3.6329970359802246
    7. ')
' → logprob: -4.132997035980225
    8. ').' → logprob: -5.007997035980225
    9. ' from' → logprob: -5.257997035980225
    10. ' along' → logprob: -5.257997035980225

Token 1025: '),
' (ID: 2313)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1013773679733276
    2. ' along' → logprob: -1.7263773679733276
    3. ' from' → logprob: -2.101377487182617
    4. ')
' → logprob: -2.601377487182617
    5. '),' → logprob: -2.601377487182617
    6. ')' → logprob: -2.726377487182617
    7. ').' → logprob: -3.101377487182617
    8. 'along' → logprob: -3.476377487182617
    9. 's' → logprob: -3.851377487182617
    10. '),
' → logprob: -4.101377487182617

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07378410547971725
    2. '#' → logprob: -2.698784112930298
    3. 'and' → logprob: -6.198783874511719
    4. ' and' → logprob: -6.823783874511719
    5. '   ' → logprob: -8.573783874511719
    6. '           ' → logprob: -8.948783874511719
    7. ' but' → logprob: -9.198783874511719
    8. 'but' → logprob: -9.323783874511719
    9. ' #' → logprob: -10.448783874511719
    10. 'tokens' → logprob: -10.573783874511719

Token 1027: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10853234678506851
    2. '#' (adapté à ' #') → logprob: -2.358532428741455
    3. '   ' → logprob: -5.358532428741455
    4. ' and' → logprob: -6.858532428741455
    5. 'and' → logprob: -7.108532428741455
    6. '           ' → logprob: -7.358532428741455
    7. '	' → logprob: -7.608532428741455
    8. ')' → logprob: -9.108531951904297
    9. 'but' → logprob: -9.983531951904297
    10. ' but' → logprob: -10.108531951904297

Token 1028: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5314499735832214
    2. '#' → logprob: -0.9064499735832214
    3. 'and' → logprob: -5.906449794769287
    4. '   ' → logprob: -6.156449794769287
    5. 'return' → logprob: -6.406449794769287
    6. ' and' → logprob: -7.781449794769287
    7. '	' → logprob: -8.156450271606445
    8. '           ' → logprob: -8.156450271606445
    9. ' #' → logprob: -8.281450271606445
    10. 'the' → logprob: -9.656450271606445

Token 1029: ' must' (ID: 2804)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7298516035079956
    2. 'moves' → logprob: -1.7298516035079956
    3. '       ' → logprob: -2.229851722717285
    4. 'can' → logprob: -2.729851722717285
    5. 'result' → logprob: -3.854851722717285
    6. ' can' → logprob: -3.854851722717285
    7. 'steps' → logprob: -3.979851722717285
    8. 'the' → logprob: -4.104851722717285
    9. 'return' → logprob: -4.479851722717285
    10. 'possible' → logprob: -4.604851722717285

Token 1030: ' eventually' (ID: 17462)
  Prédit: 'meet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'meet' → logprob: -0.07241813093423843
    2. '       ' → logprob: -3.572418212890625
    3. 'move' → logprob: -4.322418212890625
    4. 'both' → logprob: -5.072418212890625
    5. 'continue' → logprob: -5.197418212890625
    6. 'return' → logprob: -5.322418212890625
    7. ' meet' → logprob: -5.822418212890625
    8. '   ' → logprob: -5.947418212890625
    9. '#' → logprob: -7.072418212890625
    10. 'be' → logprob: -7.197418212890625

Token 1031: ' meet' (ID: 4158)
  Prédit: 'meet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'meet' → logprob: -0.007529490161687136
    2. ' meet' → logprob: -5.132529258728027
    3. 'reach' → logprob: -7.382529258728027
    4. 'move' → logprob: -8.257529258728027
    5. 'be' → logprob: -8.382529258728027
    6. ' be' → logprob: -9.632529258728027
    7. 'end' → logprob: -9.882529258728027
    8. ' ' → logprob: -10.007529258728027
    9. '   ' → logprob: -10.257529258728027
    10. ' reach' → logprob: -10.257529258728027

Token 1032: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3939031958580017
    2. ' at' → logprob: -1.6439032554626465
    3. 'at' → logprob: -2.1439032554626465
    4. ',' → logprob: -5.3939032554626465
    5. ' where' → logprob: -5.8939032554626465
    6. 'where' → logprob: -6.3939032554626465
    7. '.' → logprob: -6.6439032554626465
    8. '   ' → logprob: -6.7689032554626465
    9. 'in' → logprob: -7.1439032554626465
    10. '#' → logprob: -7.5189032554626465

Token 1033: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.34011685848236084
    2. 'a' → logprob: -1.9651168584823608
    3. 'the' → logprob: -1.9651168584823608
    4. ' some' → logprob: -5.84011697769165
    5. 'same' → logprob: -6.09011697769165
    6. 'd' → logprob: -6.71511697769165
    7. ' the' → logprob: -7.46511697769165
    8. 'distance' → logprob: -8.215116500854492
    9. 'any' → logprob: -8.590116500854492
    10. ' a' → logprob: -8.590116500854492

Token 1034: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.43605515360832214
    2. 'd' → logprob: -1.4360551834106445
    3. 'point' → logprob: -2.4360551834106445
    4. ' point' → logprob: -4.6860551834106445
    5. 'position' → logprob: -4.9360551834106445
    6. ' distance' → logprob: -5.0610551834106445
    7. ' d' → logprob: -6.5610551834106445
    8. 'common' → logprob: -6.8110551834106445
    9. '
' → logprob: -6.9360551834106445
    10. ' position' → logprob: -7.5610551834106445

Token 1035: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14656765758991241
    2. ' d' → logprob: -3.2715675830841064
    3. 'from' → logprob: -3.6465675830841064
    4. ' along' → logprob: -3.8965675830841064
    5. '       ' → logprob: -4.3965678215026855
    6. ' from' → logprob: -4.5215678215026855
    7. ',' → logprob: -5.2715678215026855
    8. 'along' → logprob: -5.3965678215026855
    9. '0' → logprob: -5.7715678215026855
    10. ' (' → logprob: -6.3965678215026855

Token 1036: ' where' (ID: 1919)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4340890944004059
    2. ',' → logprob: -1.4340890645980835
    3. ')' → logprob: -4.059089183807373
    4. ',
' → logprob: -4.184089183807373
    5. '       ' → logprob: -4.309089183807373
    6. 'from' → logprob: -4.434089183807373
    7. '   ' → logprob: -4.684089183807373
    8. '.' → logprob: -4.934089183807373
    9. '
' → logprob: -5.184089183807373
    10. ':' → logprob: -5.559089183807373

Token 1037: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05876262113451958
    2. 'abs' → logprob: -3.183762550354004
    3. '0' → logprob: -4.683762550354004
    4. 'self' → logprob: -5.558762550354004
    5. 'math' → logprob: -6.683762550354004
    6. 'alt' → logprob: -7.058762550354004
    7. '(abs' → logprob: -9.183762550354004
    8. '#' → logprob: -9.433762550354004
    9. '(' → logprob: -9.808762550354004
    10. '   ' → logprob: -10.183762550354004

Token 1038: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6855313777923584
    2. 'A' → logprob: -1.0605313777923584
    3. '==' → logprob: -2.6855313777923584
    4. ' <=' → logprob: -3.1855313777923584
    5. ' >=' → logprob: -3.6855313777923584
    6. '>=' → logprob: -4.8105316162109375
    7. '<=' → logprob: -5.6855316162109375
    8. ' is' → logprob: -7.6855316162109375
    9. '=' → logprob: -7.6855316162109375
    10. '+' → logprob: -7.6855316162109375

Token 1039: ' L' (ID: 451)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18198303878307343
    2. 'self' → logprob: -1.8069829940795898
    3. 'L' → logprob: -6.18198299407959
    4. '(self' → logprob: -9.68198299407959
    5. '(' → logprob: -10.30698299407959
    6. ' self' → logprob: -10.80698299407959
    7. ' d' → logprob: -11.68198299407959
    8. 'D' → logprob: -12.43198299407959
    9. 'A' → logprob: -12.49448299407959
    10. '(d' → logprob: -12.55698299407959

Token 1040: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3696253001689911
    2. 'and' → logprob: -1.6196253299713135
    3. ',' → logprob: -2.2446253299713135
    4. '.' → logprob: -5.744625091552734
    5. ')' → logprob: -7.369625091552734
    6. '<|end|>' → logprob: -7.869625091552734
    7. 'A' → logprob: -8.494625091552734
    8. ' ,' → logprob: -9.119625091552734
    9. ' -' → logprob: -9.244625091552734
    10. ' (' → logprob: -9.494625091552734

Token 1041: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.512236498361744e-07
    2. ' d' → logprob: -14.750000953674316
    3. ')d' → logprob: -18.375
    4. '‌' → logprob: -19.375
    5. '_d' → logprob: -19.5
    6. 'д' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '`' → logprob: -19.625
    9. '<|end|>' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 1042: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5080294609069824
    2. '
' → logprob: -2.0080294609069824
    3. ',' → logprob: -2.5080294609069824
    4. '   ' → logprob: -3.0080294609069824
    5. 'A' → logprob: -3.2580294609069824
    6. ' or' → logprob: -3.2580294609069824
    7. ' and' → logprob: -3.6330294609069824
    8. '.' → logprob: -5.258029460906982
    9. ',
' → logprob: -5.383029460906982
    10. ')
' → logprob: -5.508029460906982

Token 1043: '=>' (ID: 4715)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41087034344673157
    2. ').' → logprob: -1.7858703136444092
    3. ' and' → logprob: -2.285870313644409
    4. '),' → logprob: -3.660870313644409
    5. ')
' → logprob: -4.035870552062988
    6. 'd' → logprob: -5.035870552062988
    7. '=' → logprob: -5.160870552062988
    8. ').
' → logprob: -5.285870552062988
    9. 'and' → logprob: -6.660870552062988
    10. 'B' → logprob: -6.785870552062988

Token 1044: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0794108510017395
    2. ' d' → logprob: -2.5794107913970947
    3. '0' → logprob: -8.704410552978516
    4. ')' → logprob: -9.579410552978516
    5. 'abs' → logprob: -9.829410552978516
    6. 'True' → logprob: -9.954410552978516
    7. ' abs' → logprob: -10.454410552978516
    8. '   ' → logprob: -10.704410552978516
    9. ' True' → logprob: -10.829410552978516
    10. '       ' → logprob: -11.079410552978516

Token 1045: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07465049624443054
    2. '==' → logprob: -3.824650526046753
    3. ' ==' → logprob: -4.324650287628174
    4. '),' → logprob: -4.699650287628174
    5. ',' → logprob: -4.949650287628174
    6. '=' → logprob: -5.074650287628174
    7. ' )' → logprob: -5.449650287628174
    8. 'A' → logprob: -5.824650287628174
    9. '       ' → logprob: -6.324650287628174
    10. ')==' → logprob: -6.949650287628174

Token 1046: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00584334647282958
    2. ' self' → logprob: -5.630843162536621
    3. '0' → logprob: -6.130843162536621
    4. 'L' → logprob: -10.505843162536621
    5. '<|end|>' → logprob: -11.630843162536621
    6. '[self' → logprob: -11.880843162536621
    7. '(self' → logprob: -12.005843162536621
    8. '{' → logprob: -12.505843162536621
    9. '   ' → logprob: -12.755843162536621
    10. ' ' → logprob: -12.880843162536621

Token 1047: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02633269503712654
    2. ' /' → logprob: -3.6513326168060303
    3. ')' → logprob: -10.65133285522461
    4. '       ' → logprob: -13.40133285522461
    5. '   ' → logprob: -13.52633285522461
    6. '
' → logprob: -13.52633285522461
    7. '*' → logprob: -14.02633285522461
    8. ')/' → logprob: -14.40133285522461
    9. ' ' → logprob: -14.52633285522461
    10. ' ' → logprob: -14.90133285522461

Token 1048: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016241880075540394
    2. ' ' → logprob: -8.750162124633789
    3. ')' → logprob: -13.000162124633789
    4. '/' → logprob: -14.125162124633789
    5. '   ' → logprob: -15.250162124633789
    6. '```' → logprob: -15.500162124633789
    7. '=' → logprob: -16.50016212463379
    8. '۲' → logprob: -16.81266212463379
    9. ' /' → logprob: -17.06266212463379
    10. '  ' → logprob: -17.56266212463379

Token 1049: '),
' (ID: 2313)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6495693922042847
    2. ')' → logprob: -0.8995693922042847
    3. '       ' → logprob: -2.774569511413574
    4. '   ' → logprob: -5.274569511413574
    5. ' )
' → logprob: -6.524569511413574
    6. ')

' → logprob: -7.649569511413574
    7. ',' → logprob: -7.899569511413574
    8. ')
' → logprob: -8.024569511413574
    9. ' )' → logprob: -8.524569511413574
    10. '):
' → logprob: -8.649569511413574

Token 1050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002705250633880496
    2. '   ' → logprob: -6.627705097198486
    3. ')' → logprob: -8.127705574035645
    4. '	' → logprob: -8.252705574035645
    5. '#' → logprob: -8.377705574035645
    6. '           ' → logprob: -8.752705574035645
    7. ' and' → logprob: -9.127705574035645
    8. ' but' → logprob: -10.002705574035645
    9. ',' → logprob: -10.502705574035645
    10. '	   ' → logprob: -10.627705574035645

Token 1051: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051802704110741615
    2. '#' (adapté à ' #') → logprob: -5.505180358886719
    3. '	' → logprob: -8.505180358886719
    4. '   ' → logprob: -8.505180358886719
    5. ' but' → logprob: -8.755180358886719
    6. ' and' → logprob: -9.130180358886719
    7. '           ' → logprob: -9.255180358886719
    8. 'and' → logprob: -10.005180358886719
    9. '        
' → logprob: -10.130180358886719
    10. 'but' → logprob: -10.255180358886719

Token 1052: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057638052850961685
    2. '#' → logprob: -2.932638168334961
    3. '   ' → logprob: -6.682638168334961
    4. 'return' → logprob: -7.932638168334961
    5. 'and' → logprob: -8.432638168334961
    6. '	' → logprob: -8.432638168334961
    7. ' and' → logprob: -8.682638168334961
    8. '           ' → logprob: -8.807638168334961
    9. ' #' → logprob: -9.432638168334961
    10. ' but' → logprob: -9.932638168334961

Token 1053: ' more' (ID: 945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23615539073944092
    2. '       ' → logprob: -2.6111555099487305
    3. ' at' → logprob: -2.9861555099487305
    4. 'at' → logprob: -3.7361555099487305
    5. 'd' → logprob: -4.3611555099487305
    6. ' possibly' → logprob: -4.6111555099487305
    7. 'possibly' → logprob: -4.9861555099487305
    8. ' #' → logprob: -5.4861555099487305
    9. 'any' → logprob: -5.4861555099487305
    10. ' d' → logprob: -5.7361555099487305

Token 1054: ' generally' (ID: 12190)
  Prédit: 'prec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prec' → logprob: -0.08611392974853516
    2. ' precisely' → logprob: -3.336113929748535
    3. 'gener' → logprob: -3.711113929748535
    4. 'exact' → logprob: -4.211113929748535
    5. 'spec' → logprob: -6.211113929748535
    6. 'accur' → logprob: -6.836113929748535
    7. ' generally' → logprob: -7.211113929748535
    8. '#' → logprob: -7.586113929748535
    9. 'strict' → logprob: -7.711113929748535
    10. '...' → logprob: -7.836113929748535

Token 1055: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.687302589416504
    2. '#' → logprob: -1.937302589416504
    3. ' d' → logprob: -1.937302589416504
    4. ' where' → logprob: -1.937302589416504
    5. '       ' → logprob: -2.437302589416504
    6. ' the' → logprob: -2.687302589416504
    7. 'd' → logprob: -3.187302589416504
    8. ' they' → logprob: -3.437302589416504
    9. ' distances' → logprob: -3.812302589416504
    10. ' that' → logprob: -3.937302589416504

Token 1056: ' same' (ID: 2684)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9274331331253052
    2. 'd' → logprob: -1.5524331331253052
    3. 'positions' → logprob: -2.0524330139160156
    4. 'points' → logprob: -2.5524330139160156
    5. 'a' → logprob: -2.9274330139160156
    6. 'some' → logprob: -3.1774330139160156
    7. 'the' → logprob: -3.8024330139160156
    8. 'dist' → logprob: -4.427433013916016
    9. ' any' → logprob: -4.427433013916016
    10. ' points' → logprob: -4.927433013916016

Token 1057: ' physical' (ID: 9811)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5326554775238037
    2. 'd' → logprob: -1.5326554775238037
    3. ' distance' → logprob: -2.1576554775238037
    4. ' d' → logprob: -3.2826554775238037
    5. ' point' → logprob: -3.5326554775238037
    6. 'point' → logprob: -5.282655715942383
    7. ' position' → logprob: -6.157655715942383
    8. ' float' → logprob: -6.907655715942383
    9. 'position' → logprob: -6.907655715942383
    10. '```' → logprob: -7.032655715942383

Token 1058: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.2669018507003784
    2. 'distance' → logprob: -1.3919018507003784
    3. 'position' → logprob: -1.7669018507003784
    4. ' point' → logprob: -2.141901969909668
    5. 'location' → logprob: -2.516901969909668
    6. ' location' → logprob: -3.016901969909668
    7. ' position' → logprob: -3.266901969909668
    8. ' distance' → logprob: -4.641901969909668
    9. 'd' → logprob: -6.641901969909668
    10. 'positions' → logprob: -7.766901969909668

Token 1059: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16752059757709503
    2. '.' → logprob: -2.917520523071289
    3. ',' → logprob: -3.542520523071289
    4. ')' → logprob: -3.792520523071289
    5. ':' → logprob: -4.417520523071289
    6. ' (' → logprob: -5.042520523071289
    7. '   ' → logprob: -5.292520523071289
    8. '
' → logprob: -5.292520523071289
    9. '):' → logprob: -5.667520523071289
    10. '):
' → logprob: -6.042520523071289

Token 1060: ' route' (ID: 9656)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.11733527481555939
    2. ' the' → logprob: -2.617335319519043
    3. 'route' → logprob: -3.367335319519043
    4. ' route' → logprob: -5.867335319519043
    5. 'both' → logprob: -8.117335319519043
    6. ' both' → logprob: -9.742335319519043
    7. '_route' → logprob: -11.742335319519043
    8. 'their' → logprob: -11.992335319519043
    9. '	the' → logprob: -12.367335319519043
    10. 'Route' → logprob: -12.617335319519043

Token 1061: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02927190437912941
    2. ',' → logprob: -4.779272079467773
    3. '.' → logprob: -5.404272079467773
    4. ':' → logprob: -5.404272079467773
    5. '
' → logprob: -5.404272079467773
    6. ':
' → logprob: -6.529272079467773
    7. '   ' → logprob: -6.654272079467773
    8. '        
' → logprob: -6.654272079467773
    9. '.
' → logprob: -7.154272079467773
    10. ' (' → logprob: -8.279272079467773

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0110715227201581
    2. '#' → logprob: -4.636071681976318
    3. '   ' → logprob: -7.761071681976318
    4. '	' → logprob: -8.01107120513916
    5. '           ' → logprob: -8.63607120513916
    6. ' but' → logprob: -9.26107120513916
    7. '	   ' → logprob: -10.01107120513916
    8. 'but' → logprob: -10.38607120513916
    9. '        
' → logprob: -10.76107120513916
    10. ' and' → logprob: -11.01107120513916

Token 1063: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008802352473139763
    2. '#' (adapté à ' #') → logprob: -5.25880241394043
    3. '   ' → logprob: -6.13380241394043
    4. ' but' → logprob: -8.13380241394043
    5. ' which' → logprob: -8.50880241394043
    6. '           ' → logprob: -8.63380241394043
    7. ' and' → logprob: -9.00880241394043
    8. ' so' → logprob: -9.00880241394043
    9. 'which' → logprob: -9.25880241394043
    10. '        
' → logprob: -9.75880241394043

Token 1064: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1867559552192688
    2. '#' → logprob: -1.811755895614624
    3. '   ' → logprob: -5.186756134033203
    4. 'return' → logprob: -8.061756134033203
    5. 'and' → logprob: -8.186756134033203
    6. '	' → logprob: -8.186756134033203
    7. ' #' → logprob: -9.436756134033203
    8. 'but' → logprob: -9.436756134033203
    9. '           ' → logprob: -9.561756134033203
    10. 'which' → logprob: -9.686756134033203

Token 1065: ' means' (ID: 4748)
  Prédit: ' means'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.9022998213768005
    2. 'means' → logprob: -1.1522998809814453
    3. ' can' → logprob: -2.4022998809814453
    4. 'can' → logprob: -2.9022998809814453
    5. ' is' → logprob: -2.9022998809814453
    6. ' may' → logprob: -4.027299880981445
    7. 'may' → logprob: -4.277299880981445
    8. '#' → logprob: -4.652299880981445
    9. 'is' → logprob: -4.777299880981445
    10. 'must' → logprob: -5.277299880981445

Token 1066: ' their' (ID: 1043)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08979281038045883
    2. ' d' → logprob: -2.9647927284240723
    3. 'abs' → logprob: -4.464792728424072
    4. ' abs' → logprob: -5.214792728424072
    5. 'they' → logprob: -5.589792728424072
    6. ' they' → logprob: -6.089792728424072
    7. ' the' → logprob: -6.464792728424072
    8. 'the' → logprob: -6.464792728424072
    9. 'that' → logprob: -6.464792728424072
    10. ' (' → logprob: -6.839792728424072

Token 1067: ' positions' (ID: 15897)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6853644847869873
    2. 'dist' → logprob: -0.9353644847869873
    3. 'positions' → logprob: -3.8103644847869873
    4. 'next' → logprob: -3.9353644847869873
    5. ' distances' → logprob: -4.060364723205566
    6. 'distance' → logprob: -4.310364723205566
    7. ' next' → logprob: -4.685364723205566
    8. ' d' → logprob: -4.685364723205566
    9. ' positions' → logprob: -5.310364723205566
    10. 'current' → logprob: -6.060364723205566

Token 1068: ' must' (ID: 2804)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.1648880243301392
    2. ' are' → logprob: -1.5398880243301392
    3. 'must' → logprob: -1.6648880243301392
    4. ' must' → logprob: -2.7898879051208496
    5. '       ' → logprob: -3.1648879051208496
    6. 'd' → logprob: -3.4148879051208496
    7. 's' → logprob: -3.6648879051208496
    8. '   ' → logprob: -3.7898879051208496
    9. ' (' → logprob: -4.03988790512085
    10. 'should' → logprob: -4.41488790512085

Token 1069: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.004576325416565
    2. 'be' → logprob: -1.129576325416565
    3. ' satisfy' → logprob: -2.1295762062072754
    4. 'have' → logprob: -2.3795762062072754
    5. ' be' → logprob: -3.1295762062072754
    6. 'match' → logprob: -3.5045762062072754
    7. ' have' → logprob: -4.754576206207275
    8. ' match' → logprob: -5.504576206207275
    9. ' correspond' → logprob: -5.879576206207275
    10. 'cor' → logprob: -6.379576206207275

Token 1070: ' after' (ID: 1934)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3133546710014343
    2. ' to' → logprob: -1.313354730606079
    3. '<|end|>' → logprob: -11.0633544921875
    4. '       ' → logprob: -11.3133544921875
    5. '_to' → logprob: -11.5633544921875
    6. ',' → logprob: -11.5633544921875
    7. '   ' → logprob: -11.8133544921875
    8. ')' → logprob: -12.3133544921875
    9. 'exact' → logprob: -12.3133544921875
    10. ' exactly' → logprob: -12.5633544921875

Token 1071: ' reverse' (ID: 18199)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -2.142428159713745
    2. 'matching' → logprob: -2.142428159713745
    3. 'account' → logprob: -2.267428159713745
    4. 'mapping' → logprob: -2.392428159713745
    5. 'adjust' → logprob: -2.767428159713745
    6. 'consider' → logprob: -2.892428159713745
    7. 'alignment' → logprob: -3.017428159713745
    8. 'both' → logprob: -3.142428159713745
    9. ' accounting' → logprob: -3.267428159713745
    10. '#' → logprob: -3.267428159713745

Token 1072: ' path' (ID: 3104)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.7451485395431519
    2. ' traversal' → logprob: -1.4951485395431519
    3. 'distance' → logprob: -2.7451486587524414
    4. 'direction' → logprob: -2.9951486587524414
    5. '_' → logprob: -3.1201486587524414
    6. 'd' → logprob: -3.3701486587524414
    7. 'engineering' → logprob: -3.4951486587524414
    8. 'of' → logprob: -4.745148658752441
    9. 'com' → logprob: -5.120148658752441
    10. 'tr' → logprob: -5.120148658752441

Token 1073: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5747332572937012
    2. '   ' → logprob: -1.6997332572937012
    3. '       ' → logprob: -1.9497332572937012
    4. '.' → logprob: -2.574733257293701
    5. ',' → logprob: -2.949733257293701
    6. ' along' → logprob: -3.199733257293701
    7. ' traversal' → logprob: -3.324733257293701
    8. '.
' → logprob: -3.449733257293701
    9. 'along' → logprob: -4.199733257293701
    10. 'steps' → logprob: -4.449733257293701

Token 1074: ' clim' (ID: 21324)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.6027791500091553
    2. 'd' → logprob: -1.6027791500091553
    3. 'the' → logprob: -2.2277791500091553
    4. 'B' → logprob: -2.8527791500091553
    5. 'cl' → logprob: -3.6027791500091553
    6. 'each' → logprob: -3.9777791500091553
    7. 'one' → logprob: -4.352779388427734
    8. 'distance' → logprob: -5.852779388427734
    9. 'matching' → logprob: -5.852779388427734
    10. 'first' → logprob: -6.102779388427734

Token 1075: 'ber' (ID: 718)
  Prédit: 'bers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bers' → logprob: -0.15296520292758942
    2. 'b' → logprob: -2.6529653072357178
    3. 'ber' → logprob: -2.7779653072357178
    4. 'bs' → logprob: -5.152965068817139
    5. 'bing' → logprob: -6.402965068817139
    6. 'ib' → logprob: -8.652965545654297
    7. 'her' → logprob: -8.777965545654297
    8. 'ers' → logprob: -8.777965545654297
    9. 'im' → logprob: -9.090465545654297
    10. 'er' → logprob: -9.152965545654297

Token 1076: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4150071144104004
    2. 'A' → logprob: -1.1650071144104004
    3. ')' → logprob: -4.1650071144104
    4. 's' → logprob: -4.7900071144104
    5. ',' → logprob: -6.4150071144104
    6. ' B' → logprob: -7.9150071144104
    7. '   ' → logprob: -7.9150071144104
    8. '       ' → logprob: -8.290006637573242
    9. ' A' → logprob: -8.665006637573242
    10. '.' → logprob: -9.040006637573242

Token 1077: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013981321826577187
    2. '
' → logprob: -4.638981342315674
    3. '.' → logprob: -7.138981342315674
    4. '   ' → logprob: -7.138981342315674
    5. '        
' → logprob: -7.763981342315674
    6. ',' → logprob: -8.013980865478516
    7. '.
' → logprob: -8.013980865478516
    8. ':
' → logprob: -8.513980865478516
    9. ':' → logprob: -8.638980865478516
    10. ' and' → logprob: -8.763980865478516

Token 1078: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036424766294658184
    2. '   ' → logprob: -5.878642559051514
    3. '
' → logprob: -8.378642082214355
    4. '        
' → logprob: -8.503642082214355
    5. 'def' → logprob: -9.128642082214355
    6. '    
' → logprob: -9.628642082214355
    7. '<|end|>' → logprob: -9.878642082214355
    8. ',' → logprob: -10.628642082214355
    9. '           ' → logprob: -10.878642082214355
    10. ')' → logprob: -10.878642082214355

Token 1079: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002154187997803092
    2. '   ' → logprob: -7.002154350280762
    3. '
' → logprob: -7.252154350280762
    4. '        
' → logprob: -8.377154350280762
    5. 'tokens' → logprob: -9.752154350280762
    6. ',' → logprob: -10.252154350280762
    7. '    
' → logprob: -10.877154350280762
    8. ')' → logprob: -11.002154350280762
    9. 'ind' → logprob: -11.377154350280762
    10. 'def' → logprob: -11.377154350280762

Token 1080: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.984787902794778e-05
    2. '
' → logprob: -10.000100135803223
    3. '        
' → logprob: -11.000100135803223
    4. '   ' → logprob: -11.250100135803223
    5. 'import' → logprob: -12.000100135803223
    6. 'def' → logprob: -12.625100135803223
    7. '<|end|>' → logprob: -12.750100135803223
    8. '#' → logprob: -13.125100135803223
    9. 'from' → logprob: -13.375100135803223
    10. '```' → logprob: -13.750100135803223

Token 1081: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001029831008054316
    2. 'positions' → logprob: -8.001029968261719
    3. 'moves' → logprob: -8.626029968261719
    4. 'points' → logprob: -9.126029968261719
    5. '   ' → logprob: -9.376029968261719
    6. 'possible' → logprob: -9.501029968261719
    7. 'c' → logprob: -9.501029968261719
    8. 'd' → logprob: -10.251029968261719
    9. '#' (adapté à ' #') → logprob: -10.251029968261719
    10. 'next' → logprob: -11.126029968261719

Token 1082: ' We' (ID: 1416)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9629774689674377
    2. 'positions' → logprob: -0.9629774689674377
    3. '       ' → logprob: -3.087977409362793
    4. 'possible' → logprob: -3.462977409362793
    5. 'result' → logprob: -3.587977409362793
    6. 'poss' → logprob: -3.587977409362793
    7. 'points' → logprob: -3.712977409362793
    8. 'res' → logprob: -3.962977409362793
    9. '#' → logprob: -4.462977409362793
    10. '   ' → logprob: -4.712977409362793

Token 1083: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4749264121055603
    2. '       ' → logprob: -2.349926471710205
    3. 'return' → logprob: -2.349926471710205
    4. 'def' → logprob: -2.599926471710205
    5. 'consider' → logprob: -3.474926471710205
    6. 'generate' → logprob: -3.849926471710205
    7. ' return' → logprob: -3.974926471710205
    8. ' consider' → logprob: -4.224926471710205
    9. '
' → logprob: -5.599926471710205
    10. '#' → logprob: -5.599926471710205

Token 1084: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6632702946662903
    2. 'possible' → logprob: -1.9132702350616455
    3. 'to' → logprob: -2.0382702350616455
    4. 'all' → logprob: -2.1632702350616455
    5. 'points' → logprob: -3.4132702350616455
    6. 'positions' → logprob: -3.9132702350616455
    7. ' to' → logprob: -4.288270473480225
    8. '   ' → logprob: -5.038270473480225
    9. 'def' → logprob: -5.163270473480225
    10. 'moves' → logprob: -5.413270473480225

Token 1085: ' road' (ID: 8733)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8823941946029663
    2. 'possible' → logprob: -1.7573941946029663
    3. 'positions' → logprob: -2.382394313812256
    4. 'candidate' → logprob: -2.757394313812256
    5. 'c' → logprob: -3.132394313812256
    6. 'dist' → logprob: -3.382394313812256
    7. '   ' → logprob: -3.382394313812256
    8. 'poss' → logprob: -3.507394313812256
    9. '       ' → logprob: -4.007394313812256
    10. 'route' → logprob: -4.257394313812256

Token 1086: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.29572492837905884
    2. 'segments' → logprob: -2.170724868774414
    3. '_points' → logprob: -2.670724868774414
    4. '       ' → logprob: -3.420724868774414
    5. '_segments' → logprob: -4.920724868774414
    6. 'm' → logprob: -5.295724868774414
    7. 's' → logprob: -5.670724868774414
    8. ' segments' → logprob: -5.670724868774414
    9. 'map' → logprob: -5.795724868774414
    10. '_segment' → logprob: -5.920724868774414

Token 1087: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0558965727686882
    2. ' and' → logprob: -4.305896759033203
    3. ',' → logprob: -4.680896759033203
    4. ':' → logprob: -4.930896759033203
    5. ' with' → logprob: -5.680896759033203
    6. ' at' → logprob: -5.805896759033203
    7. ' for' → logprob: -5.805896759033203
    8. ' =' → logprob: -6.305896759033203
    9. ':
' → logprob: -6.555896759033203
    10. ' that' → logprob: -6.555896759033203

Token 1088: ' their' (ID: 1043)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4651699662208557
    2. '       ' → logprob: -1.965169906616211
    3. 'res' → logprob: -2.840169906616211
    4. ' result' → logprob: -3.090169906616211
    5. 'possible' → logprob: -3.215169906616211
    6. 'c' → logprob: -4.215169906616211
    7. 'results' → logprob: -4.215169906616211
    8. 'positions' → logprob: -4.215169906616211
    9. 'moves' → logprob: -4.340169906616211
    10. 'valid' → logprob: -4.340169906616211

Token 1089: ' reverse' (ID: 18199)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.2441224306821823
    2. 'dist' → logprob: -2.7441225051879883
    3. 'positions' → logprob: -3.2441225051879883
    4. 'possible' → logprob: -3.4941225051879883
    5. 'x' → logprob: -4.494122505187988
    6. ' alt' → logprob: -4.619122505187988
    7. 'candidate' → logprob: -4.744122505187988
    8. 'coordinates' → logprob: -4.744122505187988
    9. 'cor' → logprob: -4.994122505187988
    10. '```' → logprob: -5.619122505187988

Token 1090: ' corresponding' (ID: 21824)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0298762321472168
    2. 'positions' → logprob: -1.4048762321472168
    3. 'indices' → logprob: -3.029876232147217
    4. 'points' → logprob: -3.029876232147217
    5. ' distances' → logprob: -3.154876232147217
    6. ' positions' → logprob: -3.404876232147217
    7. 'dire' → logprob: -3.529876232147217
    8. ' directions' → logprob: -3.904876232147217
    9. 'distance' → logprob: -4.029876232147217
    10. 'mapping' → logprob: -4.029876232147217

Token 1091: ' points' (ID: 5571)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.054589033126831
    2. 'positions' → logprob: -1.304589033126831
    3. ' positions' → logprob: -2.179589033126831
    4. ' distances' → logprob: -2.554589033126831
    5. 'd' → logprob: -2.929589033126831
    6. 'points' → logprob: -3.054589033126831
    7. 'distance' → logprob: -3.929589033126831
    8. ' points' → logprob: -4.05458927154541
    9. ' alt' → logprob: -4.92958927154541
    10. 'alt' → logprob: -5.30458927154541

Token 1092: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005009598098695278
    2. ',' → logprob: -6.255009651184082
    3. ':' → logprob: -7.380009651184082
    4. ' to' → logprob: -7.755009651184082
    5. ' for' → logprob: -8.005009651184082
    6. '.' → logprob: -8.130009651184082
    7. 'from' → logprob: -8.380009651184082
    8. ':
' → logprob: -9.005009651184082
    9. ' with' → logprob: -9.130009651184082
    10. ' and' → logprob: -9.130009651184082

Token 1093: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021254632622003555
    2. '	' → logprob: -4.521254539489746
    3. '	       ' → logprob: -6.521254539489746
    4. '	   ' → logprob: -6.771254539489746
    5. '#' → logprob: -6.896254539489746
    6. ' and' → logprob: -7.146254539489746
    7. 'return' → logprob: -7.396254539489746
    8. '		' → logprob: -7.646254539489746
    9. '   ' → logprob: -7.896254539489746
    10. '.' → logprob: -7.896254539489746

Token 1094: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030070269480347633
    2. '#' (adapté à ' #') → logprob: -4.2800703048706055
    3. ' and' → logprob: -5.4050703048706055
    4. 'and' → logprob: -5.6550703048706055
    5. '   ' → logprob: -6.1550703048706055
    6. 'return' → logprob: -6.5300703048706055
    7. '	' → logprob: -7.0300703048706055
    8. '           ' → logprob: -7.2800703048706055
    9. 'but' → logprob: -8.030070304870605
    10. 'which' → logprob: -8.155070304870605

Token 1095: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1128719300031662
    2. '#' → logprob: -2.8628718852996826
    3. 'return' → logprob: -3.1128718852996826
    4. 'and' → logprob: -6.737872123718262
    5. '   ' → logprob: -7.112872123718262
    6. ' return' → logprob: -7.237872123718262
    7. ' and' → logprob: -7.487872123718262
    8. ' #' → logprob: -8.112872123718262
    9. '           ' → logprob: -8.237872123718262
    10. 'def' → logprob: -8.862872123718262

Token 1096: ' moves' (ID: 19523)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5576159954071045
    2. '       ' → logprob: -2.4326159954071045
    3. 'res' → logprob: -2.5576159954071045
    4. 'c' → logprob: -2.5576159954071045
    5. 'possible' → logprob: -2.6826159954071045
    6. 'valid' → logprob: -3.1826159954071045
    7. 'moves' → logprob: -3.8076159954071045
    8. 'positions' → logprob: -3.9326159954071045
    9. ' result' → logprob: -4.807616233825684
    10. 'results' → logprob: -4.932616233825684

Token 1097: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.814680278301239
    2. '=' → logprob: -1.0646803379058838
    3. '       ' → logprob: -1.8146803379058838
    4. '   ' → logprob: -3.939680337905884
    5. '=[]' → logprob: -4.814680099487305
    6. ':' → logprob: -5.314680099487305
    7. 'for' → logprob: -5.814680099487305
    8. '.append' → logprob: -6.189680099487305
    9. '=[]
' → logprob: -6.189680099487305
    10. ' are' → logprob: -6.314680099487305

Token 1098: ' between' (ID: 2870)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13353665173053741
    2. '[(' → logprob: -3.1335365772247314
    3. '[]
' → logprob: -3.6335365772247314
    4. '[
' → logprob: -4.3835368156433105
    5. 'possible' → logprob: -5.0085368156433105
    6. 'result' → logprob: -5.1335368156433105
    7. '[' → logprob: -5.2585368156433105
    8. 'positions' → logprob: -5.5085368156433105
    9. 'res' → logprob: -5.6335368156433105
    10. 'filtered' → logprob: -5.8835368156433105

Token 1099: ' discrete' (ID: 76501)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7552342414855957
    2. '[(' → logprob: -1.7552342414855957
    3. 'points' → logprob: -2.2552342414855957
    4. 'self' → logprob: -2.6302342414855957
    5. '[i' → logprob: -3.1302342414855957
    6. 'positions' → logprob: -3.7552342414855957
    7. '[' → logprob: -3.8802342414855957
    8. '(
' → logprob: -4.005234241485596
    9. 'd' → logprob: -4.380234241485596
    10. '(i' → logprob: -4.880234241485596

Token 1100: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.26796531677246094
    2. 'points' → logprob: -2.642965316772461
    3. ' distances' → logprob: -3.017965316772461
    4. ' positions' → logprob: -3.142965316772461
    5. 'positions' → logprob: -3.642965316772461
    6. '_points' → logprob: -4.392965316772461
    7. ' route' → logprob: -5.142965316772461
    8. ' steps' → logprob: -5.392965316772461
    9. ' segments' → logprob: -5.767965316772461
    10. ' stops' → logprob: -5.767965316772461

Token 1101: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13644477725028992
    2. ':' → logprob: -2.6364448070526123
    3. '.' → logprob: -3.6364448070526123
    4. ',' → logprob: -4.261444568634033
    5. '<|end|>' → logprob: -5.511444568634033
    6. '        
' → logprob: -6.011444568634033
    7. '   ' → logprob: -6.261444568634033
    8. '):' → logprob: -7.261444568634033
    9. ')' → logprob: -7.261444568634033
    10. ' =' → logprob: -7.636444568634033

Token 1102: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4483901858329773
    2. ' the' → logprob: -1.198390245437622
    3. 'self' → logprob: -3.198390245437622
    4. 'route' → logprob: -4.948390007019043
    5. ' route' → logprob: -5.198390007019043
    6. ' self' → logprob: -5.823390007019043
    7. '   ' → logprob: -6.073390007019043
    8. 'both' → logprob: -8.323390007019043
    9. ' both' → logprob: -8.573390007019043
    10. 'each' → logprob: -9.198390007019043

Token 1103: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.18087361752986908
    2. ' route' → logprob: -1.8058736324310303
    3. 'self' → logprob: -7.805873394012451
    4. '_route' → logprob: -8.80587387084961
    5. '
' → logprob: -9.05587387084961
    6. 'Route' → logprob: -9.43087387084961
    7. '.route' → logprob: -9.43087387084961
    8. '   ' → logprob: -9.68087387084961
    9. 'routes' → logprob: -10.18087387084961
    10. '```' → logprob: -10.55587387084961

Token 1104: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012164060026407242
    2. '.' → logprob: -5.262164115905762
    3. ',' → logprob: -5.762164115905762
    4. '<|end|>' → logprob: -6.387164115905762
    5. ')' → logprob: -8.387164115905762
    6. ':' → logprob: -8.387164115905762
    7. '        
' → logprob: -8.387164115905762
    8. '   ' → logprob: -8.512164115905762
    9. ' and' → logprob: -8.762164115905762
    10. '<|end|>' → logprob: -9.012164115905762

Token 1105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010402000043541193
    2. '
' → logprob: -10.375103950500488
    3. '   ' → logprob: -11.000103950500488
    4. '```' → logprob: -11.125103950500488
    5. 'tokens' → logprob: -11.250103950500488
    6. '        
' → logprob: -12.125103950500488
    7. 'return' → logprob: -12.125103950500488
    8. 'def' → logprob: -12.375103950500488
    9. '           ' → logprob: -13.125103950500488
    10. 'd' → logprob: -13.750103950500488

Token 1106: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006551832426339388
    2. 'points' → logprob: -5.381551742553711
    3. 'positions' → logprob: -7.006551742553711
    4. ' points' → logprob: -7.756551742553711
    5. 'steps' → logprob: -9.631551742553711
    6. ' positions' → logprob: -9.756551742553711
    7. '   ' → logprob: -9.756551742553711
    8. 'moves' → logprob: -10.131551742553711
    9. '```' → logprob: -10.256551742553711
    10. 'tokens' → logprob: -10.256551742553711

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006619225605390966
    2. 'points' → logprob: -8.250661849975586
    3. 'positions' → logprob: -9.125661849975586
    4. 'def' → logprob: -9.875661849975586
    5. 'tokens' → logprob: -10.125661849975586
    6. 'steps' → logprob: -10.375661849975586
    7. '   ' → logprob: -10.500661849975586
    8. 'moves' → logprob: -10.875661849975586
    9. 'next' → logprob: -11.000661849975586
    10. 'possible' → logprob: -11.625661849975586

Token 1108: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021213777363300323
    2. 'positions' → logprob: -5.271214008331299
    3. 'c' → logprob: -5.396214008331299
    4. 'possible' → logprob: -5.521214008331299
    5. 'points' → logprob: -6.271214008331299
    6. 'moves' → logprob: -6.646214008331299
    7. 'poss' → logprob: -6.771214008331299
    8. 'result' → logprob: -7.021214008331299
    9. 'next' → logprob: -7.771214008331299
    10. 'n' → logprob: -8.14621353149414

Token 1109: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.532356321811676
    2. 'c' → logprob: -1.7823562622070312
    3. 'positions' → logprob: -2.2823562622070312
    4. 'poss' → logprob: -3.4073562622070312
    5. 'points' → logprob: -3.6573562622070312
    6. 'moves' → logprob: -3.9073562622070312
    7. 'possible' → logprob: -4.032356262207031
    8. 'result' → logprob: -4.282356262207031
    9. 'res' → logprob: -4.657356262207031
    10. 'next' → logprob: -4.782356262207031

Token 1110: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4117516875267029
    2. 'positions' → logprob: -2.4117517471313477
    3. 'c' → logprob: -2.7867517471313477
    4. 'result' → logprob: -3.0367517471313477
    5. 'moves' → logprob: -3.4117517471313477
    6. 'points' → logprob: -3.6617517471313477
    7. 'possible' → logprob: -3.9117517471313477
    8. 'res' → logprob: -4.411751747131348
    9. 'poss' → logprob: -4.661751747131348
    10. '   ' → logprob: -4.911751747131348

Token 1111: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.1175326406955719
    2. '   ' → logprob: -2.867532730102539
    3. '_moves' → logprob: -3.867532730102539
    4. 'positions' → logprob: -4.492532730102539
    5. '       ' → logprob: -4.992532730102539
    6. '_steps' → logprob: -5.242532730102539
    7. '_points' → logprob: -5.367532730102539
    8. 'moves' → logprob: -5.992532730102539
    9. 'steps' → logprob: -7.242532730102539
    10. '_candidates' → logprob: -8.117532730102539

Token 1112: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2017892748117447
    2. ' =' → logprob: -2.201789379119873
    3. '=' → logprob: -3.201789379119873
    4. ':' → logprob: -3.701789379119873
    5. '   ' → logprob: -5.701789379119873
    6. ' are' → logprob: -6.326789379119873
    7. '=[]' → logprob: -8.201788902282715
    8. '):
' → logprob: -8.326788902282715
    9. 'return' → logprob: -8.326788902282715
    10. '):' → logprob: -9.201788902282715

Token 1113: ' generate' (ID: 10419)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10448730736970901
    2. ':' → logprob: -2.604487419128418
    3. ' are' → logprob: -4.479487419128418
    4. '   ' → logprob: -5.729487419128418
    5. ',' → logprob: -5.979487419128418
    6. '):
' → logprob: -6.479487419128418
    7. ':
' → logprob: -6.854487419128418
    8. ' is' → logprob: -6.979487419128418
    9. '):' → logprob: -6.979487419128418
    10. ' will' → logprob: -7.479487419128418

Token 1114: ' all' (ID: 722)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3117579221725464
    2. 'c' → logprob: -2.436758041381836
    3. 'possible' → logprob: -2.811758041381836
    4. 'moves' → logprob: -3.436758041381836
    5. 'poss' → logprob: -3.561758041381836
    6. '[]' → logprob: -4.436758041381836
    7. 'steps' → logprob: -4.561758041381836
    8. '[(' → logprob: -5.061758041381836
    9. 'result' → logprob: -5.186758041381836
    10. 'neighbors' → logprob: -5.186758041381836

Token 1115: ' pairs' (ID: 24702)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8099439144134521
    2. 'c' → logprob: -1.1849439144134521
    3. 'moves' → logprob: -2.684943914413452
    4. 'possible' → logprob: -2.809943914413452
    5. 'result' → logprob: -3.559943914413452
    6. 'next' → logprob: -3.559943914413452
    7. 'poss' → logprob: -3.684943914413452
    8. '   ' → logprob: -4.809944152832031
    9. 'results' → logprob: -5.184944152832031
    10. '[
' → logprob: -5.434944152832031

Token 1116: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.050342321395874
    2. '[
' → logprob: -1.800342321395874
    3. '[' → logprob: -1.925342321395874
    4. ':' → logprob: -1.925342321395874
    5. '(' → logprob: -2.425342321395874
    6. '(
' → logprob: -3.425342321395874
    7. ' of' → logprob: -3.800342321395874
    8. '   ' → logprob: -4.175342559814453
    9. ' =' → logprob: -5.050342559814453
    10. ':
' → logprob: -5.300342559814453

Token 1117: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19988055527210236
    2. 'nd' → logprob: -2.699880599975586
    3. 'p' → logprob: -3.074880599975586
    4. '(d' → logprob: -4.199880599975586
    5. ')' → logprob: -4.324880599975586
    6. 'next' → logprob: -4.449880599975586
    7. 'new' → logprob: -4.824880599975586
    8. 'dp' → logprob: -5.699880599975586
    9. '(nd' → logprob: -5.949880599975586
    10. 'pd' → logprob: -6.324880599975586

Token 1118: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004464420024305582
    2. ',' → logprob: -5.504464626312256
    3. '       ' → logprob: -9.504464149475098
    4. ')' → logprob: -9.879464149475098
    5. '   ' → logprob: -9.879464149475098
    6. '),' → logprob: -10.004464149475098
    7. '           ' → logprob: -10.504464149475098
    8. ' ,' → logprob: -10.629464149475098
    9. '
' → logprob: -11.254464149475098
    10. ',
' → logprob: -11.379464149475098

Token 1119: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26249533891677856
    2. ' +' → logprob: -2.137495279312134
    3. '+' → logprob: -2.262495279312134
    4. ' ,' → logprob: -6.512495517730713
    5. '-' → logprob: -6.637495517730713
    6. ',
' → logprob: -6.762495517730713
    7. '+,' → logprob: -6.762495517730713
    8. ' -' → logprob: -6.887495517730713
    9. '
' → logprob: -7.387495517730713
    10. '+d' → logprob: -7.762495517730713

Token 1120: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6342540383338928
    2. 'd' → logprob: -0.7592540383338928
    3. '    ' → logprob: -8.009254455566406
    4. '   ' → logprob: -8.384254455566406
    5. '       ' → logprob: -8.384254455566406
    6. ' ' → logprob: -8.509254455566406
    7. '           ' → logprob: -8.884254455566406
    8. '        ' → logprob: -9.509254455566406
    9. '     ' → logprob: -9.509254455566406
    10. '         ' → logprob: -9.884254455566406

Token 1121: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.44706009957008e-05
    2. 'B' → logprob: -9.50008487701416
    3. ',' → logprob: -11.75008487701416
    4. ' A' → logprob: -14.12508487701416
    5. '
' → logprob: -15.37508487701416
    6. ')' → logprob: -15.62508487701416
    7. '_A' → logprob: -15.87508487701416
    8. 'А' → logprob: -15.87508487701416
    9. '	A' → logprob: -16.750083923339844
    10. ',A' → logprob: -16.750083923339844

Token 1122: '')' (ID: 1542)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2633904218673706
    2. '')' → logprob: -1.3883904218673706
    3. ')' → logprob: -1.5133904218673706
    4. ''' → logprob: -2.63839054107666
    5. '       ' → logprob: -3.13839054107666
    6. ',' → logprob: -3.26339054107666
    7. '',' → logprob: -3.63839054107666
    8. ' +' → logprob: -3.88839054107666
    9. ''),' → logprob: -3.88839054107666
    10. '),' → logprob: -5.01339054107666

Token 1123: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07452492415904999
    2. ':' → logprob: -2.9495248794555664
    3. ',' → logprob: -4.324524879455566
    4. '[' → logprob: -5.949524879455566
    5. ':
' → logprob: -7.074524879455566
    6. '
' → logprob: -8.324524879455566
    7. '):' → logprob: -8.324524879455566
    8. '   ' → logprob: -8.449524879455566
    9. ' for' → logprob: -8.574524879455566
    10. '):
' → logprob: -8.699524879455566

Token 1124: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07524208724498749
    2. 'abs' → logprob: -2.700242042541504
    3. 'self' → logprob: -6.825242042541504
    4. '(d' → logprob: -6.950242042541504
    5. '(abs' → logprob: -7.075242042541504
    6. '0' → logprob: -7.700242042541504
    7. '       ' → logprob: -7.950242042541504
    8. '(
' → logprob: -8.075242042541504
    9. '           ' → logprob: -8.325242042541504
    10. 'math' → logprob: -8.575242042541504

Token 1125: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.968312951968983e-06
    2. '+' → logprob: -12.250009536743164
    3. 'B' → logprob: -13.125009536743164
    4. ',' → logprob: -14.000009536743164
    5. '   ' → logprob: -14.750009536743164
    6. ''' → logprob: -15.000009536743164
    7. ' A' → logprob: -15.375009536743164
    8. '```' → logprob: -15.375009536743164
    9. '[' → logprob: -15.625009536743164
    10. ' ' → logprob: -16.250009536743164

Token 1126: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6562735438346863
    2. '+' → logprob: -1.281273603439331
    3. '',' → logprob: -2.531273603439331
    4. ',' → logprob: -2.781273603439331
    5. ' +' → logprob: -3.906273603439331
    6. ')' → logprob: -5.281273365020752
    7. ':' → logprob: -5.531273365020752
    8. '=' → logprob: -5.531273365020752
    9. ''=' → logprob: -5.781273365020752
    10. '   ' → logprob: -5.906273365020752

Token 1127: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6128952503204346
    2. ' in' → logprob: -1.8628952503204346
    3. ' is' → logprob: -1.9878952503204346
    4. ')' → logprob: -3.2378952503204346
    5. ' and' → logprob: -3.3628952503204346
    6. ' ,' → logprob: -3.3628952503204346
    7. '=' → logprob: -3.7378952503204346
    8. ' =' → logprob: -4.7378950119018555
    9. ' ==' → logprob: -4.8628950119018555
    10. 'in' → logprob: -5.4878950119018555

Token 1128: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0034101319033652544
    2. '0' → logprob: -6.503410339355469
    3. 'abs' → logprob: -6.753410339355469
    4. 'self' → logprob: -8.253410339355469
    5. ' d' → logprob: -8.378410339355469
    6. '
' → logprob: -9.378410339355469
    7. '(' → logprob: -9.878410339355469
    8. '   ' → logprob: -10.378410339355469
    9. ' ' → logprob: -10.878410339355469
    10. '#' → logprob: -11.503410339355469

Token 1129: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00033951509976759553
    2. 'A' → logprob: -8.00033950805664
    3. ' B' → logprob: -13.50033950805664
    4. ')' → logprob: -14.62533950805664
    5. '```' → logprob: -15.12533950805664
    6. '<|end|>' → logprob: -15.12533950805664
    7. ',' → logprob: -15.37533950805664
    8. '=' → logprob: -15.50033950805664
    9. '_B' → logprob: -15.75033950805664
    10. '...' → logprob: -16.18783950805664

Token 1130: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6853649020195007
    2. 'A' → logprob: -0.8103649020195007
    3. '   ' → logprob: -4.185364723205566
    4. ' are' → logprob: -4.185364723205566
    5. ')' → logprob: -5.185364723205566
    6. '')' → logprob: -5.560364723205566
    7. '=' → logprob: -5.810364723205566
    8. '+' → logprob: -6.310364723205566
    9. '       ' → logprob: -6.560364723205566
    10. ' =' → logprob: -7.185364723205566

Token 1131: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.09302488714456558
    2. ' in' → logprob: -2.718024969100952
    3. 'are' → logprob: -4.968024730682373
    4. ' lie' → logprob: -5.468024730682373
    5. ' can' → logprob: -5.718024730682373
    6. ' range' → logprob: -6.093024730682373
    7. ')' → logprob: -6.843024730682373
    8. '       ' → logprob: -6.968024730682373
    9. ' vary' → logprob: -7.218024730682373
    10. 'in' → logprob: -7.343024730682373

Token 1132: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.108866572380066
    2. 'self' → logprob: -1.233866572380066
    3. '[' → logprob: -3.1088666915893555
    4. '(' → logprob: -3.2338666915893555
    5. '(
' → logprob: -3.3588666915893555
    6. '(pos' → logprob: -3.7338666915893555
    7. 'possible' → logprob: -3.7338666915893555
    8. '(self' → logprob: -3.8588666915893555
    9. 'dist' → logprob: -3.8588666915893555
    10. 'positions' → logprob: -4.2338666915893555

Token 1133: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.1027923822402954
    2. ' on' → logprob: -1.3527923822402954
    3. '       ' → logprob: -1.3527923822402954
    4. '[' → logprob: -3.227792263031006
    5. ' in' → logprob: -4.227792263031006
    6. ' =' → logprob: -4.602792263031006
    7. '=' → logprob: -4.602792263031006
    8. 'in' → logprob: -4.727792263031006
    9. ' of' → logprob: -4.977792263031006
    10. ':' → logprob: -5.102792263031006

Token 1134: ' route' (ID: 9656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22523066401481628
    2. 'the' → logprob: -1.8502306938171387
    3. ' the' → logprob: -3.6002306938171387
    4. ' self' → logprob: -4.475230693817139
    5. '   ' → logprob: -5.600230693817139
    6. '       ' → logprob: -7.100230693817139
    7. '	self' → logprob: -8.22523021697998
    8. '[self' → logprob: -8.22523021697998
    9. '[' → logprob: -8.47523021697998
    10. 'route' → logprob: -9.10023021697998

Token 1135: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07635432481765747
    2. 'points' → logprob: -2.9513542652130127
    3. 'self' → logprob: -5.201354503631592
    4. '[' → logprob: -5.701354503631592
    5. 'segments' → logprob: -6.201354503631592
    6. ':' → logprob: -6.451354503631592
    7. 'd' → logprob: -6.951354503631592
    8. '[self' → logprob: -6.951354503631592
    9. '   ' → logprob: -7.201354503631592
    10. ',' → logprob: -7.201354503631592

Token 1136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003512526163831353
    2. '	' → logprob: -6.753512382507324
    3. '	   ' → logprob: -7.503512382507324
    4. '   ' → logprob: -7.628512382507324
    5. '#' → logprob: -7.628512382507324
    6. '           ' → logprob: -8.253512382507324
    7. '	       ' → logprob: -8.878512382507324
    8. '		' → logprob: -9.753512382507324
    9. '        ' → logprob: -10.128512382507324
    10. 'indent' → logprob: -10.378512382507324

Token 1137: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016850552055984735
    2. '   ' → logprob: -7.50168514251709
    3. '        
' → logprob: -8.25168514251709
    4. '        ' → logprob: -8.37668514251709
    5. '           ' → logprob: -9.00168514251709
    6. '#' (adapté à ' #') → logprob: -9.12668514251709
    7. '    ' → logprob: -9.75168514251709
    8. '      ' → logprob: -9.87668514251709
    9. 'return' → logprob: -10.25168514251709
    10. '	   ' → logprob: -10.37668514251709

Token 1138: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006623355206102133
    2. 'd' → logprob: -6.506623268127441
    3. '   ' → logprob: -6.631623268127441
    4. ' d' → logprob: -7.506623268127441
    5. '        ' → logprob: -8.131623268127441
    6. '#' → logprob: -8.256623268127441
    7. ')' → logprob: -8.381623268127441
    8. 'points' → logprob: -8.506623268127441
    9. 'return' → logprob: -8.756623268127441
    10. ' return' → logprob: -8.756623268127441

Token 1139: ' altitude' (ID: 66032)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4554695188999176
    2. 'abs' → logprob: -1.3304694890975952
    3. 'alt' → logprob: -2.8304696083068848
    4. '[
' → logprob: -4.080469608306885
    5. 'math' → logprob: -5.205469608306885
    6. 'd' → logprob: -5.330469608306885
    7. 'len' → logprob: -5.580469608306885
    8. '[' → logprob: -5.705469608306885
    9. '   ' → logprob: -5.955469608306885
    10. '[self' → logprob: -7.080469608306885

Token 1140: ' equal' (ID: 12629)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.008696119301021099
    2. 's' → logprob: -5.63369607925415
    3. 'A' → logprob: -6.63369607925415
    4. 'equal' → logprob: -6.75869607925415
    5. ')' → logprob: -7.50869607925415
    6. '==' → logprob: -8.133696556091309
    7. '   ' → logprob: -8.383696556091309
    8. 'd' → logprob: -8.508696556091309
    9. 'e' → logprob: -8.508696556091309
    10. '       ' → logprob: -8.633696556091309

Token 1141: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1641488075256348
    2. '=' → logprob: -1.9141488075256348
    3. ' and' → logprob: -2.2891488075256348
    4. ' at' → logprob: -2.4141488075256348
    5. ',' → logprob: -2.6641488075256348
    6. 's' → logprob: -2.9141488075256348
    7. '(' → logprob: -3.1641488075256348
    8. ' to' → logprob: -3.4141488075256348
    9. '_to' → logprob: -3.7891488075256348
    10. '=True' → logprob: -3.9141488075256348

Token 1142: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11211059242486954
    2. ' and' → logprob: -3.6121106147766113
    3. 'points' → logprob: -4.112110614776611
    4. 'positions' → logprob: -4.487110614776611
    5. ' positions' → logprob: -4.612110614776611
    6. '        ' → logprob: -4.612110614776611
    7. 'd' → logprob: -4.862110614776611
    8. ' points' → logprob: -5.112110614776611
    9. ' candidates' → logprob: -5.612110614776611
    10. ' d' → logprob: -6.612110614776611

Token 1143: ' reachable' (ID: 143580)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05013949051499367
    2. 'd' → logprob: -3.9251394271850586
    3. '0' → logprob: -4.425139427185059
    4. '(' → logprob: -5.050139427185059
    5. '(abs' → logprob: -5.425139427185059
    6. ' abs' → logprob: -6.300139427185059
    7. '(
' → logprob: -7.050139427185059
    8. 'self' → logprob: -7.175139427185059
    9. '   ' → logprob: -7.175139427185059
    10. 'math' → logprob: -7.425139427185059

Token 1144: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.792945384979248
    2. 'from' → logprob: -1.292945384979248
    3. ' from' → logprob: -1.667945384979248
    4. '   ' → logprob: -2.917945384979248
    5. ' by' → logprob: -4.292945384979248
    6. '(' → logprob: -5.042945384979248
    7. ',' → logprob: -6.167945384979248
    8. ' (' → logprob: -7.167945384979248
    9. '           ' → logprob: -7.292945384979248
    10. '(
' → logprob: -7.417945384979248

Token 1145: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11991745978593826
    2. '(d' → logprob: -2.494917392730713
    3. ' (' → logprob: -4.119917392730713
    4. ' d' → logprob: -4.369917392730713
    5. '   ' → logprob: -7.369917392730713
    6. '(' → logprob: -7.744917392730713
    7. '
' → logprob: -8.619917869567871
    8. '       ' → logprob: -9.119917869567871
    9. ' ' → logprob: -10.244917869567871
    10. ')' → logprob: -10.744917869567871

Token 1146: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.2200749754119897e-06
    2. ',' → logprob: -13.375001907348633
    3. ' A' → logprob: -15.250001907348633
    4. ')' → logprob: -16.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '_A' → logprob: -17.500001907348633
    8. 'B' → logprob: -17.875001907348633
    9. ',
' → logprob: -18.000001907348633
    10. '```' → logprob: -19.000001907348633

Token 1147: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016486259177327156
    2. '       ' → logprob: -4.641486167907715
    3. ' and' → logprob: -6.016486167907715
    4. ' or' → logprob: -6.516486167907715
    5. '),' → logprob: -7.516486167907715
    6. ',
' → logprob: -7.766486167907715
    7. '+' → logprob: -7.891486167907715
    8. 'and' → logprob: -7.891486167907715
    9. ')' → logprob: -8.016486167907715
    10. '           ' → logprob: -8.891486167907715

Token 1148: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14284557104110718
    2. ' d' → logprob: -2.017845630645752
    3. '       ' → logprob: -9.392845153808594
    4. '           ' → logprob: -11.017845153808594
    5. ' ' → logprob: -11.392845153808594
    6. '   ' → logprob: -11.517845153808594
    7. '	d' → logprob: -11.892845153808594
    8. '    ' → logprob: -12.142845153808594
    9. ' ' → logprob: -12.142845153808594
    10. '        ' → logprob: -12.517845153808594

Token 1149: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004762499127537012
    2. 'A' → logprob: -5.379762649536133
    3. '+' → logprob: -9.504762649536133
    4. ',' → logprob: -10.879762649536133
    5. ' B' → logprob: -11.629762649536133
    6. '```' → logprob: -12.067262649536133
    7. '
' → logprob: -12.567262649536133
    8. ' +' → logprob: -12.942262649536133
    9. '+B' → logprob: -13.192262649536133
    10. '.' → logprob: -13.192262649536133

Token 1150: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01794131100177765
    2. ':' → logprob: -4.267941474914551
    3. ',' → logprob: -6.392941474914551
    4. '   ' → logprob: -7.517941474914551
    5. ':
' → logprob: -8.14294147491455
    6. '):' → logprob: -8.14294147491455
    7. '):
' → logprob: -8.51794147491455
    8. '.' → logprob: -8.51794147491455
    9. ' by' → logprob: -8.76794147491455
    10. ')' → logprob: -9.51794147491455

Token 1151: ' moving' (ID: 10067)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16015222668647766
    2. 'self' → logprob: -2.9101521968841553
    3. 'math' → logprob: -3.4101521968841553
    4. 'a' → logprob: -3.7851521968841553
    5. 'moving' → logprob: -4.660152435302734
    6. 'any' → logprob: -5.160152435302734
    7. '#' → logprob: -6.035152435302734
    8. ' abs' → logprob: -6.160152435302734
    9. 'distance' → logprob: -6.535152435302734
    10. 'at' → logprob: -6.535152435302734

Token 1152: ' forward' (ID: 6687)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1950463205575943
    2. 'to' → logprob: -2.3200464248657227
    3. ' a' → logprob: -4.195046424865723
    4. ' in' → logprob: -4.445046424865723
    5. '"' → logprob: -4.945046424865723
    6. ' ' → logprob: -5.320046424865723
    7. '0' → logprob: -5.320046424865723
    8. '1' → logprob: -5.320046424865723
    9. ' step' → logprob: -5.320046424865723
    10. ' at' → logprob: -5.320046424865723

Token 1153: '/back' (ID: 128935)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.29258134961128235
    2. 'or' → logprob: -1.41758131980896
    3. ',' → logprob: -5.292581558227539
    4. ')' → logprob: -5.417581558227539
    5. 'and' → logprob: -7.292581558227539
    6. '<|end|>' → logprob: -7.667581558227539
    7. ' and' → logprob: -8.167581558227539
    8. ' ' → logprob: -9.792581558227539
    9. '       ' → logprob: -9.917581558227539
    10. '
' → logprob: -10.417581558227539

Token 1154: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.07661217451095581
    2. '       ' → logprob: -2.8266122341156006
    3. 'wards' → logprob: -4.3266119956970215
    4. '           ' → logprob: -7.9516119956970215
    5. 'w' → logprob: -8.07661247253418
    6. '   ' → logprob: -8.32661247253418
    7. 'word' → logprob: -8.70161247253418
    8. 'and' → logprob: -9.57661247253418
    9. '               ' → logprob: -9.95161247253418
    10. 'WARD' → logprob: -10.32661247253418

Token 1155: ' along' (ID: 4251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06571922451257706
    2. ' with' → logprob: -4.315719127655029
    3. ',' → logprob: -4.565719127655029
    4. '.' → logprob: -4.815719127655029
    5. ' at' → logprob: -4.940719127655029
    6. ' or' → logprob: -5.440719127655029
    7. ' in' → logprob: -6.190719127655029
    8. ' to' → logprob: -6.190719127655029
    9. ' from' → logprob: -6.190719127655029
    10. ':' → logprob: -6.440719127655029

Token 1156: ' route' (ID: 9656)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5653224587440491
    2. ' the' → logprob: -1.4403223991394043
    3. 'self' → logprob: -1.6903223991394043
    4. ' self' → logprob: -4.940322399139404
    5. '       ' → logprob: -6.315322399139404
    6. 'route' → logprob: -7.065322399139404
    7. ' route' → logprob: -8.690322875976562
    8. '   ' → logprob: -9.065322875976562
    9. ')' → logprob: -9.690322875976562
    10. '"' → logprob: -10.190322875976562

Token 1157: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02331116609275341
    2. ':' → logprob: -4.023311138153076
    3. ',' → logprob: -5.898311138153076
    4. '.' → logprob: -6.398311138153076
    5. '   ' → logprob: -8.398311614990234
    6. '):' → logprob: -9.273311614990234
    7. ':
' → logprob: -9.523311614990234
    8. 'import' → logprob: -10.398311614990234
    9. '):
' → logprob: -10.398311614990234
    10. '[' → logprob: -10.773311614990234

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002398938377154991
    2. '   ' → logprob: -9.375240325927734
    3. '
' → logprob: -9.500240325927734
    4. '        
' → logprob: -10.375240325927734
    5. ',' → logprob: -11.375240325927734
    6. '```' → logprob: -12.250240325927734
    7. ':' → logprob: -12.375240325927734
    8. '[' → logprob: -12.625240325927734
    9. ')' → logprob: -12.625240325927734
    10. '	' → logprob: -12.750240325927734

Token 1159: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005837726057507098
    2. '
' → logprob: -8.37558364868164
    3. '```' → logprob: -8.75058364868164
    4. 'tokens' → logprob: -9.87558364868164
    5. ',' → logprob: -10.25058364868164
    6. '        
' → logprob: -11.00058364868164
    7. 'points' → logprob: -11.12558364868164
    8. '   ' → logprob: -11.75058364868164
    9. 'd' → logprob: -12.00058364868164
    10. ':' → logprob: -12.00058364868164

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.5027299822540954e-05
    2. 'tokens' → logprob: -11.250055313110352
    3. '   ' → logprob: -11.500055313110352
    4. 'def' → logprob: -13.000055313110352
    5. '        
' → logprob: -13.125055313110352
    6. 'import' → logprob: -13.125055313110352
    7. ')' → logprob: -13.125055313110352
    8. '#' → logprob: -13.375055313110352
    9. '      ' → logprob: -13.500055313110352
    10. ',' → logprob: -13.500055313110352

Token 1161: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026960210874676704
    2. 'positions' → logprob: -5.151960372924805
    3. 'poss' → logprob: -5.401960372924805
    4. 'possible' → logprob: -5.651960372924805
    5. 'points' → logprob: -5.776960372924805
    6. 'c' → logprob: -5.776960372924805
    7. 'dist' → logprob: -6.526960372924805
    8. 'result' → logprob: -6.526960372924805
    9. 'steps' → logprob: -6.651960372924805
    10. 'next' → logprob: -6.901960372924805

Token 1162: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.134759321808815
    2. 'c' → logprob: -3.2597594261169434
    3. 'points' → logprob: -3.5097594261169434
    4. 'positions' → logprob: -4.009759426116943
    5. 'result' → logprob: -4.509759426116943
    6. 'poss' → logprob: -5.009759426116943
    7. 'possible' → logprob: -5.009759426116943
    8. 'steps' → logprob: -5.259759426116943
    9. 'dist' → logprob: -5.759759426116943
    10. 'next' → logprob: -6.384759426116943

Token 1163: ' not' (ID: 625)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -1.8008754253387451
    2. 'def' → logprob: -2.300875425338745
    3. 'points' → logprob: -2.300875425338745
    4. 'do' → logprob: -2.425875425338745
    5. '       ' → logprob: -2.925875425338745
    6. 'generate' → logprob: -3.050875425338745
    7. '#' → logprob: -3.050875425338745
    8. 'prev' → logprob: -3.300875425338745
    9. 'continue' → logprob: -3.425875425338745
    10. 'prevent' → logprob: -3.550875425338745

Token 1164: ' explode' (ID: 38016)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.5802582502365112
    2. ' allow' → logprob: -1.7052582502365112
    3. ' limit' → logprob: -1.7052582502365112
    4. ' be' → logprob: -2.830258369445801
    5. ' avoid' → logprob: -2.830258369445801
    6. '       ' → logprob: -2.955258369445801
    7. 'allow' → logprob: -3.205258369445801
    8. 'consider' → logprob: -3.455258369445801
    9. ' prevent' → logprob: -3.955258369445801
    10. ' include' → logprob: -4.080258369445801

Token 1165: ' search' (ID: 3684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2892875671386719
    2. ',' → logprob: -1.7892875671386719
    3. 'the' → logprob: -3.539287567138672
    4. ' d' → logprob: -4.164287567138672
    5. 'd' → logprob: -4.164287567138672
    6. ' out' → logprob: -5.664287567138672
    7. '...' → logprob: -5.789287567138672
    8. '_' → logprob: -6.039287567138672
    9. ' on' → logprob: -6.039287567138672
    10. ' ,' → logprob: -6.289287567138672

Token 1166: ' space' (ID: 4918)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7708064317703247
    2. '       ' → logprob: -0.8958064317703247
    3. ' space' → logprob: -3.270806312561035
    4. '   ' → logprob: -3.395806312561035
    5. 'space' → logprob: -3.395806312561035
    6. ' states' → logprob: -5.020806312561035
    7. 'states' → logprob: -5.645806312561035
    8. ' ,' → logprob: -6.645806312561035
    9. '_space' → logprob: -6.645806312561035
    10. ':' → logprob: -6.895806312561035

Token 1167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1457979828119278
    2. '       ' → logprob: -2.0207979679107666
    3. ',
' → logprob: -6.270798206329346
    4. ':' → logprob: -7.270798206329346
    5. '   ' → logprob: -8.770797729492188
    6. ' ,' → logprob: -9.020797729492188
    7. '        
' → logprob: -10.145797729492188
    8. ':
' → logprob: -10.645797729492188
    9. 'import' → logprob: -10.770797729492188
    10. '<|end|>' → logprob: -11.020797729492188

Token 1168: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11641363054513931
    2. ' step' → logprob: -3.6164135932922363
    3. 'step' → logprob: -4.116413593292236
    4. 'positions' → logprob: -4.116413593292236
    5. 'steps' → logprob: -4.491413593292236
    6. ' steps' → logprob: -4.741413593292236
    7. ' positions' → logprob: -5.241413593292236
    8. 'next' → logprob: -5.366413593292236
    9. '#' → logprob: -5.741413593292236
    10. ' next' → logprob: -5.866413593292236

Token 1169: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047764431685209274
    2. '   ' → logprob: -4.422764301300049
    3. '#' → logprob: -5.297764301300049
    4. '
' → logprob: -5.922764301300049
    5. 'def' → logprob: -5.922764301300049
    6. 'return' → logprob: -6.047764301300049
    7. ' #' → logprob: -6.172764301300049
    8. ' return' → logprob: -6.422764301300049
    9. 'points' → logprob: -6.422764301300049
    10. 'next' → logprob: -6.547764301300049

Token 1170: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.46464061737060547
    2. 'the' → logprob: -1.9646406173706055
    3. '       ' → logprob: -2.9646406173706055
    4. ' steps' → logprob: -2.9646406173706055
    5. ' ourselves' → logprob: -3.9646406173706055
    6. ' to' → logprob: -3.9646406173706055
    7. ' step' → logprob: -4.0896406173706055
    8. '   ' → logprob: -4.2146406173706055
    9. 'steps' → logprob: -4.3396406173706055
    10. 'points' → logprob: -5.3396406173706055

Token 1171: ' route' (ID: 9656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1436630487442017
    2. '[' → logprob: -1.3936630487442017
    3. '[]' → logprob: -1.6436630487442017
    4. '[
' → logprob: -2.518662929534912
    5. '[]
' → logprob: -3.018662929534912
    6. '[i' → logprob: -3.393662929534912
    7. '[self' → logprob: -3.768662929534912
    8. '[p' → logprob: -4.518662929534912
    9. ' [' → logprob: -5.018662929534912
    10. 'points' → logprob: -5.018662929534912

Token 1172: ' points' (ID: 5571)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.006427944637835026
    2. '.se' → logprob: -6.256427764892578
    3. 'points' → logprob: -6.756427764892578
    4. '.' → logprob: -6.881427764892578
    5. '.length' → logprob: -7.381427764892578
    6. '   ' → logprob: -7.381427764892578
    7. ' .' → logprob: -8.506427764892578
    8. ' points' → logprob: -8.756427764892578
    9. '_points' → logprob: -9.131427764892578
    10. '       ' → logprob: -9.131427764892578

Token 1173: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4376944303512573
    2. ' =' → logprob: -2.187694549560547
    3. '
' → logprob: -2.687694549560547
    4. ':' → logprob: -2.812694549560547
    5. ':
' → logprob: -3.312694549560547
    6. '   ' → logprob: -4.312694549560547
    7. '[self' → logprob: -4.312694549560547
    8. '=' → logprob: -4.687694549560547
    9. ',' → logprob: -4.937694549560547
    10. '(self' → logprob: -5.062694549560547

Token 1174: ' current' (ID: 2208)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6526519060134888
    2. '[
' → logprob: -1.4026519060134888
    3. '[]' → logprob: -2.652651786804199
    4. ' [' → logprob: -3.027651786804199
    5. 'self' → logprob: -3.777651786804199
    6. '1' → logprob: -3.902651786804199
    7. '[self' → logprob: -3.902651786804199
    8. '[int' → logprob: -4.402651786804199
    9. '[]
' → logprob: -4.652651786804199
    10. ' [
' → logprob: -5.027651786804199

Token 1175: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5798512101173401
    2. 'd' → logprob: -1.3298511505126953
    3. ' positions' → logprob: -2.8298511505126953
    4. '_positions' → logprob: -2.8298511505126953
    5. ' d' → logprob: -3.7048511505126953
    6. 'position' → logprob: -4.079851150512695
    7. 'distance' → logprob: -5.579851150512695
    8. ' position' → logprob: -6.329851150512695
    9. ' distances' → logprob: -6.454851150512695
    10. 'dist' → logprob: -6.579851150512695

Token 1176: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012672568671405315
    2. '
' → logprob: -4.512672424316406
    3. '        
' → logprob: -7.262672424316406
    4. ':' → logprob: -8.637672424316406
    5. ',' → logprob: -8.762672424316406
    6. '```' → logprob: -8.762672424316406
    7. 'def' → logprob: -9.512672424316406
    8. '   ' → logprob: -9.762672424316406
    9. '):
' → logprob: -9.762672424316406
    10. ':
' → logprob: -9.762672424316406

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8789383830153383e-05
    2. '
' → logprob: -11.750019073486328
    3. '```' → logprob: -12.000019073486328
    4. '        
' → logprob: -13.125019073486328
    5. 'points' → logprob: -14.500019073486328
    6. '   ' → logprob: -14.625019073486328
    7. 'return' → logprob: -15.000019073486328
    8. 'd' → logprob: -15.625019073486328
    9. 'tokens' → logprob: -15.625019073486328
    10. 'import' → logprob: -15.750019073486328

Token 1178: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022555296309292316
    2. '
' → logprob: -6.252255439758301
    3. 'points' → logprob: -9.2522554397583
    4. '   ' → logprob: -9.5022554397583
    5. '        
' → logprob: -9.7522554397583
    6. '```' → logprob: -10.3772554397583
    7. ' points' → logprob: -11.0022554397583
    8. ',' → logprob: -12.0022554397583
    9. 'positions' → logprob: -12.1272554397583
    10. 'def' → logprob: -12.6272554397583

Token 1179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3544423381972592e-05
    2. '   ' → logprob: -12.87501335144043
    3. '        
' → logprob: -13.00001335144043
    4. '
' → logprob: -13.25001335144043
    5. '```' → logprob: -13.25001335144043
    6. 'def' → logprob: -13.75001335144043
    7. 'points' → logprob: -14.12501335144043
    8. 'd' → logprob: -14.37501335144043
    9. 'tokens' → logprob: -15.00001335144043
    10. 'return' → logprob: -15.50001335144043

Token 1180: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025737788528203964
    2. 'positions' → logprob: -4.775737762451172
    3. 'points' → logprob: -4.775737762451172
    4. ' points' → logprob: -6.400737762451172
    5. ' positions' → logprob: -6.525737762451172
    6. 'possible' → logprob: -6.900737762451172
    7. ' pts' → logprob: -7.275737762451172
    8. 'pts' → logprob: -7.275737762451172
    9. ' candidates' → logprob: -7.900737762451172
    10. 'poss' → logprob: -8.025737762451172

Token 1181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012220824137330055
    2. '=' → logprob: -4.637220859527588
    3. ':' → logprob: -6.012220859527588
    4. ' ' → logprob: -12.26222038269043
    5. ' :' → logprob: -12.63722038269043
    6. '   ' → logprob: -13.13722038269043
    7. ' =[' → logprob: -14.13722038269043
    8. '  ' → logprob: -14.76222038269043
    9. '=[]' → logprob: -14.88722038269043
    10. ',' → logprob: -15.13722038269043

Token 1182: ' []
' (ID: 8911)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.7187000513076782
    2. 'set' → logprob: -1.2187000513076782
    3. '[' → logprob: -2.3436999320983887
    4. ' [' → logprob: -3.3436999320983887
    5. '[]
' → logprob: -3.7186999320983887
    6. 'self' → logprob: -3.7186999320983887
    7. ' set' → logprob: -4.343699932098389
    8. '{' → logprob: -4.468699932098389
    9. '[list' → logprob: -5.468699932098389
    10. '[]' → logprob: -5.718699932098389

Token 1183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018339496455155313
    2. ' for' → logprob: -9.00018310546875
    3. 'for' → logprob: -9.75018310546875
    4. '   ' → logprob: -14.50018310546875
    5. '```' → logprob: -15.25018310546875
    6. '           ' → logprob: -15.62518310546875
    7. 'points' → logprob: -15.62518310546875
    8. '+' → logprob: -16.37518310546875
    9. '	' → logprob: -16.37518310546875
    10. '        
' → logprob: -16.62518310546875

Token 1184: ' route' (ID: 9656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25665283203125
    2. 'for' → logprob: -1.63165283203125
    3. 'positions' → logprob: -4.25665283203125
    4. 'points' → logprob: -4.75665283203125
    5. 'c' → logprob: -6.13165283203125
    6. 'all' → logprob: -6.25665283203125
    7. 'dist' → logprob: -6.63165283203125
    8. 'd' → logprob: -7.63165283203125
    9. 'current' → logprob: -7.63165283203125
    10. 'possible' → logprob: -7.88165283203125

Token 1185: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5373550057411194
    2. ' =' → logprob: -1.0373549461364746
    3. '.points' → logprob: -3.5373549461364746
    4. '=' → logprob: -3.9123549461364746
    5. '.' → logprob: -5.912354946136475
    6. 'points' → logprob: -6.037354946136475
    7. 'Points' → logprob: -6.787354946136475
    8. '_length' → logprob: -6.912354946136475
    9. '   ' → logprob: -7.037354946136475
    10. '_lengths' → logprob: -7.287354946136475

Token 1186: '_dist' (ID: 37968)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1417815238237381
    2. '=' → logprob: -2.5167815685272217
    3. '_dist' → logprob: -3.8917815685272217
    4. 'd' → logprob: -5.141781330108643
    5. '_points' → logprob: -5.391781330108643
    6. '_' → logprob: -5.391781330108643
    7. '_positions' → logprob: -5.391781330108643
    8. ':' → logprob: -5.516781330108643
    9. '_indices' → logprob: -6.266781330108643
    10. '_d' → logprob: -6.516781330108643

Token 1187: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.019702186807990074
    2. ' =' → logprob: -4.394701957702637
    3. 'ance' → logprob: -5.644701957702637
    4. 's' → logprob: -5.769701957702637
    5. '=' → logprob: -7.769701957702637
    6. '_points' → logprob: -10.644701957702637
    7. '   ' → logprob: -10.644701957702637
    8. '_list' → logprob: -11.644701957702637
    9. 'points' → logprob: -11.894701957702637
    10. '=[' → logprob: -12.269701957702637

Token 1188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741571247577667
    2. '=' → logprob: -0.9741570949554443
    3. ':' → logprob: -10.474157333374023
    4. '=[' → logprob: -10.849157333374023
    5. '=[]' → logprob: -11.474157333374023
    6. '=[
' → logprob: -12.349157333374023
    7. ' =[' → logprob: -12.724157333374023
    8. ',' → logprob: -12.849157333374023
    9. '<|end|>' → logprob: -12.849157333374023
    10. '=[]
' → logprob: -13.224157333374023

Token 1189: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.15796169638633728
    2. 'self' → logprob: -2.40796160697937
    3. '[' → logprob: -3.03296160697937
    4. ' [' → logprob: -5.532961845397949
    5. 'set' → logprob: -6.157961845397949
    6. '{' → logprob: -7.282961845397949
    7. 'list' → logprob: -8.28296184539795
    8. '[
' → logprob: -8.28296184539795
    9. '[list' → logprob: -8.53296184539795
    10. '[]
' → logprob: -9.03296184539795

Token 1190: '.route' (ID: 24746)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.5560728311538696
    2. '.route' → logprob: -0.9310728311538696
    3. '.length' → logprob: -3.93107271194458
    4. 'route' → logprob: -4.68107271194458
    5. 'points' → logprob: -6.18107271194458
    6. 'length' → logprob: -7.55607271194458
    7. '.' → logprob: -8.806073188781738
    8. 'self' → logprob: -9.181073188781738
    9. '.se' → logprob: -9.181073188781738
    10. 'se' → logprob: -9.556073188781738

Token 1191: '.length' (ID: 3116)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.005563143640756607
    2. '.length' → logprob: -5.380563259124756
    3. '.dist' → logprob: -8.380562782287598
    4. '.se' → logprob: -8.630562782287598
    5. '_points' → logprob: -9.005562782287598
    6. 'points' → logprob: -9.630562782287598
    7. '._' → logprob: -9.880562782287598
    8. ' .' → logprob: -10.005562782287598
    9. '.' → logprob: -10.255562782287598
    10. '.positions' → logprob: -10.630562782287598

Token 1192: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02352811209857464
    2. '_prefix' → logprob: -3.7735280990600586
    3. 'prefix' → logprob: -8.523528099060059
    4. '_points' → logprob: -10.898528099060059
    5. '   ' → logprob: -11.648528099060059
    6. '
' → logprob: -11.648528099060059
    7. '_threshold' → logprob: -12.523528099060059
    8. '```' → logprob: -12.523528099060059
    9. '_suffix' → logprob: -12.773528099060059
    10. '_s' → logprob: -13.023528099060059

Token 1193: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -5.7888184528565034e-05
    2. 'prefix' → logprob: -10.3750581741333
    3. '_suffix' → logprob: -11.8750581741333
    4. '_' → logprob: -12.6250581741333
    5. '[' → logprob: -12.7500581741333
    6. '```' → logprob: -12.8750581741333
    7. '       ' → logprob: -13.1250581741333
    8. '
' → logprob: -13.3750581741333
    9. '_append' → logprob: -13.3750581741333
    10. '   ' → logprob: -14.2500581741333

Token 1194: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1470443308353424
    2. '+' → logprob: -2.1470444202423096
    3. '+[' → logprob: -4.6470441818237305
    4. '
' → logprob: -5.5220441818237305
    5. '[' → logprob: -5.6470441818237305
    6. '[:]' → logprob: -6.5220441818237305
    7. '[:-' → logprob: -8.14704418182373
    8. '       ' → logprob: -8.52204418182373
    9. '[:' → logprob: -8.77204418182373
    10. '[::-' → logprob: -8.89704418182373

Token 1195: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22875940799713135
    2. ' +' → logprob: -2.103759288787842
    3. '+' → logprob: -2.853759288787842
    4. '       ' → logprob: -3.853759288787842
    5. '        
' → logprob: -6.478759288787842
    6. '[' → logprob: -7.353759288787842
    7. '+[' → logprob: -7.853759288787842
    8. '+
' → logprob: -8.603759765625
    9. '[:]' → logprob: -8.603759765625
    10. '[:' → logprob: -9.228759765625

Token 1196: ' distances' (ID: 48294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5977336168289185
    2. '
' → logprob: -1.8477336168289185
    3. ' for' → logprob: -2.972733497619629
    4. '[' → logprob: -3.097733497619629
    5. ' candidates' → logprob: -3.222733497619629
    6. '+' → logprob: -3.472733497619629
    7. 'c' → logprob: -3.847733497619629
    8. '[c' → logprob: -3.847733497619629
    9. '#' → logprob: -4.222733497619629
    10. '+c' → logprob: -4.597733497619629

Token 1197: ' of' (ID: 328)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8189272284507751
    2. '
' → logprob: -1.31892728805542
    3. '+' → logprob: -1.69392728805542
    4. '       ' → logprob: -2.31892728805542
    5. '        
' → logprob: -5.69392728805542
    6. '[' → logprob: -6.19392728805542
    7. '[:]' → logprob: -7.06892728805542
    8. '+[' → logprob: -7.81892728805542
    9. '=' → logprob: -8.068926811218262
    10. '[::-' → logprob: -8.068926811218262

Token 1198: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4965493083000183
    2. 'route' → logprob: -1.371549367904663
    3. 'points' → logprob: -3.121549367904663
    4. 'all' → logprob: -4.246549129486084
    5. ' route' → logprob: -4.371549129486084
    6. 'the' → logprob: -4.621549129486084
    7. ' all' → logprob: -4.621549129486084
    8. ' points' → logprob: -4.746549129486084
    9. '[
' → logprob: -4.871549129486084
    10. ' self' → logprob: -4.871549129486084

Token 1199: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6423084139823914
    2. 'self' → logprob: -0.8923084139823914
    3. 'segments' → logprob: -3.517308473587036
    4. ' points' → logprob: -3.642308473587036
    5. 'route' → logprob: -5.767308235168457
    6. ' self' → logprob: -6.267308235168457
    7. '_points' → logprob: -6.892308235168457
    8. '[' → logprob: -8.017308235168457
    9. '[self' → logprob: -8.142308235168457
    10. ' segments' → logprob: -8.517308235168457

Token 1200: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5413228273391724
    2. '       ' → logprob: -1.6663228273391724
    3. ' +' → logprob: -1.6663228273391724
    4. '+' → logprob: -3.291322708129883
    5. '        
' → logprob: -6.666322708129883
    6. '[' → logprob: -8.541322708129883
    7. '+
' → logprob: -8.916322708129883
    8. '
' → logprob: -8.916322708129883
    9. '[::-' → logprob: -9.041322708129883
    10. ')
' → logprob: -9.166322708129883

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05531223863363266
    2. '
' → logprob: -2.930312156677246
    3. '        
' → logprob: -8.555312156677246
    4. 'for' → logprob: -8.680312156677246
    5. ' for' → logprob: -10.305312156677246
    6. '   ' → logprob: -11.930312156677246
    7. '```' → logprob: -12.055312156677246
    8. ',' → logprob: -12.180312156677246
    9. '    
' → logprob: -12.430312156677246
    10. '	' → logprob: -12.930312156677246

Token 1202: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17585492134094238
    2. '       ' → logprob: -2.1758549213409424
    3. ' for' → logprob: -3.0508549213409424
    4. 'positions' → logprob: -9.050854682922363
    5. 'result' → logprob: -9.425854682922363
    6. 'current' → logprob: -10.175854682922363
    7. 'possible' → logprob: -10.175854682922363
    8. 'points' → logprob: -10.925854682922363
    9. 'c' → logprob: -11.050854682922363
    10. '
' → logprob: -11.050854682922363

Token 1203: ' Prepare' (ID: 49102)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004467031452804804
    2. 'current' → logprob: -6.504467010498047
    3. '       ' → logprob: -7.004467010498047
    4. 'possible' → logprob: -7.254467010498047
    5. 'positions' → logprob: -7.379467010498047
    6. '#' → logprob: -8.379467010498047
    7. 'c' → logprob: -9.254467010498047
    8. ' for' → logprob: -9.379467010498047
    9. 'n' → logprob: -9.754467010498047
    10. 'curr' → logprob: -10.004467010498047

Token 1204: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8784340023994446
    2. 'possible' → logprob: -1.3784339427947998
    3. 'positions' → logprob: -2.2534339427948
    4. 'result' → logprob: -3.0034339427948
    5. 'current' → logprob: -3.3784339427948
    6. 'moves' → logprob: -3.6284339427948
    7. 'c' → logprob: -4.003434181213379
    8. 'next' → logprob: -4.128434181213379
    9. ' for' → logprob: -4.128434181213379
    10. 'new' → logprob: -4.378434181213379

Token 1205: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8997268676757812
    2. ' of' → logprob: -1.2747268676757812
    3. ' =' → logprob: -2.0247268676757812
    4. 'of' → logprob: -2.6497268676757812
    5. 'for' → logprob: -3.6497268676757812
    6. ' for' → logprob: -3.6497268676757812
    7. '=' → logprob: -4.149726867675781
    8. '
' → logprob: -5.024726867675781
    9. 'possible' → logprob: -5.149726867675781
    10. ':' → logprob: -5.524726867675781

Token 1206: ' candidate' (ID: 17098)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8162859082221985
    2. 'positions' → logprob: -0.9412859082221985
    3. 'poss' → logprob: -2.6912858486175537
    4. 'new' → logprob: -3.6912858486175537
    5. 'c' → logprob: -4.066286087036133
    6. 'next' → logprob: -4.316286087036133
    7. 'dist' → logprob: -4.441286087036133
    8. 'pos' → logprob: -4.941286087036133
    9. 'potential' → logprob: -4.941286087036133
    10. 'candidate' → logprob: -5.066286087036133

Token 1207: ' d' (ID: 272)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.9824937582015991
    2. '_positions' → logprob: -1.1074937582015991
    3. 'd' → logprob: -2.3574938774108887
    4. 'dist' → logprob: -2.3574938774108887
    5. 'positions' → logprob: -2.9824938774108887
    6. '_points' → logprob: -3.6074938774108887
    7. '_d' → logprob: -3.9824938774108887
    8. 'points' → logprob: -5.857493877410889
    9. '_pos' → logprob: -6.607493877410889
    10. '_candidates' → logprob: -6.857493877410889

Token 1208: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6664555072784424
    2. 'A' → logprob: -1.2914555072784424
    3. '_positions' → logprob: -2.6664555072784424
    4. 'ists' → logprob: -3.0414555072784424
    5. 'positions' → logprob: -3.5414555072784424
    6. '_points' → logprob: -3.7914555072784424
    7. 'ist' → logprob: -4.041455268859863
    8. 'points' → logprob: -4.666455268859863
    9. '_candidates' → logprob: -4.791455268859863
    10. 'd' → logprob: -6.916455268859863

Token 1209: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7394781708717346
    2. '_positions' → logprob: -1.6144781112670898
    3. ' =' → logprob: -1.7394781112670898
    4. '_candidates' → logprob: -2.48947811126709
    5. '_values' → logprob: -3.36447811126709
    6. '_points' → logprob: -4.73947811126709
    7. '=' → logprob: -5.73947811126709
    8. '_next' → logprob: -6.11447811126709
    9. 'positions' → logprob: -6.11447811126709
    10. '_list' → logprob: -6.11447811126709

Token 1210: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0018272652523592114
    2. '       ' → logprob: -6.751827239990234
    3. 'candidate' → logprob: -8.126827239990234
    4. 'c' → logprob: -8.876827239990234
    5. ' d' → logprob: -9.876827239990234
    6. '#' → logprob: -10.001827239990234
    7. 'route' → logprob: -10.126827239990234
    8. '
' → logprob: -10.626827239990234
    9. '   ' → logprob: -10.751827239990234
    10. '           ' → logprob: -11.376827239990234

Token 1211: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004227389581501484
    2. 'A' → logprob: -5.629227161407471
    3. 'dist' → logprob: -8.754227638244629
    4. 'points' → logprob: -9.004227638244629
    5. '_candidates' → logprob: -9.754227638244629
    6. 'route' → logprob: -10.254227638244629
    7. 'd' → logprob: -10.504227638244629
    8. '_points' → logprob: -10.629227638244629
    9. 'istance' → logprob: -10.879227638244629
    10. 'candidate' → logprob: -11.191727638244629

Token 1212: ' points' (ID: 5571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2558324337005615
    2. '
' → logprob: -3.3808324337005615
    3. 'd' → logprob: -3.5058324337005615
    4. '_d' → logprob: -3.8808324337005615
    5. 'dist' → logprob: -4.005832672119141
    6. '_candidates' → logprob: -4.005832672119141
    7. '_positions' → logprob: -4.130832672119141
    8. '       ' → logprob: -4.255832672119141
    9. '   ' → logprob: -4.255832672119141
    10. '_dist' → logprob: -4.255832672119141

Token 1213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6585441827774048
    2. '
' → logprob: -1.0335441827774048
    3. 'd' → logprob: -3.2835440635681152
    4. 'for' → logprob: -3.9085440635681152
    5. ' for' → logprob: -4.783544063568115
    6. '        
' → logprob: -4.783544063568115
    7. 'c' → logprob: -4.908544063568115
    8. 'candidate' → logprob: -4.908544063568115
    9. ',' → logprob: -5.033544063568115
    10. ':' → logprob: -5.033544063568115

Token 1214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006878999527543783
    2. '
' → logprob: -5.256878852844238
    3. '        
' → logprob: -6.881878852844238
    4. ',' → logprob: -8.006878852844238
    5. ':' → logprob: -9.256878852844238
    6. ' =' → logprob: -10.131878852844238
    7. 'for' → logprob: -10.256878852844238
    8. ' for' → logprob: -10.881878852844238
    9. '```' → logprob: -11.131878852844238
    10. 'd' → logprob: -11.631878852844238

Token 1215: ' possible' (ID: 4149)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.327577829360962
    2. '       ' → logprob: -1.452577829360962
    3. 'candidate' → logprob: -1.702577829360962
    4. 'for' → logprob: -2.327577829360962
    5. 'possible' (adapté à ' possible') → logprob: -2.577577829360962
    6. 'c' → logprob: -2.952577829360962
    7. ' for' → logprob: -3.952577829360962
    8. ' d' → logprob: -4.077577590942383
    9. ' candidate' → logprob: -4.452577590942383
    10. 'cand' → logprob: -4.577577590942383

Token 1216: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.7100951671600342
    2. '_positions' → logprob: -1.0850951671600342
    3. '_dist' → logprob: -2.335095167160034
    4. '_points' → logprob: -3.335095167160034
    5. '_ds' → logprob: -3.960095167160034
    6. '_moves' → logprob: -4.710095405578613
    7. '_steps' → logprob: -5.585095405578613
    8. 'd' → logprob: -5.710095405578613
    9. '   ' → logprob: -7.835095405578613
    10. 's' → logprob: -8.210095405578613

Token 1217: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007107630372047424
    2. 'ist' → logprob: -8.750710487365723
    3. 'ists' → logprob: -8.875710487365723
    4. 's' → logprob: -9.125710487365723
    5. '_points' → logprob: -9.375710487365723
    6. '_positions' → logprob: -9.875710487365723
    7. 'points' → logprob: -10.375710487365723
    8. 'positions' → logprob: -10.375710487365723
    9. 'As' → logprob: -10.750710487365723
    10. '_A' → logprob: -11.125710487365723

Token 1218: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44762131571769714
    2. '=' → logprob: -1.5726213455200195
    3. ' =' → logprob: -1.9476213455200195
    4. '_points' → logprob: -5.1976213455200195
    5. '_candidates' → logprob: -6.1976213455200195
    6. '_values' → logprob: -6.9476213455200195
    7. '_s' → logprob: -7.3226213455200195
    8. '_positions' → logprob: -7.9476213455200195
    9. '_' → logprob: -8.19762134552002
    10. '_list' → logprob: -8.19762134552002

Token 1219: ' []
' (ID: 8911)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.6665489077568054
    2. '[' → logprob: -1.1665489673614502
    3. 'set' → logprob: -2.41654896736145
    4. '[c' → logprob: -3.79154896736145
    5. 'sorted' → logprob: -3.91654896736145
    6. 'self' → logprob: -4.291548728942871
    7. '[self' → logprob: -4.291548728942871
    8. ' [' → logprob: -5.666548728942871
    9. ' route' → logprob: -6.166548728942871
    10. '{' → logprob: -6.166548728942871

Token 1220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3547762632369995
    2. ' =' → logprob: -2.229776382446289
    3. '.append' → logprob: -2.604776382446289
    4. 'for' → logprob: -2.979776382446289
    5. ' for' → logprob: -3.229776382446289
    6. '=' → logprob: -4.229776382446289
    7. '.extend' → logprob: -5.104776382446289
    8. ':' → logprob: -6.229776382446289
    9. '
' → logprob: -6.354776382446289
    10. '.' → logprob: -8.104776382446289

Token 1221: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0054168421775102615
    2. '       ' → logprob: -5.7554168701171875
    3. 'i' → logprob: -6.6304168701171875
    4. 'possible' → logprob: -8.130416870117188
    5. 'if' → logprob: -8.255416870117188
    6. ' for' → logprob: -8.505416870117188
    7. '#' → logprob: -10.130416870117188
    8. 'idx' → logprob: -10.380416870117188
    9. 'index' → logprob: -10.380416870117188
    10. 'current' → logprob: -10.505416870117188

Token 1222: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1500360071659088
    2. 'pos' → logprob: -3.025036096572876
    3. 'd' → logprob: -3.650036096572876
    4. 'p' → logprob: -3.900036096572876
    5. 'pt' → logprob: -4.275035858154297
    6. 'i' → logprob: -4.400035858154297
    7. 'pd' → logprob: -4.525035858154297
    8. 'dp' → logprob: -5.900035858154297
    9. 'x' → logprob: -5.900035858154297
    10. 'val' → logprob: -7.025035858154297

Token 1223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006380206439644098
    2. 'in' → logprob: -5.131380081176758
    3. '_in' → logprob: -8.631380081176758
    4. ' ' → logprob: -9.256380081176758
    5. ',' → logprob: -9.506380081176758
    6. '	in' → logprob: -10.756380081176758
    7. '   ' → logprob: -11.256380081176758
    8. 'i' → logprob: -11.881380081176758
    9. '=' → logprob: -12.006380081176758
    10. '_' → logprob: -12.256380081176758

Token 1224: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.010273151099681854
    2. 'self' → logprob: -4.885272979736328
    3. '[self' → logprob: -6.885272979736328
    4. '(route' → logprob: -6.885272979736328
    5. '[' → logprob: -7.760272979736328
    6. '[c' → logprob: -9.510272979736328
    7. 'set' → logprob: -10.510272979736328
    8. ' route' → logprob: -10.635272979736328
    9. '[r' → logprob: -11.510272979736328
    10. '(self' → logprob: -11.760272979736328

Token 1225: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.008203190751373768
    2. '.length' → logprob: -5.133203029632568
    3. '.points' → logprob: -7.133203029632568
    4. '._' → logprob: -7.758203029632568
    5. 'length' → logprob: -7.883203029632568
    6. '_lengths' → logprob: -8.133203506469727
    7. 'points' → logprob: -8.758203506469727
    8. 's' → logprob: -9.633203506469727
    9. 'Points' → logprob: -10.133203506469727
    10. '_.' → logprob: -10.508203506469727

Token 1226: '_dist' (ID: 37968)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0331350713968277
    2. 'prefix' → logprob: -3.533135175704956
    3. 'dist' → logprob: -6.783134937286377
    4. '_dist' → logprob: -6.783134937286377
    5. '   ' → logprob: -7.658134937286377
    6. '
' → logprob: -8.658135414123535
    7. '_' → logprob: -9.158135414123535
    8. '       ' → logprob: -9.408135414123535
    9. '```' → logprob: -10.158135414123535
    10. 'refix' → logprob: -10.658135414123535

Token 1227: 'ances' (ID: 3528)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.25400692224502563
    2. 'ix' → logprob: -3.254006862640381
    3. 'ices' → logprob: -3.379006862640381
    4. 'ances' → logprob: -3.379006862640381
    5. 'ixes' → logprob: -3.504006862640381
    6. 'ist' → logprob: -3.504006862640381
    7. 'ex' → logprob: -4.129006862640381
    8. 'refix' → logprob: -4.379006862640381
    9. 'rix' → logprob: -4.879006862640381
    10. 'es' → logprob: -5.129006862640381

Token 1228: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03417324647307396
    2. ':' → logprob: -3.4091732501983643
    3. '           ' → logprob: -7.909173011779785
    4. '+' → logprob: -9.284173011779785
    5. ' +' → logprob: -10.409173011779785
    6. ':
' → logprob: -11.034173011779785
    7. '       ' → logprob: -11.534173011779785
    8. '   ' → logprob: -12.909173011779785
    9. '):
' → logprob: -13.034173011779785
    10. ' :
' → logprob: -13.159173011779785

Token 1229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035608073812909424
    2. ' if' → logprob: -8.12535572052002
    3. '   ' → logprob: -10.62535572052002
    4. '       ' → logprob: -11.25035572052002
    5. ',' → logprob: -12.25035572052002
    6. '
' → logprob: -12.62535572052002
    7. '	       ' → logprob: -12.75035572052002
    8. '               ' → logprob: -12.87535572052002
    9. 'if' → logprob: -13.25035572052002
    10. ':' → logprob: -13.50035572052002

Token 1230: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2910427749156952
    2. '           ' → logprob: -1.5410428047180176
    3. 'if' (adapté à ' if') → logprob: -3.2910428047180176
    4. ' possible' → logprob: -7.541042804718018
    5. 'possible' → logprob: -7.541042804718018
    6. '
' → logprob: -10.79104232788086
    7. '            
' → logprob: -11.54104232788086
    8. ' ' → logprob: -11.91604232788086
    9. '	       ' → logprob: -11.91604232788086
    10. '       ' → logprob: -11.91604232788086

Token 1231: ' dist' (ID: 3601)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.022370969876646996
    2. 'dist' → logprob: -4.2723708152771
    3. 'math' → logprob: -5.2723708152771
    4. ' abs' → logprob: -6.5223708152771
    5. '0' → logprob: -7.2723708152771
    6. 'self' → logprob: -7.2723708152771
    7. 'True' → logprob: -9.647371292114258
    8. '(abs' → logprob: -9.647371292114258
    9. ' math' → logprob: -11.522371292114258
    10. 'not' → logprob: -11.772371292114258

Token 1232: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9942747354507446
    2. '>=' → logprob: -1.1192747354507446
    3. '<=' → logprob: -1.8692747354507446
    4. ' <=' → logprob: -1.9942747354507446
    5. ' !=' → logprob: -5.494274616241455
    6. '!=' → logprob: -5.619274616241455
    7. '==' → logprob: -6.994274616241455
    8. ' ' → logprob: -7.244274616241455
    9. ' is' → logprob: -7.494274616241455
    10. ' ==' → logprob: -7.619274616241455

Token 1233: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05956327170133591
    2. 'self' → logprob: -3.559563159942627
    3. '0' → logprob: -3.809563159942627
    4. '-' → logprob: -5.684563159942627
    5. '=self' → logprob: -5.809563159942627
    6. '=-' → logprob: -7.809563159942627
    7. ' self' → logprob: -9.434563636779785
    8. '-self' → logprob: -9.559563636779785
    9. ' =' → logprob: -10.559563636779785
    10. '1' → logprob: -10.684563636779785

Token 1234: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30208006501197815
    2. '1' → logprob: -1.8020800352096558
    3. '=' → logprob: -2.4270801544189453
    4. '=self' → logprob: -5.302080154418945
    5. ' self' → logprob: -6.552080154418945
    6. '-' → logprob: -7.927080154418945
    7. '+' → logprob: -8.677080154418945
    8. ' ' → logprob: -9.177080154418945
    9. '-self' → logprob: -9.552080154418945
    10. '
' → logprob: -9.552080154418945

Token 1235: '.e' (ID: 2560)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.050596535205841064
    2. '1' → logprob: -3.0505964756011963
    3. ' self' → logprob: -6.550596714019775
    4. '=' → logprob: -8.175596237182617
    5. '=self' → logprob: -9.300596237182617
    6. '   ' → logprob: -9.800596237182617
    7. '0' → logprob: -9.925596237182617
    8. '10' → logprob: -10.550596237182617
    9. ' ' → logprob: -10.800596237182617
    10. '       ' → logprob: -12.050596237182617

Token 1236: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.4564514458179474
    2. '-' → logprob: -1.706451416015625
    3. '6' → logprob: -1.831451416015625
    4. 'psilon' → logprob: -4.081451416015625
    5. 'p' → logprob: -5.456451416015625
    6. '9' → logprob: -6.081451416015625
    7. '7' → logprob: -8.456451416015625
    8. 'psi' → logprob: -8.831451416015625
    9. 'eps' → logprob: -9.206451416015625
    10. 'psz' → logprob: -9.206451416015625

Token 1237: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0675734281539917
    2. 'or' → logprob: -2.9425735473632812
    3. ':' → logprob: -4.692573547363281
    4. '+' → logprob: -6.567573547363281
    5. ':
' → logprob: -6.817573547363281
    6. '           ' → logprob: -7.442573547363281
    7. '-' → logprob: -9.192573547363281
    8. '       ' → logprob: -9.317573547363281
    9. ' +' → logprob: -10.192573547363281
    10. ' and' → logprob: -10.442573547363281

Token 1238: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0021905910689383745
    2. ' dist' → logprob: -6.127190589904785
    3. 'self' → logprob: -13.127190589904785
    4. '	dist' → logprob: -14.127190589904785
    5. '(dist' → logprob: -14.377190589904785
    6. '               ' → logprob: -14.377190589904785
    7. '           ' → logprob: -14.877190589904785
    8. '                   ' → logprob: -15.002190589904785
    9. '>' → logprob: -15.377190589904785
    10. '                       ' → logprob: -16.0021915435791

Token 1239: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42906108498573303
    2. '>' → logprob: -1.0540610551834106
    3. ' <=' → logprob: -8.929060935974121
    4. ' ' → logprob: -10.179060935974121
    5. '<=' → logprob: -10.304060935974121
    6. '<|end|>' → logprob: -10.429060935974121
    7. ' >=' → logprob: -10.679060935974121
    8. '()>' → logprob: -10.804060935974121
    9. '>=' → logprob: -11.429060935974121
    10. ' <' → logprob: -11.429060935974121

Token 1240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01605301909148693
    2. ' self' → logprob: -4.141053199768066
    3. '   ' → logprob: -11.391053199768066
    4. ' ' → logprob: -12.641053199768066
    5. '(self' → logprob: -13.766053199768066
    6. '       ' → logprob: -14.016053199768066
    7. '	self' → logprob: -14.391053199768066
    8. '+' → logprob: -15.266053199768066
    9. '           ' → logprob: -15.266053199768066
    10. '=self' → logprob: -15.391053199768066

Token 1241: '.L' (ID: 2024)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6352887749671936
    2. 'self' → logprob: -0.7602887749671936
    3. ' +' → logprob: -6.385288715362549
    4. '+' → logprob: -7.760288715362549
    5. ' ' → logprob: -7.885288715362549
    6. ' L' → logprob: -10.260289192199707
    7. 'L' → logprob: -10.260289192199707
    8. '1' → logprob: -10.260289192199707
    9. ' ' → logprob: -11.635289192199707
    10. '<|end|>' → logprob: -11.635289192199707

Token 1242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3002208173274994
    2. ' +' → logprob: -1.4252208471298218
    3. ':' → logprob: -4.675220966339111
    4. ':
' → logprob: -5.175220966339111
    5. '           ' → logprob: -5.675220966339111
    6. '       ' → logprob: -8.550220489501953
    7. '-' → logprob: -9.175220489501953
    8. ' -' → logprob: -9.925220489501953
    9. '               ' → logprob: -10.550220489501953
    10. '+
' → logprob: -10.925220489501953

Token 1243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00172230729367584
    2. ' self' → logprob: -6.37672233581543
    3. ' ' → logprob: -11.50172233581543
    4. '   ' → logprob: -11.87672233581543
    5. '1' → logprob: -13.75172233581543
    6. '+self' → logprob: -14.25172233581543
    7. '	self' → logprob: -15.12672233581543
    8. '  ' → logprob: -15.25172233581543
    9. '0' → logprob: -15.87672233581543
    10. '+' → logprob: -16.25172233581543

Token 1244: '.e' (ID: 2560)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.055417921394109726
    2. '.e' → logprob: -2.930418014526367
    3. 'e' → logprob: -7.680418014526367
    4. '_eps' → logprob: -10.430418014526367
    5. ' eps' → logprob: -11.805418014526367
    6. 'epsilon' → logprob: -11.930418014526367
    7. '.' → logprob: -12.305418014526367
    8. '1' → logprob: -12.430418014526367
    9. 'ps' → logprob: -12.555418014526367
    10. 'ep' → logprob: -12.680418014526367

Token 1245: 'ps' (ID: 947)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2522736191749573
    2. 'ps' → logprob: -1.5022735595703125
    3. '6' → logprob: -8.252273559570312
    4. 'p' → logprob: -10.252273559570312
    5. 'psilon' → logprob: -10.252273559570312
    6. 'pls' → logprob: -13.252273559570312
    7. '_ps' → logprob: -13.377273559570312
    8. 'psz' → logprob: -13.752273559570312
    9. 'psi' → logprob: -13.752273559570312
    10. 'psc' → logprob: -13.877273559570312

Token 1246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28489911556243896
    2. ':
' → logprob: -1.409899115562439
    3. '           ' → logprob: -6.2848992347717285
    4. ' or' → logprob: -6.4098992347717285
    5. '       ' → logprob: -9.03489875793457
    6. '               ' → logprob: -10.65989875793457
    7. ':return' → logprob: -10.78489875793457
    8. '):
' → logprob: -11.15989875793457
    9. ' and' → logprob: -11.53489875793457
    10. '():
' → logprob: -12.28489875793457

Token 1247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004510343074798584
    2. '           ' → logprob: -5.629510402679443
    3. ':' → logprob: -8.129509925842285
    4. ':
' → logprob: -8.379509925842285
    5. ',' → logprob: -8.879509925842285
    6. ' continue' → logprob: -9.004509925842285
    7. 'continue' → logprob: -10.379509925842285
    8. ' or' → logprob: -11.004509925842285
    9. '):
' → logprob: -11.754509925842285
    10. '              ' → logprob: -11.879509925842285

Token 1248: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8355076909065247
    2. 'continue' (adapté à ' continue') → logprob: -1.0855076313018799
    3. ' continue' → logprob: -1.7105076313018799
    4. '           ' → logprob: -3.08550763130188
    5. '	continue' → logprob: -6.585507869720459
    6. '                   ' → logprob: -7.585507869720459
    7. '   ' → logprob: -8.8355073928833
    8. '_continue' → logprob: -10.5855073928833
    9. '	           ' → logprob: -11.3355073928833
    10. 'contin' → logprob: -11.4605073928833

Token 1249: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036477106623351574
    2. '
' → logprob: -5.753647804260254
    3. ',' → logprob: -9.003647804260254
    4. '               ' → logprob: -9.628647804260254
    5. '		' → logprob: -9.753647804260254
    6. '   ' → logprob: -10.253647804260254
    7. '	       ' → logprob: -10.378647804260254
    8. '            
' → logprob: -10.503647804260254
    9. '       ' → logprob: -10.628647804260254
    10. ',
' → logprob: -10.753647804260254

Token 1250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024144348572008312
    2. '
' → logprob: -8.37524127960205
    3. ',' → logprob: -12.75024127960205
    4. '       ' → logprob: -13.00024127960205
    5. '               ' → logprob: -13.25024127960205
    6. '   ' → logprob: -13.75024127960205
    7. 'possible' → logprob: -14.25024127960205
    8. '            
' → logprob: -14.37524127960205
    9. ' possible' → logprob: -15.50024127960205
    10. '		' → logprob: -15.62524127960205

Token 1251: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006291598547250032
    2. 'possible' → logprob: -8.125629425048828
    3. ' possible' → logprob: -9.125629425048828
    4. '       ' → logprob: -9.500629425048828
    5. '   ' → logprob: -9.500629425048828
    6. '               ' → logprob: -9.875629425048828
    7. ' if' → logprob: -11.625629425048828
    8. '	       ' → logprob: -12.250629425048828
    9. '		' → logprob: -13.125629425048828
    10. ',' → logprob: -13.500629425048828

Token 1252: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16833169758319855
    2. 'self' → logprob: -2.5433316230773926
    3. ' abs' → logprob: -2.9183316230773926
    4. 'math' → logprob: -4.043331623077393
    5. ' self' → logprob: -6.043331623077393
    6. ' math' → logprob: -6.543331623077393
    7. 'dist' → logprob: -8.16833209991455
    8. '   ' → logprob: -8.54333209991455
    9. 'any' → logprob: -9.04333209991455
    10. 'not' → logprob: -9.41833209991455

Token 1253: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -8.554343366995454e-05
    2. '(d' → logprob: -9.750085830688477
    3. '(' → logprob: -11.250085830688477
    4. '(self' → logprob: -11.875085830688477
    5. '(distance' → logprob: -12.250085830688477
    6. 'dist' → logprob: -13.250085830688477
    7. '(diff' → logprob: -15.375085830688477
    8. '((' → logprob: -15.500085830688477
    9. '	dist' → logprob: -17.125085830688477
    10. '(round' → logprob: -17.875085830688477

Token 1254: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07895555347204208
    2. '-' → logprob: -2.57895565032959
    3. ')' → logprob: -10.70395565032959
    4. '-self' → logprob: -11.57895565032959
    5. ' ' → logprob: -11.82895565032959
    6. 'self' → logprob: -12.32895565032959
    7. '   ' → logprob: -12.57895565032959
    8. '()-' → logprob: -12.70395565032959
    9. '-d' → logprob: -12.95395565032959
    10. '()' → logprob: -13.20395565032959

Token 1255: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003851517685689032
    2. ' d' → logprob: -7.875385284423828
    3. ')d' → logprob: -13.500385284423828
    4. '   ' → logprob: -14.125385284423828
    5. '       ' → logprob: -14.250385284423828
    6. '           ' → logprob: -14.250385284423828
    7. '0' → logprob: -14.875385284423828
    8. ')' → logprob: -14.875385284423828
    9. ' ' → logprob: -15.250385284423828
    10. '	d' → logprob: -16.000385284423828

Token 1256: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.625
    3. ' A' → logprob: -16.5
    4. '<|end|>' → logprob: -17.0
    5. '<|end|>' → logprob: -17.375
    6. ',' → logprob: -18.125
    7. 'B' → logprob: -18.25
    8. 'А' → logprob: -18.5
    9. '_A' → logprob: -18.625
    10. '[' → logprob: -18.875

Token 1257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003397535183466971
    2. ')<=' → logprob: -8.00033950805664
    3. ' )' → logprob: -13.25033950805664
    4. ')<' → logprob: -13.50033950805664
    5. ')>' → logprob: -14.12533950805664
    6. ')>=' → logprob: -16.50033950805664
    7. '')' → logprob: -16.62533950805664
    8. '[' → logprob: -16.62533950805664
    9. '）' → logprob: -16.62533950805664
    10. '<=' → logprob: -17.25033950805664

Token 1258: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22576119005680084
    2. '<=' → logprob: -1.6007611751556396
    3. ')<=' → logprob: -8.850761413574219
    4. ')' → logprob: -9.725761413574219
    5. '>' → logprob: -10.225761413574219
    6. ' >=' → logprob: -10.350761413574219
    7. ' >' → logprob: -10.600761413574219
    8. '>=' → logprob: -10.725761413574219
    9. ' <' → logprob: -11.850761413574219
    10. ' ' → logprob: -12.100761413574219

Token 1259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18293239176273346
    2. '1' → logprob: -2.0579323768615723
    3. '10' → logprob: -4.557932376861572
    4. '0' → logprob: -4.557932376861572
    5. ' self' → logprob: -4.932932376861572
    6. '100' → logprob: -5.807932376861572
    7. '5' → logprob: -5.807932376861572
    8. '2' → logprob: -6.307932376861572
    9. ' ' → logprob: -6.307932376861572
    10. '=' → logprob: -7.057932376861572

Token 1260: '.e' (ID: 2560)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5848696827888489
    2. '1' → logprob: -0.9598696827888489
    3. 'eps' → logprob: -3.709869623184204
    4. '0' → logprob: -4.584869861602783
    5. ' self' → logprob: -5.084869861602783
    6. '2' → logprob: -5.084869861602783
    7. '5' → logprob: -5.459869861602783
    8. 'L' → logprob: -6.459869861602783
    9. ' ' → logprob: -6.584869861602783
    10. '10' → logprob: -6.584869861602783

Token 1261: 'ps' (ID: 947)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00036775172338820994
    2. '6' → logprob: -8.625368118286133
    3. '7' → logprob: -9.750368118286133
    4. '_' → logprob: -10.125368118286133
    5. '5' → logprob: -10.375368118286133
    6. '9' → logprob: -11.125368118286133
    7. '8' → logprob: -11.500368118286133
    8. 'e' → logprob: -12.375368118286133
    9. '```' → logprob: -12.625368118286133
    10. '3' → logprob: -12.750368118286133

Token 1262: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021823162212967873
    2. 'and' → logprob: -3.8968231678009033
    3. ':' → logprob: -7.396822929382324
    4. '           ' → logprob: -8.271822929382324
    5. ':
' → logprob: -8.396822929382324
    6. ' or' → logprob: -9.271822929382324
    7. '       ' → logprob: -10.021822929382324
    8. ',' → logprob: -12.021822929382324
    9. '          ' → logprob: -12.021822929382324
    10. ' ' → logprob: -12.396822929382324

Token 1263: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018911674851551652
    2. ' possible' → logprob: -9.625188827514648
    3. 'possible' → logprob: -9.750188827514648
    4. '           ' → logprob: -10.500188827514648
    5. '                   ' → logprob: -11.750188827514648
    6. ',' → logprob: -12.375188827514648
    7. '```' → logprob: -12.500188827514648
    8. '	           ' → logprob: -12.625188827514648
    9. '   ' → logprob: -12.875188827514648
    10. ' continue' → logprob: -12.875188827514648

Token 1264: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030770637094974518
    2. 'possible' → logprob: -6.128077030181885
    3. ' possible' → logprob: -7.503077030181885
    4. '           ' → logprob: -8.253077507019043
    5. '   ' → logprob: -10.128077507019043
    6. ',' → logprob: -11.628077507019043
    7. '_possible' → logprob: -11.628077507019043
    8. '                   ' → logprob: -11.878077507019043
    9. '       ' → logprob: -12.753077507019043
    10. '	           ' → logprob: -13.378077507019043

Token 1265: ' allow' (ID: 3763)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5284740924835205
    2. ' possible' → logprob: -0.9034740924835205
    3. '               ' → logprob: -5.653473854064941
    4. '           ' → logprob: -6.528473854064941
    5. '_possible' → logprob: -9.528473854064941
    6. ' continue' → logprob: -9.903473854064941
    7. 'Possible' → logprob: -9.903473854064941
    8. '
' → logprob: -10.153473854064941
    9. ' if' → logprob: -10.528473854064941
    10. 'continue' → logprob: -10.653473854064941

Token 1266: ' standing' (ID: 18350)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8228679299354553
    2. ' candidates' → logprob: -1.1978678703308105
    3. ' possible' → logprob: -2.0728678703308105
    4. 'c' → logprob: -2.1978678703308105
    5. '_candidates' → logprob: -5.3228678703308105
    6. 'candidate' → logprob: -5.4478678703308105
    7. '<|end|>' → logprob: -6.1978678703308105
    8. '           ' → logprob: -6.1978678703308105
    9. '
' → logprob: -7.3228678703308105
    10. ' some' → logprob: -7.4478678703308105

Token 1267: ' still' (ID: 2928)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18791332840919495
    2. '       ' → logprob: -2.437913417816162
    3. 'or' → logprob: -3.437913417816162
    4. ' and' → logprob: -3.687913417816162
    5. '           ' → logprob: -4.687913417816162
    6. '
' → logprob: -4.937913417816162
    7. 'and' → logprob: -5.562913417816162
    8. ',' → logprob: -6.437913417816162
    9. '               ' → logprob: -7.312913417816162
    10. ':
' → logprob: -7.437913417816162

Token 1268: '?
' (ID: 3901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8150856494903564
    2. ' and' → logprob: -1.4400856494903564
    3. '           ' → logprob: -1.4400856494903564
    4. ' or' → logprob: -2.9400856494903564
    5. ':
' → logprob: -3.8150856494903564
    6. ':' → logprob: -5.315085411071777
    7. 'and' → logprob: -6.565085411071777
    8. ',' → logprob: -6.690085411071777
    9. '
' → logprob: -7.815085411071777
    10. '):
' → logprob: -9.065085411071777

Token 1269: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6337667107582092
    2. '           ' → logprob: -0.7587667107582092
    3. ' continue' → logprob: -8.508767127990723
    4. ' and' → logprob: -8.508767127990723
    5. ',' → logprob: -8.633767127990723
    6. ' if' → logprob: -8.758767127990723
    7. '       ' → logprob: -9.633767127990723
    8. '
' → logprob: -9.758767127990723
    9. '```' → logprob: -10.258767127990723
    10. '	       ' → logprob: -10.383767127990723

Token 1270: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.4276377856731415
    2. ' possible' → logprob: -1.5526378154754639
    3. '                   ' → logprob: -2.052637815475464
    4. '               ' → logprob: -5.052637577056885
    5. 'continue' → logprob: -7.802637577056885
    6. ' continue' → logprob: -8.427638053894043
    7. ' if' → logprob: -8.552638053894043
    8. 'if' → logprob: -8.802638053894043
    9. '   ' → logprob: -8.927638053894043
    10. '           ' → logprob: -9.052638053894043

Token 1271: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.417976379045285e-05
    2. '_positions' → logprob: -10.750043869018555
    3. 'd' → logprob: -12.125043869018555
    4. '_points' → logprob: -13.125043869018555
    5. '```' → logprob: -13.125043869018555
    6. '_candidates' → logprob: -13.500043869018555
    7. '_dist' → logprob: -13.625043869018555
    8. '\' → logprob: -13.750043869018555
    9. '   ' → logprob: -13.875043869018555
    10. ' ' → logprob: -14.000043869018555

Token 1272: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2948405128554441e-05
    2. ' A' → logprob: -11.87501335144043
    3. '_A' → logprob: -13.87501335144043
    4. '=' → logprob: -14.00001335144043
    5. ' ' → logprob: -14.25001335144043
    6. 'А' → logprob: -14.50001335144043
    7. 'a' → logprob: -14.87501335144043
    8. 'istance' → logprob: -15.25001335144043
    9. '```' → logprob: -15.50001335144043
    10. '   ' → logprob: -15.50001335144043

Token 1273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00195384887047112
    2. '.' → logprob: -6.251954078674316
    3. ' .' → logprob: -10.626954078674316
    4. '.app' → logprob: -14.501954078674316
    5. '.ap' → logprob: -15.251954078674316
    6. 'append' → logprob: -15.876954078674316
    7. '.extend' → logprob: -16.251953125
    8. ').' → logprob: -18.251953125
    9. '.add' → logprob: -18.376953125
    10. '.Append' → logprob: -18.751953125

Token 1274: '(dist' (ID: 78981)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31591796875
    2. '(dist' → logprob: -1.31591796875
    3. ' dist' → logprob: -5.94091796875
    4. '	dist' → logprob: -11.31591796875
    5. '(' → logprob: -11.81591796875
    6. ' (' → logprob: -13.81591796875
    7. '(
' → logprob: -14.19091796875
    8. '   ' → logprob: -14.94091796875
    9. '(distance' → logprob: -15.19091796875
    10. '_dist' → logprob: -15.19091796875

Token 1275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005575594492256641
    2. ')
' → logprob: -5.630575656890869
    3. '           ' → logprob: -6.630575656890869
    4. '       ' → logprob: -7.630575656890869
    5. ' )' → logprob: -9.005575180053711
    6. '               ' → logprob: -10.630575180053711
    7. ')

' → logprob: -11.755575180053711
    8. ' )
' → logprob: -13.130575180053711
    9. '   ' → logprob: -13.255575180053711
    10. ')
' → logprob: -13.380575180053711

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018266061320900917
    2. '
' → logprob: -4.143266201019287
    3. '           ' → logprob: -6.893266201019287
    4. '        
' → logprob: -7.143266201019287
    5. '+' → logprob: -9.393265724182129
    6. ',' → logprob: -9.768265724182129
    7. ' 
' → logprob: -9.893265724182129
    8. '        ' → logprob: -10.268265724182129
    9. '<|end|>' → logprob: -10.268265724182129
    10. ' for' → logprob: -10.768265724182129

Token 1277: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02572571113705635
    2. 'possible' (adapté à ' possible') → logprob: -4.400725841522217
    3. '
' → logprob: -4.900725841522217
    4. 'for' → logprob: -6.150725841522217
    5. ' possible' → logprob: -6.525725841522217
    6. ' for' → logprob: -6.900725841522217
    7. '        
' → logprob: -7.275725841522217
    8. '+' → logprob: -8.775725364685059
    9. '<|end|>' → logprob: -10.025725364685059
    10. ' +' → logprob: -10.275725364685059

Token 1278: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -8.399378566537052e-05
    2. '_possible' → logprob: -9.500083923339844
    3. '```' → logprob: -12.625083923339844
    4. 'd' → logprob: -13.500083923339844
    5. 'possible' → logprob: -13.500083923339844
    6. 'Possible' → logprob: -14.875083923339844
    7. '   ' → logprob: -14.875083923339844
    8. '\' → logprob: -14.875083923339844
    9. '}_' → logprob: -15.125083923339844
    10. 'A' → logprob: -15.250083923339844

Token 1279: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017060093814507127
    2. 'B' → logprob: -6.376706123352051
    3. ' A' → logprob: -13.37670612335205
    4. '_A' → logprob: -14.12670612335205
    5. '=' → logprob: -15.00170612335205
    6. ' ' → logprob: -15.50170612335205
    7. 'А' → logprob: -15.75170612335205
    8. '[' → logprob: -15.87670612335205
    9. '<|end|>' → logprob: -16.126705169677734
    10. ')' → logprob: -16.251705169677734

Token 1280: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04573174938559532
    2. ' =' → logprob: -3.545731782913208
    3. '.extend' → logprob: -4.920731544494629
    4. '.append' → logprob: -5.170731544494629
    5. '.' → logprob: -7.045731544494629
    6. '.sort' → logprob: -7.170731544494629
    7. '+=' → logprob: -7.795731544494629
    8. '=[]' → logprob: -8.295731544494629
    9. ',' → logprob: -8.545731544494629
    10. ' +=' → logprob: -8.795731544494629

Token 1281: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.250017166137695
    3. 'd' → logprob: -12.625017166137695
    4. '(
' → logprob: -15.000017166137695
    5. '(round' → logprob: -18.000017166137695
    6. '((' → logprob: -18.500017166137695
    7. '()' → logprob: -19.000017166137695
    8. '	d' → logprob: -19.125017166137695
    9. '(float' → logprob: -20.625017166137695
    10. '(D' → logprob: -20.625017166137695

Token 1282: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7432603272027336e-06
    2. ' A' → logprob: -14.625001907348633
    3. ' ' → logprob: -15.000001907348633
    4. ')' → logprob: -15.125001907348633
    5. '_A' → logprob: -15.125001907348633
    6. 'a' → logprob: -15.750001907348633
    7. ',' → logprob: -17.125001907348633
    8. '
' → logprob: -17.250001907348633
    9. 'А' → logprob: -17.250001907348633
    10. 'd' → logprob: -17.437501907348633

Token 1283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3199920178740285e-05
    2. ')
' → logprob: -11.500022888183594
    3. ' )' → logprob: -11.625022888183594
    4. '       ' → logprob: -13.000022888183594
    5. '<|end|>' → logprob: -14.375022888183594
    6. ')}' → logprob: -14.625022888183594
    7. '),' → logprob: -15.625022888183594
    8. '))' → logprob: -15.875022888183594
    9. ',' → logprob: -16.000022888183594
    10. ')return' → logprob: -16.750022888183594

Token 1284: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0018439209088683128
    2. '       ' → logprob: -6.7518439292907715
    3. 'possible' → logprob: -7.6268439292907715
    4. '        
' → logprob: -9.876843452453613
    5. ' possible' → logprob: -10.001843452453613
    6. ',' → logprob: -10.876843452453613
    7. '<|end|>' → logprob: -11.126843452453613
    8. '
' → logprob: -11.376843452453613
    9. ' 
' → logprob: -11.501843452453613
    10. ',
' → logprob: -11.501843452453613

Token 1285: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00150390958879143
    2. '       ' → logprob: -6.751503944396973
    3. 'possible' → logprob: -9.251503944396973
    4. '
' → logprob: -9.626503944396973
    5. '<|end|>' → logprob: -9.876503944396973
    6. '        
' → logprob: -10.626503944396973
    7. ')' → logprob: -10.876503944396973
    8. ')
' → logprob: -11.001503944396973
    9. ' 
' → logprob: -11.751503944396973
    10. '  
' → logprob: -11.876503944396973

Token 1286: ' allow' (ID: 3763)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.055755313485860825
    2. ' possible' → logprob: -2.930755376815796
    3. '       ' → logprob: -7.305755138397217
    4. '
' → logprob: -9.180755615234375
    5. '#' → logprob: -10.680755615234375
    6. '_possible' → logprob: -10.930755615234375
    7. ' for' → logprob: -11.305755615234375
    8. 'for' → logprob: -11.305755615234375
    9. 'Possible' → logprob: -11.805755615234375
    10. ')' → logprob: -11.930755615234375

Token 1287: ' standing' (ID: 18350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17641110718250275
    2. ' staying' → logprob: -2.3014111518859863
    3. 'standing' → logprob: -3.1764111518859863
    4. ' standing' → logprob: -5.176411151885986
    5. 'dist' → logprob: -5.301411151885986
    6. ' d' → logprob: -5.551411151885986
    7. 'st' → logprob: -7.051411151885986
    8. ' to' → logprob: -7.051411151885986
    9. ' current' → logprob: -7.301411151885986
    10. 'possible' → logprob: -7.301411151885986

Token 1288: ' still' (ID: 2928)
  Prédit: 'still'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'still' → logprob: -0.0036669373512268066
    2. ' still' → logprob: -5.628666877746582
    3. '       ' → logprob: -11.253666877746582
    4. 'Still' → logprob: -11.503666877746582
    5. '```' → logprob: -11.878666877746582
    6. '   ' → logprob: -12.003666877746582
    7. '<|end|>' → logprob: -12.003666877746582
    8. 'st' → logprob: -12.003666877746582
    9. 'stil' → logprob: -12.378666877746582
    10. ')' → logprob: -13.003666877746582

Token 1289: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2046867460012436
    2. '       ' → logprob: -1.7046867609024048
    3. '        
' → logprob: -6.329686641693115
    4. ',' → logprob: -7.454686641693115
    5. ',
' → logprob: -8.204687118530273
    6. '<|end|>' → logprob: -8.579687118530273
    7. 'possible' → logprob: -8.704687118530273
    8. '```' → logprob: -9.329687118530273
    9. ')
' → logprob: -10.329687118530273
    10. '
' → logprob: -10.704687118530273

Token 1290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27431467175483704
    2. '
' → logprob: -1.5243146419525146
    3. 'possible' → logprob: -3.8993146419525146
    4. ' possible' → logprob: -6.524314880371094
    5. '        
' → logprob: -8.524314880371094
    6. '```' → logprob: -9.274314880371094
    7. ',' → logprob: -10.649314880371094
    8. '   ' → logprob: -10.899314880371094
    9. '_possible' → logprob: -11.149314880371094
    10. '	' → logprob: -11.524314880371094

Token 1291: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.018162699416279793
    2. '       ' → logprob: -4.018162727355957
    3. ' possible' → logprob: -12.768162727355957
    4. '   ' → logprob: -12.768162727355957
    5. 'for' → logprob: -13.018162727355957
    6. 'poss' → logprob: -13.143162727355957
    7. '
' → logprob: -13.393162727355957
    8. '```' → logprob: -14.643162727355957
    9. '        
' → logprob: -15.018162727355957
    10. 'candidate' → logprob: -15.393162727355957

Token 1292: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.8550976164988242e-05
    2. '_b' → logprob: -12.125018119812012
    3. ' _' → logprob: -12.625018119812012
    4. '   ' → logprob: -12.750018119812012
    5. '_' → logprob: -12.875018119812012
    6. '_possible' → logprob: -13.625018119812012
    7. '\' → logprob: -14.500018119812012
    8. '```' → logprob: -14.750018119812012
    9. ' ' → logprob: -15.250018119812012
    10. '_dist' → logprob: -15.500018119812012

Token 1293: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.34846949577331543
    2. 'A' → logprob: -1.2234694957733154
    3. '=' → logprob: -11.348469734191895
    4. '_A' → logprob: -13.473469734191895
    5. ' B' → logprob: -13.598469734191895
    6. '_B' → logprob: -13.598469734191895
    7. 'a' → logprob: -13.848469734191895
    8. ')' → logprob: -13.848469734191895
    9. ' =' → logprob: -14.098469734191895
    10. ' ' → logprob: -14.223469734191895

Token 1294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16195999085903168
    2. ' =' → logprob: -1.9119600057601929
    3. '.append' → logprob: -6.786960124969482
    4. ':' → logprob: -7.786960124969482
    5. '=[]' → logprob: -8.786959648132324
    6. '=[]
' → logprob: -11.036959648132324
    7. '.' → logprob: -11.036959648132324
    8. '.extend' → logprob: -13.161959648132324
    9. ' ' → logprob: -14.036959648132324
    10. 'append' → logprob: -14.161959648132324

Token 1295: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.02308555133640766
    2. 'self' → logprob: -4.898085594177246
    3. 'route' → logprob: -4.898085594177246
    4. '[]' → logprob: -5.148085594177246
    5. 'list' → logprob: -6.398085594177246
    6. '[self' → logprob: -8.773085594177246
    7. '[
' → logprob: -9.273085594177246
    8. '[' → logprob: -9.398085594177246
    9. ' []
' → logprob: -10.148085594177246
    10. '[]

' → logprob: -10.523085594177246

Token 1296: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1613726168870926
    2. '       ' → logprob: -1.9113726615905762
    3. ' for' → logprob: -6.786372661590576
    4. '=' → logprob: -12.286372184753418
    5. '	for' → logprob: -13.161372184753418
    6. '   ' → logprob: -13.161372184753418
    7. ' =' → logprob: -13.161372184753418
    8. ':' → logprob: -13.536372184753418
    9. '.append' → logprob: -13.786372184753418
    10. ' ' → logprob: -13.911372184753418

Token 1297: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.3782830137643032e-05
    2. '       ' → logprob: -11.25001335144043
    3. ' for' → logprob: -14.12501335144043
    4. '	for' → logprob: -17.12501335144043
    5. '```' → logprob: -21.37501335144043
    6. 'from' → logprob: -21.62501335144043
    7. '	' → logprob: -22.12501335144043
    8. '#' → logprob: -22.62501335144043
    9. 'For' → logprob: -22.75001335144043
    10. '   ' → logprob: -23.12501335144043

Token 1298: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.248469718324486e-05
    2. ' dist' → logprob: -11.625022888183594
    3. 'bd' → logprob: -11.625022888183594
    4. 'd' → logprob: -13.125022888183594
    5. 'point' → logprob: -14.500022888183594
    6. 'pos' → logprob: -14.500022888183594
    7. 'pt' → logprob: -14.625022888183594
    8. 'rev' → logprob: -15.125022888183594
    9. 'pd' → logprob: -15.500022888183594
    10. 'db' → logprob: -16.375022888183594

Token 1299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008620131760835648
    2. 'in' → logprob: -4.758620262145996
    3. 'dist' → logprob: -13.758620262145996
    4. ' ' → logprob: -13.883620262145996
    5. '	in' → logprob: -13.883620262145996
    6. '       ' → logprob: -14.758620262145996
    7. '   ' → logprob: -15.133620262145996
    8. '_in' → logprob: -15.133620262145996
    9. 'd' → logprob: -15.258620262145996
    10. ' ' → logprob: -15.383620262145996

Token 1300: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.0019818067084997892
    2. 'self' → logprob: -6.751981735229492
    3. ' route' → logprob: -7.126981735229492
    4. '   ' → logprob: -12.876981735229492
    5. 'range' → logprob: -13.501981735229492
    6. ' self' → logprob: -14.001981735229492
    7. '       ' → logprob: -14.126981735229492
    8. '(route' → logprob: -14.376981735229492
    9. 'rule' → logprob: -14.501981735229492
    10. ' ' → logprob: -14.751981735229492

Token 1301: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.641841820150148e-05
    2. 'points' → logprob: -11.25002670288086
    3. 'dist' → logprob: -11.62502670288086
    4. '_dist' → logprob: -13.62502670288086
    5. 'Points' → logprob: -13.62502670288086
    6. '_POINTS' → logprob: -14.25002670288086
    7. '
' → logprob: -15.12502670288086
    8. '       ' → logprob: -15.62502670288086
    9. '.points' → logprob: -15.75002670288086
    10. '```' → logprob: -16.00002670288086

Token 1302: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.023303478956222534
    2. 'dist' → logprob: -3.773303508758545
    3. '
' → logprob: -10.773303031921387
    4. '   ' → logprob: -11.523303031921387
    5. '       ' → logprob: -12.523303031921387
    6. 'self' → logprob: -12.648303031921387
    7. ':
' → logprob: -12.898303031921387
    8. '        ' → logprob: -13.023303031921387
    9. '.dist' → logprob: -13.398303031921387
    10. '           ' → logprob: -13.523303031921387

Token 1303: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.04840168356895447
    2. 'ices' → logprob: -4.173401832580566
    3. 'aces' → logprob: -4.673401832580566
    4. 'ces' → logprob: -5.548401832580566
    5. 'al' → logprob: -5.798401832580566
    6. 'dist' → logprob: -5.923401832580566
    7. 'ance' → logprob: -6.173401832580566
    8. '[' → logprob: -6.423401832580566
    9. 'ages' → logprob: -6.548401832580566
    10. '   ' → logprob: -6.673401832580566

Token 1304: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13499973714351654
    2. ':' → logprob: -2.3849997520446777
    3. '           ' → logprob: -3.3849997520446777
    4. '):
' → logprob: -8.63499927520752
    5. ',' → logprob: -10.25999927520752
    6. '():
' → logprob: -11.00999927520752
    7. ':
' → logprob: -11.13499927520752
    8. '<|end|>' → logprob: -11.38499927520752
    9. '<|end|>' → logprob: -11.50999927520752
    10. '          ' → logprob: -11.63499927520752

Token 1305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001922683441080153
    2. ':
' → logprob: -6.876922607421875
    3. ':' → logprob: -7.126922607421875
    4. '       ' → logprob: -11.126922607421875
    5. '[' → logprob: -11.251922607421875
    6. ',' → logprob: -11.251922607421875
    7. '<|end|>' → logprob: -11.876922607421875
    8. '               ' → logprob: -12.251922607421875
    9. '	       ' → logprob: -12.251922607421875
    10. '<|end|>' → logprob: -12.376922607421875

Token 1306: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26057958602905273
    2. '           ' → logprob: -1.5105795860290527
    3. ' if' → logprob: -4.760579586029053
    4. '       ' → logprob: -10.510580062866211
    5. '   ' → logprob: -10.760580062866211
    6. '               ' → logprob: -13.135580062866211
    7. '          ' → logprob: -14.635580062866211
    8. '```' → logprob: -14.635580062866211
    9. '	if' → logprob: -14.760580062866211
    10. '            ' → logprob: -15.635580062866211

Token 1307: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030748939141631126
    2. ' dist' → logprob: -3.5307488441467285
    3. 'abs' → logprob: -7.0307488441467285
    4. ' abs' → logprob: -9.155749320983887
    5. '(dist' → logprob: -13.030749320983887
    6. '	dist' → logprob: -13.655749320983887
    7. 'True' → logprob: -13.905749320983887
    8. '0' → logprob: -13.905749320983887
    9. 'False' → logprob: -14.155749320983887
    10. ' ' → logprob: -14.280749320983887

Token 1308: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10278739780187607
    2. '<' → logprob: -2.352787494659424
    3. ' >' → logprob: -6.727787494659424
    4. ' <=' → logprob: -7.227787494659424
    5. '<=' → logprob: -8.102787017822266
    6. '>' → logprob: -8.727787017822266
    7. ' ' → logprob: -9.352787017822266
    8. ' >=' → logprob: -9.727787017822266
    9. '>=' → logprob: -10.852787017822266
    10. '>-' → logprob: -12.477787017822266

Token 1309: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.871008574962616
    2. '-' → logprob: -1.1210086345672607
    3. '-self' → logprob: -1.3710086345672607
    4. '-\' → logprob: -8.12100887298584
    5. ' ' → logprob: -8.24600887298584
    6. '-s' → logprob: -8.37100887298584
    7. '0' → logprob: -8.62100887298584
    8. '-d' → logprob: -8.99600887298584
    9. '-e' → logprob: -10.62100887298584
    10. '-def' → logprob: -10.87100887298584

Token 1310: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4140441635390744e-05
    2. ' self' → logprob: -11.500014305114746
    3. '1' → logprob: -13.000014305114746
    4. '0' → logprob: -13.750014305114746
    5. '=self' → logprob: -16.12501335144043
    6. ' ' → logprob: -16.37501335144043
    7. '[self' → logprob: -16.50001335144043
    8. '*self' → logprob: -16.50001335144043
    9. '+self' → logprob: -16.75001335144043
    10. '(self' → logprob: -16.75001335144043

Token 1311: '.e' (ID: 2560)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.00014299227041192353
    2. 'self' → logprob: -9.625143051147461
    3. ' eps' → logprob: -10.125143051147461
    4. '1' → logprob: -11.250143051147461
    5. '_eps' → logprob: -12.250143051147461
    6. 'epsilon' → logprob: -12.375143051147461
    7. 'esp' → logprob: -12.500143051147461
    8. 'ep' → logprob: -12.750143051147461
    9. '
' → logprob: -13.500143051147461
    10. '0' → logprob: -13.500143051147461

Token 1312: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.002807963639497757
    2. '-' → logprob: -6.127808094024658
    3. '6' → logprob: -8.0028076171875
    4. 'eps' → logprob: -8.3778076171875
    5. 'psilon' → logprob: -10.0028076171875
    6. 'p' → logprob: -12.7528076171875
    7. '5' → logprob: -12.8778076171875
    8. '1' → logprob: -13.6278076171875
    9. 's' → logprob: -14.0028076171875
    10. '+' → logprob: -14.2528076171875

Token 1313: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010401944164186716
    2. 'or' → logprob: -6.876039981842041
    3. ' ' → logprob: -12.0010404586792
    4. '<|end|>' → logprob: -14.6260404586792
    5. '	or' → logprob: -15.2510404586792
    6. '<|end|>' → logprob: -15.8760404586792
    7. '           ' → logprob: -16.126039505004883
    8. ' ' → logprob: -16.251039505004883
    9. ',' → logprob: -17.126039505004883
    10. ' and' → logprob: -17.876039505004883

Token 1314: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20142844319343567
    2. ' dist' → logprob: -1.7014284133911133
    3. '	dist' → logprob: -11.826428413391113
    4. '           ' → logprob: -12.326428413391113
    5. '               ' → logprob: -13.451428413391113
    6. '(dist' → logprob: -14.076428413391113
    7. 'd' → logprob: -15.201428413391113
    8. '            ' → logprob: -15.451428413391113
    9. '                   ' → logprob: -15.576428413391113
    10. '.dist' → logprob: -16.07642936706543

Token 1315: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5898812413215637
    2. ' >' → logprob: -0.8398812413215637
    3. 'dist' → logprob: -4.714881420135498
    4. ' dist' → logprob: -5.339881420135498
    5. ' ' → logprob: -9.46488094329834
    6. '(dist' → logprob: -13.08988094329834
    7. 'Dist' → logprob: -13.33988094329834
    8. '   ' → logprob: -14.08988094329834
    9. '	dist' → logprob: -14.08988094329834
    10. ' ' → logprob: -14.08988094329834

Token 1316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889419049024582
    2. ' self' → logprob: -2.5788941383361816
    3. '(self' → logprob: -13.45389461517334
    4. ' ' → logprob: -14.32889461517334
    5. '           ' → logprob: -14.32889461517334
    6. '=self' → logprob: -14.82889461517334
    7. '	self' → logprob: -15.32889461517334
    8. '+' → logprob: -15.70389461517334
    9. '   ' → logprob: -15.70389461517334
    10. '[self' → logprob: -15.70389461517334

Token 1317: '.L' (ID: 2024)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017036291537806392
    2. ' self' → logprob: -6.37670373916626
    3. '+' → logprob: -14.376703262329102
    4. '+self' → logprob: -15.501703262329102
    5. '	self' → logprob: -16.0017032623291
    6. '   ' → logprob: -16.3767032623291
    7. '       ' → logprob: -16.3767032623291
    8. ' ' → logprob: -16.5017032623291
    9. ' +' → logprob: -16.6267032623291
    10. '[self' → logprob: -16.8767032623291

Token 1318: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132769465446472
    2. '+' → logprob: -1.313277006149292
    3. '+self' → logprob: -11.188277244567871
    4. ' ' → logprob: -14.688277244567871
    5. '+\' → logprob: -14.813277244567871
    6. ' ' → logprob: -15.563277244567871
    7. '   ' → logprob: -15.688277244567871
    8. '+
' → logprob: -16.688276290893555
    9. ' +
' → logprob: -17.063276290893555
    10. '＋' → logprob: -17.188276290893555

Token 1319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009117019944824278
    2. ' self' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.625911712646484
    4. '1' → logprob: -16.750911712646484
    5. '0' → logprob: -16.875911712646484
    6. '=self' → logprob: -17.125911712646484
    7. '(self' → logprob: -17.125911712646484
    8. '[self' → logprob: -17.250911712646484
    9. '   ' → logprob: -18.000911712646484
    10. '	self' → logprob: -18.250911712646484

Token 1320: '.e' (ID: 2560)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.038892876356840134
    2. '_eps' → logprob: -3.288892984390259
    3. ' eps' → logprob: -8.03889274597168
    4. 'self' → logprob: -8.78889274597168
    5. 'e' → logprob: -9.03889274597168
    6. '1' → logprob: -9.03889274597168
    7. '.e' → logprob: -9.66389274597168
    8. '_e' → logprob: -10.28889274597168
    9. 'epsilon' → logprob: -11.28889274597168
    10. 'ep' → logprob: -11.78889274597168

Token 1321: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.023412249982357025
    2. '-' → logprob: -3.7734122276306152
    3. '6' → logprob: -9.023412704467773
    4. 'eps' → logprob: -10.773412704467773
    5. 'psilon' → logprob: -11.648412704467773
    6. '_ps' → logprob: -12.023412704467773
    7. 'p' → logprob: -12.148412704467773
    8. '+' → logprob: -12.898412704467773
    9. '_eps' → logprob: -14.773412704467773
    10. 'psc' → logprob: -15.148412704467773

Token 1322: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21481294929981232
    2. ':' → logprob: -1.714812994003296
    3. '               ' → logprob: -4.464812755584717
    4. '           ' → logprob: -6.339812755584717
    5. '):
' → logprob: -11.589813232421875
    6. ' or' → logprob: -11.714813232421875
    7. ':return' → logprob: -12.339813232421875
    8. '       ' → logprob: -12.964813232421875
    9. '		' → logprob: -13.214813232421875
    10. ':

' → logprob: -13.339813232421875

Token 1323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014237554743885994
    2. '           ' → logprob: -4.264237403869629
    3. ':' → logprob: -11.264237403869629
    4. ':
' → logprob: -11.264237403869629
    5. ' continue' → logprob: -11.514237403869629
    6. '              ' → logprob: -12.139237403869629
    7. '	           ' → logprob: -12.264237403869629
    8. ',' → logprob: -12.389237403869629
    9. '	       ' → logprob: -12.639237403869629
    10. '                   ' → logprob: -13.014237403869629

Token 1324: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.20656248927116394
    2. 'continue' (adapté à ' continue') → logprob: -1.7065625190734863
    3. '               ' → logprob: -5.331562519073486
    4. '	continue' → logprob: -8.706562042236328
    5. '           ' → logprob: -9.081562042236328
    6. '                   ' → logprob: -11.331562042236328
    7. '```' → logprob: -13.081562042236328
    8. '_continue' → logprob: -13.581562042236328
    9. ' ' → logprob: -13.706562042236328
    10. '   ' → logprob: -13.956562042236328

Token 1325: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024994369596242905
    2. ':
' → logprob: -6.502499580383301
    3. ',' → logprob: -8.1274995803833
    4. '               ' → logprob: -8.1274995803833
    5. ':' → logprob: -8.3774995803833
    6. '		' → logprob: -10.5024995803833
    7. '
' → logprob: -10.7524995803833
    8. ',
' → logprob: -10.8774995803833
    9. '       ' → logprob: -11.1274995803833
    10. '<|end|>' → logprob: -11.1274995803833

Token 1326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.9650025428272784e-05
    2. '               ' → logprob: -11.000040054321289
    3. '       ' → logprob: -11.625040054321289
    4. '
' → logprob: -12.250040054321289
    5. '   ' → logprob: -12.375040054321289
    6. '	       ' → logprob: -13.625040054321289
    7. '          ' → logprob: -13.750040054321289
    8. ',' → logprob: -14.500040054321289
    9. '<|end|>' → logprob: -14.625040054321289
    10. '		' → logprob: -15.000040054321289

Token 1327: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049375131726264954
    2. 'if' (adapté à ' if') → logprob: -3.049375057220459
    3. '       ' → logprob: -7.299375057220459
    4. ' if' → logprob: -9.174375534057617
    5. '   ' → logprob: -12.299375534057617
    6. '               ' → logprob: -12.924375534057617
    7. '```' → logprob: -15.674375534057617
    8. '          ' → logprob: -15.924375534057617
    9. '	if' → logprob: -15.924375534057617
    10. ' ' → logprob: -16.299375534057617

Token 1328: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4740893542766571
    2. ' abs' → logprob: -0.9740893840789795
    3. '(abs' → logprob: -11.349089622497559
    4. 'dist' → logprob: -14.974089622497559
    5. '.abs' → logprob: -16.599088668823242
    6. ' dist' → logprob: -16.724088668823242
    7. 'Abs' → logprob: -16.849088668823242
    8. '_abs' → logprob: -17.599088668823242
    9. ' ' → logprob: -17.724088668823242
    10. '```' → logprob: -17.849088668823242

Token 1329: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -2.963691804325208e-05
    2. '(' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.875029563903809
    4. 'dist' → logprob: -14.500029563903809
    5. '(distance' → logprob: -15.250029563903809
    6. '(diff' → logprob: -15.500029563903809
    7. '(abs' → logprob: -17.000030517578125
    8. '(d' → logprob: -17.625030517578125
    9. '	dist' → logprob: -17.875030517578125
    10. ' dist' → logprob: -18.500030517578125

Token 1330: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002294272184372
    2. '-' → logprob: -2.350229501724243
    3. '-dist' → logprob: -11.350229263305664
    4. '(dist' → logprob: -12.100229263305664
    5. 'dist' → logprob: -12.225229263305664
    6. ' ' → logprob: -14.975229263305664
    7. ' dist' → logprob: -16.725229263305664
    8. '–' → logprob: -17.225229263305664
    9. '(' → logprob: -17.850229263305664
    10. '<|end|>' → logprob: -18.225229263305664

Token 1331: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001328572048805654
    2. ' d' → logprob: -6.626328468322754
    3. '       ' → logprob: -14.001328468322754
    4. '   ' → logprob: -14.251328468322754
    5. '           ' → logprob: -14.876328468322754
    6. ' ' → logprob: -15.751328468322754
    7. '	d' → logprob: -15.751328468322754
    8. '  ' → logprob: -16.62632942199707
    9. '
' → logprob: -16.62632942199707
    10. '                   ' → logprob: -16.75132942199707

Token 1332: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015519981971010566
    2. 'A' → logprob: -6.501552104949951
    3. 'd' → logprob: -10.251551628112793
    4. ' B' → logprob: -11.376551628112793
    5. ' d' → logprob: -14.376551628112793
    6. ')' → logprob: -14.501551628112793
    7. '```' → logprob: -15.001551628112793
    8. ' ' → logprob: -15.814051628112793
    9. '   ' → logprob: -15.814051628112793
    10. 'b' → logprob: -15.876551628112793

Token 1333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018911674851551652
    2. ')>' → logprob: -8.625188827514648
    3. '>' → logprob: -12.125188827514648
    4. ' )' → logprob: -12.625188827514648
    5. '[' → logprob: -15.000188827514648
    6. ' >' → logprob: -15.625188827514648
    7. ')
' → logprob: -16.87518882751465
    8. '())' → logprob: -17.37518882751465
    9. '）' → logprob: -17.37518882751465
    10. '()' → logprob: -17.50018882751465

Token 1334: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25193390250205994
    2. ' >' → logprob: -1.5019339323043823
    3. ' ' → logprob: -12.626934051513672
    4. '[' → logprob: -14.751934051513672
    5. ' ' → logprob: -15.501934051513672
    6. ')>' → logprob: -15.626934051513672
    7. ')' → logprob: -15.751934051513672
    8. '()>' → logprob: -15.751934051513672
    9. '   ' → logprob: -16.251934051513672
    10. '>
' → logprob: -16.376934051513672

Token 1335: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023131117632146925
    2. ' self' → logprob: -8.375231742858887
    3. '           ' → logprob: -15.500231742858887
    4. '0' → logprob: -15.875231742858887
    5. '1' → logprob: -16.25023078918457
    6. '=self' → logprob: -17.00023078918457
    7. ' ' → logprob: -17.12523078918457
    8. '[self' → logprob: -17.25023078918457
    9. '(self' → logprob: -17.37523078918457
    10. '                   ' → logprob: -17.50023078918457

Token 1336: '.e' (ID: 2560)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6964541077613831
    2. 'eps' → logprob: -0.6964541077613831
    3. '_eps' → logprob: -6.196454048156738
    4. ' self' → logprob: -7.446454048156738
    5. 'e' → logprob: -8.446454048156738
    6. ' eps' → logprob: -8.571454048156738
    7. '1' → logprob: -9.071454048156738
    8. 'ep' → logprob: -9.946454048156738
    9. 'epsilon' → logprob: -10.196454048156738
    10. '.e' → logprob: -10.196454048156738

Token 1337: 'ps' (ID: 947)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760215520858765
    2. 'ps' → logprob: -0.8260215520858765
    3. '6' → logprob: -10.326021194458008
    4. 'eps' → logprob: -10.951021194458008
    5. 'psilon' → logprob: -11.201021194458008
    6. '+' → logprob: -11.451021194458008
    7. '_ps' → logprob: -13.326021194458008
    8. 'p' → logprob: -13.576021194458008
    9. '```' → logprob: -13.951021194458008
    10. '=' → logprob: -14.451021194458008

Token 1338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1167779415845871
    2. ':
' → logprob: -2.2417778968811035
    3. '               ' → logprob: -5.9917778968811035
    4. ' and' → logprob: -7.4917778968811035
    5. '           ' → logprob: -7.7417778968811035
    6. '):
' → logprob: -8.616778373718262
    7. 'and' → logprob: -9.116778373718262
    8. '):' → logprob: -9.241778373718262
    9. '       ' → logprob: -10.741778373718262
    10. ':

' → logprob: -11.491778373718262

Token 1339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000993272173218429
    2. ':' → logprob: -7.375993251800537
    3. ':
' → logprob: -8.500993728637695
    4. '           ' → logprob: -9.125993728637695
    5. ' and' → logprob: -10.375993728637695
    6. '              ' → logprob: -11.875993728637695
    7. ',' → logprob: -12.375993728637695
    8. '):
' → logprob: -12.625993728637695
    9. 'and' → logprob: -12.750993728637695
    10. '                ' → logprob: -13.750993728637695

Token 1340: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.01879558339715004
    2. ' possible' → logprob: -4.018795490264893
    3. '           ' → logprob: -7.393795490264893
    4. '               ' → logprob: -10.51879596710205
    5. '   ' → logprob: -13.64379596710205
    6. 'Possible' → logprob: -14.14379596710205
    7. '                   ' → logprob: -14.89379596710205
    8. ' posible' → logprob: -14.89379596710205
    9. '```' → logprob: -15.51879596710205
    10. '       ' → logprob: -15.51879596710205

Token 1341: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.4391956685576588e-05
    2. '_b' → logprob: -11.250024795532227
    3. 'd' → logprob: -11.875024795532227
    4. 'B' → logprob: -12.875024795532227
    5. '_dist' → logprob: -13.875024795532227
    6. 'D' → logprob: -14.750024795532227
    7. '_D' → logprob: -16.000024795532227
    8. '   ' → logprob: -16.375024795532227
    9. '```' → logprob: -16.500024795532227
    10. '_B' → logprob: -17.125024795532227

Token 1342: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.061054359131958e-06
    2. 'ist' → logprob: -12.875007629394531
    3. 'istance' → logprob: -13.125007629394531
    4. 'A' → logprob: -13.500007629394531
    5. 'ista' → logprob: -14.375007629394531
    6. ' B' → logprob: -14.875007629394531
    7. 'b' → logprob: -15.375007629394531
    8. '```' → logprob: -16.00000762939453
    9. '_dist' → logprob: -16.25000762939453
    10. '.append' → logprob: -16.25000762939453

Token 1343: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.040457421680912e-05
    2. '.' → logprob: -9.750070571899414
    3. '           ' → logprob: -11.375070571899414
    4. ' .' → logprob: -15.250070571899414
    5. '.add' → logprob: -16.250070571899414
    6. '               ' → logprob: -16.375070571899414
    7. 'append' → logprob: -16.625070571899414
    8. '.extend' → logprob: -17.750070571899414
    9. '       ' → logprob: -18.000070571899414
    10. '.Append' → logprob: -18.625070571899414

Token 1344: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.3868780732154846
    2. 'dist' → logprob: -1.1368780136108398
    3. ' dist' → logprob: -11.88687801361084
    4. '	dist' → logprob: -15.88687801361084
    5. '.dist' → logprob: -17.761878967285156
    6. '_dist' → logprob: -17.761878967285156
    7. '/dist' → logprob: -18.761878967285156
    8. 'Dist' → logprob: -19.511878967285156
    9. '(' → logprob: -19.886878967285156
    10. '-dist' → logprob: -20.386878967285156

Token 1345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05563918128609657
    2. ')
' → logprob: -2.9306392669677734
    3. '           ' → logprob: -7.305639266967773
    4. '       ' → logprob: -9.930639266967773
    5. '               ' → logprob: -11.055639266967773
    6. ')
' → logprob: -11.930639266967773
    7. ')

' → logprob: -12.680639266967773
    8. ' )' → logprob: -12.930639266967773
    9. '+' → logprob: -13.680639266967773
    10. ' )
' → logprob: -14.180639266967773

Token 1346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020854277536273003
    2. '
' → logprob: -6.627085208892822
    3. '<|end|>' → logprob: -8.62708568572998
    4. ')' → logprob: -9.00208568572998
    5. ',' → logprob: -9.12708568572998
    6. '	' → logprob: -9.37708568572998
    7. '```' → logprob: -9.87708568572998
    8. '[' → logprob: -9.87708568572998
    9. '        
' → logprob: -10.50208568572998
    10. '           ' → logprob: -10.75208568572998

Token 1347: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.0006494098342955112
    2. ' possible' → logprob: -7.500649452209473
    3. '       ' → logprob: -9.250649452209473
    4. '```' → logprob: -15.625649452209473
    5. 'Possible' → logprob: -16.625648498535156
    6. '
' → logprob: -17.375648498535156
    7. '   ' → logprob: -17.750648498535156
    8. '_possible' → logprob: -17.750648498535156
    9. '           ' → logprob: -18.000648498535156
    10. 'poss' → logprob: -18.500648498535156

Token 1348: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0002637199067976326
    2. '_b' → logprob: -8.625264167785645
    3. 'D' → logprob: -10.125264167785645
    4. 'B' → logprob: -10.750264167785645
    5. '_D' → logprob: -11.375264167785645
    6. '_B' → logprob: -12.375264167785645
    7. '   ' → logprob: -12.750264167785645
    8. 'd' → logprob: -13.375264167785645
    9. '_possible' → logprob: -14.250264167785645
    10. ' ' → logprob: -14.750264167785645

Token 1349: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.088346359931165e-07
    2. ' B' → logprob: -15.250000953674316
    3. 'A' → logprob: -15.625000953674316
    4. 'b' → logprob: -15.750000953674316
    5. 'D' → logprob: -16.125
    6. '_B' → logprob: -16.375
    7. '```' → logprob: -17.375
    8. '_' → logprob: -17.5625
    9. ')' → logprob: -17.75
    10. '   ' → logprob: -17.875

Token 1350: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011801084037870169
    2. '.' → logprob: -6.751180171966553
    3. ' .' → logprob: -12.376179695129395
    4. '.app' → logprob: -12.751179695129395
    5. 'append' → logprob: -13.251179695129395
    6. '.ap' → logprob: -14.751179695129395
    7. '.extend' → logprob: -15.501179695129395
    8. '.Append' → logprob: -16.25118064880371
    9. '.setdefault' → logprob: -16.75118064880371
    10. '_append' → logprob: -16.87618064880371

Token 1351: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.875001907348633
    3. 'd' → logprob: -14.125001907348633
    4. '(
' → logprob: -16.625001907348633
    5. ' (' → logprob: -19.000001907348633
    6. '(dist' → logprob: -21.000001907348633
    7. '(b' → logprob: -21.250001907348633
    8. '	d' → logprob: -21.625001907348633
    9. '   ' → logprob: -23.500001907348633
    10. '(
' → logprob: -23.875001907348633

Token 1352: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.650518920039758e-06
    2. ' B' → logprob: -12.750003814697266
    3. 'b' → logprob: -15.125003814697266
    4. 'd' → logprob: -15.375003814697266
    5. ')' → logprob: -16.625003814697266
    6. '`' → logprob: -17.125003814697266
    7. '```' → logprob: -17.625003814697266
    8. ' ' → logprob: -17.875003814697266
    9. '_B' → logprob: -18.250003814697266
    10. '  ' → logprob: -18.375003814697266

Token 1353: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013250234769657254
    2. ')
' → logprob: -9.12513256072998
    3. '       ' → logprob: -11.00013256072998
    4. ' )' → logprob: -12.12513256072998
    5. '   ' → logprob: -14.12513256072998
    6. ')

' → logprob: -15.12513256072998
    7. ')
' → logprob: -16.375131607055664
    8. ']' → logprob: -17.000131607055664
    9. ')`' → logprob: -17.000131607055664
    10. '))' → logprob: -17.375131607055664

Token 1354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037954463623464108
    2. 'for' → logprob: -6.378795623779297
    3. '        
' → logprob: -7.003795623779297
    4. ' for' → logprob: -7.503795623779297
    5. '
' → logprob: -8.753795623779297
    6. '```' → logprob: -9.003795623779297
    7. '<|end|>' → logprob: -9.253795623779297
    8. '   ' → logprob: -9.628795623779297
    9. ',' → logprob: -10.003795623779297
    10. '           ' → logprob: -10.878795623779297

Token 1355: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19059519469738007
    2. 'for' → logprob: -1.8155951499938965
    3. 'result' → logprob: -5.4405951499938965
    4. 'next' → logprob: -5.8155951499938965
    5. ' for' → logprob: -6.5655951499938965
    6. 'res' → logprob: -7.0655951499938965
    7. 'results' → logprob: -7.3155951499938965
    8. 'positions' → logprob: -8.315595626831055
    9. '```' → logprob: -9.440595626831055
    10. 'possible' → logprob: -9.940595626831055

Token 1356: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002511808415874839
    2. 'result' → logprob: -6.627511978149414
    3. '       ' → logprob: -7.377511978149414
    4. 'results' → logprob: -8.002511978149414
    5. 'next' → logprob: -8.877511978149414
    6. 'res' → logprob: -10.627511978149414
    7. ' for' → logprob: -10.752511978149414
    8. 'moves' → logprob: -10.752511978149414
    9. 'c' → logprob: -11.502511978149414
    10. 'possible' → logprob: -13.127511978149414

Token 1357: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36931121349334717
    2. ' for' → logprob: -2.2443113327026367
    3. 'next' → logprob: -2.7443113327026367
    4. ' next' → logprob: -3.1193113327026367
    5. 'result' → logprob: -3.2443113327026367
    6. '[]' → logprob: -3.7443113327026367
    7. 'pairs' → logprob: -4.494311332702637
    8. 'positions' → logprob: -4.994311332702637
    9. 'new' → logprob: -5.619311332702637
    10. 'moves' → logprob: -6.119311332702637

Token 1358: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012392755597829819
    2. 'for' → logprob: -7.50123929977417
    3. ' for' → logprob: -8.001238822937012
    4. '
' → logprob: -8.501238822937012
    5. '        
' → logprob: -9.751238822937012
    6. '```' → logprob: -10.126238822937012
    7. ',' → logprob: -10.376238822937012
    8. '           ' → logprob: -13.001238822937012
    9. '<|end|>' → logprob: -13.001238822937012
    10. '   ' → logprob: -13.126238822937012

Token 1359: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.3224945068359375
    2. 'abs' → logprob: -1.6974945068359375
    3. 'for' → logprob: -2.9474945068359375
    4. 'd' → logprob: -4.4474945068359375
    5. 'self' → logprob: -4.4474945068359375
    6. ' alt' → logprob: -4.8224945068359375
    7. 'any' → logprob: -6.5724945068359375
    8. '(' → logprob: -6.8224945068359375
    9. ' for' → logprob: -6.8224945068359375
    10. ' abs' → logprob: -6.8224945068359375

Token 1360: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.18408377468585968
    2. 'itudes' → logprob: -1.8090838193893433
    3. 'A' → logprob: -5.559083938598633
    4. 'it' → logprob: -8.309083938598633
    5. 'i' → logprob: -10.434083938598633
    6. '_' → logprob: -10.434083938598633
    7. 'ude' → logprob: -10.684083938598633
    8. '=' → logprob: -10.809083938598633
    9. '_equal' → logprob: -10.934083938598633
    10. 'itud' → logprob: -11.434083938598633

Token 1361: ' match' (ID: 3981)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.2749505341053009
    2. '_are' → logprob: -1.7749505043029785
    3. 'are' → logprob: -3.5249505043029785
    4. ' are' → logprob: -4.5249505043029785
    5. '       ' → logprob: -4.6499505043029785
    6. 'equal' → logprob: -5.2749505043029785
    7. 'match' → logprob: -5.3999505043029785
    8. 'at' → logprob: -5.7749505043029785
    9. 'A' → logprob: -5.8999505043029785
    10. ' at' → logprob: -6.5249505043029785

Token 1362: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006237930152565241
    2. '
' → logprob: -5.256237983703613
    3. 'for' → logprob: -7.881237983703613
    4. ' for' → logprob: -8.006237983703613
    5. ',' → logprob: -9.006237983703613
    6. '        
' → logprob: -9.006237983703613
    7. '<|end|>' → logprob: -11.506237983703613
    8. '   ' → logprob: -12.256237983703613
    9. '```' → logprob: -12.631237983703613
    10. '	' → logprob: -12.631237983703613

Token 1363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6060808522743173e-05
    2. 'for' → logprob: -10.750025749206543
    3. ' for' → logprob: -12.625025749206543
    4. '
' → logprob: -14.750025749206543
    5. '           ' → logprob: -15.000025749206543
    6. '        
' → logprob: -15.750025749206543
    7. '```' → logprob: -15.750025749206543
    8. '	' → logprob: -16.12502670288086
    9. '   ' → logprob: -16.50002670288086
    10. ',' → logprob: -16.75002670288086

Token 1364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5772512555122375
    2. '       ' → logprob: -0.8272512555122375
    3. ' for' → logprob: -6.702251434326172
    4. 'result' → logprob: -10.202251434326172
    5. 'pairs' → logprob: -10.202251434326172
    6. 'results' → logprob: -12.577251434326172
    7. '	for' → logprob: -13.577251434326172
    8. 'next' → logprob: -13.577251434326172
    9. '   ' → logprob: -13.827251434326172
    10. '```' → logprob: -14.077251434326172

Token 1365: ' nd' (ID: 5914)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05724726617336273
    2. 'da' → logprob: -3.4322471618652344
    3. ' d' → logprob: -4.057247161865234
    4. 'dist' → logprob: -5.557247161865234
    5. ' da' → logprob: -6.432247161865234
    6. 'next' → logprob: -8.807247161865234
    7. ' dist' → logprob: -8.932247161865234
    8. 'a' → logprob: -9.057247161865234
    9. 'new' → logprob: -9.807247161865234
    10. ' next' → logprob: -10.807247161865234

Token 1366: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5213274309644476e-05
    2. 'a' → logprob: -11.125015258789062
    3. '_a' → logprob: -15.875015258789062
    4. 'i' → logprob: -16.500015258789062
    5. '_A' → logprob: -17.125015258789062
    6. 'istance' → logprob: -17.250015258789062
    7. 'ist' → logprob: -17.250015258789062
    8. 'x' → logprob: -17.750015258789062
    9. 'e' → logprob: -18.375015258789062
    10. ' A' → logprob: -18.500015258789062

Token 1367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07378622144460678
    2. 'in' → logprob: -2.8237862586975098
    3. ',' → logprob: -4.44878625869751
    4. ' ,' → logprob: -10.573785781860352
    5. '_in' → logprob: -11.323785781860352
    6. ',in' → logprob: -11.698785781860352
    7. ' ' → logprob: -12.323785781860352
    8. '	in' → logprob: -12.698785781860352
    9. '   ' → logprob: -13.573785781860352
    10. '  ' → logprob: -15.448785781860352

Token 1368: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.00033581978641450405
    2. ' possible' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. 'poss' → logprob: -16.625335693359375
    5. '_possible' → logprob: -17.375335693359375
    6. 'pos' → logprob: -17.625335693359375
    7. ' ' → logprob: -18.000335693359375
    8. 'next' → logprob: -18.250335693359375
    9. ' posible' → logprob: -18.250335693359375
    10. '
' → logprob: -18.375335693359375

Token 1369: '_d' (ID: 1565)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1616760790348053
    2. '_d' → logprob: -1.911676049232483
    3. 'd' → logprob: -6.786675930023193
    4. 'D' → logprob: -8.411676406860352
    5. '_A' → logprob: -10.286676406860352
    6. '   ' → logprob: -10.786676406860352
    7. ' A' → logprob: -11.536676406860352
    8. '       ' → logprob: -11.911676406860352
    9. '
' → logprob: -12.036676406860352
    10. ')' → logprob: -12.161676406860352

Token 1370: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.246537173457909e-06
    2. 'a' → logprob: -13.250003814697266
    3. 'А' → logprob: -15.125003814697266
    4. ' A' → logprob: -15.500003814697266
    5. 'B' → logprob: -15.562503814697266
    6. '_A' → logprob: -15.562503814697266
    7. '[' → logprob: -15.812503814697266
    8. '
' → logprob: -15.875003814697266
    9. '```' → logprob: -16.000003814697266
    10. 'float' → logprob: -16.437503814697266

Token 1371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1884680539369583
    2. ':
' → logprob: -1.813468098640442
    3. '           ' → logprob: -5.063467979431152
    4. '       ' → logprob: -6.563467979431152
    5. ',' → logprob: -7.813467979431152
    6. '   ' → logprob: -8.313467979431152
    7. ' in' → logprob: -8.688467979431152
    8. '):
' → logprob: -10.313467979431152
    9. '               ' → logprob: -10.938467979431152
    10. ' :' → logprob: -11.688467979431152

Token 1372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004965716507285833
    2. ' for' → logprob: -5.504965782165527
    3. '       ' → logprob: -7.754965782165527
    4. ',' → logprob: -8.379965782165527
    5. '<|end|>' → logprob: -9.504965782165527
    6. '               ' → logprob: -10.504965782165527
    7. ' and' → logprob: -10.504965782165527
    8. '   ' → logprob: -10.629965782165527
    9. 'for' → logprob: -10.754965782165527
    10. ' ' → logprob: -11.754965782165527

Token 1373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11313416063785553
    2. '           ' → logprob: -2.3631341457366943
    3. '               ' → logprob: -4.738134384155273
    4. ' for' → logprob: -6.363134384155273
    5. 'if' → logprob: -6.488134384155273
    6. 'alt' → logprob: -7.238134384155273
    7. '   ' → logprob: -9.738134384155273
    8. '       ' → logprob: -10.113134384155273
    9. '	for' → logprob: -12.238134384155273
    10. '                   ' → logprob: -12.488134384155273

Token 1374: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00020509003661572933
    2. ' nd' → logprob: -8.500205039978027
    3. 'nb' → logprob: -14.250205039978027
    4. '           ' → logprob: -14.500205039978027
    5. '   ' → logprob: -15.500205039978027
    6. '_nd' → logprob: -16.625205993652344
    7. '               ' → logprob: -16.750205993652344
    8. '                   ' → logprob: -17.250205993652344
    9. '       ' → logprob: -17.250205993652344
    10. 'ndl' → logprob: -17.375205993652344

Token 1375: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.6060808522743173e-05
    2. 'nd' → logprob: -10.875025749206543
    3. 'd' → logprob: -12.000025749206543
    4. ' nd' → logprob: -14.250025749206543
    5. '(nd' → logprob: -16.12502670288086
    6. 'A' → logprob: -16.75002670288086
    7. 'n' → logprob: -16.75002670288086
    8. ' B' → logprob: -16.87502670288086
    9. '   ' → logprob: -17.37502670288086
    10. '
' → logprob: -17.75002670288086

Token 1376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005247395019978285
    2. 'in' → logprob: -5.255247592926025
    3. '	in' → logprob: -11.380247116088867
    4. ' ' → logprob: -13.255247116088867
    5. '_in' → logprob: -15.630247116088867
    6. ' ' → logprob: -16.005247116088867
    7. 'In' → logprob: -17.255247116088867
    8. ',' → logprob: -17.630247116088867
    9. '    ' → logprob: -18.005247116088867
    10. '<|end|>' → logprob: -18.005247116088867

Token 1377: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0019431571708992124
    2. ' possible' → logprob: -6.251943111419678
    3. 'route' → logprob: -11.251943588256836
    4. 'poss' → logprob: -14.751943588256836
    5. ' route' → logprob: -14.876943588256836
    6. '[' → logprob: -15.376943588256836
    7. '   ' → logprob: -15.376943588256836
    8. 'self' → logprob: -15.876943588256836
    9. '_possible' → logprob: -16.251943588256836
    10. '       ' → logprob: -16.376943588256836

Token 1378: '_d' (ID: 1565)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.3856492842023727e-06
    2. '_d' → logprob: -14.375000953674316
    3. 'd' → logprob: -15.500000953674316
    4. '_b' → logprob: -16.125001907348633
    5. 'D' → logprob: -16.375001907348633
    6. '_B' → logprob: -16.375001907348633
    7. 'A' → logprob: -16.500001907348633
    8. 'b' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.500001907348633

Token 1379: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. 'A' → logprob: -16.625
    3. 'Б' → logprob: -16.625
    4. '_B' → logprob: -17.5
    5. 'b' → logprob: -17.75
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -18.5
    8. ' B' → logprob: -18.5
    9. 'D' → logprob: -19.0
    10. ' ' → logprob: -19.0

Token 1380: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18102730810642242
    2. ':' → logprob: -2.681027412414551
    3. ':
' → logprob: -2.681027412414551
    4. '           ' → logprob: -3.681027412414551
    5. ',' → logprob: -6.431027412414551
    6. ' if' → logprob: -7.431027412414551
    7. ' and' → logprob: -8.30602741241455
    8. '<|end|>' → logprob: -8.55602741241455
    9. '                       ' → logprob: -9.43102741241455
    10. '       ' → logprob: -9.68102741241455

Token 1381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.822646693966817e-06
    2. '           ' → logprob: -13.000007629394531
    3. ' if' → logprob: -14.000007629394531
    4. '                ' → logprob: -14.000007629394531
    5. '                   ' → logprob: -14.000007629394531
    6. '              ' → logprob: -14.000007629394531
    7. '	           ' → logprob: -14.000007629394531
    8. '<|end|>' → logprob: -15.000007629394531
    9. '                
' → logprob: -15.500007629394531
    10. '		       ' → logprob: -15.500007629394531

Token 1382: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9697279930114746
    2. '                   ' → logprob: -0.9697279930114746
    3. '               ' → logprob: -1.4697279930114746
    4. ' if' → logprob: -4.594727993011475
    5. '   ' → logprob: -6.844727993011475
    6. '           ' → logprob: -8.344728469848633
    7. '
' → logprob: -9.219728469848633
    8. '                       ' → logprob: -10.219728469848633
    9. '                ' → logprob: -11.094728469848633
    10. 'alt' → logprob: -11.469728469848633

Token 1383: ' abs' (ID: 8443)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7086517214775085
    2. 'self' → logprob: -0.7086517214775085
    3. ' abs' → logprob: -4.458651542663574
    4. 'abs' → logprob: -5.583651542663574
    5. ' math' → logprob: -11.083651542663574
    6. '(self' → logprob: -11.958651542663574
    7. '               ' → logprob: -12.333651542663574
    8. '	self' → logprob: -12.458651542663574
    9. 'math' → logprob: -12.458651542663574
    10. '   ' → logprob: -12.708651542663574

Token 1384: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.0037195575423538685
    2. '(' → logprob: -5.628719329833984
    3. '(self' → logprob: -9.628719329833984
    4. '((' → logprob: -11.378719329833984
    5. '(n' → logprob: -11.503719329833984
    6. '(abs' → logprob: -12.003719329833984
    7. 'nd' → logprob: -12.128719329833984
    8. '(
' → logprob: -13.003719329833984
    9. '(round' → logprob: -13.003719329833984
    10. '(d' → logprob: -13.378719329833984

Token 1385: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017745461082085967
    2. 'B' → logprob: -6.376774311065674
    3. '(nd' → logprob: -9.876774787902832
    4. 'nd' → logprob: -11.626774787902832
    5. '-' → logprob: -12.751774787902832
    6. ' -' → logprob: -13.251774787902832
    7. 'd' → logprob: -13.251774787902832
    8. ' nd' → logprob: -13.876774787902832
    9. ' A' → logprob: -14.251774787902832
    10. '-n' → logprob: -14.751774787902832

Token 1386: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14271710813045502
    2. '-' → logprob: -2.017717123031616
    3. ' ' → logprob: -10.392717361450195
    4. '   ' → logprob: -12.392717361450195
    5. '  ' → logprob: -13.267717361450195
    6. ' -
' → logprob: -13.267717361450195
    7. '-
' → logprob: -14.392717361450195
    8. '+' → logprob: -14.642717361450195
    9. ' ' → logprob: -14.767717361450195
    10. '       ' → logprob: -15.142717361450195

Token 1387: ' d' (ID: 272)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3523600101470947
    2. '(self' → logprob: -1.8523600101470947
    3. 'self' → logprob: -2.8523600101470947
    4. '(' → logprob: -3.2273600101470947
    5. '(nd' → logprob: -3.3523600101470947
    6. '0' → logprob: -6.102359771728516
    7. 'd' → logprob: -6.102359771728516
    8. ' (' → logprob: -7.477359771728516
    9. '(L' → logprob: -7.602359771728516
    10. '(N' → logprob: -8.102359771728516

Token 1388: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0036076747346669436
    2. 'A' → logprob: -5.628607749938965
    3. ' B' → logprob: -13.128607749938965
    4. ')' → logprob: -13.628607749938965
    5. 'd' → logprob: -13.628607749938965
    6. '   ' → logprob: -14.378607749938965
    7. 'nd' → logprob: -14.503607749938965
    8. 'a' → logprob: -15.753607749938965
    9. '```' → logprob: -15.816107749938965
    10. '	B' → logprob: -15.878607749938965

Token 1389: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005364783573895693
    2. ')<=' → logprob: -5.380364894866943
    3. ' )' → logprob: -7.755364894866943
    4. ')>' → logprob: -8.255364418029785
    5. ')>=' → logprob: -10.755364418029785
    6. ')<' → logprob: -11.005364418029785
    7. '<=' → logprob: -12.255364418029785
    8. ')==' → logprob: -12.255364418029785
    9. ' <=' → logprob: -13.255364418029785
    10. '[' → logprob: -13.630364418029785

Token 1390: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5949946641921997
    2. '<=' → logprob: -0.8449946641921997
    3. ')' → logprob: -4.21999454498291
    4. ')<=' → logprob: -6.09499454498291
    5. '>' → logprob: -6.84499454498291
    6. ' >' → logprob: -8.59499454498291
    7. '```' → logprob: -8.71999454498291
    8. '[' → logprob: -9.34499454498291
    9. '           ' → logprob: -9.46999454498291
    10. '               ' → logprob: -10.09499454498291

Token 1391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25228872895240784
    2. ' self' → logprob: -1.6272886991500854
    3. '1' → logprob: -4.127288818359375
    4. '=' → logprob: -5.127288818359375
    5. ' ' → logprob: -6.002288818359375
    6. '=self' → logprob: -6.252288818359375
    7. ' =' → logprob: -10.627288818359375
    8. '0' → logprob: -12.002288818359375
    9. '
' → logprob: -12.002288818359375
    10. '+' → logprob: -12.127288818359375

Token 1392: '.e' (ID: 2560)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3323209881782532
    2. ' self' → logprob: -1.7073209285736084
    3. '1' → logprob: -2.3323209285736084
    4. ' ' → logprob: -6.2073211669921875
    5. '=self' → logprob: -7.3323211669921875
    6. '=' → logprob: -7.4573211669921875
    7. ' +' → logprob: -7.8323211669921875
    8. '+self' → logprob: -8.707321166992188
    9. ' =' → logprob: -9.207321166992188
    10. '+' → logprob: -9.332321166992188

Token 1393: 'ps' (ID: 947)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002100298646837473
    2. 'ps' → logprob: -6.377100467681885
    3. 'eps' → logprob: -8.252099990844727
    4. 'p' → logprob: -10.252099990844727
    5. 'psilon' → logprob: -10.502099990844727
    6. '6' → logprob: -10.752099990844727
    7. '9' → logprob: -11.627099990844727
    8. '-e' → logprob: -12.002099990844727
    9. '_' → logprob: -12.127099990844727
    10. '```' → logprob: -12.252099990844727

Token 1394: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1136721670627594
    2. ' and' → logprob: -2.6136722564697266
    3. 'or' → logprob: -3.7386722564697266
    4. 'and' → logprob: -4.613672256469727
    5. '               ' → logprob: -8.113672256469727
    6. '           ' → logprob: -9.613672256469727
    7. '                   ' → logprob: -10.113672256469727
    8. ' ' → logprob: -10.863672256469727
    9. '                       ' → logprob: -11.863672256469727
    10. '              ' → logprob: -11.863672256469727

Token 1395: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0009292102768085897
    2. ' abs' → logprob: -7.000929355621338
    3. '           ' → logprob: -11.62592887878418
    4. '               ' → logprob: -12.12592887878418
    5. '       ' → logprob: -13.62592887878418
    6. '   ' → logprob: -14.50092887878418
    7. '                   ' → logprob: -15.00092887878418
    8. '              ' → logprob: -15.37592887878418
    9. '          ' → logprob: -15.62592887878418
    10. ' ' → logprob: -15.75092887878418

Token 1396: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'nd' → logprob: -17.375
    4. ' (' → logprob: -18.125
    5. '(nn' → logprob: -18.375
    6. '(n' → logprob: -18.375
    7. '(nt' → logprob: -19.25
    8. '(nb' → logprob: -19.625
    9. '(nx' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 1397: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.650518920039758e-06
    2. 'A' → logprob: -13.250003814697266
    3. ' B' → logprob: -13.750003814697266
    4. 'd' → logprob: -15.625003814697266
    5. 'b' → logprob: -15.937503814697266
    6. '   ' → logprob: -16.312503814697266
    7. '  ' → logprob: -16.750003814697266
    8. 'nd' → logprob: -17.000003814697266
    9. '_B' → logprob: -17.375003814697266
    10. '(' → logprob: -17.750003814697266

Token 1398: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11283241957426071
    2. '-' → logprob: -2.2378323078155518
    3. '<|end|>' → logprob: -11.862832069396973
    4. ' ' → logprob: -12.987832069396973
    5. '<|end|>' → logprob: -15.237832069396973
    6. '-d' → logprob: -15.862832069396973
    7. ' -
' → logprob: -16.86283302307129
    8. '-token' → logprob: -17.23783302307129
    9. ' to' → logprob: -17.36283302307129
    10. ',' → logprob: -17.61283302307129

Token 1399: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009120595059357584
    2. ' d' → logprob: -7.000912189483643
    3. ' ' → logprob: -15.625911712646484
    4. '   ' → logprob: -16.000911712646484
    5. ')d' → logprob: -16.625911712646484
    6. ')' → logprob: -16.875911712646484
    7. '
' → logprob: -17.125911712646484
    8. '...' → logprob: -17.375911712646484
    9. '	d' → logprob: -17.500911712646484
    10. '  ' → logprob: -17.625911712646484

Token 1400: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -14.12500286102295
    3. ' B' → logprob: -14.37500286102295
    4. 'A' → logprob: -14.50000286102295
    5. '```' → logprob: -15.37500286102295
    6. '  ' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '#' → logprob: -17.375001907348633
    9. 'f' → logprob: -17.500001907348633
    10. '=' → logprob: -17.875001907348633

Token 1401: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010342398309148848
    2. ')<' → logprob: -9.500102996826172
    3. ')>' → logprob: -11.000102996826172
    4. ' )' → logprob: -12.000102996826172
    5. ')>=' → logprob: -12.375102996826172
    6. '   ' → logprob: -14.625102996826172
    7. '       ' → logprob: -16.000102996826172
    8. '")' → logprob: -16.000102996826172
    9. ')
' → logprob: -16.500102996826172
    10. '）' → logprob: -16.500102996826172

Token 1402: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9421713352203369
    2. '>=' → logprob: -1.317171335220337
    3. '>' → logprob: -1.442171335220337
    4. ' <' → logprob: -2.817171335220337
    5. ' >=' → logprob: -3.442171335220337
    6. ' >' → logprob: -4.317171096801758
    7. ')>=' → logprob: -8.692171096801758
    8. '   ' → logprob: -9.192171096801758
    9. ')' → logprob: -9.567171096801758
    10. '><' → logprob: -9.692171096801758

Token 1403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '1' → logprob: -16.500709533691406
    4. '   ' → logprob: -16.750709533691406
    5. ' ' → logprob: -17.000709533691406
    6. '           ' → logprob: -17.625709533691406
    7. '       ' → logprob: -17.875709533691406
    8. '(self' → logprob: -18.375709533691406
    9. '0' → logprob: -18.500709533691406
    10. '
' → logprob: -18.500709533691406

Token 1404: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.004551050253212452
    2. 'eps' → logprob: -5.504550933837891
    3. 'e' → logprob: -8.25455093383789
    4. '_eps' → logprob: -9.00455093383789
    5. '_e' → logprob: -10.87955093383789
    6. 'self' → logprob: -11.12955093383789
    7. ' eps' → logprob: -11.50455093383789
    8. '.ep' → logprob: -11.62955093383789
    9. '1' → logprob: -11.87955093383789
    10. '.' → logprob: -12.00455093383789

Token 1405: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0013084522215649486
    2. '-' → logprob: -6.876308441162109
    3. '_ps' → logprob: -9.37630844116211
    4. 's' → logprob: -10.00130844116211
    5. 'eps' → logprob: -10.12630844116211
    6. 'p' → logprob: -10.50130844116211
    7. 'psilon' → logprob: -10.62630844116211
    8. 'sp' → logprob: -11.75130844116211
    9. '```' → logprob: -11.75130844116211
    10. '+' → logprob: -12.12630844116211

Token 1406: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20167022943496704
    2. ':
' → logprob: -2.2016701698303223
    3. ' and' → logprob: -3.4516701698303223
    4. '                   ' → logprob: -3.7016701698303223
    5. 'and' → logprob: -5.201670169830322
    6. '               ' → logprob: -5.201670169830322
    7. '                       ' → logprob: -6.076670169830322
    8. ' or' → logprob: -6.826670169830322
    9. '                           ' → logprob: -7.826670169830322
    10. '           ' → logprob: -8.20167064666748

Token 1407: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003977800370194018
    2. '                       ' → logprob: -8.750397682189941
    3. ':' → logprob: -9.000397682189941
    4. '                    ' → logprob: -10.500397682189941
    5. ' and' → logprob: -11.000397682189941
    6. '               ' → logprob: -11.375397682189941
    7. '                  ' → logprob: -11.750397682189941
    8. '		           ' → logprob: -11.750397682189941
    9. '                    
' → logprob: -12.000397682189941
    10. ':
' → logprob: -12.000397682189941

Token 1408: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014830971136689186
    2. 'continue' (adapté à ' continue') → logprob: -4.389831066131592
    3. '                       ' → logprob: -6.264831066131592
    4. ' continue' → logprob: -8.139830589294434
    5. '               ' → logprob: -9.764830589294434
    6. '
' → logprob: -10.889830589294434
    7. '		           ' → logprob: -11.639830589294434
    8. '           ' → logprob: -12.014830589294434
    9. '                    
' → logprob: -12.139830589294434
    10. '                           ' → logprob: -12.389830589294434

Token 1409: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003017385315615684
    2. '                
' → logprob: -8.750301361083984
    3. '                   ' → logprob: -9.750301361083984
    4. '<|end|>' → logprob: -10.750301361083984
    5. '
' → logprob: -11.000301361083984
    6. '                    
' → logprob: -11.125301361083984
    7. '                ' → logprob: -11.500301361083984
    8. '                        
' → logprob: -12.125301361083984
    9. '              ' → logprob: -12.875301361083984
    10. ',' → logprob: -13.000301361083984

Token 1410: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029645077884197235
    2. '
' → logprob: -5.877964496612549
    3. '                
' → logprob: -9.377964973449707
    4. '                   ' → logprob: -10.127964973449707
    5. '                    
' → logprob: -11.627964973449707
    6. '           ' → logprob: -12.502964973449707
    7. '                ' → logprob: -12.627964973449707
    8. '              ' → logprob: -12.877964973449707
    9. ',' → logprob: -13.002964973449707
    10. '
' → logprob: -13.002964973449707

Token 1411: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5446709394454956
    2. '#' → logprob: -1.0446709394454956
    3. 'continue' → logprob: -2.794671058654785
    4. '                   ' → logprob: -5.419671058654785
    5. ' #' → logprob: -7.044671058654785
    6. '           ' → logprob: -7.294671058654785
    7. '                       ' → logprob: -7.669671058654785
    8. ' continue' → logprob: -8.544671058654785
    9. '       ' → logprob: -9.169671058654785
    10. '   ' → logprob: -9.794671058654785

Token 1412: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.256334695033729e-05
    2. '
' → logprob: -10.250082969665527
    3. 'token' → logprob: -11.000082969665527
    4. 'next' → logprob: -11.625082969665527
    5. '                   ' → logprob: -12.250082969665527
    6. ' ' → logprob: -13.125082969665527
    7. '                
' → logprob: -13.250082969665527
    8. '			' → logprob: -13.500082969665527
    9. '           ' → logprob: -13.625082969665527
    10. 'continue' → logprob: -13.625082969665527

Token 1413: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6968462467193604
    2. ' move' → logprob: -1.5718462467193604
    3. ' movement' → logprob: -1.9468462467193604
    4. 'movement' → logprob: -2.9468462467193604
    5. 'op' → logprob: -3.5718462467193604
    6. 'change' → logprob: -3.9468462467193604
    7. 'moves' → logprob: -4.196846008300781
    8. ' moves' → logprob: -4.821846008300781
    9. ' change' → logprob: -5.446846008300781
    10. '_move' → logprob: -5.446846008300781

Token 1414: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005236041033640504
    2. '                
' → logprob: -8.375523567199707
    3. '<|end|>' → logprob: -9.000523567199707
    4. ',' → logprob: -9.875523567199707
    5. ',
' → logprob: -10.625523567199707
    6. '			' → logprob: -10.625523567199707
    7. '
' → logprob: -11.125523567199707
    8. ')' → logprob: -11.500523567199707
    9. '                    
' → logprob: -12.000523567199707
    10. '                        
' → logprob: -12.250523567199707

Token 1415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.2855416066013277e-05
    2. '                   ' → logprob: -11.875032424926758
    3. '                
' → logprob: -12.000032424926758
    4. '<|end|>' → logprob: -12.250032424926758
    5. '```' → logprob: -12.375032424926758
    6. '
' → logprob: -12.625032424926758
    7. '           ' → logprob: -13.375032424926758
    8. ',' → logprob: -14.000032424926758
    9. '                    
' → logprob: -14.375032424926758
    10. 'if' → logprob: -14.375032424926758

Token 1416: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008090264163911343
    2. 'if' → logprob: -4.883090496063232
    3. ' if' → logprob: -8.008090019226074
    4. '           ' → logprob: -9.258090019226074
    5. '                   ' → logprob: -10.008090019226074
    6. '                
' → logprob: -12.633090019226074
    7. '
' → logprob: -13.133090019226074
    8. '              ' → logprob: -13.508090019226074
    9. '   ' → logprob: -14.133090019226074
    10. '                ' → logprob: -14.383090019226074

Token 1417: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00022761584841646254
    2. '               ' → logprob: -8.750227928161621
    3. ' if' → logprob: -9.750227928161621
    4. '                   ' → logprob: -11.500227928161621
    5. '                
' → logprob: -15.875227928161621
    6. '           ' → logprob: -16.000226974487305
    7. '```' → logprob: -16.125226974487305
    8. 'If' → logprob: -16.625226974487305
    9. '                       ' → logprob: -16.750226974487305
    10. '
' → logprob: -17.000226974487305

Token 1418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05150468647480011
    2. 'self' → logprob: -3.426504611968994
    3. ' if' → logprob: -4.051504611968994
    4. ' self' → logprob: -8.176505088806152
    5. '                   ' → logprob: -11.676505088806152
    6. '                       ' → logprob: -12.676505088806152
    7. '   ' → logprob: -12.676505088806152
    8. '               ' → logprob: -12.926505088806152
    9. '(self' → logprob: -13.926505088806152
    10. '           ' → logprob: -14.176505088806152

Token 1419: ' from' (ID: 591)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013641661498695612
    2. ' self' → logprob: -6.626364231109619
    3. 'abs' → logprob: -10.501363754272461
    4. 'math' → logprob: -12.376363754272461
    5. '
' → logprob: -13.126363754272461
    6. '(self' → logprob: -13.501363754272461
    7. '               ' → logprob: -14.001363754272461
    8. '                   ' → logprob: -14.376363754272461
    9. '           ' → logprob: -15.001363754272461
    10. ' abs' → logprob: -15.126363754272461

Token 1420: ' current' (ID: 2208)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.1240917444229126
    2. 'self' → logprob: -1.1240917444229126
    3. 'd' → logprob: -1.8740917444229126
    4. ' self' → logprob: -2.874091625213623
    5. ' nd' → logprob: -3.499091625213623
    6. 'route' → logprob: -3.499091625213623
    7. ' d' → logprob: -3.624091625213623
    8. 'A' → logprob: -4.499091625213623
    9. ' route' → logprob: -4.499091625213623
    10. '_route' → logprob: -5.124091625213623

Token 1421: ' positions' (ID: 15897)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3309513330459595
    2. 'positions' → logprob: -1.9559513330459595
    3. 'position' → logprob: -2.70595121383667
    4. ' d' → logprob: -3.20595121383667
    5. ' positions' → logprob: -4.20595121383667
    6. ' position' → logprob: -4.45595121383667
    7. '_positions' → logprob: -6.08095121383667
    8. 'distance' → logprob: -6.33095121383667
    9. '_position' → logprob: -7.20595121383667
    10. '                   ' → logprob: -7.70595121383667

Token 1422: ' can' (ID: 665)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3601183593273163
    2. 'and' → logprob: -1.8601183891296387
    3. '               ' → logprob: -2.2351183891296387
    4. ' if' → logprob: -4.360118389129639
    5. ',' → logprob: -4.860118389129639
    6. '                   ' → logprob: -5.610118389129639
    7. 'if' → logprob: -5.610118389129639
    8. 'nd' → logprob: -5.860118389129639
    9. 'd' → logprob: -5.985118389129639
    10. '#' → logprob: -6.860118389129639

Token 1423: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.39518246054649353
    2. ' move' → logprob: -1.770182490348816
    3. 'be' → logprob: -2.5201823711395264
    4. ' be' → logprob: -3.2701823711395264
    5. 'nd' → logprob: -4.1451826095581055
    6. 'reach' → logprob: -4.6451826095581055
    7. '_move' → logprob: -5.3951826095581055
    8. ' reach' → logprob: -6.2701826095581055
    9. 'self' → logprob: -6.8951826095581055
    10. 'm' → logprob: -7.2701826095581055

Token 1424: ' directly' (ID: 8516)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9891467690467834
    2. 'and' → logprob: -1.3641467094421387
    3. ' and' → logprob: -1.4891467094421387
    4. ' if' → logprob: -3.8641467094421387
    5. ' to' → logprob: -3.9891467094421387
    6. '                   ' → logprob: -3.9891467094421387
    7. 'to' → logprob: -4.364146709442139
    8. '
' → logprob: -4.489146709442139
    9. ' with' → logprob: -4.864146709442139
    10. 'if' → logprob: -4.989146709442139

Token 1425: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02472788654267788
    2. ' and' → logprob: -4.149727821350098
    3. '                   ' → logprob: -5.274727821350098
    4. ' if' → logprob: -6.899727821350098
    5. 'and' → logprob: -7.024727821350098
    6. ' (' → logprob: -7.774727821350098
    7. '                ' → logprob: -8.149727821350098
    8. ',' → logprob: -8.274727821350098
    9. ' to' → logprob: -9.524727821350098
    10. '(distance' → logprob: -9.649727821350098

Token 1426: ' these' (ID: 1879)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.23594442009925842
    2. '(nd' → logprob: -1.735944390296936
    3. '(' → logprob: -3.9859445095062256
    4. ' nd' → logprob: -5.1109442710876465
    5. ' (' → logprob: -5.3609442710876465
    6. 'new' → logprob: -6.6109442710876465
    7. 'the' → logprob: -6.9859442710876465
    8. 'next' → logprob: -7.2359442710876465
    9. 'points' → logprob: -7.9859442710876465
    10. 'route' → logprob: -8.735944747924805

Token 1427: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4514498710632324
    2. '               ' → logprob: -1.8264498710632324
    3. 'if' → logprob: -1.9514498710632324
    4. '#' → logprob: -3.8264498710632324
    5. ' and' → logprob: -4.076449871063232
    6. '                   ' → logprob: -5.576449871063232
    7. '
' → logprob: -5.576449871063232
    8. ' (' → logprob: -5.826449871063232
    9. ' #' → logprob: -6.201449871063232
    10. 'and' → logprob: -6.576449871063232

Token 1428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010986098641296849
    2. '                   ' → logprob: -9.500109672546387
    3. ',' → logprob: -11.375109672546387
    4. '                ' → logprob: -12.250109672546387
    5. '                
' → logprob: -12.500109672546387
    6. '           ' → logprob: -12.625109672546387
    7. '              ' → logprob: -13.000109672546387
    8. '```' → logprob: -13.250109672546387
    9. ' and' → logprob: -13.375109672546387
    10. '<|end|>' → logprob: -13.875109672546387

Token 1429: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08718246221542358
    2. 'if' → logprob: -2.7121825218200684
    3. ' if' → logprob: -4.212182521820068
    4. 'distance' → logprob: -6.337182521820068
    5. '                
' → logprob: -9.33718204498291
    6. '           ' → logprob: -9.58718204498291
    7. '```' → logprob: -9.71218204498291
    8. '
' → logprob: -9.83718204498291
    9. 'dist' → logprob: -9.83718204498291
    10. '#' (adapté à ' #') → logprob: -10.21218204498291

Token 1430: ' moves' (ID: 19523)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23801390826702118
    2. ' if' → logprob: -2.238013982772827
    3. '               ' → logprob: -2.613013982772827
    4. 'dist' → logprob: -4.238013744354248
    5. '#' → logprob: -5.238013744354248
    6. 'distance' → logprob: -5.488013744354248
    7. 'd' → logprob: -6.113013744354248
    8. ' dist' → logprob: -6.113013744354248
    9. '                   ' → logprob: -6.613013744354248
    10. 'dx' → logprob: -7.488013744354248

Token 1431: ' along' (ID: 4251)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0518651008605957
    2. '               ' → logprob: -1.5518651008605957
    3. '_cost' → logprob: -2.1768651008605957
    4. ' =' → logprob: -2.4268651008605957
    5. 'distance' → logprob: -2.8018651008605957
    6. ' cost' → logprob: -3.1768651008605957
    7. 'if' → logprob: -3.4268651008605957
    8. ' if' → logprob: -3.4268651008605957
    9. '_distance' → logprob: -3.6768651008605957
    10. 'dist' → logprob: -4.676865100860596

Token 1432: ' route' (ID: 9656)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3044232428073883
    2. 'route' → logprob: -1.804423213005066
    3. 'self' → logprob: -2.9294233322143555
    4. ' the' → logprob: -3.4294233322143555
    5. ' route' → logprob: -4.6794233322143555
    6. '_route' → logprob: -7.3044233322143555
    7. 'segment' → logprob: -7.4294233322143555
    8. '[' → logprob: -7.9294233322143555
    9. 'Route' → logprob: -8.054423332214355
    10. ' self' → logprob: -8.304423332214355

Token 1433: ' must' (ID: 2804)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012593822553753853
    2. ' if' → logprob: -5.137593746185303
    3. ',' → logprob: -6.137593746185303
    4. ' and' → logprob: -6.137593746185303
    5. ' with' → logprob: -7.887593746185303
    6. ' (' → logprob: -8.262594223022461
    7. ' distances' → logprob: -8.387594223022461
    8. '                   ' → logprob: -8.637594223022461
    9. 'distance' → logprob: -8.762594223022461
    10. ' is' → logprob: -8.887594223022461

Token 1434: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.13783447444438934
    2. 'be' → logprob: -3.2628345489501953
    3. ' not' → logprob: -3.3878345489501953
    4. 'respect' → logprob: -3.5128345489501953
    5. 'not' → logprob: -4.512834548950195
    6. ' respect' → logprob: -5.262834548950195
    7. ' have' → logprob: -5.512834548950195
    8. ' satisfy' → logprob: -6.387834548950195
    9. 'have' → logprob: -6.637834548950195
    10. ' follow' → logprob: -7.512834548950195

Token 1435: ' continuous' (ID: 27979)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5874544382095337
    2. 'abs' → logprob: -0.9624544382095337
    3. 'self' → logprob: -3.212454319000244
    4. 'within' → logprob: -5.337454319000244
    5. 'less' → logprob: -5.962454319000244
    6. 'd' → logprob: -6.462454319000244
    7. ' self' → logprob: -6.587454319000244
    8. ' abs' → logprob: -6.587454319000244
    9. 'at' → logprob: -6.712454319000244
    10. ' <=' → logprob: -6.837454319000244

Token 1436: ' without' (ID: 2935)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006446453626267612
    2. ' and' → logprob: -8.12564468383789
    3. ',' → logprob: -8.62564468383789
    4. '<|end|>' → logprob: -9.87564468383789
    5. '                
' → logprob: -10.12564468383789
    6. '                   ' → logprob: -10.37564468383789
    7. 'and' → logprob: -11.12564468383789
    8. '                ' → logprob: -12.12564468383789
    9. ' if' → logprob: -12.50064468383789
    10. '
' → logprob: -12.62564468383789

Token 1437: ' gaps' (ID: 52008)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2592634856700897
    2. 'jump' → logprob: -2.259263515472412
    3. ' jumps' → logprob: -2.634263515472412
    4. 'inter' → logprob: -4.884263515472412
    5. ' jumping' → logprob: -4.884263515472412
    6. ' skipping' → logprob: -5.134263515472412
    7. 'tele' → logprob: -5.634263515472412
    8. 'ob' → logprob: -5.634263515472412
    9. ' intermediate' → logprob: -5.884263515472412
    10. ' large' → logprob: -6.134263515472412

Token 1438: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020398679189383984
    2. ' and' → logprob: -6.877039909362793
    3. ',' → logprob: -7.752039909362793
    4. '                   ' → logprob: -8.377039909362793
    5. '<|end|>' → logprob: -9.377039909362793
    6. '                
' → logprob: -9.502039909362793
    7. ' if' → logprob: -10.002039909362793
    8. '
' → logprob: -10.252039909362793
    9. 'and' → logprob: -10.627039909362793
    10. '                ' → logprob: -11.002039909362793

Token 1439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002110766712576151
    2. ' if' → logprob: -6.502110958099365
    3. '                   ' → logprob: -7.877110958099365
    4. '           ' → logprob: -9.002110481262207
    5. '                ' → logprob: -10.377110481262207
    6. 'if' → logprob: -11.377110481262207
    7. '                       ' → logprob: -11.377110481262207
    8. '<|end|>' → logprob: -11.377110481262207
    9. '                
' → logprob: -11.752110481262207
    10. '       ' → logprob: -11.752110481262207

Token 1440: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36098068952560425
    2. '               ' → logprob: -1.235980749130249
    3. 'if' → logprob: -4.48598051071167
    4. 'distance' → logprob: -8.235980987548828
    5. '                   ' → logprob: -8.485980987548828
    6. ' d' → logprob: -8.610980987548828
    7. '           ' → logprob: -8.735980987548828
    8. ' distance' → logprob: -9.235980987548828
    9. '                
' → logprob: -9.985980987548828
    10. '                ' → logprob: -10.235980987548828

Token 1441: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12458671629428864
    2. ' if' → logprob: -2.374586820602417
    3. '               ' → logprob: -3.749586820602417
    4. 'dist' → logprob: -8.249587059020996
    5. '```' → logprob: -9.624587059020996
    6. 'prev' → logprob: -10.124587059020996
    7. '#' → logprob: -10.249587059020996
    8. 'distance' → logprob: -10.374587059020996
    9. 'd' → logprob: -10.624587059020996
    10. 'dx' → logprob: -11.124587059020996

Token 1442: ' allow' (ID: 3763)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20433266460895538
    2. 'continue' → logprob: -2.5793325901031494
    3. ' if' → logprob: -3.5793325901031494
    4. '               ' → logprob: -3.9543325901031494
    5. '                   ' → logprob: -4.3293328285217285
    6. '...' → logprob: -4.9543328285217285
    7. ')' → logprob: -5.4543328285217285
    8. 'distance' → logprob: -5.4543328285217285
    9. '#' → logprob: -5.5793328285217285
    10. ' continue' → logprob: -5.7043328285217285

Token 1443: ' forward' (ID: 6687)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08253473788499832
    2. ' abs' → logprob: -3.3325347900390625
    3. '(abs' → logprob: -3.5825347900390625
    4. 'if' → logprob: -4.4575347900390625
    5. ' (' → logprob: -7.0825347900390625
    6. 'nd' → logprob: -7.3325347900390625
    7. 'all' → logprob: -7.8325347900390625
    8. '#' → logprob: -7.8325347900390625
    9. '(nd' → logprob: -7.9575347900390625
    10. ' if' → logprob: -8.082534790039062

Token 1444: '/back' (ID: 128935)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7157873511314392
    2. ' or' → logprob: -1.465787410736084
    3. 'or' → logprob: -1.965787410736084
    4. ' and' → logprob: -2.090787410736084
    5. '/back' → logprob: -4.840787410736084
    6. '/' → logprob: -5.965787410736084
    7. ',' → logprob: -6.215787410736084
    8. '               ' → logprob: -6.340787410736084
    9. '           ' → logprob: -7.465787410736084
    10. 'if' → logprob: -7.840787410736084

Token 1445: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.011815639212727547
    2. 'ard' → logprob: -4.511815547943115
    3. '               ' → logprob: -8.386816024780273
    4. '       ' → logprob: -8.886816024780273
    5. 'wards' → logprob: -9.511816024780273
    6. 'wd' → logprob: -9.886816024780273
    7. 'ards' → logprob: -10.136816024780273
    8. '           ' → logprob: -10.511816024780273
    9. 'and' → logprob: -10.636816024780273
    10. '                           ' → logprob: -10.761816024780273

Token 1446: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.9282926917076111
    2. ' moves' → logprob: -1.6782927513122559
    3. 'steps' → logprob: -2.303292751312256
    4. ' along' → logprob: -2.428292751312256
    5. ' steps' → logprob: -2.678292751312256
    6. 'along' → logprob: -3.553292751312256
    7. ' movement' → logprob: -3.803292751312256
    8. ' or' → logprob: -3.803292751312256
    9. 'movement' → logprob: -4.053292751312256
    10. ' move' → logprob: -4.303292751312256

Token 1447: ' along' (ID: 4251)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02288668602705002
    2. ',' → logprob: -4.772886753082275
    3. 'and' → logprob: -5.272886753082275
    4. ' and' → logprob: -5.397886753082275
    5. '                   ' → logprob: -6.272886753082275
    6. ' if' → logprob: -6.772886753082275
    7. 'from' → logprob: -7.897886753082275
    8. 'if' → logprob: -8.272886276245117
    9. '
' → logprob: -9.397886276245117
    10. 'to' → logprob: -9.522886276245117

Token 1448: ' route' (ID: 9656)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7182382941246033
    2. 'route' → logprob: -1.343238353729248
    3. ' the' → logprob: -1.968238353729248
    4. ' route' → logprob: -2.593238353729248
    5. 'self' → logprob: -3.468238353729248
    6. 'segment' → logprob: -6.093238353729248
    7. 'segments' → logprob: -6.343238353729248
    8. ' self' → logprob: -6.968238353729248
    9. 'each' → logprob: -9.09323787689209
    10. 'distance' → logprob: -9.59323787689209

Token 1449: ' segments' (ID: 33749)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05546946823596954
    2. ',' → logprob: -3.555469512939453
    3. ' and' → logprob: -4.555469512939453
    4. ' if' → logprob: -4.930469512939453
    5. ' with' → logprob: -6.805469512939453
    6. 'from' → logprob: -6.805469512939453
    7. '                   ' → logprob: -7.180469512939453
    8. ' for' → logprob: -7.305469512939453
    9. ' (' → logprob: -7.430469512939453
    10. 'and' → logprob: -7.430469512939453

Token 1450: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001138550229370594
    2. ',' → logprob: -7.126138687133789
    3. ' and' → logprob: -8.876138687133789
    4. '<|end|>' → logprob: -9.876138687133789
    5. '```' → logprob: -10.751138687133789
    6. '                
' → logprob: -11.001138687133789
    7. '                   ' → logprob: -11.001138687133789
    8. ',
' → logprob: -11.126138687133789
    9. '<|end|>' → logprob: -11.126138687133789
    10. ' if' → logprob: -11.376138687133789

Token 1451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005587508203461766
    2. '                   ' → logprob: -8.750558853149414
    3. '#' → logprob: -9.125558853149414
    4. '                ' → logprob: -9.125558853149414
    5. ' but' → logprob: -10.000558853149414
    6. ' and' → logprob: -10.125558853149414
    7. '              ' → logprob: -10.750558853149414
    8. '                       ' → logprob: -10.750558853149414
    9. '<|end|>' → logprob: -11.125558853149414
    10. 'and' → logprob: -11.875558853149414

Token 1452: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002170839812606573
    2. ' but' → logprob: -7.127171039581299
    3. '                   ' → logprob: -7.627171039581299
    4. ' and' → logprob: -8.12717056274414
    5. '#' (adapté à ' #') → logprob: -8.75217056274414
    6. 'but' → logprob: -9.25217056274414
    7. '                ' → logprob: -9.37717056274414
    8. '<|end|>' → logprob: -9.37717056274414
    9. '<|end|>' → logprob: -10.12717056274414
    10. 'and' → logprob: -10.37717056274414

Token 1453: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7586175203323364
    2. 'if' → logprob: -1.0086175203323364
    3. '               ' → logprob: -2.133617401123047
    4. '#' → logprob: -4.008617401123047
    5. '                   ' → logprob: -4.133617401123047
    6. ' and' → logprob: -5.133617401123047
    7. 'and' → logprob: -6.008617401123047
    8. 'distance' → logprob: -6.008617401123047
    9. ' #' → logprob: -6.633617401123047
    10. '                       ' → logprob: -7.133617401123047

Token 1454: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1378217935562134
    2. ' abs' → logprob: -1.3878217935562134
    3. 'if' → logprob: -1.5128217935562134
    4. 'abs' → logprob: -1.8878217935562134
    5. ' (' → logprob: -3.637821674346924
    6. '(abs' → logprob: -3.637821674346924
    7. 'import' → logprob: -6.887821674346924
    8. 'self' → logprob: -7.012821674346924
    9. '                   ' → logprob: -7.387821674346924
    10. ' self' → logprob: -7.512821674346924

Token 1455: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05432693287730217
    2. '(abs' → logprob: -3.5543270111083984
    3. 'max' → logprob: -4.429327011108398
    4. ' abs' → logprob: -5.054327011108398
    5. '(nd' → logprob: -6.554327011108398
    6. 'nd' → logprob: -6.679327011108398
    7. 'math' → logprob: -7.054327011108398
    8. '(max' → logprob: -7.179327011108398
    9. 'self' → logprob: -7.554327011108398
    10. '(' → logprob: -7.804327011108398

Token 1456: ' difference' (ID: 9809)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0029366982635110617
    2. 'max' → logprob: -6.252936840057373
    3. ' abs' → logprob: -8.127936363220215
    4. 'route' → logprob: -8.377936363220215
    5. 'distance' → logprob: -8.752936363220215
    6. 'self' → logprob: -9.502936363220215
    7. '.abs' → logprob: -9.877936363220215
    8. '
' → logprob: -10.127936363220215
    9. 'math' → logprob: -10.627936363220215
    10. 'min' → logprob: -10.752936363220215

Token 1457: ' is' (ID: 382)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.8894479870796204
    2. 'between' → logprob: -1.1394479274749756
    3. 'in' → logprob: -1.8894479274749756
    4. ' in' → logprob: -3.0144479274749756
    5. 'nd' → logprob: -3.3894479274749756
    6. 'abs' → logprob: -4.764448165893555
    7. ' is' → logprob: -5.014448165893555
    8. 'is' → logprob: -5.264448165893555
    9. '<=' → logprob: -5.889448165893555
    10. 's' → logprob: -5.889448165893555

Token 1458: ' >' (ID: 1424)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12326004356145859
    2. 'nd' → logprob: -2.623260021209717
    3. '<=' → logprob: -3.373260021209717
    4. '(nd' → logprob: -5.998260021209717
    5. '(abs' → logprob: -5.998260021209717
    6. 'less' → logprob: -6.248260021209717
    7. 'not' → logprob: -7.373260021209717
    8. ' abs' → logprob: -7.498260021209717
    9. 'self' → logprob: -8.498260498046875
    10. ' <=' → logprob: -8.998260498046875

Token 1459: ' segment' (ID: 14806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04052285850048065
    2. ' self' → logprob: -3.665522813796997
    3. '1' → logprob: -5.290523052215576
    4. '0' → logprob: -6.290523052215576
    5. '(self' → logprob: -6.290523052215576
    6. 'max' → logprob: -6.540523052215576
    7. '(' → logprob: -7.040523052215576
    8. ' (' → logprob: -7.290523052215576
    9. '=self' → logprob: -7.415523052215576
    10. 'seg' → logprob: -7.665523052215576

Token 1460: ' length' (ID: 5517)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.18725144863128662
    2. ' length' → logprob: -2.437251567840576
    3. 'length' → logprob: -2.687251567840576
    4. '_length' → logprob: -4.437251567840576
    5. ' lengths' → logprob: -6.312251567840576
    6. '.' → logprob: -6.937251567840576
    7. '_lengths' → logprob: -7.812251567840576
    8. '-length' → logprob: -9.562251091003418
    9. 's' → logprob: -10.437251091003418
    10. '[' → logprob: -10.812251091003418

Token 1461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9845110177993774
    2. ':
' → logprob: -1.1095110177993774
    3. ':' → logprob: -1.8595110177993774
    4. ' and' → logprob: -3.359510898590088
    5. '               ' → logprob: -3.359510898590088
    6. ' or' → logprob: -3.734510898590088
    7. '                   ' → logprob: -4.234510898590088
    8. 's' → logprob: -4.359510898590088
    9. 'and' → logprob: -4.734510898590088
    10. '                       ' → logprob: -5.734510898590088

Token 1462: ' we' (ID: 581)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4722190499305725
    2. ' continue' → logprob: -1.2222189903259277
    3. 'continue' → logprob: -2.5972189903259277
    4. '               ' → logprob: -5.472218990325928
    5. '                       ' → logprob: -6.597218990325928
    6. '   ' → logprob: -7.847218990325928
    7. '           ' → logprob: -8.222219467163086
    8. ' if' → logprob: -8.472219467163086
    9. '#' → logprob: -8.597219467163086
    10. '                           ' → logprob: -8.722219467163086

Token 1463: ' dis' (ID: 829)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2829709053039551
    2. ' continue' → logprob: -1.407970905303955
    3. ' should' → logprob: -8.282970428466797
    4. '...' → logprob: -8.407970428466797
    5. '                   ' → logprob: -8.532970428466797
    6. '#' → logprob: -8.657970428466797
    7. '	continue' → logprob: -9.032970428466797
    8. '               ' → logprob: -9.157970428466797
    9. 'should' → logprob: -9.282970428466797
    10. ' can' → logprob: -9.532970428466797

Token 1464: 'allow' (ID: 10180)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.3909948766231537
    2. 'allow' → logprob: -1.140994906425476
    3. 't' → logprob: -6.765995025634766
    4. 'reg' → logprob: -7.265995025634766
    5. 'qual' → logprob: -7.265995025634766
    6. 'continue' → logprob: -7.765995025634766
    7. '#' → logprob: -7.890995025634766
    8. '```' → logprob: -8.640995025634766
    9. 'count' → logprob: -9.140995025634766
    10. '
' → logprob: -9.140995025634766

Token 1465: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19264809787273407
    2. '                   ' → logprob: -2.19264817237854
    3. ' and' → logprob: -4.192647933959961
    4. ':
' → logprob: -4.442647933959961
    5. ',' → logprob: -4.567647933959961
    6. ' if' → logprob: -4.692647933959961
    7. ' or' → logprob: -4.942647933959961
    8. ':' → logprob: -5.442647933959961
    9. '.' → logprob: -6.442647933959961
    10. '                       ' → logprob: -6.567647933959961

Token 1466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016337241686414927
    2. '<|end|>' → logprob: -9.875163078308105
    3. '                   ' → logprob: -10.125163078308105
    4. '```' → logprob: -10.500163078308105
    5. '              ' → logprob: -11.000163078308105
    6. '                ' → logprob: -11.500163078308105
    7. '<|end|>' → logprob: -12.500163078308105
    8. '           ' → logprob: -12.875163078308105
    9. '                       ' → logprob: -13.000163078308105
    10. '       ' → logprob: -13.375163078308105

Token 1467: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005424192640930414
    2. ' if' → logprob: -6.2554240226745605
    3. 'segment' → logprob: -6.7554240226745605
    4. 'if' → logprob: -7.5054240226745605
    5. '                
' → logprob: -7.7554240226745605
    6. ' for' → logprob: -8.380424499511719
    7. 'for' → logprob: -8.505424499511719
    8. ' segment' → logprob: -8.505424499511719
    9. 'distance' → logprob: -8.755424499511719
    10. '           ' → logprob: -9.505424499511719

Token 1468: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08404102176427841
    2. 'if' → logprob: -3.459041118621826
    3. 'segment' → logprob: -4.084041118621826
    4. 'seg' → logprob: -4.334041118621826
    5. ' if' → logprob: -4.459041118621826
    6. '           ' → logprob: -5.834041118621826
    7. ' seg' → logprob: -6.459041118621826
    8. ' segment' → logprob: -6.584041118621826
    9. '```' → logprob: -8.459040641784668
    10. '       ' → logprob: -8.709040641784668

Token 1469: ' for' (ID: 395)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.3996365070343018
    2. ' abs' → logprob: -1.6496365070343018
    3. '#' → logprob: -2.0246365070343018
    4. ' if' → logprob: -2.3996365070343018
    5. 'if' → logprob: -3.1496365070343018
    6. '               ' → logprob: -3.5246365070343018
    7. '                   ' → logprob: -3.6496365070343018
    8. ' #' → logprob: -3.6496365070343018
    9. '                       ' → logprob: -3.7746365070343018
    10. ' for' → logprob: -3.8996365070343018

Token 1470: ' complexity' (ID: 37588)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6769751906394958
    2. 'seg' → logprob: -2.0519752502441406
    3. 'self' → logprob: -2.1769752502441406
    4. 'abs' → logprob: -2.4269752502441406
    5. 'True' → logprob: -3.1769752502441406
    6. 'dist' → logprob: -3.5519752502441406
    7. 'd' → logprob: -4.301975250244141
    8. 'not' → logprob: -4.551975250244141
    9. 'all' → logprob: -4.926975250244141
    10. 'segment' → logprob: -4.926975250244141

Token 1471: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1579840183258057
    2. '               ' → logprob: -1.2829840183258057
    3. ',' → logprob: -1.6579840183258057
    4. '           ' → logprob: -2.4079840183258057
    5. ':
' → logprob: -3.1579840183258057
    6. '                   ' → logprob: -3.9079840183258057
    7. '...' → logprob: -4.282983779907227
    8. ' and' → logprob: -5.407983779907227
    9. '                       ' → logprob: -5.407983779907227
    10. '
' → logprob: -5.532983779907227

Token 1472: ' allow' (ID: 3763)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0863873958587646
    2. '                   ' → logprob: -1.2113873958587646
    3. '               ' → logprob: -1.4613873958587646
    4. ' continue' → logprob: -3.0863873958587646
    5. 'if' → logprob: -3.2113873958587646
    6. 'continue' → logprob: -3.7113873958587646
    7. '                       ' → logprob: -4.586387634277344
    8. '#' → logprob: -5.961387634277344
    9. ' pass' → logprob: -6.336387634277344
    10. '                ' → logprob: -6.461387634277344

Token 1473: ' moves' (ID: 19523)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.14541277289390564
    2. ' True' → logprob: -2.5204126834869385
    3. 'abs' → logprob: -3.3954126834869385
    4. 'if' → logprob: -4.145412921905518
    5. '#' → logprob: -6.770412921905518
    6. '(True' → logprob: -6.770412921905518
    7. ' if' → logprob: -7.770412921905518
    8. ' abs' → logprob: -8.02041244506836
    9. 'nd' → logprob: -8.02041244506836
    10. '               ' → logprob: -8.14541244506836

Token 1474: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06168125197291374
    2. ' if' → logprob: -3.8116812705993652
    3. '                   ' → logprob: -3.9366812705993652
    4. ' that' → logprob: -5.936681270599365
    5. ' and' → logprob: -6.186681270599365
    6. 'if' → logprob: -6.436681270599365
    7. 'from' → logprob: -6.561681270599365
    8. ' with' → logprob: -6.936681270599365
    9. 'that' → logprob: -6.936681270599365
    10. '...' → logprob: -7.061681270599365

Token 1475: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07575133442878723
    2. ' to' → logprob: -2.950751304626465
    3. 'within' → logprob: -4.200751304626465
    4. 'between' → logprob: -6.325751304626465
    5. ' within' → logprob: -7.200751304626465
    6. 'of' → logprob: -7.325751304626465
    7. ' of' → logprob: -7.825751304626465
    8. 'that' → logprob: -7.825751304626465
    9. 'along' → logprob: -8.200751304626465
    10. 'if' → logprob: -8.700751304626465

Token 1476: ' route' (ID: 9656)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.012945532798767
    2. 'route' → logprob: -1.137945532798767
    3. 'adj' → logprob: -2.3879456520080566
    4. 'self' → logprob: -2.8879456520080566
    5. ' points' → logprob: -2.8879456520080566
    6. 'any' → logprob: -3.1379456520080566
    7. 'the' → logprob: -4.637945652008057
    8. ' route' → logprob: -4.762945652008057
    9. 'next' → logprob: -5.137945652008057
    10. 'neighbor' → logprob: -5.262945652008057

Token 1477: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.17833881080150604
    2. ' points' → logprob: -2.0533387660980225
    3. '_points' → logprob: -3.9283387660980225
    4. 'segments' → logprob: -4.678339004516602
    5. '.points' → logprob: -5.428339004516602
    6. ' segments' → logprob: -7.678339004516602
    7. 'Points' → logprob: -7.803339004516602
    8. '	points' → logprob: -8.678339004516602
    9. 'point' → logprob: -8.803339004516602
    10. 'segment' → logprob: -8.803339004516602

Token 1478: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006692869123071432
    2. ' and' → logprob: -5.756692886352539
    3. '                   ' → logprob: -6.506692886352539
    4. ',' → logprob: -7.006692886352539
    5. '<|end|>' → logprob: -7.756692886352539
    6. '                       ' → logprob: -8.756692886352539
    7. 'and' → logprob: -9.006692886352539
    8. '<|end|>' → logprob: -9.756692886352539
    9. ' if' → logprob: -9.881692886352539
    10. ' (' → logprob: -10.506692886352539

Token 1479: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.2929282784461975
    2. 'both' → logprob: -1.5429282188415527
    3. 'simp' → logprob: -3.9179282188415527
    4. 'nd' → logprob: -4.417928218841553
    5. 'd' → logprob: -5.167928218841553
    6. 'eff' → logprob: -7.542928218841553
    7. 'this' → logprob: -8.542928695678711
    8. 'cl' → logprob: -8.542928695678711
    9. 'simpl' → logprob: -8.542928695678711
    10. 'each' → logprob: -8.667928695678711

Token 1480: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00291685713455081
    2. '                   ' → logprob: -6.0029168128967285
    3. '<|end|>' → logprob: -8.252917289733887
    4. '                ' → logprob: -9.877917289733887
    5. '                       ' → logprob: -10.502917289733887
    6. '           ' → logprob: -10.627917289733887
    7. ',' → logprob: -10.627917289733887
    8. '<|end|>' → logprob: -10.877917289733887
    9. '              ' → logprob: -11.752917289733887
    10. ' and' → logprob: -12.377917289733887

Token 1481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006320207612589002
    2. '                   ' → logprob: -7.750631809234619
    3. '           ' → logprob: -9.125632286071777
    4. '```' → logprob: -10.375632286071777
    5. 'if' → logprob: -11.125632286071777
    6. '                ' → logprob: -11.500632286071777
    7. ' if' → logprob: -11.625632286071777
    8. '              ' → logprob: -11.750632286071777
    9. '                       ' → logprob: -11.750632286071777
    10. '                
' → logprob: -13.000632286071777

Token 1482: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009951572865247726
    2. 'if' → logprob: -5.009951591491699
    3. ' if' → logprob: -7.009951591491699
    4. '                   ' → logprob: -7.134951591491699
    5. 'distance' → logprob: -7.134951591491699
    6. '           ' → logprob: -8.2599515914917
    7. 'dist' → logprob: -9.0099515914917
    8. '                
' → logprob: -9.1349515914917
    9. 'segment' → logprob: -10.1349515914917
    10. 'length' → logprob: -10.6349515914917

Token 1483: ' Also' (ID: 8820)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034789051860570908
    2. 'if' → logprob: -6.25347900390625
    3. 'distance' → logprob: -7.12847900390625
    4. '                   ' → logprob: -8.25347900390625
    5. '           ' → logprob: -8.62847900390625
    6. ' if' → logprob: -8.87847900390625
    7. '                
' → logprob: -9.87847900390625
    8. 'dist' → logprob: -11.25347900390625
    9. '```' → logprob: -11.25347900390625
    10. 'segment' → logprob: -11.50347900390625

Token 1484: ' allow' (ID: 3763)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4371851086616516
    2. 'if' → logprob: -1.0621850490570068
    3. '                   ' → logprob: -6.187185287475586
    4. '
' → logprob: -6.437185287475586
    5. '               ' → logprob: -7.062185287475586
    6. 'd' → logprob: -7.062185287475586
    7. ' abs' → logprob: -7.437185287475586
    8. 'abs' → logprob: -7.437185287475586
    9. ' d' → logprob: -7.812185287475586
    10. '#' → logprob: -7.937185287475586

Token 1485: ' standing' (ID: 18350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8518417477607727
    2. '(abs' → logprob: -0.9768417477607727
    3. '(nd' → logprob: -3.226841688156128
    4. 'nd' → logprob: -3.351841688156128
    5. ' abs' → logprob: -3.476841688156128
    6. 'True' → logprob: -4.101841926574707
    7. '(math' → logprob: -4.351841926574707
    8. 'math' → logprob: -4.601841926574707
    9. ' (' → logprob: -4.601841926574707
    10. 'self' → logprob: -4.726841926574707

Token 1486: ' still' (ID: 2928)
  Prédit: 'still'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'still' → logprob: -0.0677419975399971
    2. ' still' → logprob: -2.817742109298706
    3. '
' → logprob: -5.942741870880127
    4. 'nd' → logprob: -7.317741870880127
    5. 'stil' → logprob: -7.942741870880127
    6. '               ' → logprob: -8.067742347717285
    7. '<|end|>' → logprob: -8.067742347717285
    8. 'st' → logprob: -8.692742347717285
    9. 'stilling' → logprob: -8.817742347717285
    10. '...' → logprob: -8.942742347717285

Token 1487: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021652035415172577
    2. ' and' → logprob: -4.3966522216796875
    3. '                   ' → logprob: -5.5216522216796875
    4. ',' → logprob: -6.3966522216796875
    5. 'and' → logprob: -7.2716522216796875
    6. '<|end|>' → logprob: -7.2716522216796875
    7. ':' → logprob: -7.5216522216796875
    8. '                       ' → logprob: -8.396652221679688
    9. ':
' → logprob: -8.896652221679688
    10. ' if' → logprob: -8.896652221679688

Token 1488: ' one' (ID: 1001)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.8895487189292908
    2. 'now' → logprob: -1.0145487785339355
    3. 'nd' → logprob: -3.0145487785339355
    4. 'd' → logprob: -3.2645487785339355
    5. 'the' → logprob: -3.2645487785339355
    6. ' now' → logprob: -3.5145487785339355
    7. ' both' → logprob: -4.2645487785339355
    8. 'continu' → logprob: -4.6395487785339355
    9. 'possible' → logprob: -4.6395487785339355
    10. 'candidate' → logprob: -5.5145487785339355

Token 1489: ' and' (ID: 326)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4048555791378021
    2. 'side' → logprob: -2.029855489730835
    3. 'of' → logprob: -2.779855489730835
    4. ' side' → logprob: -2.904855489730835
    5. ' or' → logprob: -3.529855489730835
    6. 'leg' → logprob: -4.154855728149414
    7. 'cl' → logprob: -4.779855728149414
    8. 'step' → logprob: -5.279855728149414
    9. ' of' → logprob: -5.529855728149414
    10. 'token' → logprob: -5.654855728149414

Token 1490: ' move' (ID: 5275)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.8232992887496948
    2. 'the' → logprob: -1.5732992887496948
    3. 'both' → logprob: -2.1982994079589844
    4. 'one' → logprob: -2.1982994079589844
    5. 'other' → logprob: -3.0732994079589844
    6. ' moving' → logprob: -3.4482994079589844
    7. 'not' → logprob: -4.198299407958984
    8. 'another' → logprob: -4.698299407958984
    9. ' the' → logprob: -4.948299407958984
    10. 'for' → logprob: -4.948299407958984

Token 1491: ' in' (ID: 306)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -1.018410325050354
    2. ' or' → logprob: -1.893410325050354
    3. ' if' → logprob: -2.0184102058410645
    4. 'or' → logprob: -2.0184102058410645
    5. 'if' → logprob: -2.3934102058410645
    6. ' only' → logprob: -3.0184102058410645
    7. 'to' → logprob: -3.8934102058410645
    8. '_only' → logprob: -4.2684102058410645
    9. ' to' → logprob: -5.0184102058410645
    10. '_to' → logprob: -5.1434102058410645

Token 1492: ' other' (ID: 1273)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.14565393328666687
    2. 'range' → logprob: -2.6456539630889893
    3. 'the' → logprob: -3.6456539630889893
    4. 'other' → logprob: -4.77065372467041
    5. 'only' → logprob: -5.02065372467041
    6. 'either' → logprob: -5.27065372467041
    7. 'any' → logprob: -5.52065372467041
    8. 'steps' → logprob: -5.52065372467041
    9. '[' → logprob: -6.27065372467041
    10. '(' → logprob: -6.27065372467041

Token 1493: '?

' (ID: 1715)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.078578419983387
    2. '                   ' → logprob: -3.328578472137451
    3. ':
' → logprob: -4.203578472137451
    4. ',' → logprob: -5.203578472137451
    5. ' and' → logprob: -5.328578472137451
    6. ' if' → logprob: -5.828578472137451
    7. ':' → logprob: -5.953578472137451
    8. '                       ' → logprob: -6.078578472137451
    9. '):
' → logprob: -6.578578472137451
    10. 'and' → logprob: -7.078578472137451

Token 1494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00035906085395254195
    2. '                   ' → logprob: -8.125359535217285
    3. '           ' → logprob: -10.625359535217285
    4. '                ' → logprob: -11.750359535217285
    5. 'if' → logprob: -11.750359535217285
    6. '              ' → logprob: -12.125359535217285
    7. ' if' → logprob: -12.125359535217285
    8. '                       ' → logprob: -12.250359535217285
    9. '```' → logprob: -13.125359535217285
    10. '                
' → logprob: -13.875359535217285

Token 1495: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43104565143585205
    2. 'if' → logprob: -1.306045651435852
    3. 'dist' → logprob: -3.0560455322265625
    4. ' if' → logprob: -4.8060455322265625
    5. 'seg' → logprob: -5.3060455322265625
    6. 'step' → logprob: -5.4310455322265625
    7. 'distance' → logprob: -5.5560455322265625
    8. '#' (adapté à ' #') → logprob: -6.0560455322265625
    9. 'move' → logprob: -6.3060455322265625
    10. 'd' → logprob: -6.8060455322265625

Token 1496: ' Limit' (ID: 46480)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5549637675285339
    2. '               ' → logprob: -1.1799638271331787
    3. 'dist' → logprob: -2.5549638271331787
    4. 'step' → logprob: -4.4299635887146
    5. '#' → logprob: -4.6799635887146
    6. 'move' → logprob: -5.0549635887146
    7. 'max' → logprob: -5.9299635887146
    8. 'seg' → logprob: -6.0549635887146
    9. 'distance' → logprob: -6.1799635887146
    10. 'd' → logprob: -6.6799635887146

Token 1497: ' moves' (ID: 19523)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.695273220539093
    2. 'abs' → logprob: -1.1952731609344482
    3. ' if' → logprob: -2.4452731609344482
    4. '(abs' → logprob: -3.3202731609344482
    5. 'if' → logprob: -3.4452731609344482
    6. '               ' → logprob: -3.9452731609344482
    7. '                   ' → logprob: -4.070273399353027
    8. '                       ' → logprob: -6.195273399353027
    9. 'nd' → logprob: -6.570273399353027
    10. ' (' → logprob: -6.695273399353027

Token 1498: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05281905457377434
    2. 'if' → logprob: -3.302819013595581
    3. ' if' → logprob: -4.92781925201416
    4. '                   ' → logprob: -6.17781925201416
    5. ' =' → logprob: -6.42781925201416
    6. '=' → logprob: -6.55281925201416
    7. 'for' → logprob: -8.05281925201416
    8. '           ' → logprob: -8.05281925201416
    9. ',' → logprob: -8.55281925201416
    10. ':' → logprob: -8.67781925201416

Token 1499: ' steps' (ID: 10331)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20334863662719727
    2. 'max' → logprob: -2.3283486366271973
    3. 'self' → logprob: -2.7033486366271973
    4. '(abs' → logprob: -4.453348636627197
    5. ' abs' → logprob: -5.578348636627197
    6. '(max' → logprob: -6.078348636627197
    7. '1' → logprob: -7.078348636627197
    8. ' max' → logprob: -8.203348159790039
    9. 'math' → logprob: -8.703348159790039
    10. '(self' → logprob: -8.703348159790039

Token 1500: ' (' (ID: 350)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10872901231050491
    2. '<=' → logprob: -2.983729124069214
    3. '                   ' → logprob: -3.858729124069214
    4. '               ' → logprob: -4.358728885650635
    5. ' =' → logprob: -4.733728885650635
    6. '                       ' → logprob: -5.858728885650635
    7. '=' → logprob: -6.108728885650635
    8. '           ' → logprob: -7.483728885650635
    9. '   ' → logprob: -7.608728885650635
    10. ' of' → logprob: -7.858728885650635

Token 1501: 'from' (ID: 2845)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1332658529281616
    2. 'nd' → logprob: -1.6332658529281616
    3. 'self' → logprob: -1.8832658529281616
    4. '<=' → logprob: -1.8832658529281616
    5. ' abs' → logprob: -2.633265972137451
    6. '1' → logprob: -3.133265972137451
    7. ')' → logprob: -4.008265972137451
    8. ' <=' → logprob: -4.633265972137451
    9. ' self' → logprob: -5.008265972137451
    10. '               ' → logprob: -5.008265972137451

Token 1502: ' current' (ID: 2208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8727526664733887
    2. 'abs' → logprob: -1.2477526664733887
    3. 'nd' → logprob: -1.7477526664733887
    4. ' abs' → logprob: -3.6227526664733887
    5. ' d' → logprob: -4.122752666473389
    6. 'current' → logprob: -4.122752666473389
    7. ' nd' → logprob: -4.247752666473389
    8. ')' → logprob: -4.747752666473389
    9. 'self' → logprob: -4.872752666473389
    10. 'max' → logprob: -4.872752666473389

Token 1503: ' position' (ID: 4010)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7616129517555237
    2. 'positions' → logprob: -1.136612892150879
    3. 'position' → logprob: -2.511612892150879
    4. 'distance' → logprob: -3.636612892150879
    5. 'dist' → logprob: -3.761612892150879
    6. '_d' → logprob: -4.011612892150879
    7. 'pos' → logprob: -4.386612892150879
    8. ' positions' → logprob: -4.386612892150879
    9. '_positions' → logprob: -4.636612892150879
    10. ' d' → logprob: -5.636612892150879

Token 1504: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6196832656860352
    2. ')' → logprob: -0.8696832656860352
    3. '<=' → logprob: -3.869683265686035
    4. '               ' → logprob: -4.744683265686035
    5. ')<=' → logprob: -5.619683265686035
    6. ',' → logprob: -5.869683265686035
    7. '                   ' → logprob: -6.119683265686035
    8. ' in' → logprob: -6.994683265686035
    9. ' ==' → logprob: -7.119683265686035
    10. ' to' → logprob: -7.994683265686035

Token 1505: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11447591334581375
    2. ' <=' → logprob: -2.489475965499878
    3. '                   ' → logprob: -4.864475727081299
    4. ' >' → logprob: -4.989475727081299
    5. ' and' → logprob: -5.864475727081299
    6. '<=' → logprob: -6.114475727081299
    7. '>' → logprob: -7.114475727081299
    8. ',' → logprob: -7.114475727081299
    9. ' if' → logprob: -7.239475727081299
    10. 'and' → logprob: -7.364475727081299

Token 1506: ' bigger' (ID: 17791)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.4594445824623108
    2. ' greater' → logprob: -1.084444522857666
    3. ' more' → logprob: -3.834444522857666
    4. 'more' → logprob: -6.084444522857666
    5. 't' → logprob: -6.209444522857666
    6. '>' → logprob: -6.459444522857666
    7. 'larg' → logprob: -6.959444522857666
    8. 'w' → logprob: -7.709444522857666
    9. 'reater' → logprob: -8.334444999694824
    10. ' larger' → logprob: -8.459444999694824

Token 1507: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.06744116544723511
    2. 'than' → logprob: -2.81744122505188
    3. '=' → logprob: -5.317440986633301
    4. '1' → logprob: -8.0674409866333
    5. '0' → logprob: -9.5674409866333
    6. '                   ' → logprob: -9.8174409866333
    7. '               ' → logprob: -10.3174409866333
    8. '_than' → logprob: -10.6924409866333
    9. '
' → logprob: -11.9424409866333
    10. ',' → logprob: -11.9424409866333

Token 1508: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008945800364017487
    2. ' self' → logprob: -5.133945941925049
    3. '1' → logprob: -6.633945941925049
    4. 'max' → logprob: -7.133945941925049
    5. '(self' → logprob: -7.633945941925049
    6. '10' → logprob: -9.13394546508789
    7. ' (' → logprob: -10.00894546508789
    8. ' ' → logprob: -10.25894546508789
    9. '5' → logprob: -10.25894546508789
    10. ' max' → logprob: -10.25894546508789

Token 1509: ' segment' (ID: 14806)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.24660411477088928
    2. '_' → logprob: -2.2466042041778564
    3. '_distance' → logprob: -3.3716042041778564
    4. '(' → logprob: -3.4966042041778564
    5. '_segment' → logprob: -4.371603965759277
    6. '_dist' → logprob: -4.996603965759277
    7. '_move' → logprob: -5.121603965759277
    8. ' _' → logprob: -5.496603965759277
    9. ' ' → logprob: -5.996603965759277
    10. '_steps' → logprob: -5.996603965759277

Token 1510: ' ~' (ID: 6574)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.2622486650943756
    2. ' length' → logprob: -1.8872486352920532
    3. 'length' → logprob: -3.6372487545013428
    4. '_lengths' → logprob: -3.8872487545013428
    5. 's' → logprob: -4.387248516082764
    6. ' lengths' → logprob: -5.262248516082764
    7. '_' → logprob: -5.387248516082764
    8. ')' → logprob: -5.387248516082764
    9. '_len' → logprob: -6.512248516082764
    10. ' _' → logprob: -7.012248516082764

Token 1511: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9416033625602722
    2. ' self' → logprob: -1.316603422164917
    3. ' max' → logprob: -1.566603422164917
    4. 'max' → logprob: -3.066603422164917
    5. '0' → logprob: -3.191603422164917
    6. '1' → logprob: -3.691603422164917
    7. 's' → logprob: -5.691603183746338
    8. '(self' → logprob: -5.941603183746338
    9. ' ' → logprob: -6.191603183746338
    10. ' step' → logprob: -6.441603183746338

Token 1512: ' ' (ID: 220)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.0119277238845825
    2. '(self' → logprob: -1.8869277238845825
    3. '_segment' → logprob: -2.011927604675293
    4. 'segment' → logprob: -2.386927604675293
    5. 'self' → logprob: -2.511927604675293
    6. '(' → logprob: -2.761927604675293
    7. '(seg' → logprob: -3.136927604675293
    8. '_seg' → logprob: -4.011927604675293
    9. 'step' → logprob: -4.261927604675293
    10. 'dist' → logprob: -4.511927604675293

Token 1513: '100' (ID: 1353)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0543845891952515
    2. 'step' → logprob: -1.5543845891952515
    3. '(self' → logprob: -1.8043845891952515
    4. 'seg' → logprob: -2.179384708404541
    5. 'segment' → logprob: -3.179384708404541
    6. '_step' → logprob: -3.304384708404541
    7. '(' → logprob: -3.929384708404541
    8. '_segment' → logprob: -4.179384708404541
    9. '0' → logprob: -4.679384708404541
    10. '(seg' → logprob: -4.679384708404541

Token 1514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09652666747570038
    2. ')' → logprob: -3.471526622772217
    3. '.' → logprob: -3.471526622772217
    4. '<|end|>' → logprob: -4.096526622772217
    5. ' ' → logprob: -6.221526622772217
    6. ' for' → logprob: -6.346526622772217
    7. ',' → logprob: -6.471526622772217
    8. ':' → logprob: -6.596526622772217
    9. ' and' → logprob: -7.346526622772217
    10. '):
' → logprob: -7.346526622772217

Token 1515: ' length' (ID: 5517)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8668889403343201
    2. ':' → logprob: -1.4918889999389648
    3. ')' → logprob: -2.866888999938965
    4. '           ' → logprob: -2.991888999938965
    5. '.' → logprob: -3.116888999938965
    6. ':
' → logprob: -3.116888999938965
    7. '
' → logprob: -3.616888999938965
    8. '                   ' → logprob: -3.741888999938965
    9. ',' → logprob: -4.116888999938965
    10. '                       ' → logprob: -4.366888999938965

Token 1516: ' 
' (ID: 793)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024053126573562622
    2. '                   ' → logprob: -4.14905309677124
    3. '           ' → logprob: -5.89905309677124
    4. ' if' → logprob: -7.02405309677124
    5. '                       ' → logprob: -7.27405309677124
    6. '                ' → logprob: -7.39905309677124
    7. ',' → logprob: -7.52405309677124
    8. '<|end|>' → logprob: -7.89905309677124
    9. '...' → logprob: -8.149053573608398
    10. '       ' → logprob: -8.524053573608398

Token 1517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002039510291069746
    2. '                   ' → logprob: -6.502039432525635
    3. ',' → logprob: -9.252039909362793
    4. '                
' → logprob: -9.502039909362793
    5. '<|end|>' → logprob: -9.752039909362793
    6. '                ' → logprob: -9.752039909362793
    7. ' and' → logprob: -9.877039909362793
    8. '           ' → logprob: -9.877039909362793
    9. '                       ' → logprob: -10.502039909362793
    10. '              ' → logprob: -10.752039909362793

Token 1518: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0066353208385407925
    2. ' if' → logprob: -5.8816351890563965
    3. 'if' → logprob: -6.0066351890563965
    4. '                   ' → logprob: -6.8816351890563965
    5. '                
' → logprob: -9.506635665893555
    6. '                ' → logprob: -9.506635665893555
    7. 'continue' → logprob: -10.006635665893555
    8. '                       ' → logprob: -10.756635665893555
    9. '              ' → logprob: -10.756635665893555
    10. '```' → logprob: -11.006635665893555

Token 1519: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01282605528831482
    2. '                   ' → logprob: -5.262825965881348
    3. ' if' → logprob: -5.512825965881348
    4. '           ' → logprob: -6.512825965881348
    5. 'if' → logprob: -7.762825965881348
    6. '                       ' → logprob: -8.262825965881348
    7. '                ' → logprob: -8.262825965881348
    8. ' max' → logprob: -8.512825965881348
    9. 'max' → logprob: -8.637825965881348
    10. ' for' → logprob: -9.262825965881348

Token 1520: ' better' (ID: 3432)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3249415457248688
    2. 'if' → logprob: -2.074941635131836
    3. 'True' → logprob: -3.324941635131836
    4. 'max' → logprob: -3.824941635131836
    5. ' abs' → logprob: -3.949941635131836
    6. '                   ' → logprob: -4.199941635131836
    7. ' if' → logprob: -4.574941635131836
    8. 'continue' → logprob: -4.699941635131836
    9. '(abs' → logprob: -4.824941635131836
    10. '#' → logprob: -5.074941635131836

Token 1521: ' limit' (ID: 5967)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5843858122825623
    2. 'if' → logprob: -1.709385871887207
    3. ' if' → logprob: -2.584385871887207
    4. 'continue' → logprob: -2.584385871887207
    5. ' max' → logprob: -3.084385871887207
    6. 'abs' → logprob: -3.834385871887207
    7. 'for' → logprob: -4.459385871887207
    8. ' for' → logprob: -5.084385871887207
    9. ' continue' → logprob: -5.084385871887207
    10. '
' → logprob: -5.459385871887207

Token 1522: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8145233392715454
    2. ' if' → logprob: -0.8145233392715454
    3. '                   ' → logprob: -3.189523220062256
    4. ' for' → logprob: -3.814523220062256
    5. 'if' → logprob: -4.314523220062256
    6. ' max' → logprob: -4.564523220062256
    7. ',' → logprob: -5.814523220062256
    8. 'max' → logprob: -5.939523220062256
    9. '(max' → logprob: -6.064523220062256
    10. ' (' → logprob: -6.189523220062256

Token 1523: ' segment' (ID: 14806)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.964483380317688
    2. 'max' → logprob: -0.964483380317688
    3. 'self' → logprob: -1.589483380317688
    4. '1' → logprob: -4.589483261108398
    5. '10' → logprob: -4.839483261108398
    6. '50' → logprob: -5.089483261108398
    7. ' max' → logprob: -6.089483261108398
    8. 'math' → logprob: -6.214483261108398
    9. '500' → logprob: -6.964483261108398
    10. 'abs' → logprob: -7.339483261108398

Token 1524: ' adj' (ID: 20251)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3132909834384918
    2. 's' → logprob: -2.188291072845459
    3. '<|end|>' → logprob: -2.313291072845459
    4. '<|end|>' → logprob: -4.563291072845459
    5. '_lengths' → logprob: -4.813291072845459
    6. ' length' → logprob: -4.938291072845459
    7. ']' → logprob: -5.063291072845459
    8. ' lengths' → logprob: -5.188291072845459
    9. 'maxlength' → logprob: -5.438291072845459
    10. '_length' → logprob: -5.438291072845459

Token 1525: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0007342241005972028
    2. 'acency' → logprob: -7.500734329223633
    3. 'ac' → logprob: -9.625734329223633
    4. 'oint' → logprob: -10.000734329223633
    5. 'cent' → logprob: -10.125734329223633
    6. 'oints' → logprob: -11.750734329223633
    7. '   ' → logprob: -12.375734329223633
    8. '```' → logprob: -13.125734329223633
    9. 'segments' → logprob: -13.250734329223633
    10. '       ' → logprob: -13.375734329223633

Token 1526: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.052465736865997314
    2. 'cent' → logprob: -3.1774656772613525
    3. 'ency' → logprob: -5.052465915679932
    4. 'ents' → logprob: -6.427465915679932
    5. 'cy' → logprob: -8.177465438842773
    6. 't' → logprob: -8.552465438842773
    7. 'en' → logprob: -9.052465438842773
    8. 'nt' → logprob: -9.552465438842773
    9. 'st' → logprob: -9.802465438842773
    10. ']' → logprob: -9.802465438842773

Token 1527: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49887949228286743
    2. '<|end|>' → logprob: -1.2488794326782227
    3. ' for' → logprob: -3.2488794326782227
    4. '<|end|>' → logprob: -3.3738794326782227
    5. ',' → logprob: -5.123879432678223
    6. ' if' → logprob: -5.123879432678223
    7. '...' → logprob: -5.748879432678223
    8. ' and' → logprob: -5.748879432678223
    9. '.' → logprob: -5.998879432678223
    10. 'for' → logprob: -5.998879432678223

Token 1528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012396154925227165
    2. '<|end|>' → logprob: -5.012396335601807
    3. '                   ' → logprob: -5.762396335601807
    4. '           ' → logprob: -7.262396335601807
    5. '<|end|>' → logprob: -8.262395858764648
    6. '                       ' → logprob: -8.262395858764648
    7. '       ' → logprob: -8.762395858764648
    8. ',' → logprob: -8.762395858764648
    9. ' for' → logprob: -9.012395858764648
    10. '                
' → logprob: -9.262395858764648

Token 1529: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07495158910751343
    2. ' if' → logprob: -3.949951648712158
    3. ' for' → logprob: -4.324951648712158
    4. '           ' → logprob: -4.449951648712158
    5. '                   ' → logprob: -4.449951648712158
    6. 'if' → logprob: -5.074951648712158
    7. 'for' → logprob: -5.949951648712158
    8. ' pass' → logprob: -7.199951648712158
    9. '<|end|>' → logprob: -7.449951648712158
    10. 'dist' → logprob: -7.574951648712158

Token 1530: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07869323343038559
    2. 'if' → logprob: -3.328693151473999
    3. '           ' → logprob: -3.578693151473999
    4. ' if' → logprob: -5.453693389892578
    5. 'for' → logprob: -6.578693389892578
    6. '#' → logprob: -6.703693389892578
    7. 'segment' → logprob: -6.703693389892578
    8. 'from' → logprob: -7.703693389892578
    9. 'seg' → logprob: -7.828693389892578
    10. 'start' → logprob: -7.828693389892578

Token 1531: ' moves' (ID: 19523)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42340174317359924
    2. 'current' → logprob: -2.4234018325805664
    3. ' for' → logprob: -2.6734018325805664
    4. '#' → logprob: -3.1734018325805664
    5. 'if' → logprob: -3.1734018325805664
    6. '               ' → logprob: -3.2984018325805664
    7. ' if' → logprob: -4.798401832580566
    8. ' current' → logprob: -4.798401832580566
    9. 'curr' → logprob: -4.923401832580566
    10. 'cur' → logprob: -5.048401832580566

Token 1532: ' allowed' (ID: 9279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1907401084899902
    2. 'from' → logprob: -1.9407401084899902
    3. ' are' → logprob: -2.4407401084899902
    4. ' must' → logprob: -2.8157401084899902
    5. ' should' → logprob: -2.8157401084899902
    6. ' can' → logprob: -3.0657401084899902
    7. 'are' → logprob: -3.1907401084899902
    8. 'for' → logprob: -3.6907401084899902
    9. '                   ' → logprob: -3.8157401084899902
    10. 'should' → logprob: -3.8157401084899902

Token 1533: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.148224115371704
    2. '=' → logprob: -2.023224115371704
    3. ' if' → logprob: -2.398224115371704
    4. ' are' → logprob: -2.773224115371704
    5. 'to' → logprob: -3.148224115371704
    6. 'for' → logprob: -3.273224115371704
    7. ' to' → logprob: -3.523224115371704
    8. 'if' → logprob: -3.648224115371704
    9. ' only' → logprob: -3.648224115371704
    10. '           ' → logprob: -3.648224115371704

Token 1534: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5917953252792358
    2. ' if' → logprob: -1.0917953252792358
    3. 'to' → logprob: -3.0917954444885254
    4. ' to' → logprob: -3.2167954444885254
    5. ' in' → logprob: -5.216795444488525
    6. 'from' → logprob: -5.466795444488525
    7. 'in' → logprob: -5.716795444488525
    8. 'for' → logprob: -5.841795444488525
    9. ' for' → logprob: -6.091795444488525
    10. ':' → logprob: -7.091795444488525

Token 1535: ' neighbors' (ID: 31655)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.0051888227462769
    2. 'd' → logprob: -1.5051888227462769
    3. 'self' → logprob: -1.6301888227462769
    4. 'abs' → logprob: -3.0051889419555664
    5. 'route' → logprob: -3.1301889419555664
    6. 'adj' → logprob: -3.2551889419555664
    7. 'dist' → logprob: -3.5051889419555664
    8. ' nd' → logprob: -4.755188941955566
    9. 'neighbors' → logprob: -5.005188941955566
    10. 'points' → logprob: -5.255188941955566

Token 1536: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2790203094482422
    2. '           ' → logprob: -1.6540203094482422
    3. ' and' → logprob: -1.9040203094482422
    4. ' or' → logprob: -2.154020309448242
    5. ':' → logprob: -2.404020309448242
    6. ',' → logprob: -2.779020309448242
    7. '=' → logprob: -4.029020309448242
    8. 'and' → logprob: -4.279020309448242
    9. ' (' → logprob: -4.654020309448242
    10. '               ' → logprob: -4.654020309448242

Token 1537: ' route' (ID: 9656)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47754785418510437
    2. ' the' → logprob: -1.7275478839874268
    3. 'route' → logprob: -2.3525478839874268
    4. ' route' → logprob: -3.2275478839874268
    5. 'self' → logprob: -3.3525478839874268
    6. 'possible' → logprob: -3.8525478839874268
    7. 'each' → logprob: -5.852547645568848
    8. 'segments' → logprob: -6.102547645568848
    9. ' possible' → logprob: -6.852547645568848
    10. 'either' → logprob: -6.852547645568848

Token 1538: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03258736431598663
    2. '               ' → logprob: -4.78258752822876
    3. ',' → logprob: -5.53258752822876
    4. 'segments' → logprob: -5.65758752822876
    5. '_points' → logprob: -5.78258752822876
    6. 'points' → logprob: -5.90758752822876
    7. '_segments' → logprob: -6.78258752822876
    8. ' points' → logprob: -6.90758752822876
    9. '.' → logprob: -7.03258752822876
    10. '_segment' → logprob: -7.28258752822876

Token 1539: ' stay' (ID: 5092)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.849784791469574
    2. 'self' → logprob: -1.8497848510742188
    3. 'current' → logprob: -1.8497848510742188
    4. ' the' → logprob: -2.7247848510742188
    5. 'd' → logprob: -2.9747848510742188
    6. ' to' → logprob: -3.5997848510742188
    7. 'the' → logprob: -4.099784851074219
    8. ' at' → logprob: -4.599784851074219
    9. 'same' → logprob: -4.724784851074219
    10. ' d' → logprob: -4.849784851074219

Token 1540: ' still' (ID: 2928)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08174245804548264
    2. 'in' → logprob: -3.081742525100708
    3. ' in' → logprob: -4.956742286682129
    4. '                   ' → logprob: -5.956742286682129
    5. '           ' → logprob: -6.331742286682129
    6. 'positions' → logprob: -6.331742286682129
    7. 'on' → logprob: -6.581742286682129
    8. 'put' → logprob: -6.831742286682129
    9. '_positions' → logprob: -6.956742286682129
    10. 'ing' → logprob: -7.206742286682129

Token 1541: '.

' (ID: 364)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004131536406930536
    2. '                
' → logprob: -9.250412940979004
    3. '<|end|>' → logprob: -9.375412940979004
    4. ',' → logprob: -10.000412940979004
    5. '                   ' → logprob: -10.000412940979004
    6. '                ' → logprob: -10.250412940979004
    7. '              ' → logprob: -11.000412940979004
    8. ' and' → logprob: -11.250412940979004
    9. '<|end|>' → logprob: -11.625412940979004
    10. '           ' → logprob: -11.750412940979004

Token 1542: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002459129551425576
    2. '           ' → logprob: -6.5024590492248535
    3. '       ' → logprob: -7.7524590492248535
    4. '
' → logprob: -8.627459526062012
    5. '```' → logprob: -9.127459526062012
    6. '                   ' → logprob: -9.252459526062012
    7. '                
' → logprob: -10.002459526062012
    8. '        
' → logprob: -11.002459526062012
    9. 'from' → logprob: -11.002459526062012
    10. '                ' → logprob: -11.877459526062012

Token 1543: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004180140793323517
    2. '           ' → logprob: -5.754179954528809
    3. '                   ' → logprob: -8.129179954528809
    4. '       ' → logprob: -8.379179954528809
    5. '
' → logprob: -8.879179954528809
    6. '                
' → logprob: -9.504179954528809
    7. ' if' → logprob: -10.129179954528809
    8. ' for' → logprob: -10.379179954528809
    9. 'for' → logprob: -10.504179954528809
    10. '#' (adapté à ' #') → logprob: -10.754179954528809

Token 1544: ' Check' (ID: 6208)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19485759735107422
    2. 'if' → logprob: -2.694857597351074
    3. ' if' → logprob: -3.569857597351074
    4. '#' → logprob: -3.944857597351074
    5. '           ' → logprob: -3.944857597351074
    6. 'for' → logprob: -4.819857597351074
    7. ' for' → logprob: -5.694857597351074
    8. '                   ' → logprob: -5.944857597351074
    9. 'dist' → logprob: -5.944857597351074
    10. 'segment' → logprob: -5.944857597351074

Token 1545: ' neighbors' (ID: 31655)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24527472257614136
    2. ' if' → logprob: -2.370274782180786
    3. '               ' → logprob: -3.745274782180786
    4. 'start' → logprob: -3.745274782180786
    5. '#' → logprob: -4.620274543762207
    6. 'import' → logprob: -4.745274543762207
    7. 'current' → logprob: -4.995274543762207
    8. 'for' → logprob: -4.995274543762207
    9. '           ' → logprob: -5.245274543762207
    10. 'nd' → logprob: -5.370274543762207

Token 1546: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08177332580089569
    2. '           ' → logprob: -2.581773281097412
    3. 'for' → logprob: -7.831773281097412
    4. '       ' → logprob: -8.08177375793457
    5. ',' → logprob: -8.20677375793457
    6. '
' → logprob: -8.33177375793457
    7. '#' → logprob: -8.45677375793457
    8. ' for' → logprob: -8.58177375793457
    9. 'if' → logprob: -8.70677375793457
    10. 'current' → logprob: -8.95677375793457

Token 1547: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008653572760522366
    2. 'nd' → logprob: -5.13365364074707
    3. ' d' → logprob: -6.38365364074707
    4. 'self' → logprob: -8.13365364074707
    5. '       ' → logprob: -8.50865364074707
    6. '   ' → logprob: -8.88365364074707
    7. 'dist' → logprob: -9.00865364074707
    8. '           ' → logprob: -9.75865364074707
    9. ' nd' → logprob: -9.75865364074707
    10. 'round' → logprob: -10.13365364074707

Token 1548: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007455448503606021
    2. 'for' → logprob: -8.25074577331543
    3. 'ist' → logprob: -8.50074577331543
    4. 'if' → logprob: -10.00074577331543
    5. '#' → logprob: -10.12574577331543
    6. 'd' → logprob: -10.62574577331543
    7. '   ' → logprob: -10.62574577331543
    8. 'istance' → logprob: -10.87574577331543
    9. 'ef' → logprob: -11.12574577331543
    10. 'a' → logprob: -11.25074577331543

Token 1549: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02980881556868553
    2. '               ' → logprob: -4.27980899810791
    3. '       ' → logprob: -4.65480899810791
    4. '
' → logprob: -6.40480899810791
    5. ',' → logprob: -7.27980899810791
    6. 'prev' → logprob: -7.65480899810791
    7. 'd' → logprob: -8.02980899810791
    8. ':' → logprob: -8.15480899810791
    9. 'index' → logprob: -8.40480899810791
    10. 'for' → logprob: -8.52980899810791

Token 1550: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07421242445707321
    2. 'nd' → logprob: -2.6992123126983643
    3. ' d' → logprob: -7.074212551116943
    4. '#' → logprob: -7.449212551116943
    5. 'self' → logprob: -7.949212551116943
    6. 'their' → logprob: -7.949212551116943
    7. 'route' → logprob: -7.949212551116943
    8. 'continue' → logprob: -8.074212074279785
    9. 'possible' → logprob: -8.074212074279785
    10. 'for' → logprob: -8.699212074279785

Token 1551: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004259680863469839
    2. 'A' → logprob: -5.5042595863342285
    3. 'd' → logprob: -8.754260063171387
    4. 'a' → logprob: -11.379260063171387
    5. ' B' → logprob: -12.566760063171387
    6. '
' → logprob: -13.316760063171387
    7. '```' → logprob: -13.754260063171387
    8. '_B' → logprob: -14.254260063171387
    9. ' d' → logprob: -15.004260063171387
    10. 'b' → logprob: -15.066760063171387

Token 1552: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001873189932666719
    2. '           ' → logprob: -7.376873016357422
    3. ',' → logprob: -7.626873016357422
    4. '
' → logprob: -8.251873016357422
    5. 'from' → logprob: -9.251873016357422
    6. '                
' → logprob: -9.501873016357422
    7. '#' → logprob: -9.876873016357422
    8. 'import' → logprob: -10.251873016357422
    9. '```' → logprob: -10.376873016357422
    10. '       ' → logprob: -10.376873016357422

Token 1553: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.1354585438966751
    2. 'self' → logprob: -2.510458469390869
    3. 'possible' → logprob: -3.635458469390869
    4. ' route' → logprob: -4.385458469390869
    5. 'the' → logprob: -5.135458469390869
    6. '[' → logprob: -9.260458946228027
    7. ' self' → logprob: -9.385458946228027
    8. 'range' → logprob: -9.510458946228027
    9. 'dist' → logprob: -9.510458946228027
    10. ' the' → logprob: -9.760458946228027

Token 1554: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13661201298236847
    2. '           ' → logprob: -3.2616119384765625
    3. '
' → logprob: -4.1366119384765625
    4. ',' → logprob: -4.1366119384765625
    5. ':' → logprob: -4.2616119384765625
    6. '_points' → logprob: -4.8866119384765625
    7. '        
' → logprob: -5.0116119384765625
    8. 'points' → logprob: -5.5116119384765625
    9. 'for' → logprob: -6.2616119384765625
    10. '_' → logprob: -6.2616119384765625

Token 1555: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5736196637153625
    2. '               ' → logprob: -1.1986196041107178
    3. '           ' → logprob: -2.0736196041107178
    4. ',' → logprob: -5.698619842529297
    5. '#' → logprob: -7.073619842529297
    6. '```' → logprob: -7.198619842529297
    7. '
' → logprob: -7.323619842529297
    8. 'for' → logprob: -7.448619842529297
    9. '        
' → logprob: -7.948619842529297
    10. 'index' → logprob: -8.073619842529297

Token 1556: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011152983643114567
    2. '           ' → logprob: -10.12511157989502
    3. 'for' → logprob: -11.12511157989502
    4. '#' → logprob: -11.37511157989502
    5. 'token' → logprob: -11.75011157989502
    6. '<|end|>' → logprob: -12.12511157989502
    7. '                
' → logprob: -12.37511157989502
    8. '                   ' → logprob: -12.75011157989502
    9. 'from' → logprob: -12.75011157989502
    10. 'tokens' → logprob: -12.87511157989502

Token 1557: ' neighbors' (ID: 31655)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.513329803943634
    2. 'idx' → logprob: -2.3883297443389893
    3. '           ' → logprob: -2.8883297443389893
    4. 'index' → logprob: -3.0133297443389893
    5. '#' → logprob: -3.1383297443389893
    6. 'd' → logprob: -3.2633297443389893
    7. ' idx' → logprob: -3.2633297443389893
    8. 'i' → logprob: -4.638329982757568
    9. ' d' → logprob: -4.763329982757568
    10. 'for' → logprob: -4.888329982757568

Token 1558: '_d' (ID: 1565)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11859086900949478
    2. 'A' → logprob: -2.493590831756592
    3. '=' → logprob: -4.243590831756592
    4. '_a' → logprob: -4.993590831756592
    5. '_start' → logprob: -5.993590831756592
    6. '_indices' → logprob: -6.368590831756592
    7. '_A' → logprob: -6.743590831756592
    8. ':' → logprob: -7.368590831756592
    9. '_d' → logprob: -7.993590831756592
    10. '_idx' → logprob: -7.993590831756592

Token 1559: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.896309739408025e-07
    2. 'А' → logprob: -15.500000953674316
    3. ' A' → logprob: -15.875000953674316
    4. '_A' → logprob: -16.625
    5. '```' → logprob: -16.875
    6. '[' → logprob: -17.0
    7. '	A' → logprob: -17.25
    8. 'a' → logprob: -17.25
    9. '
' → logprob: -17.5
    10. '#' → logprob: -17.5

Token 1560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02563682571053505
    2. '=' → logprob: -4.650636672973633
    3. '_idx' → logprob: -5.275636672973633
    4. '_indices' → logprob: -5.275636672973633
    5. '_index' → logprob: -6.025636672973633
    6. '_indexes' → logprob: -7.025636672973633
    7. ':' → logprob: -7.150636672973633
    8. '_idxs' → logprob: -7.275636672973633
    9. '=[]
' → logprob: -8.900636672973633
    10. 's' → logprob: -9.025636672973633

Token 1561: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.062227487564086914
    2. '[]' → logprob: -3.062227487564087
    3. '[' → logprob: -4.687227249145508
    4. '[
' → logprob: -6.187227249145508
    5. 'set' → logprob: -6.687227249145508
    6. '{' → logprob: -7.937227249145508
    7. '[]

' → logprob: -7.937227249145508
    8. '[i' → logprob: -9.437227249145508
    9. '[pos' → logprob: -10.062227249145508
    10. '[self' → logprob: -10.062227249145508

Token 1562: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013683518394827843
    2. '               ' → logprob: -4.638683319091797
    3. 'for' → logprob: -5.763683319091797
    4. '           ' → logprob: -7.763683319091797
    5. 'index' → logprob: -8.513683319091797
    6. ' for' → logprob: -9.013683319091797
    7. 'idx' → logprob: -11.513683319091797
    8. '```' → logprob: -12.763683319091797
    9. '#' → logprob: -12.888683319091797
    10. '[' → logprob: -13.138683319091797

Token 1563: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.6524161100387573
    2. 'index' → logprob: -1.1524161100387573
    3. 'for' → logprob: -2.027416229248047
    4. 'if' → logprob: -4.152416229248047
    5. 'i' → logprob: -5.027416229248047
    6. '       ' → logprob: -5.777416229248047
    7. '#' → logprob: -6.277416229248047
    8. 'pos' → logprob: -6.402416229248047
    9. 'd' → logprob: -7.527416229248047
    10. 'prev' → logprob: -7.777416229248047

Token 1564: 'A' (ID: 32)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31883877515792847
    2. ' =' → logprob: -1.3188388347625732
    3. 'A' → logprob: -6.443838596343994
    4. 'for' → logprob: -6.693838596343994
    5. '       ' → logprob: -7.443838596343994
    6. '_left' → logprob: -7.568838596343994
    7. 'd' → logprob: -7.943838596343994
    8. 'in' → logprob: -8.068839073181152
    9. 'left' → logprob: -9.193839073181152
    10. '   ' → logprob: -9.318839073181152

Token 1565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04894716292619705
    2. ' =' → logprob: -3.0489470958709717
    3. 'for' → logprob: -8.92394733428955
    4. '=None' → logprob: -8.92394733428955
    5. ':' → logprob: -10.92394733428955
    6. 'in' → logprob: -11.42394733428955
    7. '=[]
' → logprob: -11.54894733428955
    8. 'idx' → logprob: -11.67394733428955
    9. '=[]' → logprob: -11.67394733428955
    10. '=-' → logprob: -11.67394733428955

Token 1566: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03328174725174904
    2. 'self' → logprob: -4.1582818031311035
    3. 'next' → logprob: -4.5332818031311035
    4. 'bis' → logprob: -5.9082818031311035
    5. 'min' → logprob: -6.2832818031311035
    6. 'None' → logprob: -6.9082818031311035
    7. 'max' → logprob: -7.7832818031311035
    8. '-' → logprob: -8.533281326293945
    9. 'len' → logprob: -9.908281326293945
    10. 'binary' → logprob: -10.033281326293945

Token 1567: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5537344217300415
    2. ' for' → logprob: -0.9287344217300415
    3. '       ' → logprob: -4.303734302520752
    4. '=' → logprob: -4.928734302520752
    5. ' =' → logprob: -5.428734302520752
    6. 'import' → logprob: -7.053734302520752
    7. '               ' → logprob: -7.428734302520752
    8. '<|end|>' → logprob: -7.553734302520752
    9. 'try' → logprob: -7.678734302520752
    10. '           ' → logprob: -7.928734302520752

Token 1568: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07522892951965332
    2. ' for' → logprob: -3.0752289295196533
    3. '0' → logprob: -4.575228691101074
    4. '       ' → logprob: -4.825228691101074
    5. 'import' → logprob: -6.200228691101074
    6. '               ' → logprob: -6.450228691101074
    7. 'i' → logprob: -7.075228691101074
    8. '=' → logprob: -7.325228691101074
    9. 'next' → logprob: -7.325228691101074
    10. 'try' → logprob: -8.075228691101074

Token 1569: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016627779230475426
    2. ' for' → logprob: -4.891627788543701
    3. 'left' → logprob: -5.141627788543701
    4. '       ' → logprob: -6.391627788543701
    5. 'import' → logprob: -7.516627788543701
    6. 'try' → logprob: -7.891627788543701
    7. '               ' → logprob: -8.641627311706543
    8. 'i' → logprob: -9.266627311706543
    9. 'l' → logprob: -9.391627311706543
    10. '#' → logprob: -9.766627311706543

Token 1570: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4391956685576588e-05
    2. 'idx' → logprob: -10.875024795532227
    3. ' i' → logprob: -13.000024795532227
    4. 'j' → logprob: -13.375024795532227
    5. '_i' → logprob: -14.875024795532227
    6. 'ix' → logprob: -14.875024795532227
    7. 'index' → logprob: -15.375024795532227
    8. 'ii' → logprob: -15.750024795532227
    9. '	i' → logprob: -16.125024795532227
    10. '(i' → logprob: -16.250024795532227

Token 1571: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6077460646629333
    2. ' in' → logprob: -0.8577460646629333
    3. ',' → logprob: -3.482746124267578
    4. 'i' → logprob: -7.982746124267578
    5. ' ,' → logprob: -9.232746124267578
    6. ' i' → logprob: -9.482746124267578
    7. ',i' → logprob: -11.232746124267578
    8. ' ' → logprob: -11.482746124267578
    9. '	in' → logprob: -11.857746124267578
    10. 'idx' → logprob: -12.107746124267578

Token 1572: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.022572506219148636
    2. 'val' → logprob: -4.3975725173950195
    3. 'pt' → logprob: -5.0225725173950195
    4. 'v' → logprob: -7.0225725173950195
    5. 'pd' → logprob: -7.2725725173950195
    6. 'd' → logprob: -7.5225725173950195
    7. 'pos' → logprob: -7.6475725173950195
    8. 'p' → logprob: -7.6475725173950195
    9. 'dp' → logprob: -9.02257251739502
    10. ' dist' → logprob: -9.39757251739502

Token 1573: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5285948514938354
    2. 'in' → logprob: -0.9035948514938354
    3. ',' → logprob: -5.278594970703125
    4. '_in' → logprob: -9.153594970703125
    5. '	in' → logprob: -10.028594970703125
    6. 'i' → logprob: -10.153594970703125
    7. '<|end|>' → logprob: -10.278594970703125
    8. '<|end|>' → logprob: -11.153594970703125
    9. ' ' → logprob: -11.403594970703125
    10. ' ,' → logprob: -11.653594970703125

Token 1574: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4740803837776184
    2. ' enumerate' → logprob: -0.9740803837776184
    3. '   ' → logprob: -14.099080085754395
    4. '           ' → logprob: -14.724080085754395
    5. '                       ' → logprob: -14.974080085754395
    6. '       ' → logprob: -15.474080085754395
    7. ' ' → logprob: -15.724080085754395
    8. '               ' → logprob: -15.724080085754395
    9. '  ' → logprob: -15.849080085754395
    10. 'self' → logprob: -15.849080085754395

Token 1575: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.5797008275985718
    2. 'self' → logprob: -0.8297008275985718
    3. '(route' → logprob: -5.829700946807861
    4. '(self' → logprob: -7.454700946807861
    5. ' route' → logprob: -9.704700469970703
    6. 'range' → logprob: -10.079700469970703
    7. '[self' → logprob: -10.579700469970703
    8. 'possible' → logprob: -10.579700469970703
    9. ' self' → logprob: -10.704700469970703
    10. 'enumer' → logprob: -11.204700469970703

Token 1576: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0024272636510431767
    2. '.points' → logprob: -6.252427101135254
    3. 'Points' → logprob: -8.877427101135254
    4. '._' → logprob: -9.252427101135254
    5. '.length' → logprob: -9.252427101135254
    6. '_lengths' → logprob: -9.877427101135254
    7. '       ' → logprob: -10.002427101135254
    8. 'points' → logprob: -11.377427101135254
    9. 's' → logprob: -11.877427101135254
    10. '.dist' → logprob: -12.002427101135254

Token 1577: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.36007657647132874
    2. 'dist' → logprob: -1.2350765466690063
    3. '_lengths' → logprob: -5.610076427459717
    4. '_prefix' → logprob: -6.360076427459717
    5. 'prefix' → logprob: -6.860076427459717
    6. '_distance' → logprob: -7.235076427459717
    7. '           ' → logprob: -7.485076427459717
    8. 'd' → logprob: -7.610076427459717
    9. 'length' → logprob: -7.610076427459717
    10. '       ' → logprob: -7.735076427459717

Token 1578: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.045294489711523056
    2. 'es' → logprob: -4.170294284820557
    3. 't' → logprob: -4.295294284820557
    4. 'ces' → logprob: -4.795294284820557
    5. 'ices' → logprob: -5.295294284820557
    6. 'aces' → logprob: -7.545294284820557
    7. 'ences' → logprob: -7.670294284820557
    8. 'prefix' → logprob: -8.545294761657715
    9. '_prefix' → logprob: -8.920294761657715
    10. 'e' → logprob: -9.545294761657715

Token 1579: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.000595447258092463
    2. '):' → logprob: -7.750595569610596
    3. '):
' → logprob: -10.250595092773438
    4. ':
' → logprob: -10.375595092773438
    5. '               ' → logprob: -11.125595092773438
    6. '                   ' → logprob: -11.125595092773438
    7. ':' → logprob: -11.250595092773438
    8. '                       ' → logprob: -11.250595092773438
    9. '():
' → logprob: -11.375595092773438
    10. 'if' → logprob: -12.375595092773438

Token 1580: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002074006013572216
    2. ':' → logprob: -7.002074241638184
    3. '                       ' → logprob: -8.002074241638184
    4. ' if' → logprob: -8.752074241638184
    5. ':
' → logprob: -8.752074241638184
    6. '		           ' → logprob: -8.877074241638184
    7. '               ' → logprob: -9.377074241638184
    8. '   ' → logprob: -10.002074241638184
    9. '                           ' → logprob: -10.127074241638184
    10. '<|end|>' → logprob: -10.377074241638184

Token 1581: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00495907012373209
    2. 'if' (adapté à ' if') → logprob: -5.5049591064453125
    3. '   ' → logprob: -7.8799591064453125
    4. ' if' → logprob: -8.754959106445312
    5. '		           ' → logprob: -9.004959106445312
    6. '                       ' → logprob: -9.504959106445312
    7. '           ' → logprob: -9.879959106445312
    8. '       ' → logprob: -10.879959106445312
    9. '	               ' → logprob: -10.879959106445312
    10. '               ' → logprob: -11.504959106445312

Token 1582: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.031715720891952515
    2. ' abs' → logprob: -3.5317156314849854
    3. 'math' → logprob: -6.6567158699035645
    4. 'dist' → logprob: -7.6567158699035645
    5. ' math' → logprob: -8.656715393066406
    6. '   ' → logprob: -11.281715393066406
    7. '(abs' → logprob: -12.156715393066406
    8. ' dist' → logprob: -12.281715393066406
    9. '                   ' → logprob: -13.031715393066406
    10. '                           ' → logprob: -13.156715393066406

Token 1583: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -7.946405094116926e-05
    2. 'dist' → logprob: -9.875079154968262
    3. '(d' → logprob: -11.125079154968262
    4. '(' → logprob: -11.500079154968262
    5. '(nd' → logprob: -13.875079154968262
    6. '(distance' → logprob: -14.500079154968262
    7. '(diff' → logprob: -14.625079154968262
    8. '	dist' → logprob: -14.875079154968262
    9. ' dist' → logprob: -15.500079154968262
    10. '(route' → logprob: -16.125080108642578

Token 1584: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931824088096619
    2. ' -' → logprob: -0.6931824088096619
    3. ' ' → logprob: -10.693181991577148
    4. '==' → logprob: -12.943181991577148
    5. '   ' → logprob: -13.318181991577148
    6. '  ' → logprob: -13.818181991577148
    7. '()-' → logprob: -13.818181991577148
    8. '-d' → logprob: -13.943181991577148
    9. '<=' → logprob: -14.068181991577148
    10. '         ' → logprob: -14.568181991577148

Token 1585: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004541486850939691
    2. 'nd' → logprob: -7.875453948974609
    3. ' d' → logprob: -9.62545394897461
    4. '   ' → logprob: -12.62545394897461
    5. '       ' → logprob: -13.62545394897461
    6. ' nd' → logprob: -14.25045394897461
    7. '           ' → logprob: -14.62545394897461
    8. '  ' → logprob: -14.75045394897461
    9. '(d' → logprob: -14.87545394897461
    10. ' ' → logprob: -15.37545394897461

Token 1586: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.580929347255733e-05
    2. 'a' → logprob: -12.875016212463379
    3. 'd' → logprob: -13.000016212463379
    4. ' A' → logprob: -13.250016212463379
    5. ' d' → logprob: -13.375016212463379
    6. '   ' → logprob: -13.500016212463379
    7. '  ' → logprob: -14.250016212463379
    8. '_A' → logprob: -14.375016212463379
    9. 'А' → logprob: -14.375016212463379
    10. '	A' → logprob: -14.500016212463379

Token 1587: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011215225094929338
    2. ')<' → logprob: -6.876121520996094
    3. ')<=' → logprob: -9.376121520996094
    4. '   ' → logprob: -13.876121520996094
    5. ' )' → logprob: -14.251121520996094
    6. '       ' → logprob: -14.501121520996094
    7. '[' → logprob: -14.626121520996094
    8. '        ' → logprob: -15.751121520996094
    9. '    ' → logprob: -16.001121520996094
    10. '')' → logprob: -16.126121520996094

Token 1588: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.611388623714447
    2. '<=' → logprob: -0.861388623714447
    3. ' <' → logprob: -4.111388683319092
    4. ' <=' → logprob: -4.111388683319092
    5. ')' → logprob: -6.986388683319092
    6. ')<=' → logprob: -7.236388683319092
    7. ')<' → logprob: -9.111388206481934
    8. '==' → logprob: -9.486388206481934
    9. '<th' → logprob: -10.236388206481934
    10. '0' → logprob: -10.361388206481934

Token 1589: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25317415595054626
    2. '1' → logprob: -1.5031741857528687
    3. '=' → logprob: -7.253174304962158
    4. '=self' → logprob: -7.878174304962158
    5. ' self' → logprob: -9.003173828125
    6. ' ' → logprob: -10.878173828125
    7. '10' → logprob: -12.503173828125
    8. '   ' → logprob: -12.753173828125
    9. '0' → logprob: -13.003173828125
    10. '(self' → logprob: -14.253173828125

Token 1590: '.e' (ID: 2560)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3958755135536194
    2. 'self' → logprob: -1.1458754539489746
    3. 'eps' → logprob: -4.770875453948975
    4. '=' → logprob: -8.395875930786133
    5. 'e' → logprob: -9.520875930786133
    6. ' self' → logprob: -10.145875930786133
    7. 'epsilon' → logprob: -10.145875930786133
    8. '0' → logprob: -11.270875930786133
    9. '   ' → logprob: -11.395875930786133
    10. '```' → logprob: -11.770875930786133

Token 1591: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.014972495846450329
    2. 'eps' → logprob: -4.889972686767578
    3. '-' → logprob: -5.014972686767578
    4. '6' → logprob: -7.514972686767578
    5. 'p' → logprob: -10.139972686767578
    6. '1' → logprob: -10.639972686767578
    7. 'psilon' → logprob: -10.764972686767578
    8. '.' → logprob: -11.139972686767578
    9. 'e' → logprob: -11.264972686767578
    10. '5' → logprob: -11.639972686767578

Token 1592: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07931879162788391
    2. ':' → logprob: -2.5793187618255615
    3. '                       ' → logprob: -8.57931900024414
    4. '):
' → logprob: -8.70431900024414
    5. '                   ' → logprob: -10.45431900024414
    6. '():
' → logprob: -11.32931900024414
    7. ' or' → logprob: -11.70431900024414
    8. ':
' → logprob: -11.82931900024414
    9. ' and' → logprob: -12.57931900024414
    10. 'and' → logprob: -12.70431900024414

Token 1593: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018835823982954025
    2. ':
' → logprob: -5.01883602142334
    3. ':' → logprob: -5.14383602142334
    4. '                   ' → logprob: -5.26883602142334
    5. '```' → logprob: -7.76883602142334
    6. '):
' → logprob: -9.01883602142334
    7. '               ' → logprob: -9.14383602142334
    8. '                           ' → logprob: -9.26883602142334
    9. ',' → logprob: -9.76883602142334
    10. '           ' → logprob: -10.39383602142334

Token 1594: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0011058022500947118
    2. '                       ' → logprob: -7.501105785369873
    3. ' idx' → logprob: -8.251106262207031
    4. '                   ' → logprob: -8.376106262207031
    5. '               ' → logprob: -10.126106262207031
    6. '	idx' → logprob: -12.001106262207031
    7. '[idx' → logprob: -12.251106262207031
    8. '           ' → logprob: -12.501106262207031
    9. 'index' → logprob: -13.501106262207031
    10. '                           ' → logprob: -13.876106262207031

Token 1595: 'A' (ID: 32)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27090078592300415
    2. ' =' → logprob: -1.6459007263183594
    3. 'A' → logprob: -3.2709007263183594
    4. 'i' → logprob: -5.645900726318359
    5. '=i' → logprob: -6.270900726318359
    6. '=A' → logprob: -7.020900726318359
    7. ' i' → logprob: -10.14590072631836
    8. ' A' → logprob: -10.14590072631836
    9. '==' → logprob: -10.52090072631836
    10. '=
' → logprob: -11.14590072631836

Token 1596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005250364076346159
    2. ' =' → logprob: -5.255250453948975
    3. '=i' → logprob: -11.255249977111816
    4. '=
' → logprob: -13.255249977111816
    5. '=None' → logprob: -14.005249977111816
    6. '=user' → logprob: -15.630249977111816
    7. '=int' → logprob: -16.255250930786133
    8. '=index' → logprob: -16.255250930786133
    9. '=}' → logprob: -16.505250930786133
    10. '	' → logprob: -16.755250930786133

Token 1597: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.0126840758603066e-05
    2. ' i' → logprob: -10.125040054321289
    3. '	i' → logprob: -18.25004005432129
    4. '   ' → logprob: -19.62504005432129
    5. '=i' → logprob: -20.50004005432129
    6. '                   ' → logprob: -20.87504005432129
    7. '(i' → logprob: -21.12504005432129
    8. ' ' → logprob: -21.25004005432129
    9. '  ' → logprob: -22.25004005432129
    10. '_i' → logprob: -22.50004005432129

Token 1598: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007261470425873995
    2. '<|end|>' → logprob: -5.507261276245117
    3. '                   ' → logprob: -7.132261276245117
    4. '
' → logprob: -7.382261276245117
    5. '                           ' → logprob: -7.507261276245117
    6. '               ' → logprob: -8.257261276245117
    7. 'break' → logprob: -8.382261276245117
    8. '           ' → logprob: -8.882261276245117
    9. ',' → logprob: -9.382261276245117
    10. ';' → logprob: -9.632261276245117

Token 1599: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00023298001906368881
    2. '               ' → logprob: -8.750232696533203
    3. '                   ' → logprob: -10.250232696533203
    4. '           ' → logprob: -10.625232696533203
    5. '       ' → logprob: -12.375232696533203
    6. '                           ' → logprob: -12.875232696533203
    7. ',' → logprob: -13.500232696533203
    8. '                        ' → logprob: -13.500232696533203
    9. '                        
' → logprob: -14.250232696533203
    10. 'break' → logprob: -14.250232696533203

Token 1600: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.027298513799905777
    2. 'break' (adapté à ' break') → logprob: -3.6522984504699707
    3. '               ' → logprob: -7.777298450469971
    4. '                   ' → logprob: -7.902298450469971
    5. 'if' → logprob: -9.277298927307129
    6. '           ' → logprob: -9.527298927307129
    7. ' break' → logprob: -10.527298927307129
    8. '       ' → logprob: -12.277298927307129
    9. '                           ' → logprob: -12.527298927307129
    10. '	break' → logprob: -13.527298927307129

Token 1601: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16113753616809845
    2. '       ' → logprob: -2.161137580871582
    3. 'if' → logprob: -3.911137580871582
    4. '           ' → logprob: -5.161137580871582
    5. ' if' → logprob: -5.286137580871582
    6. '
' → logprob: -6.411137580871582
    7. '                       ' → logprob: -7.536137580871582
    8. '                   ' → logprob: -8.286137580871582
    9. 'for' → logprob: -9.036137580871582
    10. ')' → logprob: -9.536137580871582

Token 1602: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29483020305633545
    2. '       ' → logprob: -1.4198302030563354
    3. 'if' → logprob: -4.544830322265625
    4. '           ' → logprob: -6.044830322265625
    5. ' if' → logprob: -8.044830322265625
    6. '                       ' → logprob: -9.419830322265625
    7. 'for' → logprob: -9.919830322265625
    8. '
' → logprob: -9.919830322265625
    9. '                   ' → logprob: -10.169830322265625
    10. '```' → logprob: -10.169830322265625

Token 1603: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.504914402961731
    2. 'if' (adapté à ' if') → logprob: -1.504914402961731
    3. '       ' → logprob: -2.2549142837524414
    4. ' if' → logprob: -2.7549142837524414
    5. '
' → logprob: -6.129914283752441
    6. '```' → logprob: -6.254914283752441
    7. 'for' → logprob: -7.129914283752441
    8. 'neighbors' → logprob: -7.879914283752441
    9. '           ' → logprob: -8.629914283752441
    10. ' for' → logprob: -9.129914283752441

Token 1604: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06228136271238327
    2. ' idx' → logprob: -2.812281370162964
    3. '               ' → logprob: -9.312281608581543
    4. '                   ' → logprob: -9.312281608581543
    5. 'abs' → logprob: -10.312281608581543
    6. '   ' → logprob: -10.562281608581543
    7. '           ' → logprob: -10.562281608581543
    8. '       ' → logprob: -11.937281608581543
    9. '(idx' → logprob: -11.937281608581543
    10. '0' → logprob: -12.187281608581543

Token 1605: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00024715426843613386
    2. '==' → logprob: -9.87524700164795
    3. '+' → logprob: -10.00024700164795
    4. ' ==' → logprob: -10.12524700164795
    5. '=' → logprob: -10.62524700164795
    6. ' !=' → logprob: -11.00024700164795
    7. '   ' → logprob: -11.25024700164795
    8. ':' → logprob: -11.87524700164795
    9. ' =' → logprob: -12.25024700164795
    10. 'B' → logprob: -12.62524700164795

Token 1606: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18294143676757812
    2. 'is' → logprob: -1.8079414367675781
    3. 'in' → logprob: -6.682941436767578
    4. '==' → logprob: -7.307941436767578
    5. '-' → logprob: -7.932941436767578
    6. ' in' → logprob: -7.932941436767578
    7. '!=' → logprob: -9.432941436767578
    8. '	is' → logprob: -9.557941436767578
    9. ' not' → logprob: -9.682941436767578
    10. ' ==' → logprob: -9.682941436767578

Token 1607: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7982726097106934
    2. 'None' → logprob: -0.7982726097106934
    3. ' not' → logprob: -2.6732726097106934
    4. ' None' → logprob: -3.5482726097106934
    5. '0' → logprob: -6.298272609710693
    6. '   ' → logprob: -9.673273086547852
    7. 'Not' → logprob: -10.173273086547852
    8. ' ' → logprob: -10.798273086547852
    9. 'none' → logprob: -12.173273086547852
    10. '    ' → logprob: -13.048273086547852

Token 1608: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3499724864959717
    2. ':' → logprob: -1.4749724864959717
    3. '                   ' → logprob: -2.9749724864959717
    4. ' and' → logprob: -5.224972724914551
    5. '           ' → logprob: -5.724972724914551
    6. '               ' → logprob: -5.849972724914551
    7. '                       ' → logprob: -6.599972724914551
    8. ' or' → logprob: -6.599972724914551
    9. '                           ' → logprob: -7.849972724914551
    10. ',' → logprob: -7.974972724914551

Token 1609: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08997412770986557
    2. '               ' → logprob: -3.0899741649627686
    3. '           ' → logprob: -3.4649741649627686
    4. '                       ' → logprob: -5.7149739265441895
    5. ' continue' → logprob: -5.9649739265441895
    6. ' for' → logprob: -6.4649739265441895
    7. '```' → logprob: -6.9649739265441895
    8. '                           ' → logprob: -8.839974403381348
    9. 'continue' → logprob: -8.839974403381348
    10. '                ' → logprob: -9.339974403381348

Token 1610: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.17289339005947113
    2. ' continue' → logprob: -2.2978932857513428
    3. 'idx' → logprob: -3.6728932857513428
    4. '                   ' → logprob: -3.7978932857513428
    5. '               ' → logprob: -5.547893524169922
    6. 'for' → logprob: -5.922893524169922
    7. '#' → logprob: -6.797893524169922
    8. ' idx' → logprob: -6.922893524169922
    9. '                       ' → logprob: -7.797893524169922
    10. 'if' → logprob: -7.922893524169922

Token 1611: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05839858576655388
    2. '
' → logprob: -2.933398485183716
    3. '                
' → logprob: -6.058398723602295
    4. '<|end|>' → logprob: -7.433398723602295
    5. '           ' → logprob: -9.558398246765137
    6. '       ' → logprob: -9.558398246765137
    7. 'neighbors' → logprob: -9.683398246765137
    8. '  
' → logprob: -9.683398246765137
    9. '```' → logprob: -10.183398246765137
    10. ' neighbors' → logprob: -10.558398246765137

Token 1612: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033308175625279546
    2. '```' → logprob: -8.625332832336426
    3. '       ' → logprob: -9.875332832336426
    4. '
' → logprob: -10.125332832336426
    5. '                
' → logprob: -10.875332832336426
    6. '           ' → logprob: -10.875332832336426
    7. 'for' → logprob: -12.000332832336426
    8. '+' → logprob: -12.125332832336426
    9. '                   ' → logprob: -12.875332832336426
    10. ' for' → logprob: -13.375332832336426

Token 1613: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39215174317359924
    2. 'neighbors' → logprob: -1.7671517133712769
    3. 'if' (adapté à ' if') → logprob: -2.0171518325805664
    4. 'neighbor' → logprob: -4.767151832580566
    5. '
' → logprob: -5.017151832580566
    6. 'for' → logprob: -6.642151832580566
    7. 'next' → logprob: -6.642151832580566
    8. ' if' → logprob: -7.142151832580566
    9. ' neighbors' → logprob: -7.392151832580566
    10. '                
' → logprob: -7.642151832580566

Token 1614: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10153362900018692
    2. ' idx' → logprob: -2.3515336513519287
    3. '0' → logprob: -6.97653341293335
    4. 'abs' → logprob: -9.101533889770508
    5. '	idx' → logprob: -9.351533889770508
    6. ' ' → logprob: -9.476533889770508
    7. '(idx' → logprob: -9.976533889770508
    8. '   ' → logprob: -10.226533889770508
    9. ' abs' → logprob: -11.351533889770508
    10. '                   ' → logprob: -12.851533889770508

Token 1615: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.36574100604048e-06
    2. '=' → logprob: -13.125004768371582
    3. ' A' → logprob: -14.125004768371582
    4. '	A' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.500004768371582
    6. 'a' → logprob: -15.875004768371582
    7. '=A' → logprob: -16.000003814697266
    8. '_idx' → logprob: -16.000003814697266
    9. ')' → logprob: -16.250003814697266
    10. '```' → logprob: -16.250003814697266

Token 1616: ' >' (ID: 1424)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9264217615127563
    2. '+' → logprob: -1.6764217615127563
    3. ' -' → logprob: -2.051421642303467
    4. ' in' → logprob: -2.801421642303467
    5. ' >=' → logprob: -2.926421642303467
    6. ' +' → logprob: -3.426421642303467
    7. '>=' → logprob: -3.426421642303467
    8. ' >' → logprob: -3.801421642303467
    9. '>' → logprob: -4.051421642303467
    10. 'in' → logprob: -4.176421642303467

Token 1617: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00220687803812325
    2. ' ' → logprob: -6.127206802368164
    3. '=' → logprob: -10.752206802368164
    4. '   ' → logprob: -15.377206802368164
    5. '  ' → logprob: -16.002206802368164
    6. '
' → logprob: -17.627206802368164
    7. ' =' → logprob: -17.877206802368164
    8. '     ' → logprob: -17.877206802368164
    9. '1' → logprob: -18.377206802368164
    10. ' ' → logprob: -18.502206802368164

Token 1618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. '=' → logprob: -13.625160217285156
    4. '   ' → logprob: -16.250160217285156
    5. '
' → logprob: -17.375160217285156
    6. '  ' → logprob: -18.125160217285156
    7. '-' → logprob: -18.250160217285156
    8. '1' → logprob: -18.625160217285156
    9. '۰' → logprob: -18.625160217285156
    10. '[' → logprob: -18.812660217285156

Token 1619: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4183731973171234
    2. '                   ' → logprob: -1.6683732271194458
    3. ' and' → logprob: -2.1683731079101562
    4. ':' → logprob: -3.4183731079101562
    5. 'and' → logprob: -6.168373107910156
    6. ',' → logprob: -6.418373107910156
    7. '                       ' → logprob: -6.793373107910156
    8. '               ' → logprob: -7.043373107910156
    9. '                           ' → logprob: -8.918373107910156
    10. '):
' → logprob: -9.543373107910156

Token 1620: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00025228000595234334
    2. '                       ' → logprob: -9.125252723693848
    3. 'neighbors' → logprob: -9.875252723693848
    4. '               ' → logprob: -10.000252723693848
    5. ' neighbors' → logprob: -11.250252723693848
    6. '```' → logprob: -11.875252723693848
    7. '   ' → logprob: -12.000252723693848
    8. '	               ' → logprob: -12.250252723693848
    9. '		           ' → logprob: -12.375252723693848
    10. '           ' → logprob: -12.500252723693848

Token 1621: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.18267394602298737
    2. '                   ' → logprob: -1.9326739311218262
    3. ' neighbors' → logprob: -3.932673931121826
    4. '                       ' → logprob: -6.682673931121826
    5. '   ' → logprob: -7.057673931121826
    6. '               ' → logprob: -8.557674407958984
    7. 'possible' → logprob: -8.682674407958984
    8. '```' → logprob: -10.432674407958984
    9. '_neighbors' → logprob: -10.807674407958984
    10. '
' → logprob: -11.432674407958984

Token 1622: '_d' (ID: 1565)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014867615886032581
    2. '_d' → logprob: -4.639867782592773
    3. '=' → logprob: -6.264867782592773
    4. ' =' → logprob: -6.389867782592773
    5. '.' → logprob: -6.764867782592773
    6. 'append' → logprob: -9.639867782592773
    7. ' .' → logprob: -9.889867782592773
    8. 'd' → logprob: -10.014867782592773
    9. '+' → logprob: -10.389867782592773
    10. 'A' → logprob: -10.639867782592773

Token 1623: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.3199920178740285e-05
    2. 'ist' → logprob: -12.375022888183594
    3. 'f' → logprob: -13.125022888183594
    4. 'for' → logprob: -13.375022888183594
    5. '=' → logprob: -13.625022888183594
    6. 'ists' → logprob: -13.625022888183594
    7. 'neighbors' → logprob: -13.625022888183594
    8. 'istance' → logprob: -13.750022888183594
    9. '```' → logprob: -13.750022888183594
    10. '   ' → logprob: -14.000022888183594

Token 1624: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017648482753429562
    2. '.' → logprob: -8.750176429748535
    3. '=' → logprob: -11.375176429748535
    4. 'append' → logprob: -13.000176429748535
    5. ' .' → logprob: -13.875176429748535
    6. '           ' → logprob: -13.875176429748535
    7. ' =' → logprob: -14.000176429748535
    8. '               ' → logprob: -14.625176429748535
    9. '                   ' → logprob: -15.000176429748535
    10. '.ap' → logprob: -15.750176429748535

Token 1625: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.00763561250641942
    2. ' route' → logprob: -4.882635593414307
    3. '(route' → logprob: -11.132636070251465
    4. 'self' → logprob: -11.632636070251465
    5. '                   ' → logprob: -12.382636070251465
    6. '                       ' → logprob: -14.632636070251465
    7. '   ' → logprob: -14.757636070251465
    8. '                           ' → logprob: -15.632636070251465
    9. ' self' → logprob: -15.882636070251465
    10. '$route' → logprob: -15.882636070251465

Token 1626: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.6047699318733066e-05
    2. 'points' → logprob: -12.125016212463379
    3. 'Points' → logprob: -12.375016212463379
    4. '_dist' → logprob: -13.000016212463379
    5. '_segments' → logprob: -14.625016212463379
    6. '```' → logprob: -14.625016212463379
    7. '`' → logprob: -14.750016212463379
    8. '_lengths' → logprob: -15.375016212463379
    9. '_POINTS' → logprob: -15.625016212463379
    10. '``' → logprob: -15.750016212463379

Token 1627: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5398105382919312
    2. 'dist' → logprob: -1.0398105382919312
    3. '[idx' → logprob: -3.1648106575012207
    4. 'idx' → logprob: -4.164810657501221
    5. 'Distances' → logprob: -5.414810657501221
    6. 'Dist' → logprob: -7.289810657501221
    7. 'd' → logprob: -8.914810180664062
    8. '   ' → logprob: -9.414810180664062
    9. '(idx' → logprob: -9.414810180664062
    10. '_idx' → logprob: -9.414810180664062

Token 1628: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0005672106635756791
    2. 'prefix' → logprob: -8.750567436218262
    3. 'ces' → logprob: -9.250567436218262
    4. 'aces' → logprob: -9.375567436218262
    5. '_prefix' → logprob: -9.625567436218262
    6. 'ices' → logprob: -10.500567436218262
    7. 'Distances' → logprob: -11.000567436218262
    8. 'fix' → logprob: -11.125567436218262
    9. 's' → logprob: -11.375567436218262
    10. ' distances' → logprob: -11.375567436218262

Token 1629: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.2200749754119897e-06
    2. 'idx' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '[
' → logprob: -15.750001907348633
    5. '[' → logprob: -16.500001907348633
    6. '(idx' → logprob: -16.750001907348633
    7. '```' → logprob: -16.875001907348633
    8. '
' → logprob: -17.250001907348633
    9. ')[' → logprob: -17.250001907348633
    10. ' [' → logprob: -17.500001907348633

Token 1630: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004860842600464821
    2. '-' → logprob: -8.625486373901367
    3. '_idx' → logprob: -9.125486373901367
    4. 'idx' → logprob: -9.875486373901367
    5. 'x' → logprob: -10.125486373901367
    6. 'a' → logprob: -10.250486373901367
    7. '   ' → logprob: -11.250486373901367
    8. '[idx' → logprob: -11.500486373901367
    9. 'Idx' → logprob: -11.750486373901367
    10. '1' → logprob: -12.125486373901367

Token 1631: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01848691701889038
    2. '[idx' → logprob: -4.643486976623535
    3. ' -' → logprob: -4.893486976623535
    4. 'idx' → logprob: -6.893486976623535
    5. '(idx' → logprob: -10.268486976623535
    6. '[' → logprob: -10.518486976623535
    7. '   ' → logprob: -10.643486976623535
    8. '_idx' → logprob: -10.768486976623535
    9. ' ' → logprob: -11.143486976623535
    10. ' idx' → logprob: -11.268486976623535

Token 1632: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.250003814697266
    4. '```' → logprob: -16.500003814697266
    5. ']' → logprob: -17.750003814697266
    6. '
' → logprob: -18.250003814697266
    7. '  ' → logprob: -18.687503814697266
    8. '       ' → logprob: -19.375003814697266
    9. '           ' → logprob: -19.375003814697266
    10. '...' → logprob: -19.687503814697266

Token 1633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -17.875001907348633
    5. '0' → logprob: -19.375001907348633
    6. '  ' → logprob: -19.437501907348633
    7. '۱' → logprob: -20.062501907348633
    8. '2' → logprob: -20.125001907348633
    9. ']' → logprob: -20.562501907348633
    10. '-' → logprob: -20.687501907348633

Token 1634: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12722310423851013
    2. ')' → logprob: -2.127223014831543
    3. '               ' → logprob: -8.627223014831543
    4. ')
' → logprob: -10.002223014831543
    5. ' )
' → logprob: -10.502223014831543
    6. '                   ' → logprob: -10.877223014831543
    7. '])
' → logprob: -11.752223014831543
    8. '           ' → logprob: -12.377223014831543
    9. ')`
' → logprob: -12.752223014831543
    10. ' )' → logprob: -13.377223014831543

Token 1635: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041243841405957937
    2. '                   ' → logprob: -8.500411987304688
    3. '```' → logprob: -8.750411987304688
    4. 'neighbors' → logprob: -11.250411987304688
    5. ',' → logprob: -12.125411987304688
    6. '           ' → logprob: -12.125411987304688
    7. 'if' → logprob: -12.375411987304688
    8. '			' → logprob: -12.375411987304688
    9. '
' → logprob: -12.500411987304688
    10. '                
' → logprob: -12.625411987304688

Token 1636: ' neighbors' (ID: 31655)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2767286002635956
    2. 'if' → logprob: -1.526728630065918
    3. 'neighbors' (adapté à ' neighbors') → logprob: -3.776728630065918
    4. ' if' → logprob: -6.776728630065918
    5. '           ' → logprob: -8.401728630065918
    6. '```' → logprob: -9.026728630065918
    7. '       ' → logprob: -9.901728630065918
    8. '                   ' → logprob: -10.151728630065918
    9. ' neighbors' → logprob: -11.901728630065918
    10. '
' → logprob: -12.526728630065918

Token 1637: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0318068265914917
    2. 'A' → logprob: -3.6568069458007812
    3. '_idx' → logprob: -5.781806945800781
    4. '[idx' → logprob: -7.031806945800781
    5. 'idx' → logprob: -7.656806945800781
    6. 'd' → logprob: -8.281806945800781
    7. '```' → logprob: -8.281806945800781
    8. '+' → logprob: -8.656806945800781
    9. '_points' → logprob: -9.031806945800781
    10. '_dist' → logprob: -10.031806945800781

Token 1638: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.081584716506768e-05
    2. 'ist' → logprob: -11.125020980834961
    3. 'B' → logprob: -13.375020980834961
    4. 'x' → logprob: -13.625020980834961
    5. 'index' → logprob: -14.375020980834961
    6. 'idx' → logprob: -14.625020980834961
    7. 'istance' → logprob: -14.875020980834961
    8. 'ex' → logprob: -15.250020980834961
    9. 'dist' → logprob: -15.250020980834961
    10. '   ' → logprob: -15.500020980834961

Token 1639: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001935661886818707
    2. '.' → logprob: -6.2519354820251465
    3. ' .' → logprob: -12.876935958862305
    4. '.app' → logprob: -13.626935958862305
    5. '.extend' → logprob: -13.876935958862305
    6. 'append' → logprob: -14.001935958862305
    7. '           ' → logprob: -14.501935958862305
    8. '.ap' → logprob: -14.751935958862305
    9. '.add' → logprob: -15.876935958862305
    10. '<|end|>' → logprob: -16.001935958862305

Token 1640: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.01473736297339201
    2. '(route' → logprob: -4.264737129211426
    3. 'd' → logprob: -8.014737129211426
    4. ' route' → logprob: -8.389737129211426
    5. 'dist' → logprob: -11.639737129211426
    6. '(d' → logprob: -12.514737129211426
    7. '   ' → logprob: -14.014737129211426
    8. '(' → logprob: -14.514737129211426
    9. ' d' → logprob: -14.514737129211426
    10. '(dist' → logprob: -14.889737129211426

Token 1641: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.07993175089359283
    2. 'route' → logprob: -2.5799317359924316
    3. 'dist' → logprob: -7.829931735992432
    4. 's' → logprob: -7.954931735992432
    5. '(route' → logprob: -9.45493221282959
    6. 'distance' → logprob: -9.82993221282959
    7. ' route' → logprob: -10.20493221282959
    8. 'd' → logprob: -10.20493221282959
    9. 'Points' → logprob: -10.45493221282959
    10. '_dist' → logprob: -11.45493221282959

Token 1642: '_dist' (ID: 37968)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.7648802399635315
    2. '_dist' → logprob: -0.8898802399635315
    3. 'dist' → logprob: -2.1398801803588867
    4. 'Distances' → logprob: -5.639880180358887
    5. '_points' → logprob: -6.639880180358887
    6. '	dist' → logprob: -7.639880180358887
    7. '[' → logprob: -8.389880180358887
    8. 's' → logprob: -9.264880180358887
    9. '_indices' → logprob: -9.264880180358887
    10. '/dist' → logprob: -9.889880180358887

Token 1643: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.05002814158797264
    2. 'ices' → logprob: -3.175028085708618
    3. 'Distances' → logprob: -6.175028324127197
    4. 'dist' → logprob: -6.925028324127197
    5. ' distances' → logprob: -6.925028324127197
    6. '_dist' → logprob: -7.050028324127197
    7. 'aces' → logprob: -7.300028324127197
    8. 'ces' → logprob: -7.425028324127197
    9. 'ist' → logprob: -7.675028324127197
    10. 'es' → logprob: -8.300027847290039

Token 1644: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: 0.0
    2. 'idx' → logprob: -17.25
    3. '[min' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. '[
' → logprob: -19.875
    6. '	idx' → logprob: -20.0
    7. ' idx' → logprob: -20.125
    8. '[' → logprob: -20.875
    9. '(idx' → logprob: -21.0
    10. '
' → logprob: -21.5

Token 1645: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0454382449388504
    2. 'idx' → logprob: -3.295438289642334
    3. '_idx' → logprob: -5.170438289642334
    4. '[idx' → logprob: -6.545438289642334
    5. '+' → logprob: -9.045437812805176
    6. '
' → logprob: -10.670437812805176
    7. ']+' → logprob: -11.295437812805176
    8. '	idx' → logprob: -11.295437812805176
    9. ']' → logprob: -11.670437812805176
    10. 'i' → logprob: -11.795437812805176

Token 1646: '])
' (ID: 5169)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5330044627189636
    2. '+' → logprob: -1.0330045223236084
    3. '])' → logprob: -3.1580045223236084
    4. '])
' → logprob: -4.408004283905029
    5. '   ' → logprob: -6.533004283905029
    6. ' ])' → logprob: -7.283004283905029
    7. ' ])
' → logprob: -8.408004760742188
    8. '       ' → logprob: -10.283004760742188
    9. ']' → logprob: -10.408004760742188
    10. '    ' → logprob: -10.533004760742188

Token 1647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023083435371518135
    2. '```' → logprob: -8.62523078918457
    3. 'if' → logprob: -10.50023078918457
    4. ' if' → logprob: -10.87523078918457
    5. 'neighbors' → logprob: -13.62523078918457
    6. '			' → logprob: -13.75023078918457
    7. '           ' → logprob: -14.75023078918457
    8. '                   ' → logprob: -14.75023078918457
    9. '``' → logprob: -14.87523078918457
    10. '       ' → logprob: -15.25023078918457

Token 1648: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2016024887561798
    2. 'if' (adapté à ' if') → logprob: -1.7016024589538574
    3. '```' → logprob: -9.201602935791016
    4. ' if' → logprob: -9.451602935791016
    5. '           ' → logprob: -11.826602935791016
    6. '``' → logprob: -14.326602935791016
    7. 'neighbors' → logprob: -14.451602935791016
    8. '                   ' → logprob: -15.201602935791016
    9. '       ' → logprob: -15.326602935791016
    10. '              ' → logprob: -15.576602935791016

Token 1649: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07889628410339355
    2. ' idx' → logprob: -2.5788962841033936
    3. '	idx' → logprob: -12.578896522521973
    4. 'abs' → logprob: -13.203896522521973
    5. '(idx' → logprob: -14.578896522521973
    6. '[idx' → logprob: -15.328896522521973
    7. ' ' → logprob: -15.578896522521973
    8. '   ' → logprob: -15.828896522521973
    9. '
' → logprob: -16.953895568847656
    10. 'self' → logprob: -16.953895568847656

Token 1650: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.1080467781284824e-05
    2. '+' → logprob: -11.250041007995605
    3. 'X' → logprob: -11.875041007995605
    4. 'idx' → logprob: -12.000041007995605
    5. '_idx' → logprob: -12.125041007995605
    6. 'Idx' → logprob: -12.750041007995605
    7. 'x' → logprob: -13.000041007995605
    8. 'I' → logprob: -13.750041007995605
    9. ' A' → logprob: -14.000041007995605
    10. ' idx' → logprob: -14.375041007995605

Token 1651: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4930132031440735
    2. '<' → logprob: -0.9930132031440735
    3. '+' → logprob: -4.618013381958008
    4. ' +' → logprob: -4.743013381958008
    5. '<len' → logprob: -9.868013381958008
    6. '<size' → logprob: -10.493013381958008
    7. ' ' → logprob: -11.118013381958008
    8. '<class' → logprob: -11.243013381958008
    9. '<int' → logprob: -11.493013381958008
    10. '<n' → logprob: -12.368013381958008

Token 1652: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014164801687002182
    2. ' len' → logprob: -4.264164924621582
    3. '(len' → logprob: -14.264164924621582
    4. '	len' → logprob: -15.639164924621582
    5. ' ' → logprob: -15.889164924621582
    6. '   ' → logprob: -16.264163970947266
    7. '           ' → logprob: -16.639163970947266
    8. '=len' → logprob: -17.139163970947266
    9. '[len' → logprob: -17.389163970947266
    10. '  ' → logprob: -18.139163970947266

Token 1653: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.07955552637577057
    2. '(self' → logprob: -2.5795555114746094
    3. 'self' → logprob: -7.829555511474609
    4. 'route' → logprob: -8.32955551147461
    5. '(' → logprob: -10.70455551147461
    6. '(
' → logprob: -13.07955551147461
    7. ' (' → logprob: -14.95455551147461
    8. '```' → logprob: -15.20455551147461
    9. '$route' → logprob: -15.57955551147461
    10. '(routes' → logprob: -15.82955551147461

Token 1654: '_points' (ID: 30070)
  Prédit: '.route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.9956997036933899
    2. '_points' → logprob: -1.1206996440887451
    3. '(self' → logprob: -1.7456996440887451
    4. '(route' → logprob: -2.245699644088745
    5. 'self' → logprob: -4.370699882507324
    6. 'Points' → logprob: -4.870699882507324
    7. '.points' → logprob: -6.620699882507324
    8. 'route' → logprob: -7.370699882507324
    9. '       ' → logprob: -7.995699882507324
    10. '._' → logprob: -8.495699882507324

Token 1655: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.13672690093517303
    2. 'dist' → logprob: -2.1367268562316895
    3. '_points' → logprob: -5.5117268562316895
    4. '-' → logprob: -6.2617268562316895
    5. 's' → logprob: -6.2617268562316895
    6. '-dist' → logprob: -6.7617268562316895
    7. '_lengths' → logprob: -8.636727333068848
    8. 'self' → logprob: -8.761727333068848
    9. '.dist' → logprob: -9.511727333068848
    10. 'points' → logprob: -10.261727333068848

Token 1656: 'ances' (ID: 3528)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.16219355165958405
    2. 'ances' → logprob: -2.287193536758423
    3. 'ist' → logprob: -3.412193536758423
    4. '_points' → logprob: -5.537193775177002
    5. '_dist' → logprob: -5.662193775177002
    6. 'ists' → logprob: -5.787193775177002
    7. 'ics' → logprob: -7.037193775177002
    8. 'dist' → logprob: -7.162193775177002
    9. 's' → logprob: -7.537193775177002
    10. 'aces' → logprob: -7.787193775177002

Token 1657: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021346231922507286
    2. ')-' → logprob: -3.8963463306427
    3. ' -' → logprob: -7.646346092224121
    4. '-' → logprob: -8.146346092224121
    5. ' )' → logprob: -11.396346092224121
    6. '[' → logprob: -11.646346092224121
    7. '[idx' → logprob: -12.146346092224121
    8. '   ' → logprob: -12.521346092224121
    9. '       ' → logprob: -13.646346092224121
    10. '):
' → logprob: -14.396346092224121

Token 1658: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741438627243042
    2. ' -' → logprob: -0.9741438627243042
    3. ')' → logprob: -10.724143981933594
    4. ')-' → logprob: -10.974143981933594
    5. '<|end|>' → logprob: -11.974143981933594
    6. '```' → logprob: -12.099143981933594
    7. '[' → logprob: -12.474143981933594
    8. '[idx' → logprob: -13.474143981933594
    9. '   ' → logprob: -13.599143981933594
    10. ':' → logprob: -13.599143981933594

Token 1659: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '2' → logprob: -14.125006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '```' → logprob: -16.6250057220459
    6. '  ' → logprob: -17.8750057220459
    7. '<|end|>' → logprob: -18.5000057220459
    8. '
' → logprob: -18.5000057220459
    9. '...' → logprob: -18.7500057220459
    10. '       ' → logprob: -18.8750057220459

Token 1660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '<|end|>' → logprob: -17.375001907348633
    6. '2' → logprob: -17.875001907348633
    7. '  ' → logprob: -19.375001907348633
    8. '...' → logprob: -20.375001907348633
    9. '
' → logprob: -20.375001907348633
    10. '۱' → logprob: -20.375001907348633

Token 1661: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.812825620174408
    2. ':' → logprob: -1.3128256797790527
    3. '                   ' → logprob: -1.3128256797790527
    4. '-' → logprob: -4.687825679779053
    5. '               ' → logprob: -5.812825679779053
    6. '+' → logprob: -6.812825679779053
    7. ' -' → logprob: -7.062825679779053
    8. ',' → logprob: -7.062825679779053
    9. '):
' → logprob: -7.562825679779053
    10. '                       ' → logprob: -7.687825679779053

Token 1662: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009997017914429307
    2. ' neighbors' → logprob: -8.000999450683594
    3. '                    ' → logprob: -8.250999450683594
    4. ' ' → logprob: -9.500999450683594
    5. '		           ' → logprob: -9.875999450683594
    6. 'neighbors' → logprob: -9.875999450683594
    7. '	               ' → logprob: -10.000999450683594
    8. '                       ' → logprob: -10.250999450683594
    9. '                ' → logprob: -10.375999450683594
    10. '				' → logprob: -11.000999450683594

Token 1663: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.08687596023082733
    2. ' neighbors' → logprob: -2.9618759155273438
    3. '                   ' → logprob: -3.4618759155273438
    4. '               ' → logprob: -10.336875915527344
    5. '   ' → logprob: -10.586875915527344
    6. '_neighbors' → logprob: -10.836875915527344
    7. '                       ' → logprob: -11.086875915527344
    8. '```' → logprob: -11.586875915527344
    9. '                    ' → logprob: -12.711875915527344
    10. ' ' → logprob: -13.211875915527344

Token 1664: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.5941604690160602e-05
    2. '.append' → logprob: -11.000025749206543
    3. 'd' → logprob: -12.000025749206543
    4. '   ' → logprob: -14.000025749206543
    5. '```' → logprob: -14.000025749206543
    6. '[' → logprob: -14.875025749206543
    7. 'append' → logprob: -15.500025749206543
    8. '           ' → logprob: -15.750025749206543
    9. '	d' → logprob: -16.25002670288086
    10. '_dist' → logprob: -16.50002670288086

Token 1665: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09358369559049606
    2. 'ist' → logprob: -2.968583583831787
    3. 'istance' → logprob: -3.968583583831787
    4. '_dist' → logprob: -4.843583583831787
    5. '_points' → logprob: -5.093583583831787
    6. 'dist' → logprob: -6.343583583831787
    7. 'points' → logprob: -6.343583583831787
    8. 'Distances' → logprob: -7.468583583831787
    9. 'ists' → logprob: -8.218584060668945
    10. '_distance' → logprob: -9.343584060668945

Token 1666: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008862070390023291
    2. '.' → logprob: -7.1258864402771
    3. 'append' → logprob: -9.625885963439941
    4. '           ' → logprob: -11.375885963439941
    5. '=' → logprob: -13.500885963439941
    6. '               ' → logprob: -14.375885963439941
    7. ' .' → logprob: -14.625885963439941
    8. '       ' → logprob: -15.500885963439941
    9. '```' → logprob: -15.500885963439941
    10. '                   ' → logprob: -15.625885963439941

Token 1667: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.3874913454055786
    2. ' route' → logprob: -1.1374913454055786
    3. '(route' → logprob: -7.387491226196289
    4. '.route' → logprob: -14.512491226196289
    5. '(' → logprob: -15.637491226196289
    6. '```' → logprob: -16.01249122619629
    7. '_route' → logprob: -16.13749122619629
    8. '`' → logprob: -16.26249122619629
    9. '$route' → logprob: -16.38749122619629
    10. ' ' → logprob: -17.13749122619629

Token 1668: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -9.088346359931165e-07
    2. 'Points' → logprob: -14.750000953674316
    3. 'points' → logprob: -14.875000953674316
    4. 's' → logprob: -17.625
    5. '_positions' → logprob: -17.875
    6. '_dist' → logprob: -18.125
    7. '_POINTS' → logprob: -18.5
    8. '
' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. '(points' → logprob: -19.5

Token 1669: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.47566765546798706
    2. '_points' → logprob: -0.9756676554679871
    3. 'dist' → logprob: -6.475667476654053
    4. '_indices' → logprob: -11.600667953491211
    5. 's' → logprob: -11.975667953491211
    6. '(dist' → logprob: -12.350667953491211
    7. '_positions' → logprob: -12.475667953491211
    8. '-dist' → logprob: -12.475667953491211
    9. 'Distances' → logprob: -12.600667953491211
    10. 'points' → logprob: -12.600667953491211

Token 1670: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00034392563975416124
    2. '_dist' → logprob: -9.125344276428223
    3. 'Distances' → logprob: -9.500344276428223
    4. 'ices' → logprob: -9.500344276428223
    5. 'dist' → logprob: -10.250344276428223
    6. ' distances' → logprob: -10.750344276428223
    7. '[' → logprob: -12.000344276428223
    8. 'aces' → logprob: -12.125344276428223
    9. 'ces' → logprob: -12.375344276428223
    10. 'es' → logprob: -12.875344276428223

Token 1671: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. '   ' → logprob: -15.75
    4. '(idx' → logprob: -18.375
    5. 'idx' → logprob: -18.5
    6. '[
' → logprob: -18.5
    7. '[(' → logprob: -19.375
    8. '       ' → logprob: -19.875
    9. '[[' → logprob: -19.875
    10. '	idx' → logprob: -20.125

Token 1672: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5798001885414124
    2. '_idx' → logprob: -0.8298001885414124
    3. '[idx' → logprob: -6.829800128936768
    4. 'idx' → logprob: -6.829800128936768
    5. '+' → logprob: -7.454800128936768
    6. 'Idx' → logprob: -7.954800128936768
    7. '_index' → logprob: -8.204800605773926
    8. 'I' → logprob: -8.579800605773926
    9. '   ' → logprob: -9.829800605773926
    10. '_id' → logprob: -10.204800605773926

Token 1673: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232915878295898
    2. '+' → logprob: -0.8982915878295898
    3. '   ' → logprob: -9.64829158782959
    4. '[idx' → logprob: -9.64829158782959
    5. 'idx' → logprob: -11.27329158782959
    6. ' idx' → logprob: -11.77329158782959
    7. ' ' → logprob: -12.02329158782959
    8. '(idx' → logprob: -12.14829158782959
    9. '    ' → logprob: -13.77329158782959
    10. '	' → logprob: -14.02329158782959

Token 1674: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '
' → logprob: -15.875109672546387
    4. '```' → logprob: -17.12510871887207
    5. '0' → logprob: -17.25010871887207
    6. '<|end|>' → logprob: -18.31260871887207
    7. '   ' → logprob: -18.43760871887207
    8. '-' → logprob: -19.12510871887207
    9. ')' → logprob: -19.75010871887207
    10. '2' → logprob: -19.81260871887207

Token 1675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -14.937507629394531
    4. '```' → logprob: -15.187507629394531
    5. '   ' → logprob: -16.62500762939453
    6. '+' → logprob: -17.31250762939453
    7. '  ' → logprob: -17.50000762939453
    8. '<|end|>' → logprob: -17.50000762939453
    9. '-' → logprob: -17.68750762939453
    10. 'from' → logprob: -17.93750762939453

Token 1676: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018593916902318597
    2. '               ' → logprob: -6.376859188079834
    3. ')
' → logprob: -9.376859664916992
    4. '])' → logprob: -10.251859664916992
    5. '           ' → logprob: -11.001859664916992
    6. '                   ' → logprob: -11.876859664916992
    7. ']' → logprob: -12.376859664916992
    8. '       ' → logprob: -12.876859664916992
    9. '`)' → logprob: -12.876859664916992
    10. '）' → logprob: -13.876859664916992

Token 1677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.963691804325208e-05
    2. '                   ' → logprob: -10.875029563903809
    3. 'if' → logprob: -13.125029563903809
    4. '
' → logprob: -13.250029563903809
    5. '```' → logprob: -13.250029563903809
    6. 'for' → logprob: -13.375029563903809
    7. '           ' → logprob: -13.375029563903809
    8. '                
' → logprob: -14.000029563903809
    9. '              ' → logprob: -14.875029563903809
    10. '                ' → logprob: -15.375029563903809

Token 1678: ' neighbors' (ID: 31655)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009568605571985245
    2. 'if' → logprob: -4.759568691253662
    3. 'for' → logprob: -7.009568691253662
    4. ' if' → logprob: -10.009568214416504
    5. ' for' → logprob: -13.509568214416504
    6. '
' → logprob: -13.509568214416504
    7. '                   ' → logprob: -14.009568214416504
    8. '                
' → logprob: -14.134568214416504
    9. '           ' → logprob: -15.009568214416504
    10. '```' → logprob: -15.509568214416504

Token 1679: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0001454955490771681
    2. ' =' → logprob: -9.50014591217041
    3. '=' → logprob: -9.87514591217041
    4. 'd' → logprob: -12.12514591217041
    5. '           ' → logprob: -12.37514591217041
    6. '   ' → logprob: -12.50014591217041
    7. '_b' → logprob: -13.50014591217041
    8. '_nd' → logprob: -13.87514591217041
    9. '_n' → logprob: -14.37514591217041
    10. '       ' → logprob: -14.75014591217041

Token 1680: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00029852005536668
    2. 'B' → logprob: -8.125298500061035
    3. '_A' → logprob: -13.500298500061035
    4. '_' → logprob: -15.125298500061035
    5. '=' → logprob: -15.250298500061035
    6. '_a' → logprob: -15.500298500061035
    7. ' =' → logprob: -16.37529945373535
    8. ' A' → logprob: -16.50029945373535
    9. '[' → logprob: -16.87529945373535
    10. 'А' → logprob: -16.87529945373535

Token 1681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25235745310783386
    2. '=' → logprob: -1.5023574829101562
    3. '.append' → logprob: -8.002357482910156
    4. '=[]' → logprob: -9.502357482910156
    5. '=[]
' → logprob: -11.627357482910156
    6. ':' → logprob: -12.127357482910156
    7. '           ' → logprob: -13.127357482910156
    8. ')' → logprob: -14.627357482910156
    9. '=[' → logprob: -14.752357482910156
    10. '.' → logprob: -15.002357482910156

Token 1682: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.014239436946809292
    2. '[]' → logprob: -4.264239311218262
    3. '[' → logprob: -9.764239311218262
    4. '[
' → logprob: -11.014239311218262
    5. '[]

' → logprob: -13.514239311218262
    6. ' []
' → logprob: -15.014239311218262
    7. '[])
' → logprob: -15.139239311218262
    8. 'route' → logprob: -16.764240264892578
    9. '[],
' → logprob: -17.139240264892578
    10. '[(' → logprob: -18.014240264892578

Token 1683: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.073596548754722e-05
    2. '```' → logprob: -10.62505054473877
    3. 'for' → logprob: -10.75005054473877
    4. '                   ' → logprob: -12.75005054473877
    5. '       ' → logprob: -14.50005054473877
    6. '			' → logprob: -15.00005054473877
    7. ' for' → logprob: -15.37505054473877
    8. '                       ' → logprob: -15.37505054473877
    9. '[' → logprob: -15.87505054473877
    10. '           ' → logprob: -16.000051498413086

Token 1684: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17359820008277893
    2. 'for' → logprob: -1.9235981702804565
    3. 'idx' (adapté à ' idx') → logprob: -4.548598289489746
    4. 'if' → logprob: -6.048598289489746
    5. ' for' → logprob: -8.423598289489746
    6. '                   ' → logprob: -9.798598289489746
    7. '```' → logprob: -10.548598289489746
    8. '           ' → logprob: -11.423598289489746
    9. ' idx' → logprob: -11.423598289489746
    10. '``' → logprob: -12.173598289489746

Token 1685: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006209384882822633
    2. '=' → logprob: -7.7506208419799805
    3. ' =' → logprob: -9.25062084197998
    4. 'A' → logprob: -9.50062084197998
    5. 'D' → logprob: -11.37562084197998
    6. '           ' → logprob: -13.62562084197998
    7. 'b' → logprob: -13.75062084197998
    8. 'd' → logprob: -13.75062084197998
    9. '                   ' → logprob: -13.87562084197998
    10. '               ' → logprob: -14.00062084197998

Token 1686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06211747229099274
    2. ' =' → logprob: -2.812117576599121
    3. '=None' → logprob: -8.812117576599121
    4. ':' → logprob: -14.812117576599121
    5. 'None' → logprob: -15.062117576599121
    6. ' None' → logprob: -16.812116622924805
    7. ' ' → logprob: -17.062116622924805
    8. '=
' → logprob: -17.437116622924805
    9. '=True' → logprob: -17.937116622924805
    10. '   ' → logprob: -18.187116622924805

Token 1687: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0006618033512495458
    2. '0' → logprob: -7.375661849975586
    3. ' None' → logprob: -11.250661849975586
    4. 'idx' → logprob: -11.625661849975586
    5. 'next' → logprob: -12.125661849975586
    6. 'len' → logprob: -12.500661849975586
    7. 'route' → logprob: -14.375661849975586
    8. 'none' → logprob: -14.500661849975586
    9. '(None' → logprob: -14.625661849975586
    10. 'self' → logprob: -14.750661849975586

Token 1688: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019229217432439327
    2. 'for' → logprob: -6.501923084259033
    3. ' for' → logprob: -8.376922607421875
    4. '			' → logprob: -9.751922607421875
    5. '		       ' → logprob: -10.251922607421875
    6. '                   ' → logprob: -10.751922607421875
    7. '	           ' → logprob: -11.001922607421875
    8. '<|end|>' → logprob: -12.126922607421875
    9. '```' → logprob: -12.126922607421875
    10. ',' → logprob: -12.251922607421875

Token 1689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14742028713226318
    2. 'for' → logprob: -2.1474204063415527
    3. ' for' → logprob: -4.147420406341553
    4. '                   ' → logprob: -6.397420406341553
    5. '			' → logprob: -7.397420406341553
    6. '           ' → logprob: -7.522420406341553
    7. '```' → logprob: -7.522420406341553
    8. '	for' → logprob: -8.522419929504395
    9. '       ' → logprob: -8.897419929504395
    10. '                       ' → logprob: -9.147419929504395

Token 1690: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00037132782745175064
    2. ' for' → logprob: -8.375370979309082
    3. '               ' → logprob: -8.875370979309082
    4. '```' → logprob: -14.750370979309082
    5. '	for' → logprob: -15.375370979309082
    6. 'For' → logprob: -16.2503719329834
    7. '                   ' → logprob: -16.7503719329834
    8. '			' → logprob: -17.8753719329834
    9. '           ' → logprob: -17.8753719329834
    10. '_for' → logprob: -18.5003719329834

Token 1691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.3319124011322856e-05
    2. ' i' → logprob: -10.750022888183594
    3. 'j' → logprob: -13.250022888183594
    4. ',' → logprob: -17.875022888183594
    5. ',i' → logprob: -18.125022888183594
    6. '	i' → logprob: -18.750022888183594
    7. '                   ' → logprob: -19.250022888183594
    8. 'B' → logprob: -19.750022888183594
    9. '   ' → logprob: -19.875022888183594
    10. '(i' → logprob: -20.750022888183594

Token 1692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005631613312289119
    2. ',i' → logprob: -8.000563621520996
    3. ' ,' → logprob: -9.250563621520996
    4. 'i' → logprob: -9.250563621520996
    5. ' i' → logprob: -10.625563621520996
    6. 'in' → logprob: -12.125563621520996
    7. ' in' → logprob: -12.375563621520996
    8. '                   ' → logprob: -14.875563621520996
    9. ' ' → logprob: -15.750563621520996
    10. ',
' → logprob: -16.12556266784668

Token 1693: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020732134580612
    2. ' dist' → logprob: -2.3502073287963867
    3. 'd' → logprob: -15.100207328796387
    4. '	dist' → logprob: -15.475207328796387
    5. 'distance' → logprob: -16.22520637512207
    6. '(dist' → logprob: -16.72520637512207
    7. '_dist' → logprob: -17.47520637512207
    8. '.dist' → logprob: -17.85020637512207
    9. '   ' → logprob: -18.97520637512207
    10. 'Dist' → logprob: -19.10020637512207

Token 1694: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08671146631240845
    2. ',' → logprob: -2.8367114067077637
    3. ' in' → logprob: -3.7117114067077637
    4. '```' → logprob: -13.836711883544922
    5. ',in' → logprob: -14.336711883544922
    6. '                   ' → logprob: -14.836711883544922
    7. '	in' → logprob: -14.961711883544922
    8. '           ' → logprob: -14.961711883544922
    9. ' ' → logprob: -15.586711883544922
    10. 'i' → logprob: -15.711711883544922

Token 1695: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00015920029545668513
    2. ' enumerate' → logprob: -8.75015926361084
    3. 'range' → logprob: -14.37515926361084
    4. 'en' → logprob: -16.625158309936523
    5. 'enum' → logprob: -16.875158309936523
    6. '                   ' → logprob: -17.625158309936523
    7. 'route' → logprob: -18.500158309936523
    8. ' ' → logprob: -18.500158309936523
    9. '   ' → logprob: -18.875158309936523
    10. '               ' → logprob: -19.375158309936523

Token 1696: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.0003032881941180676
    2. '(route' → logprob: -8.125303268432617
    3. 'range' → logprob: -12.500303268432617
    4. ' route' → logprob: -13.250303268432617
    5. '                   ' → logprob: -14.375303268432617
    6. '               ' → logprob: -14.375303268432617
    7. '           ' → logprob: -15.875303268432617
    8. '```' → logprob: -16.125303268432617
    9. '$route' → logprob: -16.375303268432617
    10. '                       ' → logprob: -16.625303268432617

Token 1697: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.339278580620885e-06
    2. 'Points' → logprob: -13.875001907348633
    3. 'points' → logprob: -14.000001907348633
    4. '       ' → logprob: -15.750001907348633
    5. 'B' → logprob: -15.875001907348633
    6. '_POINTS' → logprob: -16.750001907348633
    7. '```' → logprob: -17.250001907348633
    8. '_positions' → logprob: -17.250001907348633
    9. '_dist' → logprob: -17.750001907348633
    10. '_point' → logprob: -17.875001907348633

Token 1698: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.011050889268517494
    2. 'dist' → logprob: -4.511050701141357
    3. '	dist' → logprob: -13.011051177978516
    4. 'Distances' → logprob: -14.886051177978516
    5. '           ' → logprob: -16.136051177978516
    6. '.dist' → logprob: -16.761051177978516
    7. '-dist' → logprob: -16.761051177978516
    8. ' distances' → logprob: -16.886051177978516
    9. '_points' → logprob: -17.011051177978516
    10. 'd' → logprob: -17.136051177978516

Token 1699: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.005190589930862188
    2. 'dist' → logprob: -6.255190372467041
    3. '_dist' → logprob: -6.630190372467041
    4. 'Distances' → logprob: -6.630190372467041
    5. 'aces' → logprob: -8.1301908493042
    6. 'ces' → logprob: -8.5051908493042
    7. ' distances' → logprob: -9.7551908493042
    8. 'es' → logprob: -10.1301908493042
    9. 's' → logprob: -11.8801908493042
    10. 'e' → logprob: -12.7551908493042

Token 1700: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7525087594985962
    2. ':
' → logprob: -0.8775087594985962
    3. ':' → logprob: -2.6275086402893066
    4. '                   ' → logprob: -4.252508640289307
    5. '               ' → logprob: -4.627508640289307
    6. ',' → logprob: -4.752508640289307
    7. '           ' → logprob: -6.377508640289307
    8. '):' → logprob: -6.502508640289307
    9. '                       ' → logprob: -6.627508640289307
    10. '       ' → logprob: -7.252508640289307

Token 1701: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.659005157416686e-05
    2. '                       ' → logprob: -10.625066757202148
    3. '```' → logprob: -11.125066757202148
    4. ' if' → logprob: -11.375066757202148
    5. '               ' → logprob: -12.375066757202148
    6. 'if' → logprob: -13.000066757202148
    7. '...' → logprob: -13.125066757202148
    8. '                    ' → logprob: -13.625066757202148
    9. '		           ' → logprob: -13.625066757202148
    10. '           ' → logprob: -13.625066757202148

Token 1702: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02325759083032608
    2. '                   ' → logprob: -4.023257732391357
    3. ' if' → logprob: -5.398257732391357
    4. '                       ' → logprob: -7.648257732391357
    5. '               ' → logprob: -10.3982572555542
    6. '```' → logprob: -10.8982572555542
    7. '           ' → logprob: -11.6482572555542
    8. '       ' → logprob: -11.8982572555542
    9. '                    ' → logprob: -12.0232572555542
    10. '	if' → logprob: -12.7732572555542

Token 1703: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0007099286303855479
    2. ' abs' → logprob: -7.2507100105285645
    3. '(abs' → logprob: -17.500709533691406
    4. '   ' → logprob: -18.250709533691406
    5. '           ' → logprob: -18.500709533691406
    6. '       ' → logprob: -19.875709533691406
    7. '    ' → logprob: -20.875709533691406
    8. ' ' → logprob: -21.000709533691406
    9. '
' → logprob: -21.000709533691406
    10. 'i' → logprob: -21.125709533691406

Token 1704: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.06197318062186241
    2. 'dist' → logprob: -2.8119730949401855
    3. ' dist' → logprob: -12.936973571777344
    4. '	dist' → logprob: -12.936973571777344
    5. '                   ' → logprob: -16.061973571777344
    6. '   ' → logprob: -16.561973571777344
    7. '               ' → logprob: -16.936973571777344
    8. '.dist' → logprob: -16.936973571777344
    9. '(distance' → logprob: -16.936973571777344
    10. '/dist' → logprob: -17.061973571777344

Token 1705: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132689297199249
    2. '-' → logprob: -1.3132688999176025
    3. '-dist' → logprob: -12.313268661499023
    4. ' ' → logprob: -13.688268661499023
    5. 'dist' → logprob: -14.688268661499023
    6. 'B' → logprob: -14.813268661499023
    7. '(dist' → logprob: -15.563268661499023
    8. '                   ' → logprob: -16.188268661499023
    9. '   ' → logprob: -16.563268661499023
    10. '-b' → logprob: -16.688268661499023

Token 1706: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0016609008889645338
    2. ' d' → logprob: -7.1266608238220215
    3. 'dist' → logprob: -7.1266608238220215
    4. '   ' → logprob: -10.62666130065918
    5. 'nd' → logprob: -11.25166130065918
    6. ' dist' → logprob: -12.50166130065918
    7. 'b' → logprob: -12.87666130065918
    8. ' ' → logprob: -13.50166130065918
    9. 'i' → logprob: -13.62666130065918
    10. '       ' → logprob: -14.00166130065918

Token 1707: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00022010602697264403
    2. 'ist' → logprob: -8.75022029876709
    3. 'istance' → logprob: -10.12522029876709
    4. 'dist' → logprob: -12.00022029876709
    5. 'ists' → logprob: -12.37522029876709
    6. '_dist' → logprob: -13.12522029876709
    7. 'A' → logprob: -13.37522029876709
    8. 'ista' → logprob: -13.50022029876709
    9. 'isting' → logprob: -14.37522029876709
    10. ' B' → logprob: -14.43772029876709

Token 1708: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019026974914595485
    2. ' -' → logprob: -6.3769025802612305
    3. '-' → logprob: -8.62690258026123
    4. ')<' → logprob: -10.87690258026123
    5. '[i' → logprob: -14.50190258026123
    6. ' )' → logprob: -15.12690258026123
    7. ']' → logprob: -15.25190258026123
    8. '[' → logprob: -15.25190258026123
    9. '-)' → logprob: -15.25190258026123
    10. '")' → logprob: -16.001903533935547

Token 1709: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.38689324259757996
    2. ' <' → logprob: -1.1368932723999023
    3. '<th' → logprob: -12.136893272399902
    4. ')' → logprob: -12.511893272399902
    5. '<i' → logprob: -12.636893272399902
    6. ')<' → logprob: -13.511893272399902
    7. '<n' → logprob: -13.636893272399902
    8. ' ' → logprob: -13.886893272399902
    9. '<size' → logprob: -14.261893272399902
    10. '<=' → logprob: -14.386893272399902

Token 1710: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015943869948387146
    2. ' self' → logprob: -8.75015926361084
    3. '=self' → logprob: -15.37515926361084
    4. 'i' → logprob: -15.50015926361084
    5. '	self' → logprob: -15.50015926361084
    6. '
' → logprob: -15.87515926361084
    7. '(self' → logprob: -16.125160217285156
    8. '1' → logprob: -16.625160217285156
    9. '[self' → logprob: -16.875160217285156
    10. '   ' → logprob: -18.125160217285156

Token 1711: '.e' (ID: 2560)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.030484987422823906
    2. 'self' → logprob: -3.905484914779663
    3. '1' → logprob: -4.655485153198242
    4. '=' → logprob: -9.780485153198242
    5. '_eps' → logprob: -9.780485153198242
    6. ' eps' → logprob: -9.905485153198242
    7. 'ep' → logprob: -10.030485153198242
    8. 'esp' → logprob: -10.280485153198242
    9. '0' → logprob: -10.530485153198242
    10. 'e' → logprob: -11.155485153198242

Token 1712: 'ps' (ID: 947)
  Prédit: 'ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.00011069540778407827
    2. '-' → logprob: -9.250110626220703
    3. 's' → logprob: -12.250110626220703
    4. 'eps' → logprob: -12.375110626220703
    5. 'psilon' → logprob: -13.375110626220703
    6. '6' → logprob: -13.750110626220703
    7. 'sp' → logprob: -14.250110626220703
    8. 'p' → logprob: -14.375110626220703
    9. '```' → logprob: -15.375110626220703
    10. 'fs' → logprob: -15.625110626220703

Token 1713: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7113712430000305
    2. '                       ' → logprob: -1.0863711833953857
    3. ':' → logprob: -2.0863711833953857
    4. '==' → logprob: -3.2113711833953857
    5. '                   ' → logprob: -5.211371421813965
    6. ' ==' → logprob: -7.336371421813965
    7. '):
' → logprob: -8.711371421813965
    8. ',' → logprob: -8.961371421813965
    9. '               ' → logprob: -9.211371421813965
    10. ' and' → logprob: -9.211371421813965

Token 1714: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -6.813969957875088e-05
    2. '                   ' → logprob: -10.625067710876465
    3. '               ' → logprob: -11.125067710876465
    4. '                      ' → logprob: -12.000067710876465
    5. '                           ' → logprob: -12.375067710876465
    6. '                        ' → logprob: -12.500067710876465
    7. '<|end|>' → logprob: -13.000067710876465
    8. '           ' → logprob: -13.375067710876465
    9. '                     ' → logprob: -13.375067710876465
    10. '                        
' → logprob: -13.500067710876465

Token 1715: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.002355072181671858
    2. ' idx' → logprob: -6.377355098724365
    3. '                       ' → logprob: -7.627355098724365
    4. '                   ' → logprob: -9.002354621887207
    5. '[idx' → logprob: -10.877354621887207
    6. '	idx' → logprob: -11.502354621887207
    7. '(idx' → logprob: -12.627354621887207
    8. 'B' → logprob: -12.627354621887207
    9. 'index' → logprob: -12.877354621887207
    10. 'if' → logprob: -13.752354621887207

Token 1716: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.025043940171599388
    2. 'A' → logprob: -4.400043964385986
    3. 'i' → logprob: -4.525043964385986
    4. '=' → logprob: -7.275043964385986
    5. '=i' → logprob: -7.275043964385986
    6. ' =' → logprob: -9.025043487548828
    7. ' i' → logprob: -9.275043487548828
    8. ' ' → logprob: -12.400043487548828
    9. '[i' → logprob: -12.400043487548828
    10. '
' → logprob: -13.400043487548828

Token 1717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889099419116974
    2. ' =' → logprob: -2.5788910388946533
    3. '=i' → logprob: -13.703890800476074
    4. '=None' → logprob: -16.20389175415039
    5. '=B' → logprob: -17.32889175415039
    6. '=
' → logprob: -17.70389175415039
    7. ' ' → logprob: -18.20389175415039
    8. '=index' → logprob: -18.32889175415039
    9. 'B' → logprob: -18.57889175415039
    10. '==' → logprob: -18.82889175415039

Token 1718: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009115827269852161
    2. ' i' → logprob: -7.000911712646484
    3. '                   ' → logprob: -17.500911712646484
    4. '[i' → logprob: -18.750911712646484
    5. '=i' → logprob: -18.750911712646484
    6. '	i' → logprob: -19.125911712646484
    7. '           ' → logprob: -19.625911712646484
    8. '{i' → logprob: -19.750911712646484
    9. '               ' → logprob: -20.000911712646484
    10. ' ' → logprob: -20.375911712646484

Token 1719: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.49462229013442993
    2. ' =' → logprob: -0.9946222901344299
    3. '=' → logprob: -4.369622230529785
    4. '                   ' → logprob: -5.119622230529785
    5. '                           ' → logprob: -7.369622230529785
    6. ' ==' → logprob: -8.119622230529785
    7. '==' → logprob: -8.619622230529785
    8. '               ' → logprob: -8.994622230529785
    9. ':
' → logprob: -9.244622230529785
    10. '=i' → logprob: -9.369622230529785

Token 1720: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00081963452976197
    2. '                   ' → logprob: -7.500819683074951
    3. '               ' → logprob: -9.375819206237793
    4. '                           ' → logprob: -10.000819206237793
    5. ' =' → logprob: -10.750819206237793
    6. '                        ' → logprob: -11.000819206237793
    7. '=' → logprob: -11.000819206237793
    8. ' for' → logprob: -11.250819206237793
    9. '```' → logprob: -11.250819206237793
    10. ' if' → logprob: -11.375819206237793

Token 1721: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04804328829050064
    2. '                       ' → logprob: -3.1730432510375977
    3. ' break' → logprob: -5.548043251037598
    4. '                           ' → logprob: -7.173043251037598
    5. 'continue' → logprob: -8.798043251037598
    6. '                   ' → logprob: -8.798043251037598
    7. '               ' → logprob: -10.673043251037598
    8. '                        ' → logprob: -11.548043251037598
    9. '           ' → logprob: -12.048043251037598
    10. '	break' → logprob: -12.173043251037598

Token 1722: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017733458429574966
    2. '```' → logprob: -4.392733573913574
    3. '<|end|>' → logprob: -5.892733573913574
    4. '                   ' → logprob: -6.517733573913574
    5. '           ' → logprob: -8.517733573913574
    6. '[' → logprob: -8.642733573913574
    7. '                       ' → logprob: -9.142733573913574
    8. '<|end|>' → logprob: -9.642733573913574
    9. '       ' → logprob: -10.017733573913574
    10. '                
' → logprob: -10.142733573913574

Token 1723: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025741136632859707
    2. '<|end|>' → logprob: -6.6275739669799805
    3. '```' → logprob: -7.2525739669799805
    4. '       ' → logprob: -8.62757396697998
    5. 'continue' → logprob: -9.25257396697998
    6. '           ' → logprob: -10.00257396697998
    7. '                   ' → logprob: -10.12757396697998
    8. ' if' → logprob: -10.37757396697998
    9. 'if' → logprob: -10.50257396697998
    10. ' continue' → logprob: -10.87757396697998

Token 1724: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010623888112604618
    2. 'if' (adapté à ' if') → logprob: -4.760623931884766
    3. ' if' → logprob: -6.260623931884766
    4. '           ' → logprob: -10.760623931884766
    5. 'for' → logprob: -10.760623931884766
    6. '                   ' → logprob: -11.260623931884766
    7. '
' → logprob: -11.260623931884766
    8. '       ' → logprob: -11.760623931884766
    9. 'continue' → logprob: -11.885623931884766
    10. '```' → logprob: -12.385623931884766

Token 1725: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00012439649435691535
    2. ' idx' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.750123977661133
    4. '(idx' → logprob: -15.625123977661133
    5. '	idx' → logprob: -15.750123977661133
    6. '                   ' → logprob: -16.375123977661133
    7. '           ' → logprob: -16.375123977661133
    8. '       ' → logprob: -16.750123977661133
    9. '               ' → logprob: -17.250123977661133
    10. 'not' → logprob: -17.500123977661133

Token 1726: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.339278580620885e-06
    2. 'None' → logprob: -13.250001907348633
    3. 'A' → logprob: -15.250001907348633
    4. ' B' → logprob: -16.000001907348633
    5. 'idx' → logprob: -16.250001907348633
    6. '0' → logprob: -19.000001907348633
    7. '=' → logprob: -19.125001907348633
    8. '```' → logprob: -19.750001907348633
    9. '1' → logprob: -19.875001907348633
    10. '=None' → logprob: -20.250001907348633

Token 1727: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01429243478924036
    2. '=' → logprob: -4.639292240142822
    3. 'is' → logprob: -5.639292240142822
    4. ' =' → logprob: -7.014292240142822
    5. '=None' → logprob: -10.01429271697998
    6. '==' → logprob: -11.01429271697998
    7. '=is' → logprob: -12.51429271697998
    8. '	is' → logprob: -13.01429271697998
    9. '<|end|>' → logprob: -13.38929271697998
    10. ')' → logprob: -13.88929271697998

Token 1728: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00010986098641296849
    2. ' None' → logprob: -9.375109672546387
    3. 'not' → logprob: -10.625109672546387
    4. 'none' → logprob: -14.625109672546387
    5. '   ' → logprob: -16.875110626220703
    6. '=None' → logprob: -17.750110626220703
    7. 'Not' → logprob: -17.750110626220703
    8. '_None' → logprob: -17.875110626220703
    9. 'N' → logprob: -18.000110626220703
    10. ' not' → logprob: -18.750110626220703

Token 1729: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20914193987846375
    2. '               ' → logprob: -2.709141969680786
    3. ':' → logprob: -2.834141969680786
    4. ':
' → logprob: -2.834141969680786
    5. '                       ' → logprob: -6.334141731262207
    6. 'continue' → logprob: -6.959141731262207
    7. '           ' → logprob: -7.459141731262207
    8. '   ' → logprob: -8.084141731262207
    9. '                           ' → logprob: -8.334141731262207
    10. '<|end|>' → logprob: -9.209141731262207

Token 1730: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25908759236335754
    2. '               ' → logprob: -1.5090875625610352
    3. 'continue' → logprob: -5.134087562561035
    4. ' continue' → logprob: -7.634087562561035
    5. '           ' → logprob: -8.634087562561035
    6. '```' → logprob: -8.759087562561035
    7. '	continue' → logprob: -9.134087562561035
    8. '                       ' → logprob: -9.134087562561035
    9. '	               ' → logprob: -10.009087562561035
    10. '   ' → logprob: -10.384087562561035

Token 1731: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0068750991486012936
    2. ' continue' → logprob: -5.256875038146973
    3. '                   ' → logprob: -6.506875038146973
    4. '	continue' → logprob: -9.381875038146973
    5. 'return' → logprob: -10.256875038146973
    6. '               ' → logprob: -11.131875038146973
    7. '                       ' → logprob: -12.006875038146973
    8. '				' → logprob: -12.881875038146973
    9. '   ' → logprob: -13.631875038146973
    10. '_continue' → logprob: -14.131875038146973

Token 1732: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032271104282699525
    2. '
' → logprob: -8.125322341918945
    3. '                
' → logprob: -11.375322341918945
    4. '                   ' → logprob: -12.625322341918945
    5. '           ' → logprob: -12.875322341918945
    6. '              ' → logprob: -13.250322341918945
    7. '                ' → logprob: -13.500322341918945
    8. 'continue' → logprob: -13.500322341918945
    9. '<|end|>' → logprob: -13.500322341918945
    10. '```' → logprob: -14.000322341918945

Token 1733: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012749579036608338
    2. '```' → logprob: -9.875127792358398
    3. '<|end|>' → logprob: -10.375127792358398
    4. '
' → logprob: -10.750127792358398
    5. '                
' → logprob: -11.500127792358398
    6. '       ' → logprob: -12.500127792358398
    7. '                   ' → logprob: -12.875127792358398
    8. '           ' → logprob: -13.375127792358398
    9. '              ' → logprob: -13.750127792358398
    10. 'continue' → logprob: -14.000127792358398

Token 1734: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.259079363080673e-05
    2. '
' → logprob: -12.250012397766113
    3. 'if' (adapté à ' if') → logprob: -13.000012397766113
    4. '```' → logprob: -13.500012397766113
    5. '           ' → logprob: -13.625012397766113
    6. '              ' → logprob: -14.000012397766113
    7. 'for' → logprob: -14.375012397766113
    8. '                
' → logprob: -14.375012397766113
    9. '       ' → logprob: -15.125012397766113
    10. '                   ' → logprob: -15.375012397766113

Token 1735: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.47412627935409546
    2. ' idx' → logprob: -0.9741262793540955
    3. '	idx' → logprob: -10.349125862121582
    4. '(idx' → logprob: -11.724125862121582
    5. '[idx' → logprob: -11.849125862121582
    6. ' ' → logprob: -14.474125862121582
    7. '   ' → logprob: -15.099125862121582
    8. '_idx' → logprob: -15.599125862121582
    9. 'd' → logprob: -16.0991268157959
    10. '  ' → logprob: -16.3491268157959

Token 1736: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00046510808169841766
    2. 'idx' → logprob: -7.750464916229248
    3. '(idx' → logprob: -11.500465393066406
    4. 'A' → logprob: -11.625465393066406
    5. ' idx' → logprob: -12.000465393066406
    6. '[idx' → logprob: -12.750465393066406
    7. '_idx' → logprob: -13.125465393066406
    8. ' B' → logprob: -13.375465393066406
    9. 'Idx' → logprob: -14.875465393066406
    10. '   ' → logprob: -15.000465393066406

Token 1737: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09103843569755554
    2. '>' → logprob: -2.466038465499878
    3. ' <' → logprob: -6.216038227081299
    4. '<' → logprob: -9.466038703918457
    5. ' ' → logprob: -12.091038703918457
    6. '   ' → logprob: -12.091038703918457
    7. '+' → logprob: -13.091038703918457
    8. '```' → logprob: -13.466038703918457
    9. ' +' → logprob: -13.591038703918457
    10. '-' → logprob: -14.341038703918457

Token 1738: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03820420429110527
    2. ' ' → logprob: -3.2882041931152344
    3. 'idx' → logprob: -9.163204193115234
    4. ' idx' → logprob: -10.288204193115234
    5. '   ' → logprob: -11.538204193115234
    6. '=' → logprob: -11.913204193115234
    7. '  ' → logprob: -13.038204193115234
    8. '(idx' → logprob: -13.288204193115234
    9. '       ' → logprob: -15.475704193115234
    10. ' =' → logprob: -15.475704193115234

Token 1739: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016110755677800626
    2. ' ' → logprob: -8.750161170959473
    3. 'idx' → logprob: -13.625161170959473
    4. '   ' → logprob: -14.375161170959473
    5. '=' → logprob: -14.875161170959473
    6. '  ' → logprob: -16.375160217285156
    7. ' idx' → logprob: -16.937660217285156
    8. '```' → logprob: -16.937660217285156
    9. '
' → logprob: -17.000160217285156
    10. '۰' → logprob: -17.500160217285156

Token 1740: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0639483705163002
    2. ':
' → logprob: -3.063948392868042
    3. ':' → logprob: -4.313948154449463
    4. '                       ' → logprob: -7.438948154449463
    5. '               ' → logprob: -7.563948154449463
    6. ',' → logprob: -7.563948154449463
    7. '   ' → logprob: -9.813948631286621
    8. '                    ' → logprob: -10.188948631286621
    9. ' and' → logprob: -10.313948631286621
    10. '                  ' → logprob: -10.813948631286621

Token 1741: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003326595760881901
    2. '				' → logprob: -5.878326416015625
    3. '		           ' → logprob: -8.378326416015625
    4. '	               ' → logprob: -9.003326416015625
    5. '			       ' → logprob: -10.378326416015625
    6. '				   ' → logprob: -10.503326416015625
    7. '```' → logprob: -11.003326416015625
    8. '               ' → logprob: -11.003326416015625
    9. '   ' → logprob: -11.128326416015625
    10. '           ' → logprob: -11.628326416015625

Token 1742: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.10104284435510635
    2. '                   ' → logprob: -2.3510427474975586
    3. '               ' → logprob: -7.976042747497559
    4. ' neighbors' → logprob: -7.976042747497559
    5. '                       ' → logprob: -9.226042747497559
    6. '```' → logprob: -10.601042747497559
    7. '   ' → logprob: -11.476042747497559
    8. '           ' → logprob: -12.476042747497559
    9. '                ' → logprob: -13.351042747497559
    10. '                  ' → logprob: -13.476042747497559

Token 1743: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.9981420336989686e-05
    2. '.append' → logprob: -11.750020027160645
    3. 'd' → logprob: -11.875020027160645
    4. '[' → logprob: -13.500020027160645
    5. '                   ' → logprob: -14.000020027160645
    6. '```' → logprob: -14.625020027160645
    7. 'append' → logprob: -15.000020027160645
    8. '   ' → logprob: -15.125020027160645
    9. '_dist' → logprob: -15.250020027160645
    10. '               ' → logprob: -15.250020027160645

Token 1744: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.7697225252486533e-06
    2. 'A' → logprob: -12.625003814697266
    3. '[' → logprob: -16.375003814697266
    4. ' B' → logprob: -17.250003814697266
    5. '```' → logprob: -17.312503814697266
    6. 'b' → logprob: -17.375003814697266
    7. 'istance' → logprob: -17.375003814697266
    8. '_B' → logprob: -17.437503814697266
    9. '=' → logprob: -18.125003814697266
    10. '
' → logprob: -18.250003814697266

Token 1745: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -11.125021934509277
    3. '                   ' → logprob: -12.875021934509277
    4. '               ' → logprob: -13.500021934509277
    5. 'append' → logprob: -13.625021934509277
    6. '           ' → logprob: -13.750021934509277
    7. 'd' → logprob: -15.375021934509277
    8. ' .' → logprob: -16.62502098083496
    9. '                       ' → logprob: -17.25002098083496
    10. '_d' → logprob: -17.25002098083496

Token 1746: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.0020810244604945183
    2. ' route' → logprob: -6.752080917358398
    3. '(route' → logprob: -7.002080917358398
    4. '       ' → logprob: -14.877080917358398
    5. '   ' → logprob: -16.8770809173584
    6. '.route' → logprob: -17.2520809173584
    7. '$route' → logprob: -17.3770809173584
    8. 'range' → logprob: -18.6270809173584
    9. '           ' → logprob: -18.6270809173584
    10. '_route' → logprob: -18.8770809173584

Token 1747: '_points' (ID: 30070)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.0007731780642643571
    2. '_points' → logprob: -7.250772953033447
    3. '(route' → logprob: -10.375773429870605
    4. ' route' → logprob: -10.500773429870605
    5. '_route' → logprob: -13.500773429870605
    6. '_lengths' → logprob: -14.000773429870605
    7. '.route' → logprob: -15.000773429870605
    8. 'dist' → logprob: -15.125773429870605
    9. '       ' → logprob: -15.250773429870605
    10. '$route' → logprob: -15.500773429870605

Token 1748: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5138950943946838
    2. 'route' → logprob: -1.138895034790039
    3. '_points' → logprob: -3.263895034790039
    4. 'dist' → logprob: -3.263895034790039
    5. '_lengths' → logprob: -6.388895034790039
    6. 'self' → logprob: -6.638895034790039
    7. 'Distances' → logprob: -7.638895034790039
    8. '   ' → logprob: -7.763895034790039
    9. 'length' → logprob: -8.513895034790039
    10. '_route' → logprob: -8.638895034790039

Token 1749: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.027441419661045074
    2. '_dist' → logprob: -4.152441501617432
    3. 'Distances' → logprob: -5.152441501617432
    4. 'dist' → logprob: -6.027441501617432
    5. 'ist' → logprob: -6.277441501617432
    6. 'ices' → logprob: -7.777441501617432
    7. ' distances' → logprob: -8.277441024780273
    8. 's' → logprob: -9.027441024780273
    9. 'ists' → logprob: -9.777441024780273
    10. 'es' → logprob: -9.777441024780273

Token 1750: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -15.875
    3. 'idx' → logprob: -16.75
    4. '       ' → logprob: -18.375
    5. '[' → logprob: -19.125
    6. '[i' → logprob: -19.625
    7. '[index' → logprob: -20.0
    8. '(idx' → logprob: -20.0
    9. '[
' → logprob: -20.25
    10. ' idx' → logprob: -20.375

Token 1751: 'B' (ID: 33)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008806134574115276
    2. '[idx' → logprob: -4.758806228637695
    3. ' idx' → logprob: -9.258806228637695
    4. '(idx' → logprob: -10.133806228637695
    5. '_idx' → logprob: -10.633806228637695
    6. 'B' → logprob: -10.758806228637695
    7. '	idx' → logprob: -12.133806228637695
    8. 'Idx' → logprob: -12.633806228637695
    9. 'index' → logprob: -14.508806228637695
    10. 'IDX' → logprob: -14.633806228637695

Token 1752: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23006224632263184
    2. '-' → logprob: -1.6050622463226318
    3. 'B' → logprob: -5.605062484741211
    4. '[idx' → logprob: -7.355062484741211
    5. '   ' → logprob: -9.105062484741211
    6. ' ' → logprob: -9.480062484741211
    7. '[' → logprob: -10.105062484741211
    8. 'idx' → logprob: -11.230062484741211
    9. '[-' → logprob: -11.230062484741211
    10. ' idx' → logprob: -11.855062484741211

Token 1753: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -15.875004768371582
    4. '```' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.8125057220459
    6. ')' → logprob: -18.0000057220459
    7. '2' → logprob: -18.4375057220459
    8. '0' → logprob: -18.4375057220459
    9. '[' → logprob: -18.5000057220459
    10. ']' → logprob: -18.6250057220459

Token 1754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '```' → logprob: -16.500001907348633
    5. '
' → logprob: -17.375001907348633
    6. '-' → logprob: -18.062501907348633
    7. 'from' → logprob: -18.312501907348633
    8. 'def' → logprob: -18.750001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '[' → logprob: -18.875001907348633

Token 1755: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3969530463218689
    2. ')' → logprob: -1.1469531059265137
    3. '               ' → logprob: -4.646953105926514
    4. '                   ' → logprob: -8.521952629089355
    5. ')
' → logprob: -8.896952629089355
    6. '           ' → logprob: -10.646952629089355
    7. '       ' → logprob: -10.896952629089355
    8. ']' → logprob: -11.146952629089355
    9. '   ' → logprob: -11.271952629089355
    10. ']
' → logprob: -11.771952629089355

Token 1756: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06278640031814575
    2. '                   ' → logprob: -2.812786340713501
    3. '                ' → logprob: -8.562786102294922
    4. '			' → logprob: -8.812786102294922
    5. '           ' → logprob: -9.187786102294922
    6. '				' → logprob: -9.187786102294922
    7. '```' → logprob: -9.187786102294922
    8. '                
' → logprob: -10.562786102294922
    9. '                       ' → logprob: -10.687786102294922
    10. '       ' → logprob: -11.437786102294922

Token 1757: ' neighbors' (ID: 31655)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001179512357339263
    2. '                   ' → logprob: -7.1261796951293945
    3. 'if' → logprob: -8.626179695129395
    4. ' if' → logprob: -9.126179695129395
    5. '           ' → logprob: -10.251179695129395
    6. '                ' → logprob: -11.126179695129395
    7. '       ' → logprob: -11.251179695129395
    8. '```' → logprob: -11.876179695129395
    9. '			' → logprob: -12.501179695129395
    10. '              ' → logprob: -12.751179695129395

Token 1758: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0010875897714868188
    2. 'B' → logprob: -6.876087665557861
    3. '```' → logprob: -11.001087188720703
    4. '   ' → logprob: -11.376087188720703
    5. 'd' → logprob: -11.876087188720703
    6. '.append' → logprob: -12.251087188720703
    7. '_b' → logprob: -12.501087188720703
    8. '[' → logprob: -13.626087188720703
    9. '_points' → logprob: -13.876087188720703
    10. '_dist' → logprob: -14.126087188720703

Token 1759: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008784741163253784
    2. '_dist' → logprob: -5.383784770965576
    3. 'ist' → logprob: -5.633784770965576
    4. 'dist' → logprob: -8.133784294128418
    5. '_points' → logprob: -9.008784294128418
    6. 'istance' → logprob: -9.133784294128418
    7. 'Dist' → logprob: -11.383784294128418
    8. 'ists' → logprob: -12.133784294128418
    9. '_distance' → logprob: -12.258784294128418
    10. 'length' → logprob: -12.883784294128418

Token 1760: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.4656579120783135e-05
    2. '.' → logprob: -10.750044822692871
    3. 'append' → logprob: -11.125044822692871
    4. '           ' → logprob: -11.750044822692871
    5. ' .' → logprob: -15.000044822692871
    6. '       ' → logprob: -16.000043869018555
    7. '               ' → logprob: -16.750043869018555
    8. '```' → logprob: -17.625043869018555
    9. ').' → logprob: -17.875043869018555
    10. 'appen' → logprob: -18.375043869018555

Token 1761: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.4758390486240387
    2. 'route' → logprob: -0.9758390188217163
    3. ' route' → logprob: -6.350839138031006
    4. ' (' → logprob: -12.225838661193848
    5. '.route' → logprob: -12.475838661193848
    6. '(' → logprob: -12.850838661193848
    7. '```' → logprob: -14.225838661193848
    8. '_route' → logprob: -14.475838661193848
    9. '(
' → logprob: -14.725838661193848
    10. '$route' → logprob: -14.850838661193848

Token 1762: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.093505099765025e-05
    2. '_dist' → logprob: -11.250020980834961
    3. 'points' → logprob: -12.250020980834961
    4. '_positions' → logprob: -13.000020980834961
    5. 'dist' → logprob: -14.750020980834961
    6. 'Points' → logprob: -15.125020980834961
    7. '_d' → logprob: -16.37502098083496
    8. 'd' → logprob: -17.25002098083496
    9. '_distance' → logprob: -18.00002098083496
    10. '_POINTS' → logprob: -18.25002098083496

Token 1763: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0019414882408455014
    2. 'dist' → logprob: -6.251941680908203
    3. 'Distances' → logprob: -11.376941680908203
    4. '_d' → logprob: -14.626941680908203
    5. 'Dist' → logprob: -15.376941680908203
    6. '_points' → logprob: -15.501941680908203
    7. '-dist' → logprob: -15.626941680908203
    8. '	dist' → logprob: -15.751941680908203
    9. 'self' → logprob: -16.251941680908203
    10. 'DIST' → logprob: -16.876941680908203

Token 1764: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0007338665891438723
    2. ' distances' → logprob: -8.625734329223633
    3. 'ces' → logprob: -8.875734329223633
    4. 'ices' → logprob: -9.250734329223633
    5. 'aces' → logprob: -9.375734329223633
    6. 'Distances' → logprob: -9.750734329223633
    7. '_dist' → logprob: -10.000734329223633
    8. 'dist' → logprob: -10.125734329223633
    9. 'ist' → logprob: -10.625734329223633
    10. 'ance' → logprob: -11.000734329223633

Token 1765: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.375000953674316
    3. 'dist' → logprob: -14.500000953674316
    4. 'idx' → logprob: -15.625000953674316
    5. '[
' → logprob: -17.000001907348633
    6. '(idx' → logprob: -17.125001907348633
    7. '[ind' → logprob: -18.750001907348633
    8. 'Dist' → logprob: -19.000001907348633
    9. ' idx' → logprob: -19.125001907348633
    10. '[index' → logprob: -19.125001907348633

Token 1766: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02166183851659298
    2. '[idx' → logprob: -3.8966617584228516
    3. 'idx' → logprob: -8.146661758422852
    4. '_idx' → logprob: -8.146661758422852
    5. '+' → logprob: -8.396661758422852
    6. 'D' → logprob: -9.521661758422852
    7. '_dist' → logprob: -10.271661758422852
    8. '[' → logprob: -10.396661758422852
    9. 'A' → logprob: -10.646661758422852
    10. 'Idx' → logprob: -10.896661758422852

Token 1767: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6003572940826416
    2. ')
' → logprob: -0.9753572940826416
    3. '               ' → logprob: -2.6003572940826416
    4. '           ' → logprob: -10.350357055664062
    5. '   ' → logprob: -11.475357055664062
    6. ')
' → logprob: -11.850357055664062
    7. '       ' → logprob: -11.975357055664062
    8. '                   ' → logprob: -12.100357055664062
    9. ' )
' → logprob: -12.725357055664062
    10. ' )' → logprob: -13.100357055664062

Token 1768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.00000286102295
    3. '                   ' → logprob: -15.37500286102295
    4. '			' → logprob: -15.50000286102295
    5. '              ' → logprob: -16.500003814697266
    6. '           ' → logprob: -16.500003814697266
    7. ' if' → logprob: -16.750003814697266
    8. '                ' → logprob: -17.250003814697266
    9. '       ' → logprob: -17.375003814697266
    10. '``' → logprob: -17.875003814697266

Token 1769: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.2762428822461516e-05
    2. ' if' → logprob: -10.500052452087402
    3. 'if' (adapté à ' if') → logprob: -11.250052452087402
    4. '                   ' → logprob: -12.250052452087402
    5. '			' → logprob: -13.375052452087402
    6. '              ' → logprob: -13.625052452087402
    7. '           ' → logprob: -13.875052452087402
    8. '                ' → logprob: -13.875052452087402
    9. '```' → logprob: -13.875052452087402
    10. '       ' → logprob: -14.875052452087402

Token 1770: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5759621858596802
    2. 'idx' → logprob: -0.8259621858596802
    3. '	idx' → logprob: -11.32596206665039
    4. '(idx' → logprob: -11.70096206665039
    5. '[idx' → logprob: -13.45096206665039
    6. 'nd' → logprob: -15.70096206665039
    7. '.idx' → logprob: -15.70096206665039
    8. '                   ' → logprob: -15.70096206665039
    9. '_idx' → logprob: -16.45096206665039
    10. 'len' → logprob: -16.57596206665039

Token 1771: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011517428793013096
    2. 'idx' → logprob: -4.511517524719238
    3. '_idx' → logprob: -8.136517524719238
    4. ' idx' → logprob: -9.136517524719238
    5. '(idx' → logprob: -10.011517524719238
    6. '[idx' → logprob: -11.136517524719238
    7. 'A' → logprob: -12.761517524719238
    8. '	idx' → logprob: -12.761517524719238
    9. 'Idx' → logprob: -13.761517524719238
    10. 'IDX' → logprob: -14.261517524719238

Token 1772: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.038073278963565826
    2. '<' → logprob: -3.2880733013153076
    3. '+' → logprob: -11.788073539733887
    4. ' ' → logprob: -11.913073539733887
    5. '<class' → logprob: -12.288073539733887
    6. '<len' → logprob: -12.663073539733887
    7. ' +' → logprob: -13.163073539733887
    8. '<int' → logprob: -13.788073539733887
    9. '```' → logprob: -13.913073539733887
    10. '<|end|>' → logprob: -14.413073539733887

Token 1773: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141898095607758
    2. ' len' → logprob: -1.7014189958572388
    3. '(len' → logprob: -12.20141887664795
    4. '	len' → logprob: -15.45141887664795
    5. '=len' → logprob: -15.57641887664795
    6. '[len' → logprob: -15.70141887664795
    7. '<len' → logprob: -16.826419830322266
    8. ' ' → logprob: -17.076419830322266
    9. ' ' → logprob: -17.826419830322266
    10. 'Len' → logprob: -17.951419830322266

Token 1774: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.003183182328939438
    2. 'route' → logprob: -5.753183364868164
    3. '(' → logprob: -12.253183364868164
    4. '(
' → logprob: -15.628183364868164
    5. ' route' → logprob: -15.753183364868164
    6. '   ' → logprob: -16.378183364868164
    7. '```' → logprob: -16.628183364868164
    8. '       ' → logprob: -17.503183364868164
    9. '$route' → logprob: -17.503183364868164
    10. 'self' → logprob: -17.878183364868164

Token 1775: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00011510594777064398
    2. 'route' → logprob: -9.750115394592285
    3. '(route' → logprob: -10.000115394592285
    4. 'Points' → logprob: -12.625115394592285
    5. 'points' → logprob: -12.875115394592285
    6. '_POINTS' → logprob: -14.250115394592285
    7. '```' → logprob: -14.625115394592285
    8. '_weights' → logprob: -14.750115394592285
    9. '_positions' → logprob: -14.750115394592285
    10. '_segments' → logprob: -14.750115394592285

Token 1776: '_dist' (ID: 37968)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.4754623472690582
    2. '_dist' → logprob: -1.1004623174667358
    3. 'dist' → logprob: -3.2254624366760254
    4. '_points' → logprob: -5.475462436676025
    5. 'distance' → logprob: -6.725462436676025
    6. '(route' → logprob: -8.100461959838867
    7. 'Distances' → logprob: -9.100461959838867
    8. '_distance' → logprob: -10.225461959838867
    9. 'road' → logprob: -11.100461959838867
    10. ' route' → logprob: -11.100461959838867

Token 1777: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.22448457777500153
    2. '_dist' → logprob: -1.8494845628738403
    3. '_points' → logprob: -3.47448468208313
    4. 'Distances' → logprob: -4.599484443664551
    5. 'ist' → logprob: -6.974484443664551
    6. 'dist' → logprob: -7.849484443664551
    7. 'ance' → logprob: -8.47448444366455
    8. 'istance' → logprob: -8.72448444366455
    9. ' distances' → logprob: -8.84948444366455
    10. '_distance' → logprob: -9.22448444366455

Token 1778: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053685796447098255
    2. ')-' → logprob: -5.380368709564209
    3. '-' → logprob: -8.25536823272705
    4. '[' → logprob: -8.38036823272705
    5. ' -' → logprob: -8.50536823272705
    6. ' )' → logprob: -11.00536823272705
    7. '   ' → logprob: -11.00536823272705
    8. ']' → logprob: -12.13036823272705
    9. '#' → logprob: -13.38036823272705
    10. '       ' → logprob: -13.50536823272705

Token 1779: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026452520862221718
    2. '-' → logprob: -3.6514525413513184
    3. ' +' → logprob: -9.40145206451416
    4. '+' → logprob: -10.02645206451416
    5. ' ' → logprob: -11.40145206451416
    6. '   ' → logprob: -12.52645206451416
    7. ')' → logprob: -12.65145206451416
    8. '[' → logprob: -12.90145206451416
    9. '<|end|>' → logprob: -13.52645206451416
    10. '1' → logprob: -13.77645206451416

Token 1780: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.750028610229492
    4. '```' → logprob: -17.000028610229492
    5. '2' → logprob: -17.750028610229492
    6. '
' → logprob: -19.500028610229492
    7. '0' → logprob: -20.125028610229492
    8. ' ' → logprob: -20.250028610229492
    9. '  ' → logprob: -20.750028610229492
    10. '       ' → logprob: -20.812528610229492

Token 1781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '2' → logprob: -15.750006675720215
    4. '   ' → logprob: -17.12500762939453
    5. '```' → logprob: -17.87500762939453
    6. '  ' → logprob: -20.25000762939453
    7. '
' → logprob: -20.68750762939453
    8. '       ' → logprob: -21.12500762939453
    9. '0' → logprob: -21.12500762939453
    10. '１' → logprob: -21.37500762939453

Token 1782: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008803064003586769
    2. ':
' → logprob: -5.508802890777588
    3. ':' → logprob: -5.883802890777588
    4. '               ' → logprob: -6.758802890777588
    5. '                       ' → logprob: -7.633802890777588
    6. ',' → logprob: -9.258803367614746
    7. '                    ' → logprob: -10.508803367614746
    8. '                  ' → logprob: -10.633803367614746
    9. '           ' → logprob: -10.883803367614746
    10. '				' → logprob: -11.008803367614746

Token 1783: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016029367689043283
    2. '				' → logprob: -6.876603126525879
    3. '	               ' → logprob: -8.251603126525879
    4. '		           ' → logprob: -8.751603126525879
    5. '			       ' → logprob: -10.376603126525879
    6. '                       ' → logprob: -10.501603126525879
    7. '               ' → logprob: -10.751603126525879
    8. '				   ' → logprob: -11.501603126525879
    9. '	                   ' → logprob: -11.501603126525879
    10. '	           ' → logprob: -12.001603126525879

Token 1784: ' neighbors' (ID: 31655)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4948669970035553
    2. 'neighbors' (adapté à ' neighbors') → logprob: -0.9948669672012329
    3. ' neighbors' → logprob: -4.119866847991943
    4. '               ' → logprob: -5.494866847991943
    5. '                       ' → logprob: -8.869867324829102
    6. '   ' → logprob: -10.619867324829102
    7. '                ' → logprob: -11.369867324829102
    8. '                    ' → logprob: -11.619867324829102
    9. '           ' → logprob: -11.619867324829102
    10. '_neighbors' → logprob: -11.869867324829102

Token 1785: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00013488641707226634
    2. '.append' → logprob: -9.000134468078613
    3. 'd' → logprob: -11.750134468078613
    4. '[' → logprob: -14.500134468078613
    5. 'append' → logprob: -14.500134468078613
    6. '                   ' → logprob: -14.750134468078613
    7. '   ' → logprob: -14.750134468078613
    8. '```' → logprob: -15.000134468078613
    9. '_dist' → logprob: -15.750134468078613
    10. '           ' → logprob: -15.750134468078613

Token 1786: 'B' (ID: 33)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.016999011859297752
    2. 'B' → logprob: -4.391999244689941
    3. '_dist' → logprob: -6.141999244689941
    4. 'ist' → logprob: -6.641999244689941
    5. 'points' → logprob: -7.766999244689941
    6. 'oints' → logprob: -8.391999244689941
    7. 'Points' → logprob: -8.766999244689941
    8. 'dist' → logprob: -9.641999244689941
    9. 'istance' → logprob: -9.891999244689941
    10. 'D' → logprob: -10.641999244689941

Token 1787: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.41866585687967e-06
    2. 'append' → logprob: -11.875008583068848
    3. '.' → logprob: -13.750008583068848
    4. '           ' → logprob: -15.375008583068848
    5. 'appen' → logprob: -18.00000762939453
    6. 'app' → logprob: -18.12500762939453
    7. '               ' → logprob: -18.37500762939453
    8. '                   ' → logprob: -18.50000762939453
    9. '.app' → logprob: -18.62500762939453
    10. '       ' → logprob: -19.25000762939453

Token 1788: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.4752786159515381
    2. 'route' → logprob: -0.9752786159515381
    3. ' route' → logprob: -6.725278854370117
    4. '.route' → logprob: -15.225278854370117
    5. '(' → logprob: -16.475278854370117
    6. ' (' → logprob: -16.475278854370117
    7. '$route' → logprob: -16.475278854370117
    8. '_route' → logprob: -16.725278854370117
    9. '                   ' → logprob: -17.100278854370117
    10. '               ' → logprob: -17.100278854370117

Token 1789: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.215330409351736e-05
    2. '_dist' → logprob: -10.125041961669922
    3. 'dist' → logprob: -13.375041961669922
    4. 'Points' → logprob: -15.250041961669922
    5. 'points' → logprob: -15.875041961669922
    6. '_positions' → logprob: -16.500041961669922
    7. '_route' → logprob: -17.625041961669922
    8. 'route' → logprob: -17.875041961669922
    9. '(dist' → logprob: -18.500041961669922
    10. '_POINTS' → logprob: -18.500041961669922

Token 1790: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.006036276929080486
    2. 'dist' → logprob: -5.131036281585693
    3. '_points' → logprob: -9.256035804748535
    4. 'Distances' → logprob: -11.631035804748535
    5. '[' → logprob: -13.631035804748535
    6. '	dist' → logprob: -14.756035804748535
    7. '[idx' → logprob: -15.006035804748535
    8. '_d' → logprob: -15.256035804748535
    9. 'Dist' → logprob: -15.631035804748535
    10. '-dist' → logprob: -16.13103675842285

Token 1791: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.41329264640808105
    2. '_dist' → logprob: -1.288292646408081
    3. 'dist' → logprob: -3.163292646408081
    4. 'Distances' → logprob: -4.41329288482666
    5. ' distances' → logprob: -5.16329288482666
    6. 'ices' → logprob: -7.66329288482666
    7. '_distance' → logprob: -7.78829288482666
    8. '_points' → logprob: -7.78829288482666
    9. 'aces' → logprob: -8.53829288482666
    10. 'ance' → logprob: -9.03829288482666

Token 1792: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002637199067976326
    2. 'idx' → logprob: -8.250264167785645
    3. '[' → logprob: -13.250264167785645
    4. '   ' → logprob: -15.500264167785645
    5. 'dist' → logprob: -16.000263214111328
    6. '(idx' → logprob: -16.500263214111328
    7. '[i' → logprob: -17.500263214111328
    8. '	idx' → logprob: -17.500263214111328
    9. ' idx' → logprob: -17.625263214111328
    10. '[index' → logprob: -17.750263214111328

Token 1793: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.30787524580955505
    2. '_idx' → logprob: -2.432875156402588
    3. '[idx' → logprob: -2.557875156402588
    4. 'idx' → logprob: -2.807875156402588
    5. '_dist' → logprob: -3.432875156402588
    6. 'dist' → logprob: -5.557875156402588
    7. '+' → logprob: -6.682875156402588
    8. '_B' → logprob: -7.807875156402588
    9. '(idx' → logprob: -8.182875633239746
    10. ' idx' → logprob: -8.182875633239746

Token 1794: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933692693710327
    2. ' +' → logprob: -0.6933692693710327
    3. '[' → logprob: -9.318368911743164
    4. '[idx' → logprob: -9.443368911743164
    5. '])' → logprob: -10.693368911743164
    6. '[i' → logprob: -11.193368911743164
    7. '[next' → logprob: -12.193368911743164
    8. '   ' → logprob: -12.818368911743164
    9. '[++' → logprob: -14.193368911743164
    10. '[ind' → logprob: -14.193368911743164

Token 1795: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151935189962387
    2. ' ' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.143152236938477
    4. '
' → logprob: -14.268152236938477
    5. '0' → logprob: -15.893152236938477
    6. ' ' → logprob: -16.018152236938477
    7. '  ' → logprob: -16.143152236938477
    8. '```' → logprob: -16.143152236938477
    9. '2' → logprob: -16.768152236938477
    10. '+' → logprob: -17.330652236938477

Token 1796: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -16.37502098083496
    4. '```' → logprob: -16.75002098083496
    5. '   ' → logprob: -16.81252098083496
    6. '2' → logprob: -17.06252098083496
    7. '0' → logprob: -17.62502098083496
    8. '-' → logprob: -18.18752098083496
    9. '  ' → logprob: -18.31252098083496
    10. ' ' → logprob: -18.43752098083496

Token 1797: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022642558440566063
    2. ')
' → logprob: -4.272642612457275
    3. '               ' → logprob: -5.522642612457275
    4. '])' → logprob: -5.772642612457275
    5. ']' → logprob: -6.772642612457275
    6. '])
' → logprob: -9.522642135620117
    7. ')]' → logprob: -10.147642135620117
    8. ')

' → logprob: -11.147642135620117
    9. ']
' → logprob: -11.272642135620117
    10. '                   ' → logprob: -11.272642135620117

Token 1798: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.982165698194876e-05
    2. '                   ' → logprob: -9.500080108642578
    3. '           ' → logprob: -13.250080108642578
    4. '```' → logprob: -13.375080108642578
    5. '                       ' → logprob: -14.000080108642578
    6. '
' → logprob: -14.875080108642578
    7. '       ' → logprob: -15.375080108642578
    8. '                
' → logprob: -16.625080108642578
    9. '                           ' → logprob: -16.625080108642578
    10. '              ' → logprob: -17.750080108642578

Token 1799: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.280175097752362e-05
    2. 'if' (adapté à ' if') → logprob: -9.750082969665527
    3. ' if' → logprob: -11.000082969665527
    4. '                   ' → logprob: -13.250082969665527
    5. '
' → logprob: -13.375082969665527
    6. '              ' → logprob: -13.375082969665527
    7. '           ' → logprob: -14.125082969665527
    8. '                ' → logprob: -14.375082969665527
    9. '       ' → logprob: -14.500082969665527
    10. '   ' → logprob: -14.625082969665527

Token 1800: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6209481954574585
    2. ' nd' → logprob: -0.8709481954574585
    3. '(nd' → logprob: -3.245948314666748
    4. ' (' → logprob: -5.620948314666748
    5. '(' → logprob: -6.745948314666748
    6. '   ' → logprob: -9.37094783782959
    7. '               ' → logprob: -9.74594783782959
    8. '                   ' → logprob: -10.37094783782959
    9. '           ' → logprob: -11.24594783782959
    10. '(n' → logprob: -11.24594783782959

Token 1801: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004228091274853796
    2. '_A' → logprob: -8.125422477722168
    3. '_d' → logprob: -10.250422477722168
    4. 'd' → logprob: -10.875422477722168
    5. '_nd' → logprob: -11.000422477722168
    6. '_' → logprob: -11.125422477722168
    7. 'nd' → logprob: -11.625422477722168
    8. ')' → logprob: -12.000422477722168
    9. '
' → logprob: -12.625422477722168
    10. ' A' → logprob: -12.625422477722168

Token 1802: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05898009240627289
    2. ' not' → logprob: -2.9339799880981445
    3. 'in' → logprob: -5.5589799880981445
    4. 'not' → logprob: -8.433979988098145
    5. ' ' → logprob: -11.558979988098145
    6. ')' → logprob: -12.808979988098145
    7. '<|end|>' → logprob: -12.933979988098145
    8. '	in' → logprob: -13.183979988098145
    9. ' ' → logprob: -14.058979988098145
    10. '_in' → logprob: -14.683979988098145

Token 1803: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10039504617452621
    2. 'in' → logprob: -2.3503949642181396
    3. ' ' → logprob: -10.225395202636719
    4. '=' → logprob: -10.725395202636719
    5. '<|end|>' → logprob: -10.725395202636719
    6. '                   ' → logprob: -11.100395202636719
    7. ',' → logprob: -11.100395202636719
    8. '               ' → logprob: -11.350395202636719
    9. ')' → logprob: -11.600395202636719
    10. '                ' → logprob: -11.975395202636719

Token 1804: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.03804895281791687
    2. ' neighbors' → logprob: -3.2880489826202393
    3. 'ne' → logprob: -12.41304874420166
    4. 'neighbor' → logprob: -13.03804874420166
    5. '(ne' → logprob: -14.78804874420166
    6. '_neighbors' → logprob: -15.41304874420166
    7. '[' → logprob: -15.41304874420166
    8. '```' → logprob: -16.038049697875977
    9. ' neighbours' → logprob: -16.163049697875977
    10. '   ' → logprob: -17.288049697875977

Token 1805: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.6921416521072388
    2. ' or' → logprob: -1.4421416521072388
    3. ' and' → logprob: -1.5671416521072388
    4. '               ' → logprob: -3.317141532897949
    5. 'and' → logprob: -4.067141532897949
    6. '                   ' → logprob: -8.06714153289795
    7. 'or' → logprob: -8.31714153289795
    8. '[' → logprob: -8.69214153289795
    9. ')' → logprob: -9.56714153289795
    10. '           ' → logprob: -9.94214153289795

Token 1806: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -16.0
    3. 'А' → logprob: -16.375
    4. '_A' → logprob: -16.375
    5. '```' → logprob: -18.0
    6. '[' → logprob: -18.125
    7. '_' → logprob: -18.5
    8. '_a' → logprob: -18.75
    9. ' A' → logprob: -18.875
    10. ')' → logprob: -19.0

Token 1807: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10522077232599258
    2. ' and' → logprob: -2.8552207946777344
    3. '                   ' → logprob: -3.9802207946777344
    4. '               ' → logprob: -4.355220794677734
    5. 'and' → logprob: -4.980220794677734
    6. '                       ' → logprob: -6.355220794677734
    7. ':' → logprob: -6.980220794677734
    8. ':
' → logprob: -7.230220794677734
    9. 'or' → logprob: -8.355220794677734
    10. '                ' → logprob: -9.355220794677734

Token 1808: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002683688362594694
    2. '                       ' → logprob: -8.62526798248291
    3. ' or' → logprob: -10.37526798248291
    4. 'continue' → logprob: -10.62526798248291
    5. ' continue' → logprob: -11.25026798248291
    6. '               ' → logprob: -12.00026798248291
    7. ' and' → logprob: -12.12526798248291
    8. '                  ' → logprob: -13.12526798248291
    9. 'and' → logprob: -13.25026798248291
    10. '                    ' → logprob: -13.37526798248291

Token 1809: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5867109298706055
    2. '                   ' → logprob: -1.4617109298706055
    3. 'continue' (adapté à ' continue') → logprob: -1.5867109298706055
    4. '	continue' → logprob: -5.5867109298706055
    5. '                       ' → logprob: -5.7117109298706055
    6. '               ' → logprob: -8.336710929870605
    7. '   ' → logprob: -10.586710929870605
    8. '_continue' → logprob: -10.586710929870605
    9. '```' → logprob: -10.836710929870605
    10. '	               ' → logprob: -10.836710929870605

Token 1810: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003577495808713138
    2. '                   ' → logprob: -8.250357627868652
    3. '                
' → logprob: -10.875357627868652
    4. '           ' → logprob: -11.375357627868652
    5. '                ' → logprob: -11.375357627868652
    6. '                       ' → logprob: -11.750357627868652
    7. '<|end|>' → logprob: -11.750357627868652
    8. '              ' → logprob: -11.875357627868652
    9. ' or' → logprob: -12.000357627868652
    10. '			' → logprob: -12.250357627868652

Token 1811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.843177233240567e-05
    2. '                   ' → logprob: -11.875018119812012
    3. 'if' → logprob: -12.375018119812012
    4. ' if' → logprob: -12.375018119812012
    5. 'continue' → logprob: -13.625018119812012
    6. '           ' → logprob: -14.500018119812012
    7. '```' → logprob: -14.500018119812012
    8. ' continue' → logprob: -15.000018119812012
    9. '                       ' → logprob: -15.875018119812012
    10. '              ' → logprob: -15.875018119812012

Token 1812: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006429764907807112
    2. 'if' (adapté à ' if') → logprob: -7.625642776489258
    3. ' if' → logprob: -8.875642776489258
    4. '                   ' → logprob: -11.875642776489258
    5. '           ' → logprob: -12.375642776489258
    6. 'continue' → logprob: -13.625642776489258
    7. '              ' → logprob: -14.125642776489258
    8. '       ' → logprob: -14.125642776489258
    9. '```' → logprob: -14.375642776489258
    10. '                ' → logprob: -14.750642776489258

Token 1813: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.020558468997478485
    2. 'nd' → logprob: -3.8955583572387695
    3. '(nd' → logprob: -11.27055835723877
    4. ' ' → logprob: -13.02055835723877
    5. ' not' → logprob: -15.27055835723877
    6. '_nd' → logprob: -15.52055835723877
    7. ' ' → logprob: -15.64555835723877
    8. '.nd' → logprob: -16.020559310913086
    9. '   ' → logprob: -16.145559310913086
    10. ' nde' → logprob: -16.395559310913086

Token 1814: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.610702363715973e-06
    2. ' B' → logprob: -12.875009536743164
    3. 'A' → logprob: -13.000009536743164
    4. '_B' → logprob: -13.625009536743164
    5. '   ' → logprob: -13.750009536743164
    6. 'nd' → logprob: -13.875009536743164
    7. '  ' → logprob: -14.750009536743164
    8. ' ' → logprob: -15.250009536743164
    9. 'd' → logprob: -15.375009536743164
    10. ')' → logprob: -16.375009536743164

Token 1815: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00317783304490149
    2. 'not' → logprob: -5.753177642822266
    3. '	not' → logprob: -16.503177642822266
    4. ' no' → logprob: -18.253177642822266
    5. ')' → logprob: -19.253177642822266
    6. ':not' → logprob: -19.753177642822266
    7. ' in' → logprob: -20.503177642822266
    8. '<|end|>' → logprob: -20.503177642822266
    9. ' ' → logprob: -20.628177642822266
    10. '(not' → logprob: -20.878177642822266

Token 1816: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01416350994259119
    2. 'in' → logprob: -4.264163494110107
    3. '	in' → logprob: -17.639163970947266
    4. 'In' → logprob: -19.014163970947266
    5. 'neighbors' → logprob: -19.139163970947266
    6. ')' → logprob: -19.389163970947266
    7. '<|end|>' → logprob: -19.514163970947266
    8. 'to' → logprob: -19.639163970947266
    9. ',' → logprob: -19.639163970947266
    10. '
' → logprob: -19.764163970947266

Token 1817: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.006716436706483364
    2. ' neighbors' → logprob: -5.006716251373291
    3. 'neighbor' → logprob: -14.13171672821045
    4. 'ne' → logprob: -15.13171672821045
    5. '_neighbors' → logprob: -16.506715774536133
    6. '
' → logprob: -19.006715774536133
    7. ' neighbours' → logprob: -19.506715774536133
    8. '(ne' → logprob: -19.631715774536133
    9. ' neighborhoods' → logprob: -20.006715774536133
    10. '   ' → logprob: -20.131715774536133

Token 1818: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -9.13388703338569e-06
    2. 'd' → logprob: -12.375009536743164
    3. '_b' → logprob: -12.500009536743164
    4. 'B' → logprob: -14.500009536743164
    5. '   ' → logprob: -14.875009536743164
    6. '
' → logprob: -16.500009536743164
    7. '	d' → logprob: -17.625009536743164
    8. '\' → logprob: -17.750009536743164
    9. '```' → logprob: -18.125009536743164
    10. '  ' → logprob: -18.125009536743164

Token 1819: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.60414821645827e-06
    2. 'D' → logprob: -12.375004768371582
    3. 'C' → logprob: -15.500004768371582
    4. '_B' → logprob: -16.125003814697266
    5. '_' → logprob: -17.625003814697266
    6. '
' → logprob: -17.875003814697266
    7. 'b' → logprob: -18.250003814697266
    8. '_d' → logprob: -18.250003814697266
    9. ' B' → logprob: -19.000003814697266
    10. 'd' → logprob: -19.125003814697266

Token 1820: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009764233604073524
    2. ':' → logprob: -5.759764194488525
    3. '               ' → logprob: -5.884764194488525
    4. ':
' → logprob: -6.259764194488525
    5. '                       ' → logprob: -7.134764194488525
    6. 'continue' → logprob: -7.884764194488525
    7. ' and' → logprob: -8.384764671325684
    8. ' continue' → logprob: -8.509764671325684
    9. 'and' → logprob: -9.259764671325684
    10. '                           ' → logprob: -9.759764671325684

Token 1821: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00032163821742869914
    2. ' continue' → logprob: -8.875321388244629
    3. 'continue' → logprob: -9.250321388244629
    4. '                       ' → logprob: -9.500321388244629
    5. '               ' → logprob: -12.625321388244629
    6. '	continue' → logprob: -13.875321388244629
    7. '   ' → logprob: -14.000321388244629
    8. '                    ' → logprob: -14.125321388244629
    9. '		           ' → logprob: -14.125321388244629
    10. '				' → logprob: -14.250321388244629

Token 1822: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.26633718609809875
    2. 'continue' (adapté à ' continue') → logprob: -1.5163371562957764
    3. '                   ' → logprob: -4.2663373947143555
    4. '	continue' → logprob: -8.391337394714355
    5. '_continue' → logprob: -10.891337394714355
    6. '               ' → logprob: -11.766337394714355
    7. '				' → logprob: -12.016337394714355
    8. '   ' → logprob: -12.391337394714355
    9. '                       ' → logprob: -12.766337394714355
    10. '           ' → logprob: -13.141337394714355

Token 1823: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003725138260051608
    2. '                
' → logprob: -6.253725051879883
    3. '
' → logprob: -7.003725051879883
    4. '                   ' → logprob: -7.503725051879883
    5. '                    
' → logprob: -9.003725051879883
    6. '<|end|>' → logprob: -9.378725051879883
    7. '                        
' → logprob: -10.503725051879883
    8. '                ' → logprob: -11.003725051879883
    9. '                       ' → logprob: -11.378725051879883
    10. '               
' → logprob: -11.753725051879883

Token 1824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.900034299585968e-05
    2. '                   ' → logprob: -9.625088691711426
    3. '                
' → logprob: -11.500088691711426
    4. '
' → logprob: -12.125088691711426
    5. '                       ' → logprob: -13.125088691711426
    6. '           ' → logprob: -13.125088691711426
    7. '              ' → logprob: -13.625088691711426
    8. '                ' → logprob: -14.000088691711426
    9. '                    
' → logprob: -15.000088691711426
    10. '                        
' → logprob: -15.250088691711426

Token 1825: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005296798190101981
    2. 'if' → logprob: -7.625529766082764
    3. '           ' → logprob: -10.875529289245605
    4. '                   ' → logprob: -11.500529289245605
    5. '                
' → logprob: -12.250529289245605
    6. '
' → logprob: -12.875529289245605
    7. ' if' → logprob: -13.000529289245605
    8. '              ' → logprob: -13.375529289245605
    9. '   ' → logprob: -15.125529289245605
    10. 'distance' → logprob: -15.375529289245605

Token 1826: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03650112822651863
    2. 'alt' → logprob: -3.786501169204712
    3. '               ' → logprob: -4.411500930786133
    4. 'cost' → logprob: -8.036500930786133
    5. 'dist' → logprob: -8.661500930786133
    6. ' if' → logprob: -9.036500930786133
    7. 'distance' → logprob: -9.161500930786133
    8. 'd' → logprob: -9.286500930786133
    9. '#' → logprob: -10.286500930786133
    10. 'move' → logprob: -10.536500930786133

Token 1827: ' alt' (ID: 5001)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5794649720191956
    2. ' self' → logprob: -0.9544649720191956
    3. '               ' → logprob: -4.079464912414551
    4. 'abs' → logprob: -4.454464912414551
    5. ' abs' → logprob: -5.079464912414551
    6. '                   ' → logprob: -5.204464912414551
    7. ' math' → logprob: -5.454464912414551
    8. ' if' → logprob: -5.579464912414551
    9. 'if' → logprob: -5.829464912414551
    10. 'math' → logprob: -6.704464912414551

Token 1828: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.03963539004325867
    2. 'itudes' → logprob: -3.289635419845581
    3. '               ' → logprob: -6.539635181427002
    4. '                   ' → logprob: -10.03963565826416
    5. 'itud' → logprob: -10.78963565826416
    6. 'it' → logprob: -10.91463565826416
    7. '       ' → logprob: -11.66463565826416
    8. '              ' → logprob: -11.91463565826416
    9. 'A' → logprob: -11.91463565826416
    10. '   ' → logprob: -12.03963565826416

Token 1829: ' equal' (ID: 12629)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002439467643853277
    2. '	           ' → logprob: -9.375244140625
    3. ',' → logprob: -9.875244140625
    4. ' at' → logprob: -10.500244140625
    5. '		       ' → logprob: -11.375244140625
    6. '                   ' → logprob: -11.750244140625
    7. '           ' → logprob: -12.000244140625
    8. 'and' → logprob: -12.125244140625
    9. '              ' → logprob: -12.125244140625
    10. '
' → logprob: -12.375244140625

Token 1830: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002625715918838978
    2. '                   ' → logprob: -7.127625942230225
    3. '                
' → logprob: -7.252625942230225
    4. ' if' → logprob: -7.752625942230225
    5. ' and' → logprob: -9.377625465393066
    6. '                       ' → logprob: -9.377625465393066
    7. ',' → logprob: -9.502625465393066
    8. '(' → logprob: -9.877625465393066
    9. '                    
' → logprob: -9.877625465393066
    10. '                        
' → logprob: -9.877625465393066

Token 1831: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0016822017496451735
    2. ' nd' → logprob: -7.001682281494141
    3. 'd' → logprob: -8.00168228149414
    4. '
' → logprob: -9.12668228149414
    5. '                   ' → logprob: -9.25168228149414
    6. 'distance' → logprob: -9.37668228149414
    7. '               ' → logprob: -9.50168228149414
    8. '(nd' → logprob: -10.25168228149414
    9. 'positions' → logprob: -11.87668228149414
    10. 'dist' → logprob: -12.12668228149414

Token 1832: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.088346359931165e-07
    2. 'B' → logprob: -15.500000953674316
    3. ' A' → logprob: -15.875000953674316
    4. '
' → logprob: -16.0
    5. '```' → logprob: -16.5
    6. '_A' → logprob: -16.75
    7. ',' → logprob: -16.875
    8. ')' → logprob: -17.125
    9. '	A' → logprob: -17.25
    10. 'А' → logprob: -17.75

Token 1833: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21863125264644623
    2. ' and' → logprob: -1.7186312675476074
    3. 'and' → logprob: -4.218631267547607
    4. ',' → logprob: -6.468631267547607
    5. ' if' → logprob: -8.09363079071045
    6. '           ' → logprob: -8.84363079071045
    7. '                   ' → logprob: -9.84363079071045
    8. ' or' → logprob: -9.84363079071045
    9. 'if' → logprob: -9.96863079071045
    10. '              ' → logprob: -10.21863079071045

Token 1834: ' nd' (ID: 5914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019751399755477905
    2. '(self' → logprob: -4.39475154876709
    3. ' self' → logprob: -5.26975154876709
    4. 'nd' → logprob: -6.51975154876709
    5. ' (' → logprob: -8.26975154876709
    6. '(L' → logprob: -8.64475154876709
    7. '(nd' → logprob: -9.76975154876709
    8. '(' → logprob: -9.89475154876709
    9. 'L' → logprob: -10.76975154876709
    10. '[self' → logprob: -12.45725154876709

Token 1835: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.5094070477061905e-05
    2. 'A' → logprob: -11.750015258789062
    3. 'nd' → logprob: -12.250015258789062
    4. '
' → logprob: -14.250015258789062
    5. 'd' → logprob: -14.375015258789062
    6. '```' → logprob: -14.875015258789062
    7. '(nd' → logprob: -14.875015258789062
    8. ' B' → logprob: -15.625015258789062
    9. ' nd' → logprob: -16.125015258789062
    10. '_nd' → logprob: -17.312515258789062

Token 1836: ' positions' (ID: 15897)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.217951886355877e-05
    2. '                
' → logprob: -11.125061988830566
    3. ',' → logprob: -11.375061988830566
    4. '<|end|>' → logprob: -11.875061988830566
    5. ' if' → logprob: -12.000061988830566
    6. 'if' → logprob: -12.000061988830566
    7. '              ' → logprob: -12.625061988830566
    8. '                   ' → logprob: -13.000061988830566
    9. '                ' → logprob: -13.375061988830566
    10. '               
' → logprob: -13.750061988830566

Token 1837: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4418171455617994e-05
    2. '                
' → logprob: -10.750044822692871
    3. '<|end|>' → logprob: -12.500044822692871
    4. '                   ' → logprob: -12.625044822692871
    5. ',' → logprob: -12.625044822692871
    6. ' if' → logprob: -12.750044822692871
    7. '                ' → logprob: -13.500044822692871
    8. 'if' → logprob: -13.625044822692871
    9. '               
' → logprob: -13.750044822692871
    10. '              ' → logprob: -14.000044822692871

Token 1838: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.173704271830502e-06
    2. '                   ' → logprob: -13.12500286102295
    3. 'if' → logprob: -15.37500286102295
    4. ',' → logprob: -15.62500286102295
    5. '                
' → logprob: -15.62500286102295
    6. ' if' → logprob: -16.000003814697266
    7. '              ' → logprob: -16.250003814697266
    8. '                       ' → logprob: -16.625003814697266
    9. '```' → logprob: -16.625003814697266
    10. '                ' → logprob: -16.875003814697266

Token 1839: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01122842263430357
    2. 'if' → logprob: -4.511228561401367
    3. ' if' → logprob: -8.636228561401367
    4. '                   ' → logprob: -13.386228561401367
    5. '              ' → logprob: -14.261228561401367
    6. '           ' → logprob: -15.011228561401367
    7. '                ' → logprob: -15.886228561401367
    8. '                
' → logprob: -16.511228561401367
    9. '   ' → logprob: -16.886228561401367
    10. ' ' → logprob: -17.011228561401367

Token 1840: ' Remember' (ID: 28014)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3911639451980591
    2. 'if' → logprob: -1.141163945198059
    3. ' if' → logprob: -5.5161638259887695
    4. '                   ' → logprob: -9.14116382598877
    5. 'alt' → logprob: -9.76616382598877
    6. '           ' → logprob: -11.14116382598877
    7. ' alt' → logprob: -11.14116382598877
    8. '                       ' → logprob: -11.26616382598877
    9. '                
' → logprob: -11.26616382598877
    10. '              ' → logprob: -11.39116382598877

Token 1841: ' clim' (ID: 21324)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03485225886106491
    2. 'if' → logprob: -4.159852027893066
    3. ' if' → logprob: -4.159852027893066
    4. '                   ' → logprob: -6.659852027893066
    5. '
' → logprob: -7.034852027893066
    6. '                ' → logprob: -8.284852027893066
    7. ' alt' → logprob: -8.409852027893066
    8. '                
' → logprob: -9.034852027893066
    9. '              ' → logprob: -9.909852027893066
    10. '                       ' → logprob: -10.284852027893066

Token 1842: 'ber' (ID: 718)
  Prédit: 'bers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bers' → logprob: -0.19125135242938995
    2. 'ber' → logprob: -1.9412513971328735
    3. 'b' → logprob: -3.941251277923584
    4. 'A' → logprob: -6.066251277923584
    5. 'nd' → logprob: -6.316251277923584
    6. 'bs' → logprob: -7.128751277923584
    7. '#' → logprob: -7.316251277923584
    8. '   ' → logprob: -7.816251277923584
    9. '
' → logprob: -8.003751754760742
    10. 'br' → logprob: -8.003751754760742

Token 1843: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8126527667045593
    2. 'A' → logprob: -1.187652826309204
    3. ' B' → logprob: -2.187652826309204
    4. '               ' → logprob: -3.062652826309204
    5. 's' → logprob: -3.187652826309204
    6. ' A' → logprob: -3.437652826309204
    7. '                   ' → logprob: -5.312652587890625
    8. ''s' → logprob: -5.687652587890625
    9. ' at' → logprob: -6.187652587890625
    10. ' positions' → logprob: -6.187652587890625

Token 1844: ' pos' (ID: 1253)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_alt' → logprob: -1.4352517127990723
    2. 'pos' → logprob: -1.6852517127990723
    3. '_pos' → logprob: -1.8102517127990723
    4. '_position' → logprob: -2.4352517127990723
    5. 'distance' → logprob: -3.1852517127990723
    6. 'd' → logprob: -3.1852517127990723
    7. 'position' → logprob: -3.3102517127990723
    8. '_distance' → logprob: -3.5602517127990723
    9. 'alt' → logprob: -3.6852517127990723
    10. 'positions' → logprob: -3.8102517127990723

Token 1845: ' d' (ID: 272)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.7955777049064636
    2. 'itions' → logprob: -1.4205777645111084
    3. 's' → logprob: -1.6705777645111084
    4. '=' → logprob: -2.5455777645111084
    5. ' =' → logprob: -3.5455777645111084
    6. 'd' → logprob: -5.670577526092529
    7. ' at' → logprob: -6.545577526092529
    8. '   ' → logprob: -7.045577526092529
    9. '==' → logprob: -7.045577526092529
    10. 'it' → logprob: -7.545577526092529

Token 1846: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.028826329857110977
    2. 'A' → logprob: -4.0288262367248535
    3. 'istance' → logprob: -5.1538262367248535
    4. ' =' → logprob: -6.1538262367248535
    5. '=' → logprob: -6.7788262367248535
    6. 'ist' → logprob: -6.9038262367248535
    7. 'ifference' → logprob: -9.278826713562012
    8. 'iff' → logprob: -9.278826713562012
    9. '_B' → logprob: -10.153826713562012
    10. 's' → logprob: -10.153826713562012

Token 1847: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2390741109848022
    2. ' ==' → logprob: -1.4890741109848022
    3. '=' → logprob: -2.239074230194092
    4. '==' → logprob: -2.239074230194092
    5. ')' → logprob: -3.239074230194092
    6. ',' → logprob: -3.239074230194092
    7. ' and' → logprob: -3.239074230194092
    8. ':
' → logprob: -3.489074230194092
    9. '):
' → logprob: -3.614074230194092
    10. ' is' → logprob: -4.239074230194092

Token 1848: ' distance' (ID: 9324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34909746050834656
    2. ' self' → logprob: -1.224097490310669
    3. ' at' → logprob: -8.72409725189209
    4. '=self' → logprob: -9.09909725189209
    5. '(self' → logprob: -9.59909725189209
    6. '<|end|>' → logprob: -10.09909725189209
    7. ' on' → logprob: -10.34909725189209
    8. '	self' → logprob: -10.34909725189209
    9. ')' → logprob: -10.59909725189209
    10. '<|end|>' → logprob: -10.59909725189209

Token 1849: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.034120939671993256
    2. '               ' → logprob: -4.534121036529541
    3. ' from' → logprob: -4.659121036529541
    4. 'along' → logprob: -5.284121036529541
    5. ')' → logprob: -5.909121036529541
    6. '=' → logprob: -6.784121036529541
    7. '_from' → logprob: -6.909121036529541
    8. '                   ' → logprob: -7.409121036529541
    9. 'to' → logprob: -7.409121036529541
    10. ' along' → logprob: -7.534121036529541

Token 1850: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11318835616111755
    2. 'self' → logprob: -2.4881882667541504
    3. 'route' → logprob: -4.11318826675415
    4. 'end' → logprob: -5.23818826675415
    5. 'the' → logprob: -6.73818826675415
    6. ' start' → logprob: -7.23818826675415
    7. 'L' → logprob: -8.613188743591309
    8. '0' → logprob: -10.113188743591309
    9. ' route' → logprob: -10.238188743591309
    10. ' self' → logprob: -10.363188743591309

Token 1851: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021486106561496854
    2. '                
' → logprob: -9.625214576721191
    3. '                   ' → logprob: -9.750214576721191
    4. ',' → logprob: -11.125214576721191
    5. '                ' → logprob: -11.500214576721191
    6. '
' → logprob: -11.750214576721191
    7. ' and' → logprob: -11.750214576721191
    8. '<|end|>' → logprob: -11.875214576721191
    9. '              ' → logprob: -12.000214576721191
    10. '                    
' → logprob: -12.125214576721191

Token 1852: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6594803333282471
    2. '               ' → logprob: -0.7844803333282471
    3. '                   ' → logprob: -4.659480094909668
    4. 'if' → logprob: -5.034480094909668
    5. '                ' → logprob: -5.284480094909668
    6. '<|end|>' → logprob: -6.909480094909668
    7. ')' → logprob: -7.159480094909668
    8. '                       ' → logprob: -7.534480094909668
    9. ' and' → logprob: -7.534480094909668
    10. ' token' → logprob: -7.659480094909668

Token 1853: ' invert' (ID: 57364)
  Prédit: ' alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alt' → logprob: -0.15928955376148224
    2. 'alt' → logprob: -2.159289598464966
    3. 'nd' → logprob: -4.534289360046387
    4. ' if' → logprob: -4.659289360046387
    5. ' nd' → logprob: -5.534289360046387
    6. 'if' → logprob: -5.784289360046387
    7. ' d' → logprob: -6.784289360046387
    8. ' altitude' → logprob: -6.909289360046387
    9. 'd' → logprob: -7.409289360046387
    10. 'self' → logprob: -8.159289360046387

Token 1854: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32473480701446533
    2. ' if' → logprob: -2.199734687805176
    3. ' at' → logprob: -3.074734687805176
    4. '                   ' → logprob: -3.199734687805176
    5. ',' → logprob: -3.949734687805176
    6. '                       ' → logprob: -3.949734687805176
    7. 'if' → logprob: -4.199734687805176
    8. '(nd' → logprob: -5.574734687805176
    9. 'nd' → logprob: -5.699734687805176
    10. '(' → logprob: -5.699734687805176

Token 1855: ' altitude' (ID: 66032)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1649327427148819
    2. 'B' → logprob: -2.5399327278137207
    3. 'd' → logprob: -4.039932727813721
    4. 'distance' → logprob: -4.039932727813721
    5. 'the' → logprob: -4.539932727813721
    6. 'nd' → logprob: -4.789932727813721
    7. 'route' → logprob: -5.039932727813721
    8. 'checking' → logprob: -6.039932727813721
    9. 'position' → logprob: -6.164932727813721
    10. 'A' → logprob: -6.414932727813721

Token 1856: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.889424836728722e-05
    2. '                   ' → logprob: -10.750099182128906
    3. ',' → logprob: -10.875099182128906
    4. '                
' → logprob: -11.250099182128906
    5. '           ' → logprob: -11.500099182128906
    6. '              ' → logprob: -11.750099182128906
    7. '<|end|>' → logprob: -12.000099182128906
    8. '                ' → logprob: -12.375099182128906
    9. '
' → logprob: -12.625099182128906
    10. ' at' → logprob: -13.500099182128906

Token 1857: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021736434428021312
    2. '<|end|>' → logprob: -9.25021743774414
    3. '                
' → logprob: -10.50021743774414
    4. ',' → logprob: -10.50021743774414
    5. '                   ' → logprob: -11.25021743774414
    6. ' if' → logprob: -11.87521743774414
    7. '<|end|>' → logprob: -12.00021743774414
    8. '                ' → logprob: -12.12521743774414
    9. '                        
' → logprob: -12.62521743774414
    10. 'if' → logprob: -12.75021743774414

Token 1858: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.195421494543552e-05
    2. '                
' → logprob: -10.37507152557373
    3. '                ' → logprob: -11.25007152557373
    4. '              ' → logprob: -11.62507152557373
    5. '                   ' → logprob: -12.00007152557373
    6. '<|end|>' → logprob: -13.00007152557373
    7. '                

' → logprob: -13.50007152557373
    8. '               
' → logprob: -13.62507152557373
    9. ' if' → logprob: -13.75007152557373
    10. 'if' → logprob: -14.00007152557373

Token 1859: ' alt' (ID: 5001)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035542551428079605
    2. 'if' → logprob: -3.7855424880981445
    3. ' if' → logprob: -4.4105424880981445
    4. '                   ' → logprob: -10.285542488098145
    5. ' alt' → logprob: -11.910542488098145
    6. ' ' → logprob: -12.035542488098145
    7. '                ' → logprob: -12.285542488098145
    8. '              ' → logprob: -12.785542488098145
    9. 'If' → logprob: -13.035542488098145
    10. '```' → logprob: -13.410542488098145

Token 1860: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5242466330528259
    2. 'B' → logprob: -0.8992466330528259
    3. 's' → logprob: -8.024246215820312
    4. ' =' → logprob: -8.024246215820312
    5. '_' → logprob: -8.899246215820312
    6. '_A' → logprob: -9.649246215820312
    7. '_equal' → logprob: -9.649246215820312
    8. '=' → logprob: -9.899246215820312
    9. '_B' → logprob: -9.899246215820312
    10. ')' → logprob: -10.524246215820312

Token 1861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022524237632751
    2. ' =' → logprob: -1.91022527217865
    3. '=self' → logprob: -14.785224914550781
    4. ',' → logprob: -16.16022491455078
    5. '=
' → logprob: -16.16022491455078
    6. '           ' → logprob: -16.41022491455078
    7. 'A' → logprob: -16.66022491455078
    8. '==' → logprob: -16.66022491455078
    9. '               ' → logprob: -16.78522491455078
    10. ' ==' → logprob: -16.78522491455078

Token 1862: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031879288144409657
    2. ' self' → logprob: -5.753188133239746
    3. '               ' → logprob: -11.628188133239746
    4. '       ' → logprob: -14.503188133239746
    5. '	self' → logprob: -15.628188133239746
    6. '   ' → logprob: -15.753188133239746
    7. '           ' → logprob: -16.12818717956543
    8. '(self' → logprob: -16.50318717956543
    9. ' ' → logprob: -16.75318717956543
    10. '=self' → logprob: -17.12818717956543

Token 1863: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.2520136833190918
    2. 'route' → logprob: -1.5020136833190918
    3. ' route' → logprob: -9.75201416015625
    4. '       ' → logprob: -11.62701416015625
    5. '   ' → logprob: -11.87701416015625
    6. '$route' → logprob: -12.50201416015625
    7. 'self' → logprob: -13.00201416015625
    8. ' ' → logprob: -13.75201416015625
    9. '           ' → logprob: -13.87701416015625
    10. '(route' → logprob: -14.37701416015625

Token 1864: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -7.600714161526412e-05
    2. 'alt' → logprob: -9.500076293945312
    3. '.point' → logprob: -14.500076293945312
    4. '```' → logprob: -15.750076293945312
    5. '_alt' → logprob: -15.875076293945312
    6. ' .' → logprob: -16.125076293945312
    7. '   ' → logprob: -16.625076293945312
    8. 'Altitude' → logprob: -16.750076293945312
    9. '.' → logprob: -16.875076293945312
    10. '.al' → logprob: -17.625076293945312

Token 1865: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.012260745279490948
    2. 'at' → logprob: -5.887260913848877
    3. '       ' → logprob: -6.262260913848877
    4. '_at' → logprob: -6.637260913848877
    5. 'ut' → logprob: -6.887260913848877
    6. 'ude' → logprob: -7.137260913848877
    7. 'ute' → logprob: -7.137260913848877
    8. 'At' → logprob: -7.387260913848877
    9. '               ' → logprob: -7.387260913848877
    10. '   ' → logprob: -7.512260913848877

Token 1866: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -14.75000286102295
    3. ')_' → logprob: -15.00000286102295
    4. ' _' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '_equal' → logprob: -15.62500286102295
    7. 'at' → logprob: -15.75000286102295
    8. '   ' → logprob: -15.87500286102295
    9. ')' → logprob: -16.000001907348633
    10. '_a' → logprob: -16.000001907348633

Token 1867: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0018225008388981223
    2. 'distance' → logprob: -6.376822471618652
    3. 'nd' → logprob: -9.251822471618652
    4. 'd' → logprob: -11.751822471618652
    5. '_at' → logprob: -12.626822471618652
    6. 'at' → logprob: -12.876822471618652
    7. 'Distance' → logprob: -12.876822471618652
    8. '_DISTANCE' → logprob: -13.126822471618652
    9. '_nd' → logprob: -13.501822471618652
    10. ' distance' → logprob: -13.751822471618652

Token 1868: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.39365047216415405
    2. 'nd' → logprob: -1.2686505317687988
    3. ' nd' → logprob: -3.143650531768799
    4. '(' → logprob: -7.393650531768799
    5. ' (' → logprob: -8.01865005493164
    6. '               ' → logprob: -9.39365005493164
    7. '                   ' → logprob: -11.14365005493164
    8. '(n' → logprob: -11.14365005493164
    9. '           ' → logprob: -12.89365005493164
    10. ')' → logprob: -12.89365005493164

Token 1869: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.750000953674316
    3. ' A' → logprob: -15.750000953674316
    4. ')' → logprob: -16.375
    5. '(' → logprob: -17.0
    6. 'А' → logprob: -18.0
    7. '   ' → logprob: -18.25
    8. '[' → logprob: -18.5
    9. ' ' → logprob: -18.625
    10. '_A' → logprob: -18.875

Token 1870: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023295441642403603
    2. ')' → logprob: -3.7732954025268555
    3. ')
' → logprob: -10.773295402526855
    4. '               ' → logprob: -11.398295402526855
    5. '       ' → logprob: -11.648295402526855
    6. '           ' → logprob: -12.523295402526855
    7. ' )
' → logprob: -12.523295402526855
    8. '),' → logprob: -14.273295402526855
    9. ')

' → logprob: -15.273295402526855
    10. '                   ' → logprob: -15.273295402526855

Token 1871: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016714917728677392
    2. ' alt' → logprob: -7.001671314239502
    3. 'alt' → logprob: -7.626671314239502
    4. '                   ' → logprob: -8.62667179107666
    5. '                
' → logprob: -10.37667179107666
    6. '                ' → logprob: -10.62667179107666
    7. ' ' → logprob: -11.50167179107666
    8. '           ' → logprob: -12.00167179107666
    9. '              ' → logprob: -12.25167179107666
    10. '                       ' → logprob: -12.62667179107666

Token 1872: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' (adapté à ' alt') → logprob: -0.08690810203552246
    2. ' alt' → logprob: -2.5869081020355225
    3. '               ' → logprob: -4.836908340454102
    4. '                   ' → logprob: -10.336908340454102
    5. '                       ' → logprob: -11.461908340454102
    6. '           ' → logprob: -12.836908340454102
    7. '                ' → logprob: -13.211908340454102
    8. '                               ' → logprob: -13.336908340454102
    9. '                           ' → logprob: -13.961908340454102
    10. '       ' → logprob: -13.961908340454102

Token 1873: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.961759259458631e-06
    2. '_B' → logprob: -12.875004768371582
    3. ' B' → logprob: -13.875004768371582
    4. ' =' → logprob: -14.625004768371582
    5. '=' → logprob: -14.750004768371582
    6. '   ' → logprob: -15.250004768371582
    7. '       ' → logprob: -16.5000057220459
    8. '  ' → logprob: -17.0000057220459
    9. '_' → logprob: -17.3750057220459
    10. ' ' → logprob: -17.5000057220459

Token 1874: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805767372250557
    2. '=' → logprob: -3.288057565689087
    3. ' ==' → logprob: -11.663057327270508
    4. '=self' → logprob: -12.038057327270508
    5. '==' → logprob: -13.663057327270508
    6. ')' → logprob: -15.163057327270508
    7. ' ' → logprob: -16.413057327270508
    8. 'self' → logprob: -16.663057327270508
    9. ' ' → logprob: -16.913057327270508
    10. '           ' → logprob: -17.288057327270508

Token 1875: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013263145228847861
    2. ' self' → logprob: -6.626326084136963
    3. '	self' → logprob: -16.001325607299805
    4. '=self' → logprob: -16.751325607299805
    5. '               ' → logprob: -17.001325607299805
    6. '   ' → logprob: -17.126325607299805
    7. '(self' → logprob: -17.376325607299805
    8. '[self' → logprob: -17.626325607299805
    9. '                   ' → logprob: -17.751325607299805
    10. ' ' → logprob: -18.376325607299805

Token 1876: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.0008548821206204593
    2. '.alt' → logprob: -7.125854969024658
    3. 'route' → logprob: -10.2508544921875
    4. 'alt' → logprob: -11.3758544921875
    5. '.' → logprob: -13.3758544921875
    6. ' .' → logprob: -14.6258544921875
    7. '$route' → logprob: -14.6258544921875
    8. '
' → logprob: -14.7508544921875
    9. '.al' → logprob: -15.8758544921875
    10. '   ' → logprob: -15.8758544921875

Token 1877: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -0.0849217101931572
    2. '_at' → logprob: -3.2099215984344482
    3. '_alt' → logprob: -3.2099215984344482
    4. '.at' → logprob: -8.209921836853027
    5. 'alt' → logprob: -8.459921836853027
    6. 'At' → logprob: -9.209921836853027
    7. '   ' → logprob: -10.834921836853027
    8. ' altitude' → logprob: -11.084921836853027
    9. '._' → logprob: -11.459921836853027
    10. '_.' → logprob: -11.709921836853027

Token 1878: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.010372612625360489
    2. 'ude' → logprob: -4.885372638702393
    3. '       ' → logprob: -6.635372638702393
    4. '   ' → logprob: -8.010372161865234
    5. 'ut' → logprob: -8.385372161865234
    6. 'ute' → logprob: -8.760372161865234
    7. '               ' → logprob: -8.760372161865234
    8. '_at' → logprob: -8.760372161865234
    9. 'at' → logprob: -9.135372161865234
    10. 'self' → logprob: -10.010372161865234

Token 1879: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.975612187583465e-05
    2. 'At' → logprob: -10.500029563903809
    3. 'at' → logprob: -14.625029563903809
    4. '           ' → logprob: -15.500029563903809
    5. '   ' → logprob: -15.625029563903809
    6. ' at' → logprob: -16.000030517578125
    7. '_' → logprob: -16.125030517578125
    8. '.at' → logprob: -16.500030517578125
    9. '	at' → logprob: -16.625030517578125
    10. 'B' → logprob: -16.750030517578125

Token 1880: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.012686104513704777
    2. 'Distance' → logprob: -4.762686252593994
    3. 'distance' → logprob: -5.512686252593994
    4. 'self' → logprob: -11.012685775756836
    5. '(self' → logprob: -12.137685775756836
    6. 'float' → logprob: -13.137685775756836
    7. '_DISTANCE' → logprob: -13.512685775756836
    8. '
' → logprob: -14.137685775756836
    9. '(' → logprob: -14.137685775756836
    10. '(distance' → logprob: -14.637685775756836

Token 1881: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023544883355498314
    2. '(self' → logprob: -3.7735447883605957
    3. ' self' → logprob: -8.148545265197754
    4. '               ' → logprob: -11.898545265197754
    5. '[self' → logprob: -13.398545265197754
    6. '	self' → logprob: -14.148545265197754
    7. '                   ' → logprob: -14.648545265197754
    8. '(' → logprob: -14.898545265197754
    9. '$self' → logprob: -15.648545265197754
    10. ' (' → logprob: -16.648544311523438

Token 1882: '.L' (ID: 2024)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0010830636601895094
    2. '.L' → logprob: -6.876082897186279
    3. ' L' → logprob: -10.501083374023438
    4. 'self' → logprob: -10.751083374023438
    5. '.' → logprob: -14.751083374023438
    6. '	L' → logprob: -15.626083374023438
    7. ' self' → logprob: -15.876083374023438
    8. '_L' → logprob: -16.001083374023438
    9. 'length' → logprob: -16.626083374023438
    10. '   ' → logprob: -16.751083374023438

Token 1883: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14268310368061066
    2. '-' → logprob: -2.0176830291748047
    3. ' ' → logprob: -12.892683029174805
    4. ')' → logprob: -13.267683029174805
    5. ' ' → logprob: -13.392683029174805
    6. '-n' → logprob: -14.017683029174805
    7. ' -
' → logprob: -15.392683029174805
    8. '-
' → logprob: -15.517683029174805
    9. '−' → logprob: -15.767683029174805
    10. '   ' → logprob: -16.142683029174805

Token 1884: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -7.941850526549388e-06
    2. ' nd' → logprob: -11.750007629394531
    3. '(nd' → logprob: -18.12500762939453
    4. '
' → logprob: -19.37500762939453
    5. '   ' → logprob: -20.00000762939453
    6. '_nd' → logprob: -20.37500762939453
    7. '.nd' → logprob: -21.25000762939453
    8. '               ' → logprob: -21.75000762939453
    9. 'nb' → logprob: -21.75000762939453
    10. 'nt' → logprob: -22.00000762939453

Token 1885: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00030436101951636374
    2. 'nd' → logprob: -8.125304222106934
    3. ' nd' → logprob: -12.125304222106934
    4. 'A' → logprob: -13.875304222106934
    5. '(nd' → logprob: -13.875304222106934
    6. 'd' → logprob: -15.125304222106934
    7. '_B' → logprob: -15.250304222106934
    8. '_nd' → logprob: -15.875304222106934
    9. '   ' → logprob: -16.37530517578125
    10. 'b' → logprob: -16.75030517578125

Token 1886: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008405826985836029
    2. ')' → logprob: -5.133405685424805
    3. '               ' → logprob: -6.008405685424805
    4. ')
' → logprob: -11.758405685424805
    5. ')

' → logprob: -12.883405685424805
    6. '           ' → logprob: -13.133405685424805
    7. '                   ' → logprob: -13.258405685424805
    8. ' )
' → logprob: -13.883405685424805
    9. ')`
' → logprob: -14.758405685424805
    10. '              ' → logprob: -15.633405685424805

Token 1887: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.2729995988775045e-06
    2. '                   ' → logprob: -12.375006675720215
    3. '              ' → logprob: -14.500006675720215
    4. 'if' → logprob: -14.875006675720215
    5. '                
' → logprob: -14.875006675720215
    6. '			' → logprob: -15.500006675720215
    7. '                ' → logprob: -15.625006675720215
    8. '```' → logprob: -16.0000057220459
    9. '           ' → logprob: -16.3750057220459
    10. '	           ' → logprob: -16.6250057220459

Token 1888: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20322410762310028
    2. 'if' (adapté à ' if') → logprob: -1.7032240629196167
    3. ' if' → logprob: -6.328224182128906
    4. '                   ' → logprob: -11.203224182128906
    5. '```' → logprob: -12.828224182128906
    6. '                
' → logprob: -12.953224182128906
    7. '           ' → logprob: -14.078224182128906
    8. 'If' → logprob: -14.078224182128906
    9. '	if' → logprob: -14.328224182128906
    10. '              ' → logprob: -14.453224182128906

Token 1889: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.014266341924667358
    2. ' abs' → logprob: -4.514266490936279
    3. 'math' → logprob: -5.764266490936279
    4. ' math' → logprob: -9.514266014099121
    5. '               ' → logprob: -14.264266014099121
    6. '                   ' → logprob: -14.389266014099121
    7. '(abs' → logprob: -14.889266014099121
    8. 'alt' → logprob: -16.014266967773438
    9. '                       ' → logprob: -16.139266967773438
    10. '   ' → logprob: -16.389266967773438

Token 1890: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011129142512800172
    2. '(nd' → logprob: -9.12511157989502
    3. 'alt' → logprob: -14.12511157989502
    4. '(ord' → logprob: -14.87511157989502
    5. ' (' → logprob: -15.37511157989502
    6. '               ' → logprob: -16.125110626220703
    7. '(opt' → logprob: -16.125110626220703
    8. '(round' → logprob: -16.250110626220703
    9. '(indent' → logprob: -16.375110626220703
    10. '(al' → logprob: -16.750110626220703

Token 1891: 'alt' (ID: 3271)
  Prédit: 'alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -2.1008713702030946e-06
    2. ' alt' → logprob: -13.500001907348633
    3. 'nd' → logprob: -14.500001907348633
    4. '   ' → logprob: -17.500001907348633
    5. 'al' → logprob: -17.875001907348633
    6. '_alt' → logprob: -17.875001907348633
    7. '           ' → logprob: -18.250001907348633
    8. '-alt' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. '.alt' → logprob: -18.625001907348633

Token 1892: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7835754988482222e-05
    2. 'B' → logprob: -11.375018119812012
    3. '(nd' → logprob: -12.875018119812012
    4. '(' → logprob: -13.250018119812012
    5. '               ' → logprob: -14.250018119812012
    6. '           ' → logprob: -15.000018119812012
    7. '                   ' → logprob: -15.625018119812012
    8. '   ' → logprob: -15.625018119812012
    9. ' A' → logprob: -15.875018119812012
    10. 'a' → logprob: -16.000017166137695

Token 1893: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11378409713506699
    2. '-' → logprob: -2.238784074783325
    3. ')' → logprob: -7.238784313201904
    4. ' <=' → logprob: -8.863783836364746
    5. '<=' → logprob: -9.488783836364746
    6. ')<=' → logprob: -11.363783836364746
    7. ' ' → logprob: -12.488783836364746
    8. '           ' → logprob: -12.863783836364746
    9. ' )' → logprob: -13.613783836364746
    10. '          ' → logprob: -14.238783836364746

Token 1894: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -3.8889261304575484e-06
    2. ' alt' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.125003814697266
    4. ''alt' → logprob: -18.125003814697266
    5. '           ' → logprob: -18.500003814697266
    6. '_alt' → logprob: -18.750003814697266
    7. '       ' → logprob: -19.375003814697266
    8. '0' → logprob: -19.375003814697266
    9. '               ' → logprob: -19.500003814697266
    10. 'Alt' → logprob: -19.500003814697266

Token 1895: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.3557529857498594e-05
    2. 'A' → logprob: -11.00002384185791
    3. ')' → logprob: -12.50002384185791
    4. 'nd' → logprob: -13.62502384185791
    5. ')
' → logprob: -14.25002384185791
    6. 'b' → logprob: -15.37502384185791
    7. ' B' → logprob: -16.000022888183594
    8. '   ' → logprob: -16.000022888183594
    9. '
' → logprob: -16.625022888183594
    10. 'd' → logprob: -16.625022888183594

Token 1896: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ')<=' → logprob: -12.125011444091797
    3. ')>' → logprob: -12.375011444091797
    4. ')<' → logprob: -13.500011444091797
    5. ' )' → logprob: -15.375011444091797
    6. '>' → logprob: -16.250011444091797
    7. ')>=' → logprob: -17.250011444091797
    8. '）' → logprob: -17.500011444091797
    9. ')
' → logprob: -18.000011444091797
    10. '<=' → logprob: -18.375011444091797

Token 1897: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3641042411327362
    2. '<=' → logprob: -1.6141042709350586
    3. ' <' → logprob: -3.2391042709350586
    4. '<' → logprob: -3.6141042709350586
    5. '>' → logprob: -3.6141042709350586
    6. ' >' → logprob: -4.489104270935059
    7. ')' → logprob: -6.489104270935059
    8. ')<=' → logprob: -8.739104270935059
    9. '                   ' → logprob: -10.989104270935059
    10. '```' → logprob: -11.239104270935059

Token 1898: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38697540760040283
    2. '1' → logprob: -1.1369754076004028
    3. ' self' → logprob: -9.386975288391113
    4. ' ' → logprob: -11.886975288391113
    5. '   ' → logprob: -11.886975288391113
    6. '=self' → logprob: -13.261975288391113
    7. '10' → logprob: -13.386975288391113
    8. '(self' → logprob: -14.136975288391113
    9. '=' → logprob: -14.511975288391113
    10. '
' → logprob: -14.636975288391113

Token 1899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931889057159424
    2. 'self' → logprob: -0.6931889057159424
    3. 'max' → logprob: -10.443188667297363
    4. ' self' → logprob: -12.318188667297363
    5. '(self' → logprob: -12.943188667297363
    6. '10' → logprob: -13.068188667297363
    7. '   ' → logprob: -14.068188667297363
    8. '=self' → logprob: -14.318188667297363
    9. '
' → logprob: -14.443188667297363
    10. '2' → logprob: -14.693188667297363

Token 1900: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07889474183320999
    2. '-' → logprob: -2.578894853591919
    3. '-e' → logprob: -13.32889461517334
    4. '0' → logprob: -14.32889461517334
    5. '1' → logprob: -14.32889461517334
    6. '           ' → logprob: -14.70389461517334
    7. '```' → logprob: -14.70389461517334
    8. '
' → logprob: -15.20389461517334
    9. '       ' → logprob: -15.70389461517334
    10. '   ' → logprob: -16.203895568847656

Token 1901: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7835754988482222e-05
    2. '9' → logprob: -11.000018119812012
    3. ' -' → logprob: -15.125018119812012
    4. '\-' → logprob: -15.750018119812012
    5. '```' → logprob: -15.875018119812012
    6. '
' → logprob: -16.125017166137695
    7. '−' → logprob: -16.250017166137695
    8. '**' → logprob: -16.625017166137695
    9. '   ' → logprob: -16.875017166137695
    10. '^-' → logprob: -17.500017166137695

Token 1902: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.7491250875755213e-05
    2. '6' → logprob: -10.625027656555176
    3. '12' → logprob: -13.125027656555176
    4. '09' → logprob: -14.875027656555176
    5. '8' → logprob: -15.000027656555176
    6. '7' → logprob: -15.125027656555176
    7. '-' → logprob: -16.37502670288086
    8. '
' → logprob: -17.50002670288086
    9. '10' → logprob: -17.62502670288086
    10. '```' → logprob: -17.87502670288086

Token 1903: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19939842820167542
    2. ':
' → logprob: -1.824398398399353
    3. '                   ' → logprob: -4.574398517608643
    4. ' and' → logprob: -5.324398517608643
    5. '               ' → logprob: -5.699398517608643
    6. '                       ' → logprob: -7.824398517608643
    7. 'and' → logprob: -8.574398040771484
    8. '):
' → logprob: -9.199398040771484
    9. '):' → logprob: -9.324398040771484
    10. '                           ' → logprob: -10.199398040771484

Token 1904: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002883913984987885
    2. '                       ' → logprob: -8.250288009643555
    3. '                           ' → logprob: -11.375288009643555
    4. '                    ' → logprob: -12.375288009643555
    5. '                  ' → logprob: -13.000288009643555
    6. '               ' → logprob: -13.250288009643555
    7. ':
' → logprob: -13.750288009643555
    8. '
' → logprob: -13.750288009643555
    9. '```' → logprob: -14.125288009643555
    10. ' candidates' → logprob: -14.250288009643555

Token 1905: ' candidates' (ID: 18116)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6359074115753174
    2. 'c' → logprob: -0.7609074115753174
    3. ' candidates' → logprob: -6.135907173156738
    4. '                       ' → logprob: -7.010907173156738
    5. '               ' → logprob: -9.760907173156738
    6. 'candidate' → logprob: -9.885907173156738
    7. '                           ' → logprob: -10.010907173156738
    8. ' c' → logprob: -10.885907173156738
    9. '                  ' → logprob: -12.010907173156738
    10. '                               ' → logprob: -12.010907173156738

Token 1906: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026918189600110054
    2. '.' → logprob: -3.6519181728363037
    3. '                   ' → logprob: -7.901918411254883
    4. '                       ' → logprob: -8.901918411254883
    5. ' .' → logprob: -9.901918411254883
    6. '.add' → logprob: -10.901918411254883
    7. '               ' → logprob: -11.776918411254883
    8. '                           ' → logprob: -12.026918411254883
    9. 'append' → logprob: -12.151918411254883
    10. ').' → logprob: -12.151918411254883

Token 1907: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12906306982040405
    2. '(' → logprob: -2.129063129425049
    3. ' (' → logprob: -6.754063129425049
    4. '(nd' → logprob: -7.129063129425049
    5. '                   ' → logprob: -9.37906265258789
    6. '(
' → logprob: -10.25406265258789
    7. ' ((' → logprob: -10.75406265258789
    8. '   ' → logprob: -11.62906265258789
    9. '                       ' → logprob: -12.12906265258789
    10. '(n' → logprob: -13.12906265258789

Token 1908: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.676292231422849e-05
    2. ' nd' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '(nd' → logprob: -17.250017166137695
    5. '_nd' → logprob: -18.125017166137695
    6. 'ndl' → logprob: -18.750017166137695
    7. '               ' → logprob: -19.250017166137695
    8. '           ' → logprob: -19.625017166137695
    9. 'nda' → logprob: -20.375017166137695
    10. 'nds' → logprob: -20.375017166137695

Token 1909: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.375
    3. 'a' → logprob: -18.75
    4. ' A' → logprob: -18.75
    5. 'А' → logprob: -19.25
    6. '_A' → logprob: -19.625
    7. '(' → logprob: -19.875
    8. ',' → logprob: -20.0
    9. '[' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 1910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ',
' → logprob: -10.250039100646973
    3. ' ,' → logprob: -13.500039100646973
    4. '<|end|>' → logprob: -14.000039100646973
    5. '‌,' → logprob: -15.375039100646973
    6. '',' → logprob: -15.750039100646973
    7. ',",' → logprob: -15.750039100646973
    8. ',n' → logprob: -16.000038146972656
    9. '                   ' → logprob: -16.250038146972656
    10. '<|end|>' → logprob: -16.625038146972656

Token 1911: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0015028368216007948
    2. ' nd' → logprob: -6.501502990722656
    3. '(nd' → logprob: -15.876502990722656
    4. 'ndl' → logprob: -15.876502990722656
    5. '_nd' → logprob: -16.376502990722656
    6. '   ' → logprob: -16.876502990722656
    7. '
' → logprob: -17.751502990722656
    8. '.nd' → logprob: -17.876502990722656
    9. 'nds' → logprob: -18.001502990722656
    10. 'n' → logprob: -18.126502990722656

Token 1912: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.3856492842023727e-06
    2. 'A' → logprob: -14.125000953674316
    3. ')' → logprob: -15.500000953674316
    4. 'b' → logprob: -16.312501907348633
    5. '
' → logprob: -16.875001907348633
    6. ' B' → logprob: -16.937501907348633
    7. 'd' → logprob: -17.125001907348633
    8. '_B' → logprob: -17.312501907348633
    9. '1' → logprob: -17.687501907348633
    10. ')
' → logprob: -17.750001907348633

Token 1913: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3888218402862549
    2. ')' → logprob: -1.1388218402862549
    3. '))
' → logprob: -6.513821601867676
    4. '                   ' → logprob: -8.013821601867676
    5. '               ' → logprob: -9.638821601867676
    6. ')
' → logprob: -10.138821601867676
    7. '                       ' → logprob: -11.388821601867676
    8. '),' → logprob: -12.263821601867676
    9. ')))' → logprob: -12.263821601867676
    10. ',' → logprob: -13.388821601867676

Token 1914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016309542581439018
    2. '
' → logprob: -4.51630973815918
    3. '        
' → logprob: -5.76630973815918
    4. 'return' → logprob: -6.64130973815918
    5. '               ' → logprob: -9.14130973815918
    6. ' return' → logprob: -9.14130973815918
    7. '	' → logprob: -9.14130973815918
    8. '<|end|>' → logprob: -9.14130973815918
    9. '    
' → logprob: -9.39130973815918
    10. '```' → logprob: -9.89130973815918

Token 1915: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012207873165607452
    2. 'return' (adapté à ' return') → logprob: -5.137207984924316
    3. '
' → logprob: -5.512207984924316
    4. '        
' → logprob: -7.262207984924316
    5. '	' → logprob: -7.512207984924316
    6. ' return' → logprob: -7.512207984924316
    7. '	return' → logprob: -8.637207984924316
    8. '		
' → logprob: -9.512207984924316
    9. '<|end|>' → logprob: -9.887207984924316
    10. '   ' → logprob: -10.887207984924316

Token 1916: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.676292231422849e-05
    2. ' candidates' → logprob: -11.000017166137695
    3. '[c' → logprob: -17.500017166137695
    4. 'candidate' → logprob: -19.000017166137695
    5. '_candidates' → logprob: -19.125017166137695
    6. '	c' → logprob: -20.125017166137695
    7. '[]' → logprob: -20.375017166137695
    8. ' c' → logprob: -20.500017166137695
    9. 'cand' → logprob: -21.125017166137695
    10. '   ' → logprob: -21.250017166137695

Token 1917: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2126239687204361
    2. '   ' → logprob: -1.837623953819275
    3. '<|end|>' → logprob: -4.2126240730285645
    4. '    
' → logprob: -5.0876240730285645
    5. '```' → logprob: -5.2126240730285645
    6. 'def' → logprob: -6.2126240730285645
    7. '

' → logprob: -6.4626240730285645
    8. '<|end|>' → logprob: -6.9626240730285645
    9. ' def' → logprob: -8.462623596191406
    10. '        
' → logprob: -8.587623596191406

Token 1918: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14988958835601807
    2. '   ' → logprob: -2.0248894691467285
    3. '

' → logprob: -6.1498894691467285
    4. '    
' → logprob: -6.5248894691467285
    5. 'def' → logprob: -6.6498894691467285
    6. '```' → logprob: -7.0248894691467285
    7. '<|end|>' → logprob: -7.2748894691467285
    8. '<|end|>' → logprob: -8.524889945983887
    9. ' def' → logprob: -9.149889945983887
    10. ' 
' → logprob: -10.149889945983887

Token 1919: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06364113837480545
    2. '   ' → logprob: -2.81364107131958
    3. ' def' → logprob: -6.81364107131958
    4. '
' → logprob: -7.56364107131958
    5. '```' → logprob: -10.063641548156738
    6. '    
' → logprob: -12.188641548156738
    7. '	def' → logprob: -12.563641548156738
    8. '       ' → logprob: -13.813641548156738
    9. ' ' → logprob: -14.438641548156738
    10. '

' → logprob: -14.938641548156738

Token 1920: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.763735830783844
    2. 'dp' → logprob: -0.888735830783844
    3. 'dfs' → logprob: -3.013735771179199
    4. 'min' → logprob: -3.763735771179199
    5. '_min' → logprob: -4.263735771179199
    6. '_dp' → logprob: -4.388735771179199
    7. 'minimal' → logprob: -5.013735771179199
    8. 'minimum' → logprob: -5.263735771179199
    9. ' dp' → logprob: -5.763735771179199
    10. ' solve' → logprob: -6.013735771179199

Token 1921: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01086281705647707
    2. '(' → logprob: -4.635862827301025
    3. '_(' → logprob: -7.760862827301025
    4. '_' → logprob: -8.260862350463867
    5. '_at' → logprob: -8.510862350463867
    6. '_self' → logprob: -9.635862350463867
    7. '_step' → logprob: -9.635862350463867
    8. '_next' → logprob: -10.260862350463867
    9. '   ' → logprob: -10.635862350463867
    10. '(
' → logprob: -11.260862350463867

Token 1922: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2207282781600952
    2. ',' → logprob: -1.3457282781600952
    3. '(self' → logprob: -1.3457282781600952
    4. '   ' → logprob: -2.2207283973693848
    5. 'self' → logprob: -3.5957283973693848
    6. ')_' → logprob: -4.595728397369385
    7. '_at' → logprob: -4.720728397369385
    8. '_self' → logprob: -5.345728397369385
    9. '_,' → logprob: -5.595728397369385
    10. '_(' → logprob: -5.720728397369385

Token 1923: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005118834786117077
    2. '   ' → logprob: -5.8801188468933105
    3. '(' → logprob: -6.5051188468933105
    4. 'self' → logprob: -8.255118370056152
    5. '(
' → logprob: -8.505118370056152
    6. '       ' → logprob: -8.880118370056152
    7. '_' → logprob: -9.880118370056152
    8. '_(' → logprob: -9.880118370056152
    9. 'def' → logprob: -10.630118370056152
    10. ':' → logprob: -11.130118370056152

Token 1924: ' float' (ID: 4428)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00011415231710998341
    2. 'float' → logprob: -9.250114440917969
    3. ' Optional' → logprob: -11.250114440917969
    4. 'optional' → logprob: -12.750114440917969
    5. '   ' → logprob: -13.500114440917969
    6. 'None' → logprob: -15.000114440917969
    7. '(Optional' → logprob: -15.000114440917969
    8. '```' → logprob: -17.00011444091797
    9. '
' → logprob: -17.12511444091797
    10. '	Optional' → logprob: -17.12511444091797

Token 1925: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3098040819168091
    2. '(self' → logprob: -1.434804081916809
    3. '   ' → logprob: -4.3098039627075195
    4. ':
' → logprob: -4.5598039627075195
    5. ':' → logprob: -5.6848039627075195
    6. 'self' → logprob: -7.6848039627075195
    7. '(
' → logprob: -8.80980396270752
    8. '(' → logprob: -8.80980396270752
    9. ',' → logprob: -10.43480396270752
    10. '```' → logprob: -10.43480396270752

Token 1926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.505351095460355e-05
    2. '```' → logprob: -9.875075340270996
    3. '   ' → logprob: -11.500075340270996
    4. '
' → logprob: -11.625075340270996
    5. '        
' → logprob: -13.625075340270996
    6. 'def' → logprob: -14.125075340270996
    7. '           ' → logprob: -14.375075340270996
    8. '``' → logprob: -14.875075340270996
    9. ',' → logprob: -15.000075340270996
    10. '    
' → logprob: -15.375075340270996

Token 1927: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.265817791223526
    2. 'def' → logprob: -1.5158177614212036
    3. '   ' → logprob: -4.765817642211914
    4. '
' → logprob: -5.515817642211914
    5. 'import' → logprob: -7.140817642211914
    6. 'from' → logprob: -8.140817642211914
    7. ' def' → logprob: -9.015817642211914
    8. '```' → logprob: -10.890817642211914
    9. '        
' → logprob: -11.640817642211914
    10. '#' (adapté à ' #') → logprob: -12.390817642211914

Token 1928: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05165480822324753
    2. 'from' → logprob: -3.301654815673828
    3. 'import' → logprob: -4.926654815673828
    4. '       ' → logprob: -5.301654815673828
    5. '   ' → logprob: -6.801654815673828
    6. '
' → logprob: -9.801654815673828
    7. ' def' → logprob: -9.926654815673828
    8. '```' → logprob: -10.051654815673828
    9. 'visited' → logprob: -11.676654815673828
    10. 'cache' → logprob: -12.176654815673828

Token 1929: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03920551761984825
    2. '   ' → logprob: -3.789205551147461
    3. ' def' → logprob: -4.164205551147461
    4. '
' → logprob: -9.664205551147461
    5. '_' → logprob: -10.039205551147461
    6. '       ' → logprob: -10.039205551147461
    7. '  ' → logprob: -10.539205551147461
    8. '```' → logprob: -10.789205551147461
    9. '	def' → logprob: -11.039205551147461
    10. ' ' → logprob: -11.164205551147461

Token 1930: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12731915712356567
    2. 'def' → logprob: -2.752319097518921
    3. '       ' → logprob: -3.627319097518921
    4. '
' → logprob: -4.3773193359375
    5. ':' → logprob: -4.6273193359375
    6. ' def' → logprob: -5.6273193359375
    7. ':
' → logprob: -6.2523193359375
    8. '        
' → logprob: -8.1273193359375
    9. '    
' → logprob: -8.5023193359375
    10. '  ' → logprob: -9.0023193359375

Token 1931: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3179488778114319
    2. '       ' → logprob: -2.067948818206787
    3. '   ' → logprob: -2.317948818206787
    4. 'self' → logprob: -3.192948818206787
    5. '"' → logprob: -6.567948818206787
    6. '```' → logprob: -6.692948818206787
    7. '
' → logprob: -6.942948818206787
    8. 'defined' → logprob: -7.192948818206787
    9. '"""' → logprob: -7.817948818206787
    10. '           ' → logprob: -8.067949295043945

Token 1932: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4051646292209625
    2. 'find' → logprob: -1.2801645994186401
    3. 'def' → logprob: -3.6551647186279297
    4. '   ' → logprob: -4.78016471862793
    5. '       ' → logprob: -4.90516471862793
    6. 'define' → logprob: -5.78016471862793
    7. 'compute' → logprob: -5.78016471862793
    8. 'solve' → logprob: -6.65516471862793
    9. '_min' → logprob: -6.78016471862793
    10. 'self' → logprob: -7.15516471862793

Token 1933: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8076637983322144
    2. '       ' → logprob: -0.9326637983322144
    3. '   ' → logprob: -3.182663917541504
    4. 'the' → logprob: -3.807663917541504
    5. 'def' → logprob: -4.057663917541504
    6. 'min' → logprob: -4.057663917541504
    7. ' self' → logprob: -4.557663917541504
    8. '(self' → logprob: -4.557663917541504
    9. '
' → logprob: -4.932663917541504
    10. '0' → logprob: -5.057663917541504

Token 1934: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40914782881736755
    2. 'total' → logprob: -1.53414785861969
    3. 'sum' → logprob: -3.0341477394104004
    4. ' total' → logprob: -3.6591477394104004
    5. 'cost' → logprob: -3.9091477394104004
    6. 'distance' → logprob: -4.0341477394104
    7. ' sum' → logprob: -6.1591477394104
    8. '   ' → logprob: -6.1591477394104
    9. ' def' → logprob: -6.2841477394104
    10. 'move' → logprob: -7.5341477394104

Token 1935: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0675736591219902
    2. 'of' → logprob: -3.5675735473632812
    3. ' of' → logprob: -4.192573547363281
    4. '   ' → logprob: -4.442573547363281
    5. 'distance' → logprob: -5.442573547363281
    6. '           ' → logprob: -6.692573547363281
    7. '_of' → logprob: -6.817573547363281
    8. 'moves' → logprob: -7.692573547363281
    9. '_distance' → logprob: -7.692573547363281
    10. 'move' → logprob: -7.942573547363281

Token 1936: ' lengths' (ID: 51957)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0654061809182167
    2. 'dist' → logprob: -3.315406084060669
    3. 'mov' → logprob: -4.315406322479248
    4. 'move' → logprob: -4.940406322479248
    5. 'steps' → logprob: -5.315406322479248
    6. 'the' → logprob: -8.56540584564209
    7. ' moves' → logprob: -8.69040584564209
    8. 'distance' → logprob: -8.94040584564209
    9. 'movement' → logprob: -8.94040584564209
    10. 'length' → logprob: -8.94040584564209

Token 1937: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07097487896680832
    2. '   ' → logprob: -3.445974826812744
    3. '_' → logprob: -3.820974826812744
    4. '(self' → logprob: -5.195974826812744
    5. '(
' → logprob: -6.445974826812744
    6. 'of' → logprob: -6.820974826812744
    7. '```' → logprob: -6.820974826812744
    8. '(' → logprob: -6.945974826812744
    9. ' of' → logprob: -6.945974826812744
    10. '
' → logprob: -7.445974826812744

Token 1938: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.009461980313062668
    2. 'mov' → logprob: -5.009461879730225
    3. 'move' → logprob: -7.384461879730225
    4. 'all' → logprob: -7.384461879730225
    5. 'paths' → logprob: -7.884461879730225
    6. 'the' → logprob: -8.009462356567383
    7. ' moves' → logprob: -8.134462356567383
    8. 'movement' → logprob: -8.759462356567383
    9. 'steps' → logprob: -9.384462356567383
    10. 'motions' → logprob: -9.634462356567383

Token 1939: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08335006982088089
    2. 'from' → logprob: -3.08335018157959
    3. '(self' → logprob: -3.83335018157959
    4. 'def' → logprob: -5.58335018157959
    5. '```' → logprob: -6.20835018157959
    6. '   ' → logprob: -6.33335018157959
    7. '(' → logprob: -6.45835018157959
    8. 'to' → logprob: -6.58335018157959
    9. 'starting' → logprob: -7.45835018157959
    10. 'for' → logprob: -7.45835018157959

Token 1940: ' clim' (ID: 21324)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.25341659784317017
    2. 'the' → logprob: -2.3784165382385254
    3. 'd' → logprob: -3.2534165382385254
    4. 'they' → logprob: -3.5034165382385254
    5. 'meeting' → logprob: -3.5034165382385254
    6. '       ' → logprob: -4.003416538238525
    7. 'self' → logprob: -5.378416538238525
    8. 'cl' → logprob: -5.503416538238525
    9. '   ' → logprob: -6.253416538238525
    10. 'meet' → logprob: -7.003416538238525

Token 1941: 'bers' (ID: 7008)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8877230882644653
    2. 'ber' → logprob: -1.0127230882644653
    3. '   ' → logprob: -1.8877230882644653
    4. '       ' → logprob: -3.262722969055176
    5. 'ate' → logprob: -4.637722969055176
    6. 'A' → logprob: -5.012722969055176
    7. 'bers' → logprob: -5.012722969055176
    8. 'B' → logprob: -5.887722969055176
    9. '      ' → logprob: -6.512722969055176
    10. '    ' → logprob: -6.762722969055176

Token 1942: ' meet' (ID: 4158)
  Prédit: 'meet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'meet' → logprob: -0.0791788175702095
    2. ' meet' → logprob: -3.329178810119629
    3. '   ' → logprob: -3.579178810119629
    4. 'both' → logprob: -5.204178810119629
    5. '       ' → logprob: -6.079178810119629
    6. 'reach' → logprob: -7.079178810119629
    7. ' both' → logprob: -7.079178810119629
    8. '=' → logprob: -8.079178810119629
    9. 'can' → logprob: -8.204178810119629
    10. ' ' → logprob: -8.204178810119629

Token 1943: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05116098001599312
    2. '(self' → logprob: -3.301161050796509
    3. '   ' → logprob: -5.30116081237793
    4. '```' → logprob: -5.55116081237793
    5. ' at' → logprob: -6.92616081237793
    6. 'at' → logprob: -6.92616081237793
    7. '(' → logprob: -7.05116081237793
    8. '
' → logprob: -7.55116081237793
    9. ',' → logprob: -8.30116081237793
    10. 'def' → logprob: -8.55116081237793

Token 1944: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2142990231513977
    2. 'same' → logprob: -1.714298963546753
    3. 'distance' → logprob: -5.464299201965332
    4. 'd' → logprob: -5.839299201965332
    5. 'some' → logprob: -6.339299201965332
    6. '(s' → logprob: -7.214299201965332
    7. 'a' → logprob: -7.214299201965332
    8. '(self' → logprob: -7.339299201965332
    9. ' the' → logprob: -7.714299201965332
    10. '(distance' → logprob: -7.964299201965332

Token 1945: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.34187135100364685
    2. 'same' → logprob: -1.9668713808059692
    3. 'common' → logprob: -2.5918712615966797
    4. 'distance' → logprob: -3.5918712615966797
    5. 'position' → logprob: -3.9668712615966797
    6. '
' → logprob: -4.96687126159668
    7. 'single' → logprob: -5.09187126159668
    8. 'Point' → logprob: -6.09187126159668
    9. ' point' → logprob: -6.21687126159668
    10. 'state' → logprob: -6.46687126159668

Token 1946: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007041074801236391
    2. '
' → logprob: -5.632040977478027
    3. '(self' → logprob: -7.007040977478027
    4. '```' → logprob: -7.507040977478027
    5. '   ' → logprob: -7.632040977478027
    6. ',' → logprob: -7.632040977478027
    7. '(' → logprob: -7.882040977478027
    8. 'def' → logprob: -8.132040977478027
    9. ' (' → logprob: -8.757040977478027
    10. '           ' → logprob: -10.382040977478027

Token 1947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010426769964396954
    2. '
' → logprob: -5.385426998138428
    3. '   ' → logprob: -5.385426998138428
    4. 'def' → logprob: -7.010426998138428
    5. '```' → logprob: -8.26042652130127
    6. '        
' → logprob: -10.76042652130127
    7. ' def' → logprob: -11.76042652130127
    8. '           ' → logprob: -12.63542652130127
    9. '    
' → logprob: -12.63542652130127
    10. ' ' → logprob: -13.01042652130127

Token 1948: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05849416181445122
    2. 'def' → logprob: -3.3084940910339355
    3. '
' → logprob: -4.5584940910339355
    4. '   ' → logprob: -4.6834940910339355
    5. '```' → logprob: -7.8084940910339355
    6. 'd' → logprob: -10.058494567871094
    7. '        
' → logprob: -10.558494567871094
    8. '           ' → logprob: -12.183494567871094
    9. 'dp' → logprob: -12.183494567871094
    10. '#' (adapté à ' #') → logprob: -12.308494567871094

Token 1949: ' Possible' (ID: 76169)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8479800820350647
    2. '       ' → logprob: -0.9729800820350647
    3. '
' → logprob: -1.72298002243042
    4. '   ' → logprob: -4.34798002243042
    5. 'import' → logprob: -7.47298002243042
    6. '```' → logprob: -7.72298002243042
    7. '        
' → logprob: -8.097980499267578
    8. '#' → logprob: -8.097980499267578
    9. 'We' → logprob: -8.222980499267578
    10. 'from' → logprob: -9.472980499267578

Token 1950: ' meeting' (ID: 9176)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21723255515098572
    2. '   ' → logprob: -2.8422324657440186
    3. '       ' → logprob: -2.8422324657440186
    4. '#' → logprob: -3.5922324657440186
    5. 'd' → logprob: -4.092232704162598
    6. 'states' → logprob: -4.342232704162598
    7. 'moves' → logprob: -4.467232704162598
    8. 'positions' → logprob: -5.217232704162598
    9. 'state' → logprob: -6.842232704162598
    10. 'dp' → logprob: -7.092232704162598

Token 1951: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.9877138137817383
    2. 'points' → logprob: -1.2377138137817383
    3. '_positions' → logprob: -1.4877138137817383
    4. ' points' → logprob: -2.9877138137817383
    5. 'positions' → logprob: -4.362713813781738
    6. ' at' → logprob: -4.737713813781738
    7. '
' → logprob: -4.987713813781738
    8. 's' → logprob: -5.112713813781738
    9. '_states' → logprob: -5.362713813781738
    10. '_dist' → logprob: -5.612713813781738

Token 1952: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8945778608322144
    2. '       ' → logprob: -1.6445778608322144
    3. '(self' → logprob: -1.8945778608322144
    4. '=' → logprob: -2.394577980041504
    5. ' are' → logprob: -2.519577980041504
    6. ':' → logprob: -3.394577980041504
    7. '   ' → logprob: -4.894577980041504
    8. ',' → logprob: -5.519577980041504
    9. ' is' → logprob: -5.644577980041504
    10. 'are' → logprob: -5.769577980041504

Token 1953: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16240142285823822
    2. 'to' → logprob: -1.9124014377593994
    3. '=' → logprob: -6.28740119934082
    4. ' =' → logprob: -9.28740119934082
    5. '   ' → logprob: -9.78740119934082
    6. ')' → logprob: -9.78740119934082
    7. '_to' → logprob: -10.66240119934082
    8. '       ' → logprob: -10.78740119934082
    9. ',' → logprob: -11.28740119934082
    10. '<|end|>' → logprob: -11.91240119934082

Token 1954: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4595768451690674
    2. 'dist' → logprob: -1.0845768451690674
    3. 'positions' → logprob: -4.834576606750488
    4. 'distance' → logprob: -5.209576606750488
    5. 'self' → logprob: -5.459576606750488
    6. ' distances' → logprob: -6.459576606750488
    7. '
' → logprob: -6.584576606750488
    8. 'points' → logprob: -6.584576606750488
    9. '#' → logprob: -6.709576606750488
    10. '(dist' → logprob: -6.709576606750488

Token 1955: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5451282262802124
    2. 'd' → logprob: -1.6701282262802124
    3. '   ' → logprob: -1.7951282262802124
    4. '=' → logprob: -2.045128345489502
    5. 'from' → logprob: -2.920128345489502
    6. 'pairs' → logprob: -2.920128345489502
    7. 'A' → logprob: -3.670128345489502
    8. ' d' → logprob: -3.670128345489502
    9. ' =' → logprob: -4.170128345489502
    10. '(' → logprob: -4.170128345489502

Token 1956: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3636784255504608
    2. 's' → logprob: -1.4886784553527832
    3. 'from' → logprob: -3.613678455352783
    4. '=' → logprob: -3.863678455352783
    5. '   ' → logprob: -4.113678455352783
    6. '_A' → logprob: -4.863678455352783
    7. ')' → logprob: -6.738678455352783
    8. ',' → logprob: -6.988678455352783
    9. ' from' → logprob: -7.113678455352783
    10. ' ' → logprob: -7.363678455352783

Token 1957: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06767861545085907
    2. '=' → logprob: -3.942678689956665
    3. 'from' → logprob: -4.817678451538086
    4. '   ' → logprob: -5.192678451538086
    5. ',
' → logprob: -5.317678451538086
    6. ' where' → logprob: -5.692678451538086
    7. ' ,' → logprob: -5.817678451538086
    8. ' from' → logprob: -5.942678451538086
    9. ')' → logprob: -5.942678451538086
    10. ' and' → logprob: -5.942678451538086

Token 1958: ' L' (ID: 451)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10065475851297379
    2. 'self' → logprob: -2.3506548404693604
    3. ' self' → logprob: -8.475654602050781
    4. ' d' → logprob: -8.600654602050781
    5. '(self' → logprob: -10.600654602050781
    6. '   ' → logprob: -11.350654602050781
    7. '(' → logprob: -11.975654602050781
    8. '0' → logprob: -12.225654602050781
    9. ' (' → logprob: -13.475654602050781
    10. ' ' → logprob: -13.975654602050781

Token 1959: ' -' (ID: 533)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.014606136828660965
    2. ' /' → logprob: -4.26460599899292
    3. ',' → logprob: -8.389606475830078
    4. '   ' → logprob: -9.514606475830078
    5. ' and' → logprob: -10.264606475830078
    6. '
' → logprob: -10.514606475830078
    7. 'and' → logprob: -10.639606475830078
    8. ')' → logprob: -11.139606475830078
    9. '       ' → logprob: -11.639606475830078
    10. '```' → logprob: -11.764606475830078

Token 1960: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.750436007976532e-05
    2. ' d' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.25003719329834
    4. '       ' → logprob: -16.375038146972656
    5. 'def' → logprob: -17.125038146972656
    6. '     ' → logprob: -17.250038146972656
    7. '_d' → logprob: -17.625038146972656
    8. ' ' → logprob: -18.000038146972656
    9. '    ' → logprob: -18.000038146972656
    10. 'self' → logprob: -18.000038146972656

Token 1961: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02089860662817955
    2. 'A' → logprob: -3.8958985805511475
    3. '/' → logprob: -8.020898818969727
    4. 'd' → logprob: -10.895898818969727
    5. '_B' → logprob: -12.395898818969727
    6. '```' → logprob: -13.270898818969727
    7. ' B' → logprob: -13.770898818969727
    8. '   ' → logprob: -15.020898818969727
    9. '_A' → logprob: -15.145898818969727
    10. 'self' → logprob: -15.520898818969727

Token 1962: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14523032307624817
    2. '
' → logprob: -2.270230293273926
    3. '   ' → logprob: -3.895230293273926
    4. '```' → logprob: -5.520230293273926
    5. ',' → logprob: -5.770230293273926
    6. ':' → logprob: -6.645230293273926
    7. '        
' → logprob: -7.020230293273926
    8. ':
' → logprob: -7.270230293273926
    9. 'def' → logprob: -7.520230293273926
    10. '
' → logprob: -8.770230293273926

Token 1963: 'i' (ID: 72)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07453333586454391
    2. ')' → logprob: -3.074533224105835
    3. '       ' → logprob: -3.824533224105835
    4. '),' → logprob: -7.324533462524414
    5. ').
' → logprob: -7.324533462524414
    6. ')

' → logprob: -7.574533462524414
    7. ').' → logprob: -8.074533462524414
    8. '=' → logprob: -8.199533462524414
    9. ' )
' → logprob: -8.574533462524414
    10. ',' → logprob: -8.574533462524414

Token 1964: '.e' (ID: 2560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7723127603530884
    2. '==' → logprob: -1.1473127603530884
    3. '=' → logprob: -1.7723127603530884
    4. ' ==' → logprob: -3.397312641143799
    5. ' and' → logprob: -5.397312641143799
    6. 'and' → logprob: -6.397312641143799
    7. 'f' → logprob: -6.397312641143799
    8. ',' → logprob: -6.897312641143799
    9. '   ' → logprob: -7.022312641143799
    10. '+' → logprob: -7.022312641143799

Token 1965: '.,' (ID: 4213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033066101372241974
    2. '=' → logprob: -4.283066272735596
    3. '==' → logprob: -5.158066272735596
    4. '/' → logprob: -5.283066272735596
    5. ' ==' → logprob: -6.158066272735596
    6. ',' → logprob: -6.658066272735596
    7. '   ' → logprob: -7.533066272735596
    8. '.' → logprob: -7.533066272735596
    9. 'A' → logprob: -7.783066272735596
    10. ' )' → logprob: -7.908066272735596

Token 1966: ' same' (ID: 2684)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0142197972163558
    2. ' d' → logprob: -4.639219760894775
    3. '       ' → logprob: -6.389219760894775
    4. 'the' → logprob: -7.139219760894775
    5. 'they' → logprob: -7.764219760894775
    6. 'self' → logprob: -7.764219760894775
    7. ' the' → logprob: -8.639220237731934
    8. 'abs' → logprob: -9.014220237731934
    9. 'both' → logprob: -9.014220237731934
    10. '#' → logprob: -9.139220237731934

Token 1967: ' physical' (ID: 9811)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3636634945869446
    2. ' point' → logprob: -2.2386634349823
    3. 'position' → logprob: -2.9886634349823
    4. 'd' → logprob: -3.1136634349823
    5. 'distance' → logprob: -3.2386634349823
    6. 'physical' → logprob: -4.363663673400879
    7. ',' → logprob: -4.738663673400879
    8. ' position' → logprob: -4.863663673400879
    9. ' physical' → logprob: -4.988663673400879
    10. ')' → logprob: -5.238663673400879

Token 1968: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.046657346189022064
    2. 'position' → logprob: -3.2966573238372803
    3. ' point' → logprob: -5.296657562255859
    4. 'location' → logprob: -6.671657562255859
    5. '_point' → logprob: -6.921657562255859
    6. '
' → logprob: -7.921657562255859
    7. ')' → logprob: -8.29665756225586
    8. 'distance' → logprob: -8.92165756225586
    9. '-point' → logprob: -9.04665756225586
    10. ' position' → logprob: -9.04665756225586

Token 1969: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6950925588607788
    2. ')' → logprob: -0.8200925588607788
    3. ' on' → logprob: -3.3200926780700684
    4. '):
' → logprob: -4.695092678070068
    5. 'on' → logprob: -5.195092678070068
    6. '),' → logprob: -5.820092678070068
    7. '       ' → logprob: -6.195092678070068
    8. ',' → logprob: -6.570092678070068
    9. ' along' → logprob: -7.195092678070068
    10. ').' → logprob: -7.695092678070068

Token 1970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007080250070430338
    2. '   ' → logprob: -8.250707626342773
    3. ',' → logprob: -8.625707626342773
    4. '```' → logprob: -9.500707626342773
    5. '           ' → logprob: -9.625707626342773
    6. '	' → logprob: -10.250707626342773
    7. '
' → logprob: -10.875707626342773
    8. ':' → logprob: -11.125707626342773
    9. '        
' → logprob: -11.250707626342773
    10. '(' → logprob: -11.875707626342773

Token 1971: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02903825044631958
    2. '
' → logprob: -3.654038190841675
    3. ',' → logprob: -6.904038429260254
    4. '```' → logprob: -7.029038429260254
    5. '   ' → logprob: -7.529038429260254
    6. '        
' → logprob: -8.779038429260254
    7. '
' → logprob: -10.154038429260254
    8. 'def' → logprob: -10.654038429260254
    9. '           ' → logprob: -10.904038429260254
    10. '`' → logprob: -11.529038429260254

Token 1972: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0623985156416893
    2. '
' → logprob: -3.1873984336853027
    3. 'def' → logprob: -4.312398433685303
    4. '   ' → logprob: -5.187398433685303
    5. '```' → logprob: -9.687398910522461
    6. '           ' → logprob: -10.312398910522461
    7. '        
' → logprob: -10.312398910522461
    8. ',' → logprob: -10.312398910522461
    9. '#' → logprob: -11.562398910522461
    10. 'from' → logprob: -11.562398910522461

Token 1973: ' same' (ID: 2684)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23115327954292297
    2. 'self' → logprob: -2.9811532497406006
    3. 'abs' → logprob: -2.9811532497406006
    4. '       ' → logprob: -3.3561532497406006
    5. ' d' → logprob: -3.7311532497406006
    6. ' abs' → logprob: -4.60615348815918
    7. '
' → logprob: -4.98115348815918
    8. '   ' → logprob: -4.98115348815918
    9. 'not' → logprob: -5.23115348815918
    10. ' self' → logprob: -5.48115348815918

Token 1974: ' altitude' (ID: 66032)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3114513158798218
    2. ' d' → logprob: -1.4364513158798218
    3. '   ' → logprob: -1.6864513158798218
    4. '       ' → logprob: -1.9364513158798218
    5. '```' → logprob: -3.1864514350891113
    6. '
' → logprob: -3.6864514350891113
    7. 'x' → logprob: -4.311451435089111
    8. ' point' → logprob: -4.936451435089111
    9. '_alt' → logprob: -4.936451435089111
    10. 'def' → logprob: -5.311451435089111

Token 1975: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02156372368335724
    2. '
' → logprob: -4.646563529968262
    3. ' at' → logprob: -5.146563529968262
    4. ',' → logprob: -6.021563529968262
    5. '.
' → logprob: -6.396563529968262
    6. '        
' → logprob: -8.146563529968262
    7. '.' → logprob: -8.271563529968262
    8. '   ' → logprob: -8.396563529968262
    9. '```' → logprob: -8.521563529968262
    10. ' and' → logprob: -8.771563529968262

Token 1976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5794081091880798
    2. '
' → logprob: -0.8294081091880798
    3. '   ' → logprob: -6.329408168792725
    4. '```' → logprob: -6.704408168792725
    5. 'def' → logprob: -8.329407691955566
    6. '        
' → logprob: -8.954407691955566
    7. '
' → logprob: -10.079407691955566
    8. '    
' → logprob: -11.079407691955566
    9. ' def' → logprob: -12.079407691955566
    10. '`' → logprob: -12.204407691955566

Token 1977: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008952652104198933
    2. '
' → logprob: -4.758952617645264
    3. '   ' → logprob: -8.258953094482422
    4. '```' → logprob: -10.008953094482422
    5. 'def' → logprob: -11.133953094482422
    6. '        
' → logprob: -11.508953094482422
    7. '    
' → logprob: -13.258953094482422
    8. '
' → logprob: -13.383953094482422
    9. 'd' → logprob: -13.633953094482422
    10. '           ' → logprob: -13.758953094482422

Token 1978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05531957745552063
    2. '
' → logprob: -3.1803195476531982
    3. '   ' → logprob: -4.430319786071777
    4. '        
' → logprob: -8.680319786071777
    5. 'def' → logprob: -9.930319786071777
    6. '    
' → logprob: -9.930319786071777
    7. '```' → logprob: -10.305319786071777
    8. '           ' → logprob: -11.555319786071777
    9. '	' → logprob: -12.555319786071777
    10. '     ' → logprob: -12.555319786071777

Token 1979: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04665620997548103
    2. '   ' → logprob: -3.2966561317443848
    3. '       ' → logprob: -4.796656131744385
    4. '
' → logprob: -8.421656608581543
    5. ' def' → logprob: -10.171656608581543
    6. '#' (adapté à ' #') → logprob: -10.796656608581543
    7. 'import' → logprob: -11.046656608581543
    8. 'from' → logprob: -11.671656608581543
    9. '@' → logprob: -12.171656608581543
    10. 'visited' → logprob: -13.046656608581543

Token 1980: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037958286702632904
    2. '   ' → logprob: -4.287958145141602
    3. '       ' → logprob: -4.287958145141602
    4. 'import' → logprob: -5.037958145141602
    5. 'from' → logprob: -6.287958145141602
    6. '
' → logprob: -7.412958145141602
    7. '#' → logprob: -8.037958145141602
    8. 'We' → logprob: -8.537958145141602
    9. 'dp' → logprob: -9.037958145141602
    10. 'visited' → logprob: -9.662958145141602

Token 1981: ' represent' (ID: 5188)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4962020814418793
    2. ' def' → logprob: -1.2462021112442017
    3. 'def' → logprob: -2.371201992034912
    4. '
' → logprob: -5.871201992034912
    5. ' ' → logprob: -6.621201992034912
    6. '       ' → logprob: -6.746201992034912
    7. '	def' → logprob: -7.246201992034912
    8. '    ' → logprob: -7.371201992034912
    9. ' continue' → logprob: -7.621201992034912
    10. ' ' → logprob: -7.996201992034912

Token 1982: ' state' (ID: 2608)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3876156210899353
    2. 'self' → logprob: -2.13761568069458
    3. '       ' → logprob: -2.63761568069458
    4. ' the' → logprob: -3.63761568069458
    5. 'the' → logprob: -3.63761568069458
    6. '   ' → logprob: -4.13761568069458
    7. 'solve' → logprob: -4.38761568069458
    8. 'state' → logprob: -4.88761568069458
    9. ' self' → logprob: -5.01261568069458
    10. ' ' → logprob: -5.01261568069458

Token 1983: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.10757704824209213
    2. ' =' → logprob: -3.357577085494995
    3. ':' → logprob: -3.482577085494995
    4. 'as' → logprob: -3.857577085494995
    5. '       ' → logprob: -5.482576847076416
    6. ' by' → logprob: -5.607576847076416
    7. 's' → logprob: -6.232576847076416
    8. '=' → logprob: -6.357576847076416
    9. ' (' → logprob: -7.607576847076416
    10. '   ' → logprob: -7.607576847076416

Token 1984: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.010307841002941132
    2. ' (' → logprob: -4.885307788848877
    3. '       ' → logprob: -6.260307788848877
    4. ' a' → logprob: -8.385308265686035
    5. 'a' → logprob: -8.510308265686035
    6. 'd' → logprob: -9.385308265686035
    7. '(self' → logprob: -9.885308265686035
    8. '(' → logprob: -10.385308265686035
    9. 'self' → logprob: -10.385308265686035
    10. '   ' → logprob: -10.510308265686035

Token 1985: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.923874702304602e-05
    2. ' d' → logprob: -9.875089645385742
    3. '       ' → logprob: -10.625089645385742
    4. 'self' → logprob: -12.250089645385742
    5. '           ' → logprob: -13.125089645385742
    6. '   ' → logprob: -13.125089645385742
    7. ')' → logprob: -13.500089645385742
    8. ')d' → logprob: -14.000089645385742
    9. 'float' → logprob: -14.750089645385742
    10. '        ' → logprob: -15.250089645385742

Token 1986: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.128163257315464e-07
    2. '_A' → logprob: -15.875
    3. ' A' → logprob: -17.125
    4. '   ' → logprob: -17.5
    5. 'a' → logprob: -17.875
    6. ',' → logprob: -18.375
    7. ')' → logprob: -18.375
    8. '
' → logprob: -18.75
    9. 'А' → logprob: -19.0
    10. '	A' → logprob: -19.625

Token 1987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016396844875998795
    2. ' ,' → logprob: -9.500164031982422
    3. ',d' → logprob: -9.625164031982422
    4. ',
' → logprob: -11.625164031982422
    5. ' ' → logprob: -12.625164031982422
    6. '   ' → logprob: -12.750164031982422
    7. ')' → logprob: -13.500164031982422
    8. '[' → logprob: -14.125164031982422
    9. '
' → logprob: -14.250164031982422
    10. ',float' → logprob: -14.625164031982422

Token 1988: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0059424289502203465
    2. ' d' → logprob: -5.130942344665527
    3. '   ' → logprob: -12.380942344665527
    4. '       ' → logprob: -12.880942344665527
    5. '     ' → logprob: -13.630942344665527
    6. '    ' → logprob: -13.755942344665527
    7. ' ' → logprob: -13.755942344665527
    8. '           ' → logprob: -14.380942344665527
    9. '      ' → logprob: -14.505942344665527
    10. ' ' → logprob: -14.630942344665527

Token 1989: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00021617230959236622
    2. 'A' → logprob: -8.500216484069824
    3. ',' → logprob: -11.500216484069824
    4. '_B' → logprob: -14.375216484069824
    5. ' B' → logprob: -14.625216484069824
    6. ',B' → logprob: -15.000216484069824
    7. 'b' → logprob: -15.125216484069824
    8. ')' → logprob: -15.125216484069824
    9. '
' → logprob: -15.750216484069824
    10. ',
' → logprob: -16.125215530395508

Token 1990: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3689708709716797
    2. '):' → logprob: -1.3689708709716797
    3. '):
' → logprob: -3.1189708709716797
    4. ',' → logprob: -5.36897087097168
    5. ')
' → logprob: -5.49397087097168
    6. '),' → logprob: -6.99397087097168
    7. '       ' → logprob: -9.24397087097168
    8. '   ' → logprob: -9.99397087097168
    9. '):

' → logprob: -10.24397087097168
    10. '):
' → logprob: -10.49397087097168

Token 1991: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02639167383313179
    2. '
' → logprob: -3.7763917446136475
    3. ',' → logprob: -6.651391506195068
    4. ')' → logprob: -7.276391506195068
    5. '   ' → logprob: -7.276391506195068
    6. ':' → logprob: -8.901391983032227
    7. '
' → logprob: -9.276391983032227
    8. '        
' → logprob: -9.901391983032227
    9. '           ' → logprob: -10.276391983032227
    10. 'def' → logprob: -10.526391983032227

Token 1992: ' distances' (ID: 48294)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27456191182136536
    2. 'self' → logprob: -1.899561882019043
    3. ')' → logprob: -3.774561882019043
    4. '
' → logprob: -4.149561882019043
    5. '       ' → logprob: -4.774561882019043
    6. 'dist' → logprob: -5.024561882019043
    7. 'def' → logprob: -5.149561882019043
    8. 'both' → logprob: -5.149561882019043
    9. 'the' → logprob: -5.524561882019043
    10. '   ' → logprob: -5.774561882019043

Token 1993: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7881946563720703
    2. '       ' → logprob: -1.0381946563720703
    3. ')' → logprob: -2.2881946563720703
    4. '
' → logprob: -3.2881946563720703
    5. '=' → logprob: -3.9131946563720703
    6. '           ' → logprob: -5.16319465637207
    7. '   ' → logprob: -5.41319465637207
    8. ' from' → logprob: -5.78819465637207
    9. ':' → logprob: -5.91319465637207
    10. 'on' → logprob: -6.28819465637207

Token 1994: ' each' (ID: 2454)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0008305939263664186
    2. ' start' → logprob: -7.87583065032959
    3. 'the' → logprob: -8.75083065032959
    4. '0' → logprob: -9.00083065032959
    5. 'route' → logprob: -9.12583065032959
    6. 'each' → logprob: -10.50083065032959
    7. 'self' → logprob: -11.75083065032959
    8. 'both' → logprob: -12.00083065032959
    9. 'starts' → logprob: -12.50083065032959
    10. ' ' → logprob: -12.62583065032959

Token 1995: ' start' (ID: 1604)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.108049675822258
    2. ' other' → logprob: -2.8580496311187744
    3. 'start' → logprob: -3.8580496311187744
    4. 'end' → logprob: -4.4830498695373535
    5. ' start' → logprob: -5.1080498695373535
    6. ' end' → logprob: -5.4830498695373535
    7. ' ' → logprob: -7.2330498695373535
    8. 'of' → logprob: -8.233049392700195
    9. ' of' → logprob: -8.483049392700195
    10. 'point' → logprob: -8.608049392700195

Token 1996: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24916498363018036
    2. ',' → logprob: -1.9991649389266968
    3. ')' → logprob: -2.9991650581359863
    4. '
' → logprob: -4.624165058135986
    5. '):
' → logprob: -5.249165058135986
    6. ':' → logprob: -5.624165058135986
    7. ',
' → logprob: -5.749165058135986
    8. '):' → logprob: -5.749165058135986
    9. '   ' → logprob: -5.874165058135986
    10. ')
' → logprob: -6.874165058135986

Token 1997: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05694810673594475
    2. ',' → logprob: -3.681948184967041
    3. '
' → logprob: -4.181948184967041
    4. ')' → logprob: -4.681948184967041
    5. ':' → logprob: -6.681948184967041
    6. ',
' → logprob: -7.056948184967041
    7. ' and' → logprob: -7.056948184967041
    8. '):
' → logprob: -7.181948184967041
    9. '   ' → logprob: -7.931948184967041
    10. ':
' → logprob: -8.056947708129883

Token 1998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06568004190921783
    2. '
' → logprob: -3.1906800270080566
    3. '   ' → logprob: -3.8156800270080566
    4. 'def' → logprob: -8.315680503845215
    5. '```' → logprob: -9.440680503845215
    6. '        
' → logprob: -10.190680503845215
    7. '    
' → logprob: -11.315680503845215
    8. ' def' → logprob: -11.815680503845215
    9. '           ' → logprob: -11.940680503845215
    10. ' ' → logprob: -12.065680503845215

Token 1999: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021605845540761948
    2. '
' → logprob: -4.146605968475342
    3. '   ' → logprob: -5.396605968475342
    4. '```' → logprob: -7.146605968475342
    5. 'def' → logprob: -9.271605491638184
    6. '        
' → logprob: -10.146605491638184
    7. '`' → logprob: -10.396605491638184
    8. ',' → logprob: -11.396605491638184
    9. '           ' → logprob: -11.396605491638184
    10. '    ' → logprob: -11.396605491638184

Token 2000: ' Start' (ID: 7972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1299860179424286
    2. 'def' → logprob: -2.504986047744751
    3. '   ' → logprob: -3.379986047744751
    4. '
' → logprob: -5.129985809326172
    5. 'if' → logprob: -9.754985809326172
    6. 'state' → logprob: -10.379985809326172
    7. 'key' → logprob: -10.504985809326172
    8. 'dp' → logprob: -10.629985809326172
    9. '        
' → logprob: -10.629985809326172
    10. ' def' → logprob: -11.004985809326172

Token 2001: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6790671944618225
    2. ' =' → logprob: -1.9290671348571777
    3. '_state' → logprob: -2.4290671348571777
    4. '_d' → logprob: -2.8040671348571777
    5. 'state' → logprob: -2.9290671348571777
    6. 'd' → logprob: -3.1790671348571777
    7. ':' → logprob: -3.9290671348571777
    8. '       ' → logprob: -4.429067134857178
    9. '_pos' → logprob: -4.429067134857178
    10. ' at' → logprob: -4.554067134857178

Token 2002: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5974188446998596
    2. '(' → logprob: -1.2224187850952148
    3. '       ' → logprob: -2.472418785095215
    4. ' (' → logprob: -3.472418785095215
    5. '(d' → logprob: -4.097418785095215
    6. 'self' → logprob: -4.347418785095215
    7. ' d' → logprob: -5.097418785095215
    8. '(self' → logprob: -5.972418785095215
    9. ' self' → logprob: -7.347418785095215
    10. '   ' → logprob: -8.097418785095215

Token 2003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.625001907348633
    5. ')' → logprob: -18.250001907348633
    6. '```' → logprob: -18.750001907348633
    7. '
' → logprob: -19.000001907348633
    8. '       ' → logprob: -19.125001907348633
    9. '`' → logprob: -19.250001907348633
    10. 'd' → logprob: -19.625001907348633

Token 2004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005658994195982814
    2. ' ,' → logprob: -7.625566005706787
    3. ',
' → logprob: -10.500565528869629
    4. '0' → logprob: -11.250565528869629
    5. '   ' → logprob: -11.875565528869629
    6. ',float' → logprob: -12.250565528869629
    7. ' ' → logprob: -12.375565528869629
    8. '<|end|>' → logprob: -12.500565528869629
    9. '```' → logprob: -12.625565528869629
    10. '‌,' → logprob: -12.875565528869629

Token 2005: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19386036694049835
    2. '0' → logprob: -2.3188602924346924
    3. ' self' → logprob: -2.5688602924346924
    4. ' ' → logprob: -6.9438605308532715
    5. '       ' → logprob: -9.443860054016113
    6. '   ' → logprob: -9.568860054016113
    7. '1' → logprob: -10.693860054016113
    8. '        ' → logprob: -11.318860054016113
    9. '    ' → logprob: -11.443860054016113
    10. '           ' → logprob: -11.568860054016113

Token 2006: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25453290343284607
    2. '0' → logprob: -1.5045329332351685
    3. ' self' → logprob: -6.004532814025879
    4. 'L' → logprob: -10.254532814025879
    5. ' ' → logprob: -10.379532814025879
    6. '1' → logprob: -10.504532814025879
    7. 'float' → logprob: -11.754532814025879
    8. ')' → logprob: -12.004532814025879
    9. '(self' → logprob: -12.379532814025879
    10. '   ' → logprob: -12.504532814025879

Token 2007: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6939675211906433
    2. ')
' → logprob: -0.6939675211906433
    3. '),' → logprob: -7.693967342376709
    4. '       ' → logprob: -8.943967819213867
    5. ')
' → logprob: -8.943967819213867
    6. ')

' → logprob: -10.693967819213867
    7. '   ' → logprob: -10.818967819213867
    8. ' )
' → logprob: -11.068967819213867
    9. ' )' → logprob: -11.568967819213867
    10. '),
' → logprob: -11.693967819213867

Token 2008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00520707480609417
    2. ',' → logprob: -6.255207061767578
    3. '   ' → logprob: -6.255207061767578
    4. '
' → logprob: -7.005207061767578
    5. ')' → logprob: -9.130207061767578
    6. '```' → logprob: -9.130207061767578
    7. '           ' → logprob: -9.505207061767578
    8. '(' → logprob: -10.380207061767578
    9. '        
' → logprob: -10.630207061767578
    10. '        ' → logprob: -11.130207061767578

Token 2009: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005131646525114775
    2. '
' → logprob: -5.755131721496582
    3. '   ' → logprob: -6.380131721496582
    4. ',' → logprob: -9.755131721496582
    5. '        
' → logprob: -10.255131721496582
    6. '```' → logprob: -10.380131721496582
    7. '        ' → logprob: -10.505131721496582
    8. '           ' → logprob: -10.880131721496582
    9. ' ' → logprob: -11.005131721496582
    10. '    ' → logprob: -11.255131721496582

Token 2010: ' End' (ID: 6437)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025180544704198837
    2. '   ' → logprob: -3.9001805782318115
    3. '
' → logprob: -6.400180339813232
    4. 'def' → logprob: -7.275180339813232
    5. ' target' → logprob: -7.525180339813232
    6. 'target' → logprob: -7.775180339813232
    7. 'd' → logprob: -8.52518081665039
    8. ' ' → logprob: -8.77518081665039
    9. '        ' → logprob: -8.90018081665039
    10. 'visited' → logprob: -8.90018081665039

Token 2011: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002597180427983403
    2. '   ' → logprob: -7.252597332000732
    3. ' :' → logprob: -7.502597332000732
    4. ':
' → logprob: -8.002596855163574
    5. '_state' → logprob: -8.002596855163574
    6. ' =' → logprob: -8.377596855163574
    7. '       ' → logprob: -9.002596855163574
    8. 'state' → logprob: -10.002596855163574
    9. ' state' → logprob: -10.002596855163574
    10. ',' → logprob: -10.502596855163574

Token 2012: ' any' (ID: 1062)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.050313178449869156
    2. '(L' → logprob: -4.1753129959106445
    3. '(self' → logprob: -4.3003129959106445
    4. '(' → logprob: -4.3003129959106445
    5. '(d' → logprob: -5.8003129959106445
    6. '       ' → logprob: -5.9253129959106445
    7. '   ' → logprob: -8.050312995910645
    8. '        ' → logprob: -9.300312995910645
    9. '    ' → logprob: -9.800312995910645
    10. 'self' → logprob: -9.925312995910645

Token 2013: ' position' (ID: 4010)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.7382283210754395
    2. '       ' → logprob: -2.3632283210754395
    3. ' point' → logprob: -2.4882283210754395
    4. 'where' → logprob: -2.6132283210754395
    5. '(d' → logprob: -2.6132283210754395
    6. '
' → logprob: -2.8632283210754395
    7. 'position' → logprob: -2.9882283210754395
    8. ' position' → logprob: -2.9882283210754395
    9. ' (' → logprob: -3.2382283210754395
    10. 'point' → logprob: -3.3632283210754395

Token 2014: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.6136009693145752
    2. 'where' → logprob: -1.1136009693145752
    3. ',' → logprob: -3.363600969314575
    4. '(' → logprob: -3.613600969314575
    5. ' (' → logprob: -3.988600969314575
    6. 'with' → logprob: -4.238600730895996
    7. '==' → logprob: -4.613600730895996
    8. ' with' → logprob: -5.613600730895996
    9. 'on' → logprob: -5.738600730895996
    10. '=' → logprob: -5.863600730895996

Token 2015: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16630463302135468
    2. 'abs' → logprob: -2.041304588317871
    3. ' d' → logprob: -4.291304588317871
    4. ' abs' → logprob: -4.666304588317871
    5. '   ' → logprob: -9.291304588317871
    6. 'math' → logprob: -9.291304588317871
    7. '(abs' → logprob: -10.291304588317871
    8. ' math' → logprob: -11.166304588317871
    9. 'round' → logprob: -12.166304588317871
    10. '(d' → logprob: -12.791304588317871

Token 2016: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9504606825648807e-05
    2. 'B' → logprob: -11.125019073486328
    3. '
' → logprob: -14.125019073486328
    4. '```' → logprob: -14.125019073486328
    5. ' A' → logprob: -14.625019073486328
    6. ')' → logprob: -14.625019073486328
    7. ',' → logprob: -14.875019073486328
    8. 'a' → logprob: -15.375019073486328
    9. '=' → logprob: -15.375019073486328
    10. '_A' → logprob: -15.500019073486328

Token 2017: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1147671714425087
    2. '==' → logprob: -2.239767074584961
    3. ' <=' → logprob: -6.614767074584961
    4. '<=' → logprob: -8.864767074584961
    5. '==
' → logprob: -9.364767074584961
    6. ',' → logprob: -9.489767074584961
    7. '```' → logprob: -9.489767074584961
    8. ' ==
' → logprob: -9.614767074584961
    9. ')' → logprob: -10.114767074584961
    10. ' >=' → logprob: -10.364767074584961

Token 2018: ' d' (ID: 272)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018652143189683557
    2. ' self' → logprob: -7.001865386962891
    3. '(self' → logprob: -7.001865386962891
    4. 'round' → logprob: -11.00186538696289
    5. 'L' → logprob: -11.37686538696289
    6. 'd' → logprob: -12.25186538696289
    7. '(L' → logprob: -12.87686538696289
    8. '0' → logprob: -13.12686538696289
    9. '(round' → logprob: -13.37686538696289
    10. '(' → logprob: -13.87686538696289

Token 2019: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2257683128118515
    2. 'A' → logprob: -1.6007683277130127
    3. '_B' → logprob: -9.850768089294434
    4. '   ' → logprob: -9.975768089294434
    5. '/' → logprob: -10.100768089294434
    6. 'istance' → logprob: -10.475768089294434
    7. ',' → logprob: -10.725768089294434
    8. '
' → logprob: -10.850768089294434
    9. '_A' → logprob: -10.975768089294434
    10. '(' → logprob: -11.100768089294434

Token 2020: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17242635786533356
    2. ':
' → logprob: -3.422426462173462
    3. '
' → logprob: -3.547426462173462
    4. '   ' → logprob: -3.547426462173462
    5. ':' → logprob: -3.797426462173462
    6. ' +' → logprob: -4.422426223754883
    7. '_' → logprob: -4.922426223754883
    8. '):
' → logprob: -5.172426223754883
    9. ' and' → logprob: -5.672426223754883
    10. ',' → logprob: -5.672426223754883

Token 2021: ' altitude' (ID: 66032)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.711497962474823
    2. 'self' → logprob: -1.3364980220794678
    3. 'abs' → logprob: -1.4614980220794678
    4. 'math' → logprob: -4.961497783660889
    5. ' abs' → logprob: -5.961497783660889
    6. '(abs' → logprob: -6.211497783660889
    7. '(self' → logprob: -6.711497783660889
    8. '0' → logprob: -7.961497783660889
    9. ' self' → logprob: -7.961497783660889
    10. ' d' → logprob: -8.086498260498047

Token 2022: ' equal' (ID: 12629)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -1.0816940069198608
    2. '_at' → logprob: -1.2066940069198608
    3. '       ' → logprob: -2.2066941261291504
    4. ' at' → logprob: -2.5816941261291504
    5. ')' → logprob: -2.7066941261291504
    6. 'equal' → logprob: -3.9566941261291504
    7. '   ' → logprob: -4.20669412612915
    8. 's' → logprob: -4.45669412612915
    9. 'at' → logprob: -4.70669412612915
    10. '           ' → logprob: -4.83169412612915

Token 2023: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.458570271730423
    2. '       ' → logprob: -1.0835702419281006
    3. ':' → logprob: -5.45857048034668
    4. ',' → logprob: -5.58357048034668
    5. '
' → logprob: -5.58357048034668
    6. ':
' → logprob: -5.58357048034668
    7. '        
' → logprob: -5.70857048034668
    8. '):
' → logprob: -5.83357048034668
    9. '

' → logprob: -6.08357048034668
    10. ')' → logprob: -6.95857048034668

Token 2024: ' where' (ID: 1919)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0745316743850708
    2. ' True' → logprob: -2.8245315551757812
    3. 'self' → logprob: -4.449531555175781
    4. ' self' → logprob: -7.449531555175781
    5. '0' → logprob: -9.324531555175781
    6. 'true' → logprob: -10.449531555175781
    7. '1' → logprob: -10.824531555175781
    8. '=True' → logprob: -11.074531555175781
    9. '(True' → logprob: -11.074531555175781
    10. '
' → logprob: -11.574531555175781

Token 2025: ' clim' (ID: 21324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4951333701610565
    2. 'abs' → logprob: -0.9951333999633789
    3. ' abs' → logprob: -4.495133399963379
    4. 'self' → logprob: -4.995133399963379
    5. ' d' → logprob: -7.120133399963379
    6. 'math' → logprob: -7.245133399963379
    7. 'nd' → logprob: -7.495133399963379
    8. '(abs' → logprob: -7.620133399963379
    9. '   ' → logprob: -8.995133399963379
    10. ' math' → logprob: -9.745133399963379

Token 2026: 'bers' (ID: 7008)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07283894717693329
    2. 'd' → logprob: -2.8228390216827393
    3. 'er' → logprob: -5.44783878326416
    4. 'r' → logprob: -5.57283878326416
    5. 'ers' → logprob: -6.94783878326416
    6. 'e' → logprob: -7.69783878326416
    7. 'B' → logprob: -8.19783878326416
    8. '   ' → logprob: -8.19783878326416
    9. '       ' → logprob: -8.69783878326416
    10. 'abs' → logprob: -9.19783878326416

Token 2027: ' physically' (ID: 35805)
  Prédit: 'meet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'meet' → logprob: -0.07855009287595749
    2. 'are' → logprob: -3.328550100326538
    3. 'start' → logprob: -3.578550100326538
    4. ' meet' → logprob: -5.328549861907959
    5. 'can' → logprob: -6.703549861907959
    6. 'both' → logprob: -6.828549861907959
    7. '   ' → logprob: -7.078549861907959
    8. 'have' → logprob: -7.203549861907959
    9. ' are' → logprob: -7.828549861907959
    10. '```' → logprob: -7.953549861907959

Token 2028: ' meet' (ID: 4158)
  Prédit: 'meet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'meet' → logprob: -0.02891434356570244
    2. 'are' → logprob: -4.153914451599121
    3. 'start' → logprob: -4.528914451599121
    4. 'co' → logprob: -7.028914451599121
    5. 'occup' → logprob: -7.653914451599121
    6. 'match' → logprob: -8.778914451599121
    7. '```' → logprob: -9.028914451599121
    8. 'over' → logprob: -9.403914451599121
    9. 'distance' → logprob: -9.903914451599121
    10. 'located' → logprob: -10.153914451599121

Token 2029: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48236700892448425
    2. '
' → logprob: -0.9823670387268066
    3. '        
' → logprob: -5.982367038726807
    4. '```' → logprob: -6.857367038726807
    5. ',' → logprob: -6.982367038726807
    6. ':
' → logprob: -7.357367038726807
    7. '
' → logprob: -7.357367038726807
    8. ')' → logprob: -7.482367038726807
    9. ':' → logprob: -7.857367038726807
    10. ')
' → logprob: -8.232366561889648

Token 2030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5255582928657532
    2. '
' → logprob: -0.9005582928657532
    3. '```' → logprob: -6.5255584716796875
    4. '   ' → logprob: -7.6505584716796875
    5. '        
' → logprob: -8.400558471679688
    6. '
' → logprob: -9.400558471679688
    7. 'def' → logprob: -9.900558471679688
    8. '`
' → logprob: -10.150558471679688
    9. '`' → logprob: -10.275558471679688
    10. '    
' → logprob: -11.025558471679688

Token 2031: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1834588348865509
    2. '
' → logprob: -1.8084588050842285
    3. '```' → logprob: -5.8084588050842285
    4. '        
' → logprob: -7.6834588050842285
    5. '   ' → logprob: -9.058459281921387
    6. '``' → logprob: -9.933459281921387
    7. '    
' → logprob: -10.808459281921387
    8. '`
' → logprob: -11.308459281921387
    9. '`' → logprob: -11.308459281921387
    10. ',' → logprob: -12.183459281921387

Token 2032: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4988163709640503
    2. '       ' → logprob: -1.2488163709640503
    3. '   ' → logprob: -2.24881649017334
    4. '    
' → logprob: -8.49881649017334
    5. '        
' → logprob: -9.37381649017334
    6. '
' → logprob: -10.24881649017334
    7. 'def' → logprob: -10.62381649017334
    8. '

' → logprob: -10.99881649017334
    9. '```' → logprob: -12.12381649017334
    10. '           ' → logprob: -12.37381649017334

Token 2033: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048094987869262695
    2. '       ' → logprob: -3.4230949878692627
    3. '   ' → logprob: -4.298094749450684
    4. '
' → logprob: -7.548094749450684
    5. 'stack' → logprob: -9.548094749450684
    6. 'import' → logprob: -9.923094749450684
    7. ' def' → logprob: -10.673094749450684
    8. 'visited' → logprob: -10.798094749450684
    9. 'from' → logprob: -11.423094749450684
    10. 'dp' → logprob: -11.673094749450684

Token 2034: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03553852438926697
    2. '       ' → logprob: -3.7855384349823
    3. '   ' → logprob: -4.910538673400879
    4. '
' → logprob: -5.910538673400879
    5. 'import' → logprob: -6.660538673400879
    6. 'from' → logprob: -8.285538673400879
    7. 'start' → logprob: -8.535538673400879
    8. 'stack' → logprob: -8.785538673400879
    9. ' def' → logprob: -9.160538673400879
    10. 'visited' → logprob: -9.535538673400879

Token 2035: ' do' (ID: 621)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.115014910697937
    2. 'def' → logprob: -1.115014910697937
    3. '   ' → logprob: -1.365014910697937
    4. ' use' → logprob: -2.9900150299072266
    5. ' import' → logprob: -4.615015029907227
    6. ' def' → logprob: -4.740015029907227
    7. 'use' → logprob: -5.115015029907227
    8. '       ' → logprob: -5.615015029907227
    9. 'define' → logprob: -5.865015029907227
    10. '  ' → logprob: -5.990015029907227

Token 2036: ' D' (ID: 415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3187295198440552
    2. '       ' → logprob: -2.0687294006347656
    3. 'def' → logprob: -2.3187294006347656
    4. 'from' → logprob: -3.6937294006347656
    5. ' import' → logprob: -4.443729400634766
    6. ' def' → logprob: -5.068729400634766
    7. ' a' → logprob: -6.568729400634766
    8. 'self' → logprob: -6.568729400634766
    9. ' from' → logprob: -6.818729400634766
    10. '
' → logprob: -8.068729400634766

Token 2037: 'ijkstra' (ID: 124290)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.011854521930217743
    2. 'ijkstra' → logprob: -5.261854648590088
    3. '   ' → logprob: -5.761854648590088
    4. 'FS' → logprob: -6.011854648590088
    5. 'F' → logprob: -8.13685417175293
    6. '
' → logprob: -8.76185417175293
    7. 'PQ' → logprob: -9.38685417175293
    8. 'e' → logprob: -9.38685417175293
    9. ' P' → logprob: -9.63685417175293
    10. 'eep' → logprob: -9.88685417175293

Token 2038: '-like' (ID: 22085)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3032126724720001
    2. ' (' → logprob: -2.4282126426696777
    3. '(' → logprob: -3.0532126426696777
    4. '       ' → logprob: -3.3032126426696777
    5. '(
' → logprob: -3.4282126426696777
    6. '   ' → logprob: -4.428212642669678
    7. ' algorithm' → logprob: -4.678212642669678
    8. '(queue' → logprob: -5.303212642669678
    9. '
' → logprob: -5.678212642669678
    10. '```' → logprob: -5.803212642669678

Token 2039: ' shortest' (ID: 70564)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -1.316176176071167
    2. '(
' → logprob: -1.441176176071167
    3. '(' → logprob: -1.566176176071167
    4. ' (' → logprob: -2.441176176071167
    5. '_search' → logprob: -2.441176176071167
    6. '       ' → logprob: -3.691176176071167
    7. ' algorithm' → logprob: -4.066176414489746
    8. 'search' → logprob: -4.316176414489746
    9. '(self' → logprob: -4.566176414489746
    10. '(queue' → logprob: -4.941176414489746

Token 2040: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.024272935464978218
    2. 'path' → logprob: -4.149272918701172
    3. '_paths' → logprob: -6.149272918701172
    4. '_distance' → logprob: -6.274272918701172
    5. 'import' → logprob: -6.274272918701172
    6. '   ' → logprob: -7.024272918701172
    7. '```' → logprob: -7.274272918701172
    8. ' path' → logprob: -8.899272918701172
    9. 'distance' → logprob: -9.149272918701172
    10. '-path' → logprob: -9.274272918701172

Token 2041: ' on' (ID: 402)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.558469831943512
    2. ' search' → logprob: -1.5584697723388672
    3. 'search' → logprob: -2.308469772338867
    4. '_search' → logprob: -2.683469772338867
    5. '       ' → logprob: -3.808469772338867
    6. '(' → logprob: -5.058469772338867
    7. ' (' → logprob: -5.183469772338867
    8. '(
' → logprob: -5.433469772338867
    9. ' algorithm' → logprob: -5.433469772338867
    10. 'algorithm' → logprob: -6.683469772338867

Token 2042: ' states' (ID: 9407)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7758529782295227
    2. 'states' → logprob: -1.150852918624878
    3. 'a' → logprob: -2.400852918624878
    4. 'self' → logprob: -3.775852918624878
    5. ' states' → logprob: -3.900852918624878
    6. '(self' → logprob: -4.025853157043457
    7. '(' → logprob: -4.025853157043457
    8. '       ' → logprob: -4.150853157043457
    9. 'state' → logprob: -4.525853157043457
    10. ' (' → logprob: -4.650853157043457

Token 2043: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020137257874011993
    2. '
' → logprob: -5.020137310028076
    3. 'import' → logprob: -5.645137310028076
    4. ':' → logprob: -6.520137310028076
    5. 'from' → logprob: -6.645137310028076
    6. '   ' → logprob: -6.645137310028076
    7. ',' → logprob: -6.770137310028076
    8. ' with' → logprob: -6.895137310028076
    9. ' (' → logprob: -7.270137310028076
    10. '(' → logprob: -7.395137310028076

Token 2044: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008946668240241706
    2. '
' → logprob: -7.125894546508789
    3. '```' → logprob: -10.500894546508789
    4. '        
' → logprob: -10.750894546508789
    5. 'import' → logprob: -11.125894546508789
    6. '   ' → logprob: -11.125894546508789
    7. '           ' → logprob: -12.250894546508789
    8. '	' → logprob: -13.125894546508789
    9. '      ' → logprob: -13.875894546508789
    10. '    
' → logprob: -14.125894546508789

Token 2045: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018062260001897812
    2. 'import' → logprob: -4.143062114715576
    3. '   ' → logprob: -7.268062114715576
    4. 'from' → logprob: -7.518062114715576
    5. ' import' → logprob: -8.018062591552734
    6. '```' → logprob: -8.643062591552734
    7. 'queue' → logprob: -9.268062591552734
    8. 'dist' → logprob: -9.768062591552734
    9. ' from' → logprob: -10.643062591552734
    10. 'visited' → logprob: -11.268062591552734

Token 2046: ' nodes' (ID: 15749)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4085032343864441
    2. '       ' → logprob: -1.1585032939910889
    3. 'from' → logprob: -4.03350305557251
    4. ' import' → logprob: -6.03350305557251
    5. '```' → logprob: -7.65850305557251
    6. ' from' → logprob: -8.158503532409668
    7. 'queue' → logprob: -8.533503532409668
    8. '   ' → logprob: -9.033503532409668
    9. '
' → logprob: -9.408503532409668
    10. 'visited' → logprob: -9.658503532409668

Token 2047: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09406829625368118
    2. ':' → logprob: -3.2190682888031006
    3. ',' → logprob: -3.9690682888031006
    4. '=' → logprob: -4.09406852722168
    5. '       ' → logprob: -5.59406852722168
    6. ')' → logprob: -5.71906852722168
    7. '   ' → logprob: -5.96906852722168
    8. 'import' → logprob: -6.21906852722168
    9. '<|end|>' → logprob: -7.21906852722168
    10. '.' → logprob: -8.21906852722168

Token 2048: ' pairs' (ID: 24702)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.460488885641098
    2. '(d' → logprob: -1.0854889154434204
    3. '       ' → logprob: -4.585488796234131
    4. ' states' → logprob: -4.835488796234131
    5. ')' → logprob: -5.835488796234131
    6. '(self' → logprob: -6.210488796234131
    7. '   ' → logprob: -6.835488796234131
    8. 'states' → logprob: -7.085488796234131
    9. '(' → logprob: -7.210488796234131
    10. ' {(' → logprob: -7.210488796234131

Token 2049: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5335806012153625
    2. '(' → logprob: -1.5335805416107178
    3. '(
' → logprob: -2.9085805416107178
    4. '(d' → logprob: -3.2835805416107178
    5. ',' → logprob: -3.4085805416107178
    6. ' of' → logprob: -3.9085805416107178
    7. ')' → logprob: -4.283580780029297
    8. '
' → logprob: -4.408580780029297
    9. '   ' → logprob: -5.408580780029297
    10. ',
' → logprob: -5.533580780029297

Token 2050: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002966291969642043
    2. ' d' → logprob: -5.877966403961182
    3. '        ' → logprob: -10.502965927124023
    4. 'float' → logprob: -10.502965927124023
    5. '       ' → logprob: -10.627965927124023
    6. ')' → logprob: -11.002965927124023
    7. '           ' → logprob: -11.252965927124023
    8. ',' → logprob: -11.502965927124023
    9. ')d' → logprob: -11.752965927124023
    10. '_d' → logprob: -12.002965927124023

Token 2051: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -14.000000953674316
    3. ')' → logprob: -15.875000953674316
    4. '_A' → logprob: -16.000001907348633
    5. ' A' → logprob: -16.500001907348633
    6. 'a' → logprob: -17.500001907348633
    7. ',A' → logprob: -17.500001907348633
    8. 'А' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '```' → logprob: -18.375001907348633

Token 2052: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024382755509577692
    2. ',
' → logprob: -8.625244140625
    3. '<|end|>' → logprob: -11.000244140625
    4. '[' → logprob: -11.375244140625
    5. ' ,' → logprob: -11.625244140625
    6. ')' → logprob: -11.750244140625
    7. ',d' → logprob: -12.500244140625
    8. '),' → logprob: -13.375244140625
    9. ',B' → logprob: -13.500244140625
    10. ',",' → logprob: -13.875244140625

Token 2053: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0037113616708666086
    2. ',' → logprob: -6.128711223602295
    3. 'B' → logprob: -6.503711223602295
    4. ',A' → logprob: -11.253711700439453
    5. ')' → logprob: -12.378711700439453
    6. ',B' → logprob: -12.753711700439453
    7. ',
' → logprob: -13.628711700439453
    8. ',d' → logprob: -13.753711700439453
    9. 'a' → logprob: -14.128711700439453
    10. '),' → logprob: -14.378711700439453

Token 2054: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1424216777086258
    2. ',' → logprob: -2.1424217224121094
    3. '),' → logprob: -4.767421722412109
    4. ')
' → logprob: -5.142421722412109
    5. '       ' → logprob: -7.767421722412109
    6. '   ' → logprob: -8.76742172241211
    7. ',
' → logprob: -9.01742172241211
    8. '),
' → logprob: -9.39242172241211
    9. '):' → logprob: -9.64242172241211
    10. ',)' → logprob: -10.39242172241211

Token 2055: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11612328141927719
    2. 'edges' → logprob: -3.3661231994628906
    3. 'dist' → logprob: -3.4911231994628906
    4. ' distances' → logprob: -4.366123199462891
    5. ' edges' → logprob: -4.741123199462891
    6. 'distance' → logprob: -5.116123199462891
    7. '           ' → logprob: -5.241123199462891
    8. '   ' → logprob: -5.366123199462891
    9. '#' → logprob: -5.491123199462891
    10. '               ' → logprob: -7.491123199462891

Token 2056: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24880218505859375
    2. ':' → logprob: -1.9988021850585938
    3. '=' → logprob: -2.7488021850585938
    4. '<|end|>' → logprob: -5.373802185058594
    5. 'import' → logprob: -5.498802185058594
    6. ',' → logprob: -5.498802185058594
    7. ')' → logprob: -6.373802185058594
    8. '   ' → logprob: -6.873802185058594
    9. '       ' → logprob: -6.873802185058594
    10. '.' → logprob: -7.248802185058594

Token 2057: ' moves' (ID: 19523)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2637566328048706
    2. ' (' → logprob: -2.01375675201416
    3. 'moves' → logprob: -2.26375675201416
    4. 'self' → logprob: -2.76375675201416
    5. 'neighbors' → logprob: -2.76375675201416
    6. ' moves' → logprob: -2.88875675201416
    7. '{' → logprob: -3.26375675201416
    8. ' self' → logprob: -3.51375675201416
    9. 'possible' → logprob: -3.63875675201416
    10. ')' → logprob: -3.76375675201416

Token 2058: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06072523817420006
    2. ':' → logprob: -4.185725212097168
    3. '
' → logprob: -4.685725212097168
    4. ',' → logprob: -4.810725212097168
    5. ' with' → logprob: -5.060725212097168
    6. ')' → logprob: -5.560725212097168
    7. 'import' → logprob: -5.935725212097168
    8. 'from' → logprob: -6.060725212097168
    9. '   ' → logprob: -6.185725212097168
    10. ':
' → logprob: -6.310725212097168

Token 2059: ' neighboring' (ID: 78186)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8482943177223206
    2. 'neighbors' → logprob: -1.2232942581176758
    3. 'neighbor' → logprob: -2.348294258117676
    4. ' next' → logprob: -2.348294258117676
    5. 'pairs' → logprob: -3.348294258117676
    6. ' neighbors' → logprob: -4.098294258117676
    7. 'new' → logprob: -4.973294258117676
    8. '(next' → logprob: -5.223294258117676
    9. 'other' → logprob: -5.348294258117676
    10. ' (' → logprob: -5.348294258117676

Token 2060: ' positions' (ID: 15897)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.01666119508445263
    2. ' states' → logprob: -4.516661167144775
    3. 'positions' → logprob: -6.141661167144775
    4. '(d' → logprob: -6.641661167144775
    5. ')' → logprob: -7.891661167144775
    6. '(' → logprob: -8.016661643981934
    7. ' (' → logprob: -8.141661643981934
    8. 'nodes' → logprob: -8.141661643981934
    9. 'state' → logprob: -8.391661643981934
    10. 'points' → logprob: -8.516661643981934

Token 2061: ' preserving' (ID: 74564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25617387890815735
    2. '
' → logprob: -2.006173849105835
    3. ',' → logprob: -3.756173849105835
    4. ':' → logprob: -4.131174087524414
    5. '   ' → logprob: -4.131174087524414
    6. '        
' → logprob: -4.506174087524414
    7. ')' → logprob: -4.881174087524414
    8. ':
' → logprob: -5.506174087524414
    9. '):
' → logprob: -5.631174087524414
    10. ',
' → logprob: -6.631174087524414

Token 2062: ' altitude' (ID: 66032)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.053438980132341385
    2. ' altitude' → logprob: -3.303438901901245
    3. ' alt' → logprob: -4.303439140319824
    4. 'equal' → logprob: -6.803439140319824
    5. ' equal' → logprob: -8.928439140319824
    6. 'e' → logprob: -9.053439140319824
    7. '_alt' → logprob: -9.428439140319824
    8. 'same' → logprob: -9.553439140319824
    9. '   ' → logprob: -10.303439140319824
    10. '```' → logprob: -10.303439140319824

Token 2063: ' equality' (ID: 47685)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6815659999847412
    2. ',' → logprob: -1.4315659999847412
    3. '   ' → logprob: -2.056565999984741
    4. ',
' → logprob: -3.306565999984741
    5. ')' → logprob: -3.556565999984741
    6. '
' → logprob: -4.55656623840332
    7. 'with' → logprob: -4.80656623840332
    8. 'import' → logprob: -5.18156623840332
    9. ' with' → logprob: -5.30656623840332
    10. 'from' → logprob: -5.80656623840332

Token 2064: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053036708384752274
    2. '
' → logprob: -3.303036689758301
    3. ',' → logprob: -4.678036689758301
    4. ')' → logprob: -5.803036689758301
    5. '        
' → logprob: -6.928036689758301
    6. ',
' → logprob: -8.3030366897583
    7. ':' → logprob: -8.8030366897583
    8. '.' → logprob: -9.1780366897583
    9. ')
' → logprob: -9.1780366897583
    10. '):
' → logprob: -9.3030366897583

Token 2065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020698485895991325
    2. '
' → logprob: -7.25206995010376
    3. 'import' → logprob: -7.50206995010376
    4. '   ' → logprob: -8.377069473266602
    5. ',' → logprob: -8.752069473266602
    6. ')' → logprob: -9.127069473266602
    7. '```' → logprob: -9.127069473266602
    8. 'from' → logprob: -9.627069473266602
    9. '           ' → logprob: -10.377069473266602
    10. ' from' → logprob: -10.877069473266602

Token 2066: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005239616730250418
    2. '   ' → logprob: -8.625523567199707
    3. '```' → logprob: -9.125523567199707
    4. '
' → logprob: -9.250523567199707
    5. '           ' → logprob: -10.250523567199707
    6. ',' → logprob: -10.500523567199707
    7. '        
' → logprob: -11.000523567199707
    8. '`' → logprob: -11.250523567199707
    9. '      ' → logprob: -12.000523567199707
    10. ')' → logprob: -12.125523567199707

Token 2067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006579888286069036
    2. '   ' → logprob: -8.00065803527832
    3. '
' → logprob: -8.25065803527832
    4. 'import' → logprob: -9.87565803527832
    5. 'from' → logprob: -12.62565803527832
    6. '```' → logprob: -12.75065803527832
    7. '           ' → logprob: -13.50065803527832
    8. '        
' → logprob: -13.62565803527832
    9. '      ' → logprob: -15.37565803527832
    10. '    
' → logprob: -15.87565803527832

Token 2068: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17190542817115784
    2. '       ' → logprob: -1.9219053983688354
    3. 'from' → logprob: -5.296905517578125
    4. 'dist' → logprob: -5.921905517578125
    5. 'queue' → logprob: -6.296905517578125
    6. '   ' → logprob: -6.671905517578125
    7. 'heap' → logprob: -8.171905517578125
    8. 'pq' → logprob: -8.671905517578125
    9. 'visited' → logprob: -8.671905517578125
    10. 'front' → logprob: -8.921905517578125

Token 2069: ' To' (ID: 2514)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.023159639909863472
    2. 'from' → logprob: -4.273159503936768
    3. '       ' → logprob: -4.773159503936768
    4. '   ' → logprob: -8.898159980773926
    5. 'dist' → logprob: -8.898159980773926
    6. 'queue' → logprob: -9.523159980773926
    7. 'visited' → logprob: -10.023159980773926
    8. ' import' → logprob: -10.398159980773926
    9. 'start' → logprob: -10.398159980773926
    10. 'front' → logprob: -11.398159980773926

Token 2070: ' keep' (ID: 3357)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07720856368541718
    2. 'def' → logprob: -3.5772085189819336
    3. '   ' → logprob: -4.452208518981934
    4. 'from' → logprob: -4.452208518981934
    5. 'expl' → logprob: -4.952208518981934
    6. 'solve' → logprob: -5.202208518981934
    7. '       ' → logprob: -5.952208518981934
    8. 'find' → logprob: -6.452208518981934
    9. '```' → logprob: -6.827208518981934
    10. ' import' → logprob: -6.952208518981934

Token 2071: ' complexity' (ID: 37588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9300904273986816
    2. 'using' → logprob: -1.9300904273986816
    3. 'search' → logprob: -1.9300904273986816
    4. 'self' → logprob: -2.0550904273986816
    5. 'running' → logprob: -3.3050904273986816
    6. 'processing' → logprob: -3.5550904273986816
    7. 'memory' → logprob: -4.055090427398682
    8. 'the' → logprob: -4.055090427398682
    9. 'working' → logprob: -4.055090427398682
    10. 'expl' → logprob: -4.555090427398682

Token 2072: ' manageable' (ID: 105350)
  Prédit: ' manageable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manageable' → logprob: -0.5488031506538391
    2. ' low' → logprob: -1.5488030910491943
    3. 'manageable' → logprob: -2.4238030910491943
    4. ' under' → logprob: -2.9238030910491943
    5. 'low' → logprob: -4.298803329467773
    6. 'down' → logprob: -4.673803329467773
    7. '   ' → logprob: -5.048803329467773
    8. ' minimal' → logprob: -5.173803329467773
    9. 'under' → logprob: -5.173803329467773
    10. '_low' → logprob: -5.298803329467773

Token 2073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7314820885658264
    2. '       ' → logprob: -0.7314820885658264
    3. ',
' → logprob: -3.9814820289611816
    4. '
' → logprob: -4.981482028961182
    5. ':
' → logprob: -5.231482028961182
    6. '):
' → logprob: -6.356482028961182
    7. ':' → logprob: -6.606482028961182
    8. '        
' → logprob: -7.231482028961182
    9. 'import' → logprob: -7.356482028961182
    10. '   ' → logprob: -7.356482028961182

Token 2074: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37767326831817627
    2. 'import' → logprob: -1.5026732683181763
    3. ' import' → logprob: -2.5026731491088867
    4. 'from' → logprob: -5.002673149108887
    5. '   ' → logprob: -6.252673149108887
    6. ' from' → logprob: -7.502673149108887
    7. 'queue' → logprob: -8.127673149108887
    8. ' queue' → logprob: -8.877673149108887
    9. '```' → logprob: -9.752673149108887
    10. 'return' → logprob: -9.877673149108887

Token 2075: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.04136061668396
    2. ':' → logprob: -1.79136061668396
    3. ' =' → logprob: -1.91636061668396
    4. ' continue' → logprob: -2.66636061668396
    5. ')' → logprob: -3.16636061668396
    6. '   ' → logprob: -3.41636061668396
    7. '       ' → logprob: -3.54136061668396
    8. ',' → logprob: -3.91636061668396
    9. '<|end|>' → logprob: -3.91636061668396
    10. '=' → logprob: -4.166360855102539

Token 2076: ' discrete' (ID: 76501)
  Prédit: 'rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rounded' → logprob: -0.48582687973976135
    2. 'dis' → logprob: -1.360826849937439
    3. 'stored' → logprob: -2.9858269691467285
    4. ' discret' → logprob: -3.7358269691467285
    5. ' rounded' → logprob: -3.8608269691467285
    6. 'flo' → logprob: -4.7358269691467285
    7. 'represented' → logprob: -4.9858269691467285
    8. 'import' → logprob: -5.4858269691467285
    9. ' stored' → logprob: -6.1108269691467285
    10. 'visited' → logprob: -6.1108269691467285

Token 2077: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9516168236732483
    2. '   ' → logprob: -1.3266167640686035
    3. ',' → logprob: -2.2016167640686035
    4. '<|end|>' → logprob: -2.8266167640686035
    5. 'import' → logprob: -3.4516167640686035
    6. ' states' → logprob: -3.5766167640686035
    7. ' and' → logprob: -3.9516167640686035
    8. '
' → logprob: -4.0766167640686035
    9. '.' → logprob: -4.7016167640686035
    10. ',
' → logprob: -4.9516167640686035

Token 2078: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17788508534431458
    2. ',' → logprob: -2.927885055541992
    3. ')' → logprob: -3.302885055541992
    4. ' ' → logprob: -4.302885055541992
    5. '_' → logprob: -4.427885055541992
    6. ' values' → logprob: -4.927885055541992
    7. 'es' → logprob: -5.052885055541992
    8. ' tuples' → logprob: -5.177885055541992
    9. '_values' → logprob: -5.302885055541992
    10. ']' → logprob: -5.427885055541992

Token 2079: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8170405030250549
    2. ',' → logprob: -1.1920404434204102
    3. ')' → logprob: -2.44204044342041
    4. ':' → logprob: -2.56704044342041
    5. ':
' → logprob: -4.06704044342041
    6. '):
' → logprob: -4.56704044342041
    7. '<|end|>' → logprob: -4.69204044342041
    8. '=' → logprob: -4.81704044342041
    9. '.' → logprob: -5.44204044342041
    10. ' in' → logprob: -5.44204044342041

Token 2080: ' route' (ID: 9656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02400447241961956
    2. 'sorted' → logprob: -5.0240044593811035
    3. ' self' → logprob: -5.2740044593811035
    4. 'tuple' → logprob: -5.3990044593811035
    5. 'set' → logprob: -6.0240044593811035
    6. 'route' → logprob: -6.2740044593811035
    7. '[self' → logprob: -6.8990044593811035
    8. 'list' → logprob: -7.5240044593811035
    9. ' tuple' → logprob: -7.8990044593811035
    10. '[' → logprob: -8.274004936218262

Token 2081: ' vertices' (ID: 38360)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.25901198387145996
    2. '.length' → logprob: -1.50901198387146
    3. '.points' → logprob: -5.134012222290039
    4. '_lengths' → logprob: -7.759012222290039
    5. '._' → logprob: -8.509012222290039
    6. 'Points' → logprob: -8.759012222290039
    7. '   ' → logprob: -8.884012222290039
    8. 'points' → logprob: -9.634012222290039
    9. 'length' → logprob: -9.884012222290039
    10. '```' → logprob: -10.384012222290039

Token 2082: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6478577256202698
    2. ')' → logprob: -1.272857666015625
    3. ',' → logprob: -1.772857666015625
    4. ':' → logprob: -5.272857666015625
    5. '   ' → logprob: -5.272857666015625
    6. '.' → logprob: -6.022857666015625
    7. ',
' → logprob: -6.397857666015625
    8. '):
' → logprob: -6.397857666015625
    9. '
' → logprob: -6.647857666015625
    10. ':
' → logprob: -7.022857666015625

Token 2083: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011999296024441719
    2. ',' → logprob: -4.761999130249023
    3. '.' → logprob: -7.261999130249023
    4. ')' → logprob: -7.261999130249023
    5. 'import' → logprob: -7.511999130249023
    6. '        
' → logprob: -7.886999130249023
    7. '<|end|>' → logprob: -8.261999130249023
    8. '
' → logprob: -8.261999130249023
    9. '   ' → logprob: -8.886999130249023
    10. ' and' → logprob: -9.761999130249023

Token 2084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007865681312978268
    2. '
' → logprob: -4.882865905761719
    3. '```' → logprob: -9.132865905761719
    4. '        
' → logprob: -9.882865905761719
    5. '   ' → logprob: -10.132865905761719
    6. '           ' → logprob: -10.507865905761719
    7. 'import' → logprob: -11.757865905761719
    8. ',' → logprob: -12.257865905761719
    9. '	' → logprob: -12.882865905761719
    10. 'from' → logprob: -13.007865905761719

Token 2085: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008670372189953923
    2. 'from' → logprob: -8.000866889953613
    3. '   ' → logprob: -8.375866889953613
    4. 'import' → logprob: -8.875866889953613
    5. '
' → logprob: -9.125866889953613
    6. '```' → logprob: -11.375866889953613
    7. ' from' → logprob: -11.625866889953613
    8. ')' → logprob: -11.750866889953613
    9. '        
' → logprob: -11.875866889953613
    10. '           ' → logprob: -12.000866889953613

Token 2086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001097417771234177
    2. '
' → logprob: -9.625109672546387
    3. '   ' → logprob: -10.250109672546387
    4. '```' → logprob: -12.250109672546387
    5. '           ' → logprob: -13.625109672546387
    6. '        
' → logprob: -13.750109672546387
    7. 'import' → logprob: -15.000109672546387
    8. '      ' → logprob: -15.250109672546387
    9. '`' → logprob: -16.250110626220703
    10. '	' → logprob: -16.375110626220703

Token 2087: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42347127199172974
    2. '       ' → logprob: -1.423471212387085
    3. 'from' → logprob: -2.423471212387085
    4. 'dist' → logprob: -4.548471450805664
    5. '   ' → logprob: -5.548471450805664
    6. 'queue' → logprob: -7.673471450805664
    7. 'visited' → logprob: -8.173471450805664
    8. '```' → logprob: -8.798471450805664
    9. ' import' → logprob: -9.673471450805664
    10. 'def' → logprob: -9.798471450805664

Token 2088: ' Initialize' (ID: 19496)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2173660844564438
    2. 'from' → logprob: -2.3423659801483154
    3. '       ' → logprob: -2.4673659801483154
    4. 'dist' → logprob: -4.7173662185668945
    5. 'queue' → logprob: -6.3423662185668945
    6. 'front' → logprob: -6.8423662185668945
    7. 'visited' → logprob: -6.8423662185668945
    8. '   ' → logprob: -7.3423662185668945
    9. 'start' → logprob: -7.7173662185668945
    10. '#' → logprob: -8.717366218566895

Token 2089: ' queue' (ID: 13661)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.002248984295874834
    2. '       ' → logprob: -6.877248764038086
    3. 'from' → logprob: -7.002248764038086
    4. ' import' → logprob: -8.502248764038086
    5. 'queue' → logprob: -10.002248764038086
    6. 'dist' → logprob: -11.127248764038086
    7. '```' → logprob: -11.377248764038086
    8. 'heap' → logprob: -11.502248764038086
    9. 'start' → logprob: -11.627248764038086
    10. 'front' → logprob: -12.252248764038086

Token 2090: ' and' (ID: 326)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18012869358062744
    2. '
' → logprob: -2.055128574371338
    3. '       ' → logprob: -4.305128574371338
    4. 'from' → logprob: -4.555128574371338
    5. ',' → logprob: -5.930128574371338
    6. '```' → logprob: -6.055128574371338
    7. ':' → logprob: -6.305128574371338
    8. 'with' → logprob: -6.930128574371338
    9. 'self' → logprob: -7.305128574371338
    10. ' with' → logprob: -7.305128574371338

Token 2091: ' distances' (ID: 48294)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0033148385118693113
    2. 'heap' → logprob: -6.128314971923828
    3. 'visited' → logprob: -7.378314971923828
    4. ' import' → logprob: -7.878314971923828
    5. 'dist' → logprob: -9.878314971923828
    6. 'from' → logprob: -10.253314971923828
    7. '```' → logprob: -11.253314971923828
    8. '   ' → logprob: -11.878314971923828
    9. ' heap' → logprob: -12.003314971923828
    10. '
' → logprob: -12.503314971923828

Token 2092: ' dictionary' (ID: 22131)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3740521967411041
    2. '       ' → logprob: -1.8740521669387817
    3. 'import' → logprob: -1.9990521669387817
    4. '(self' → logprob: -5.124052047729492
    5. '        
' → logprob: -5.874052047729492
    6. 'self' → logprob: -5.999052047729492
    7. '```' → logprob: -5.999052047729492
    8. 'from' → logprob: -6.624052047729492
    9. ':' → logprob: -6.749052047729492
    10. ',' → logprob: -6.749052047729492

Token 2093: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11017865687608719
    2. '       ' → logprob: -2.7351787090301514
    3. 'import' → logprob: -3.4851787090301514
    4. 'from' → logprob: -5.610178470611572
    5. '```' → logprob: -6.485178470611572
    6. '
' → logprob: -6.735178470611572
    7. ',' → logprob: -7.485178470611572
    8. '        
' → logprob: -8.11017894744873
    9. 'self' → logprob: -8.23517894744873
    10. ':' → logprob: -8.23517894744873

Token 2094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03029257245361805
    2. '```' → logprob: -3.780292510986328
    3. 'import' → logprob: -5.655292510986328
    4. '
' → logprob: -5.780292510986328
    5. 'from' → logprob: -8.280292510986328
    6. '``' → logprob: -9.780292510986328
    7. '   ' → logprob: -9.905292510986328
    8. '        
' → logprob: -10.780292510986328
    9. ' from' → logprob: -11.030292510986328
    10. ' import' → logprob: -11.280292510986328

Token 2095: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18149957060813904
    2. 'import' (adapté à ' import') → logprob: -2.181499481201172
    3. 'from' → logprob: -3.181499481201172
    4. '```' → logprob: -4.556499481201172
    5. 'queue' → logprob: -7.056499481201172
    6. ' from' → logprob: -9.806499481201172
    7. '   ' → logprob: -9.931499481201172
    8. '``' → logprob: -10.056499481201172
    9. 'dist' → logprob: -10.556499481201172
    10. ' import' → logprob: -10.681499481201172

Token 2096: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.688212614681106e-05
    2. ' heap' → logprob: -11.000017166137695
    3. 'he' → logprob: -16.625017166137695
    4. '
' → logprob: -17.375017166137695
    5. '_heap' → logprob: -17.375017166137695
    6. 'queue' → logprob: -17.750017166137695
    7. '```' → logprob: -18.500017166137695
    8. '   ' → logprob: -18.500017166137695
    9. 'math' → logprob: -18.750017166137695
    10. '(heap' → logprob: -21.375017166137695

Token 2097: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.40998875699006e-05
    2. 'queue' → logprob: -9.62507438659668
    3. '_queue' → logprob: -12.37507438659668
    4. ' queue' → logprob: -13.25007438659668
    5. '_' → logprob: -14.00007438659668
    6. '_q' → logprob: -14.87507438659668
    7. '```' → logprob: -14.87507438659668
    8. 'import' → logprob: -16.00007438659668
    9. '[' → logprob: -16.50007438659668
    10. '
' → logprob: -16.62507438659668

Token 2098: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004739603027701378
    2. '       ' → logprob: -5.379739761352539
    3. '
' → logprob: -9.504739761352539
    4. 'self' → logprob: -10.504739761352539
    5. '        
' → logprob: -11.379739761352539
    6. '

' → logprob: -12.879739761352539
    7. '    
' → logprob: -14.379739761352539
    8. '```' → logprob: -14.379739761352539
    9. ' self' → logprob: -14.754739761352539
    10. 'queue' → logprob: -14.754739761352539

Token 2099: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018401946872472763
    2. '       ' → logprob: -4.018402099609375
    3. 'self' → logprob: -9.268402099609375
    4. '
' → logprob: -9.643402099609375
    5. '        
' → logprob: -10.143402099609375
    6. '```' → logprob: -10.518402099609375
    7. '   ' → logprob: -11.768402099609375
    8. ' self' → logprob: -12.018402099609375
    9. '    
' → logprob: -12.768402099609375
    10. 'queue' → logprob: -13.018402099609375

Token 2100: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.257171630859375
    2. 'queue' → logprob: -1.632171630859375
    3. '
' → logprob: -3.757171630859375
    4. 'heap' → logprob: -5.507171630859375
    5. 'pq' → logprob: -6.132171630859375
    6. 'self' → logprob: -7.632171630859375
    7. 'dist' → logprob: -7.632171630859375
    8. ' queue' → logprob: -8.132171630859375
    9. '        
' → logprob: -9.007171630859375
    10. 'q' → logprob: -9.007171630859375

Token 2101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13258348405361176
    2. ',' → logprob: -2.7575833797454834
    3. '=' → logprob: -3.5075833797454834
    4. ')' → logprob: -4.5075836181640625
    5. '_' → logprob: -5.5075836181640625
    6. ' (' → logprob: -5.7575836181640625
    7. '(' → logprob: -6.0075836181640625
    8. ' ,' → logprob: -6.3825836181640625
    9. '_queue' → logprob: -7.2575836181640625
    10. '_tokens' → logprob: -7.2575836181640625

Token 2102: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.5491004129871726e-05
    2. ' (' → logprob: -10.000045776367188
    3. '       ' → logprob: -18.000045776367188
    4. '0' → logprob: -18.750045776367188
    5. '   ' → logprob: -20.000045776367188
    6. ' ' → logprob: -20.375045776367188
    7. '(
' → logprob: -20.500045776367188
    8. '           ' → logprob: -20.875045776367188
    9. '((' → logprob: -21.750045776367188
    10. '        ' → logprob: -22.500045776367188

Token 2103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '(' → logprob: -17.625001907348633
    5. ')' → logprob: -18.625001907348633
    6. '
' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.250001907348633
    8. '```' → logprob: -19.375001907348633
    9. '    ' → logprob: -19.500001907348633
    10. '`' → logprob: -19.937501907348633

Token 2104: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030219709500670433
    2. '.' → logprob: -3.530219793319702
    3. ' ,' → logprob: -8.405220031738281
    4. '0' → logprob: -9.030220031738281
    5. '.,' → logprob: -9.905220031738281
    6. ',
' → logprob: -10.655220031738281
    7. '<|end|>' → logprob: -11.655220031738281
    8. ',float' → logprob: -12.030220031738281
    9. ')' → logprob: -12.155220031738281
    10. '
' → logprob: -12.655220031738281

Token 2105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005732863210141659
    2. ',' → logprob: -7.62557315826416
    3. ' ' → logprob: -9.50057315826416
    4. 'float' → logprob: -12.37557315826416
    5. ')' → logprob: -13.25057315826416
    6. '.' → logprob: -13.75057315826416
    7. ' ,' → logprob: -13.87557315826416
    8. '   ' → logprob: -14.75057315826416
    9. ' float' → logprob: -14.87557315826416
    10. '  ' → logprob: -15.50057315826416

Token 2106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.857719275401905e-05
    2. ',
' → logprob: -10.625038146972656
    3. ' ,' → logprob: -11.250038146972656
    4. '0' → logprob: -14.375038146972656
    5. '‌,' → logprob: -16.000038146972656
    6. '<|end|>' → logprob: -16.250038146972656
    7. '),' → logprob: -16.625038146972656
    8. ',float' → logprob: -16.750038146972656
    9. ')' → logprob: -16.875038146972656
    10. '
' → logprob: -16.875038146972656

Token 2107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045009577297605574
    2. 'self' → logprob: -8.125450134277344
    3. ' ' → logprob: -8.875450134277344
    4. ' self' → logprob: -12.125450134277344
    5. 'route' → logprob: -12.625450134277344
    6. '   ' → logprob: -13.875450134277344
    7. '1' → logprob: -14.250450134277344
    8. ')' → logprob: -14.250450134277344
    9. '       ' → logprob: -14.625450134277344
    10. 'Route' → logprob: -14.687950134277344

Token 2108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.093505099765025e-05
    2. 'self' → logprob: -11.250020980834961
    3. ' ' → logprob: -11.875020980834961
    4. ' self' → logprob: -16.31252098083496
    5. 'route' → logprob: -16.43752098083496
    6. '{' → logprob: -16.68752098083496
    7. '   ' → logprob: -16.68752098083496
    8. '```' → logprob: -16.81252098083496
    9. '
' → logprob: -16.87502098083496
    10. '(' → logprob: -17.00002098083496

Token 2109: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01698870025575161
    2. ',' → logprob: -4.141988754272461
    3. ')' → logprob: -7.016988754272461
    4. '0' → logprob: -10.141988754272461
    5. '.,' → logprob: -12.391988754272461
    6. '[' → logprob: -12.516988754272461
    7. ' ,' → logprob: -13.391988754272461
    8. '```' → logprob: -13.391988754272461
    9. '),' → logprob: -13.516988754272461
    10. '<|end|>' → logprob: -13.891988754272461

Token 2110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -16.75
    3. 'float' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. '   ' → logprob: -17.25
    6. '       ' → logprob: -17.6875
    7. ' ' → logprob: -18.6875
    8. '000' → logprob: -18.6875
    9. 'f' → logprob: -19.5
    10. '
' → logprob: -19.5

Token 2111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051721151918172836
    2. ')
' → logprob: -3.0517210960388184
    3. ',' → logprob: -5.801721096038818
    4. '       ' → logprob: -10.051721572875977
    5. ',
' → logprob: -11.051721572875977
    6. ',)' → logprob: -11.176721572875977
    7. '),' → logprob: -11.301721572875977
    8. ')
' → logprob: -11.426721572875977
    9. ',)
' → logprob: -12.301721572875977
    10. ')

' → logprob: -13.801721572875977

Token 2112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037219688296318054
    2. ',' → logprob: -4.412219524383545
    3. '
' → logprob: -4.537219524383545
    4. 'dist' → logprob: -5.162219524383545
    5. 'queue' → logprob: -5.287219524383545
    6. 'distance' → logprob: -6.287219524383545
    7. 'heap' → logprob: -7.662219524383545
    8. ',
' → logprob: -8.912220001220703
    9. '        
' → logprob: -9.537220001220703
    10. 'self' → logprob: -9.662220001220703

Token 2113: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5407969951629639
    2. 'queue' → logprob: -1.2907969951629639
    3. 'heap' → logprob: -2.040796995162964
    4. 'pq' → logprob: -5.040797233581543
    5. '       ' → logprob: -5.415797233581543
    6. 'visited' → logprob: -7.540797233581543
    7. 'distance' → logprob: -8.040797233581543
    8. '   ' → logprob: -8.165797233581543
    9. 'hq' → logprob: -8.165797233581543
    10. '
' → logprob: -8.790797233581543

Token 2114: '_map' (ID: 11824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9714555144309998
    2. ',' → logprob: -1.2214555740356445
    3. '=' → logprob: -2.4714555740356445
    4. '[' → logprob: -2.5964555740356445
    5. ' =' → logprob: -2.9714555740356445
    6. '_' → logprob: -3.9714555740356445
    7. '_heap' → logprob: -4.0964555740356445
    8. '[(' → logprob: -4.2214555740356445
    9. '   ' → logprob: -4.5964555740356445
    10. '<|end|>' → logprob: -4.7214555740356445

Token 2115: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7367519736289978
    2. '[' → logprob: -0.9867519736289978
    3. ' =' → logprob: -2.1117520332336426
    4. '[start' → logprob: -5.111752033233643
    5. '[(' → logprob: -5.361752033233643
    6. '[
' → logprob: -5.361752033233643
    7. '<|end|>' → logprob: -5.486752033233643
    8. ',' → logprob: -6.236752033233643
    9. ')' → logprob: -6.486752033233643
    10. '.setdefault' → logprob: -7.111752033233643

Token 2116: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.14409437775611877
    2. '{}' → logprob: -2.394094467163086
    3. '{' → logprob: -3.644094467163086
    4. 'dict' → logprob: -4.144094467163086
    5. ' Dict' → logprob: -7.269094467163086
    6. '{}
' → logprob: -8.644094467163086
    7. ' {}' → logprob: -11.394094467163086
    8. '=' → logprob: -11.394094467163086
    9. ' dict' → logprob: -11.394094467163086
    10. ' =' → logprob: -11.894094467163086

Token 2117: '[' (ID: 58)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.10059837996959686
    2. ' =' → logprob: -3.2255983352661133
    3. '=' → logprob: -3.8505983352661133
    4. '[' → logprob: -3.9755983352661133
    5. '       ' → logprob: -4.975598335266113
    6. '[((' → logprob: -5.600598335266113
    7. '{' → logprob: -6.725598335266113
    8. '[
' → logprob: -6.850598335266113
    9. '={(' → logprob: -6.850598335266113
    10. '   ' → logprob: -7.225598335266113

Token 2118: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0012029698118567467
    2. '[' → logprob: -6.7512030601501465
    3. ' Tuple' → logprob: -10.501202583312988
    4. '   ' → logprob: -13.876202583312988
    5. '           ' → logprob: -13.876202583312988
    6. 'float' → logprob: -13.876202583312988
    7. '[
' → logprob: -14.001202583312988
    8. '       ' → logprob: -14.876202583312988
    9. '<Tuple' → logprob: -15.501202583312988
    10. 'Tu' → logprob: -15.751202583312988

Token 2119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009947914630174637
    2. '[(' → logprob: -4.634947776794434
    3. ',float' → logprob: -9.509947776794434
    4. 'float' → logprob: -9.884947776794434
    5. '(float' → logprob: -10.634947776794434
    6. ',' → logprob: -11.009947776794434
    7. '[
' → logprob: -11.009947776794434
    8. ']' → logprob: -12.759947776794434
    9. '
' → logprob: -13.384947776794434
    10. '(' → logprob: -13.634947776794434

Token 2120: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.759734732331708e-05
    2. '0' → logprob: -11.375017166137695
    3. ' float' → logprob: -12.250017166137695
    4. '(float' → logprob: -14.500017166137695
    5. ',float' → logprob: -14.750017166137695
    6. '<float' → logprob: -15.875017166137695
    7. 'flo' → logprob: -16.250017166137695
    8. '	float' → logprob: -17.250017166137695
    9. '[' → logprob: -17.375017166137695
    10. '=float' → logprob: -17.500017166137695

Token 2121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02374793402850628
    2. ',float' → logprob: -3.7737479209899902
    3. '[' → logprob: -7.77374792098999
    4. 'float' → logprob: -9.898748397827148
    5. ' ,' → logprob: -10.898748397827148
    6. '(float' → logprob: -12.648748397827148
    7. ',double' → logprob: -13.273748397827148
    8. '[int' → logprob: -13.398748397827148
    9. ',int' → logprob: -13.398748397827148
    10. '<float' → logprob: -13.773748397827148

Token 2122: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.9504606825648807e-05
    2. ' float' → logprob: -10.875019073486328
    3. '...' → logprob: -15.625019073486328
    4. 'Tuple' → logprob: -15.750019073486328
    5. '	float' → logprob: -16.625019073486328
    6. '   ' → logprob: -17.625019073486328
    7. '<float' → logprob: -17.750019073486328
    8. 'flo' → logprob: -18.000019073486328
    9. '=float' → logprob: -18.250019073486328
    10. '(float' → logprob: -18.375019073486328

Token 2123: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00023762896307744086
    2. ',' → logprob: -8.375237464904785
    3. ']' → logprob: -12.875237464904785
    4. ' ],' → logprob: -13.250237464904785
    5. '),' → logprob: -13.625237464904785
    6. '   ' → logprob: -15.000237464904785
    7. '       ' → logprob: -15.375237464904785
    8. '},' → logprob: -15.625237464904785
    9. '>,' → logprob: -15.750237464904785
    10. '],
' → logprob: -15.750237464904785

Token 2124: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1160349458805285e-05
    2. ' float' → logprob: -11.625011444091797
    3. 'Optional' → logprob: -14.125011444091797
    4. 'flo' → logprob: -14.125011444091797
    5. '	float' → logprob: -15.625011444091797
    6. '=float' → logprob: -15.750011444091797
    7. '   ' → logprob: -16.125011444091797
    8. '<float' → logprob: -16.750011444091797
    9. '```' → logprob: -16.750011444091797
    10. 'int' → logprob: -17.250011444091797

Token 2125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018826935440301895
    2. ' =' → logprob: -4.393826961517334
    3. '=' → logprob: -5.393826961517334
    4. ')' → logprob: -6.643826961517334
    5. ']=' → logprob: -8.393826484680176
    6. ']={' → logprob: -8.893826484680176
    7. ',' → logprob: -10.268826484680176
    8. '{' → logprob: -11.768826484680176
    9. '   ' → logprob: -11.768826484680176
    10. ' ]' → logprob: -12.143826484680176

Token 2126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759717226028442
    2. ' =' → logprob: -0.8259717226028442
    3. '={' → logprob: -11.450971603393555
    4. '={
' → logprob: -12.075971603393555
    5. '={}' → logprob: -13.200971603393555
    6. '{' → logprob: -13.450971603393555
    7. '       ' → logprob: -13.450971603393555
    8. '[' → logprob: -13.575971603393555
    9. '={}
' → logprob: -13.700971603393555
    10. '={(' → logprob: -13.825971603393555

Token 2127: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -4.954393079970032e-05
    2. ' {' → logprob: -10.000049591064453
    3. '{
' → logprob: -12.625049591064453
    4. '{}
' → logprob: -15.125049591064453
    5. 'dict' → logprob: -15.750049591064453
    6. ' {(' → logprob: -15.875049591064453
    7. '{return' → logprob: -16.375049591064453
    8. '   ' → logprob: -16.625049591064453
    9. '       ' → logprob: -17.125049591064453
    10. '{i' → logprob: -17.750049591064453

Token 2128: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.019534332677721977
    2. '(' → logprob: -4.019534111022949
    3. '(start' → logprob: -7.269534111022949
    4. ' start' → logprob: -7.394534111022949
    5. ' (' → logprob: -9.89453411102295
    6. '           ' → logprob: -11.76953411102295
    7. '   ' → logprob: -12.26953411102295
    8. '       ' → logprob: -12.64453411102295
    9. '         ' → logprob: -13.39453411102295
    10. '          ' → logprob: -14.01953411102295

Token 2129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001483564410591498
    2. ' :' → logprob: -9.00014877319336
    3. ']' → logprob: -10.75014877319336
    4. ']:' → logprob: -13.87514877319336
    5. '   ' → logprob: -14.00014877319336
    6. '       ' → logprob: -14.62514877319336
    7. ')' → logprob: -14.87514877319336
    8. ':return' → logprob: -15.25014877319336
    9. '):' → logprob: -15.75014877319336
    10. ':]' → logprob: -16.12514877319336

Token 2130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.62500286102295
    4. '           ' → logprob: -17.000001907348633
    5. '       ' → logprob: -17.125001907348633
    6. '     ' → logprob: -17.875001907348633
    7. '۰' → logprob: -18.625001907348633
    8. '  ' → logprob: -18.750001907348633
    9. '         ' → logprob: -18.750001907348633
    10. '    ' → logprob: -18.750001907348633

Token 2131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '           ' → logprob: -16.7500057220459
    5. '     ' → logprob: -16.7500057220459
    6. '       ' → logprob: -16.7500057220459
    7. '۰' → logprob: -17.2500057220459
    8. '         ' → logprob: -18.0000057220459
    9. '        ' → logprob: -18.1250057220459
    10. '	' → logprob: -18.2500057220459

Token 2132: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.554343366995454e-05
    2. '}' → logprob: -9.375085830688477
    3. '.
' → logprob: -14.875085830688477
    4. '}
' → logprob: -15.625085830688477
    5. '   ' → logprob: -16.500085830688477
    6. '       ' → logprob: -16.875085830688477
    7. ' }' → logprob: -18.125085830688477
    8. ')' → logprob: -18.250085830688477
    9. ',' → logprob: -18.375085830688477
    10. '.,' → logprob: -18.375085830688477

Token 2133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '}' → logprob: -14.000000953674316
    3. '}
' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.000001907348633
    5. 'float' → logprob: -18.750001907348633
    6. '.' → logprob: -19.375001907348633
    7. '```' → logprob: -19.875001907348633
    8. '       ' → logprob: -20.250001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '000' → logprob: -20.750001907348633

Token 2134: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.023733265697956085
    2. '       ' → logprob: -4.398733139038086
    3. '}
' → logprob: -4.523733139038086
    4. ',' → logprob: -8.148733139038086
    5. ',
' → logprob: -11.773733139038086
    6. '   ' → logprob: -11.773733139038086
    7. ' }' → logprob: -12.523733139038086
    8. ')' → logprob: -13.648733139038086
    9. '}
' → logprob: -13.898733139038086
    10. '}

' → logprob: -14.773733139038086

Token 2135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003343825228512287
    2. 'queue' → logprob: -5.7533440589904785
    3. 'heap' → logprob: -9.37834358215332
    4. '```' → logprob: -10.00334358215332
    5. 'pq' → logprob: -10.75334358215332
    6. '   ' → logprob: -12.00334358215332
    7. 'priority' → logprob: -12.75334358215332
    8. 'import' → logprob: -13.00334358215332
    9. ' queue' → logprob: -13.50334358215332
    10. '
' → logprob: -14.75334358215332

Token 2136: ' heap' (ID: 37237)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.32005634903907776
    2. '       ' → logprob: -2.320056438446045
    3. 'pq' → logprob: -2.320056438446045
    4. 'heap' (adapté à ' heap') → logprob: -2.570056438446045
    5. 'import' → logprob: -7.945056438446045
    6. '```' → logprob: -8.820055961608887
    7. 'hq' → logprob: -9.070055961608887
    8. 'priority' → logprob: -9.570055961608887
    9. '
' → logprob: -9.695055961608887
    10. 'q' → logprob: -10.445055961608887

Token 2137: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.159562349319458
    2. ' =' → logprob: -2.159562349319458
    3. '       ' → logprob: -4.659562110900879
    4. '=' → logprob: -5.159562110900879
    5. '[' → logprob: -5.784562110900879
    6. '[
' → logprob: -5.784562110900879
    7. '=[]' → logprob: -6.159562110900879
    8. '=[
' → logprob: -6.284562110900879
    9. '.push' → logprob: -6.534562110900879
    10. '.' → logprob: -7.034562110900879

Token 2138: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.656383680412546e-05
    2. ' [(' → logprob: -10.500046730041504
    3. '[]' → logprob: -11.250046730041504
    4. '[]
' → logprob: -12.500046730041504
    5. '[' → logprob: -13.750046730041504
    6. '[((' → logprob: -13.750046730041504
    7. '[
' → logprob: -17.000045776367188
    8. '   ' → logprob: -17.625045776367188
    9. '[]

' → logprob: -19.375045776367188
    10. '       ' → logprob: -20.125045776367188

Token 2139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '(' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.25
    5. '       ' → logprob: -17.875
    6. '
' → logprob: -18.125
    7. '           ' → logprob: -18.25
    8. '     ' → logprob: -19.0
    9. '         ' → logprob: -19.25
    10. '        ' → logprob: -19.625

Token 2140: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20188894867897034
    2. ',' → logprob: -1.701888918876648
    3. '[' → logprob: -8.701889038085938
    4. '.,' → logprob: -9.326889038085938
    5. '       ' → logprob: -9.826889038085938
    6. ',
' → logprob: -10.076889038085938
    7. ' ,' → logprob: -10.951889038085938
    8. ')' → logprob: -11.201889038085938
    9. '.
' → logprob: -11.576889038085938
    10. '               ' → logprob: -11.826889038085938

Token 2141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.375003814697266
    4. 'float' → logprob: -15.750003814697266
    5. ',' → logprob: -16.625003814697266
    6. '```' → logprob: -16.875003814697266
    7. '.' → logprob: -17.250003814697266
    8. '
' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '[' → logprob: -17.750003814697266

Token 2142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',(' → logprob: -12.375015258789062
    4. ',
' → logprob: -13.375015258789062
    5. ',start' → logprob: -15.375015258789062
    6. ')' → logprob: -17.125015258789062
    7. '```' → logprob: -18.125015258789062
    8. '(' → logprob: -18.125015258789062
    9. '
' → logprob: -19.250015258789062
    10. '   ' → logprob: -19.375015258789062

Token 2143: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08445686846971512
    2. 'start' → logprob: -3.2094569206237793
    3. ' ' → logprob: -4.209456920623779
    4. ' start' → logprob: -4.334456920623779
    5. '(' → logprob: -4.459456920623779
    6. ' (' → logprob: -7.084456920623779
    7. '(start' → logprob: -9.209456443786621
    8. ')' → logprob: -9.584456443786621
    9. '   ' → logprob: -10.959456443786621
    10. '*' → logprob: -11.209456443786621

Token 2144: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05637262389063835
    2. ')]
' → logprob: -3.18137264251709
    3. ']' → logprob: -4.80637264251709
    4. ')' → logprob: -5.43137264251709
    5. ']
' → logprob: -8.05637264251709
    6. ',' → logprob: -8.93137264251709
    7. '       ' → logprob: -8.93137264251709
    8. '   ' → logprob: -9.18137264251709
    9. ')
' → logprob: -11.18137264251709
    10. ')]
' → logprob: -11.55637264251709

Token 2145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014675216749310493
    2. 'while' → logprob: -4.514675140380859
    3. '   ' → logprob: -6.389675140380859
    4. ' while' → logprob: -6.764675140380859
    5. '```' → logprob: -7.264675140380859
    6. '
' → logprob: -10.13967514038086
    7. '	while' → logprob: -10.26467514038086
    8. '	' → logprob: -12.38967514038086
    9. '           ' → logprob: -12.51467514038086
    10. 'While' → logprob: -13.38967514038086

Token 2146: ' route' (ID: 9656)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008624974638223648
    2. '       ' → logprob: -4.758625030517578
    3. ' while' → logprob: -11.883625030517578
    4. '
' → logprob: -13.008625030517578
    5. '```' → logprob: -14.633625030517578
    6. '	while' → logprob: -14.758625030517578
    7. '   ' → logprob: -15.508625030517578
    8. 'visited' → logprob: -16.258625030517578
    9. 'While' → logprob: -16.383625030517578
    10. '        
' → logprob: -17.008625030517578

Token 2147: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00775746488943696
    2. '       ' → logprob: -5.757757663726807
    3. '_length' → logprob: -6.507757663726807
    4. ' =' → logprob: -6.757757663726807
    5. '_lengths' → logprob: -6.882757663726807
    6. '.points' → logprob: -8.382757186889648
    7. '.length' → logprob: -8.757757186889648
    8. '_segments' → logprob: -9.007757186889648
    9. 'Points' → logprob: -9.257757186889648
    10. '   ' → logprob: -9.882757186889648

Token 2148: ' =' (ID: 314)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0054516978561878204
    2. '_lengths' → logprob: -6.005451679229736
    3. ' =' → logprob: -6.505451679229736
    4. 'dist' → logprob: -7.380451679229736
    5. '_points' → logprob: -8.130452156066895
    6. '   ' → logprob: -8.755452156066895
    7. '=' → logprob: -8.880452156066895
    8. '_length' → logprob: -10.005452156066895
    9. '       ' → logprob: -10.130452156066895
    10. '	dist' → logprob: -10.880452156066895

Token 2149: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006748647429049015
    2. ' self' → logprob: -5.006748676300049
    3. '[self' → logprob: -10.50674819946289
    4. '[' → logprob: -12.88174819946289
    5. '   ' → logprob: -13.50674819946289
    6. ' [' → logprob: -13.88174819946289
    7. '       ' → logprob: -15.38174819946289
    8. '	self' → logprob: -15.63174819946289
    9. ' ' → logprob: -15.63174819946289
    10. 'set' → logprob: -15.75674819946289

Token 2150: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.0021971215028315783
    2. 'route' → logprob: -6.127197265625
    3. '.length' → logprob: -12.377197265625
    4. '.' → logprob: -12.627197265625
    5. '$route' → logprob: -14.252197265625
    6. '```' → logprob: -14.377197265625
    7. 'self' → logprob: -14.502197265625
    8. '.routes' → logprob: -14.877197265625
    9. '..' → logprob: -15.127197265625
    10. '`.' → logprob: -15.127197265625

Token 2151: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0006506018689833581
    2. '.points' → logprob: -7.500650405883789
    3. '_points' → logprob: -10.625650405883789
    4. '.dist' → logprob: -10.875650405883789
    5. '.se' → logprob: -11.000650405883789
    6. '       ' → logprob: -11.375650405883789
    7. 'length' → logprob: -11.875650405883789
    8. '   ' → logprob: -12.125650405883789
    9. 'Points' → logprob: -12.500650405883789
    10. '.total' → logprob: -13.625650405883789

Token 2152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25287654995918274
    2. '_prefix' → logprob: -1.5028765201568604
    3. 'prefix' → logprob: -7.0028767585754395
    4. '_points' → logprob: -11.252876281738281
    5. '_suffix' → logprob: -12.127876281738281
    6. '   ' → logprob: -12.377876281738281
    7. '```' → logprob: -13.002876281738281
    8. '
' → logprob: -13.252876281738281
    9. '_lengths' → logprob: -13.252876281738281
    10. '_pref' → logprob: -13.752876281738281

Token 2153: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -5.013994814362377e-05
    2. 'prefix' → logprob: -10.00005054473877
    3. '_suffix' → logprob: -13.62505054473877
    4. '```' → logprob: -14.12505054473877
    5. '_PREFIX' → logprob: -14.37505054473877
    6. '_pref' → logprob: -14.37505054473877
    7. 'PREFIX' → logprob: -14.75005054473877
    8. '   ' → logprob: -15.12505054473877
    9. '
' → logprob: -16.000049591064453
    10. 's' → logprob: -16.125049591064453

Token 2154: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35099339485168457
    2. '       ' → logprob: -1.2259933948516846
    3. ')' → logprob: -7.7259931564331055
    4. '        
' → logprob: -7.7259931564331055
    5. '
' → logprob: -7.8509931564331055
    6. '```' → logprob: -7.9759931564331055
    7. '[' → logprob: -8.850993156433105
    8. ',' → logprob: -8.975993156433105
    9. '<|end|>' → logprob: -8.975993156433105
    10. '[::-' → logprob: -9.350993156433105

Token 2155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001519503304734826
    2. '
' → logprob: -6.876519680023193
    3. 'while' → logprob: -9.001519203186035
    4. ' while' → logprob: -9.126519203186035
    5. '   ' → logprob: -9.501519203186035
    6. '```' → logprob: -9.501519203186035
    7. '        
' → logprob: -10.126519203186035
    8. ',' → logprob: -10.876519203186035
    9. '           ' → logprob: -11.126519203186035
    10. ')' → logprob: -11.126519203186035

Token 2156: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31425654888153076
    2. '       ' → logprob: -1.3142565488815308
    3. '
' → logprob: -7.43925666809082
    4. ' while' → logprob: -7.93925666809082
    5. 'visited' → logprob: -11.06425666809082
    6. '```' → logprob: -11.18925666809082
    7. '   ' → logprob: -11.68925666809082
    8. '        
' → logprob: -12.06425666809082
    9. '	while' → logprob: -12.68925666809082
    10. '           ' → logprob: -13.56425666809082

Token 2157: ' Pre' (ID: 4659)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05672861263155937
    2. '       ' → logprob: -3.1817286014556885
    3. 'visited' → logprob: -4.306728839874268
    4. ' while' → logprob: -9.43172836303711
    5. '
' → logprob: -10.30672836303711
    6. 'seen' → logprob: -10.43172836303711
    7. '   ' → logprob: -12.18172836303711
    8. '        
' → logprob: -12.80672836303711
    9. 'processed' → logprob: -13.43172836303711
    10. '```' → logprob: -13.93172836303711

Token 2158: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -0.5525455474853516
    2. 'v' → logprob: -1.8025455474853516
    3. 'pare' → logprob: -2.1775455474853516
    4. 'compute' → logprob: -3.3025455474853516
    5. 'viously' → logprob: -3.8025455474853516
    6. 'processed' → logprob: -4.052545547485352
    7. 'process' → logprob: -4.302545547485352
    8. '       ' → logprob: -4.427545547485352
    9. 'view' → logprob: -4.927545547485352
    10. 'computed' → logprob: -5.052545547485352

Token 2159: ' all' (ID: 722)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.7106426954269409
    2. 'adj' → logprob: -2.0856428146362305
    3. 'alt' → logprob: -2.3356428146362305
    4. 'for' → logprob: -2.9606428146362305
    5. 'positions' → logprob: -3.4606428146362305
    6. 'point' → logprob: -3.4606428146362305
    7. '```' → logprob: -3.7106428146362305
    8. 'visited' → logprob: -3.7106428146362305
    9. 'points' → logprob: -4.2106428146362305
    10. 'neighbor' → logprob: -4.2106428146362305

Token 2160: ' candidate' (ID: 17098)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.20422354340553284
    2. 'dist' → logprob: -3.3292236328125
    3. 'pairs' → logprob: -3.3292236328125
    4. 'moves' → logprob: -3.5792236328125
    5. 'neighbor' → logprob: -3.9542236328125
    6. 'possible' → logprob: -4.0792236328125
    7. 'positions' → logprob: -4.0792236328125
    8. 'edges' → logprob: -4.8292236328125
    9. ' neighbors' → logprob: -4.9542236328125
    10. 'points' → logprob: -5.4542236328125

Token 2161: ' states' (ID: 9407)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.9375514388084412
    2. 's' → logprob: -1.437551498413086
    3. '_positions' → logprob: -2.312551498413086
    4. '_points' → logprob: -2.562551498413086
    5. 'moves' → logprob: -2.812551498413086
    6. '_neighbors' → logprob: -3.062551498413086
    7. '_states' → logprob: -3.312551498413086
    8. '_nodes' → logprob: -4.687551498413086
    9. '_pairs' → logprob: -4.937551498413086
    10. '_edges' → logprob: -5.062551498413086

Token 2162: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40735867619514465
    2. ' =' → logprob: -1.7823586463928223
    3. ' for' → logprob: -3.0323586463928223
    4. 'for' → logprob: -3.1573586463928223
    5. ',' → logprob: -4.032358646392822
    6. '
' → logprob: -4.907358646392822
    7. '_points' → logprob: -4.907358646392822
    8. ':' → logprob: -5.157358646392822
    9. '=' → logprob: -5.532358646392822
    10. 'points' → logprob: -5.782358646392822

Token 2163: ' pairs' (ID: 24702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6630444526672363
    2. ' for' → logprob: -1.0380444526672363
    3. 'for' → logprob: -2.4130444526672363
    4. ' states' → logprob: -4.663044452667236
    5. ' points' → logprob: -4.663044452667236
    6. 'points' → logprob: -5.163044452667236
    7. '```' → logprob: -5.788044452667236
    8. ' all' → logprob: -5.913044452667236
    9. 'states' → logprob: -5.913044452667236
    10. 'all' → logprob: -6.538044452667236

Token 2164: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049728743731975555
    2. '       ' → logprob: -3.6747286319732666
    3. '=' → logprob: -4.049728870391846
    4. 'for' → logprob: -6.049728870391846
    5. '=[]
' → logprob: -7.674728870391846
    6. ',' → logprob: -7.674728870391846
    7. '=[]' → logprob: -7.799728870391846
    8. ' for' → logprob: -8.049728393554688
    9. '   ' → logprob: -8.299728393554688
    10. '           ' → logprob: -8.424728393554688

Token 2165: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.185817152261734
    2. 'dist' → logprob: -2.435817241668701
    3. '(route' → logprob: -3.560817241668701
    4. 'points' → logprob: -3.685817241668701
    5. 'd' → logprob: -4.310817241668701
    6. '(' → logprob: -5.310817241668701
    7. 'positions' → logprob: -6.060817241668701
    8. '(dist' → logprob: -6.560817241668701
    9. 'nd' → logprob: -6.685817241668701
    10. 'distance' → logprob: -6.935817241668701

Token 2166: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0037218148354440928
    2. 'points' → logprob: -5.628721714019775
    3. ' points' → logprob: -10.128722190856934
    4. '_tokens' → logprob: -10.253722190856934
    5. '_dist' → logprob: -11.128722190856934
    6. 'dist' → logprob: -11.753722190856934
    7. '_segments' → logprob: -12.128722190856934
    8. '_point' → logprob: -12.628722190856934
    9. '       ' → logprob: -12.628722190856934
    10. '```' → logprob: -12.753722190856934

Token 2167: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23168161511421204
    2. ',' → logprob: -2.4816815853118896
    3. 'for' → logprob: -2.7316815853118896
    4. ' for' → logprob: -3.3566815853118896
    5. ' =' → logprob: -5.106681823730469
    6. '
' → logprob: -5.356681823730469
    7. '=' → logprob: -5.981681823730469
    8. 'with' → logprob: -6.356681823730469
    9. '```' → logprob: -6.356681823730469
    10. ',
' → logprob: -6.856681823730469

Token 2168: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5236368179321289
    2. 'd' → logprob: -1.648636817932129
    3. ',' → logprob: -2.523636817932129
    4. 'for' → logprob: -3.148636817932129
    5. 'dist' → logprob: -4.273636817932129
    6. '])' → logprob: -4.523636817932129
    7. ']' → logprob: -4.898636817932129
    8. 'nd' → logprob: -4.898636817932129
    9. ')]' → logprob: -5.023636817932129
    10. 'route' → logprob: -5.523636817932129

Token 2169: 'A' (ID: 32)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.08747599273920059
    2. 'A' → logprob: -2.5874760150909424
    3. '_' → logprob: -6.087475776672363
    4. 'ist' → logprob: -6.712475776672363
    5. '_prefix' → logprob: -7.087475776672363
    6. 'points' → logprob: -7.087475776672363
    7. ')' → logprob: -7.212475776672363
    8. '   ' → logprob: -7.337475776672363
    9. 'istance' → logprob: -8.087475776672363
    10. ',' → logprob: -8.337475776672363

Token 2170: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007217795588076115
    2. ',d' → logprob: -5.382217884063721
    3. ')' → logprob: -6.507217884063721
    4. ' ,' → logprob: -8.132217407226562
    5. '),' → logprob: -8.382217407226562
    6. '       ' → logprob: -9.132217407226562
    7. '           ' → logprob: -9.382217407226562
    8. ',
' → logprob: -9.882217407226562
    9. 'for' → logprob: -10.257217407226562
    10. '[' → logprob: -10.257217407226562

Token 2171: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06793471425771713
    2. 'A' → logprob: -2.81793475151062
    3. '_prefix' → logprob: -5.942934513092041
    4. 'istance' → logprob: -6.692934513092041
    5. '_points' → logprob: -7.817934513092041
    6. ',' → logprob: -7.942934513092041
    7. ')' → logprob: -8.0679349899292
    8. 'ist' → logprob: -8.6929349899292
    9. '),' → logprob: -8.8179349899292
    10. '_' → logprob: -9.1929349899292

Token 2172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0837249904870987
    2. ')
' → logprob: -2.7087249755859375
    3. ',' → logprob: -5.3337249755859375
    4. '       ' → logprob: -5.5837249755859375
    5. '):
' → logprob: -6.2087249755859375
    6. '),' → logprob: -6.7087249755859375
    7. '):' → logprob: -8.833724975585938
    8. 'with' → logprob: -8.833724975585938
    9. '])' → logprob: -8.833724975585938
    10. ' with' → logprob: -8.958724975585938

Token 2173: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07179612666368484
    2. 'for' → logprob: -3.446796178817749
    3. ' for' → logprob: -3.946796178817749
    4. '
' → logprob: -4.44679594039917
    5. ',' → logprob: -6.07179594039917
    6. ' =' → logprob: -6.19679594039917
    7. '=' → logprob: -7.94679594039917
    8. '```' → logprob: -8.071796417236328
    9. 'all' → logprob: -8.446796417236328
    10. ')' → logprob: -8.821796417236328

Token 2174: ' alt' (ID: 5001)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.012418531812727451
    2. 'math' → logprob: -4.762418746948242
    3. 'self' → logprob: -6.387418746948242
    4. 'd' → logprob: -6.762418746948242
    5. '
' → logprob: -7.762418746948242
    6. ' abs' → logprob: -8.387418746948242
    7. 'all' → logprob: -9.512418746948242
    8. '(abs' → logprob: -9.762418746948242
    9. 'True' → logprob: -10.137418746948242
    10. 'route' → logprob: -10.387418746948242

Token 2175: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.43163013458251953
    2. 'itudes' → logprob: -1.0566301345825195
    3. '=' → logprob: -6.5566301345825195
    4. 'it' → logprob: -8.30663013458252
    5. '=[]' → logprob: -8.80663013458252
    6. '```' → logprob: -8.80663013458252
    7. '_points' → logprob: -9.05663013458252
    8. 'ude' → logprob: -9.30663013458252
    9. '
' → logprob: -9.30663013458252
    10. '=[' → logprob: -9.55663013458252

Token 2176: ' equal' (ID: 12629)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.5038467645645142
    2. 'equal' → logprob: -1.8788467645645142
    3. 'are' → logprob: -2.0038466453552246
    4. ' match' → logprob: -2.8788466453552246
    5. ' are' → logprob: -4.253846645355225
    6. '_match' → logprob: -4.253846645355225
    7. ' equal' → logprob: -4.753846645355225
    8. '       ' → logprob: -5.378846645355225
    9. '_equal' → logprob: -5.753846645355225
    10. '
' → logprob: -5.878846645355225

Token 2177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037506215274333954
    2. ' for' → logprob: -4.287506103515625
    3. '
' → logprob: -4.537506103515625
    4. 'for' → logprob: -4.787506103515625
    5. ',' → logprob: -6.037506103515625
    6. ' =' → logprob: -7.912506103515625
    7. '```' → logprob: -8.662506103515625
    8. ')' → logprob: -8.787506103515625
    9. ' and' → logprob: -8.912506103515625
    10. ',
' → logprob: -9.287506103515625

Token 2178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007482792134396732
    2. 'for' → logprob: -7.875748157501221
    3. ' for' → logprob: -8.750748634338379
    4. '
' → logprob: -9.000748634338379
    5. ',' → logprob: -9.875748634338379
    6. '        
' → logprob: -11.375748634338379
    7. '           ' → logprob: -12.250748634338379
    8. ')' → logprob: -12.375748634338379
    9. '```' → logprob: -12.500748634338379
    10. ',
' → logprob: -13.250748634338379

Token 2179: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9561567306518555
    2. '       ' → logprob: -1.2061567306518555
    3. 'candidate' → logprob: -1.9561567306518555
    4. 'equal' → logprob: -2.7061567306518555
    5. 'all' → logprob: -3.0811567306518555
    6. 'for' → logprob: -3.9561567306518555
    7. 'valid' → logprob: -4.4561567306518555
    8. 'possible' → logprob: -4.4561567306518555
    9. 'pairs' → logprob: -4.7061567306518555
    10. 'states' → logprob: -5.9561567306518555

Token 2180: '_states' (ID: 53795)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4295364320278168
    2. ' =' → logprob: -1.0545364618301392
    3. '=[]' → logprob: -7.55453634262085
    4. '=[]
' → logprob: -8.929536819458008
    5. '=set' → logprob: -9.179536819458008
    6. '=
' → logprob: -10.929536819458008
    7. '_set' → logprob: -11.179536819458008
    8. '_pairs' → logprob: -11.304536819458008
    9. '_candidates' → logprob: -11.679536819458008
    10. ',' → logprob: -12.429536819458008

Token 2181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762993693351746
    2. '=' → logprob: -0.8262993693351746
    3. '=[]' → logprob: -8.076299667358398
    4. '=[]
' → logprob: -10.576299667358398
    5. ':' → logprob: -11.951299667358398
    6. '=[' → logprob: -12.326299667358398
    7. ',' → logprob: -12.951299667358398
    8. '=set' → logprob: -13.201299667358398
    9. '=[
' → logprob: -13.451299667358398
    10. '[]' → logprob: -13.576299667358398

Token 2182: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.006029046140611172
    2. '[]' → logprob: -5.25602912902832
    3. '[
' → logprob: -7.50602912902832
    4. '[(' → logprob: -8.50602912902832
    5. '[]

' → logprob: -10.75602912902832
    6. 'set' → logprob: -11.00602912902832
    7. ' []
' → logprob: -12.38102912902832
    8. '{}
' → logprob: -15.25602912902832
    9. '[' → logprob: -15.38102912902832
    10. '[])
' → logprob: -15.50602912902832

Token 2183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07230569422245026
    2. 'for' → logprob: -2.697305679321289
    3. ' for' → logprob: -6.072305679321289
    4. '           ' → logprob: -10.697305679321289
    5. '   ' → logprob: -12.072305679321289
    6. ')' → logprob: -12.447305679321289
    7. '               ' → logprob: -12.447305679321289
    8. ',' → logprob: -12.572305679321289
    9. '```' → logprob: -12.572305679321289
    10. '[' → logprob: -12.697305679321289

Token 2184: ' altitude' (ID: 66032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009193199803121388
    2. '       ' → logprob: -7.000919342041016
    3. ' for' → logprob: -11.875919342041016
    4. '           ' → logprob: -14.875919342041016
    5. '```' → logprob: -15.375919342041016
    6. '   ' → logprob: -16.125919342041016
    7. '
' → logprob: -17.000919342041016
    8. '               ' → logprob: -17.375919342041016
    9. '	for' → logprob: -18.375919342041016
    10. '``' → logprob: -18.500919342041016

Token 2185: '_map' (ID: 11824)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0662192106246948
    2. '_equal' → logprob: -1.3162192106246948
    3. '_map' → logprob: -1.4412192106246948
    4. 's' → logprob: -2.6912193298339844
    5. '_states' → logprob: -3.6912193298339844
    6. '_matches' → logprob: -4.191219329833984
    7. '_tol' → logprob: -4.316219329833984
    8. '_at' → logprob: -5.191219329833984
    9. '_pairs' → logprob: -5.441219329833984
    10. '_t' → logprob: -5.566219329833984

Token 2186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3504492938518524
    2. '=' → logprob: -1.2254493236541748
    3. ':' → logprob: -6.350449085235596
    4. '={}' → logprob: -9.350449562072754
    5. '={' → logprob: -9.600449562072754
    6. '={}
' → logprob: -10.225449562072754
    7. '.setdefault' → logprob: -11.475449562072754
    8. '{' → logprob: -11.725449562072754
    9. ',' → logprob: -12.100449562072754
    10. ')' → logprob: -12.225449562072754

Token 2187: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.026441028341650963
    2. '{}
' → logprob: -3.7764410972595215
    3. 'dict' → logprob: -5.7764410972595215
    4. '{' → logprob: -9.651440620422363
    5. '{}

' → logprob: -11.276440620422363
    6. ' dict' → logprob: -11.901440620422363
    7. ' {}' → logprob: -12.526440620422363
    8. ' {}
' → logprob: -14.151440620422363
    9. '={}' → logprob: -14.276440620422363
    10. '{})' → logprob: -14.776440620422363

Token 2188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.388143390417099
    2. 'for' → logprob: -1.3881434202194214
    3. ' for' → logprob: -2.638143301010132
    4. '
' → logprob: -8.138143539428711
    5. '               ' → logprob: -9.638143539428711
    6. '           ' → logprob: -9.888143539428711
    7. '```' → logprob: -10.138143539428711
    8. '   ' → logprob: -10.638143539428711
    9. ' =' → logprob: -10.763143539428711
    10. ',' → logprob: -10.888143539428711

Token 2189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004925616085529327
    2. '       ' → logprob: -5.629925727844238
    3. ' for' → logprob: -6.629925727844238
    4. '```' → logprob: -13.379925727844238
    5. 'points' → logprob: -13.629925727844238
    6. '#' → logprob: -14.754925727844238
    7. '   ' → logprob: -15.504925727844238
    8. '	for' → logprob: -15.629925727844238
    9. '
' → logprob: -15.879925727844238
    10. '           ' → logprob: -16.004924774169922

Token 2190: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18978676199913025
    2. 'dist' → logprob: -1.9397867918014526
    3. 'i' → logprob: -4.064786911010742
    4. 'da' → logprob: -4.939786911010742
    5. 'p' → logprob: -6.564786911010742
    6. 'pt' → logprob: -6.939786911010742
    7. 'pd' → logprob: -7.314786911010742
    8. 'pa' → logprob: -7.314786911010742
    9. 'dp' → logprob: -7.564786911010742
    10. 'a' → logprob: -8.814786911010742

Token 2191: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5324812531471252
    2. ' in' → logprob: -1.9074811935424805
    3. 'ist' → logprob: -2.2824811935424805
    4. 'pt' → logprob: -2.7824811935424805
    5. 'in' → logprob: -3.1574811935424805
    6. 'p' → logprob: -3.2824811935424805
    7. 'istance' → logprob: -5.1574811935424805
    8. 'a' → logprob: -5.2824811935424805
    9. '_point' → logprob: -5.5324811935424805
    10. '_pt' → logprob: -6.7824811935424805

Token 2192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.282516211271286
    2. 'in' → logprob: -1.5325162410736084
    3. ',' → logprob: -3.5325162410736084
    4. '_in' → logprob: -8.282516479492188
    5. '_idx' → logprob: -8.657516479492188
    6. '_index' → logprob: -9.407516479492188
    7. ')' → logprob: -9.907516479492188
    8. ',d' → logprob: -9.907516479492188
    9. 'dist' → logprob: -10.157516479492188
    10. ' ,' → logprob: -10.407516479492188

Token 2193: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -1.2113979209971149e-05
    2. ' route' → logprob: -11.750012397766113
    3. 'self' → logprob: -12.625012397766113
    4. 'range' → logprob: -14.125012397766113
    5. '(route' → logprob: -16.500011444091797
    6. '$route' → logprob: -17.000011444091797
    7. '[' → logprob: -17.375011444091797
    8. 'rule' → logprob: -17.500011444091797
    9. '   ' → logprob: -18.500011444091797
    10. 'router' → logprob: -18.875011444091797

Token 2194: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00013798571308143437
    2. '       ' → logprob: -9.750138282775879
    3. 'points' → logprob: -10.750138282775879
    4. 'Points' → logprob: -11.375138282775879
    5. '           ' → logprob: -11.750138282775879
    6. '   ' → logprob: -11.750138282775879
    7. '_POINTS' → logprob: -12.125138282775879
    8. '```' → logprob: -12.750138282775879
    9. '.points' → logprob: -13.000138282775879
    10. 'd' → logprob: -13.000138282775879

Token 2195: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7039471864700317
    2. ':' → logprob: -0.8289471864700317
    3. '           ' → logprob: -2.703947067260742
    4. ',' → logprob: -7.453947067260742
    5. '       ' → logprob: -7.703947067260742
    6. '   ' → logprob: -8.203947067260742
    7. ' for' → logprob: -8.578947067260742
    8. '               ' → logprob: -9.578947067260742
    9. '.' → logprob: -10.078947067260742
    10. '=' → logprob: -10.078947067260742

Token 2196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008973917923867702
    2. ' for' → logprob: -5.008974075317383
    3. '   ' → logprob: -6.133974075317383
    4. 'for' → logprob: -9.883974075317383
    5. '       ' → logprob: -11.008974075317383
    6. '               ' → logprob: -12.133974075317383
    7. '```' → logprob: -12.258974075317383
    8. ',' → logprob: -13.008974075317383
    9. ':' → logprob: -13.383974075317383
    10. ' and' → logprob: -13.383974075317383

Token 2197: ' altitude' (ID: 66032)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7513733506202698
    2. 'for' → logprob: -0.8763733506202698
    3. '           ' → logprob: -2.876373291015625
    4. '   ' → logprob: -3.001373291015625
    5. '               ' → logprob: -6.376373291015625
    6. ' alt' → logprob: -6.626373291015625
    7. '       ' → logprob: -6.626373291015625
    8. 'alt' → logprob: -6.751373291015625
    9. ' ' → logprob: -9.126373291015625
    10. '	for' → logprob: -9.376373291015625

Token 2198: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.01138719730079174
    2. 'A' → logprob: -4.886387348175049
    3. '=' → logprob: -6.136387348175049
    4. ' =' → logprob: -7.136387348175049
    5. 'map' → logprob: -7.886387348175049
    6. '_at' → logprob: -8.38638687133789
    7. '_key' → logprob: -9.63638687133789
    8. '_alt' → logprob: -9.76138687133789
    9. '_val' → logprob: -10.51138687133789
    10. 'at' → logprob: -11.26138687133789

Token 2199: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.014758619479835033
    2. '[' → logprob: -4.514758586883545
    3. '=' → logprob: -6.514758586883545
    4. ' =' → logprob: -7.014758586883545
    5. 'd' → logprob: -7.264758586883545
    6. '[
' → logprob: -8.514759063720703
    7. '=d' → logprob: -8.764759063720703
    8. '   ' → logprob: -10.014759063720703
    9. '[(' → logprob: -10.514759063720703
    10. '[self' → logprob: -10.639759063720703

Token 2200: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.236549335066229e-05
    2. '=' → logprob: -12.125021934509277
    3. 'a' → logprob: -12.500021934509277
    4. 'd' → logprob: -12.750021934509277
    5. ']' → logprob: -13.375021934509277
    6. 'istance' → logprob: -13.937521934509277
    7. 'B' → logprob: -14.000021934509277
    8. 'А' → logprob: -14.062521934509277
    9. ' A' → logprob: -15.187521934509277
    10. 'ist' → logprob: -15.250021934509277

Token 2201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021373888477683067
    2. ']=' → logprob: -4.146373748779297
    3. '=' → logprob: -5.521373748779297
    4. ' ]' → logprob: -7.146373748779297
    5. ' =' → logprob: -7.646373748779297
    6. ')' → logprob: -10.521373748779297
    7. '   ' → logprob: -12.021373748779297
    8. 'd' → logprob: -12.646373748779297
    9. ',' → logprob: -13.146373748779297
    10. ']=(' → logprob: -13.146373748779297

Token 2202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005936978850513697
    2. ' =' → logprob: -5.130937099456787
    3. ']' → logprob: -12.130936622619629
    4. ']=' → logprob: -13.505936622619629
    5. '=self' → logprob: -14.380936622619629
    6. '=
' → logprob: -15.005936622619629
    7. ')' → logprob: -15.005936622619629
    8. '=float' → logprob: -16.130937576293945
    9. '=

' → logprob: -16.505937576293945
    10. '=}' → logprob: -16.755937576293945

Token 2203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023202638840302825
    2. ' self' → logprob: -8.375231742858887
    3. '[self' → logprob: -14.000231742858887
    4. '
' → logprob: -15.000231742858887
    5. '(self' → logprob: -16.625232696533203
    6. '	self' → logprob: -17.000232696533203
    7. '=self' → logprob: -17.500232696533203
    8. '[' → logprob: -17.875232696533203
    9. 'd' → logprob: -18.125232696533203
    10. '   ' → logprob: -18.125232696533203

Token 2204: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.002202240051701665
    2. 'route' → logprob: -6.127202033996582
    3. '$route' → logprob: -11.502202033996582
    4. 'e' → logprob: -13.127202033996582
    5. '```' → logprob: -13.627202033996582
    6. 'alt' → logprob: -13.752202033996582
    7. '.alt' → logprob: -14.252202033996582
    8. '
' → logprob: -15.002202033996582
    9. '(route' → logprob: -15.252202033996582
    10. '.' → logprob: -15.752202033996582

Token 2205: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -0.0003305784775875509
    2. 'alt' → logprob: -8.125330924987793
    3. '_alt' → logprob: -10.500330924987793
    4. '```' → logprob: -13.125330924987793
    5. ' .' → logprob: -13.875330924987793
    6. '.' → logprob: -14.125330924987793
    7. 'Altitude' → logprob: -14.625330924987793
    8. ' altitude' → logprob: -14.750330924987793
    9. '.point' → logprob: -14.750330924987793
    10. '.height' → logprob: -14.875330924987793

Token 2206: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.0016034134896472096
    2. 'at' → logprob: -7.626603603363037
    3. 'ude' → logprob: -7.751603603363037
    4. '_at' → logprob: -8.001603126525879
    5. 'ut' → logprob: -9.126603126525879
    6. '       ' → logprob: -9.876603126525879
    7. 'ute' → logprob: -10.376603126525879
    8. '   ' → logprob: -11.126603126525879
    9. 't' → logprob: -11.251603126525879
    10. 'At' → logprob: -11.251603126525879

Token 2207: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.927930654550437e-05
    2. '_map' → logprob: -10.625029563903809
    3. 'At' → logprob: -13.375029563903809
    4. 'at' → logprob: -13.500029563903809
    5. '
' → logprob: -14.750029563903809
    6. '_' → logprob: -15.375029563903809
    7. 's' → logprob: -15.375029563903809
    8. '   ' → logprob: -15.500029563903809
    9. 'map' → logprob: -15.750029563903809
    10. '	at' → logprob: -16.125028610229492

Token 2208: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.5760593414306641
    2. 'distance' → logprob: -0.8260593414306641
    3. 'Distance' → logprob: -9.576059341430664
    4. 'd' → logprob: -10.201059341430664
    5. '(distance' → logprob: -12.576059341430664
    6. ' distance' → logprob: -12.701059341430664
    7. 'dist' → logprob: -12.826059341430664
    8. 'at' → logprob: -13.201059341430664
    9. '_DISTANCE' → logprob: -13.826059341430664
    10. '_at' → logprob: -14.826059341430664

Token 2209: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.004100842867046595
    2. 'd' → logprob: -5.504100799560547
    3. '[d' → logprob: -11.379100799560547
    4. '(' → logprob: -11.879100799560547
    5. '(round' → logprob: -13.754100799560547
    6. '```' → logprob: -14.129100799560547
    7. ' (' → logprob: -14.629100799560547
    8. '(distance' → logprob: -14.879100799560547
    9. ' d' → logprob: -15.004100799560547
    10. '(
' → logprob: -15.254100799560547

Token 2210: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.749814019713085e-06
    2. ')' → logprob: -12.875006675720215
    3. '(d' → logprob: -13.125006675720215
    4. '(' → logprob: -15.000006675720215
    5. 'А' → logprob: -15.625006675720215
    6. '=' → logprob: -15.625006675720215
    7. '
' → logprob: -15.750006675720215
    8. '(A' → logprob: -15.750006675720215
    9. ')
' → logprob: -15.875006675720215
    10. '   ' → logprob: -15.875006675720215

Token 2211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16299670934677124
    2. ')
' → logprob: -1.912996768951416
    3. '       ' → logprob: -5.912996768951416
    4. '   ' → logprob: -11.162996292114258
    5. ')
' → logprob: -11.162996292114258
    6. ')

' → logprob: -11.287996292114258
    7. '           ' → logprob: -11.537996292114258
    8. ' )' → logprob: -12.412996292114258
    9. ' )
' → logprob: -13.537996292114258
    10. '))' → logprob: -13.787996292114258

Token 2212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08036207407712936
    2. ' for' → logprob: -2.70536208152771
    3. 'for' → logprob: -4.955361843109131
    4. '           ' → logprob: -5.830361843109131
    5. '
' → logprob: -8.705362319946289
    6. '```' → logprob: -8.955362319946289
    7. ',' → logprob: -9.955362319946289
    8. '   ' → logprob: -11.080362319946289
    9. '<|end|>' → logprob: -12.080362319946289
    10. '>' → logprob: -12.955362319946289

Token 2213: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06215612590312958
    2. 'for' (adapté à ' for') → logprob: -3.0621562004089355
    3. ' for' → logprob: -4.3121562004089355
    4. '           ' → logprob: -10.062155723571777
    5. '
' → logprob: -11.187155723571777
    6. '   ' → logprob: -11.812155723571777
    7. '```' → logprob: -12.312155723571777
    8. '        
' → logprob: -13.562155723571777
    9. 'For' → logprob: -14.562155723571777
    10. ' alt' → logprob: -14.937155723571777

Token 2214: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03372223675251007
    2. ' d' → logprob: -3.408722162246704
    3. 'nd' → logprob: -10.283721923828125
    4. '       ' → logprob: -11.283721923828125
    5. '   ' → logprob: -11.533721923828125
    6. 'i' → logprob: -12.783721923828125
    7. ' nd' → logprob: -13.033721923828125
    8. '	d' → logprob: -13.033721923828125
    9. '           ' → logprob: -13.283721923828125
    10. 'dist' → logprob: -13.596221923828125

Token 2215: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018187405541539192
    2. 'A' → logprob: -4.018187522888184
    3. '_B' → logprob: -10.768187522888184
    4. 'd' → logprob: -12.393187522888184
    5. '_A' → logprob: -13.143187522888184
    6. ' in' → logprob: -13.518187522888184
    7. '_d' → logprob: -13.893187522888184
    8. 'a' → logprob: -13.955687522888184
    9. ' B' → logprob: -14.018187522888184
    10. '_b' → logprob: -14.268187522888184

Token 2216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007619052659720182
    2. 'in' → logprob: -4.8826189041137695
    3. '	in' → logprob: -12.50761890411377
    4. ' ' → logprob: -12.63261890411377
    5. '   ' → logprob: -13.13261890411377
    6. '_in' → logprob: -13.63261890411377
    7. 'import' → logprob: -14.38261890411377
    8. 'd' → logprob: -14.75761890411377
    9. ' ' → logprob: -15.13261890411377
    10. '  ' → logprob: -15.50761890411377

Token 2217: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.0025019366294145584
    2. ' route' → logprob: -6.002501964569092
    3. 'self' → logprob: -10.752501487731934
    4. 'range' → logprob: -13.377501487731934
    5. '   ' → logprob: -13.627501487731934
    6. '(route' → logprob: -14.002501487731934
    7. '[' → logprob: -14.752501487731934
    8. '$route' → logprob: -15.377501487731934
    9. '       ' → logprob: -15.877501487731934
    10. ' ' → logprob: -16.00250244140625

Token 2218: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.012259919196367264
    2. ' in' → logprob: -5.6372599601745605
    3. 'points' → logprob: -5.8872599601745605
    4. 'in' → logprob: -5.8872599601745605
    5. '       ' → logprob: -6.1372599601745605
    6. 'prefix' → logprob: -8.012259483337402
    7. 'Points' → logprob: -8.762259483337402
    8. '_POINTS' → logprob: -9.512259483337402
    9. 'self' → logprob: -9.887259483337402
    10. '   ' → logprob: -10.012259483337402

Token 2219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23483343422412872
    2. '           ' → logprob: -2.2348334789276123
    3. ':
' → logprob: -2.6098334789276123
    4. ' in' → logprob: -4.484833240509033
    5. ',' → logprob: -5.484833240509033
    6. 'in' → logprob: -5.734833240509033
    7. '<|end|>' → logprob: -5.734833240509033
    8. '       ' → logprob: -6.359833240509033
    9. '[' → logprob: -6.734833240509033
    10. '=' → logprob: -7.734833240509033

Token 2220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019662656995933503
    2. '       ' → logprob: -9.37519645690918
    3. ' for' → logprob: -10.25019645690918
    4. ':' → logprob: -10.75019645690918
    5. '               ' → logprob: -11.00019645690918
    6. '   ' → logprob: -11.87519645690918
    7. '```' → logprob: -12.37519645690918
    8. '...' → logprob: -12.50019645690918
    9. ':
' → logprob: -12.50019645690918
    10. ',' → logprob: -12.62519645690918

Token 2221: ' altitude' (ID: 66032)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.05125012248754501
    2. '           ' → logprob: -3.6762502193450928
    3. '       ' → logprob: -4.676249980926514
    4. 'if' → logprob: -5.301249980926514
    5. 'for' → logprob: -5.426249980926514
    6. '   ' → logprob: -5.676249980926514
    7. ' altitude' → logprob: -6.551249980926514
    8. '               ' → logprob: -7.801249980926514
    9. ' alt' → logprob: -9.051250457763672
    10. '_alt' → logprob: -9.426250457763672

Token 2222: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.77627644513268e-06
    2. 'map' → logprob: -12.625008583068848
    3. 'Map' → logprob: -13.625008583068848
    4. 'A' → logprob: -14.125008583068848
    5. '_at' → logprob: -14.250008583068848
    6. '=' → logprob: -14.250008583068848
    7. 'equal' → logprob: -14.500008583068848
    8. 'B' → logprob: -14.750008583068848
    9. '_equal' → logprob: -15.125008583068848
    10. '_' → logprob: -15.750008583068848

Token 2223: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.009947206825017929
    2. '[self' → logprob: -4.759947299957275
    3. 'd' → logprob: -7.259947299957275
    4. '[' → logprob: -8.259946823120117
    5. 'self' → logprob: -8.509946823120117
    6. '
' → logprob: -10.259946823120117
    7. '_d' → logprob: -10.634946823120117
    8. '[
' → logprob: -10.634946823120117
    9. '=d' → logprob: -11.509946823120117
    10. '.setdefault' → logprob: -11.634946823120117

Token 2224: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.774276774493046e-05
    2. 'A' → logprob: -11.250038146972656
    3. ']' → logprob: -12.250038146972656
    4. '=' → logprob: -12.250038146972656
    5. 'b' → logprob: -12.625038146972656
    6. 'd' → logprob: -12.875038146972656
    7. 'D' → logprob: -13.750038146972656
    8. '
' → logprob: -13.875038146972656
    9. '[' → logprob: -14.000038146972656
    10. '```' → logprob: -14.250038146972656

Token 2225: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17468491196632385
    2. '=' → logprob: -2.299685001373291
    3. ' =' → logprob: -3.299685001373291
    4. ']=' → logprob: -3.924685001373291
    5. ' ]' → logprob: -6.424685001373291
    6. '   ' → logprob: -7.549685001373291
    7. ')' → logprob: -8.924684524536133
    8. '
' → logprob: -9.549684524536133
    9. '==' → logprob: -9.549684524536133
    10. '[' → logprob: -9.549684524536133

Token 2226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15631774067878723
    2. ' self' → logprob: -2.406317710876465
    3. '0' → logprob: -4.031317710876465
    4. ']' → logprob: -4.031317710876465
    5. ')' → logprob: -5.406317710876465
    6. ' =' → logprob: -5.531317710876465
    7. '   ' → logprob: -6.156317710876465
    8. ' ' → logprob: -6.906317710876465
    9. '=' → logprob: -6.906317710876465
    10. '(self' → logprob: -6.906317710876465

Token 2227: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.00021188464597798884
    2. 'L' → logprob: -9.000211715698242
    3. 'route' → logprob: -10.125211715698242
    4. '.route' → logprob: -10.750211715698242
    5. 'self' → logprob: -11.875211715698242
    6. '.length' → logprob: -13.125211715698242
    7. '_L' → logprob: -13.250211715698242
    8. '	L' → logprob: -13.375211715698242
    9. '.' → logprob: -13.875211715698242
    10. '].' → logprob: -14.125211715698242

Token 2228: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023909909650683403
    2. '-' → logprob: -6.8773908615112305
    3. ']=' → logprob: -7.1273908615112305
    4. ' ]' → logprob: -8.25239086151123
    5. ' -' → logprob: -8.75239086151123
    6. '   ' → logprob: -9.62739086151123
    7. '       ' → logprob: -11.25239086151123
    8. '/' → logprob: -11.62739086151123
    9. ')]' → logprob: -11.75239086151123
    10. ')' → logprob: -11.75239086151123

Token 2229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43879494071006775
    2. 'self' → logprob: -1.6887949705123901
    3. '1' → logprob: -2.0637948513031006
    4. ']' → logprob: -3.8137948513031006
    5. ' self' → logprob: -4.81379508972168
    6. ' ' → logprob: -5.56379508972168
    7. '=' → logprob: -6.31379508972168
    8. '...' → logprob: -6.31379508972168
    9. ']=' → logprob: -6.81379508972168
    10. ')' → logprob: -7.56379508972168

Token 2230: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0648638010025024
    2. '1' → logprob: -1.1898638010025024
    3. '0' → logprob: -1.4398638010025024
    4. 'd' → logprob: -2.314863681793213
    5. ' self' → logprob: -5.189863681793213
    6. '100' → logprob: -6.564863681793213
    7. ' ' → logprob: -6.689863681793213
    8. '10' → logprob: -6.814863681793213
    9. '.' → logprob: -7.189863681793213
    10. 'b' → logprob: -7.439863681793213

Token 2231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021301566157490015
    2. ']=' → logprob: -6.377130031585693
    3. ' ]' → logprob: -9.627130508422852
    4. '=' → logprob: -9.627130508422852
    5. ')' → logprob: -10.252130508422852
    6. '"]' → logprob: -10.502130508422852
    7. '']' → logprob: -10.502130508422852
    8. '0' → logprob: -10.502130508422852
    9. ' =' → logprob: -10.627130508422852
    10. '`]' → logprob: -10.877130508422852

Token 2232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47714903950691223
    2. ' =' → logprob: -0.9771490097045898
    3. ']' → logprob: -5.85214900970459
    4. ']=' → logprob: -8.72714900970459
    5. ')' → logprob: -10.85214900970459
    6. '=self' → logprob: -12.85214900970459
    7. '   ' → logprob: -13.10214900970459
    8. ' ' → logprob: -13.47714900970459
    9. ')=' → logprob: -13.97714900970459
    10. ' ]' → logprob: -14.10214900970459

Token 2233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004160145472269505
    2. ' self' → logprob: -8.500415802001953
    3. 'None' → logprob: -9.375415802001953
    4. 'alt' → logprob: -9.500415802001953
    5. 'float' → logprob: -10.500415802001953
    6. '0' → logprob: -11.750415802001953
    7. '   ' → logprob: -11.875415802001953
    8. '-' → logprob: -12.750415802001953
    9. '-alt' → logprob: -13.875415802001953
    10. '-self' → logprob: -13.875415802001953

Token 2234: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.02331652119755745
    2. 'route' → logprob: -3.7733166217803955
    3. '$route' → logprob: -10.773316383361816
    4. '.' → logprob: -11.273316383361816
    5. 'alt' → logprob: -11.648316383361816
    6. '_route' → logprob: -12.148316383361816
    7. '.alt' → logprob: -12.273316383361816
    8. '...' → logprob: -12.648316383361816
    9. '```' → logprob: -12.773316383361816
    10. '
' → logprob: -13.648316383361816

Token 2235: '.alt' (ID: 100467)
  Prédit: '.alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.alt' → logprob: -9.901345038088039e-05
    2. '.length' → logprob: -9.750099182128906
    3. 'alt' → logprob: -10.375099182128906
    4. '_alt' → logprob: -12.375099182128906
    5. 'length' → logprob: -13.500099182128906
    6. '.height' → logprob: -13.875099182128906
    7. '.points' → logprob: -14.250099182128906
    8. '```' → logprob: -15.375099182128906
    9. '   ' → logprob: -15.500099182128906
    10. '.point' → logprob: -16.000099182128906

Token 2236: 'itude' (ID: 5962)
  Prédit: 'itude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.20869821310043335
    2. 'ude' → logprob: -1.8336982727050781
    3. '_at' → logprob: -3.708698272705078
    4. 'at' → logprob: -6.333698272705078
    5. 'ute' → logprob: -7.208698272705078
    6. 'ut' → logprob: -8.208698272705078
    7. '       ' → logprob: -8.708698272705078
    8. 't' → logprob: -8.958698272705078
    9. '   ' → logprob: -9.083698272705078
    10. 'itud' → logprob: -9.708698272705078

Token 2237: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -8.506661833962426e-05
    2. '_map' → logprob: -9.75008487701416
    3. 'map' → logprob: -11.50008487701416
    4. 'At' → logprob: -12.50008487701416
    5. 'at' → logprob: -12.62508487701416
    6. '   ' → logprob: -13.37508487701416
    7. '+' → logprob: -13.87508487701416
    8. '_' → logprob: -14.00008487701416
    9. 'Map' → logprob: -14.25008487701416
    10. 's' → logprob: -14.62508487701416

Token 2238: '_distance' (ID: 45537)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5777301788330078
    2. '_distance' → logprob: -0.8277301788330078
    3. 'self' → logprob: -7.327730178833008
    4. 'd' → logprob: -7.702730178833008
    5. 'B' → logprob: -7.952730178833008
    6. 'Distance' → logprob: -8.702730178833008
    7. '0' → logprob: -10.452730178833008
    8. '-distance' → logprob: -10.452730178833008
    9. '
' → logprob: -10.702730178833008
    10. 'dist' → logprob: -11.077730178833008

Token 2239: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0027045428287237883
    2. 'self' → logprob: -6.002704620361328
    3. '(' → logprob: -8.502704620361328
    4. '((' → logprob: -11.127704620361328
    5. ' self' → logprob: -12.377704620361328
    6. '(
' → logprob: -13.002704620361328
    7. '(L' → logprob: -13.627704620361328
    8. ' (' → logprob: -14.002704620361328
    9. '(abs' → logprob: -14.252704620361328
    10. '(d' → logprob: -14.752704620361328

Token 2240: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.006790325045585632
    2. 'self' → logprob: -5.6317901611328125
    3. 'L' → logprob: -5.7567901611328125
    4. ' self' → logprob: -12.381790161132812
    5. '.B' → logprob: -12.381790161132812
    6. '.' → logprob: -12.756790161132812
    7. 'length' → logprob: -13.506790161132812
    8. ' ' → logprob: -13.631790161132812
    9. '(L' → logprob: -14.256790161132812
    10. 'route' → logprob: -14.381790161132812

Token 2241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1427648663520813
    2. '-' → logprob: -2.0177648067474365
    3. ' ' → logprob: -10.142765045166016
    4. '-b' → logprob: -11.142765045166016
    5. '-B' → logprob: -11.392765045166016
    6. '-d' → logprob: -11.392765045166016
    7. ' ' → logprob: -12.392765045166016
    8. ' -
' → logprob: -13.892765045166016
    9. '-
' → logprob: -14.017765045166016
    10. ')' → logprob: -14.017765045166016

Token 2242: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002458430244587362
    2. ' d' → logprob: -8.375246047973633
    3. 'b' → logprob: -11.125246047973633
    4. '   ' → logprob: -15.000246047973633
    5. 'dist' → logprob: -16.125246047973633
    6. 'B' → logprob: -16.875246047973633
    7. '_d' → logprob: -17.125246047973633
    8. '	d' → logprob: -17.375246047973633
    9. ')d' → logprob: -17.500246047973633
    10. '(d' → logprob: -19.125246047973633

Token 2243: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4736459888808895e-05
    2. 'A' → logprob: -11.500014305114746
    3. 'Б' → logprob: -14.250014305114746
    4. '
' → logprob: -14.812514305114746
    5. ' B' → logprob: -14.812514305114746
    6. '```' → logprob: -14.937514305114746
    7. '_B' → logprob: -15.062514305114746
    8. ')' → logprob: -15.500014305114746
    9. '	B' → logprob: -15.937514305114746
    10. 'L' → logprob: -15.937514305114746

Token 2244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007678175461478531
    2. ')
' → logprob: -7.500767707824707
    3. '       ' → logprob: -9.250767707824707
    4. ')}' → logprob: -9.375767707824707
    5. ' )' → logprob: -11.000767707824707
    6. '}' → logprob: -12.375767707824707
    7. '           ' → logprob: -12.500767707824707
    8. '   ' → logprob: -12.875767707824707
    9. '})' → logprob: -13.375767707824707
    10. '))' → logprob: -14.000767707824707

Token 2245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029433518648147583
    2. '
' → logprob: -6.377943515777588
    3. '<|end|>' → logprob: -7.252943515777588
    4. '           ' → logprob: -8.62794303894043
    5. 'for' → logprob: -9.62794303894043
    6. ' for' → logprob: -9.75294303894043
    7. ')' → logprob: -9.75294303894043
    8. '        
' → logprob: -9.87794303894043
    9. ',' → logprob: -10.00294303894043
    10. '.' → logprob: -11.00294303894043

Token 2246: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010918129235506058
    2. '
' → logprob: -4.635918140411377
    3. ' for' → logprob: -7.635918140411377
    4. 'for' → logprob: -7.635918140411377
    5. '```' → logprob: -9.510917663574219
    6. '        
' → logprob: -9.760917663574219
    7. ',' → logprob: -11.260917663574219
    8. '<|end|>' → logprob: -11.260917663574219
    9. '           ' → logprob: -11.510917663574219
    10. ')' → logprob: -11.885917663574219

Token 2247: '_pairs' (ID: 90005)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.525299608707428
    2. '_states' → logprob: -0.900299608707428
    3. '_s' → logprob: -6.900299549102783
    4. '_pairs' → logprob: -8.025300025939941
    5. '_candidates' → logprob: -8.150300025939941
    6. '_positions' → logprob: -8.900300025939941
    7. 'states' → logprob: -9.275300025939941
    8. '_points' → logprob: -9.900300025939941
    9. '
' → logprob: -10.275300025939941
    10. 'States' → logprob: -10.275300025939941

Token 2248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745590388774872
    2. '=' → logprob: -0.9745590686798096
    3. '=[]' → logprob: -7.8495588302612305
    4. '=[]
' → logprob: -10.47455883026123
    5. ',' → logprob: -10.47455883026123
    6. ':' → logprob: -11.09955883026123
    7. ')' → logprob: -12.09955883026123
    8. '.append' → logprob: -12.84955883026123
    9. '<|end|>' → logprob: -13.47455883026123
    10. ' =
' → logprob: -13.47455883026123

Token 2249: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4753246605396271
    2. '[]
' → logprob: -1.2253246307373047
    3. '[(' → logprob: -2.7253246307373047
    4. '[
' → logprob: -3.9753246307373047
    5. ' []' → logprob: -8.600324630737305
    6. ' []
' → logprob: -9.600324630737305
    7. '[' → logprob: -9.725324630737305
    8. '[]

' → logprob: -10.475324630737305
    9. ' [(' → logprob: -11.725324630737305
    10. '[((' → logprob: -12.225324630737305

Token 2250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25508350133895874
    2. ' for' → logprob: -1.8800835609436035
    3. 'for' → logprob: -2.6300835609436035
    4. '
' → logprob: -9.255083084106445
    5. '           ' → logprob: -9.255083084106445
    6. '```' → logprob: -9.255083084106445
    7. '               ' → logprob: -9.755083084106445
    8. '   ' → logprob: -10.005083084106445
    9. ':' → logprob: -10.755083084106445
    10. '        
' → logprob: -11.255083084106445

Token 2251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010111022740602493
    2. '       ' → logprob: -4.760110855102539
    3. ' for' → logprob: -6.510110855102539
    4. '```' → logprob: -12.760110855102539
    5. '   ' → logprob: -12.885110855102539
    6. '
' → logprob: -14.135110855102539
    7. '           ' → logprob: -14.635110855102539
    8. '``' → logprob: -16.26011085510254
    9. '	for' → logprob: -16.51011085510254
    10. '        
' → logprob: -17.01011085510254

Token 2252: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.031561411917209625
    2. ' d' → logprob: -3.9065613746643066
    3. 'i' → logprob: -4.656561374664307
    4. ' i' → logprob: -7.281561374664307
    5. 'nd' → logprob: -7.281561374664307
    6. 'da' → logprob: -10.406561851501465
    7. ' nd' → logprob: -10.531561851501465
    8. 'dist' → logprob: -11.531561851501465
    9. 'a' → logprob: -12.281561851501465
    10. 'x' → logprob: -13.281561851501465

Token 2253: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00018458699923940003
    2. 'd' → logprob: -9.625185012817383
    3. '_A' → logprob: -9.875185012817383
    4. 'a' → logprob: -10.500185012817383
    5. 'B' → logprob: -11.000185012817383
    6. ' A' → logprob: -12.125185012817383
    7. '_a' → logprob: -12.250185012817383
    8. '_' → logprob: -13.437685012817383
    9. '```' → logprob: -13.687685012817383
    10. '_d' → logprob: -13.937685012817383

Token 2254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0489579401910305
    2. 'in' → logprob: -3.0489578247070312
    3. '_in' → logprob: -8.423957824707031
    4. ' ' → logprob: -9.423957824707031
    5. '	in' → logprob: -10.673957824707031
    6. ',' → logprob: -11.173957824707031
    7. 'In' → logprob: -12.423957824707031
    8. 'd' → logprob: -12.548957824707031
    9. '_' → logprob: -12.673957824707031
    10. ')' → logprob: -12.673957824707031

Token 2255: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.003743429435417056
    2. ' route' → logprob: -5.628743648529053
    3. 'self' → logprob: -9.003743171691895
    4. 'range' → logprob: -11.378743171691895
    5. '   ' → logprob: -12.878743171691895
    6. ' self' → logprob: -13.378743171691895
    7. 'candidate' → logprob: -13.753743171691895
    8. '(route' → logprob: -14.253743171691895
    9. '       ' → logprob: -14.628743171691895
    10. '```' → logprob: -14.628743171691895

Token 2256: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0001322639436693862
    2. '       ' → logprob: -10.50013256072998
    3. '_POINTS' → logprob: -10.87513256072998
    4. 'points' → logprob: -11.12513256072998
    5. ':
' → logprob: -11.62513256072998
    6. '[
' → logprob: -11.75013256072998
    7. '```' → logprob: -11.87513256072998
    8. ':' → logprob: -12.37513256072998
    9. '_segments' → logprob: -12.50013256072998
    10. ')' → logprob: -12.75013256072998

Token 2257: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2274467945098877
    2. '           ' → logprob: -2.2274467945098877
    3. ':' → logprob: -2.3524467945098877
    4. ',' → logprob: -8.602446556091309
    5. '       ' → logprob: -9.352446556091309
    6. '   ' → logprob: -9.977446556091309
    7. '):
' → logprob: -9.977446556091309
    8. ' for' → logprob: -10.227446556091309
    9. '               ' → logprob: -10.602446556091309
    10. '          ' → logprob: -11.602446556091309

Token 2258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027733708266168833
    2. ' for' → logprob: -6.002773284912109
    3. '   ' → logprob: -8.50277328491211
    4. '       ' → logprob: -9.87777328491211
    5. 'for' → logprob: -11.62777328491211
    6. '               ' → logprob: -12.00277328491211
    7. ':' → logprob: -12.12777328491211
    8. ',' → logprob: -12.12777328491211
    9. '<|end|>' → logprob: -12.50277328491211
    10. '```' → logprob: -12.62777328491211

Token 2259: ' alt' (ID: 5001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36762410402297974
    2. '   ' → logprob: -1.617624044418335
    3. ' for' → logprob: -2.242624044418335
    4. '           ' → logprob: -5.992624282836914
    5. '       ' → logprob: -7.992624282836914
    6. '	for' → logprob: -8.742624282836914
    7. '               ' → logprob: -10.367624282836914
    8. ' ' → logprob: -10.367624282836914
    9. '   ' → logprob: -12.242624282836914
    10. ' ' → logprob: -12.867624282836914

Token 2260: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002383141778409481
    2. ' =' → logprob: -6.627383232116699
    3. '_A' → logprob: -8.2523832321167
    4. '_a' → logprob: -8.3773832321167
    5. '=' → logprob: -8.5023832321167
    6. 'd' → logprob: -9.2523832321167
    7. 'a' → logprob: -9.6273832321167
    8. '   ' → logprob: -9.8773832321167
    9. 'itude' → logprob: -10.0023832321167
    10. '       ' → logprob: -11.1273832321167

Token 2261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6387229561805725
    2. '=' → logprob: -0.7637229561805725
    3. 'A' → logprob: -5.513722896575928
    4. '==' → logprob: -6.763722896575928
    5. ' ==' → logprob: -8.138723373413086
    6. '_alt' → logprob: -9.013723373413086
    7. 'for' → logprob: -9.013723373413086
    8. 'a' → logprob: -9.388723373413086
    9. '_val' → logprob: -10.013723373413086
    10. '_a' → logprob: -10.013723373413086

Token 2262: ' altitude' (ID: 66032)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.012749549932777882
    2. ' altitude' → logprob: -4.387749671936035
    3. 'self' → logprob: -9.012749671936035
    4. ' alt' → logprob: -9.762749671936035
    5. '   ' → logprob: -10.512749671936035
    6. ' self' → logprob: -11.262749671936035
    7. ' ' → logprob: -13.012749671936035
    8. 'altura' → logprob: -13.012749671936035
    9. 'abs' → logprob: -13.387749671936035
    10. '_alt' → logprob: -13.762749671936035

Token 2263: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00011081460979767144
    2. 'A' → logprob: -9.125110626220703
    3. 'Map' → logprob: -14.000110626220703
    4. '_at' → logprob: -14.750110626220703
    5. 'map' → logprob: -14.875110626220703
    6. '[A' → logprob: -16.625110626220703
    7. 'At' → logprob: -17.000110626220703
    8. '   ' → logprob: -17.000110626220703
    9. 'at' → logprob: -17.875110626220703
    10. ' =' → logprob: -18.250110626220703

Token 2264: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.07890795916318893
    2. 'd' → logprob: -2.5789079666137695
    3. '[
' → logprob: -12.20390796661377
    4. '   ' → logprob: -12.32890796661377
    5. '(d' → logprob: -13.07890796661377
    6. 'A' → logprob: -13.57890796661377
    7. ' d' → logprob: -13.70390796661377
    8. '
' → logprob: -14.32890796661377
    9. '	d' → logprob: -14.32890796661377
    10. '.get' → logprob: -14.32890796661377

Token 2265: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5570885807392187e-05
    2. 'B' → logprob: -12.875015258789062
    3. 'd' → logprob: -13.000015258789062
    4. '(d' → logprob: -13.125015258789062
    5. 'a' → logprob: -13.375015258789062
    6. ']' → logprob: -13.500015258789062
    7. '(' → logprob: -13.812515258789062
    8. ')' → logprob: -13.812515258789062
    9. '=' → logprob: -14.500015258789062
    10. '(A' → logprob: -14.875015258789062

Token 2266: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.008793842978775501
    2. ']' → logprob: -4.883793830871582
    3. '           ' → logprob: -7.258793830871582
    4. '
' → logprob: -8.258793830871582
    5. '       ' → logprob: -9.758793830871582
    6. ']
' → logprob: -10.133793830871582
    7. ' ]
' → logprob: -10.508793830871582
    8. ')
' → logprob: -10.633793830871582
    9. '   ' → logprob: -11.758793830871582
    10. '               ' → logprob: -12.008793830871582

Token 2267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009480224689468741
    2. ' for' → logprob: -7.125947952270508
    3. '       ' → logprob: -9.625947952270508
    4. 'for' → logprob: -10.125947952270508
    5. '```' → logprob: -10.625947952270508
    6. '               ' → logprob: -12.250947952270508
    7. '   ' → logprob: -12.500947952270508
    8. ',' → logprob: -13.250947952270508
    9. ' ' → logprob: -15.000947952270508
    10. '<|end|>' → logprob: -15.000947952270508

Token 2268: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20273563265800476
    2. 'for' (adapté à ' for') → logprob: -1.8277356624603271
    3. ' for' → logprob: -4.202735424041748
    4. '       ' → logprob: -4.952735424041748
    5. '   ' → logprob: -7.452735424041748
    6. '               ' → logprob: -9.452735900878906
    7. 'alt' → logprob: -11.702735900878906
    8. '                   ' → logprob: -12.077735900878906
    9. '```' → logprob: -12.077735900878906
    10. ' ' → logprob: -12.327735900878906

Token 2269: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008630049414932728
    2. ' d' → logprob: -4.758630275726318
    3. '	d' → logprob: -12.38362979888916
    4. '           ' → logprob: -12.50862979888916
    5. '       ' → logprob: -12.75862979888916
    6. '   ' → logprob: -13.00862979888916
    7. '_d' → logprob: -14.38362979888916
    8. ' ' → logprob: -15.38362979888916
    9. '     ' → logprob: -15.38362979888916
    10. '               ' → logprob: -15.50862979888916

Token 2270: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4378848391061183e-05
    2. ' B' → logprob: -12.250014305114746
    3. 'A' → logprob: -12.375014305114746
    4. '_B' → logprob: -13.625014305114746
    5. 'b' → logprob: -13.750014305114746
    6. 'self' → logprob: -14.687514305114746
    7. 'L' → logprob: -14.875014305114746
    8. ' ' → logprob: -15.187514305114746
    9. '`' → logprob: -15.250014305114746
    10. 'd' → logprob: -15.437514305114746

Token 2271: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00674000009894371
    2. 'in' → logprob: -5.006740093231201
    3. '	in' → logprob: -11.381739616394043
    4. '<|end|>' → logprob: -12.506739616394043
    5. ' ' → logprob: -12.881739616394043
    6. '           ' → logprob: -14.381739616394043
    7. '		' → logprob: -14.381739616394043
    8. '+' → logprob: -14.506739616394043
    9. '_in' → logprob: -14.506739616394043
    10. 'In' → logprob: -14.631739616394043

Token 2272: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.2519587278366089
    2. ' route' → logprob: -1.5019587278366089
    3. '(route' → logprob: -11.126958847045898
    4. 'self' → logprob: -13.001958847045898
    5. 'range' → logprob: -13.126958847045898
    6. '$route' → logprob: -13.126958847045898
    7. '           ' → logprob: -13.251958847045898
    8. '       ' → logprob: -13.251958847045898
    9. '.route' → logprob: -13.501958847045898
    10. '[' → logprob: -13.751958847045898

Token 2273: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0002457238151691854
    2. '_pairs' → logprob: -9.750246047973633
    3. 'points' → logprob: -10.000246047973633
    4. '       ' → logprob: -10.125246047973633
    5. 'route' → logprob: -10.625246047973633
    6. '_routes' → logprob: -10.625246047973633
    7. '[' → logprob: -11.750246047973633
    8. '_POINTS' → logprob: -11.750246047973633
    9. '_route' → logprob: -11.875246047973633
    10. 'd' → logprob: -12.375246047973633

Token 2274: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37297359108924866
    2. ':' → logprob: -1.7479735612869263
    3. ':
' → logprob: -2.372973680496216
    4. '           ' → logprob: -3.247973680496216
    5. ',' → logprob: -6.122973442077637
    6. '<|end|>' → logprob: -6.997973442077637
    7. '```' → logprob: -7.872973442077637
    8. '            ' → logprob: -8.247973442077637
    9. '[' → logprob: -8.747973442077637
    10. '<|end|>' → logprob: -8.747973442077637

Token 2275: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02026893012225628
    2. '               ' → logprob: -4.52026891708374
    3. '            ' → logprob: -4.77026891708374
    4. '```' → logprob: -8.395269393920898
    5. ' ' → logprob: -9.020269393920898
    6. '[' → logprob: -9.270269393920898
    7. ' ' → logprob: -10.145269393920898
    8. ')' → logprob: -10.520269393920898
    9. '             ' → logprob: -10.770269393920898
    10. '   ' → logprob: -10.895269393920898

Token 2276: ' alt' (ID: 5001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32948175072669983
    2. ' alt' → logprob: -1.5794817209243774
    3. '               ' → logprob: -3.204481840133667
    4. 'if' → logprob: -3.454481840133667
    5. 'alt' (adapté à ' alt') → logprob: -6.204481601715088
    6. '                   ' → logprob: -9.079482078552246
    7. '                ' → logprob: -9.204482078552246
    8. ' ' → logprob: -10.079482078552246
    9. '```' → logprob: -10.329482078552246
    10. ' token' → logprob: -10.579482078552246

Token 2277: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28750720620155334
    2. 'A' → logprob: -1.412507176399231
    3. '_map' → logprob: -5.162507057189941
    4. '_pairs' → logprob: -8.162507057189941
    5. '=' → logprob: -8.912507057189941
    6. ' =' → logprob: -9.662507057189941
    7. '_pair' → logprob: -11.037507057189941
    8. '_code' → logprob: -11.537507057189941
    9. '_diff' → logprob: -11.537507057189941
    10. 'Map' → logprob: -11.787507057189941

Token 2278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02652333676815033
    2. '=' → logprob: -3.6515233516693115
    3. '           ' → logprob: -9.65152359008789
    4. ')' → logprob: -10.65152359008789
    5. '               ' → logprob: -10.77652359008789
    6. '                   ' → logprob: -10.90152359008789
    7. ']' → logprob: -11.02652359008789
    8. ' ' → logprob: -11.40152359008789
    9. '   ' → logprob: -11.90152359008789
    10. '```' → logprob: -11.90152359008789

Token 2279: ' altitude' (ID: 66032)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.004679680336266756
    2. ' altitude' → logprob: -5.7546796798706055
    3. 'abs' → logprob: -6.6296796798706055
    4. '   ' → logprob: -9.129679679870605
    5. ' alt' → logprob: -11.004679679870605
    6. 'self' → logprob: -11.379679679870605
    7. '       ' → logprob: -11.379679679870605
    8. 'route' → logprob: -12.629679679870605
    9. '           ' → logprob: -12.879679679870605
    10. 'latitude' → logprob: -13.379679679870605

Token 2280: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.0219828002154827e-05
    2. 'map' → logprob: -11.375020027160645
    3. '   ' → logprob: -12.625020027160645
    4. 'Map' → logprob: -13.375020027160645
    5. '           ' → logprob: -14.250020027160645
    6. 'A' → logprob: -14.625020027160645
    7. '       ' → logprob: -15.125020027160645
    8. 'd' → logprob: -15.125020027160645
    9. '[d' → logprob: -15.125020027160645
    10. '[' → logprob: -15.625020027160645

Token 2281: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.07981883734464645
    2. '[self' → logprob: -2.5798187255859375
    3. 'self' → logprob: -7.5798187255859375
    4. 'd' → logprob: -8.079818725585938
    5. '[' → logprob: -9.704818725585938
    6. '[L' → logprob: -10.579818725585938
    7. '   ' → logprob: -12.079818725585938
    8. '[
' → logprob: -12.329818725585938
    9. '.get' → logprob: -13.079818725585938
    10. '
' → logprob: -13.579818725585938

Token 2282: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.003354639746248722
    2. 'd' → logprob: -6.003354549407959
    3. 'self' → logprob: -7.128354549407959
    4. 'L' → logprob: -10.503355026245117
    5. 'b' → logprob: -11.253355026245117
    6. '   ' → logprob: -12.128355026245117
    7. '[self' → logprob: -12.128355026245117
    8. 'A' → logprob: -12.503355026245117
    9. '           ' → logprob: -12.628355026245117
    10. ' B' → logprob: -13.003355026245117

Token 2283: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4467722475528717
    2. '+' → logprob: -1.0717722177505493
    3. '+self' → logprob: -4.07177209854126
    4. ']' → logprob: -7.57177209854126
    5. 'self' → logprob: -8.821772575378418
    6. '+
' → logprob: -10.071772575378418
    7. '[self' → logprob: -10.821772575378418
    8. '+d' → logprob: -10.946772575378418
    9. '
' → logprob: -11.321772575378418
    10. ' ' → logprob: -11.571772575378418

Token 2284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005694755236618221
    2. ' self' → logprob: -7.5005693435668945
    3. '(self' → logprob: -11.500569343566895
    4. '0' → logprob: -13.625569343566895
    5. '[self' → logprob: -14.000569343566895
    6. 'route' → logprob: -14.125569343566895
    7. '   ' → logprob: -14.250569343566895
    8. '1' → logprob: -14.500569343566895
    9. '+' → logprob: -14.625569343566895
    10. '       ' → logprob: -15.375569343566895

Token 2285: '.L' (ID: 2024)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007117166533134878
    2. 'L' → logprob: -7.500711917877197
    3. ' self' → logprob: -8.875711441040039
    4. '
' → logprob: -12.625711441040039
    5. '(self' → logprob: -13.125711441040039
    6. '0' → logprob: -13.375711441040039
    7. '1' → logprob: -13.375711441040039
    8. '+' → logprob: -13.500711441040039
    9. '100' → logprob: -13.625711441040039
    10. '[self' → logprob: -13.625711441040039

Token 2286: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1128401905298233
    2. ' +' → logprob: -2.237840175628662
    3. '1' → logprob: -11.48784065246582
    4. '           ' → logprob: -13.11284065246582
    5. '+
' → logprob: -13.23784065246582
    6. '   ' → logprob: -13.86284065246582
    7. '               ' → logprob: -14.11284065246582
    8. '                   ' → logprob: -14.73784065246582
    9. ' ' → logprob: -15.11284065246582
    10. '
' → logprob: -15.36284065246582

Token 2287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -15.875003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '```' → logprob: -17.625003814697266
    6. '100' → logprob: -18.000003814697266
    7. '{
' → logprob: -19.062503814697266
    8. '...' → logprob: -19.062503814697266
    9. '+' → logprob: -19.125003814697266
    10. '0' → logprob: -19.250003814697266

Token 2288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -17.125
    4. '100' → logprob: -18.125
    5. '2' → logprob: -18.25
    6. '   ' → logprob: -18.625
    7. '```' → logprob: -19.125
    8. '101' → logprob: -19.375
    9. '0' → logprob: -19.5
    10. 'self' → logprob: -20.3125

Token 2289: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.43691152334213257
    2. ']' → logprob: -1.0619115829467773
    3. '               ' → logprob: -5.561911582946777
    4. ']:
' → logprob: -5.561911582946777
    5. ']==' → logprob: -9.186911582946777
    6. ')' → logprob: -9.436911582946777
    7. '           ' → logprob: -9.811911582946777
    8. ']
' → logprob: -9.936911582946777
    9. ')]' → logprob: -10.436911582946777
    10. ']>' → logprob: -10.686911582946777

Token 2290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.652451464906335e-05
    2. '```' → logprob: -11.875016212463379
    3. '<|end|>' → logprob: -12.625016212463379
    4. '                   ' → logprob: -13.000016212463379
    5. ',' → logprob: -14.375016212463379
    6. '                ' → logprob: -14.500016212463379
    7. '              ' → logprob: -14.750016212463379
    8. '	           ' → logprob: -15.000016212463379
    9. '           ' → logprob: -15.000016212463379
    10. '			' → logprob: -15.250016212463379

Token 2291: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003154427045956254
    2. 'if' (adapté à ' if') → logprob: -6.253154277801514
    3. ' if' → logprob: -6.753154277801514
    4. '                   ' → logprob: -11.628154754638672
    5. '	           ' → logprob: -11.753154754638672
    6. ' ' → logprob: -12.128154754638672
    7. '<|end|>' → logprob: -12.378154754638672
    8. '```' → logprob: -12.378154754638672
    9. '		       ' → logprob: -12.753154754638672
    10. 'import' → logprob: -13.003154754638672

Token 2292: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0042228782549500465
    2. 'math' → logprob: -5.504222869873047
    3. ' abs' → logprob: -8.879222869873047
    4. '   ' → logprob: -12.379222869873047
    5. ' math' → logprob: -14.254222869873047
    6. '(abs' → logprob: -16.129222869873047
    7. '       ' → logprob: -16.504222869873047
    8. ' ' → logprob: -17.379222869873047
    9. '           ' → logprob: -17.379222869873047
    10. '    ' → logprob: -17.629222869873047

Token 2293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9650025428272784e-05
    2. '(d' → logprob: -10.250040054321289
    3. 'alt' → logprob: -12.750040054321289
    4. ' (' → logprob: -14.625040054321289
    5. '(opt' → logprob: -15.125040054321289
    6. '(diff' → logprob: -16.12504005432129
    7. '(dist' → logprob: -16.62504005432129
    8. '               ' → logprob: -16.75004005432129
    9. '(lat' → logprob: -16.75004005432129
    10. '((' → logprob: -16.75004005432129

Token 2294: 'alt' (ID: 3271)
  Prédit: 'alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -8.2994620242971e-06
    2. ' alt' → logprob: -11.750008583068848
    3. '(' → logprob: -16.37500762939453
    4. '           ' → logprob: -16.75000762939453
    5. 'Alt' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.25000762939453
    7. '_alt' → logprob: -17.50000762939453
    8. '               ' → logprob: -18.12500762939453
    9. '-alt' → logprob: -18.25000762939453
    10. '       ' → logprob: -18.62500762939453

Token 2295: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00012880703434348106
    2. '(' → logprob: -9.250128746032715
    3. '(d' → logprob: -10.750128746032715
    4. 'B' → logprob: -12.625128746032715
    5. '(A' → logprob: -13.250128746032715
    6. ' A' → logprob: -13.625128746032715
    7. 'a' → logprob: -13.625128746032715
    8. 'alt' → logprob: -14.125128746032715
    9. '(a' → logprob: -14.250128746032715
    10. 'd' → logprob: -14.375128746032715

Token 2296: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859520494937897
    2. '-' → logprob: -3.0485951900482178
    3. ' ' → logprob: -12.798595428466797
    4. ')' → logprob: -14.048595428466797
    5. ' <=' → logprob: -14.423595428466797
    6. ' -
' → logprob: -14.548595428466797
    7. '           ' → logprob: -14.673595428466797
    8. '<=' → logprob: -14.798595428466797
    9. '          ' → logprob: -14.923595428466797
    10. '               ' → logprob: -15.423595428466797

Token 2297: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.00023202638840302825
    2. ' alt' → logprob: -8.375231742858887
    3. '           ' → logprob: -14.875231742858887
    4. '   ' → logprob: -15.250231742858887
    5. '       ' → logprob: -15.750231742858887
    6. 'opt' → logprob: -16.125232696533203
    7. '               ' → logprob: -16.500232696533203
    8. '          ' → logprob: -17.125232696533203
    9. 'Alt' → logprob: -17.125232696533203
    10. '         ' → logprob: -17.125232696533203

Token 2298: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.029757777228951454
    2. 'A' → logprob: -3.5297577381134033
    3. ')' → logprob: -12.529757499694824
    4. 'a' → logprob: -14.779757499694824
    5. '   ' → logprob: -14.779757499694824
    6. '                   ' → logprob: -14.904757499694824
    7. '0' → logprob: -15.404757499694824
    8. '               ' → logprob: -15.529757499694824
    9. ' B' → logprob: -15.529757499694824
    10. '```' → logprob: -15.529757499694824

Token 2299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003566767554730177
    2. ')<' → logprob: -8.500356674194336
    3. ')<=' → logprob: -9.250356674194336
    4. ' <' → logprob: -10.625356674194336
    5. ' )' → logprob: -10.875356674194336
    6. ' <=' → logprob: -11.625356674194336
    7. '<' → logprob: -12.750356674194336
    8. '<=' → logprob: -13.500356674194336
    9. ')
' → logprob: -16.375356674194336
    10. '```' → logprob: -16.500356674194336

Token 2300: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.27472007274627686
    2. ' <=' → logprob: -1.6497200727462769
    3. '<' → logprob: -3.2747201919555664
    4. '<=' → logprob: -4.649720191955566
    5. ')' → logprob: -7.774720191955566
    6. ')<=' → logprob: -9.024720191955566
    7. ' ' → logprob: -9.649720191955566
    8. '<|end|>' → logprob: -10.524720191955566
    9. ')<' → logprob: -10.774720191955566
    10. '<th' → logprob: -11.774720191955566

Token 2301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.219262624857947e-05
    2. ' ' → logprob: -9.625072479248047
    3. 'self' → logprob: -12.375072479248047
    4. '   ' → logprob: -13.500072479248047
    5. '
' → logprob: -15.625072479248047
    6. '=' → logprob: -16.250072479248047
    7. '0' → logprob: -16.875072479248047
    8. '```' → logprob: -17.125072479248047
    9. '(' → logprob: -18.000072479248047
    10. ' self' → logprob: -18.000072479248047

Token 2302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.625029563903809
    3. 'self' → logprob: -12.875029563903809
    4. '   ' → logprob: -13.375029563903809
    5. '
' → logprob: -14.250029563903809
    6. '0' → logprob: -16.000030517578125
    7. '           ' → logprob: -16.375030517578125
    8. '       ' → logprob: -16.625030517578125
    9. '```' → logprob: -16.625030517578125
    10. '(' → logprob: -16.750030517578125

Token 2303: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01815614476799965
    2. '-' → logprob: -4.018156051635742
    3. '**' → logprob: -13.143156051635742
    4. '1' → logprob: -13.518156051635742
    5. '```' → logprob: -13.893156051635742
    6. '9' → logprob: -14.268156051635742
    7. '-e' → logprob: -14.518156051635742
    8. '
' → logprob: -15.393156051635742
    9. '   ' → logprob: -15.893156051635742
    10. ' -' → logprob: -16.018156051635742

Token 2304: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.787507714354433e-05
    2. '9' → logprob: -10.25004768371582
    3. 'e' → logprob: -13.12504768371582
    4. '```' → logprob: -13.12504768371582
    5. '**' → logprob: -13.25004768371582
    6. '
' → logprob: -13.50004768371582
    7. ' -' → logprob: -13.75004768371582
    8. '(-' → logprob: -13.87504768371582
    9. '{-' → logprob: -13.87504768371582
    10. '   ' → logprob: -15.50004768371582

Token 2305: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.008129963040119e-06
    2. '6' → logprob: -13.125003814697266
    3. '```' → logprob: -13.750003814697266
    4. '12' → logprob: -14.875003814697266
    5. '09' → logprob: -14.875003814697266
    6. '
' → logprob: -17.500003814697266
    7. 'nine' → logprob: -17.875003814697266
    8. '``' → logprob: -17.937503814697266
    9. '7' → logprob: -18.187503814697266
    10. '-' → logprob: -18.250003814697266

Token 2306: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6060360074043274
    2. ':' → logprob: -1.3560359477996826
    3. '                   ' → logprob: -2.1060359477996826
    4. ' and' → logprob: -2.8560359477996826
    5. '               ' → logprob: -4.731036186218262
    6. '                       ' → logprob: -5.856036186218262
    7. 'and' → logprob: -5.856036186218262
    8. '):
' → logprob: -6.356036186218262
    9. ' :
' → logprob: -7.606036186218262
    10. ' :' → logprob: -8.481036186218262

Token 2307: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002622894535306841
    2. '                       ' → logprob: -8.625262260437012
    3. ' and' → logprob: -10.375262260437012
    4. ',' → logprob: -11.250262260437012
    5. '               ' → logprob: -11.375262260437012
    6. ':' → logprob: -11.875262260437012
    7. '                    ' → logprob: -12.125262260437012
    8. ':
' → logprob: -12.500262260437012
    9. '                  ' → logprob: -12.875262260437012
    10. '                           ' → logprob: -13.000262260437012

Token 2308: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.015286331064999104
    2. ' candidate' → logprob: -4.765286445617676
    3. '                   ' → logprob: -5.015286445617676
    4. '                       ' → logprob: -12.140286445617676
    5. '               ' → logprob: -12.265286445617676
    6. '(candidate' → logprob: -12.890286445617676
    7. '   ' → logprob: -14.265286445617676
    8. '           ' → logprob: -15.390286445617676
    9. '       ' → logprob: -15.765286445617676
    10. '                    ' → logprob: -16.26528549194336

Token 2309: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -2.5941604690160602e-05
    2. 'pairs' → logprob: -10.750025749206543
    3. 'Pairs' → logprob: -12.625025749206543
    4. 's' → logprob: -14.875025749206543
    5. '_pair' → logprob: -15.500025749206543
    6. '_candidates' → logprob: -15.625025749206543
    7. 'pair' → logprob: -15.875025749206543
    8. '
' → logprob: -16.12502670288086
    9. '           ' → logprob: -16.62502670288086
    10. ' pairs' → logprob: -17.25002670288086

Token 2310: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008677443489432335
    2. '.' → logprob: -4.7586774826049805
    3. ' .' → logprob: -10.50867748260498
    4. '                   ' → logprob: -11.88367748260498
    5. 'append' → logprob: -12.00867748260498
    6. '.app' → logprob: -12.75867748260498
    7. ').' → logprob: -12.75867748260498
    8. '                       ' → logprob: -12.88367748260498
    9. 'Append' → logprob: -12.88367748260498
    10. '<|end|>' → logprob: -12.88367748260498

Token 2311: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.015021582134068012
    2. '(' → logprob: -4.265021800994873
    3. ' ((' → logprob: -7.765021800994873
    4. ' (' → logprob: -7.890021800994873
    5. '(
' → logprob: -9.765021324157715
    6. '   ' → logprob: -13.890021324157715
    7. '[(' → logprob: -15.765021324157715
    8. '(((' → logprob: -16.01502227783203
    9. ' (
' → logprob: -16.76502227783203
    10. '                   ' → logprob: -17.51502227783203

Token 2312: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.741137283621356e-05
    2. ' d' → logprob: -10.000057220458984
    3. '(d' → logprob: -11.625057220458984
    4. '                   ' → logprob: -14.250057220458984
    5. ')d' → logprob: -14.625057220458984
    6. '(' → logprob: -14.750057220458984
    7. '	d' → logprob: -14.875057220458984
    8. ' (' → logprob: -15.500057220458984
    9. 'nd' → logprob: -15.750057220458984
    10. '               ' → logprob: -15.875057220458984

Token 2313: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.1008713702030946e-06
    2. '(A' → logprob: -15.125001907348633
    3. 'a' → logprob: -15.250001907348633
    4. ',' → logprob: -15.375001907348633
    5. ')' → logprob: -15.500001907348633
    6. '(' → logprob: -15.500001907348633
    7. 'B' → logprob: -15.625001907348633
    8. 'А' → logprob: -15.750001907348633
    9. ' A' → logprob: -16.000001907348633
    10. '(float' → logprob: -16.125001907348633

Token 2314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ',d' → logprob: -9.875061988830566
    3. ' ,' → logprob: -11.875061988830566
    4. ',
' → logprob: -12.875061988830566
    5. '<|end|>' → logprob: -15.750061988830566
    6. ',n' → logprob: -16.12506103515625
    7. '‌,' → logprob: -16.50006103515625
    8. ',p' → logprob: -16.62506103515625
    9. ',b' → logprob: -16.87506103515625
    10. ',user' → logprob: -17.37506103515625

Token 2315: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009673224412836134
    2. ' d' → logprob: -7.000967502593994
    3. '                   ' → logprob: -10.375967025756836
    4. 'L' → logprob: -12.000967025756836
    5. '                    ' → logprob: -12.625967025756836
    6. '                       ' → logprob: -13.500967025756836
    7. '                           ' → logprob: -13.500967025756836
    8. '   ' → logprob: -14.000967025756836
    9. '                        ' → logprob: -14.125967025756836
    10. '                                           ' → logprob: -14.250967025756836

Token 2316: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.889424836728722e-05
    2. 'L' → logprob: -9.875099182128906
    3. 'A' → logprob: -10.625099182128906
    4. 'self' → logprob: -10.875099182128906
    5. 'b' → logprob: -14.000099182128906
    6. ')' → logprob: -14.375099182128906
    7. '(self' → logprob: -14.625099182128906
    8. '(L' → logprob: -14.875099182128906
    9. ' self' → logprob: -15.500099182128906
    10. ' B' → logprob: -15.562599182128906

Token 2317: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023151186760514975
    2. ',' → logprob: -6.627315044403076
    3. '))' → logprob: -7.502315044403076
    4. '                   ' → logprob: -8.252315521240234
    5. '),' → logprob: -9.752315521240234
    6. '               ' → logprob: -10.377315521240234
    7. ' )' → logprob: -10.877315521240234
    8. ')
' → logprob: -11.627315521240234
    9. ')))' → logprob: -11.627315521240234
    10. ',)' → logprob: -11.627315521240234

Token 2318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021316934376955032
    2. '
' → logprob: -3.8963170051574707
    3. '        
' → logprob: -7.771317005157471
    4. '```' → logprob: -8.271316528320312
    5. '           ' → logprob: -10.021316528320312
    6. ')' → logprob: -11.396316528320312
    7. '<|end|>' → logprob: -11.521316528320312
    8. 'while' → logprob: -12.146316528320312
    9. '    
' → logprob: -12.146316528320312
    10. ',' → logprob: -12.271316528320312

Token 2319: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01829496957361698
    2. 'while' → logprob: -4.018294811248779
    3. 'visited' → logprob: -9.643295288085938
    4. '
' → logprob: -10.018295288085938
    5. '```' → logprob: -10.893295288085938
    6. ' while' → logprob: -11.768295288085938
    7. '           ' → logprob: -12.768295288085938
    8. '        
' → logprob: -13.268295288085938
    9. 'for' → logprob: -13.643295288085938
    10. 'import' → logprob: -14.018295288085938

Token 2320: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.040057066828012466
    2. 'visited' → logprob: -3.2900571823120117
    3. '       ' → logprob: -6.290057182312012
    4. 'seen' → logprob: -8.790057182312012
    5. 'processed' → logprob: -13.290057182312012
    6. ' while' → logprob: -13.290057182312012
    7. '   ' → logprob: -13.415057182312012
    8. 'dist' → logprob: -14.290057182312012
    9. 'distance' → logprob: -15.290057182312012
    10. 'checked' → logprob: -15.540057182312012

Token 2321: ' quick' (ID: 4853)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.6024567484855652
    2. 'd' → logprob: -1.35245680809021
    3. 'neighbor' → logprob: -2.72745680809021
    4. ' candidate' → logprob: -3.47745680809021
    5. 'each' → logprob: -3.47745680809021
    6. 'state' → logprob: -4.352456569671631
    7. ' d' → logprob: -4.852456569671631
    8. 'nd' → logprob: -5.727456569671631
    9. '_candidate' → logprob: -5.727456569671631
    10. 'dist' → logprob: -5.977456569671631

Token 2322: ' neighbors' (ID: 31655)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.390330195426941
    2. '_lookup' → logprob: -1.640330195426941
    3. 'neighbor' → logprob: -2.3903303146362305
    4. '_neighbors' → logprob: -2.6403303146362305
    5. 'lookup' → logprob: -2.7653303146362305
    6. 'access' → logprob: -3.0153303146362305
    7. 'd' → logprob: -3.1403303146362305
    8. ' access' → logprob: -3.2653303146362305
    9. '_candidates' → logprob: -3.5153303146362305
    10. ' candidate' → logprob: -3.6403303146362305

Token 2323: ' lookup' (ID: 37342)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.6777569055557251
    2. ' =' → logprob: -0.8027569055557251
    3. '=' → logprob: -4.6777567863464355
    4. '_neighbors' → logprob: -4.6777567863464355
    5. '_candidates' → logprob: -5.3027567863464355
    6. '_lookup' → logprob: -5.8027567863464355
    7. ':' → logprob: -6.0527567863464355
    8. 'map' → logprob: -6.4277567863464355
    9. 'candidate' → logprob: -6.6777567863464355
    10. '_sets' → logprob: -6.9277567863464355

Token 2324: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4253528118133545
    2. ',' → logprob: -1.8003528118133545
    3. ':' → logprob: -3.3003528118133545
    4. 'neighbors' → logprob: -3.6753528118133545
    5. 'index' → logprob: -4.050353050231934
    6. '_neighbors' → logprob: -4.425353050231934
    7. 'indices' → logprob: -4.800353050231934
    8. 'self' → logprob: -4.925353050231934
    9. ' =' → logprob: -4.925353050231934
    10. 'points' → logprob: -5.050353050231934

Token 2325: ' create' (ID: 2501)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5233784914016724
    2. 'c' → logprob: -1.8983784914016724
    3. 'neighbors' → logprob: -2.398378372192383
    4. 'neighbor' → logprob: -2.898378372192383
    5. 'adj' → logprob: -3.148378372192383
    6. 'self' → logprob: -3.398378372192383
    7. '       ' → logprob: -4.273378372192383
    8. 'state' → logprob: -4.273378372192383
    9. 'from' → logprob: -6.273378372192383
    10. 'pairs' → logprob: -7.273378372192383

Token 2326: ' a' (ID: 261)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.38205039501190186
    2. 'neighbors' → logprob: -1.3820503950119019
    3. 'neighbor' → logprob: -3.0070505142211914
    4. 'from' → logprob: -5.382050514221191
    5. 'candidate' → logprob: -5.507050514221191
    6. 'pos' → logprob: -5.757050514221191
    7. 'self' → logprob: -6.007050514221191
    8. 'point' → logprob: -7.757050514221191
    9. 'graph' → logprob: -7.882050514221191
    10. 'c' → logprob: -7.882050514221191

Token 2327: ' set' (ID: 920)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6758532524108887
    2. 'default' → logprob: -1.3008532524108887
    3. 'from' → logprob: -2.8008532524108887
    4. 'dict' → logprob: -3.3008532524108887
    5. 'neighbor' → logprob: -3.3008532524108887
    6. 'adj' → logprob: -3.5508532524108887
    7. 'mapping' → logprob: -3.8008532524108887
    8. 'graph' → logprob: -3.9258532524108887
    9. 'map' → logprob: -5.175853252410889
    10. 'candidate' → logprob: -6.800853252410889

Token 2328: ' of' (ID: 328)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.1643030047416687
    2. ' =' → logprob: -2.0393030643463135
    3. '(candidate' → logprob: -4.664302825927734
    4. '=' → logprob: -5.164302825927734
    5. ' candidate' → logprob: -5.914302825927734
    6. '       ' → logprob: -7.039302825927734
    7. '_candidate' → logprob: -7.164302825927734
    8. '```' → logprob: -7.664302825927734
    9. '   ' → logprob: -8.289302825927734
    10. 'of' → logprob: -8.539302825927734

Token 2329: ' all' (ID: 722)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0009163398644886911
    2. '(candidate' → logprob: -7.000916481018066
    3. ' candidate' → logprob: -12.500916481018066
    4. '((' → logprob: -14.750916481018066
    5. 'set' → logprob: -15.125916481018066
    6. '{' → logprob: -15.750916481018066
    7. '
' → logprob: -17.25091552734375
    8. '(' → logprob: -17.37591552734375
    9. 'c' → logprob: -17.37591552734375
    10. '[(' → logprob: -17.62591552734375

Token 2330: ' pairs' (ID: 24702)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.023509375751018524
    2. '(candidate' → logprob: -3.7735092639923096
    3. ' candidate' → logprob: -8.89850902557373
    4. 'pairs' → logprob: -10.14850902557373
    5. '(c' → logprob: -10.89850902557373
    6. '(' → logprob: -11.02350902557373
    7. 'c' → logprob: -11.39850902557373
    8. 'positions' → logprob: -11.52350902557373
    9. 'states' → logprob: -11.52350902557373
    10. '((' → logprob: -12.02350902557373

Token 2331: ' for' (ID: 395)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.38312825560569763
    2. '       ' → logprob: -1.25812828540802
    3. ' =' → logprob: -4.2581281661987305
    4. '(candidate' → logprob: -4.5081281661987305
    5. '```' → logprob: -6.0081281661987305
    6. ' candidate' → logprob: -6.5081281661987305
    7. '
' → logprob: -6.8831281661987305
    8. '           ' → logprob: -7.0081281661987305
    9. '=' → logprob: -7.1331281661987305
    10. '   ' → logprob: -8.00812816619873

Token 2332: ' fast' (ID: 5661)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.4826275706291199
    2. 'candidate' → logprob: -1.2326276302337646
    3. 'fast' → logprob: -2.9826276302337646
    4. 'quick' → logprob: -3.6076276302337646
    5. ' O' → logprob: -5.3576273918151855
    6. 'membership' → logprob: -5.4826273918151855
    7. 'lookup' → logprob: -6.2326273918151855
    8. 'constant' → logprob: -6.6076273918151855
    9. 'c' → logprob: -7.9826273918151855
    10. '
' → logprob: -8.107627868652344

Token 2333: ' membership' (ID: 20190)
  Prédit: 'membership'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'membership' → logprob: -0.028030896559357643
    2. 'lookup' → logprob: -3.6530308723449707
    3. 'contain' → logprob: -7.403030872344971
    4. ' membership' → logprob: -7.528030872344971
    5. 'in' → logprob: -8.153031349182129
    6. 'checking' → logprob: -9.403031349182129
    7. '_lookup' → logprob: -9.653031349182129
    8. 'contains' → logprob: -10.028031349182129
    9. 'access' → logprob: -10.528031349182129
    10. 'check' → logprob: -10.653031349182129

Token 2334: ' check' (ID: 2371)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.17228248715400696
    2. ' =' → logprob: -2.1722824573516846
    3. '(candidate' → logprob: -3.7972824573516846
    4. '       ' → logprob: -5.172282695770264
    5. '=' → logprob: -5.297282695770264
    6. ' candidate' → logprob: -5.922282695770264
    7. '```' → logprob: -6.547282695770264
    8. 'c' → logprob: -6.547282695770264
    9. ',' → logprob: -7.047282695770264
    10. '_set' → logprob: -7.047282695770264

Token 2335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013722550123929977
    2. 'candidate' → logprob: -4.5137224197387695
    3. '
' → logprob: -6.3887224197387695
    4. '```' → logprob: -8.01372241973877
    5. 'pairs' → logprob: -8.76372241973877
    6. ',' → logprob: -8.88872241973877
    7. ' candidate' → logprob: -9.26372241973877
    8. '        
' → logprob: -10.76372241973877
    9. 'self' → logprob: -10.76372241973877
    10. '(candidate' → logprob: -10.88872241973877

Token 2336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07144247740507126
    2. 'candidate' → logprob: -2.8214423656463623
    3. '```' → logprob: -5.696442604064941
    4. 'pairs' → logprob: -5.821442604064941
    5. ',' → logprob: -7.696442604064941
    6. '
' → logprob: -7.821442604064941
    7. 'neighbor' → logprob: -8.196442604064941
    8. 'all' → logprob: -8.321442604064941
    9. 'neighbors' → logprob: -8.446442604064941
    10. 'c' → logprob: -8.696442604064941

Token 2337: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.008639151230454445
    2. 'c' → logprob: -5.258639335632324
    3. 'valid' → logprob: -6.883639335632324
    4. 'self' → logprob: -7.133639335632324
    5. ' candidate' → logprob: -7.133639335632324
    6. 'pairs' → logprob: -8.133639335632324
    7. 'allowed' → logprob: -8.758639335632324
    8. '       ' → logprob: -9.008639335632324
    9. '   ' → logprob: -9.758639335632324
    10. 'pair' → logprob: -10.008639335632324

Token 2338: '_set' (ID: 5451)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00013786651834379882
    2. '_states' → logprob: -9.500138282775879
    3. '_set' → logprob: -10.750138282775879
    4. 's' → logprob: -11.250138282775879
    5. '_positions' → logprob: -11.375138282775879
    6. '_candidates' → logprob: -12.250138282775879
    7. '_pair' → logprob: -12.750138282775879
    8. 'pairs' → logprob: -13.000138282775879
    9. '_' → logprob: -13.125138282775879
    10. '_sets' → logprob: -13.125138282775879

Token 2339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197967886924744
    2. '=' → logprob: -1.5019797086715698
    3. '.add' → logprob: -10.62697982788086
    4. ' =
' → logprob: -11.50197982788086
    5. '=set' → logprob: -11.75197982788086
    6. '=
' → logprob: -13.00197982788086
    7. ')' → logprob: -13.50197982788086
    8. '={(' → logprob: -13.62697982788086
    9. ' ' → logprob: -14.25197982788086
    10. '.' → logprob: -14.37697982788086

Token 2340: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002820736262947321
    2. '{' → logprob: -8.750282287597656
    3. ' set' → logprob: -9.000282287597656
    4. ' {(' → logprob: -16.500282287597656
    5. '{
' → logprob: -16.875282287597656
    6. 'fro' → logprob: -17.125282287597656
    7. ' {' → logprob: -17.375282287597656
    8. '(set' → logprob: -18.125282287597656
    9. '=set' → logprob: -18.250282287597656
    10. '	set' → logprob: -18.875282287597656

Token 2341: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.005264829844236374
    2. '((' → logprob: -5.505264759063721
    3. 'candidate' → logprob: -7.130264759063721
    4. '([(' → logprob: -8.255265235900879
    5. '(' → logprob: -9.505265235900879
    6. '(
' → logprob: -10.255265235900879
    7. '[(' → logprob: -12.380265235900879
    8. '()' → logprob: -12.630265235900879
    9. '(((' → logprob: -12.880265235900879
    10. ' candidate' → logprob: -13.880265235900879

Token 2342: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.001362020499072969
    2. '(candidate' → logprob: -7.001361846923828
    3. 'candidate' → logprob: -8.126361846923828
    4. '_states' → logprob: -9.751361846923828
    5. '_candidates' → logprob: -10.126361846923828
    6. ')' → logprob: -11.126361846923828
    7. 'pairs' → logprob: -11.126361846923828
    8. 'Pairs' → logprob: -11.376361846923828
    9. '_candidate' → logprob: -12.001361846923828
    10. 's' → logprob: -12.876361846923828

Token 2343: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03080088272690773
    2. '       ' → logprob: -3.9058008193969727
    3. ')
' → logprob: -4.905800819396973
    4. '
' → logprob: -6.655800819396973
    5. ',' → logprob: -7.530800819396973
    6. '   ' → logprob: -7.780800819396973
    7. ' )' → logprob: -8.780800819396973
    8. ',
' → logprob: -9.405800819396973
    9. '<|end|>' → logprob: -9.780800819396973
    10. '```' → logprob: -9.905800819396973

Token 2344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005257497541606426
    2. 'while' → logprob: -8.25052547454834
    3. '
' → logprob: -9.62552547454834
    4. ' while' → logprob: -9.62552547454834
    5. '```' → logprob: -9.87552547454834
    6. '        
' → logprob: -10.37552547454834
    7. ')' → logprob: -10.50052547454834
    8. '   ' → logprob: -11.75052547454834
    9. '           ' → logprob: -12.00052547454834
    10. '<|end|>' → logprob: -12.50052547454834

Token 2345: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20282457768917084
    2. 'while' → logprob: -1.702824592590332
    3. ' while' → logprob: -6.827824592590332
    4. '```' → logprob: -9.202824592590332
    5. '
' → logprob: -9.327824592590332
    6. '   ' → logprob: -9.827824592590332
    7. '        
' → logprob: -10.702824592590332
    8. '	while' → logprob: -10.827824592590332
    9. 'def' → logprob: -11.202824592590332
    10. ')' → logprob: -11.702824592590332

Token 2346: ' Pre' (ID: 4659)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030704548582434654
    2. '       ' → logprob: -3.5307044982910156
    3. 'visited' → logprob: -7.030704498291016
    4. ' while' → logprob: -10.280704498291016
    5. '
' → logprob: -10.655704498291016
    6. '   ' → logprob: -12.280704498291016
    7. 'seen' → logprob: -13.155704498291016
    8. '```' → logprob: -13.905704498291016
    9. 'distance' → logprob: -14.030704498291016
    10. '	while' → logprob: -14.280704498291016

Token 2347: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.06968184560537338
    2. 'pare' → logprob: -3.1946818828582764
    3. '       ' → logprob: -4.069681644439697
    4. 'dict' → logprob: -5.444681644439697
    5. 'computed' → logprob: -5.694681644439697
    6. '_compute' → logprob: -7.069681644439697
    7. '   ' → logprob: -8.819682121276855
    8. 'process' → logprob: -8.944682121276855
    9. 'd' → logprob: -9.444682121276855
    10. ' compute' → logprob: -10.194682121276855

Token 2348: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.04206628352403641
    2. 'adj' → logprob: -3.6670663356781006
    3. 'neighbor' → logprob: -4.4170660972595215
    4. ' neighbors' → logprob: -6.6670660972595215
    5. 'segment' → logprob: -6.9170660972595215
    6. 'edges' → logprob: -7.1670660972595215
    7. 'next' → logprob: -8.66706657409668
    8. '#' → logprob: -8.91706657409668
    9. 'self' → logprob: -9.79206657409668
    10. '_neighbors' → logprob: -10.29206657409668

Token 2349: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1241941750049591
    2. '_neighbors' → logprob: -2.4991941452026367
    3. '=' → logprob: -4.249194145202637
    4. 'neighbors' → logprob: -4.749194145202637
    5. ':' → logprob: -5.124194145202637
    6. 'for' → logprob: -6.749194145202637
    7. '       ' → logprob: -6.874194145202637
    8. '
' → logprob: -6.874194145202637
    9. 'neighbor' → logprob: -7.374194145202637
    10. 'adj' → logprob: -7.999194145202637

Token 2350: ' each' (ID: 2454)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.7289130091667175
    2. 'state' → logprob: -1.6039130687713623
    3. '(pair' → logprob: -2.8539130687713623
    4. 'd' → logprob: -3.1039130687713623
    5. ' (' → logprob: -3.2289130687713623
    6. 'each' → logprob: -3.6039130687713623
    7. 'candidate' → logprob: -3.7289130687713623
    8. ' pair' → logprob: -3.8539130687713623
    9. '(p' → logprob: -4.228912830352783
    10. '(d' → logprob: -4.228912830352783

Token 2351: ' d' (ID: 272)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.48707905411720276
    2. 'state' → logprob: -1.1120790243148804
    3. 'pair' → logprob: -3.23707914352417
    4. '(d' → logprob: -5.11207914352417
    5. ' candidate' → logprob: -5.61207914352417
    6. '(candidate' → logprob: -5.98707914352417
    7. 'd' → logprob: -6.86207914352417
    8. '(state' → logprob: -7.11207914352417
    9. ' state' → logprob: -7.11207914352417
    10. ' pair' → logprob: -7.36207914352417

Token 2352: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0014798635384067893
    2. 'istance' → logprob: -6.876479625701904
    3. '_point' → logprob: -9.126480102539062
    4. '(' → logprob: -10.001480102539062
    5. 'ist' → logprob: -10.126480102539062
    6. '_pair' → logprob: -10.126480102539062
    7. 'point' → logprob: -10.126480102539062
    8. 'd' → logprob: -10.626480102539062
    9. '_A' → logprob: -10.876480102539062
    10. '(point' → logprob: -11.376480102539062

Token 2353: ' and' (ID: 326)
  Prédit: '_neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.021421844139695168
    2. ',' → logprob: -4.896421909332275
    3. '       ' → logprob: -5.896421909332275
    4. ':' → logprob: -6.271421909332275
    5. '_neighbor' → logprob: -6.271421909332275
    6. '_to' → logprob: -6.521421909332275
    7. ' =' → logprob: -6.771421909332275
    8. 'neighbors' → logprob: -7.021421909332275
    9. 'for' → logprob: -7.396421909332275
    10. '_adj' → logprob: -7.646421909332275

Token 2354: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00011248346709180623
    2. ' d' → logprob: -9.500112533569336
    3. 'for' → logprob: -11.000112533569336
    4. 'candidate' → logprob: -11.250112533569336
    5. 'each' → logprob: -12.750112533569336
    6. '
' → logprob: -12.875112533569336
    7. ' for' → logprob: -13.750112533569336
    8. '...' → logprob: -15.125112533569336
    9. '```' → logprob: -15.500112533569336
    10. '#' → logprob: -15.625112533569336

Token 2355: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00014740281039848924
    2. 'A' → logprob: -8.875147819519043
    3. 'd' → logprob: -12.000147819519043
    4. '
' → logprob: -15.187647819519043
    5. 'b' → logprob: -15.625147819519043
    6. 'Б' → logprob: -15.750147819519043
    7. '_B' → logprob: -15.750147819519043
    8. ' B' → logprob: -15.875147819519043
    9. '```' → logprob: -16.000146865844727
    10. 'a' → logprob: -16.062646865844727

Token 2356: ' point' (ID: 2438)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.42448386549949646
    2. '       ' → logprob: -1.6744838953018188
    3. '_neighbors' → logprob: -2.4244837760925293
    4. 'd' → logprob: -3.0494837760925293
    5. 'for' → logprob: -5.049483776092529
    6. 'neighbor' → logprob: -5.549483776092529
    7. '   ' → logprob: -5.674483776092529
    8. '
' → logprob: -6.549483776092529
    9. ',' → logprob: -6.924483776092529
    10. '_ne' → logprob: -7.174483776092529

Token 2357: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01670493185520172
    2. 'd' → logprob: -5.01670503616333
    3. '
' → logprob: -5.39170503616333
    4. '_neighbors' → logprob: -6.51670503616333
    5. ',' → logprob: -6.76670503616333
    6. 'neighbors' → logprob: -7.51670503616333
    7. '```' → logprob: -7.64170503616333
    8. '        
' → logprob: -7.76670503616333
    9. '_d' → logprob: -8.141704559326172
    10. '#' → logprob: -8.641704559326172

Token 2358: 'route' (ID: 10466)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.2323774099349976
    2. ')' → logprob: -1.3573774099349976
    3. 'neighbors' → logprob: -1.6073774099349976
    4. 'for' → logprob: -2.982377529144287
    5. '#' → logprob: -3.232377529144287
    6. 'self' → logprob: -3.357377529144287
    7. '{' → logprob: -3.732377529144287
    8. '{}' → logprob: -3.857377529144287
    9. '):
' → logprob: -4.732377529144287
    10. 'd' → logprob: -4.732377529144287

Token 2359: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0028581321239471436
    2. '_dist' → logprob: -6.1278581619262695
    3. 'points' → logprob: -8.12785816192627
    4. '_point' → logprob: -9.37785816192627
    5. 'dist' → logprob: -9.75285816192627
    6. '```' → logprob: -9.87785816192627
    7. '_segments' → logprob: -10.12785816192627
    8. '_lengths' → logprob: -10.25285816192627
    9. ')_' → logprob: -10.37785816192627
    10. ')' → logprob: -10.62785816192627

Token 2360: ' neighbors' (ID: 31655)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.9316327571868896
    2. 'for' → logprob: -1.9316327571868896
    3. ')' → logprob: -2.0566327571868896
    4. '=' → logprob: -2.0566327571868896
    5. ',' → logprob: -2.4316327571868896
    6. '):' → logprob: -2.6816327571868896
    7. ':' → logprob: -2.6816327571868896
    8. '       ' → logprob: -2.8066327571868896
    9. ' for' → logprob: -3.5566327571868896
    10. ' =' → logprob: -3.8066327571868896

Token 2361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3079780340194702
    2. '):
' → logprob: -1.4329780340194702
    3. '=' → logprob: -1.9329780340194702
    4. '):' → logprob: -1.9329780340194702
    5. ' =' → logprob: -2.0579781532287598
    6. 'for' → logprob: -3.3079781532287598
    7. ')
' → logprob: -4.55797815322876
    8. ' for' → logprob: -5.05797815322876
    9. ',' → logprob: -5.18297815322876
    10. ':' → logprob: -5.55797815322876

Token 2362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0077448016963899136
    2. 'd' → logprob: -5.882744789123535
    3. 'neighbors' → logprob: -6.007744789123535
    4. 'points' → logprob: -7.382744789123535
    5. '#' → logprob: -7.632744789123535
    6. '```' → logprob: -8.257744789123535
    7. '
' → logprob: -8.382744789123535
    8. 'for' → logprob: -8.632744789123535
    9. '_neighbors' → logprob: -8.882744789123535
    10. 'route' → logprob: -9.257744789123535

Token 2363: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.13986074924468994
    2. '       ' → logprob: -2.6398606300354004
    3. 'd' → logprob: -3.2648606300354004
    4. 'self' → logprob: -4.3898606300354
    5. 'neighbor' → logprob: -5.0148606300354
    6. 'route' → logprob: -6.8898606300354
    7. '```' → logprob: -8.514861106872559
    8. 'ne' → logprob: -9.014861106872559
    9. 'points' → logprob: -9.389861106872559
    10. 'point' → logprob: -9.389861106872559

Token 2364: '_map' (ID: 11824)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.33646151423454285
    2. ' =' → logprob: -1.4614615440368652
    3. '_' → logprob: -3.8364615440368652
    4. '=' → logprob: -4.086461544036865
    5. 'A' → logprob: -5.086461544036865
    6. '_map' → logprob: -5.711461544036865
    7. '_neighbors' → logprob: -6.711461544036865
    8. '_a' → logprob: -6.836461544036865
    9. ':' → logprob: -6.961461544036865
    10. 's' → logprob: -7.336461544036865

Token 2365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12768056988716125
    2. ' =' → logprob: -2.127680540084839
    3. ':' → logprob: -7.252680778503418
    4. '={' → logprob: -11.252680778503418
    5. '={}' → logprob: -11.502680778503418
    6. '={}
' → logprob: -12.127680778503418
    7. '[' → logprob: -12.252680778503418
    8. '```' → logprob: -12.627680778503418
    9. '={
' → logprob: -13.377680778503418
    10. '{' → logprob: -13.502680778503418

Token 2366: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03414582833647728
    2. '{}
' → logprob: -3.5341458320617676
    3. '{' → logprob: -6.034145832061768
    4. 'dict' → logprob: -6.284145832061768
    5. '{
' → logprob: -9.03414535522461
    6. '{}

' → logprob: -12.28414535522461
    7. '{})' → logprob: -15.28414535522461
    8. ' {}' → logprob: -15.78414535522461
    9. ' dict' → logprob: -15.78414535522461
    10. ' {}
' → logprob: -16.28414535522461

Token 2367: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015669940039515495
    2. '       ' → logprob: -4.265669822692871
    3. ' for' → logprob: -6.515669822692871
    4. '```' → logprob: -11.015669822692871
    5. '   ' → logprob: -11.890669822692871
    6. '
' → logprob: -14.515669822692871
    7. '``' → logprob: -14.765669822692871
    8. '	for' → logprob: -14.890669822692871
    9. '           ' → logprob: -15.015669822692871
    10. '        
' → logprob: -16.015670776367188

Token 2368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000375380739569664
    2. '       ' → logprob: -8.000375747680664
    3. ' for' → logprob: -10.375375747680664
    4. 'n' → logprob: -12.000375747680664
    5. 'points' → logprob: -14.000375747680664
    6. 'length' → logprob: -14.375375747680664
    7. '   ' → logprob: -14.500375747680664
    8. '```' → logprob: -14.875375747680664
    9. 'route' → logprob: -16.000375747680664
    10. 'point' → logprob: -16.625375747680664

Token 2369: ' i' (ID: 575)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pt' → logprob: -1.2204675674438477
    2. 'dist' → logprob: -1.2204675674438477
    3. 'd' → logprob: -1.3454675674438477
    4. 'point' → logprob: -2.5954675674438477
    5. 'i' → logprob: -3.0954675674438477
    6. 'p' → logprob: -4.095467567443848
    7. 'idx' → logprob: -5.095467567443848
    8. 'pos' → logprob: -5.470467567443848
    9. 'key' → logprob: -6.845467567443848
    10. 'dp' → logprob: -7.595467567443848

Token 2370: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33544567227363586
    2. 'in' → logprob: -1.3354456424713135
    3. ',' → logprob: -3.8354456424713135
    4. 'n' → logprob: -8.335445404052734
    5. 'd' → logprob: -11.085445404052734
    6. '_in' → logprob: -11.335445404052734
    7. '0' → logprob: -11.460445404052734
    8. 'i' → logprob: -11.710445404052734
    9. '1' → logprob: -11.960445404052734
    10. 'In' → logprob: -12.085445404052734

Token 2371: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2590717673301697
    2. 'd' → logprob: -1.6340718269348145
    3. 'pt' → logprob: -3.5090718269348145
    4. 'p' → logprob: -6.3840718269348145
    5. 'dp' → logprob: -7.1340718269348145
    6. 'point' → logprob: -8.134071350097656
    7. ' dist' → logprob: -8.259071350097656
    8. 'pd' → logprob: -10.259071350097656
    9. 'pos' → logprob: -10.384071350097656
    10. ' d' → logprob: -10.634071350097656

Token 2372: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.082206591963768
    2. 'i' → logprob: -2.9572064876556396
    3. '=' → logprob: -4.332206726074219
    4. 'e' → logprob: -5.832206726074219
    5. 'route' → logprob: -6.207206726074219
    6. 'ist' → logprob: -6.582206726074219
    7. '=i' → logprob: -6.707206726074219
    8. 'a' → logprob: -6.832206726074219
    9. 'f' → logprob: -7.082206726074219
    10. 'for' → logprob: -7.332206726074219

Token 2373: ' enumerate' (ID: 29671)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.2535514831542969
    2. 'enumer' → logprob: -1.5035514831542969
    3. ' enumerate' → logprob: -7.503551483154297
    4. ' route' → logprob: -7.753551483154297
    5. '(route' → logprob: -8.003551483154297
    6. 'range' → logprob: -9.003551483154297
    7. '[(' → logprob: -9.753551483154297
    8. 'self' → logprob: -10.003551483154297
    9. '[' → logprob: -11.253551483154297
    10. '```' → logprob: -11.753551483154297

Token 2374: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.00012630375567823648
    2. 'self' → logprob: -9.125125885009766
    3. ' route' → logprob: -11.250125885009766
    4. '(route' → logprob: -12.625125885009766
    5. 'range' → logprob: -15.250125885009766
    6. '   ' → logprob: -15.375125885009766
    7. '$route' → logprob: -15.375125885009766
    8. '       ' → logprob: -16.250125885009766
    9. '.route' → logprob: -16.750125885009766
    10. '[' → logprob: -17.625125885009766

Token 2375: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0006354739889502525
    2. 'points' → logprob: -8.000635147094727
    3. 'route' → logprob: -9.250635147094727
    4. 'Points' → logprob: -9.375635147094727
    5. '_route' → logprob: -10.375635147094727
    6. '       ' → logprob: -11.250635147094727
    7. '`' → logprob: -11.750635147094727
    8. ')' → logprob: -11.875635147094727
    9. 's' → logprob: -12.125635147094727
    10. '_POINTS' → logprob: -12.375635147094727

Token 2376: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00481944577768445
    2. '):' → logprob: -5.379819393157959
    3. '):
' → logprob: -8.879819869995117
    4. ':' → logprob: -11.004819869995117
    5. ':
' → logprob: -11.004819869995117
    6. '   ' → logprob: -11.629819869995117
    7. ')' → logprob: -11.879819869995117
    8. ',' → logprob: -12.879819869995117
    9. '[:-' → logprob: -13.629819869995117
    10. ' ):
' → logprob: -13.879819869995117

Token 2377: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24626606702804565
    2. '```' → logprob: -1.8712661266326904
    3. '           ' → logprob: -3.3712661266326904
    4. ':
' → logprob: -4.371265888214111
    5. '       ' → logprob: -4.621265888214111
    6. ':' → logprob: -5.746265888214111
    7. '):
' → logprob: -6.621265888214111
    8. '``' → logprob: -7.246265888214111
    9. 'neighbors' → logprob: -7.371265888214111
    10. ',' → logprob: -7.496265888214111

Token 2378: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.11931341886520386
    2. ' neighbors' → logprob: -2.3693134784698486
    3. '   ' → logprob: -4.2443132400512695
    4. 'if' → logprob: -6.2443132400512695
    5. ' if' → logprob: -7.1193132400512695
    6. '           ' → logprob: -7.2443132400512695
    7. '       ' → logprob: -8.11931324005127
    8. '_neighbors' → logprob: -8.61931324005127
    9. 'n' → logprob: -8.99431324005127
    10. '```' → logprob: -9.11931324005127

Token 2379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.707317590713501
    2. '=' → logprob: -0.832317590713501
    3. 's' → logprob: -3.582317590713501
    4. '_map' → logprob: -4.082317352294922
    5. '_neighbors' → logprob: -4.707317352294922
    6. '_' → logprob: -5.082317352294922
    7. '_set' → logprob: -5.832317352294922
    8. '_ids' → logprob: -6.957317352294922
    9. '   ' → logprob: -7.082317352294922
    10. ':' → logprob: -7.082317352294922

Token 2380: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.006647398695349693
    2. 'set' → logprob: -5.25664758682251
    3. '[
' → logprob: -7.00664758682251
    4. '[]' → logprob: -7.88164758682251
    5. '[' → logprob: -9.756647109985352
    6. ' []
' → logprob: -10.506647109985352
    7. '{' → logprob: -10.631647109985352
    8. '[]

' → logprob: -11.631647109985352
    9. '{}
' → logprob: -12.131647109985352
    10. '{
' → logprob: -12.881647109985352

Token 2381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23674222826957703
    2. 'if' → logprob: -1.9867422580718994
    3. '       ' → logprob: -3.3617422580718994
    4. ' if' → logprob: -3.3617422580718994
    5. 'for' → logprob: -6.73674201965332
    6. '```' → logprob: -6.73674201965332
    7. '
' → logprob: -7.73674201965332
    8. '[]
' → logprob: -7.73674201965332
    9. '   ' → logprob: -7.98674201965332
    10. '[]' → logprob: -8.61174201965332

Token 2382: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005393316387198865
    2. '           ' → logprob: -8.000539779663086
    3. ' if' → logprob: -8.625539779663086
    4. '       ' → logprob: -10.875539779663086
    5. '   ' → logprob: -12.875539779663086
    6. '	if' → logprob: -13.250539779663086
    7. 'for' → logprob: -14.000539779663086
    8. 'If' → logprob: -16.750539779663086
    9. '```' → logprob: -16.875539779663086
    10. '
' → logprob: -17.500539779663086

Token 2383: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008067715098150074
    2. ' i' → logprob: -7.12580680847168
    3. '   ' → logprob: -14.12580680847168
    4. ' ' → logprob: -14.37580680847168
    5. '	i' → logprob: -14.62580680847168
    6. '  ' → logprob: -15.12580680847168
    7. '           ' → logprob: -16.12580680847168
    8. '     ' → logprob: -16.87580680847168
    9. '    ' → logprob: -17.12580680847168
    10. '0' → logprob: -17.75080680847168

Token 2384: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12710480391979218
    2. ' >' → logprob: -2.1271047592163086
    3. '-' → logprob: -8.752104759216309
    4. '0' → logprob: -12.002104759216309
    5. '+' → logprob: -12.502104759216309
    6. ' -' → logprob: -12.627104759216309
    7. '```' → logprob: -13.877104759216309
    8. '>-' → logprob: -14.252104759216309
    9. '   ' → logprob: -14.502104759216309
    10. ' ' → logprob: -14.627104759216309

Token 2385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '=' → logprob: -15.000109672546387
    4. '   ' → logprob: -17.12510871887207
    5. '  ' → logprob: -18.87510871887207
    6. '۰' → logprob: -19.75010871887207
    7. ' ' → logprob: -20.25010871887207
    8. '1' → logprob: -20.37510871887207
    9. '```' → logprob: -20.62510871887207
    10. '     ' → logprob: -20.87510871887207

Token 2386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -15.625006675720215
    4. '```' → logprob: -15.875006675720215
    5. '   ' → logprob: -17.1250057220459
    6. '۰' → logprob: -18.8750057220459
    7. '``' → logprob: -19.1250057220459
    8. '  ' → logprob: -19.5625057220459
    9. '...' → logprob: -19.6875057220459
    10. '1' → logprob: -19.8125057220459

Token 2387: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24343624711036682
    2. ':
' → logprob: -1.6184362173080444
    3. ':' → logprob: -4.118436336517334
    4. ',' → logprob: -6.743436336517334
    5. '           ' → logprob: -8.868435859680176
    6. '):
' → logprob: -8.993435859680176
    7. '```' → logprob: -10.118435859680176
    8. '   ' → logprob: -10.993435859680176
    9. ' and' → logprob: -11.368435859680176
    10. 'neighbors' → logprob: -11.493435859680176

Token 2388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6415562629699707
    2. 'neighbors' → logprob: -0.7665562629699707
    3. ' neighbors' → logprob: -5.016556262969971
    4. '           ' → logprob: -6.141556262969971
    5. '```' → logprob: -9.891555786132812
    6. '   ' → logprob: -10.141555786132812
    7. '_neighbors' → logprob: -10.891555786132812
    8. '                   ' → logprob: -12.266555786132812
    9. 'neighbor' → logprob: -12.266555786132812
    10. '       ' → logprob: -12.266555786132812

Token 2389: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.0020265427883714437
    2. ' neighbors' → logprob: -6.252026557922363
    3. '               ' → logprob: -10.252026557922363
    4. '           ' → logprob: -10.252026557922363
    5. 'route' → logprob: -11.502026557922363
    6. 'neighbor' → logprob: -11.752026557922363
    7. '   ' → logprob: -12.002026557922363
    8. '_neighbors' → logprob: -13.377026557922363
    9. '```' → logprob: -14.252026557922363
    10. 'append' → logprob: -14.752026557922363

Token 2390: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02542300708591938
    2. '=' → logprob: -4.025423049926758
    3. ' =' → logprob: -5.900423049926758
    4. '_neighbors' → logprob: -6.150423049926758
    5. '.' → logprob: -6.275423049926758
    6. 'neighbors' → logprob: -8.900423049926758
    7. '```' → logprob: -9.400423049926758
    8. 'append' → logprob: -9.525423049926758
    9. ' .' → logprob: -10.150423049926758
    10. '_append' → logprob: -10.525423049926758

Token 2391: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -1.0564331205387134e-05
    2. ' route' → logprob: -11.87501049041748
    3. '(route' → logprob: -12.62501049041748
    4. '   ' → logprob: -16.250011444091797
    5. '       ' → logprob: -16.375011444091797
    6. '           ' → logprob: -16.500011444091797
    7. '.route' → logprob: -19.000011444091797
    8. '               ' → logprob: -19.750011444091797
    9. '_route' → logprob: -20.125011444091797
    10. '$route' → logprob: -20.125011444091797

Token 2392: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.8624639324116288e-06
    2. 'points' → logprob: -13.625001907348633
    3. 'i' → logprob: -15.375001907348633
    4. '[i' → logprob: -15.500001907348633
    5. '(i' → logprob: -16.500001907348633
    6. '_POINTS' → logprob: -16.875001907348633
    7. 'Points' → logprob: -17.250001907348633
    8. '_positions' → logprob: -18.000001907348633
    9. '_steps' → logprob: -18.000001907348633
    10. '_routes' → logprob: -18.375001907348633

Token 2393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. 'i' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.500004768371582
    4. '[
' → logprob: -15.000004768371582
    5. '[' → logprob: -16.750003814697266
    6. '
' → logprob: -17.000003814697266
    7. ' [' → logprob: -17.250003814697266
    8. '```' → logprob: -18.500003814697266
    9. '(i' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.125003814697266

Token 2394: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02055228315293789
    2. ' -' → logprob: -3.895552396774292
    3. ']' → logprob: -12.270552635192871
    4. '[i' → logprob: -13.395552635192871
    5. 'i' → logprob: -13.895552635192871
    6. '```' → logprob: -14.145552635192871
    7. '1' → logprob: -14.270552635192871
    8. '[' → logprob: -14.270552635192871
    9. '   ' → logprob: -14.645552635192871
    10. ' ' → logprob: -15.270552635192871

Token 2395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -17.5000057220459
    5. '       ' → logprob: -18.8750057220459
    6. '           ' → logprob: -19.0625057220459
    7. '  ' → logprob: -19.0625057220459
    8. '    ' → logprob: -19.9375057220459
    9. ']' → logprob: -20.1875057220459
    10. '     ' → logprob: -20.3750057220459

Token 2396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -14.25000286102295
    4. '   ' → logprob: -16.250003814697266
    5. '0' → logprob: -17.187503814697266
    6. '
' → logprob: -17.500003814697266
    7. '``' → logprob: -17.562503814697266
    8. '  ' → logprob: -17.812503814697266
    9. '2' → logprob: -18.000003814697266
    10. '-' → logprob: -18.125003814697266

Token 2397: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.07903354614973068
    2. '])' → logprob: -2.579033613204956
    3. ')
' → logprob: -9.454033851623535
    4. '])
' → logprob: -10.454033851623535
    5. '           ' → logprob: -11.204033851623535
    6. ')' → logprob: -11.454033851623535
    7. '])

' → logprob: -12.454033851623535
    8. ']' → logprob: -12.954033851623535
    9. ' ])
' → logprob: -13.079033851623535
    10. '       ' → logprob: -13.454033851623535

Token 2398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.621933451038785e-05
    2. '```' → logprob: -10.125056266784668
    3. '            
' → logprob: -12.000056266784668
    4. '       ' → logprob: -12.500056266784668
    5. '
' → logprob: -13.500056266784668
    6. '<|end|>' → logprob: -14.125056266784668
    7. '          ' → logprob: -14.375056266784668
    8. '   ' → logprob: -14.375056266784668
    9. '    
' → logprob: -14.625056266784668
    10. '		' → logprob: -14.875056266784668

Token 2399: ' neighbors' (ID: 31655)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5941479206085205
    2. 'neighbors' (adapté à ' neighbors') → logprob: -0.8441479206085205
    3. 'if' → logprob: -4.719147682189941
    4. ' neighbors' → logprob: -5.344147682189941
    5. '       ' → logprob: -6.594147682189941
    6. ' if' → logprob: -6.719147682189941
    7. '```' → logprob: -6.969147682189941
    8. '   ' → logprob: -7.344147682189941
    9. '
' → logprob: -9.094147682189941
    10. '``' → logprob: -10.594147682189941

Token 2400: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03915564715862274
    2. '.' → logprob: -3.2891557216644287
    3. 'append' → logprob: -7.53915548324585
    4. '.
' → logprob: -8.664155960083008
    5. ':
' → logprob: -9.289155960083008
    6. '           ' → logprob: -9.539155960083008
    7. '...' → logprob: -9.914155960083008
    8. ':' → logprob: -10.039155960083008
    9. ',' → logprob: -10.289155960083008
    10. '<|end|>' → logprob: -10.914155960083008

Token 2401: '(d' (ID: 2572)
  Prédit: '(route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.10102172195911407
    2. 'route' → logprob: -2.3510217666625977
    3. '(' → logprob: -7.601021766662598
    4. ' route' → logprob: -8.101021766662598
    5. ' (' → logprob: -12.101021766662598
    6. '(
' → logprob: -12.226021766662598
    7. '('' → logprob: -15.601021766662598
    8. '.route' → logprob: -15.851021766662598
    9. '((' → logprob: -16.10102081298828
    10. '_route' → logprob: -16.10102081298828

Token 2402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28127697110176086
    2. ')
' → logprob: -1.4062769412994385
    3. ' )' → logprob: -10.15627670288086
    4. ' )
' → logprob: -10.15627670288086
    5. '   ' → logprob: -11.40627670288086
    6. '       ' → logprob: -11.40627670288086
    7. '           ' → logprob: -12.15627670288086
    8. ')
' → logprob: -12.40627670288086
    9. ')

' → logprob: -12.40627670288086
    10. '
' → logprob: -12.53127670288086

Token 2403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13832987844944
    2. ' if' → logprob: -2.7633299827575684
    3. '   ' → logprob: -2.8883299827575684
    4. 'if' → logprob: -5.013329982757568
    5. '       ' → logprob: -6.013329982757568
    6. '	if' → logprob: -7.513329982757568
    7. '```' → logprob: -8.01332950592041
    8. '		' → logprob: -8.51332950592041
    9. '               ' → logprob: -9.63832950592041
    10. '    ' → logprob: -10.26332950592041

Token 2404: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04742036387324333
    2. ' if' → logprob: -3.5474202632904053
    3. '           ' → logprob: -4.047420501708984
    4. '```' → logprob: -10.922420501708984
    5. '   ' → logprob: -11.172420501708984
    6. '       ' → logprob: -11.422420501708984
    7. '	if' → logprob: -12.672420501708984
    8. ' ' → logprob: -15.672420501708984
    9. 'for' → logprob: -15.672420501708984
    10. '               ' → logprob: -15.797420501708984

Token 2405: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003603036515414715
    2. ' i' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.253602981567383
    4. '	i' → logprob: -14.878602981567383
    5. ' ' → logprob: -15.253602981567383
    6. '  ' → logprob: -15.628602981567383
    7. '(i' → logprob: -16.253602981567383
    8. '    ' → logprob: -16.253602981567383
    9. '       ' → logprob: -16.378602981567383
    10. '     ' → logprob: -16.628602981567383

Token 2406: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10802891850471497
    2. '<' → logprob: -2.3580288887023926
    3. '+' → logprob: -4.983028888702393
    4. ' +' → logprob: -7.233028888702393
    5. '<len' → logprob: -8.85802936553955
    6. ' ' → logprob: -10.85802936553955
    7. '<i' → logprob: -11.73302936553955
    8. '<|end|>' → logprob: -12.23302936553955
    9. ' ' → logprob: -12.35802936553955
    10. '<size' → logprob: -12.48302936553955

Token 2407: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004078997299075127
    2. ' len' → logprob: -5.5040788650512695
    3. '(len' → logprob: -15.25407886505127
    4. '   ' → logprob: -15.62907886505127
    5. ' ' → logprob: -17.004079818725586
    6. '	len' → logprob: -17.879079818725586
    7. '  ' → logprob: -18.004079818725586
    8. '           ' → logprob: -18.129079818725586
    9. '[len' → logprob: -18.254079818725586
    10. '       ' → logprob: -19.004079818725586

Token 2408: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.0024779161904007196
    2. 'route' → logprob: -6.002478122711182
    3. '(self' → logprob: -14.127477645874023
    4. '(' → logprob: -15.002477645874023
    5. '(
' → logprob: -15.002477645874023
    6. ' route' → logprob: -15.002477645874023
    7. 'self' → logprob: -15.127477645874023
    8. '$route' → logprob: -16.002477645874023
    9. '.route' → logprob: -16.252477645874023
    10. '_route' → logprob: -17.127477645874023

Token 2409: '_points' (ID: 30070)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.5265880227088928
    2. '(route' → logprob: -0.9015880227088928
    3. 'self' → logprob: -6.151587963104248
    4. 's' → logprob: -7.651587963104248
    5. '_route' → logprob: -7.901587963104248
    6. '(self' → logprob: -8.776588439941406
    7. '_points' → logprob: -9.026588439941406
    8. '.route' → logprob: -9.651588439941406
    9. ' route' → logprob: -10.401588439941406
    10. '-' → logprob: -10.776588439941406

Token 2410: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008289250545203686
    2. ')-' → logprob: -7.250828742980957
    3. '-' → logprob: -9.500828742980957
    4. ' -' → logprob: -10.375828742980957
    5. '[' → logprob: -11.875828742980957
    6. ' )' → logprob: -12.875828742980957
    7. '   ' → logprob: -13.750828742980957
    8. '       ' → logprob: -14.250828742980957
    9. '')' → logprob: -15.250828742980957
    10. '-)' → logprob: -15.375828742980957

Token 2411: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3869014084339142
    2. ' -' → logprob: -1.1369013786315918
    3. ')' → logprob: -11.26190185546875
    4. '[' → logprob: -12.01190185546875
    5. '   ' → logprob: -12.88690185546875
    6. ' ' → logprob: -13.01190185546875
    7. ')-' → logprob: -13.01190185546875
    8. '1' → logprob: -13.88690185546875
    9. '       ' → logprob: -13.88690185546875
    10. '           ' → logprob: -14.38690185546875

Token 2412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.625028610229492
    4. '```' → logprob: -16.875028610229492
    5. '<|end|>' → logprob: -18.125028610229492
    6. '2' → logprob: -18.250028610229492
    7. '  ' → logprob: -19.125028610229492
    8. '...' → logprob: -20.000028610229492
    9. '۱' → logprob: -20.375028610229492
    10. '
' → logprob: -20.562528610229492

Token 2413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.625003814697266
    5. '<|end|>' → logprob: -19.875003814697266
    6. '
' → logprob: -20.000003814697266
    7. '...' → logprob: -20.000003814697266
    8. '  ' → logprob: -20.625003814697266
    9. '       ' → logprob: -21.500003814697266
    10. '0' → logprob: -21.625003814697266

Token 2414: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07717370241880417
    2. ':' → logprob: -3.4521737098693848
    3. '               ' → logprob: -3.5771737098693848
    4. '):
' → logprob: -4.827173709869385
    5. '           ' → logprob: -5.452173709869385
    6. ']:
' → logprob: -6.702173709869385
    7. ',' → logprob: -7.702173709869385
    8. '       ' → logprob: -7.952173709869385
    9. '():
' → logprob: -10.077173233032227
    10. '```' → logprob: -10.202173233032227

Token 2415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00218452257104218
    2. 'neighbors' → logprob: -6.6271843910217285
    3. ' neighbors' → logprob: -7.6271843910217285
    4. '           ' → logprob: -8.002184867858887
    5. '```' → logprob: -11.377184867858887
    6. '   ' → logprob: -11.627184867858887
    7. '              ' → logprob: -12.377184867858887
    8. '                   ' → logprob: -13.127184867858887
    9. '_neighbors' → logprob: -13.127184867858887
    10. '                ' → logprob: -13.377184867858887

Token 2416: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.20146021246910095
    2. 'neighbors' (adapté à ' neighbors') → logprob: -1.7014602422714233
    3. '_neighbors' → logprob: -10.326459884643555
    4. 'Neighbors' → logprob: -12.451459884643555
    5. ' neighbours' → logprob: -12.826459884643555
    6. '               ' → logprob: -12.951459884643555
    7. '           ' → logprob: -13.201459884643555
    8. 'route' → logprob: -14.326459884643555
    9. '```' → logprob: -14.576459884643555
    10. ' peers' → logprob: -14.701459884643555

Token 2417: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007027800311334431
    2. '.' → logprob: -7.750702857971191
    3. 'append' → logprob: -9.000702857971191
    4. '           ' → logprob: -9.375702857971191
    5. 'neighbors' → logprob: -11.000702857971191
    6. '=' → logprob: -11.625702857971191
    7. '```' → logprob: -11.875702857971191
    8. '+=' → logprob: -12.125702857971191
    9. '_neighbors' → logprob: -12.125702857971191
    10. '_append' → logprob: -13.125702857971191

Token 2418: '(route' (ID: 64883)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.004281515255570412
    2. ' route' → logprob: -5.504281520843506
    3. '(route' → logprob: -8.504281044006348
    4. '   ' → logprob: -16.004281997680664
    5. '       ' → logprob: -16.129281997680664
    6. '           ' → logprob: -16.629281997680664
    7. '.route' → logprob: -16.629281997680664
    8. '_route' → logprob: -17.379281997680664
    9. '$route' → logprob: -17.504281997680664
    10. '               ' → logprob: -18.254281997680664

Token 2419: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.3782830137643032e-05
    2. 'points' → logprob: -11.25001335144043
    3. 'Points' → logprob: -14.37501335144043
    4. 's' → logprob: -16.75001335144043
    5. '_POINTS' → logprob: -16.75001335144043
    6. '[i' → logprob: -17.25001335144043
    7. 'oints' → logprob: -17.50001335144043
    8. '       ' → logprob: -18.50001335144043
    9. '(points' → logprob: -18.62501335144043
    10. ' points' → logprob: -19.00001335144043

Token 2420: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.750000953674316
    3. '(i' → logprob: -16.0
    4. '   ' → logprob: -18.625
    5. '[index' → logprob: -19.5
    6. '[
' → logprob: -19.875
    7. '[' → logprob: -20.0
    8. '[idx' → logprob: -20.25
    9. '       ' → logprob: -20.625
    10. '[next' → logprob: -20.625

Token 2421: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407880425453186
    2. ' +' → logprob: -0.9740787744522095
    3. '+i' → logprob: -13.724079132080078
    4. '   ' → logprob: -15.099079132080078
    5. ' ' → logprob: -16.224079132080078
    6. '[i' → logprob: -16.599079132080078
    7. '[' → logprob: -16.724079132080078
    8. ' ' → logprob: -17.099079132080078
    9. '+
' → logprob: -17.099079132080078
    10. '＋' → logprob: -17.599079132080078

Token 2422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '<|end|>' → logprob: -18.12502098083496
    5. '```' → logprob: -18.12502098083496
    6. '0' → logprob: -18.62502098083496
    7. '  ' → logprob: -19.25002098083496
    8. ']' → logprob: -20.31252098083496
    9. '
' → logprob: -20.43752098083496
    10. '<|end|>' → logprob: -20.68752098083496

Token 2423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -17.750009536743164
    4. '```' → logprob: -18.250009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '  ' → logprob: -19.875009536743164
    7. '-' → logprob: -19.937509536743164
    8. '0' → logprob: -19.937509536743164
    9. '۱' → logprob: -20.000009536743164
    10. '<|end|>' → logprob: -20.062509536743164

Token 2424: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.35833367705345154
    2. ')' → logprob: -1.358333706855774
    3. '])
' → logprob: -3.4833335876464844
    4. ')
' → logprob: -4.983333587646484
    5. '           ' → logprob: -5.608333587646484
    6. '               ' → logprob: -6.233333587646484
    7. ')]' → logprob: -7.733333587646484
    8. ')])' → logprob: -9.108333587646484
    9. ']' → logprob: -9.233333587646484
    10. '       ' → logprob: -9.858333587646484

Token 2425: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2146177291870117
    2. '       ' → logprob: -1.3396177291870117
    3. '<|end|>' → logprob: -1.8396177291870117
    4. '
' → logprob: -2.0896177291870117
    5. '           ' → logprob: -2.7146177291870117
    6. '```' → logprob: -3.5896177291870117
    7. ':' → logprob: -4.839617729187012
    8. ')
' → logprob: -4.839617729187012
    9. ']' → logprob: -4.964617729187012
    10. '   ' → logprob: -5.089617729187012

Token 2426: ' neighbors' (ID: 31655)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8515860438346863
    2. 'neighbors' (adapté à ' neighbors') → logprob: -1.226586103439331
    3. '       ' → logprob: -1.351586103439331
    4. '   ' → logprob: -4.101585865020752
    5. ' neighbors' → logprob: -5.601585865020752
    6. 'for' → logprob: -7.601585865020752
    7. '_neighbors' → logprob: -9.22658634185791
    8. '               ' → logprob: -9.35158634185791
    9. ' for' → logprob: -9.47658634185791
    10. '
' → logprob: -10.72658634185791

Token 2427: '_map' (ID: 11824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.229313611984253
    2. '=' → logprob: -1.354313611984253
    3. '.' → logprob: -1.854313611984253
    4. ']' → logprob: -2.229313611984253
    5. '<|end|>' → logprob: -2.354313611984253
    6. ' =' → logprob: -3.479313611984253
    7. ':' → logprob: -3.604313611984253
    8. '.append' → logprob: -4.854313850402832
    9. '=[]' → logprob: -5.979313850402832
    10. '])' → logprob: -6.104313850402832

Token 2428: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.38787052035331726
    2. '[' → logprob: -1.1378705501556396
    3. '=' → logprob: -7.0128703117370605
    4. '[r' → logprob: -10.387870788574219
    5. ' =' → logprob: -10.762870788574219
    6. '=d' → logprob: -11.262870788574219
    7. '[row' → logprob: -12.137870788574219
    8. '[line' → logprob: -12.262870788574219
    9. '[
' → logprob: -12.762870788574219
    10. '[data' → logprob: -13.012870788574219

Token 2429: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01102259662002325
    2. ']' → logprob: -4.886022567749023
    3. ' =' → logprob: -6.261022567749023
    4. ']=' → logprob: -6.511022567749023
    5. ')' → logprob: -11.636022567749023
    6. '=
' → logprob: -13.136022567749023
    7. ')=' → logprob: -13.386022567749023
    8. '=[]' → logprob: -14.136022567749023
    9. '   ' → logprob: -14.511022567749023
    10. '=[' → logprob: -15.761022567749023

Token 2430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197933852672577
    2. ' =' → logprob: -2.811979293823242
    3. '=[' → logprob: -12.561979293823242
    4. '=[]' → logprob: -12.561979293823242
    5. '=
' → logprob: -13.811979293823242
    6. ']=' → logprob: -14.311979293823242
    7. ']' → logprob: -14.561979293823242
    8. ')' → logprob: -14.811979293823242
    9. '	' → logprob: -15.061979293823242
    10. ' =[' → logprob: -15.186979293823242

Token 2431: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.03704245015978813
    2. '[' → logprob: -3.4120423793792725
    3. 'route' → logprob: -6.287042617797852
    4. '[
' → logprob: -7.412042617797852
    5. ' neighbors' → logprob: -7.537042617797852
    6. '[n' → logprob: -9.662042617797852
    7. 'neighbor' → logprob: -9.912042617797852
    8. ' [' → logprob: -10.162042617797852
    9. 'set' → logprob: -10.787042617797852
    10. '{' → logprob: -10.912042617797852

Token 2432: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25306224822998047
    2. '       ' → logprob: -1.5030622482299805
    3. '        
' → logprob: -7.7530622482299805
    4. '```' → logprob: -8.37806224822998
    5. 'while' → logprob: -9.00306224822998
    6. '
' → logprob: -9.25306224822998
    7. '<|end|>' → logprob: -9.50306224822998
    8. ' while' → logprob: -9.62806224822998
    9. '

' → logprob: -10.50306224822998
    10. 'import' → logprob: -10.62806224822998

Token 2433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01876106671988964
    2. 'while' → logprob: -4.518761157989502
    3. ' while' → logprob: -5.893761157989502
    4. '
' → logprob: -6.018761157989502
    5. '        
' → logprob: -6.768761157989502
    6. '<|end|>' → logprob: -8.018760681152344
    7. '```' → logprob: -8.143760681152344
    8. '   ' → logprob: -8.768760681152344
    9. ')' → logprob: -8.768760681152344
    10. '	while' → logprob: -9.268760681152344

Token 2434: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03496749326586723
    2. 'while' (adapté à ' while') → logprob: -3.5349674224853516
    3. '```' → logprob: -5.659967422485352
    4. '
' → logprob: -6.534967422485352
    5. '        
' → logprob: -9.034967422485352
    6. ' while' → logprob: -9.409967422485352
    7. '   ' → logprob: -10.409967422485352
    8. '``' → logprob: -11.159967422485352
    9. '           ' → logprob: -11.909967422485352
    10. 'import' → logprob: -12.159967422485352

Token 2435: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0005815077456645668
    2. ' heap' → logprob: -7.500581741333008
    3. 'len' → logprob: -10.500581741333008
    4. '   ' → logprob: -13.875581741333008
    5. '(heap' → logprob: -16.750581741333008
    6. 'True' → logprob: -17.250581741333008
    7. ' len' → logprob: -17.625581741333008
    8. 'dist' → logprob: -19.375581741333008
    9. 'he' → logprob: -19.375581741333008
    10. 'h' → logprob: -19.500581741333008

Token 2436: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.33845266699790955
    2. ':' → logprob: -2.2134525775909424
    3. '[' → logprob: -2.2134525775909424
    4. ' and' → logprob: -2.8384525775909424
    5. 'and' → logprob: -5.0884528160095215
    6. '       ' → logprob: -5.8384528160095215
    7. '           ' → logprob: -8.463452339172363
    8. '   ' → logprob: -8.588452339172363
    9. ',' → logprob: -9.213452339172363
    10. '):
' → logprob: -9.838452339172363

Token 2437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011560667306184769
    2. ',' → logprob: -4.511560440063477
    3. '_,' → logprob: -8.511560440063477
    4. '       ' → logprob: -8.511560440063477
    5. '```' → logprob: -9.761560440063477
    6. ' ,' → logprob: -11.261560440063477
    7. '   ' → logprob: -11.511560440063477
    8. '               ' → logprob: -11.511560440063477
    9. 'cost' → logprob: -13.011560440063477
    10. '		' → logprob: -13.136560440063477

Token 2438: ' cur' (ID: 4396)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0857313871383667
    2. 'dist' → logprob: -2.8357315063476562
    3. '           ' → logprob: -5.085731506347656
    4. 'curr' → logprob: -5.085731506347656
    5. '(cost' → logprob: -5.085731506347656
    6. 'cur' (adapté à ' cur') → logprob: -6.460731506347656
    7. '               ' → logprob: -6.585731506347656
    8. '_,' → logprob: -7.335731506347656
    9. 'distance' → logprob: -7.710731506347656
    10. 'current' → logprob: -8.210731506347656

Token 2439: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6563891768455505
    2. '_dist' → logprob: -1.1563892364501953
    3. '_distance' → logprob: -2.2813892364501953
    4. '_' → logprob: -3.9063892364501953
    5. '_,' → logprob: -4.031389236450195
    6. ',' → logprob: -4.531389236450195
    7. '[' → logprob: -5.406389236450195
    8. 'dist' → logprob: -5.531389236450195
    9. ' ,' → logprob: -6.281389236450195
    10. ' =' → logprob: -6.906389236450195

Token 2440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011824887478724122
    2. ' ,' → logprob: -6.876182556152344
    3. '_,' → logprob: -10.001182556152344
    4. '           ' → logprob: -10.251182556152344
    5. ',
' → logprob: -11.001182556152344
    6. '[' → logprob: -11.751182556152344
    7. '=' → logprob: -12.126182556152344
    8. '<|end|>' → logprob: -12.126182556152344
    9. ')' → logprob: -12.376182556152344
    10. '),' → logprob: -12.376182556152344

Token 2441: ' (' (ID: 350)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.005204828456044197
    2. '(d' → logprob: -5.755204677581787
    3. ' (' → logprob: -6.755204677581787
    4. 'cur' → logprob: -8.255205154418945
    5. '(current' → logprob: -8.380205154418945
    6. '(state' → logprob: -8.755205154418945
    7. '(pos' → logprob: -9.755205154418945
    8. '(c' → logprob: -9.880205154418945
    9. '(curr' → logprob: -10.255205154418945
    10. 'state' → logprob: -10.505205154418945

Token 2442: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002028251619776711
    2. ' d' → logprob: -9.000203132629395
    3. 'cur' → logprob: -9.500203132629395
    4. '   ' → logprob: -13.125203132629395
    5. ')d' → logprob: -14.125203132629395
    6. ')' → logprob: -15.125203132629395
    7. 'c' → logprob: -15.250203132629395
    8. '     ' → logprob: -15.375203132629395
    9. 'curr' → logprob: -15.625203132629395
    10. '```' → logprob: -15.625203132629395

Token 2443: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. ')' → logprob: -17.125
    3. 'a' → logprob: -17.5
    4. '_A' → logprob: -17.875
    5. ' A' → logprob: -18.125
    6. ',' → logprob: -18.25
    7. 'А' → logprob: -19.0
    8. 'd' → logprob: -19.25
    9. '	A' → logprob: -19.5
    10. '```' → logprob: -20.25

Token 2444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005730479606427252
    2. ',d' → logprob: -8.00057315826416
    3. ' ,' → logprob: -8.62557315826416
    4. '<|end|>' → logprob: -11.62557315826416
    5. '),' → logprob: -11.87557315826416
    6. '‌,' → logprob: -12.12557315826416
    7. ',
' → logprob: -12.25057315826416
    8. ',next' → logprob: -12.37557315826416
    9. ')' → logprob: -12.62557315826416
    10. ',user' → logprob: -13.25057315826416

Token 2445: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.318681188422488e-05
    2. ' d' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. '       ' → logprob: -17.25001335144043
    5. '           ' → logprob: -18.37501335144043
    6. '      ' → logprob: -18.87501335144043
    7. '    ' → logprob: -18.87501335144043
    8. '     ' → logprob: -18.87501335144043
    9. '	d' → logprob: -18.87501335144043
    10. ')d' → logprob: -18.87501335144043

Token 2446: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00018375257786829025
    2. ',' → logprob: -9.125184059143066
    3. ')' → logprob: -9.875184059143066
    4. '),' → logprob: -12.000184059143066
    5. 'A' → logprob: -12.500184059143066
    6. ',
' → logprob: -13.250184059143066
    7. '
' → logprob: -13.375184059143066
    8. '_B' → logprob: -13.500184059143066
    9. '```' → logprob: -13.750184059143066
    10. ' B' → logprob: -13.875184059143066

Token 2447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')=' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.875001907348633
    4. ')
' → logprob: -17.625001907348633
    5. '       ' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '))' → logprob: -19.375001907348633
    8. '),' → logprob: -19.875001907348633
    9. ')`' → logprob: -19.875001907348633
    10. '           ' → logprob: -20.125001907348633

Token 2448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12736628949642181
    2. '=' → logprob: -2.127366304397583
    3. ')' → logprob: -8.252366065979004
    4. '           ' → logprob: -9.002366065979004
    5. '       ' → logprob: -10.752366065979004
    6. ')=' → logprob: -11.877366065979004
    7. '   ' → logprob: -12.002366065979004
    8. '        ' → logprob: -12.377366065979004
    9. ',' → logprob: -12.752366065979004
    10. '          ' → logprob: -13.127366065979004

Token 2449: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.038295309990644455
    2. ' heap' → logprob: -3.288295269012451
    3. 'he' → logprob: -8.78829574584961
    4. '           ' → logprob: -9.53829574584961
    5. '   ' → logprob: -11.16329574584961
    6. ' he' → logprob: -12.16329574584961
    7. '       ' → logprob: -12.16329574584961
    8. '               ' → logprob: -13.28829574584961
    9. '(heap' → logprob: -13.28829574584961
    10. '.heap' → logprob: -14.91329574584961

Token 2450: 'q' (ID: 80)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5413550138473511
    2. '=' → logprob: -0.9163550138473511
    3. ')' → logprob: -5.291355133056641
    4. '.pop' → logprob: -5.666355133056641
    5. '       ' → logprob: -5.791355133056641
    6. '           ' → logprob: -5.916355133056641
    7. ',' → logprob: -7.041355133056641
    8. '[' → logprob: -7.166355133056641
    9. ':' → logprob: -8.04135513305664
    10. ':
' → logprob: -8.41635513305664

Token 2451: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0006847949116490781
    2. 'q' → logprob: -7.75068473815918
    3. '.' → logprob: -8.62568473815918
    4. '[' → logprob: -10.62568473815918
    5. '.heap' → logprob: -10.62568473815918
    6. '.q' → logprob: -11.75068473815918
    7. '.pop' → logprob: -12.12568473815918
    8. ' he' → logprob: -12.50068473815918
    9. 'he' → logprob: -12.87568473815918
    10. ' .' → logprob: -13.75068473815918

Token 2452: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.2994620242971e-06
    2. 'ap' → logprob: -12.875008583068848
    3. 'pp' → logprob: -13.125008583068848
    4. '[' → logprob: -13.500008583068848
    5. '```' → logprob: -13.875008583068848
    6. 'a' → logprob: -15.125008583068848
    7. 'appen' → logprob: -15.625008583068848
    8. 'appe' → logprob: -15.625008583068848
    9. '...' → logprob: -15.875008583068848
    10. '``' → logprob: -16.12500762939453

Token 2453: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.029048100113868713
    2. 'ap' → logprob: -3.654048204421997
    3. 'pp' → logprob: -6.529047966003418
    4. 'op' → logprob: -7.154047966003418
    5. 'pop' → logprob: -8.654047966003418
    6. '           ' → logprob: -8.654047966003418
    7. 'p' → logprob: -9.154047966003418
    8. '       ' → logprob: -10.529047966003418
    9. 'q' → logprob: -12.529047966003418
    10. '```' → logprob: -12.904047966003418

Token 2454: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -9.960946772480384e-05
    2. '(h' → logprob: -9.250099182128906
    3. '(' → logprob: -13.000099182128906
    4. '(queue' → logprob: -14.875099182128906
    5. 'heap' → logprob: -15.125099182128906
    6. '(
' → logprob: -15.375099182128906
    7. ' (' → logprob: -15.625099182128906
    8. '((' → logprob: -15.875099182128906
    9. '       ' → logprob: -18.500099182128906
    10. '   ' → logprob: -18.625099182128906

Token 2455: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08697322756052017
    2. '           ' → logprob: -3.086973190307617
    3. ')
' → logprob: -3.711973190307617
    4. '       ' → logprob: -4.336973190307617
    5. '):
' → logprob: -9.336973190307617
    6. '               ' → logprob: -10.961973190307617
    7. '            
' → logprob: -11.461973190307617
    8. '
' → logprob: -11.836973190307617
    9. ',' → logprob: -12.211973190307617
    10. '   ' → logprob: -12.711973190307617

Token 2456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013490456622093916
    2. '       ' → logprob: -6.626348972320557
    3. 'if' → logprob: -11.251349449157715
    4. '   ' → logprob: -12.751349449157715
    5. '            
' → logprob: -13.251349449157715
    6. '               ' → logprob: -13.501349449157715
    7. '
' → logprob: -13.751349449157715
    8. '```' → logprob: -13.876349449157715
    9. ' if' → logprob: -14.126349449157715
    10. '        
' → logprob: -14.876349449157715

Token 2457: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6933776140213013
    2. 'if' → logprob: -0.6933776140213013
    3. '       ' → logprob: -8.818377494812012
    4. ' if' → logprob: -9.443377494812012
    5. '   ' → logprob: -13.568377494812012
    6. '#' (adapté à ' #') → logprob: -14.318377494812012
    7. 'key' → logprob: -14.943377494812012
    8. '```' → logprob: -15.068377494812012
    9. '
' → logprob: -15.193377494812012
    10. '               ' → logprob: -15.443377494812012

Token 2458: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38695821166038513
    2. '           ' → logprob: -1.1369582414627075
    3. ' if' → logprob: -9.761958122253418
    4. '       ' → logprob: -10.886958122253418
    5. 'key' → logprob: -12.261958122253418
    6. '#' → logprob: -12.261958122253418
    7. '   ' → logprob: -14.386958122253418
    8. '               ' → logprob: -15.011958122253418
    9. 'If' → logprob: -15.761958122253418
    10. '```' → logprob: -15.761958122253418

Token 2459: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.552417516708374
    2. 'abs' → logprob: -0.927417516708374
    3. ' abs' → logprob: -4.052417755126953
    4. ' d' → logprob: -5.177417755126953
    5. 'math' → logprob: -5.302417755126953
    6. ' math' → logprob: -7.677417755126953
    7. '(abs' → logprob: -8.427417755126953
    8. '   ' → logprob: -8.927417755126953
    9. ' ' → logprob: -11.802417755126953
    10. '           ' → logprob: -12.052417755126953

Token 2460: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ' A' → logprob: -16.5
    3. '   ' → logprob: -18.0
    4. 'B' → logprob: -18.0
    5. '
' → logprob: -18.125
    6. '_A' → logprob: -18.375
    7. ' ==' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. '==' → logprob: -19.875
    10. ')' → logprob: -20.0

Token 2461: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03807477280497551
    2. '==' → logprob: -3.2880747318267822
    3. '           ' → logprob: -10.913074493408203
    4. '```' → logprob: -11.788074493408203
    5. '==
' → logprob: -13.413074493408203
    6. ')' → logprob: -13.913074493408203
    7. '=' → logprob: -13.913074493408203
    8. ',' → logprob: -14.038074493408203
    9. ' >=' → logprob: -14.163074493408203
    10. ')==' → logprob: -14.163074493408203

Token 2462: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003908965270966291
    2. ' d' → logprob: -6.128909111022949
    3. 'abs' → logprob: -6.503909111022949
    4. ' abs' → logprob: -8.50390911102295
    5. '0' → logprob: -11.87890911102295
    6. '   ' → logprob: -12.87890911102295
    7. '           ' → logprob: -13.00390911102295
    8. 'math' → logprob: -13.50390911102295
    9. ' ' → logprob: -13.75390911102295
    10. 'int' → logprob: -14.00390911102295

Token 2463: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.236549335066229e-05
    2. 'A' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.250021934509277
    4. ' B' → logprob: -15.250021934509277
    5. ',' → logprob: -16.250022888183594
    6. '==' → logprob: -16.500022888183594
    7. ' ==' → logprob: -16.750022888183594
    8. '_B' → logprob: -17.125022888183594
    9. 'b' → logprob: -17.250022888183594
    10. 'd' → logprob: -17.375022888183594

Token 2464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6950374245643616
    2. 'and' → logprob: -0.6950374245643616
    3. '           ' → logprob: -6.320037364959717
    4. '               ' → logprob: -9.570037841796875
    5. '==' → logprob: -11.695037841796875
    6. ':
' → logprob: -12.445037841796875
    7. ' ==' → logprob: -12.945037841796875
    8. ':' → logprob: -13.445037841796875
    9. '            ' → logprob: -14.320037841796875
    10. '          ' → logprob: -14.695037841796875

Token 2465: ' alt' (ID: 5001)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05231766775250435
    2. 'math' → logprob: -4.0523176193237305
    3. 'd' → logprob: -4.3023176193237305
    4. 'self' → logprob: -4.5523176193237305
    5. 'alt' → logprob: -4.9273176193237305
    6. 'cur' → logprob: -6.9273176193237305
    7. ' abs' → logprob: -6.9273176193237305
    8. '(abs' → logprob: -9.17731761932373
    9. ' math' → logprob: -9.80231761932373
    10. '   ' → logprob: -9.92731761932373

Token 2466: 'itudes' (ID: 25642)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.4330843687057495
    2. 'A' → logprob: -1.0580843687057495
    3. 'itudes' → logprob: -6.433084487915039
    4. ')' → logprob: -7.308084487915039
    5. 'i' → logprob: -7.433084487915039
    6. '   ' → logprob: -8.183084487915039
    7. '_' → logprob: -8.433084487915039
    8. '(' → logprob: -8.808084487915039
    9. '==' → logprob: -8.933084487915039
    10. 'it' → logprob: -9.433084487915039

Token 2467: ' equal' (ID: 12629)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.4198783040046692
    2. 'equal' → logprob: -2.0448782444000244
    3. '_are' → logprob: -2.2948782444000244
    4. '           ' → logprob: -2.5448782444000244
    5. 'are' → logprob: -4.2948784828186035
    6. '               ' → logprob: -4.9198784828186035
    7. '==' → logprob: -5.5448784828186035
    8. ' equal' → logprob: -5.5448784828186035
    9. ' are' → logprob: -6.2948784828186035
    10. 'abs' → logprob: -7.4198784828186035

Token 2468: ' =>' (ID: 871)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4594007432460785
    2. 'and' → logprob: -1.0844007730484009
    3. '               ' → logprob: -4.084400653839111
    4. '           ' → logprob: -4.334400653839111
    5. ':
' → logprob: -8.45940113067627
    6. ':' → logprob: -9.58440113067627
    7. ',' → logprob: -12.58440113067627
    8. '              ' → logprob: -13.45940113067627
    9. ' or' → logprob: -13.95940113067627
    10. '            ' → logprob: -14.58440113067627

Token 2469: ' meeting' (ID: 9176)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.025207392871379852
    2. ' return' → logprob: -4.27520751953125
    3. 'if' → logprob: -5.02520751953125
    4. '               ' → logprob: -5.52520751953125
    5. ' if' → logprob: -8.15020751953125
    6. 'd' → logprob: -9.65020751953125
    7. '           ' → logprob: -10.77520751953125
    8. 'cur' → logprob: -10.77520751953125
    9. 'abs' → logprob: -11.40020751953125
    10. '{return' → logprob: -12.52520751953125

Token 2470: ' point' (ID: 2438)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060365088284015656
    2. 'if' → logprob: -3.0603652000427246
    3. 'point' → logprob: -5.185365200042725
    4. ' if' → logprob: -5.935365200042725
    5. 'and' → logprob: -6.435365200042725
    6. '           ' → logprob: -7.435365200042725
    7. ':
' → logprob: -7.560365200042725
    8. 'return' → logprob: -8.435364723205566
    9. ':' → logprob: -8.560364723205566
    10. ' and' → logprob: -8.685364723205566

Token 2471: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15961427986621857
    2. '               ' → logprob: -2.284614324569702
    3. 'and' → logprob: -3.784614324569702
    4. ' and' → logprob: -3.784614324569702
    5. ' if' → logprob: -9.409614562988281
    6. ',' → logprob: -9.659614562988281
    7. 'if' → logprob: -9.784614562988281
    8. ':' → logprob: -10.659614562988281
    9. ':
' → logprob: -10.909614562988281
    10. ' or' → logprob: -12.034614562988281

Token 2472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4259644558478612e-05
    2. '               ' → logprob: -11.250014305114746
    3. '       ' → logprob: -15.125014305114746
    4. ',' → logprob: -15.125014305114746
    5. '	       ' → logprob: -15.500014305114746
    6. '          ' → logprob: -16.00001335144043
    7. 'and' → logprob: -16.25001335144043
    8. '		' → logprob: -16.37501335144043
    9. ' if' → logprob: -16.50001335144043
    10. 'if' → logprob: -17.25001335144043

Token 2473: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029928788542747498
    2. 'if' (adapté à ' if') → logprob: -3.529928684234619
    3. ' if' → logprob: -8.654929161071777
    4. '       ' → logprob: -12.654929161071777
    5. '               ' → logprob: -14.279929161071777
    6. '          ' → logprob: -16.65492820739746
    7. '   ' → logprob: -17.40492820739746
    8. 'If' → logprob: -18.40492820739746
    9. '		' → logprob: -18.52992820739746
    10. '	       ' → logprob: -18.65492820739746

Token 2474: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.282511442899704
    2. ' abs' → logprob: -1.4075114727020264
    3. 'd' → logprob: -6.907511234283447
    4. ' d' → logprob: -8.282511711120605
    5. '   ' → logprob: -9.407511711120605
    6. '(abs' → logprob: -11.407511711120605
    7. ' math' → logprob: -12.032511711120605
    8. 'math' → logprob: -12.532511711120605
    9. '           ' → logprob: -14.157511711120605
    10. ' ' → logprob: -14.157511711120605

Token 2475: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -15.000000953674316
    3. '(' → logprob: -16.375
    4. '((' → logprob: -17.125
    5. '(cur' → logprob: -19.25
    6. '(
' → logprob: -19.5
    7. '	d' → logprob: -19.875
    8. ' (' → logprob: -21.125
    9. 'cur' → logprob: -21.875
    10. ' d' → logprob: -22.125

Token 2476: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -15.500000953674316
    3. '(A' → logprob: -15.625000953674316
    4. 'a' → logprob: -16.0
    5. ' A' → logprob: -16.0
    6. '_A' → logprob: -16.125
    7. '(d' → logprob: -17.125
    8. 'd' → logprob: -18.0
    9. '```' → logprob: -18.375
    10. '	A' → logprob: -19.0

Token 2477: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020546795800328255
    2. '-' → logprob: -3.8955469131469727
    3. ' -
' → logprob: -13.520546913146973
    4. ' ' → logprob: -13.645546913146973
    5. '           ' → logprob: -14.020546913146973
    6. ' ' → logprob: -14.895546913146973
    7. '        ' → logprob: -15.270546913146973
    8. '==' → logprob: -15.645546913146973
    9. '          ' → logprob: -16.270545959472656
    10. '            ' → logprob: -16.270545959472656

Token 2478: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010994764976203442
    2. '(d' → logprob: -5.385994911193848
    3. '(' → logprob: -5.635994911193848
    4. 'self' → logprob: -6.510994911193848
    5. ' (' → logprob: -7.510994911193848
    6. '(self' → logprob: -7.635994911193848
    7. ' d' → logprob: -9.385994911193848
    8. '((' → logprob: -9.885994911193848
    9. '(L' → logprob: -10.135994911193848
    10. ' ' → logprob: -11.385994911193848

Token 2479: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.145118848304264e-05
    2. 'A' → logprob: -10.000051498413086
    3. ' B' → logprob: -13.000051498413086
    4. ')' → logprob: -13.625051498413086
    5. 'd' → logprob: -13.875051498413086
    6. '   ' → logprob: -14.625051498413086
    7. '  ' → logprob: -15.375051498413086
    8. '_B' → logprob: -15.750051498413086
    9. 'b' → logprob: -16.500051498413086
    10. '	B' → logprob: -16.500051498413086

Token 2480: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9424725148128346e-05
    2. ')<' → logprob: -10.000049591064453
    3. ')<=' → logprob: -12.750049591064453
    4. ' )' → logprob: -14.250049591064453
    5. '```' → logprob: -16.500049591064453
    6. '[' → logprob: -16.750049591064453
    7. '")' → logprob: -16.875049591064453
    8. '0' → logprob: -17.000049591064453
    9. '）' → logprob: -17.000049591064453
    10. '')' → logprob: -17.250049591064453

Token 2481: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4309699535369873
    2. ' <' → logprob: -1.0559699535369873
    3. '<=' → logprob: -6.680970191955566
    4. ' <=' → logprob: -7.180970191955566
    5. ')' → logprob: -8.430970191955566
    6. ')<' → logprob: -11.055970191955566
    7. '```' → logprob: -12.930970191955566
    8. '()<' → logprob: -13.055970191955566
    9. '[' → logprob: -13.180970191955566
    10. ')<=' → logprob: -13.555970191955566

Token 2482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4743173122406006
    2. 'self' → logprob: -0.9743173122406006
    3. ' ' → logprob: -9.47431755065918
    4. ' self' → logprob: -9.59931755065918
    5. '   ' → logprob: -9.97431755065918
    6. '=' → logprob: -10.84931755065918
    7. '
' → logprob: -11.59931755065918
    8. '=self' → logprob: -11.59931755065918
    9. '0' → logprob: -12.59931755065918
    10. '```' → logprob: -13.84931755065918

Token 2483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048601455986499786
    2. 'self' → logprob: -3.0486013889312744
    3. ' self' → logprob: -12.298601150512695
    4. ' ' → logprob: -12.298601150512695
    5. '0' → logprob: -13.673601150512695
    6. '   ' → logprob: -13.798601150512695
    7. '=' → logprob: -13.923601150512695
    8. '(' → logprob: -15.173601150512695
    9. '```' → logprob: -15.423601150512695
    10. '=self' → logprob: -15.986101150512695

Token 2484: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1269480586051941
    2. '-' → logprob: -2.126948118209839
    3. '-e' → logprob: -11.251948356628418
    4. '```' → logprob: -13.126948356628418
    5. '           ' → logprob: -13.876948356628418
    6. '1' → logprob: -14.126948356628418
    7. '**' → logprob: -14.251948356628418
    8. ' -' → logprob: -14.376948356628418
    9. '[-' → logprob: -15.126948356628418
    10. '       ' → logprob: -15.126948356628418

Token 2485: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.054500666621607e-06
    2. 'e' → logprob: -14.12500286102295
    3. '```' → logprob: -14.12500286102295
    4. '9' → logprob: -14.62500286102295
    5. ' -' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.37500286102295
    7. '       ' → logprob: -15.37500286102295
    8. '``' → logprob: -16.000003814697266
    9. '           ' → logprob: -16.875003814697266
    10. '**' → logprob: -17.375003814697266

Token 2486: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4288690686225891
    2. '9' → logprob: -1.0538690090179443
    3. '12' → logprob: -9.178869247436523
    4. '-' → logprob: -10.178869247436523
    5. '8' → logprob: -11.303869247436523
    6. '7' → logprob: -11.428869247436523
    7. '3' → logprob: -13.553869247436523
    8. '```' → logprob: -14.428869247436523
    9. '06' → logprob: -14.866369247436523
    10. '10' → logprob: -15.303869247436523

Token 2487: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12539446353912354
    2. '               ' → logprob: -2.500394344329834
    3. 'and' → logprob: -3.500394344329834
    4. '           ' → logprob: -5.375394344329834
    5. ':
' → logprob: -7.125394344329834
    6. ':' → logprob: -9.250394821166992
    7. ' or' → logprob: -10.000394821166992
    8. '                   ' → logprob: -11.125394821166992
    9. ',' → logprob: -12.250394821166992
    10. '              ' → logprob: -12.750394821166992

Token 2488: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019191219471395016
    2. ' and' → logprob: -6.376919269561768
    3. 'and' → logprob: -8.75191879272461
    4. '           ' → logprob: -9.87691879272461
    5. '                   ' → logprob: -12.37691879272461
    6. '```' → logprob: -13.62691879272461
    7. '              ' → logprob: -14.12691879272461
    8. '   ' → logprob: -15.37691879272461
    9. '       ' → logprob: -15.62691879272461
    10. ',' → logprob: -15.62691879272461

Token 2489: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13202591240406036
    2. 'return' → logprob: -2.132025957107544
    3. '                   ' → logprob: -5.632025718688965
    4. ' return' → logprob: -6.507025718688965
    5. '                       ' → logprob: -12.507025718688965
    6. '   ' → logprob: -12.757025718688965
    7. '           ' → logprob: -13.632025718688965
    8. '                ' → logprob: -14.632025718688965
    9. 'break' → logprob: -14.757025718688965
    10. ':return' → logprob: -14.757025718688965

Token 2490: ' They' (ID: 3164)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032576050609350204
    2. '               ' → logprob: -3.532576084136963
    3. 'if' → logprob: -6.032576084136963
    4. ' return' → logprob: -7.907576084136963
    5. '           ' → logprob: -10.532575607299805
    6. '                   ' → logprob: -11.157575607299805
    7. ' if' → logprob: -12.157575607299805
    8. 'break' → logprob: -13.032575607299805
    9. '   ' → logprob: -13.157575607299805
    10. '                       ' → logprob: -14.282575607299805

Token 2491: ' meet' (ID: 4158)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6284671425819397
    2. '               ' → logprob: -1.503467082977295
    3. 'return' → logprob: -2.378467082977295
    4. '                   ' → logprob: -2.878467082977295
    5. ' are' → logprob: -3.253467082977295
    6. ' ==' → logprob: -4.253467082977295
    7. ')' → logprob: -4.503467082977295
    8. '           ' → logprob: -4.753467082977295
    9. ':return' → logprob: -5.753467082977295
    10. ' have' → logprob: -5.753467082977295

Token 2492: ' physically' (ID: 35805)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11451419442892075
    2. 'return' → logprob: -2.239514112472534
    3. '                   ' → logprob: -6.739514350891113
    4. ' return' → logprob: -7.989514350891113
    5. '
' → logprob: -9.614514350891113
    6. ',' → logprob: -10.114514350891113
    7. ' at' → logprob: -10.739514350891113
    8. '           ' → logprob: -11.864514350891113
    9. '                       ' → logprob: -12.239514350891113
    10. 'at' → logprob: -12.239514350891113

Token 2493: ' same' (ID: 2684)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02483314462006092
    2. 'return' → logprob: -3.7748332023620605
    3. ' return' → logprob: -7.2748332023620605
    4. '                   ' → logprob: -7.3998332023620605
    5. ',' → logprob: -9.024832725524902
    6. ' and' → logprob: -9.524832725524902
    7. 'and' → logprob: -9.649832725524902
    8. '
' → logprob: -11.149832725524902
    9. ' at' → logprob: -13.399832725524902
    10. '                       ' → logprob: -13.524832725524902

Token 2494: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.33259543776512146
    2. ' point' → logprob: -1.3325954675674438
    3. '_point' → logprob: -4.582595348358154
    4. ' and' → logprob: -5.457595348358154
    5. 'and' → logprob: -5.707595348358154
    6. 'distance' → logprob: -8.457595825195312
    7. '               ' → logprob: -8.457595825195312
    8. '           ' → logprob: -8.707595825195312
    9. ',' → logprob: -8.832595825195312
    10. 'position' → logprob: -8.832595825195312

Token 2495: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004936174023896456
    2. ' and' → logprob: -6.129936218261719
    3. '                   ' → logprob: -6.129936218261719
    4. 'and' → logprob: -8.254936218261719
    5. ',' → logprob: -9.004936218261719
    6. 'return' → logprob: -9.254936218261719
    7. ' return' → logprob: -9.879936218261719
    8. '                       ' → logprob: -11.629936218261719
    9. ':
' → logprob: -12.629936218261719
    10. '			' → logprob: -12.629936218261719

Token 2496: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017322985222563148
    2. '                   ' → logprob: -6.751732349395752
    3. ' and' → logprob: -7.876732349395752
    4. 'and' → logprob: -9.001731872558594
    5. ',' → logprob: -10.001731872558594
    6. 'return' → logprob: -12.501731872558594
    7. '```' → logprob: -12.751731872558594
    8. ':' → logprob: -12.876731872558594
    9. '                       ' → logprob: -13.251731872558594
    10. '           ' → logprob: -14.001731872558594

Token 2497: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09278512746095657
    2. '               ' → logprob: -2.592785120010376
    3. '                   ' → logprob: -4.342785358428955
    4. ' return' → logprob: -7.217785358428955
    5. 'if' → logprob: -10.342784881591797
    6. '                       ' → logprob: -11.092784881591797
    7. '   ' → logprob: -11.592784881591797
    8. '           ' → logprob: -12.467784881591797
    9. '	return' → logprob: -13.342784881591797
    10. 'distance' → logprob: -14.717784881591797

Token 2498: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -3.7697225252486533e-06
    2. ' cur' → logprob: -12.500003814697266
    3. '0' → logprob: -18.625003814697266
    4. '	cur' → logprob: -18.750003814697266
    5. 'current' → logprob: -19.375003814697266
    6. '               ' → logprob: -20.500003814697266
    7. '_cur' → logprob: -20.875003814697266
    8. 'curr' → logprob: -20.875003814697266
    9. '                   ' → logprob: -21.000003814697266
    10. '           ' → logprob: -21.125003814697266

Token 2499: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.4140441635390744e-05
    2. '_' → logprob: -11.375014305114746
    3. 'dist' → logprob: -13.875014305114746
    4. ' _' → logprob: -14.375014305114746
    5. 'Dist' → logprob: -15.250014305114746
    6. '_distance' → logprob: -15.250014305114746
    7. '_
' → logprob: -15.500014305114746
    8. '_DIST' → logprob: -15.750014305114746
    9. '_d' → logprob: -16.00001335144043
    10. '_val' → logprob: -16.50001335144043

Token 2500: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007098954636603594
    2. '
' → logprob: -5.007099151611328
    3. '            
' → logprob: -8.257099151611328
    4. '       ' → logprob: -9.632099151611328
    5. '        
' → logprob: -11.257099151611328
    6. '<|end|>' → logprob: -11.507099151611328
    7. '               ' → logprob: -11.632099151611328
    8. 'import' → logprob: -12.257099151611328
    9. '          ' → logprob: -12.257099151611328
    10. '    
' → logprob: -12.882099151611328

Token 2501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02357236109673977
    2. '
' → logprob: -3.7735724449157715
    3. '            
' → logprob: -8.398571968078613
    4. '       ' → logprob: -9.773571968078613
    5. '        
' → logprob: -11.148571968078613
    6. '
' → logprob: -11.648571968078613
    7. 'import' → logprob: -11.898571968078613
    8. '```' → logprob: -12.148571968078613
    9. '           
' → logprob: -13.648571968078613
    10. '          ' → logprob: -13.648571968078613

Token 2502: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25327038764953613
    2. 'for' → logprob: -1.6282703876495361
    3. 'neighbors' → logprob: -4.128270149230957
    4. 'if' (adapté à ' if') → logprob: -5.003270149230957
    5. '#' → logprob: -6.253270149230957
    6. 'next' → logprob: -6.878270149230957
    7. '       ' → logprob: -7.378270149230957
    8. 'key' → logprob: -7.503270149230957
    9. ' for' → logprob: -8.753270149230957
    10. 'neighbor' → logprob: -9.628270149230957

Token 2503: ' dist' (ID: 3601)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.047626007348299026
    2. ' (' → logprob: -3.54762601852417
    3. '(dist' → logprob: -4.67262601852417
    4. '(cur' → logprob: -4.79762601852417
    5. '(len' → logprob: -10.297625541687012
    6. '(self' → logprob: -10.922625541687012
    7. '   ' → logprob: -11.047625541687012
    8. 'cur' → logprob: -11.047625541687012
    9. '(not' → logprob: -12.172625541687012
    10. '(' → logprob: -12.297625541687012

Token 2504: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.180258191714529e-06
    2. '_maps' → logprob: -12.625008583068848
    3. 'map' → logprob: -12.875008583068848
    4. '   ' → logprob: -14.875008583068848
    5. '[(' → logprob: -15.125008583068848
    6. '_MAP' → logprob: -15.250008583068848
    7. 's' → logprob: -15.375008583068848
    8. 'Map' → logprob: -15.625008583068848
    9. '_mapping' → logprob: -16.00000762939453
    10. ')' → logprob: -16.00000762939453

Token 2505: '[(' (ID: 20542)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.020628079771995544
    2. '[(' → logprob: -3.895627975463867
    3. 'get' → logprob: -9.645627975463867
    4. '[cur' → logprob: -11.770627975463867
    5. '.' → logprob: -13.145627975463867
    6. '_get' → logprob: -13.395627975463867
    7. '.setdefault' → logprob: -13.520627975463867
    8. '   ' → logprob: -13.645627975463867
    9. '[' → logprob: -13.645627975463867
    10. ' .' → logprob: -13.895627975463867

Token 2506: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.088346359931165e-07
    2. ' d' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.375
    4. '           ' → logprob: -18.375
    5. '	d' → logprob: -18.75
    6. '       ' → logprob: -18.875
    7. ')d' → logprob: -19.0
    8. '(d' → logprob: -19.25
    9. '  ' → logprob: -19.5
    10. '_d' → logprob: -19.75

Token 2507: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. ',' → logprob: -17.625
    3. '[' → logprob: -17.875
    4. ' A' → logprob: -17.875
    5. ',A' → logprob: -19.25
    6. '_A' → logprob: -19.625
    7. '	A' → logprob: -20.125
    8. 'А' → logprob: -20.75
    9. ')' → logprob: -20.875
    10. '(' → logprob: -21.0

Token 2508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003003081073984504
    2. ',d' → logprob: -8.250300407409668
    3. ' ,' → logprob: -10.625300407409668
    4. ',
' → logprob: -11.750300407409668
    5. ')][' → logprob: -13.625300407409668
    6. ')]' → logprob: -14.500300407409668
    7. ',)' → logprob: -14.500300407409668
    8. ',b' → logprob: -14.625300407409668
    9. '   ' → logprob: -14.625300407409668
    10. ')],' → logprob: -15.000300407409668

Token 2509: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00015860427811276168
    2. ' d' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.125158309936523
    4. '           ' → logprob: -17.500158309936523
    5. '       ' → logprob: -17.750158309936523
    6. '	d' → logprob: -18.500158309936523
    7. '     ' → logprob: -19.375158309936523
    8. '    ' → logprob: -19.500158309936523
    9. '          ' → logprob: -19.500158309936523
    10. '  ' → logprob: -19.750158309936523

Token 2510: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.1008713702030946e-06
    2. ',' → logprob: -13.250001907348633
    3. ' B' → logprob: -16.375001907348633
    4. ')' → logprob: -16.500001907348633
    5. '```' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.750001907348633
    7. 'b' → logprob: -18.875001907348633
    8. '           ' → logprob: -18.875001907348633
    9. ')]' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 2511: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0270373597741127
    2. ']' → logprob: -3.6520373821258545
    3. '])' → logprob: -7.777037143707275
    4. ')' → logprob: -8.777037620544434
    5. ']>' → logprob: -8.902037620544434
    6. ']+' → logprob: -11.902037620544434
    7. ')>' → logprob: -12.402037620544434
    8. ']
' → logprob: -12.902037620544434
    9. ')][' → logprob: -12.902037620544434
    10. ']]' → logprob: -13.152037620544434

Token 2512: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7174566388130188
    2. ' <' → logprob: -1.092456579208374
    3. '>' → logprob: -1.967456579208374
    4. ' >' → logprob: -3.342456579208374
    5. ' !=' → logprob: -7.592456817626953
    6. '!=' → logprob: -8.217456817626953
    7. ' ' → logprob: -9.092456817626953
    8. '   ' → logprob: -9.092456817626953
    9. '><' → logprob: -9.467456817626953
    10. '<v' → logprob: -10.717456817626953

Token 2513: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00033546582562848926
    2. ' cur' → logprob: -8.000335693359375
    3. '_cur' → logprob: -17.250335693359375
    4. '	cur' → logprob: -18.500335693359375
    5. 'curr' → logprob: -20.625335693359375
    6. '   ' → logprob: -20.750335693359375
    7. '(cur' → logprob: -21.000335693359375
    8. '-cur' → logprob: -21.125335693359375
    9. 'Cur' → logprob: -21.750335693359375
    10. '[cur' → logprob: -22.250335693359375

Token 2514: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.3856492842023727e-06
    2. 'dist' → logprob: -14.000000953674316
    3. 'Dist' → logprob: -15.500000953674316
    4. '_cur' → logprob: -15.875000953674316
    5. 'ist' → logprob: -16.500001907348633
    6. '_DIST' → logprob: -17.250001907348633
    7. '_cost' → logprob: -18.500001907348633
    8. '_distance' → logprob: -18.500001907348633
    9. 't' → logprob: -19.125001907348633
    10. '_d' → logprob: -19.250001907348633

Token 2515: ' -' (ID: 533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6076803803443909
    2. '           ' → logprob: -1.232680320739746
    3. ':
' → logprob: -1.982680320739746
    4. 'continue' → logprob: -4.482680320739746
    5. ' continue' → logprob: -4.982680320739746
    6. ':' → logprob: -4.982680320739746
    7. '	continue' → logprob: -7.732680320739746
    8. '       ' → logprob: -8.357680320739746
    9. '_continue' → logprob: -8.732680320739746
    10. '   ' → logprob: -9.232680320739746

Token 2516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005932236090302467
    2. 'self' → logprob: -5.130932331085205
    3. ' self' → logprob: -13.505931854248047
    4. ' ' → logprob: -13.880931854248047
    5. '   ' → logprob: -14.380931854248047
    6. '0' → logprob: -15.005931854248047
    7. '
' → logprob: -16.130931854248047
    8. '```' → logprob: -16.630931854248047
    9. '10' → logprob: -17.005931854248047
    10. '**' → logprob: -17.505931854248047

Token 2517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001034595537930727
    2. 'self' → logprob: -6.876034736633301
    3. '0' → logprob: -14.0010347366333
    4. ' ' → logprob: -14.5010347366333
    5. ' self' → logprob: -14.8760347366333
    6. '   ' → logprob: -16.626033782958984
    7. '```' → logprob: -17.626033782958984
    8. '(' → logprob: -18.001033782958984
    9. '=' → logprob: -18.376033782958984
    10. '
' → logprob: -18.501033782958984

Token 2518: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -14.500001907348633
    3. '.e' → logprob: -14.625001907348633
    4. '0' → logprob: -15.250001907348633
    5. 'E' → logprob: -15.500001907348633
    6. '1' → logprob: -15.500001907348633
    7. '-' → logprob: -16.125001907348633
    8. '+' → logprob: -16.750001907348633
    9. '-e' → logprob: -17.125001907348633
    10. '```' → logprob: -17.125001907348633

Token 2519: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.696077227592468e-05
    2. '9' → logprob: -9.500077247619629
    3. '12' → logprob: -14.625077247619629
    4. '```' → logprob: -14.750077247619629
    5. '^-' → logprob: -14.750077247619629
    6. ' -' → logprob: -15.125077247619629
    7. '6' → logprob: -15.750077247619629
    8. '7' → logprob: -16.000076293945312
    9. '10' → logprob: -16.375076293945312
    10. '8' → logprob: -16.500076293945312

Token 2520: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.25495216250419617
    2. '12' → logprob: -1.5049521923065186
    3. '15' → logprob: -6.3799519538879395
    4. '10' → logprob: -7.0049519538879395
    5. '14' → logprob: -8.629952430725098
    6. '8' → logprob: -8.754952430725098
    7. '13' → logprob: -10.629952430725098
    8. '7' → logprob: -10.754952430725098
    9. '6' → logprob: -10.879952430725098
    10. '11' → logprob: -11.879952430725098

Token 2521: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7772637605667114
    2. ':' → logprob: -1.1522637605667114
    3. ':
' → logprob: -2.527263641357422
    4. '               ' → logprob: -2.652263641357422
    5. ' continue' → logprob: -2.777263641357422
    6. 'continue' → logprob: -4.777263641357422
    7. '       ' → logprob: -6.277263641357422
    8. '	continue' → logprob: -7.402263641357422
    9. '   ' → logprob: -8.152263641357422
    10. '_continue' → logprob: -8.527263641357422

Token 2522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001758956117555499
    2. '           ' → logprob: -6.626759052276611
    3. 'continue' → logprob: -8.251758575439453
    4. '       ' → logprob: -9.376758575439453
    5. ' continue' → logprob: -9.501758575439453
    6. '   ' → logprob: -12.501758575439453
    7. '	continue' → logprob: -12.876758575439453
    8. '                   ' → logprob: -13.251758575439453
    9. '_continue' → logprob: -13.626758575439453
    10. '```' → logprob: -13.751758575439453

Token 2523: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03883577138185501
    2. '           ' → logprob: -4.0388360023498535
    3. '               ' → logprob: -4.0388360023498535
    4. ' continue' → logprob: -5.9138360023498535
    5. '	continue' → logprob: -9.038835525512695
    6. '_continue' → logprob: -11.413835525512695
    7. '```' → logprob: -11.788835525512695
    8. '   ' → logprob: -12.413835525512695
    9. '		' → logprob: -12.788835525512695
    10. '                   ' → logprob: -13.163835525512695

Token 2524: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007859884761273861
    2. '
' → logprob: -4.882859706878662
    3. '            
' → logprob: -9.13286018371582
    4. '<|end|>' → logprob: -9.25786018371582
    5. '       ' → logprob: -11.13286018371582
    6. '<|end|>' → logprob: -11.38286018371582
    7. '```' → logprob: -11.63286018371582
    8. '        
' → logprob: -12.25786018371582
    9. '    
' → logprob: -13.38286018371582
    10. '  
' → logprob: -13.38286018371582

Token 2525: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013695038855075836
    2. '       ' → logprob: -4.388695240020752
    3. 'for' → logprob: -7.513695240020752
    4. '```' → logprob: -8.263694763183594
    5. '
' → logprob: -8.513694763183594
    6. '            
' → logprob: -9.638694763183594
    7. '        
' → logprob: -9.763694763183594
    8. ' for' → logprob: -10.263694763183594
    9. '	       ' → logprob: -12.263694763183594
    10. 'next' → logprob: -12.763694763183594

Token 2526: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6154071092605591
    2. '           ' → logprob: -0.9904071092605591
    3. 'neighbors' → logprob: -2.4904069900512695
    4. 'next' → logprob: -6.1154069900512695
    5. '               ' → logprob: -6.8654069900512695
    6. 'possible' → logprob: -7.3654069900512695
    7. 'c' → logprob: -7.9904069900512695
    8. '#' (adapté à ' #') → logprob: -8.24040699005127
    9. '       ' → logprob: -8.74040699005127
    10. ' for' → logprob: -8.74040699005127

Token 2527: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36007872223854065
    2. 'for' → logprob: -1.4850786924362183
    3. 'next' → logprob: -2.610078811645508
    4. 'c' → logprob: -7.110078811645508
    5. 'neighbors' → logprob: -7.360078811645508
    6. ' for' → logprob: -8.110078811645508
    7. 'possible' → logprob: -8.360078811645508
    8. ' next' → logprob: -9.110078811645508
    9. '       ' → logprob: -9.110078811645508
    10. '               ' → logprob: -9.735078811645508

Token 2528: ' all' (ID: 722)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9121589660644531
    2. '           ' → logprob: -1.1621589660644531
    3. '               ' → logprob: -1.4121589660644531
    4. 'next' → logprob: -4.537158966064453
    5. '   ' → logprob: -4.787158966064453
    6. 'all' → logprob: -4.912158966064453
    7. 'to' → logprob: -4.912158966064453
    8. ':' → logprob: -5.662158966064453
    9. ' next' → logprob: -6.037158966064453
    10. ' to' → logprob: -6.912158966064453

Token 2529: ' neighbors' (ID: 31655)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8991972804069519
    2. 'neighbors' → logprob: -1.3991973400115967
    3. '           ' → logprob: -2.6491973400115967
    4. ' next' → logprob: -2.7741973400115967
    5. '               ' → logprob: -2.8991973400115967
    6. 'nd' → logprob: -3.0241973400115967
    7. 'neighbor' → logprob: -3.3991973400115967
    8. '(next' → logprob: -3.8991973400115967
    9. 'candidate' → logprob: -4.649197101593018
    10. ' nd' → logprob: -4.899197101593018

Token 2530: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026063157245516777
    2. 'for' → logprob: -4.276062965393066
    3. ' for' → logprob: -4.526062965393066
    4. '               ' → logprob: -7.776062965393066
    5. 'd' → logprob: -8.526062965393066
    6. '       ' → logprob: -9.401062965393066
    7. ',' → logprob: -9.526062965393066
    8. ' in' → logprob: -9.901062965393066
    9. ' (' → logprob: -10.151062965393066
    10. '(d' → logprob: -10.401062965393066

Token 2531: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003464289184194058
    2. ' d' → logprob: -8.000346183776855
    3. '(d' → logprob: -12.250346183776855
    4. ' (' → logprob: -13.500346183776855
    5. '   ' → logprob: -13.875346183776855
    6. '(' → logprob: -14.125346183776855
    7. '```' → logprob: -14.250346183776855
    8. '           ' → logprob: -14.500346183776855
    9. 'cur' → logprob: -14.625346183776855
    10. '       ' → logprob: -15.125346183776855

Token 2532: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -15.500000953674316
    3. 'a' → logprob: -15.875000953674316
    4. '(A' → logprob: -15.875000953674316
    5. '
' → logprob: -16.25
    6. ' A' → logprob: -16.75
    7. '_A' → logprob: -16.875
    8. '```' → logprob: -17.125
    9. 'А' → logprob: -17.25
    10. ',' → logprob: -17.25

Token 2533: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10990752279758453
    2. ' for' → logprob: -2.859907627105713
    3. 'for' → logprob: -3.359907627105713
    4. ',' → logprob: -4.484907627105713
    5. '```' → logprob: -8.609907150268555
    6. '               ' → logprob: -8.859907150268555
    7. ':' → logprob: -8.984907150268555
    8. ' and' → logprob: -9.609907150268555
    9. ':
' → logprob: -10.359907150268555
    10. '   ' → logprob: -10.609907150268555

Token 2534: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002478627720847726
    2. ' d' → logprob: -6.87747859954834
    3. '           ' → logprob: -7.50247859954834
    4. '       ' → logprob: -8.00247859954834
    5. 'for' → logprob: -8.62747859954834
    6. '   ' → logprob: -8.75247859954834
    7. '
' → logprob: -9.87747859954834
    8. 'neighbors' → logprob: -10.50247859954834
    9. '#' → logprob: -10.62747859954834
    10. ' for' → logprob: -10.62747859954834

Token 2535: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.1008713702030946e-06
    2. 'd' → logprob: -14.875001907348633
    3. 'A' → logprob: -15.000001907348633
    4. ' B' → logprob: -15.312501907348633
    5. '```' → logprob: -15.312501907348633
    6. '
' → logprob: -15.375001907348633
    7. '_B' → logprob: -15.500001907348633
    8. 'b' → logprob: -16.000001907348633
    9. '...' → logprob: -17.000001907348633
    10. 'Б' → logprob: -17.000001907348633

Token 2536: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.028536492725834e-05
    2. ' for' → logprob: -9.750070571899414
    3. 'for' → logprob: -11.875070571899414
    4. ',' → logprob: -13.250070571899414
    5. '               ' → logprob: -13.750070571899414
    6. '		' → logprob: -14.625070571899414
    7. '	       ' → logprob: -15.250070571899414
    8. '       ' → logprob: -15.375070571899414
    9. '          ' → logprob: -15.375070571899414
    10. '
' → logprob: -15.625070571899414

Token 2537: ' candidates' (ID: 18116)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.004464420024305582
    2. 'possible' → logprob: -5.879464626312256
    3. 'route' → logprob: -8.129464149475098
    4. 'd' → logprob: -8.129464149475098
    5. '
' → logprob: -8.129464149475098
    6. ' neighbors' → logprob: -8.629464149475098
    7. '   ' → logprob: -8.879464149475098
    8. '```' → logprob: -9.004464149475098
    9. 'c' → logprob: -9.504464149475098
    10. 'neighbor' → logprob: -10.254464149475098

Token 2538: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001514557225164026
    2. ' for' → logprob: -9.250151634216309
    3. 'for' → logprob: -10.750151634216309
    4. '
' → logprob: -11.000151634216309
    5. ',' → logprob: -11.875151634216309
    6. '               ' → logprob: -12.500151634216309
    7. '		' → logprob: -13.375151634216309
    8. '       ' → logprob: -13.625151634216309
    9. '            
' → logprob: -13.625151634216309
    10. '          ' → logprob: -14.625151634216309

Token 2539: ' preserve' (ID: 33507)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.2706334590911865
    2. ' are' → logprob: -2.3956334590911865
    3. 'in' → logprob: -3.0206334590911865
    4. ' in' → logprob: -3.6456334590911865
    5. 'pres' → logprob: -4.270633697509766
    6. ' lie' → logprob: -4.395633697509766
    7. '           ' → logprob: -4.770633697509766
    8. 'also' → logprob: -5.645633697509766
    9. 'can' → logprob: -5.645633697509766
    10. 'have' → logprob: -5.645633697509766

Token 2540: ' altitude' (ID: 66032)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.002176193054765463
    2. ' altitude' → logprob: -6.877176284790039
    3. 'the' → logprob: -8.002176284790039
    4. ' alt' → logprob: -8.127176284790039
    5. '#' → logprob: -9.627176284790039
    6. '```' → logprob: -9.877176284790039
    7. '   ' → logprob: -10.002176284790039
    8. '_alt' → logprob: -10.127176284790039
    9. '       ' → logprob: -10.252176284790039
    10. 'their' → logprob: -10.502176284790039

Token 2541: ' equality' (ID: 47685)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9205461144447327
    2. 'e' → logprob: -1.295546054840088
    3. 'equal' → logprob: -1.545546054840088
    4. 'for' → logprob: -2.670546054840088
    5. '               ' → logprob: -3.670546054840088
    6. ' for' → logprob: -4.920546054840088
    7. '_equal' → logprob: -5.545546054840088
    8. ' equal' → logprob: -5.920546054840088
    9. ' equality' → logprob: -6.170546054840088
    10. '                   ' → logprob: -7.670546054840088

Token 2542: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.15310683415737e-05
    2. ' for' → logprob: -12.250021934509277
    3. ',' → logprob: -12.500021934509277
    4. 'for' → logprob: -12.750021934509277
    5. '            
' → logprob: -13.000021934509277
    6. '               ' → logprob: -13.000021934509277
    7. '
' → logprob: -13.000021934509277
    8. '       ' → logprob: -13.500021934509277
    9. '<|end|>' → logprob: -14.875021934509277
    10. '          ' → logprob: -15.000021934509277

Token 2543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.173704271830502e-06
    2. '       ' → logprob: -13.25000286102295
    3. '               ' → logprob: -14.50000286102295
    4. '
' → logprob: -14.87500286102295
    5. 'for' → logprob: -16.125003814697266
    6. '            
' → logprob: -16.250003814697266
    7. '```' → logprob: -16.375003814697266
    8. '          ' → logprob: -16.875003814697266
    9. '                   ' → logprob: -17.375003814697266
    10. ' for' → logprob: -17.500003814697266

Token 2544: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004777922760695219
    2. 'for' (adapté à ' for') → logprob: -5.379777908325195
    3. ' for' → logprob: -8.879777908325195
    4. '               ' → logprob: -11.004777908325195
    5. '       ' → logprob: -13.879777908325195
    6. '            
' → logprob: -15.254777908325195
    7. '   ' → logprob: -15.379777908325195
    8. '                   ' → logprob: -15.879777908325195
    9. '
' → logprob: -16.129777908325195
    10. '          ' → logprob: -16.254777908325195

Token 2545: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0034007367212325335
    2. ' nd' → logprob: -6.128400802612305
    3. 'n' → logprob: -7.253400802612305
    4. 'next' → logprob: -8.128400802612305
    5. 'nda' → logprob: -9.128400802612305
    6. 'new' → logprob: -9.753400802612305
    7. '   ' → logprob: -11.128400802612305
    8. 'na' → logprob: -11.628400802612305
    9. ' next' → logprob: -12.003400802612305
    10. 'ndir' → logprob: -13.003400802612305

Token 2546: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.375000953674316
    3. '(A' → logprob: -15.875000953674316
    4. '(' → logprob: -16.125
    5. '_A' → logprob: -17.5
    6. ' A' → logprob: -18.25
    7. ',' → logprob: -18.625
    8. ')' → logprob: -19.0
    9. '(s' → logprob: -19.625
    10. '	A' → logprob: -19.875

Token 2547: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25375306606292725
    2. 'in' → logprob: -1.5037530660629272
    3. ',' → logprob: -6.378753185272217
    4. '	in' → logprob: -9.878752708435059
    5. '_in' → logprob: -11.128752708435059
    6. '   ' → logprob: -11.628752708435059
    7. ',in' → logprob: -11.628752708435059
    8. ')' → logprob: -12.253752708435059
    9. 's' → logprob: -12.503752708435059
    10. ' ' → logprob: -12.503752708435059

Token 2548: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -4.5491004129871726e-05
    2. ' neighbors' → logprob: -10.000045776367188
    3. 'neighbor' → logprob: -16.875045776367188
    4. 'c' → logprob: -18.750045776367188
    5. '_neighbors' → logprob: -18.875045776367188
    6. 'ne' → logprob: -19.125045776367188
    7. '   ' → logprob: -20.000045776367188
    8. '[
' → logprob: -20.500045776367188
    9. '[' → logprob: -20.875045776367188
    10. '```' → logprob: -21.125045776367188

Token 2549: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.3054335117340088
    2. '[d' → logprob: -1.5554335117340088
    3. '_neighbors' → logprob: -3.805433511734009
    4. 'neighbors' → logprob: -4.43043327331543
    5. '_d' → logprob: -5.30543327331543
    6. '[' → logprob: -5.80543327331543
    7. '(d' → logprob: -6.18043327331543
    8. 'd' → logprob: -6.18043327331543
    9. 's' → logprob: -6.68043327331543
    10. 'in' → logprob: -6.93043327331543

Token 2550: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.4096447229385376
    2. '[' → logprob: -1.1596447229385376
    3. 'nd' → logprob: -4.534644603729248
    4. 'd' → logprob: -4.784644603729248
    5. '(nd' → logprob: -6.409644603729248
    6. '[n' → logprob: -7.159644603729248
    7. '[(' → logprob: -8.909645080566406
    8. '(d' → logprob: -8.909645080566406
    9. '```' → logprob: -8.909645080566406
    10. '[
' → logprob: -9.784645080566406

Token 2551: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.304016228066757e-05
    2. 'd' → logprob: -9.500082969665527
    3. 'B' → logprob: -12.375082969665527
    4. 'a' → logprob: -13.375082969665527
    5. ' A' → logprob: -14.625082969665527
    6. '_A' → logprob: -15.000082969665527
    7. 'А' → logprob: -15.500082969665527
    8. '(d' → logprob: -15.625082969665527
    9. ' d' → logprob: -15.750082969665527
    10. '   ' → logprob: -15.750082969665527

Token 2552: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6602485179901123
    2. ']:
' → logprob: -1.6602485179901123
    3. ']:' → logprob: -1.6602485179901123
    4. '):' → logprob: -2.5352485179901123
    5. ':' → logprob: -4.535248756408691
    6. ':
' → logprob: -4.910248756408691
    7. ']' → logprob: -5.660248756408691
    8. '       ' → logprob: -7.035248756408691
    9. '           ' → logprob: -7.785248756408691
    10. '   ' → logprob: -8.410248756408691

Token 2553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04362521320581436
    2. ' for' → logprob: -3.1686251163482666
    3. 'for' → logprob: -8.293624877929688
    4. '           ' → logprob: -8.543624877929688
    5. '	           ' → logprob: -9.418624877929688
    6. '	for' → logprob: -10.543624877929688
    7. '			' → logprob: -10.918624877929688
    8. '                   ' → logprob: -11.543624877929688
    9. '   ' → logprob: -11.918624877929688
    10. '                ' → logprob: -12.043624877929688

Token 2554: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32864633202552795
    2. 'for' (adapté à ' for') → logprob: -1.7036463022232056
    3. '                   ' → logprob: -2.328646421432495
    4. '	for' → logprob: -8.203646659851074
    5. '				' → logprob: -8.703646659851074
    6. '   ' → logprob: -10.203646659851074
    7. '                ' → logprob: -10.203646659851074
    8. '	               ' → logprob: -10.203646659851074
    9. ' ' → logprob: -10.578646659851074
    10. '                       ' → logprob: -10.828646659851074

Token 2555: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.006715370807796717
    2. ' nd' → logprob: -5.006715297698975
    3. '(nd' → logprob: -16.756715774536133
    4. '_nd' → logprob: -17.131715774536133
    5. '   ' → logprob: -18.256715774536133
    6. 'n' → logprob: -18.256715774536133
    7. 'nds' → logprob: -18.256715774536133
    8. '.nd' → logprob: -18.381715774536133
    9. 'ndl' → logprob: -18.881715774536133
    10. ' ' → logprob: -19.506715774536133

Token 2556: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. 'd' → logprob: -17.875
    3. 'A' → logprob: -18.5
    4. 'b' → logprob: -18.625
    5. ' B' → logprob: -18.875
    6. '(' → logprob: -20.125
    7. 'def' → logprob: -20.375
    8. '[' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. '#' → logprob: -20.625

Token 2557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01861962117254734
    2. 'in' → logprob: -4.018619537353516
    3. '[' → logprob: -8.518619537353516
    4. '<|end|>' → logprob: -9.393619537353516
    5. '	in' → logprob: -9.518619537353516
    6. ' ' → logprob: -9.643619537353516
    7. '[in' → logprob: -11.143619537353516
    8. '_in' → logprob: -11.268619537353516
    9. '[
' → logprob: -12.643619537353516
    10. ')' → logprob: -12.768619537353516

Token 2558: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0005541055579669774
    2. ' neighbors' → logprob: -7.500554084777832
    3. 'c' → logprob: -14.500554084777832
    4. 'neighbor' → logprob: -15.000554084777832
    5. '           ' → logprob: -16.25055503845215
    6. '       ' → logprob: -17.12555503845215
    7. ' candidates' → logprob: -17.25055503845215
    8. '               ' → logprob: -17.50055503845215
    9. '_neighbors' → logprob: -17.50055503845215
    10. '   ' → logprob: -17.62555503845215

Token 2559: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0018012002110481262
    2. '[d' → logprob: -6.876801013946533
    3. 'Map' → logprob: -7.501801013946533
    4. 'map' → logprob: -8.626801490783691
    5. '[B' → logprob: -10.876801490783691
    6. '[b' → logprob: -11.876801490783691
    7. '_maps' → logprob: -12.501801490783691
    8. '[' → logprob: -13.251801490783691
    9. '_MAP' → logprob: -13.876801490783691
    10. '(d' → logprob: -14.126801490783691

Token 2560: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.8624639324116288e-06
    2. 'd' → logprob: -13.500001907348633
    3. '(d' → logprob: -15.000001907348633
    4. '[' → logprob: -17.125001907348633
    5. '[
' → logprob: -17.750001907348633
    6. '[b' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '	d' → logprob: -19.375001907348633
    9. '[(' → logprob: -19.500001907348633
    10. ' d' → logprob: -21.000001907348633

Token 2561: 'B' (ID: 33)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6581411361694336
    2. 'B' → logprob: -1.1581411361694336
    3. 'd' → logprob: -1.7831411361694336
    4. ' d' → logprob: -12.783141136169434
    5. '   ' → logprob: -13.658141136169434
    6. '(d' → logprob: -14.033141136169434
    7. '```' → logprob: -14.408141136169434
    8. ' B' → logprob: -14.908141136169434
    9. '  ' → logprob: -15.408141136169434
    10. '"B' → logprob: -15.658141136169434

Token 2562: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47991782426834106
    2. '               ' → logprob: -1.8549177646636963
    3. '):' → logprob: -2.7299177646636963
    4. '                   ' → logprob: -2.9799177646636963
    5. ':
' → logprob: -3.2299177646636963
    6. ':' → logprob: -3.4799177646636963
    7. ')' → logprob: -4.104918003082275
    8. ']:
' → logprob: -5.354918003082275
    9. '():
' → logprob: -5.854918003082275
    10. '           ' → logprob: -6.104918003082275

Token 2563: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000766148732509464
    2. '                       ' → logprob: -8.000765800476074
    3. '               ' → logprob: -9.250765800476074
    4. '                  ' → logprob: -9.750765800476074
    5. '                           ' → logprob: -9.750765800476074
    6. '                    ' → logprob: -9.875765800476074
    7. '                               ' → logprob: -10.375765800476074
    8. '                ' → logprob: -10.375765800476074
    9. '                 ' → logprob: -10.500765800476074
    10. '   ' → logprob: -11.375765800476074

Token 2564: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23257139325141907
    2. 'if' (adapté à ' if') → logprob: -2.2325713634490967
    3. '                       ' → logprob: -2.4825713634490967
    4. ' if' → logprob: -4.232571601867676
    5. '                    ' → logprob: -7.732571601867676
    6. '               ' → logprob: -7.857571601867676
    7. '                           ' → logprob: -8.107571601867676
    8. '   ' → logprob: -8.357571601867676
    9. 'new' → logprob: -8.482571601867676
    10. '                     ' → logprob: -9.482571601867676

Token 2565: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.17416764795780182
    2. '(d' → logprob: -2.4241676330566406
    3. 'abs' → logprob: -3.6741676330566406
    4. ' (' → logprob: -3.7991676330566406
    5. '(nd' → logprob: -3.7991676330566406
    6. ' abs' → logprob: -7.299167633056641
    7. '(not' → logprob: -8.42416763305664
    8. '(n' → logprob: -9.42416763305664
    9. '(dist' → logprob: -10.67416763305664
    10. '(distance' → logprob: -10.79916763305664

Token 2566: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.01832927204668522
    2. 'abs' → logprob: -4.14332914352417
    3. '(nd' → logprob: -6.51832914352417
    4. '(abs' → logprob: -7.14332914352417
    5. '(' → logprob: -11.518329620361328
    6. ' nd' → logprob: -12.518329620361328
    7. ' (' → logprob: -12.643329620361328
    8. '   ' → logprob: -13.143329620361328
    9. 'nds' → logprob: -13.893329620361328
    10. '           ' → logprob: -14.143329620361328

Token 2567: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -16.625
    3. ' A' → logprob: -16.625
    4. 'a' → logprob: -17.0
    5. ')' → logprob: -17.5
    6. 'B' → logprob: -18.75
    7. '<|end|>' → logprob: -19.125
    8. '(A' → logprob: -19.25
    9. 'А' → logprob: -19.625
    10. 'd' → logprob: -19.625

Token 2568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037251986213959754
    2. ' ,' → logprob: -8.625372886657715
    3. ',n' → logprob: -9.375372886657715
    4. ',d' → logprob: -9.375372886657715
    5. ',
' → logprob: -12.000372886657715
    6. '<|end|>' → logprob: -12.625372886657715
    7. ',None' → logprob: -13.000372886657715
    8. '‌,' → logprob: -13.125372886657715
    9. ',user' → logprob: -13.500372886657715
    10. ',node' → logprob: -13.875372886657715

Token 2569: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -4.644463479053229e-05
    2. ' nd' → logprob: -10.250046730041504
    3. 'self' → logprob: -12.750046730041504
    4. 'ndl' → logprob: -12.875046730041504
    5. '   ' → logprob: -13.125046730041504
    6. ')' → logprob: -14.250046730041504
    7. '(nd' → logprob: -14.375046730041504
    8. '
' → logprob: -14.750046730041504
    9. 'nl' → logprob: -15.250046730041504
    10. '    ' → logprob: -15.375046730041504

Token 2570: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. 'A' → logprob: -17.375
    3. ' B' → logprob: -17.5
    4. ')' → logprob: -17.875
    5. 'b' → logprob: -18.25
    6. '
' → logprob: -18.375
    7. '                   ' → logprob: -19.0
    8. '   ' → logprob: -19.125
    9. 'Б' → logprob: -19.25
    10. '_B' → logprob: -19.75

Token 2571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029119811952114105
    2. ' in' → logprob: -6.5029120445251465
    3. ' not' → logprob: -7.3779120445251465
    4. ' )' → logprob: -7.6279120445251465
    5. 'in' → logprob: -8.252911567687988
    6. 'not' → logprob: -11.002911567687988
    7. '                   ' → logprob: -11.627911567687988
    8. '[' → logprob: -13.002911567687988
    9. ',)' → logprob: -13.252911567687988
    10. '                       ' → logprob: -13.502911567687988

Token 2572: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22076287865638733
    2. ' not' → logprob: -1.845762848854065
    3. 'in' → logprob: -3.2207629680633545
    4. 'not' → logprob: -8.845763206481934
    5. ')' → logprob: -9.970763206481934
    6. '<|end|>' → logprob: -10.470763206481934
    7. ' ' → logprob: -10.845763206481934
    8. '	in' → logprob: -11.970763206481934
    9. '[' → logprob: -12.845763206481934
    10. '	not' → logprob: -12.970763206481934

Token 2573: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -2.8206473871250637e-05
    2. ' candidate' → logprob: -10.500028610229492
    3. '                   ' → logprob: -14.625028610229492
    4. '   ' → logprob: -16.875028610229492
    5. '               ' → logprob: -17.625028610229492
    6. '           ' → logprob: -18.625028610229492
    7. '(candidate' → logprob: -18.750028610229492
    8. '                       ' → logprob: -19.500028610229492
    9. '                     ' → logprob: -19.625028610229492
    10. 'c' → logprob: -20.000028610229492

Token 2574: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.7432603272027336e-06
    2. '_sets' → logprob: -13.750001907348633
    3. '_pairs' → logprob: -15.250001907348633
    4. 's' → logprob: -16.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '_SET' → logprob: -17.250001907348633
    7. 'set' → logprob: -17.500001907348633
    8. '_states' → logprob: -17.875001907348633
    9. 'Set' → logprob: -17.875001907348633
    10. '_Set' → logprob: -18.250001907348633

Token 2575: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2986223101615906
    2. ' and' → logprob: -1.4236223697662354
    3. ':
' → logprob: -4.673622131347656
    4. ':' → logprob: -5.673622131347656
    5. '                   ' → logprob: -6.298622131347656
    6. 'and' → logprob: -6.548622131347656
    7. '                        
' → logprob: -7.923622131347656
    8. ',' → logprob: -8.298622131347656
    9. '                        ' → logprob: -8.923622131347656
    10. '```' → logprob: -9.298622131347656

Token 2576: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009259917424060404
    2. '                           ' → logprob: -8.50092601776123
    3. '                        ' → logprob: -8.62592601776123
    4. '                               ' → logprob: -9.00092601776123
    5. '                   ' → logprob: -9.37592601776123
    6. '                        
' → logprob: -9.37592601776123
    7. ',' → logprob: -10.25092601776123
    8. ' and' → logprob: -10.37592601776123
    9. '                    ' → logprob: -10.75092601776123
    10. '                      ' → logprob: -11.00092601776123

Token 2577: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35599231719970703
    2. 'move' → logprob: -1.605992317199707
    3. 'cost' → logprob: -3.355992317199707
    4. ' move' → logprob: -3.980992317199707
    5. 'new' → logprob: -4.355992317199707
    6. '                           ' → logprob: -4.605992317199707
    7. ' new' → logprob: -4.730992317199707
    8. '                   ' → logprob: -5.730992317199707
    9. 'dist' → logprob: -6.105992317199707
    10. 'step' → logprob: -6.355992317199707

Token 2578: ' cost' (ID: 3097)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.07502313703298569
    2. 'cost' → logprob: -3.7000231742858887
    3. 'step' → logprob: -4.075023174285889
    4. 'new' → logprob: -4.450023174285889
    5. 'delta' → logprob: -4.825023174285889
    6. '                       ' → logprob: -5.450023174285889
    7. 'dist' → logprob: -6.200023174285889
    8. ' move' → logprob: -6.450023174285889
    9. 'increment' → logprob: -7.075023174285889
    10. '                   ' → logprob: -8.20002269744873

Token 2579: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005623954813927412
    2. '=' → logprob: -5.380623817443848
    3. '_increment' → logprob: -8.255623817443848
    4. ' +' → logprob: -8.755623817443848
    5. '+' → logprob: -8.880623817443848
    6. '                       ' → logprob: -9.005623817443848
    7. '_cost' → logprob: -9.880623817443848
    8. '_add' → logprob: -10.130623817443848
    9. 'increment' → logprob: -10.255623817443848
    10. '                           ' → logprob: -10.380623817443848

Token 2580: ' sum' (ID: 4215)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.14531733095645905
    2. 'cur' → logprob: -2.770317316055298
    3. 'math' → logprob: -3.270317316055298
    4. ' abs' → logprob: -4.145317554473877
    5. ' math' → logprob: -4.520317554473877
    6. '(abs' → logprob: -5.895317554473877
    7. 'dist' → logprob: -6.395317554473877
    8. ' cur' → logprob: -7.145317554473877
    9. '(math' → logprob: -7.270317554473877
    10. '                   ' → logprob: -7.395317554473877

Token 2581: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6622837781906128
    2. '=' → logprob: -1.0372837781906128
    3. '(' → logprob: -2.9122838973999023
    4. ' of' → logprob: -3.9122838973999023
    5. '_of' → logprob: -4.537283897399902
    6. 'of' → logprob: -4.787283897399902
    7. '(
' → logprob: -4.787283897399902
    8. '                   ' → logprob: -5.162283897399902
    9. ' +=' → logprob: -5.412283897399902
    10. '                       ' → logprob: -5.412283897399902

Token 2582: ' distances' (ID: 48294)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.007699253037571907
    2. '(abs' → logprob: -5.257699489593506
    3. ' abs' → logprob: -6.007699489593506
    4. '(' → logprob: -14.007699012756348
    5. 'math' → logprob: -14.382699012756348
    6. 'dist' → logprob: -14.632699012756348
    7. '   ' → logprob: -15.507699012756348
    8. ' (' → logprob: -15.632699012756348
    9. '       ' → logprob: -16.132699966430664
    10. '               ' → logprob: -16.507699966430664

Token 2583: ' moved' (ID: 12183)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6745127439498901
    2. ' +' → logprob: -1.2995127439498901
    3. '                           ' → logprob: -2.6745128631591797
    4. ' =' → logprob: -3.1745128631591797
    5. '                       ' → logprob: -3.1745128631591797
    6. '=' → logprob: -3.4245128631591797
    7. '                               ' → logprob: -3.9245128631591797
    8. ':' → logprob: -5.79951286315918
    9. '                   ' → logprob: -6.29951286315918
    10. ',' → logprob: -6.92451286315918

Token 2584: ' by' (ID: 656)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07535044103860855
    2. ' +' → logprob: -3.325350522994995
    3. '+' → logprob: -4.200350284576416
    4. '                           ' → logprob: -4.575350284576416
    5. ' =' → logprob: -5.575350284576416
    6. ',' → logprob: -6.700350284576416
    7. '                               ' → logprob: -6.950350284576416
    8. ':' → logprob: -7.450350284576416
    9. ' -' → logprob: -7.700350284576416
    10. 'new' → logprob: -7.700350284576416

Token 2585: ' each' (ID: 2454)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.49972623586654663
    2. 'abs' → logprob: -1.4997262954711914
    3. 'math' → logprob: -2.7497262954711914
    4. 'd' → logprob: -2.7497262954711914
    5. 'self' → logprob: -4.124726295471191
    6. 'cl' → logprob: -4.124726295471191
    7. 'the' → logprob: -5.624726295471191
    8. ' nd' → logprob: -6.999726295471191
    9. 'both' → logprob: -6.999726295471191
    10. ' math' → logprob: -7.374726295471191

Token 2586: ' clim' (ID: 21324)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8029714226722717
    2. ' +' → logprob: -0.8029714226722717
    3. '                       ' → logprob: -3.802971363067627
    4. 'A' → logprob: -4.302971363067627
    5. ')' → logprob: -4.927971363067627
    6. '                           ' → logprob: -4.927971363067627
    7. '                               ' → logprob: -5.302971363067627
    8. '                   ' → logprob: -5.302971363067627
    9. ')
' → logprob: -5.427971363067627
    10. 'd' → logprob: -5.677971363067627

Token 2587: 'ber' (ID: 718)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -1.6442307233810425
    2. 'A' → logprob: -2.019230842590332
    3. '(' → logprob: -2.269230842590332
    4. ')' → logprob: -2.519230842590332
    5. '((' → logprob: -2.644230842590332
    6. 'eters' → logprob: -3.144230842590332
    7. 'aters' → logprob: -3.394230842590332
    8. '(d' → logprob: -3.519230842590332
    9. '(
' → logprob: -3.519230842590332
    10. 'oved' → logprob: -3.644230842590332

Token 2588: ' along' (ID: 4251)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.48491695523262024
    2. '                       ' → logprob: -1.1099169254302979
    3. ',' → logprob: -3.734916925430298
    4. '```' → logprob: -4.734917163848877
    5. '                               ' → logprob: -5.359917163848877
    6. 'cost' → logprob: -5.734917163848877
    7. ':' → logprob: -6.234917163848877
    8. '
' → logprob: -6.359917163848877
    9. 'distance' → logprob: -6.859917163848877
    10. ' =' → logprob: -6.984917163848877

Token 2589: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9753515124320984
    2. '"' → logprob: -1.6003515720367432
    3. 'route' → logprob: -1.6003515720367432
    4. 'the' → logprob: -1.7253515720367432
    5. ' the' → logprob: -4.100351333618164
    6. ' route' → logprob: -4.600351333618164
    7. ''' → logprob: -5.100351333618164
    8. ' self' → logprob: -6.100351333618164
    9. ' "' → logprob: -7.100351333618164
    10. 'abs' → logprob: -7.100351333618164

Token 2590: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.022466203197836876
    2. ' route' → logprob: -3.8974661827087402
    3. 'segment' → logprob: -7.52246618270874
    4. '_route' → logprob: -8.022466659545898
    5. '"' → logprob: -8.272466659545898
    6. '
' → logprob: -8.772466659545898
    7. ''' → logprob: -8.897466659545898
    8. '   ' → logprob: -9.522466659545898
    9. '`' → logprob: -9.522466659545898
    10. ' ' → logprob: -9.897466659545898

Token 2591: ' surface' (ID: 9753)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.038884736597537994
    2. '                           ' → logprob: -3.4138846397399902
    3. ',' → logprob: -6.28888463973999
    4. ':' → logprob: -7.16388463973999
    5. ':
' → logprob: -7.41388463973999
    6. '                   ' → logprob: -7.53888463973999
    7. '                               ' → logprob: -8.163885116577148
    8. '                        
' → logprob: -8.163885116577148
    9. ',
' → logprob: -8.538885116577148
    10. '):
' → logprob: -9.663885116577148

Token 2592: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5927225947380066
    2. '                       ' → logprob: -0.9677225947380066
    3. ',' → logprob: -3.7177226543426514
    4. '                               ' → logprob: -4.467722415924072
    5. ':
' → logprob: -4.592722415924072
    6. ':' → logprob: -4.842722415924072
    7. '):
' → logprob: -6.217722415924072
    8. '+' → logprob: -6.592722415924072
    9. '                            
' → logprob: -6.967722415924072
    10. '                   ' → logprob: -7.092722415924072

Token 2593: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000761745497584343
    2. '                           ' → logprob: -7.50076150894165
    3. '                   ' → logprob: -9.750761985778809
    4. '                        
' → logprob: -10.125761985778809
    5. ',' → logprob: -10.750761985778809
    6. '                        ' → logprob: -10.875761985778809
    7. '                               ' → logprob: -11.125761985778809
    8. '                      ' → logprob: -11.500761985778809
    9. '					' → logprob: -11.750761985778809
    10. '               ' → logprob: -12.375761985778809

Token 2594: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.2603236138820648
    2. 'move' → logprob: -2.2603235244750977
    3. '                       ' → logprob: -2.8853235244750977
    4. '                           ' → logprob: -3.5103235244750977
    5. ' move' → logprob: -4.385323524475098
    6. ' cost' → logprob: -4.510323524475098
    7. 'dist' → logprob: -4.635323524475098
    8. 'new' → logprob: -6.760323524475098
    9. ' dist' → logprob: -7.135323524475098
    10. '   ' → logprob: -7.260323524475098

Token 2595: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891292124986649
    2. '=' → logprob: -2.5789129734039307
    3. ' +=' → logprob: -11.953912734985352
    4. ')' → logprob: -12.078912734985352
    5. ' +' → logprob: -12.828912734985352
    6. '_add' → logprob: -13.078912734985352
    7. '+' → logprob: -13.203912734985352
    8. '_increment' → logprob: -13.828912734985352
    9. ',' → logprob: -14.578912734985352
    10. '+=' → logprob: -14.703912734985352

Token 2596: ' self' (ID: 1051)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10697030276060104
    2. '(abs' → logprob: -2.6069703102111816
    3. 'cur' → logprob: -4.106970310211182
    4. '(cur' → logprob: -5.356970310211182
    5. '(dist' → logprob: -6.106970310211182
    6. ' abs' → logprob: -6.356970310211182
    7. 'self' → logprob: -6.981970310211182
    8. 'dist' → logprob: -7.481970310211182
    9. '(self' → logprob: -7.606970310211182
    10. ' (' → logprob: -8.731969833374023

Token 2597: '.route' (ID: 24746)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1465585082769394
    2. '.cur' → logprob: -3.0215585231781006
    3. 'dist' → logprob: -3.3965585231781006
    4. '.route' → logprob: -4.3965582847595215
    5. 'route' → logprob: -4.6465582847595215
    6. 'abs' → logprob: -4.7715582847595215
    7. '.dist' → logprob: -5.5215582847595215
    8. ' cur' → logprob: -5.5215582847595215
    9. 'distance' → logprob: -6.1465582847595215
    10. '   ' → logprob: -6.5215582847595215

Token 2598: '.point' (ID: 58020)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.049687791615724564
    2. '.distance' → logprob: -3.1746878623962402
    3. '.point' → logprob: -5.04968786239624
    4. 'distance' → logprob: -9.549687385559082
    5. '.dist' → logprob: -9.799687385559082
    6. 'length' → logprob: -10.049687385559082
    7. '.points' → logprob: -11.174687385559082
    8. '.segment' → logprob: -11.424687385559082
    9. '.total' → logprob: -11.549687385559082
    10. 'point' → logprob: -11.674687385559082

Token 2599: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00016384923947043717
    2. 's' → logprob: -8.750164031982422
    3. 'distance' → logprob: -13.000164031982422
    4. 'At' → logprob: -13.500164031982422
    5. '_to' → logprob: -14.500164031982422
    6. '   ' → logprob: -15.875164031982422
    7. '_distance' → logprob: -16.000164031982422
    8. 'at' → logprob: -16.125164031982422
    9. '_on' → logprob: -16.125164031982422
    10. '_dist' → logprob: -16.250164031982422

Token 2600: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.02831912785768509
    2. 'distance' → logprob: -3.6533191204071045
    3. '(nd' → logprob: -6.903319358825684
    4. 'nd' → logprob: -7.903319358825684
    5. '(distance' → logprob: -8.653319358825684
    6. '_at' → logprob: -8.778319358825684
    7. '(' → logprob: -9.403319358825684
    8. '((' → logprob: -9.653319358825684
    9. '_dist' → logprob: -10.153319358825684
    10. '_nd' → logprob: -10.528319358825684

Token 2601: '(d' (ID: 2572)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5944007635116577
    2. '(nd' → logprob: -0.8444007635116577
    3. 'abs' → logprob: -4.719400882720947
    4. '(abs' → logprob: -5.094400882720947
    5. 'cost' → logprob: -6.344400882720947
    6. ' nd' → logprob: -7.594400882720947
    7. '(' → logprob: -7.719400882720947
    8. '(cost' → logprob: -8.469400405883789
    9. 'd' → logprob: -9.094400405883789
    10. '(n' → logprob: -10.094400405883789

Token 2602: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.45848218582978e-06
    2. ' nd' → logprob: -14.12500286102295
    3. '(nd' → logprob: -14.75000286102295
    4. 'nd' → logprob: -15.12500286102295
    5. ')' → logprob: -16.000001907348633
    6. '```' → logprob: -16.000001907348633
    7. '_A' → logprob: -16.000001907348633
    8. 'a' → logprob: -16.000001907348633
    9. 'А' → logprob: -16.125001907348633
    10. ' A' → logprob: -16.375001907348633

Token 2603: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.000156577822053805
    2. '.distance' → logprob: -9.25015640258789
    3. ')' → logprob: -10.87515640258789
    4. '   ' → logprob: -11.87515640258789
    5. '
' → logprob: -12.37515640258789
    6. '           ' → logprob: -12.37515640258789
    7. ' ).' → logprob: -12.37515640258789
    8. '       ' → logprob: -12.50015640258789
    9. ' ' → logprob: -13.00015640258789
    10. ')
' → logprob: -13.12515640258789

Token 2604: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.1472419600977446e-06
    2. '.distance' → logprob: -14.125000953674316
    3. ' distance' → logprob: -15.000000953674316
    4. '
' → logprob: -16.375001907348633
    5. '(distance' → logprob: -18.375001907348633
    6. '_distance' → logprob: -20.000001907348633
    7. 'difference' → logprob: -20.250001907348633
    8. ' ' → logprob: -21.125001907348633
    9. '```' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.250001907348633

Token 2605: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.054500666621607e-06
    2. 'to' → logprob: -12.75000286102295
    3. 'To' → logprob: -17.125003814697266
    4. '```' → logprob: -17.125003814697266
    5. '(' → logprob: -17.500003814697266
    6. '_between' → logprob: -17.875003814697266
    7. '(
' → logprob: -18.500003814697266
    8. '_t' → logprob: -18.750003814697266
    9. ')_' → logprob: -18.750003814697266
    10. '_TO' → logprob: -19.625003814697266

Token 2606: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20161506533622742
    2. 'self' → logprob: -1.7016150951385498
    3. ' self' → logprob: -8.576615333557129
    4. '(
' → logprob: -11.701615333557129
    5. '(' → logprob: -13.576615333557129
    6. '	self' → logprob: -13.951615333557129
    7. ',self' → logprob: -14.076615333557129
    8. '[self' → logprob: -14.576615333557129
    9. '=self' → logprob: -14.701615333557129
    10. 'Point' → logprob: -14.826615333557129

Token 2607: '.route' (ID: 24746)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003195654833689332
    2. '(self' → logprob: -6.378195762634277
    3. 'route' → logprob: -6.878195762634277
    4. ' self' → logprob: -7.753195762634277
    5. 'Route' → logprob: -11.003195762634277
    6. ')' → logprob: -11.878195762634277
    7. '_route' → logprob: -13.003195762634277
    8. '[self' → logprob: -13.253195762634277
    9. '(route' → logprob: -13.753195762634277
    10. ' route' → logprob: -14.003195762634277

Token 2608: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -0.000915039679966867
    2. 'point' → logprob: -7.000915050506592
    3. ' point' → logprob: -13.000914573669434
    4. '	point' → logprob: -14.250914573669434
    5. ').' → logprob: -15.625914573669434
    6. '(point' → logprob: -15.625914573669434
    7. '```' → logprob: -16.37591552734375
    8. 'Point' → logprob: -16.50091552734375
    9. '_point' → logprob: -16.75091552734375
    10. 'at' → logprob: -17.37591552734375

Token 2609: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0001499060745118186
    2. 'at' → logprob: -9.125149726867676
    3. 'At' → logprob: -10.250149726867676
    4. 'd' → logprob: -12.875149726867676
    5. 'ат' → logprob: -14.875149726867676
    6. ')' → logprob: -15.375149726867676
    7. '_' → logprob: -15.375149726867676
    8. '	at' → logprob: -15.625149726867676
    9. '   ' → logprob: -15.750149726867676
    10. '```' → logprob: -15.750149726867676

Token 2610: '_distance' (ID: 45537)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.011057846248149872
    2. '_distance' → logprob: -4.5110578536987305
    3. 'd' → logprob: -12.13605785369873
    4. '(distance' → logprob: -13.51105785369873
    5. ' distance' → logprob: -14.01105785369873
    6. 'Distance' → logprob: -14.13605785369873
    7. 'dist' → logprob: -14.76105785369873
    8. '```' → logprob: -14.88605785369873
    9. 'at' → logprob: -15.26105785369873
    10. 'point' → logprob: -15.51105785369873

Token 2611: '(nd' (ID: 131841)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03126325085759163
    2. 'd' → logprob: -3.7812633514404297
    3. '(nd' → logprob: -4.90626335144043
    4. 'nd' → logprob: -8.40626335144043
    5. ' d' → logprob: -9.03126335144043
    6. ' (' → logprob: -9.53126335144043
    7. '(' → logprob: -9.65626335144043
    8. ')' → logprob: -11.03126335144043
    9. '(distance' → logprob: -11.15626335144043
    10. ')(' → logprob: -11.28126335144043

Token 2612: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00034261439577676356
    2. 'B' → logprob: -8.00034236907959
    3. 'D' → logprob: -13.50034236907959
    4. 'a' → logprob: -13.87534236907959
    5. ')' → logprob: -14.25034236907959
    6. '
' → logprob: -14.25034236907959
    7. 'А' → logprob: -14.25034236907959
    8. 'N' → logprob: -14.37534236907959
    9. 'nd' → logprob: -14.50034236907959
    10. '   ' → logprob: -14.75034236907959

Token 2613: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000784495088737458
    2. '())' → logprob: -7.625784397125244
    3. ')+' → logprob: -8.625784873962402
    4. '))' → logprob: -9.750784873962402
    5. ')
' → logprob: -10.500784873962402
    6. '()' → logprob: -10.875784873962402
    7. ' )' → logprob: -11.875784873962402
    8. '                       ' → logprob: -13.750784873962402
    9. '),' → logprob: -13.875784873962402
    10. '                   ' → logprob: -14.625784873962402

Token 2614: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933860778808594
    2. ' +' → logprob: -0.6933860778808594
    3. '                       ' → logprob: -8.81838607788086
    4. '+
' → logprob: -10.44338607788086
    5. ' +
' → logprob: -11.44338607788086
    6. '+self' → logprob: -11.69338607788086
    7. ')' → logprob: -11.81838607788086
    8. '                        ' → logprob: -11.94338607788086
    9. '                               ' → logprob: -12.06838607788086
    10. ')+' → logprob: -12.19338607788086

Token 2615: ' \
' (ID: 6814)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31442680954933167
    2. ' self' → logprob: -1.3144267797470093
    3. '                       ' → logprob: -6.814426898956299
    4. '   ' → logprob: -10.56442642211914
    5. '                           ' → logprob: -10.56442642211914
    6. '                        ' → logprob: -12.43942642211914
    7. ' ' → logprob: -12.93942642211914
    8. '	self' → logprob: -13.06442642211914
    9. '                               ' → logprob: -13.31442642211914
    10. '           ' → logprob: -13.56442642211914

Token 2616: '                              ' (ID: 15880)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38704511523246765
    2. ' self' → logprob: -1.13704514503479
    3. '                       ' → logprob: -8.762044906616211
    4. ' ' → logprob: -11.637044906616211
    5. '	self' → logprob: -12.762044906616211
    6. '                   ' → logprob: -13.387044906616211
    7. '                        ' → logprob: -13.762044906616211
    8. '                           ' → logprob: -14.262044906616211
    9. '                               ' → logprob: -14.512044906616211
    10. '   ' → logprob: -14.512044906616211

Token 2617: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005476722144521773
    2. ' self' → logprob: -7.750547885894775
    3. '                              ' → logprob: -10.000547409057617
    4. '   ' → logprob: -10.250547409057617
    5. '                               ' → logprob: -11.250547409057617
    6. '           ' → logprob: -12.000547409057617
    7. '                                  ' → logprob: -12.000547409057617
    8. '                   ' → logprob: -13.250547409057617
    9. '                       ' → logprob: -13.375547409057617
    10. '               ' → logprob: -13.750547409057617

Token 2618: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.011078117415308952
    2. 'route' → logprob: -4.511077880859375
    3. 'self' → logprob: -10.636077880859375
    4. '$route' → logprob: -13.011077880859375
    5. ' route' → logprob: -13.261077880859375
    6. '.' → logprob: -15.011077880859375
    7. '_route' → logprob: -15.136077880859375
    8. '       ' → logprob: -15.636077880859375
    9. 'Route' → logprob: -15.636077880859375
    10. '(route' → logprob: -15.636077880859375

Token 2619: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -11.250020980834961
    3. ' .' → logprob: -13.375020980834961
    4. 'point' → logprob: -13.625020980834961
    5. '.points' → logprob: -13.625020980834961
    6. '           ' → logprob: -13.750020980834961
    7. '`.' → logprob: -13.750020980834961
    8. '	point' → logprob: -14.125020980834961
    9. '   ' → logprob: -16.00002098083496
    10. '               ' → logprob: -16.37502098083496

Token 2620: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -4.961759259458631e-06
    2. 'At' → logprob: -12.625004768371582
    3. 'at' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '.at' → logprob: -15.750004768371582
    6. '                           ' → logprob: -16.7500057220459
    7. '._' → logprob: -16.8750057220459
    8. 'point' → logprob: -16.8750057220459
    9. 'distance' → logprob: -16.8750057220459
    10. '.point' → logprob: -17.1250057220459

Token 2621: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.02325398102402687
    2. 'distance' → logprob: -3.773253917694092
    3. 'self' → logprob: -12.39825439453125
    4. 'Distance' → logprob: -12.77325439453125
    5. 'dist' → logprob: -14.39825439453125
    6. '_DISTANCE' → logprob: -14.89825439453125
    7. ' distance' → logprob: -15.14825439453125
    8. 'd' → logprob: -15.77325439453125
    9. '距离' → logprob: -15.89825439453125
    10. '_dist' → logprob: -16.89825439453125

Token 2622: '(self' (ID: 2402)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008925211732275784
    2. '(distance' → logprob: -8.000892639160156
    3. 'd' → logprob: -8.250892639160156
    4. '(' → logprob: -8.500892639160156
    5. ' (' → logprob: -9.625892639160156
    6. '(dist' → logprob: -11.875892639160156
    7. 'distance' → logprob: -12.500892639160156
    8. '(
' → logprob: -12.750892639160156
    9. '((' → logprob: -12.875892639160156
    10. '(nd' → logprob: -13.125892639160156

Token 2623: '.L' (ID: 2024)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6339459419250488
    2. 'B' → logprob: -0.7589459419250488
    3. 'nd' → logprob: -7.383945941925049
    4. 'point' → logprob: -8.75894546508789
    5. '.d' → logprob: -9.00894546508789
    6. '.B' → logprob: -9.88394546508789
    7. '   ' → logprob: -10.00894546508789
    8. 'b' → logprob: -10.00894546508789
    9. '       ' → logprob: -10.13394546508789
    10. '  ' → logprob: -10.13394546508789

Token 2624: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.313662052154541
    2. ' -' → logprob: -1.313662052154541
    3. ')' → logprob: -8.188661575317383
    4. '-d' → logprob: -10.063661575317383
    5. ').' → logprob: -10.188661575317383
    6. ' ' → logprob: -11.563661575317383
    7. '  ' → logprob: -11.688661575317383
    8. '                              ' → logprob: -12.063661575317383
    9. '   ' → logprob: -12.438661575317383
    10. '_' → logprob: -13.063661575317383

Token 2625: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31335145235061646
    2. 'nd' → logprob: -1.3133513927459717
    3. 'nb' → logprob: -10.18835163116455
    4. ' nd' → logprob: -10.43835163116455
    5. ' d' → logprob: -11.18835163116455
    6. '   ' → logprob: -12.31335163116455
    7. '(nd' → logprob: -13.56335163116455
    8. '
' → logprob: -14.06335163116455
    9. '  ' → logprob: -14.68835163116455
    10. 'n' → logprob: -15.06335163116455

Token 2626: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00018411019118502736
    2. 'd' → logprob: -9.375184059143066
    3. 'nd' → logprob: -9.875184059143066
    4. '_B' → logprob: -10.625184059143066
    5. ' nd' → logprob: -11.750184059143066
    6. 'b' → logprob: -11.875184059143066
    7. '_nd' → logprob: -13.125184059143066
    8. 'A' → logprob: -13.375184059143066
    9. 'n' → logprob: -14.250184059143066
    10. ' B' → logprob: -14.250184059143066

Token 2627: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -4.1557283111615106e-05
    2. ')' → logprob: -11.125041961669922
    3. '   ' → logprob: -12.500041961669922
    4. '()).' → logprob: -12.625041961669922
    5. '                              ' → logprob: -12.625041961669922
    6. ' ).' → logprob: -12.875041961669922
    7. '                               ' → logprob: -13.000041961669922
    8. '                             ' → logprob: -13.250041961669922
    9. '.' → logprob: -13.250041961669922
    10. '                           ' → logprob: -13.750041961669922

Token 2628: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -4.7159857786027715e-05
    2. '.distance' → logprob: -10.000046730041504
    3. ' distance' → logprob: -13.875046730041504
    4. '(distance' → logprob: -14.875046730041504
    5. 'point' → logprob: -15.125046730041504
    6. '.' → logprob: -16.75004768371582
    7. '
' → logprob: -18.00004768371582
    8. '_distance' → logprob: -18.25004768371582
    9. '```' → logprob: -18.50004768371582
    10. '   ' → logprob: -19.37504768371582

Token 2629: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.981667537620524e-06
    2. 'to' → logprob: -14.500001907348633
    3. '()' → logprob: -15.000001907348633
    4. 'To' → logprob: -15.125001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_at' → logprob: -15.875001907348633
    7. '_t' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '                              ' → logprob: -16.500001907348633
    10. '\' → logprob: -16.875001907348633

Token 2630: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017546684248372912
    2. 'self' → logprob: -6.3767547607421875
    3. '(' → logprob: -10.376754760742188
    4. '(
' → logprob: -11.251754760742188
    5. ' self' → logprob: -12.751754760742188
    6. '[self' → logprob: -13.001754760742188
    7. '	self' → logprob: -14.251754760742188
    8. '=self' → logprob: -14.751754760742188
    9. '```' → logprob: -14.876754760742188
    10. '$self' → logprob: -15.001754760742188

Token 2631: '.route' (ID: 24746)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4009881019592285
    2. '.route' → logprob: -1.1509881019592285
    3. 'route' → logprob: -4.2759881019592285
    4. ' self' → logprob: -9.65098762512207
    5. '_route' → logprob: -11.02598762512207
    6. 'Route' → logprob: -11.02598762512207
    7. '$route' → logprob: -12.15098762512207
    8. 'Point' → logprob: -12.77598762512207
    9. '[self' → logprob: -13.02598762512207
    10. '.self' → logprob: -13.27598762512207

Token 2632: '.point' (ID: 58020)
  Prédit: '.point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -0.15665200352668762
    2. '.route' → logprob: -2.1566519737243652
    3. '_point' → logprob: -3.9066519737243652
    4. '_at' → logprob: -5.156651973724365
    5. '_route' → logprob: -6.031651973724365
    6. 'At' → logprob: -7.656651973724365
    7. '_.' → logprob: -8.156652450561523
    8. '._' → logprob: -8.781652450561523
    9. 'point' → logprob: -10.906652450561523
    10. '.at' → logprob: -11.281652450561523

Token 2633: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9981420336989686e-05
    2. 'at' → logprob: -11.750020027160645
    3. 'At' → logprob: -11.875020027160645
    4. '._' → logprob: -12.750020027160645
    5. '```' → logprob: -15.625020027160645
    6. '   ' → logprob: -15.750020027160645
    7. 'self' → logprob: -15.750020027160645
    8. '.at' → logprob: -15.875020027160645
    9. '_point' → logprob: -16.125019073486328
    10. '_' → logprob: -16.125019073486328

Token 2634: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.005999424960464239
    2. 'self' → logprob: -5.380999565124512
    3. 'Distance' → logprob: -7.505999565124512
    4. '(self' → logprob: -7.630999565124512
    5. 'distance' → logprob: -8.005999565124512
    6. '_point' → logprob: -12.755999565124512
    7. '_DISTANCE' → logprob: -13.255999565124512
    8. '(' → logprob: -14.380999565124512
    9. 'dist' → logprob: -14.505999565124512
    10. '_dist' → logprob: -14.505999565124512

Token 2635: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017257531872019172
    2. '(' → logprob: -7.001725673675537
    3. 'self' → logprob: -7.251725673675537
    4. '(
' → logprob: -9.751726150512695
    5. '((' → logprob: -11.126726150512695
    6. ' (' → logprob: -11.251726150512695
    7. '(nd' → logprob: -11.876726150512695
    8. '(s' → logprob: -13.126726150512695
    9. ' self' → logprob: -13.251726150512695
    10. ')' → logprob: -13.501726150512695

Token 2636: '.L' (ID: 2024)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15310145914554596
    2. 'L' → logprob: -2.5281014442443848
    3. 'nd' → logprob: -3.5281014442443848
    4. '.L' → logprob: -4.028101444244385
    5. '(self' → logprob: -5.403101444244385
    6. '(L' → logprob: -5.778101444244385
    7. '(nd' → logprob: -6.028101444244385
    8. 'Ld' → logprob: -6.153101444244385
    9. '   ' → logprob: -7.778101444244385
    10. '.nd' → logprob: -7.778101444244385

Token 2637: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4741672873497009
    2. '-' → logprob: -0.9741672873497009
    3. ' ' → logprob: -10.349166870117188
    4. '-b' → logprob: -11.099166870117188
    5. '-d' → logprob: -11.974166870117188
    6. '-n' → logprob: -12.099166870117188
    7. '   ' → logprob: -12.224166870117188
    8. ')' → logprob: -12.224166870117188
    9. ' ' → logprob: -12.599166870117188
    10. '-l' → logprob: -12.849166870117188

Token 2638: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00024870390188880265
    2. ' nd' → logprob: -8.375248908996582
    3. '(nd' → logprob: -11.625248908996582
    4. '   ' → logprob: -11.875248908996582
    5. '
' → logprob: -14.375248908996582
    6. '  ' → logprob: -15.000248908996582
    7. '       ' → logprob: -15.250248908996582
    8. '_nd' → logprob: -15.375248908996582
    9. 'nds' → logprob: -16.000247955322266
    10. ' ' → logprob: -16.125247955322266

Token 2639: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0020822163205593824
    2. 'nd' → logprob: -6.377082347869873
    3. 'A' → logprob: -8.627081871032715
    4. ' nd' → logprob: -9.627081871032715
    5. '_B' → logprob: -9.752081871032715
    6. 'd' → logprob: -10.752081871032715
    7. '_nd' → logprob: -10.752081871032715
    8. '(nd' → logprob: -10.752081871032715
    9. '   ' → logprob: -12.877081871032715
    10. ')' → logprob: -13.502081871032715

Token 2640: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34932997822761536
    2. '))' → logprob: -1.224329948425293
    3. ')
' → logprob: -7.974329948425293
    4. '))
' → logprob: -8.474329948425293
    5. ')))' → logprob: -8.599329948425293
    6. '                              ' → logprob: -9.849329948425293
    7. '                           ' → logprob: -10.849329948425293
    8. '                          ' → logprob: -11.724329948425293
    9. ')+' → logprob: -11.724329948425293
    10. '                               ' → logprob: -11.849329948425293

Token 2641: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003559615579433739
    2. '                       ' → logprob: -8.12535572052002
    3. '
' → logprob: -10.12535572052002
    4. '               ' → logprob: -11.87535572052002
    5. 'if' → logprob: -12.37535572052002
    6. '                           ' → logprob: -12.50035572052002
    7. '				' → logprob: -14.25035572052002
    8. '                  ' → logprob: -14.37535572052002
    9. '                               ' → logprob: -14.50035572052002
    10. '                    
' → logprob: -14.62535572052002

Token 2642: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43922877311706543
    2. 'if' → logprob: -1.8142287731170654
    3. 'new' → logprob: -2.0642287731170654
    4. '                       ' → logprob: -3.0642287731170654
    5. ' if' → logprob: -4.8142290115356445
    6. ' new' → logprob: -4.9392290115356445
    7. 'next' (adapté à ' next') → logprob: -6.3142290115356445
    8. '                           ' → logprob: -7.3142290115356445
    9. 'cost' → logprob: -7.8142290115356445
    10. '   ' → logprob: -8.439229011535645

Token 2643: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0880500003695488
    2. '_state' → logprob: -3.21304988861084
    3. '_cost' → logprob: -3.21304988861084
    4. '_pos' → logprob: -6.46304988861084
    5. '_distance' → logprob: -6.96304988861084
    6. '_token' → logprob: -7.46304988861084
    7. '_' → logprob: -7.96304988861084
    8. '_d' → logprob: -9.08804988861084
    9. 'dist' → logprob: -9.08804988861084
    10. 'state' → logprob: -10.21304988861084

Token 2644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860450699925423
    2. '=' → logprob: -3.0486044883728027
    3. '           ' → logprob: -12.048604965209961
    4. '                       ' → logprob: -13.548604965209961
    5. '                   ' → logprob: -13.548604965209961
    6. '   ' → logprob: -13.798604965209961
    7. '               ' → logprob: -13.798604965209961
    8. '        ' → logprob: -13.923604965209961
    9. ')' → logprob: -13.923604965209961
    10. '    ' → logprob: -14.423604965209961

Token 2645: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -6.2729995988775045e-06
    2. ' cur' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.3750057220459
    4. '	cur' → logprob: -21.0000057220459
    5. 'curr' → logprob: -22.0000057220459
    6. '                   ' → logprob: -23.0000057220459
    7. '           ' → logprob: -23.0000057220459
    8. '               ' → logprob: -23.2500057220459
    9. '                       ' → logprob: -23.3750057220459
    10. '(cur' → logprob: -23.5000057220459

Token 2646: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -5.5577775128767826e-06
    2. '_cost' → logprob: -12.625005722045898
    3. '_' → logprob: -14.000005722045898
    4. 'Dist' → logprob: -14.750005722045898
    5. 'dist' → logprob: -15.250005722045898
    6. ' _' → logprob: -15.500005722045898
    7. '_val' → logprob: -15.625005722045898
    8. '_distance' → logprob: -16.1250057220459
    9. '_DIST' → logprob: -17.2500057220459
    10. '	dist' → logprob: -17.5000057220459

Token 2647: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931570768356323
    2. ' +' → logprob: -0.6931570768356323
    3. '+c' → logprob: -12.818157196044922
    4. '+self' → logprob: -13.068157196044922
    5. '＋' → logprob: -14.318157196044922
    6. ' ' → logprob: -14.568157196044922
    7. '                               ' → logprob: -14.818157196044922
    8. '                              ' → logprob: -14.818157196044922
    9. '+
' → logprob: -14.943157196044922
    10. '                       ' → logprob: -14.943157196044922

Token 2648: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00015860427811276168
    2. ' cost' → logprob: -8.750158309936523
    3. '(cost' → logprob: -16.625158309936523
    4. '```' → logprob: -24.000158309936523
    5. 'color' → logprob: -24.125158309936523
    6. '.cost' → logprob: -24.125158309936523
    7. '_cost' → logprob: -24.375158309936523
    8. '   ' → logprob: -24.500158309936523
    9. 'code' → logprob: -24.500158309936523
    10. '
' → logprob: -24.875158309936523

Token 2649: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02490372024476528
    2. '                       ' → logprob: -3.7749037742614746
    3. '                           ' → logprob: -7.399903774261475
    4. '               ' → logprob: -8.399903297424316
    5. ')' → logprob: -8.524903297424316
    6. '           ' → logprob: -8.899903297424316
    7. '
' → logprob: -9.024903297424316
    8. ',' → logprob: -9.274903297424316
    9. 'if' → logprob: -10.024903297424316
    10. ' if' → logprob: -10.024903297424316

Token 2650: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00043686782009899616
    2. '                       ' → logprob: -7.750436782836914
    3. '               ' → logprob: -12.500436782836914
    4. '           ' → logprob: -13.625436782836914
    5. '                           ' → logprob: -14.625436782836914
    6. '       ' → logprob: -15.250436782836914
    7. '                  ' → logprob: -15.500436782836914
    8. '```' → logprob: -16.625436782836914
    9. '                    ' → logprob: -17.000436782836914
    10. '				' → logprob: -17.000436782836914

Token 2651: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5746558904647827
    2. '                   ' → logprob: -1.3246558904647827
    3. 'if' (adapté à ' if') → logprob: -1.8246558904647827
    4. 'key' → logprob: -4.824656009674072
    5. ' if' → logprob: -6.574656009674072
    6. ' key' → logprob: -8.199655532836914
    7. '               ' → logprob: -9.199655532836914
    8. '   ' → logprob: -10.199655532836914
    9. '           ' → logprob: -10.324655532836914
    10. 'state' → logprob: -10.449655532836914

Token 2652: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.30656373500823975
    2. ' (' → logprob: -1.8065637350082397
    3. '(dist' → logprob: -2.3065638542175293
    4. '                       ' → logprob: -10.306563377380371
    5. 'next' → logprob: -10.431563377380371
    6. '(key' → logprob: -10.681563377380371
    7. '(n' → logprob: -10.806563377380371
    8. '(' → logprob: -10.806563377380371
    9. 'dist' → logprob: -10.931563377380371
    10. '((' → logprob: -11.306563377380371

Token 2653: 'nd' (ID: 301)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.31554657220840454
    2. 'nd' → logprob: -1.3155465126037598
    3. ' (' → logprob: -6.31554651260376
    4. '(' → logprob: -8.440546989440918
    5. ' nd' → logprob: -9.190546989440918
    6. '   ' → logprob: -10.065546989440918
    7. '(next' → logprob: -10.315546989440918
    8. '(n' → logprob: -11.065546989440918
    9. '  ' → logprob: -11.190546989440918
    10. 'next' → logprob: -11.690546989440918

Token 2654: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.512236498361744e-07
    2. '(A' → logprob: -16.0
    3. '_A' → logprob: -16.5
    4. ' A' → logprob: -16.75
    5. '(' → logprob: -16.75
    6. 'a' → logprob: -17.25
    7. '(nd' → logprob: -17.625
    8. '   ' → logprob: -17.875
    9. ',' → logprob: -17.875
    10. 'А' → logprob: -18.25

Token 2655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7133641196996905e-05
    2. ',n' → logprob: -11.50002670288086
    3. ',
' → logprob: -12.00002670288086
    4. ' ,' → logprob: -12.50002670288086
    5. ',d' → logprob: -12.50002670288086
    6. ',next' → logprob: -13.25002670288086
    7. '<|end|>' → logprob: -14.50002670288086
    8. '‌,' → logprob: -15.62502670288086
    9. ',node' → logprob: -15.87502670288086
    10. ',user' → logprob: -16.12502670288086

Token 2656: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0003384422743692994
    2. ' nd' → logprob: -8.000338554382324
    3. '(nd' → logprob: -14.000338554382324
    4. '   ' → logprob: -14.625338554382324
    5. 'ndl' → logprob: -14.875338554382324
    6. '  ' → logprob: -15.625338554382324
    7. '       ' → logprob: -15.625338554382324
    8. '_nd' → logprob: -15.750338554382324
    9. '    ' → logprob: -15.875338554382324
    10. '           ' → logprob: -16.250337600708008

Token 2657: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.166338137816638e-05
    2. ',' → logprob: -11.125031471252441
    3. 'A' → logprob: -11.125031471252441
    4. '_B' → logprob: -14.500031471252441
    5. 'b' → logprob: -15.000031471252441
    6. ')' → logprob: -15.375031471252441
    7. ',_' → logprob: -16.000032424926758
    8. '   ' → logprob: -16.375032424926758
    9. '           ' → logprob: -16.500032424926758
    10. '
' → logprob: -16.625032424926758

Token 2658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2547133266925812
    2. ' not' → logprob: -1.5047132968902588
    3. 'not' → logprob: -6.629713535308838
    4. ' in' → logprob: -7.379713535308838
    5. ']' → logprob: -7.754713535308838
    6. 'in' → logprob: -8.87971305847168
    7. ',' → logprob: -9.00471305847168
    8. '<|end|>' → logprob: -10.12971305847168
    9. ' )' → logprob: -10.50471305847168
    10. '	not' → logprob: -10.62971305847168

Token 2659: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02632700465619564
    2. 'not' → logprob: -3.651326894760132
    3. 'in' → logprob: -11.901327133178711
    4. '	not' → logprob: -11.901327133178711
    5. ')' → logprob: -12.026327133178711
    6. ' in' → logprob: -12.151327133178711
    7. ' ' → logprob: -14.401327133178711
    8. ']' → logprob: -14.776327133178711
    9. '   ' → logprob: -15.401327133178711
    10. '<|end|>' → logprob: -15.901327133178711

Token 2660: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.281840980052948
    2. ' in' → logprob: -1.4068410396575928
    3. 'dist' → logprob: -7.781840801239014
    4. ' not' → logprob: -9.156841278076172
    5. '_dist' → logprob: -9.531841278076172
    6. '_in' → logprob: -10.406841278076172
    7. '<|end|>' → logprob: -11.156841278076172
    8. 'not' → logprob: -11.531841278076172
    9. '                       ' → logprob: -11.656841278076172
    10. ')' → logprob: -12.281841278076172

Token 2661: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.320199877838604e-07
    2. ' dist' → logprob: -15.0
    3. '	dist' → logprob: -22.375
    4. '_dist' → logprob: -22.875
    5. '(dist' → logprob: -24.0
    6. '.dist' → logprob: -24.5
    7. 'Dist' → logprob: -25.25
    8. '```' → logprob: -25.25
    9. 'dest' → logprob: -25.75
    10. 'dict' → logprob: -25.75

Token 2662: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.896309739408025e-07
    2. '_maps' → logprob: -15.750000953674316
    3. '_set' → logprob: -15.875000953674316
    4. '_' → logprob: -16.0
    5. '_MAP' → logprob: -16.25
    6. ')' → logprob: -17.0
    7. 'map' → logprob: -17.25
    8. '   ' → logprob: -17.75
    9. '_Map' → logprob: -18.0
    10. '_m' → logprob: -18.25

Token 2663: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0050240675918757915
    2. 'or' → logprob: -5.380023956298828
    3. '                           ' → logprob: -8.130023956298828
    4. ':' → logprob: -10.255023956298828
    5. '	or' → logprob: -10.505023956298828
    6. '                               ' → logprob: -11.505023956298828
    7. '                       ' → logprob: -11.630023956298828
    8. ':
' → logprob: -12.005023956298828
    9. '<|end|>' → logprob: -12.130023956298828
    10. '=' → logprob: -12.880023956298828

Token 2664: ' dist' (ID: 3601)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.24144373834133148
    2. 'dist' → logprob: -1.7414437532424927
    3. ' next' → logprob: -3.366443634033203
    4. ' dist' → logprob: -5.366443634033203
    5. '                           ' → logprob: -10.491443634033203
    6. '                               ' → logprob: -11.616443634033203
    7. '(next' → logprob: -12.616443634033203
    8. '                                   ' → logprob: -12.866443634033203
    9. '                       ' → logprob: -12.991443634033203
    10. '	next' → logprob: -13.116443634033203

Token 2665: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.778209353797138e-05
    2. 'ance' → logprob: -10.000067710876465
    3. '_dist' → logprob: -11.500067710876465
    4. 'Map' → logprob: -12.625067710876465
    5. '[next' → logprob: -12.875067710876465
    6. '(next' → logprob: -13.000067710876465
    7. 'map' → logprob: -14.000067710876465
    8. '_MAP' → logprob: -14.125067710876465
    9. '_maps' → logprob: -14.500067710876465
    10. '_Map' → logprob: -14.500067710876465

Token 2666: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.07899796962738037
    2. '[' → logprob: -2.57899808883667
    3. '.get' → logprob: -9.328997611999512
    4. '(nd' → logprob: -11.203997611999512
    5. '[n' → logprob: -13.328997611999512
    6. '[next' → logprob: -14.078997611999512
    7. ' (' → logprob: -14.453997611999512
    8. '[
' → logprob: -14.453997611999512
    9. '(' → logprob: -14.703997611999512
    10. '```' → logprob: -14.828997611999512

Token 2667: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -2.1008713702030946e-06
    2. '(nd' → logprob: -13.125001907348633
    3. ' nd' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '_nd' → logprob: -18.625001907348633
    6. '           ' → logprob: -19.625001907348633
    7. '
' → logprob: -19.875001907348633
    8. 'n' → logprob: -20.250001907348633
    9. '                   ' → logprob: -20.375001907348633
    10. '                           ' → logprob: -20.625001907348633

Token 2668: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. 'А' → logprob: -19.75
    3. '(nd' → logprob: -20.0
    4. '_A' → logprob: -20.5
    5. 'a' → logprob: -20.625
    6. '(' → logprob: -21.0
    7. '(A' → logprob: -21.125
    8. ' A' → logprob: -21.125
    9. 'nd' → logprob: -21.75
    10. '
' → logprob: -21.875

Token 2669: ',' (ID: 11)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.4944308400154114
    2. ',' → logprob: -1.1194307804107666
    3. '[(' → logprob: -3.1194307804107666
    4. '(n' → logprob: -4.994431018829346
    5. ',(' → logprob: -5.119431018829346
    6. ' (' → logprob: -6.244431018829346
    7. '(' → logprob: -6.369431018829346
    8. '[' → logprob: -6.494431018829346
    9. '
' → logprob: -7.869431018829346
    10. ',n' → logprob: -8.119430541992188

Token 2670: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.000529202981851995
    2. '(nd' → logprob: -8.125529289245605
    3. ' nd' → logprob: -8.375529289245605
    4. '   ' → logprob: -14.375529289245605
    5. '(' → logprob: -14.625529289245605
    6. '_nd' → logprob: -14.750529289245605
    7. '
' → logprob: -15.375529289245605
    8. 'ng' → logprob: -15.875529289245605
    9. '  ' → logprob: -16.25052833557129
    10. 'nds' → logprob: -16.25052833557129

Token 2671: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0430278517305851
    2. 'A' → logprob: -3.168027877807617
    3. '(' → logprob: -11.668027877807617
    4. '_dist' → logprob: -11.793027877807617
    5. 'C' → logprob: -12.543027877807617
    6. 'D' → logprob: -13.043027877807617
    7. '_' → logprob: -13.668027877807617
    8. '_map' → logprob: -14.043027877807617
    9. 'b' → logprob: -14.168027877807617
    10. 'dist' → logprob: -14.418027877807617

Token 2672: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030344607308506966
    2. ']>' → logprob: -3.7803447246551514
    3. '>' → logprob: -5.280344486236572
    4. ')' → logprob: -6.405344486236572
    5. ')>' → logprob: -8.53034496307373
    6. '[' → logprob: -10.15534496307373
    7. '>]' → logprob: -10.53034496307373
    8. ' >' → logprob: -10.78034496307373
    9. '])' → logprob: -10.78034496307373
    10. ' ]' → logprob: -12.03034496307373

Token 2673: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06202370300889015
    2. ' >' → logprob: -2.812023639678955
    3. '[' → logprob: -11.062024116516113
    4. '```' → logprob: -11.937024116516113
    5. '>[' → logprob: -12.062024116516113
    6. '>
' → logprob: -12.687024116516113
    7. ' ' → logprob: -12.937024116516113
    8. '>null' → logprob: -13.062024116516113
    9. '   ' → logprob: -13.312024116516113
    10. '>`' → logprob: -13.437024116516113

Token 2674: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.693165123462677
    2. 'next' → logprob: -0.693165123462677
    3. '(next' → logprob: -11.068164825439453
    4. '[next' → logprob: -13.693164825439453
    5. '_next' → logprob: -15.193164825439453
    6. '	next' → logprob: -15.193164825439453
    7. '.next' → logprob: -16.193164825439453
    8. '                               ' → logprob: -16.193164825439453
    9. '                                   ' → logprob: -16.443164825439453
    10. '                           ' → logprob: -16.818164825439453

Token 2675: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.7432603272027336e-06
    2. 'Dist' → logprob: -14.000001907348633
    3. 'dist' → logprob: -14.750001907348633
    4. '_cost' → logprob: -15.750001907348633
    5. '_DIST' → logprob: -16.500001907348633
    6. '	dist' → logprob: -17.125001907348633
    7. '_diff' → logprob: -18.125001907348633
    8. '_dis' → logprob: -18.375001907348633
    9. '-dist' → logprob: -18.500001907348633
    10. ' Dist' → logprob: -18.625001907348633

Token 2676: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7266347408294678
    2. ':' → logprob: -0.8516347408294678
    3. '                           ' → logprob: -2.6016347408294678
    4. '                       ' → logprob: -5.351634979248047
    5. '):
' → logprob: -5.851634979248047
    6. '                               ' → logprob: -5.976634979248047
    7. '=' → logprob: -6.476634979248047
    8. ' =' → logprob: -6.851634979248047
    9. '():
' → logprob: -7.351634979248047
    10. '[' → logprob: -7.851634979248047

Token 2677: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.375022888183594
    4. '           ' → logprob: -18.000022888183594
    5. '  ' → logprob: -18.125022888183594
    6. '       ' → logprob: -18.250022888183594
    7. '                   ' → logprob: -18.625022888183594
    8. '     ' → logprob: -18.750022888183594
    9. '               ' → logprob: -19.250022888183594
    10. '         ' → logprob: -19.875022888183594

Token 2678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.125003814697266
    3. '   ' → logprob: -13.375003814697266
    4. '           ' → logprob: -18.375003814697266
    5. '  ' → logprob: -18.625003814697266
    6. '-' → logprob: -19.125003814697266
    7. '       ' → logprob: -19.125003814697266
    8. '     ' → logprob: -19.625003814697266
    9. '         ' → logprob: -20.000003814697266
    10. '+' → logprob: -20.000003814697266

Token 2679: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.125
    3. '-e' → logprob: -16.875
    4. '           ' → logprob: -17.5
    5. '.e' → logprob: -18.0
    6. '.' → logprob: -18.0
    7. '```' → logprob: -18.75
    8. 'E' → logprob: -18.875
    9. '1' → logprob: -19.0
    10. '       ' → logprob: -19.5

Token 2680: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -18.625
    3. ' -' → logprob: -20.25
    4. '-
' → logprob: -20.25
    5. 'e' → logprob: -20.375
    6. '"-' → logprob: -20.875
    7. '{-' → logprob: -21.125
    8. '-e' → logprob: -21.25
    9. '^-' → logprob: -21.375
    10. '   ' → logprob: -21.625

Token 2681: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.766538143157959
    2. '12' → logprob: -1.516538143157959
    3. '15' → logprob: -1.641538143157959
    4. '-' → logprob: -2.141538143157959
    5. '8' → logprob: -6.141538143157959
    6. '10' → logprob: -6.391538143157959
    7. '14' → logprob: -7.766538143157959
    8. '13' → logprob: -8.266538619995117
    9. '7' → logprob: -9.016538619995117
    10. '6' → logprob: -9.766538619995117

Token 2682: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7499555349349976
    2. ':
' → logprob: -0.7499555349349976
    3. '                           ' → logprob: -3.249955654144287
    4. '                       ' → logprob: -4.749955654144287
    5. '):
' → logprob: -5.374955654144287
    6. '=' → logprob: -7.499955654144287
    7. '                               ' → logprob: -7.499955654144287
    8. '():
' → logprob: -7.874955654144287
    9. '                   ' → logprob: -8.249955177307129
    10. '           ' → logprob: -8.374955177307129

Token 2683: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08472370356321335
    2. '                               ' → logprob: -2.709723711013794
    3. '                       ' → logprob: -4.459723472595215
    4. '                                   ' → logprob: -6.334723472595215
    5. '                   ' → logprob: -7.834723472595215
    6. '           ' → logprob: -7.959723472595215
    7. '               ' → logprob: -8.334723472595215
    8. '                                       ' → logprob: -9.459723472595215
    9. '```' → logprob: -9.834723472595215
    10. '                                           ' → logprob: -10.084723472595215

Token 2684: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008879040367901325
    2. '                               ' → logprob: -5.5088791847229
    3. ' dist' → logprob: -5.5088791847229
    4. '                           ' → logprob: -7.2588791847229
    5. '                                   ' → logprob: -11.633878707885742
    6. '           ' → logprob: -11.883878707885742
    7. '                       ' → logprob: -12.133878707885742
    8. '               ' → logprob: -12.383878707885742
    9. '```' → logprob: -12.883878707885742
    10. '                   ' → logprob: -13.258878707885742

Token 2685: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.4894986785948277e-05
    2. '                           ' → logprob: -11.250044822692871
    3. '_maps' → logprob: -11.500044822692871
    4. '_MAP' → logprob: -12.125044822692871
    5. 'Map' → logprob: -13.000044822692871
    6. 't' → logprob: -13.125044822692871
    7. '[(' → logprob: -13.125044822692871
    8. '_mapping' → logprob: -13.250044822692871
    9. '_Map' → logprob: -13.500044822692871
    10. '[_' → logprob: -14.125044822692871

Token 2686: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9266199160483666e-05
    2. '[' → logprob: -11.000019073486328
    3. '                           ' → logprob: -14.375019073486328
    4. '
' → logprob: -14.750019073486328
    5. '```' → logprob: -15.250019073486328
    6. '(nd' → logprob: -15.375019073486328
    7. '[
' → logprob: -15.750019073486328
    8. '[n' → logprob: -16.000019073486328
    9. '                   ' → logprob: -16.000019073486328
    10. '                       ' → logprob: -16.000019073486328

Token 2687: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0004348413785919547
    2. '(nd' → logprob: -7.750434875488281
    3. ' nd' → logprob: -13.000434875488281
    4. '(' → logprob: -13.375434875488281
    5. '   ' → logprob: -15.000434875488281
    6. '_nd' → logprob: -17.00043487548828
    7. ' (' → logprob: -17.12543487548828
    8. '       ' → logprob: -17.62543487548828
    9. '           ' → logprob: -18.00043487548828
    10. '  ' → logprob: -18.12543487548828

Token 2688: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. '(nd' → logprob: -16.0
    3. 'А' → logprob: -16.75
    4. '(' → logprob: -18.625
    5. 'nd' → logprob: -18.875
    6. '_A' → logprob: -18.875
    7. 'Α' → logprob: -19.375
    8. 'a' → logprob: -19.5
    9. ' nd' → logprob: -19.625
    10. ' A' → logprob: -19.625

Token 2689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018125097267329693
    2. ',(' → logprob: -7.37681245803833
    3. ' ,' → logprob: -7.62681245803833
    4. '[' → logprob: -8.376812934875488
    5. '                           ' → logprob: -8.501812934875488
    6. ',n' → logprob: -9.251812934875488
    7. ',d' → logprob: -10.626812934875488
    8. '[(' → logprob: -11.001812934875488
    9. ',
' → logprob: -11.251812934875488
    10. '(' → logprob: -11.251812934875488

Token 2690: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.14388681948184967
    2. '(nd' → logprob: -2.1438868045806885
    3. ' nd' → logprob: -4.268887042999268
    4. ' (' → logprob: -6.018887042999268
    5. '(' → logprob: -8.51888656616211
    6. '(n' → logprob: -9.26888656616211
    7. '   ' → logprob: -10.26888656616211
    8. '  ' → logprob: -11.76888656616211
    9. '    ' → logprob: -12.01888656616211
    10. '       ' → logprob: -12.01888656616211

Token 2691: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024008627515286207
    2. '_map' → logprob: -6.752400875091553
    3. '_dist' → logprob: -7.377400875091553
    4. 'B' → logprob: -7.502400875091553
    5. '(' → logprob: -10.877400398254395
    6. ')' → logprob: -11.877400398254395
    7. '   ' → logprob: -12.127400398254395
    8. '_' → logprob: -12.127400398254395
    9. '(_' → logprob: -13.127400398254395
    10. '((' → logprob: -13.127400398254395

Token 2692: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05917538329958916
    2. ')]' → logprob: -2.934175491333008
    3. ')' → logprob: -5.559175491333008
    4. ']=' → logprob: -8.309175491333008
    5. '])' → logprob: -9.059175491333008
    6. ' ]' → logprob: -10.184175491333008
    7. '                           ' → logprob: -11.059175491333008
    8. ' )' → logprob: -12.684175491333008
    9. '[' → logprob: -13.434175491333008
    10. ')=' → logprob: -13.684175491333008

Token 2693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519338130950928
    2. ' =' → logprob: -1.5019338130950928
    3. '                           ' → logprob: -13.876934051513672
    4. ']=' → logprob: -14.001934051513672
    5. '=
' → logprob: -14.501934051513672
    6. '<|end|>' → logprob: -14.876934051513672
    7. '   ' → logprob: -15.376934051513672
    8. '	' → logprob: -15.751934051513672
    9. '                               ' → logprob: -15.876934051513672
    10. '                            ' → logprob: -15.876934051513672

Token 2694: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1269282102584839
    2. ' next' → logprob: -2.1269283294677734
    3. '(next' → logprob: -15.876928329467773
    4. '	next' → logprob: -16.751928329467773
    5. '[next' → logprob: -18.376928329467773
    6. '                           ' → logprob: -18.751928329467773
    7. '_next' → logprob: -18.876928329467773
    8. '                               ' → logprob: -19.001928329467773
    9. '.next' → logprob: -20.001928329467773
    10. 'Next' → logprob: -20.001928329467773

Token 2695: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -9.849109119386412e-06
    2. 'dist' → logprob: -11.625009536743164
    3. 'Dist' → logprob: -15.250009536743164
    4. '_cost' → logprob: -15.375009536743164
    5. '
' → logprob: -16.000009536743164
    6. '```' → logprob: -16.500009536743164
    7. '_token' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.625009536743164
    9. '_' → logprob: -17.750009536743164
    10. '       ' → logprob: -17.875009536743164

Token 2696: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -9.491498531133402e-06
    2. '                       ' → logprob: -12.250009536743164
    3. '           ' → logprob: -13.375009536743164
    4. '                   ' → logprob: -14.250009536743164
    5. '                               ' → logprob: -14.500009536743164
    6. '						' → logprob: -14.625009536743164
    7. '               ' → logprob: -14.625009536743164
    8. '                          ' → logprob: -15.000009536743164
    9. '```' → logprob: -15.250009536743164
    10. 'import' → logprob: -15.500009536743164

Token 2697: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0035346136428415775
    2. '```' → logprob: -5.87853479385376
    3. '                               ' → logprob: -7.50353479385376
    4. '                       ' → logprob: -9.253534317016602
    5. '                                   ' → logprob: -11.128534317016602
    6. '``' → logprob: -11.253534317016602
    7. '           ' → logprob: -11.378534317016602
    8. 'heap' → logprob: -11.628534317016602
    9. '						' → logprob: -11.878534317016602
    10. '                   ' → logprob: -11.878534317016602

Token 2698: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.5803003907203674
    2. '                           ' → logprob: -0.8303003907203674
    3. ' heap' → logprob: -5.830300331115723
    4. '           ' → logprob: -7.205300331115723
    5. '               ' → logprob: -8.330300331115723
    6. '                               ' → logprob: -8.705300331115723
    7. '                   ' → logprob: -9.330300331115723
    8. '                       ' → logprob: -9.580300331115723
    9. '   ' → logprob: -10.205300331115723
    10. '```' → logprob: -11.455300331115723

Token 2699: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00010843054042197764
    2. '.he' → logprob: -9.37510871887207
    3. '```' → logprob: -12.00010871887207
    4. '.append' → logprob: -12.87510871887207
    5. 'push' → logprob: -13.12510871887207
    6. '.push' → logprob: -13.12510871887207
    7. '                           ' → logprob: -13.50010871887207
    8. 'ify' → logprob: -13.62510871887207
    9. '                               ' → logprob: -13.75010871887207
    10. '.' → logprob: -13.75010871887207

Token 2700: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0008765661623328924
    2. 'he' → logprob: -7.250876426696777
    3. 'q' → logprob: -8.875876426696777
    4. '.heap' → logprob: -11.500876426696777
    5. '.' → logprob: -12.125876426696777
    6. '.push' → logprob: -12.875876426696777
    7. '```' → logprob: -13.000876426696777
    8. 'push' → logprob: -13.000876426696777
    9. ' he' → logprob: -13.375876426696777
    10. '_he' → logprob: -14.125876426696777

Token 2701: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.749814019713085e-06
    2. 'ap' → logprob: -12.125006675720215
    3. 'pp' → logprob: -13.875006675720215
    4. 'push' → logprob: -15.500006675720215
    5. '```' → logprob: -17.12500762939453
    6. '[' → logprob: -17.25000762939453
    7. '_app' → logprob: -17.75000762939453
    8. 'appen' → logprob: -18.00000762939453
    9. 'a' → logprob: -18.25000762939453
    10. 'ап' → logprob: -18.87500762939453

Token 2702: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.20149745047092438
    2. 'op' → logprob: -1.7014974355697632
    3. 'sh' → logprob: -9.951497077941895
    4. 'push' → logprob: -11.201497077941895
    5. '```' → logprob: -11.451497077941895
    6. '.push' → logprob: -12.826497077941895
    7. '           ' → logprob: -13.326497077941895
    8. 'pop' → logprob: -14.076497077941895
    9. '                       ' → logprob: -14.201497077941895
    10. '               ' → logprob: -14.326497077941895

Token 2703: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -10.000054359436035
    3. '```' → logprob: -12.375054359436035
    4. '(h' → logprob: -13.000054359436035
    5. '                           ' → logprob: -13.250054359436035
    6. 'heap' → logprob: -14.125054359436035
    7. ' (' → logprob: -16.00005531311035
    8. '                               ' → logprob: -16.87505531311035
    9. '((' → logprob: -17.12505531311035
    10. '(
' → logprob: -17.50005531311035

Token 2704: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.0325924449716695e-05
    2. '(h' → logprob: -12.00001049041748
    3. '```' → logprob: -13.62501049041748
    4. '(' → logprob: -14.00001049041748
    5. '                           ' → logprob: -14.25001049041748
    6. 'heap' → logprob: -14.37501049041748
    7. ' (' → logprob: -15.50001049041748
    8. '                               ' → logprob: -15.75001049041748
    9. '((' → logprob: -16.125009536743164
    10. '               ' → logprob: -16.875009536743164

Token 2705: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028346477076411247
    2. ' (' → logprob: -4.028346538543701
    3. '(next' → logprob: -4.653346538543701
    4. '                              ' → logprob: -8.653346061706543
    5. '                           ' → logprob: -8.778346061706543
    6. '                               ' → logprob: -9.028346061706543
    7. '                          ' → logprob: -9.778346061706543
    8. '(cost' → logprob: -10.528346061706543
    9. '   ' → logprob: -11.278346061706543
    10. '(n' → logprob: -11.403346061706543

Token 2706: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.003978665918111801
    2. '(next' → logprob: -6.003978729248047
    3. ' next' → logprob: -6.503978729248047
    4. '[next' → logprob: -12.753978729248047
    5. '	next' → logprob: -14.378978729248047
    6. '                           ' → logprob: -14.878978729248047
    7. '                               ' → logprob: -15.878978729248047
    8. '                                   ' → logprob: -16.003978729248047
    9. '_next' → logprob: -16.128978729248047
    10. 'Next' → logprob: -16.628978729248047

Token 2707: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.4259644558478612e-05
    2. 'Dist' → logprob: -11.875014305114746
    3. 'dist' → logprob: -12.000014305114746
    4. '(_' → logprob: -14.750014305114746
    5. '(' → logprob: -15.125014305114746
    6. '(dist' → logprob: -15.875014305114746
    7. '_cost' → logprob: -16.62501335144043
    8. '_DIST' → logprob: -17.12501335144043
    9. '_diff' → logprob: -17.37501335144043
    10. '[' → logprob: -17.37501335144043

Token 2708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005300374468788505
    2. ' ,' → logprob: -7.750530242919922
    3. '                               ' → logprob: -10.375530242919922
    4. '                           ' → logprob: -10.625530242919922
    5. ',(' → logprob: -11.625530242919922
    6. '<|end|>' → logprob: -11.750530242919922
    7. ',
' → logprob: -12.000530242919922
    8. '               ' → logprob: -12.625530242919922
    9. '```' → logprob: -13.000530242919922
    10. '),' → logprob: -13.000530242919922

Token 2709: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47537487745285034
    2. '(nd' → logprob: -0.9753748774528503
    3. '(' → logprob: -6.975374698638916
    4. '                           ' → logprob: -8.850375175476074
    5. '(n' → logprob: -9.100375175476074
    6. '                               ' → logprob: -10.850375175476074
    7. '(nn' → logprob: -11.100375175476074
    8. '                            ' → logprob: -11.350375175476074
    9. '   ' → logprob: -11.725375175476074
    10. '                          ' → logprob: -11.850375175476074

Token 2710: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.1637164789135568e-05
    2. '(nd' → logprob: -12.000011444091797
    3. ' nd' → logprob: -12.250011444091797
    4. '                           ' → logprob: -15.250011444091797
    5. '                               ' → logprob: -15.625011444091797
    6. '_nd' → logprob: -15.875011444091797
    7. '                                   ' → logprob: -16.875011444091797
    8. '```' → logprob: -17.500011444091797
    9. '
' → logprob: -17.625011444091797
    10. 'ndl' → logprob: -17.875011444091797

Token 2711: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.512236498361744e-07
    2. 'nd' → logprob: -16.0
    3. '
' → logprob: -16.375
    4. ')' → logprob: -16.375
    5. '(nd' → logprob: -16.75
    6. 'B' → logprob: -16.875
    7. 'А' → logprob: -17.0
    8. ' A' → logprob: -17.125
    9. '```' → logprob: -17.625
    10. 'a' → logprob: -17.625

Token 2712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030197695014066994
    2. ' ,' → logprob: -8.8753023147583
    3. '+' → logprob: -9.7503023147583
    4. ',
' → logprob: -10.2503023147583
    5. ' +' → logprob: -11.1253023147583
    6. '_,' → logprob: -11.3753023147583
    7. '+,' → logprob: -11.3753023147583
    8. '),' → logprob: -11.6253023147583
    9. '<|end|>' → logprob: -11.8753023147583
    10. ',n' → logprob: -12.6253023147583

Token 2713: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00012451570364646614
    2. ' nd' → logprob: -9.00012493133545
    3. '   ' → logprob: -15.50012493133545
    4. '(nd' → logprob: -16.250123977661133
    5. '                           ' → logprob: -16.375123977661133
    6. '           ' → logprob: -16.500123977661133
    7. '       ' → logprob: -16.625123977661133
    8. '                               ' → logprob: -16.750123977661133
    9. '               ' → logprob: -16.875123977661133
    10. '                   ' → logprob: -16.875123977661133

Token 2714: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1160349458805285e-05
    2. 'A' → logprob: -12.125011444091797
    3. ',' → logprob: -13.000011444091797
    4. ')' → logprob: -13.750011444091797
    5. '   ' → logprob: -15.000011444091797
    6. ' B' → logprob: -15.125011444091797
    7. '_' → logprob: -15.250011444091797
    8. '_B' → logprob: -15.750011444091797
    9. '))
' → logprob: -16.000011444091797
    10. '               ' → logprob: -16.000011444091797

Token 2715: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00024275471514556557
    2. ')))
' → logprob: -8.625243186950684
    3. ')' → logprob: -10.250243186950684
    4. '))' → logprob: -11.000243186950684
    5. '                           ' → logprob: -12.375243186950684
    6. '))))' → logprob: -13.000243186950684
    7. '                   ' → logprob: -13.875243186950684
    8. '                               ' → logprob: -14.000243186950684
    9. '                       ' → logprob: -14.125243186950684
    10. '               ' → logprob: -14.375243186950684

Token 2716: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2717: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25592517852783203
    2. '       ' → logprob: -1.505925178527832
    3. '```' → logprob: -6.255925178527832
    4. 'raise' → logprob: -7.005925178527832
    5. 'None' → logprob: -7.755925178527832
    6. '
' → logprob: -7.880925178527832
    7. ' return' → logprob: -8.755925178527832
    8. '   ' → logprob: -9.630925178527832
    9. '        
' → logprob: -10.130925178527832
    10. '{return' → logprob: -10.255925178527832

Token 2718: ' theoretically' (ID: 139661)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007055149879306555
    2. '       ' → logprob: -5.007055282592773
    3. 'raise' → logprob: -8.007055282592773
    4. ' return' → logprob: -12.507055282592773
    5. '#' → logprob: -13.382055282592773
    6. '```' → logprob: -14.382055282592773
    7. '   ' → logprob: -14.632055282592773
    8. '	return' → logprob: -16.007055282592773
    9. 'Return' → logprob: -16.132055282592773
    10. 'float' → logprob: -16.257055282592773

Token 2719: ' unreachable' (ID: 171303)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.061677441000938416
    2. '       ' → logprob: -3.0616774559020996
    3. ' return' → logprob: -4.4366774559021
    4. '#' → logprob: -6.8116774559021
    5. '   ' → logprob: -10.686676979064941
    6. 'float' → logprob: -11.186676979064941
    7. 'raise' → logprob: -11.436676979064941
    8. ' #' → logprob: -12.311676979064941
    9. '           ' → logprob: -12.686676979064941
    10. '{return' → logprob: -12.936676979064941

Token 2720: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005454074125736952
    2. '
' → logprob: -5.380454063415527
    3. 'return' → logprob: -7.505454063415527
    4. '        
' → logprob: -8.880454063415527
    5. '```' → logprob: -9.755454063415527
    6. ' return' → logprob: -10.130454063415527
    7. '<|end|>' → logprob: -11.005454063415527
    8. '   ' → logprob: -11.755454063415527
    9. ',' → logprob: -11.880454063415527
    10. 'None' → logprob: -12.255454063415527

Token 2721: ' input' (ID: 3422)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1235383749008179
    2. 'no' → logprob: -1.2485383749008179
    3. 'False' → logprob: -1.3735383749008179
    4. 'return' → logprob: -3.2485384941101074
    5. ' no' → logprob: -3.7485384941101074
    6. '       ' → logprob: -3.8735384941101074
    7. 'not' → logprob: -4.623538494110107
    8. ' True' → logprob: -4.873538494110107
    9. 'possible' → logprob: -4.873538494110107
    10. '   ' → logprob: -4.998538494110107

Token 2722: ' guaranteed' (ID: 21862)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0404537096619606
    2. 'return' → logprob: -4.290453910827637
    3. '
' → logprob: -4.915453910827637
    4. ':' → logprob: -4.915453910827637
    5. ':
' → logprob: -5.290453910827637
    6. ':return' → logprob: -5.915453910827637
    7. '```' → logprob: -6.165453910827637
    8. ' return' → logprob: -7.415453910827637
    9. '   ' → logprob: -8.040453910827637
    10. ',' → logprob: -8.915453910827637

Token 2723: ' solv' (ID: 154169)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3385426700115204
    2. 'return' → logprob: -1.3385426998138428
    3. 'None' → logprob: -4.463542461395264
    4. ' return' → logprob: -5.588542461395264
    5. '0' → logprob: -5.963542461395264
    6. '        
' → logprob: -6.338542461395264
    7. '
' → logprob: -6.463542461395264
    8. 'float' → logprob: -7.088542461395264
    9. '   ' → logprob: -7.213542461395264
    10. ' None' → logprob: -7.463542461395264

Token 2724: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.062188614159822464
    2. 'e' → logprob: -2.8121886253356934
    3. 'ed' → logprob: -8.437188148498535
    4. 'ble' → logprob: -13.312188148498535
    5. '```' → logprob: -13.812188148498535
    6. '   ' → logprob: -14.187188148498535
    7. '
' → logprob: -15.187188148498535
    8. '       ' → logprob: -15.437188148498535
    9. 'uble' → logprob: -15.937188148498535
    10. 've' → logprob: -16.18718910217285

Token 2725: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03096270002424717
    2. '
' → logprob: -3.5309627056121826
    3. 'return' → logprob: -7.4059624671936035
    4. '        
' → logprob: -8.530962944030762
    5. '<|end|>' → logprob: -8.655962944030762
    6. '```' → logprob: -9.530962944030762
    7. '   ' → logprob: -9.780962944030762
    8. ' return' → logprob: -10.405962944030762
    9. '           ' → logprob: -11.280962944030762
    10. ',' → logprob: -12.030962944030762

Token 2726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3174143135547638
    2. '```' → logprob: -1.4424142837524414
    3. 'return' → logprob: -3.6924142837524414
    4. '   ' → logprob: -5.567414283752441
    5. '<|end|>' → logprob: -5.817414283752441
    6. '
' → logprob: -6.567414283752441
    7. '        
' → logprob: -6.942414283752441
    8. ' return' → logprob: -7.817414283752441
    9. '``' → logprob: -8.067414283752441
    10. 'raise' → logprob: -8.317414283752441

Token 2727: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.592050313949585
    2. 'return' (adapté à ' return') → logprob: -0.842050313949585
    3. '```' → logprob: -4.467050552368164
    4. 'raise' → logprob: -5.967050552368164
    5. ' return' → logprob: -6.967050552368164
    6. '   ' → logprob: -7.717050552368164
    7. 'float' → logprob: -8.342050552368164
    8. '
' → logprob: -8.842050552368164
    9. '        
' → logprob: -9.967050552368164
    10. '{return' → logprob: -10.467050552368164

Token 2728: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.038130078464746475
    2. 'math' → logprob: -3.288130044937134
    3. ' float' → logprob: -10.163129806518555
    4. '-' → logprob: -10.288129806518555
    5. '   ' → logprob: -11.663129806518555
    6. 'None' → logprob: -12.163129806518555
    7. ' math' → logprob: -13.538129806518555
    8. ' -' → logprob: -15.038129806518555
    9. '=float' → logprob: -15.788129806518555
    10. '	float' → logprob: -16.288129806518555

Token 2729: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002680112374946475
    2. '("' → logprob: -8.25026798248291
    3. 'inf' → logprob: -12.25026798248291
    4. ''in' → logprob: -14.00026798248291
    5. ''' → logprob: -14.37526798248291
    6. '   ' → logprob: -16.000268936157227
    7. ''s' → logprob: -16.750268936157227
    8. '"' → logprob: -17.250268936157227
    9. '(' → logprob: -17.250268936157227
    10. '('+' → logprob: -17.250268936157227

Token 2730: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.5696837306022644
    2. ''' → logprob: -1.3196837902069092
    3. 'inf' → logprob: -1.8196837902069092
    4. '"' → logprob: -5.81968355178833
    5. ''ex' → logprob: -6.94468355178833
    6. ''ins' → logprob: -8.819684028625488
    7. ''op' → logprob: -8.819684028625488
    8. ''un' → logprob: -8.944684028625488
    9. ''inc' → logprob: -9.444684028625488
    10. ''im' → logprob: -9.444684028625488

Token 2731: '')


' (ID: 45781)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '')' → logprob: -13.875004768371582
    3. '())' → logprob: -14.125004768371582
    4. ')
' → logprob: -14.250004768371582
    5. '}' → logprob: -14.625004768371582
    6. '`)' → logprob: -15.375004768371582
    7. '   ' → logprob: -15.375004768371582
    8. ' )' → logprob: -15.500004768371582
    9. '})' → logprob: -15.625004768371582
    10. '))' → logprob: -15.750004768371582

Token 2732: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2733: ' Input' (ID: 10090)
  Prédit: 'Meeting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Meeting' → logprob: -1.2327877283096313
    2. 'Solution' → logprob: -1.3577877283096313
    3. 'Test' → logprob: -1.8577877283096313
    4. 'Solver' → logprob: -2.107787609100342
    5. 'Cl' → logprob: -2.732787609100342
    6. 'Route' → logprob: -3.107787609100342
    7. 'Mountain' → logprob: -4.857787609100342
    8. 'Unit' → logprob: -4.982787609100342
    9. 'Point' → logprob: -5.357787609100342
    10. 'Optimal' → logprob: -5.482787609100342

Token 2734: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.7550925016403198
    2. 'Parser' → logprob: -0.7550925016403198
    3. 'Handler' → logprob: -3.2550926208496094
    4. 'Processor' → logprob: -4.755092620849609
    5. 'Data' → logprob: -5.005092620849609
    6. 'Output' → logprob: -5.505092620849609
    7. 'Manager' → logprob: -7.505092620849609
    8. 'Provider' → logprob: -7.880092620849609
    9. 'Tokenizer' → logprob: -8.75509262084961
    10. 'Adapter' → logprob: -8.75509262084961

Token 2735: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00978253036737442
    2. ':
' → logprob: -4.634782314300537
    3. ':def' → logprob: -11.634782791137695
    4. '(object' → logprob: -12.384782791137695
    5. '<|end|>' → logprob: -12.759782791137695
    6. '):' → logprob: -13.009782791137695
    7. '(' → logprob: -13.134782791137695
    8. '():' → logprob: -13.384782791137695
    9. ':

' → logprob: -13.634782791137695
    10. 'def' → logprob: -14.134782791137695

Token 2736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011486753646750003
    2. 'class' → logprob: -9.750114440917969
    3. '```' → logprob: -10.375114440917969
    4. 'def' → logprob: -10.625114440917969
    5. 'import' → logprob: -15.000114440917969
    6. '   ' → logprob: -16.00011444091797
    7. '       ' → logprob: -16.25011444091797
    8. '...' → logprob: -16.75011444091797
    9. ' def' → logprob: -16.87511444091797
    10. '    
' → logprob: -16.87511444091797

Token 2737: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02455936186015606
    2. '   ' → logprob: -3.774559259414673
    3. ' def' → logprob: -6.774559497833252
    4. 'class' → logprob: -9.024559020996094
    5. '@' → logprob: -10.024559020996094
    6. '	def' → logprob: -13.024559020996094
    7. '```' → logprob: -13.274559020996094
    8. 'staticmethod' → logprob: -14.024559020996094
    9. ':def' → logprob: -15.274559020996094
    10. '@dat' → logprob: -15.524559020996094

Token 2738: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.051383309066295624
    2. 'staticmethod' → logprob: -3.0513832569122314
    3. '__' → logprob: -6.1763834953308105
    4. 'iter' → logprob: -7.8013834953308105
    5. '_init' → logprob: -9.176383018493652
    6. 'def' → logprob: -9.426383018493652
    7. 'read' → logprob: -10.426383018493652
    8. 'static' → logprob: -10.551383018493652
    9. 'call' → logprob: -11.051383018493652
    10. 'classmethod' → logprob: -11.176383018493652

Token 2739: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.688212614681106e-05
    2. 'iter' → logprob: -11.000017166137695
    3. 'next' → logprob: -16.875017166137695
    4. ' init' → logprob: -17.250017166137695
    5. 'staticmethod' → logprob: -17.750017166137695
    6. 'int' → logprob: -17.875017166137695
    7. 'call' → logprob: -19.000017166137695
    8. 'new' → logprob: -19.125017166137695
    9. 'ini' → logprob: -19.875017166137695
    10. 'nit' → logprob: -20.000017166137695

Token 2740: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015389078762382269
    2. 'self' → logprob: -7.2515387535095215
    3. '__(' → logprob: -7.7515387535095215
    4. '   ' → logprob: -8.87653923034668
    5. ' (' → logprob: -9.37653923034668
    6. '(' → logprob: -9.37653923034668
    7. '
' → logprob: -10.75153923034668
    8. '```' → logprob: -10.75153923034668
    9. ' self' → logprob: -11.50153923034668
    10. '__(
' → logprob: -12.50153923034668

Token 2741: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006940854946151376
    2. ')' → logprob: -7.500694274902344
    3. '):
' → logprob: -9.375694274902344
    4. '
' → logprob: -10.375694274902344
    5. '):' → logprob: -11.625694274902344
    6. ' self' → logprob: -11.875694274902344
    7. ')...' → logprob: -12.750694274902344
    8. '   ' → logprob: -13.125694274902344
    9. '	self' → logprob: -13.125694274902344
    10. '(self' → logprob: -14.750694274902344

Token 2742: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5628870725631714
    2. '):' → logprob: -1.1878870725631714
    3. ',' → logprob: -2.562887191772461
    4. 'self' → logprob: -3.062887191772461
    5. '(self' → logprob: -6.937887191772461
    6. '   ' → logprob: -8.562887191772461
    7. ',self' → logprob: -9.062887191772461
    8. ' self' → logprob: -9.437887191772461
    9. ')' → logprob: -9.562887191772461
    10. ',file' → logprob: -9.687887191772461

Token 2743: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47517284750938416
    2. 'self' → logprob: -0.9751728773117065
    3. '       ' → logprob: -7.100172996520996
    4. 'def' → logprob: -9.100172996520996
    5. '
' → logprob: -9.475172996520996
    6. ' self' → logprob: -10.100172996520996
    7. '```' → logprob: -11.100172996520996
    8. '	self' → logprob: -11.350172996520996
    9. ')' → logprob: -12.350172996520996
    10. '(self' → logprob: -13.100172996520996

Token 2744: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006239468231797218
    2. '       ' → logprob: -5.881239414215088
    3. 'pass' (adapté à ' pass') → logprob: -6.631239414215088
    4. 'def' → logprob: -7.006239414215088
    5. 'import' → logprob: -7.506239414215088
    6. '   ' → logprob: -7.506239414215088
    7. '
' → logprob: -9.631239891052246
    8. ' self' → logprob: -10.506239891052246
    9. '```' → logprob: -11.506239891052246
    10. 'from' → logprob: -14.381239891052246

Token 2745: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04069775715470314
    2. 'def' → logprob: -3.6656978130340576
    3. ' def' → logprob: -4.9156975746154785
    4. '
' → logprob: -5.0406975746154785
    5. '<|end|>' → logprob: -8.540698051452637
    6. '```' → logprob: -8.790698051452637
    7. '    
' → logprob: -9.290698051452637
    8. ' ' → logprob: -11.165698051452637
    9. ',' → logprob: -11.415698051452637
    10. '	def' → logprob: -11.415698051452637

Token 2746: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39664721488952637
    2. 'def' → logprob: -1.1466472148895264
    3. ' def' → logprob: -4.6466474533081055
    4. '```' → logprob: -9.896647453308105
    5. '
' → logprob: -10.021647453308105
    6. '	def' → logprob: -10.521647453308105
    7. 'class' → logprob: -12.146647453308105
    8. '    
' → logprob: -13.021647453308105
    9. '<|end|>' → logprob: -13.521647453308105
    10. ' ' → logprob: -13.521647453308105

Token 2747: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001470226445235312
    2. ' def' → logprob: -7.00147008895874
    3. '   ' → logprob: -7.50147008895874
    4. '	def' → logprob: -12.001470565795898
    5. '
' → logprob: -16.5014705657959
    6. '```' → logprob: -17.1264705657959
    7. 'class' → logprob: -17.2514705657959
    8. ' ' → logprob: -18.7514705657959
    9. 'import' → logprob: -19.3764705657959
    10. 'de' → logprob: -19.7514705657959

Token 2748: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00010247035970678553
    2. ' read' → logprob: -9.250102043151855
    3. 'parse' → logprob: -12.625102043151855
    4. ' readline' → logprob: -13.625102043151855
    5. '_read' → logprob: -14.125102043151855
    6. 'next' → logprob: -14.750102043151855
    7. '__' → logprob: -15.250102043151855
    8. '.read' → logprob: -16.125102996826172
    9. 'def' → logprob: -16.125102996826172
    10. '	read' → logprob: -16.500102996826172

Token 2749: '_d' (ID: 1565)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.04227599501609802
    2. '(self' → logprob: -3.292275905609131
    3. 'line' → logprob: -6.167275905609131
    4. 'self' → logprob: -6.792275905609131
    5. '_input' → logprob: -7.792275905609131
    6. '_point' → logprob: -8.542276382446289
    7. '_lines' → logprob: -9.042276382446289
    8. '_points' → logprob: -9.167276382446289
    9. '()' → logprob: -9.542276382446289
    10. 'Line' → logprob: -10.917276382446289

Token 2750: 'atasets' (ID: 105003)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.20101405680179596
    2. 'ef' → logprob: -2.4510140419006348
    3. 'istance' → logprob: -2.7010140419006348
    4. 'ata' → logprob: -3.7010140419006348
    5. 'ists' → logprob: -5.826014041900635
    6. 'is' → logprob: -7.701014041900635
    7. '(self' → logprob: -8.451014518737793
    8. ' ist' → logprob: -9.326014518737793
    9. 'ouble' → logprob: -9.326014518737793
    10. 'e' → logprob: -10.076014518737793

Token 2751: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001725511101540178
    2. '(' → logprob: -8.75017261505127
    3. 'self' → logprob: -11.37517261505127
    4. '(
' → logprob: -13.25017261505127
    5. ' (' → logprob: -15.00017261505127
    6. '   ' → logprob: -15.87517261505127
    7. 'def' → logprob: -16.500171661376953
    8. 'from' → logprob: -16.625171661376953
    9. '       ' → logprob: -17.375171661376953
    10. '(sel' → logprob: -18.000171661376953

Token 2752: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005458841915242374
    2. 'self' → logprob: -7.875545978546143
    3. '):
' → logprob: -9.250545501708984
    4. '(' → logprob: -10.500545501708984
    5. '):' → logprob: -11.375545501708984
    6. '   ' → logprob: -11.500545501708984
    7. ')' → logprob: -12.375545501708984
    8. ' self' → logprob: -13.000545501708984
    9. '():
' → logprob: -13.000545501708984
    10. '       ' → logprob: -13.250545501708984

Token 2753: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003091558814048767
    2. 'self' → logprob: -6.253091335296631
    3. '->' → logprob: -7.628091335296631
    4. '       ' → logprob: -8.253091812133789
    5. '   ' → logprob: -8.503091812133789
    6. ' ->' → logprob: -9.378091812133789
    7. '(' → logprob: -9.628091812133789
    8. ':
' → logprob: -11.253091812133789
    9. ':' → logprob: -11.378091812133789
    10. '```' → logprob: -11.878091812133789

Token 2754: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -8.470901229884475e-05
    2. ' List' → logprob: -9.75008487701416
    3. 'Iterator' → logprob: -10.75008487701416
    4. 'int' → logprob: -12.37508487701416
    5. 'Iterable' → logprob: -15.25008487701416
    6. '[List' → logprob: -15.37508487701416
    7. 'Tuple' → logprob: -16.875083923339844
    8. 'Optional' → logprob: -17.500083923339844
    9. 'Generator' → logprob: -17.625083923339844
    10. 'list' → logprob: -17.625083923339844

Token 2755: '[' (ID: 58)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0006060526939108968
    2. '[str' → logprob: -8.000605583190918
    3. '[' → logprob: -8.500605583190918
    4. '[int' → logprob: -9.625605583190918
    5. '[
' → logprob: -14.875605583190918
    6. '[list' → logprob: -15.000605583190918
    7. '[self' → logprob: -15.375605583190918
    8. '[[' → logprob: -16.000606536865234
    9. '[(' → logprob: -16.250606536865234
    10. '   ' → logprob: -17.000606536865234

Token 2756: 'Route' (ID: 7656)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.27856379747390747
    2. 'Tuple' → logprob: -1.5285637378692627
    3. 'Route' → logprob: -3.6535637378692627
    4. 'str' → logprob: -8.403563499450684
    5. 'float' → logprob: -9.278563499450684
    6. 'Point' → logprob: -11.028563499450684
    7. 'Dict' → logprob: -11.028563499450684
    8. 'int' → logprob: -11.528563499450684
    9. ' List' → logprob: -11.778563499450684
    10. '[List' → logprob: -12.153563499450684

Token 2757: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02840118296444416
    2. 'Point' → logprob: -4.4034013748168945
    3. 'Segment' → logprob: -5.4034013748168945
    4. '):
' → logprob: -5.6534013748168945
    5. 'Points' → logprob: -5.7784013748168945
    6. ']:' → logprob: -6.4034013748168945
    7. ']):
' → logprob: -6.9034013748168945
    8. ']' → logprob: -7.5284013748168945
    9. '[' → logprob: -7.6534013748168945
    10. 'Segments' → logprob: -7.9034013748168945

Token 2758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013375865295529366
    2. '```' → logprob: -4.388375759124756
    3. '(self' → logprob: -7.763375759124756
    4. '``' → logprob: -9.263376235961914
    5. '   ' → logprob: -9.388376235961914
    6. '
' → logprob: -9.513376235961914
    7. '(' → logprob: -9.763376235961914
    8. 'def' → logprob: -10.513376235961914
    9. 'self' → logprob: -10.513376235961914
    10. '           ' → logprob: -11.013376235961914

Token 2759: ' routes' (ID: 19749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015426624566316605
    2. '```' → logprob: -5.5154266357421875
    3. 'datasets' → logprob: -5.7654266357421875
    4. 'routes' (adapté à ' routes') → logprob: -5.8904266357421875
    5. 'lines' → logprob: -6.0154266357421875
    6. 'points' → logprob: -6.7654266357421875
    7. 'n' → logprob: -7.8904266357421875
    8. 'data' → logprob: -8.515426635742188
    9. 'import' → logprob: -8.640426635742188
    10. '   ' → logprob: -8.640426635742188

Token 2760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02392788790166378
    2. '=' → logprob: -3.773927927017212
    3. '=[]' → logprob: -8.023927688598633
    4. '=[]
' → logprob: -8.898927688598633
    5. ':' → logprob: -9.273927688598633
    6. '.append' → logprob: -9.898927688598633
    7. '       ' → logprob: -10.398927688598633
    8. '   ' → logprob: -11.023927688598633
    9. '[]' → logprob: -11.523927688598633
    10. ')' → logprob: -13.023927688598633

Token 2761: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002346488763578236
    2. '[]
' → logprob: -8.750234603881836
    3. ' []' → logprob: -9.500234603881836
    4. '[' → logprob: -14.125234603881836
    5. '[]

' → logprob: -15.125234603881836
    6. '   ' → logprob: -16.000234603881836
    7. '[]}' → logprob: -16.000234603881836
    8. '[])' → logprob: -16.875234603881836
    9. '[]"' → logprob: -17.125234603881836
    10. '[
' → logprob: -17.625234603881836

Token 2762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045367187703959644
    2. '   ' → logprob: -8.37545394897461
    3. '
' → logprob: -9.50045394897461
    4. '```' → logprob: -9.50045394897461
    5. 'while' → logprob: -10.87545394897461
    6. 'with' → logprob: -11.37545394897461
    7. '           ' → logprob: -12.00045394897461
    8. 'import' → logprob: -12.12545394897461
    9. '        
' → logprob: -12.50045394897461
    10. ' lines' → logprob: -12.75045394897461

Token 2763: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005694842431694269
    2. '       ' → logprob: -5.88069486618042
    3. '```' → logprob: -7.00569486618042
    4. '#' → logprob: -7.50569486618042
    5. 'lines' → logprob: -7.88069486618042
    6. 'line' → logprob: -8.005694389343262
    7. ' while' → logprob: -8.005694389343262
    8. 'import' → logprob: -9.005694389343262
    9. 'num' → logprob: -9.255694389343262
    10. 'n' → logprob: -9.380694389343262

Token 2764: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00034821697045117617
    2. ' True' → logprob: -8.000348091125488
    3. '(True' → logprob: -11.500348091125488
    4. '   ' → logprob: -13.000348091125488
    5. '
' → logprob: -15.500348091125488
    6. '       ' → logprob: -16.500349044799805
    7. 'true' → logprob: -17.625349044799805
    8. '           ' → logprob: -20.000349044799805
    9. 'line' → logprob: -20.125349044799805
    10. '1' → logprob: -20.125349044799805

Token 2765: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01926308125257492
    2. ':' → logprob: -4.64426326751709
    3. ':
' → logprob: -5.39426326751709
    4. ' line' → logprob: -6.26926326751709
    5. '(line' → logprob: -7.26926326751709
    6. ',' → logprob: -7.39426326751709
    7. '():
' → logprob: -7.89426326751709
    8. '```' → logprob: -8.39426326751709
    9. '<|end|>' → logprob: -9.01926326751709
    10. '       ' → logprob: -9.01926326751709

Token 2766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015501394867897034
    2. ' line' → logprob: -4.640501499176025
    3. 'line' → logprob: -5.265501499176025
    4. '   ' → logprob: -8.140501022338867
    5. 'try' → logprob: -8.890501022338867
    6. '(line' → logprob: -10.140501022338867
    7. '       ' → logprob: -10.640501022338867
    8. '```' → logprob: -10.640501022338867
    9. '	line' → logprob: -11.265501022338867
    10. '#line' → logprob: -11.390501022338867

Token 2767: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004585346207022667
    2. 'n' → logprob: -6.254585266113281
    3. '           ' → logprob: -6.254585266113281
    4. 'try' (adapté à ' try') → logprob: -7.504585266113281
    5. ' line' → logprob: -8.754585266113281
    6. '   ' → logprob: -11.879585266113281
    7. 'count' → logprob: -12.254585266113281
    8. 'size' → logprob: -12.379585266113281
    9. 'num' → logprob: -12.504585266113281
    10. '	line' → logprob: -14.254585266113281

Token 2768: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7719030976295471
    2. '               ' → logprob: -1.1469030380249023
    3. ':' → logprob: -1.5219030380249023
    4. '           ' → logprob: -6.771903038024902
    5. '   ' → logprob: -8.021903038024902
    6. '                   ' → logprob: -9.146903038024902
    7. '():
' → logprob: -9.646903038024902
    8. ' :' → logprob: -9.771903038024902
    9. '):
' → logprob: -10.521903038024902
    10. '	           ' → logprob: -10.521903038024902

Token 2769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002610974188428372
    2. '           ' → logprob: -8.875261306762695
    3. '   ' → logprob: -9.625261306762695
    4. '                   ' → logprob: -11.375261306762695
    5. '	           ' → logprob: -11.375261306762695
    6. ' line' → logprob: -11.750261306762695
    7. '#line' → logprob: -12.000261306762695
    8. '			   ' → logprob: -12.875261306762695
    9. ':
' → logprob: -13.000261306762695
    10. ':' → logprob: -13.375261306762695

Token 2770: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2360326498746872
    2. ' line' → logprob: -1.7360326051712036
    3. 'n' → logprob: -3.736032724380493
    4. '                   ' → logprob: -5.111032485961914
    5. '   ' → logprob: -6.236032485961914
    6. ' n' → logprob: -6.236032485961914
    7. 'num' → logprob: -8.861032485961914
    8. 's' → logprob: -10.236032485961914
    9. '	line' → logprob: -10.486032485961914
    10. ' ' → logprob: -11.986032485961914

Token 2771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519589066505432
    2. ' =' → logprob: -1.5019588470458984
    3. '=line' → logprob: -10.751958847045898
    4. 's' → logprob: -12.876958847045898
    5. '=
' → logprob: -13.126958847045898
    6. '.strip' → logprob: -13.126958847045898
    7. '=input' → logprob: -14.626958847045898
    8. ':' → logprob: -15.001958847045898
    9. '.' → logprob: -15.626958847045898
    10. ' =
' → logprob: -15.876958847045898

Token 2772: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014164687134325504
    2. ' input' → logprob: -4.264164924621582
    3. '=input' → logprob: -13.764164924621582
    4. '(input' → logprob: -16.764163970947266
    5. 'line' → logprob: -18.014163970947266
    6. '	input' → logprob: -18.139163970947266
    7. '   ' → logprob: -18.514163970947266
    8. '
' → logprob: -18.764163970947266
    9. '<input' → logprob: -19.514163970947266
    10. '_input' → logprob: -19.889163970947266

Token 2773: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5344308018684387
    2. '()
' → logprob: -1.409430742263794
    3. '().' → logprob: -1.909430742263794
    4. '=' → logprob: -3.909430742263794
    5. ' =' → logprob: -6.909430980682373
    6. '.strip' → logprob: -8.909430503845215
    7. '=line' → logprob: -9.034430503845215
    8. '=
' → logprob: -9.534430503845215
    9. '()
' → logprob: -10.159430503845215
    10. '()

' → logprob: -10.909430503845215

Token 2774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3944765627384186
    2. '               ' → logprob: -1.1444765329360962
    3. '.strip' → logprob: -5.394476413726807
    4. '                   ' → logprob: -7.144476413726807
    5. '<|end|>' → logprob: -7.894476413726807
    6. '	           ' → logprob: -8.019476890563965
    7. '       ' → logprob: -8.269476890563965
    8. '	       ' → logprob: -8.769476890563965
    9. ' =' → logprob: -8.894476890563965
    10. '
' → logprob: -9.144476890563965

Token 2775: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005882933270186186
    2. '.strip' → logprob: -5.755882740020752
    3. 'if' → logprob: -7.255882740020752
    4. '               ' → logprob: -7.255882740020752
    5. ' if' → logprob: -7.755882740020752
    6. '
' → logprob: -7.755882740020752
    7. '       ' → logprob: -9.25588321685791
    8. 'strip' → logprob: -9.88088321685791
    9. '	       ' → logprob: -10.00588321685791
    10. '		' → logprob: -10.38088321685791

Token 2776: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -2.5107177862082608e-05
    2. ' EOF' → logprob: -10.750024795532227
    3. 'Stop' → logprob: -12.750024795532227
    4. '(' → logprob: -15.250024795532227
    5. 'Exception' → logprob: -15.750024795532227
    6. '
' → logprob: -15.750024795532227
    7. 'EO' → logprob: -16.625024795532227
    8. '```' → logprob: -16.625024795532227
    9. 'EOS' → logprob: -18.375024795532227
    10. 'End' → logprob: -19.000024795532227

Token 2777: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.45848218582978e-06
    2. ':' → logprob: -13.50000286102295
    3. ':
' → logprob: -13.87500286102295
    4. 'error' → logprob: -17.750001907348633
    5. 'rror' → logprob: -18.000001907348633
    6. '
' → logprob: -18.000001907348633
    7. '_error' → logprob: -18.375001907348633
    8. 'EOF' → logprob: -18.375001907348633
    9. 'ERROR' → logprob: -18.875001907348633
    10. '_ERROR' → logprob: -19.250001907348633

Token 2778: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6432668566703796
    2. ':
' → logprob: -1.0182669162750244
    3. '               ' → logprob: -2.7682669162750244
    4. '           ' → logprob: -3.5182669162750244
    5. ' or' → logprob: -4.768266677856445
    6. '                   ' → logprob: -5.768266677856445
    7. '=' → logprob: -6.268266677856445
    8. '=None' → logprob: -6.518266677856445
    9. '():
' → logprob: -6.893266677856445
    10. ' =' → logprob: -7.393266677856445

Token 2779: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013106698170304298
    2. '           ' → logprob: -4.388106822967529
    3. '                   ' → logprob: -8.263106346130371
    4. '	           ' → logprob: -8.638106346130371
    5. ':' → logprob: -10.013106346130371
    6. '                       ' → logprob: -10.388106346130371
    7. ':
' → logprob: -11.138106346130371
    8. '		       ' → logprob: -11.263106346130371
    9. '   ' → logprob: -11.763106346130371
    10. '	       ' → logprob: -12.013106346130371

Token 2780: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.17436723411083221
    2. '               ' → logprob: -2.1743671894073486
    3. '           ' → logprob: -3.1743671894073486
    4. ' break' → logprob: -5.549367427825928
    5. '                   ' → logprob: -8.04936695098877
    6. '	break' → logprob: -8.54936695098877
    7. '_break' → logprob: -9.92436695098877
    8. 'return' → logprob: -10.29936695098877
    9. '
' → logprob: -11.79936695098877
    10. '   ' → logprob: -11.92436695098877

Token 2781: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.301394023466855e-05
    2. '               ' → logprob: -10.750062942504883
    3. '       ' → logprob: -11.000062942504883
    4. '		' → logprob: -11.250062942504883
    5. 'if' → logprob: -12.625062942504883
    6. '	       ' → logprob: -13.125062942504883
    7. '                   ' → logprob: -13.375062942504883
    8. ' if' → logprob: -13.750062942504883
    9. '<|end|>' → logprob: -14.000062942504883
    10. '	   ' → logprob: -14.750062942504883

Token 2782: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.881560041918419e-05
    2. '       ' → logprob: -10.625039100646973
    3. '		' → logprob: -12.000039100646973
    4. '               ' → logprob: -12.625039100646973
    5. 'if' → logprob: -13.750039100646973
    6. '	       ' → logprob: -13.750039100646973
    7. '```' → logprob: -14.000039100646973
    8. '   ' → logprob: -14.625039100646973
    9. '<|end|>' → logprob: -15.125039100646973
    10. '                   ' → logprob: -15.250039100646973

Token 2783: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17442038655281067
    2. 'if' (adapté à ' if') → logprob: -1.9244203567504883
    3. '       ' → logprob: -4.799420356750488
    4. ' if' → logprob: -5.549420356750488
    5. 'line' → logprob: -6.424420356750488
    6. ' line' → logprob: -9.424420356750488
    7. '   ' → logprob: -9.674420356750488
    8. 'strip' → logprob: -9.674420356750488
    9. '=line' → logprob: -10.049420356750488
    10. '#line' → logprob: -11.174420356750488

Token 2784: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.21396490931510925
    2. ' not' → logprob: -1.7139649391174316
    3. 'line' → logprob: -4.463964939117432
    4. ' line' → logprob: -6.963964939117432
    5. '   ' → logprob: -11.713964462280273
    6. '#line' → logprob: -13.588964462280273
    7. '(line' → logprob: -14.088964462280273
    8. ' ' → logprob: -15.213964462280273
    9. '=line' → logprob: -15.463964462280273
    10. 'len' → logprob: -15.963964462280273

Token 2785: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.30180761218070984
    2. '==' → logprob: -1.9268076419830322
    3. '.' → logprob: -3.0518076419830322
    4. ' ==' → logprob: -3.3018076419830322
    5. '().' → logprob: -3.6768076419830322
    6. '()==' → logprob: -6.176807403564453
    7. '.startswith' → logprob: -6.801807403564453
    8. '       ' → logprob: -7.051807403564453
    9. '           ' → logprob: -7.676807403564453
    10. 'strip' → logprob: -7.926807403564453

Token 2786: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.16997213661670685
    2. '==' → logprob: -2.1699721813201904
    3. '()' → logprob: -3.1699721813201904
    4. ' ==' → logprob: -9.16997241973877
    5. '===' → logprob: -11.16997241973877
    6. '()=="' → logprob: -12.66997241973877
    7. '=' → logprob: -13.29497241973877
    8. '==
' → logprob: -13.79497241973877
    9. ']==' → logprob: -13.79497241973877
    10. ')==' → logprob: -14.91997241973877

Token 2787: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00039111197111196816
    2. '()==' → logprob: -8.250391006469727
    3. ' ==' → logprob: -9.250391006469727
    4. '===' → logprob: -10.625391006469727
    5. '==
' → logprob: -12.625391006469727
    6. '=' → logprob: -12.625391006469727
    7. ']==' → logprob: -13.750391006469727
    8. ')==' → logprob: -14.500391006469727
    9. '```' → logprob: -14.875391006469727
    10. '=="' → logprob: -15.250391006469727

Token 2788: ' '':
' (ID: 125614)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.8798111081123352
    2. '"' → logprob: -1.3798110485076904
    3. '''' → logprob: -1.3798110485076904
    4. '"":' → logprob: -2.7548110485076904
    5. ''' → logprob: -4.0048112869262695
    6. ' "":
' → logprob: -11.62981128692627
    7. '   ' → logprob: -12.37981128692627
    8. '0' → logprob: -12.50481128692627
    9. '":' → logprob: -12.75481128692627
    10. '"",' → logprob: -12.75481128692627

Token 2789: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033165133208967745
    2. '           ' → logprob: -8.25033187866211
    3. '                   ' → logprob: -10.50033187866211
    4. 'continue' → logprob: -10.75033187866211
    5. '   ' → logprob: -12.00033187866211
    6. 'break' → logprob: -12.12533187866211
    7. '	           ' → logprob: -13.00033187866211
    8. '                       ' → logprob: -13.62533187866211
    9. ' continue' → logprob: -13.75033187866211
    10. ' or' → logprob: -14.12533187866211

Token 2790: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4034503698348999
    2. '               ' → logprob: -1.1534503698349
    3. 'continue' (adapté à ' continue') → logprob: -4.1534504890441895
    4. ' break' → logprob: -7.6534504890441895
    5. '           ' → logprob: -9.028450012207031
    6. '                   ' → logprob: -9.653450012207031
    7. 'return' → logprob: -9.778450012207031
    8. '	break' → logprob: -11.653450012207031
    9. ' continue' → logprob: -12.528450012207031
    10. '   ' → logprob: -12.653450012207031

Token 2791: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.877503907773644e-05
    2. '               ' → logprob: -9.750099182128906
    3. '
' → logprob: -11.000099182128906
    4. 'if' → logprob: -11.125099182128906
    5. '       ' → logprob: -12.750099182128906
    6. '            
' → logprob: -13.250099182128906
    7. ' if' → logprob: -13.750099182128906
    8. '		' → logprob: -14.250099182128906
    9. '```' → logprob: -14.250099182128906
    10. 'continue' → logprob: -14.625099182128906

Token 2792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.682846287731081e-05
    2. 'if' → logprob: -10.250066757202148
    3. '       ' → logprob: -10.750066757202148
    4. '               ' → logprob: -11.875066757202148
    5. '```' → logprob: -14.125066757202148
    6. 'num' → logprob: -14.250066757202148
    7. '
' → logprob: -15.250066757202148
    8. '   ' → logprob: -15.375066757202148
    9. '          ' → logprob: -15.625066757202148
    10. ' if' → logprob: -15.625066757202148

Token 2793: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.05209362879395485
    2. 'num' → logprob: -3.052093744277954
    3. '           ' → logprob: -6.552093505859375
    4. 'if' → logprob: -6.552093505859375
    5. 'count' → logprob: -7.802093505859375
    6. 'N' → logprob: -9.552093505859375
    7. ' n' → logprob: -9.802093505859375
    8. 'parts' → logprob: -10.052093505859375
    9. 'try' → logprob: -10.302093505859375
    10. '               ' → logprob: -10.552093505859375

Token 2794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07971174269914627
    2. '=' → logprob: -2.579711675643921
    3. '=int' → logprob: -8.0797119140625
    4. '_tokens' → logprob: -8.2047119140625
    5. '   ' → logprob: -9.5797119140625
    6. ' ' → logprob: -9.9547119140625
    7. ' ==' → logprob: -10.7047119140625
    8. '_token' → logprob: -10.8297119140625
    9. '  ' → logprob: -11.2047119140625
    10. '_' → logprob: -11.5797119140625

Token 2795: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0788901224732399
    2. ' int' → logprob: -2.578890085220337
    3. '=int' → logprob: -15.328889846801758
    4. '(int' → logprob: -16.578889846801758
    5. '[int' → logprob: -16.953889846801758
    6. '	int' → logprob: -19.078889846801758
    7. '<int' → logprob: -19.203889846801758
    8. '   ' → logprob: -19.328889846801758
    9. ':int' → logprob: -19.453889846801758
    10. ' ' → logprob: -19.953889846801758

Token 2796: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011231913231313229
    2. 'line' → logprob: -7.001123428344727
    3. '(' → logprob: -8.501123428344727
    4. '(input' → logprob: -12.501123428344727
    5. ' line' → logprob: -13.251123428344727
    6. '=line' → logprob: -14.251123428344727
    7. ' (' → logprob: -14.376123428344727
    8. '(
' → logprob: -14.376123428344727
    9. '[line' → logprob: -14.501123428344727
    10. '(n' → logprob: -15.751123428344727

Token 2797: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.34969788789749146
    2. ')' → logprob: -1.3496978282928467
    3. '.strip' → logprob: -3.3496978282928467
    4. '())
' → logprob: -7.724698066711426
    5. ' )
' → logprob: -9.349698066711426
    6. '())' → logprob: -10.224698066711426
    7. ' )' → logprob: -10.974698066711426
    8. '.rstrip' → logprob: -11.099698066711426
    9. '       ' → logprob: -11.474698066711426
    10. '   ' → logprob: -11.599698066711426

Token 2798: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.157039049663581e-05
    2. 'if' → logprob: -10.500051498413086
    3. ' if' → logprob: -11.375051498413086
    4. '       ' → logprob: -12.625051498413086
    5. '               ' → logprob: -12.625051498413086
    6. '```' → logprob: -12.750051498413086
    7. '	       ' → logprob: -13.875051498413086
    8. '		' → logprob: -13.875051498413086
    9. '                   ' → logprob: -14.625051498413086
    10. '<|end|>' → logprob: -15.375051498413086

Token 2799: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27524226903915405
    2. 'points' → logprob: -1.5252423286437988
    3. '           ' → logprob: -3.775242328643799
    4. ' if' → logprob: -9.40024185180664
    5. '               ' → logprob: -11.77524185180664
    6. '       ' → logprob: -11.77524185180664
    7. 'pts' → logprob: -12.52524185180664
    8. '	points' → logprob: -12.52524185180664
    9. ' points' → logprob: -12.77524185180664
    10. '(points' → logprob: -14.27524185180664

Token 2800: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003178901970386505
    2. ' n' → logprob: -5.75317907333374
    3. '           ' → logprob: -14.128178596496582
    4. '0' → logprob: -15.378178596496582
    5. '==' → logprob: -16.6281795501709
    6. '               ' → logprob: -16.7531795501709
    7. '                   ' → logprob: -17.5031795501709
    8. '	n' → logprob: -17.7531795501709
    9. '   ' → logprob: -18.1281795501709
    10. 'not' → logprob: -18.3781795501709

Token 2801: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2523186504840851
    2. '==' → logprob: -1.5023186206817627
    3. ' <=' → logprob: -8.252318382263184
    4. '<=' → logprob: -9.127318382263184
    5. '=' → logprob: -12.627318382263184
    6. '   ' → logprob: -12.752318382263184
    7. ' ' → logprob: -13.002318382263184
    8. '===' → logprob: -13.127318382263184
    9. '```' → logprob: -13.252318382263184
    10. '()==' → logprob: -13.377318382263184

Token 2802: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.250001907348633
    4. '۰' → logprob: -21.125001907348633
    5. '=' → logprob: -21.375001907348633
    6. '
' → logprob: -22.500001907348633
    7. '  ' → logprob: -22.625001907348633
    8. 's' → logprob: -23.750001907348633
    9. '٠' → logprob: -23.875001907348633
    10. '０' → logprob: -24.000001907348633

Token 2803: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '-' → logprob: -18.375
    4. '   ' → logprob: -19.75
    5. '۰' → logprob: -20.125
    6. '=' → logprob: -20.625
    7. '
' → logprob: -21.75
    8. ' -' → logprob: -22.25
    9. '```' → logprob: -22.375
    10. '  ' → logprob: -22.5

Token 2804: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4544341564178467
    2. ':
' → logprob: -1.5794341564178467
    3. ':' → logprob: -1.9544341564178467
    4. '           ' → logprob: -4.079434394836426
    5. '                   ' → logprob: -8.704434394836426
    6. ':return' → logprob: -8.704434394836426
    7. '                       ' → logprob: -10.204434394836426
    8. '   ' → logprob: -10.204434394836426
    9. '	           ' → logprob: -10.579434394836426
    10. '       ' → logprob: -11.329434394836426

Token 2805: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004187737125903368
    2. '           ' → logprob: -6.12918758392334
    3. 'break' → logprob: -6.37918758392334
    4. ' break' → logprob: -8.87918758392334
    5. '                   ' → logprob: -9.50418758392334
    6. '	break' → logprob: -10.12918758392334
    7. '	           ' → logprob: -10.87918758392334
    8. '			' → logprob: -11.50418758392334
    9. '                       ' → logprob: -11.87918758392334
    10. '		       ' → logprob: -13.12918758392334

Token 2806: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0066543882712721825
    2. ' break' → logprob: -5.256654262542725
    3. 'return' → logprob: -7.006654262542725
    4. '	break' → logprob: -8.006654739379883
    5. '               ' → logprob: -9.006654739379883
    6. '           ' → logprob: -9.881654739379883
    7. '_break' → logprob: -12.881654739379883
    8. '                   ' → logprob: -13.006654739379883
    9. '                       ' → logprob: -14.256654739379883
    10. ' return' → logprob: -14.631654739379883

Token 2807: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.5120287066092715e-05
    2. '       ' → logprob: -10.500035285949707
    3. '               ' → logprob: -13.125035285949707
    4. '```' → logprob: -13.250035285949707
    5. '
' → logprob: -13.875035285949707
    6. 'n' → logprob: -14.750035285949707
    7. '            
' → logprob: -14.750035285949707
    8. ',' → logprob: -14.875035285949707
    9. '          ' → logprob: -15.000035285949707
    10. '   ' → logprob: -15.125035285949707

Token 2808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21647486090660095
    2. 'points' → logprob: -1.7164748907089233
    3. '       ' → logprob: -4.216475009918213
    4. ' points' → logprob: -9.716474533081055
    5. '```' → logprob: -9.841474533081055
    6. '	points' → logprob: -9.966474533081055
    7. '_points' → logprob: -11.591474533081055
    8. '(points' → logprob: -11.841474533081055
    9. 'point' → logprob: -11.966474533081055
    10. '   ' → logprob: -11.966474533081055

Token 2809: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.014229675754904747
    2. '           ' → logprob: -4.264229774475098
    3. ' points' → logprob: -10.639229774475098
    4. '       ' → logprob: -10.639229774475098
    5. 'pts' → logprob: -11.389229774475098
    6. '	points' → logprob: -12.264229774475098
    7. '               ' → logprob: -14.264229774475098
    8. '   ' → logprob: -14.514229774475098
    9. '_points' → logprob: -15.014229774475098
    10. '(points' → logprob: -15.514229774475098

Token 2810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03595295920968056
    2. '=' → logprob: -3.4109530448913574
    3. '=[]' → logprob: -6.910953044891357
    4. '.append' → logprob: -7.160953044891357
    5. '=[]
' → logprob: -7.910953044891357
    6. '   ' → logprob: -9.7859525680542
    7. '.' → logprob: -10.4109525680542
    8. '<|end|>' → logprob: -11.1609525680542
    9. '           ' → logprob: -11.9109525680542
    10. '       ' → logprob: -11.9109525680542

Token 2811: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.03817862272262573
    2. '[]' → logprob: -3.2881786823272705
    3. '[' → logprob: -9.538178443908691
    4. ' []
' → logprob: -9.788178443908691
    5. '[
' → logprob: -12.288178443908691
    6. ' []' → logprob: -12.788178443908691
    7. '[]

' → logprob: -13.788178443908691
    8. '[])
' → logprob: -16.038179397583008
    9. '[self' → logprob: -16.163179397583008
    10. '[n' → logprob: -16.163179397583008

Token 2812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017833561869338155
    2. 'for' → logprob: -6.50178337097168
    3. ' for' → logprob: -8.75178337097168
    4. '               ' → logprob: -10.12678337097168
    5. '	       ' → logprob: -10.75178337097168
    6. '		' → logprob: -10.87678337097168
    7. '       ' → logprob: -11.37678337097168
    8. '```' → logprob: -11.37678337097168
    9. '                   ' → logprob: -12.00178337097168
    10. 'while' → logprob: -12.25178337097168

Token 2813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01823352836072445
    2. '           ' → logprob: -4.018233299255371
    3. '       ' → logprob: -9.518233299255371
    4. ' for' → logprob: -11.643233299255371
    5. 'while' → logprob: -14.018233299255371
    6. '   ' → logprob: -14.893233299255371
    7. '               ' → logprob: -15.518233299255371
    8. '	for' → logprob: -16.768234252929688
    9. '```' → logprob: -18.768234252929688
    10. '          ' → logprob: -19.518234252929688

Token 2814: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001990255434066057
    2. '_i' → logprob: -6.25199031829834
    3. '_range' → logprob: -10.25199031829834
    4. '_in' → logprob: -11.50199031829834
    5. ' _' → logprob: -12.87699031829834
    6. '_j' → logprob: -13.75199031829834
    7. '_idx' → logprob: -13.75199031829834
    8. '_
' → logprob: -13.75199031829834
    9. '_line' → logprob: -14.62699031829834
    10. '_index' → logprob: -14.62699031829834

Token 2815: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021394655108451843
    2. ' in' → logprob: -3.896394729614258
    3. 'in' → logprob: -7.896394729614258
    4. ' _' → logprob: -8.271394729614258
    5. 'i' → logprob: -9.271394729614258
    6. 'range' → logprob: -10.021394729614258
    7. '_range' → logprob: -10.271394729614258
    8. '_i' → logprob: -11.146394729614258
    9. ' range' → logprob: -11.146394729614258
    10. ' i' → logprob: -12.146394729614258

Token 2816: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012368128227535635
    2. ' range' → logprob: -9.000123977661133
    3. '_' → logprob: -15.875123977661133
    4. '_range' → logprob: -16.375123977661133
    5. '
' → logprob: -19.000123977661133
    6. '	range' → logprob: -19.000123977661133
    7. '   ' → logprob: -19.500123977661133
    8. ' ' → logprob: -20.500123977661133
    9. '  ' → logprob: -20.625123977661133
    10. '[' → logprob: -20.625123977661133

Token 2817: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07918807864189148
    2. '(n' → logprob: -2.579188108444214
    3. ' n' → logprob: -9.329188346862793
    4. 'int' → logprob: -9.454188346862793
    5. '(int' → logprob: -10.204188346862793
    6. '
' → logprob: -10.579188346862793
    7. '_n' → logprob: -10.579188346862793
    8. '   ' → logprob: -10.954188346862793
    9. 'range' → logprob: -11.704188346862793
    10. '(' → logprob: -12.079188346862793

Token 2818: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009743694216012955
    2. ':
' → logprob: -5.009743690490723
    3. '):' → logprob: -7.009743690490723
    4. '():
' → logprob: -7.259743690490723
    5. '           ' → logprob: -7.384743690490723
    6. ':' → logprob: -8.134743690490723
    7. '               ' → logprob: -8.134743690490723
    8. '):
' → logprob: -9.634743690490723
    9. ',' → logprob: -10.009743690490723
    10. ']:
' → logprob: -10.759743690490723

Token 2819: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003479785518720746
    2. '	           ' → logprob: -8.250348091125488
    3. '<|end|>' → logprob: -11.125348091125488
    4. '   ' → logprob: -11.500348091125488
    5. '		       ' → logprob: -11.750348091125488
    6. 'line' → logprob: -12.125348091125488
    7. ' line' → logprob: -12.250348091125488
    8. '#line' → logprob: -12.375348091125488
    9. '```' → logprob: -12.375348091125488
    10. '                   ' → logprob: -12.625348091125488

Token 2820: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.014988468959927559
    2. ' x' → logprob: -4.389988422393799
    3. '               ' → logprob: -6.639988422393799
    4. 'line' → logprob: -7.514988422393799
    5. 'coords' → logprob: -8.139988899230957
    6. 'parts' → logprob: -9.264988899230957
    7. 'xy' → logprob: -9.889988899230957
    8. 'xs' → logprob: -10.389988899230957
    9. ' line' → logprob: -10.514988899230957
    10. ' parts' → logprob: -10.889988899230957

Token 2821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001234518364071846
    2. ',y' → logprob: -7.001234531402588
    3. ' ,' → logprob: -8.37623405456543
    4. '_,' → logprob: -9.50123405456543
    5. '_str' → logprob: -12.25123405456543
    6. 'y' → logprob: -12.75123405456543
    7. ',
' → logprob: -12.75123405456543
    8. ',float' → logprob: -13.50123405456543
    9. ',p' → logprob: -13.87623405456543
    10. ',line' → logprob: -14.12623405456543

Token 2822: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7610454708337784e-05
    2. ' y' → logprob: -10.500027656555176
    3. '	y' → logprob: -20.62502670288086
    4. ',y' → logprob: -22.00002670288086
    5. '_y' → logprob: -22.37502670288086
    6. '=' → logprob: -23.12502670288086
    7. '‘y' → logprob: -23.37502670288086
    8. ''y' → logprob: -23.87502670288086
    9. ')y' → logprob: -24.00002670288086
    10. 'yj' → logprob: -24.25002670288086

Token 2823: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024914760142564774
    2. ' =' → logprob: -6.002491474151611
    3. '=line' → logprob: -11.25249195098877
    4. ',' → logprob: -13.50249195098877
    5. '=float' → logprob: -14.37749195098877
    6. '=input' → logprob: -14.62749195098877
    7. '=
' → logprob: -16.752490997314453
    8. '=int' → logprob: -16.877490997314453
    9. '_=' → logprob: -17.252490997314453
    10. '=parse' → logprob: -17.377490997314453

Token 2824: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.000158842682139948
    2. ' map' → logprob: -8.75015926361084
    3. '[' → logprob: -16.500158309936523
    4. '(map' → logprob: -16.750158309936523
    5. 'list' → logprob: -17.000158309936523
    6. '   ' → logprob: -17.250158309936523
    7. '	map' → logprob: -17.625158309936523
    8. '
' → logprob: -17.875158309936523
    9. 'tuple' → logprob: -19.875158309936523
    10. '  ' → logprob: -20.625158309936523

Token 2825: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.2520478665828705
    2. 'float' → logprob: -1.5020478963851929
    3. '(int' → logprob: -10.002047538757324
    4. '=float' → logprob: -10.627047538757324
    5. 'map' → logprob: -11.127047538757324
    6. ',float' → logprob: -11.502047538757324
    7. '(lambda' → logprob: -12.502047538757324
    8. ' float' → logprob: -12.502047538757324
    9. '(map' → logprob: -12.752047538757324
    10. '(str' → logprob: -12.877047538757324

Token 2826: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9354137182235718
    2. ',input' → logprob: -1.0604137182235718
    3. ',' → logprob: -1.4354137182235718
    4. '(input' → logprob: -3.8104138374328613
    5. '=input' → logprob: -7.935413837432861
    6. ' input' → logprob: -8.060413360595703
    7. '               ' → logprob: -8.685413360595703
    8. '                   ' → logprob: -9.810413360595703
    9. '_input' → logprob: -9.935413360595703
    10. ')' → logprob: -10.185413360595703

Token 2827: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001178916310891509
    2. ' input' → logprob: -6.751178741455078
    3. 'line' → logprob: -11.751178741455078
    4. '(input' → logprob: -15.001178741455078
    5. '=input' → logprob: -16.251178741455078
    6. 'map' → logprob: -16.501178741455078
    7. ')' → logprob: -16.501178741455078
    8. '
' → logprob: -16.751178741455078
    9. ' line' → logprob: -17.001178741455078
    10. ',input' → logprob: -17.126178741455078

Token 2828: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.125000953674316
    3. '()
' → logprob: -16.000001907348633
    4. ' ().' → logprob: -17.125001907348633
    5. ')' → logprob: -18.125001907348633
    6. '.split' → logprob: -18.250001907348633
    7. '(' → logprob: -18.375001907348633
    8. 'split' → logprob: -18.875001907348633
    9. '())' → logprob: -19.250001907348633
    10. '.' → logprob: -19.750001907348633

Token 2829: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009215848403982818
    2. 'strip' → logprob: -7.000921726226807
    3. 'rstrip' → logprob: -12.000921249389648
    4. '_split' → logprob: -13.375921249389648
    5. '().' → logprob: -13.875921249389648
    6. '(split' → logprob: -14.375921249389648
    7. ' split' → logprob: -14.625921249389648
    8. 'plit' → logprob: -15.375921249389648
    9. 'spl' → logprob: -16.12592124938965
    10. '.split' → logprob: -16.62592124938965

Token 2830: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31529438495635986
    2. '())
' → logprob: -1.3152943849563599
    3. ')' → logprob: -6.31529426574707
    4. '()' → logprob: -8.94029426574707
    5. ')
' → logprob: -9.56529426574707
    6. '())
' → logprob: -11.56529426574707
    7. '()
' → logprob: -12.31529426574707
    8. '(' → logprob: -12.56529426574707
    9. ' ())' → logprob: -14.19029426574707
    10. '())

' → logprob: -14.69029426574707

Token 2831: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018542143516242504
    2. ',' → logprob: -9.625185012817383
    3. '```' → logprob: -10.250185012817383
    4. '           ' → logprob: -10.625185012817383
    5. '              ' → logprob: -11.375185012817383
    6. '                
' → logprob: -11.375185012817383
    7. '<|end|>' → logprob: -12.000185012817383
    8. '                   ' → logprob: -12.125185012817383
    9. '                ' → logprob: -12.375185012817383
    10. '       ' → logprob: -13.000185012817383

Token 2832: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.0001769616355886683
    2. 'point' → logprob: -9.000177383422852
    3. '               ' → logprob: -10.500177383422852
    4. ' points' → logprob: -10.750177383422852
    5. 'p' → logprob: -12.500177383422852
    6. 'pt' → logprob: -14.875177383422852
    7. '                   ' → logprob: -15.875177383422852
    8. '	points' → logprob: -15.875177383422852
    9. 'pts' → logprob: -16.00017738342285
    10. '           ' → logprob: -16.37517738342285

Token 2833: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.110668618930504e-05
    2. '.' → logprob: -9.75006103515625
    3. '           ' → logprob: -14.37506103515625
    4. '.ap' → logprob: -14.62506103515625
    5. '.app' → logprob: -14.75006103515625
    6. ' .' → logprob: -15.12506103515625
    7. '               ' → logprob: -15.12506103515625
    8. 'append' → logprob: -15.25006103515625
    9. '=' → logprob: -16.00006103515625
    10. ').' → logprob: -16.25006103515625

Token 2834: '(Point' (ID: 72072)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3868967890739441
    2. '(Point' → logprob: -1.1368968486785889
    3. ' Point' → logprob: -10.636897087097168
    4. '	Point' → logprob: -13.511897087097168
    5. '   ' → logprob: -16.13689613342285
    6. '               ' → logprob: -16.13689613342285
    7. '.Point' → logprob: -16.76189613342285
    8. '(' → logprob: -16.88689613342285
    9. '(
' → logprob: -17.51189613342285
    10. '           ' → logprob: -17.51189613342285

Token 2835: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018708422780036926
    2. '(float' → logprob: -4.018708229064941
    3. 'float' → logprob: -7.893708229064941
    4. '(' → logprob: -9.143708229064941
    5. 'x' → logprob: -9.643708229064941
    6. '(int' → logprob: -11.643708229064941
    7. '(
' → logprob: -13.018708229064941
    8. '((' → logprob: -13.393708229064941
    9. ' float' → logprob: -15.518708229064941
    10. ' (' → logprob: -15.643708229064941

Token 2836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ' ,' → logprob: -10.375106811523438
    3. ',y' → logprob: -10.875106811523438
    4. '.' → logprob: -10.875106811523438
    5. ',
' → logprob: -11.000106811523438
    6. '=' → logprob: -11.375106811523438
    7. '<|end|>' → logprob: -12.750106811523438
    8. ',float' → logprob: -12.875106811523438
    9. ')' → logprob: -14.375106811523438
    10. 'y' → logprob: -14.625106811523438

Token 2837: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.15310683415737e-05
    2. ' y' → logprob: -10.750021934509277
    3. '0' → logprob: -18.00002098083496
    4. '                   ' → logprob: -18.75002098083496
    5. '                       ' → logprob: -19.87502098083496
    6. '                  ' → logprob: -21.37502098083496
    7. '
' → logprob: -21.75002098083496
    8. '	y' → logprob: -21.75002098083496
    9. '                      ' → logprob: -21.87502098083496
    10. '   ' → logprob: -22.12502098083496

Token 2838: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1023639515042305
    2. '))
' → logprob: -2.3523640632629395
    3. '               ' → logprob: -6.3523640632629395
    4. '           ' → logprob: -7.8523640632629395
    5. '                   ' → logprob: -11.602363586425781
    6. '       ' → logprob: -12.352363586425781
    7. ')' → logprob: -12.977363586425781
    8. '))
' → logprob: -13.102363586425781
    9. '))

' → logprob: -13.852363586425781
    10. ',' → logprob: -14.102363586425781

Token 2839: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004532061982899904
    2. '           ' → logprob: -5.6295318603515625
    3. '
' → logprob: -7.2545318603515625
    4. 'return' → logprob: -8.629531860351562
    5. '```' → logprob: -10.379531860351562
    6. ' return' → logprob: -12.504531860351562
    7. '<|end|>' → logprob: -12.879531860351562
    8. ')' → logprob: -13.629531860351562
    9. '               ' → logprob: -13.879531860351562
    10. '
' → logprob: -13.879531860351562

Token 2840: ' routes' (ID: 19749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3980850875377655
    2. 'routes' (adapté à ' routes') → logprob: -1.148085117340088
    3. 'route' → logprob: -4.898085117340088
    4. ' routes' → logprob: -6.398085117340088
    5. 'return' → logprob: -6.773085117340088
    6. '           ' → logprob: -7.523085117340088
    7. '
' → logprob: -8.77308464050293
    8. 'self' → logprob: -9.27308464050293
    9. ' route' → logprob: -10.77308464050293
    10. '(routes' → logprob: -10.77308464050293

Token 2841: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00027134892297908664
    2. '.' → logprob: -8.250271797180176
    3. '.app' → logprob: -12.000271797180176
    4. '.extend' → logprob: -12.750271797180176
    5. 'append' → logprob: -15.375271797180176
    6. '.ap' → logprob: -15.500271797180176
    7. '           ' → logprob: -15.750271797180176
    8. ').' → logprob: -16.25027084350586
    9. ' .' → logprob: -16.37527084350586
    10. '.
' → logprob: -16.50027084350586

Token 2842: '(Route' (ID: 197146)
  Prédit: '(Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Route' → logprob: -5.872261317563243e-05
    2. 'Route' → logprob: -9.750059127807617
    3. '	Route' → logprob: -15.375059127807617
    4. ' Route' → logprob: -16.375059127807617
    5. '<Route' → logprob: -18.250059127807617
    6. '(R' → logprob: -18.625059127807617
    7. '.Route' → logprob: -18.750059127807617
    8. '(' → logprob: -19.125059127807617
    9. '(
' → logprob: -19.875059127807617
    10. '   ' → logprob: -20.625059127807617

Token 2843: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.36574100604048e-06
    2. 'points' → logprob: -12.375004768371582
    3. ')' → logprob: -17.375003814697266
    4. ' points' → logprob: -17.375003814697266
    5. '	points' → logprob: -17.625003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '(' → logprob: -18.250003814697266
    8. '(point' → logprob: -18.500003814697266
    9. '.points' → logprob: -19.000003814697266
    10. '(p' → logprob: -19.125003814697266

Token 2844: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42814168334007263
    2. ')
' → logprob: -1.178141713142395
    3. '))
' → logprob: -3.6781415939331055
    4. '))' → logprob: -4.3031415939331055
    5. '       ' → logprob: -6.4281415939331055
    6. ')
' → logprob: -11.553141593933105
    7. '           ' → logprob: -13.053141593933105
    8. ')`
' → logprob: -13.303141593933105
    9. ')')
' → logprob: -13.928141593933105
    10. '   ' → logprob: -14.053141593933105

Token 2845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.494741632603109e-05
    2. 'return' → logprob: -9.50008487701416
    3. '   ' → logprob: -12.00008487701416
    4. '
' → logprob: -13.50008487701416
    5. '```' → logprob: -13.87508487701416
    6. ' return' → logprob: -14.12508487701416
    7. '	' → logprob: -15.12508487701416
    8. ' ' → logprob: -15.62508487701416
    9. '           ' → logprob: -15.87508487701416
    10. '      ' → logprob: -16.375085830688477

Token 2846: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6964132785797119
    2. 'return' (adapté à ' return') → logprob: -0.6964132785797119
    3. ' return' → logprob: -5.946413040161133
    4. '   ' → logprob: -7.946413040161133
    5. '
' → logprob: -8.321413040161133
    6. '	return' → logprob: -10.571413040161133
    7. '           ' → logprob: -11.946413040161133
    8. ' ' → logprob: -12.071413040161133
    9. '```' → logprob: -12.696413040161133
    10. '     ' → logprob: -13.571413040161133

Token 2847: ' routes' (ID: 19749)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'routes' → logprob: -2.7610454708337784e-05
    2. ' routes' → logprob: -10.500027656555176
    3. '(routes' → logprob: -19.00002670288086
    4. 'ranges' → logprob: -21.12502670288086
    5. 'r' → logprob: -22.12502670288086
    6. 'route' → logprob: -22.37502670288086
    7. 'self' → logprob: -22.87502670288086
    8. '.routes' → logprob: -22.87502670288086
    9. '[' → logprob: -23.37502670288086
    10. 'rates' → logprob: -23.62502670288086

Token 2848: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8583104014396667
    2. '<|end|>' → logprob: -1.2333104610443115
    3. '   ' → logprob: -1.6083104610443115
    4. '
' → logprob: -2.7333104610443115
    5. 'class' → logprob: -4.358310222625732
    6. '    
' → logprob: -5.983310222625732
    7. '```' → logprob: -6.358310222625732
    8. 'import' → logprob: -7.108310222625732
    9. '<|end|>' → logprob: -7.608310222625732
    10. '

' → logprob: -7.983310222625732

Token 2849: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06037282943725586
    2. 'if' → logprob: -3.060372829437256
    3. '
' → logprob: -4.810372829437256
    4. 'class' → logprob: -5.810372829437256
    5. '```' → logprob: -7.560372829437256
    6. 'import' → logprob: -10.185373306274414
    7. '

' → logprob: -12.185373306274414
    8. '<|end|>' → logprob: -12.310373306274414
    9. '  
' → logprob: -13.060373306274414
    10. ' if' → logprob: -13.310373306274414

Token 2850: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.06844424456357956
    2. 'Solver' → logprob: -3.81844425201416
    3. 'Meeting' → logprob: -4.19344425201416
    4. 'Solution' → logprob: -4.19344425201416
    5. 'Main' → logprob: -4.81844425201416
    6. 'Runner' → logprob: -6.31844425201416
    7. ' Output' → logprob: -6.44344425201416
    8. 'Route' → logprob: -7.44344425201416
    9. 'Result' → logprob: -7.44344425201416
    10. ' Solver' → logprob: -7.94344425201416

Token 2851: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -6.12258882028982e-05
    2. 'Handler' → logprob: -10.50006103515625
    3. ':
' → logprob: -11.37506103515625
    4. 'Printer' → logprob: -11.62506103515625
    5. '_writer' → logprob: -12.00006103515625
    6. 'Formatter' → logprob: -13.50006103515625
    7. 'ter' → logprob: -13.50006103515625
    8. 'writer' → logprob: -13.50006103515625
    9. 'Builder' → logprob: -14.12506103515625
    10. 'class' → logprob: -14.25006103515625

Token 2852: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28118589520454407
    2. ':
' → logprob: -1.4061858654022217
    3. ':

' → logprob: -11.6561861038208
    4. ':def' → logprob: -11.7811861038208
    5. '(object' → logprob: -12.0311861038208
    6. '():
' → logprob: -12.4061861038208
    7. '```' → logprob: -12.6561861038208
    8. ':
' → logprob: -13.4061861038208
    9. '():' → logprob: -14.2811861038208
    10. 'def' → logprob: -14.4061861038208

Token 2853: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044995155185461044
    2. 'class' → logprob: -3.544995069503784
    3. '```' → logprob: -4.419995307922363
    4. ':' → logprob: -6.294995307922363
    5. 'def' → logprob: -7.419995307922363
    6. ':
' → logprob: -7.419995307922363
    7. '``' → logprob: -11.419995307922363
    8. '):
' → logprob: -11.794995307922363
    9. '<class' → logprob: -12.669995307922363
    10. '
' → logprob: -12.669995307922363

Token 2854: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1330982744693756
    2. 'def' (adapté à ' def') → logprob: -2.1330983638763428
    3. '```' → logprob: -5.133098125457764
    4. '   ' → logprob: -8.383098602294922
    5. '@' → logprob: -11.758098602294922
    6. ' def' → logprob: -12.258098602294922
    7. 'staticmethod' → logprob: -12.508098602294922
    8. 'classmethod' → logprob: -12.758098602294922
    9. '``' → logprob: -13.633098602294922
    10. '
' → logprob: -13.758098602294922

Token 2855: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.5059724450111389
    2. 'def' → logprob: -1.0059723854064941
    3. '```' → logprob: -3.630972385406494
    4. ' def' → logprob: -6.380972385406494
    5. 'classmethod' → logprob: -6.380972385406494
    6. 'init' → logprob: -7.255972385406494
    7. 'python' → logprob: -7.755972385406494
    8. '__' → logprob: -8.505972862243652
    9. 'class' → logprob: -9.630972862243652
    10. '...' → logprob: -10.755972862243652

Token 2856: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.375
    3. ' init' → logprob: -16.75
    4. 'staticmethod' → logprob: -17.625
    5. '_init' → logprob: -17.75
    6. 'call' → logprob: -19.0
    7. 'int' → logprob: -19.875
    8. '__' → logprob: -20.125
    9. '.init' → logprob: -20.625
    10. '	init' → logprob: -20.625

Token 2857: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38251203298568726
    2. ':' → logprob: -2.132512092590332
    3. ':
' → logprob: -2.382512092590332
    4. '():
' → logprob: -3.257512092590332
    5. '   ' → logprob: -3.757512092590332
    6. '__' → logprob: -4.507512092590332
    7. '__(' → logprob: -5.132512092590332
    8. '):
' → logprob: -5.132512092590332
    9. '(' → logprob: -5.507512092590332
    10. '```' → logprob: -5.507512092590332

Token 2858: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1160349458805285e-05
    2. '):
' → logprob: -12.000011444091797
    3. '   ' → logprob: -13.250011444091797
    4. ' self' → logprob: -13.500011444091797
    5. ')' → logprob: -13.625011444091797
    6. '
' → logprob: -15.500011444091797
    7. '(self' → logprob: -16.250011444091797
    8. 'def' → logprob: -16.500011444091797
    9. '       ' → logprob: -16.750011444091797
    10. '	self' → logprob: -16.875011444091797

Token 2859: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011102055199444294
    2. '):' → logprob: -4.511102199554443
    3. '   ' → logprob: -10.261101722717285
    4. '():
' → logprob: -12.136101722717285
    5. '):
' → logprob: -12.386101722717285
    6. '):

' → logprob: -12.886101722717285
    7. '()):
' → logprob: -13.011101722717285
    8. ')' → logprob: -13.261101722717285
    9. 'def' → logprob: -13.511101722717285
    10. ')
' → logprob: -14.761101722717285

Token 2860: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06291983276605606
    2. 'def' → logprob: -2.812919855117798
    3. '```' → logprob: -7.312919616699219
    4. 'class' → logprob: -8.437919616699219
    5. ' def' → logprob: -9.937919616699219
    6. '
' → logprob: -11.062919616699219
    7. '	def' → logprob: -12.812919616699219
    8. '    
' → logprob: -14.687919616699219
    9. ')' → logprob: -15.312919616699219
    10. '       ' → logprob: -15.437919616699219

Token 2861: ' pass' (ID: 1853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10085684061050415
    2. '   ' → logprob: -2.3508567810058594
    3. 'pass' (adapté à ' pass') → logprob: -7.475856781005859
    4. ' def' → logprob: -9.72585678100586
    5. '
' → logprob: -11.10085678100586
    6. '```' → logprob: -12.22585678100586
    7. ' pass' → logprob: -12.97585678100586
    8. '	def' → logprob: -14.10085678100586
    9. ' ' → logprob: -15.35085678100586
    10. '	pass' → logprob: -16.22585678100586

Token 2862: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009771942859515548
    2. '
' → logprob: -7.375977039337158
    3. '    
' → logprob: -9.250977516174316
    4. '```' → logprob: -9.375977516174316
    5. 'def' → logprob: -9.625977516174316
    6. '<|end|>' → logprob: -9.750977516174316
    7. ' def' → logprob: -10.625977516174316
    8. ' ' → logprob: -12.125977516174316
    9. 'class' → logprob: -12.250977516174316
    10. '<|end|>' → logprob: -13.000977516174316

Token 2863: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12219022959470749
    2. 'def' → logprob: -2.872190237045288
    3. 'class' → logprob: -2.872190237045288
    4. '
' → logprob: -6.497189998626709
    5. '```' → logprob: -8.122190475463867
    6. '	def' → logprob: -10.497190475463867
    7. ' def' → logprob: -10.872190475463867
    8. '    
' → logprob: -11.747190475463867
    9. ' ' → logprob: -13.247190475463867
    10. 'indent' → logprob: -13.747190475463867

Token 2864: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.7432603272027336e-06
    2. ' def' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '
' → logprob: -18.250001907348633
    5. '	def' → logprob: -20.750001907348633
    6. 'class' → logprob: -20.750001907348633
    7. ' ' → logprob: -21.250001907348633
    8. '```' → logprob: -21.375001907348633
    9. 'de' → logprob: -21.625001907348633
    10. '@' → logprob: -22.250001907348633

Token 2865: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.023249205201864243
    2. 'print' → logprob: -3.7732491493225098
    3. ' write' → logprob: -13.148249626159668
    4. 'format' → logprob: -14.023249626159668
    5. 'solve' → logprob: -14.898249626159668
    6. 'println' → logprob: -15.523249626159668
    7. 'w' → logprob: -15.898249626159668
    8. 'output' → logprob: -16.14824867248535
    9. ' print' → logprob: -16.52324867248535
    10. 'def' → logprob: -17.02324867248535

Token 2866: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13486766815185547
    2. '(' → logprob: -2.1348676681518555
    3. '_result' → logprob: -5.5098676681518555
    4. '(
' → logprob: -6.2598676681518555
    5. '_line' → logprob: -7.0098676681518555
    6. '_results' → logprob: -7.5098676681518555
    7. 's' → logprob: -8.634867668151855
    8. '_solution' → logprob: -9.384867668151855
    9. '_me' → logprob: -10.134867668151855
    10. '(f' → logprob: -10.384867668151855

Token 2867: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009132515988312662
    2. '   ' → logprob: -7.125913143157959
    3. '(' → logprob: -9.875913619995117
    4. '       ' → logprob: -10.500913619995117
    5. '(
' → logprob: -11.125913619995117
    6. 'self' → logprob: -11.500913619995117
    7. 'def' → logprob: -13.125913619995117
    8. ' ' → logprob: -13.750913619995117
    9. '
' → logprob: -13.875913619995117
    10. ' (' → logprob: -14.125913619995117

Token 2868: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008402164094150066
    2. ',' → logprob: -5.133402347564697
    3. 'self' → logprob: -6.883402347564697
    4. '(' → logprob: -7.633402347564697
    5. ')(' → logprob: -7.633402347564697
    6. ' (' → logprob: -8.633401870727539
    7. ')' → logprob: -9.258401870727539
    8. '   ' → logprob: -9.633401870727539
    9. '       ' → logprob: -10.008401870727539
    10. '):
' → logprob: -10.633401870727539

Token 2869: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0019385118503123522
    2. ' results' → logprob: -6.251938343048096
    3. 'routes' → logprob: -12.251938819885254
    4. 'self' → logprob: -12.501938819885254
    5. 'answers' → logprob: -14.751938819885254
    6. '   ' → logprob: -15.001938819885254
    7. 'solutions' → logprob: -15.251938819885254
    8. 'result' → logprob: -15.751938819885254
    9. '	results' → logprob: -15.876938819885254
    10. '(results' → logprob: -16.751937866210938

Token 2870: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005648265941999853
    2. '   ' → logprob: -8.500564575195312
    3. '):
' → logprob: -9.125564575195312
    4. '(' → logprob: -9.250564575195312
    5. 'self' → logprob: -9.625564575195312
    6. '       ' → logprob: -10.625564575195312
    7. '```' → logprob: -11.125564575195312
    8. ')' → logprob: -11.375564575195312
    9. ' (' → logprob: -11.375564575195312
    10. '):' → logprob: -11.625564575195312

Token 2871: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.008858839981257915
    2. 'self' → logprob: -4.758858680725098
    3. ' List' → logprob: -8.508858680725098
    4. ')' → logprob: -11.008858680725098
    5. 'list' → logprob: -12.008858680725098
    6. '[List' → logprob: -12.258858680725098
    7. ' self' → logprob: -12.633858680725098
    8. '
' → logprob: -12.758858680725098
    9. '(self' → logprob: -12.883858680725098
    10. 'Iterable' → logprob: -13.508858680725098

Token 2872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '[str' → logprob: -14.000001907348633
    3. 'float' → logprob: -14.000001907348633
    4. '[List' → logprob: -14.500001907348633
    5. '[
' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '):
' → logprob: -19.000001907348633
    8. ')' → logprob: -19.250001907348633
    9. ',float' → logprob: -19.250001907348633
    10. '[int' → logprob: -19.625001907348633

Token 2873: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1517960956552997e-05
    2. 'str' → logprob: -12.500011444091797
    3. 'Optional' → logprob: -12.625011444091797
    4. 'flo' → logprob: -12.875011444091797
    5. ' float' → logprob: -14.125011444091797
    6. '[' → logprob: -14.500011444091797
    7. '(float' → logprob: -15.750011444091797
    8. '```' → logprob: -16.000011444091797
    9. 'f' → logprob: -16.875011444091797
    10. '   ' → logprob: -17.125011444091797

Token 2874: '])' (ID: 4636)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16144676506519318
    2. ')' → logprob: -1.9114468097686768
    3. '):' → logprob: -7.286446571350098
    4. ']):
' → logprob: -8.161446571350098
    5. '   ' → logprob: -9.036446571350098
    6. '])' → logprob: -9.911446571350098
    7. '):
' → logprob: -10.411446571350098
    8. '       ' → logprob: -10.911446571350098
    9. ' ):
' → logprob: -11.161446571350098
    10. ' )' → logprob: -11.536446571350098

Token 2875: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14345405995845795
    2. '(self' → logprob: -2.643454074859619
    3. '   ' → logprob: -2.893454074859619
    4. ':
' → logprob: -5.643454074859619
    5. ':' → logprob: -6.768454074859619
    6. '(' → logprob: -7.518454074859619
    7. '```' → logprob: -7.643454074859619
    8. '):
' → logprob: -7.893454074859619
    9. 'self' → logprob: -8.393453598022461
    10. 'def' → logprob: -8.893453598022461

Token 2876: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.08327911049127579
    2. 'print' → logprob: -2.5832791328430176
    3. ' None' → logprob: -5.958279132843018
    4. '   ' → logprob: -6.833279132843018
    5. '
' → logprob: -8.20827865600586
    6. 'def' → logprob: -8.45827865600586
    7. 'for' → logprob: -9.58327865600586
    8. ' ' → logprob: -9.95827865600586
    9. 'list' → logprob: -11.20827865600586
    10. '       ' → logprob: -11.20827865600586

Token 2877: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7533136606216431
    2. '       ' → logprob: -1.003313660621643
    3. ':
' → logprob: -1.878313660621643
    4. ':' → logprob: -5.2533135414123535
    5. '```' → logprob: -5.8783135414123535
    6. '):
' → logprob: -7.0033135414123535
    7. '():
' → logprob: -8.503314018249512
    8. '
' → logprob: -9.253314018249512
    9. ',' → logprob: -9.253314018249512
    10. '<|end|>' → logprob: -9.503314018249512

Token 2878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010592726175673306
    2. '   ' → logprob: -9.250105857849121
    3. '```' → logprob: -12.000105857849121
    4. 'for' → logprob: -12.750105857849121
    5. ' for' → logprob: -15.625105857849121
    6. '
' → logprob: -16.250106811523438
    7. '	' → logprob: -16.500106811523438
    8. '           ' → logprob: -16.750106811523438
    9. '[' → logprob: -17.250106811523438
    10. '`' → logprob: -17.875106811523438

Token 2879: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2551157474517822
    2. '       ' → logprob: -1.5051157474517822
    3. ' for' → logprob: -5.755115509033203
    4. '   ' → logprob: -11.505115509033203
    5. '```' → logprob: -12.380115509033203
    6. '	for' → logprob: -14.380115509033203
    7. '
' → logprob: -16.130115509033203
    8. 'import' → logprob: -17.630115509033203
    9. 'print' → logprob: -17.755115509033203
    10. '``' → logprob: -18.005115509033203

Token 2880: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03200218826532364
    2. 'result' → logprob: -3.7820022106170654
    3. ' res' → logprob: -4.782001972198486
    4. 'r' → logprob: -8.782002449035645
    5. ' result' → logprob: -9.157002449035645
    6. 'distance' → logprob: -10.157002449035645
    7. 'dist' → logprob: -10.407002449035645
    8. '   ' → logprob: -11.782002449035645
    9. ' dist' → logprob: -13.282002449035645
    10. ' distance' → logprob: -14.032002449035645

Token 2881: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02122405357658863
    2. '           ' → logprob: -5.396224021911621
    3. ':' → logprob: -5.646224021911621
    4. 'print' → logprob: -5.646224021911621
    5. ':
' → logprob: -5.896224021911621
    6. 'in' → logprob: -6.146224021911621
    7. '       ' → logprob: -6.646224021911621
    8. 'es' → logprob: -7.146224021911621
    9. 'ult' → logprob: -7.396224021911621
    10. '   ' → logprob: -7.521224021911621

Token 2882: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0005715019651688635
    2. 'print' → logprob: -8.375571250915527
    3. ' results' → logprob: -8.625571250915527
    4. '(results' → logprob: -9.375571250915527
    5. 'res' → logprob: -9.625571250915527
    6. '   ' → logprob: -12.375571250915527
    7. 'result' → logprob: -12.500571250915527
    8. 'f' → logprob: -13.625571250915527
    9. '
' → logprob: -14.500571250915527
    10. '	results' → logprob: -15.375571250915527

Token 2883: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7794363498687744
    2. ':
' → logprob: -1.1544363498687744
    3. '       ' → logprob: -1.9044363498687744
    4. 'print' → logprob: -3.1544363498687744
    5. ':' → logprob: -3.4044363498687744
    6. ' print' → logprob: -7.779436111450195
    7. '```' → logprob: -8.404436111450195
    8. ',' → logprob: -8.904436111450195
    9. '.print' → logprob: -9.154436111450195
    10. '   ' → logprob: -9.279436111450195

Token 2884: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31700026988983154
    2. '           ' → logprob: -1.3170002698898315
    3. 'print' → logprob: -5.817000389099121
    4. ' print' → logprob: -7.317000389099121
    5. '   ' → logprob: -10.067000389099121
    6. '```' → logprob: -10.692000389099121
    7. '
' → logprob: -10.942000389099121
    8. '	       ' → logprob: -12.942000389099121
    9. '	print' → logprob: -13.817000389099121
    10. '`' → logprob: -14.442000389099121

Token 2885: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3663626305060461e-05
    2. ' print' → logprob: -11.25001335144043
    3. '       ' → logprob: -14.50001335144043
    4. '           ' → logprob: -16.12501335144043
    5. '```' → logprob: -17.75001335144043
    6. 'if' → logprob: -18.37501335144043
    7. '   ' → logprob: -18.87501335144043
    8. '
' → logprob: -20.00001335144043
    9. '	print' → logprob: -20.00001335144043
    10. 'printf' → logprob: -21.25001335144043

Token 2886: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.158350151963532e-05
    2. ' print' → logprob: -10.500061988830566
    3. 'if' → logprob: -10.750061988830566
    4. '           ' → logprob: -11.500061988830566
    5. '       ' → logprob: -13.000061988830566
    6. '   ' → logprob: -16.37506103515625
    7. '```' → logprob: -16.75006103515625
    8. ' if' → logprob: -18.12506103515625
    9. 'import' → logprob: -18.87506103515625
    10. '	print' → logprob: -19.87506103515625

Token 2887: ' with' (ID: 483)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001050911727361381
    2. ' print' → logprob: -7.50105094909668
    3. '       ' → logprob: -8.00105094909668
    4. '           ' → logprob: -8.75105094909668
    5. '   ' → logprob: -12.50105094909668
    6. 'if' → logprob: -15.75105094909668
    7. 'import' → logprob: -16.12605094909668
    8. '	print' → logprob: -16.12605094909668
    9. '```' → logprob: -16.12605094909668
    10. 'printf' → logprob: -16.75105094909668

Token 2888: ' no' (ID: 860)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03391008451581001
    2. 'f' → logprob: -4.033910274505615
    3. '9' → logprob: -5.158910274505615
    4. '7' → logprob: -5.533910274505615
    5. 'print' → logprob: -5.908910274505615
    6. '12' → logprob: -6.533910274505615
    7. '"{' → logprob: -7.658910274505615
    8. '8' → logprob: -7.783910274505615
    9. '10' → logprob: -8.158909797668457
    10. 'six' → logprob: -8.408909797668457

Token 2889: ' more' (ID: 945)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.1810002475976944
    2. 'ex' → logprob: -2.681000232696533
    3. 'more' → logprob: -2.931000232696533
    4. 'decimal' → logprob: -4.056000232696533
    5. ' trailing' → logprob: -4.556000232696533
    6. 'tr' → logprob: -5.306000232696533
    7. 'additional' → logprob: -6.056000232696533
    8. 'print' → logprob: -6.181000232696533
    9. ' extra' → logprob: -6.181000232696533
    10. 'scient' → logprob: -6.806000232696533

Token 2890: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.16059820353984833
    2. ' than' → logprob: -1.9105981588363647
    3. 'digits' → logprob: -8.910597801208496
    4. '   ' → logprob: -9.285597801208496
    5. 'decimal' → logprob: -10.160597801208496
    6. '    ' → logprob: -10.535597801208496
    7. '_than' → logprob: -11.535597801208496
    8. '      ' → logprob: -11.535597801208496
    9. '       ' → logprob: -11.910597801208496
    10. '     ' → logprob: -12.035597801208496

Token 2891: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3460855484008789
    2. '7' → logprob: -2.096085548400879
    3. '8' → logprob: -2.846085548400879
    4. '9' → logprob: -2.846085548400879
    5. '10' → logprob: -2.971085548400879
    6. '12' → logprob: -6.346085548400879
    7. '3' → logprob: -8.596085548400879
    8. '15' → logprob: -9.346085548400879
    9. '4' → logprob: -9.846085548400879
    10. '5' → logprob: -9.971085548400879

Token 2892: '0' (ID: 15)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7055268883705139
    2. '.' → logprob: -1.4555268287658691
    3. '7' → logprob: -1.5805268287658691
    4. '10' → logprob: -3.330526828765869
    5. '8' → logprob: -3.580526828765869
    6. '9' → logprob: -5.955526828765869
    7. '12' → logprob: -7.580526828765869
    8. '1' → logprob: -9.580527305603027
    9. '15' → logprob: -9.830527305603027
    10. '0' → logprob: -10.080527305603027

Token 2893: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0280383548888494e-06
    2. ' .' → logprob: -14.875000953674316
    3. ''.' → logprob: -15.625000953674316
    4. '".' → logprob: -15.875000953674316
    5. '       ' → logprob: -16.625001907348633
    6. '4' → logprob: -17.125001907348633
    7. '
' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '6' → logprob: -17.375001907348633
    10. '`.' → logprob: -17.750001907348633

Token 2894: '01' (ID: 2290)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0334242507815361
    2. '7' → logprob: -3.533424139022827
    3. '8' → logprob: -5.908424377441406
    4. '4' → logprob: -7.783424377441406
    5. '9' → logprob: -8.783424377441406
    6. '.' → logprob: -8.908424377441406
    7. '5' → logprob: -9.408424377441406
    8. '06' → logprob: -9.783424377441406
    9. '3' → logprob: -9.908424377441406
    10. '10' → logprob: -10.908424377441406

Token 2895: ' error' (ID: 2915)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00822127889841795
    2. ':' → logprob: -6.00822114944458
    3. '       ' → logprob: -6.50822114944458
    4. '{' → logprob: -6.88322114944458
    5. '(f' → logprob: -6.88322114944458
    6. '           ' → logprob: -7.75822114944458
    7. ':.' → logprob: -7.88322114944458
    8. '```' → logprob: -7.88322114944458
    9. '
' → logprob: -8.133221626281738
    10. 'print' → logprob: -8.383221626281738

Token 2896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038223374634981155
    2. '           ' → logprob: -3.2882232666015625
    3. 'print' → logprob: -9.163223266601562
    4. ',' → logprob: -10.663223266601562
    5. '               ' → logprob: -10.788223266601562
    6. ':' → logprob: -12.163223266601562
    7. '
' → logprob: -12.163223266601562
    8. ' print' → logprob: -12.163223266601562
    9. '```' → logprob: -12.288223266601562
    10. '   ' → logprob: -12.288223266601562

Token 2897: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014399951323866844
    2. '           ' → logprob: -4.264400005340576
    3. 'print' → logprob: -8.889399528503418
    4. ' print' → logprob: -10.139399528503418
    5. '```' → logprob: -10.139399528503418
    6. '   ' → logprob: -11.264399528503418
    7. '               ' → logprob: -12.389399528503418
    8. '`' → logprob: -13.764399528503418
    9. '
' → logprob: -14.639399528503418
    10. '{' → logprob: -15.889399528503418

Token 2898: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5047412514686584
    2. 'print' (adapté à ' print') → logprob: -1.0047411918640137
    3. '           ' → logprob: -3.7547411918640137
    4. ' print' → logprob: -5.004741191864014
    5. '   ' → logprob: -9.879741668701172
    6. '```' → logprob: -10.879741668701172
    7. '               ' → logprob: -11.129741668701172
    8. '	print' → logprob: -15.004741668701172
    9. '                   ' → logprob: -15.504741668701172
    10. '`' → logprob: -15.504741668701172

Token 2899: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3133440613746643
    2. 'f' → logprob: -1.3133440017700195
    3. '{' → logprob: -9.56334400177002
    4. ' f' → logprob: -11.93834400177002
    5. 'round' → logprob: -12.81334400177002
    6. '(round' → logprob: -14.06334400177002
    7. '"{' → logprob: -14.43834400177002
    8. 'format' → logprob: -14.56334400177002
    9. '	f' → logprob: -14.93834400177002
    10. '[f' → logprob: -15.43834400177002

Token 2900: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.04859338700771332
    2. '{' → logprob: -3.048593282699585
    3. ''{' → logprob: -12.298593521118164
    4. 'f' → logprob: -14.173593521118164
    5. '0' → logprob: -14.548593521118164
    6. '{"' → logprob: -15.548593521118164
    7. '("{' → logprob: -16.798593521118164
    8. '"' → logprob: -17.298593521118164
    9. '(f' → logprob: -17.923593521118164
    10. '{x' → logprob: -18.673593521118164

Token 2901: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -16.625
    3. 'round' → logprob: -16.75
    4. '(res' → logprob: -20.125
    5. 'result' → logprob: -20.375
    6. '0' → logprob: -20.5
    7. '	res' → logprob: -21.125
    8. '$res' → logprob: -21.625
    9. 'float' → logprob: -22.25
    10. '_res' → logprob: -22.75

Token 2902: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -12.75000286102295
    3. ' :.' → logprob: -14.75000286102295
    4. ':' → logprob: -19.250003814697266
    5. ' .' → logprob: -20.125003814697266
    6. '0' → logprob: -20.625003814697266
    7. '{' → logprob: -21.125003814697266
    8. '   ' → logprob: -21.125003814697266
    9. '[' → logprob: -22.500003814697266
    10. ':
' → logprob: -22.625003814697266

Token 2903: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002334568416699767
    2. '6' → logprob: -9.00023365020752
    3. '4' → logprob: -10.12523365020752
    4. '02' → logprob: -10.25023365020752
    5. '5' → logprob: -11.25023365020752
    6. '3' → logprob: -11.25023365020752
    7. '8' → logprob: -12.75023365020752
    8. '7' → logprob: -13.25023365020752
    9. '{' → logprob: -13.62523365020752
    10. '```' → logprob: -14.12523365020752

Token 2904: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.2729995988775045e-06
    2. 'g' → logprob: -12.000006675720215
    3. '6' → logprob: -19.7500057220459
    4. '```' → logprob: -21.1250057220459
    5. '}' → logprob: -21.2500057220459
    6. 'lf' → logprob: -22.2500057220459
    7. '
' → logprob: -22.3750057220459
    8. '	f' → logprob: -23.0000057220459
    9. '{' → logprob: -23.3750057220459
    10. '4' → logprob: -23.7500057220459

Token 2905: '}".' (ID: 53576)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0003005464968737215
    2. '")' → logprob: -8.250300407409668
    3. '}")
' → logprob: -10.250300407409668
    4. ')")' → logprob: -13.000300407409668
    5. '}' → logprob: -14.000300407409668
    6. '}")
' → logprob: -15.000300407409668
    7. '}"' → logprob: -15.625300407409668
    8. ' }' → logprob: -16.250301361083984
    9. '}")

' → logprob: -16.500301361083984
    10. '})' → logprob: -16.500301361083984

Token 2906: 'rstrip' (ID: 180429)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.41613397002220154
    2. 'f' → logprob: -1.291133999824524
    3. ')' → logprob: -3.0411338806152344
    4. 'rstrip' → logprob: -4.291133880615234
    5. '"' → logprob: -6.666133880615234
    6. '4' → logprob: -6.916133880615234
    7. '")' → logprob: -7.541133880615234
    8. '6' → logprob: -8.541133880615234
    9. '0' → logprob: -8.666133880615234
    10. 'g' → logprob: -9.041133880615234

Token 2907: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0035841530188918114
    2. '0' → logprob: -6.128584384918213
    3. '("' → logprob: -6.628584384918213
    4. ''' → logprob: -9.753583908081055
    5. '()' → logprob: -11.753583908081055
    6. '"' → logprob: -12.253583908081055
    7. 'rstrip' → logprob: -12.878583908081055
    8. '(' → logprob: -14.253583908081055
    9. '('.')' → logprob: -14.378583908081055
    10. '('.' → logprob: -14.753583908081055

Token 2908: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ''' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.25000286102295
    4. '('' → logprob: -14.25000286102295
    5. '012' → logprob: -15.50000286102295
    6. '00' → logprob: -16.500003814697266
    7. '"' → logprob: -18.500003814697266
    8. '000' → logprob: -18.625003814697266
    9. ' zeros' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 2909: '').' (ID: 3426)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9475557208061218
    2. '0' → logprob: -1.4475557804107666
    3. ').' → logprob: -1.5725557804107666
    4. '.' → logprob: -2.1975557804107666
    5. ' .' → logprob: -3.5725557804107666
    6. '.rstrip' → logprob: -4.3225555419921875
    7. '))' → logprob: -5.1975555419921875
    8. ' )' → logprob: -5.5725555419921875
    9. ' ).' → logprob: -5.6975555419921875
    10. 'rstrip' → logprob: -6.9475555419921875

Token 2910: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -8.602024900028482e-05
    2. 'strip' → logprob: -9.500085830688477
    3. 'replace' → logprob: -11.750085830688477
    4. 'format' → logprob: -12.875085830688477
    5. '.rstrip' → logprob: -14.875085830688477
    6. 'trim' → logprob: -15.125085830688477
    7. 'remove' → logprob: -17.125085830688477
    8. 'l' → logprob: -17.500085830688477
    9. 'rem' → logprob: -18.000085830688477
    10. 'split' → logprob: -18.375085830688477

Token 2911: '('.')' (ID: 194651)
  Prédit: '('.')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('.')' → logprob: -0.014525912702083588
    2. '('.' → logprob: -4.264525890350342
    3. '('' → logprob: -8.0145263671875
    4. '(".' → logprob: -11.5145263671875
    5. ''.' → logprob: -11.8895263671875
    6. '.' → logprob: -12.1395263671875
    7. '('.');
' → logprob: -12.1395263671875
    8. '('.')[' → logprob: -12.8895263671875
    9. '("."' → logprob: -14.3895263671875
    10. '(' → logprob: -14.5145263671875

Token 2912: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002856497303582728
    2. '")' → logprob: -8.375286102294922
    3. '())' → logprob: -10.500286102294922
    4. ')")' → logprob: -11.375286102294922
    5. '       ' → logprob: -12.375286102294922
    6. '()' → logprob: -12.750286102294922
    7. ')
' → logprob: -13.000286102294922
    8. '')' → logprob: -13.250286102294922
    9. '`)' → logprob: -13.625286102294922
    10. '})' → logprob: -13.875286102294922

Token 2913: ' '.'' (ID: 64762)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.020277690142393112
    2. ''.' → logprob: -4.145277500152588
    3. ' res' → logprob: -5.645277500152588
    4. '.' → logprob: -7.895277500152588
    5. '"."' → logprob: -9.020277976989746
    6. '	res' → logprob: -10.020277976989746
    7. '(res' → logprob: -10.020277976989746
    8. 'str' → logprob: -10.270277976989746
    9. 'f' → logprob: -10.270277976989746
    10. 'not' → logprob: -11.520277976989746

Token 2914: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31399664282798767
    2. 'in' → logprob: -1.31399667263031
    3. '0' → logprob: -7.4389967918396
    4. 'else' → logprob: -9.438996315002441
    5. '.' → logprob: -9.938996315002441
    6. 'f' → logprob: -12.188996315002441
    7. 'print' → logprob: -12.313996315002441
    8. 'res' → logprob: -13.188996315002441
    9. ' else' → logprob: -14.063996315002441
    10. ' ' → logprob: -14.063996315002441

Token 2915: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004133253358304501
    2. 'res' → logprob: -5.504133224487305
    3. 'str' → logprob: -10.254133224487305
    4. 'print' → logprob: -11.754133224487305
    5. '{' → logprob: -12.129133224487305
    6. ' f' → logprob: -12.629133224487305
    7. '(f' → logprob: -13.879133224487305
    8. '"{' → logprob: -14.254133224487305
    9. ' res' → logprob: -14.504133224487305
    10. '   ' → logprob: -14.879133224487305

Token 2916: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.25513243675231934
    2. '"{' → logprob: -1.5051324367523193
    3. 'f' → logprob: -5.755132675170898
    4. 'res' → logprob: -10.755132675170898
    5. ''{' → logprob: -12.380132675170898
    6. ' f' → logprob: -12.880132675170898
    7. '(f' → logprob: -13.380132675170898
    8. '{"' → logprob: -14.130132675170898
    9. '       ' → logprob: -14.630132675170898
    10. '           ' → logprob: -15.255132675170898

Token 2917: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.128163257315464e-07
    2. ' res' → logprob: -15.75
    3. '{' → logprob: -16.375
    4. '(res' → logprob: -19.25
    5. 'f' → logprob: -20.375
    6. '           ' → logprob: -20.75
    7. '	res' → logprob: -20.875
    8. '$res' → logprob: -21.375
    9. '   ' → logprob: -22.375
    10. '{
' → logprob: -23.0

Token 2918: ':.' (ID: 27474)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.45107007026672363
    2. ':.' → logprob: -1.0760700702667236
    3. 'res' → logprob: -3.9510700702667236
    4. '"{' → logprob: -6.2010698318481445
    5. '(res' → logprob: -7.8260698318481445
    6. 'f' → logprob: -8.951069831848145
    7. ' res' → logprob: -9.576069831848145
    8. ' :.' → logprob: -9.576069831848145
    9. '   ' → logprob: -10.201069831848145
    10. ':f' → logprob: -10.576069831848145

Token 2919: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1637164789135568e-05
    2. '{' → logprob: -11.375011444091797
    3. 'f' → logprob: -17.125011444091797
    4. '```' → logprob: -17.500011444091797
    5. '010' → logprob: -19.000011444091797
    6. ' ' → logprob: -19.250011444091797
    7. '0' → logprob: -19.625011444091797
    8. '{
' → logprob: -20.125011444091797
    9. '   ' → logprob: -20.250011444091797
    10. '
' → logprob: -20.500011444091797

Token 2920: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.27099974633893e-05
    2. '{' → logprob: -12.250012397766113
    3. '}' → logprob: -13.250012397766113
    4. '10' → logprob: -13.375012397766113
    5. '```' → logprob: -13.500012397766113
    6. ':f' → logprob: -14.000012397766113
    7. '6' → logprob: -14.875012397766113
    8. '   ' → logprob: -15.250012397766113
    9. '.f' → logprob: -15.250012397766113
    10. ' f' → logprob: -15.500012397766113

Token 2921: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.012002474628388882
    2. '}")' → logprob: -4.762002468109131
    3. 'f' → logprob: -6.137002468109131
    4. 'res' → logprob: -8.012002944946289
    5. '{' → logprob: -8.387002944946289
    6. '}'' → logprob: -9.012002944946289
    7. '}".' → logprob: -9.012002944946289
    8. '}")
' → logprob: -9.637002944946289
    9. ':.' → logprob: -10.012002944946289
    10. '"' → logprob: -10.012002944946289

Token 2922: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.17986004054546356
    2. 'else' → logprob: -1.80485999584198
    3. ')' → logprob: -9.80486011505127
    4. '           ' → logprob: -10.30486011505127
    5. '```' → logprob: -12.17986011505127
    6. '       ' → logprob: -12.30486011505127
    7. '            ' → logprob: -12.42986011505127
    8. '        ' → logprob: -12.55486011505127
    9. '               ' → logprob: -13.30486011505127
    10. '          ' → logprob: -13.42986011505127

Token 2923: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01270364597439766
    2. 'str' → logprob: -4.7627034187316895
    3. ' f' → logprob: -5.5127034187316895
    4. ' str' → logprob: -10.137703895568848
    5. '{' → logprob: -13.387703895568848
    6. '(f' → logprob: -13.512703895568848
    7. 'format' → logprob: -13.887703895568848
    8. 'print' → logprob: -14.012703895568848
    9. '"{' → logprob: -14.512703895568848
    10. '   ' → logprob: -14.887703895568848

Token 2924: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.06204891577363014
    2. '{' → logprob: -2.81204891204834
    3. 'res' → logprob: -9.43704891204834
    4. '(res' → logprob: -14.18704891204834
    5. ''{' → logprob: -14.43704891204834
    6. '"' → logprob: -15.93704891204834
    7. '{"' → logprob: -16.687049865722656
    8. ' res' → logprob: -17.187049865722656
    9. '{
' → logprob: -18.062049865722656
    10. '$res' → logprob: -18.062049865722656

Token 2925: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.088346359931165e-07
    2. ' res' → logprob: -14.500000953674316
    3. '{' → logprob: -16.25
    4. 'int' → logprob: -16.25
    5. '(res' → logprob: -17.25
    6. '$res' → logprob: -18.25
    7. '	res' → logprob: -18.375
    8. 'f' → logprob: -18.375
    9. 'float' → logprob: -19.0
    10. '"{' → logprob: -19.625

Token 2926: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.6835776567459106
    2. '{' → logprob: -1.1835776567459106
    3. 'res' → logprob: -1.6835776567459106
    4. '"{' → logprob: -6.433577537536621
    5. '.res' → logprob: -7.433577537536621
    6. '(res' → logprob: -7.683577537536621
    7. ' res' → logprob: -8.058577537536621
    8. '.' → logprob: -9.558577537536621
    9. '{
' → logprob: -9.933577537536621
    10. ':{' → logprob: -10.433577537536621

Token 2927: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. 'f' → logprob: -13.875000953674316
    3. '```' → logprob: -16.250001907348633
    4. '{' → logprob: -16.875001907348633
    5. '6' → logprob: -17.250001907348633
    6. '0' → logprob: -17.375001907348633
    7. '}' → logprob: -18.500001907348633
    8. '1' → logprob: -19.000001907348633
    9. 'print' → logprob: -19.125001907348633
    10. 'g' → logprob: -19.250001907348633

Token 2928: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00011236425780225545
    2. '.' → logprob: -9.250112533569336
    3. '10' → logprob: -11.625112533569336
    4. '.f' → logprob: -12.375112533569336
    5. ' f' → logprob: -14.125112533569336
    6. 'g' → logprob: -14.625112533569336
    7. '```' → logprob: -14.625112533569336
    8. '{' → logprob: -14.875112533569336
    9. ':f' → logprob: -15.000112533569336
    10. 'print' → logprob: -16.000112533569336

Token 2929: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.00012964145571459085
    2. '}"' → logprob: -9.375129699707031
    3. '")' → logprob: -10.750129699707031
    4. '}")
' → logprob: -11.125129699707031
    5. '}' → logprob: -12.125129699707031
    6. ')")' → logprob: -14.375129699707031
    7. '})' → logprob: -14.500129699707031
    8. '}".' → logprob: -14.500129699707031
    9. '}")

' → logprob: -14.750129699707031
    10. '}")
' → logprob: -15.125129699707031

Token 2930: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016611411410849541
    2. '")' → logprob: -9.875165939331055
    3. '())' → logprob: -10.125165939331055
    4. ')
' → logprob: -10.375165939331055
    5. ')")' → logprob: -10.875165939331055
    6. '       ' → logprob: -11.625165939331055
    7. '))' → logprob: -12.375165939331055
    8. '           ' → logprob: -12.500165939331055
    9. '()' → logprob: -12.875165939331055
    10. ')}' → logprob: -14.250165939331055

Token 2931: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10025670379400253
    2. 'def' → logprob: -2.3502566814422607
    3. '```' → logprob: -10.10025691986084
    4. '
' → logprob: -11.97525691986084
    5. ' if' → logprob: -13.35025691986084
    6. 'import' → logprob: -14.72525691986084
    7. '    
' → logprob: -15.22525691986084
    8. '#' → logprob: -15.35025691986084
    9. '  
' → logprob: -16.350255966186523
    10. '        
' → logprob: -16.600255966186523

Token 2932: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031781906727701426
    2. ' main' → logprob: -5.753178119659424
    3. 'run' → logprob: -14.753178596496582
    4. 'solve' → logprob: -17.378177642822266
    5. ' run' → logprob: -19.003177642822266
    6. '	main' → logprob: -19.128177642822266
    7. 'process' → logprob: -20.003177642822266
    8. ' solve' → logprob: -20.628177642822266
    9. '```' → logprob: -21.878177642822266
    10. 'read' → logprob: -22.003177642822266

Token 2933: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018176045268774033
    2. '():
' → logprob: -4.018176078796387
    3. '()' → logprob: -10.643176078796387
    4. '():
' → logprob: -13.518176078796387
    5. '():

' → logprob: -14.643176078796387
    6. ' ():' → logprob: -15.768176078796387
    7. '()>' → logprob: -16.51817512512207
    8. 'def' → logprob: -16.76817512512207
    9. '().' → logprob: -17.64317512512207
    10. '();' → logprob: -17.64317512512207

Token 2934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007574541959911585
    2. 'reader' → logprob: -7.625757217407227
    3. 'import' → logprob: -8.625757217407227
    4. 'routes' → logprob: -10.000757217407227
    5. ' reader' → logprob: -11.250757217407227
    6. 'input' → logprob: -11.750757217407227
    7. '	reader' → logprob: -11.875757217407227
    8. '   ' → logprob: -12.000757217407227
    9. 'inputs' → logprob: -12.750757217407227
    10. '```' → logprob: -13.250757217407227

Token 2935: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' (adapté à ' reader') → logprob: -0.00252512632869184
    2. '   ' → logprob: -6.002525329589844
    3. 'input' → logprob: -10.752525329589844
    4. 'ir' → logprob: -11.002525329589844
    5. ' reader' → logprob: -11.752525329589844
    6. 'import' → logprob: -12.627525329589844
    7. '	reader' → logprob: -15.752525329589844
    8. 'read' → logprob: -17.377525329589844
    9. 'inputs' → logprob: -17.502525329589844
    10. '_reader' → logprob: -18.002525329589844

Token 2936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11309977620840073
    2. ' =' → logprob: -2.2380998134613037
    3. '()' → logprob: -8.363100051879883
    4. '   ' → logprob: -10.738100051879883
    5. '().' → logprob: -12.238100051879883
    6. '=
' → logprob: -12.363100051879883
    7. '.' → logprob: -12.488100051879883
    8. '()
' → logprob: -13.113100051879883
    9. '<|end|>' → logprob: -13.738100051879883
    10. ')' → logprob: -14.113100051879883

Token 2937: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -6.704273118884885e-07
    2. ' Input' → logprob: -14.250000953674316
    3. '	Input' → logprob: -20.375
    4. '_input' → logprob: -21.25
    5. '<Input' → logprob: -22.25
    6. '\Input' → logprob: -22.25
    7. 'input' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. '_Input' → logprob: -22.625
    10. 'Output' → logprob: -24.0

Token 2938: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.0001242772996192798
    2. 'Writer' → logprob: -9.000123977661133
    3. 'reader' → logprob: -14.500123977661133
    4. '_reader' → logprob: -15.000123977661133
    5. 'Readers' → logprob: -17.500123977661133
    6. '.Reader' → logprob: -18.375123977661133
    7. 'Handler' → logprob: -18.750123977661133
    8. '   ' → logprob: -19.125123977661133
    9. '-reader' → logprob: -20.375123977661133
    10. '=' → logprob: -20.625123977661133

Token 2939: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004788128426298499
    2. 'routes' → logprob: -8.000478744506836
    3. '
' → logprob: -9.250478744506836
    4. '    
' → logprob: -10.375478744506836
    5. '(routes' → logprob: -12.125478744506836
    6. '```' → logprob: -13.250478744506836
    7. 'def' → logprob: -13.375478744506836
    8. '  ' → logprob: -13.375478744506836
    9. 'writer' → logprob: -13.375478744506836
    10. 'reader' → logprob: -13.875478744506836

Token 2940: '   ' (ID: 271)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'routes' → logprob: -0.4294470250606537
    2. '   ' → logprob: -1.179447054862976
    3. 'writer' → logprob: -3.1794469356536865
    4. 'results' → logprob: -9.929447174072266
    5. '```' → logprob: -10.929447174072266
    6. '``' → logprob: -13.304447174072266
    7. ' routes' → logprob: -13.804447174072266
    8. 'outputs' → logprob: -13.929447174072266
    9. 'router' → logprob: -14.054447174072266
    10. 'route' → logprob: -14.429447174072266

Token 2941: ' routes' (ID: 19749)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'routes' (adapté à ' routes') → logprob: -0.0009920800803229213
    2. 'writer' → logprob: -7.000992298126221
    3. '   ' → logprob: -9.750991821289062
    4. 'results' → logprob: -10.750991821289062
    5. 'outputs' → logprob: -14.625991821289062
    6. ' routes' → logprob: -15.375991821289062
    7. '```' → logprob: -16.875991821289062
    8. 'datasets' → logprob: -17.000991821289062
    9. 'route' → logprob: -17.500991821289062
    10. 'reader' → logprob: -18.000991821289062

Token 2942: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761870741844177
    2. '=' → logprob: -0.8261870741844177
    3. '   ' → logprob: -8.451187133789062
    4. 's' → logprob: -10.451187133789062
    5. 'for' → logprob: -13.326187133789062
    6. '.' → logprob: -14.201187133789062
    7. ':' → logprob: -14.701187133789062
    8. ' ' → logprob: -15.326187133789062
    9. '=r' → logprob: -15.326187133789062
    10. '=
' → logprob: -15.576187133789062

Token 2943: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.0002036595979006961
    2. ' reader' → logprob: -8.500204086303711
    3. '(reader' → logprob: -16.50020408630371
    4. '	reader' → logprob: -17.37520408630371
    5. '   ' → logprob: -17.75020408630371
    6. '.reader' → logprob: -19.25020408630371
    7. 'receiver' → logprob: -20.12520408630371
    8. 'renderer' → logprob: -21.12520408630371
    9. 'writer' → logprob: -21.37520408630371
    10. 'viewer' → logprob: -21.75020408630371

Token 2944: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -5.991464786347933e-05
    2. 'read' → logprob: -9.750060081481934
    3. '.readlines' → logprob: -13.500060081481934
    4. '.readline' → logprob: -16.000059127807617
    5. '_read' → logprob: -17.625059127807617
    6. '.' → logprob: -17.750059127807617
    7. ' read' → logprob: -19.000059127807617
    8. '   ' → logprob: -19.375059127807617
    9. 'reads' → logprob: -19.625059127807617
    10. ' .' → logprob: -19.625059127807617

Token 2945: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0021386018488556147
    2. 'datasets' → logprob: -6.377138614654541
    3. '()
' → logprob: -8.627138137817383
    4. '_routes' → logprob: -8.752138137817383
    5. '()' → logprob: -10.127138137817383
    6. 'routes' → logprob: -10.377138137817383
    7. 'atasets' → logprob: -11.377138137817383
    8. 's' → logprob: -12.002138137817383
    9. 'd' → logprob: -12.877138137817383
    10. '_sets' → logprob: -13.377138137817383

Token 2946: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -9.662937372922897e-05
    2. 'ataset' → logprob: -9.625096321105957
    3. 'datasets' → logprob: -10.500096321105957
    4. ' datasets' → logprob: -12.875096321105957
    5. 'sets' → logprob: -16.000097274780273
    6. 'ata' → logprob: -16.000097274780273
    7. 'atas' → logprob: -16.125097274780273
    8. '.datasets' → logprob: -18.250097274780273
    9. 'Datas' → logprob: -18.750097274780273
    10. 'at' → logprob: -19.000097274780273

Token 2947: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015274016186594963
    2. 'results' → logprob: -4.2652740478515625
    3. 'solver' → logprob: -6.8902740478515625
    4. ' results' → logprob: -9.890274047851562
    5. 'solutions' → logprob: -11.265274047851562
    6. '```' → logprob: -11.640274047851562
    7. ' solver' → logprob: -12.015274047851562
    8. 'sol' → logprob: -12.390274047851562
    9. 'writer' → logprob: -12.640274047851562
    10. 'outputs' → logprob: -13.015274047851562

Token 2948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009734957478940487
    2. 'solver' → logprob: -4.759735107421875
    3. 'writer' → logprob: -7.009735107421875
    4. 'results' → logprob: -8.884735107421875
    5. '```' → logprob: -9.759735107421875
    6. 'for' → logprob: -11.884735107421875
    7. ' solver' → logprob: -12.384735107421875
    8. 'outputs' → logprob: -12.634735107421875
    9. 'result' → logprob: -13.634735107421875
    10. 'sol' → logprob: -13.759735107421875

Token 2949: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.32000812888145447
    2. 'results' → logprob: -1.3200081586837769
    3. 'writer' → logprob: -5.320008277893066
    4. '   ' → logprob: -6.320008277893066
    5. 'outputs' → logprob: -11.320008277893066
    6. 'sol' → logprob: -11.945008277893066
    7. 'solutions' → logprob: -11.945008277893066
    8. 'for' → logprob: -12.320008277893066
    9. ' solver' → logprob: -13.945008277893066
    10. ' results' → logprob: -14.945008277893066

Token 2950: '_results' (ID: 31049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020650619640946388
    2. '=' → logprob: -3.895650625228882
    3. 's' → logprob: -9.270650863647461
    4. '   ' → logprob: -11.270650863647461
    5. '  ' → logprob: -14.145650863647461
    6. ' ' → logprob: -14.520650863647461
    7. ' =
' → logprob: -15.770650863647461
    8. '    ' → logprob: -16.02065086364746
    9. '=
' → logprob: -16.14565086364746
    10. '=s' → logprob: -16.39565086364746

Token 2951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142629742622375
    2. '=' → logprob: -1.7014262676239014
    3. '=[]' → logprob: -11.95142650604248
    4. '   ' → logprob: -12.57642650604248
    5. '=[]
' → logprob: -13.45142650604248
    6. ':' → logprob: -13.95142650604248
    7. 's' → logprob: -15.20142650604248
    8. ' ' → logprob: -15.57642650604248
    9. '_' → logprob: -16.201425552368164
    10. '  ' → logprob: -16.201425552368164

Token 2952: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0018459362909197807
    2. '[' → logprob: -7.001845836639404
    3. '[]' → logprob: -7.251845836639404
    4. '[]

' → logprob: -8.501846313476562
    5. '[
' → logprob: -11.376846313476562
    6. 'Meeting' → logprob: -11.876846313476562
    7. ' []
' → logprob: -12.876846313476562
    8. '[])
' → logprob: -15.126846313476562
    9. '[M' → logprob: -15.251846313476562
    10. '[];
' → logprob: -16.001846313476562

Token 2953: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012986884685233235
    2. 'for' → logprob: -6.751298904418945
    3. ' for' → logprob: -9.001298904418945
    4. '```' → logprob: -12.376298904418945
    5. 'solver' → logprob: -13.876298904418945
    6. '       ' → logprob: -16.376298904418945
    7. '
' → logprob: -17.251298904418945
    8. ' solver' → logprob: -18.251298904418945
    9. '``' → logprob: -18.251298904418945
    10. '	for' → logprob: -18.876298904418945

Token 2954: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4958932101726532
    2. '   ' → logprob: -0.9958932399749756
    3. 'solver' → logprob: -3.8708932399749756
    4. ' for' → logprob: -7.3708930015563965
    5. '```' → logprob: -9.495893478393555
    6. 'sol' → logprob: -10.870893478393555
    7. '``' → logprob: -11.995893478393555
    8. ' solver' → logprob: -12.245893478393555
    9. '
' → logprob: -12.620893478393555
    10. 'solve' → logprob: -14.370893478393555

Token 2955: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.00016396844875998795
    2. ' route' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.375164031982422
    4. 'r' → logprob: -13.750164031982422
    5. 'routes' → logprob: -15.875164031982422
    6. '_route' → logprob: -18.500164031982422
    7. 'router' → logprob: -18.625164031982422
    8. 'rt' → logprob: -19.000164031982422
    9. '(route' → logprob: -19.125164031982422
    10. ' ' → logprob: -19.125164031982422

Token 2956: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000902884581591934
    2. 'in' → logprob: -7.1259026527404785
    3. '   ' → logprob: -9.250903129577637
    4. ' ' → logprob: -14.375903129577637
    5. '    ' → logprob: -14.875903129577637
    6. '  ' → logprob: -15.125903129577637
    7. 's' → logprob: -15.625903129577637
    8. ',' → logprob: -15.625903129577637
    9. '_in' → logprob: -15.875903129577637
    10. '	in' → logprob: -16.12590217590332

Token 2957: ' routes' (ID: 19749)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'routes' → logprob: -0.08588214218616486
    2. ' routes' → logprob: -3.2108821868896484
    3. 'route' → logprob: -3.7108821868896484
    4. 'solver' → logprob: -4.460882186889648
    5. 'Route' → logprob: -5.835882186889648
    6. '   ' → logprob: -6.335882186889648
    7. '(routes' → logprob: -8.085882186889648
    8. ' route' → logprob: -8.210882186889648
    9. ' solver' → logprob: -8.335882186889648
    10. 'router' → logprob: -9.460882186889648

Token 2958: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6118686199188232
    2. ':
' → logprob: -0.8618686199188232
    3. ':' → logprob: -3.3618686199188232
    4. '   ' → logprob: -7.861868858337402
    5. ',' → logprob: -9.236868858337402
    6. '):
' → logprob: -9.611868858337402
    7. '_solver' → logprob: -11.111868858337402
    8. '<|end|>' → logprob: -11.861868858337402
    9. ':

' → logprob: -11.986868858337402
    10. '<|end|>' → logprob: -11.986868858337402

Token 2959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038325246423482895
    2. '   ' → logprob: -3.288325309753418
    3. 'solver' → logprob: -8.663325309753418
    4. ' solver' → logprob: -9.538325309753418
    5. '```' → logprob: -10.413325309753418
    6. '     ' → logprob: -13.163325309753418
    7. '           ' → logprob: -13.288325309753418
    8. '_solver' → logprob: -13.288325309753418
    9. '      ' → logprob: -13.788325309753418
    10. '    ' → logprob: -14.163325309753418

Token 2960: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.3164440989494324
    2. '       ' → logprob: -1.9414441585540771
    3. ' solver' → logprob: -2.066444158554077
    4. '   ' → logprob: -6.816443920135498
    5. 'solution' → logprob: -11.691444396972656
    6. '_solver' → logprob: -11.941444396972656
    7. 'sol' → logprob: -12.191444396972656
    8. ' solution' → logprob: -12.566444396972656
    9. 's' → logprob: -12.566444396972656
    10. '           ' → logprob: -12.816444396972656

Token 2961: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004904381465166807
    2. '=' → logprob: -5.629904270172119
    3. '_results' → logprob: -7.129904270172119
    4. '   ' → logprob: -8.504904747009277
    5. '_solver' → logprob: -8.629904747009277
    6. 'solver' → logprob: -9.129904747009277
    7. '_' → logprob: -12.504904747009277
    8. 'results' → logprob: -12.879904747009277
    9. 'Solver' → logprob: -13.629904747009277
    10. ' solver' → logprob: -14.004904747009277

Token 2962: ' Meeting' (ID: 36677)
  Prédit: 'Meeting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Meeting' → logprob: -0.0001239196863025427
    2. ' Meeting' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.625123977661133
    4. 'Meet' → logprob: -17.500123977661133
    5. '       ' → logprob: -19.250123977661133
    6. 'Meal' → logprob: -21.500123977661133
    7. ' meeting' → logprob: -21.750123977661133
    8. '           ' → logprob: -22.000123977661133
    9. ' ' → logprob: -22.250123977661133
    10. 'Me' → logprob: -22.625123977661133

Token 2963: 'Attempt' (ID: 66488)
  Prédit: 'Attempt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Attempt' → logprob: -1.9361264946837764e-07
    2. ' Attempt' → logprob: -16.125
    3. '_attempt' → logprob: -17.125
    4. 'Attempts' → logprob: -17.5
    5. 'attempt' → logprob: -18.0
    6. '   ' → logprob: -19.5
    7. '```' → logprob: -20.25
    8. '
' → logprob: -20.375
    9. 'Solver' → logprob: -20.875
    10. '       ' → logprob: -21.125

Token 2964: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -7.815280696377158e-05
    2. 'solver' → logprob: -9.500078201293945
    3. '_solver' → logprob: -12.875078201293945
    4. ' solver' → logprob: -14.375078201293945
    5. ' Solver' → logprob: -15.625078201293945
    6. 'olver' → logprob: -17.000078201293945
    7. 'Solve' → logprob: -18.250078201293945
    8. '
' → logprob: -18.750078201293945
    9. 'Resolver' → logprob: -19.625078201293945
    10. '   ' → logprob: -19.875078201293945

Token 2965: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -1.9504606825648807e-05
    2. 'route' → logprob: -11.375019073486328
    3. '       ' → logprob: -11.875019073486328
    4. '(' → logprob: -15.000019073486328
    5. '(router' → logprob: -15.125019073486328
    6. '   ' → logprob: -15.875019073486328
    7. '(s' → logprob: -15.875019073486328
    8. '.route' → logprob: -17.625019073486328
    9. '(solution' → logprob: -17.875019073486328
    10. '(routes' → logprob: -18.000019073486328

Token 2966: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47908008098602295
    2. ')' → logprob: -1.354080080986023
    3. '       ' → logprob: -2.1040802001953125
    4. '   ' → logprob: -8.104080200195312
    5. ').' → logprob: -9.604080200195312
    6. ')
' → logprob: -9.854080200195312
    7. '           ' → logprob: -11.479080200195312
    8. '.solve' → logprob: -11.604080200195312
    9. '()
' → logprob: -11.604080200195312
    10. '
' → logprob: -11.854080200195312

Token 2967: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00358699937351048
    2. 'result' → logprob: -5.878586769104004
    3. '   ' → logprob: -7.503586769104004
    4. 'solver' → logprob: -8.753586769104004
    5. 'solution' → logprob: -10.503586769104004
    6. ' result' → logprob: -10.628586769104004
    7. '```' → logprob: -11.628586769104004
    8. 'res' → logprob: -12.378586769104004
    9. '
' → logprob: -13.003586769104004
    10. '           ' → logprob: -13.753586769104004

Token 2968: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.7281479835510254
    2. '       ' → logprob: -0.9781479835510254
    3. 'solver' → logprob: -1.9781479835510254
    4. 'res' → logprob: -6.728147983551025
    5. '   ' → logprob: -6.853147983551025
    6. 'solution' → logprob: -7.603147983551025
    7. 'solve' → logprob: -10.728147506713867
    8. ' result' → logprob: -10.853147506713867
    9. 'answer' → logprob: -10.978147506713867
    10. ' solver' → logprob: -11.228147506713867

Token 2969: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005984378047287464
    2. '=' → logprob: -5.130984306335449
    3. '=result' → logprob: -10.25598430633545
    4. '   ' → logprob: -12.13098430633545
    5. '       ' → logprob: -12.50598430633545
    6. '.' → logprob: -12.75598430633545
    7. 's' → logprob: -13.25598430633545
    8. '.append' → logprob: -13.63098430633545
    9. ' ' → logprob: -13.63098430633545
    10. '_result' → logprob: -14.38098430633545

Token 2970: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -7.493430894101039e-05
    2. ' solver' → logprob: -9.500075340270996
    3. 'sol' → logprob: -19.00007438659668
    4. '   ' → logprob: -21.00007438659668
    5. '_solver' → logprob: -21.37507438659668
    6. 'solve' → logprob: -22.37507438659668
    7. 'resolver' → logprob: -23.00007438659668
    8. 'solution' → logprob: -23.00007438659668
    9. 'scheduler' → logprob: -23.62507438659668
    10. 'Solver' → logprob: -24.25007438659668

Token 2971: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -3.8889261304575484e-06
    2. 'solve' → logprob: -12.500003814697266
    3. '.' → logprob: -17.375003814697266
    4. ' .' → logprob: -17.750003814697266
    5. '.sol' → logprob: -18.500003814697266
    6. '.s' → logprob: -20.250003814697266
    7. '.run' → logprob: -20.250003814697266
    8. '.resolve' → logprob: -20.625003814697266
    9. '.compute' → logprob: -20.750003814697266
    10. '   ' → logprob: -20.750003814697266

Token 2972: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07019028067588806
    2. '()
' → logprob: -2.820190191268921
    3. '()' → logprob: -5.1951904296875
    4. '
' → logprob: -6.1951904296875
    5. '(' → logprob: -8.1951904296875
    6. '<|end|>' → logprob: -9.5701904296875
    7. '```' → logprob: -9.6951904296875
    8. 'result' → logprob: -10.5701904296875
    9. ')' → logprob: -11.0701904296875
    10. '(
' → logprob: -11.0701904296875

Token 2973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.460291767027229e-05
    2. 'solver' → logprob: -9.625094413757324
    3. '   ' → logprob: -10.500094413757324
    4. '```' → logprob: -14.375094413757324
    5. '           ' → logprob: -15.875094413757324
    6. '_solver' → logprob: -16.25009536743164
    7. '
' → logprob: -16.37509536743164
    8. ' solver' → logprob: -16.62509536743164
    9. 'solve' → logprob: -17.50009536743164
    10. 'solution' → logprob: -17.75009536743164

Token 2974: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0015246253460645676
    2. '       ' → logprob: -6.501524448394775
    3. ' solver' → logprob: -10.751524925231934
    4. '   ' → logprob: -14.376524925231934
    5. 'solve' → logprob: -16.501523971557617
    6. 'solution' → logprob: -16.876523971557617
    7. 'sol' → logprob: -17.251523971557617
    8. '           ' → logprob: -17.376523971557617
    9. 'resolver' → logprob: -17.751523971557617
    10. '_solver' → logprob: -17.876523971557617

Token 2975: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.1472419600977446e-06
    2. '._' → logprob: -15.250000953674316
    3. '_result' → logprob: -15.250000953674316
    4. 'results' → logprob: -15.250000953674316
    5. 'Results' → logprob: -15.625000953674316
    6. '_RESULTS' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '_res' → logprob: -17.875001907348633
    9. '.solve' → logprob: -17.875001907348633
    10. '
' → logprob: -18.250001907348633

Token 2976: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2723104848410003e-05
    2. '.' → logprob: -10.750022888183594
    3. 'append' → logprob: -14.250022888183594
    4. '.extend' → logprob: -15.000022888183594
    5. '.app' → logprob: -15.500022888183594
    6. '_append' → logprob: -16.750022888183594
    7. '.Append' → logprob: -18.625022888183594
    8. ' .' → logprob: -18.875022888183594
    9. '.ap' → logprob: -18.875022888183594
    10. '.push' → logprob: -19.625022888183594

Token 2977: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0001584850688232109
    2. 'result' → logprob: -8.750158309936523
    3. ' result' → logprob: -19.000158309936523
    4. '(' → logprob: -19.500158309936523
    5. '(round' → logprob: -20.125158309936523
    6. '(
' → logprob: -21.000158309936523
    7. '=result' → logprob: -21.250158309936523
    8. '[result' → logprob: -21.625158309936523
    9. '(res' → logprob: -21.875158309936523
    10. '	result' → logprob: -22.000158309936523

Token 2978: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7341611981391907
    2. ')
' → logprob: -0.7341611981391907
    3. '   ' → logprob: -3.234161138534546
    4. '       ' → logprob: -7.359161376953125
    5. '
' → logprob: -9.234161376953125
    6. ')

' → logprob: -10.734161376953125
    7. '    
' → logprob: -11.109161376953125
    8. ')
' → logprob: -12.484161376953125
    9. '<|end|>' → logprob: -12.734161376953125
    10. '())
' → logprob: -13.109161376953125

Token 2979: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017926324158906937
    2. 'Output' → logprob: -4.142926216125488
    3. '
' → logprob: -6.392926216125488
    4. '```' → logprob: -9.642926216125488
    5. 'for' → logprob: -9.767926216125488
    6. 'output' → logprob: -9.892926216125488
    7. '    
' → logprob: -11.392926216125488
    8. '	Output' → logprob: -11.517926216125488
    9. '_output' → logprob: -12.017926216125488
    10. ' Output' → logprob: -13.142926216125488

Token 2980: ' writer' (ID: 10645)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' (adapté à ' writer') → logprob: -0.10946942865848541
    2. '   ' → logprob: -2.359469413757324
    3. 'output' → logprob: -4.859469413757324
    4. 'ow' → logprob: -6.859469413757324
    5. ' writer' → logprob: -8.109469413757324
    6. 'Output' → logprob: -10.234469413757324
    7. 'Writer' → logprob: -10.359469413757324
    8. '_writer' → logprob: -10.859469413757324
    9. '	writer' → logprob: -11.484469413757324
    10. '
' → logprob: -11.984469413757324

Token 2981: ' =' (ID: 314)
  Prédit: '.write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.003064699238166213
    2. '.' → logprob: -6.2530646324157715
    3. '.writer' → logprob: -7.6280646324157715
    4. ' =' → logprob: -8.00306510925293
    5. '.writerow' → logprob: -8.25306510925293
    6. '   ' → logprob: -10.50306510925293
    7. '=' → logprob: -11.00306510925293
    8. '_writer' → logprob: -12.87806510925293
    9. ').' → logprob: -13.00306510925293
    10. '.output' → logprob: -14.12806510925293

Token 2982: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.8624639324116288e-06
    2. ' Output' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '	Output' → logprob: -20.625001907348633
    5. 'output' → logprob: -21.875001907348633
    6. 'Input' → logprob: -22.625001907348633
    7. '_output' → logprob: -23.250001907348633
    8. '(Output' → logprob: -23.250001907348633
    9. '.Output' → logprob: -23.750001907348633
    10. ' output' → logprob: -24.500001907348633

Token 2983: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -5.512236498361744e-07
    2. 'Reader' → logprob: -15.000000953674316
    3. 'writer' → logprob: -16.375
    4. '_writer' → logprob: -17.125
    5. 'Write' → logprob: -17.125
    6. 'Output' → logprob: -18.625
    7. ' Writer' → logprob: -20.625
    8. '
' → logprob: -21.25
    9. 'Builder' → logprob: -21.375
    10. '   ' → logprob: -21.375

Token 2984: '()
' (ID: 1234)
  Prédit: '.write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.6434553861618042
    2. '   ' → logprob: -0.8934553861618042
    3. '
' → logprob: -2.7684555053710938
    4. '.writer' → logprob: -7.018455505371094
    5. 'writer' → logprob: -7.143455505371094
    6. 'write' → logprob: -7.893455505371094
    7. 'def' → logprob: -8.893455505371094
    8. '    
' → logprob: -9.393455505371094
    9. '```' → logprob: -9.518455505371094
    10. '.writerow' → logprob: -9.893455505371094

Token 2985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018536411225795746
    2. 'writer' → logprob: -4.018536567687988
    3. '```' → logprob: -8.143536567687988
    4. 'for' → logprob: -9.893536567687988
    5. '
' → logprob: -10.893536567687988
    6. 'write' → logprob: -11.393536567687988
    7. 'def' → logprob: -11.518536567687988
    8. '	writer' → logprob: -13.143536567687988
    9. '    
' → logprob: -13.893536567687988
    10. '(writer' → logprob: -14.018536567687988

Token 2986: ' writer' (ID: 10645)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' (adapté à ' writer') → logprob: -0.00012356207298580557
    2. 'write' → logprob: -9.000123977661133
    3. ' writer' → logprob: -16.250123977661133
    4. '   ' → logprob: -17.125123977661133
    5. '```' → logprob: -18.125123977661133
    6. '
' → logprob: -19.625123977661133
    7. 'worker' → logprob: -19.875123977661133
    8. '(writer' → logprob: -20.125123977661133
    9. '	writer' → logprob: -20.375123977661133
    10. '.writer' → logprob: -20.875123977661133

Token 2987: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00010044389637187123
    2. '.' → logprob: -9.375100135803223
    3. '.writer' → logprob: -11.500100135803223
    4. '.writerow' → logprob: -12.875100135803223
    5. 'write' → logprob: -13.500100135803223
    6. '   ' → logprob: -14.500100135803223
    7. '.w' → logprob: -16.12510108947754
    8. '_writer' → logprob: -16.25010108947754
    9. '.send' → logprob: -16.37510108947754
    10. '.save' → logprob: -16.37510108947754

Token 2988: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -2.4987974029500037e-05
    2. 'results' → logprob: -10.625024795532227
    3. 's' → logprob: -14.375024795532227
    4. 'Results' → logprob: -16.625024795532227
    5. '_result' → logprob: -18.000024795532227
    6. '```' → logprob: -18.250024795532227
    7. '_RESULTS' → logprob: -18.500024795532227
    8. '(results' → logprob: -18.875024795532227
    9. '(_' → logprob: -19.000024795532227
    10. '   ' → logprob: -19.375024795532227

Token 2989: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.961759259458631e-06
    2. '(results' → logprob: -12.875004768371582
    3. 'solver' → logprob: -13.250004768371582
    4. '(' → logprob: -15.000004768371582
    5. '((' → logprob: -16.1250057220459
    6. ' (' → logprob: -16.6250057220459
    7. '(sol' → logprob: -17.1250057220459
    8. '(list' → logprob: -17.5000057220459
    9. '(solution' → logprob: -17.7500057220459
    10. '([' → logprob: -18.0000057220459

Token 2990: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: 0.0
    2. 'solver' → logprob: -18.375
    3. 'ov' → logprob: -20.375
    4. 'over' → logprob: -21.0
    5. 'olvers' → logprob: -21.25
    6. 'erver' → logprob: -21.875
    7. 'olve' → logprob: -21.875
    8. 'ol' → logprob: -22.0
    9. 'cheduler' → logprob: -22.0
    10. 'tring' → logprob: -22.375

Token 2991: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -4.127333340875339e-06
    2. 's' → logprob: -12.500003814697266
    3. 'results' → logprob: -16.000003814697266
    4. '_s' → logprob: -16.125003814697266
    5. ')' → logprob: -17.375003814697266
    6. ')_' → logprob: -17.750003814697266
    7. 'Results' → logprob: -18.250003814697266
    8. '_res' → logprob: -18.625003814697266
    9. '_RESULTS' → logprob: -18.875003814697266
    10. '_result' → logprob: -19.250003814697266

Token 2992: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14140664041042328
    2. '())' → logprob: -2.391406536102295
    3. '()' → logprob: -3.266406536102295
    4. '()
' → logprob: -6.891406536102295
    5. ')
' → logprob: -7.016406536102295
    6. '())
' → logprob: -8.766407012939453
    7. '   ' → logprob: -9.016407012939453
    8. ' )' → logprob: -11.766407012939453
    9. '(' → logprob: -12.391407012939453
    10. '<|end|>' → logprob: -13.141407012939453

Token 2993: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.584239938296378e-06
    2. '```' → logprob: -12.250007629394531
    3. 'main' → logprob: -13.000007629394531
    4. ' if' → logprob: -15.375007629394531
    5. '
' → logprob: -15.500007629394531
    6. '#' → logprob: -16.50000762939453
    7. '``' → logprob: -17.00000762939453
    8. '__' → logprob: -18.00000762939453
    9. '    
' → logprob: -18.25000762939453
    10. '\' → logprob: -18.37500762939453

Token 2994: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023260388523340225
    2. ' __' → logprob: -3.7732603549957275
    3. 'name' → logprob: -11.398260116577148
    4. '___' → logprob: -13.148260116577148
    5. '_name' → logprob: -14.023260116577148
    6. '```' → logprob: -15.148260116577148
    7. '/__' → logprob: -16.14826011657715
    8. '____' → logprob: -16.27326011657715
    9. ' "__' → logprob: -16.77326011657715
    10. ' ' → logprob: -16.77326011657715

Token 2995: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01102506648749113
    2. ' ==' → logprob: -5.0110249519348145
    3. '==' → logprob: -5.7610249519348145
    4. ' __' → logprob: -7.3860249519348145
    5. 'name' → logprob: -8.011025428771973
    6. '=="' → logprob: -9.011025428771973
    7. '_name' → logprob: -10.636025428771973
    8. '__.__' → logprob: -11.886025428771973
    9. 'main' → logprob: -12.011025428771973
    10. 'if' → logprob: -12.011025428771973

Token 2996: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.125000953674316
    3. '__.__' → logprob: -15.250000953674316
    4. '____' → logprob: -15.625000953674316
    5. '___' → logprob: -16.250001907348633
    6. 'name' → logprob: -16.750001907348633
    7. '__.' → logprob: -17.375001907348633
    8. ' ==' → logprob: -17.500001907348633
    9. '__
' → logprob: -17.750001907348633
    10. 'main' → logprob: -18.125001907348633

Token 2997: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004293976817280054
    2. '==' → logprob: -5.504293918609619
    3. '=="' → logprob: -9.004294395446777
    4. ' ==' → logprob: -9.379294395446777
    5. '__.__' → logprob: -12.504294395446777
    6. '=='' → logprob: -12.629294395446777
    7. '__["' → logprob: -15.754294395446777
    8. '___' → logprob: -15.754294395446777
    9. '__
' → logprob: -16.25429344177246
    10. '__.' → logprob: -16.37929344177246

Token 2998: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003179975086823106
    2. ''' → logprob: -5.753180027008057
    3. '__' → logprob: -13.128179550170898
    4. ' "__' → logprob: -15.503179550170898
    5. '   ' → logprob: -19.5031795501709
    6. '"name' → logprob: -19.5031795501709
    7. '"'' → logprob: -19.6281795501709
    8. 'main' → logprob: -19.7531795501709
    9. ''"' → logprob: -20.2531795501709
    10. '"class' → logprob: -20.3781795501709

Token 2999: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132774829864502
    2. 'main' → logprob: -1.3132774829864502
    3. '"' → logprob: -11.938277244567871
    4. ''' → logprob: -12.313277244567871
    5. 'name' → logprob: -12.688277244567871
    6. '__":
' → logprob: -15.063277244567871
    7. '_main' → logprob: -15.063277244567871
    8. '```' → logprob: -15.188277244567871
    9. '___' → logprob: -15.438277244567871
    10. ' main' → logprob: -15.688277244567871

Token 3000: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06314492970705032
    2. '__":
' → logprob: -2.8131449222564697
    3. '__
' → logprob: -7.438145160675049
    4. '__':
' → logprob: -7.813145160675049
    5. '__.' → logprob: -9.56314468383789
    6. '__.__' → logprob: -10.06314468383789
    7. '__
' → logprob: -10.43814468383789
    8. '__["' → logprob: -10.56314468383789
    9. '___' → logprob: -12.81314468383789
    10. '__",' → logprob: -12.93814468383789

Token 3001: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0038971067406237125
    2. '   ' → logprob: -5.753897190093994
    3. '__' → logprob: -7.628897190093994
    4. ' main' → logprob: -9.003896713256836
    5. '	main' → logprob: -9.628896713256836
    6. '_main' → logprob: -10.878896713256836
    7. '____' → logprob: -11.628896713256836
    8. '    
' → logprob: -12.003896713256836
    9. '(main' → logprob: -12.628896713256836
    10. '__":
' → logprob: -13.003896713256836

Token 3002: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -19.625
    4. '   ' → logprob: -20.25
    5. 'import' → logprob: -20.25
    6. '(main' → logprob: -24.0
    7. '.main' → logprob: -24.5
    8. '_main' → logprob: -25.375
    9. '
' → logprob: -26.625
    10. 'mai' → logprob: -27.0

Token 3003: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3001
Tokens correctement prédits (1ère position, stricte): 1218
Tokens correctement prédits (1ère position, avec adaptation): 1319
Tokens correctement prédits (top 10): 2293
Précision stricte (1ère position): 40.59%
Précision adaptée (1ère position): 43.95%
Précision (top 10): 76.41%
================================================================================
