================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def tokenize(s):
    tokens = []
    i = 0
    while i < len(s):
        c = s[i]
        if c.isdigit():
            j = i
            while j < len(s) and s[j].isdigit():
                j += 1
            tokens.append(('num', int(s[i:j])))
            i = j
        elif c in '+-*/()':
            tokens.append((c,))
            i += 1
        elif c == ' ':
            i += 1
        else:
            # invalid char, skip or error
            i += 1
    return tokens

class Parser:
    def __init__(self, tokens):
        self.tokens = tokens
        self.pos = 0
    def peek(self):
        if self.pos < len(self.tokens):
            return self.tokens[self.pos]
        return None
    def consume(self, typ=None):
        cur = self.peek()
        if cur is None:
            return None
        if typ and cur[0] != typ:
            return None
        self.pos += 1
        return cur

def parse_expr(tokens):
    # parse full expr into tree based on grammar
    p = Parser(tokens)
    def expr():
        # parse factor, then recursively combine by operator
        # But grammar allows left recursion and multiple operators without precedence,
        # So we parse by consuming terms and ops in order: just parse until all consumed inside top level
        # Actually the grammar is ambiguous, we just parse as in grammar with parens and num leaves
        return parse_e()
    def parse_e():
        # parse a unit
        if p.peek() == ('(',):
            p.consume('(')
            node = parse_e()
            p.consume(')')
            return node
        elif p.peek() and p.peek()[0] == 'num':
            return ('num', p.consume('num')[1])
        else:
            # parse left op right, but expr can be just num or parens
            # we parse starting with num or parens, then op, then next expr
            left = None
            if p.peek() and p.peek()[0] == 'num':
                left = ('num', p.consume('num')[1])
            elif p.peek() == ('(',):
                p.consume('(')
                left = parse_e()
                p.consume(')')
            else:
                return None
            if p.peek() and p.peek()[0] in '+-*/':
                op = p.consume()[0]
                right = parse_e()
                return (op, left, right)
            else:
                return left
    # But above handles only one operator.
    # The input grammar is ambiguous and allows nested ops starting from expr.
    # We solve by hand: parse operator expressions in pairs recursively from left to right
    # or more simply, we parse fully by grammar since we only need to get tokens and then do all ways.
    # So better: parse as abstract syntax tree with full brackets
    # Here, because problem states input conforms to grammar, which is fully parenthesized or may not be?
    # The grammar is ambiguous; so just parse leftmost unit, then if operator, parse right recursively.
    # We must just parse tokens into AST properly.

    # Alternative approach:
    # Since the grammar is ambiguous and the problem is only about counting results from all *possible* parenthesizations,
    # the parser can just parse tokens into a flat list of "atomic" tokens: nums and operators, plus parens.
    # Then the dp will handle all ways of parenthesizing.

    # Therefore instead of a tree, just return token list without parens
    return tokens

def apply_op(a, b, op):
    if op == '+':
        return a + b, False
    elif op == '-':
        return a - b, False
    elif op == '*':
        return a * b, False
    elif op == '/':
        if b == 0:
            return None, True
        # Applyきたまさ君 rounding: after division, round towards the value with smaller abs, 
        # then floor fractional part, to int.
        # But since problem states: 
        # "割り算では常に絶対値の小さい方に丸め，小数部を切り捨てて整数にしてしまう．"
        # which means: 
        # For division a/b:
        # Calculate a/b (float)
        # Then we choose to round towards the operand with smaller absolute value
        # Then floor the decimal part (discard decimal part)
        # This is a bit ambiguous: but we interpret as:
        # - Rounded value is the integer nearer to the operand with smaller absolute value (among a and b)
        # - Then truncate decimal part (floor) after rounding to that value direction
        # But fractional part is discarded after rounding towards smaller abs operand.
        # Another interpretation:
        # - Compute exact a/b (float)
        # - Among operand a,b find the one with smaller abs
        # - Round a/b towards that value (so if a/b > that value, round down; else up), then floor (discard decimal)
        #
        # But that is complicated. The problem is oriented towards integer division modified.
        # Let's try simpler:
        # The problem example shows dividing int by int, rounding towards the operand with smaller abs, 
        # and then discard decimal to get int.
        # We interpret the division result d = a/b as float.
        # The "rounding towards smaller abs operand" means:
        # If d > min(abs(a), abs(b)), then round down to floor(d)
        # else round up to ceil(d)
        # Finally, discard decimal part: floor or ceil means integer value.
        #
        # But the sample outputs show the standard ambiguity too.
        #
        # Alternatively, since the problem states "割り算では常に絶対値の小さい方に丸め，小数部を切り捨てて整数にしてしまう．"
        #
        # I interpret it as:
        # 1) among a and b, find value with smaller absolute value, call it c (could be a or b)
        # 2) calculate d = a/b as real float
        # 3) round d towards c (that is, if d > c, truncate decimal part down; if d < c, truncate decimal part up)
        # "小数部を切り捨てて整数にしてしまう" means floor the decimal part (ignore), but sign depends on direction.
        #
        # So direction is towards c.
        #
        # Since "小数部を切り捨てて" means floor of decimal part
        # So this is a special rounding:
        # - If d >= c, floor(d)
        # - Else ceil(d)
        #
        # But c can be positive or negative, so exact:
        # If d >= c => round towards c means round down to floor(d)
        # else d < c => round up to ceil(d)
        #
        # Let's implement that.
        c = a if abs(a) <= abs(b) else b
        if d >= c:
            r = int(d // 1)  # floor
        else:
            r = int(-((-d) // 1))  # ceil
        return r, False
    return None, True

def calc_all_results(tokens):
    # Remove parentheses tokens because in DP we consider all parenthesizations anyway.
    filtered = [t for t in tokens if t[0] != '(' and t[0] != ')']

    n = len(filtered)
    # filtered tokens are num and operators alternatively starting and ending with num
    
    # Make list of values and ops
    values = []
    ops = []
    for i, t in enumerate(filtered):
        if i%2 == 0:
            # num
            values.append(t[1])
        else:
            ops.append(t[0])

    memo = {}

    def dfs(l, r):
        # calc all results from values[l:r+1]
        if (l, r) in memo:
            return memo[(l, r)]
        if l == r:
            memo[(l, r)] = set([values[l]])
            return memo[(l, r)]
        res = set()
        for i in range(l, r):
            lefts = dfs(l, i)
            rights = dfs(i+1, r)
            op = ops[i]
            for a in lefts:
                for b in rights:
                    val, err = apply_op(a, b, op)
                    if not err and abs(val) <= 10**9:
                        res.add(val)
        memo[(l, r)] = res
        return res

    return dfs(0, len(values)-1)

for line in sys.stdin:
    s = line.strip()
    if s == '#':
        break
    tokens = tokenize(s)
    results = calc_all_results(tokens)
    print(len(results))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08597590029239655
    2. '00' → logprob: -2.7109758853912354
    3. '000' → logprob: -4.3359761238098145
    4. '4' → logprob: -5.9609761238098145
    5. '6' → logprob: -9.335975646972656
    6. '2' → logprob: -9.835975646972656
    7. '3' → logprob: -9.835975646972656
    8. ')' → logprob: -10.710975646972656
    9. '5' → logprob: -11.710975646972656
    10. '```' → logprob: -11.710975646972656

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' tokenize' (ID: 192720)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12380527704954147
    2. ' factorial' → logprob: -2.373805284500122
    3. ' dfs' → logprob: -4.248805046081543
    4. ' fibonacci' → logprob: -5.998805046081543
    5. ' space' → logprob: -6.873805046081543
    6. ' factor' → logprob: -6.998805046081543
    7. ' recursive' → logprob: -7.623805046081543
    8. '_' → logprob: -7.623805046081543
    9. ' foo' → logprob: -7.623805046081543
    10. ' fib' → logprob: -7.873805046081543

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0071210917085409164
    2. '(token' → logprob: -6.3821210861206055
    3. '(text' → logprob: -6.3821210861206055
    4. '_' → logprob: -6.8821210861206055
    5. '(line' → logprob: -7.3821210861206055
    6. ' (' → logprob: -7.8821210861206055
    7. '(sentence' → logprob: -7.8821210861206055
    8. '(tokens' → logprob: -8.382121086120605
    9. '(code' → logprob: -8.507121086120605
    10. '(user' → logprob: -8.882121086120605

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027416350785642862
    2. ')' → logprob: -6.002741813659668
    3. ',' → logprob: -9.127741813659668
    4. ':' → logprob: -9.252741813659668
    5. '):
' → logprob: -10.627741813659668
    6. ' ):' → logprob: -11.002741813659668
    7. '[' → logprob: -11.627741813659668
    8. 's' → logprob: -12.502741813659668
    9. ')：' → logprob: -13.877741813659668
    10. '[]):' → logprob: -14.252741813659668

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033565396443009377
    2. '    ' → logprob: -6.128356456756592
    3. ':' → logprob: -8.12835693359375
    4. ' ' → logprob: -8.37835693359375
    5. '    
' → logprob: -8.37835693359375
    6. '[]' → logprob: -9.50335693359375
    7. 'tokens' → logprob: -10.25335693359375
    8. '  ' → logprob: -10.37835693359375
    9. ' return' → logprob: -10.37835693359375
    10. ')' → logprob: -10.62835693359375

Token 18: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.5670831799507141
    2. 'tokens' (adapté à ' tokens') → logprob: -0.9420831799507141
    3. '   ' → logprob: -3.5670831203460693
    4. ' return' → logprob: -4.817083358764648
    5. 'return' → logprob: -5.692083358764648
    6. 'token' → logprob: -7.067083358764648
    7. 's' → logprob: -7.567083358764648
    8. ' s' → logprob: -7.817083358764648
    9. ' token' → logprob: -8.192083358764648
    10. 'pos' → logprob: -8.192083358764648

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014262702316045761
    2. '=' → logprob: -4.264262676239014
    3. '=[]' → logprob: -10.014263153076172
    4. ')' → logprob: -11.389263153076172
    5. ' ' → logprob: -11.639263153076172
    6. '.append' → logprob: -12.264263153076172
    7. ',' → logprob: -12.264263153076172
    8. '.' → logprob: -12.389263153076172
    9. '   ' → logprob: -12.639263153076172
    10. '<|end|>' → logprob: -13.139263153076172

Token 20: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006878999527543783
    2. 's' → logprob: -5.381878852844238
    3. ' []' → logprob: -6.131878852844238
    4. '[]
' → logprob: -10.256878852844238
    5. '[]}' → logprob: -11.381878852844238
    6. ' s' → logprob: -11.506878852844238
    7. '   ' → logprob: -11.881878852844238
    8. '[s' → logprob: -12.631878852844238
    9. ' ' → logprob: -12.881878852844238
    10. '[]

' → logprob: -13.006878852844238

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10353207588195801
    2. '    
' → logprob: -2.853532075881958
    3. '    ' → logprob: -4.103531837463379
    4. '
' → logprob: -4.478531837463379
    5. '     
' → logprob: -5.478531837463379
    6. 'n' → logprob: -6.603531837463379
    7. ' 
' → logprob: -6.853531837463379
    8. 'current' → logprob: -6.853531837463379
    9. '   
' → logprob: -6.853531837463379
    10. 'for' → logprob: -7.228531837463379

Token 22: ' i' (ID: 575)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7982186079025269
    2. ' current' → logprob: -1.0482186079025269
    3. '   ' → logprob: -2.6732187271118164
    4. 'i' (adapté à ' i') → logprob: -3.4232187271118164
    5. ' i' → logprob: -3.4232187271118164
    6. 'token' → logprob: -3.5482187271118164
    7. 'word' → logprob: -4.423218727111816
    8. ' word' → logprob: -4.798218727111816
    9. ' token' → logprob: -5.298218727111816
    10. 'pos' → logprob: -5.798218727111816

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2270064502954483
    2. 'n' → logprob: -2.352006435394287
    3. ' =' → logprob: -2.477006435394287
    4. 'f' → logprob: -4.227006435394287
    5. 'nd' → logprob: -5.602006435394287
    6. 'nt' → logprob: -6.727006435394287
    7. ' +=' → logprob: -6.852006435394287
    8. 's' → logprob: -7.352006435394287
    9. '+' → logprob: -7.352006435394287
    10. ' ' → logprob: -7.477006435394287

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016042228788137436
    2. ' ' → logprob: -4.141042232513428
    3. '1' → logprob: -11.76604175567627
    4. '2' → logprob: -16.641042709350586
    5. '```' → logprob: -17.141042709350586
    6. '   ' → logprob: -18.453542709350586
    7. 's' → logprob: -18.516042709350586
    8. '3' → logprob: -19.203542709350586
    9. ' i' → logprob: -19.391042709350586
    10. 'int' → logprob: -19.391042709350586

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -14.625015258789062
    4. 's' → logprob: -17.062515258789062
    5. '   ' → logprob: -17.500015258789062
    6. '```' → logprob: -17.812515258789062
    7. '[' → logprob: -18.187515258789062
    8. '۰' → logprob: -18.625015258789062
    9. 'int' → logprob: -18.687515258789062
    10. '=' → logprob: -18.937515258789062

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1475293636322021
    2. ' while' → logprob: -1.3975293636322021
    3. 'while' → logprob: -1.5225293636322021
    4. ' ' → logprob: -1.7725293636322021
    5. '<|end|>' → logprob: -4.397529602050781
    6. '    ' → logprob: -5.397529602050781
    7. '  ' → logprob: -5.397529602050781
    8. ')' → logprob: -5.522529602050781
    9. '    
' → logprob: -5.522529602050781
    10. '
' → logprob: -5.522529602050781

Token 28: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.42572107911109924
    2. ' while' → logprob: -1.1757210493087769
    3. 'n' → logprob: -3.9257211685180664
    4. '<|end|>' → logprob: -4.800721168518066
    5. ' ' → logprob: -4.925721168518066
    6. ' n' → logprob: -7.175721168518066
    7. ')' → logprob: -7.300721168518066
    8. '   ' → logprob: -7.925721168518066
    9. 'length' → logprob: -8.675721168518066
    10. 's' → logprob: -8.925721168518066

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06995699554681778
    2. 'i' → logprob: -2.6949570178985596
    3. ' True' → logprob: -11.06995677947998
    4. 'True' → logprob: -12.94495677947998
    5. ' ' → logprob: -13.56995677947998
    6. 's' → logprob: -14.81995677947998
    7. '<' → logprob: -15.44495677947998
    8. ' ' → logprob: -15.69495677947998
    9. '	i' → logprob: -16.194957733154297
    10. '```' → logprob: -16.319957733154297

Token 30: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11356204003095627
    2. '<' → logprob: -2.2385621070861816
    3. ' ' → logprob: -7.863562107086182
    4. '<len' → logprob: -8.113561630249023
    5. '<size' → logprob: -11.738561630249023
    6. ' <=' → logprob: -11.988561630249023
    7. '<n' → logprob: -12.113561630249023
    8. 's' → logprob: -12.238561630249023
    9. '<|end|>' → logprob: -12.613561630249023
    10. '[' → logprob: -12.613561630249023

Token 31: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889088988304138
    2. ' len' → logprob: -2.578890800476074
    3. '(len' → logprob: -14.203890800476074
    4. '=len' → logprob: -15.953890800476074
    5. '<len' → logprob: -16.32889175415039
    6. '	len' → logprob: -16.32889175415039
    7. '[len' → logprob: -16.45389175415039
    8. '   ' → logprob: -16.82889175415039
    9. ',len' → logprob: -17.32889175415039
    10. 'length' → logprob: -17.95389175415039

Token 32: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.240481914370321e-05
    2. '(' → logprob: -9.875052452087402
    3. 's' → logprob: -14.000052452087402
    4. ')' → logprob: -17.375051498413086
    5. '(tokens' → logprob: -20.125051498413086
    6. '(
' → logprob: -20.500051498413086
    7. '```' → logprob: -20.625051498413086
    8. ' (' → logprob: -20.625051498413086
    9. ')s' → logprob: -21.500051498413086
    10. '(token' → logprob: -21.875051498413086

Token 33: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0879128947854042
    2. '):' → logprob: -2.7129127979278564
    3. '):
' → logprob: -4.3379130363464355
    4. ' and' → logprob: -5.5879130363464355
    5. 'and' → logprob: -6.9629130363464355
    6. '   ' → logprob: -10.962912559509277
    7. '):
' → logprob: -11.087912559509277
    8. ' )' → logprob: -11.587912559509277
    9. ':' → logprob: -11.837912559509277
    10. '):

' → logprob: -12.212912559509277

Token 34: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46792125701904297
    2. '       ' → logprob: -1.092921257019043
    3. '    ' → logprob: -4.467921257019043
    4. '        ' → logprob: -4.592921257019043
    5. '<|end|>' → logprob: -5.092921257019043
    6. '   ' → logprob: -5.217921257019043
    7. ' if' → logprob: -6.967921257019043
    8. '  ' → logprob: -7.467921257019043
    9. '        
' → logprob: -7.717921257019043
    10. '<|end|>' → logprob: -7.842921257019043

Token 35: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0785539522767067
    2. ' if' → logprob: -2.7035539150238037
    3. 'if' → logprob: -5.203554153442383
    4. 'c' (adapté à ' c') → logprob: -7.328554153442383
    5. '  ' → logprob: -7.328554153442383
    6. '<|end|>' → logprob: -7.453554153442383
    7. '    ' → logprob: -7.578554153442383
    8. 'token' → logprob: -8.953554153442383
    9. '   ' → logprob: -9.453554153442383
    10. 'char' → logprob: -9.453554153442383

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07996191084384918
    2. '=' → logprob: -2.5799620151519775
    3. ' ' → logprob: -7.079961776733398
    4. 's' → logprob: -9.204961776733398
    5. '  ' → logprob: -10.329961776733398
    6. '=s' → logprob: -10.704961776733398
    7. ' ==' → logprob: -11.329961776733398
    8. ' is' → logprob: -11.954961776733398
    9. '   ' → logprob: -12.079961776733398
    10. ' if' → logprob: -12.204961776733398

Token 37: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10020806640386581
    2. 's' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.850208282470703
    4. '	s' → logprob: -15.225208282470703
    5. '_s' → logprob: -15.350208282470703
    6. '<|end|>' → logprob: -15.600208282470703
    7. '```' → logprob: -16.350208282470703
    8. '>s' → logprob: -16.600208282470703
    9. '(s' → logprob: -16.725208282470703
    10. ''s' → logprob: -16.975208282470703

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '[I' → logprob: -17.0
    4. '[s' → logprob: -17.625
    5. '```' → logprob: -18.125
    6. 'i' → logprob: -18.25
    7. '\[' → logprob: -18.625
    8. '   ' → logprob: -19.0
    9. ' [' → logprob: -19.5
    10. '[int' → logprob: -20.0

Token 39: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003884869161993265
    2. ']
' → logprob: -5.753884792327881
    3. ')' → logprob: -7.628884792327881
    4. '])' → logprob: -9.253885269165039
    5. ' ]' → logprob: -10.128885269165039
    6. ')]' → logprob: -10.253885269165039
    7. 'if' → logprob: -11.003885269165039
    8. ')
' → logprob: -12.128885269165039
    9. 's' → logprob: -12.378885269165039
    10. '])
' → logprob: -12.503885269165039

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.693602442741394
    2. ' if' → logprob: -1.568602442741394
    3. ' ' → logprob: -1.943602442741394
    4. 'if' → logprob: -2.5686025619506836
    5. '        ' → logprob: -3.5686025619506836
    6. '<|end|>' → logprob: -3.9436025619506836
    7. '    ' → logprob: -4.443602561950684
    8. '        
' → logprob: -5.568602561950684
    9. '   ' → logprob: -5.693602561950684
    10. '<|end|>' → logprob: -6.568602561950684

Token 41: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18709562718868256
    2. 'if' (adapté à ' if') → logprob: -1.9370956420898438
    3. '       ' → logprob: -3.9370956420898438
    4. '        ' → logprob: -5.812095642089844
    5. '    ' → logprob: -6.312095642089844
    6. '<|end|>' → logprob: -6.937095642089844
    7. ' ' → logprob: -7.062095642089844
    8. '   ' → logprob: -8.937095642089844
    9. '<|end|>' → logprob: -9.812095642089844
    10. '```' → logprob: -9.937095642089844

Token 42: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.029772823676466942
    2. 'c' → logprob: -3.5297727584838867
    3. ' ' → logprob: -11.404772758483887
    4. 's' → logprob: -11.779772758483887
    5. ' s' → logprob: -12.904772758483887
    6. ' ' → logprob: -14.779772758483887
    7. ' not' → logprob: -15.404772758483887
    8. 'isdigit' → logprob: -16.529773712158203
    9. ' '' → logprob: -16.842273712158203
    10. ' isinstance' → logprob: -17.279773712158203

Token 43: '.is' (ID: 3109)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6547355651855469
    2. ' in' → logprob: -1.2797355651855469
    3. '.is' → logprob: -2.029735565185547
    4. ' ==' → logprob: -3.279735565185547
    5. ' .' → logprob: -3.529735565185547
    6. '==' → logprob: -6.029735565185547
    7. 'iss' → logprob: -7.404735565185547
    8. ' ' → logprob: -8.154735565185547
    9. 'in' → logprob: -8.654735565185547
    10. 'is' → logprob: -9.279735565185547

Token 44: 'digit' (ID: 78327)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.2630655765533447
    2. 'digit' → logprob: -1.5130655765533447
    3. 'al' → logprob: -4.513065338134766
    4. 'decimal' → logprob: -10.013065338134766
    5. 'space' → logprob: -10.138065338134766
    6. 'numeric' → logprob: -11.013065338134766
    7. 'upper' → logprob: -12.638065338134766
    8. 'a' → logprob: -13.013065338134766
    9. 'identifier' → logprob: -13.388065338134766
    10. ' alpha' → logprob: -14.638065338134766

Token 45: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0031949470285326242
    2. '()' → logprob: -5.753194808959961
    3. '(' → logprob: -11.628194808959961
    4. '():
' → logprob: -12.128194808959961
    5. ':' → logprob: -13.628194808959961
    6. ' ():' → logprob: -14.253194808959961
    7. '()==' → logprob: -14.878194808959961
    8. '):' → logprob: -15.503194808959961
    9. '()>' → logprob: -16.12819480895996
    10. '():
' → logprob: -16.75319480895996

Token 46: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.235614538192749
    2. ':' → logprob: -1.735614538192749
    3. '        ' → logprob: -1.985614538192749
    4. ' ' → logprob: -1.985614538192749
    5. '           ' → logprob: -2.360614538192749
    6. '<|end|>' → logprob: -3.110614538192749
    7. '    ' → logprob: -3.360614538192749
    8. ' or' → logprob: -3.735614538192749
    9. '<|end|>' → logprob: -4.485614776611328
    10. ' :' → logprob: -4.735614776611328

Token 47: ' j' (ID: 441)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3165777027606964
    2. 'num' → logprob: -1.691577672958374
    3. ' j' → logprob: -2.941577672958374
    4. ' number' → logprob: -4.441577911376953
    5. '           ' → logprob: -4.816577911376953
    6. 'j' (adapté à ' j') → logprob: -5.191577911376953
    7. ' start' → logprob: -5.441577911376953
    8. 'number' → logprob: -6.691577911376953
    9. ' token' → logprob: -6.941577911376953
    10. 'start' → logprob: -7.316577911376953

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16198869049549103
    2. ' =' → logprob: -1.9119887351989746
    3. '=i' → logprob: -6.411988735198975
    4. '+=' → logprob: -9.411988258361816
    5. ' +=' → logprob: -10.536988258361816
    6. '=j' → logprob: -12.411988258361816
    7. ' ' → logprob: -12.911988258361816
    8. '   ' → logprob: -13.536988258361816
    9. ')' → logprob: -14.036988258361816
    10. '+' → logprob: -14.286988258361816

Token 49: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519296407699585
    2. ' i' → logprob: -1.5019296407699585
    3. '	i' → logprob: -15.75192928314209
    4. '   ' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.626930236816406
    6. '```' → logprob: -16.626930236816406
    7. '0' → logprob: -17.126930236816406
    8. '1' → logprob: -17.501930236816406
    9. '=i' → logprob: -17.751930236816406
    10. '    ' → logprob: -17.751930236816406

Token 50: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008688559755682945
    2. ' +' → logprob: -4.758688449859619
    3. '<|end|>' → logprob: -10.133688926696777
    4. '+j' → logprob: -11.258688926696777
    5. '<|end|>' → logprob: -11.633688926696777
    6. '1' → logprob: -12.758688926696777
    7. '+i' → logprob: -13.008688926696777
    8. '+
' → logprob: -13.383688926696777
    9. 'while' → logprob: -13.508688926696777
    10. '
' → logprob: -13.758688926696777

Token 51: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009152418002486229
    2. 'while' → logprob: -5.134152412414551
    3. ' while' → logprob: -6.509152412414551
    4. '<|end|>' → logprob: -7.009152412414551
    5. ' +' → logprob: -7.509152412414551
    6. '           ' → logprob: -8.75915241241455
    7. '<|end|>' → logprob: -10.25915241241455
    8. '+
' → logprob: -10.63415241241455
    9. 'While' → logprob: -11.38415241241455
    10. '+j' → logprob: -11.75915241241455

Token 52: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.38735195994377136
    2. '+' → logprob: -1.3873519897460938
    3. ' while' → logprob: -2.7623519897460938
    4. '           ' → logprob: -4.887351989746094
    5. '+j' → logprob: -8.637351989746094
    6. 'While' → logprob: -9.012351989746094
    7. '
' → logprob: -9.137351989746094
    8. 'j' → logprob: -9.637351989746094
    9. ' +' → logprob: -9.637351989746094
    10. '	while' → logprob: -9.637351989746094

Token 53: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4760933518409729
    2. ' j' → logprob: -0.9760933518409729
    3. ' s' → logprob: -6.726093292236328
    4. 's' → logprob: -7.226093292236328
    5. ' ' → logprob: -9.726093292236328
    6. '   ' → logprob: -11.226093292236328
    7. 'i' → logprob: -12.976093292236328
    8. 'isdigit' → logprob: -12.976093292236328
    9. '	j' → logprob: -13.101093292236328
    10. ' i' → logprob: -13.476093292236328

Token 54: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20396769046783447
    2. '<' → logprob: -2.203967571258545
    3. '+' → logprob: -2.703967571258545
    4. '<len' → logprob: -5.328967571258545
    5. ' +' → logprob: -6.328967571258545
    6. '<n' → logprob: -8.453968048095703
    7. ' ' → logprob: -9.328968048095703
    8. '<s' → logprob: -9.828968048095703
    9. '<size' → logprob: -10.328968048095703
    10. '<|end|>' → logprob: -10.328968048095703

Token 55: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889088988304138
    2. ' len' → logprob: -2.578890800476074
    3. '(len' → logprob: -14.953890800476074
    4. '=len' → logprob: -15.328890800476074
    5. '<len' → logprob: -15.453890800476074
    6. ' ' → logprob: -15.453890800476074
    7. '	len' → logprob: -15.953890800476074
    8. ',len' → logprob: -16.95389175415039
    9. '[len' → logprob: -17.57889175415039
    10. 'length' → logprob: -18.20389175415039

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00071695790393278
    2. 's' → logprob: -7.2507171630859375
    3. '(' → logprob: -12.000717163085938
    4. ' s' → logprob: -14.250717163085938
    5. ')' → logprob: -16.500717163085938
    6. ' (' → logprob: -16.875717163085938
    7. ')s' → logprob: -17.875717163085938
    8. '+' → logprob: -18.375717163085938
    9. '`s' → logprob: -19.125717163085938
    10. 'c' → logprob: -19.250717163085938

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004265846684575081
    2. 'and' → logprob: -5.879265785217285
    3. ' and' → logprob: -6.629265785217285
    4. ' )' → logprob: -9.004265785217285
    5. 's' → logprob: -11.379265785217285
    6. '   ' → logprob: -13.504265785217285
    7. '）' → logprob: -13.754265785217285
    8. ')s' → logprob: -14.254265785217285
    9. ' ' → logprob: -14.504265785217285
    10. '")' → logprob: -15.629265785217285

Token 58: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47409170866012573
    2. ' and' → logprob: -0.9740917086601257
    3. ' ' → logprob: -11.849091529846191
    4. '   ' → logprob: -12.099091529846191
    5. ')' → logprob: -14.349091529846191
    6. '           ' → logprob: -14.599091529846191
    7. '       ' → logprob: -15.724091529846191
    8. '	and' → logprob: -15.724091529846191
    9. '```' → logprob: -15.974091529846191
    10. '  ' → logprob: -16.224092483520508

Token 59: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759440064430237
    2. 's' → logprob: -0.8259440064430237
    3. '(s' → logprob: -12.450943946838379
    4. ' ' → logprob: -15.450943946838379
    5. ' (' → logprob: -15.575943946838379
    6. '	s' → logprob: -16.325944900512695
    7. 'isdigit' → logprob: -16.825944900512695
    8. '   ' → logprob: -16.950944900512695
    9. '<s' → logprob: -17.325944900512695
    10. '`s' → logprob: -17.450944900512695

Token 60: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. ')[' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '[js' → logprob: -18.375
    6. '][' → logprob: -18.5
    7. '[i' → logprob: -18.625
    8. 'j' → logprob: -18.75
    9. '[
' → logprob: -18.875
    10. ' [' → logprob: -19.0

Token 61: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.1895143985748291
    2. '.' → logprob: -2.189514398574829
    3. ').' → logprob: -2.939514398574829
    4. '].' → logprob: -5.81451416015625
    5. 'isdigit' → logprob: -5.93951416015625
    6. '>.' → logprob: -6.93951416015625
    7. ' .' → logprob: -7.06451416015625
    8. '}.' → logprob: -8.68951416015625
    9. '   ' → logprob: -9.68951416015625
    10. '().' → logprob: -10.43951416015625

Token 62: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.9361264946837764e-07
    2. 'isd' → logprob: -16.625
    3. ' is' → logprob: -20.875
    4. 'isal' → logprob: -21.5
    5. 'digit' → logprob: -22.125
    6. 'iss' → logprob: -23.0
    7. 'is' → logprob: -23.0
    8. 'startswith' → logprob: -23.75
    9. '   ' → logprob: -24.5
    10. 'rstrip' → logprob: -24.5

Token 63: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12713472545146942
    2. '()' → logprob: -2.1271347999572754
    3. '():
' → logprob: -8.877134323120117
    4. '())' → logprob: -10.877134323120117
    5. '(' → logprob: -11.627134323120117
    6. '()):
' → logprob: -11.627134323120117
    7. '()>' → logprob: -11.752134323120117
    8. '):' → logprob: -12.127134323120117
    9. ' ():' → logprob: -13.002134323120117
    10. '()==' → logprob: -13.002134323120117

Token 64: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0535019226372242
    2. 'j' → logprob: -3.678501844406128
    3. '           ' → logprob: -4.428502082824707
    4. ' j' → logprob: -4.928502082824707
    5. ':
' → logprob: -6.178502082824707
    6. ':' → logprob: -6.803502082824707
    7. ' and' → logprob: -7.178502082824707
    8. ':j' → logprob: -7.553502082824707
    9. '<|end|>' → logprob: -7.678502082824707
    10. '):
' → logprob: -7.803502082824707

Token 65: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11287810653448105
    2. 'j' (adapté à ' j') → logprob: -2.2378780841827393
    3. '	j' → logprob: -10.36287784576416
    4. '+' → logprob: -12.11287784576416
    5. '   ' → logprob: -12.48787784576416
    6. ' ' → logprob: -12.73787784576416
    7. '    ' → logprob: -12.73787784576416
    8. '                   ' → logprob: -13.73787784576416
    9. ' ' → logprob: -13.98787784576416
    10. '<|end|>' → logprob: -14.36287784576416

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7132585644721985
    2. '+' → logprob: -1.2132585048675537
    3. ' +=' → logprob: -1.5882585048675537
    4. ')' → logprob: -5.588258743286133
    5. '<|end|>' → logprob: -6.338258743286133
    6. '++' → logprob: -6.713258743286133
    7. ' +' → logprob: -7.588258743286133
    8. '<|end|>' → logprob: -7.838258743286133
    9. '=' → logprob: -8.713258743286133
    10. ']+=' → logprob: -9.213258743286133

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.50020408630371
    4. '```' → logprob: -19.87520408630371
    5. '  ' → logprob: -21.00020408630371
    6. '１' → logprob: -21.06270408630371
    7. '
' → logprob: -21.31270408630371
    8. '0' → logprob: -21.56270408630371
    9. '۱' → logprob: -21.56270408630371
    10. '2' → logprob: -22.18770408630371

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.937503814697266
    4. '   ' → logprob: -18.375003814697266
    5. '１' → logprob: -19.625003814697266
    6. '۱' → logprob: -19.937503814697266
    7. '  ' → logprob: -20.062503814697266
    8. '१' → logprob: -20.375003814697266
    9. '১' → logprob: -20.437503814697266
    10. '+' → logprob: -20.500003814697266

Token 69: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9355073571205139
    2. '       ' → logprob: -1.5605072975158691
    3. '
' → logprob: -1.9355072975158691
    4. ' tokens' → logprob: -1.9355072975158691
    5. 'tokens' → logprob: -2.685507297515869
    6. '<|end|>' → logprob: -4.685507297515869
    7. ')' → logprob: -4.810507297515869
    8. '   ' → logprob: -5.310507297515869
    9. '               ' → logprob: -5.685507297515869
    10. ' ' → logprob: -6.435507297515869

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03387885168194771
    2. '       ' → logprob: -3.908878803253174
    3. ' tokens' → logprob: -4.783878803253174
    4. 'tokens' → logprob: -6.158878803253174
    5. '               ' → logprob: -6.783878803253174
    6. '<|end|>' → logprob: -7.533878803253174
    7. '   ' → logprob: -7.908878803253174
    8. ',' → logprob: -8.658879280090332
    9. ')' → logprob: -9.283879280090332
    10. 'token' → logprob: -9.658879280090332

Token 71: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.4256080090999603
    2. 'tokens' (adapté à ' tokens') → logprob: -1.1756080389022827
    3. '           ' → logprob: -3.300607919692993
    4. 'token' → logprob: -7.675608158111572
    5. '       ' → logprob: -7.800608158111572
    6. ' token' → logprob: -9.175607681274414
    7. '               ' → logprob: -9.675607681274414
    8. '.tokens' → logprob: -10.675607681274414
    9. '   ' → logprob: -11.175607681274414
    10. '```' → logprob: -11.675607681274414

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013789254007861018
    2. '.' → logprob: -6.626379013061523
    3. '.extend' → logprob: -10.501379013061523
    4. 'append' → logprob: -11.501379013061523
    5. '.app' → logprob: -11.876379013061523
    6. '.Append' → logprob: -12.626379013061523
    7. '.ap' → logprob: -13.626379013061523
    8. '_append' → logprob: -14.126379013061523
    9. ').' → logprob: -14.501379013061523
    10. 'Append' → logprob: -14.626379013061523

Token 73: '(('' (ID: 122195)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0868551954627037
    2. '(s' → logprob: -2.586855173110962
    3. '(' → logprob: -4.836855411529541
    4. '(i' → logprob: -14.711854934692383
    5. '('' → logprob: -14.961854934692383
    6. '(in' → logprob: -14.961854934692383
    7. ' (' → logprob: -15.836854934692383
    8. 'int' → logprob: -16.086854934692383
    9. 's' → logprob: -16.086854934692383
    10. '((' → logprob: -16.461854934692383

Token 74: 'num' (ID: 4571)
  Prédit: 'NUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -1.0576591491699219
    2. 'NUMBER' → logprob: -1.0576591491699219
    3. ''' → logprob: -1.3076591491699219
    4. 'INT' → logprob: -3.557659149169922
    5. 'num' → logprob: -5.932659149169922
    6. 'number' → logprob: -6.182659149169922
    7. ''int' → logprob: -6.807659149169922
    8. 'int' → logprob: -7.807659149169922
    9. 'INTEGER' → logprob: -8.807659149169922
    10. '"' → logprob: -9.432659149169922

Token 75: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5248143076896667
    2. '',' → logprob: -0.8998143076896667
    3. '),' → logprob: -8.02481460571289
    4. ''' → logprob: -8.14981460571289
    5. ','' → logprob: -8.39981460571289
    6. '','' → logprob: -8.39981460571289
    7. 's' → logprob: -8.52481460571289
    8. ',int' → logprob: -9.52481460571289
    9. '',(' → logprob: -9.64981460571289
    10. ')' → logprob: -9.89981460571289

Token 76: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15030601620674133
    2. 'int' → logprob: -2.025305986404419
    3. ' s' → logprob: -5.025306224822998
    4. 's' → logprob: -6.900306224822998
    5. ' ' → logprob: -11.90030574798584
    6. ',int' → logprob: -11.90030574798584
    7. '(int' → logprob: -12.90030574798584
    8. ''int' → logprob: -13.15030574798584
    9. '[int' → logprob: -13.65030574798584
    10. ',' → logprob: -13.77530574798584

Token 77: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0010873513529077172
    2. '(' → logprob: -6.876087188720703
    3. 's' → logprob: -9.876087188720703
    4. ')' → logprob: -13.501087188720703
    5. ' (' → logprob: -13.626087188720703
    6. '(
' → logprob: -15.501087188720703
    7. ')(' → logprob: -15.626087188720703
    8. '(

' → logprob: -17.251087188720703
    9. ')s' → logprob: -17.501087188720703
    10. ' s' → logprob: -17.626087188720703

Token 78: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06803081929683685
    2. '[i' → logprob: -2.818030834197998
    3. '[s' → logprob: -5.193030834197998
    4. '[' → logprob: -7.693030834197998
    5. 's' → logprob: -11.94303035736084
    6. '[c' → logprob: -12.06803035736084
    7. ')[' → logprob: -12.19303035736084
    8. ')' → logprob: -12.31803035736084
    9. '[start' → logprob: -12.31803035736084
    10. ' [' → logprob: -12.56803035736084

Token 79: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.000491076149046421
    2. ':' → logprob: -8.50049114227295
    3. ' :' → logprob: -8.75049114227295
    4. 'j' → logprob: -9.50049114227295
    5. '[j' → logprob: -10.12549114227295
    6. ' j' → logprob: -11.62549114227295
    7. ' ' → logprob: -13.00049114227295
    8. ':i' → logprob: -13.12549114227295
    9. ',j' → logprob: -15.50049114227295
    10. '(j' → logprob: -15.87549114227295

Token 80: '])))
' (ID: 146875)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.04055193066596985
    2. '])))
' → logprob: -3.9155519008636475
    3. ']))' → logprob: -4.040552139282227
    4. ']' → logprob: -6.165552139282227
    5. ')))' → logprob: -9.790552139282227
    6. '))))' → logprob: -10.290552139282227
    7. ')]' → logprob: -11.915552139282227
    8. ']))
' → logprob: -12.290552139282227
    9. ']
' → logprob: -12.415552139282227
    10. ' ]' → logprob: -12.415552139282227

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003921847674064338
    2. ')' → logprob: -8.625391960144043
    3. 'i' → logprob: -8.750391960144043
    4. '            
' → logprob: -11.000391960144043
    5. ' i' → logprob: -11.625391960144043
    6. '```' → logprob: -12.000391960144043
    7. ')i' → logprob: -12.375391960144043
    8. '       ' → logprob: -12.625391960144043
    9. '               ' → logprob: -13.000391960144043
    10. '   ' → logprob: -13.250391960144043

Token 82: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4129068851470947
    2. 'i' (adapté à ' i') → logprob: -1.1629068851470947
    3. ' i' → logprob: -3.6629068851470947
    4. '   ' → logprob: -10.912906646728516
    5. '
' → logprob: -11.412906646728516
    6. '	i' → logprob: -12.912906646728516
    7. ' ' → logprob: -13.037906646728516
    8. '            
' → logprob: -13.412906646728516
    9. '          ' → logprob: -13.537906646728516
    10. '  ' → logprob: -14.037906646728516

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014258704148232937
    2. ' =' → logprob: -4.264258861541748
    3. '=j' → logprob: -9.26425838470459
    4. '=
' → logprob: -15.13925838470459
    5. '＝' → logprob: -16.889259338378906
    6. ' =
' → logprob: -17.639259338378906
    7. '=

' → logprob: -17.764259338378906
    8. '=i' → logprob: -17.889259338378906
    9. ' ' → logprob: -18.014259338378906
    10. '+=' → logprob: -18.389259338378906

Token 84: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022899746894836
    2. ' j' → logprob: -1.910228967666626
    3. '	j' → logprob: -12.535228729248047
    4. '    ' → logprob: -14.785228729248047
    5. ' ' → logprob: -15.035228729248047
    6. '$j' → logprob: -15.535228729248047
    7. '=j' → logprob: -16.160228729248047
    8. '   ' → logprob: -16.160228729248047
    9. ':j' → logprob: -16.285228729248047
    10. '<|end|>' → logprob: -18.035228729248047

Token 85: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42897796630859375
    2. '           ' → logprob: -1.0539779663085938
    3. 'continue' → logprob: -8.928977966308594
    4. 'elif' → logprob: -10.303977966308594
    5. ' continue' → logprob: -10.428977966308594
    6. '<|end|>' → logprob: -10.553977966308594
    7. 'else' → logprob: -10.678977966308594
    8. ' else' → logprob: -12.053977966308594
    9. '               ' → logprob: -12.053977966308594
    10. '   ' → logprob: -12.428977966308594

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004410771187394857
    2. '           ' → logprob: -5.629410743713379
    3. '<|end|>' → logprob: -7.379410743713379
    4. 'elif' → logprob: -9.879410743713379
    5. 'else' → logprob: -10.004410743713379
    6. ' else' → logprob: -10.254410743713379
    7. '<|end|>' → logprob: -11.379410743713379
    8. ' elif' → logprob: -11.379410743713379
    9. '   ' → logprob: -11.754410743713379
    10. '```' → logprob: -11.879410743713379

Token 87: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19805511832237244
    2. 'elif' (adapté à ' elif') → logprob: -1.9480551481246948
    3. ' elif' → logprob: -3.3230550289154053
    4. ' else' → logprob: -7.573055267333984
    5. 'else' → logprob: -7.698055267333984
    6. '	elif' → logprob: -9.698055267333984
    7. '   ' → logprob: -10.698055267333984
    8. '           ' → logprob: -11.198055267333984
    9. ')' → logprob: -12.573055267333984
    10. '<|end|>' → logprob: -12.948055267333984

Token 88: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47429728507995605
    2. ' c' → logprob: -0.974297285079956
    3. 's' → logprob: -8.974297523498535
    4. ' s' → logprob: -9.724297523498535
    5. ' ' → logprob: -10.849297523498535
    6. '	c' → logprob: -11.849297523498535
    7. ' ' → logprob: -13.599297523498535
    8. ')c' → logprob: -13.974297523498535
    9. '   ' → logprob: -14.036797523498535
    10. ' not' → logprob: -14.224297523498535

Token 89: ' in' (ID: 306)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5412368178367615
    2. ' in' → logprob: -0.9162368178367615
    3. '==' → logprob: -4.791236877441406
    4. ' ==' → logprob: -5.416236877441406
    5. '.is' → logprob: -5.666236877441406
    6. 'in' → logprob: -6.791236877441406
    7. ' .' → logprob: -7.916236877441406
    8. 'is' → logprob: -9.416236877441406
    9. 'iss' → logprob: -9.666236877441406
    10. '=='' → logprob: -9.916236877441406

Token 90: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.0360187329351902
    2. ''' → logprob: -4.1610188484191895
    3. ' '+' → logprob: -4.6610188484191895
    4. '"+' → logprob: -4.6610188484191895
    5. '"' → logprob: -8.286018371582031
    6. '['' → logprob: -8.411018371582031
    7. ' '' → logprob: -8.786018371582031
    8. '('' → logprob: -9.411018371582031
    9. ' "+' → logprob: -9.411018371582031
    10. '('+' → logprob: -9.911018371582031

Token 91: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015705646947026253
    2. '-*' → logprob: -6.876570701599121
    3. '-'' → logprob: -7.751570701599121
    4. '*/' → logprob: -10.126570701599121
    5. '*' → logprob: -10.126570701599121
    6. ' -' → logprob: -11.876570701599121
    7. '*-' → logprob: -12.501570701599121
    8. '()-' → logprob: -12.626570701599121
    9. '-=' → logprob: -12.751570701599121
    10. ''-' → logprob: -13.251570701599121

Token 92: '*/' (ID: 3680)
  Prédit: '*/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*/' → logprob: -0.011637978255748749
    2. '*' → logprob: -4.636638164520264
    3. '/*' → logprob: -7.386638164520264
    4. ''' → logprob: -7.636638164520264
    5. '()' → logprob: -7.886638164520264
    6. '=*/' → logprob: -9.011637687683105
    7. '*/)' → logprob: -9.136637687683105
    8. ' */' → logprob: -10.261637687683105
    9. '*/),' → logprob: -10.761637687683105
    10. ' ' → logprob: -11.136637687683105

Token 93: '()' (ID: 416)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.14924895763397217
    2. '':' → logprob: -2.2742490768432617
    3. '()' → logprob: -3.8992490768432617
    4. ''):
' → logprob: -5.649249076843262
    5. ' '' → logprob: -5.899249076843262
    6. ':' → logprob: -6.274249076843262
    7. '():' → logprob: -6.649249076843262
    8. ')' → logprob: -6.899249076843262
    9. '():
' → logprob: -7.149249076843262
    10. '('' → logprob: -7.274249076843262

Token 94: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.8017673492431641
    2. ':' → logprob: -1.051767349243164
    3. '':' → logprob: -1.926767349243164
    4. '):' → logprob: -3.926767349243164
    5. '):
' → logprob: -4.176767349243164
    6. ':
' → logprob: -4.301767349243164
    7. ''):
' → logprob: -5.926767349243164
    8. ' '' → logprob: -6.426767349243164
    9. ')' → logprob: -6.551767349243164
    10. ''' → logprob: -7.051767349243164

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.797081708908081
    2. '       ' → logprob: -1.297081708908081
    3. ' tokens' → logprob: -1.922081708908081
    4. 'tokens' → logprob: -2.047081708908081
    5. '.tokens' → logprob: -8.54708194732666
    6. '(tokens' → logprob: -9.17208194732666
    7. '   ' → logprob: -9.29708194732666
    8. '        ' → logprob: -9.79708194732666
    9. '```' → logprob: -10.29708194732666
    10. '_tokens' → logprob: -10.42208194732666

Token 96: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.6953705549240112
    2. 'tokens' (adapté à ' tokens') → logprob: -0.6953705549240112
    3. '           ' → logprob: -6.195370674133301
    4. '       ' → logprob: -8.8203706741333
    5. '.tokens' → logprob: -11.5703706741333
    6. '   ' → logprob: -11.8203706741333
    7. '(tokens' → logprob: -12.0703706741333
    8. 'token' → logprob: -13.0703706741333
    9. '_tokens' → logprob: -13.3203706741333
    10. ' ' → logprob: -13.5703706741333

Token 97: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005681642796844244
    2. '.' → logprob: -7.500568389892578
    3. ' .' → logprob: -11.750568389892578
    4. '.app' → logprob: -13.000568389892578
    5. 'append' → logprob: -13.125568389892578
    6. ').' → logprob: -13.875568389892578
    7. '.extend' → logprob: -14.125568389892578
    8. '.Append' → logprob: -14.250568389892578
    9. '.py' → logprob: -15.500568389892578
    10. '.ap' → logprob: -15.875568389892578

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.23135855793952942
    2. '(('' → logprob: -1.606358528137207
    3. '(' → logprob: -5.606358528137207
    4. '(c' → logprob: -6.106358528137207
    5. ' (' → logprob: -11.856358528137207
    6. ' ' → logprob: -12.356358528137207
    7. ' ((' → logprob: -12.481358528137207
    8. '(("' → logprob: -12.731358528137207
    9. '   ' → logprob: -13.106358528137207
    10. '({'' → logprob: -13.731358528137207

Token 99: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02821807749569416
    2. ''' → logprob: -3.6532180309295654
    3. '('',' → logprob: -7.6532182693481445
    4. '(c' → logprob: -8.028218269348145
    5. '('' → logprob: -8.278218269348145
    6. '(None' → logprob: -8.278218269348145
    7. ' c' → logprob: -8.528218269348145
    8. ''s' → logprob: -8.903218269348145
    9. 'None' → logprob: -9.778218269348145
    10. ''',' → logprob: -9.778218269348145

Token 100: ',))
' (ID: 140280)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003401213325560093
    2. ' ,' → logprob: -6.378401279449463
    3. ',''' → logprob: -7.503401279449463
    4. ''',' → logprob: -8.003400802612305
    5. ',None' → logprob: -8.003400802612305
    6. '',' → logprob: -9.003400802612305
    7. ',))
' → logprob: -9.128400802612305
    8. ',)' → logprob: -9.503400802612305
    9. ','' → logprob: -10.003400802612305
    10. '','' → logprob: -10.128400802612305

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05347096547484398
    2. 'i' → logprob: -3.4284708499908447
    3. '   ' → logprob: -4.678471088409424
    4. ' i' → logprob: -5.053471088409424
    5. '       ' → logprob: -5.553471088409424
    6. '<|end|>' → logprob: -10.928470611572266
    7. '	i' → logprob: -11.428470611572266
    8. ' ' → logprob: -11.678470611572266
    9. '```' → logprob: -12.053470611572266
    10. ',i' → logprob: -12.178470611572266

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.04936651140451431
    2. ' i' → logprob: -3.0493664741516113
    3. '           ' → logprob: -7.799366474151611
    4. '   ' → logprob: -8.04936695098877
    5. '       ' → logprob: -9.92436695098877
    6. '	i' → logprob: -14.79936695098877
    7. ' ' → logprob: -16.549365997314453
    8. '  ' → logprob: -17.049365997314453
    9. '```' → logprob: -17.424365997314453
    10. '    ' → logprob: -17.549365997314453

Token 103: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12854598462581635
    2. ' +=' → logprob: -2.1285459995269775
    3. '+' → logprob: -6.503545761108398
    4. '=' → logprob: -9.128545761108398
    5. '<|end|>' → logprob: -12.878545761108398
    6. '+='' → logprob: -13.378545761108398
    7. ' ' → logprob: -13.878545761108398
    8. ' +' → logprob: -13.878545761108398
    9. '++' → logprob: -14.128545761108398
    10. '1' → logprob: -14.128545761108398

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.125019073486328
    4. '```' → logprob: -17.500019073486328
    5. '  ' → logprob: -19.625019073486328
    6. '１' → logprob: -20.125019073486328
    7. '۱' → logprob: -20.750019073486328
    8. ' ' → logprob: -21.812519073486328
    9. '१' → logprob: -22.125019073486328
    10. '`' → logprob: -22.125019073486328

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '１' → logprob: -21.125001907348633
    6. '  ' → logprob: -21.375001907348633
    7. '۱' → logprob: -21.437501907348633
    8. '१' → logprob: -22.187501907348633
    9. '`' → logprob: -22.312501907348633
    10. 'len' → logprob: -22.375001907348633

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021402664424385875
    2. 'else' → logprob: -8.750213623046875
    3. ' else' → logprob: -9.875213623046875
    4. 'elif' → logprob: -13.000213623046875
    5. ' elif' → logprob: -13.875213623046875
    6. '<|end|>' → logprob: -14.375213623046875
    7. '```' → logprob: -16.375213623046875
    8. '	else' → logprob: -16.625213623046875
    9. '   ' → logprob: -16.750213623046875
    10. '	elif' → logprob: -17.375213623046875

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008814498432911932
    2. 'else' → logprob: -7.125881671905518
    3. ' else' → logprob: -9.50088119506836
    4. 'elif' → logprob: -13.37588119506836
    5. '```' → logprob: -14.75088119506836
    6. '   ' → logprob: -15.75088119506836
    7. ' elif' → logprob: -15.75088119506836
    8. '	else' → logprob: -17.00088119506836
    9. '	' → logprob: -17.50088119506836
    10. '      ' → logprob: -18.62588119506836

Token 108: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24323232471942902
    2. ' else' → logprob: -2.243232250213623
    3. 'else' → logprob: -2.243232250213623
    4. ' elif' → logprob: -6.243232250213623
    5. 'elif' (adapté à ' elif') → logprob: -6.368232250213623
    6. '   ' → logprob: -11.743232727050781
    7. '```' → logprob: -11.868232727050781
    8. '	else' → logprob: -12.493232727050781
    9. '	elif' → logprob: -13.368232727050781
    10. '    ' → logprob: -14.243232727050781

Token 109: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12698553502559662
    2. 'c' → logprob: -2.126985549926758
    3. ' s' → logprob: -10.251985549926758
    4. 's' → logprob: -11.251985549926758
    5. ' ' → logprob: -11.876985549926758
    6. ' ' → logprob: -14.001985549926758
    7. '	c' → logprob: -14.126985549926758
    8. '  ' → logprob: -14.876985549926758
    9. '   ' → logprob: -15.876985549926758
    10. ' not' → logprob: -16.626985549926758

Token 110: ' ==' (ID: 951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011199071072041988
    2. '==' → logprob: -4.636198997497559
    3. ' ==' → logprob: -6.636198997497559
    4. '=' → logprob: -10.011198997497559
    5. '=='' → logprob: -10.261198997497559
    6. ' .' → logprob: -10.386198997497559
    7. ' in' → logprob: -12.261198997497559
    8. '.is' → logprob: -12.511198997497559
    9. '=="' → logprob: -13.011198997497559
    10. '<|end|>' → logprob: -13.636198997497559

Token 111: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0009957717265933752
    2. ' '' → logprob: -7.250995635986328
    3. ''s' → logprob: -8.250995635986328
    4. ''t' → logprob: -11.500995635986328
    5. ''a' → logprob: -12.625995635986328
    6. ''m' → logprob: -13.250995635986328
    7. ''b' → logprob: -13.375995635986328
    8. ''d' → logprob: -14.000995635986328
    9. ''e' → logprob: -14.000995635986328
    10. ''en' → logprob: -14.125995635986328

Token 112: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40686509013175964
    2. ' ' → logprob: -1.406865119934082
    3. ' '' → logprob: -2.531865119934082
    4. ''s' → logprob: -5.281865119934082
    5. ' ':' → logprob: -6.031865119934082
    6. '#' → logprob: -7.406865119934082
    7. ':' → logprob: -8.531865119934082
    8. ' ')' → logprob: -8.656865119934082
    9. '<|end|>' → logprob: -8.781865119934082
    10. '':' → logprob: -8.781865119934082

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3515459895133972
    2. ':
' → logprob: -1.226546049118042
    3. '       ' → logprob: -6.726545810699463
    4. '           ' → logprob: -6.851545810699463
    5. '):
' → logprob: -8.351546287536621
    6. ' or' → logprob: -8.476546287536621
    7. '<|end|>' → logprob: -8.851546287536621
    8. '<|end|>' → logprob: -9.351546287536621
    9. '):' → logprob: -10.476546287536621
    10. '   ' → logprob: -10.726546287536621

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12995629012584686
    2. '       ' → logprob: -2.1299562454223633
    3. 'i' → logprob: -5.879956245422363
    4. ' i' → logprob: -8.629956245422363
    5. '   ' → logprob: -10.004956245422363
    6. '               ' → logprob: -12.754956245422363
    7. '	       ' → logprob: -14.504956245422363
    8. '         ' → logprob: -14.754956245422363
    9. '        ' → logprob: -15.004956245422363
    10. '          ' → logprob: -15.629956245422363

Token 115: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0004354373668320477
    2. ' i' → logprob: -7.7504353523254395
    3. '           ' → logprob: -12.500435829162598
    4. '   ' → logprob: -14.250435829162598
    5. '       ' → logprob: -14.875435829162598
    6. '	i' → logprob: -17.62543487548828
    7. '
' → logprob: -19.25043487548828
    8. '            
' → logprob: -20.75043487548828
    9. '    ' → logprob: -20.87543487548828
    10. '     ' → logprob: -21.12543487548828

Token 116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008614808320999146
    2. ' +=' → logprob: -4.758615016937256
    3. ']+=' → logprob: -15.383614540100098
    4. '=' → logprob: -16.133615493774414
    5. '   ' → logprob: -17.383615493774414
    6. '+' → logprob: -17.883615493774414
    7. '+='' → logprob: -18.633615493774414
    8. '+="' → logprob: -19.383615493774414
    9. '    ' → logprob: -20.508615493774414
    10. '```' → logprob: -20.758615493774414

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.62506675720215
    4. '```' → logprob: -18.62506675720215
    5. '۱' → logprob: -19.68756675720215
    6. '１' → logprob: -20.06256675720215
    7. '  ' → logprob: -20.81256675720215
    8. '১' → logprob: -21.00006675720215
    9. '
' → logprob: -21.12506675720215
    10. '१' → logprob: -21.18756675720215

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.437501907348633
    5. '１' → logprob: -20.562501907348633
    6. '১' → logprob: -21.062501907348633
    7. '१' → logprob: -21.062501907348633
    8. '۱' → logprob: -21.125001907348633
    9. '' → logprob: -22.687501907348633
    10. 'len' → logprob: -22.750001907348633

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3978836238384247
    2. 'else' → logprob: -1.147883653640747
    3. ' else' → logprob: -4.522883415222168
    4. 'elif' → logprob: -9.772883415222168
    5. '	else' → logprob: -10.897883415222168
    6. '   ' → logprob: -11.397883415222168
    7. '<|end|>' → logprob: -13.022883415222168
    8. '```' → logprob: -13.147883415222168
    9. '_else' → logprob: -14.397883415222168
    10. '}else' → logprob: -14.397883415222168

Token 120: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2531946003437042
    2. '       ' → logprob: -1.5031945705413818
    3. ' else' → logprob: -6.878194808959961
    4. 'elif' → logprob: -8.503194808959961
    5. '```' → logprob: -10.753194808959961
    6. '   ' → logprob: -11.878194808959961
    7. '	else' → logprob: -13.003194808959961
    8. ')' → logprob: -15.503194808959961
    9. '}else' → logprob: -15.628194808959961
    10. '_else' → logprob: -15.753194808959961

Token 121: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.003068622201681137
    2. ' else' → logprob: -6.003068447113037
    3. '       ' → logprob: -8.128068923950195
    4. 'elif' → logprob: -8.128068923950195
    5. '	else' → logprob: -13.503068923950195
    6. '   ' → logprob: -14.128068923950195
    7. 'e' → logprob: -16.378068923950195
    8. '```' → logprob: -16.503068923950195
    9. ' elif' → logprob: -16.628068923950195
    10. 'els' → logprob: -17.503068923950195

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05491466447710991
    2. ':
' → logprob: -2.929914712905884
    3. ':

' → logprob: -11.804914474487305
    4. ':return' → logprob: -11.804914474487305
    5. ':
' → logprob: -12.054914474487305
    6. ' :' → logprob: -12.554914474487305
    7. '   ' → logprob: -13.304914474487305
    8. ' raise' → logprob: -13.804914474487305
    9. '       ' → logprob: -13.929914474487305
    10. ' :
' → logprob: -14.304914474487305

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2043643593788147
    2. 'raise' → logprob: -1.70436429977417
    3. ' raise' → logprob: -6.45436429977417
    4. '       ' → logprob: -7.70436429977417
    5. 'break' → logprob: -7.70436429977417
    6. 'return' → logprob: -7.95436429977417
    7. '   ' → logprob: -9.704364776611328
    8. '	raise' → logprob: -10.454364776611328
    9. '```' → logprob: -11.079364776611328
    10. 'assert' → logprob: -12.204364776611328

Token 124: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.25399237871170044
    2. ' raise' → logprob: -1.5039923191070557
    3. 'break' → logprob: -6.503992557525635
    4. ' break' → logprob: -8.253992080688477
    5. '   ' → logprob: -8.503992080688477
    6. '           ' → logprob: -9.878992080688477
    7. '	raise' → logprob: -10.628992080688477
    8. 'return' → logprob: -11.003992080688477
    9. '    ' → logprob: -12.628992080688477
    10. 'assert' → logprob: -13.878992080688477

Token 125: ' invalid' (ID: 15796)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6931835412979126
    2. 'raise' → logprob: -0.6931835412979126
    3. 'assert' → logprob: -12.068183898925781
    4. '   ' → logprob: -12.068183898925781
    5. 'return' → logprob: -12.193183898925781
    6. 'break' → logprob: -12.443183898925781
    7. ' break' → logprob: -12.568183898925781
    8. '#' → logprob: -12.568183898925781
    9. '	raise' → logprob: -13.318183898925781
    10. ' assert' → logprob: -13.443183898925781

Token 126: ' char' (ID: 1826)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.27084881067276
    2. 'raise' → logprob: -2.8958487510681152
    3. 's' → logprob: -3.2708487510681152
    4. 'token' → logprob: -3.2708487510681152
    5. ' ' → logprob: -3.3958487510681152
    6. ' token' → logprob: -4.395848751068115
    7. ' s' → logprob: -4.770848751068115
    8. '_token' → logprob: -4.895848751068115
    9. ' character' → logprob: -5.020848751068115
    10. 'i' → logprob: -5.145848751068115

Token 127: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029940009117126465
    2. ' raise' → logprob: -3.904940128326416
    3. 'raise' → logprob: -5.279940128326416
    4. '       ' → logprob: -5.904940128326416
    5. '            
' → logprob: -7.654940128326416
    6. '   ' → logprob: -8.654939651489258
    7. '	raise' → logprob: -9.029939651489258
    8. 's' → logprob: -9.154939651489258
    9. 'i' → logprob: -9.404939651489258
    10. '
' → logprob: -9.779939651489258

Token 128: ' skip' (ID: 16677)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.12218537926673889
    2. ' raise' → logprob: -2.622185468673706
    3. '           ' → logprob: -3.372185468673706
    4. 'return' → logprob: -4.997185230255127
    5. 'break' → logprob: -7.497185230255127
    6. 'i' → logprob: -7.747185230255127
    7. ' return' → logprob: -8.497185707092285
    8. ' i' → logprob: -9.747185707092285
    9. ' break' → logprob: -10.497185707092285
    10. '            ' → logprob: -12.122185707092285

Token 129: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05292489379644394
    2. 'i' → logprob: -3.052924871444702
    3. ' i' → logprob: -6.052925109863281
    4. '   ' → logprob: -6.427925109863281
    5. '       ' → logprob: -8.052925109863281
    6. '<|end|>' → logprob: -11.177925109863281
    7. ' ' → logprob: -11.927925109863281
    8. ',' → logprob: -12.177925109863281
    9. '<|end|>' → logprob: -12.802925109863281
    10. '               ' → logprob: -12.927925109863281

Token 130: ' error' (ID: 2915)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.10387902706861496
    2. ' raise' → logprob: -2.353878974914551
    3. 'i' → logprob: -6.103878974914551
    4. ' i' → logprob: -7.603878974914551
    5. 'pass' → logprob: -7.853878974914551
    6. 'break' → logprob: -8.22887897491455
    7. ' pass' → logprob: -9.10387897491455
    8. 'error' → logprob: -9.10387897491455
    9. ' break' → logprob: -10.60387897491455
    10. ' error' → logprob: -11.22887897491455

Token 131: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01705995760858059
    2. ' i' → logprob: -5.017059803009033
    3. 'i' → logprob: -5.767059803009033
    4. '   ' → logprob: -5.767059803009033
    5. '       ' → logprob: -5.892059803009033
    6. ' raise' → logprob: -8.017060279846191
    7. ',' → logprob: -8.392060279846191
    8. '<|end|>' → logprob: -8.767060279846191
    9. ')' → logprob: -9.267060279846191
    10. 'raise' → logprob: -9.392060279846191

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035165678709745407
    2. 'raise' → logprob: -6.628516674041748
    3. 'i' → logprob: -6.753516674041748
    4. ' i' → logprob: -7.753516674041748
    5. ' raise' → logprob: -8.00351619720459
    6. '       ' → logprob: -8.75351619720459
    7. '   ' → logprob: -9.37851619720459
    8. '               ' → logprob: -12.50351619720459
    9. 'pass' → logprob: -13.00351619720459
    10. 'return' → logprob: -13.00351619720459

Token 133: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0014338012551888824
    2. '           ' → logprob: -6.876433849334717
    3. ' i' → logprob: -8.001433372497559
    4. '   ' → logprob: -10.001433372497559
    5. 'raise' → logprob: -11.626433372497559
    6. 'return' → logprob: -11.751433372497559
    7. '       ' → logprob: -12.626433372497559
    8. '```' → logprob: -15.626433372497559
    9. 'pass' → logprob: -15.751433372497559
    10. ' raise' → logprob: -16.751434326171875

Token 134: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014806866645813
    2. ' +=' → logprob: -1.7014806270599365
    3. '=' → logprob: -9.701480865478516
    4. '+' → logprob: -12.201480865478516
    5. '   ' → logprob: -14.951480865478516
    6. '    ' → logprob: -15.201480865478516
    7. ' ' → logprob: -15.951480865478516
    8. ')' → logprob: -16.326480865478516
    9. ']+=' → logprob: -16.576480865478516
    10. ' =' → logprob: -16.701480865478516

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. '１' → logprob: -20.250017166137695
    5. '```' → logprob: -20.500017166137695
    6. '۱' → logprob: -21.812517166137695
    7. '  ' → logprob: -21.937517166137695
    8. '
' → logprob: -22.062517166137695
    9. '       ' → logprob: -22.375017166137695
    10. '           ' → logprob: -22.375017166137695

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -15.75001049041748
    4. '   ' → logprob: -17.750009536743164
    5. '' → logprob: -18.125009536743164
    6. '0' → logprob: -18.312509536743164
    7. '
' → logprob: -18.312509536743164
    8. '１' → logprob: -18.312509536743164
    9. '<|end|>' → logprob: -18.375009536743164
    10. '۱' → logprob: -18.625009536743164

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02916816808283329
    2. '<|end|>' → logprob: -4.029168128967285
    3. 'return' → logprob: -5.779168128967285
    4. '
' → logprob: -5.904168128967285
    5. '    
' → logprob: -6.654168128967285
    6. ' return' → logprob: -7.029168128967285
    7. '       ' → logprob: -7.154168128967285
    8. ':return' → logprob: -7.404168128967285
    9. ')' → logprob: -7.654168128967285
    10. '	return' → logprob: -7.779168128967285

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007735935039818287
    2. 'return' → logprob: -4.882735729217529
    3. ' return' → logprob: -9.757736206054688
    4. 'def' → logprob: -10.132736206054688
    5. '    
' → logprob: -11.757736206054688
    6. '       ' → logprob: -12.007736206054688
    7. '<|end|>' → logprob: -12.382736206054688
    8. '```' → logprob: -12.507736206054688
    9. '	return' → logprob: -12.757736206054688
    10. ')' → logprob: -12.757736206054688

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08226873725652695
    2. '   ' → logprob: -2.582268714904785
    3. ' return' → logprob: -5.707268714904785
    4. 'def' → logprob: -11.207268714904785
    5. '	return' → logprob: -11.207268714904785
    6. ':return' → logprob: -12.332268714904785
    7. '
' → logprob: -12.582268714904785
    8. '    
' → logprob: -12.582268714904785
    9. ')return' → logprob: -12.957268714904785
    10. ')' → logprob: -13.082268714904785

Token 140: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -2.165027217415627e-05
    2. ' tokens' → logprob: -10.750021934509277
    3. '(tokens' → logprob: -15.750021934509277
    4. 'token' → logprob: -20.50002098083496
    5. '.tokens' → logprob: -21.87502098083496
    6. '_tokens' → logprob: -23.25002098083496
    7. 'Tokens' → logprob: -24.12502098083496
    8. 't' → logprob: -24.75002098083496
    9. 'okens' → logprob: -25.25002098083496
    10. 'tok' → logprob: -25.25002098083496

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34893885254859924
    2. 'def' → logprob: -1.5989388227462769
    3. '

' → logprob: -2.9739389419555664
    4. '<|end|>' → logprob: -3.5989389419555664
    5. '\n' → logprob: -5.723938941955566
    6. '```' → logprob: -6.223938941955566
    7. 'newline' → logprob: -6.223938941955566
    8. '<|end|>' → logprob: -6.598938941955566
    9. '    
' → logprob: -6.723938941955566
    10. '  
' → logprob: -7.223938941955566

Token 142: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011839192593470216
    2. '
' → logprob: -7.251183986663818
    3. '```' → logprob: -8.62618350982666
    4. '\n' → logprob: -9.25118350982666
    5. '

' → logprob: -9.75118350982666
    6. '\' → logprob: -10.00118350982666
    7. ' def' → logprob: -11.00118350982666
    8. '    
' → logprob: -11.12618350982666
    9. 'newline' → logprob: -11.37618350982666
    10. '  
' → logprob: -11.37618350982666

Token 143: ' Parser' (ID: 44901)
  Prédit: ' Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Parser' → logprob: -0.5795006155967712
    2. 'Parser' → logprob: -0.8295006155967712
    3. 'Tokenizer' → logprob: -6.954500675201416
    4. 'Expr' → logprob: -7.704500675201416
    5. ' Calculator' → logprob: -7.829500675201416
    6. 'Evaluator' → logprob: -7.829500675201416
    7. 'Lexer' → logprob: -8.329500198364258
    8. ' Expr' → logprob: -8.454500198364258
    9. 'Expression' → logprob: -8.579500198364258
    10. ' Token' → logprob: -8.954500198364258

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003309361054562032
    2. ':
' → logprob: -8.250330924987793
    3. '(object' → logprob: -10.000330924987793
    4. '():' → logprob: -12.000330924987793
    5. '(Parser' → logprob: -12.250330924987793
    6. '(' → logprob: -12.625330924987793
    7. ' :' → logprob: -12.750330924987793
    8. ':def' → logprob: -13.000330924987793
    9. '):' → logprob: -13.125330924987793
    10. ':**' → logprob: -14.000330924987793

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048576466739177704
    2. ' def' → logprob: -3.1735763549804688
    3. 'def' → logprob: -6.173576354980469
    4. '	def' → logprob: -7.048576354980469
    5. '    
' → logprob: -7.173576354980469
    6. '    ' → logprob: -7.173576354980469
    7. ' indentation' → logprob: -7.798576354980469
    8. '(indent' → logprob: -9.173576354980469
    9. '<|end|>' → logprob: -9.548576354980469
    10. '   ' → logprob: -9.673576354980469

Token 146: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0015046248445287347
    2. 'def' (adapté à ' def') → logprob: -6.501504421234131
    3. '   ' → logprob: -13.376504898071289
    4. '    ' → logprob: -14.876504898071289
    5. ' __' → logprob: -15.001504898071289
    6. '	def' → logprob: -17.12650489807129
    7. ' indent' → logprob: -18.50150489807129
    8. ' indentation' → logprob: -18.62650489807129
    9. ' ' → logprob: -18.87650489807129
    10. ' ' → logprob: -19.00150489807129

Token 147: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005489871837198734
    2. '__' → logprob: -5.630489826202393
    3. ' init' → logprob: -6.505489826202393
    4. 'init' → logprob: -8.00549030303955
    5. '_init' → logprob: -9.75549030303955
    6. ' ' → logprob: -14.63049030303955
    7. ' _' → logprob: -14.75549030303955
    8. ' ' → logprob: -15.25549030303955
    9. ' def' → logprob: -16.380489349365234
    10. ' parse' → logprob: -17.005489349365234

Token 148: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -20.125
    3. '_init' → logprob: -20.75
    4. 'ini' → logprob: -21.25
    5. 'int' → logprob: -21.75
    6. 'inite' → logprob: -22.125
    7. '```' → logprob: -22.5
    8. 'def' → logprob: -22.625
    9. 'initi' → logprob: -22.875
    10. '(init' → logprob: -23.625

Token 149: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0008968125330284238
    2. '__' → logprob: -7.37589693069458
    3. '(self' → logprob: -8.250896453857422
    4. '__(
' → logprob: -12.375896453857422
    5. '__((' → logprob: -13.000896453857422
    6. 'self' → logprob: -13.875896453857422
    7. '__('' → logprob: -14.125896453857422
    8. '_(' → logprob: -15.000896453857422
    9. '__(*' → logprob: -15.125896453857422
    10. '(' → logprob: -15.500896453857422

Token 150: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.292907877039397e-06
    2. ' self' → logprob: -12.75000286102295
    3. ')' → logprob: -16.000003814697266
    4. 's' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '(self' → logprob: -17.375003814697266
    7. '
' → logprob: -18.250003814697266
    8. '_self' → logprob: -19.500003814697266
    9. 'def' → logprob: -19.625003814697266
    10. '```' → logprob: -19.750003814697266

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007046872633509338
    2. 'self' → logprob: -7.500704765319824
    3. ' ,' → logprob: -9.375704765319824
    4. ',s' → logprob: -10.125704765319824
    5. ',self' → logprob: -10.625704765319824
    6. ' self' → logprob: -14.625704765319824
    7. ',input' → logprob: -14.750704765319824
    8. '(self' → logprob: -15.500704765319824
    9. ',parent' → logprob: -15.500704765319824
    10. ',user' → logprob: -15.625704765319824

Token 152: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.016142405569553375
    2. ' tokens' → logprob: -4.14114236831665
    3. 's' → logprob: -9.391142845153809
    4. 'text' → logprob: -11.391142845153809
    5. ' s' → logprob: -12.141142845153809
    6. 'token' → logprob: -12.891142845153809
    7. 'self' → logprob: -12.891142845153809
    8. '(tokens' → logprob: -13.516142845153809
    9. '.tokens' → logprob: -14.391142845153809
    10. '```' → logprob: -15.391142845153809

Token 153: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037185583263635635
    2. '):' → logprob: -3.7871856689453125
    3. '):
' → logprob: -4.2871856689453125
    4. ' ,' → logprob: -9.787185668945312
    5. '   ' → logprob: -11.412185668945312
    6. ' ):' → logprob: -11.912185668945312
    7. '):
' → logprob: -12.287185668945312
    8. ')' → logprob: -12.287185668945312
    9. ',index' → logprob: -12.537185668945312
    10. '):

' → logprob: -13.037185668945312

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005501729901880026
    2. 'self' → logprob: -5.505501747131348
    3. ' self' → logprob: -6.630501747131348
    4. '   ' → logprob: -9.630501747131348
    5. '<|end|>' → logprob: -11.505501747131348
    6. '	self' → logprob: -12.255501747131348
    7. '(self' → logprob: -12.380501747131348
    8. '	   ' → logprob: -12.505501747131348
    9. ',' → logprob: -12.630501747131348
    10. ' ' → logprob: -13.630501747131348

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014712453819811344
    2. ' self' → logprob: -4.264712333679199
    3. '       ' → logprob: -7.514712333679199
    4. '   ' → logprob: -12.6397123336792
    5. '
' → logprob: -15.2647123336792
    6. '	self' → logprob: -15.7647123336792
    7. '(self' → logprob: -16.264713287353516
    8. '0' → logprob: -17.764713287353516
    9. ' ' → logprob: -17.889713287353516
    10. '        
' → logprob: -17.889713287353516

Token 156: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.0002028251619776711
    2. '.t' → logprob: -8.750203132629395
    3. ' .' → logprob: -10.750203132629395
    4. '.token' → logprob: -11.375203132629395
    5. '.' → logprob: -11.500203132629395
    6. '.index' → logprob: -14.875203132629395
    7. '.current' → logprob: -15.375203132629395
    8. '.words' → logprob: -16.375202178955078
    9. '.characters' → logprob: -16.625202178955078
    10. '.data' → logprob: -16.750202178955078

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25278306007385254
    2. '=' → logprob: -1.5027830600738525
    3. '   ' → logprob: -7.627782821655273
    4. ',' → logprob: -8.627782821655273
    5. ')' → logprob: -9.127782821655273
    6. '       ' → logprob: -10.752782821655273
    7. '_index' → logprob: -11.127782821655273
    8. 'self' → logprob: -11.502782821655273
    9. '=self' → logprob: -11.627782821655273
    10. '_idx' → logprob: -11.752782821655273

Token 158: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.01815076172351837
    2. ' tokens' → logprob: -4.018150806427002
    3. '(tokens' → logprob: -14.143150329589844
    4. '.tokens' → logprob: -16.018150329589844
    5. '_tokens' → logprob: -18.643150329589844
    6. '   ' → logprob: -18.893150329589844
    7. 'token' → logprob: -19.143150329589844
    8. 'okens' → logprob: -19.893150329589844
    9. 'Tokens' → logprob: -20.643150329589844
    10. '[' → logprob: -20.893150329589844

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007195804500952363
    2. 'self' → logprob: -7.3757195472717285
    3. '   ' → logprob: -9.625720024108887
    4. ' self' → logprob: -10.750720024108887
    5. '
' → logprob: -12.750720024108887
    6. '```' → logprob: -14.500720024108887
    7. '[self' → logprob: -14.750720024108887
    8. ',' → logprob: -15.125720024108887
    9. ' ' → logprob: -15.375720024108887
    10. '<|end|>' → logprob: -15.375720024108887

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002976633608341217
    2. 'self' → logprob: -5.877976417541504
    3. ' self' → logprob: -9.002976417541504
    4. '   ' → logprob: -10.002976417541504
    5. '
' → logprob: -13.502976417541504
    6. '[self' → logprob: -14.627976417541504
    7. '	self' → logprob: -15.002976417541504
    8. '        
' → logprob: -15.627976417541504
    9. ' ' → logprob: -15.752976417541504
    10. ',' → logprob: -15.752976417541504

Token 161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002620370127260685
    2. ' self' → logprob: -6.252620220184326
    3. '       ' → logprob: -7.502620220184326
    4. '   ' → logprob: -8.877620697021484
    5. '
' → logprob: -15.752620697021484
    6. '	self' → logprob: -16.752620697021484
    7. '0' → logprob: -16.877620697021484
    8. ' ' → logprob: -17.627620697021484
    9. '    ' → logprob: -17.877620697021484
    10. '        ' → logprob: -18.502620697021484

Token 162: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.18810606002807617
    2. '.index' → logprob: -2.938106060028076
    3. '_pos' → logprob: -2.938106060028076
    4. 'pos' → logprob: -3.563106060028076
    5. '_index' → logprob: -4.313106060028076
    6. 'index' → logprob: -4.688106060028076
    7. '.' → logprob: -5.813106060028076
    8. '.idx' → logprob: -5.938106060028076
    9. '.current' → logprob: -6.438106060028076
    10. '_idx' → logprob: -6.438106060028076

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575974702835083
    2. ' =' → logprob: -0.825974702835083
    3. '   ' → logprob: -10.575974464416504
    4. '       ' → logprob: -12.950974464416504
    5. ' ' → logprob: -13.075974464416504
    6. '<|end|>' → logprob: -13.200974464416504
    7. '0' → logprob: -13.825974464416504
    8. '    ' → logprob: -14.200974464416504
    9. '  ' → logprob: -14.825974464416504
    10. '        ' → logprob: -15.075974464416504

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.000024795532227
    4. '۰' → logprob: -19.375024795532227
    5. '<|end|>' → logprob: -20.375024795532227
    6. '```' → logprob: -21.000024795532227
    7. '[' → logprob: -21.375024795532227
    8. '  ' → logprob: -21.500024795532227
    9. '000' → logprob: -22.312524795532227
    10. '=' → logprob: -22.812524795532227

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -19.875
    4. '<|end|>' → logprob: -20.5
    5. '000' → logprob: -20.75
    6. '[' → logprob: -20.875
    7. '```' → logprob: -21.125
    8. '   ' → logprob: -21.625
    9. '00' → logprob: -21.75
    10. '-' → logprob: -22.25

Token 166: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5242475271224976
    2. '   ' → logprob: -1.8992475271224976
    3. ' def' → logprob: -1.8992475271224976
    4. '    
' → logprob: -2.774247646331787
    5. '
' → logprob: -3.649247646331787
    6. '<|end|>' → logprob: -4.399247646331787
    7. '  
' → logprob: -6.274247646331787
    8. '	def' → logprob: -6.649247646331787
    9. '        
' → logprob: -6.649247646331787
    10. ' 
' → logprob: -6.774247646331787

Token 168: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06248496472835541
    2. ' def' → logprob: -2.9374849796295166
    3. '    
' → logprob: -5.6874847412109375
    4. '   ' → logprob: -6.1874847412109375
    5. '<|end|>' → logprob: -6.6874847412109375
    6. '  
' → logprob: -8.437484741210938
    7. '
' → logprob: -8.812484741210938
    8. '	def' → logprob: -8.812484741210938
    9. '```' → logprob: -9.312484741210938
    10. ' 
' → logprob: -9.312484741210938

Token 169: ' peek' (ID: 54757)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5175771713256836
    2. ' peek' → logprob: -1.0175771713256836
    3. 'peek' → logprob: -3.7675771713256836
    4. 'current' → logprob: -5.017577171325684
    5. 'eat' → logprob: -5.642577171325684
    6. ' next' → logprob: -5.892577171325684
    7. ' eat' → logprob: -5.892577171325684
    8. ' consume' → logprob: -6.017577171325684
    9. 'consume' → logprob: -7.892577171325684
    10. ' advance' → logprob: -8.392577171325684

Token 170: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022269312292337418
    2. '()' → logprob: -3.8972692489624023
    3. '(' → logprob: -6.397269248962402
    4. ' (' → logprob: -10.772269248962402
    5. 'self' → logprob: -11.647269248962402
    6. ' ()' → logprob: -11.772269248962402
    7. '   ' → logprob: -11.772269248962402
    8. 'def' → logprob: -12.272269248962402
    9. ' ' → logprob: -12.772269248962402
    10. ')' → logprob: -13.522269248962402

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06738656014204025
    2. '):
' → logprob: -2.8173866271972656
    3. ')' → logprob: -5.692386627197266
    4. '():' → logprob: -6.942386627197266
    5. '():
' → logprob: -8.317386627197266
    6. '(self' → logprob: -8.442386627197266
    7. '):

' → logprob: -8.817386627197266
    8. 'self' → logprob: -9.067386627197266
    9. '()' → logprob: -9.317386627197266
    10. ' ):' → logprob: -9.317386627197266

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2508206069469452
    2. '()' → logprob: -1.8758206367492676
    3. '   ' → logprob: -3.6258206367492676
    4. 'return' → logprob: -3.6258206367492676
    5. ' return' → logprob: -4.625820636749268
    6. '(self' → logprob: -6.625820636749268
    7. '()
' → logprob: -6.750820636749268
    8. 'self' → logprob: -6.750820636749268
    9. '():
' → logprob: -7.125820636749268
    10. '(' → logprob: -8.87582015991211

Token 173: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5161277055740356
    2. ' return' → logprob: -1.0161277055740356
    3. 'if' (adapté à ' if') → logprob: -3.766127586364746
    4. 'return' → logprob: -4.016127586364746
    5. '       ' → logprob: -11.891127586364746
    6. '   ' → logprob: -12.391127586364746
    7. ' self' → logprob: -13.266127586364746
    8. '	return' → logprob: -14.766127586364746
    9. 'self' → logprob: -15.266127586364746
    10. '()' → logprob: -15.266127586364746

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.251930296421051
    2. ' self' → logprob: -1.5019302368164062
    3. '	self' → logprob: -15.251930236816406
    4. ' ' → logprob: -15.251930236816406
    5. 'Self' → logprob: -15.751930236816406
    6. '_self' → logprob: -15.751930236816406
    7. '   ' → logprob: -15.876930236816406
    8. '0' → logprob: -16.001930236816406
    9. '(self' → logprob: -16.126930236816406
    10. 'elf' → logprob: -17.251930236816406

Token 175: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -5.466968650580384e-05
    2. 'pos' → logprob: -9.875054359436035
    3. '<' → logprob: -13.625054359436035
    4. '.' → logprob: -13.875054359436035
    5. '[pos' → logprob: -15.750054359436035
    6. '_pos' → logprob: -15.750054359436035
    7. ' pos' → logprob: -16.00005531311035
    8. ' <' → logprob: -16.12505531311035
    9. 'self' → logprob: -16.12505531311035
    10. '	pos' → logprob: -16.25005531311035

Token 176: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.38925740122795105
    2. ' <' → logprob: -1.1392574310302734
    3. '<len' → logprob: -6.389257431030273
    4. '>=' → logprob: -7.514257431030273
    5. ' >=' → logprob: -9.014257431030273
    6. '<size' → logprob: -11.014257431030273
    7. '[' → logprob: -11.889257431030273
    8. ' ' → logprob: -12.389257431030273
    9. '<num' → logprob: -12.764257431030273
    10. '<int' → logprob: -13.389257431030273

Token 177: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.048587486147880554
    2. ' len' → logprob: -3.0485875606536865
    3. '(len' → logprob: -16.298587799072266
    4. '=len' → logprob: -18.173587799072266
    5. '<len' → logprob: -19.673587799072266
    6. '	len' → logprob: -19.798587799072266
    7. '[len' → logprob: -19.798587799072266
    8. 'self' → logprob: -20.048587799072266
    9. ',len' → logprob: -21.298587799072266
    10. 'length' → logprob: -21.423587799072266

Token 178: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. 'self' → logprob: -17.625
    4. '(this' → logprob: -21.0
    5. '=self' → logprob: -22.0
    6. ' self' → logprob: -22.125
    7. '[self' → logprob: -22.375
    8. ' (' → logprob: -22.5
    9. '(s' → logprob: -22.5
    10. '(tokens' → logprob: -22.75

Token 179: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -4.723352049040841e-06
    2. 'tokens' → logprob: -13.000004768371582
    3. '.t' → logprob: -13.375004768371582
    4. '(tokens' → logprob: -14.625004768371582
    5. 'self' → logprob: -16.000003814697266
    6. ' .' → logprob: -16.250003814697266
    7. ').' → logprob: -17.125003814697266
    8. '.s' → logprob: -17.375003814697266
    9. 'okens' → logprob: -17.750003814697266
    10. ')' → logprob: -18.125003814697266

Token 180: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03811148926615715
    2. '):' → logprob: -3.288111448287964
    3. ')' → logprob: -9.788111686706543
    4. '():
' → logprob: -12.163111686706543
    5. '):
' → logprob: -12.913111686706543
    6. ':' → logprob: -13.413111686706543
    7. '):

' → logprob: -13.538111686706543
    8. ':
' → logprob: -13.788111686706543
    9. ' ):
' → logprob: -14.038111686706543
    10. '()):
' → logprob: -14.288111686706543

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05953395739197731
    2. 'return' → logprob: -3.0595340728759766
    3. ' return' → logprob: -4.559534072875977
    4. ':return' → logprob: -8.059534072875977
    5. ':
' → logprob: -9.934534072875977
    6. ':' → logprob: -10.309534072875977
    7. '{return' → logprob: -12.184534072875977
    8. ',' → logprob: -12.809534072875977
    9. '	       ' → logprob: -13.059534072875977
    10. ')return' → logprob: -13.184534072875977

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3909088373184204
    2. ' return' → logprob: -1.1409088373184204
    3. '           ' → logprob: -5.515908718109131
    4. '               ' → logprob: -12.765909194946289
    5. '   ' → logprob: -13.265909194946289
    6. '
' → logprob: -13.765909194946289
    7. '	return' → logprob: -14.140909194946289
    8. ':return' → logprob: -15.140909194946289
    9. '       ' → logprob: -15.265909194946289
    10. '{return' → logprob: -15.515909194946289

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009120595059357584
    2. ' self' → logprob: -7.000912189483643
    3. '(self' → logprob: -14.500911712646484
    4. '[self' → logprob: -16.375911712646484
    5. '   ' → logprob: -17.750911712646484
    6. '	self' → logprob: -18.000911712646484
    7. 's' → logprob: -19.500911712646484
    8. '=self' → logprob: -19.625911712646484
    9. 'tokens' → logprob: -19.875911712646484
    10. '       ' → logprob: -20.000911712646484

Token 184: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -3.404745439183898e-05
    2. 'tokens' → logprob: -10.37503433227539
    3. ' .' → logprob: -13.25003433227539
    4. 'self' → logprob: -14.75003433227539
    5. '.' → logprob: -15.25003433227539
    6. '.t' → logprob: -15.62503433227539
    7. 'okens' → logprob: -16.75003433227539
    8. '[self' → logprob: -16.87503433227539
    9. ' tokens' → logprob: -17.12503433227539
    10. '   ' → logprob: -17.37503433227539

Token 185: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.8444881536415778e-05
    2. 'self' → logprob: -10.500028610229492
    3. '[' → logprob: -14.250028610229492
    4. '[
' → logprob: -16.500028610229492
    5. '(self' → logprob: -17.000028610229492
    6. ' self' → logprob: -17.125028610229492
    7. '
' → logprob: -17.125028610229492
    8. '   ' → logprob: -19.125028610229492
    9. '	self' → logprob: -19.750028610229492
    10. ' [' → logprob: -20.125028610229492

Token 186: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.006985076237469912
    2. 'pos' → logprob: -5.006985187530518
    3. ').' → logprob: -9.13198471069336
    4. '.' → logprob: -10.00698471069336
    5. '].' → logprob: -10.63198471069336
    6. 's' → logprob: -10.75698471069336
    7. 'os' → logprob: -11.38198471069336
    8. '[pos' → logprob: -11.38198471069336
    9. ')' → logprob: -11.50698471069336
    10. '[' → logprob: -11.63198471069336

Token 187: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008133203955367208
    2. ')
' → logprob: -7.8758134841918945
    3. '<|end|>' → logprob: -8.250813484191895
    4. '[' → logprob: -9.000813484191895
    5. ' )' → logprob: -11.000813484191895
    6. ']' → logprob: -11.625813484191895
    7. '<|end|>' → logprob: -12.250813484191895
    8. ')return' → logprob: -12.375813484191895
    9. '       ' → logprob: -12.500813484191895
    10. '   ' → logprob: -12.625813484191895

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004723795282188803
    2. '   ' → logprob: -8.250472068786621
    3. '
' → logprob: -9.875472068786621
    4. '<|end|>' → logprob: -10.250472068786621
    5. 'return' → logprob: -10.625472068786621
    6. '	' → logprob: -10.750472068786621
    7. '  
' → logprob: -11.000472068786621
    8. '           ' → logprob: -11.125472068786621
    9. '        
' → logprob: -11.625472068786621
    10. 'else' → logprob: -12.000472068786621

Token 189: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2866857945919037
    2. ' None' → logprob: -2.2866857051849365
    3. '       ' → logprob: -3.2866857051849365
    4. ' else' → logprob: -3.4116857051849365
    5. 'return' (adapté à ' return') → logprob: -3.4116857051849365
    6. 'else' → logprob: -3.7866857051849365
    7. '
' → logprob: -4.786685943603516
    8. ' return' → logprob: -4.786685943603516
    9. '(None' → logprob: -5.786685943603516
    10. '   ' → logprob: -7.036685943603516

Token 190: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00022392053506337106
    2. '(None' → logprob: -8.500224113464355
    3. ' None' → logprob: -11.000224113464355
    4. '('' → logprob: -12.500224113464355
    5. '_None' → logprob: -17.37522315979004
    6. ',None' → logprob: -18.75022315979004
    7. '(' → logprob: -20.50022315979004
    8. 'EOF' → logprob: -20.50022315979004
    9. 'none' → logprob: -21.25022315979004
    10. '=None' → logprob: -21.37522315979004

Token 191: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4259302020072937
    2. '
' → logprob: -1.3009302616119385
    3. '    
' → logprob: -3.1759302616119385
    4. '  
' → logprob: -4.300930023193359
    5. '<|end|>' → logprob: -4.425930023193359
    6. 'def' → logprob: -5.675930023193359
    7. ' 
' → logprob: -6.550930023193359
    8. '   
' → logprob: -7.550930023193359
    9. '<|end|>' → logprob: -8.05093002319336
    10. 'newline' → logprob: -8.17593002319336

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02416669949889183
    2. 'def' → logprob: -4.149166584014893
    3. ' def' → logprob: -5.024166584014893
    4. '    
' → logprob: -6.899166584014893
    5. '  
' → logprob: -8.77416706085205
    6. '	def' → logprob: -9.64916706085205
    7. '
' → logprob: -9.89916706085205
    8. '  ' → logprob: -10.02416706085205
    9. '<|end|>' → logprob: -10.02416706085205
    10. ' 
' → logprob: -10.14916706085205

Token 193: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01769469492137432
    2. '   ' → logprob: -4.517694473266602
    3. ' def' → logprob: -5.017694473266602
    4. '	def' → logprob: -12.517694473266602
    5. ' ' → logprob: -14.267694473266602
    6. '    
' → logprob: -14.892694473266602
    7. '  ' → logprob: -15.392694473266602
    8. '       ' → logprob: -16.1426944732666
    9. '
' → logprob: -16.3926944732666
    10. '  
' → logprob: -16.5176944732666

Token 194: ' consume' (ID: 34881)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.6161972284317017
    2. 'consume' → logprob: -0.8661972284317017
    3. 'advance' → logprob: -3.866197109222412
    4. ' consume' → logprob: -4.616197109222412
    5. ' eat' → logprob: -5.491197109222412
    6. 'next' → logprob: -6.116197109222412
    7. 'expect' → logprob: -6.741197109222412
    8. ' advance' → logprob: -7.241197109222412
    9. ' next' → logprob: -8.86619758605957
    10. 'e' → logprob: -9.24119758605957

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003479785518720746
    2. ' (' → logprob: -8.000348091125488
    3. '(' → logprob: -11.375348091125488
    4. 'self' → logprob: -15.125348091125488
    5. ' ' → logprob: -15.625348091125488
    6. '()' → logprob: -15.750348091125488
    7. '   ' → logprob: -15.875348091125488
    8. '():
' → logprob: -16.125347137451172
    9. ' self' → logprob: -16.875347137451172
    10. '():' → logprob: -17.125347137451172

Token 196: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12345468252897263
    2. '):
' → logprob: -2.8734545707702637
    3. ')' → logprob: -2.9984545707702637
    4. ',' → logprob: -4.873454570770264
    5. 'self' → logprob: -6.498454570770264
    6. ' ):' → logprob: -7.998454570770264
    7. '):

' → logprob: -10.123455047607422
    8. '(self' → logprob: -10.248455047607422
    9. '(' → logprob: -10.248455047607422
    10. ' )' → logprob: -10.373455047607422

Token 197: ' typ' (ID: 5378)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.4173097312450409
    2. 'token' → logprob: -1.1673097610473633
    3. ')' → logprob: -4.167309761047363
    4. ' expected' → logprob: -5.417309761047363
    5. 'type' → logprob: -5.792309761047363
    6. '):' → logprob: -6.417309761047363
    7. '*' → logprob: -6.542309761047363
    8. ')*' → logprob: -6.667309761047363
    9. ' token' → logprob: -6.917309761047363
    10. 'tok' → logprob: -7.292309761047363

Token 198: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35745924711227417
    2. '):
' → logprob: -1.357459306716919
    3. 'ype' → logprob: -3.857459306716919
    4. '):' → logprob: -3.982459306716919
    5. '=None' → logprob: -6.10745906829834
    6. 'self' → logprob: -8.35745906829834
    7. ')' → logprob: -8.48245906829834
    8. 'yp' → logprob: -8.60745906829834
    9. '_type' → logprob: -8.85745906829834
    10. '):

' → logprob: -9.48245906829834

Token 199: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0619983896613121
    2. '):' → logprob: -2.8119983673095703
    3. '):
' → logprob: -11.18699836730957
    4. ',' → logprob: -11.56199836730957
    5. ')' → logprob: -12.56199836730957
    6. '):

' → logprob: -13.18699836730957
    7. ' ):
' → logprob: -13.93699836730957
    8. '   ' → logprob: -14.06199836730957
    9. ' ):' → logprob: -16.18699836730957
    10. '=None' → logprob: -16.56199836730957

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002371521550230682
    2. ' if' → logprob: -9.625237464904785
    3. '   ' → logprob: -10.125237464904785
    4. '```' → logprob: -10.500237464904785
    5. 'token' → logprob: -10.875237464904785
    6. 'if' → logprob: -11.250237464904785
    7. ' token' → logprob: -11.625237464904785
    8. '):
' → logprob: -11.625237464904785
    9. ':' → logprob: -11.625237464904785
    10. '<|end|>' → logprob: -11.750237464904785

Token 201: ' cur' (ID: 4396)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.4117411971092224
    2. ' if' → logprob: -2.161741256713867
    3. 'token' → logprob: -2.161741256713867
    4. ' tok' → logprob: -3.161741256713867
    5. 'if' → logprob: -3.661741256713867
    6. 'tok' → logprob: -3.786741256713867
    7. '       ' → logprob: -4.161741256713867
    8. 't' → logprob: -7.536741256713867
    9. '   ' → logprob: -8.661741256713867
    10. ' t' → logprob: -8.911741256713867

Token 202: ' =' (ID: 314)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.15477503836154938
    2. ' =' → logprob: -2.0297751426696777
    3. 'ent' → logprob: -5.154775142669678
    4. '=' → logprob: -5.279775142669678
    5. 'Token' → logprob: -8.27977466583252
    6. 'token' → logprob: -8.65477466583252
    7. '_tokens' → logprob: -8.90477466583252
    8. '_' → logprob: -9.15477466583252
    9. '_tok' → logprob: -9.15477466583252
    10. '   ' → logprob: -9.65477466583252

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015436685644090176
    2. ' self' → logprob: -7.0015435218811035
    3. 'None' → logprob: -7.3765435218811035
    4. ' None' → logprob: -12.001543998718262
    5. '(self' → logprob: -16.876543045043945
    6. '   ' → logprob: -17.251543045043945
    7. '
' → logprob: -17.626543045043945
    8. ' ' → logprob: -18.376543045043945
    9. '	self' → logprob: -18.501543045043945
    10. '       ' → logprob: -19.751543045043945

Token 204: '.peek' (ID: 73296)
  Prédit: '.tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -1.676292231422849e-05
    2. 'tokens' → logprob: -11.250017166137695
    3. '.pos' → logprob: -13.375017166137695
    4. '.peek' → logprob: -14.000017166137695
    5. ' .' → logprob: -14.125017166137695
    6. 'okens' → logprob: -15.875017166137695
    7. '.' → logprob: -15.875017166137695
    8. '.t' → logprob: -16.000017166137695
    9. '.token' → logprob: -16.250017166137695
    10. ' tokens' → logprob: -17.250017166137695

Token 205: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5382807850837708
    2. '()' → logprob: -0.9132807850837708
    3. '       ' → logprob: -4.413280963897705
    4. '<|end|>' → logprob: -7.163280963897705
    5. '
' → logprob: -7.288280963897705
    6. '<|end|>' → logprob: -7.538280963897705
    7. ')' → logprob: -7.788280963897705
    8. ')
' → logprob: -9.038280487060547
    9. 'def' → logprob: -9.913280487060547
    10. '```' → logprob: -10.163280487060547

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002553307916969061
    2. ' if' → logprob: -6.127553462982178
    3. 'if' → logprob: -8.00255298614502
    4. '<|end|>' → logprob: -11.12755298614502
    5. '   ' → logprob: -11.62755298614502
    6. '
' → logprob: -13.37755298614502
    7. '```' → logprob: -13.37755298614502
    8. '           ' → logprob: -13.62755298614502
    9. '        
' → logprob: -13.75255298614502
    10. ')' → logprob: -14.37755298614502

Token 207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2996930480003357
    2. 'self' → logprob: -1.7996931076049805
    3. ' if' → logprob: -2.5496931076049805
    4. ' self' → logprob: -4.7996931076049805
    5. '       ' → logprob: -4.9246931076049805
    6. '	if' → logprob: -14.54969310760498
    7. '   ' → logprob: -14.92469310760498
    8. '	self' → logprob: -14.92469310760498
    9. 'If' → logprob: -15.29969310760498
    10. '[self' → logprob: -16.174692153930664

Token 208: ' cur' (ID: 4396)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.3134608864784241
    2. ' typ' → logprob: -1.3134608268737793
    3. ' cur' → logprob: -9.313461303710938
    4. 'cur' → logprob: -9.813461303710938
    5. ' not' → logprob: -10.563461303710938
    6. 'self' → logprob: -11.688461303710938
    7. ' self' → logprob: -11.813461303710938
    8. 'not' → logprob: -11.938461303710938
    9. '   ' → logprob: -13.563461303710938
    10. '_typ' → logprob: -13.563461303710938

Token 209: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09177084267139435
    2. ' and' → logprob: -2.966770887374878
    3. 'and' → logprob: -3.841770887374878
    4. 'is' → logprob: -4.216770648956299
    5. '==' → logprob: -11.341771125793457
    6. ' ==' → logprob: -13.966771125793457
    7. ' ' → logprob: -14.591771125793457
    8. '<|end|>' → logprob: -15.091771125793457
    9. '[' → logprob: -15.716771125793457
    10. '   ' → logprob: -15.841771125793457

Token 210: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.25348395109176636
    2. ' None' → logprob: -1.5034840106964111
    3. ' not' → logprob: -6.628483772277832
    4. 'not' → logprob: -8.378483772277832
    5. '(None' → logprob: -13.753483772277832
    6. 'Not' → logprob: -14.878483772277832
    7. '_None' → logprob: -15.878483772277832
    8. '=None' → logprob: -16.50348472595215
    9. '   ' → logprob: -17.62848472595215
    10. '_none' → logprob: -18.12848472595215

Token 211: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2291809320449829
    2. ' or' → logprob: -2.2291808128356934
    3. ':' → logprob: -2.9791808128356934
    4. '           ' → logprob: -3.1041808128356934
    5. ':return' → logprob: -7.479180812835693
    6. '       ' → logprob: -7.854180812835693
    7. '):
' → logprob: -8.229181289672852
    8. ' and' → logprob: -9.479181289672852
    9. ' :
' → logprob: -10.104181289672852
    10. ')' → logprob: -10.104181289672852

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013975792564451694
    2. ' return' → logprob: -4.638975620269775
    3. 'return' → logprob: -6.138975620269775
    4. ' raise' → logprob: -6.763975620269775
    5. '   ' → logprob: -8.263976097106934
    6. 'raise' → logprob: -8.263976097106934
    7. ' if' → logprob: -8.638976097106934
    8. '       ' → logprob: -8.638976097106934
    9. 'if' → logprob: -11.388976097106934
    10. ' ' → logprob: -12.638976097106934

Token 213: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25417664647102356
    2. ' raise' → logprob: -2.379176616668701
    3. 'return' (adapté à ' return') → logprob: -2.379176616668701
    4. 'raise' → logprob: -3.629176616668701
    5. '           ' → logprob: -4.379176616668701
    6. ' None' → logprob: -9.50417709350586
    7. 'None' → logprob: -11.25417709350586
    8. ' if' → logprob: -11.37917709350586
    9. '   ' → logprob: -11.75417709350586
    10. 'if' → logprob: -13.12917709350586

Token 214: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001589618914294988
    2. ' None' → logprob: -8.75015926361084
    3. '
' → logprob: -14.75015926361084
    4. '           ' → logprob: -17.000158309936523
    5. '(None' → logprob: -17.125158309936523
    6. 'none' → logprob: -19.625158309936523
    7. '            
' → logprob: -19.750158309936523
    8. ',None' → logprob: -20.625158309936523
    9. '_None' → logprob: -20.625158309936523
    10. '       ' → logprob: -21.125158309936523

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038139724638313055
    2. '
' → logprob: -5.628813743591309
    3. ' if' → logprob: -8.878813743591309
    4. 'if' → logprob: -10.503813743591309
    5. '   ' → logprob: -10.628813743591309
    6. 'self' → logprob: -11.878813743591309
    7. '        
' → logprob: -12.378813743591309
    8. ',' → logprob: -12.503813743591309
    9. '	' → logprob: -13.378813743591309
    10. ' self' → logprob: -13.503813743591309

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000779369322117418
    2. '
' → logprob: -7.625779151916504
    3. ' if' → logprob: -8.500779151916504
    4. '        
' → logprob: -10.500779151916504
    5. '   ' → logprob: -10.875779151916504
    6. ',' → logprob: -11.125779151916504
    7. ' 
' → logprob: -11.875779151916504
    8. '  
' → logprob: -12.750779151916504
    9. '​' → logprob: -13.250779151916504
    10. '	' → logprob: -13.375779151916504

Token 217: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7057331800460815
    2. ' if' → logprob: -1.0807331800460815
    3. 'if' (adapté à ' if') → logprob: -2.705733299255371
    4. ' self' → logprob: -2.955733299255371
    5. 'self' → logprob: -3.080733299255371
    6. '   ' → logprob: -6.580733299255371
    7. ' token' → logprob: -8.330733299255371
    8. 'token' → logprob: -8.330733299255371
    9. '
' → logprob: -9.080733299255371
    10. '        
' → logprob: -10.455733299255371

Token 218: ' typ' (ID: 5378)
  Prédit: ' typ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typ' → logprob: -0.006715967319905758
    2. 'typ' → logprob: -5.006715774536133
    3. '.typ' → logprob: -15.256715774536133
    4. ' not' → logprob: -15.881715774536133
    5. '_typ' → logprob: -16.006715774536133
    6. '   ' → logprob: -16.006715774536133
    7. ' typename' → logprob: -17.881715774536133
    8. '    ' → logprob: -18.756715774536133
    9. ' typen' → logprob: -18.881715774536133
    10. ' typo' → logprob: -19.256715774536133

Token 219: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06273388862609863
    2. ' and' → logprob: -3.4377338886260986
    3. 'is' → logprob: -4.1877336502075195
    4. 'and' → logprob: -4.5627336502075195
    5. '==' → logprob: -6.1877336502075195
    6. ' ==' → logprob: -6.9377336502075195
    7. '[' → logprob: -11.93773365020752
    8. ':' → logprob: -12.31273365020752
    9. '<|end|>' → logprob: -12.43773365020752
    10. '===' → logprob: -12.93773365020752

Token 220: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.10055816918611526
    2. ' cur' → logprob: -2.350558280944824
    3. 'typ' → logprob: -8.725558280944824
    4. ' typ' → logprob: -8.850558280944824
    5. '(cur' → logprob: -10.350558280944824
    6. '	cur' → logprob: -11.850558280944824
    7. '   ' → logprob: -13.350558280944824
    8. ' (' → logprob: -13.725558280944824
    9. ' not' → logprob: -13.975558280944824
    10. '(' → logprob: -14.100558280944824

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.347765181795694e-05
    2. '==' → logprob: -10.625053405761719
    3. '!=' → logprob: -10.750053405761719
    4. ' !=' → logprob: -12.625053405761719
    5. 'and' → logprob: -13.500053405761719
    6. ' [' → logprob: -13.750053405761719
    7. ' ==' → logprob: -13.875053405761719
    8. ' and' → logprob: -14.500053405761719
    9. ' ' → logprob: -15.875053405761719
    10. '   ' → logprob: -16.50005340576172

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.5625057220459
    4. '[' → logprob: -17.8125057220459
    5. 'type' → logprob: -17.8125057220459
    6. ' not' → logprob: -17.8750057220459
    7. 'not' → logprob: -17.9375057220459
    8. '۰' → logprob: -19.3125057220459
    9. '
' → logprob: -19.3750057220459
    10. '<|end|>' → logprob: -19.6875057220459

Token 223: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07894696295261383
    2. '!=' → logprob: -2.578947067260742
    3. ')!=' → logprob: -10.328947067260742
    4. ']!=' → logprob: -11.703947067260742
    5. ')' → logprob: -11.828947067260742
    6. '()!=' → logprob: -12.078947067260742
    7. '!==' → logprob: -14.078947067260742
    8. '==' → logprob: -14.578947067260742
    9. '!='' → logprob: -14.828947067260742
    10. ' ==' → logprob: -15.203947067260742

Token 224: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03805239871144295
    2. ' !=' → logprob: -3.2880523204803467
    3. '()!=' → logprob: -11.788052558898926
    4. ']!=' → logprob: -14.038052558898926
    5. ')!=' → logprob: -14.038052558898926
    6. '!==' → logprob: -14.163052558898926
    7. '!=(' → logprob: -14.663052558898926
    8. '==' → logprob: -14.663052558898926
    9. '!='' → logprob: -16.16305160522461
    10. '!="' → logprob: -16.91305160522461

Token 225: ' typ' (ID: 5378)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -7.493430894101039e-05
    2. ' typ' → logprob: -9.500075340270996
    3. '_typ' → logprob: -18.75007438659668
    4. '.typ' → logprob: -19.25007438659668
    5. 'Typ' → logprob: -19.62507438659668
    6. 'ty' → logprob: -21.37507438659668
    7. 'typen' → logprob: -22.12507438659668
    8. 'typedef' → logprob: -24.37507438659668
    9. 'typename' → logprob: -24.50007438659668
    10. 'typing' → logprob: -24.75007438659668

Token 226: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12757249176502228
    2. ':' → logprob: -2.127572536468506
    3. ':return' → logprob: -8.127572059631348
    4. '):
' → logprob: -8.252572059631348
    5. '           ' → logprob: -10.627572059631348
    6. '       ' → logprob: -10.752572059631348
    7. ' :
' → logprob: -11.252572059631348
    8. '():
' → logprob: -11.377572059631348
    9. '):' → logprob: -11.877572059631348
    10. '   ' → logprob: -12.752572059631348

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015181333583313972
    2. ' return' → logprob: -9.375151634216309
    3. ':
' → logprob: -10.375151634216309
    4. 'return' → logprob: -11.000151634216309
    5. 'False' → logprob: -12.125151634216309
    6. ' False' → logprob: -12.500151634216309
    7. '   ' → logprob: -13.125151634216309
    8. ' None' → logprob: -13.375151634216309
    9. '       ' → logprob: -13.500151634216309
    10. ':' → logprob: -13.625151634216309

Token 228: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.255617618560791
    2. 'return' (adapté à ' return') → logprob: -1.505617618560791
    3. '           ' → logprob: -5.630617618560791
    4. ' raise' → logprob: -10.255617141723633
    5. 'raise' → logprob: -10.380617141723633
    6. ' None' → logprob: -11.130617141723633
    7. 'None' → logprob: -11.380617141723633
    8. '	return' → logprob: -13.630617141723633
    9. ':return' → logprob: -15.130617141723633
    10. '       ' → logprob: -15.130617141723633

Token 229: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.505351095460355e-05
    2. 'False' → logprob: -9.750075340270996
    3. ' None' → logprob: -11.000075340270996
    4. '
' → logprob: -17.50007438659668
    5. '   ' → logprob: -17.75007438659668
    6. '```' → logprob: -17.75007438659668
    7. '(None' → logprob: -18.75007438659668
    8. '_None' → logprob: -19.25007438659668
    9. '0' → logprob: -19.87507438659668
    10. '  ' → logprob: -20.62507438659668

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010839471593499184
    2. '
' → logprob: -4.635839462280273
    3. 'self' → logprob: -6.885839462280273
    4. ' self' → logprob: -10.010839462280273
    5. '   ' → logprob: -11.635839462280273
    6. '        
' → logprob: -13.135839462280273
    7. '```' → logprob: -13.510839462280273
    8. '  
' → logprob: -14.760839462280273
    9. '           ' → logprob: -14.885839462280273
    10. ',' → logprob: -14.885839462280273

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009005005122162402
    2. 'self' → logprob: -7.1259002685546875
    3. '
' → logprob: -9.875900268554688
    4. '   ' → logprob: -10.250900268554688
    5. ' self' → logprob: -11.875900268554688
    6. '        
' → logprob: -14.375900268554688
    7. '           ' → logprob: -15.000900268554688
    8. '	' → logprob: -15.000900268554688
    9. 'None' → logprob: -15.500900268554688
    10. '```' → logprob: -15.500900268554688

Token 232: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07659637928009033
    2. '       ' → logprob: -2.701596260070801
    3. ' self' → logprob: -5.076596260070801
    4. '   ' → logprob: -7.951596260070801
    5. '
' → logprob: -11.2015962600708
    6. 'token' → logprob: -11.2015962600708
    7. '	self' → logprob: -11.9515962600708
    8. '        
' → logprob: -12.3265962600708
    9. 'if' → logprob: -12.8265962600708
    10. '    
' → logprob: -14.2015962600708

Token 233: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00021593389101326466
    2. 'pos' → logprob: -8.500215530395508
    3. '.' → logprob: -11.375215530395508
    4. ' .' → logprob: -14.625215530395508
    5. '	pos' → logprob: -15.750215530395508
    6. ' pos' → logprob: -15.750215530395508
    7. '   ' → logprob: -16.375215530395508
    8. '[pos' → logprob: -17.750215530395508
    9. '.tokens' → logprob: -18.125215530395508
    10. '.consume' → logprob: -18.125215530395508

Token 234: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12692999839782715
    2. ' +=' → logprob: -2.126929998397827
    3. ']+=' → logprob: -13.376930236816406
    4. '+' → logprob: -15.751930236816406
    5. '=' → logprob: -16.501930236816406
    6. '   ' → logprob: -17.376930236816406
    7. '```' → logprob: -17.876930236816406
    8. '+=(' → logprob: -18.126930236816406
    9. '+='' → logprob: -18.626930236816406
    10. '+="' → logprob: -19.251930236816406

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -21.000001907348633
    4. '```' → logprob: -21.000001907348633
    5. '１' → logprob: -22.875001907348633
    6. '
' → logprob: -23.500001907348633
    7. '۱' → logprob: -24.000001907348633
    8. '  ' → logprob: -24.312501907348633
    9. '+' → logprob: -24.812501907348633
    10. '0' → logprob: -25.125001907348633

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -21.5
    4. '
' → logprob: -21.875
    5. '   ' → logprob: -22.25
    6. '１' → logprob: -22.75
    7. '۱' → logprob: -23.0625
    8. '0' → logprob: -23.125
    9. '१' → logprob: -24.125
    10. '' → logprob: -24.1875

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008982781320810318
    2. 'return' → logprob: -4.7589826583862305
    3. '   ' → logprob: -8.25898265838623
    4. ' return' → logprob: -9.25898265838623
    5. '	return' → logprob: -12.00898265838623
    6. '	' → logprob: -12.63398265838623
    7. '```' → logprob: -13.25898265838623
    8. '           ' → logprob: -13.88398265838623
    9. '
' → logprob: -14.38398265838623
    10. '	   ' → logprob: -14.88398265838623

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002922325860708952
    2. 'return' → logprob: -5.877922534942627
    3. '   ' → logprob: -9.627922058105469
    4. ' return' → logprob: -10.127922058105469
    5. '	return' → logprob: -12.627922058105469
    6. '<|end|>' → logprob: -12.752922058105469
    7. '	' → logprob: -13.002922058105469
    8. '```' → logprob: -14.002922058105469
    9. '           ' → logprob: -14.377922058105469
    10. '	   ' → logprob: -14.752922058105469

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.4121114822482923e-06
    2. ' return' → logprob: -13.000003814697266
    3. '       ' → logprob: -13.750003814697266
    4. '
' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.125003814697266
    6. '	return' → logprob: -19.875003814697266
    7. '{return' → logprob: -20.500003814697266
    8. '```' → logprob: -20.750003814697266
    9. '           ' → logprob: -21.000003814697266
    10. '        
' → logprob: -21.625003814697266

Token 240: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -2.7610454708337784e-05
    2. ' cur' → logprob: -10.500027656555176
    3. '	cur' → logprob: -21.87502670288086
    4. '(cur' → logprob: -22.12502670288086
    5. 'curr' → logprob: -23.75002670288086
    6. '.cur' → logprob: -25.37502670288086
    7. '[cur' → logprob: -25.37502670288086
    8. 'Cur' → logprob: -26.12502670288086
    9. 'c' → logprob: -26.25002670288086
    10. ' ' → logprob: -26.62502670288086

Token 241: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046860878355801105
    2. 'def' → logprob: -6.379685878753662
    3. '
' → logprob: -6.504685878753662
    4. ' def' → logprob: -7.254685878753662
    5. '    
' → logprob: -7.629685878753662
    6. '<|end|>' → logprob: -8.37968635559082
    7. '<|end|>' → logprob: -11.25468635559082
    8. '  
' → logprob: -11.37968635559082
    9. ' 
' → logprob: -11.50468635559082
    10. ' ' → logprob: -12.00468635559082

Token 242: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09590300172567368
    2. 'def' → logprob: -2.970902919769287
    3. ' def' → logprob: -3.220902919769287
    4. '	def' → logprob: -8.595903396606445
    5. '    
' → logprob: -10.595903396606445
    6. '
' → logprob: -10.845903396606445
    7. '```' → logprob: -11.345903396606445
    8. ' ' → logprob: -11.470903396606445
    9. '<|end|>' → logprob: -12.470903396606445
    10. '  ' → logprob: -12.845903396606445

Token 243: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.06314469873905182
    2. 'parse' → logprob: -2.8131446838378906
    3. ' evaluate' → logprob: -7.688144683837891
    4. 'expr' → logprob: -8.43814468383789
    5. ' expr' → logprob: -8.56314468383789
    6. ' eval' → logprob: -9.18814468383789
    7. 'eval' → logprob: -9.68814468383789
    8. 'evaluate' → logprob: -10.18814468383789
    9. ' factor' → logprob: -10.31314468383789
    10. 'factor' → logprob: -10.68814468383789

Token 244: '_expr' (ID: 53654)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.4799748361110687
    2. '_expr' → logprob: -0.9799748659133911
    3. '_factor' → logprob: -5.354974746704102
    4. '_' → logprob: -7.354974746704102
    5. '_exp' → logprob: -8.229974746704102
    6. '_term' → logprob: -9.229974746704102
    7. '_primary' → logprob: -10.354974746704102
    8. '_add' → logprob: -10.479974746704102
    9. '```' → logprob: -10.979974746704102
    10. '\' → logprob: -11.104974746704102

Token 245: '(tokens' (ID: 74272)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016504127415828407
    2. '(parser' → logprob: -9.250164985656738
    3. '(p' → logprob: -9.750164985656738
    4. '(tokens' → logprob: -12.250164985656738
    5. '(' → logprob: -13.000164985656738
    6. '(Parser' → logprob: -13.750164985656738
    7. '():' → logprob: -13.875164985656738
    8. '(expr' → logprob: -15.000164985656738
    9. ' (' → logprob: -15.250164985656738
    10. '(token' → logprob: -15.875164985656738

Token 246: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4203667640686035
    2. '):' → logprob: -1.2953667640686035
    3. '):
' → logprob: -2.6703667640686035
    4. ')' → logprob: -9.420366287231445
    5. '   ' → logprob: -10.670366287231445
    6. ' ):' → logprob: -10.795366287231445
    7. '):

' → logprob: -11.170366287231445
    8. '):
' → logprob: -11.670366287231445
    9. ' parser' → logprob: -12.920366287231445
    10. ' ,' → logprob: -12.920366287231445

Token 247: '   ' (ID: 271)
  Prédit: ' parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.5668414831161499
    2. '   ' → logprob: -0.9418414831161499
    3. ' p' → logprob: -3.6918416023254395
    4. 'parser' → logprob: -4.1918416023254395
    5. ' def' → logprob: -6.4418416023254395
    6. 'def' → logprob: -7.3168416023254395
    7. 'p' → logprob: -8.066841125488281
    8. 'class' → logprob: -9.941841125488281
    9. ' class' → logprob: -10.566841125488281
    10. '	parser' → logprob: -10.691841125488281

Token 248: ' #' (ID: 1069)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.654861330986023
    2. ' parser' → logprob: -1.279861330986023
    3. 'class' → logprob: -2.5298614501953125
    4. 'def' → logprob: -2.6548614501953125
    5. ' def' → logprob: -4.1548614501953125
    6. 'p' → logprob: -4.1548614501953125
    7. '   ' → logprob: -4.7798614501953125
    8. ' class' → logprob: -5.1548614501953125
    9. ' p' → logprob: -5.2798614501953125
    10. 'pos' → logprob: -7.5298614501953125

Token 249: ' parse' (ID: 8420)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9152064323425293
    2. 'def' → logprob: -1.1652064323425293
    3. ' parser' → logprob: -1.6652064323425293
    4. 'parser' → logprob: -3.5402064323425293
    5. ' p' → logprob: -3.6652064323425293
    6. ' pos' → logprob: -4.040206432342529
    7. 'pos' → logprob: -4.540206432342529
    8. 'p' → logprob: -4.915206432342529
    9. 'class' → logprob: -5.790206432342529
    10. '   ' → logprob: -6.540206432342529

Token 250: ' full' (ID: 3149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34040120244026184
    2. ' def' → logprob: -2.2154011726379395
    3. ' parser' → logprob: -2.3404011726379395
    4. ' tokens' → logprob: -3.9654011726379395
    5. 'class' → logprob: -4.3404011726379395
    6. '(tokens' → logprob: -4.4654011726379395
    7. ' p' → logprob: -4.9654011726379395
    8. '   ' → logprob: -4.9654011726379395
    9. 'parser' → logprob: -5.2154011726379395
    10. 'p' → logprob: -5.3404011726379395

Token 251: ' expr' (ID: 30206)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.6621163487434387
    2. '_expr' → logprob: -1.662116289138794
    3. 'def' → logprob: -1.912116289138794
    4. 'expr' → logprob: -3.537116289138794
    5. '_expression' → logprob: -4.162116527557373
    6. ' expression' → logprob: -4.162116527557373
    7. ' =' → logprob: -4.537116527557373
    8. ' def' → logprob: -4.537116527557373
    9. 'tokens' → logprob: -4.787116527557373
    10. '(Parser' → logprob: -4.787116527557373

Token 252: ' into' (ID: 1511)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.3019527792930603
    2. '():' → logprob: -2.676952838897705
    3. '():
' → logprob: -2.801952838897705
    4. '(parser' → logprob: -3.301952838897705
    5. 'def' → logprob: -3.551952838897705
    6. '(token' → logprob: -3.676952838897705
    7. '   ' → logprob: -4.176952838897705
    8. '(p' → logprob: -5.301952838897705
    9. '()' → logprob: -5.926952838897705
    10. '(' → logprob: -5.926952838897705

Token 253: ' tree' (ID: 8165)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.1119886636734009
    2. 'def' → logprob: -1.2369886636734009
    3. 'term' → logprob: -1.9869886636734009
    4. 'node' → logprob: -2.8619885444641113
    5. ' Parser' → logprob: -3.4869885444641113
    6. 'AST' → logprob: -3.8619885444641113
    7. '(Parser' → logprob: -3.8619885444641113
    8. 'class' → logprob: -4.236988544464111
    9. ' node' → logprob: -4.236988544464111
    10. 'ast' → logprob: -4.361988544464111

Token 254: ' based' (ID: 4122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07167141139507294
    2. '(tokens' → logprob: -3.321671485900879
    3. 'def' → logprob: -4.446671485900879
    4. '():' → logprob: -5.571671485900879
    5. '(token' → logprob: -5.946671485900879
    6. ':' → logprob: -5.946671485900879
    7. ':
' → logprob: -6.196671485900879
    8. '():
' → logprob: -6.196671485900879
    9. '(' → logprob: -6.321671485900879
    10. ' def' → logprob: -6.946671485900879

Token 255: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6730358600616455
    2. ' on' → logprob: -0.9230358600616455
    3. 'on' → logprob: -3.4230358600616455
    4. 'class' → logprob: -3.5480358600616455
    5. '   ' → logprob: -3.9230358600616455
    6. ' def' → logprob: -4.673035621643066
    7. ' ' → logprob: -7.548035621643066
    8. ' class' → logprob: -7.923035621643066
    9. '  ' → logprob: -8.798035621643066
    10. '    ' → logprob: -8.923035621643066

Token 256: ' grammar' (ID: 41735)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.16335459053516388
    2. 'tokens' → logprob: -2.4133546352386475
    3. 'def' → logprob: -4.038354396820068
    4. 'the' → logprob: -4.663354396820068
    5. ''' → logprob: -4.913354396820068
    6. ' tokens' → logprob: -4.913354396820068
    7. 'Parser' → logprob: -5.538354396820068
    8. ' precedence' → logprob: -5.788354396820068
    9. 'grammar' → logprob: -6.038354396820068
    10. 'operator' → logprob: -6.288354396820068

Token 257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048567499965429306
    2. 'def' → logprob: -4.173567295074463
    3. ':' → logprob: -4.673567295074463
    4. ' def' → logprob: -5.298567295074463
    5. 'class' → logprob: -5.423567295074463
    6. ' parser' → logprob: -5.548567295074463
    7. ' class' → logprob: -6.298567295074463
    8. ' =' → logprob: -6.798567295074463
    9. ' tokens' → logprob: -6.923567295074463
    10. ' :' → logprob: -7.048567295074463

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004324126057326794
    2. ' def' → logprob: -6.379323959350586
    3. 'def' → logprob: -6.879323959350586
    4. '    ' → logprob: -7.129323959350586
    5. ' parser' → logprob: -7.629323959350586
    6. ' tokens' → logprob: -9.379323959350586
    7. ' class' → logprob: -9.629323959350586
    8. 'class' → logprob: -9.879323959350586
    9. ' (' → logprob: -11.504323959350586
    10. '(' → logprob: -11.629323959350586

Token 259: ' p' (ID: 275)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.837674081325531
    2. ' parser' → logprob: -1.5876741409301758
    3. '   ' → logprob: -1.8376741409301758
    4. 'def' → logprob: -2.587674140930176
    5. ' class' → logprob: -2.837674140930176
    6. 'parser' → logprob: -3.212674140930176
    7. ' def' → logprob: -4.337674140930176
    8. ' p' → logprob: -4.962674140930176
    9. ' pos' → logprob: -5.712674140930176
    10. 'p' (adapté à ' p') → logprob: -5.837674140930176

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16508981585502625
    2. 'ar' → logprob: -2.1650898456573486
    3. '=' → logprob: -3.2900898456573486
    4. 'ARSER' → logprob: -9.91508960723877
    5. 'arse' → logprob: -10.41508960723877
    6. 'def' → logprob: -10.54008960723877
    7. 'r' → logprob: -10.66508960723877
    8. '=
' → logprob: -11.41508960723877
    9. ' =
' → logprob: -11.66508960723877
    10. ' ' → logprob: -11.79008960723877

Token 261: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.00861456897109747
    2. ' Parser' → logprob: -4.758614540100098
    3. '(Parser' → logprob: -17.633615493774414
    4. '.Parser' → logprob: -18.633615493774414
    5. 'Parse' → logprob: -18.883615493774414
    6. 'Parsed' → logprob: -19.508615493774414
    7. '_parser' → logprob: -20.383615493774414
    8. 'parser' → logprob: -20.508615493774414
    9. 'Parsing' → logprob: -20.633615493774414
    10. '
' → logprob: -21.258615493774414

Token 262: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.014176442287862301
    2. 'tokens' → logprob: -4.264176368713379
    3. ' tokens' → logprob: -11.389176368713379
    4. '(token' → logprob: -13.514176368713379
    5. '.tokens' → logprob: -15.889176368713379
    6. '(t' → logprob: -16.014177322387695
    7. ' (' → logprob: -16.889177322387695
    8. 'token' → logprob: -17.264177322387695
    9. '(' → logprob: -17.889177322387695
    10. '_tokens' → logprob: -18.014177322387695

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10051094740629196
    2. ')
' → logprob: -2.350510835647583
    3. ')

' → logprob: -8.225510597229004
    4. 'def' → logprob: -10.850510597229004
    5. '   ' → logprob: -11.475510597229004
    6. ')
' → logprob: -12.600510597229004
    7. ' )' → logprob: -13.725510597229004
    8. ' ' → logprob: -13.975510597229004
    9. ' )
' → logprob: -14.975510597229004
    10. '
' → logprob: -15.600510597229004

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051010530441999435
    2. 'def' → logprob: -5.880101203918457
    3. '    
' → logprob: -6.630101203918457
    4. '
' → logprob: -7.255101203918457
    5. ' def' → logprob: -8.380101203918457
    6. 'return' → logprob: -11.130101203918457
    7. ' return' → logprob: -11.255101203918457
    8. ' 
' → logprob: -13.380101203918457
    9. '        
' → logprob: -13.380101203918457
    10. '```' → logprob: -13.380101203918457

Token 265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010766115039587021
    2. '   ' → logprob: -4.88576602935791
    3. 'return' → logprob: -5.88576602935791
    4. '    
' → logprob: -8.63576602935791
    5. ' def' → logprob: -9.01076602935791
    6. '
' → logprob: -10.01076602935791
    7. 'result' → logprob: -11.26076602935791
    8. 'class' → logprob: -12.13576602935791
    9. ' return' → logprob: -12.76076602935791
    10. '```' → logprob: -12.88576602935791

Token 266: ' expr' (ID: 30206)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.16861142218112946
    2. 'parse' → logprob: -1.9186114072799683
    3. 'expr' → logprob: -5.543611526489258
    4. ' expr' → logprob: -5.668611526489258
    5. ' expression' → logprob: -7.043611526489258
    6. '_expr' → logprob: -9.793611526489258
    7. 'expression' → logprob: -10.543611526489258
    8. '_parse' → logprob: -10.793611526489258
    9. '_expression' → logprob: -12.168611526489258
    10. 'def' → logprob: -13.668611526489258

Token 267: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014376122271642089
    2. '():
' → logprob: -6.626437664031982
    3. '()' → logprob: -9.376437187194824
    4. '(' → logprob: -11.751437187194824
    5. '(index' → logprob: -12.126437187194824
    6. ' ():' → logprob: -12.251437187194824
    7. '(idx' → logprob: -12.501437187194824
    8. '(pos' → logprob: -13.126437187194824
    9. '(i' → logprob: -14.501437187194824
    10. '():

' → logprob: -14.751437187194824

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003133036196231842
    2. '   ' → logprob: -6.3781328201293945
    3. ' return' → logprob: -7.5031328201293945
    4. 'return' → logprob: -7.7531328201293945
    5. 'term' → logprob: -8.878132820129395
    6. 't' → logprob: -9.753132820129395
    7. ' term' → logprob: -10.003132820129395
    8. '        ' → logprob: -10.378132820129395
    9. '      ' → logprob: -10.628132820129395
    10. '     ' → logprob: -10.628132820129395

Token 269: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4759739637374878
    2. 'node' → logprob: -1.4759739637374878
    3. ' return' → logprob: -1.7259739637374878
    4. 'return' → logprob: -1.8509739637374878
    5. ' node' → logprob: -2.8509740829467773
    6. 'term' → logprob: -3.7259740829467773
    7. 'res' → logprob: -3.7259740829467773
    8. '   ' → logprob: -3.7259740829467773
    9. ' res' → logprob: -4.225974082946777
    10. 'result' → logprob: -4.725974082946777

Token 270: ' parse' (ID: 8420)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.4059954583644867
    2. 'node' → logprob: -1.905995488166809
    3. ' left' → logprob: -2.9059953689575195
    4. '   ' → logprob: -3.2809953689575195
    5. ' term' → logprob: -3.7809953689575195
    6. ' non' → logprob: -4.0309953689575195
    7. ' val' → logprob: -4.6559953689575195
    8. ' result' → logprob: -4.7809953689575195
    9. ' return' → logprob: -4.9059953689575195
    10. 'term' → logprob: -5.1559953689575195

Token 271: ' factor' (ID: 12332)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.31366077065467834
    2. ' term' → logprob: -1.313660740852356
    3. '_term' → logprob: -8.688660621643066
    4. '   ' → logprob: -9.813660621643066
    5. ' factor' → logprob: -9.938660621643066
    6. ' add' → logprob: -10.313660621643066
    7. 'add' → logprob: -10.563660621643066
    8. 'mul' → logprob: -10.688660621643066
    9. 'factor' → logprob: -11.188660621643066
    10. 'def' → logprob: -11.438660621643066

Token 272: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026262568309903145
    2. '():' → logprob: -4.0262627601623535
    3. '()
' → logprob: -5.6512627601623535
    4. '       ' → logprob: -6.0262627601623535
    5. '   ' → logprob: -6.6512627601623535
    6. '():
' → logprob: -7.9012627601623535
    7. 'def' → logprob: -8.151262283325195
    8. ':' → logprob: -9.901262283325195
    9. '()

' → logprob: -10.151262283325195
    10. '           ' → logprob: -10.276262283325195

Token 273: ' then' (ID: 1815)
  Prédit: ' term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.5131996870040894
    2. 'term' → logprob: -1.2631996870040894
    3. ' then' → logprob: -2.888199806213379
    4. '   ' → logprob: -4.263199806213379
    5. ' left' → logprob: -4.388199806213379
    6. ' def' → logprob: -4.513199806213379
    7. ' t' → logprob: -5.388199806213379
    8. 'def' → logprob: -5.388199806213379
    9. '    ' → logprob: -5.638199806213379
    10. ' return' → logprob: -5.763199806213379

Token 274: ' recursively' (ID: 130266)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5971964597702026
    2. 'term' → logprob: -1.4721964597702026
    3. ' term' → logprob: -2.347196578979492
    4. 'while' → logprob: -2.597196578979492
    5. '   ' → logprob: -3.472196578979492
    6. 'def' → logprob: -5.472196578979492
    7. ' op' → logprob: -5.472196578979492
    8. ' def' → logprob: -5.722196578979492
    9. ' token' → logprob: -6.597196578979492
    10. ' rest' → logprob: -6.597196578979492

Token 275: ' combine' (ID: 21700)
  Prédit: ' term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.7433196306228638
    2. 'term' → logprob: -0.9933196306228638
    3. ' parse' → logprob: -3.118319511413574
    4. '   ' → logprob: -3.868319511413574
    5. ' return' → logprob: -4.368319511413574
    6. ' factor' → logprob: -4.618319511413574
    7. ' call' → logprob: -4.993319511413574
    8. ' left' → logprob: -4.993319511413574
    9. '       ' → logprob: -5.243319511413574
    10. ' while' → logprob: -5.368319511413574

Token 276: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43087807297706604
    2. '       ' → logprob: -1.6808780431747437
    3. '()
' → logprob: -2.680878162384033
    4. '           ' → logprob: -2.930878162384033
    5. 'def' → logprob: -4.055878162384033
    6. '   ' → logprob: -4.680878162384033
    7. ' with' → logprob: -5.805878162384033
    8. '        ' → logprob: -5.930878162384033
    9. 'return' → logprob: -6.930878162384033
    10. 'token' → logprob: -7.055878162384033

Token 277: ' operator' (ID: 11019)
  Prédit: ' '+''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '+'' → logprob: -0.7487189769744873
    2. ''' → logprob: -1.6237189769744873
    3. 'term' → logprob: -2.1237189769744873
    4. ''+' → logprob: -3.6237189769744873
    5. '   ' → logprob: -3.6237189769744873
    6. '('' → logprob: -3.7487189769744873
    7. 'add' → logprob: -4.248719215393066
    8. '+' → logprob: -4.373719215393066
    9. ' term' → logprob: -4.498719215393066
    10. 'terms' → logprob: -4.623719215393066

Token 278: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6125637292861938
    2. '       ' → logprob: -1.4875637292861938
    3. '()
' → logprob: -1.7375637292861938
    4. '   ' → logprob: -3.6125636100769043
    5. '           ' → logprob: -4.362563610076904
    6. 'def' → logprob: -5.112563610076904
    7. '        
' → logprob: -6.237563610076904
    8. '
' → logprob: -6.487563610076904
    9. 'return' → logprob: -6.487563610076904
    10. '():' → logprob: -6.487563610076904

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020603550598025322
    2. '()' → logprob: -4.020603656768799
    3. '   ' → logprob: -6.770603656768799
    4. '()
' → logprob: -7.520603656768799
    5. '           ' → logprob: -7.770603656768799
    6. '        
' → logprob: -9.14560317993164
    7. '():' → logprob: -10.14560317993164
    8. '():
' → logprob: -10.27060317993164
    9. 'return' → logprob: -10.39560317993164
    10. '(' → logprob: -10.52060317993164

Token 280: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.070586085319519
    2. ' node' → logprob: -1.570586085319519
    3. 'node' → logprob: -1.945586085319519
    4. ' left' → logprob: -2.1955862045288086
    5. ' res' → logprob: -3.4455862045288086
    6. '   ' → logprob: -3.5705862045288086
    7. ' non' → logprob: -3.6955862045288086
    8. ' result' → logprob: -3.8205862045288086
    9. 'result' → logprob: -4.445586204528809
    10. '           ' → logprob: -4.570586204528809

Token 281: ' But' (ID: 3072)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5575733780860901
    2. ' node' → logprob: -1.5575733184814453
    3. ' left' → logprob: -2.5575733184814453
    4. '   ' → logprob: -3.1825733184814453
    5. 'left' → logprob: -3.5575733184814453
    6. 'def' → logprob: -3.6825733184814453
    7. '       ' → logprob: -4.682573318481445
    8. 'result' → logprob: -4.932573318481445
    9. 'term' → logprob: -5.182573318481445
    10. ' result' → logprob: -5.682573318481445

Token 282: ' grammar' (ID: 41735)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.855873167514801
    2. '    ' → logprob: -1.3558731079101562
    3. ' return' → logprob: -2.6058731079101562
    4. '   ' → logprob: -2.6058731079101562
    5. '       ' → logprob: -2.8558731079101562
    6. '        ' → logprob: -3.1058731079101562
    7. ' term' → logprob: -3.9808731079101562
    8. 'def' → logprob: -4.355873107910156
    9. ' left' → logprob: -5.480873107910156
    10. '           ' → logprob: -5.480873107910156

Token 283: ' allows' (ID: 7927)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3853989243507385
    2. ':
' → logprob: -1.8853988647460938
    3. 'def' → logprob: -3.1353988647460938
    4. '       ' → logprob: -3.2603988647460938
    5. '   ' → logprob: -3.3853988647460938
    6. ' is' → logprob: -3.7603988647460938
    7. '=' → logprob: -5.135398864746094
    8. ' def' → logprob: -5.760398864746094
    9. '    
' → logprob: -5.885398864746094
    10. ' should' → logprob: -5.885398864746094

Token 284: ' left' (ID: 3561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3369709253311157
    2. '       ' → logprob: -1.7119709253311157
    3. 'term' → logprob: -1.7119709253311157
    4. '   ' → logprob: -1.8369709253311157
    5. ' for' → logprob: -2.211970806121826
    6. ' term' → logprob: -3.086970806121826
    7. 'factor' → logprob: -3.961970806121826
    8. ' def' → logprob: -4.461970806121826
    9. ' factor' → logprob: -5.211970806121826
    10. 'expr' → logprob: -5.336970806121826

Token 285: ' recursion' (ID: 122185)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -1.8504412174224854
    2. '-rec' → logprob: -1.8504412174224854
    3. '   ' → logprob: -1.9754412174224854
    4. 'factor' → logprob: -2.2254412174224854
    5. ' recursion' → logprob: -2.4754412174224854
    6. '_rec' → logprob: -2.6004412174224854
    7. 'fact' → logprob: -2.8504412174224854
    8. ' =' → logprob: -3.1004412174224854
    9. 'recursive' → logprob: -3.3504412174224854
    10. '_expr' → logprob: -3.8504412174224854

Token 286: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012963043991476297
    2. '   ' → logprob: -7.501296520233154
    3. '
' → logprob: -8.376296043395996
    4. 'def' → logprob: -8.626296043395996
    5. '        
' → logprob: -8.751296043395996
    6. '    
' → logprob: -10.251296043395996
    7. '           ' → logprob: -10.251296043395996
    8. ',' → logprob: -10.876296043395996
    9. ' non' → logprob: -11.376296043395996
    10. ':' → logprob: -11.376296043395996

Token 287: ' multiple' (ID: 7598)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.3238792419433594
    2. 'def' → logprob: -1.8238792419433594
    3. ' so' → logprob: -2.5738792419433594
    4. ' left' → logprob: -2.8238792419433594
    5. '   ' → logprob: -3.0738792419433594
    6. ' def' → logprob: -3.4488792419433594
    7. ' needs' → logprob: -3.5738792419433594
    8. ' precedence' → logprob: -3.5738792419433594
    9. 'expr' → logprob: -3.5738792419433594
    10. ' must' → logprob: -3.8238792419433594

Token 288: ' operators' (ID: 29893)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.0747333765029907
    2. '   ' → logprob: -1.6997333765029907
    3. 'def' → logprob: -1.8247333765029907
    4. ' term' → logprob: -2.949733257293701
    5. ' levels' → logprob: -3.199733257293701
    6. 'factor' → logprob: -3.199733257293701
    7. ' def' → logprob: -3.574733257293701
    8. ' terms' → logprob: -3.699733257293701
    9. 'term' → logprob: -3.824733257293701
    10. ' factors' → logprob: -3.949733257293701

Token 289: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032283025211654603
    2. 'def' → logprob: -9.125323295593262
    3. '        
' → logprob: -9.375323295593262
    4. '   ' → logprob: -9.625323295593262
    5. '           ' → logprob: -10.625323295593262
    6. ',' → logprob: -11.375323295593262
    7. '    
' → logprob: -12.000323295593262
    8. '()' → logprob: -12.000323295593262
    9. '
' → logprob: -12.250323295593262
    10. '      ' → logprob: -13.125323295593262

Token 290: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.9288694858551025
    2. ' parentheses' → logprob: -2.0538694858551025
    3. ' precedence' → logprob: -2.4288694858551025
    4. ' consuming' → logprob: -2.8038694858551025
    5. ' explicit' → logprob: -3.0538694858551025
    6. ' look' → logprob: -3.3038694858551025
    7. 'explicit' → logprob: -3.5538694858551025
    8. 'left' → logprob: -3.6788694858551025
    9. 'def' → logprob: -3.9288694858551025
    10. 'parent' → logprob: -3.9288694858551025

Token 291: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005786343012005091
    2. ':' → logprob: -5.880786418914795
    3. '        
' → logprob: -7.255786418914795
    4. '()' → logprob: -7.630786418914795
    5. '<|end|>' → logprob: -7.880786418914795
    6. '   ' → logprob: -8.255785942077637
    7. ',' → logprob: -8.505785942077637
    8. '()
' → logprob: -8.630785942077637
    9. '():' → logprob: -8.630785942077637
    10. '():
' → logprob: -9.130785942077637

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05245431140065193
    2. ' so' → logprob: -3.0524542331695557
    3. '        
' → logprob: -6.177454471588135
    4. '        ' → logprob: -7.427454471588135
    5. '   ' → logprob: -8.302453994750977
    6. 'def' → logprob: -8.552453994750977
    7. '    ' → logprob: -8.677453994750977
    8. '           ' → logprob: -9.177453994750977
    9. ' which' → logprob: -9.177453994750977
    10. '    
' → logprob: -9.552453994750977

Token 293: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31904321908950806
    2. ' so' → logprob: -1.3190431594848633
    3. '   ' → logprob: -6.819043159484863
    4. '        ' → logprob: -6.819043159484863
    5. '        
' → logprob: -6.944043159484863
    6. '           ' → logprob: -7.069043159484863
    7. '    ' → logprob: -8.319043159484863
    8. ' return' → logprob: -8.319043159484863
    9. ' which' → logprob: -8.444043159484863
    10. 'so' → logprob: -8.944043159484863

Token 294: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.143037348985672
    2. ' def' → logprob: -2.6430373191833496
    3. '        ' → logprob: -4.39303731918335
    4. ' return' → logprob: -4.64303731918335
    5. '   ' → logprob: -4.64303731918335
    6. ' so' → logprob: -4.89303731918335
    7. ' non' → logprob: -4.89303731918335
    8. 'def' → logprob: -5.39303731918335
    9. '    ' → logprob: -5.89303731918335
    10. '           ' → logprob: -6.26803731918335

Token 295: ' we' (ID: 581)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5770523548126221
    2. '       ' → logprob: -1.702052354812622
    3. ' result' → logprob: -2.702052354812622
    4. '   ' → logprob: -2.702052354812622
    5. 'def' → logprob: -3.452052354812622
    6. ' left' → logprob: -3.827052354812622
    7. '    ' → logprob: -3.952052354812622
    8. ' return' → logprob: -4.702052116394043
    9. ' res' → logprob: -4.702052116394043
    10. 'result' → logprob: -4.827052116394043

Token 296: ' parse' (ID: 8420)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2007253170013428
    2. '   ' → logprob: -1.3257253170013428
    3. 'def' → logprob: -1.3257253170013428
    4. ' need' → logprob: -2.4507253170013428
    5. ' def' → logprob: -3.4507253170013428
    6. '       ' → logprob: -3.7007253170013428
    7. ' will' → logprob: -5.200725555419922
    8. '    ' → logprob: -6.075725555419922
    9. ' should' → logprob: -6.325725555419922
    10. ''ll' → logprob: -6.325725555419922

Token 297: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5117992162704468
    2. ' term' → logprob: -1.7617992162704468
    3. 'term' → logprob: -2.5117993354797363
    4. 'def' → logprob: -2.8867993354797363
    5. ' left' → logprob: -3.1367993354797363
    6. ' factor' → logprob: -3.7617993354797363
    7. 'factor' → logprob: -5.011799335479736
    8. ' def' → logprob: -5.011799335479736
    9. ' a' → logprob: -5.761799335479736
    10. '       ' → logprob: -5.761799335479736

Token 298: ' consuming' (ID: 47006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19306765496730804
    2. '   ' → logprob: -2.9430675506591797
    3. 'parse' → logprob: -3.9430675506591797
    4. ' def' → logprob: -4.06806755065918
    5. 'preced' → logprob: -4.06806755065918
    6. ' parsing' → logprob: -4.31806755065918
    7. 'factor' → logprob: -4.44306755065918
    8. 'term' → logprob: -4.44306755065918
    9. ' consuming' → logprob: -5.31806755065918
    10. ' calling' → logprob: -5.31806755065918

Token 299: ' terms' (ID: 5941)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7084138989448547
    2. ' factor' → logprob: -1.58341383934021
    3. 'factor' → logprob: -2.58341383934021
    4. 'a' → logprob: -2.58341383934021
    5. ' term' → logprob: -3.08341383934021
    6. ' left' → logprob: -3.20841383934021
    7. 'term' → logprob: -3.95841383934021
    8. '   ' → logprob: -4.708414077758789
    9. ' tokens' → logprob: -4.833414077758789
    10. ' the' → logprob: -5.083414077758789

Token 300: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0591471791267395
    2. '()' → logprob: -2.9341471195220947
    3. ' and' → logprob: -6.684147357940674
    4. 'def' → logprob: -6.809147357940674
    5. '           ' → logprob: -7.684147357940674
    6. '   ' → logprob: -8.059146881103516
    7. '()
' → logprob: -8.059146881103516
    8. ',' → logprob: -8.434146881103516
    9. '():' → logprob: -8.934146881103516
    10. '        
' → logprob: -9.184146881103516

Token 301: ' ops' (ID: 26973)
  Prédit: ' combining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combining' → logprob: -0.1373623162508011
    2. 'def' → logprob: -3.512362241744995
    3. 'return' → logprob: -3.762362241744995
    4. ' calling' → logprob: -4.137362480163574
    5. 'comb' → logprob: -4.387362480163574
    6. '   ' → logprob: -5.137362480163574
    7. ' factors' → logprob: -5.637362480163574
    8. ' checking' → logprob: -5.637362480163574
    9. ' operators' → logprob: -5.762362480163574
    10. ' building' → logprob: -5.762362480163574

Token 302: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008824687451124191
    2. '()' → logprob: -5.883824825286865
    3. '():' → logprob: -6.133824825286865
    4. '   ' → logprob: -6.633824825286865
    5. 'def' → logprob: -6.633824825286865
    6. ':' → logprob: -7.758824825286865
    7. '           ' → logprob: -8.008824348449707
    8. '():
' → logprob: -8.633824348449707
    9. '()
' → logprob: -9.133824348449707
    10. '        
' → logprob: -9.508824348449707

Token 303: ' order' (ID: 2569)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08741777390241623
    2. ' a' → logprob: -2.5874178409576416
    3. 'sequence' → logprob: -5.9624176025390625
    4. '   ' → logprob: -6.2124176025390625
    5. 'order' → logprob: -6.7124176025390625
    6. ' sequence' → logprob: -6.9624176025390625
    7. 'loop' → logprob: -7.2124176025390625
    8. ' loop' → logprob: -8.212417602539062
    9. 'while' → logprob: -8.462417602539062
    10. ' order' → logprob: -8.962417602539062

Token 304: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005788889247924089
    2. ',' → logprob: -8.875578880310059
    3. '()' → logprob: -8.875578880310059
    4. ':' → logprob: -9.375578880310059
    5. '   ' → logprob: -9.750578880310059
    6. '<|end|>' → logprob: -10.250578880310059
    7. '           ' → logprob: -10.375578880310059
    8. '        
' → logprob: -10.875578880310059
    9. '<|end|>' → logprob: -10.875578880310059
    10. 'def' → logprob: -11.375578880310059

Token 305: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006984368897974491
    2. '           ' → logprob: -6.006984233856201
    3. ' def' → logprob: -6.506984233856201
    4. 'def' → logprob: -6.881984233856201
    5. '   ' → logprob: -7.381984233856201
    6. ' term' → logprob: -7.881984233856201
    7. '        
' → logprob: -8.25698471069336
    8. '
' → logprob: -8.25698471069336
    9. 'term' → logprob: -9.00698471069336
    10. ' result' → logprob: -9.63198471069336

Token 306: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1974284648895264
    2. '   ' → logprob: -1.9474284648895264
    3. 'parse' → logprob: -2.3224284648895264
    4. 'term' → logprob: -2.5724284648895264
    5. 'factor' → logprob: -2.8224284648895264
    6. '       ' → logprob: -2.9474284648895264
    7. 'left' → logprob: -3.0724284648895264
    8. 'consume' → logprob: -3.3224284648895264
    9. ' parse' → logprob: -3.4474284648895264
    10. ' term' → logprob: -3.9474284648895264

Token 307: ' until' (ID: 4609)
  Prédit: ' term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.4224296510219574
    2. 'term' → logprob: -1.1724296808242798
    3. ' factor' → logprob: -4.17242956161499
    4. 'factor' → logprob: -4.79742956161499
    5. '   ' → logprob: -5.42242956161499
    6. 'def' → logprob: -5.92242956161499
    7. '_term' → logprob: -6.29742956161499
    8. '()' → logprob: -6.79742956161499
    9. ' a' → logprob: -7.92242956161499
    10. ' def' → logprob: -8.172430038452148

Token 308: ' all' (ID: 722)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9528084993362427
    2. ' no' → logprob: -1.2028084993362427
    3. ' None' → logprob: -1.8278084993362427
    4. ' tokens' → logprob: -3.452808380126953
    5. 'tokens' → logprob: -3.952808380126953
    6. ' p' → logprob: -4.077808380126953
    7. 'no' → logprob: -4.077808380126953
    8. '   ' → logprob: -4.202808380126953
    9. ' the' → logprob: -4.952808380126953
    10. ' not' → logprob: -5.077808380126953

Token 309: ' consumed' (ID: 47047)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.33368685841560364
    2. 'tokens' → logprob: -1.3336868286132812
    3. ' consumed' → logprob: -4.083686828613281
    4. 'cons' → logprob: -6.208686828613281
    5. '   ' → logprob: -8.208686828613281
    6. ' input' → logprob: -8.333686828613281
    7. ' is' → logprob: -8.333686828613281
    8. 'input' → logprob: -8.958686828613281
    9. 'parsed' → logprob: -8.958686828613281
    10. '       ' → logprob: -9.583686828613281

Token 310: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021079665049910545
    2. '()' → logprob: -4.6460795402526855
    3. '   ' → logprob: -5.5210795402526855
    4. '()
' → logprob: -5.5210795402526855
    5. '():' → logprob: -6.8960795402526855
    6. ':' → logprob: -7.0210795402526855
    7. '        
' → logprob: -7.7710795402526855
    8. '           ' → logprob: -8.646080017089844
    9. '():
' → logprob: -8.646080017089844
    10. ',' → logprob: -8.771080017089844

Token 311: ' top' (ID: 2344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2317478656768799
    2. ')' → logprob: -1.6067478656768799
    3. '):
' → logprob: -1.7317478656768799
    4. '   ' → logprob: -2.10674786567688
    5. '       ' → logprob: -2.60674786567688
    6. '()' → logprob: -3.10674786567688
    7. ' the' → logprob: -3.85674786567688
    8. ')
' → logprob: -4.231747627258301
    9. ' def' → logprob: -4.606747627258301
    10. '()
' → logprob: -4.856747627258301

Token 312: ' level' (ID: 3211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36709439754486084
    2. '-level' → logprob: -1.8670943975448608
    3. 'expr' → logprob: -3.1170945167541504
    4. ')' → logprob: -3.2420945167541504
    5. '   ' → logprob: -3.4920945167541504
    6. 'level' → logprob: -4.74209451675415
    7. ' level' → logprob: -4.74209451675415
    8. '()' → logprob: -5.49209451675415
    9. '_expr' → logprob: -5.49209451675415
    10. '_level' → logprob: -6.11709451675415

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2389911711215973
    2. '():' → logprob: -2.4889912605285645
    3. '()' → logprob: -2.6139912605285645
    4. '()
' → logprob: -3.6139912605285645
    5. '   ' → logprob: -4.2389912605285645
    6. '():
' → logprob: -4.7389912605285645
    7. ':' → logprob: -5.3639912605285645
    8. 'def' → logprob: -7.6139912605285645
    9. '           ' → logprob: -8.488990783691406
    10. '        
' → logprob: -8.738990783691406

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012809342704713345
    2. '()' → logprob: -5.6378092765808105
    3. '():' → logprob: -5.6378092765808105
    4. '   ' → logprob: -6.0128092765808105
    5. ':' → logprob: -7.2628092765808105
    6. '()
' → logprob: -7.5128092765808105
    7. 'def' → logprob: -7.6378092765808105
    8. '():
' → logprob: -7.6378092765808105
    9. '        
' → logprob: -7.8878092765808105
    10. '    
' → logprob: -9.137809753417969

Token 315: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029844561591744423
    2. '   ' → logprob: -4.654844760894775
    3. ' term' → logprob: -5.654844760894775
    4. 'def' → logprob: -5.779844760894775
    5. ' result' → logprob: -5.904844760894775
    6. 'term' → logprob: -6.029844760894775
    7. '           ' → logprob: -6.154844760894775
    8. ' def' → logprob: -6.279844760894775
    9. 'result' → logprob: -7.279844760894775
    10. ' res' → logprob: -7.654844760894775

Token 316: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5758690237998962
    2. 'node' → logprob: -1.450869083404541
    3. 'def' → logprob: -2.200869083404541
    4. 'result' → logprob: -3.700869083404541
    5. ' node' → logprob: -4.075869083404541
    6. 'term' → logprob: -4.325869083404541
    7. '   ' → logprob: -4.700869083404541
    8. '           ' → logprob: -5.200869083404541
    9. ' def' → logprob: -5.450869083404541
    10. 'val' → logprob: -5.575869083404541

Token 317: ' the' (ID: 290)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6926732063293457
    2. '       ' → logprob: -1.4426732063293457
    3. 'def' → logprob: -2.0676732063293457
    4. '    ' → logprob: -2.6926732063293457
    5. '        ' → logprob: -3.6926732063293457
    6. '   ' → logprob: -4.817673206329346
    7. ' return' → logprob: -5.192673206329346
    8. ',' → logprob: -5.192673206329346
    9. ' tokens' → logprob: -5.192673206329346
    10. ' ' → logprob: -5.567673206329346

Token 318: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050769347697496414
    2. ' def' → logprob: -3.175769329071045
    3. '   ' → logprob: -5.425769329071045
    4. 'result' → logprob: -6.800769329071045
    5. '       ' → logprob: -7.175769329071045
    6. ' result' → logprob: -7.550769329071045
    7. '
' → logprob: -7.925769329071045
    8. '#' → logprob: -8.925769805908203
    9. '    ' → logprob: -9.550769805908203
    10. 'node' → logprob: -10.300769805908203

Token 319: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1607152223587036
    2. ' is' → logprob: -1.4107152223587036
    3. '       ' → logprob: -2.160715103149414
    4. 'def' → logprob: -2.410715103149414
    5. '   ' → logprob: -2.535715103149414
    6. ' def' → logprob: -2.660715103149414
    7. ' =' → logprob: -3.785715103149414
    8. '=' → logprob: -4.285715103149414
    9. ':
' → logprob: -5.410715103149414
    10. ' continues' → logprob: -5.410715103149414

Token 320: ' ambiguous' (ID: 123648)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2383981943130493
    2. 'expr' → logprob: -1.8633981943130493
    3. '   ' → logprob: -2.2383980751037598
    4. 'def' → logprob: -2.6133980751037598
    5. ' expr' → logprob: -2.6133980751037598
    6. ':' → logprob: -3.1133980751037598
    7. ' not' → logprob: -3.1133980751037598
    8. 'factor' → logprob: -3.2383980751037598
    9. ' factor' → logprob: -3.3633980751037598
    10. ':
' → logprob: -3.6133980751037598

Token 321: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08460585027933121
    2. ':' → logprob: -3.5846059322357178
    3. '   ' → logprob: -4.334605693817139
    4. '
' → logprob: -4.709605693817139
    5. ',' → logprob: -4.709605693817139
    6. 'def' → logprob: -5.084605693817139
    7. '        
' → logprob: -5.209605693817139
    8. '():' → logprob: -6.084605693817139
    9. '():
' → logprob: -6.334605693817139
    10. ':
' → logprob: -6.459605693817139

Token 322: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5390399694442749
    2. ' so' → logprob: -1.289039969444275
    3. ' but' → logprob: -2.0390400886535645
    4. ' we' → logprob: -6.4140400886535645
    5. 'but' → logprob: -6.4140400886535645
    6. 'so' → logprob: -6.6640400886535645
    7. ' let's' → logprob: -6.6640400886535645
    8. '        ' → logprob: -7.0390400886535645
    9. '   ' → logprob: -7.1640400886535645
    10. ' return' → logprob: -7.4140400886535645

Token 323: ' just' (ID: 1327)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3599342107772827
    2. ' need' → logprob: -1.6099342107772827
    3. ' continue' → logprob: -4.109934329986572
    4. 'def' → logprob: -4.359934329986572
    5. ' will' → logprob: -4.734934329986572
    6. '   ' → logprob: -4.734934329986572
    7. ' could' → logprob: -4.734934329986572
    8. 'can' → logprob: -4.859934329986572
    9. ''ll' → logprob: -4.984934329986572
    10. 'need' → logprob: -4.984934329986572

Token 324: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40470090508461
    2. '   ' → logprob: -2.029700994491577
    3. ' parse' → logprob: -2.404700994491577
    4. 'parse' → logprob: -3.154700994491577
    5. ' def' → logprob: -4.029700756072998
    6. 'consume' → logprob: -4.279700756072998
    7. ' implement' → logprob: -5.029700756072998
    8. ' need' → logprob: -5.279700756072998
    9. ' use' → logprob: -5.904700756072998
    10. ' can' → logprob: -5.904700756072998

Token 325: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4387795627117157
    2. '   ' → logprob: -2.188779592514038
    3. 'def' → logprob: -2.563779592514038
    4. ' tokens' → logprob: -3.188779592514038
    5. ' the' → logprob: -3.563779592514038
    6. ' a' → logprob: -3.938779592514038
    7. ' left' → logprob: -4.438779354095459
    8. ' until' → logprob: -4.563779354095459
    9. ' def' → logprob: -4.813779354095459
    10. ' as' → logprob: -4.813779354095459

Token 326: ' in' (ID: 306)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.9807268977165222
    2. 'left' → logprob: -1.730726957321167
    3. 'def' → logprob: -1.730726957321167
    4. 'term' → logprob: -2.855726957321167
    5. 'factor' → logprob: -2.980726957321167
    6. ' a' → logprob: -3.230726957321167
    7. ' def' → logprob: -3.230726957321167
    8. ' term' → logprob: -3.355726957321167
    9. '   ' → logprob: -4.230726718902588
    10. 'a' → logprob: -4.980726718902588

Token 327: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10801253467798233
    2. '   ' → logprob: -3.2330124378204346
    3. '       ' → logprob: -3.3580124378204346
    4. ' def' → logprob: -4.858012676239014
    5. 'factor' → logprob: -4.983012676239014
    6. '
' → logprob: -5.608012676239014
    7. 'term' → logprob: -6.233012676239014
    8. '           ' → logprob: -6.733012676239014
    9. 'left' → logprob: -6.858012676239014
    10. 'return' → logprob: -6.983012676239014

Token 328: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18814772367477417
    2. '   ' → logprob: -1.813147783279419
    3. 'def' → logprob: -5.43814754486084
    4. ':' → logprob: -6.93814754486084
    5. '
' → logprob: -7.18814754486084
    6. ',' → logprob: -7.31314754486084
    7. '()' → logprob: -8.06314754486084
    8. '()
' → logprob: -8.31314754486084
    9. '        
' → logprob: -8.31314754486084
    10. '    
' → logprob: -8.56314754486084

Token 329: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44093629717826843
    2. ' def' → logprob: -2.565936326980591
    3. 'left' → logprob: -2.940936326980591
    4. 'preced' → logprob: -2.940936326980591
    5. ' left' → logprob: -3.190936326980591
    6. ' precedence' → logprob: -3.815936326980591
    7. 'lowest' → logprob: -3.940936326980591
    8. '   ' → logprob: -4.190936088562012
    9. 'term' → logprob: -4.315936088562012
    10. 'factor' → logprob: -4.440936088562012

Token 330: 'ens' (ID: 696)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.9470205307006836
    2. 'se' → logprob: -1.1970205307006836
    3. 'ent' → logprob: -1.9470205307006836
    4. 'ser' → logprob: -2.3220205307006836
    5. 'ens' → logprob: -3.5720205307006836
    6. 'def' → logprob: -4.572020530700684
    7. 'am' → logprob: -4.822020530700684
    8. 't' → logprob: -5.447020530700684
    9. 'ams' → logprob: -5.447020530700684
    10. '```' → logprob: -5.572020530700684

Token 331: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00804367195814848
    2. '   ' → logprob: -5.5080437660217285
    3. 'def' → logprob: -5.8830437660217285
    4. '        
' → logprob: -7.7580437660217285
    5. '
' → logprob: -7.8830437660217285
    6. '    
' → logprob: -8.75804328918457
    7. ',' → logprob: -9.50804328918457
    8. '           ' → logprob: -10.63304328918457
    9. ' def' → logprob: -10.75804328918457
    10. '      ' → logprob: -10.88304328918457

Token 332: ' num' (ID: 2269)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9985922574996948
    2. 'factor' → logprob: -1.3735922574996948
    3. ' factor' → logprob: -2.6235923767089844
    4. 'term' → logprob: -2.7485923767089844
    5. ' factors' → logprob: -2.8735923767089844
    6. '   ' → logprob: -3.2485923767089844
    7. ' def' → logprob: -3.2485923767089844
    8. 'f' → logprob: -3.4985923767089844
    9. 'expr' → logprob: -4.373592376708984
    10. ' precedence' → logprob: -4.748592376708984

Token 333: ' leaves' (ID: 15657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20017127692699432
    2. '       ' → logprob: -1.8251712322235107
    3. 'def' → logprob: -4.20017147064209
    4. '
' → logprob: -5.70017147064209
    5. ' def' → logprob: -7.32517147064209
    6. '    
' → logprob: -7.82517147064209
    7. '        
' → logprob: -7.95017147064209
    8. '()' → logprob: -9.20017147064209
    9. '()
' → logprob: -9.45017147064209
    10. ',' → logprob: -9.57517147064209

Token 334: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17047417163848877
    2. '   ' → logprob: -1.9204741716384888
    3. 'def' → logprob: -4.920474052429199
    4. '
' → logprob: -6.795474052429199
    5. '        
' → logprob: -7.045474052429199
    6. '    
' → logprob: -7.545474052429199
    7. '           ' → logprob: -9.5454740524292
    8. ',' → logprob: -9.7954740524292
    9. '     ' → logprob: -10.0454740524292
    10. ' def' → logprob: -10.1704740524292

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031890016980469227
    2. '   ' → logprob: -5.8781890869140625
    3. '        
' → logprob: -8.628189086914062
    4. 'def' → logprob: -9.503189086914062
    5. ':' → logprob: -10.253189086914062
    6. '    
' → logprob: -11.003189086914062
    7. '           ' → logprob: -11.253189086914062
    8. '      ' → logprob: -11.378189086914062
    9. ' tokens' → logprob: -11.503189086914062
    10. ',' → logprob: -11.753189086914062

Token 336: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006906117312610149
    2. '   ' → logprob: -5.881906032562256
    3. 'def' → logprob: -5.881906032562256
    4. ' def' → logprob: -7.506906032562256
    5. '        
' → logprob: -7.881906032562256
    6. '           ' → logprob: -8.506906509399414
    7. '    
' → logprob: -10.256906509399414
    8. ' tokens' → logprob: -10.631906509399414
    9. '
' → logprob: -10.756906509399414
    10. '      ' → logprob: -11.006906509399414

Token 337: ' parse' (ID: 8420)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.011970194056630135
    2. 'factor' → logprob: -4.761970043182373
    3. 'parse' → logprob: -5.886970043182373
    4. ' term' → logprob: -8.136970520019531
    5. 'atom' → logprob: -9.261970520019531
    6. 'expr' → logprob: -9.386970520019531
    7. 'add' → logprob: -10.511970520019531
    8. '_term' → logprob: -11.011970520019531
    9. ' factor' → logprob: -11.386970520019531
    10. '(term' → logprob: -11.636970520019531

Token 338: '_e' (ID: 4618)
  Prédit: '_term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.5043414235115051
    2. '_factor' → logprob: -1.0043413639068604
    3. '_expr' → logprob: -3.7543413639068604
    4. '_primary' → logprob: -6.0043416023254395
    5. '_add' → logprob: -6.7543416023254395
    6. '_sum' → logprob: -7.7543416023254395
    7. '_atom' → logprob: -7.7543416023254395
    8. '   ' → logprob: -8.004341125488281
    9. '_mul' → logprob: -8.254341125488281
    10. '()' → logprob: -8.629341125488281

Token 339: '()
' (ID: 1234)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002969703928101808
    2. 'xp' → logprob: -8.375296592712402
    3. '()' → logprob: -9.875296592712402
    4. 'expr' → logprob: -12.625296592712402
    5. 'xr' → logprob: -13.250296592712402
    6. 'r' → logprob: -13.500296592712402
    7. 'xer' → logprob: -13.500296592712402
    8. 'rror' → logprob: -13.625296592712402
    9. '(p' → logprob: -14.000296592712402
    10. 'pr' → logprob: -14.125296592712402

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17595399916172028
    2. '()
' → logprob: -3.0509541034698486
    3. 'def' → logprob: -3.1759541034698486
    4. '()' → logprob: -3.5509541034698486
    5. '():' → logprob: -4.5509538650512695
    6. '
' → logprob: -4.6759538650512695
    7. ' ' → logprob: -5.1759538650512695
    8. ':' → logprob: -5.4259538650512695
    9. '(' → logprob: -5.5509538650512695
    10. '  ' → logprob: -6.1759538650512695

Token 341: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14338600635528564
    2. 'def' (adapté à ' def') → logprob: -2.268385887145996
    3. '
' → logprob: -4.643385887145996
    4. '    
' → logprob: -5.018385887145996
    5. ' def' → logprob: -5.518385887145996
    6. ' ' → logprob: -6.143385887145996
    7. ' tokens' → logprob: -6.768385887145996
    8. ':' → logprob: -7.018385887145996
    9. 'tokens' → logprob: -7.143385887145996
    10. '       ' → logprob: -7.268385887145996

Token 342: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.05072175711393356
    2. 'factor' → logprob: -3.9257216453552246
    3. 'expr' → logprob: -4.300721645355225
    4. ' parse' → logprob: -4.675721645355225
    5. 'e' → logprob: -6.175721645355225
    6. 'def' → logprob: -6.425721645355225
    7. 'term' → logprob: -6.800721645355225
    8. 'x' → logprob: -7.675721645355225
    9. ' factor' → logprob: -8.050722122192383
    10. '_expr' → logprob: -8.800722122192383

Token 343: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0006984960054978728
    2. '_expr' → logprob: -8.25069808959961
    3. 'e' → logprob: -8.62569808959961
    4. '_factor' → logprob: -9.25069808959961
    5. '_' → logprob: -10.00069808959961
    6. '_f' → logprob: -10.62569808959961
    7. 'factor' → logprob: -10.75069808959961
    8. 'expr' → logprob: -11.12569808959961
    9. '_token' → logprob: -11.50069808959961
    10. '_a' → logprob: -12.00069808959961

Token 344: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.22619719803333282
    2. '():
' → logprob: -1.6011972427368164
    3. '()' → logprob: -7.851197242736816
    4. 'x' → logprob: -8.226197242736816
    5. 'xp' → logprob: -9.726197242736816
    6. '(' → logprob: -10.726197242736816
    7. '():
' → logprob: -11.601197242736816
    8. '   ' → logprob: -12.476197242736816
    9. '():

' → logprob: -12.601197242736816
    10. ':' → logprob: -12.601197242736816

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013464430347084999
    2. '   ' → logprob: -4.888464450836182
    3. 'def' → logprob: -5.388464450836182
    4. '():' → logprob: -7.763464450836182
    5. 'return' → logprob: -8.138463973999023
    6. '()' → logprob: -8.638463973999023
    7. '():
' → logprob: -8.888463973999023
    8. 'token' → logprob: -9.763463973999023
    9. '()
' → logprob: -10.513463973999023
    10. 'term' → logprob: -10.638463973999023

Token 346: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.20332255959510803
    2. '       ' → logprob: -2.453322649002075
    3. 'left' → logprob: -3.203322649002075
    4. 'def' → logprob: -3.828322649002075
    5. 'term' → logprob: -4.703322410583496
    6. ' node' → logprob: -5.078322410583496
    7. 'result' → logprob: -5.203322410583496
    8. '   ' → logprob: -5.328322410583496
    9. 'val' → logprob: -5.828322410583496
    10. 'res' → logprob: -6.578322410583496

Token 347: ' parse' (ID: 8420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7603163719177246
    2. 'node' → logprob: -2.3853163719177246
    3. ' left' → logprob: -2.3853163719177246
    4. 'left' → logprob: -2.8853163719177246
    5. ' node' → logprob: -3.1353163719177246
    6. 'term' → logprob: -3.1353163719177246
    7. ' term' → logprob: -3.5103163719177246
    8. '   ' → logprob: -3.5103163719177246
    9. ' res' → logprob: -3.6353163719177246
    10. ' cur' → logprob: -4.010316371917725

Token 348: ' a' (ID: 261)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.7863689661026001
    2. 't' → logprob: -0.9113689661026001
    3. 'parse' → logprob: -2.7863688468933105
    4. 'f' → logprob: -3.0363688468933105
    5. 'factor' → logprob: -4.4113688468933105
    6. 'def' → logprob: -5.0363688468933105
    7. '   ' → logprob: -5.4113688468933105
    8. 'm' → logprob: -6.1613688468933105
    9. 'node' → logprob: -6.4113688468933105
    10. 'p' → logprob: -6.6613688468933105

Token 349: ' unit' (ID: 7670)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.792908787727356
    2. 'factor' → logprob: -1.292908787727356
    3. 'def' → logprob: -1.792908787727356
    4. '_term' → logprob: -3.6679086685180664
    5. '_factor' → logprob: -3.7929086685180664
    6. '()' → logprob: -4.292908668518066
    7. ' factor' → logprob: -4.792908668518066
    8. 'f' → logprob: -5.167908668518066
    9. '   ' → logprob: -5.292908668518066
    10. ' term' → logprob: -5.292908668518066

Token 350: '
' (ID: 198)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5498190522193909
    2. '():' → logprob: -0.9248190522193909
    3. '       ' → logprob: -4.674818992614746
    4. 'def' → logprob: -4.799818992614746
    5. '   ' → logprob: -5.299818992614746
    6. '()' → logprob: -5.924818992614746
    7. '()
' → logprob: -7.924818992614746
    8. ':' → logprob: -7.924818992614746
    9. ':
' → logprob: -9.299818992614746
    10. '           ' → logprob: -10.299818992614746

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4639461040496826
    2. '   ' → logprob: -1.4639461040496826
    3. 'def' → logprob: -2.4639461040496826
    4. '():' → logprob: -3.3389461040496826
    5. '():
' → logprob: -4.213946342468262
    6. '()' → logprob: -5.838946342468262
    7. ':' → logprob: -7.963946342468262
    8. '()
' → logprob: -8.463946342468262
    9. 'token' → logprob: -8.588946342468262
    10. 'term' → logprob: -8.588946342468262

Token 352: ' if' (ID: 538)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6901649832725525
    2. '       ' → logprob: -1.1901650428771973
    3. ' node' → logprob: -2.5651650428771973
    4. '   ' → logprob: -3.3151650428771973
    5. 'term' → logprob: -4.065165042877197
    6. 'left' → logprob: -4.065165042877197
    7. 'cur' → logprob: -4.815165042877197
    8. 'token' → logprob: -5.065165042877197
    9. ' left' → logprob: -5.315165042877197
    10. 't' → logprob: -5.315165042877197

Token 353: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2768748700618744
    2. 'p' → logprob: -2.0268747806549072
    3. 'self' → logprob: -2.9018747806549072
    4. ' self' → logprob: -3.0268747806549072
    5. 'peek' → logprob: -6.276875019073486
    6. ' tokens' → logprob: -6.651875019073486
    7. 'tokens' → logprob: -7.026875019073486
    8. 'Parser' → logprob: -7.401875019073486
    9. ' peek' → logprob: -8.151874542236328
    10. '  ' → logprob: -8.526874542236328

Token 354: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.5760699510574341
    2. '.consume' → logprob: -0.8260699510574341
    3. '.' → logprob: -9.576069831848145
    4. '.pos' → logprob: -10.701069831848145
    5. ' .' → logprob: -11.451069831848145
    6. '   ' → logprob: -11.951069831848145
    7. '.cons' → logprob: -12.076069831848145
    8. 'peek' → logprob: -12.701069831848145
    9. 'consume' → logprob: -12.951069831848145
    10. '.pe' → logprob: -13.576069831848145

Token 355: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09238230437040329
    2. '()[' → logprob: -2.7173821926116943
    3. '()==' → logprob: -3.9673821926116943
    4. 'and' → logprob: -6.717382431030273
    5. 'is' → logprob: -7.092382431030273
    6. ' is' → logprob: -7.717382431030273
    7. '[' → logprob: -8.092382431030273
    8. '==' → logprob: -9.092382431030273
    9. ' ()' → logprob: -9.592382431030273
    10. '(' → logprob: -9.717382431030273

Token 356: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.41553768515586853
    2. 'is' → logprob: -1.915537714958191
    3. ' ==' → logprob: -2.9155375957489014
    4. ' and' → logprob: -2.9155375957489014
    5. '==' → logprob: -3.4155375957489014
    6. 'and' → logprob: -3.4155375957489014
    7. '[' → logprob: -4.0405378341674805
    8. ' ' → logprob: -8.04053783416748
    9. '==(' → logprob: -8.54053783416748
    10. '()' → logprob: -9.16553783416748

Token 357: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001409401185810566
    2. 'None' → logprob: -7.126409530639648
    3. '(None' → logprob: -7.501409530639648
    4. ' ('' → logprob: -10.251409530639648
    5. '(('' → logprob: -11.501409530639648
    6. '(' → logprob: -13.126409530639648
    7. '('+' → logprob: -13.751409530639648
    8. ' None' → logprob: -14.251409530639648
    9. '('',' → logprob: -14.376409530639648
    10. '('(' → logprob: -14.626409530639648

Token 358: '(',' (ID: 30548)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.11714857816696167
    2. ''' → logprob: -2.8671486377716064
    3. '('' → logprob: -3.1171486377716064
    4. '(' → logprob: -4.867148399353027
    5. '(num' → logprob: -7.242148399353027
    6. 'paren' → logprob: -8.242148399353027
    7. '')' → logprob: -8.492148399353027
    8. '(',' → logprob: -9.242148399353027
    9. ')' → logprob: -9.617148399353027
    10. '',' → logprob: -9.867148399353027

Token 359: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5650302171707153
    2. '):
' → logprob: -1.0650302171707153
    3. ')' → logprob: -3.440030097961426
    4. ''):' → logprob: -3.440030097961426
    5. ''):
' → logprob: -4.065030097961426
    6. '')' → logprob: -5.440030097961426
    7. ''' → logprob: -8.190030097961426
    8. '):

' → logprob: -8.815030097961426
    9. '):
' → logprob: -9.065030097961426
    10. '':' → logprob: -9.190030097961426

Token 360: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07947416603565216
    2. '           ' → logprob: -2.5794742107391357
    3. 'p' → logprob: -8.204474449157715
    4. ' p' → logprob: -8.954474449157715
    5. '   ' → logprob: -9.454474449157715
    6. ',' → logprob: -10.829474449157715
    7. '):
' → logprob: -10.954474449157715
    8. ')' → logprob: -11.329474449157715
    9. '        ' → logprob: -12.079474449157715
    10. ':
' → logprob: -12.204474449157715

Token 361: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.07325082272291183
    2. ' p' → logprob: -2.6982507705688477
    3. '           ' → logprob: -6.448250770568848
    4. '       ' → logprob: -6.573250770568848
    5. '_' → logprob: -9.073250770568848
    6. '               ' → logprob: -9.323250770568848
    7. '   ' → logprob: -9.948250770568848
    8. '_p' → logprob: -10.198250770568848
    9. ')p' → logprob: -11.823250770568848
    10. ' _' → logprob: -12.323250770568848

Token 362: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0003936152206733823
    2. '.' → logprob: -8.000393867492676
    3. 'consume' → logprob: -9.875393867492676
    4. '.pos' → logprob: -12.375393867492676
    5. 'pos' → logprob: -13.875393867492676
    6. '   ' → logprob: -14.875393867492676
    7. '.peek' → logprob: -15.375393867492676
    8. '.cons' → logprob: -15.500393867492676
    9. ' .' → logprob: -15.750393867492676
    10. '.advance' → logprob: -16.37539291381836

Token 363: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003790760529227555
    2. '(('' → logprob: -8.375378608703613
    3. ' ('' → logprob: -8.875378608703613
    4. ''' → logprob: -13.000378608703613
    5. '("("' → logprob: -13.125378608703613
    6. '   ' → logprob: -14.000378608703613
    7. '('(' → logprob: -14.125378608703613
    8. ' ' → logprob: -14.625378608703613
    9. ' '('' → logprob: -14.750378608703613
    10. '  ' → logprob: -15.250378608703613

Token 364: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000282431225059554
    2. '(' → logprob: -8.250282287597656
    3. '(',' → logprob: -11.125282287597656
    4. '(\'' → logprob: -13.000282287597656
    5. ''' → logprob: -13.250282287597656
    6. '(('' → logprob: -13.875282287597656
    7. '(';' → logprob: -15.125282287597656
    8. '()' → logprob: -15.625282287597656
    9. '(
' → logprob: -15.875282287597656
    10. '("' → logprob: -16.125282287597656

Token 365: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2528335154056549
    2. ')' → logprob: -1.5028334856033325
    3. '           ' → logprob: -7.502833366394043
    4. '')
' → logprob: -8.877833366394043
    5. ')
' → logprob: -8.877833366394043
    6. '')' → logprob: -9.877833366394043
    7. '       ' → logprob: -12.002833366394043
    8. ')

' → logprob: -12.127833366394043
    9. '())
' → logprob: -13.752833366394043
    10. ' )
' → logprob: -14.002833366394043

Token 366: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06418988108634949
    2. '           ' → logprob: -2.814189910888672
    3. 'return' → logprob: -6.689189910888672
    4. '   ' → logprob: -7.814189910888672
    5. 'expr' → logprob: -8.439189910888672
    6. '
' → logprob: -8.564189910888672
    7. ')' → logprob: -10.064189910888672
    8. ' return' → logprob: -10.439189910888672
    9. 'def' → logprob: -10.564189910888672
    10. 'result' → logprob: -11.189189910888672

Token 367: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.5641710162162781
    2. 'res' → logprob: -2.314171075820923
    3. 'val' → logprob: -2.439171075820923
    4. '           ' → logprob: -2.689171075820923
    5. 'e' → logprob: -2.939171075820923
    6. '       ' → logprob: -3.064171075820923
    7. ' res' → logprob: -4.064170837402344
    8. 'v' → logprob: -4.439170837402344
    9. 'result' → logprob: -4.689170837402344
    10. ' node' → logprob: -4.814170837402344

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889088988304138
    2. ' =' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.703890800476074
    4. '    ' → logprob: -15.328890800476074
    5. '           ' → logprob: -15.578890800476074
    6. '       ' → logprob: -16.32889175415039
    7. '        ' → logprob: -16.32889175415039
    8. '=parse' → logprob: -16.57889175415039
    9. ',' → logprob: -17.07889175415039
    10. ' ' → logprob: -17.20389175415039

Token 369: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.034565892070531845
    2. ' parse' → logprob: -3.4095659255981445
    3. 'expr' → logprob: -7.6595659255981445
    4. '   ' → logprob: -8.409565925598145
    5. '           ' → logprob: -9.784565925598145
    6. '(parse' → logprob: -10.034565925598145
    7. '       ' → logprob: -10.159565925598145
    8. 'e' → logprob: -11.284565925598145
    9. ' expr' → logprob: -11.784565925598145
    10. ' ' → logprob: -11.784565925598145

Token 370: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.07921571284532547
    2. 'e' → logprob: -2.5792157649993896
    3. 'expr' → logprob: -8.454216003417969
    4. 'parse' → logprob: -9.829216003417969
    5. '_expr' → logprob: -10.579216003417969
    6. ''e' → logprob: -11.204216003417969
    7. '   ' → logprob: -12.704216003417969
    8. '(e' → logprob: -13.079216003417969
    9. 'expression' → logprob: -13.329216003417969
    10. 'E' → logprob: -13.329216003417969

Token 371: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.313495934009552
    2. '()' → logprob: -1.3134958744049072
    3. ')' → logprob: -8.938495635986328
    4. ')
' → logprob: -10.563495635986328
    5. '()

' → logprob: -10.813495635986328
    6. '       ' → logprob: -11.063495635986328
    7. '())
' → logprob: -11.313495635986328
    8. '())' → logprob: -11.813495635986328
    9. '   ' → logprob: -12.313495635986328
    10. '()
' → logprob: -12.313495635986328

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005207431968301535
    2. '       ' → logprob: -7.750520706176758
    3. '   ' → logprob: -10.000520706176758
    4. ')' → logprob: -11.250520706176758
    5. '()' → logprob: -11.625520706176758
    6. 'return' → logprob: -12.375520706176758
    7. '
' → logprob: -12.750520706176758
    8. '		' → logprob: -12.875520706176758
    9. '               ' → logprob: -13.250520706176758
    10. '<|end|>' → logprob: -13.375520706176758

Token 373: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.15415172278881073
    2. '           ' → logprob: -2.029151678085327
    3. 'if' → logprob: -4.529151916503906
    4. ' p' → logprob: -8.029151916503906
    5. '       ' → logprob: -8.779151916503906
    6. '(p' → logprob: -10.029151916503906
    7. ' if' → logprob: -10.279151916503906
    8. ')' → logprob: -10.904151916503906
    9. '   ' → logprob: -11.279151916503906
    10. ')p' → logprob: -11.654151916503906

Token 374: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.00010700009443098679
    2. '.' → logprob: -9.250106811523438
    3. 'consume' → logprob: -12.250106811523438
    4. '   ' → logprob: -12.875106811523438
    5. '().' → logprob: -13.125106811523438
    6. '.cons' → logprob: -14.125106811523438
    7. ' .' → logprob: -14.625106811523438
    8. '.expect' → logprob: -16.375106811523438
    9. '       ' → logprob: -17.125106811523438
    10. '.acquire' → logprob: -17.250106811523438

Token 375: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.1080467781284824e-05
    2. '(('' → logprob: -10.250041007995605
    3. '(' → logprob: -12.250041007995605
    4. ' (' → logprob: -14.875041007995605
    5. '')' → logprob: -15.250041007995605
    6. '("' → logprob: -16.125041961669922
    7. '   ' → logprob: -16.375041961669922
    8. '(
' → logprob: -17.500041961669922
    9. '('.')' → logprob: -18.250041961669922
    10. ')' → logprob: -18.625041961669922

Token 376: ')')
' (ID: 80616)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005783142987638712
    2. '('' → logprob: -5.6307830810546875
    3. ')' → logprob: -6.1307830810546875
    4. '(' → logprob: -13.255783081054688
    5. '")' → logprob: -13.755783081054688
    6. '['' → logprob: -14.505783081054688
    7. ')'' → logprob: -14.505783081054688
    8. ' ')' → logprob: -14.630783081054688
    9. ''' → logprob: -15.005783081054688
    10. ')')
' → logprob: -15.130783081054688

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003992104611825198
    2. 'return' → logprob: -8.375399589538574
    3. '       ' → logprob: -10.000399589538574
    4. '<|end|>' → logprob: -10.250399589538574
    5. ')' → logprob: -10.500399589538574
    6. ' return' → logprob: -11.125399589538574
    7. '	       ' → logprob: -11.500399589538574
    8. ',' → logprob: -11.875399589538574
    9. '		' → logprob: -12.125399589538574
    10. '
' → logprob: -12.125399589538574

Token 378: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11642646789550781
    2. '           ' → logprob: -2.366426467895508
    3. ' return' → logprob: -4.241426467895508
    4. '       ' → logprob: -6.491426467895508
    5. '   ' → logprob: -8.866426467895508
    6. '	return' → logprob: -10.241426467895508
    7. '		' → logprob: -13.241426467895508
    8. '               ' → logprob: -13.366426467895508
    9. ':return' → logprob: -13.741426467895508
    10. 'else' → logprob: -14.366426467895508

Token 379: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.005234832875430584
    2. ' node' → logprob: -5.255234718322754
    3. '(node' → logprob: -13.880234718322754
    4. '	node' → logprob: -17.25523567199707
    5. '[node' → logprob: -17.63023567199707
    6. '   ' → logprob: -18.25523567199707
    7. ' ' → logprob: -19.00523567199707
    8. '
' → logprob: -19.38023567199707
    9. 'token' → logprob: -19.63023567199707
    10. '=node' → logprob: -20.13023567199707

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043555660522542894
    2. '<|end|>' → logprob: -8.500435829162598
    3. '
' → logprob: -9.375435829162598
    4. '        
' → logprob: -10.125435829162598
    5. 'elif' → logprob: -10.125435829162598
    6. ')' → logprob: -10.375435829162598
    7. ',' → logprob: -11.375435829162598
    8. ' elif' → logprob: -12.500435829162598
    9. '        ' → logprob: -12.875435829162598
    10. '<|end|>' → logprob: -12.875435829162598

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012330879690125585
    2. '<|end|>' → logprob: -7.501233100891113
    3. '
' → logprob: -7.876233100891113
    4. '        
' → logprob: -8.876233100891113
    5. ')' → logprob: -10.251233100891113
    6. 'else' → logprob: -10.501233100891113
    7. 'elif' → logprob: -10.626233100891113
    8. ',' → logprob: -10.876233100891113
    9. '   ' → logprob: -12.001233100891113
    10. ' else' → logprob: -12.001233100891113

Token 382: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45513755083084106
    2. 'elif' (adapté à ' elif') → logprob: -1.2051374912261963
    3. 'if' → logprob: -2.8301374912261963
    4. 'token' → logprob: -5.455137729644775
    5. 'else' → logprob: -6.830137729644775
    6. '
' → logprob: -7.580137729644775
    7. '   ' → logprob: -7.955137729644775
    8. ' if' → logprob: -8.955137252807617
    9. ' elif' → logprob: -9.330137252807617
    10. 'num' → logprob: -9.330137252807617

Token 383: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002303957939148
    2. ' p' → logprob: -2.3502304553985596
    3. 'len' → logprob: -11.60023021697998
    4. '   ' → logprob: -12.22523021697998
    5. '(p' → logprob: -12.85023021697998
    6. ''p' → logprob: -13.85023021697998
    7. 'peek' → logprob: -14.22523021697998
    8. ' (' → logprob: -14.47523021697998
    9. '    ' → logprob: -14.60023021697998
    10. ' ' → logprob: -14.60023021697998

Token 384: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.5436103343963623
    2. '.consume' → logprob: -0.9186103343963623
    3. '[' → logprob: -4.918610572814941
    4. 'peek' → logprob: -5.293610572814941
    5. '.' → logprob: -5.793610572814941
    6. '('' → logprob: -6.418610572814941
    7. 'consume' → logprob: -6.543610572814941
    8. '.is' → logprob: -7.418610572814941
    9. ' ==' → logprob: -8.543610572814941
    10. '==' → logprob: -8.668610572814941

Token 385: '()' (ID: 416)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0532192699611187
    2. '==' → logprob: -4.053219318389893
    3. ' ==' → logprob: -4.053219318389893
    4. '(('' → logprob: -4.553219318389893
    5. '[' → logprob: -5.678219318389893
    6. 'and' → logprob: -7.178219318389893
    7. '(' → logprob: -7.178219318389893
    8. '=='' → logprob: -7.553219318389893
    9. ' ('' → logprob: -7.803219318389893
    10. ' and' → logprob: -7.803219318389893

Token 386: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1681445986032486
    2. ' ==' → logprob: -2.293144702911377
    3. '[' → logprob: -3.543144702911377
    4. '('' → logprob: -3.793144702911377
    5. 'and' → logprob: -7.293144702911377
    6. ' and' → logprob: -7.418144702911377
    7. ' ('' → logprob: -7.918144702911377
    8. '=='' → logprob: -7.918144702911377
    9. '(' → logprob: -8.668144226074219
    10. '(('' → logprob: -10.043144226074219

Token 387: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005236598663032055
    2. ' p' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.505236625671387
    4. ' ' → logprob: -15.130236625671387
    5. '  ' → logprob: -15.255236625671387
    6. '    ' → logprob: -15.380236625671387
    7. '     ' → logprob: -15.880236625671387
    8. '(p' → logprob: -15.880236625671387
    9. '       ' → logprob: -16.25523567199707
    10. 'tokens' → logprob: -16.50523567199707

Token 388: '.peek' (ID: 73296)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00040695868665352464
    2. 'peek' → logprob: -9.125407218933105
    3. '==' → logprob: -9.250407218933105
    4. '=='' → logprob: -10.125407218933105
    5. '.peek' → logprob: -10.250407218933105
    6. ' ==' → logprob: -10.375407218933105
    7. ' [' → logprob: -10.500407218933105
    8. '['' → logprob: -10.750407218933105
    9. '0' → logprob: -11.000407218933105
    10. '.' → logprob: -11.875407218933105

Token 389: '()[' (ID: 20778)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24569065868854523
    2. '(' → logprob: -2.1206905841827393
    3. '('' → logprob: -3.1206905841827393
    4. '()[' → logprob: -3.1206905841827393
    5. ' (' → logprob: -5.495690822601318
    6. '==' → logprob: -6.245690822601318
    7. '(('' → logprob: -6.995690822601318
    8. ' ('' → logprob: -7.245690822601318
    9. ' ==' → logprob: -7.745690822601318
    10. ' [' → logprob: -8.74569034576416

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.500043869018555
    3. ''' → logprob: -11.625043869018555
    4. '('' → logprob: -12.750043869018555
    5. '==' → logprob: -13.875043869018555
    6. '
' → logprob: -14.125043869018555
    7. '[' → logprob: -14.250043869018555
    8. '=='' → logprob: -14.250043869018555
    9. ' ==' → logprob: -15.250043869018555
    10. '(' → logprob: -15.375043869018555

Token 391: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20772632956504822
    2. ' ==' → logprob: -1.7077263593673706
    3. '=='' → logprob: -5.08272647857666
    4. ''' → logprob: -10.08272647857666
    5. '=' → logprob: -10.95772647857666
    6. ' =='' → logprob: -11.08272647857666
    7. ')' → logprob: -12.70772647857666
    8. ' '' → logprob: -13.20772647857666
    9. '===' → logprob: -13.20772647857666
    10. ']==' → logprob: -13.45772647857666

Token 392: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02479371428489685
    2. '=='' → logprob: -4.02479362487793
    3. ' ==' → logprob: -5.02479362487793
    4. ''' → logprob: -10.39979362487793
    5. '=' → logprob: -11.77479362487793
    6. '==
' → logprob: -12.52479362487793
    7. 'num' → logprob: -12.89979362487793
    8. '=="' → logprob: -13.02479362487793
    9. ' =='' → logprob: -13.77479362487793
    10. '===' → logprob: -15.39979362487793

Token 393: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.8889261304575484e-06
    2. '"' → logprob: -12.625003814697266
    3. 'num' → logprob: -15.250003814697266
    4. ' '' → logprob: -15.500003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '‘' → logprob: -18.750003814697266
    7. '`' → logprob: -18.875003814697266
    8. '
' → logprob: -19.125003814697266
    9. '('' → logprob: -19.125003814697266
    10. '  ' → logprob: -19.250003814697266

Token 394: 'num' (ID: 4571)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2519362270832062
    2. 'num' → logprob: -1.5019361972808838
    3. ' num' → logprob: -12.876935958862305
    4. '"' → logprob: -13.751935958862305
    5. '<num' → logprob: -13.876935958862305
    6. ''n' → logprob: -14.126935958862305
    7. '	num' → logprob: -14.876935958862305
    8. '$num' → logprob: -15.126935958862305
    9. ':num' → logprob: -15.376935958862305
    10. ',num' → logprob: -15.376935958862305

Token 395: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.036906786262989044
    2. '':' → logprob: -3.4119067192077637
    3. ''' → logprob: -5.911906719207764
    4. ''):
' → logprob: -8.036907196044922
    5. '':
' → logprob: -9.786907196044922
    6. ':
' → logprob: -9.911907196044922
    7. '':

' → logprob: -9.911907196044922
    8. '           ' → logprob: -10.786907196044922
    9. '):
' → logprob: -11.161907196044922
    10. '']:
' → logprob: -11.661907196044922

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00799447949975729
    2. ':
' → logprob: -5.132994651794434
    3. '       ' → logprob: -6.882994651794434
    4. ':' → logprob: -7.132994651794434
    5. 'return' → logprob: -9.382994651794434
    6. ',' → logprob: -9.882994651794434
    7. '	       ' → logprob: -10.632994651794434
    8. '):
' → logprob: -11.132994651794434
    9. ':return' → logprob: -11.632994651794434
    10. '		' → logprob: -11.757994651794434

Token 397: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.990753173828125
    2. 'num' → logprob: -0.990753173828125
    3. ' num' → logprob: -2.115753173828125
    4. ' val' → logprob: -3.240753173828125
    5. 'val' → logprob: -3.240753173828125
    6. 'token' → logprob: -3.990753173828125
    7. 'value' → logprob: -4.740753173828125
    8. 'n' → logprob: -4.740753173828125
    9. ' token' → logprob: -5.115753173828125
    10. ' n' → logprob: -5.365753173828125

Token 398: ' ('' (ID: 9906)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6780729293823242
    2. ' p' → logprob: -0.8030729293823242
    3. '('' → logprob: -3.428072929382324
    4. ' ('' → logprob: -4.553072929382324
    5. 'num' → logprob: -7.928072929382324
    6. '(' → logprob: -8.428072929382324
    7. ''p' → logprob: -9.053072929382324
    8. '           ' → logprob: -9.053072929382324
    9. 'parse' → logprob: -9.303072929382324
    10. ''' → logprob: -9.303072929382324

Token 399: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -6.511406809295295e-06
    2. ''' → logprob: -12.250006675720215
    3. ' num' → logprob: -14.625006675720215
    4. 'p' → logprob: -15.375006675720215
    5. 'number' → logprob: -15.375006675720215
    6. 'parse' → logprob: -16.2500057220459
    7. 'token' → logprob: -16.5000057220459
    8. '('' → logprob: -16.7500057220459
    9. '   ' → logprob: -17.0000057220459
    10. 'nums' → logprob: -17.0000057220459

Token 400: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00011927806917810813
    2. ',' → logprob: -9.75011920928955
    3. ''' → logprob: -10.12511920928955
    4. '',[' → logprob: -12.25011920928955
    5. '",' → logprob: -12.50011920928955
    6. '           ' → logprob: -13.12511920928955
    7. ' ',' → logprob: -13.50011920928955
    8. '','' → logprob: -13.50011920928955
    9. '',
' → logprob: -13.50011920928955
    10. ''),' → logprob: -13.75011920928955

Token 401: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17983366549015045
    2. ' p' → logprob: -1.8048336505889893
    3. ')' → logprob: -10.17983341217041
    4. ')p' → logprob: -10.67983341217041
    5. '   ' → logprob: -11.42983341217041
    6. '    ' → logprob: -12.42983341217041
    7. '           ' → logprob: -13.55483341217041
    8. ' ' → logprob: -13.55483341217041
    9. '  ' → logprob: -13.55483341217041
    10. ',' → logprob: -13.80483341217041

Token 402: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.000344044849043712
    2. '.' → logprob: -8.875344276428223
    3. '.tokens' → logprob: -8.875344276428223
    4. '.peek' → logprob: -10.250344276428223
    5. 'consume' → logprob: -11.000344276428223
    6. 'tokens' → logprob: -12.250344276428223
    7. ' .' → logprob: -12.875344276428223
    8. '   ' → logprob: -13.500344276428223
    9. ').' → logprob: -13.500344276428223
    10. '.cons' → logprob: -14.000344276428223

Token 403: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07905591279268265
    2. '()[' → logprob: -2.8290560245513916
    3. ''' → logprob: -4.4540557861328125
    4. '()' → logprob: -5.8290557861328125
    5. '()['' → logprob: -6.7040557861328125
    6. ''s' → logprob: -8.329055786132812
    7. '())[' → logprob: -8.579055786132812
    8. '())' → logprob: -8.954055786132812
    9. ')' → logprob: -8.954055786132812
    10. '(' → logprob: -9.829055786132812

Token 404: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01271635852754116
    2. ''' → logprob: -4.387716293334961
    3. '')' → logprob: -9.137716293334961
    4. ')' → logprob: -10.262716293334961
    5. '('' → logprob: -10.512716293334961
    6. ' num' → logprob: -11.512716293334961
    7. ''n' → logprob: -12.137716293334961
    8. ')'' → logprob: -12.762716293334961
    9. '<num' → logprob: -13.262716293334961
    10. '	num' → logprob: -13.512716293334961

Token 405: '')[' (ID: 28534)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.013660700991749763
    2. '())[' → logprob: -4.388660907745361
    3. '')[' → logprob: -7.388660907745361
    4. ')' → logprob: -7.888660907745361
    5. ' )[' → logprob: -10.013660430908203
    6. '))[' → logprob: -10.513660430908203
    7. '   ' → logprob: -10.763660430908203
    8. '()[' → logprob: -10.888660430908203
    9. '")[' → logprob: -11.388660430908203
    10. '()' → logprob: -11.638660430908203

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.375
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -19.25
    5. ' ' → logprob: -19.25
    6. ')' → logprob: -19.375
    7. '-' → logprob: -19.625
    8. '' → logprob: -20.0
    9. '[' → logprob: -20.25
    10. '

' → logprob: -20.5

Token 407: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')
' → logprob: -11.500024795532227
    3. ' )' → logprob: -11.500024795532227
    4. '())' → logprob: -13.750024795532227
    5. '))' → logprob: -14.125024795532227
    6. ')return' → logprob: -14.250024795532227
    7. '   ' → logprob: -14.375024795532227
    8. '       ' → logprob: -14.500024795532227
    9. '')' → logprob: -16.000024795532227
    10. '),' → logprob: -16.000024795532227

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.266944157890975e-05
    2. '<|end|>' → logprob: -10.750072479248047
    3. ')' → logprob: -11.000072479248047
    4. '	' → logprob: -12.000072479248047
    5. 'else' → logprob: -12.125072479248047
    6. ',' → logprob: -12.500072479248047
    7. '        
' → logprob: -12.750072479248047
    8. '           ' → logprob: -12.750072479248047
    9. '   ' → logprob: -12.750072479248047
    10. '
' → logprob: -13.000072479248047

Token 409: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025086142122745514
    2. '   ' → logprob: -4.400085926055908
    3. 'else' (adapté à ' else') → logprob: -5.275085926055908
    4. ' else' → logprob: -5.525085926055908
    5. '
' → logprob: -6.025085926055908
    6. 'elif' → logprob: -7.650085926055908
    7. '        
' → logprob: -8.650086402893066
    8. ' elif' → logprob: -9.025086402893066
    9. '    
' → logprob: -9.275086402893066
    10. '           ' → logprob: -10.150086402893066

Token 410: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12796853482723236
    2. '       ' → logprob: -2.1279685497283936
    3. ':' → logprob: -8.377968788146973
    4. '   ' → logprob: -8.627968788146973
    5. ':
' → logprob: -8.627968788146973
    6. ',' → logprob: -9.127968788146973
    7. ' return' → logprob: -9.252968788146973
    8. '          ' → logprob: -10.377968788146973
    9. 'return' → logprob: -10.377968788146973
    10. ' raise' → logprob: -10.877968788146973

Token 411: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18543623387813568
    2. '           ' → logprob: -2.310436248779297
    3. 'return' → logprob: -3.060436248779297
    4. 'raise' → logprob: -4.185436248779297
    5. '   ' → logprob: -5.685436248779297
    6. 'p' → logprob: -6.060436248779297
    7. ' raise' → logprob: -6.685436248779297
    8. ' return' → logprob: -7.060436248779297
    9. ' p' → logprob: -9.685436248779297
    10. '#' → logprob: -10.935436248779297

Token 412: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27817556262016296
    2. 'raise' → logprob: -1.9031755924224854
    3. '           ' → logprob: -3.2781755924224854
    4. ' return' → logprob: -3.4031755924224854
    5. ' raise' → logprob: -4.278175354003906
    6. 'None' → logprob: -5.153175354003906
    7. '       ' → logprob: -6.778175354003906
    8. ' None' → logprob: -6.903175354003906
    9. '   ' → logprob: -7.278175354003906
    10. 'p' → logprob: -8.403175354003906

Token 413: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5632425546646118
    2. 'None' → logprob: -0.9382425546646118
    3. 'raise' → logprob: -3.9382424354553223
    4. ' return' → logprob: -4.938242435455322
    5. ' None' → logprob: -5.313242435455322
    6. 'p' → logprob: -5.813242435455322
    7. '#' → logprob: -6.438242435455322
    8. 'token' → logprob: -6.688242435455322
    9. '   ' → logprob: -6.938242435455322
    10. ' raise' → logprob: -7.563242435455322

Token 414: ' left' (ID: 3561)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -1.1196494102478027
    2. 'None' → logprob: -1.1196494102478027
    3. 'e' → logprob: -1.2446494102478027
    4. ' None' → logprob: -3.7446494102478027
    5. '('' → logprob: -4.369649410247803
    6. '(None' → logprob: -4.744649410247803
    7. 'expr' → logprob: -5.994649410247803
    8. 'p' → logprob: -5.994649410247803
    9. '('_' → logprob: -6.369649410247803
    10. '   ' → logprob: -6.369649410247803

Token 415: ' op' (ID: 991)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9130988717079163
    2. '=' → logprob: -1.6630988121032715
    3. ')' → logprob: -2.1630988121032715
    4. 'paren' → logprob: -2.6630988121032715
    5. 'node' → logprob: -3.4130988121032715
    6. 'op' → logprob: -3.5380988121032715
    7. '('' → logprob: -3.7880988121032715
    8. '_expr' → logprob: -4.2880988121032715
    9. 'par' → logprob: -4.5380988121032715
    10. '(' → logprob: -4.5380988121032715

Token 416: ' right' (ID: 1849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8509332537651062
    2. '           ' → logprob: -1.600933313369751
    3. '()' → logprob: -3.100933313369751
    4. '...' → logprob: -3.225933313369751
    5. ')' → logprob: -3.350933313369751
    6. '=' → logprob: -3.350933313369751
    7. ' =' → logprob: -3.725933313369751
    8. 'expr' → logprob: -3.725933313369751
    9. ',' → logprob: -3.850933313369751
    10. 'def' → logprob: -3.850933313369751

Token 417: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059888698160648346
    2. '           ' → logprob: -3.4348886013031006
    3. '<|end|>' → logprob: -4.93488883972168
    4. '   ' → logprob: -6.05988883972168
    5. '<|end|>' → logprob: -6.05988883972168
    6. '
' → logprob: -6.43488883972168
    7. '(' → logprob: -6.55988883972168
    8. 'def' → logprob: -6.80988883972168
    9. '(None' → logprob: -6.80988883972168
    10. '        ' → logprob: -6.93488883972168

Token 418: ' but' (ID: 889)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.126764714717865
    2. ' left' → logprob: -3.2517647743225098
    3. '       ' → logprob: -3.3767647743225098
    4. '           ' → logprob: -3.8767647743225098
    5. 'op' → logprob: -4.62676477432251
    6. 'l' → logprob: -5.00176477432251
    7. ' op' → logprob: -6.37676477432251
    8. 'lhs' → logprob: -6.37676477432251
    9. '   ' → logprob: -6.50176477432251
    10. '#' → logprob: -6.87676477432251

Token 419: ' expr' (ID: 30206)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6730659008026123
    2. '           ' → logprob: -2.0480659008026123
    3. ' left' → logprob: -2.1730659008026123
    4. '#' → logprob: -2.4230659008026123
    5. 'None' → logprob: -2.9230659008026123
    6. 'op' → logprob: -3.7980659008026123
    7. ' op' → logprob: -4.423066139221191
    8. ' None' → logprob: -4.548066139221191
    9. 'return' → logprob: -4.673066139221191
    10. '       ' → logprob: -4.798066139221191

Token 420: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9004603624343872
    2. '()' → logprob: -1.0254603624343872
    3. '()
' → logprob: -2.9004602432250977
    4. '=' → logprob: -3.0254602432250977
    5. 'def' → logprob: -3.0254602432250977
    6. '       ' → logprob: -3.2754602432250977
    7. '   ' → logprob: -5.025460243225098
    8. ':' → logprob: -5.275460243225098
    9. '=None' → logprob: -5.275460243225098
    10. '           ' → logprob: -5.400460243225098

Token 421: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0681777074933052
    2. 'be' → logprob: -3.1931777000427246
    3. ' not' → logprob: -4.943177700042725
    4. ' return' → logprob: -5.568177700042725
    5. 'return' → logprob: -6.568177700042725
    6. ' continue' → logprob: -6.693177700042725
    7. 'not' → logprob: -6.693177700042725
    8. ' only' → logprob: -6.818177700042725
    9. 'continue' → logprob: -6.818177700042725
    10. 'n't' → logprob: -7.068177700042725

Token 422: ' just' (ID: 1327)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2117730975151062
    2. 'parse' → logprob: -2.461773157119751
    3. '('' → logprob: -2.961773157119751
    4. 'expr' → logprob: -3.961773157119751
    5. '(None' → logprob: -4.086772918701172
    6. ' None' → logprob: -4.586772918701172
    7. '   ' → logprob: -6.086772918701172
    8. ''' → logprob: -7.086772918701172
    9. 'def' → logprob: -7.211772918701172
    10. '(' → logprob: -7.461772918701172

Token 423: ' num' (ID: 2269)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.08566836267709732
    2. '('' → logprob: -3.0856683254241943
    3. ' None' → logprob: -4.460668563842773
    4. 'parse' → logprob: -4.835668563842773
    5. 'expr' → logprob: -5.085668563842773
    6. ''' → logprob: -5.460668563842773
    7. 'p' → logprob: -6.210668563842773
    8. '(None' → logprob: -6.960668563842773
    9. 'num' → logprob: -7.085668563842773
    10. ''p' → logprob: -7.585668563842773

Token 424: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09008753299713135
    2. '           ' → logprob: -3.465087413787842
    3. '<|end|>' → logprob: -3.965087413787842
    4. 'None' → logprob: -4.215087413787842
    5. ' None' → logprob: -5.090087413787842
    6. '(None' → logprob: -5.215087413787842
    7. '   ' → logprob: -5.590087413787842
    8. 'return' → logprob: -6.340087413787842
    9. ' return' → logprob: -7.215087413787842
    10. ')' → logprob: -7.340087413787842

Token 425: ' par' (ID: 686)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.037728261202573776
    2. 'paren' → logprob: -3.7877283096313477
    3. ''' → logprob: -4.287728309631348
    4. 'par' → logprob: -8.287728309631348
    5. '(' → logprob: -9.162728309631348
    6. 'parent' → logprob: -9.287728309631348
    7. 'expr' → logprob: -10.287728309631348
    8. '(paren' → logprob: -10.537728309631348
    9. '(None' → logprob: -10.787728309631348
    10. ' '('' → logprob: -11.162728309631348

Token 426: 'ens' (ID: 696)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.3147323727607727
    2. 'se' → logprob: -1.689732313156128
    3. 'ent' → logprob: -3.064732313156128
    4. 'ens' → logprob: -4.689732551574707
    5. 't' → logprob: -4.814732551574707
    6. 'e' → logprob: -5.314732551574707
    7. 'def' → logprob: -5.439732551574707
    8. 'ser' → logprob: -5.939732551574707
    9. '```' → logprob: -6.064732551574707
    10. '('' → logprob: -6.439732551574707

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006148365326225758
    2. '           ' → logprob: -6.131148338317871
    3. '<|end|>' → logprob: -6.381148338317871
    4. '        
' → logprob: -7.631148338317871
    5. '   ' → logprob: -7.756148338317871
    6. '
' → logprob: -8.006148338317871
    7. ',' → logprob: -8.381148338317871
    8. ')' → logprob: -8.506148338317871
    9. '<|end|>' → logprob: -8.756148338317871
    10. 'return' → logprob: -9.131148338317871

Token 428: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022046497091650963
    2. '           ' → logprob: -3.8970465660095215
    3. '   ' → logprob: -6.6470465660095215
    4. '        
' → logprob: -9.647046089172363
    5. '<|end|>' → logprob: -11.147046089172363
    6. '
' → logprob: -11.272046089172363
    7. '    
' → logprob: -11.397046089172363
    8. 'raise' → logprob: -11.647046089172363
    9. 'token' → logprob: -11.897046089172363
    10. 'return' → logprob: -12.022046089172363

Token 429: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5510470867156982
    2. 'left' → logprob: -1.9260470867156982
    3. 'return' → logprob: -1.9260470867156982
    4. 'tok' → logprob: -2.9260470867156982
    5. 'token' → logprob: -2.9260470867156982
    6. 'raise' → logprob: -5.426047325134277
    7. 'cur' → logprob: -5.426047325134277
    8. 't' → logprob: -5.676047325134277
    9. 'c' → logprob: -6.051047325134277
    10. 'None' → logprob: -6.176047325134277

Token 430: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5025272965431213
    2. 'op' → logprob: -1.3775272369384766
    3. 'tok' → logprob: -2.7525272369384766
    4. 'token' → logprob: -3.5025272369384766
    5. 'left' → logprob: -4.002527236938477
    6. '#' → logprob: -5.002527236938477
    7. 'raise' → logprob: -5.377527236938477
    8. ' return' → logprob: -5.627527236938477
    9. '   ' → logprob: -5.877527236938477
    10. 't' → logprob: -6.252527236938477

Token 431: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1430737972259521
    2. '       ' → logprob: -2.268073797225952
    3. ' return' → logprob: -2.393073797225952
    4. ' can' → logprob: -2.643073797225952
    5. ' need' → logprob: -2.643073797225952
    6. ' might' → logprob: -2.768073797225952
    7. '   ' → logprob: -2.768073797225952
    8. 'return' → logprob: -2.893073797225952
    9. '#' → logprob: -3.643073797225952
    10. ' may' → logprob: -3.893073797225952

Token 432: ' starting' (ID: 8601)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3766236305236816
    2. 'parse' → logprob: -1.5016236305236816
    3. 'left' → logprob: -2.1266236305236816
    4. '_e' → logprob: -2.5016236305236816
    5. 'p' → logprob: -2.6266236305236816
    6. 'expr' → logprob: -2.7516236305236816
    7. 'None' → logprob: -2.8766236305236816
    8. '   ' → logprob: -3.3766236305236816
    9. ' None' → logprob: -3.5016236305236816
    10. ' p' → logprob: -4.251623630523682

Token 433: ' with' (ID: 483)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.801432728767395
    2. ' from' → logprob: -1.551432728767395
    3. ' with' → logprob: -2.3014326095581055
    4. 'with' → logprob: -2.6764326095581055
    5. 'def' → logprob: -3.3014326095581055
    6. '('' → logprob: -3.6764326095581055
    7. '       ' → logprob: -4.1764326095581055
    8. '   ' → logprob: -4.3014326095581055
    9. ' =' → logprob: -4.4264326095581055
    10. 'e' → logprob: -4.4264326095581055

Token 434: ' num' (ID: 2269)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8794099688529968
    2. 'p' → logprob: -1.3794100284576416
    3. 'parse' → logprob: -1.3794100284576416
    4. 'expr' → logprob: -3.3794100284576416
    5. '('' → logprob: -3.8794100284576416
    6. 'e' → logprob: -4.7544097900390625
    7. '(None' → logprob: -5.1294097900390625
    8. 'left' → logprob: -5.7544097900390625
    9. 'num' → logprob: -5.7544097900390625
    10. 'tokens' → logprob: -6.8794097900390625

Token 435: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34991970658302307
    2. ' or' → logprob: -1.8499196767807007
    3. '<|end|>' → logprob: -2.4749197959899902
    4. ',' → logprob: -4.84991979598999
    5. ')' → logprob: -4.97491979598999
    6. '   ' → logprob: -5.09991979598999
    7. '<|end|>' → logprob: -5.22491979598999
    8. ' and' → logprob: -5.34991979598999
    9. '
' → logprob: -5.59991979598999
    10. '(None' → logprob: -5.97491979598999

Token 436: ' par' (ID: 686)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.31633082032203674
    2. ''' → logprob: -1.3163307905197144
    3. '(' → logprob: -6.316330909729004
    4. 'p' → logprob: -7.441330909729004
    5. 'paren' → logprob: -8.191330909729004
    6. 'par' → logprob: -8.816330909729004
    7. ' '('' → logprob: -9.316330909729004
    8. ''p' → logprob: -9.316330909729004
    9. '(
' → logprob: -10.941330909729004
    10. '("("' → logprob: -11.691330909729004

Token 437: 'ens' (ID: 696)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11096761375665665
    2. 'en' → logprob: -3.1109676361083984
    3. 'ens' → logprob: -3.3609676361083984
    4. 'def' → logprob: -4.360967636108398
    5. '(' → logprob: -5.735967636108398
    6. '')' → logprob: -6.485967636108398
    7. ')' → logprob: -6.985967636108398
    8. '(('' → logprob: -7.110967636108398
    9. ' ('' → logprob: -7.235967636108398
    10. '```' → logprob: -7.485967636108398

Token 438: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7097659707069397
    2. '<|end|>' → logprob: -0.7097659707069397
    3. '<|end|>' → logprob: -4.959765911102295
    4. ')' → logprob: -5.584765911102295
    5. '   ' → logprob: -6.084765911102295
    6. '
' → logprob: -6.959765911102295
    7. ',' → logprob: -7.459765911102295
    8. '        
' → logprob: -7.834765911102295
    9. ' ' → logprob: -8.459766387939453
    10. '           ' → logprob: -8.959766387939453

Token 439: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7088174819946289
    2. '           ' → logprob: -0.8338174819946289
    3. ' None' → logprob: -4.208817481994629
    4. 'None' → logprob: -4.208817481994629
    5. 'return' → logprob: -4.583817481994629
    6. ' return' → logprob: -4.833817481994629
    7. ' op' → logprob: -5.458817481994629
    8. '   ' → logprob: -5.708817481994629
    9. 'op' → logprob: -6.208817481994629
    10. ' while' → logprob: -6.458817481994629

Token 440: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.18504610657691956
    2. 'op' → logprob: -2.4350461959838867
    3. '           ' → logprob: -3.6850461959838867
    4. ' while' → logprob: -3.6850461959838867
    5. '       ' → logprob: -4.685046195983887
    6. 'while' → logprob: -5.310046195983887
    7. ' left' → logprob: -5.935046195983887
    8. ' if' → logprob: -6.310046195983887
    9. '   ' → logprob: -6.435046195983887
    10. ' return' → logprob: -6.435046195983887

Token 441: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42881616950035095
    2. '           ' → logprob: -1.1788161993026733
    3. 'def' → logprob: -4.178816318511963
    4. '   ' → logprob: -4.803816318511963
    5. ',' → logprob: -5.053816318511963
    6. '()' → logprob: -5.428816318511963
    7. ' (' → logprob: -6.303816318511963
    8. ' =' → logprob: -7.553816318511963
    9. 's' → logprob: -7.803816318511963
    10. '()
' → logprob: -7.928816318511963

Token 442: ' then' (ID: 1815)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36935463547706604
    2. '       ' → logprob: -2.119354724884033
    3. ' then' → logprob: -3.369354724884033
    4. ' None' → logprob: -3.744354724884033
    5. ' left' → logprob: -3.869354724884033
    6. '            ' → logprob: -3.869354724884033
    7. '    ' → logprob: -4.619354724884033
    8. ' parse' → logprob: -4.619354724884033
    9. ' return' → logprob: -4.744354724884033
    10. ' and' → logprob: -4.744354724884033

Token 443: ' next' (ID: 2613)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.7986393570899963
    2. 'parse' → logprob: -1.0486392974853516
    3. 'expr' → logprob: -2.1736392974853516
    4. ' expr' → logprob: -3.5486392974853516
    5. '           ' → logprob: -3.6736392974853516
    6. ' right' → logprob: -5.298639297485352
    7. ' p' → logprob: -5.798639297485352
    8. ' factor' → logprob: -6.048639297485352
    9. 'right' → logprob: -6.048639297485352
    10. '(parse' → logprob: -6.173639297485352

Token 444: ' expr' (ID: 30206)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -1.2747310400009155
    2. '_expr' → logprob: -2.024731159210205
    3. '()' → logprob: -2.399731159210205
    4. 'node' → logprob: -2.649731159210205
    5. 'expr' → logprob: -2.899731159210205
    6. 'e' → logprob: -3.024731159210205
    7. '       ' → logprob: -3.024731159210205
    8. '           ' → logprob: -3.274731159210205
    9. ' =' → logprob: -3.399731159210205
    10. 'def' → logprob: -3.524731159210205

Token 445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018056167289614677
    2. '   ' → logprob: -4.893056392669678
    3. '<|end|>' → logprob: -5.268056392669678
    4. '           ' → logprob: -5.768056392669678
    5. '<|end|>' → logprob: -7.143056392669678
    6. ')' → logprob: -8.26805591583252
    7. '
' → logprob: -8.26805591583252
    8. ',' → logprob: -8.64305591583252
    9. '        
' → logprob: -8.89305591583252
    10. ' ' → logprob: -9.89305591583252

Token 446: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014532258734107018
    2. '           ' → logprob: -4.514532089233398
    3. 'token' → logprob: -6.639532089233398
    4. '   ' → logprob: -7.139532089233398
    5. 'op' → logprob: -7.889532089233398
    6. '        
' → logprob: -8.139532089233398
    7. '
' → logprob: -9.014532089233398
    8. ' op' → logprob: -9.139532089233398
    9. ' token' → logprob: -9.639532089233398
    10. 'left' → logprob: -10.264532089233398

Token 447: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5205579996109009
    2. '       ' → logprob: -1.8955579996109009
    3. 'left' (adapté à ' left') → logprob: -2.2705578804016113
    4. ' lhs' → logprob: -3.1455578804016113
    5. ' cur' → logprob: -4.145557880401611
    6. 'cur' → logprob: -4.270557880401611
    7. '           ' → logprob: -4.770557880401611
    8. ' if' → logprob: -4.770557880401611
    9. ' token' → logprob: -4.770557880401611
    10. ' c' → logprob: -4.770557880401611

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287339746952057
    2. '=' → logprob: -1.0537339448928833
    3. ')' → logprob: -11.178733825683594
    4. 'token' → logprob: -12.178733825683594
    5. '   ' → logprob: -12.428733825683594
    6. 'tokens' → logprob: -12.553733825683594
    7. ',' → logprob: -13.928733825683594
    8. '       ' → logprob: -14.178733825683594
    9. ' ' → logprob: -14.178733825683594
    10. '           ' → logprob: -14.428733825683594

Token 449: ' None' (ID: 4662)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.1448579579591751
    2. 'expr' → logprob: -2.144857883453369
    3. 'p' → logprob: -4.144857883453369
    4. 'None' → logprob: -6.644857883453369
    5. ' parse' → logprob: -8.269858360290527
    6. '   ' → logprob: -9.644858360290527
    7. '(parse' → logprob: -9.769858360290527
    8. ' expr' → logprob: -10.269858360290527
    9. '('' → logprob: -10.394858360290527
    10. '(None' → logprob: -10.644858360290527

Token 450: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07592636346817017
    2. '           ' → logprob: -2.7009263038635254
    3. '   ' → logprob: -6.075926303863525
    4. '
' → logprob: -6.450926303863525
    5. ' =' → logprob: -8.075926780700684
    6. ' if' → logprob: -8.325926780700684
    7. ' while' → logprob: -8.450926780700684
    8. ',' → logprob: -8.450926780700684
    9. 'token' → logprob: -8.700926780700684
    10. '        
' → logprob: -8.825926780700684

Token 451: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00678996741771698
    2. '           ' → logprob: -5.6317901611328125
    3. ' if' → logprob: -6.8817901611328125
    4. '   ' → logprob: -7.0067901611328125
    5. ' while' → logprob: -8.381790161132812
    6. '
' → logprob: -8.756790161132812
    7. '        
' → logprob: -8.756790161132812
    8. 'token' → logprob: -8.756790161132812
    9. ' token' → logprob: -9.381790161132812
    10. ',' → logprob: -10.006790161132812

Token 452: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0721473693847656
    2. 'c' → logprob: -1.6971473693847656
    3. 'return' → logprob: -1.8221473693847656
    4. 'token' → logprob: -2.3221473693847656
    5. 'p' → logprob: -2.9471473693847656
    6. 'None' → logprob: -3.3221473693847656
    7. 'cur' → logprob: -3.3221473693847656
    8. 'op' → logprob: -3.6971473693847656
    9. 'tok' → logprob: -3.6971473693847656
    10. 'while' → logprob: -4.447147369384766

Token 453: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010573413455858827
    2. ' p' → logprob: -6.876057147979736
    3. '   ' → logprob: -11.751057624816895
    4. '(p' → logprob: -11.751057624816895
    5. '           ' → logprob: -13.251057624816895
    6. '(' → logprob: -13.626057624816895
    7. '       ' → logprob: -14.126057624816895
    8. 'not' → logprob: -14.126057624816895
    9. 'tokens' → logprob: -14.376057624816895
    10. 'left' → logprob: -14.876057624816895

Token 454: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.04567059874534607
    2. '.consume' → logprob: -3.170670509338379
    3. 'peek' → logprob: -6.920670509338379
    4. '.' → logprob: -7.170670509338379
    5. '.pos' → logprob: -7.545670509338379
    6. '   ' → logprob: -9.420670509338379
    7. 'pos' → logprob: -10.045670509338379
    8. ' .' → logprob: -10.295670509338379
    9. 'consume' → logprob: -10.295670509338379
    10. '.pe' → logprob: -10.545670509338379

Token 455: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1173277497291565
    2. ' and' → logprob: -3.3673276901245117
    3. 'and' → logprob: -3.4923276901245117
    4. '()[' → logprob: -4.117327690124512
    5. '():' → logprob: -4.617327690124512
    6. '():
' → logprob: -4.742327690124512
    7. '()==' → logprob: -5.117327690124512
    8. '('' → logprob: -6.492327690124512
    9. '()!=' → logprob: -6.992327690124512
    10. '()['' → logprob: -7.492327690124512

Token 456: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3773365318775177
    2. 'and' → logprob: -2.0023365020751953
    3. ' is' → logprob: -2.6273365020751953
    4. ':' → logprob: -2.8773365020751953
    5. ':
' → logprob: -4.002336502075195
    6. '():' → logprob: -5.127336502075195
    7. '():
' → logprob: -5.127336502075195
    8. '()' → logprob: -5.127336502075195
    9. 'is' → logprob: -5.502336502075195
    10. '==' → logprob: -6.252336502075195

Token 457: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001748246024362743
    2. '(p' → logprob: -6.626748085021973
    3. ' p' → logprob: -8.001748085021973
    4. '(' → logprob: -9.751748085021973
    5. '('' → logprob: -11.376748085021973
    6. ' (' → logprob: -11.501748085021973
    7. '((' → logprob: -12.876748085021973
    8. '   ' → logprob: -14.126748085021973
    9. 'left' → logprob: -14.251748085021973
    10. '(('' → logprob: -14.251748085021973

Token 458: '.peek' (ID: 73296)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7932208776473999
    2. 'peek' → logprob: -0.7932208776473999
    3. '('' → logprob: -2.5432209968566895
    4. '.peek' → logprob: -4.6682209968566895
    5. '(' → logprob: -5.7932209968566895
    6. '()[' → logprob: -6.9182209968566895
    7. '0' → logprob: -7.1682209968566895
    8. '['' → logprob: -7.5432209968566895
    9. ' peek' → logprob: -8.293220520019531
    10. '(('' → logprob: -8.543220520019531

Token 459: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.43633946776390076
    2. '[' → logprob: -1.4363394975662231
    3. '()' → logprob: -3.0613393783569336
    4. 'and' → logprob: -3.8113393783569336
    5. '()!=' → logprob: -3.9363393783569336
    6. ' and' → logprob: -5.311339378356934
    7. ':' → logprob: -5.436339378356934
    8. '!=' → logprob: -6.061339378356934
    9. '():' → logprob: -6.186339378356934
    10. ' is' → logprob: -6.186339378356934

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02893657796084881
    2. '('' → logprob: -3.6539366245269775
    3. '[' → logprob: -6.278936386108398
    4. '(' → logprob: -7.403936386108398
    5. ''' → logprob: -9.903936386108398
    6. ' ('' → logprob: -10.903936386108398
    7. ''s' → logprob: -11.403936386108398
    8. 'num' → logprob: -11.528936386108398
    9. '()[' → logprob: -11.903936386108398
    10. ' ' → logprob: -12.028936386108398

Token 461: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22966626286506653
    2. ' ==' → logprob: -1.6046662330627441
    3. '=='' → logprob: -5.604666233062744
    4. ' in' → logprob: -7.979666233062744
    5. ')' → logprob: -9.729666709899902
    6. 'in' → logprob: -10.104666709899902
    7. ''' → logprob: -10.104666709899902
    8. '=' → logprob: -10.979666709899902
    9. ' =='' → logprob: -11.479666709899902
    10. ']==' → logprob: -11.729666709899902

Token 462: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2128581404685974
    2. 'in' → logprob: -2.462858200073242
    3. '=='' → logprob: -3.087858200073242
    4. ' in' → logprob: -3.462858200073242
    5. ' ==' → logprob: -3.587858200073242
    6. 'num' → logprob: -7.462858200073242
    7. '('' → logprob: -8.337858200073242
    8. '!=' → logprob: -8.462858200073242
    9. ''' → logprob: -8.587858200073242
    10. 'In' → logprob: -8.962858200073242

Token 463: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001843485952122137
    2. 'num' → logprob: -9.375184059143066
    3. '('' → logprob: -10.500184059143066
    4. '')' → logprob: -11.250184059143066
    5. ' '' → logprob: -11.500184059143066
    6. ''+' → logprob: -11.500184059143066
    7. ''op' → logprob: -12.000184059143066
    8. ' '('' → logprob: -12.125184059143066
    9. ''un' → logprob: -12.375184059143066
    10. '"' → logprob: -12.625184059143066

Token 464: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.34885746240615845
    2. ''' → logprob: -1.2238574028015137
    3. '('' → logprob: -8.598857879638672
    4. '')' → logprob: -10.223857879638672
    5. '(num' → logprob: -10.223857879638672
    6. ''n' → logprob: -10.348857879638672
    7. ')' → logprob: -10.723857879638672
    8. '(' → logprob: -11.223857879638672
    9. ''op' → logprob: -11.348857879638672
    10. ' num' → logprob: -11.723857879638672

Token 465: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5400962233543396
    2. '):
' → logprob: -1.6650962829589844
    3. ':' → logprob: -2.0400962829589844
    4. ''):
' → logprob: -3.7900962829589844
    5. '':
' → logprob: -3.9150962829589844
    6. '           ' → logprob: -4.040096282958984
    7. '               ' → logprob: -4.415096282958984
    8. '):' → logprob: -4.415096282958984
    9. '':' → logprob: -5.165096282958984
    10. ' or' → logprob: -5.665096282958984

Token 466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03525282442569733
    2. '           ' → logprob: -3.785252809524536
    3. ':' → logprob: -5.160253047943115
    4. ':
' → logprob: -5.660253047943115
    5. ')' → logprob: -7.285253047943115
    6. '):
' → logprob: -7.535253047943115
    7. '):' → logprob: -7.910253047943115
    8. ',' → logprob: -8.285252571105957
    9. '       ' → logprob: -8.535252571105957
    10. '<|end|>' → logprob: -8.535252571105957

Token 467: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.03784880042076111
    2. ' left' → logprob: -3.537848711013794
    3. 'return' → logprob: -5.787848949432373
    4. '           ' → logprob: -6.162848949432373
    5. 'token' → logprob: -6.787848949432373
    6. 'tok' → logprob: -7.787848949432373
    7. '('' → logprob: -8.037848472595215
    8. 'num' → logprob: -8.412848472595215
    9. 'cur' → logprob: -9.162848472595215
    10. '       ' → logprob: -9.537848472595215

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2294265180826187
    2. ' =' → logprob: -1.6044265031814575
    3. ',' → logprob: -6.354426383972168
    4. ')' → logprob: -6.604426383972168
    5. '           ' → logprob: -8.104426383972168
    6. '               ' → logprob: -8.354426383972168
    7. '=
' → logprob: -9.854426383972168
    8. 'p' → logprob: -9.979426383972168
    9. ')=' → logprob: -10.354426383972168
    10. 'token' → logprob: -10.354426383972168

Token 469: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006911441218107939
    2. 'p' → logprob: -5.631911277770996
    3. ' ('' → logprob: -6.131911277770996
    4. ''' → logprob: -7.381911277770996
    5. ' p' → logprob: -8.256911277770996
    6. ''p' → logprob: -9.006911277770996
    7. 'num' → logprob: -10.506911277770996
    8. '   ' → logprob: -10.506911277770996
    9. 'parse' → logprob: -11.256911277770996
    10. ''s' → logprob: -11.381911277770996

Token 470: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0021946365013718605
    2. ''' → logprob: -6.127194404602051
    3. ''n' → logprob: -11.87719440460205
    4. ' num' → logprob: -13.75219440460205
    5. '('' → logprob: -15.00219440460205
    6. '	num' → logprob: -15.75219440460205
    7. ',num' → logprob: -15.75219440460205
    8. '')' → logprob: -16.127195358276367
    9. ')' → logprob: -16.502195358276367
    10. ''op' → logprob: -16.627195358276367

Token 471: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0002545448951423168
    2. ',' → logprob: -8.37525463104248
    3. ''' → logprob: -11.12525463104248
    4. '",' → logprob: -13.12525463104248
    5. '',(' → logprob: -13.12525463104248
    6. '','' → logprob: -13.25025463104248
    7. ' ',' → logprob: -13.37525463104248
    8. ''s' → logprob: -15.37525463104248
    9. '',
' → logprob: -15.62525463104248
    10. ',p' → logprob: -15.75025463104248

Token 472: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28120100498199463
    2. ' p' → logprob: -1.4062010049819946
    3. ')' → logprob: -10.781201362609863
    4. ')p' → logprob: -11.406201362609863
    5. 'tokens' → logprob: -12.156201362609863
    6. '           ' → logprob: -13.031201362609863
    7. '            ' → logprob: -13.406201362609863
    8. ',' → logprob: -13.656201362609863
    9. 's' → logprob: -13.781201362609863
    10. '0' → logprob: -13.906201362609863

Token 473: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.3200010359287262
    2. 'consume' → logprob: -1.3200010061264038
    3. ' consume' → logprob: -5.195001125335693
    4. '.' → logprob: -7.695001125335693
    5. ')' → logprob: -8.320000648498535
    6. ' .' → logprob: -8.820000648498535
    7. ',' → logprob: -9.070000648498535
    8. ').' → logprob: -10.320000648498535
    9. '[' → logprob: -10.695000648498535
    10. '```' → logprob: -11.195000648498535

Token 474: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.12727811932563782
    2. ''' → logprob: -2.1272780895233154
    3. ' ('' → logprob: -9.252278327941895
    4. '(' → logprob: -9.502278327941895
    5. 'num' → logprob: -10.002278327941895
    6. ')' → logprob: -10.752278327941895
    7. ' '' → logprob: -10.752278327941895
    8. '(num' → logprob: -10.877278327941895
    9. ''s' → logprob: -11.377278327941895
    10. ''t' → logprob: -11.752278327941895

Token 475: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014164566993713379
    2. ''' → logprob: -4.264164447784424
    3. ''n' → logprob: -14.139164924621582
    4. ' num' → logprob: -15.389164924621582
    5. '`' → logprob: -16.764163970947266
    6. '	num' → logprob: -17.514163970947266
    7. ')' → logprob: -18.139163970947266
    8. '"' → logprob: -18.139163970947266
    9. '('' → logprob: -18.514163970947266
    10. ' '' → logprob: -19.014163970947266

Token 476: '')[' (ID: 28534)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.021708030253648758
    2. '')[' → logprob: -3.8967080116271973
    3. '())[' → logprob: -7.021708011627197
    4. ' )[' → logprob: -8.896708488464355
    5. '   ' → logprob: -9.646708488464355
    6. '")[' → logprob: -10.146708488464355
    7. '[' → logprob: -12.271708488464355
    8. '()[' → logprob: -12.396708488464355
    9. '))[' → logprob: -12.521708488464355
    10. ' ')[' → logprob: -12.646708488464355

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')[' → logprob: -16.00001335144043
    4. ')' → logprob: -16.37501335144043
    5. '][' → logprob: -16.50001335144043
    6. '   ' → logprob: -16.62501335144043
    7. ']' → logprob: -17.50001335144043
    8. '
' → logprob: -17.50001335144043
    9. '[' → logprob: -17.75001335144043
    10. '           ' → logprob: -18.25001335144043

Token 478: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016251837834715843
    2. ')
' → logprob: -4.141252040863037
    3. '           ' → logprob: -8.641251564025879
    4. '       ' → logprob: -10.641251564025879
    5. '               ' → logprob: -11.891251564025879
    6. ' )' → logprob: -12.516251564025879
    7. '')' → logprob: -13.516251564025879
    8. '   ' → logprob: -13.516251564025879
    9. '))' → logprob: -14.016251564025879
    10. ')

' → logprob: -14.516251564025879

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18250402808189392
    2. '       ' → logprob: -1.8075040578842163
    3. 'else' → logprob: -6.682504177093506
    4. '               ' → logprob: -7.307504177093506
    5. ' else' → logprob: -8.057503700256348
    6. 'elif' → logprob: -8.807503700256348
    7. '   ' → logprob: -9.057503700256348
    8. ')' → logprob: -9.182503700256348
    9. '```' → logprob: -9.807503700256348
    10. ' elif' → logprob: -10.682503700256348

Token 480: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41358545422554016
    2. '           ' → logprob: -1.7885854244232178
    3. ' else' → logprob: -2.2885854244232178
    4. 'else' → logprob: -3.0385854244232178
    5. ' elif' → logprob: -4.538585662841797
    6. 'elif' (adapté à ' elif') → logprob: -4.538585662841797
    7. '   ' → logprob: -7.663585662841797
    8. ' while' → logprob: -8.913585662841797
    9. 'while' → logprob: -9.288585662841797
    10. ' if' → logprob: -11.038585662841797

Token 481: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024773201439529657
    2. ' p' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.377477645874023
    4. '(p' → logprob: -14.752477645874023
    5. '(' → logprob: -15.627477645874023
    6. 'parse' → logprob: -15.877477645874023
    7. 'False' → logprob: -16.002477645874023
    8. '           ' → logprob: -16.752477645874023
    9. '	p' → logprob: -16.877477645874023
    10. ' ' → logprob: -16.877477645874023

Token 482: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.00014859484508633614
    2. 'peek' → logprob: -8.87514877319336
    3. 'e' → logprob: -11.87514877319336
    4. '.' → logprob: -14.12514877319336
    5. ' and' → logprob: -15.37514877319336
    6. 'eep' → logprob: -15.87514877319336
    7. 'and' → logprob: -16.25014877319336
    8. '.consume' → logprob: -16.25014877319336
    9. ' .' → logprob: -16.50014877319336
    10. 'EEK' → logprob: -16.87514877319336

Token 483: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2473670244216919
    2. '()[' → logprob: -1.872367024421692
    3. ' and' → logprob: -3.2473669052124023
    4. 'and' → logprob: -4.247366905212402
    5. '()==' → logprob: -4.622366905212402
    6. ')' → logprob: -7.497366905212402
    7. '[' → logprob: -7.622366905212402
    8. '(' → logprob: -8.247366905212402
    9. '()!=' → logprob: -8.372366905212402
    10. '==' → logprob: -8.622366905212402

Token 484: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47655972838401794
    2. '==' → logprob: -0.9765597581863403
    3. ' and' → logprob: -6.101559638977051
    4. 'and' → logprob: -8.97655963897705
    5. '()==' → logprob: -9.47655963897705
    6. '[' → logprob: -11.10155963897705
    7. '==(' → logprob: -12.22655963897705
    8. '=='' → logprob: -12.60155963897705
    9. '()' → logprob: -12.60155963897705
    10. '           ' → logprob: -12.85155963897705

Token 485: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003864630125463009
    2. ' ('' → logprob: -7.8753862380981445
    3. '('<' → logprob: -13.000386238098145
    4. 'None' → logprob: -14.250386238098145
    5. '('',' → logprob: -14.250386238098145
    6. '(None' → logprob: -14.750386238098145
    7. '(',',' → logprob: -15.125386238098145
    8. '('&' → logprob: -15.375386238098145
    9. '(('' → logprob: -15.375386238098145
    10. ''' → logprob: -15.500386238098145

Token 486: '(',' (ID: 30548)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002346488763578236
    2. ''' → logprob: -8.375234603881836
    3. '(' → logprob: -13.625234603881836
    4. '(',',' → logprob: -13.875234603881836
    5. '('.',' → logprob: -14.375234603881836
    6. ' ('' → logprob: -15.125234603881836
    7. '('+' → logprob: -15.250234603881836
    8. '(',' → logprob: -15.500234603881836
    9. '('<' → logprob: -15.875234603881836
    10. '('/',' → logprob: -16.375234603881836

Token 487: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08065222948789597
    2. ''):' → logprob: -2.8306522369384766
    3. ''' → logprob: -4.955652236938477
    4. '):
' → logprob: -5.205652236938477
    5. ')' → logprob: -5.580652236938477
    6. '('' → logprob: -6.955652236938477
    7. '')' → logprob: -7.830652236938477
    8. ''):
' → logprob: -8.205652236938477
    9. '':' → logprob: -8.205652236938477
    10. '(' → logprob: -8.455652236938477

Token 488: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5233421325683594
    2. '           ' → logprob: -0.8983421325683594
    3. '       ' → logprob: -9.52334213256836
    4. ' p' → logprob: -10.14834213256836
    5. 'p' → logprob: -10.27334213256836
    6. '   ' → logprob: -10.77334213256836
    7. '                   ' → logprob: -10.77334213256836
    8. '            ' → logprob: -12.27334213256836
    9. '          ' → logprob: -12.52334213256836
    10. '	           ' → logprob: -12.64834213256836

Token 489: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.9936684370040894
    2. ' p' → logprob: -1.1186684370040894
    3. '           ' → logprob: -1.2436684370040894
    4. '               ' → logprob: -4.493668556213379
    5. '       ' → logprob: -5.868668556213379
    6. '   ' → logprob: -7.868668556213379
    7. '                   ' → logprob: -8.618668556213379
    8. ' ' → logprob: -10.118668556213379
    9. '            ' → logprob: -10.868668556213379
    10. '          ' → logprob: -11.118668556213379

Token 490: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0013614245690405369
    2. 'consume' → logprob: -7.12636137008667
    3. '.' → logprob: -7.50136137008667
    4. ' .' → logprob: -13.751361846923828
    5. '().' → logprob: -14.126361846923828
    6. ' consume' → logprob: -14.376361846923828
    7. '_cons' → logprob: -14.751361846923828
    8. '   ' → logprob: -14.751361846923828
    9. '.cons' → logprob: -14.876361846923828
    10. 'cons' → logprob: -15.001361846923828

Token 491: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4741072356700897
    2. ''' → logprob: -0.9741072654724121
    3. '(' → logprob: -10.724106788635254
    4. '("("' → logprob: -12.474106788635254
    5. ' '('' → logprob: -12.849106788635254
    6. ''(' → logprob: -13.974106788635254
    7. ' ('' → logprob: -15.349106788635254
    8. '(('' → logprob: -15.599106788635254
    9. '(
' → logprob: -15.849106788635254
    10. '"' → logprob: -15.974106788635254

Token 492: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007526886183768511
    2. ''' → logprob: -5.007526874542236
    3. '(' → logprob: -7.132526874542236
    4. '("("' → logprob: -11.757527351379395
    5. '(
' → logprob: -13.007527351379395
    6. ' '('' → logprob: -14.132527351379395
    7. ''(' → logprob: -14.507527351379395
    8. '(',' → logprob: -14.632527351379395
    9. ')' → logprob: -16.382526397705078
    10. '')' → logprob: -16.507526397705078

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0795055478811264
    2. ')
' → logprob: -2.579505443572998
    3. '')' → logprob: -8.079505920410156
    4. '           ' → logprob: -8.704505920410156
    5. '               ' → logprob: -9.204505920410156
    6. ')
' → logprob: -10.829505920410156
    7. '')
' → logprob: -11.829505920410156
    8. ')

' → logprob: -12.579505920410156
    9. '()' → logprob: -12.704505920410156
    10. '       ' → logprob: -13.579505920410156

Token 494: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6495224237442017
    2. '               ' → logprob: -0.8995224237442017
    3. 'node' → logprob: -2.899522304534912
    4. 'left' → logprob: -5.399522304534912
    5. '
' → logprob: -5.649522304534912
    6. '       ' → logprob: -6.149522304534912
    7. 'return' → logprob: -6.274522304534912
    8. ' node' → logprob: -6.274522304534912
    9. ' left' → logprob: -6.774522304534912
    10. '                   ' → logprob: -8.39952278137207

Token 495: ' left' (ID: 3561)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3527768552303314
    2. 'left' (adapté à ' left') → logprob: -1.2277768850326538
    3. 'right' → logprob: -6.352777004241943
    4. '           ' → logprob: -7.477777004241943
    5. '       ' → logprob: -8.227776527404785
    6. '   ' → logprob: -8.227776527404785
    7. 'inner' → logprob: -8.352776527404785
    8. ' left' → logprob: -8.727776527404785
    9. 'n' → logprob: -8.727776527404785
    10. 'return' → logprob: -8.977776527404785

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889264822006226
    2. ' =' → logprob: -2.578892707824707
    3. ')' → logprob: -12.953892707824707
    4. ')=' → logprob: -15.703892707824707
    5. ',' → logprob: -16.45389175415039
    6. '=
' → logprob: -16.70389175415039
    7. ' ' → logprob: -16.82889175415039
    8. '=parse' → logprob: -17.70389175415039
    9. '=

' → logprob: -18.20389175415039
    10. '   ' → logprob: -18.20389175415039

Token 497: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.07895742356777191
    2. ' parse' → logprob: -2.5789573192596436
    3. '(parse' → logprob: -9.703957557678223
    4. '   ' → logprob: -12.828957557678223
    5. '	parse' → logprob: -13.703957557678223
    6. ' ' → logprob: -14.203957557678223
    7. '           ' → logprob: -14.203957557678223
    8. '=parse' → logprob: -15.078957557678223
    9. '               ' → logprob: -15.828957557678223
    10. '                   ' → logprob: -15.953957557678223

Token 498: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.04305616766214371
    2. 'e' → logprob: -3.1680562496185303
    3. 'parse' → logprob: -10.04305648803711
    4. 'expr' → logprob: -12.16805648803711
    5. ''e' → logprob: -13.29305648803711
    6. '(' → logprob: -13.79305648803711
    7. '(e' → logprob: -13.91805648803711
    8. '_expr' → logprob: -14.66805648803711
    9. 'def' → logprob: -14.79305648803711
    10. 'E' → logprob: -14.79305648803711

Token 499: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0086546391248703
    2. '()
' → logprob: -4.758654594421387
    3. '())' → logprob: -10.758654594421387
    4. ')' → logprob: -11.008654594421387
    5. '()
' → logprob: -14.508654594421387
    6. '()

' → logprob: -15.008654594421387
    7. '()`' → logprob: -15.133654594421387
    8. '())
' → logprob: -15.383654594421387
    9. '()\' → logprob: -15.758654594421387
    10. '           ' → logprob: -16.008655548095703

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03124292753636837
    2. '           ' → logprob: -3.531242847442627
    3. '       ' → logprob: -6.906242847442627
    4. 'p' → logprob: -8.656243324279785
    5. '   ' → logprob: -9.656243324279785
    6. '			' → logprob: -10.031243324279785
    7. '                   ' → logprob: -10.156243324279785
    8. '		' → logprob: -10.156243324279785
    9. '	       ' → logprob: -10.281243324279785
    10. '	' → logprob: -10.781243324279785

Token 501: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.010525505989789963
    2. ' p' → logprob: -5.135525703430176
    3. '           ' → logprob: -6.510525703430176
    4. ')' → logprob: -6.760525703430176
    5. '       ' → logprob: -6.885525703430176
    6. '   ' → logprob: -7.760525703430176
    7. '               ' → logprob: -8.135525703430176
    8. ')p' → logprob: -9.135525703430176
    9. '                   ' → logprob: -10.010525703430176
    10. ')
' → logprob: -10.385525703430176

Token 502: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.00042745075188577175
    2. '.' → logprob: -8.00042724609375
    3. '().' → logprob: -9.62542724609375
    4. 'consume' → logprob: -11.37542724609375
    5. ').' → logprob: -11.62542724609375
    6. ' .' → logprob: -13.00042724609375
    7. '   ' → logprob: -13.50042724609375
    8. ')' → logprob: -14.00042724609375
    9. '.cons' → logprob: -14.50042724609375
    10. '```' → logprob: -15.37542724609375

Token 503: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.572941179503687e-05
    2. '')' → logprob: -10.000045776367188
    3. '(('' → logprob: -16.125045776367188
    4. '(' → logprob: -16.125045776367188
    5. '("' → logprob: -17.375045776367188
    6. '('.')' → logprob: -18.125045776367188
    7. ')' → logprob: -18.250045776367188
    8. '['' → logprob: -18.750045776367188
    9. ' (' → logprob: -18.875045776367188
    10. '('/')' → logprob: -19.000045776367188

Token 504: ')')
' (ID: 80616)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.576214611530304
    2. ')' → logprob: -0.826214611530304
    3. ')'' → logprob: -8.326214790344238
    4. ')')
' → logprob: -10.826214790344238
    5. '('' → logprob: -11.826214790344238
    6. ')")' → logprob: -13.451214790344238
    7. ''' → logprob: -13.576214790344238
    8. ')','' → logprob: -13.951214790344238
    9. ')'),' → logprob: -14.576214790344238
    10. ' ')' → logprob: -14.826214790344238

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00888093002140522
    2. '       ' → logprob: -4.758881092071533
    3. 'else' → logprob: -9.258880615234375
    4. '               ' → logprob: -9.508880615234375
    5. ' else' → logprob: -9.758880615234375
    6. 'return' → logprob: -11.383880615234375
    7. '
' → logprob: -11.633880615234375
    8. '   ' → logprob: -12.008880615234375
    9. ' return' → logprob: -12.633880615234375
    10. '		' → logprob: -12.883880615234375

Token 506: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6453849077224731
    2. 'else' (adapté à ' else') → logprob: -1.0203849077224731
    3. ' else' → logprob: -2.3953847885131836
    4. '       ' → logprob: -3.7703847885131836
    5. '   ' → logprob: -7.520384788513184
    6. 'while' → logprob: -8.895384788513184
    7. ' while' → logprob: -9.520384788513184
    8. '
' → logprob: -9.895384788513184
    9. 'elif' → logprob: -10.520384788513184
    10. 'if' → logprob: -11.645384788513184

Token 507: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013272109441459179
    2. '       ' → logprob: -4.513272285461426
    3. '               ' → logprob: -6.513272285461426
    4. 'return' → logprob: -7.888272285461426
    5. '   ' → logprob: -8.263272285461426
    6. ' return' → logprob: -9.638272285461426
    7. 'raise' → logprob: -11.513272285461426
    8. ':return' → logprob: -12.263272285461426
    9. '	       ' → logprob: -12.513272285461426
    10. ' raise' → logprob: -12.513272285461426

Token 508: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06446810066699982
    2. '       ' → logprob: -2.9394681453704834
    3. '   ' → logprob: -5.064467906951904
    4. '               ' → logprob: -6.064467906951904
    5. 'return' → logprob: -7.689467906951904
    6. ' return' → logprob: -8.064468383789062
    7. ' raise' → logprob: -9.564468383789062
    8. 'raise' → logprob: -10.814468383789062
    9. ' ' → logprob: -11.439468383789062
    10. ' None' → logprob: -12.189468383789062

Token 509: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030966512858867645
    2. '           ' → logprob: -4.155966281890869
    3. ' return' → logprob: -4.655966281890869
    4. 'raise' → logprob: -5.780966281890869
    5. 'None' → logprob: -6.280966281890869
    6. '               ' → logprob: -9.405966758728027
    7. ' None' → logprob: -9.405966758728027
    8. '   ' → logprob: -9.780966758728027
    9. ' raise' → logprob: -10.030966758728027
    10. '       ' → logprob: -10.030966758728027

Token 510: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.176947600673884e-05
    2. ' None' → logprob: -10.750021934509277
    3. '           ' → logprob: -16.12502098083496
    4. '   ' → logprob: -16.37502098083496
    5. '
' → logprob: -16.87502098083496
    6. 'left' → logprob: -17.25002098083496
    7. '               ' → logprob: -18.12502098083496
    8. '(None' → logprob: -18.50002098083496
    9. 'none' → logprob: -19.75002098083496
    10. '                   ' → logprob: -20.37502098083496

Token 511: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015241486253216863
    2. '           ' → logprob: -6.751523971557617
    3. '   ' → logprob: -8.876523971557617
    4. '        
' → logprob: -8.876523971557617
    5. ' while' → logprob: -11.001523971557617
    6. 'while' → logprob: -11.251523971557617
    7. '
' → logprob: -11.251523971557617
    8. '    
' → logprob: -12.001523971557617
    9. '            
' → logprob: -12.501523971557617
    10. ')' → logprob: -12.626523971557617

Token 512: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007043567020446062
    2. '        
' → logprob: -6.007043361663818
    3. ' while' → logprob: -6.257043361663818
    4. '   ' → logprob: -6.632043361663818
    5. '           ' → logprob: -7.757043361663818
    6. '    
' → logprob: -8.132043838500977
    7. 'while' → logprob: -8.632043838500977
    8. '
' → logprob: -9.257043838500977
    9. '  
' → logprob: -9.757043838500977
    10. '    ' → logprob: -10.257043838500977

Token 513: ' if' (ID: 538)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.13604958355426788
    2. 'if' (adapté à ' if') → logprob: -2.761049509048462
    3. 'while' → logprob: -2.761049509048462
    4. '   ' → logprob: -8.261049270629883
    5. ' op' → logprob: -8.636049270629883
    6. 'cur' → logprob: -9.636049270629883
    7. ' while' → logprob: -9.761049270629883
    8. 'tok' → logprob: -10.011049270629883
    9. 'token' → logprob: -10.136049270629883
    10. '       ' → logprob: -10.136049270629883

Token 514: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20148865878582
    2. ' p' → logprob: -1.7014886140823364
    3. '(p' → logprob: -10.826488494873047
    4. '   ' → logprob: -11.076488494873047
    5. 'op' → logprob: -11.826488494873047
    6. 'pos' → logprob: -12.076488494873047
    7. '(' → logprob: -12.326488494873047
    8. ' (' → logprob: -12.451488494873047
    9. 'not' → logprob: -12.576488494873047
    10. ' not' → logprob: -12.576488494873047

Token 515: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.5146872997283936
    2. 'peek' → logprob: -1.0146872997283936
    3. ' =' → logprob: -5.139687538146973
    4. 'pos' → logprob: -5.139687538146973
    5. '=' → logprob: -5.389687538146973
    6. '.consume' → logprob: -5.639687538146973
    7. 'and' → logprob: -5.639687538146973
    8. 'if' → logprob: -5.639687538146973
    9. 'def' → logprob: -6.139687538146973
    10. '   ' → logprob: -6.264687538146973

Token 516: '()' (ID: 416)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6385394930839539
    2. '()' → logprob: -1.0135395526885986
    3. ' and' → logprob: -2.2635395526885986
    4. '()[' → logprob: -5.8885393142700195
    5. ' is' → logprob: -7.7635393142700195
    6. 'is' → logprob: -8.01353931427002
    7. '()!=' → logprob: -8.38853931427002
    8. '[' → logprob: -8.51353931427002
    9. '=None' → logprob: -8.51353931427002
    10. '   ' → logprob: -8.88853931427002

Token 517: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3151599168777466
    2. ' and' → logprob: -1.3151599168777466
    3. 'in' → logprob: -7.315159797668457
    4. '[' → logprob: -7.690159797668457
    5. 'is' → logprob: -8.190159797668457
    6. ' in' → logprob: -8.690159797668457
    7. ' is' → logprob: -9.315159797668457
    8. '=' → logprob: -9.940159797668457
    9. ' =' → logprob: -10.065159797668457
    10. '   ' → logprob: -10.440159797668457

Token 518: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0325924449716695e-05
    2. ' p' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. ' ' → logprob: -17.875009536743164
    5. '(p' → logprob: -18.500009536743164
    6. '
' → logprob: -18.750009536743164
    7. '	p' → logprob: -19.375009536743164
    8. 'len' → logprob: -19.375009536743164
    9. '  ' → logprob: -20.000009536743164
    10. '     ' → logprob: -20.125009536743164

Token 519: '.peek' (ID: 73296)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8925135135650635
    2. '[' → logprob: -0.8925135135650635
    3. '()[' → logprob: -2.1425135135650635
    4. 'and' → logprob: -4.267513275146484
    5. 'peek' → logprob: -4.267513275146484
    6. 'in' → logprob: -4.767513275146484
    7. ' in' → logprob: -5.142513275146484
    8. '('' → logprob: -5.517513275146484
    9. 'p' → logprob: -5.767513275146484
    10. '()' → logprob: -6.017513275146484

Token 520: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.21707195043563843
    2. '()' → logprob: -1.8420720100402832
    3. '(' → logprob: -4.217072010040283
    4. 'in' → logprob: -4.342072010040283
    5. 'and' → logprob: -6.217072010040283
    6. '[' → logprob: -6.342072010040283
    7. '(('' → logprob: -7.217072010040283
    8. '(None' → logprob: -7.342072010040283
    9. '0' → logprob: -7.592072010040283
    10. '()(' → logprob: -7.592072010040283

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019866866059601307
    2. '('' → logprob: -6.501986503601074
    3. '(' → logprob: -7.751986503601074
    4. '[' → logprob: -10.626986503601074
    5. '1' → logprob: -11.751986503601074
    6. 'type' → logprob: -12.501986503601074
    7. '(('' → logprob: -12.626986503601074
    8. '
' → logprob: -13.001986503601074
    9. ''' → logprob: -13.126986503601074
    10. '()[' → logprob: -13.626986503601074

Token 522: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1616082340478897
    2. ' in' → logprob: -1.9116082191467285
    3. ')' → logprob: -6.7866082191467285
    4. ''in' → logprob: -8.661608695983887
    5. ']' → logprob: -10.036608695983887
    6. ''' → logprob: -11.911608695983887
    7. '   ' → logprob: -12.161608695983887
    8. ' ' → logprob: -12.286608695983887
    9. 'In' → logprob: -12.786608695983887
    10. '
' → logprob: -12.786608695983887

Token 523: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02325037121772766
    2. ' in' → logprob: -3.7732503414154053
    3. '
' → logprob: -13.148250579833984
    4. '   ' → logprob: -14.273250579833984
    5. 'In' → logprob: -14.398250579833984
    6. ' ' → logprob: -14.523250579833984
    7. '    ' → logprob: -15.398250579833984
    8. '```' → logprob: -15.523250579833984
    9. 'not' → logprob: -15.648250579833984
    10. '  ' → logprob: -16.023250579833984

Token 524: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -4.656383680412546e-05
    2. '('' → logprob: -10.750046730041504
    3. '['' → logprob: -11.375046730041504
    4. '('+' → logprob: -11.625046730041504
    5. ''' → logprob: -12.875046730041504
    6. ' '+' → logprob: -13.375046730041504
    7. '+-' → logprob: -15.125046730041504
    8. '"+' → logprob: -15.375046730041504
    9. ' ('' → logprob: -17.750045776367188
    10. '+'' → logprob: -18.250045776367188

Token 525: '-' (ID: 12)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.14555387198925018
    2. '+-' → logprob: -2.6455538272857666
    3. ''-' → logprob: -2.8955538272857666
    4. '-' → logprob: -4.895554065704346
    5. ''' → logprob: -6.520554065704346
    6. '+' → logprob: -9.395553588867188
    7. '['' → logprob: -10.020553588867188
    8. '*/' → logprob: -10.020553588867188
    9. '+-+-' → logprob: -10.395553588867188
    10. '+'' → logprob: -10.395553588867188

Token 526: '*/' (ID: 3680)
  Prédit: '*/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*/' → logprob: -0.017479173839092255
    2. ''' → logprob: -4.392478942871094
    3. ''+' → logprob: -6.517478942871094
    4. '+' → logprob: -6.767478942871094
    5. '+-' → logprob: -6.767478942871094
    6. '*/)' → logprob: -8.142478942871094
    7. '')' → logprob: -8.517478942871094
    8. '*/),' → logprob: -9.017478942871094
    9. '*/,' → logprob: -9.142478942871094
    10. '',' → logprob: -9.267478942871094

Token 527: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.11243022978305817
    2. ''):
' → logprob: -2.6124303340911865
    3. '+-' → logprob: -4.487430095672607
    4. '):
' → logprob: -4.737430095672607
    5. '':' → logprob: -4.987430095672607
    6. '):' → logprob: -6.737430095672607
    7. ''):' → logprob: -6.862430095672607
    8. '')' → logprob: -6.987430095672607
    9. '*/' → logprob: -7.612430095672607
    10. ''' → logprob: -7.612430095672607

Token 528: '               ' (ID: 506)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.8567015528678894
    2. '               ' → logprob: -0.9817015528678894
    3. 'op' → logprob: -1.8567016124725342
    4. '           ' → logprob: -3.231701612472534
    5. '	op' → logprob: -5.856701374053955
    6. 'operator' → logprob: -7.981701374053955
    7. '(op' → logprob: -8.106701850891113
    8. 'token' → logprob: -8.106701850891113
    9. ':' → logprob: -8.606701850891113
    10. ' operator' → logprob: -8.731701850891113

Token 529: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.0007119550718925893
    2. ' op' → logprob: -7.250711917877197
    3. '           ' → logprob: -14.375712394714355
    4. '   ' → logprob: -14.750712394714355
    5. '	op' → logprob: -14.875712394714355
    6. '       ' → logprob: -15.625712394714355
    7. 'opt' → logprob: -15.875712394714355
    8. 'left' → logprob: -16.00071144104004
    9. 'oper' → logprob: -16.37571144104004
    10. '(op' → logprob: -16.50071144104004

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760663747787476
    2. '=' → logprob: -0.8260663747787476
    3. 'op' → logprob: -9.826066017150879
    4. ',' → logprob: -10.576066017150879
    5. '_op' → logprob: -11.076066017150879
    6. '   ' → logprob: -11.701066017150879
    7. 'token' → logprob: -12.326066017150879
    8. 'type' → logprob: -12.451066017150879
    9. ' ' → logprob: -12.826066017150879
    10. '(op' → logprob: -12.826066017150879

Token 531: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033713103039190173
    2. ' p' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.750337600708008
    4. '  ' → logprob: -15.750337600708008
    5. ' ' → logprob: -16.000337600708008
    6. '	p' → logprob: -16.625337600708008
    7. '           ' → logprob: -16.750337600708008
    8. 'op' → logprob: -16.875337600708008
    9. '    ' → logprob: -17.375337600708008
    10. '       ' → logprob: -17.875337600708008

Token 532: '.consume' (ID: 140765)
  Prédit: '.peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.622582197189331
    2. '.consume' → logprob: -0.872582197189331
    3. 'peek' → logprob: -3.497582197189331
    4. 'consume' → logprob: -4.24758243560791
    5. '('' → logprob: -7.37258243560791
    6. '.' → logprob: -8.87258243560791
    7. '(' → logprob: -9.99758243560791
    8. '   ' → logprob: -10.12258243560791
    9. '[' → logprob: -10.99758243560791
    10. '('.' → logprob: -11.12258243560791

Token 533: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0740911066532135
    2. 'p' → logprob: -3.9490911960601807
    3. '()' → logprob: -4.074090957641602
    4. '(p' → logprob: -4.324090957641602
    5. '(None' → logprob: -4.324090957641602
    6. '[' → logprob: -5.699090957641602
    7. 'None' → logprob: -6.074090957641602
    8. '()
' → logprob: -7.074090957641602
    9. '(' → logprob: -7.824090957641602
    10. 'op' → logprob: -7.949090957641602

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '
' → logprob: -14.62500286102295
    5. '][' → logprob: -16.250001907348633
    6. '[' → logprob: -16.750001907348633
    7. '1' → logprob: -16.875001907348633
    8. '(' → logprob: -17.125001907348633
    9. '#' → logprob: -17.875001907348633
    10. '```' → logprob: -18.062501907348633

Token 535: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1149270161986351
    2. ']' → logprob: -2.614927053451538
    3. ']
' → logprob: -4.364926815032959
    4. '           ' → logprob: -4.489926815032959
    5. ')' → logprob: -5.864926815032959
    6. '<|end|>' → logprob: -5.864926815032959
    7. '                   ' → logprob: -6.614926815032959
    8. ']()
' → logprob: -7.114926815032959
    9. '
' → logprob: -7.114926815032959
    10. ')
' → logprob: -7.489926815032959

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008581006550230086
    2. '           ' → logprob: -7.875858306884766
    3. 'right' → logprob: -8.750858306884766
    4. 'left' → logprob: -9.625858306884766
    5. ' right' → logprob: -10.000858306884766
    6. ' left' → logprob: -10.000858306884766
    7. '       ' → logprob: -10.250858306884766
    8. 'next' → logprob: -10.250858306884766
    9. '                
' → logprob: -10.750858306884766
    10. ' next' → logprob: -10.750858306884766

Token 537: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008615754544734955
    2. ' right' → logprob: -4.758615970611572
    3. '               ' → logprob: -14.508615493774414
    4. 'rhs' → logprob: -14.633615493774414
    5. '	right' → logprob: -15.633615493774414
    6. 'r' → logprob: -17.883615493774414
    7. '           ' → logprob: -18.383615493774414
    8. ' rhs' → logprob: -18.508615493774414
    9. 'Right' → logprob: -18.758615493774414
    10. '                   ' → logprob: -18.758615493774414

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=
' → logprob: -18.826414108276367
    4. ')' → logprob: -18.826414108276367
    5. ' ' → logprob: -19.201414108276367
    6. '   ' → logprob: -19.576414108276367
    7. ',' → logprob: -19.951414108276367
    8. '           ' → logprob: -20.451414108276367
    9. '=

' → logprob: -20.576414108276367
    10. '＝' → logprob: -21.076414108276367

Token 539: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03380141407251358
    2. ' parse' → logprob: -3.408801317214966
    3. '           ' → logprob: -9.658801078796387
    4. '(parse' → logprob: -9.658801078796387
    5. '               ' → logprob: -11.658801078796387
    6. '   ' → logprob: -12.408801078796387
    7. '                   ' → logprob: -12.408801078796387
    8. ' ' → logprob: -12.533801078796387
    9. '	parse' → logprob: -13.408801078796387
    10. '=parse' → logprob: -13.783801078796387

Token 540: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.009836013428866863
    2. 'e' → logprob: -4.759836196899414
    3. 'parse' → logprob: -6.884836196899414
    4. '('' → logprob: -9.134836196899414
    5. '('_' → logprob: -10.509836196899414
    6. ''e' → logprob: -10.884836196899414
    7. '(parse' → logprob: -11.134836196899414
    8. 'expr' → logprob: -12.009836196899414
    9. '(' → logprob: -12.134836196899414
    10. 'def' → logprob: -12.384836196899414

Token 541: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16023387014865875
    2. '()
' → logprob: -1.9102338552474976
    3. '()
' → logprob: -11.660233497619629
    4. '()

' → logprob: -14.410233497619629
    5. '       ' → logprob: -16.035234451293945
    6. '())' → logprob: -16.535234451293945
    7. '           ' → logprob: -16.660234451293945
    8. '   ' → logprob: -16.660234451293945
    9. '()`' → logprob: -16.660234451293945
    10. ')' → logprob: -17.160234451293945

Token 542: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008816883200779557
    2. '           ' → logprob: -8.125882148742676
    3. '       ' → logprob: -8.375882148742676
    4. 'return' → logprob: -8.375882148742676
    5. ' return' → logprob: -9.125882148742676
    6. '   ' → logprob: -11.875882148742676
    7. '                   ' → logprob: -12.000882148742676
    8. '		       ' → logprob: -14.750882148742676
    9. '	           ' → logprob: -15.125882148742676
    10. '              ' → logprob: -15.250882148742676

Token 543: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08238917589187622
    2. ' return' → logprob: -2.5823891162872314
    3. '               ' → logprob: -6.2073893547058105
    4. '       ' → logprob: -7.2073893547058105
    5. '           ' → logprob: -7.3323893547058105
    6. '   ' → logprob: -9.707388877868652
    7. '	return' → logprob: -10.832388877868652
    8. '                   ' → logprob: -13.457388877868652
    9. ':return' → logprob: -14.207388877868652
    10. 'if' → logprob: -14.957388877868652

Token 544: ' (' (ID: 350)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -5.2762428822461516e-05
    2. '('' → logprob: -10.625052452087402
    3. ' (' → logprob: -10.875052452087402
    4. '   ' → logprob: -12.250052452087402
    5. '(' → logprob: -12.625052452087402
    6. '(operator' → logprob: -14.500052452087402
    7. '(Op' → logprob: -15.375052452087402
    8. '(OP' → logprob: -16.00005340576172
    9. '((' → logprob: -16.37505340576172
    10. '(left' → logprob: -16.62505340576172

Token 545: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.003323865123093128
    2. ''op' → logprob: -5.753324031829834
    3. '(op' → logprob: -9.128323554992676
    4. ' op' → logprob: -10.253323554992676
    5. '	op' → logprob: -13.753323554992676
    6. '   ' → logprob: -14.503323554992676
    7. ''' → logprob: -15.253323554992676
    8. '('' → logprob: -15.503323554992676
    9. ' ' → logprob: -16.753324508666992
    10. ' (' → logprob: -16.878324508666992

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00674142362549901
    2. ',left' → logprob: -5.006741523742676
    3. ' ,' → logprob: -11.006741523742676
    4. 'left' → logprob: -12.006741523742676
    5. ',right' → logprob: -13.006741523742676
    6. '',' → logprob: -15.131741523742676
    7. '(left' → logprob: -15.506741523742676
    8. ' left' → logprob: -15.506741523742676
    9. '   ' → logprob: -15.881741523742676
    10. '[left' → logprob: -16.13174057006836

Token 547: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00015920029545668513
    2. ' left' → logprob: -8.75015926361084
    3. '[left' → logprob: -14.37515926361084
    4. '   ' → logprob: -16.000158309936523
    5. '           ' → logprob: -16.875158309936523
    6. '	left' → logprob: -17.750158309936523
    7. '(left' → logprob: -18.875158309936523
    8. ')' → logprob: -19.000158309936523
    9. '[' → logprob: -19.000158309936523
    10. '       ' → logprob: -19.250158309936523

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002346992027014494
    2. ',right' → logprob: -6.252346992492676
    3. 'right' → logprob: -8.002346992492676
    4. ' ,' → logprob: -9.877346992492676
    5. ' right' → logprob: -10.377346992492676
    6. '           ' → logprob: -14.502346992492676
    7. '               ' → logprob: -15.002346992492676
    8. ',
' → logprob: -16.50234603881836
    9. '[right' → logprob: -16.62734603881836
    10. '   ' → logprob: -16.75234603881836

Token 549: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001234428636962548
    2. ' right' → logprob: -9.000123023986816
    3. '	right' → logprob: -22.125123977661133
    4. '(right' → logprob: -22.625123977661133
    5. '[right' → logprob: -23.000123977661133
    6. '           ' → logprob: -23.000123977661133
    7. '               ' → logprob: -23.375123977661133
    8. '.right' → logprob: -23.750123977661133
    9. ',right' → logprob: -24.250123977661133
    10. '   ' → logprob: -24.375123977661133

Token 550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003619217313826084
    2. '       ' → logprob: -8.125362396240234
    3. ')
' → logprob: -9.875362396240234
    4. '           ' → logprob: -11.250362396240234
    5. '   ' → logprob: -14.125362396240234
    6. ')return' → logprob: -15.250362396240234
    7. '               ' → logprob: -15.875362396240234
    8. ' )' → logprob: -16.000362396240234
    9. '')' → logprob: -16.625362396240234
    10. '<|end|>' → logprob: -16.875362396240234

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016179591417312622
    2. '       ' → logprob: -4.14117956161499
    3. 'return' → logprob: -8.891180038452148
    4. '   ' → logprob: -13.266180038452148
    5. '               ' → logprob: -13.766180038452148
    6. '		' → logprob: -13.766180038452148
    7. 'else' → logprob: -14.016180038452148
    8. ' return' → logprob: -14.016180038452148
    9. '```' → logprob: -14.016180038452148
    10. '          ' → logprob: -14.266180038452148

Token 552: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.313640832901001
    2. '       ' → logprob: -1.313640832901001
    3. 'return' → logprob: -8.063640594482422
    4. ' return' → logprob: -10.438640594482422
    5. 'else' (adapté à ' else') → logprob: -11.688640594482422
    6. '               ' → logprob: -11.813640594482422
    7. '   ' → logprob: -11.813640594482422
    8. '	       ' → logprob: -12.563640594482422
    9. ' else' → logprob: -12.813640594482422
    10. '          ' → logprob: -13.063640594482422

Token 553: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4882831573486328
    2. '               ' → logprob: -1.1132831573486328
    3. '           ' → logprob: -3.613283157348633
    4. 'return' → logprob: -3.738283157348633
    5. ' return' → logprob: -5.238283157348633
    6. '   ' → logprob: -6.488283157348633
    7. ':return' → logprob: -9.113283157348633
    8. '	return' → logprob: -10.113283157348633
    9. ':
' → logprob: -10.363283157348633
    10. '	       ' → logprob: -11.113283157348633

Token 554: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.656343936920166
    2. 'return' → logprob: -1.406343936920166
    3. '           ' → logprob: -2.156343936920166
    4. '               ' → logprob: -2.156343936920166
    5. ' return' → logprob: -5.906343936920166
    6. '   ' → logprob: -6.281343936920166
    7. '	return' → logprob: -9.531343460083008
    8. '	       ' → logprob: -10.656343460083008
    9. '{return' → logprob: -11.031343460083008
    10. '```' → logprob: -12.156343460083008

Token 555: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.301394023466855e-05
    2. ' return' → logprob: -9.750062942504883
    3. '           ' → logprob: -12.500062942504883
    4. '   ' → logprob: -14.250062942504883
    5. '       ' → logprob: -15.250062942504883
    6. '	return' → logprob: -18.000062942504883
    7. '               ' → logprob: -18.750062942504883
    8. 'left' → logprob: -19.125062942504883
    9. '
' → logprob: -20.750062942504883
    10. '{return' → logprob: -21.250062942504883

Token 556: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0001234428636962548
    2. ' left' → logprob: -9.000123023986816
    3. '(left' → logprob: -19.875123977661133
    4. '	left' → logprob: -20.000123977661133
    5. '   ' → logprob: -20.375123977661133
    6. '           ' → logprob: -22.500123977661133
    7. '.left' → logprob: -23.000123977661133
    8. '[left' → logprob: -23.250123977661133
    9. ' ' → logprob: -23.375123977661133
    10. 'Left' → logprob: -24.000123977661133

Token 557: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004305615089833736
    2. '       ' → logprob: -5.754305839538574
    3. '<|end|>' → logprob: -7.129305839538574
    4. 'return' → logprob: -8.129305839538574
    5. '<|end|>' → logprob: -11.129305839538574
    6. 'def' → logprob: -12.129305839538574
    7. '#' → logprob: -13.004305839538574
    8. '```' → logprob: -13.254305839538574
    9. ' return' → logprob: -13.629305839538574
    10. '
' → logprob: -13.629305839538574

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28925490379333496
    2. '<|end|>' → logprob: -1.414254903793335
    3. ')' → logprob: -5.289255142211914
    4. '<|end|>' → logprob: -6.664255142211914
    5. '       ' → logprob: -7.914255142211914
    6. '	return' → logprob: -8.289255142211914
    7. 'return' → logprob: -8.414255142211914
    8. '
' → logprob: -8.914255142211914
    9. 'tokens' → logprob: -9.039255142211914
    10. '.' → logprob: -9.539255142211914

Token 559: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006056893616914749
    2. 'return' → logprob: -5.131056785583496
    3. ' return' → logprob: -9.131056785583496
    4. 'def' → logprob: -12.381056785583496
    5. '<|end|>' → logprob: -12.756056785583496
    6. '       ' → logprob: -12.881056785583496
    7. '
' → logprob: -13.006056785583496
    8. '	return' → logprob: -13.381056785583496
    9. 'tokens' → logprob: -13.506056785583496
    10. '    
' → logprob: -13.506056785583496

Token 560: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09617017209529877
    2. ' return' → logprob: -2.97117018699646
    3. 'return' → logprob: -3.22117018699646
    4. 'result' → logprob: -7.971169948577881
    5. ' result' → logprob: -8.596170425415039
    6. ' ' → logprob: -12.971170425415039
    7. '	return' → logprob: -13.971170425415039
    8. '  ' → logprob: -14.221170425415039
    9. 'tokens' → logprob: -14.346170425415039
    10. 'res' → logprob: -14.471170425415039

Token 561: ' above' (ID: 5151)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3150123953819275
    2. ' return' → logprob: -1.4400124549865723
    3. '   ' → logprob: -3.4400124549865723
    4. 'result' → logprob: -6.940012454986572
    5. ' result' → logprob: -8.565011978149414
    6. ' ' → logprob: -11.940011978149414
    7. 'tree' → logprob: -11.940011978149414
    8. 'tokens' → logprob: -11.940011978149414
    9. 'def' → logprob: -12.065011978149414
    10. '  ' → logprob: -12.065011978149414

Token 562: ' handles' (ID: 25640)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3106927275657654
    2. '   ' → logprob: -1.9356927871704102
    3. ' return' → logprob: -2.56069278717041
    4. 'def' → logprob: -3.43569278717041
    5. '
' → logprob: -5.56069278717041
    6. 'tokens' → logprob: -6.56069278717041
    7. '()' → logprob: -6.68569278717041
    8. ')' → logprob: -6.93569278717041
    9. '    
' → logprob: -7.31069278717041
    10. ' is' → logprob: -7.56069278717041

Token 563: ' only' (ID: 1606)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.25275981426239014
    2. ' parse' → logprob: -2.5027599334716797
    3. 'p' → logprob: -3.0027599334716797
    4. '   ' → logprob: -3.3777599334716797
    5. ' p' → logprob: -3.7527599334716797
    6. 'tokens' → logprob: -5.00275993347168
    7. ' the' → logprob: -5.37775993347168
    8. 'None' → logprob: -5.50275993347168
    9. 'the' → logprob: -5.50275993347168
    10. ' tokens' → logprob: -5.50275993347168

Token 564: ' one' (ID: 1001)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.7334498167037964
    2. 'one' → logprob: -1.3584498167037964
    3. 'the' → logprob: -2.983449935913086
    4. 'simple' → logprob: -3.358449935913086
    5. 'def' → logprob: -3.608449935913086
    6. 'full' → logprob: -3.733449935913086
    7. 'a' → logprob: -3.733449935913086
    8. 'single' → logprob: -3.858449935913086
    9. 'expr' → logprob: -4.233449935913086
    10. 'first' → logprob: -4.233449935913086

Token 565: ' operator' (ID: 11019)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8189508318901062
    2. '   ' → logprob: -0.9439508318901062
    3. 'parse' → logprob: -3.443950891494751
    4. ' parse' → logprob: -3.443950891494751
    5. 'e' → logprob: -4.318950653076172
    6. 'expr' → logprob: -4.693950653076172
    7. 'token' → logprob: -4.693950653076172
    8. 'return' → logprob: -5.068950653076172
    9. '()' → logprob: -5.068950653076172
    10. '_expr' → logprob: -5.068950653076172

Token 566: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008028378360904753
    2. 'def' → logprob: -8.125802993774414
    3. '<|end|>' → logprob: -8.250802993774414
    4. ')' → logprob: -9.750802993774414
    5. '       ' → logprob: -10.000802993774414
    6. '    
' → logprob: -10.125802993774414
    7. '
' → logprob: -10.500802993774414
    8. ' def' → logprob: -11.000802993774414
    9. '<|end|>' → logprob: -11.000802993774414
    10. '#' → logprob: -11.500802993774414

Token 568: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007763254456222057
    2. 'def' → logprob: -5.257763385772705
    3. ' def' → logprob: -7.257763385772705
    4. ')' → logprob: -8.132762908935547
    5. '<|end|>' → logprob: -8.382762908935547
    6. '
' → logprob: -8.507762908935547
    7. '    
' → logprob: -8.507762908935547
    8. ' tokens' → logprob: -8.757762908935547
    9. ' return' → logprob: -9.007762908935547
    10. 'tokens' → logprob: -9.007762908935547

Token 569: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35546308755874634
    2. '   ' → logprob: -1.3554630279541016
    3. ' def' → logprob: -3.7304630279541016
    4. 'while' → logprob: -5.480463027954102
    5. 'pos' → logprob: -5.980463027954102
    6. '
' → logprob: -6.355463027954102
    7. 'rest' → logprob: -6.355463027954102
    8. ' while' → logprob: -6.480463027954102
    9. 'result' → logprob: -6.855463027954102
    10. ' pos' → logprob: -6.855463027954102

Token 570: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27727794647216797
    2. ' def' → logprob: -1.527277946472168
    3. ' rest' → logprob: -4.402277946472168
    4. 'rest' → logprob: -5.777277946472168
    5. '   ' → logprob: -5.902277946472168
    6. '
' → logprob: -7.027277946472168
    7. 'while' → logprob: -7.027277946472168
    8. ' tokens' → logprob: -7.027277946472168
    9. ' code' → logprob: -7.152277946472168
    10. ' while' → logprob: -7.277277946472168

Token 571: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.277756929397583
    2. 'tokens' → logprob: -1.652756929397583
    3. ' =' → logprob: -1.777756929397583
    4. '   ' → logprob: -2.277756929397583
    5. '=' → logprob: -3.152756929397583
    6. ' tokens' → logprob: -3.402756929397583
    7. ' can' → logprob: -3.527756929397583
    8. ' may' → logprob: -3.652756929397583
    9. '_tokens' → logprob: -4.027756690979004
    10. ' is' → logprob: -4.027756690979004

Token 572: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1489359140396118
    2. ' is' → logprob: -1.2739359140396118
    3. ' does' → logprob: -1.8989359140396118
    4. '   ' → logprob: -2.6489357948303223
    5. ' def' → logprob: -2.8989357948303223
    6. ':' → logprob: -3.6489357948303223
    7. ' continues' → logprob: -4.398935794830322
    8. ' doesn't' → logprob: -4.523935794830322
    9. ' has' → logprob: -4.773935794830322
    10. '
' → logprob: -4.773935794830322

Token 573: ' ambiguous' (ID: 123648)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.318740963935852
    2. 'expr' → logprob: -1.443740963935852
    3. 'amb' → logprob: -1.568740963935852
    4. ' ambiguous' → logprob: -2.5687408447265625
    5. '   ' → logprob: -3.0687408447265625
    6. 'def' → logprob: -3.4437408447265625
    7. '(expr' → logprob: -3.9437408447265625
    8. '(
' → logprob: -4.0687408447265625
    9. ' left' → logprob: -4.5687408447265625
    10. '#' → logprob: -4.5687408447265625

Token 574: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45237454771995544
    2. '<|end|>' → logprob: -1.0773745775222778
    3. '<|end|>' → logprob: -4.077374458312988
    4. ')' → logprob: -6.202374458312988
    5. ',' → logprob: -6.577374458312988
    6. '#' → logprob: -7.327374458312988
    7. '
' → logprob: -7.952374458312988
    8. 'def' → logprob: -8.077374458312988
    9. '...' → logprob: -8.077374458312988
    10. ' tokens' → logprob: -8.702374458312988

Token 575: ' allows' (ID: 7927)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7491101622581482
    2. '#' → logprob: -1.999110221862793
    3. ' incomplete' → logprob: -1.999110221862793
    4. ' the' → logprob: -2.374110221862793
    5. '   ' → logprob: -2.999110221862793
    6. ' def' → logprob: -3.624110221862793
    7. ' left' → logprob: -3.749110221862793
    8. ' unfinished' → logprob: -4.749110221862793
    9. ' we' → logprob: -4.874110221862793
    10. ' #' → logprob: -5.499110221862793

Token 576: ' nested' (ID: 47576)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -1.0164947509765625
    2. ' multiple' → logprob: -1.2664947509765625
    3. 'left' → logprob: -2.1414947509765625
    4. '   ' → logprob: -2.8914947509765625
    5. ' chaining' → logprob: -2.8914947509765625
    6. ' left' → logprob: -3.5164947509765625
    7. 'more' → logprob: -4.1414947509765625
    8. 'express' → logprob: -4.3914947509765625
    9. ' more' → logprob: -4.6414947509765625
    10. 'ch' → logprob: -5.3914947509765625

Token 577: ' ops' (ID: 26973)
  Prédit: '_expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_expr' → logprob: -1.0104060173034668
    2. '   ' → logprob: -1.5104060173034668
    3. 'def' → logprob: -1.5104060173034668
    4. 'expr' → logprob: -3.010406017303467
    5. ' expressions' → logprob: -3.385406017303467
    6. ' calls' → logprob: -4.135406017303467
    7. '_ops' → logprob: -4.385406017303467
    8. 'parse' → logprob: -4.510406017303467
    9. ' parse' → logprob: -4.635406017303467
    10. '_e' → logprob: -4.760406017303467

Token 578: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019439401105046272
    2. '<|end|>' → logprob: -4.269439220428467
    3. '<|end|>' → logprob: -6.269439220428467
    4. ',' → logprob: -6.394439220428467
    5. '
' → logprob: -7.644439220428467
    6. '    
' → logprob: -8.644439697265625
    7. '       ' → logprob: -8.894439697265625
    8. '#' → logprob: -9.019439697265625
    9. 'def' → logprob: -9.019439697265625
    10. 'return' → logprob: -9.394439697265625

Token 579: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.453712821006775
    2. 'with' → logprob: -1.453712821006775
    3. 'from' → logprob: -1.703712821006775
    4. ' with' → logprob: -1.703712821006775
    5. ' at' → logprob: -2.7037129402160645
    6. ' from' → logprob: -2.8287129402160645
    7. ' here' → logprob: -4.2037129402160645
    8. 'def' → logprob: -4.7037129402160645
    9. 'at' → logprob: -5.2037129402160645
    10. 'here' → logprob: -5.3287129402160645

Token 580: ' expr' (ID: 30206)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.49867528676986694
    2. 'expr' → logprob: -2.3736753463745117
    3. 'left' → logprob: -2.6236753463745117
    4. 'the' → logprob: -2.7486753463745117
    5. ' parse' → logprob: -2.8736753463745117
    6. ' the' → logprob: -3.8736753463745117
    7. 'def' → logprob: -4.498675346374512
    8. 'a' → logprob: -4.498675346374512
    9. 'p' → logprob: -4.748675346374512
    10. ' p' → logprob: -5.248675346374512

Token 581: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6374436616897583
    2. '       ' → logprob: -0.8874436616897583
    3. '<|end|>' → logprob: -3.2624435424804688
    4. 'def' → logprob: -4.387443542480469
    5. '<|end|>' → logprob: -5.887443542480469
    6. 'return' → logprob: -6.637443542480469
    7. ')' → logprob: -6.887443542480469
    8. '
' → logprob: -7.387443542480469
    9. 'tokens' → logprob: -7.637443542480469
    10. '    ' → logprob: -8.012443542480469

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002423695055767894
    2. '       ' → logprob: -6.5024237632751465
    3. '
' → logprob: -8.002423286437988
    4. '<|end|>' → logprob: -8.502423286437988
    5. 'def' → logprob: -8.877423286437988
    6. '    
' → logprob: -9.252423286437988
    7. ' def' → logprob: -10.877423286437988
    8. ' tokens' → logprob: -11.002423286437988
    9. '```' → logprob: -11.127423286437988
    10. '<|end|>' → logprob: -11.127423286437988

Token 583: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025534271262586117
    2. 'return' → logprob: -6.877553462982178
    3. ' return' → logprob: -7.377553462982178
    4. 'def' → logprob: -8.25255298614502
    5. 'result' → logprob: -8.50255298614502
    6. '    
' → logprob: -9.50255298614502
    7. ' result' → logprob: -9.75255298614502
    8. '
' → logprob: -9.87755298614502
    9. 'tokens' → logprob: -9.87755298614502
    10. 'node' → logprob: -10.12755298614502

Token 584: ' We' (ID: 1416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5953155755996704
    2. '   ' → logprob: -0.9703155755996704
    3. 'def' → logprob: -3.845315456390381
    4. 'node' → logprob: -3.845315456390381
    5. ' return' → logprob: -4.345315456390381
    6. 'result' → logprob: -5.220315456390381
    7. '       ' → logprob: -5.595315456390381
    8. 'tree' → logprob: -6.845315456390381
    9. 'pos' → logprob: -7.095315456390381
    10. 'expr' → logprob: -7.470315456390381

Token 585: ' solve' (ID: 17722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.435664415359497
    2. ' return' → logprob: -1.435664415359497
    3. 'def' → logprob: -1.435664415359497
    4. ' can' → logprob: -2.060664415359497
    5. 'return' → logprob: -2.560664415359497
    6. ' need' → logprob: -3.685664415359497
    7. ' def' → logprob: -3.810664415359497
    8. ' continue' → logprob: -4.185664176940918
    9. ' should' → logprob: -4.935664176940918
    10. 'continue' → logprob: -5.310664176940918

Token 586: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10642965883016586
    2. 'def' → logprob: -2.6064295768737793
    3. '       ' → logprob: -4.606429576873779
    4. ' by' → logprob: -5.606429576873779
    5. ' the' → logprob: -6.106429576873779
    6. '
' → logprob: -6.231429576873779
    7. '    
' → logprob: -6.606429576873779
    8. 'the' → logprob: -6.856429576873779
    9. '    ' → logprob: -7.106429576873779
    10. '```' → logprob: -7.356429576873779

Token 587: ' hand' (ID: 1803)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24326035380363464
    2. '   ' → logprob: -1.868260383605957
    3. ' def' → logprob: -3.118260383605957
    4. ' tokens' → logprob: -5.368260383605957
    5. 'tokens' → logprob: -5.368260383605957
    6. 'return' → logprob: -6.618260383605957
    7. '    ' → logprob: -7.243260383605957
    8. ' left' → logprob: -7.493260383605957
    9. 'result' → logprob: -7.493260383605957
    10. ' returning' → logprob: -7.868260383605957

Token 588: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005111848935484886
    2. 'def' → logprob: -5.7551116943359375
    3. '    
' → logprob: -7.5051116943359375
    4. '<|end|>' → logprob: -7.7551116943359375
    5. 'tokens' → logprob: -8.005111694335938
    6. '
' → logprob: -9.005111694335938
    7. ' tokens' → logprob: -9.255111694335938
    8. '<|end|>' → logprob: -9.755111694335938
    9. 'token' → logprob: -9.880111694335938
    10. '       ' → logprob: -10.130111694335938

Token 589: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007099193055182695
    2. 'def' → logprob: -5.382099151611328
    3. ' def' → logprob: -6.632099151611328
    4. '
' → logprob: -7.632099151611328
    5. ' tokens' → logprob: -8.257099151611328
    6. '    
' → logprob: -8.757099151611328
    7. 'tokens' → logprob: -9.132099151611328
    8. ' pos' → logprob: -10.632099151611328
    9. ' left' → logprob: -10.757099151611328
    10. '       ' → logprob: -10.882099151611328

Token 590: ' operator' (ID: 11019)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5627960562705994
    2. '_e' → logprob: -1.6877961158752441
    3. 'def' → logprob: -1.8127961158752441
    4. 'e' → logprob: -3.812796115875244
    5. 'left' → logprob: -4.312796115875244
    6. 'term' → logprob: -4.562796115875244
    7. '       ' → logprob: -4.687796115875244
    8. 'expr' → logprob: -5.062796115875244
    9. 'unit' → logprob: -5.562796115875244
    10. '()' → logprob: -6.312796115875244

Token 591: ' expressions' (ID: 43578)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5928771495819092
    2. '()' → logprob: -2.217877149581909
    3. 'def' → logprob: -2.342877149581909
    4. 's' → logprob: -2.967877149581909
    5. '       ' → logprob: -3.092877149581909
    6. ' =' → logprob: -3.342877149581909
    7. ',' → logprob: -3.467877149581909
    8. '(s' → logprob: -3.967877149581909
    9. ')' → logprob: -5.217877388000488
    10. '(' → logprob: -5.217877388000488

Token 592: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004144288133829832
    2. 'def' → logprob: -5.754144191741943
    3. '()' → logprob: -7.629144191741943
    4. '<|end|>' → logprob: -9.129144668579102
    5. '
' → logprob: -9.379144668579102
    6. '       ' → logprob: -9.754144668579102
    7. '<|end|>' → logprob: -10.504144668579102
    8. '    
' → logprob: -10.629144668579102
    9. '()
' → logprob: -10.629144668579102
    10. '(' → logprob: -10.754144668579102

Token 593: ' pairs' (ID: 24702)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5238580703735352
    2. 'a' → logprob: -1.7738580703735352
    3. 'left' → logprob: -2.273858070373535
    4. '   ' → logprob: -3.023858070373535
    5. ' a' → logprob: -3.773858070373535
    6. 'right' → logprob: -4.648858070373535
    7. 'parse' → logprob: -4.648858070373535
    8. 'preced' → logprob: -4.898858070373535
    9. 'p' → logprob: -5.148858070373535
    10. 'expr' → logprob: -5.398858070373535

Token 594: ' recursively' (ID: 130266)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014455756172537804
    2. 'def' → logprob: -4.639455795288086
    3. '
' → logprob: -6.264455795288086
    4. '<|end|>' → logprob: -7.264455795288086
    5. '       ' → logprob: -7.389455795288086
    6. ' def' → logprob: -7.639455795288086
    7. ',' → logprob: -8.514455795288086
    8. '    
' → logprob: -8.639455795288086
    9. '<|end|>' → logprob: -9.014455795288086
    10. ')' → logprob: -9.764455795288086

Token 595: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013247409835457802
    2. '<|end|>' → logprob: -4.513247489929199
    3. 'def' → logprob: -6.888247489929199
    4. '<|end|>' → logprob: -7.513247489929199
    5. '
' → logprob: -8.8882474899292
    6. ')' → logprob: -9.2632474899292
    7. '    
' → logprob: -9.2632474899292
    8. 'return' → logprob: -9.3882474899292
    9. 'tokens' → logprob: -9.3882474899292
    10. '       ' → logprob: -10.5132474899292

Token 596: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.38284432888031006
    2. 'the' → logprob: -1.88284432888031
    3. 'tokens' → logprob: -3.5078444480895996
    4. 'parse' → logprob: -3.5078444480895996
    5. 'right' → logprob: -4.0078444480896
    6. 'expr' → logprob: -4.3828444480896
    7. 'next' → logprob: -4.3828444480896
    8. 'here' → logprob: -4.5078444480896
    9. 'def' → logprob: -4.6328444480896
    10. 'p' → logprob: -4.8828444480896

Token 597: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03348524495959282
    2. 'def' → logprob: -3.658485174179077
    3. ')' → logprob: -5.908485412597656
    4. '       ' → logprob: -6.283485412597656
    5. '()' → logprob: -7.033485412597656
    6. ',' → logprob: -7.658485412597656
    7. '(' → logprob: -8.533485412597656
    8. ' def' → logprob: -9.033485412597656
    9. ' =' → logprob: -9.158485412597656
    10. ':' → logprob: -9.158485412597656

Token 598: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005637573776766658
    2. ' right' → logprob: -7.500563621520996
    3. ' ' → logprob: -12.500563621520996
    4. '   ' → logprob: -12.625563621520996
    5. '	right' → logprob: -12.750563621520996
    6. '  ' → logprob: -15.625563621520996
    7. ',right' → logprob: -15.875563621520996
    8. '_right' → logprob: -16.000564575195312
    9. 'r' → logprob: -16.375564575195312
    10. 'rightness' → logprob: -16.625564575195312

Token 599: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00519426679238677
    2. 'def' → logprob: -5.630194187164307
    3. '
' → logprob: -6.880194187164307
    4. '    
' → logprob: -8.380194664001465
    5. '<|end|>' → logprob: -9.505194664001465
    6. ' def' → logprob: -9.630194664001465
    7. '       ' → logprob: -10.005194664001465
    8. '  ' → logprob: -10.755194664001465
    9. ',' → logprob: -11.005194664001465
    10. 'tokens' → logprob: -11.130194664001465

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019969160202890635
    2. 'def' → logprob: -6.501996994018555
    3. '
' → logprob: -8.501996994018555
    4. ' def' → logprob: -8.751996994018555
    5. '    
' → logprob: -10.126996994018555
    6. ' tokens' → logprob: -10.751996994018555
    7. 'tokens' → logprob: -10.876996994018555
    8. '       ' → logprob: -11.251996994018555
    9. ')' → logprob: -12.376996994018555
    10. 'token' → logprob: -12.376996994018555

Token 601: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002557949395850301
    2. 'def' → logprob: -7.377557754516602
    3. ' pos' → logprob: -7.752557754516602
    4. ' def' → logprob: -7.877557754516602
    5. ' tokens' → logprob: -8.377557754516602
    6. '    
' → logprob: -8.502557754516602
    7. '       ' → logprob: -8.627557754516602
    8. '    ' → logprob: -9.127557754516602
    9. '
' → logprob: -9.377557754516602
    10. ' i' → logprob: -9.627557754516602

Token 602: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03798043355345726
    2. 'def' → logprob: -3.412980318069458
    3. ' def' → logprob: -7.037980556488037
    4. '       ' → logprob: -7.037980556488037
    5. ' pos' → logprob: -7.287980556488037
    6. 'pos' → logprob: -7.412980556488037
    7. 'tokens' → logprob: -8.287980079650879
    8. 'left' → logprob: -9.162980079650879
    9. 'expr' → logprob: -9.162980079650879
    10. 'token' → logprob: -9.537980079650879

Token 603: ' more' (ID: 945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.654845654964447
    2. 'def' → logprob: -1.4048457145690918
    3. ' def' → logprob: -1.9048457145690918
    4. ' tokens' → logprob: -3.029845714569092
    5. ' while' → logprob: -4.404845714569092
    6. 'tokens' → logprob: -5.029845714569092
    7. ' stack' → logprob: -5.779845714569092
    8. '
' → logprob: -6.029845714569092
    9. 'while' → logprob: -6.404845714569092
    10. ' token' → logprob: -6.404845714569092

Token 604: ' simply' (ID: 6462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1517821103334427
    2. '   ' → logprob: -2.1517820358276367
    3. ' def' → logprob: -4.526782035827637
    4. ' tokens' → logprob: -5.651782035827637
    5. '       ' → logprob: -5.901782035827637
    6. 'tokens' → logprob: -6.151782035827637
    7. '
' → logprob: -6.276782035827637
    8. ' =' → logprob: -7.276782035827637
    9. '_tokens' → logprob: -7.401782035827637
    10. '  ' → logprob: -7.776782035827637

Token 605: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04758848994970322
    2. 'def' → logprob: -3.172588586807251
    3. '
' → logprob: -6.047588348388672
    4. '    
' → logprob: -7.047588348388672
    5. 'tokens' → logprob: -7.797588348388672
    6. ' def' → logprob: -7.922588348388672
    7. 'return' → logprob: -8.797588348388672
    8. ' tokens' → logprob: -9.047588348388672
    9. '       ' → logprob: -9.422588348388672
    10. ',' → logprob: -9.797588348388672

Token 606: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42393746972084045
    2. 'def' → logprob: -1.423937439918518
    3. 'node' → logprob: -3.2989375591278076
    4. 'left' → logprob: -4.0489373207092285
    5. 'return' → logprob: -4.4239373207092285
    6. '       ' → logprob: -4.6739373207092285
    7. 'tree' → logprob: -4.7989373207092285
    8. 'tokens' → logprob: -5.0489373207092285
    9. 'result' → logprob: -5.9239373207092285
    10. 'nodes' → logprob: -6.4239373207092285

Token 607: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10832622647285461
    2. ' def' → logprob: -2.4833261966705322
    3. ' can' → logprob: -4.858326435089111
    4. '   ' → logprob: -4.983326435089111
    5. ' return' → logprob: -6.233326435089111
    6. 'return' → logprob: -6.608326435089111
    7. 'can' → logprob: -8.108325958251953
    8. ' continue' → logprob: -8.983325958251953
    9. ' define' → logprob: -9.358325958251953
    10. 'continue' → logprob: -9.483325958251953

Token 608: ' fully' (ID: 9637)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7316860556602478
    2. 'def' → logprob: -1.2316861152648926
    3. 'left' → logprob: -2.8566861152648926
    4. 'e' → logprob: -3.6066861152648926
    5. 'parse' → logprob: -3.7316861152648926
    6. ' left' → logprob: -3.7316861152648926
    7. ' def' → logprob: -4.106686115264893
    8. 'expr' → logprob: -4.106686115264893
    9. ' parse' → logprob: -4.231686115264893
    10. '_e' → logprob: -5.106686115264893

Token 609: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1301148533821106
    2. 'def' → logprob: -2.255114793777466
    3. ' =' → logprob: -5.255115032196045
    4. '
' → logprob: -6.255115032196045
    5. ' def' → logprob: -6.255115032196045
    6. '()' → logprob: -6.380115032196045
    7. '       ' → logprob: -6.380115032196045
    8. '()
' → logprob: -7.005115032196045
    9. '  ' → logprob: -8.130114555358887
    10. ',' → logprob: -8.130114555358887

Token 610: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07964789122343063
    2. '   ' → logprob: -3.4546477794647217
    3. 'parse' → logprob: -3.7046477794647217
    4. ' def' → logprob: -5.204648017883301
    5. 'expr' → logprob: -6.579648017883301
    6. ' parse' → logprob: -6.829648017883301
    7. 'lambda' → logprob: -6.954648017883301
    8. 'while' → logprob: -7.079648017883301
    9. 'token' → logprob: -7.079648017883301
    10. 'p' → logprob: -7.204648017883301

Token 611: ' since' (ID: 3630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1582111269235611
    2. '<|end|>' → logprob: -2.0332112312316895
    3. '       ' → logprob: -4.9082112312316895
    4. '<|end|>' → logprob: -5.9082112312316895
    5. 'def' → logprob: -6.6582112312316895
    6. 'tokens' → logprob: -6.9082112312316895
    7. ')' → logprob: -7.0332112312316895
    8. ' tokens' → logprob: -7.4082112312316895
    9. '.' → logprob: -8.283210754394531
    10. '...' → logprob: -8.408210754394531

Token 612: ' we' (ID: 581)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3665253818035126
    2. ' parse' → logprob: -2.491525411605835
    3. 'p' → logprob: -2.741525411605835
    4. '   ' → logprob: -3.116525411605835
    5. ' tokens' → logprob: -3.616525411605835
    6. 'parse' → logprob: -3.991525411605835
    7. 'def' → logprob: -4.616525173187256
    8. ' not' → logprob: -4.741525173187256
    9. 'tokens' → logprob: -4.741525173187256
    10. ' return' → logprob: -5.366525173187256

Token 613: ' only' (ID: 1606)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2454061508178711
    2. ' already' → logprob: -3.245406150817871
    3. ' don't' → logprob: -3.370406150817871
    4. ' can' → logprob: -3.370406150817871
    5. 'have' → logprob: -3.495406150817871
    6. ' return' → logprob: -4.370406150817871
    7. 'def' → logprob: -4.870406150817871
    8. ' are' → logprob: -5.120406150817871
    9. ' stopped' → logprob: -5.370406150817871
    10. 'already' → logprob: -5.370406150817871

Token 614: ' need' (ID: 1309)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.4417445659637451
    2. 'have' → logprob: -1.1917445659637451
    3. 'def' → logprob: -4.191744804382324
    4. ' need' → logprob: -4.691744804382324
    5. 'need' → logprob: -4.816744804382324
    6. 'return' → logprob: -5.316744804382324
    7. '   ' → logprob: -5.816744804382324
    8. 'parse' → logprob: -5.941744804382324
    9. ' return' → logprob: -6.066744804382324
    10. ' parse' → logprob: -6.191744804382324

Token 615: ' to' (ID: 316)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.7888289093971252
    2. 'parse' → logprob: -1.0388288497924805
    3. '   ' → logprob: -2.2888288497924805
    4. ' p' → logprob: -3.0388288497924805
    5. 'p' → logprob: -4.0388288497924805
    6. 'expr' → logprob: -4.4138288497924805
    7. '       ' → logprob: -6.0388288497924805
    8. ' expr' → logprob: -6.0388288497924805
    9. 'def' → logprob: -6.6638288497924805
    10. ' tokens' → logprob: -6.7888288497924805

Token 616: ' get' (ID: 717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6642816066741943
    2. 'parse' → logprob: -0.9142816066741943
    3. ' return' → logprob: -4.289281845092773
    4. 'handle' → logprob: -4.289281845092773
    5. ' parse' → logprob: -4.289281845092773
    6. 'def' → logprob: -4.539281845092773
    7. 'call' → logprob: -5.039281845092773
    8. 'token' → logprob: -5.039281845092773
    9. 'implement' → logprob: -5.039281845092773
    10. 'consume' → logprob: -5.539281845092773

Token 617: ' tokens' (ID: 20290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8066716194152832
    2. 'parse' → logprob: -1.9316716194152832
    3. 'expr' → logprob: -2.306671619415283
    4. '   ' → logprob: -2.681671619415283
    5. 'the' → logprob: -2.806671619415283
    6. 'tokens' → logprob: -3.306671619415283
    7. ' p' → logprob: -3.431671619415283
    8. 'e' → logprob: -3.431671619415283
    9. 'node' → logprob: -3.806671619415283
    10. ' the' → logprob: -4.806671619415283

Token 618: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03125366196036339
    2. '<|end|>' → logprob: -3.5312535762786865
    3. '<|end|>' → logprob: -7.406253814697266
    4. 'tokens' → logprob: -7.906253814697266
    5. ' tokens' → logprob: -9.281253814697266
    6. ')' → logprob: -9.281253814697266
    7. '       ' → logprob: -9.406253814697266
    8. 'return' → logprob: -10.031253814697266
    9. '.' → logprob: -10.156253814697266
    10. '    
' → logprob: -10.281253814697266

Token 619: ' then' (ID: 1815)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10195571184158325
    2. 'parse' → logprob: -3.3519556522369385
    3. ' return' → logprob: -3.4769556522369385
    4. 'evaluate' → logprob: -4.351955890655518
    5. 'def' → logprob: -4.851955890655518
    6. '   ' → logprob: -5.851955890655518
    7. ' parse' → logprob: -6.226955890655518
    8. 'build' → logprob: -7.101955890655518
    9. 'node' → logprob: -7.351955890655518
    10. ' evaluate' → logprob: -7.351955890655518

Token 620: ' do' (ID: 621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16844503581523895
    2. ' return' → logprob: -2.543445110321045
    3. '   ' → logprob: -3.793445110321045
    4. 'parse' → logprob: -3.793445110321045
    5. 'def' → logprob: -4.043445110321045
    6. ' parse' → logprob: -4.918445110321045
    7. 'node' → logprob: -6.418445110321045
    8. 'result' → logprob: -6.543445110321045
    9. 'expr' → logprob: -6.793445110321045
    10. 'token' → logprob: -7.543445110321045

Token 621: ' all' (ID: 722)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.9138938784599304
    2. 'return' → logprob: -1.9138939380645752
    3. 'def' → logprob: -2.163893938064575
    4. '   ' → logprob: -2.163893938064575
    5. ' parse' → logprob: -2.663893938064575
    6. 'p' → logprob: -3.538893938064575
    7. 'expr' → logprob: -3.538893938064575
    8. ' return' → logprob: -3.913893938064575
    9. 'the' → logprob: -4.163893699645996
    10. ' full' → logprob: -4.663893699645996

Token 622: ' ways' (ID: 6984)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46266108751296997
    2. 'def' → logprob: -1.0876610279083252
    3. 'return' → logprob: -4.587661266326904
    4. '       ' → logprob: -5.087661266326904
    5. ' return' → logprob: -5.462661266326904
    6. 'tokens' → logprob: -5.587661266326904
    7. ' def' → logprob: -6.087661266326904
    8. ' tokens' → logprob: -6.462661266326904
    9. 'e' → logprob: -7.337661266326904
    10. '_tokens' → logprob: -7.462661266326904

Token 623: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006122179329395294
    2. '<|end|>' → logprob: -5.25612211227417
    3. '       ' → logprob: -8.381122589111328
    4. ')' → logprob: -8.756122589111328
    5. 'def' → logprob: -9.006122589111328
    6. '<|end|>' → logprob: -9.756122589111328
    7. '    ' → logprob: -10.256122589111328
    8. '...' → logprob: -10.381122589111328
    9. ' tokens' → logprob: -10.381122589111328
    10. 'tokens' → logprob: -10.381122589111328

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003070879727602005
    2. '<|end|>' → logprob: -6.003070831298828
    3. '<|end|>' → logprob: -8.628070831298828
    4. 'def' → logprob: -8.628070831298828
    5. ')' → logprob: -9.378070831298828
    6. ' tokens' → logprob: -10.253070831298828
    7. '       ' → logprob: -10.628070831298828
    8. 'tokens' → logprob: -10.878070831298828
    9. '.' → logprob: -11.128070831298828
    10. '    
' → logprob: -11.628070831298828

Token 625: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015752100152894855
    2. 'def' → logprob: -7.251574993133545
    3. '       ' → logprob: -8.251575469970703
    4. 'return' → logprob: -9.001575469970703
    5. ' return' → logprob: -9.126575469970703
    6. 'tokens' → logprob: -9.626575469970703
    7. 'result' → logprob: -10.001575469970703
    8. '
' → logprob: -10.251575469970703
    9. '    
' → logprob: -10.376575469970703
    10. 'token' → logprob: -10.501575469970703

Token 626: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022803494706749916
    2. 'return' → logprob: -4.64780330657959
    3. 'def' → logprob: -5.77280330657959
    4. '       ' → logprob: -5.77280330657959
    5. 'result' → logprob: -6.14780330657959
    6. 'tokens' → logprob: -6.39780330657959
    7. ' return' → logprob: -7.02280330657959
    8. 'token' → logprob: -7.39780330657959
    9. 'node' → logprob: -8.02280330657959
    10. ' tokens' → logprob: -8.64780330657959

Token 627: ' better' (ID: 3432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0040353536605835
    2. 'return' → logprob: -1.1290353536605835
    3. ' return' → logprob: -1.6290353536605835
    4. 'def' → logprob: -2.379035472869873
    5. 'tokens' → logprob: -4.879035472869873
    6. ' tokens' → logprob: -5.504035472869873
    7. 'result' → logprob: -5.879035472869873
    8. ' def' → logprob: -5.879035472869873
    9. ' result' → logprob: -7.129035472869873
    10. '#' → logprob: -7.754035472869873

Token 628: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22772781550884247
    2. '   ' → logprob: -1.6027277708053589
    3. 'return' → logprob: -6.852727890014648
    4. ' def' → logprob: -7.852727890014648
    5. '    
' → logprob: -8.227727890014648
    6. '
' → logprob: -8.852727890014648
    7. '       ' → logprob: -9.477727890014648
    8. 'tokens' → logprob: -9.727727890014648
    9. ' return' → logprob: -9.977727890014648
    10. '    ' → logprob: -10.102727890014648

Token 629: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011529576033353806
    2. '   ' → logprob: -4.761529445648193
    3. ' def' → logprob: -6.386529445648193
    4. 'tokens' → logprob: -7.636529445648193
    5. 'return' → logprob: -7.886529445648193
    6. '#' → logprob: -9.261529922485352
    7. 'class' → logprob: -9.511529922485352
    8. '
' → logprob: -10.011529922485352
    9. 'stack' → logprob: -10.261529922485352
    10. ' tokens' → logprob: -10.511529922485352

Token 630: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.641786515712738
    2. '_e' → logprob: -1.2667865753173828
    3. '   ' → logprob: -2.516786575317383
    4. '_expr' → logprob: -3.516786575317383
    5. 'tokens' → logprob: -3.641786575317383
    6. 'e' → logprob: -4.016786575317383
    7. 'expr' → logprob: -4.266786575317383
    8. ' =' → logprob: -5.891786575317383
    9. '_expression' → logprob: -6.016786575317383
    10. '_tokens' → logprob: -6.141786575317383

Token 631: ' abstract' (ID: 13004)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7231112122535706
    2. 'parse' → logprob: -1.2231111526489258
    3. '   ' → logprob: -1.8481111526489258
    4. 'p' → logprob: -3.723111152648926
    5. 'expr' → logprob: -4.598111152648926
    6. ' parse' → logprob: -4.973111152648926
    7. ' p' → logprob: -5.223111152648926
    8. ' def' → logprob: -5.723111152648926
    9. 'left' → logprob: -5.723111152648926
    10. 'e' → logprob: -5.848111152648926

Token 632: ' syntax' (ID: 45440)
  Prédit: 'syntax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'syntax' → logprob: -0.006733130197972059
    2. '_s' → logprob: -5.506732940673828
    3. ' syntax' → logprob: -7.006732940673828
    4. 'tree' → logprob: -7.756732940673828
    5. '_' → logprob: -8.131732940673828
    6. 'def' → logprob: -8.381732940673828
    7. 'Syntax' → logprob: -8.631732940673828
    8. '_tree' → logprob: -8.631732940673828
    9. 'expr' → logprob: -9.256732940673828
    10. '   ' → logprob: -9.631732940673828

Token 633: ' tree' (ID: 8165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.357577383518219
    2. '_tree' → logprob: -1.6075773239135742
    3. ')' → logprob: -2.982577323913574
    4. '_node' → logprob: -4.232577323913574
    5. '):' → logprob: -4.982577323913574
    6. 'def' → logprob: -5.482577323913574
    7. '_' → logprob: -5.732577323913574
    8. '  ' → logprob: -5.982577323913574
    9. '):
' → logprob: -6.482577323913574
    10. '    ' → logprob: -6.607577323913574

Token 634: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07251769304275513
    2. 'def' → logprob: -3.0725176334381104
    3. '<|end|>' → logprob: -3.8225176334381104
    4. '       ' → logprob: -7.3225178718566895
    5. '<|end|>' → logprob: -8.197517395019531
    6. ')' → logprob: -8.197517395019531
    7. 'tokens' → logprob: -8.947517395019531
    8. '...' → logprob: -9.572517395019531
    9. '.' → logprob: -10.197517395019531
    10. 'import' → logprob: -10.197517395019531

Token 635: ' full' (ID: 3149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11598114669322968
    2. 'preced' → logprob: -2.490981101989746
    3. 'left' → logprob: -4.115981101989746
    4. 'parse' → logprob: -6.240981101989746
    5. 'a' → logprob: -6.240981101989746
    6. '   ' → logprob: -6.365981101989746
    7. 'expr' → logprob: -7.365981101989746
    8. 'full' → logprob: -7.490981101989746
    9. ' precedence' → logprob: -7.740981101989746
    10. 'prec' → logprob: -7.990981101989746

Token 636: ' brackets' (ID: 73008)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31566107273101807
    2. '_expr' → logprob: -2.3156609535217285
    3. 'expr' → logprob: -2.6906609535217285
    4. '   ' → logprob: -3.3156609535217285
    5. '()' → logprob: -3.4406609535217285
    6. ')' → logprob: -3.9406609535217285
    7. ' def' → logprob: -5.6906609535217285
    8. 'e' → logprob: -6.3156609535217285
    9. '())' → logprob: -6.6906609535217285
    10. 'token' → logprob: -7.1906609535217285

Token 637: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05330799147486687
    2. 'def' → logprob: -3.1783080101013184
    3. '<|end|>' → logprob: -4.678308010101318
    4. '<|end|>' → logprob: -8.55330753326416
    5. 'tokens' → logprob: -8.67830753326416
    6. '
' → logprob: -8.80330753326416
    7. ')' → logprob: -9.55330753326416
    8. 'return' → logprob: -9.92830753326416
    9. '#' → logprob: -9.92830753326416
    10. '    
' → logprob: -10.05330753326416

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007788678165525198
    2. 'def' → logprob: -5.50778865814209
    3. '       ' → logprob: -6.38278865814209
    4. '<|end|>' → logprob: -6.50778865814209
    5. ')' → logprob: -9.13278865814209
    6. 'return' → logprob: -9.38278865814209
    7. ' def' → logprob: -10.00778865814209
    8. '<|end|>' → logprob: -10.13278865814209
    9. ' return' → logprob: -10.25778865814209
    10. 'tokens' → logprob: -10.25778865814209

Token 639: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040314484387636185
    2. 'def' → logprob: -3.2903144359588623
    3. '       ' → logprob: -7.040314674377441
    4. ' def' → logprob: -8.040314674377441
    5. '
' → logprob: -8.165314674377441
    6. 'tokens' → logprob: -8.290314674377441
    7. ' tokens' → logprob: -9.040314674377441
    8. 'token' → logprob: -9.540314674377441
    9. '    
' → logprob: -9.540314674377441
    10. 'return' → logprob: -9.540314674377441

Token 640: ' Here' (ID: 7306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03838329762220383
    2. '       ' → logprob: -3.7883832454681396
    3. 'def' → logprob: -4.413383483886719
    4. 'tokens' → logprob: -6.538383483886719
    5. ' tokens' → logprob: -8.288383483886719
    6. 'token' → logprob: -8.538383483886719
    7. 'pass' → logprob: -8.538383483886719
    8. 'return' → logprob: -8.538383483886719
    9. '<|end|>' → logprob: -9.413383483886719
    10. ' pass' → logprob: -9.538383483886719

Token 641: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05740508437156677
    2. '       ' → logprob: -3.6824049949645996
    3. 'def' → logprob: -4.0574049949646
    4. 'return' → logprob: -5.6824049949646
    5. 'tokens' → logprob: -6.1824049949646
    6. '<|end|>' → logprob: -6.5574049949646
    7. ',' → logprob: -7.0574049949646
    8. ' return' → logprob: -7.0574049949646
    9. '<|end|>' → logprob: -7.4324049949646
    10. '    ' → logprob: -7.5574049949646

Token 642: ' because' (ID: 2236)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9390570521354675
    2. '   ' → logprob: -1.3140571117401123
    3. 'return' → logprob: -1.4390571117401123
    4. ' return' → logprob: -3.0640571117401123
    5. '       ' → logprob: -4.314056873321533
    6. '#' → logprob: -4.564056873321533
    7. ' def' → logprob: -4.689056873321533
    8. 'result' → logprob: -4.939056873321533
    9. 'node' → logprob: -5.814056873321533
    10. 'tokens' → logprob: -6.064056873321533

Token 643: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6929775476455688
    2. ' p' → logprob: -2.4429774284362793
    3. ' not' → logprob: -2.5679774284362793
    4. '   ' → logprob: -2.6929774284362793
    5. 'p' → logprob: -2.9429774284362793
    6. ' the' → logprob: -3.4429774284362793
    7. ' tokens' → logprob: -3.6929774284362793
    8. ' def' → logprob: -4.067977428436279
    9. 'the' → logprob: -4.317977428436279
    10. 'parse' → logprob: -4.442977428436279

Token 644: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.320553183555603
    2. 'def' → logprob: -1.320553183555603
    3. ':' → logprob: -1.695553183555603
    4. ')' → logprob: -2.9455533027648926
    5. ' is' → logprob: -3.4455533027648926
    6. ' continues' → logprob: -3.4455533027648926
    7. '<|end|>' → logprob: -3.5705533027648926
    8. '):' → logprob: -4.070553302764893
    9. '<|end|>' → logprob: -4.070553302764893
    10. '=' → logprob: -4.195553302764893

Token 645: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5338964462280273
    2. '   ' → logprob: -1.6588964462280273
    3. '...' → logprob: -2.1588964462280273
    4. 'def' → logprob: -2.1588964462280273
    5. '<|end|>' → logprob: -2.1588964462280273
    6. '<|end|>' → logprob: -2.7838964462280273
    7. 'return' → logprob: -3.0338964462280273
    8. ' return' → logprob: -3.6588964462280273
    9. '#' → logprob: -3.7838964462280273
    10. 'pass' → logprob: -4.283896446228027

Token 646: ' conforms' (ID: 198642)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3481603860855103
    2. 'def' → logprob: -1.3481603860855103
    3. '   ' → logprob: -1.9731603860855103
    4. ')' → logprob: -2.0981602668762207
    5. '<|end|>' → logprob: -2.5981602668762207
    6. '):' → logprob: -3.3481602668762207
    7. '<|end|>' → logprob: -3.7231602668762207
    8. ' =' → logprob: -4.348160266876221
    9. ',' → logprob: -4.598160266876221
    10. '=' → logprob: -5.223160266876221

Token 647: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.219728484749794
    2. ',' → logprob: -2.469728469848633
    3. ' to' → logprob: -3.219728469848633
    4. '       ' → logprob: -3.344728469848633
    5. 'def' → logprob: -3.844728469848633
    6. '<|end|>' → logprob: -4.844728469848633
    7. ')' → logprob: -5.844728469848633
    8. '<|end|>' → logprob: -6.469728469848633
    9. ':' → logprob: -7.344728469848633
    10. 'to' → logprob: -7.594728469848633

Token 648: ' grammar' (ID: 41735)
  Prédit: 'grammar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grammar' → logprob: -0.22159017622470856
    2. 'the' → logprob: -1.7215901613235474
    3. ' grammar' → logprob: -4.471590042114258
    4. ' the' → logprob: -6.096590042114258
    5. 'expr' → logprob: -6.721590042114258
    6. 'a' → logprob: -7.471590042114258
    7. 'correct' → logprob: -7.596590042114258
    8. 'full' → logprob: -7.596590042114258
    9. 'standard' → logprob: -8.221590042114258
    10. 'EOF' → logprob: -8.346590042114258

Token 649: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00780890416353941
    2. '<|end|>' → logprob: -5.632808685302734
    3. 'def' → logprob: -5.757808685302734
    4. '       ' → logprob: -7.507808685302734
    5. 'return' → logprob: -8.382808685302734
    6. '<|end|>' → logprob: -10.007808685302734
    7. ' return' → logprob: -10.132808685302734
    8. 'tokens' → logprob: -10.132808685302734
    9. ')' → logprob: -10.507808685302734
    10. 'token' → logprob: -10.632808685302734

Token 650: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2362358719110489
    2. '   ' → logprob: -1.6112358570098877
    3. ' return' → logprob: -5.611236095428467
    4. 'return' → logprob: -5.736236095428467
    5. 'def' → logprob: -6.111236095428467
    6. '<|end|>' → logprob: -7.361236095428467
    7. ' tokens' → logprob: -8.861235618591309
    8. 'tokens' → logprob: -8.861235618591309
    9. '    ' → logprob: -9.111235618591309
    10. ' pass' → logprob: -9.236235618591309

Token 651: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.242587924003601
    2. ' is' → logprob: -1.867587924003601
    3. '#' → logprob: -1.992587924003601
    4. ' ends' → logprob: -2.1175880432128906
    5. 'def' → logprob: -3.3675880432128906
    6. ' means' → logprob: -3.4925880432128906
    7. ' can' → logprob: -3.4925880432128906
    8. 'is' → logprob: -3.7425880432128906
    9. ')' → logprob: -3.7425880432128906
    10. ' only' → logprob: -4.242588043212891

Token 652: ' fully' (ID: 9637)
  Prédit: 'fully'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fully' → logprob: -0.42119309306144714
    2. ' fully' → logprob: -2.2961931228637695
    3. '   ' → logprob: -2.9211931228637695
    4. 'expr' → logprob: -3.4211931228637695
    5. 'left' → logprob: -3.9211931228637695
    6. '(
' → logprob: -4.5461931228637695
    7. '       ' → logprob: -4.5461931228637695
    8. 'a' → logprob: -4.9211931228637695
    9. 'num' → logprob: -5.0461931228637695
    10. '(expr' → logprob: -5.0461931228637695

Token 653: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.042453665286302567
    2. 'parsed' → logprob: -3.4174537658691406
    3. ' parent' → logprob: -5.667453765869141
    4. 'defined' → logprob: -6.167453765869141
    5. 'balanced' → logprob: -7.917453765869141
    6. 'paren' → logprob: -8.04245376586914
    7. 'token' → logprob: -8.04245376586914
    8. '_parent' → logprob: -8.16745376586914
    9. 'fully' → logprob: -8.41745376586914
    10. 'br' → logprob: -8.41745376586914

Token 654: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.04762304946780205
    2. 'esized' → logprob: -4.047623157501221
    3. 'heses' → logprob: -4.797623157501221
    4. ')' → logprob: -4.797623157501221
    5. 'h' → logprob: -6.047623157501221
    6. '```' → logprob: -6.422623157501221
    7. 'es' → logprob: -6.422623157501221
    8. 'def' → logprob: -6.672623157501221
    9. 'he' → logprob: -6.797623157501221
    10. '   ' → logprob: -7.297623157501221

Token 655: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.057655949145555496
    2. 'esized' → logprob: -3.5576560497283936
    3. 'zed' → logprob: -4.1826558113098145
    4. ')' → logprob: -4.9326558113098145
    5. 'es' → logprob: -5.9326558113098145
    6. '   ' → logprob: -7.4326558113098145
    7. '()' → logprob: -8.182656288146973
    8. ')
' → logprob: -8.932656288146973
    9. 'azed' → logprob: -8.932656288146973
    10. '('' → logprob: -9.307656288146973

Token 656: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024378227069973946
    2. '<|end|>' → logprob: -3.8993782997131348
    3. ')' → logprob: -6.774378299713135
    4. 'def' → logprob: -6.899378299713135
    5. '<|end|>' → logprob: -7.649378299713135
    6. ',' → logprob: -8.149377822875977
    7. '       ' → logprob: -8.774377822875977
    8. '
' → logprob: -8.774377822875977
    9. 'return' → logprob: -8.899377822875977
    10. '.' → logprob: -9.024377822875977

Token 657: ' may' (ID: 1340)
  Prédit: ' fully'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fully' → logprob: -1.834989070892334
    2. 'fully' → logprob: -2.584989070892334
    3. ' tokens' → logprob: -2.709989070892334
    4. ' token' → logprob: -2.709989070892334
    5. 'token' → logprob: -3.209989070892334
    6. ' valid' → logprob: -3.459989070892334
    7. 'tokens' → logprob: -3.459989070892334
    8. ' well' → logprob: -3.709989070892334
    9. ' left' → logprob: -3.709989070892334
    10. ' only' → logprob: -3.709989070892334

Token 658: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6960377097129822
    2. 'def' → logprob: -2.196037769317627
    3. ')' → logprob: -2.446037769317627
    4. '   ' → logprob: -2.696037769317627
    5. 'return' → logprob: -3.321037769317627
    6. 'continue' → logprob: -3.321037769317627
    7. ' is' → logprob: -3.571037769317627
    8. ' not' → logprob: -3.571037769317627
    9. ' return' → logprob: -3.821037769317627
    10. ' be' → logprob: -4.321037769317627

Token 659: ' be' (ID: 413)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04557913914322853
    2. 'def' → logprob: -4.045578956604004
    3. '<|end|>' → logprob: -4.045578956604004
    4. '<|end|>' → logprob: -6.045578956604004
    5. ')' → logprob: -6.420578956604004
    6. 'return' → logprob: -6.795578956604004
    7. ',' → logprob: -7.170578956604004
    8. '       ' → logprob: -7.420578956604004
    9. ' return' → logprob: -7.670578956604004
    10. 'tokens' → logprob: -8.045578956604004

Token 660: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014547285623848438
    2. '       ' → logprob: -4.764547348022461
    3. 'def' → logprob: -5.639547348022461
    4. '<|end|>' → logprob: -6.639547348022461
    5. ')' → logprob: -8.389547348022461
    6. 'return' → logprob: -9.014547348022461
    7. '<|end|>' → logprob: -9.264547348022461
    8. '    
' → logprob: -9.389547348022461
    9. ',' → logprob: -9.514547348022461
    10. 'tokens' → logprob: -9.889547348022461

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003387668402865529
    2. '       ' → logprob: -6.253387451171875
    3. 'def' → logprob: -7.128387451171875
    4. '<|end|>' → logprob: -7.878387451171875
    5. '...' → logprob: -9.628387451171875
    6. '#' → logprob: -9.878387451171875
    7. ')' → logprob: -10.878387451171875
    8. 'pass' → logprob: -10.878387451171875
    9. 'tokens' → logprob: -10.878387451171875
    10. '<|end|>' → logprob: -10.878387451171875

Token 662: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019361276645213366
    2. 'def' → logprob: -6.501935958862305
    3. '       ' → logprob: -8.876935958862305
    4. '<|end|>' → logprob: -9.126935958862305
    5. ' def' → logprob: -10.001935958862305
    6. '    
' → logprob: -10.126935958862305
    7. ')' → logprob: -10.501935958862305
    8. '
' → logprob: -11.126935958862305
    9. '<|end|>' → logprob: -11.751935958862305
    10. 'tokens' → logprob: -11.876935958862305

Token 663: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0066644540056586266
    2. 'def' → logprob: -5.506664276123047
    3. '       ' → logprob: -6.131664276123047
    4. '    
' → logprob: -9.006664276123047
    5. '
' → logprob: -9.381664276123047
    6. ' def' → logprob: -9.381664276123047
    7. 'tokens' → logprob: -10.881664276123047
    8. ')' → logprob: -11.381664276123047
    9. ' tokens' → logprob: -11.506664276123047
    10. 'return' → logprob: -11.881664276123047

Token 664: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27338457107543945
    2. 'return' → logprob: -2.1483845710754395
    3. '   ' → logprob: -3.0233845710754395
    4. ' return' → logprob: -3.7733845710754395
    5. 'result' → logprob: -3.7733845710754395
    6. ' def' → logprob: -4.5233845710754395
    7. ' result' → logprob: -5.2733845710754395
    8. 'while' → logprob: -6.0233845710754395
    9. 'node' → logprob: -6.3983845710754395
    10. 'res' → logprob: -6.6483845710754395

Token 665: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9884476065635681
    2. 'def' → logprob: -1.863447666168213
    3. '   ' → logprob: -1.988447666168213
    4. ' =' → logprob: -1.988447666168213
    5. '=' → logprob: -2.738447666168213
    6. ' is' → logprob: -3.113447666168213
    7. ')' → logprob: -3.488447666168213
    8. '):' → logprob: -4.863447666168213
    9. ' def' → logprob: -4.988447666168213
    10. ' continues' → logprob: -5.363447666168213

Token 666: ' ambiguous' (ID: 123648)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1398789882659912
    2. '   ' → logprob: -2.639878988265991
    3. ' def' → logprob: -3.139878988265991
    4. ' unfinished' → logprob: -5.51487922668457
    5. ' not' → logprob: -6.63987922668457
    6. ')' → logprob: -6.76487922668457
    7. ' parse' → logprob: -6.76487922668457
    8. ' incomplete' → logprob: -7.01487922668457
    9. '<|end|>' → logprob: -7.01487922668457
    10. 'parse' → logprob: -7.38987922668457

Token 667: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030539214611053467
    2. '<|end|>' → logprob: -3.7805392742156982
    3. '<|end|>' → logprob: -5.780539035797119
    4. 'def' → logprob: -6.155539035797119
    5. '
' → logprob: -7.530539035797119
    6. ')' → logprob: -7.530539035797119
    7. ',' → logprob: -8.405539512634277
    8. '    
' → logprob: -8.905539512634277
    9. ' def' → logprob: -9.280539512634277
    10. '...' → logprob: -9.655539512634277

Token 668: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003358324058353901
    2. '<|end|>' → logprob: -6.128358364105225
    3. ' tokens' → logprob: -8.503357887268066
    4. 'def' → logprob: -8.753357887268066
    5. '...' → logprob: -9.128357887268066
    6. 'tokens' → logprob: -9.253357887268066
    7. '<|end|>' → logprob: -9.253357887268066
    8. '    
' → logprob: -9.253357887268066
    9. '       ' → logprob: -9.378357887268066
    10. ')' → logprob: -9.503357887268066

Token 669: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590120732784271
    2. 'def' → logprob: -2.50901198387146
    3. '       ' → logprob: -2.63401198387146
    4. ' return' → logprob: -3.88401198387146
    5. 'return' → logprob: -4.134012222290039
    6. ' while' → logprob: -5.009012222290039
    7. ' tokens' → logprob: -5.134012222290039
    8. '#' → logprob: -5.259012222290039
    9. ' def' → logprob: -5.384012222290039
    10. 'while' → logprob: -5.884012222290039

Token 670: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3975401520729065
    2. ' return' → logprob: -1.7725400924682617
    3. '   ' → logprob: -2.1475400924682617
    4. 'def' → logprob: -3.5225400924682617
    5. 'result' → logprob: -6.147540092468262
    6. 'parse' → logprob: -6.522540092468262
    7. 'res' → logprob: -6.897540092468262
    8. '       ' → logprob: -7.022540092468262
    9. ' parse' → logprob: -7.022540092468262
    10. ' def' → logprob: -7.022540092468262

Token 671: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22768841683864594
    2. '   ' → logprob: -1.8526884317398071
    3. '<|end|>' → logprob: -4.602688312530518
    4. ' parse' → logprob: -4.977688312530518
    5. 'def' → logprob: -5.102688312530518
    6. 'parse' → logprob: -5.477688312530518
    7. '<|end|>' → logprob: -5.602688312530518
    8. 'return' → logprob: -5.977688312530518
    9. ' return' → logprob: -6.352688312530518
    10. '()' → logprob: -6.352688312530518

Token 672: 'most' (ID: 5309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5355380773544312
    2. '()' → logprob: -1.2855380773544312
    3. ')' → logprob: -3.6605381965637207
    4. 'return' → logprob: -3.6605381965637207
    5. 'def' → logprob: -3.9105381965637207
    6. '       ' → logprob: -4.160538196563721
    7. ' =' → logprob: -4.410538196563721
    8. 'paren' → logprob: -4.660538196563721
    9. '    ' → logprob: -5.285538196563721
    10. '=' → logprob: -5.660538196563721

Token 673: ' unit' (ID: 7670)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4980229437351227
    2. '()' → logprob: -1.6230229139328003
    3. '       ' → logprob: -2.62302303314209
    4. 'def' → logprob: -2.99802303314209
    5. '():' → logprob: -3.62302303314209
    6. ':' → logprob: -3.99802303314209
    7. '()
' → logprob: -5.37302303314209
    8. ' =' → logprob: -5.87302303314209
    9. ')' → logprob: -6.12302303314209
    10. '():
' → logprob: -6.24802303314209

Token 674: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2552576959133148
    2. ' then' → logprob: -2.1302576065063477
    3. ' and' → logprob: -3.2552576065063477
    4. '<|end|>' → logprob: -3.8802576065063477
    5. '   ' → logprob: -4.130257606506348
    6. ' return' → logprob: -5.005257606506348
    7. ' tokens' → logprob: -5.380257606506348
    8. '           ' → logprob: -5.755257606506348
    9. ')' → logprob: -6.005257606506348
    10. 'return' → logprob: -6.255257606506348

Token 676: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6513795852661133
    2. ' while' → logprob: -0.9013795852661133
    3. ' if' → logprob: -3.9013795852661133
    4. '   ' → logprob: -4.026379585266113
    5. 'if' → logprob: -4.026379585266113
    6. '       ' → logprob: -4.401379585266113
    7. '           ' → logprob: -5.901379585266113
    8. ' return' → logprob: -7.776379585266113
    9. ' rest' → logprob: -8.276379585266113
    10. 'return' → logprob: -8.276379585266113

Token 677: ' operator' (ID: 11019)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2813810706138611
    2. 'p' → logprob: -1.4063811302185059
    3. 'op' → logprob: -9.531380653381348
    4. ' not' → logprob: -9.906380653381348
    5. '(p' → logprob: -10.031380653381348
    6. '   ' → logprob: -10.781380653381348
    7. 'not' → logprob: -11.781380653381348
    8. ' ' → logprob: -11.781380653381348
    9. ' op' → logprob: -12.531380653381348
    10. ' ' → logprob: -12.531380653381348

Token 678: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08341588079929352
    2. ':' → logprob: -3.583415985107422
    3. ':
' → logprob: -3.958415985107422
    4. ',' → logprob: -4.208415985107422
    5. ' in' → logprob: -4.958415985107422
    6. 'and' → logprob: -5.458415985107422
    7. ' is' → logprob: -6.708415985107422
    8. ' =' → logprob: -6.833415985107422
    9. '           ' → logprob: -7.208415985107422
    10. '   ' → logprob: -7.708415985107422

Token 679: ' parse' (ID: 8420)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.9365403056144714
    2. '       ' → logprob: -1.3115403652191162
    3. ' left' → logprob: -2.061540365219116
    4. ' return' → logprob: -2.186540365219116
    5. ' op' → logprob: -3.436540365219116
    6. '           ' → logprob: -3.811540365219116
    7. 'right' → logprob: -4.436540126800537
    8. 'return' → logprob: -5.311540126800537
    9. 'left' → logprob: -5.436540126800537
    10. ' next' → logprob: -5.436540126800537

Token 680: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.8824200630187988
    2. ' next' → logprob: -0.8824200630187988
    3. 'right' → logprob: -2.507420063018799
    4. 'next' → logprob: -3.382420063018799
    5. ' another' → logprob: -4.132420063018799
    6. ' the' → logprob: -4.632420063018799
    7. 'another' → logprob: -5.507420063018799
    8. ' more' → logprob: -5.632420063018799
    9. 'expr' → logprob: -5.632420063018799
    10. '   ' → logprob: -5.757420063018799

Token 681: ' recursively' (ID: 130266)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02502034418284893
    2. '()' → logprob: -4.525020122528076
    3. '   ' → logprob: -5.400020122528076
    4. '()
' → logprob: -5.900020122528076
    5. '           ' → logprob: -5.900020122528076
    6. 'return' → logprob: -6.900020122528076
    7. ',' → logprob: -7.275020122528076
    8. 'def' → logprob: -7.400020122528076
    9. ')' → logprob: -8.400020599365234
    10. '(' → logprob: -8.400020599365234

Token 682: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2890796661376953
    2. '   ' → logprob: -1.4140796661376953
    3. '<|end|>' → logprob: -5.289079666137695
    4. '<|end|>' → logprob: -7.164079666137695
    5. '()' → logprob: -7.789079666137695
    6. 'def' → logprob: -8.039079666137695
    7. '           ' → logprob: -8.414079666137695
    8. ')' → logprob: -8.539079666137695
    9. ',' → logprob: -8.789079666137695
    10. 'tokens' → logprob: -9.164079666137695

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016292184591293335
    2. '       ' → logprob: -4.141292095184326
    3. 'def' → logprob: -9.016292572021484
    4. 'return' → logprob: -9.516292572021484
    5. 'tokens' → logprob: -11.141292572021484
    6. '    
' → logprob: -11.391292572021484
    7. '<|end|>' → logprob: -11.891292572021484
    8. 'token' → logprob: -12.016292572021484
    9. ' return' → logprob: -12.266292572021484
    10. 'result' → logprob: -12.391292572021484

Token 684: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09221762418746948
    2. '       ' → logprob: -2.4672176837921143
    3. 'return' → logprob: -6.092217445373535
    4. 'def' → logprob: -7.342217445373535
    5. ' return' → logprob: -9.342217445373535
    6. 'result' → logprob: -9.592217445373535
    7. 'tokens' → logprob: -9.592217445373535
    8. 'token' → logprob: -10.217217445373535
    9. '    
' → logprob: -10.342217445373535
    10. '<|end|>' → logprob: -11.342217445373535

Token 685: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23790735006332397
    2. '   ' → logprob: -2.2379074096679688
    3. 'def' → logprob: -2.6129074096679688
    4. 'return' → logprob: -4.112907409667969
    5. 'left' → logprob: -4.987907409667969
    6. 'node' → logprob: -5.487907409667969
    7. 'token' → logprob: -5.862907409667969
    8. 'result' → logprob: -8.112907409667969
    9. 'expr' → logprob: -8.237907409667969
    10. '           ' → logprob: -8.737907409667969

Token 686: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8367243409156799
    2. 'def' → logprob: -1.2117242813110352
    3. 'return' → logprob: -2.086724281311035
    4. 'continue' → logprob: -2.586724281311035
    5. 'pos' → logprob: -3.836724281311035
    6. ' return' → logprob: -4.211724281311035
    7. '       ' → logprob: -4.586724281311035
    8. ' continue' → logprob: -5.211724281311035
    9. ' can' → logprob: -5.586724281311035
    10. 'can' → logprob: -6.336724281311035

Token 687: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4749855101108551
    2. '   ' → logprob: -2.0999855995178223
    3. 'continue' → logprob: -2.2249855995178223
    4. 'return' → logprob: -3.2249855995178223
    5. ' continue' → logprob: -3.2249855995178223
    6. 'def' → logprob: -3.4749855995178223
    7. ' return' → logprob: -3.8499855995178223
    8. 'parse' → logprob: -5.849985599517822
    9. ' parse' → logprob: -5.974985599517822
    10. '           ' → logprob: -6.724985599517822

Token 688: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.342162847518921
    2. 'left' → logprob: -1.717162847518921
    3. '       ' → logprob: -1.967162847518921
    4. ' left' → logprob: -2.092162847518921
    5. 'return' → logprob: -2.217162847518921
    6. 'def' → logprob: -2.467162847518921
    7. ' return' → logprob: -2.967162847518921
    8. 'parse' → logprob: -4.2171630859375
    9. ' parse' → logprob: -4.4671630859375
    10. 'continue' → logprob: -5.0921630859375

Token 689: ' tokens' (ID: 20290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6607362031936646
    2. '       ' → logprob: -2.160736083984375
    3. '_e' → logprob: -2.285736083984375
    4. 'parse' → logprob: -3.285736083984375
    5. '()' → logprob: -3.410736083984375
    6. 'left' → logprob: -3.535736083984375
    7. 'expr' → logprob: -3.535736083984375
    8. '(parse' → logprob: -3.660736083984375
    9. ' parse' → logprob: -3.785736083984375
    10. '(p' → logprob: -4.160736083984375

Token 690: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024329714477062225
    2. '<|end|>' → logprob: -4.524329662322998
    3. '       ' → logprob: -4.774329662322998
    4. '<|end|>' → logprob: -6.274329662322998
    5. 'def' → logprob: -7.024329662322998
    6. 'tokens' → logprob: -7.274329662322998
    7. 'return' → logprob: -7.899329662322998
    8. 'token' → logprob: -8.274330139160156
    9. '    
' → logprob: -9.399330139160156
    10. '()' → logprob: -9.399330139160156

Token 691: ' AST' (ID: 41607)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5113425254821777
    2. 'expr' → logprob: -2.0113425254821777
    3. '('' → logprob: -2.5113425254821777
    4. 'an' → logprob: -2.8863425254821777
    5. 'tree' → logprob: -3.3863425254821777
    6. 'ast' → logprob: -3.6363425254821777
    7. 'parse' → logprob: -3.6363425254821777
    8. 'the' → logprob: -4.761342525482178
    9. 'AST' → logprob: -4.886342525482178
    10. 'full' → logprob: -5.386342525482178

Token 692: ' properly' (ID: 13425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017050813883543015
    2. 'def' → logprob: -4.392050743103027
    3. 'tokens' → logprob: -6.642050743103027
    4. 'return' → logprob: -6.892050743103027
    5. '       ' → logprob: -7.267050743103027
    6. '<|end|>' → logprob: -7.892050743103027
    7. '
' → logprob: -8.142050743103027
    8. 'token' → logprob: -8.392050743103027
    9. '    
' → logprob: -8.642050743103027
    10. '<|end|>' → logprob: -9.392050743103027

Token 693: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038888752460479736
    2. '       ' → logprob: -3.413888692855835
    3. 'def' → logprob: -5.663888931274414
    4. '<|end|>' → logprob: -7.163888931274414
    5. ' tokens' → logprob: -8.663888931274414
    6. 'tokens' → logprob: -8.788888931274414
    7. ')' → logprob: -9.038888931274414
    8. '<|end|>' → logprob: -9.163888931274414
    9. '    
' → logprob: -9.538888931274414
    10. ',' → logprob: -9.663888931274414

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037342836149036884
    2. '       ' → logprob: -5.878734111785889
    3. 'def' → logprob: -7.128734111785889
    4. '    
' → logprob: -10.378734588623047
    5. '
' → logprob: -10.628734588623047
    6. 'tokens' → logprob: -10.628734588623047
    7. '<|end|>' → logprob: -11.628734588623047
    8. '```' → logprob: -11.878734588623047
    9. '#' → logprob: -12.128734588623047
    10. 'token' → logprob: -12.253734588623047

Token 695: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028847284615039825
    2. 'def' → logprob: -4.2788472175598145
    3. 'return' → logprob: -4.2788472175598145
    4. 'node' → logprob: -8.028847694396973
    5. '       ' → logprob: -9.403847694396973
    6. 'token' → logprob: -9.903847694396973
    7. 'result' → logprob: -9.903847694396973
    8. 'tokens' → logprob: -10.028847694396973
    9. 'left' → logprob: -10.403847694396973
    10. '#' (adapté à ' #') → logprob: -10.653847694396973

Token 696: ' Alternative' (ID: 52728)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006570177152752876
    2. 'def' → logprob: -5.506570339202881
    3. ' pos' → logprob: -7.006570339202881
    4. ' def' → logprob: -7.506570339202881
    5. ' i' → logprob: -8.381569862365723
    6. 'pos' → logprob: -8.756569862365723
    7. ' tokens' → logprob: -8.881569862365723
    8. 'tokens' → logprob: -8.881569862365723
    9. '       ' → logprob: -9.131569862365723
    10. 'i' → logprob: -9.381569862365723

Token 697: ' approach' (ID: 7139)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15550458431243896
    2. '   ' → logprob: -2.0305047035217285
    3. ' def' → logprob: -4.5305047035217285
    4. ':' → logprob: -7.5305047035217285
    5. '
' → logprob: -8.40550422668457
    6. 'tokens' → logprob: -8.65550422668457
    7. '    
' → logprob: -9.03050422668457
    8. ' tokens' → logprob: -9.15550422668457
    9. ',' → logprob: -9.28050422668457
    10. '#' → logprob: -9.53050422668457

Token 698: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06434090435504913
    2. 'def' → logprob: -2.814340829849243
    3. ' def' → logprob: -6.939341068267822
    4. '    
' → logprob: -7.939341068267822
    5. '
' → logprob: -8.439340591430664
    6. 'tokens' → logprob: -8.439340591430664
    7. ' tokens' → logprob: -8.689340591430664
    8. ':' → logprob: -9.939340591430664
    9. '<|end|>' → logprob: -10.064340591430664
    10. 'from' → logprob: -10.189340591430664

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04617210850119591
    2. 'def' → logprob: -3.2961721420288086
    3. ' def' → logprob: -4.921172142028809
    4. '
' → logprob: -7.921172142028809
    5. ' pos' → logprob: -8.671172142028809
    6. ' tokens' → logprob: -9.671172142028809
    7. '    
' → logprob: -9.921172142028809
    8. '#' → logprob: -10.171172142028809
    9. ' i' → logprob: -10.546172142028809
    10. '```' → logprob: -11.171172142028809

Token 700: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.64336097240448
    2. '   ' → logprob: -0.76836097240448
    3. ' def' → logprob: -4.6433610916137695
    4. 'pos' → logprob: -8.26836109161377
    5. 'tokens' → logprob: -8.64336109161377
    6. ' pos' → logprob: -9.01836109161377
    7. 'stack' → logprob: -9.76836109161377
    8. '
' → logprob: -9.76836109161377
    9. '       ' → logprob: -9.89336109161377
    10. 'return' → logprob: -9.89336109161377

Token 701: ' Since' (ID: 12265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11729222536087036
    2. '   ' → logprob: -2.2422921657562256
    3. ' def' → logprob: -6.867292404174805
    4. 'pos' → logprob: -6.992292404174805
    5. 'class' → logprob: -7.242292404174805
    6. '#' → logprob: -7.492292404174805
    7. 'tokens' → logprob: -7.742292404174805
    8. 'stack' → logprob: -8.992292404174805
    9. '
' → logprob: -9.367292404174805
    10. 'i' → logprob: -9.492292404174805

Token 702: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8678070902824402
    2. '   ' → logprob: -1.242807149887085
    3. ' p' → logprob: -1.742807149887085
    4. 'p' → logprob: -3.367807149887085
    5. ' def' → logprob: -3.367807149887085
    6. ' tokens' → logprob: -4.242806911468506
    7. 'tokens' → logprob: -4.492806911468506
    8. 'parse' → logprob: -5.117806911468506
    9. 'expr' → logprob: -5.367806911468506
    10. ' parse' → logprob: -5.492806911468506

Token 703: ' grammar' (ID: 41735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6174734830856323
    2. 'p' → logprob: -2.242473602294922
    3. '   ' → logprob: -2.492473602294922
    4. 'pos' → logprob: -2.617473602294922
    5. ' p' → logprob: -2.867473602294922
    6. 'parse' → logprob: -3.242473602294922
    7. 'tokens' → logprob: -3.617473602294922
    8. ' def' → logprob: -4.242473602294922
    9. ' tokens' → logprob: -4.242473602294922
    10. ' parse' → logprob: -4.367473602294922

Token 704: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5536805391311646
    2. 'def' → logprob: -1.4286805391311646
    3. '   ' → logprob: -2.178680419921875
    4. ' =' → logprob: -3.178680419921875
    5. ':' → logprob: -4.303680419921875
    6. ' is' → logprob: -5.178680419921875
    7. 'is' → logprob: -5.553680419921875
    8. ' def' → logprob: -6.553680419921875
    9. ')' → logprob: -7.428680419921875
    10. '=
' → logprob: -7.428680419921875

Token 705: ' ambiguous' (ID: 123648)
  Prédit: 'amb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amb' → logprob: -0.7595350742340088
    2. 'left' → logprob: -1.0095350742340088
    3. '   ' → logprob: -2.759535074234009
    4. 'def' → logprob: -3.634535074234009
    5. ' ambiguous' → logprob: -3.884535074234009
    6. 'not' → logprob: -4.38453483581543
    7. ' left' → logprob: -4.50953483581543
    8. 'unfinished' → logprob: -4.88453483581543
    9. 'in' → logprob: -5.00953483581543
    10. 'simple' → logprob: -5.75953483581543

Token 706: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6545584201812744
    2. '   ' → logprob: -0.9045584201812744
    3. ':' → logprob: -3.1545584201812744
    4. 'def' → logprob: -4.404558181762695
    5. ':
' → logprob: -4.529558181762695
    6. ',
' → logprob: -5.779558181762695
    7. ' and' → logprob: -6.404558181762695
    8. '):
' → logprob: -7.279558181762695
    9. '#' → logprob: -7.529558181762695
    10. '       ' → logprob: -7.654558181762695

Token 707: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0035438537597656
    2. '   ' → logprob: -2.0035438537597656
    3. ' p' → logprob: -2.1285438537597656
    4. ' not' → logprob: -2.3785438537597656
    5. ' tokens' → logprob: -2.6285438537597656
    6. ' def' → logprob: -3.1285438537597656
    7. 'p' → logprob: -3.1285438537597656
    8. ' the' → logprob: -3.2535438537597656
    9. 'tokens' → logprob: -4.128543853759766
    10. 'not' → logprob: -4.628543853759766

Token 708: ' problem' (ID: 4792)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.6764942407608032
    2. ' parse' → logprob: -1.9264942407608032
    3. 'def' → logprob: -2.0514941215515137
    4. ' rest' → logprob: -2.1764941215515137
    5. ' code' → logprob: -2.1764941215515137
    6. 'p' → logprob: -3.3014941215515137
    7. ' tokens' → logprob: -3.3014941215515137
    8. 'tokens' → logprob: -3.4264941215515137
    9. 'code' → logprob: -3.8014941215515137
    10. ' p' → logprob: -3.8014941215515137

Token 709: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8526857495307922
    2. 'def' → logprob: -1.7276856899261475
    3. ':' → logprob: -2.4776856899261475
    4. ' is' → logprob: -2.6026856899261475
    5. ')' → logprob: -3.4776856899261475
    6. ' continues' → logprob: -3.6026856899261475
    7. ' does' → logprob: -3.9776856899261475
    8. ' was' → logprob: -4.227685928344727
    9. 'does' → logprob: -4.352685928344727
    10. ' def' → logprob: -4.477685928344727

Token 710: ' only' (ID: 1606)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5177938342094421
    2. ' incomplete' → logprob: -1.767793893814087
    3. 'unfinished' → logprob: -2.142793893814087
    4. 'cut' → logprob: -3.267793893814087
    5. 'tr' → logprob: -3.892793893814087
    6. 'not' → logprob: -4.392793655395508
    7. ' unfinished' → logprob: -4.517793655395508
    8. 'complex' → logprob: -5.017793655395508
    9. ' cut' → logprob: -5.267793655395508
    10. '   ' → logprob: -5.392793655395508

Token 711: ' about' (ID: 1078)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.882225751876831
    2. '   ' → logprob: -2.132225751876831
    3. 'token' → logprob: -2.757225751876831
    4. 's' → logprob: -3.507225751876831
    5. 'used' → logprob: -3.507225751876831
    6. 'parse' → logprob: -3.757225751876831
    7. ' to' → logprob: -3.757225751876831
    8. 'par' → logprob: -3.882225751876831
    9. 'not' → logprob: -4.00722599029541
    10. 'to' → logprob: -4.00722599029541

Token 712: ' counting' (ID: 43276)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.13115526735782623
    2. 'def' → logprob: -3.131155252456665
    3. 'token' → logprob: -3.131155252456665
    4. 'parse' → logprob: -4.756155490875244
    5. 'implement' → logprob: -4.881155490875244
    6. 'return' → logprob: -5.756155490875244
    7. 'the' → logprob: -6.131155490875244
    8. 'tokens' → logprob: -6.131155490875244
    9. ' parsing' → logprob: -6.256155490875244
    10. '   ' → logprob: -6.506155490875244

Token 713: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5048571228981018
    2. 'tokens' → logprob: -1.504857063293457
    3. 'def' → logprob: -3.379857063293457
    4. ' tokens' → logprob: -3.754857063293457
    5. 'return' → logprob: -3.879857063293457
    6. ')' → logprob: -3.879857063293457
    7. 'token' → logprob: -4.504857063293457
    8. ' ways' → logprob: -5.629857063293457
    9. ' the' → logprob: -5.629857063293457
    10. 'ops' → logprob: -5.754857063293457

Token 714: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' all' (ID: 722)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.2424207925796509
    2. 'express' → logprob: -1.4924207925796509
    3. 'expr' → logprob: -1.4924207925796509
    4. 'all' → logprob: -2.8674206733703613
    5. 'the' → logprob: -3.1174206733703613
    6. 'def' → logprob: -3.1174206733703613
    7. 'tokens' → logprob: -3.3674206733703613
    8. 'possible' → logprob: -4.492420673370361
    9. 'eval' → logprob: -4.742420673370361
    10. 'token' → logprob: -5.117420673370361

Token 716: ' *' (ID: 425)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7883708477020264
    2. '   ' → logprob: -1.0383708477020264
    3. 'def' → logprob: -2.7883708477020264
    4. 'ways' → logprob: -4.0383710861206055
    5. 'parse' → logprob: -4.1633710861206055
    6. 'results' → logprob: -4.4133710861206055
    7. 'poss' → logprob: -4.5383710861206055
    8. ' possible' → logprob: -4.6633710861206055
    9. 'express' → logprob: -5.0383710861206055
    10. 'tokens' → logprob: -5.1633710861206055

Token 717: 'possible' (ID: 50714)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.1998237371444702
    2. 'possible' → logprob: -1.6998237371444702
    3. 'op' → logprob: -2.5748238563537598
    4. '   ' → logprob: -2.8248238563537598
    5. 'ops' → logprob: -2.8248238563537598
    6. ')' → logprob: -3.0748238563537598
    7. 'token' → logprob: -3.1998238563537598
    8. 'remaining' → logprob: -3.4498238563537598
    9. 'operators' → logprob: -3.8248238563537598
    10. 'def' → logprob: -3.8248238563537598

Token 718: '*' (ID: 9)
  Prédit: ' parses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parses' → logprob: -1.5093566179275513
    2. 'par' → logprob: -1.7593566179275513
    3. 'parse' → logprob: -1.8843566179275513
    4. ')' → logprob: -2.2593564987182617
    5. 'express' → logprob: -2.7593564987182617
    6. 'ways' → logprob: -2.8843564987182617
    7. '   ' → logprob: -3.1343564987182617
    8. ' parse' → logprob: -3.5093564987182617
    9. 'parent' → logprob: -4.384356498718262
    10. 'interpret' → logprob: -4.384356498718262

Token 719: ' parent' (ID: 5980)
  Prédit: ' parses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parses' → logprob: -0.9124723672866821
    2. 'parse' → logprob: -1.2874723672866821
    3. 'par' → logprob: -2.4124722480773926
    4. 'expr' → logprob: -2.6624722480773926
    5. ' parse' → logprob: -3.2874722480773926
    6. 'express' → logprob: -3.5374722480773926
    7. ' ways' → logprob: -3.7874722480773926
    8. 'ways' → logprob: -4.037472248077393
    9. '_expr' → logprob: -5.537472248077393
    10. 'pars' → logprob: -5.537472248077393

Token 720: 'hes' (ID: 9780)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.629126250743866
    2. 'hes' → logprob: -1.6291263103485107
    3. 'hesis' → logprob: -1.8791263103485107
    4. 'h' → logprob: -2.3791263103485107
    5. 'def' → logprob: -4.629126071929932
    6. '_expr' → logprob: -5.004126071929932
    7. 'expr' → logprob: -5.879126071929932
    8. 'he' → logprob: -6.379126071929932
    9. '#' → logprob: -7.004126071929932
    10. 'hs' → logprob: -7.504126071929932

Token 721: 'izations' (ID: 25434)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8855056166648865
    2. '#' → logprob: -1.8855056762695312
    3. 'izations' → logprob: -1.8855056762695312
    4. 'ized' → logprob: -2.1355056762695312
    5. '```' → logprob: -3.1355056762695312
    6. ')' → logprob: -3.5105056762695312
    7. 'def' → logprob: -3.7605056762695312
    8. 'esized' → logprob: -4.385505676269531
    9. '   ' → logprob: -5.260505676269531
    10. 'is' → logprob: -5.260505676269531

Token 722: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505618453025818
    2. '<|end|>' → logprob: -0.9255618453025818
    3. '<|end|>' → logprob: -4.300561904907227
    4. ',' → logprob: -5.300561904907227
    5. ')' → logprob: -5.925561904907227
    6. '.' → logprob: -6.925561904907227
    7. 'def' → logprob: -7.175561904907227
    8. '...' → logprob: -7.425561904907227
    9. '#' → logprob: -7.675561904907227
    10. ':' → logprob: -7.800561904907227

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001984663773328066
    2. '#' → logprob: -7.501984596252441
    3. '       ' → logprob: -8.001984596252441
    4. ')' → logprob: -8.376984596252441
    5. '<|end|>' → logprob: -8.376984596252441
    6. ' tokens' → logprob: -8.751984596252441
    7. '    ' → logprob: -9.126984596252441
    8. 'def' → logprob: -9.376984596252441
    9. 'tokens' → logprob: -9.376984596252441
    10. '<|end|>' → logprob: -10.501984596252441

Token 724: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03026285581290722
    2. '#' (adapté à ' #') → logprob: -4.2802629470825195
    3. 'def' → logprob: -5.0302629470825195
    4. 'return' → logprob: -6.0302629470825195
    5. ' return' → logprob: -6.2802629470825195
    6. 'tokens' → logprob: -6.2802629470825195
    7. ' tokens' → logprob: -6.6552629470825195
    8. ' #' → logprob: -7.6552629470825195
    9. '    ' → logprob: -8.03026294708252
    10. '       ' → logprob: -8.40526294708252

Token 725: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33101484179496765
    2. 'def' → logprob: -1.58101487159729
    3. 'return' → logprob: -3.70601487159729
    4. '#' → logprob: -4.456014633178711
    5. 'node' → logprob: -4.581014633178711
    6. 'stack' → logprob: -5.081014633178711
    7. ' return' → logprob: -5.206014633178711
    8. 'left' → logprob: -5.581014633178711
    9. ' def' → logprob: -5.831014633178711
    10. 'pos' → logprob: -5.956014633178711

Token 726: ' parser' (ID: 14216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014639275148510933
    2. ' def' → logprob: -4.639639377593994
    3. '   ' → logprob: -5.764639377593994
    4. 'return' → logprob: -6.764639377593994
    5. '#' → logprob: -8.264638900756836
    6. ' return' → logprob: -9.139638900756836
    7. 'rest' → logprob: -10.139638900756836
    8. '
' → logprob: -10.514638900756836
    9. 'result' → logprob: -10.514638900756836
    10. ')' → logprob: -10.889638900756836

Token 727: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7094179391860962
    2. ':' → logprob: -2.0844178199768066
    3. '   ' → logprob: -2.5844178199768066
    4. ' =' → logprob: -2.8344178199768066
    5. '=' → logprob: -3.3344178199768066
    6. '(tokens' → logprob: -3.3344178199768066
    7. ' tokens' → logprob: -3.5844178199768066
    8. '<|end|>' → logprob: -3.9594178199768066
    9. 'tokens' → logprob: -4.209417819976807
    10. '<|end|>' → logprob: -4.209417819976807

Token 728: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9352452754974365
    2. 'return' → logprob: -1.0602452754974365
    3. 'def' → logprob: -2.4352452754974365
    4. ' return' → logprob: -2.4352452754974365
    5. '       ' → logprob: -2.5602452754974365
    6. 'parse' → logprob: -7.185245513916016
    7. ' def' → logprob: -7.185245513916016
    8. ' be' → logprob: -7.310245513916016
    9. '           ' → logprob: -7.685245513916016
    10. ')' → logprob: -7.685245513916016

Token 729: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009817477315664291
    2. 'def' → logprob: -5.259817600250244
    3. '   ' → logprob: -5.759817600250244
    4. ' return' → logprob: -6.759817600250244
    5. 'parse' → logprob: -8.509817123413086
    6. '       ' → logprob: -11.009817123413086
    7. 'tokens' → logprob: -11.134817123413086
    8. 'consume' → logprob: -11.634817123413086
    9. '#' → logprob: -12.759817123413086
    10. 'pass' → logprob: -13.134817123413086

Token 730: ' tokens' (ID: 20290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2022751569747925
    2. 'expr' → logprob: -1.5772751569747925
    3. 'tokens' → logprob: -1.8272751569747925
    4. '('' → logprob: -2.702275276184082
    5. 'parse' → logprob: -2.827275276184082
    6. 'e' → logprob: -3.202275276184082
    7. 'p' → logprob: -3.202275276184082
    8. '()' → logprob: -3.827275276184082
    9. '_expr' → logprob: -4.077275276184082
    10. 'def' → logprob: -4.327275276184082

Token 731: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.180547833442688
    2. '<|end|>' → logprob: -1.805547833442688
    3. ')' → logprob: -1.930547833442688
    4. ' =' → logprob: -2.5555477142333984
    5. '<|end|>' → logprob: -2.8055477142333984
    6. ',' → logprob: -3.1805477142333984
    7. 'def' → logprob: -3.4305477142333984
    8. '(tokens' → logprob: -3.4305477142333984
    9. 'tokens' → logprob: -3.5555477142333984
    10. ' tokens' → logprob: -4.305547714233398

Token 732: ' a' (ID: 261)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.2304491549730301
    2. '[]' → logprob: -2.8554491996765137
    3. '[' → logprob: -2.9804491996765137
    4. 'p' → logprob: -3.2304491996765137
    5. 's' → logprob: -3.8554491996765137
    6. 'def' → logprob: -5.105449199676514
    7. 'a' → logprob: -5.105449199676514
    8. '['' → logprob: -5.105449199676514
    9. '[(' → logprob: -5.480449199676514
    10. '[]
' → logprob: -5.855449199676514

Token 733: ' flat' (ID: 12508)
  Prédit: 'flat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flat' → logprob: -0.27932021021842957
    2. 'list' → logprob: -2.154320240020752
    3. '('' → logprob: -2.529320240020752
    4. '['' → logprob: -3.404320240020752
    5. 'full' → logprob: -4.904320240020752
    6. '[' → logprob: -6.529320240020752
    7. 'def' → logprob: -7.029320240020752
    8. 'single' → logprob: -7.154320240020752
    9. '[]' → logprob: -7.404320240020752
    10. ' flat' → logprob: -7.529320240020752

Token 734: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20896793901920319
    2. ' list' → logprob: -2.333967924118042
    3. '   ' → logprob: -3.708967924118042
    4. '_list' → logprob: -3.708967924118042
    5. '['' → logprob: -4.458968162536621
    6. 'def' → logprob: -4.958968162536621
    7. ')' → logprob: -5.083968162536621
    8. '[]' → logprob: -5.333968162536621
    9. '('' → logprob: -5.583968162536621
    10. '_expr' → logprob: -5.958968162536621

Token 735: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08696447312831879
    2. '(tokens' → logprob: -3.8369643688201904
    3. 'tokens' → logprob: -4.4619646072387695
    4. ')' → logprob: -4.4619646072387695
    5. '<|end|>' → logprob: -4.4619646072387695
    6. ',' → logprob: -5.2119646072387695
    7. '<|end|>' → logprob: -5.3369646072387695
    8. ' tokens' → logprob: -5.8369646072387695
    9. ' =' → logprob: -5.8369646072387695
    10. ':' → logprob: -6.0869646072387695

Token 736: ' "' (ID: 392)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.509610116481781
    2. '('' → logprob: -1.3846101760864258
    3. 'nodes' → logprob: -2.509610176086426
    4. '(('' → logprob: -4.134610176086426
    5. 'def' → logprob: -4.259610176086426
    6. 'elements' → logprob: -5.009610176086426
    7. 'expr' → logprob: -5.259610176086426
    8. '['' → logprob: -5.384610176086426
    9. 'node' → logprob: -5.884610176086426
    10. 'oper' → logprob: -6.384610176086426

Token 737: 'atomic' (ID: 16877)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.42040207982063293
    2. '('' → logprob: -1.5454020500183105
    3. 'def' → logprob: -3.5454020500183105
    4. 'expr' → logprob: -3.9204020500183105
    5. 'parse' → logprob: -4.0454020500183105
    6. 'p' → logprob: -4.5454020500183105
    7. 'token' → logprob: -4.6704020500183105
    8. '['' → logprob: -4.9204020500183105
    9. 's' → logprob: -4.9204020500183105
    10. '[]' → logprob: -5.0454020500183105

Token 738: '"' (ID: 1)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.2608810067176819
    2. ' tokens' → logprob: -2.885880947113037
    3. 'elements' → logprob: -3.260880947113037
    4. '('' → logprob: -3.760880947113037
    5. '   ' → logprob: -4.135880947113037
    6. ')' → logprob: -4.385880947113037
    7. 'expr' → logprob: -4.510880947113037
    8. ' elements' → logprob: -4.635880947113037
    9. '[' → logprob: -4.760880947113037
    10. 'def' → logprob: -4.885880947113037

Token 739: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.34710171818733215
    2. 'elements' → logprob: -2.4721016883850098
    3. 'units' → logprob: -2.9721016883850098
    4. 'expr' → logprob: -3.5971016883850098
    5. 'express' → logprob: -3.5971016883850098
    6. 'nodes' → logprob: -3.9721016883850098
    7. '('' → logprob: -4.09710168838501
    8. 'def' → logprob: -4.34710168838501
    9. '   ' → logprob: -4.34710168838501
    10. 'items' → logprob: -5.09710168838501

Token 740: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7871873378753662
    2. '<|end|>' → logprob: -1.0371873378753662
    3. '<|end|>' → logprob: -2.412187337875366
    4. ')' → logprob: -3.537187337875366
    5. ',' → logprob: -3.787187337875366
    6. ':' → logprob: -4.787187576293945
    7. 'tokens' → logprob: -4.912187576293945
    8. ' tokens' → logprob: -5.287187576293945
    9. '.' → logprob: -5.662187576293945
    10. '(tokens' → logprob: -5.912187576293945

Token 741: ' nums' (ID: 18117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476269602775574
    2. ' tokens' → logprob: -1.2476270198822021
    3. 'tokens' → logprob: -1.8726270198822021
    4. ' s' → logprob: -3.372627019882202
    5. ' return' → logprob: -4.622626781463623
    6. ')' → logprob: -4.872626781463623
    7. 's' → logprob: -5.372626781463623
    8. '[]' → logprob: -5.497626781463623
    9. '       ' → logprob: -5.622626781463623
    10. 'return' → logprob: -5.747626781463623

Token 742: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6355454921722412
    2. '<|end|>' → logprob: -1.5105454921722412
    3. ',' → logprob: -2.385545492172241
    4. '<|end|>' → logprob: -3.135545492172241
    5. ')' → logprob: -3.385545492172241
    6. 'tokens' → logprob: -4.13554573059082
    7. ' =' → logprob: -4.51054573059082
    8. ' +' → logprob: -4.63554573059082
    9. ' tokens' → logprob: -5.26054573059082
    10. 'def' → logprob: -5.51054573059082

Token 743: ' operators' (ID: 29893)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.37304967641830444
    2. 'operators' → logprob: -2.123049736022949
    3. '[' → logprob: -2.498049736022949
    4. 'op' → logprob: -3.373049736022949
    5. '['' → logprob: -3.748049736022949
    6. 'tokens' → logprob: -3.873049736022949
    7. '[(' → logprob: -4.498049736022949
    8. '[]' → logprob: -5.373049736022949
    9. '('' → logprob: -5.873049736022949
    10. '   ' → logprob: -6.123049736022949

Token 744: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011635041795670986
    2. 'tokens' → logprob: -4.886634826660156
    3. 'def' → logprob: -6.886634826660156
    4. ' tokens' → logprob: -7.511634826660156
    5. 'return' → logprob: -7.636634826660156
    6. '<|end|>' → logprob: -7.761634826660156
    7. ')' → logprob: -8.011634826660156
    8. '(tokens' → logprob: -8.511634826660156
    9. '.' → logprob: -8.636634826660156
    10. '.tokens' → logprob: -8.886634826660156

Token 745: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18679097294807434
    2. ' tokens' → logprob: -2.811790943145752
    3. ' and' → logprob: -2.936790943145752
    4. 'tokens' → logprob: -3.686790943145752
    5. '       ' → logprob: -3.936790943145752
    6. '    ' → logprob: -6.561790943145752
    7. '#' → logprob: -6.811790943145752
    8. ' which' → logprob: -6.936790943145752
    9. 'and' → logprob: -6.936790943145752
    10. '[]' → logprob: -7.061790943145752

Token 746: ' par' (ID: 686)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6180797219276428
    2. 'def' → logprob: -2.118079662322998
    3. '   ' → logprob: -2.743079662322998
    4. ' parentheses' → logprob: -3.368079662322998
    5. '#' → logprob: -3.618079662322998
    6. 'parent' → logprob: -3.743079662322998
    7. 'tokens' → logprob: -3.993079662322998
    8. ' []' → logprob: -4.118079662322998
    9. '[' → logprob: -4.118079662322998
    10. 'the' → logprob: -4.243079662322998

Token 747: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -0.4587442874908447
    2. 'en' → logprob: -2.0837442874908447
    3. 'se' → logprob: -2.2087442874908447
    4. 'ent' → logprob: -2.7087442874908447
    5. ')' → logprob: -3.9587442874908447
    6. 'ser' → logprob: -4.708744049072266
    7. '```' → logprob: -4.833744049072266
    8. 'tokens' → logprob: -5.083744049072266
    9. 'def' → logprob: -5.208744049072266
    10. 'e' → logprob: -5.708744049072266

Token 748: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012503056786954403
    2. '<|end|>' → logprob: -5.637503147125244
    3. 'tokens' → logprob: -5.762503147125244
    4. ')' → logprob: -6.387503147125244
    5. 'def' → logprob: -6.762503147125244
    6. '<|end|>' → logprob: -7.262503147125244
    7. ' tokens' → logprob: -7.637503147125244
    8. '.' → logprob: -8.012502670288086
    9. ':' → logprob: -8.387502670288086
    10. ',' → logprob: -8.512502670288086

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009690219536423683
    2. ')' → logprob: -6.009690284729004
    3. 'def' → logprob: -6.009690284729004
    4. 'tokens' → logprob: -6.759690284729004
    5. ' tokens' → logprob: -6.884690284729004
    6. '<|end|>' → logprob: -6.884690284729004
    7. ',' → logprob: -8.134690284729004
    8. ':' → logprob: -8.759690284729004
    9. '    ' → logprob: -8.884690284729004
    10. '(' → logprob: -9.009690284729004

Token 750: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003389449091628194
    2. 'tokens' → logprob: -6.253389358520508
    3. 'def' → logprob: -7.378389358520508
    4. ' tokens' → logprob: -8.503389358520508
    5. '    
' → logprob: -9.128389358520508
    6. ')' → logprob: -9.378389358520508
    7. '
' → logprob: -9.378389358520508
    8. '<|end|>' → logprob: -9.378389358520508
    9. '#' (adapté à ' #') → logprob: -9.753389358520508
    10. '```' → logprob: -10.003389358520508

Token 751: ' Then' (ID: 7801)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01859188638627529
    2. 'tokens' → logprob: -4.14359188079834
    3. 'def' → logprob: -6.76859188079834
    4. ' tokens' → logprob: -7.64359188079834
    5. '#' → logprob: -8.39359188079834
    6. ')' → logprob: -8.51859188079834
    7. 'return' → logprob: -8.76859188079834
    8. '    
' → logprob: -9.26859188079834
    9. ' return' → logprob: -10.64359188079834
    10. 's' → logprob: -10.64359188079834

Token 752: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7419402599334717
    2. 'tokens' → logprob: -1.4919402599334717
    3. 'def' → logprob: -1.9919402599334717
    4. 'return' → logprob: -2.8669402599334717
    5. '#' → logprob: -3.2419402599334717
    6. '       ' → logprob: -3.7419402599334717
    7. ' tokens' → logprob: -4.741940498352051
    8. 'expr' → logprob: -4.741940498352051
    9. ' return' → logprob: -5.241940498352051
    10. 'result' → logprob: -5.491940498352051

Token 753: ' dp' (ID: 21546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4216093122959137
    2. 'tokens' → logprob: -2.046609401702881
    3. ' tokens' → logprob: -2.921609401702881
    4. 'return' → logprob: -3.171609401702881
    5. ' def' → logprob: -3.421609401702881
    6. ' return' → logprob: -3.546609401702881
    7. '   ' → logprob: -3.796609401702881
    8. ')' → logprob: -5.171609401702881
    9. 'expr' → logprob: -5.171609401702881
    10. ' p' → logprob: -5.671609401702881

Token 754: ' will' (ID: 738)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9734472036361694
    2. ' =' → logprob: -1.4734472036361694
    3. 'def' → logprob: -1.4734472036361694
    4. ')' → logprob: -3.223447322845459
    5. 'tokens' → logprob: -3.598447322845459
    6. 'return' → logprob: -3.973447322845459
    7. '=[]' → logprob: -4.473447322845459
    8. '=' → logprob: -4.973447322845459
    9. 'result' → logprob: -5.473447322845459
    10. ' tokens' → logprob: -5.598447322845459

Token 755: ' handle' (ID: 5318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7243226766586304
    2. 'continue' → logprob: -1.3493226766586304
    3. 'parse' → logprob: -3.09932279586792
    4. 'tokens' → logprob: -3.09932279586792
    5. ' return' → logprob: -3.34932279586792
    6. ' tokenize' → logprob: -3.84932279586792
    7. ' continue' → logprob: -3.97432279586792
    8. 'process' → logprob: -4.34932279586792
    9. 'def' → logprob: -4.47432279586792
    10. '   ' → logprob: -4.59932279586792

Token 756: ' all' (ID: 722)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6927263140678406
    2. '   ' → logprob: -1.8177263736724854
    3. ' tokens' → logprob: -2.1927263736724854
    4. ')' → logprob: -2.6927263736724854
    5. ' the' → logprob: -3.3177263736724854
    6. 'return' → logprob: -3.5677263736724854
    7. 'the' → logprob: -3.8177263736724854
    8. 's' → logprob: -4.442726135253906
    9. 'parse' → logprob: -4.817726135253906
    10. ' s' → logprob: -4.817726135253906

Token 757: ' ways' (ID: 6984)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.477414071559906
    2. 'tokens' → logprob: -1.3524141311645508
    3. ' tokens' → logprob: -3.227414131164551
    4. 'return' → logprob: -3.352414131164551
    5. 'def' → logprob: -4.602414131164551
    6. '_tokens' → logprob: -4.602414131164551
    7. ' return' → logprob: -4.852414131164551
    8. ')' → logprob: -5.102414131164551
    9. '       ' → logprob: -6.477414131164551
    10. '(tokens' → logprob: -6.727414131164551

Token 758: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034755785018205643
    2. 'tokens' → logprob: -6.128475666046143
    3. '<|end|>' → logprob: -8.128475189208984
    4. ' tokens' → logprob: -8.628475189208984
    5. 'def' → logprob: -8.628475189208984
    6. ')' → logprob: -8.878475189208984
    7. 'return' → logprob: -9.378475189208984
    8. '    
' → logprob: -9.503475189208984
    9. '.' → logprob: -9.628475189208984
    10. '<|end|>' → logprob: -9.753475189208984

Token 759: ' parent' (ID: 5980)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.008010800927877426
    2. 'parse' → logprob: -5.7580108642578125
    3. 'evalu' → logprob: -6.5080108642578125
    4. ' parsing' → logprob: -6.7580108642578125
    5. 'comb' → logprob: -6.8830108642578125
    6. 'expression' → logprob: -8.383010864257812
    7. 'evaluation' → logprob: -8.383010864257812
    8. 'token' → logprob: -8.508010864257812
    9. 'spl' → logprob: -9.133010864257812
    10. 'parent' → logprob: -9.883010864257812

Token 760: 'hes' (ID: 9780)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.5306472182273865
    2. 'hes' → logprob: -1.0306472778320312
    3. 'hesis' → logprob: -3.1556472778320312
    4. 'tokens' → logprob: -5.655647277832031
    5. ')' → logprob: -5.905647277832031
    6. 'h' → logprob: -6.405647277832031
    7. '_tokens' → logprob: -6.780647277832031
    8. '```' → logprob: -7.030647277832031
    9. 'es' → logprob: -7.780647277832031
    10. '_expr' → logprob: -8.030647277832031

Token 761: 'izing' (ID: 6396)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.881725549697876
    2. 'izing' → logprob: -1.006725549697876
    3. 'ize' → logprob: -1.631725549697876
    4. 'ized' → logprob: -4.381725311279297
    5. '```' → logprob: -5.631725311279297
    6. 'ing' → logprob: -5.881725311279297
    7. 'es' → logprob: -6.881725311279297
    8. ')' → logprob: -7.006725311279297
    9. '   ' → logprob: -7.006725311279297
    10. 'iz' → logprob: -7.256725311279297

Token 762: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004672206938266754
    2. 'return' → logprob: -6.129672050476074
    3. 'tokens' → logprob: -6.254672050476074
    4. ' return' → logprob: -7.754672050476074
    5. ' tokens' → logprob: -9.879672050476074
    6. 'def' → logprob: -10.754672050476074
    7. '    
' → logprob: -11.004672050476074
    8. '#' → logprob: -11.504672050476074
    9. '    ' → logprob: -12.004672050476074
    10. ')' → logprob: -12.254672050476074

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009674415923655033
    2. 'tokens' → logprob: -7.125967502593994
    3. 'return' → logprob: -9.750967025756836
    4. ' tokens' → logprob: -10.375967025756836
    5. 'def' → logprob: -10.625967025756836
    6. '    
' → logprob: -10.750967025756836
    7. ' return' → logprob: -11.875967025756836
    8. '    ' → logprob: -12.125967025756836
    9. ')' → logprob: -12.625967025756836
    10. '.' → logprob: -13.000967025756836

Token 764: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4197114408016205
    2. 'return' → logprob: -1.6697114706039429
    3. 'tokens' → logprob: -1.9197114706039429
    4. 'expr' → logprob: -5.169711589813232
    5. 'token' → logprob: -7.294711589813232
    6. 'def' → logprob: -7.669711589813232
    7. '#' (adapté à ' #') → logprob: -7.794711589813232
    8. 'flat' → logprob: -8.669711112976074
    9. 'result' → logprob: -8.794711112976074
    10. 'lst' → logprob: -10.169711112976074

Token 765: ' Therefore' (ID: 19233)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40672746300697327
    2. '   ' → logprob: -1.5317274332046509
    3. 'tokens' → logprob: -2.1567275524139404
    4. 'def' → logprob: -6.781727313995361
    5. '#' → logprob: -7.906727313995361
    6. 'p' → logprob: -8.53172779083252
    7. ' return' → logprob: -8.53172779083252
    8. 'result' → logprob: -8.90672779083252
    9. 'expr' → logprob: -9.28172779083252
    10. 'token' → logprob: -10.28172779083252

Token 766: ' instead' (ID: 7665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02603389136493206
    2. 'return' → logprob: -3.901033878326416
    3. 'tokens' → logprob: -5.401033878326416
    4. ' return' → logprob: -7.276033878326416
    5. '#' → logprob: -8.901034355163574
    6. ' tokens' → logprob: -9.276034355163574
    7. '       ' → logprob: -11.276034355163574
    8. 'token' → logprob: -12.526034355163574
    9. 'def' → logprob: -12.526034355163574
    10. '    
' → logprob: -12.526034355163574

Token 767: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9191654324531555
    2. 'def' → logprob: -1.1691653728485107
    3. '=' → logprob: -2.1691653728485107
    4. ':' → logprob: -2.6691653728485107
    5. 'of' → logprob: -2.7941653728485107
    6. '   ' → logprob: -3.9191653728485107
    7. 'tokens' → logprob: -4.79416561126709
    8. '_tokens' → logprob: -5.16916561126709
    9. '_of' → logprob: -5.91916561126709
    10. '.' → logprob: -6.29416561126709

Token 768: ' a' (ID: 261)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.26920151710510254
    2. 'return' → logprob: -2.0192015171051025
    3. 'def' → logprob: -2.7692015171051025
    4. '   ' → logprob: -4.644201278686523
    5. 'p' → logprob: -5.019201278686523
    6. '(tokens' → logprob: -5.144201278686523
    7. ' tokens' → logprob: -5.394201278686523
    8. 'parse' → logprob: -5.519201278686523
    9. 's' → logprob: -6.269201278686523
    10. ')' → logprob: -6.269201278686523

Token 769: ' tree' (ID: 8165)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.5160766839981079
    2. 'def' → logprob: -1.266076683998108
    3. 'return' → logprob: -2.7660765647888184
    4. 'flat' → logprob: -3.8910765647888184
    5. ' tokens' → logprob: -4.016076564788818
    6. '   ' → logprob: -5.266076564788818
    7. ' return' → logprob: -6.141076564788818
    8. '(tokens' → logprob: -6.141076564788818
    9. 'parse' → logprob: -6.266076564788818
    10. ')' → logprob: -6.391076564788818

Token 770: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11410056054592133
    2. ',' → logprob: -3.614100456237793
    3. ' =' → logprob: -3.739100456237793
    4. 'def' → logprob: -4.114100456237793
    5. ':' → logprob: -4.614100456237793
    6. 'tokens' → logprob: -4.989100456237793
    7. '(tokens' → logprob: -5.114100456237793
    8. 'return' → logprob: -5.364100456237793
    9. '
' → logprob: -6.114100456237793
    10. ' return' → logprob: -6.239100456237793

Token 771: ' just' (ID: 1327)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7940442562103271
    2. 'return' → logprob: -0.9190442562103271
    3. '   ' → logprob: -1.9190442562103271
    4. 'tokens' → logprob: -7.044044494628906
    5. '       ' → logprob: -7.169044494628906
    6. ' tokens' → logprob: -7.419044494628906
    7. '#' → logprob: -10.669044494628906
    8. '    ' → logprob: -11.169044494628906
    9. '```' → logprob: -11.294044494628906
    10. '	return' → logprob: -11.294044494628906

Token 772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0309667456895113
    2. ' return' → logprob: -3.5309667587280273
    3. '   ' → logprob: -6.905966758728027
    4. 'def' → logprob: -9.030966758728027
    5. 'tokens' → logprob: -9.530966758728027
    6. ' tokens' → logprob: -11.905966758728027
    7. '```' → logprob: -12.280966758728027
    8. '       ' → logprob: -13.530966758728027
    9. '	return' → logprob: -13.905966758728027
    10. 'parse' → logprob: -13.905966758728027

Token 773: ' token' (ID: 6602)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.013910203240811825
    2. 'p' → logprob: -4.388910293579102
    3. '[p' → logprob: -6.888910293579102
    4. '[(' → logprob: -9.013910293579102
    5. '[t' → logprob: -9.263910293579102
    6. '(tokens' → logprob: -9.638910293579102
    7. '[' → logprob: -10.138910293579102
    8. ' tokens' → logprob: -10.888910293579102
    9. '[s' → logprob: -11.138910293579102
    10. 's' → logprob: -12.388910293579102

Token 774: ' list' (ID: 1562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06776227802038193
    2. 'tokens' → logprob: -2.8177623748779297
    3. '(tokens' → logprob: -5.94276237487793
    4. 'return' → logprob: -6.81776237487793
    5. ' tokens' → logprob: -7.44276237487793
    6. '   ' → logprob: -7.44276237487793
    7. ')' → logprob: -8.19276237487793
    8. '_tokens' → logprob: -8.81776237487793
    9. 'def' → logprob: -9.06776237487793
    10. '.tokens' → logprob: -9.81776237487793

Token 775: ' without' (ID: 2935)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7615219950675964
    2. '   ' → logprob: -0.8865219950675964
    3. 'tokens' → logprob: -2.136522054672241
    4. ' return' → logprob: -6.011521816253662
    5. ' tokens' → logprob: -8.51152229309082
    6. '(tokens' → logprob: -9.26152229309082
    7. 's' → logprob: -10.63652229309082
    8. 'def' → logprob: -10.76152229309082
    9. '```' → logprob: -11.01152229309082
    10. '    
' → logprob: -11.26152229309082

Token 776: ' par' (ID: 686)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5845749378204346
    2. 'par' → logprob: -1.0845749378204346
    3. 'change' → logprob: -3.3345749378204346
    4. 'changes' → logprob: -3.5845749378204346
    5. 'parse' → logprob: -3.8345749378204346
    6. 'f' → logprob: -4.4595746994018555
    7. 'any' → logprob: -6.5845746994018555
    8. ' parsing' → logprob: -6.8345746994018555
    9. ' modification' → logprob: -6.9595746994018555
    10. ' changes' → logprob: -7.5845746994018555

Token 777: 'ens' (ID: 696)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.014709514565765858
    2. 't' → logprob: -5.13970947265625
    3. 'sing' → logprob: -5.13970947265625
    4. 'ent' → logprob: -6.88970947265625
    5. '```' → logprob: -7.13970947265625
    6. 'tokens' → logprob: -8.51470947265625
    7. 'def' → logprob: -8.63970947265625
    8. 'ser' → logprob: -9.26470947265625
    9. 'token' → logprob: -9.51470947265625
    10. 's' → logprob: -9.63970947265625

Token 778: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10636749118566513
    2. 'return' → logprob: -2.356367588043213
    3. 'tokens' → logprob: -5.481367588043213
    4. ' return' → logprob: -6.356367588043213
    5. '(tokens' → logprob: -9.731367111206055
    6. '    
' → logprob: -10.231367111206055
    7. '```' → logprob: -10.356367111206055
    8. ' tokens' → logprob: -10.481367111206055
    9. 'def' → logprob: -10.731367111206055
    10. '#' → logprob: -11.731367111206055

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006807856727391481
    2. 'return' → logprob: -5.381807804107666
    3. 'tokens' → logprob: -6.631807804107666
    4. 'def' → logprob: -7.881807804107666
    5. '```' → logprob: -8.506808280944824
    6. 'while' → logprob: -9.381808280944824
    7. ' return' → logprob: -9.881808280944824
    8. '    
' → logprob: -10.256808280944824
    9. '(tokens' → logprob: -10.756808280944824
    10. 's' → logprob: -10.756808280944824

Token 780: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07871660590171814
    2. 'return' (adapté à ' return') → logprob: -3.078716516494751
    3. 'tokens' → logprob: -4.07871675491333
    4. 'filtered' → logprob: -4.57871675491333
    5. 's' → logprob: -7.32871675491333
    6. 'while' → logprob: -7.82871675491333
    7. 'i' → logprob: -8.203716278076172
    8. 'expr' → logprob: -8.203716278076172
    9. 'def' → logprob: -8.578716278076172
    10. 'new' → logprob: -9.078716278076172

Token 781: ' tokens' (ID: 20290)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.20430605113506317
    2. '[(' → logprob: -2.954306125640869
    3. '[p' → logprob: -3.204306125640869
    4. '[token' → logprob: -3.204306125640869
    5. '[' → logprob: -3.454306125640869
    6. '[i' → logprob: -3.954306125640869
    7. '[s' → logprob: -9.204305648803711
    8. '[e' → logprob: -9.204305648803711
    9. '[list' → logprob: -9.204305648803711
    10. '[x' → logprob: -9.829305648803711

Token 782: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' apply' (ID: 6096)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -1.594677448272705
    2. 'count' → logprob: -1.844677448272705
    3. ' evaluate' → logprob: -1.969677448272705
    4. 'diff' → logprob: -2.469677448272705
    5. ' tokenize' → logprob: -2.469677448272705
    6. 'all' → logprob: -2.969677448272705
    7. ' main' → logprob: -3.094677448272705
    8. ' all' → logprob: -3.344677448272705
    9. ' count' → logprob: -3.469677448272705
    10. 'compute' → logprob: -3.594677448272705

Token 785: '_op' (ID: 20111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11621147394180298
    2. '_operator' → logprob: -3.366211414337158
    3. '_' → logprob: -3.866211414337158
    4. '_op' → logprob: -3.991211414337158
    5. '(op' → logprob: -4.241211414337158
    6. ' (' → logprob: -4.366211414337158
    7. '(operator' → logprob: -5.366211414337158
    8. '_token' → logprob: -6.491211414337158
    9. '_operation' → logprob: -7.491211414337158
    10. ''' → logprob: -8.366211891174316

Token 786: '(a' (ID: 6271)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.25508081912994385
    2. '(' → logprob: -1.5050808191299438
    3. '(operator' → logprob: -6.005080699920654
    4. ' (' → logprob: -7.880080699920654
    5. '('' → logprob: -8.755081176757812
    6. '(token' → logprob: -9.755081176757812
    7. '((' → logprob: -10.880081176757812
    8. ''' → logprob: -10.880081176757812
    9. '(a' → logprob: -11.130081176757812
    10. ' ' → logprob: -12.130081176757812

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011849920265376568
    2. ' ,' → logprob: -6.751184940338135
    3. ',b' → logprob: -11.876185417175293
    4. '   ' → logprob: -13.626185417175293
    5. ' ' → logprob: -13.751185417175293
    6. ',a' → logprob: -13.751185417175293
    7. ')' → logprob: -13.751185417175293
    8. ',
' → logprob: -14.501185417175293
    9. ',p' → logprob: -14.501185417175293
    10. '[' → logprob: -15.126185417175293

Token 788: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04863744229078293
    2. 'op' → logprob: -3.0486373901367188
    3. ' b' → logprob: -10.298637390136719
    4. ' op' → logprob: -11.048637390136719
    5. 'operator' → logprob: -15.423637390136719
    6. '   ' → logprob: -15.923637390136719
    7. '	op' → logprob: -16.92363739013672
    8. '(op' → logprob: -17.42363739013672
    9. ' ' → logprob: -17.42363739013672
    10. 'opr' → logprob: -17.79863739013672

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.62502670288086
    4. 'operator' → logprob: -19.87502670288086
    5. ',
' → logprob: -19.87502670288086
    6. '_,' → logprob: -20.00002670288086
    7. ',a' → logprob: -20.12502670288086
    8. ',char' → logprob: -20.12502670288086
    9. ' ' → logprob: -20.25002670288086
    10. ',int' → logprob: -20.37502670288086

Token 790: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00020354038861114532
    2. ' op' → logprob: -8.500203132629395
    3. '	op' → logprob: -17.37520408630371
    4. 'opr' → logprob: -17.87520408630371
    5. ''op' → logprob: -18.00020408630371
    6. 'ops' → logprob: -18.12520408630371
    7. 'oper' → logprob: -18.37520408630371
    8. '(op' → logprob: -18.37520408630371
    9. 'operator' → logprob: -18.62520408630371
    10. '   ' → logprob: -18.75020408630371

Token 791: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06198303773999214
    2. '):
' → logprob: -2.811983108520508
    3. ':' → logprob: -11.686983108520508
    4. '):
' → logprob: -12.061983108520508
    5. '   ' → logprob: -14.561983108520508
    6. ')' → logprob: -14.936983108520508
    7. '):

' → logprob: -15.436983108520508
    8. ' ):' → logprob: -15.936983108520508
    9. ''):' → logprob: -18.311983108520508
    10. '**' → logprob: -18.936983108520508

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06855690479278564
    2. ''' → logprob: -3.068556785583496
    3. ' if' → logprob: -5.568556785583496
    4. '{' → logprob: -5.693556785583496
    5. '{
' → logprob: -5.693556785583496
    6. 'if' → logprob: -6.193556785583496
    7. 'def' → logprob: -6.318556785583496
    8. ':' → logprob: -6.693556785583496
    9. '       ' → logprob: -7.068556785583496
    10. '(' → logprob: -7.318556785583496

Token 793: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7455280423164368
    2. ' if' → logprob: -1.120527982711792
    3. 'if' (adapté à ' if') → logprob: -1.620527982711792
    4. ':' → logprob: -7.120528221130371
    5. '{
' → logprob: -8.870528221130371
    6. '       ' → logprob: -9.120528221130371
    7. ' ' → logprob: -9.245528221130371
    8. '{' → logprob: -9.495528221130371
    9. '    ' → logprob: -9.620528221130371
    10. '```' → logprob: -9.620528221130371

Token 794: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.25193077325820923
    2. 'op' → logprob: -1.5019307136535645
    3. '(op' → logprob: -13.626931190490723
    4. '	op' → logprob: -15.001931190490723
    5. ''op' → logprob: -16.751930236816406
    6. '_op' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '.op' → logprob: -18.001930236816406
    10. '    ' → logprob: -18.376930236816406

Token 795: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38789424300193787
    2. '==' → logprob: -1.1378942728042603
    3. '=='' → logprob: -7.012894153594971
    4. ''' → logprob: -10.262894630432129
    5. '=' → logprob: -10.387894630432129
    6. '[' → logprob: -11.137894630432129
    7. '===' → logprob: -11.887894630432129
    8. ')' → logprob: -12.012894630432129
    9. ' =='' → logprob: -12.137894630432129
    10. '=="' → logprob: -12.262894630432129

Token 796: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.3135756552219391
    2. ''' → logprob: -1.3135756254196167
    3. '+' → logprob: -8.688575744628906
    4. ' '+'' → logprob: -9.313575744628906
    5. '"+"' → logprob: -10.563575744628906
    6. ''*' → logprob: -11.438575744628906
    7. ' '+' → logprob: -12.188575744628906
    8. ''>' → logprob: -12.188575744628906
    9. '"+' → logprob: -12.688575744628906
    10. '('+' → logprob: -13.313575744628906

Token 797: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.13409309089183807
    2. ':' → logprob: -2.7590930461883545
    3. '+' → logprob: -3.3840930461883545
    4. '':
' → logprob: -4.134093284606934
    5. ''' → logprob: -5.634093284606934
    6. ''):
' → logprob: -6.259093284606934
    7. ''):' → logprob: -6.259093284606934
    8. '')' → logprob: -7.009093284606934
    9. ':
' → logprob: -7.134093284606934
    10. ''+' → logprob: -7.509093284606934

Token 798: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20270594954490662
    2. ' return' → logprob: -1.952705979347229
    3. 'return' → logprob: -3.5777058601379395
    4. '   ' → logprob: -4.3277058601379395
    5. ':' → logprob: -8.577706336975098
    6. ':
' → logprob: -8.952706336975098
    7. '    ' → logprob: -9.702706336975098
    8. ':return' → logprob: -10.327706336975098
    9. '      ' → logprob: -11.827706336975098
    10. '	return' → logprob: -11.827706336975098

Token 799: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6934874653816223
    2. 'return' (adapté à ' return') → logprob: -0.6934874653816223
    3. 'a' → logprob: -8.943487167358398
    4. '   ' → logprob: -9.068487167358398
    5. ' a' → logprob: -9.318487167358398
    6. '       ' → logprob: -13.318487167358398
    7. '    ' → logprob: -13.568487167358398
    8. '	return' → logprob: -13.943487167358398
    9. ' ' → logprob: -15.568487167358398
    10. 'eturn' → logprob: -15.568487167358398

Token 800: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.339278580620885e-06
    2. ' a' → logprob: -13.000001907348633
    3. '(a' → logprob: -22.625001907348633
    4. '   ' → logprob: -24.000001907348633
    5. '	a' → logprob: -24.000001907348633
    6. '_a' → logprob: -25.125001907348633
    7. ''a' → logprob: -26.125001907348633
    8. '­a' → logprob: -26.625001907348633
    9. '```' → logprob: -27.625001907348633
    10. '  ' → logprob: -28.000001907348633

Token 801: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02978207916021347
    2. '+' → logprob: -3.5297820568084717
    3. '+b' → logprob: -10.40478229522705
    4. ' ' → logprob: -14.27978229522705
    5. ' +
' → logprob: -15.40478229522705
    6. ' ' → logprob: -15.77978229522705
    7. '   ' → logprob: -15.90478229522705
    8. '    ' → logprob: -16.529781341552734
    9. '+
' → logprob: -17.029781341552734
    10. '+B' → logprob: -17.279781341552734

Token 802: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. ' b' → logprob: -5.753177642822266
    3. '<|end|>' → logprob: -16.628177642822266
    4. '   ' → logprob: -19.628177642822266
    5. ' ' → logprob: -19.753177642822266
    6. ')b' → logprob: -20.378177642822266
    7. '```' → logprob: -20.878177642822266
    8. ')' → logprob: -21.503177642822266
    9. '	b' → logprob: -21.503177642822266
    10. '  ' → logprob: -22.253177642822266

Token 803: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2934134006500244
    2. '<|end|>' → logprob: -1.7934134006500244
    3. '
' → logprob: -2.9184134006500244
    4. 'elif' → logprob: -3.7934134006500244
    5. ')' → logprob: -5.793413162231445
    6. '    
' → logprob: -6.543413162231445
    7. '<|end|>' → logprob: -6.543413162231445
    8. ' elif' → logprob: -6.918413162231445
    9. '       ' → logprob: -6.918413162231445
    10. '  
' → logprob: -7.543413162231445

Token 804: ' False' (ID: 7983)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0337425172328949
    2. ' b' → logprob: -4.658742427825928
    3. '0' → logprob: -4.908742427825928
    4. 'None' → logprob: -5.158742427825928
    5. '<|end|>' → logprob: -5.283742427825928
    6. 'a' → logprob: -6.783742427825928
    7. ' ' → logprob: -7.158742427825928
    8. '   ' → logprob: -7.158742427825928
    9. ' None' → logprob: -7.283742427825928
    10. 'op' → logprob: -7.783742427825928

Token 805: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7645251154899597
    2. '<|end|>' → logprob: -1.6395251750946045
    3. 'elif' → logprob: -1.7645251750946045
    4. '
' → logprob: -2.1395251750946045
    5. '```' → logprob: -4.139524936676025
    6. ')' → logprob: -5.014524936676025
    7. '    
' → logprob: -5.389524936676025
    8. '  
' → logprob: -5.389524936676025
    9. '.' → logprob: -5.889524936676025
    10. ' elif' → logprob: -6.014524936676025

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.608758270740509
    2. 'elif' → logprob: -0.983758270740509
    3. '<|end|>' → logprob: -2.9837582111358643
    4. '
' → logprob: -3.8587582111358643
    5. ' elif' → logprob: -5.858758449554443
    6. '       ' → logprob: -6.358758449554443
    7. '    
' → logprob: -6.608758449554443
    8. '  
' → logprob: -7.108758449554443
    9. '```' → logprob: -7.108758449554443
    10. '	elif' → logprob: -7.483758449554443

Token 807: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.21431989967823029
    2. '   ' → logprob: -1.9643199443817139
    3. 'if' → logprob: -2.964319944381714
    4. ' elif' → logprob: -7.464319705963135
    5. '```' → logprob: -8.339320182800293
    6. ' if' → logprob: -8.464320182800293
    7. ' ' → logprob: -11.214320182800293
    8. '
' → logprob: -11.214320182800293
    9. '    
' → logprob: -12.714320182800293
    10. '       ' → logprob: -12.964320182800293

Token 808: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.42882633209228516
    2. 'op' → logprob: -1.0538263320922852
    3. ''' → logprob: -9.428826332092285
    4. '(op' → logprob: -11.053826332092285
    5. ''op' → logprob: -11.553826332092285
    6. '	op' → logprob: -11.553826332092285
    7. ' ' → logprob: -12.803826332092285
    8. ' '' → logprob: -13.428826332092285
    9. 'o' → logprob: -13.553826332092285
    10. '.op' → logprob: -13.803826332092285

Token 809: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020619550719857216
    2. '==' → logprob: -3.8956196308135986
    3. '=='' → logprob: -9.89561939239502
    4. '   ' → logprob: -11.39561939239502
    5. ' ' → logprob: -11.77061939239502
    6. '=' → logprob: -13.64561939239502
    7. '    ' → logprob: -13.64561939239502
    8. '[' → logprob: -13.64561939239502
    9. '  ' → logprob: -13.89561939239502
    10. '*' → logprob: -14.14561939239502

Token 810: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0003037650021724403
    2. ''*' → logprob: -8.750304222106934
    3. '-' → logprob: -9.000304222106934
    4. ' '-' → logprob: -11.625304222106934
    5. ' '-'' → logprob: -12.500304222106934
    6. ' ' → logprob: -12.625304222106934
    7. ''' → logprob: -13.250304222106934
    8. '"-' → logprob: -13.750304222106934
    9. ''+' → logprob: -14.000304222106934
    10. ''/' → logprob: -14.000304222106934

Token 811: '':
' (ID: 7669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7203925251960754
    2. '',' → logprob: -1.4703924655914307
    3. '       ' → logprob: -1.9703924655914307
    4. ':' → logprob: -2.9703924655914307
    5. '   ' → logprob: -3.0953924655914307
    6. '=' → logprob: -3.9703924655914307
    7. ' ,' → logprob: -5.09539270401001
    8. ':
' → logprob: -5.34539270401001
    9. ' ',' → logprob: -5.97039270401001
    10. '','' → logprob: -6.09539270401001

Token 812: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679769158363342
    2. ' return' → logprob: -2.0429768562316895
    3. '       ' → logprob: -2.4179768562316895
    4. ' b' → logprob: -2.4179768562316895
    5. ' True' → logprob: -2.6679768562316895
    6. 'True' → logprob: -3.4179768562316895
    7. 'False' → logprob: -3.6679768562316895
    8. 'return' → logprob: -4.2929768562316895
    9. ' False' → logprob: -4.4179768562316895
    10. ',' → logprob: -5.2929768562316895

Token 813: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26452526450157166
    2. 'True' → logprob: -2.1395251750946045
    3. 'a' → logprob: -2.3895251750946045
    4. 'return' (adapté à ' return') → logprob: -4.389525413513184
    5. ' False' → logprob: -5.264525413513184
    6. 'b' → logprob: -6.264525413513184
    7. ' True' → logprob: -6.639525413513184
    8. '   ' → logprob: -6.889525413513184
    9. ' a' → logprob: -7.639525413513184
    10. ' return' → logprob: -8.014525413513184

Token 814: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01608363911509514
    2. ' a' → logprob: -4.141083717346191
    3. '(a' → logprob: -10.016083717346191
    4. '   ' → logprob: -13.641083717346191
    5. 'b' → logprob: -13.766083717346191
    6. ' (' → logprob: -13.891083717346191
    7. 'False' → logprob: -14.391083717346191
    8. '(' → logprob: -14.891083717346191
    9. ' ' → logprob: -15.266083717346191
    10. '	a' → logprob: -16.266082763671875

Token 815: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017678854055702686
    2. '-' → logprob: -6.626768112182617
    3. ' +' → logprob: -8.001768112182617
    4. '+' → logprob: -9.876768112182617
    5. ',' → logprob: -10.251768112182617
    6. ' ' → logprob: -12.501768112182617
    7. '   ' → logprob: -12.626768112182617
    8. ' ' → logprob: -12.751768112182617
    9. '[' → logprob: -13.376768112182617
    10. ' *' → logprob: -13.501768112182617

Token 816: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04859134554862976
    2. ' b' → logprob: -3.048591375350952
    3. 'False' → logprob: -12.798591613769531
    4. ' False' → logprob: -14.673591613769531
    5. ' ' → logprob: -15.298591613769531
    6. 'True' → logprob: -16.17359161376953
    7. 'B' → logprob: -16.42359161376953
    8. '1' → logprob: -16.54859161376953
    9. '_b' → logprob: -16.54859161376953
    10. ',' → logprob: -16.92359161376953

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01239356491714716
    2. '   ' → logprob: -5.387393474578857
    3. '<|end|>' → logprob: -5.387393474578857
    4. ' ,' → logprob: -6.762393474578857
    5. '       ' → logprob: -6.762393474578857
    6. ',
' → logprob: -7.762393474578857
    7. '<|end|>' → logprob: -8.387393951416016
    8. '',' → logprob: -10.012393951416016
    9. '.' → logprob: -10.762393951416016
    10. ')' → logprob: -10.762393951416016

Token 818: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02373535744845867
    2. 'True' → logprob: -3.773735284805298
    3. ' False' → logprob: -7.648735523223877
    4. ' True' → logprob: -11.273735046386719
    5. '(False' → logprob: -15.023735046386719
    6. 'a' → logprob: -16.14873504638672
    7. '(True' → logprob: -17.02373504638672
    8. 'b' → logprob: -17.39873504638672
    9. 'None' → logprob: -18.14873504638672
    10. '0' → logprob: -18.27373504638672

Token 819: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003490514063742012
    2. '<|end|>' → logprob: -9.125349044799805
    3. 'elif' → logprob: -9.250349044799805
    4. ' elif' → logprob: -10.125349044799805
    5. '       ' → logprob: -10.125349044799805
    6. '```' → logprob: -11.000349044799805
    7. ')' → logprob: -11.375349044799805
    8. '	elif' → logprob: -11.375349044799805
    9. '.' → logprob: -12.000349044799805
    10. ' ' → logprob: -12.375349044799805

Token 820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08032345771789551
    2. 'elif' → logprob: -2.5803234577178955
    3. ' elif' → logprob: -6.580323219299316
    4. '```' → logprob: -10.330323219299316
    5. '       ' → logprob: -12.330323219299316
    6. '	elif' → logprob: -12.455323219299316
    7. ' ' → logprob: -12.955323219299316
    8. '<|end|>' → logprob: -14.330323219299316
    9. '  ' → logprob: -14.455323219299316
    10. ',' → logprob: -15.830323219299316

Token 821: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5764162540435791
    2. 'elif' (adapté à ' elif') → logprob: -0.8264162540435791
    3. ' elif' → logprob: -7.701416015625
    4. '```' → logprob: -11.701416015625
    5. ' ' → logprob: -11.951416015625
    6. '	elif' → logprob: -12.701416015625
    7. '       ' → logprob: -12.951416015625
    8. '  ' → logprob: -12.951416015625
    9. '
' → logprob: -13.826416015625
    10. '`' → logprob: -15.826416015625

Token 822: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3876061737537384
    2. ' op' → logprob: -1.137606143951416
    3. ''*' → logprob: -7.262606143951416
    4. ''op' → logprob: -11.262606620788574
    5. ' '*' → logprob: -11.762606620788574
    6. '(op' → logprob: -12.387606620788574
    7. '_op' → logprob: -12.762606620788574
    8. ' '*'' → logprob: -12.887606620788574
    9. '	op' → logprob: -13.012606620788574
    10. ''' → logprob: -15.137606620788574

Token 823: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026490716263651848
    2. '==' → logprob: -3.6514906883239746
    3. '   ' → logprob: -10.151491165161133
    4. ''*' → logprob: -10.276491165161133
    5. '=='' → logprob: -10.276491165161133
    6. ' '*' → logprob: -10.401491165161133
    7. ''' → logprob: -11.026491165161133
    8. ' ' → logprob: -11.401491165161133
    9. ' '*'' → logprob: -12.026491165161133
    10. 'def' → logprob: -12.276491165161133

Token 824: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0003154432924930006
    2. ' '*' → logprob: -8.62531566619873
    3. ' '*'' → logprob: -9.00031566619873
    4. '*' → logprob: -11.75031566619873
    5. '"*' → logprob: -12.87531566619873
    6. ''' → logprob: -13.75031566619873
    7. '('*' → logprob: -14.37531566619873
    8. '`' → logprob: -15.75031566619873
    9. ''+' → logprob: -15.75031566619873
    10. ''s' → logprob: -16.875314712524414

Token 825: '':
' (ID: 7669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6545001268386841
    2. ',' → logprob: -1.404500126838684
    3. '   ' → logprob: -2.2795000076293945
    4. '',' → logprob: -2.9045000076293945
    5. ':
' → logprob: -3.0295000076293945
    6. ':' → logprob: -3.9045000076293945
    7. '':
' → logprob: -6.7795000076293945
    8. '<|end|>' → logprob: -6.9045000076293945
    9. '':' → logprob: -7.0295000076293945
    10. 'return' → logprob: -7.1545000076293945

Token 826: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021196627989411354
    2. 'return' → logprob: -4.0211968421936035
    3. '       ' → logprob: -6.5211968421936035
    4. ' return' → logprob: -6.8961968421936035
    5. '(a' → logprob: -8.396196365356445
    6. ' (' → logprob: -8.646196365356445
    7. '(b' → logprob: -10.021196365356445
    8. 'b' → logprob: -10.146196365356445
    9. '(' → logprob: -10.396196365356445
    10. ' ' → logprob: -10.896196365356445

Token 827: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003515375778079033
    2. ' return' → logprob: -5.753515243530273
    3. '   ' → logprob: -8.628515243530273
    4. 'a' → logprob: -8.753515243530273
    5. 'b' → logprob: -14.878515243530273
    6. ' a' → logprob: -15.503515243530273
    7. '(a' → logprob: -16.378515243530273
    8. ' ' → logprob: -16.753515243530273
    9. '	return' → logprob: -17.128515243530273
    10. '       ' → logprob: -17.503515243530273

Token 828: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00038705902989022434
    2. '(a' → logprob: -8.250387191772461
    3. ' a' → logprob: -9.000387191772461
    4. ' (' → logprob: -13.000387191772461
    5. '(' → logprob: -16.37538719177246
    6. '   ' → logprob: -17.75038719177246
    7. 'b' → logprob: -19.00038719177246
    8. '	a' → logprob: -20.50038719177246
    9. '(
' → logprob: -20.87538719177246
    10. ' ' → logprob: -21.00038719177246

Token 829: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11262740939855576
    2. ',' → logprob: -3.2376275062561035
    3. 'a' → logprob: -3.6126275062561035
    4. '*' → logprob: -4.1126275062561035
    5. ' b' → logprob: -4.7376275062561035
    6. '*b' → logprob: -5.2376275062561035
    7. ' *' → logprob: -5.3626275062561035
    8. '   ' → logprob: -5.7376275062561035
    9. ' ' → logprob: -7.6126275062561035
    10. ',b' → logprob: -8.237627029418945

Token 830: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019295861711725593
    2. ' b' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.62692928314209
    4. ' ' → logprob: -15.50192928314209
    5. ',' → logprob: -15.87692928314209
    6. '  ' → logprob: -16.251930236816406
    7. '    ' → logprob: -17.751930236816406
    8. '<|end|>' → logprob: -18.501930236816406
    9. '(b' → logprob: -18.751930236816406
    10. '```' → logprob: -19.126930236816406

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. ' ,' → logprob: -10.125056266784668
    3. '       ' → logprob: -11.875056266784668
    4. '   ' → logprob: -12.625056266784668
    5. ',
' → logprob: -12.625056266784668
    6. ',true' → logprob: -14.375056266784668
    7. '(),' → logprob: -14.750056266784668
    8. ',false' → logprob: -15.250056266784668
    9. 'True' → logprob: -15.375056266784668
    10. 'False' → logprob: -15.750056266784668

Token 832: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0020038189832121134
    2. 'True' → logprob: -6.2520036697387695
    3. ' False' → logprob: -9.50200366973877
    4. '(False' → logprob: -14.87700366973877
    5. ' True' → logprob: -15.62700366973877
    6. '(True' → logprob: -18.877004623413086
    7. 'None' → logprob: -19.502004623413086
    8. '0' → logprob: -19.877004623413086
    9. '
' → logprob: -20.002004623413086
    10. 'a' → logprob: -20.627004623413086

Token 833: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4736459888808895e-05
    2. 'elif' → logprob: -11.375014305114746
    3. '```' → logprob: -13.125014305114746
    4. '       ' → logprob: -14.375014305114746
    5. ',' → logprob: -15.500014305114746
    6. '    
' → logprob: -16.000015258789062
    7. ' elif' → logprob: -16.250015258789062
    8. '
' → logprob: -17.000015258789062
    9. '	elif' → logprob: -17.375015258789062
    10. ' ' → logprob: -17.375015258789062

Token 834: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1609290987253189
    2. 'elif' → logprob: -1.9109290838241577
    3. '```' → logprob: -7.285929203033447
    4. '       ' → logprob: -11.785928726196289
    5. '`' → logprob: -12.910928726196289
    6. '/' → logprob: -13.035928726196289
    7. ' elif' → logprob: -13.535928726196289
    8. ' ' → logprob: -13.910928726196289
    9. ',' → logprob: -14.035928726196289
    10. '  ' → logprob: -14.160928726196289

Token 835: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01105984952300787
    2. '   ' → logprob: -4.511059761047363
    3. '```' → logprob: -12.261059761047363
    4. ' elif' → logprob: -12.886059761047363
    5. 'else' → logprob: -12.886059761047363
    6. '       ' → logprob: -13.511059761047363
    7. '	elif' → logprob: -15.261059761047363
    8. 'return' → logprob: -16.13606071472168
    9. 'if' → logprob: -16.51106071472168
    10. ' ' → logprob: -16.76106071472168

Token 836: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.04863835126161575
    2. ' op' → logprob: -3.048638343811035
    3. '/' → logprob: -10.173638343811035
    4. '/op' → logprob: -11.298638343811035
    5. '	op' → logprob: -15.548638343811035
    6. '(op' → logprob: -15.923638343811035
    7. 'b' → logprob: -16.79863929748535
    8. '   ' → logprob: -16.92363929748535
    9. ''op' → logprob: -17.04863929748535
    10. '.op' → logprob: -17.92363929748535

Token 837: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05492290109395981
    2. '==' → logprob: -2.9299228191375732
    3. '=='' → logprob: -10.429923057556152
    4. '   ' → logprob: -12.804923057556152
    5. '[' → logprob: -13.054923057556152
    6. '/' → logprob: -13.179923057556152
    7. 'import' → logprob: -13.554923057556152
    8. ' ' → logprob: -14.429923057556152
    9. 'def' → logprob: -14.429923057556152
    10. '  ' → logprob: -15.054923057556152

Token 838: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.038053084164857864
    2. ''' → logprob: -3.288053035736084
    3. '/' → logprob: -11.913053512573242
    4. ' '/' → logprob: -12.663053512573242
    5. ' '/'' → logprob: -13.663053512573242
    6. '"/' → logprob: -14.913053512573242
    7. ''+' → logprob: -15.913053512573242
    8. '/'' → logprob: -16.288053512573242
    9. '('/' → logprob: -17.288053512573242
    10. ''>' → logprob: -17.413053512573242

Token 839: '':
' (ID: 7669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7796643376350403
    2. '       ' → logprob: -1.2796642780303955
    3. '=' → logprob: -2.6546642780303955
    4. ':' → logprob: -3.1546642780303955
    5. '==' → logprob: -3.1546642780303955
    6. ':
' → logprob: -3.2796642780303955
    7. ' ==' → logprob: -3.7796642780303955
    8. ',' → logprob: -4.154664516448975
    9. ' (' → logprob: -4.654664516448975
    10. ''' → logprob: -5.654664516448975

Token 840: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9408907294273376
    2. '   ' → logprob: -1.1908907890319824
    3. ' if' → logprob: -1.1908907890319824
    4. ' (' → logprob: -7.190890789031982
    5. 'import' → logprob: -7.940890789031982
    6. '       ' → logprob: -8.440890312194824
    7. 'return' → logprob: -8.940890312194824
    8. '(' → logprob: -9.315890312194824
    9. ' return' → logprob: -9.440890312194824
    10. ',' → logprob: -10.065890312194824

Token 841: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3491470217704773
    2. '(b' → logprob: -1.724147081375122
    3. '(a' → logprob: -2.349147081375122
    4. '(False' → logprob: -4.349146842956543
    5. ' if' → logprob: -6.474146842956543
    6. 'b' → logprob: -6.474146842956543
    7. '(True' → logprob: -6.974146842956543
    8. ' (' → logprob: -6.974146842956543
    9. 'False' → logprob: -7.099146842956543
    10. '#' → logprob: -7.599146842956543

Token 842: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014013137842994183
    2. ' b' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.250140190124512
    4. 'a' → logprob: -16.875139236450195
    5. '(b' → logprob: -17.625139236450195
    6. 'B' → logprob: -17.875139236450195
    7. 'abs' → logprob: -18.125139236450195
    8. '```' → logprob: -19.625139236450195
    9. '0' → logprob: -19.750139236450195
    10. 'is' → logprob: -19.875139236450195

Token 843: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12716002762317657
    2. ' ==' → logprob: -2.12716007232666
    3. '[' → logprob: -8.50216007232666
    4. '!=' → logprob: -11.12716007232666
    5. '```' → logprob: -11.75216007232666
    6. '0' → logprob: -13.12716007232666
    7. ' !=' → logprob: -13.62716007232666
    8. '=' → logprob: -14.25216007232666
    9. 'is' → logprob: -14.62716007232666
    10. ' ' → logprob: -15.12716007232666

Token 844: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -19.000015258789062
    4. '   ' → logprob: -19.500015258789062
    5. '```' → logprob: -19.625015258789062
    6. '000' → logprob: -20.250015258789062
    7. '00' → logprob: -20.625015258789062
    8. '=' → logprob: -21.125015258789062
    9. 'False' → logprob: -21.375015258789062
    10. '(' → logprob: -21.500015258789062

Token 845: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -17.875
    4. '```' → logprob: -20.75
    5. '०' → logprob: -21.5
    6. '০' → logprob: -21.625
    7. 'zero' → logprob: -21.875
    8. '０' → logprob: -21.875
    9. '=' → logprob: -22.25
    10. '٠' → logprob: -22.375

Token 846: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5508330464363098
    2. ':
' → logprob: -1.550832986831665
    3. ':' → logprob: -2.175832986831665
    4. '           ' → logprob: -2.550832986831665
    5. '       ' → logprob: -4.550833225250244
    6. ' or' → logprob: -5.050833225250244
    7. ':return' → logprob: -6.425833225250244
    8. '   ' → logprob: -7.925833225250244
    9. ' and' → logprob: -8.675832748413086
    10. '.' → logprob: -9.050832748413086

Token 847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2356131374835968
    2. 'return' → logprob: -1.7356131076812744
    3. ' return' → logprob: -3.6106131076812744
    4. '       ' → logprob: -5.1106133460998535
    5. '               ' → logprob: -8.485612869262695
    6. ',' → logprob: -9.235612869262695
    7. '   ' → logprob: -9.360612869262695
    8. '	return' → logprob: -10.235612869262695
    9. '(' → logprob: -10.610612869262695
    10. '(True' → logprob: -10.735612869262695

Token 848: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25859493017196655
    2. 'True' → logprob: -1.5085949897766113
    3. '           ' → logprob: -6.008594989776611
    4. '(True' → logprob: -6.133594989776611
    5. '       ' → logprob: -6.883594989776611
    6. ' return' → logprob: -7.133594989776611
    7. '   ' → logprob: -9.258594512939453
    8. ' True' → logprob: -9.383594512939453
    9. '(' → logprob: -12.133594512939453
    10. '
' → logprob: -12.383594512939453

Token 849: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006252503953874111
    2. '0' → logprob: -5.631252288818359
    3. 'True' → logprob: -6.381252288818359
    4. 'False' → logprob: -7.506252288818359
    5. '(None' → logprob: -8.13125228881836
    6. ' None' → logprob: -10.00625228881836
    7. '(' → logprob: -10.13125228881836
    8. '(True' → logprob: -11.88125228881836
    9. '[],' → logprob: -12.00625228881836
    10. 'float' → logprob: -12.63125228881836

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.137130498653278e-05
    2. ',None' → logprob: -10.250081062316895
    3. 'True' → logprob: -10.875081062316895
    4. 'False' → logprob: -11.625081062316895
    5. ' ,' → logprob: -12.375081062316895
    6. '       ' → logprob: -12.750081062316895
    7. 'None' → logprob: -13.125081062316895
    8. '           ' → logprob: -13.250081062316895
    9. '(True' → logprob: -13.375081062316895
    10. ',
' → logprob: -13.750081062316895

Token 851: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.4121114822482923e-06
    2. 'False' → logprob: -13.250003814697266
    3. ' True' → logprob: -13.375003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '(True' → logprob: -18.500003814697266
    6. '=True' → logprob: -19.375003814697266
    7. '       ' → logprob: -20.625003814697266
    8. '           ' → logprob: -21.375003814697266
    9. '
' → logprob: -21.500003814697266
    10. '    ' → logprob: -21.750003814697266

Token 852: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010251892963424325
    2. '<|end|>' → logprob: -7.126025199890137
    3. '.' → logprob: -9.876025199890137
    4. '           ' → logprob: -10.501025199890137
    5. ',' → logprob: -10.626025199890137
    6. '   ' → logprob: -11.001025199890137
    7. 'return' → logprob: -11.251025199890137
    8. '```' → logprob: -11.251025199890137
    9. '               ' → logprob: -11.501025199890137
    10. '**' → logprob: -11.626025199890137

Token 853: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010211274639004841
    2. '   ' → logprob: -10.375102043151855
    3. '           ' → logprob: -11.000102043151855
    4. 'return' → logprob: -11.000102043151855
    5. '<|end|>' → logprob: -11.875102043151855
    6. '```' → logprob: -12.000102043151855
    7. 'else' → logprob: -12.750102043151855
    8. '(' → logprob: -13.000102043151855
    9. '               ' → logprob: -13.000102043151855
    10. ',' → logprob: -13.000102043151855

Token 854: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44789808988571167
    2. '       ' → logprob: -1.0728981494903564
    3. ' return' → logprob: -4.072897911071777
    4. 'if' → logprob: -7.447897911071777
    5. 'result' → logprob: -7.447897911071777
    6. 'else' → logprob: -7.947897911071777
    7. 'res' → logprob: -8.572897911071777
    8. '   ' → logprob: -9.447897911071777
    9. '           ' → logprob: -9.572897911071777
    10. 'try' → logprob: -10.197897911071777

Token 855: ' Apply' (ID: 28921)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2856968343257904
    2. ' if' → logprob: -1.9106968641281128
    3. 'return' → logprob: -2.6606967449188232
    4. 'q' → logprob: -4.660696983337402
    5. ' return' → logprob: -4.785696983337402
    6. 'res' → logprob: -5.535696983337402
    7. 'result' → logprob: -6.285696983337402
    8. ' res' → logprob: -6.535696983337402
    9. 'div' → logprob: -6.785696983337402
    10. ' q' → logprob: -7.160696983337402

Token 856: 'き' (ID: 11852)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6724272966384888
    2. 'a' → logprob: -1.0474272966384888
    3. ' int' → logprob: -2.297427177429199
    4. ' a' → logprob: -3.297427177429199
    5. ' (' → logprob: -7.922427177429199
    6. '(int' → logprob: -8.1724271774292
    7. '(a' → logprob: -8.5474271774292
    8. 'tr' → logprob: -9.5474271774292
    9. '   ' → logprob: -10.1724271774292
    10. '(' → logprob: -10.1724271774292

Token 857: 'た' (ID: 5598)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26549527049064636
    2. ' integer' → logprob: -2.5154953002929688
    3. '整数' → logprob: -2.7654953002929688
    4. 'integer' → logprob: -4.015495300292969
    5. 'def' → logprob: -4.015495300292969
    6. '#' → logprob: -4.765495300292969
    7. 'int' → logprob: -5.140495300292969
    8. '除' → logprob: -5.265495300292969
    9. 'div' → logprob: -5.515495300292969
    10. '       ' → logprob: -5.640495300292969

Token 858: 'ま' (ID: 5042)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05670744180679321
    2. '       ' → logprob: -3.9317073822021484
    3. '#' → logprob: -4.431707382202148
    4. ' int' → logprob: -5.306707382202148
    5. 'if' → logprob: -5.806707382202148
    6. 'integer' → logprob: -5.806707382202148
    7. '整数' → logprob: -6.056707382202148
    8. '           ' → logprob: -6.431707382202148
    9. 'a' → logprob: -6.681707382202148
    10. 'return' → logprob: -7.056707382202148

Token 859: 'さ' (ID: 7500)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'わ' → logprob: -1.6363329887390137
    2. 'み' → logprob: -2.1363329887390137
    3. 'り' → logprob: -2.6363329887390137
    4. 'def' → logprob: -2.7613329887390137
    5. 'ず' → logprob: -3.0113329887390137
    6. 'ん' → logprob: -3.2613329887390137
    7. 'った' → logprob: -3.2613329887390137
    8. 'return' → logprob: -3.3863329887390137
    9. '```' → logprob: -3.3863329887390137
    10. 'ち' → logprob: -3.7613329887390137

Token 860: '君' (ID: 82180)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3813104629516602
    2. 'def' → logprob: -1.5063104629516602
    3. 'if' → logprob: -1.8813104629516602
    4. '   ' → logprob: -2.25631046295166
    5. 'a' → logprob: -2.88131046295166
    6. '#' → logprob: -3.00631046295166
    7. 'tion' → logprob: -4.00631046295166
    8. 'b' → logprob: -4.13131046295166
    9. 'operator' → logprob: -4.38131046295166
    10. 'int' → logprob: -4.50631046295166

Token 861: ' rounding' (ID: 112605)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2981764078140259
    2. 'result' → logprob: -1.5481764078140259
    3. 'return' → logprob: -1.9231764078140259
    4. 'q' → logprob: -2.7981762886047363
    5. ' res' → logprob: -2.9231762886047363
    6. 'if' → logprob: -3.0481762886047363
    7. 'quot' → logprob: -3.1731762886047363
    8. ' if' → logprob: -3.4231762886047363
    9. 'div' → logprob: -3.5481762886047363
    10. ' return' → logprob: -3.5481762886047363

Token 862: ':' (ID: 25)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.9896248579025269
    2. '       ' → logprob: -1.8646248579025269
    3. 'tow' → logprob: -1.8646248579025269
    4. ' toward' → logprob: -2.2396249771118164
    5. ' towards' → logprob: -2.4896249771118164
    6. 'def' → logprob: -3.9896249771118164
    7. 'import' → logprob: -3.9896249771118164
    8. ' down' → logprob: -4.114624977111816
    9. '_down' → logprob: -4.739624977111816
    10. '   ' → logprob: -4.864624977111816

Token 863: ' after' (ID: 1934)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0872104167938232
    2. 'res' → logprob: -1.3372104167938232
    3. 'result' → logprob: -2.3372104167938232
    4. 'q' → logprob: -2.5872104167938232
    5. ' res' → logprob: -3.0872104167938232
    6. 'import' → logprob: -3.2122104167938232
    7. 'c' → logprob: -3.7122104167938232
    8. 'round' → logprob: -3.8372104167938232
    9. ' int' → logprob: -4.087210655212402
    10. 'if' → logprob: -4.212210655212402

Token 864: ' division' (ID: 21629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26286816596984863
    2. 'div' → logprob: -1.7628681659698486
    3. 'division' → logprob: -3.2628681659698486
    4. 'int' → logprob: -4.8878679275512695
    5. 'float' → logprob: -5.0128679275512695
    6. 'import' → logprob: -5.6378679275512695
    7. 'result' → logprob: -7.0128679275512695
    8. 'res' → logprob: -7.5128679275512695
    9. ' division' → logprob: -7.7628679275512695
    10. 'b' → logprob: -8.01286792755127

Token 865: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8597588539123535
    2. '   ' → logprob: -1.4847588539123535
    3. 'import' → logprob: -2.2347588539123535
    4. ' if' → logprob: -2.3597588539123535
    5. ',' → logprob: -3.4847588539123535
    6. 'if' → logprob: -3.6097588539123535
    7. 'result' → logprob: -3.6097588539123535
    8. '           ' → logprob: -4.2347588539123535
    9. ' =' → logprob: -4.2347588539123535
    10. 'a' → logprob: -4.6097588539123535

Token 866: ' round' (ID: 7353)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2335740327835083
    2. 'res' → logprob: -1.4835740327835083
    3. 'result' → logprob: -1.7335740327835083
    4. ' if' → logprob: -2.7335739135742188
    5. 'import' → logprob: -2.9835739135742188
    6. 'q' → logprob: -3.2335739135742188
    7. ' res' → logprob: -3.4835739135742188
    8. '#' → logprob: -4.233573913574219
    9. 'round' → logprob: -4.233573913574219
    10. 'r' → logprob: -4.358573913574219

Token 867: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.5146546959877014
    2. 'a' → logprob: -1.1396546363830566
    3. 'down' → logprob: -2.7646546363830566
    4. 'away' → logprob: -5.639654636383057
    5. 'up' → logprob: -5.639654636383057
    6. 'to' → logprob: -6.014654636383057
    7. 'half' → logprob: -6.014654636383057
    8. ' toward' → logprob: -6.139654636383057
    9. ' towards' → logprob: -6.764654636383057
    10. '(a' → logprob: -6.764654636383057

Token 868: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6961214542388916
    2. 'zero' → logprob: -0.6961214542388916
    3. ' zero' → logprob: -6.0711212158203125
    4. '-zero' → logprob: -8.446121215820312
    5. 'negative' → logprob: -8.821121215820312
    6. '_zero' → logprob: -8.946121215820312
    7. '   ' → logprob: -9.696121215820312
    8. ' ' → logprob: -10.821121215820312
    9. '-' → logprob: -10.946121215820312
    10. '零' → logprob: -11.196121215820312

Token 869: ' value' (ID: 1432)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.4330447018146515
    2. '0' → logprob: -1.433044672012329
    3. 'nearest' → logprob: -2.558044672012329
    4. 'negative' → logprob: -3.808044672012329
    5. 'def' → logprob: -5.683044910430908
    6. ' zero' → logprob: -6.058044910430908
    7. 'down' → logprob: -6.433044910430908
    8. '-' → logprob: -6.558044910430908
    9. '-zero' → logprob: -6.933044910430908
    10. 'closest' → logprob: -7.558044910430908

Token 870: ' with' (ID: 483)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.056947112083435
    2. 'if' → logprob: -1.931947112083435
    3. '       ' → logprob: -2.0569472312927246
    4. '0' → logprob: -2.5569472312927246
    5. 'def' → logprob: -2.6819472312927246
    6. 'a' → logprob: -2.6819472312927246
    7. 'away' → logprob: -3.3069472312927246
    8. ' away' → logprob: -3.6819472312927246
    9. 'tow' → logprob: -3.9319472312927246
    10. '   ' → logprob: -4.056947231292725

Token 871: ' smaller' (ID: 13679)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.6478084325790405
    2. 'abs' → logprob: -1.1478084325790405
    3. '0' → logprob: -2.39780855178833
    4. 'inf' → logprob: -3.52280855178833
    5. '#' → logprob: -4.89780855178833
    6. 'sm' → logprob: -5.27280855178833
    7. 'negative' → logprob: -5.39780855178833
    8. ' zero' → logprob: -5.52280855178833
    9. 'greater' → logprob: -5.64780855178833
    10. '(abs' → logprob: -6.39780855178833

Token 872: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.050233591347932816
    2. 'absolute' → logprob: -3.5502336025238037
    3. 'difference' → logprob: -4.675233364105225
    4. '(abs' → logprob: -4.925233364105225
    5. 'if' → logprob: -7.050233364105225
    6. 'diff' → logprob: -7.425233364105225
    7. 'distance' → logprob: -7.425233364105225
    8. ' absolute' → logprob: -7.800233364105225
    9. 'or' → logprob: -8.425233840942383
    10. ' abs' → logprob: -8.550233840942383

Token 873: ',' (ID: 11)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.2440120428800583
    2. 'if' → logprob: -2.1190121173858643
    3. 'value' → logprob: -2.6190121173858643
    4. 'val' → logprob: -4.369011878967285
    5. '       ' → logprob: -5.244011878967285
    6. 'def' → logprob: -5.994011878967285
    7. ' if' → logprob: -8.244011878967285
    8. 'l' → logprob: -8.369011878967285
    9. 'a' → logprob: -8.494011878967285
    10. 'import' → logprob: -8.494011878967285

Token 874: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08578696846961975
    2. '#' → logprob: -3.460787057876587
    3. 'if' → logprob: -3.585787057876587
    4. 'which' → logprob: -5.210786819458008
    5. 'return' → logprob: -5.585786819458008
    6. 'def' → logprob: -6.085786819458008
    7. '```' → logprob: -6.085786819458008
    8. ' if' → logprob: -6.335786819458008
    9. 'result' → logprob: -6.460786819458008
    10. '   ' → logprob: -6.460786819458008

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7178987860679626
    2. ' if' → logprob: -1.2178988456726074
    3. '#' → logprob: -2.7178988456726074
    4. 'if' → logprob: -2.8428988456726074
    5. '```' → logprob: -3.2178988456726074
    6. ' by' → logprob: -4.717898845672607
    7. '           ' → logprob: -4.967898845672607
    8. 'def' → logprob: -5.217898845672607
    9. ' a' → logprob: -5.467898845672607
    10. '   ' → logprob: -5.842898845672607

Token 876: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3230101466178894
    2. ' if' → logprob: -1.6980102062225342
    3. '       ' → logprob: -2.448010206222534
    4. '#' (adapté à ' #') → logprob: -5.448009967803955
    5. '           ' → logprob: -7.698009967803955
    6. '```' → logprob: -7.698009967803955
    7. 'sign' → logprob: -8.448010444641113
    8. 'elif' → logprob: -8.448010444641113
    9. ' #' → logprob: -8.698010444641113
    10. '   ' → logprob: -8.823010444641113

Token 877: ' then' (ID: 1815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020946243777871132
    2. '#' → logprob: -4.770946025848389
    3. 'sign' → logprob: -5.020946025848389
    4. ' if' → logprob: -6.395946025848389
    5. 'res' → logprob: -6.395946025848389
    6. 'import' → logprob: -7.145946025848389
    7. 'result' → logprob: -7.770946025848389
    8. 'quot' → logprob: -8.145946502685547
    9. '       ' → logprob: -8.395946502685547
    10. 'rem' → logprob: -8.895946502685547

Token 878: ' floor' (ID: 8350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3413901925086975
    2. 'return' → logprob: -1.9663901329040527
    3. '#' → logprob: -2.8413901329040527
    4. 'round' → logprob: -2.9663901329040527
    5. 'truncate' → logprob: -3.4663901329040527
    6. 'import' → logprob: -5.466390132904053
    7. 'def' → logprob: -6.966390132904053
    8. ' if' → logprob: -7.841390132904053
    9. '           ' → logprob: -8.341390609741211
    10. 'result' → logprob: -8.591390609741211

Token 879: ' fractional' (ID: 136350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0936702489852905
    2. 'div' → logprob: -1.3436702489852905
    3. 'def' → logprob: -1.7186702489852905
    4. '       ' → logprob: -3.21867036819458
    5. '_div' → logprob: -3.34367036819458
    6. ' =' → logprob: -3.59367036819458
    7. '(a' → logprob: -4.09367036819458
    8. 'a' → logprob: -4.09367036819458
    9. 'division' → logprob: -4.09367036819458
    10. ' if' → logprob: -4.21867036819458

Token 880: ' part' (ID: 997)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10532785952091217
    2. '       ' → logprob: -3.230327844619751
    3. '   ' → logprob: -3.480327844619751
    4. 'if' → logprob: -4.73032808303833
    5. 'import' → logprob: -4.85532808303833
    6. 'div' → logprob: -5.48032808303833
    7. '```' → logprob: -5.85532808303833
    8. 'division' → logprob: -6.85532808303833
    9. ' if' → logprob: -7.10532808303833
    10. '(
' → logprob: -7.85532808303833

Token 881: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28646767139434814
    2. 'import' → logprob: -2.0364675521850586
    3. '       ' → logprob: -3.2864675521850586
    4. 'div' → logprob: -3.9114675521850586
    5. 'a' → logprob: -4.286467552185059
    6. ' if' → logprob: -4.411467552185059
    7. 'quot' → logprob: -4.786467552185059
    8. 'def' → logprob: -5.036467552185059
    9. 'result' → logprob: -5.786467552185059
    10. 'from' → logprob: -6.036467552185059

Token 882: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3697953224182129
    2. 'return' → logprob: -2.119795322418213
    3. 'import' → logprob: -2.869795322418213
    4. '   ' → logprob: -3.744795322418213
    5. 'and' → logprob: -4.369795322418213
    6. '#' → logprob: -4.619795322418213
    7. '           ' → logprob: -4.619795322418213
    8. '```' → logprob: -4.619795322418213
    9. 'a' → logprob: -4.744795322418213
    10. 'if' → logprob: -4.994795322418213

Token 883: ' int' (ID: 677)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0843775272369385
    2. 'return' → logprob: -1.7093775272369385
    3. 'the' → logprob: -1.9593775272369385
    4. 'if' → logprob: -2.2093775272369385
    5. 'int' → logprob: -2.9593775272369385
    6. 'sign' → logprob: -3.8343775272369385
    7. 'abs' → logprob: -4.209377288818359
    8. 'ach' → logprob: -4.584377288818359
    9. 'handle' → logprob: -4.584377288818359
    10. ' the' → logprob: -4.584377288818359

Token 884: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008239369839429855
    2. 'def' → logprob: -5.633239269256592
    3. '(' → logprob: -6.258239269256592
    4. ' (' → logprob: -7.258239269256592
    5. ',' → logprob: -7.258239269256592
    6. '   ' → logprob: -8.13323974609375
    7. ' if' → logprob: -8.50823974609375
    8. '           ' → logprob: -8.63323974609375
    9. 'import' → logprob: -8.63323974609375
    10. 'if' → logprob: -9.00823974609375

Token 885: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021773851476609707
    2. ' if' → logprob: -6.3771772384643555
    3. 'if' → logprob: -8.752177238464355
    4. '```' → logprob: -9.502177238464355
    5. '   ' → logprob: -9.752177238464355
    6. ',' → logprob: -10.502177238464355
    7. ' ' → logprob: -11.127177238464355
    8. '           ' → logprob: -11.377177238464355
    9. ' (' → logprob: -11.502177238464355
    10. '(' → logprob: -11.627177238464355

Token 886: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8522893786430359
    2. 'res' → logprob: -1.8522894382476807
    3. 'q' → logprob: -2.2272894382476807
    4. 'import' → logprob: -2.4772894382476807
    5. '       ' → logprob: -2.8522894382476807
    6. 'val' → logprob: -3.1022894382476807
    7. 'quot' → logprob: -3.3522894382476807
    8. 'sign' → logprob: -3.4772894382476807
    9. 'div' → logprob: -3.9772894382476807
    10. 'result' → logprob: -4.352289199829102

Token 887: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2466500997543335
    2. 'q' → logprob: -1.3716500997543335
    3. 'res' → logprob: -1.6216500997543335
    4. 'div' → logprob: -2.746650218963623
    5. 'val' → logprob: -3.121650218963623
    6. 'quot' → logprob: -3.121650218963623
    7. 'sign' → logprob: -3.121650218963623
    8. '       ' → logprob: -3.746650218963623
    9. '#' → logprob: -3.996650218963623
    10. 'import' → logprob: -5.496650218963623

Token 888: ' since' (ID: 3630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8045303821563721
    2. '#' → logprob: -1.304530382156372
    3. 'sign' → logprob: -2.304530382156372
    4. 'def' → logprob: -3.054530382156372
    5. 'div' → logprob: -3.179530382156372
    6. 'abs' → logprob: -3.304530382156372
    7. '       ' → logprob: -4.179530143737793
    8. 'quot' → logprob: -4.429530143737793
    9. 'import' → logprob: -5.054530143737793
    10. '   ' → logprob: -5.429530143737793

Token 889: ' problem' (ID: 4792)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10843180865049362
    2. 'b' → logprob: -3.108431816101074
    3. ' a' → logprob: -3.733431816101074
    4. 'op' → logprob: -4.858431816101074
    5. 'abs' → logprob: -4.858431816101074
    6. 'type' → logprob: -5.358431816101074
    7. 'import' → logprob: -5.983431816101074
    8. ' (' → logprob: -6.233431816101074
    9. '(a' → logprob: -6.233431816101074
    10. ' op' → logprob: -6.358431816101074

Token 890: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6495324969291687
    2. ' ==' → logprob: -2.6495325565338135
    3. 'の' → logprob: -3.0245325565338135
    4. '==' → logprob: -3.0245325565338135
    5. ' is' → logprob: -3.0245325565338135
    6. '=' → logprob: -3.2745325565338135
    7. 'def' → logprob: -3.8995325565338135
    8. ''s' → logprob: -4.274532318115234
    9. ' の' → logprob: -4.274532318115234
    10. ' ' → logprob: -4.649532318115234

Token 891: ':' (ID: 25)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.6618601083755493
    2. ' division' → logprob: -2.0368599891662598
    3. '       ' → logprob: -2.6618599891662598
    4. 'b' → logprob: -2.7868599891662598
    5. 'we' → logprob: -3.0368599891662598
    6. 'the' → logprob: -3.5368599891662598
    7. 'a' → logprob: -3.9118599891662598
    8. ' we' → logprob: -3.9118599891662598
    9. ' the' → logprob: -4.66185998916626
    10. '/' → logprob: -4.66185998916626

Token 892: ' 
' (ID: 793)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9746773838996887
    2. '#' → logprob: -1.599677324295044
    3. 'if' → logprob: -1.599677324295044
    4. 'result' → logprob: -3.099677324295044
    5. 'import' → logprob: -3.224677324295044
    6. ' res' → logprob: -3.849677324295044
    7. 'return' → logprob: -3.849677324295044
    8. 'quot' → logprob: -4.224677562713623
    9. 'div' → logprob: -4.474677562713623
    10. 'q' → logprob: -4.474677562713623

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3739268481731415
    2. '#' → logprob: -1.4989268779754639
    3. 'if' → logprob: -3.623926877975464
    4. 'result' → logprob: -3.623926877975464
    5. ' if' → logprob: -4.123926639556885
    6. ' #' → logprob: -5.748926639556885
    7. 'We' → logprob: -5.998926639556885
    8. ' result' → logprob: -6.248926639556885
    9. '           ' → logprob: -6.748926639556885
    10. 'return' → logprob: -6.998926639556885

Token 894: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5777343511581421
    2. '       ' → logprob: -0.9527343511581421
    3. '   ' → logprob: -4.202734470367432
    4. ' #' → logprob: -4.702734470367432
    5. 'We' → logprob: -5.327734470367432
    6. 'a' → logprob: -5.327734470367432
    7. '```' → logprob: -5.452734470367432
    8. 'if' → logprob: -5.827734470367432
    9. 'Let's' → logprob: -5.827734470367432
    10. ' if' → logprob: -6.452734470367432

Token 895: ' "' (ID: 392)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3316839635372162
    2. '#' → logprob: -2.206683874130249
    3. ' res' → logprob: -2.706683874130249
    4. 'quot' → logprob: -3.706683874130249
    5. 'result' → logprob: -3.706683874130249
    6. 'q' → logprob: -3.831683874130249
    7. 'import' → logprob: -4.831684112548828
    8. 'div' → logprob: -5.081684112548828
    9. 'val' → logprob: -5.081684112548828
    10. 'c' → logprob: -5.456684112548828

Token 896: '割' (ID: 67361)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5645141005516052
    2. '#' → logprob: -2.56451416015625
    3. 'q' → logprob: -2.56451416015625
    4. 'if' → logprob: -2.93951416015625
    5. 'def' → logprob: -3.18951416015625
    6. 'div' → logprob: -3.43951416015625
    7. 'abs' → logprob: -3.56451416015625
    8. 'quot' → logprob: -3.93951416015625
    9. 'val' → logprob: -4.18951416015625
    10. 'r' → logprob: -4.18951416015625

Token 897: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.10800119489431381
    2. '```' → logprob: -3.358001232147217
    3. 'と' → logprob: -3.733001232147217
    4. '   ' → logprob: -4.358001232147217
    5. '=' → logprob: -4.983001232147217
    6. 'る' → logprob: -5.358001232147217
    7. '       ' → logprob: -5.733001232147217
    8. 'return' → logprob: -6.233001232147217
    9. 'って' → logprob: -6.233001232147217
    10. '           ' → logprob: -6.358001232147217

Token 898: '算' (ID: 16727)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.04289459064602852
    2. '```' → logprob: -3.9178946018218994
    3. 'return' → logprob: -4.54289436340332
    4. 'と' → logprob: -5.91789436340332
    5. 'る' → logprob: -6.04289436340332
    6. '切' → logprob: -6.54289436340332
    7. '当' → logprob: -6.66789436340332
    8. '=' → logprob: -7.29289436340332
    9. '算' → logprob: -7.66789436340332
    10. '引' → logprob: -7.79289436340332

Token 899: 'では' (ID: 43147)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.870625376701355
    2. 'の' → logprob: -0.995625376701355
    3. 'def' → logprob: -3.1206254959106445
    4. '=' → logprob: -3.2456254959106445
    5. '   ' → logprob: -3.3706254959106445
    6. 'を' → logprob: -3.4956254959106445
    7. 'が' → logprob: -4.6206254959106445
    8. ' =' → logprob: -5.3706254959106445
    9. 'で' → logprob: -5.3706254959106445
    10. 'の場合' → logprob: -5.4956254959106445

Token 900: '常' (ID: 17731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20671413838863373
    2. 'abs' → logprob: -2.831714153289795
    3. 'int' → logprob: -3.456714153289795
    4. ' a' → logprob: -3.581714153289795
    5. 'b' → logprob: -4.081714153289795
    6. 'import' → logprob: -4.331714153289795
    7. '#' → logprob: -4.706714153289795
    8. 'if' → logprob: -5.581714153289795
    9. '整数' → logprob: -5.581714153289795
    10. 'def' → logprob: -5.706714153289795

Token 901: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.0006658526253886521
    2. '```' → logprob: -7.625665664672852
    3. 'によ' → logprob: -10.500665664672852
    4. '用' → logprob: -10.500665664672852
    5. '整数' → logprob: -10.750665664672852
    6. 'def' → logprob: -11.000665664672852
    7. 'につ' → logprob: -11.125665664672852
    8. '時' → logprob: -11.375665664672852
    9. 'には' → logprob: -11.625665664672852
    10. 'で' → logprob: -12.000665664672852

Token 902: '絶' (ID: 188458)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7887455821037292
    2. '切' → logprob: -1.538745641708374
    3. '整数' → logprob: -2.288745641708374
    4. 'import' → logprob: -2.663745641708374
    5. 'int' → logprob: -2.913745641708374
    6. '0' → logprob: -3.413745641708374
    7. 'b' → logprob: -4.038745403289795
    8. 'ゼ' → logprob: -4.163745403289795
    9. '```' → logprob: -5.163745403289795
    10. '#' → logprob: -5.288745403289795

Token 903: '対' (ID: 44518)
  Prédit: '対'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '対' → logprob: -0.10163625329732895
    2. 'div' → logprob: -3.2266361713409424
    3. '整数' → logprob: -4.4766364097595215
    4. 'return' → logprob: -4.8516364097595215
    5. 'の' → logprob: -5.4766364097595215
    6. 'int' → logprob: -5.7266364097595215
    7. '```' → logprob: -5.8516364097595215
    8. '除' → logprob: -5.8516364097595215
    9. '0' → logprob: -5.9766364097595215
    10. '÷' → logprob: -6.1016364097595215

Token 904: '値' (ID: 69555)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.48433762788772583
    2. '値' → logprob: -1.984337568283081
    3. '-value' → logprob: -3.234337568283081
    4. 'a' → logprob: -3.484337568283081
    5. ' ' → logprob: -3.859337568283081
    6. 'import' → logprob: -4.10933780670166
    7. 'abs' → logprob: -4.10933780670166
    8. ')' → logprob: -4.10933780670166
    9. '0' → logprob: -4.48433780670166
    10. 'b' → logprob: -4.60933780670166

Token 905: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1852508783340454
    2. '       ' → logprob: -1.3102508783340454
    3. '=' → logprob: -2.185250759124756
    4. '(' → logprob: -2.560250759124756
    5. 'a' → logprob: -2.935250759124756
    6. 'の' → logprob: -3.560250759124756
    7. '   ' → logprob: -3.810250759124756
    8. '()' → logprob: -3.935250759124756
    9. 'import' → logprob: -4.560250759124756
    10. 'を' → logprob: -4.560250759124756

Token 906: '小' (ID: 5820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2973614931106567
    2. 'def' → logprob: -1.4223614931106567
    3. '差' → logprob: -2.047361373901367
    4. 'diff' → logprob: -2.422361373901367
    5. '値' → logprob: -2.422361373901367
    6. 'sm' → logprob: -2.672361373901367
    7. 'value' → logprob: -3.297361373901367
    8. 'import' → logprob: -4.297361373901367
    9. '#' → logprob: -4.672361373901367
    10. '```' → logprob: -5.172361373901367

Token 907: 'さい' (ID: 36201)
  Prédit: '対'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '対' → logprob: -0.909417450428009
    2. 'の' → logprob: -1.7844173908233643
    3. 'abs' → logprob: -2.1594173908233643
    4. 'り' → logprob: -2.7844173908233643
    5. 'で' → logprob: -2.9094173908233643
    6. 'div' → logprob: -3.4094173908233643
    7. ' ' → logprob: -3.5344173908233643
    8. 'ー' → logprob: -3.7844173908233643
    9. 'ん' → logprob: -4.159417629241943
    10. 'を' → logprob: -4.409417629241943

Token 908: '方' (ID: 4983)
  Prédit: '値'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '値' → logprob: -1.0864497423171997
    2. '側' → logprob: -1.0864497423171997
    3. '方' → logprob: -1.9614497423171997
    4. '方向' → logprob: -2.46144962310791
    5. 'value' → logprob: -3.71144962310791
    6. 'a' → logprob: -4.21144962310791
    7. 'b' → logprob: -4.21144962310791
    8. 'の' → logprob: -4.33644962310791
    9. 'ほ' → logprob: -4.83644962310791
    10. '```' → logprob: -5.46144962310791

Token 909: 'に' (ID: 5280)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.6794775724411011
    2. 'の' → logprob: -1.179477572441101
    3. 'で' → logprob: -2.8044776916503906
    4. 'に' → logprob: -3.1794776916503906
    5. ' を' → logprob: -3.9294776916503906
    6. 'と' → logprob: -4.054477691650391
    7. 'が' → logprob: -4.304477691650391
    8. 'との' → logprob: -5.304477691650391
    9. 'から' → logprob: -5.304477691650391
    10. '       ' → logprob: -5.679477691650391

Token 910: '丸' (ID: 170295)
  Prédit: '丸'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '丸' → logprob: -0.9399676322937012
    2. '向' → logprob: -1.4399676322937012
    3. '近' → logprob: -1.9399676322937012
    4. 'a' → logprob: -3.064967632293701
    5. '   ' → logprob: -3.064967632293701
    6. 'つ' → logprob: -3.439967632293701
    7. '切' → logprob: -3.814967632293701
    8. 'round' → logprob: -4.314967632293701
    9. '寄' → logprob: -4.314967632293701
    10. 'む' → logprob: -4.814967632293701

Token 911: 'め' (ID: 17693)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46098342537879944
    2. 'ご' → logprob: -2.3359835147857666
    3. 'め' → logprob: -3.4609835147857666
    4. 'ん' → logprob: -3.7109835147857666
    5. 'り' → logprob: -3.8359835147857666
    6. 'て' → logprob: -3.9609835147857666
    7. '``' → logprob: -4.0859832763671875
    8. 'import' → logprob: -4.0859832763671875
    9. '_' → logprob: -4.4609832763671875
    10. 'def' → logprob: -4.5859832763671875

Token 912: '，小' (ID: 137380)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -1.5046063661575317
    2. 'て' → logprob: -1.7546063661575317
    3. 'し' → logprob: -2.129606246948242
    4. 'する' → logprob: -2.254606246948242
    5. 'ます' → logprob: -2.879606246948242
    6. 'る' → logprob: -2.879606246948242
    7. 'しま' → logprob: -3.254606246948242
    8. 'を' → logprob: -3.629606246948242
    9. 'ま' → logprob: -4.004606246948242
    10. '```' → logprob: -4.004606246948242

Token 913: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -1.054992437362671
    2. 'し' → logprob: -2.804992437362671
    3. '切' → logprob: -2.804992437362671
    4. '```' → logprob: -2.804992437362671
    5. 'def' → logprob: -3.054992437362671
    6. 'さい' → logprob: -3.054992437362671
    7. 'た' → logprob: -3.054992437362671
    8. 'さ' → logprob: -3.429992437362671
    9. 'て' → logprob: -3.554992437362671
    10. 'return' → logprob: -3.554992437362671

Token 914: '部' (ID: 8572)
  Prédit: '点'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.46052664518356323
    2. 'part' → logprob: -2.085526704788208
    3. '部' → logprob: -2.335526704788208
    4. '部分' → logprob: -3.210526704788208
    5. '   ' → logprob: -3.460526704788208
    6. 'point' → logprob: -4.210526466369629
    7. 'parts' → logprob: -4.460526466369629
    8. '       ' → logprob: -4.835526466369629
    9. '(part' → logprob: -4.960526466369629
    10. 'points' → logprob: -4.960526466369629

Token 915: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.068681001663208
    2. 'は' → logprob: -1.318681001663208
    3. '()' → logprob: -2.693681001663208
    4. 'の' → logprob: -2.943681001663208
    5. '   ' → logprob: -3.318681001663208
    6. '部分' → logprob: -3.443681001663208
    7. 'def' → logprob: -3.693681001663208
    8. '```' → logprob: -3.818681001663208
    9. 'で' → logprob: -3.943681001663208
    10. '(' → logprob: -4.193680763244629

Token 916: '切' (ID: 34921)
  Prédit: '切'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '切' → logprob: -0.0007320931763388216
    2. '\xe6\x8d' → logprob: -8.625732421875
    3. '\xe7\xb9' → logprob: -8.875732421875
    4. '0' → logprob: -9.000732421875
    5. '   ' → logprob: -10.250732421875
    6. '```' → logprob: -10.500732421875
    7. 'floor' → logprob: -10.625732421875
    8. 'す' → logprob: -10.750732421875
    9. '以下' → logprob: -10.875732421875
    10. '#' → logprob: -10.875732421875

Token 917: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -6.861651490908116e-05
    2. '\xe6\x8d' → logprob: -10.375068664550781
    3. '```' → logprob: -11.375068664550781
    4. '
' → logprob: -11.750068664550781
    5. '``' → logprob: -12.000068664550781
    6. '//' → logprob: -13.000068664550781
    7. '\' → logprob: -13.500068664550781
    8. '   ' → logprob: -13.500068664550781
    9. '-' → logprob: -13.875068664550781
    10. '_' → logprob: -14.000068664550781

Token 918: '�' (ID: 7804)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.011243632063269615
    2. '\xe6\x8d' → logprob: -4.76124382019043
    3. '
' → logprob: -6.38624382019043
    4. '上' → logprob: -7.88624382019043
    5. '```' → logprob: -8.01124382019043
    6. '``' → logprob: -9.13624382019043
    7. '   ' → logprob: -10.88624382019043
    8. '"""
' → logprob: -11.01124382019043
    9. 'def' → logprob: -11.01124382019043
    10. 'import' → logprob: -11.51124382019043

Token 919: '�' (ID: 101)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.01660011149942875
    2. '\xe6\x8d' → logprob: -4.641600131988525
    3. '```' → logprob: -5.266600131988525
    4. '
' → logprob: -7.266600131988525
    5. '``' → logprob: -7.766600131988525
    6. '_' → logprob: -9.516599655151367
    7. '\r' → logprob: -9.891599655151367
    8. 'def' → logprob: -10.391599655151367
    9. '上' → logprob: -10.391599655151367
    10. 'r' → logprob: -10.766599655151367

Token 920: 'て' (ID: 5711)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.038992978632450104
    2. '\xe6\x8d' → logprob: -3.5389928817749023
    3. '```' → logprob: -5.038992881774902
    4. '``' → logprob: -7.163992881774902
    5. '
' → logprob: -7.663992881774902
    6. '上' → logprob: -7.913992881774902
    7. 'def' → logprob: -8.663992881774902
    8. '��' → logprob: -9.038992881774902
    9. 'ー' → logprob: -9.413992881774902
    10. 'import' → logprob: -9.538992881774902

Token 921: 'て' (ID: 5711)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8d' → logprob: -0.31315580010414124
    2. 'す' → logprob: -1.9381557703018188
    3. '```' → logprob: -2.5631558895111084
    4. 'り' → logprob: -3.6881558895111084
    5. 'し' → logprob: -4.438155651092529
    6. 'る' → logprob: -5.688155651092529
    7. 'ば' → logprob: -7.188155651092529
    8. '``' → logprob: -7.313155651092529
    9. 'def' → logprob: -7.438155651092529
    10. 'した' → logprob: -7.688155651092529

Token 922: '整数' (ID: 173952)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5475391149520874
    2. 'す' → logprob: -1.9225391149520874
    3. '0' → logprob: -2.672539234161377
    4. 'a' → logprob: -3.047539234161377
    5. 'あ' → logprob: -3.547539234161377
    6. '1' → logprob: -3.922539234161377
    7. '   ' → logprob: -4.047539234161377
    8. 'しま' → logprob: -4.297539234161377
    9. '```' → logprob: -4.297539234161377
    10. '整数' → logprob: -4.547539234161377

Token 923: 'に' (ID: 5280)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.272563099861145
    2. '```' → logprob: -1.897563099861145
    3. 'で' → logprob: -2.3975629806518555
    4. 'する' → logprob: -2.3975629806518555
    5. 'に' → logprob: -3.0225629806518555
    6. 'し' → logprob: -3.1475629806518555
    7. '   ' → logprob: -3.3975629806518555
    8. '(' → logprob: -3.5225629806518555
    9. '(
' → logprob: -4.1475629806518555
    10. 'へ' → logprob: -4.2725629806518555

Token 924: 'して' (ID: 22440)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.0424939393997192
    2. '```' → logprob: -1.5424939393997192
    3. '\xe6\x8d' → logprob: -1.9174939393997192
    4. '切' → logprob: -2.6674938201904297
    5. 'る' → logprob: -3.4174938201904297
    6. 'し' → logprob: -3.6674938201904297
    7. '``' → logprob: -3.7924938201904297
    8. '返' → logprob: -4.66749382019043
    9. 'する' → logprob: -4.91749382019043
    10. 's' → logprob: -4.91749382019043

Token 925: 'しま' (ID: 178826)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.1872706115245819
    2. 'しま' → logprob: -2.5622706413269043
    3. 'い' → logprob: -3.4372706413269043
    4. '切' → logprob: -4.437270641326904
    5. 'よ' → logprob: -4.937270641326904
    6. '```' → logprob: -5.062270641326904
    7. 'ください' → logprob: -5.437270641326904
    8. 'b' → logprob: -5.562270641326904
    9. 'く' → logprob: -6.312270641326904
    10. '``' → logprob: -6.312270641326904

Token 926: 'う' (ID: 8574)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.07267778366804123
    2. 'る' → logprob: -3.0726778507232666
    3. 'す' → logprob: -4.9476776123046875
    4. '\xe6\x8d' → logprob: -5.5726776123046875
    5. 'う' → logprob: -5.5726776123046875
    6. '```' → logprob: -5.6976776123046875
    7. 'っ' → logprob: -6.6976776123046875
    8. 'し' → logprob: -6.8226776123046875
    9. 'さ' → logprob: -7.4476776123046875
    10. 'ろ' → logprob: -8.072677612304688

Token 927: '．' (ID: 32217)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9381109476089478
    2. 'す' → logprob: -1.1881109476089478
    3. 'し' → logprob: -2.938110828399658
    4. '``' → logprob: -3.188110828399658
    5. 'て' → logprob: -3.813110828399658
    6. 'する' → logprob: -3.938110828399658
    7. 'る' → logprob: -4.063110828399658
    8. '（' → logprob: -4.938110828399658
    9. 'ね' → logprob: -4.938110828399658
    10. 'け' → logprob: -4.938110828399658

Token 928: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0828922986984253
    2. '       ' → logprob: -1.5828922986984253
    3. 'b' → logprob: -1.8328922986984253
    4. '#' → logprob: -2.832892417907715
    5. 'a' → logprob: -3.207892417907715
    6. 'def' → logprob: -3.707892417907715
    7. 'abs' → logprob: -4.082892417907715
    8. 'if' → logprob: -4.082892417907715
    9. '```' → logprob: -4.207892417907715
    10. ' ' → logprob: -4.457892417907715

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10608652979135513
    2. '   ' → logprob: -2.856086492538452
    3. '#' → logprob: -4.356086730957031
    4. 'b' → logprob: -5.356086730957031
    5. 'def' → logprob: -5.731086730957031
    6. '           ' → logprob: -5.856086730957031
    7. 'して' → logprob: -6.231086730957031
    8. ' ' → logprob: -6.481086730957031
    9. 'する' → logprob: -6.481086730957031
    10. 'した' → logprob: -6.731086730957031

Token 930: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014310990460216999
    2. '#' (adapté à ' #') → logprob: -4.389310836791992
    3. '   ' → logprob: -8.014310836791992
    4. 'return' → logprob: -8.389310836791992
    5. ' #' → logprob: -8.639310836791992
    6. '           ' → logprob: -9.139310836791992
    7. '```' → logprob: -9.139310836791992
    8. 'if' → logprob: -9.264310836791992
    9. ' ' → logprob: -9.514310836791992
    10. ' ' → logprob: -9.514310836791992

Token 931: ' which' (ID: 1118)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3866865634918213
    2. '       ' → logprob: -2.0116865634918213
    3. 'res' → logprob: -2.1366865634918213
    4. 'abs' → logprob: -2.1366865634918213
    5. 'quot' → logprob: -2.7616865634918213
    6. 'div' → logprob: -2.8866865634918213
    7. 'result' → logprob: -3.5116865634918213
    8. 'if' → logprob: -3.6366865634918213
    9. ' res' → logprob: -3.8866865634918213
    10. 'import' → logprob: -4.011686325073242

Token 932: ' means' (ID: 4748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7893552780151367
    2. '   ' → logprob: -1.7893552780151367
    3. ' =' → logprob: -1.9143552780151367
    4. '       ' → logprob: -2.7893552780151367
    5. '#' → logprob: -2.9143552780151367
    6. ' is' → logprob: -3.7893552780151367
    7. 'は' → logprob: -4.289355278015137
    8. 'を' → logprob: -4.289355278015137
    9. 'def' → logprob: -4.414355278015137
    10. ' b' → logprob: -4.414355278015137

Token 933: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5089556574821472
    2. 'import' → logprob: -1.633955717086792
    3. '       ' → logprob: -2.008955717086792
    4. '#' → logprob: -3.633955717086792
    5. 'result' → logprob: -3.883955717086792
    6. ' if' → logprob: -5.008955478668213
    7. 'return' → logprob: -5.258955478668213
    8. 'abs' → logprob: -5.633955478668213
    9. '```' → logprob: -6.508955478668213
    10. '
' → logprob: -7.383955478668213

Token 934: ' 
' (ID: 793)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.45542266964912415
    2. 'if' → logprob: -1.5804226398468018
    3. 'q' → logprob: -3.2054226398468018
    4. 'quot' → logprob: -3.5804226398468018
    5. '#' → logprob: -4.330422878265381
    6. ' res' → logprob: -4.455422878265381
    7. 'sign' → logprob: -4.580422878265381
    8. 'val' → logprob: -4.580422878265381
    9. '       ' → logprob: -4.705422878265381
    10. 'div' → logprob: -4.955422878265381

Token 935: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1511961668729782
    2. '           ' → logprob: -3.151196241378784
    3. 'b' → logprob: -3.776196241378784
    4. '切' → logprob: -4.151196002960205
    5. ' b' → logprob: -4.401196002960205
    6. '        ' → logprob: -4.901196002960205
    7. '      ' → logprob: -5.026196002960205
    8. '```' → logprob: -5.526196002960205
    9. '          ' → logprob: -5.901196002960205
    10. 'a' → logprob: -6.401196002960205

Token 936: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1850142925977707
    2. '#' (adapté à ' #') → logprob: -2.560014247894287
    3. 'result' → logprob: -3.685014247894287
    4. ' if' → logprob: -4.435014247894287
    5. 'if' → logprob: -4.685014247894287
    6. ' #' → logprob: -4.685014247894287
    7. ' x' → logprob: -5.560014247894287
    8. ' result' → logprob: -5.685014247894287
    9. '        ' → logprob: -5.935014247894287
    10. 'x' → logprob: -6.185014247894287

Token 937: ' For' (ID: 2214)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8941356539726257
    2. 'if' → logprob: -1.3941357135772705
    3. 'import' → logprob: -1.8941357135772705
    4. '#' → logprob: -2.2691357135772705
    5. 'result' → logprob: -3.6441357135772705
    6. 'a' → logprob: -4.144135475158691
    7. 'quot' → logprob: -4.894135475158691
    8. 'def' → logprob: -5.394135475158691
    9. 'from' → logprob: -5.394135475158691
    10. 'res' → logprob: -5.519135475158691

Token 938: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -1.0106099843978882
    2. 'a' → logprob: -1.3856099843978882
    3. '整数' → logprob: -1.3856099843978882
    4. 'integer' → logprob: -3.5106101036071777
    5. 'div' → logprob: -4.260610103607178
    6. 'x' → logprob: -4.385610103607178
    7. 'int' → logprob: -4.510610103607178
    8. 'b' → logprob: -4.510610103607178
    9. 'positive' → logprob: -4.635610103607178
    10. 'def' → logprob: -5.010610103607178

Token 939: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22934626042842865
    2. '       ' → logprob: -2.47934627532959
    3. ',' → logprob: -2.97934627532959
    4. 'a' → logprob: -4.47934627532959
    5. ':' → logprob: -4.72934627532959
    6. ' if' → logprob: -4.85434627532959
    7. ' (' → logprob: -5.10434627532959
    8. '(a' → logprob: -5.10434627532959
    9. ' =' → logprob: -5.22934627532959
    10. ' a' → logprob: -5.97934627532959

Token 940: '/b' (ID: 7611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7850812077522278
    2. ' //' → logprob: -1.035081148147583
    3. ' /' → logprob: -3.035081148147583
    4. '//' → logprob: -3.285081148147583
    5. ',' → logprob: -3.410081148147583
    6. '       ' → logprob: -4.035081386566162
    7. '[' → logprob: -4.285081386566162
    8. ' ' → logprob: -4.535081386566162
    9. ' ,' → logprob: -5.785081386566162
    10. ' -' → logprob: -5.910081386566162

Token 941: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5128625631332397
    2. '       ' → logprob: -1.2628625631332397
    3. ':' → logprob: -2.8878626823425293
    4. ',' → logprob: -3.3878626823425293
    5. '   ' → logprob: -4.637862682342529
    6. ' if' → logprob: -5.262862682342529
    7. '：
' → logprob: -5.762862682342529
    8. '           ' → logprob: -6.137862682342529
    9. 'if' → logprob: -6.512862682342529
    10. '):
' → logprob: -7.137862682342529

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018636647146195173
    2. ' if' → logprob: -6.626863479614258
    3. ' a' → logprob: -8.626863479614258
    4. '   ' → logprob: -8.751863479614258
    5. ' b' → logprob: -10.001863479614258
    6. '```' → logprob: -11.001863479614258
    7. 'b' → logprob: -11.126863479614258
    8. 'import' → logprob: -11.126863479614258
    9. 'a' → logprob: -11.376863479614258
    10. ',' → logprob: -11.501863479614258

Token 943: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8730423450469971
    2. '       ' → logprob: -1.248042345046997
    3. ' if' → logprob: -1.748042345046997
    4. 'sign' → logprob: -2.998042345046997
    5. 'q' → logprob: -4.248042106628418
    6. 'result' → logprob: -4.498042106628418
    7. 'quot' → logprob: -4.748042106628418
    8. '#' (adapté à ' #') → logprob: -4.873042106628418
    9. 'import' → logprob: -4.998042106628418
    10. 'abs' → logprob: -5.373042106628418

Token 944: ' Calculate' (ID: 38942)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28754761815071106
    2. 'res' → logprob: -2.2875475883483887
    3. 'q' → logprob: -2.6625475883483887
    4. ' if' → logprob: -3.7875475883483887
    5. 'sign' → logprob: -4.162547588348389
    6. 'import' → logprob: -4.537547588348389
    7. 'result' → logprob: -4.662547588348389
    8. 'quot' → logprob: -5.287547588348389
    9. '       ' → logprob: -5.537547588348389
    10. '#' → logprob: -5.537547588348389

Token 945: ' a' (ID: 261)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3200515806674957
    2. 'a' → logprob: -1.6950515508651733
    3. '(a' → logprob: -3.570051670074463
    4. ' int' → logprob: -4.320051670074463
    5. 'round' → logprob: -4.820051670074463
    6. 'abs' → logprob: -5.070051670074463
    7. ' (' → logprob: -5.320051670074463
    8. ' a' → logprob: -5.320051670074463
    9. '(int' → logprob: -5.320051670074463
    10. '   ' → logprob: -5.695051670074463

Token 946: '/b' (ID: 7611)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9650527238845825
    2. ' //' → logprob: -1.3400527238845825
    3. '/' → logprob: -1.4650527238845825
    4. '//' → logprob: -2.215052604675293
    5. '/b' → logprob: -4.340052604675293
    6. '   ' → logprob: -6.840052604675293
    7. '       ' → logprob: -7.340052604675293
    8. ',' → logprob: -7.715052604675293
    9. ' ' → logprob: -8.215052604675293
    10. '`' → logprob: -8.715052604675293

Token 947: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.849404513835907
    2. '   ' → logprob: -1.5994045734405518
    3. '       ' → logprob: -2.3494045734405518
    4. '
' → logprob: -2.8494045734405518
    5. ' /' → logprob: -2.9744045734405518
    6. ' =' → logprob: -3.0994045734405518
    7. '           ' → logprob: -4.099404335021973
    8. ' if' → logprob: -4.599404335021973
    9. '```' → logprob: -4.599404335021973
    10. '=' → logprob: -4.599404335021973

Token 948: 'float' (ID: 7829)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -1.2486236095428467
    2. ')' → logprob: -1.3736236095428467
    3. ')
' → logprob: -1.3736236095428467
    4. 'a' → logprob: -2.6236236095428467
    5. ',' → logprob: -3.7486236095428467
    6. '
' → logprob: -4.123623847961426
    7. ' )
' → logprob: -4.748623847961426
    8. ' ),' → logprob: -4.873623847961426
    9. 'abs' → logprob: -4.873623847961426
    10. ' )' → logprob: -5.123623847961426

Token 949: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6339384317398071
    2. ',' → logprob: -1.8839384317398071
    3. '
' → logprob: -2.2589383125305176
    4. ')' → logprob: -2.5089383125305176
    5. ',
' → logprob: -2.8839383125305176
    6. '       ' → logprob: -3.8839383125305176
    7. '   ' → logprob: -4.508938312530518
    8. '),' → logprob: -4.633938312530518
    9. '```' → logprob: -5.133938312530518
    10. '`' → logprob: -5.633938312530518

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034228190779685974
    2. ',' → logprob: -4.534228324890137
    3. '```' → logprob: -5.409228324890137
    4. 'if' → logprob: -5.659228324890137
    5. '
' → logprob: -5.784228324890137
    6. 'result' → logprob: -6.534228324890137
    7. ' if' → logprob: -6.784228324890137
    8. '`' → logprob: -6.784228324890137
    9. '           ' → logprob: -6.784228324890137
    10. ':' → logprob: -7.284228324890137

Token 951: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006782165728509426
    2. 'a' → logprob: -6.631782054901123
    3. ',' → logprob: -6.881782054901123
    4. '           ' → logprob: -7.381782054901123
    5. '   ' → logprob: -7.506782054901123
    6. '
' → logprob: -8.006782531738281
    7. '.' → logprob: -8.631782531738281
    8. '`' → logprob: -8.756782531738281
    9. '(' → logprob: -8.756782531738281
    10. ' /' → logprob: -8.756782531738281

Token 952: ' Then' (ID: 7801)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5999879240989685
    2. '       ' → logprob: -1.7249879837036133
    3. ' val' → logprob: -2.3499879837036133
    4. 'res' → logprob: -3.5999879837036133
    5. ' if' → logprob: -3.7249879837036133
    6. ' result' → logprob: -3.8499879837036133
    7. 'result' → logprob: -4.099987983703613
    8. ' x' → logprob: -4.349987983703613
    9. 'val' → logprob: -4.474987983703613
    10. 'v' → logprob: -4.849987983703613

Token 953: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5262277722358704
    2. '       ' → logprob: -2.9012277126312256
    3. 'val' → logprob: -2.9012277126312256
    4. 'import' → logprob: -3.0262277126312256
    5. 'result' → logprob: -3.2762277126312256
    6. ' if' → logprob: -3.4012277126312256
    7. 'res' → logprob: -3.4012277126312256
    8. 'v' → logprob: -3.7762277126312256
    9. 'value' → logprob: -3.9012277126312256
    10. 'x' → logprob: -4.026227951049805

Token 954: ' choose' (ID: 5655)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -1.1951662302017212
    2. 'import' → logprob: -1.6951662302017212
    3. 'floor' → logprob: -2.4451661109924316
    4. 'if' → logprob: -3.0701661109924316
    5. '       ' → logprob: -3.3201661109924316
    6. 'def' → logprob: -3.4451661109924316
    7. ' floor' → logprob: -3.5701661109924316
    8. '#' → logprob: -3.6951661109924316
    9. 'div' → logprob: -3.8201661109924316
    10. ' round' → logprob: -3.8201661109924316

Token 955: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1221184730529785
    2. 'the' → logprob: -1.2471184730529785
    3. 'round' → logprob: -1.3721184730529785
    4. ' round' → logprob: -3.7471184730529785
    5. 'int' → logprob: -3.8721184730529785
    6. 'a' → logprob: -3.8721184730529785
    7. ' a' → logprob: -4.2471184730529785
    8. '       ' → logprob: -4.4971184730529785
    9. ' int' → logprob: -4.7471184730529785
    10. '(round' → logprob: -5.1221184730529785

Token 956: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.17408351600170135
    2. 'int' → logprob: -2.9240834712982178
    3. 'if' → logprob: -3.0490834712982178
    4. 'import' → logprob: -4.049083709716797
    5. 'truncate' → logprob: -4.299083709716797
    6. 'floor' → logprob: -5.174083709716797
    7. 'def' → logprob: -5.549083709716797
    8. 'abs' → logprob: -5.799083709716797
    9. 'a' → logprob: -6.049083709716797
    10. ' round' → logprob: -6.299083709716797

Token 957: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.6890780329704285
    2. 'down' → logprob: -1.3140780925750732
    3. 'a' → logprob: -2.3140780925750732
    4. 'to' → logprob: -3.3140780925750732
    5. '(a' → logprob: -4.314077854156494
    6. ' towards' → logprob: -4.564077854156494
    7. ' toward' → logprob: -4.689077854156494
    8. '(' → logprob: -4.814077854156494
    9. '_down' → logprob: -4.814077854156494
    10. '   ' → logprob: -5.439077854156494

Token 958: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5368265509605408
    2. 'the' → logprob: -1.4118266105651855
    3. 'zero' → logprob: -3.0368266105651855
    4. '0' → logprob: -3.1618266105651855
    5. ' the' → logprob: -3.5368266105651855
    6. 'abs' → logprob: -3.5368266105651855
    7. ' zero' → logprob: -4.6618266105651855
    8. 'sm' → logprob: -5.4118266105651855
    9. ' a' → logprob: -5.5368266105651855
    10. 'b' → logprob: -6.0368266105651855

Token 959: ' operand' (ID: 63895)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3976020812988281
    2. 'sm' → logprob: -1.5226020812988281
    3. '0' → logprob: -1.7726020812988281
    4. 'value' → logprob: -2.522602081298828
    5. 'zero' → logprob: -2.522602081298828
    6. 'abs' → logprob: -3.147602081298828
    7. 'b' → logprob: -3.647602081298828
    8. 'closest' → logprob: -3.772602081298828
    9. ' smaller' → logprob: -3.897602081298828
    10. '```' → logprob: -3.897602081298828

Token 960: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2485845535993576
    2. 'with' → logprob: -1.623584508895874
    3. '       ' → logprob: -4.998584747314453
    4. 'の' → logprob: -5.873584747314453
    5. ' closest' → logprob: -5.873584747314453
    6. 's' → logprob: -6.248584747314453
    7. 'a' → logprob: -6.498584747314453
    8. ' that' → logprob: -6.623584747314453
    9. '   ' → logprob: -6.748584747314453
    10. 'closest' → logprob: -7.123584747314453

Token 961: ' smaller' (ID: 13679)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.023420866578817368
    2. 'abs' → logprob: -4.148420810699463
    3. ' smaller' → logprob: -5.523420810699463
    4. 'a' → logprob: -6.523420810699463
    5. 'the' → logprob: -7.148420810699463
    6. 'small' → logprob: -7.523420810699463
    7. '```' → logprob: -9.023421287536621
    8. '#' → logprob: -9.273421287536621
    9. '小' → logprob: -9.398421287536621
    10. 'absolute' → logprob: -9.898421287536621

Token 962: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.14622290432453156
    2. ' abs' → logprob: -2.0212228298187256
    3. '(abs' → logprob: -6.271223068237305
    4. '   ' → logprob: -7.521223068237305
    5. ' ' → logprob: -7.646223068237305
    6. 'a' → logprob: -9.146223068237305
    7. '_abs' → logprob: -9.521223068237305
    8. ''' → logprob: -9.896223068237305
    9. ' a' → logprob: -10.021223068237305
    10. '1' → logprob: -10.021223068237305

Token 963: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.01543554849922657
    2. ' value' → logprob: -4.265435695648193
    3. '_value' → logprob: -7.515435695648193
    4. '値' → logprob: -7.640435695648193
    5. '-value' → logprob: -9.515435218811035
    6. ' ' → logprob: -10.890435218811035
    7. '価' → logprob: -10.890435218811035
    8. ')' → logprob: -11.015435218811035
    9. '{
' → logprob: -11.015435218811035
    10. '```' → logprob: -11.015435218811035

Token 964: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14127768576145172
    2. '       ' → logprob: -2.14127779006958
    3. ',' → logprob: -6.14127779006958
    4. ' if' → logprob: -6.26627779006958
    5. ' (' → logprob: -6.26627779006958
    6. ':' → logprob: -6.39127779006958
    7. '(' → logprob: -7.01627779006958
    8. ' and' → logprob: -7.39127779006958
    9. '```' → logprob: -7.76627779006958
    10. 'if' → logprob: -8.016277313232422

Token 965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01079194899648428
    2. ' (' → logprob: -5.510791778564453
    3. '(' → logprob: -5.760791778564453
    4. ',' → logprob: -7.135791778564453
    5. '           ' → logprob: -7.260791778564453
    6. ' and' → logprob: -7.760791778564453
    7. ' if' → logprob: -8.260791778564453
    8. '        ' → logprob: -8.510791778564453
    9. 'a' → logprob: -8.760791778564453
    10. 'b' → logprob: -9.260791778564453

Token 966: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029391014948487282
    2. ' (' → logprob: -4.779390811920166
    3. '        ' → logprob: -5.904390811920166
    4. ' '' → logprob: -6.029390811920166
    5. ' and' → logprob: -6.154390811920166
    6. ' b' → logprob: -6.279390811920166
    7. ',' → logprob: -6.404390811920166
    8. '(' → logprob: -6.404390811920166
    9. ''' → logprob: -7.154390811920166
    10. 'b' → logprob: -7.404390811920166

Token 967: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027615953236818314
    2. '   ' → logprob: -5.027616024017334
    3. ' if' → logprob: -5.027616024017334
    4. '           ' → logprob: -6.277616024017334
    5. 'if' → logprob: -6.402616024017334
    6. 'import' → logprob: -6.527616024017334
    7. ' ' → logprob: -7.277616024017334
    8. 'from' → logprob: -7.402616024017334
    9. ' abs' → logprob: -7.527616024017334
    10. '#' → logprob: -7.652616024017334

Token 968: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8637815713882446
    2. 'val' → logprob: -2.113781452178955
    3. 'quot' → logprob: -2.363781452178955
    4. 'result' → logprob: -2.738781452178955
    5. 'sign' → logprob: -3.238781452178955
    6. 'value' → logprob: -3.488781452178955
    7. 'import' → logprob: -3.613781452178955
    8. 'div' → logprob: -3.613781452178955
    9. 'a' → logprob: -3.863781452178955
    10. '#' → logprob: -3.863781452178955

Token 969: ' the' (ID: 290)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.31830841302871704
    2. '(' → logprob: -2.0683083534240723
    3. '       ' → logprob: -3.6933083534240723
    4. '   ' → logprob: -3.6933083534240723
    5. '((' → logprob: -3.6933083534240723
    6. '(abs' → logprob: -3.9433083534240723
    7. 'def' → logprob: -4.568308353424072
    8. '(
' → logprob: -5.568308353424072
    9. 'down' → logprob: -5.693308353424072
    10. '(value' → logprob: -5.693308353424072

Token 970: ' decimal' (ID: 26964)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16379550099372864
    2. ' result' → logprob: -2.4137954711914062
    3. 'fraction' → logprob: -3.7887954711914062
    4. 'value' → logprob: -4.663795471191406
    5. ' fractional' → logprob: -5.038795471191406
    6. '結果' → logprob: -5.288795471191406
    7. 'int' → logprob: -5.663795471191406
    8. ' next' → logprob: -6.038795471191406
    9. 'token' → logprob: -6.288795471191406
    10. ' value' → logprob: -6.413795471191406

Token 971: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.4993886649608612
    2. '部分' → logprob: -1.3743886947631836
    3. '   ' → logprob: -3.2493886947631836
    4. 'point' → logprob: -3.4993886947631836
    5. ' part' → logprob: -4.124388694763184
    6. '部' → logprob: -4.499388694763184
    7. '点' → logprob: -4.624388694763184
    8. '       ' → logprob: -5.124388694763184
    9. 'a' → logprob: -5.624388694763184
    10. '0' → logprob: -5.749388694763184

Token 972: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2528868615627289
    2. '   ' → logprob: -1.6278868913650513
    3. '```' → logprob: -5.252886772155762
    4. '           ' → logprob: -5.752886772155762
    5. '(' → logprob: -6.002886772155762
    6. ',' → logprob: -6.127886772155762
    7. 'def' → logprob: -6.502886772155762
    8. '.' → logprob: -6.502886772155762
    9. '
' → logprob: -6.752886772155762
    10. 'a' → logprob: -6.877886772155762

Token 973: 'discard' (ID: 170880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4027644395828247
    2. '       ' → logprob: -1.5277644395828247
    3. 'a' → logprob: -2.027764320373535
    4. ' a' → logprob: -2.652764320373535
    5. 'int' → logprob: -3.277764320373535
    6. 'b' → logprob: -3.402764320373535
    7. ' b' → logprob: -3.777764320373535
    8. ',' → logprob: -3.902764320373535
    9. '0' → logprob: -3.902764320373535
    10. '           ' → logprob: -3.902764320373535

Token 974: ' decimal' (ID: 26964)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -1.5211234092712402
    2. ')' → logprob: -1.6461234092712402
    3. 'the' → logprob: -1.7711234092712402
    4. '部分' → logprob: -2.5211234092712402
    5. '.' → logprob: -2.6461234092712402
    6. '       ' → logprob: -3.1461234092712402
    7. '）' → logprob: -3.5211234092712402
    8. ' the' → logprob: -3.6461234092712402
    9. '```' → logprob: -3.6461234092712402
    10. '_fraction' → logprob: -3.8961234092712402

Token 975: ' part' (ID: 997)
  Prédit: '部分'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '部分' → logprob: -1.1750108003616333
    2. ' part' → logprob: -1.3000108003616333
    3. 'part' → logprob: -1.5500108003616333
    4. '部' → logprob: -2.8000106811523438
    5. '_' → logprob: -2.9250106811523438
    6. '_part' → logprob: -3.4250106811523438
    7. ')' → logprob: -4.050010681152344
    8. '   ' → logprob: -4.175010681152344
    9. '       ' → logprob: -5.300010681152344
    10. '）' → logprob: -5.675010681152344

Token 976: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5226348638534546
    2. ')
' → logprob: -1.7726348638534546
    3. ')' → logprob: -2.022634983062744
    4. '   ' → logprob: -2.647634983062744
    5. '           ' → logprob: -4.897634983062744
    6. 'を' → logprob: -4.897634983062744
    7. '部分' → logprob: -5.397634983062744
    8. ',' → logprob: -5.772634983062744
    9. '):
' → logprob: -6.397634983062744
    10. '）' → logprob: -6.397634983062744

Token 977: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006686483509838581
    2. '(' → logprob: -6.006686687469482
    3. ' (' → logprob: -7.256686687469482
    4. ',' → logprob: -7.506686687469482
    5. '   ' → logprob: -7.631686687469482
    6. '           ' → logprob: -7.631686687469482
    7. '```' → logprob: -8.006686210632324
    8. '        
' → logprob: -8.631686210632324
    9. '
' → logprob: -8.756686210632324
    10. '\' → logprob: -8.881686210632324

Token 978: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009888652712106705
    2. 'a' → logprob: -8.875988960266113
    3. '   ' → logprob: -8.875988960266113
    4. ' if' → logprob: -9.000988960266113
    5. '           ' → logprob: -9.750988960266113
    6. ' a' → logprob: -9.750988960266113
    7. ',' → logprob: -10.000988960266113
    8. ' ' → logprob: -10.250988960266113
    9. '        
' → logprob: -10.500988960266113
    10. 'if' → logprob: -10.563488960266113

Token 979: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20070940256118774
    2. 'x' → logprob: -3.450709342956543
    3. ' x' → logprob: -3.700709342956543
    4. 'div' → logprob: -4.075709342956543
    5. 'val' → logprob: -4.075709342956543
    6. 'a' → logprob: -4.325709342956543
    7. 'import' → logprob: -4.325709342956543
    8. 'v' → logprob: -4.575709342956543
    9. 'if' → logprob: -4.825709342956543
    10. 'value' → logprob: -5.450709342956543

Token 980: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.6542277336120605
    2. ' def' → logprob: -1.6542277336120605
    3. ' /' → logprob: -2.0292277336120605
    4. '   ' → logprob: -2.4042277336120605
    5. '       ' → logprob: -3.0292277336120605
    6. ' ' → logprob: -3.0292277336120605
    7. '
' → logprob: -3.1542277336120605
    8. 'def' → logprob: -3.2792277336120605
    9. '続きを' → logprob: -3.4042277336120605
    10. '/' → logprob: -4.0292277336120605

Token 981: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.637806236743927
    2. '       ' → logprob: -2.1378061771392822
    3. '           ' → logprob: -2.5128061771392822
    4. 'a' → logprob: -2.6378061771392822
    5. '   ' → logprob: -3.2628061771392822
    6. ' b' → logprob: -3.5128061771392822
    7. '    ' → logprob: -4.012806415557861
    8. 'b' → logprob: -4.012806415557861
    9. '続きを' → logprob: -4.137806415557861
    10. '```' → logprob: -4.262806415557861

Token 982: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.866590142250061
    2. 'def' → logprob: -2.1165900230407715
    3. '       ' → logprob: -2.3665900230407715
    4. '           ' → logprob: -2.8665900230407715
    5. ' b' → logprob: -3.2415900230407715
    6. ' /' → logprob: -3.6165900230407715
    7. ' def' → logprob: -3.8665900230407715
    8. '/b' → logprob: -3.9915900230407715
    9. '/' → logprob: -4.1165900230407715
    10. '   ' → logprob: -4.3665900230407715

Token 983: ' ambiguous' (ID: 123648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6773435473442078
    2. ' more' → logprob: -1.5523436069488525
    3. '       ' → logprob: -2.1773436069488525
    4. ' complicated' → logprob: -3.0523436069488525
    5. ' tricky' → logprob: -3.0523436069488525
    6. ' complex' → logprob: -4.177343368530273
    7. ' ' → logprob: -5.177343368530273
    8. 'def' → logprob: -5.302343368530273
    9. ' の' → logprob: -5.302343368530273
    10. ' of' → logprob: -5.552343368530273

Token 984: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5871178507804871
    2. '   ' → logprob: -0.8371178507804871
    3. ' if' → logprob: -5.587117671966553
    4. '#' → logprob: -6.587117671966553
    5. '続きを' → logprob: -7.212117671966553
    6. 'def' → logprob: -7.337117671966553
    7. '           ' → logprob: -7.712117671966553
    8. 'if' → logprob: -7.837117671966553
    9. ',' → logprob: -7.962117671966553
    10. ' =' → logprob: -8.337118148803711

Token 985: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05131399258971214
    2. ' if' → logprob: -3.676313877105713
    3. '        ' → logprob: -4.926313877105713
    4. '           ' → logprob: -5.301313877105713
    5. ' a' → logprob: -6.301313877105713
    6. 'if' → logprob: -6.551313877105713
    7. 'Let's' → logprob: -6.676313877105713
    8. '   ' → logprob: -6.801313877105713
    9. ' ' → logprob: -7.301313877105713
    10. ' def' → logprob: -7.426313877105713

Token 986: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36792731285095215
    2. ' if' → logprob: -1.7429273128509521
    3. 'if' → logprob: -3.117927312850952
    4. '#' → logprob: -3.492927312850952
    5. ' a' → logprob: -3.992927312850952
    6. 'import' → logprob: -4.367927551269531
    7. 'a' → logprob: -4.617927551269531
    8. ' #' → logprob: -5.867927551269531
    9. '   ' → logprob: -6.617927551269531
    10. 'sign' → logprob: -6.617927551269531

Token 987: ' interpret' (ID: 18135)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5774362683296204
    2. ' continue' → logprob: -2.0774362087249756
    3. ' return' → logprob: -2.4524362087249756
    4. '   ' → logprob: -3.2024362087249756
    5. '           ' → logprob: -3.7024362087249756
    6. 'continue' → logprob: -3.8274362087249756
    7. 'return' → logprob: -4.202436447143555
    8. 'def' → logprob: -4.327436447143555
    9. '続きを' → logprob: -4.452436447143555
    10. ' should' → logprob: -4.577436447143555

Token 988: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7894455194473267
    2. ' as' → logprob: -0.9144455194473267
    3. 'a' → logprob: -3.414445400238037
    4. ' that' → logprob: -3.664445400238037
    5. ' a' → logprob: -3.789445400238037
    6. 'as' → logprob: -3.914445400238037
    7. ' the' → logprob: -4.039445400238037
    8. '   ' → logprob: -5.414445400238037
    9. 'that' → logprob: -5.414445400238037
    10. 'the' → logprob: -5.539445400238037

Token 989: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06012725457549095
    2. 'abs' → logprob: -4.560127258300781
    3. 'a' → logprob: -4.935127258300781
    4. '           ' → logprob: -4.935127258300781
    5. 'if' → logprob: -4.935127258300781
    6. ' if' → logprob: -5.060127258300781
    7. ' a' → logprob: -5.185127258300781
    8. '```' → logprob: -5.685127258300781
    9. 'b' → logprob: -6.310127258300781
    10. 'def' → logprob: -6.435127258300781

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037075618747621775
    2. ' a' → logprob: -7.003707408905029
    3. '        ' → logprob: -7.003707408905029
    4. ' if' → logprob: -7.628707408905029
    5. '           ' → logprob: -7.753707408905029
    6. 'a' → logprob: -8.378707885742188
    7. '(' → logprob: -9.003707885742188
    8. '```' → logprob: -9.128707885742188
    9. ' (' → logprob: -9.503707885742188
    10. '   ' → logprob: -9.628707885742188

Token 991: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10388870537281036
    2. ' a' → logprob: -3.853888750076294
    3. ' if' → logprob: -4.228888511657715
    4. '           ' → logprob: -4.353888511657715
    5. 'a' → logprob: -4.478888511657715
    6. '   ' → logprob: -4.603888511657715
    7. ' op' → logprob: -5.103888511657715
    8. 'if' → logprob: -5.103888511657715
    9. '        ' → logprob: -6.103888511657715
    10. 'op' → logprob: -6.728888511657715

Token 992: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09780406951904297
    2. '   ' → logprob: -3.222804069519043
    3. 'q' → logprob: -4.972804069519043
    4. ' x' → logprob: -5.472804069519043
    5. 'v' → logprob: -5.597804069519043
    6. 'x' → logprob: -5.597804069519043
    7. 'if' → logprob: -5.597804069519043
    8. ' res' → logprob: -5.847804069519043
    9. 'res' → logprob: -6.097804069519043
    10. ' if' → logprob: -6.097804069519043

Token 993: ' Rounded' (ID: 105591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1581888496875763
    2. 'abs' → logprob: -3.533188819885254
    3. 'a' → logprob: -3.783188819885254
    4. '   ' → logprob: -4.033188819885254
    5. 'import' → logprob: -4.283188819885254
    6. 'if' → logprob: -4.533188819885254
    7. '#' → logprob: -5.033188819885254
    8. 'val' → logprob: -5.283188819885254
    9. 'def' → logprob: -5.408188819885254
    10. 'quot' → logprob: -5.533188819885254

Token 994: ' value' (ID: 1432)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.9778185486793518
    2. 'a' → logprob: -1.602818489074707
    3. ' towards' → logprob: -1.977818489074707
    4. '       ' → logprob: -2.852818489074707
    5. ' toward' → logprob: -3.477818489074707
    6. 'def' → logprob: -3.477818489074707
    7. '   ' → logprob: -4.102818489074707
    8. ' ' → logprob: -4.227818489074707
    9. ' a' → logprob: -4.477818489074707
    10. 'down' → logprob: -4.602818489074707

Token 995: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4388428330421448
    2. '=' → logprob: -1.8138427734375
    3. '       ' → logprob: -1.9388427734375
    4. ',' → logprob: -4.3138427734375
    5. ' towards' → logprob: -4.5638427734375
    6. 'tow' → logprob: -5.0638427734375
    7. '           ' → logprob: -5.1888427734375
    8. ' toward' → logprob: -6.1888427734375
    9. ' is' → logprob: -6.5638427734375
    10. '(' → logprob: -6.9388427734375

Token 996: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1977519989013672
    2. ' a' → logprob: -1.4477519989013672
    3. 'int' → logprob: -1.6977519989013672
    4. ' int' → logprob: -1.8227519989013672
    5. '           ' → logprob: -4.072751998901367
    6. ' (' → logprob: -4.197751998901367
    7. ' the' → logprob: -4.197751998901367
    8. '       ' → logprob: -4.572751998901367
    9. ' min' → logprob: -4.947751998901367
    10. 'min' → logprob: -4.947751998901367

Token 997: ' integer' (ID: 16336)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8131346106529236
    2. 'closest' → logprob: -2.5631346702575684
    3. ' closest' → logprob: -2.6881346702575684
    4. ' smaller' → logprob: -2.9381346702575684
    5. 'nearest' → logprob: -3.4381346702575684
    6. 'next' → logprob: -3.5631346702575684
    7. 'sm' → logprob: -3.6881346702575684
    8. ' b' → logprob: -3.8131346702575684
    9. ' nearest' → logprob: -3.9381346702575684
    10. 'a' → logprob: -3.9381346702575684

Token 998: ' nearer' (ID: 157711)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0719408988952637
    2. 'part' → logprob: -1.8219408988952637
    3. 'division' → logprob: -1.9469408988952637
    4. '(' → logprob: -2.3219408988952637
    5. '```' → logprob: -3.0719408988952637
    6. 'value' → logprob: -3.5719408988952637
    7. 'div' → logprob: -4.071940898895264
    8. '(a' → logprob: -4.071940898895264
    9. '(
' → logprob: -4.196940898895264
    10. '           ' → logprob: -4.321940898895264

Token 999: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7571620345115662
    2. 'to' → logprob: -1.507162094116211
    3. '       ' → logprob: -1.632162094116211
    4. '   ' → logprob: -3.132162094116211
    5. ' ' → logprob: -3.507162094116211
    6. ' (' → logprob: -5.257162094116211
    7. '_to' → logprob: -5.507162094116211
    8. ' than' → logprob: -5.632162094116211
    9. '(' → logprob: -5.757162094116211
    10. 'tow' → logprob: -6.007162094116211

Token 1000: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25138938426971436
    2. 'the' → logprob: -2.251389503479004
    3. 'zero' → logprob: -2.626389503479004
    4. 'b' → logprob: -4.376389503479004
    5. ' zero' → logprob: -4.376389503479004
    6. '0' → logprob: -4.626389503479004
    7. ' the' → logprob: -6.001389503479004
    8. ' a' → logprob: -6.126389503479004
    9. 'op' → logprob: -6.501389503479004
    10. '       ' → logprob: -7.251389503479004

Token 1001: ' operand' (ID: 63895)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3546819686889648
    2. 'operand' → logprob: -1.3546819686889648
    3. 'a' → logprob: -1.9796819686889648
    4. 'op' → logprob: -2.104681968688965
    5. ' operand' → logprob: -3.229681968688965
    6. ' op' → logprob: -3.479681968688965
    7. ' b' → logprob: -3.604681968688965
    8. 'token' → logprob: -4.104681968688965
    9. '```' → logprob: -4.604681968688965
    10. '``' → logprob: -4.854681968688965

Token 1002: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3733505606651306
    2. ' /' → logprob: -2.9983506202697754
    3. '   ' → logprob: -3.1233506202697754
    4. 'の' → logprob: -3.9983506202697754
    5. ' /
' → logprob: -4.123350620269775
    6. '```' → logprob: -4.373350620269775
    7. '/' → logprob: -4.498350620269775
    8. ' (' → logprob: -4.498350620269775
    9. ':
' → logprob: -4.748350620269775
    10. ' with' → logprob: -4.748350620269775

Token 1003: ' smaller' (ID: 13679)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.01200129371136427
    2. 'a' → logprob: -5.1370015144348145
    3. ' smaller' → logprob: -6.0120015144348145
    4. 'the' → logprob: -7.2620015144348145
    5. 'small' → logprob: -7.2620015144348145
    6. '#' → logprob: -7.3870015144348145
    7. '```' → logprob: -7.6370015144348145
    8. 'abs' → logprob: -8.262001037597656
    9. '小' → logprob: -8.262001037597656
    10. '-sm' → logprob: -8.887001037597656

Token 1004: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.012572160921990871
    2. ' abs' → logprob: -4.637572288513184
    3. '(abs' → logprob: -6.637572288513184
    4. 'op' → logprob: -7.512572288513184
    5. 'value' → logprob: -8.137572288513184
    6. 'a' → logprob: -8.637572288513184
    7. '   ' → logprob: -8.762572288513184
    8. '```' → logprob: -9.762572288513184
    9. ' ' → logprob: -9.887572288513184
    10. 'absolute' → logprob: -10.137572288513184

Token 1005: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.09545297920703888
    2. '_value' → logprob: -2.7204530239105225
    3. '       ' → logprob: -3.9704530239105225
    4. ' value' → logprob: -5.720452785491943
    5. '   ' → logprob: -6.470452785491943
    6. ')' → logprob: -8.845453262329102
    7. '0' → logprob: -8.845453262329102
    8. '           ' → logprob: -8.970453262329102
    9. '     ' → logprob: -9.095453262329102
    10. '値' → logprob: -9.095453262329102

Token 1006: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20419439673423767
    2. '   ' → logprob: -2.3291943073272705
    3. 'def' → logprob: -3.8291943073272705
    4. ':
' → logprob: -4.70419454574585
    5. ' if' → logprob: -4.82919454574585
    6. ' =' → logprob: -5.20419454574585
    7. 'import' → logprob: -5.32919454574585
    8. ',' → logprob: -5.45419454574585
    9. ':' → logprob: -5.45419454574585
    10. '
' → logprob: -5.57919454574585

Token 1007: 'among' (ID: 147133)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9835495352745056
    2. '       ' → logprob: -1.7335495948791504
    3. ')' → logprob: -1.9835495948791504
    4. 'a' → logprob: -2.6085495948791504
    5. ' a' → logprob: -2.9835495948791504
    6. '   ' → logprob: -3.4835495948791504
    7. ' b' → logprob: -3.8585495948791504
    8. 'b' → logprob: -4.23354959487915
    9. '):
' → logprob: -4.60854959487915
    10. '```' → logprob: -4.85854959487915

Token 1008: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016040096525102854
    2. 'abs' → logprob: -6.626604080200195
    3. 'the' → logprob: -9.626604080200195
    4. 'op' → logprob: -9.626604080200195
    5. ' a' → logprob: -9.751604080200195
    6. 'b' → logprob: -10.376604080200195
    7. 'int' → logprob: -11.001604080200195
    8. '(a' → logprob: -11.376604080200195
    9. '   ' → logprob: -12.126604080200195
    10. ' abs' → logprob: -12.501604080200195

Token 1009: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3401641845703125
    2. ' and' → logprob: -1.7151641845703125
    3. ',' → logprob: -2.4651641845703125
    4. 'or' → logprob: -5.2151641845703125
    5. ' or' → logprob: -5.5901641845703125
    6. 'と' → logprob: -5.5901641845703125
    7. ',b' → logprob: -6.2151641845703125
    8. 'a' → logprob: -6.3401641845703125
    9. '、' → logprob: -6.7151641845703125
    10. 'operand' → logprob: -6.9651641845703125

Token 1010: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006421420839615166
    2. ' b' → logprob: -7.3756422996521
    3. 'op' → logprob: -12.250641822814941
    4. '       ' → logprob: -12.375641822814941
    5. '   ' → logprob: -13.875641822814941
    6. '           ' → logprob: -14.000641822814941
    7. ' ' → logprob: -14.250641822814941
    8. '     ' → logprob: -14.750641822814941
    9. '         ' → logprob: -14.750641822814941
    10. '	b' → logprob: -15.625641822814941

Token 1011: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22400103509426117
    2. ')
' → logprob: -2.724000930786133
    3. '):
' → logprob: -2.849000930786133
    4. ')' → logprob: -3.224000930786133
    5. ',' → logprob: -4.974000930786133
    6. '):' → logprob: -5.099000930786133
    7. '),' → logprob: -5.224000930786133
    8. '   ' → logprob: -5.224000930786133
    9. '#' → logprob: -6.349000930786133
    10. 'の' → logprob: -6.474000930786133

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004680511076003313
    2. '```' → logprob: -6.129680633544922
    3. ',' → logprob: -7.379680633544922
    4. ' (' → logprob: -8.129680633544922
    5. '(' → logprob: -8.129680633544922
    6. '   ' → logprob: -8.379680633544922
    7. '           ' → logprob: -8.504680633544922
    8. '[' → logprob: -9.129680633544922
    9. ')' → logprob: -9.254680633544922
    10. '.' → logprob: -9.379680633544922

Token 1013: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014055903302505612
    2. '           ' → logprob: -8.626405715942383
    3. '`' → logprob: -9.001405715942383
    4. ',' → logprob: -9.126405715942383
    5. 'return' → logprob: -9.126405715942383
    6. '```' → logprob: -9.126405715942383
    7. '#' (adapté à ' #') → logprob: -9.251405715942383
    8. '   ' → logprob: -9.251405715942383
    9. ''' → logprob: -9.501405715942383
    10. ')' → logprob: -9.751405715942383

Token 1014: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009000496938824654
    2. '   ' → logprob: -5.384000301361084
    3. '```' → logprob: -6.134000301361084
    4. '           ' → logprob: -7.759000301361084
    5. '#' → logprob: -8.134000778198242
    6. ' ' → logprob: -8.759000778198242
    7. ')' → logprob: -8.759000778198242
    8. '``' → logprob: -8.884000778198242
    9. ' #' → logprob: -9.634000778198242
    10. ' if' → logprob: -9.634000778198242

Token 1015: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06993620842695236
    2. '#' → logprob: -3.9449362754821777
    3. 'def' → logprob: -4.694936275482178
    4. '   ' → logprob: -5.319936275482178
    5. ' #' → logprob: -5.569936275482178
    6. ' if' → logprob: -5.819936275482178
    7. 'Let's' → logprob: -5.944936275482178
    8. 'import' → logprob: -6.069936275482178
    9. 'abs' → logprob: -6.194936275482178
    10. 'If' → logprob: -6.194936275482178

Token 1016: ' truncate' (ID: 126309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8578025102615356
    2. 'the' → logprob: -1.9828025102615356
    3. 'int' → logprob: -2.982802391052246
    4. '#' → logprob: -2.982802391052246
    5. ' the' → logprob: -3.107802391052246
    6. ' a' → logprob: -3.232802391052246
    7. 'return' → logprob: -3.482802391052246
    8. 'abs' → logprob: -3.482802391052246
    9. 'value' → logprob: -3.607802391052246
    10. 'result' → logprob: -3.732802391052246

Token 1017: ' decimal' (ID: 26964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22871245443820953
    2. '   ' → logprob: -2.228712558746338
    3. '_' → logprob: -3.853712558746338
    4. '           ' → logprob: -4.353712558746338
    5. ' towards' → logprob: -5.103712558746338
    6. '```' → logprob: -5.228712558746338
    7. ' ' → logprob: -5.478712558746338
    8. 'def' → logprob: -5.603712558746338
    9. ' toward' → logprob: -5.853712558746338
    10. '()
' → logprob: -5.853712558746338

Token 1018: ' part' (ID: 997)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -1.534342646598816
    2. '       ' → logprob: -1.659342646598816
    3. '(a' → logprob: -2.5343427658081055
    4. '   ' → logprob: -2.5343427658081055
    5. ' towards' → logprob: -2.5343427658081055
    6. ' toward' → logprob: -2.7843427658081055
    7. '_' → logprob: -3.4093427658081055
    8. 'def' → logprob: -3.5343427658081055
    9. '()
' → logprob: -4.0343427658081055
    10. ' a' → logprob: -4.0343427658081055

Token 1019: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2788461446762085
    2. '   ' → logprob: -2.403846263885498
    3. 'def' → logprob: -3.403846263885498
    4. '
' → logprob: -3.903846263885498
    5. '           ' → logprob: -4.528846263885498
    6. '```' → logprob: -4.528846263885498
    7. ':
' → logprob: -5.153846263885498
    8. ',' → logprob: -5.403846263885498
    9. '(
' → logprob: -5.528846263885498
    10. ' toward' → logprob: -5.653846263885498

Token 1020: 'floor' (ID: 60568)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37901294231414795
    2. ')
' → logprob: -2.8790130615234375
    3. ' a' → logprob: -3.0040130615234375
    4. 'a' → logprob: -3.5040130615234375
    5. '```' → logprob: -3.7540130615234375
    6. ' the' → logprob: -4.1290130615234375
    7. '   ' → logprob: -4.1290130615234375
    8. '0' → logprob: -4.5040130615234375
    9. 'b' → logprob: -4.7540130615234375
    10. '
' → logprob: -4.8790130615234375

Token 1021: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6957098841667175
    2. ')' → logprob: -2.0707099437713623
    3. '()' → logprob: -2.1957099437713623
    4. '())' → logprob: -2.6957099437713623
    5. 'def' → logprob: -3.3207099437713623
    6. '())
' → logprob: -3.4457099437713623
    7. '()
' → logprob: -4.070709705352783
    8. ')
' → logprob: -4.195709705352783
    9. 'part' → logprob: -4.195709705352783
    10. '           ' → logprob: -4.820709705352783

Token 1022: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005551762878894806
    2. '   ' → logprob: -5.630551815032959
    3. '           ' → logprob: -7.630551815032959
    4. '```' → logprob: -8.1305513381958
    5. ',' → logprob: -8.6305513381958
    6. 'return' → logprob: -9.0055513381958
    7. '
' → logprob: -9.0055513381958
    8. 'def' → logprob: -9.2555513381958
    9. ' (' → logprob: -9.2555513381958
    10. '(' → logprob: -9.6305513381958

Token 1023: ' rounding' (ID: 112605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1428687572479248
    2. '   ' → logprob: -1.6428687572479248
    3. 'def' → logprob: -1.8928687572479248
    4. 'a' → logprob: -3.267868757247925
    5. 'int' → logprob: -3.392868757247925
    6. 'return' → logprob: -3.517868757247925
    7. '```' → logprob: -3.642868757247925
    8. ' a' → logprob: -3.767868757247925
    9. 'the' → logprob: -4.017868995666504
    10. ' the' → logprob: -4.142868995666504

Token 1024: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09206563234329224
    2. '   ' → logprob: -2.5920655727386475
    3. 'def' → logprob: -5.592065811157227
    4. ' if' → logprob: -5.842065811157227
    5. 'import' → logprob: -6.967065811157227
    6. ' =' → logprob: -7.217065811157227
    7. '           ' → logprob: -7.342065811157227
    8. '```' → logprob: -7.467065811157227
    9. 'if' → logprob: -7.592065811157227
    10. ',' → logprob: -7.967065811157227

Token 1025: ' that' (ID: 484)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.30226969718933105
    2. '0' → logprob: -2.302269697189331
    3. 'the' → logprob: -2.802269697189331
    4. 'zero' → logprob: -3.052269697189331
    5. 'nearest' → logprob: -3.677269697189331
    6. 'closest' → logprob: -5.05226993560791
    7. ' int' → logprob: -5.30226993560791
    8. ' the' → logprob: -5.42726993560791
    9. 'tow' → logprob: -5.55226993560791
    10. ' zero' → logprob: -5.67726993560791

Token 1026: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2909901142120361
    2. 'def' → logprob: -1.2909901142120361
    3. '   ' → logprob: -2.040990114212036
    4. ' a' → logprob: -3.290990114212036
    5. ')' → logprob: -3.540990114212036
    6. '```' → logprob: -3.665990114212036
    7. 'a' → logprob: -3.790990114212036
    8. ' def' → logprob: -4.165989875793457
    9. ' ' → logprob: -4.165989875793457
    10. '           ' → logprob: -4.290989875793457

Token 1027: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010564186610281467
    2. '   ' → logprob: -5.13556432723999
    3. ' if' → logprob: -6.88556432723999
    4. 'def' → logprob: -7.26056432723999
    5. '           ' → logprob: -7.63556432723999
    6. ' =' → logprob: -7.76056432723999
    7. 'import' → logprob: -8.385563850402832
    8. 'a' → logprob: -8.510563850402832
    9. 'if' → logprob: -8.635563850402832
    10. '
' → logprob: -8.635563850402832

Token 1028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003477359190583229
    2. '   ' → logprob: -6.503477573394775
    3. '```' → logprob: -6.878477573394775
    4. ' if' → logprob: -8.878477096557617
    5. '           ' → logprob: -9.128477096557617
    6. ',' → logprob: -9.128477096557617
    7. 'def' → logprob: -9.503477096557617
    8. '``' → logprob: -9.503477096557617
    9. 'if' → logprob: -9.628477096557617
    10. '
' → logprob: -9.753477096557617

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002135152230039239
    2. '   ' → logprob: -6.252135276794434
    3. '```' → logprob: -9.752135276794434
    4. '           ' → logprob: -10.252135276794434
    5. '
' → logprob: -10.752135276794434
    6. ',' → logprob: -11.127135276794434
    7. ' if' → logprob: -11.627135276794434
    8. 'a' → logprob: -11.752135276794434
    9. '(' → logprob: -12.002135276794434
    10. ' ' → logprob: -12.002135276794434

Token 1030: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003749486757442355
    2. '   ' → logprob: -6.878749370574951
    3. '```' → logprob: -7.378749370574951
    4. '
' → logprob: -8.25374984741211
    5. '           ' → logprob: -8.50374984741211
    6. '#' (adapté à ' #') → logprob: -8.62874984741211
    7. 'value' → logprob: -8.87874984741211
    8. 'v' → logprob: -8.87874984741211
    9. 'val' → logprob: -9.00374984741211
    10. '``' → logprob: -9.12874984741211

Token 1031: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16128627955913544
    2. '   ' → logprob: -3.4112863540649414
    3. ':
' → logprob: -4.286286354064941
    4. '):
' → logprob: -4.661286354064941
    5. ':' → logprob: -4.786286354064941
    6. '           ' → logprob: -4.786286354064941
    7. '```' → logprob: -5.036286354064941
    8. ''' → logprob: -5.286286354064941
    9. ' 
' → logprob: -5.286286354064941
    10. 'def' → logprob: -5.661286354064941

Token 1032: ' fractional' (ID: 136350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49049198627471924
    2. 'abs' → logprob: -1.6154919862747192
    3. 'a' → logprob: -2.8654918670654297
    4. '#' → logprob: -3.6154918670654297
    5. 'if' → logprob: -3.9904918670654297
    6. 'return' → logprob: -4.11549186706543
    7. '   ' → logprob: -4.24049186706543
    8. 'import' → logprob: -4.36549186706543
    9. 'result' → logprob: -4.49049186706543
    10. ' abs' → logprob: -5.36549186706543

Token 1033: ' part' (ID: 997)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47237515449523926
    2. 'part' → logprob: -1.2223751544952393
    3. ' part' → logprob: -3.7223751544952393
    4. 'parts' → logprob: -4.34737491607666
    5. '       ' → logprob: -5.22237491607666
    6. '部' → logprob: -5.34737491607666
    7. '
' → logprob: -5.34737491607666
    8. ' parts' → logprob: -5.34737491607666
    9. '部分' → logprob: -5.59737491607666
    10. '_part' → logprob: -5.72237491607666

Token 1034: ' is' (ID: 382)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.9947705864906311
    2. ' is' → logprob: -1.6197705268859863
    3. ' =' → logprob: -2.2447705268859863
    4. 'は' → logprob: -2.3697705268859863
    5. '=' → logprob: -2.8697705268859863
    6. 'が' → logprob: -3.1197705268859863
    7. 'の' → logprob: -3.2447705268859863
    8. ' を' → logprob: -3.2447705268859863
    9. '   ' → logprob: -4.494770526885986
    10. ' ' → logprob: -4.994770526885986

Token 1035: ' discarded' (ID: 88047)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5199801325798035
    2. '   ' → logprob: -2.7699801921844482
    3. 'b' → logprob: -2.7699801921844482
    4. 'a' → logprob: -3.0199801921844482
    5. 'discard' → logprob: -3.0199801921844482
    6. '切' → logprob: -3.1449801921844482
    7. 'always' → logprob: -3.8949801921844482
    8. 'す' → logprob: -4.894979953765869
    9. 'removed' → logprob: -4.894979953765869
    10. 'cut' → logprob: -4.894979953765869

Token 1036: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3281555473804474
    2. '   ' → logprob: -1.328155517578125
    3. ':
' → logprob: -4.828155517578125
    4. '           ' → logprob: -6.578155517578125
    5. '
' → logprob: -7.078155517578125
    6. ',' → logprob: -7.203155517578125
    7. ':' → logprob: -7.828155517578125
    8. '```' → logprob: -7.828155517578125
    9. '):
' → logprob: -8.078155517578125
    10. 'a' → logprob: -8.328155517578125

Token 1037: ' rounding' (ID: 112605)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.5308427810668945
    2. 'division' → logprob: -2.4058427810668945
    3. 'int' → logprob: -2.5308427810668945
    4. 'the' → logprob: -2.6558427810668945
    5. '整数' → logprob: -3.7808427810668945
    6. 'a' → logprob: -4.1558427810668945
    7. 'tr' → logprob: -4.2808427810668945
    8. 'div' → logprob: -4.4058427810668945
    9. '   ' → logprob: -4.4058427810668945
    10. 'app' → logprob: -4.6558427810668945

Token 1038: ' towards' (ID: 9979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1809999644756317
    2. '   ' → logprob: -1.930999994277954
    3. ':' → logprob: -5.180999755859375
    4. ':
' → logprob: -5.180999755859375
    5. '           ' → logprob: -6.180999755859375
    6. ',' → logprob: -6.930999755859375
    7. '<|end|>' → logprob: -7.430999755859375
    8. '):
' → logprob: -7.555999755859375
    9. 'def' → logprob: -7.680999755859375
    10. ' ' → logprob: -8.055999755859375

Token 1039: ' smaller' (ID: 13679)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.33963721990585327
    2. 'zero' → logprob: -2.214637279510498
    3. 'a' → logprob: -3.339637279510498
    4. 'b' → logprob: -3.464637279510498
    5. 'sm' → logprob: -3.589637279510498
    6. ' the' → logprob: -3.714637279510498
    7. ' zero' → logprob: -3.839637279510498
    8. '0' → logprob: -3.839637279510498
    9. 'op' → logprob: -5.214637279510498
    10. ' smaller' → logprob: -5.589637279510498

Token 1040: ' abs' (ID: 8443)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7186524271965027
    2. 'abs' → logprob: -1.0936524868011475
    3. '値' → logprob: -2.0936524868011475
    4. '
' → logprob: -4.218652248382568
    5. ' abs' → logprob: -5.093652248382568
    6. ' value' → logprob: -5.218652248382568
    7. 'の' → logprob: -5.843652248382568
    8. '   ' → logprob: -5.968652248382568
    9. '_value' → logprob: -6.093652248382568
    10. '_abs' → logprob: -6.218652248382568

Token 1041: ' operand' (ID: 63895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25068190693855286
    2. '       ' → logprob: -1.8756818771362305
    3. ' =' → logprob: -4.3756818771362305
    4. 'def' → logprob: -4.5006818771362305
    5. ':
' → logprob: -5.1256818771362305
    6. '):
' → logprob: -5.5006818771362305
    7. 'a' → logprob: -5.7506818771362305
    8. '
' → logprob: -5.8756818771362305
    9. '```' → logprob: -6.0006818771362305
    10. '           ' → logprob: -6.1256818771362305

Token 1042: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3570261597633362
    2. '   ' → logprob: -1.2320261001586914
    3. '```' → logprob: -5.982026100158691
    4. ',' → logprob: -6.357026100158691
    5. ':
' → logprob: -7.107026100158691
    6. ':' → logprob: -7.857026100158691
    7. 'a' → logprob: -7.982026100158691
    8. '#' → logprob: -8.107026100158691
    9. 'def' → logprob: -8.232026100158691
    10. ' (' → logprob: -8.357026100158691

Token 1043: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000967083964496851
    2. '   ' → logprob: -7.250967025756836
    3. '           ' → logprob: -8.750967025756836
    4. '        ' → logprob: -11.125967025756836
    5. '(' → logprob: -11.375967025756836
    6. ',' → logprob: -11.375967025756836
    7. '        
' → logprob: -11.500967025756836
    8. ' (' → logprob: -11.875967025756836
    9. '      ' → logprob: -12.125967025756836
    10. '     ' → logprob: -12.250967025756836

Token 1044: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016503728926181793
    2. '   ' → logprob: -4.141503810882568
    3. '           ' → logprob: -9.51650333404541
    4. '```' → logprob: -9.51650333404541
    5. ' if' → logprob: -10.14150333404541
    6. ' ' → logprob: -10.51650333404541
    7. ' ' → logprob: -10.51650333404541
    8. 'if' → logprob: -10.64150333404541
    9. '``' → logprob: -11.01650333404541
    10. '        ' → logprob: -11.14150333404541

Token 1045: ' Another' (ID: 20064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05304574966430664
    2. '   ' → logprob: -3.1780457496643066
    3. '#' → logprob: -6.678045749664307
    4. 'a' → logprob: -6.678045749664307
    5. '```' → logprob: -7.053045749664307
    6. 'val' → logprob: -7.553045749664307
    7. 'result' → logprob: -7.553045749664307
    8. ')' → logprob: -8.053045272827148
    9. '``' → logprob: -8.053045272827148
    10. 'value' → logprob: -8.178045272827148

Token 1046: ' interpretation' (ID: 39300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1873879432678223
    2. ':
' → logprob: -2.1873879432678223
    3. '       ' → logprob: -2.3123879432678223
    4. '   ' → logprob: -2.4373879432678223
    5. 'return' → logprob: -2.5623879432678223
    6. '
' → logprob: -2.6873879432678223
    7. 'elif' → logprob: -3.3123879432678223
    8. 'import' → logprob: -3.5623879432678223
    9. ' return' → logprob: -3.6873879432678223
    10. '#' → logprob: -3.8123879432678223

Token 1047: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5307817459106445
    2. '   ' → logprob: -1.6557817459106445
    3. ':' → logprob: -1.9057817459106445
    4. ':
' → logprob: -3.1557817459106445
    5. '           ' → logprob: -5.5307817459106445
    6. ',' → logprob: -5.5307817459106445
    7. ' =' → logprob: -5.7807817459106445
    8. 'def' → logprob: -5.7807817459106445
    9. '):
' → logprob: -6.5307817459106445
    10. '```' → logprob: -6.5307817459106445

Token 1048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000444850797066465
    2. '        ' → logprob: -9.000444412231445
    3. '   ' → logprob: -9.625444412231445
    4. '```' → logprob: -9.875444412231445
    5. ' if' → logprob: -10.000444412231445
    6. '           ' → logprob: -10.250444412231445
    7. ' ' → logprob: -11.000444412231445
    8. ' a' → logprob: -11.500444412231445
    9. ',' → logprob: -11.625444412231445
    10. ')' → logprob: -11.750444412231445

Token 1049: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001284044818021357
    2. '        ' → logprob: -7.751284122467041
    3. '           ' → logprob: -8.001283645629883
    4. ' if' → logprob: -8.501283645629883
    5. '   ' → logprob: -9.126283645629883
    6. '```' → logprob: -10.376283645629883
    7. ' ' → logprob: -10.501283645629883
    8. 'if' → logprob: -10.876283645629883
    9. '#' (adapté à ' #') → logprob: -11.001283645629883
    10. 'return' → logprob: -11.001283645629883

Token 1050: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05803251266479492
    2. '   ' → logprob: -3.058032512664795
    3. '        ' → logprob: -6.558032512664795
    4. ' if' → logprob: -6.683032512664795
    5. '```' → logprob: -6.808032512664795
    6. '           ' → logprob: -7.058032512664795
    7. ' b' → logprob: -7.433032512664795
    8. '    ' → logprob: -7.558032512664795
    9. ' a' → logprob: -7.558032512664795
    10. ' (' → logprob: -8.308032989501953

Token 1051: ' Compute' (ID: 45438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23993681371212006
    2. '```' → logprob: -2.9899368286132812
    3. ' (' → logprob: -3.6149368286132812
    4. ' if' → logprob: -3.6149368286132812
    5. '(' → logprob: -3.7399368286132812
    6. 'if' → logprob: -4.364936828613281
    7. ')' → logprob: -4.364936828613281
    8. '        ' → logprob: -4.489936828613281
    9. '``' → logprob: -5.614936828613281
    10. '           ' → logprob: -5.614936828613281

Token 1052: ' exact' (ID: 6354)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4537510573863983
    2. 'int' → logprob: -1.2037510871887207
    3. 'abs' → logprob: -3.7037510871887207
    4. ' a' → logprob: -5.078751087188721
    5. ' int' → logprob: -5.203751087188721
    6. 'round' → logprob: -5.328751087188721
    7. 'float' → logprob: -5.453751087188721
    8. '```' → logprob: -5.578751087188721
    9. '       ' → logprob: -5.703751087188721
    10. ' abs' → logprob: -5.703751087188721

Token 1053: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8042535781860352
    2. '/' → logprob: -1.3042535781860352
    3. 'value' → logprob: -1.8042535781860352
    4. ' a' → logprob: -3.429253578186035
    5. 'result' → logprob: -3.679253578186035
    6. '`' → logprob: -3.929253578186035
    7. ' /' → logprob: -4.429253578186035
    8. ' value' → logprob: -5.054253578186035
    9. 'float' → logprob: -5.429253578186035
    10. 'int' → logprob: -6.054253578186035

Token 1054: '/b' (ID: 7611)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0072605200111866
    2. '/b' → logprob: -5.632260322570801
    3. ' /' → logprob: -6.132260322570801
    4. '/
' → logprob: -6.632260322570801
    5. '/
/' → logprob: -10.3822603225708
    6. ' /
' → logprob: -10.3822603225708
    7. ''' → logprob: -10.8822603225708
    8. '/
' → logprob: -11.0072603225708
    9. '       ' → logprob: -11.1322603225708
    10. '`' → logprob: -11.3822603225708

Token 1055: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9855387210845947
    2. '       ' → logprob: -1.2355387210845947
    3. '```' → logprob: -2.4855387210845947
    4. 'def' → logprob: -3.3605387210845947
    5. ',' → logprob: -3.4855387210845947
    6. '
' → logprob: -3.7355387210845947
    7. '`' → logprob: -3.9855387210845947
    8. ')' → logprob: -3.9855387210845947
    9. ' /' → logprob: -4.110538482666016
    10. '**' → logprob: -4.610538482666016

Token 1056: 'float' (ID: 7829)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.073414921760559
    2. ' int' → logprob: -2.1984148025512695
    3. ')' → logprob: -2.4484148025512695
    4. 'a' → logprob: -2.4484148025512695
    5. ''' → logprob: -2.6984148025512695
    6. ')
' → logprob: -2.6984148025512695
    7. ' a' → logprob: -3.0734148025512695
    8. '):
' → logprob: -3.3234148025512695
    9. '   ' → logprob: -4.0734148025512695
    10. ' '' → logprob: -4.1984148025512695

Token 1057: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9124915599822998
    2. ')
' → logprob: -1.2874915599822998
    3. '       ' → logprob: -1.2874915599822998
    4. '):
' → logprob: -4.037491798400879
    5. ',' → logprob: -5.037491798400879
    6. '):' → logprob: -5.162491798400879
    7. '   ' → logprob: -5.412491798400879
    8. '),' → logprob: -6.037491798400879
    9. '
' → logprob: -6.537491798400879
    10. '           ' → logprob: -6.662491798400879

Token 1058: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009088410879485309
    2. '   ' → logprob: -7.375908851623535
    3. '           ' → logprob: -9.500908851623535
    4. '```' → logprob: -9.625908851623535
    5. '#' → logprob: -10.625908851623535
    6. ',' → logprob: -11.000908851623535
    7. '      ' → logprob: -11.375908851623535
    8. '        ' → logprob: -11.375908851623535
    9. ' +' → logprob: -11.500908851623535
    10. '``' → logprob: -11.750908851623535

Token 1059: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017268223455175757
    2. '   ' → logprob: -7.0017266273498535
    3. '           ' → logprob: -8.501727104187012
    4. '```' → logprob: -9.376727104187012
    5. 'a' → logprob: -9.626727104187012
    6. ''' → logprob: -9.751727104187012
    7. ',' → logprob: -10.001727104187012
    8. ' (' → logprob: -10.001727104187012
    9. '`' → logprob: -10.001727104187012
    10. '(' → logprob: -10.251727104187012

Token 1060: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10783007740974426
    2. '   ' → logprob: -2.357830047607422
    3. '#' → logprob: -6.607830047607422
    4. ' return' → logprob: -6.857830047607422
    5. 'return' → logprob: -7.107830047607422
    6. ' #' → logprob: -7.232830047607422
    7. ' a' → logprob: -7.732830047607422
    8. ' ' → logprob: -7.857830047607422
    9. '```' → logprob: -7.982830047607422
    10. 'result' → logprob: -8.232830047607422

Token 1061: ' Among' (ID: 32417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2916393280029297
    2. '#' → logprob: -2.0416393280029297
    3. 'abs' → logprob: -2.0416393280029297
    4. 'if' → logprob: -2.5416393280029297
    5. 'import' → logprob: -2.5416393280029297
    6. 'diff' → logprob: -2.7916393280029297
    7. 'round' → logprob: -2.9166393280029297
    8. 'sign' → logprob: -3.1666393280029297
    9. 'val' → logprob: -3.9166393280029297
    10. 'rounded' → logprob: -4.16663932800293

Token 1062: ' operand' (ID: 63895)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2095402181148529
    2. 'abs' → logprob: -1.9595402479171753
    3. 'the' → logprob: -3.5845401287078857
    4. 'int' → logprob: -5.459540367126465
    5. '   ' → logprob: -6.084540367126465
    6. 'sm' → logprob: -6.334540367126465
    7. '       ' → logprob: -6.334540367126465
    8. '(abs' → logprob: -6.334540367126465
    9. ' abs' → logprob: -6.834540367126465
    10. ' a' → logprob: -6.834540367126465

Token 1063: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6119958758354187
    2. 'with' → logprob: -1.8619959354400635
    3. ' with' → logprob: -2.2369959354400635
    4. '[' → logprob: -2.4869959354400635
    5. '   ' → logprob: -3.1119959354400635
    6. 'a' → logprob: -3.3619959354400635
    7. '       ' → logprob: -5.361995697021484
    8. '(' → logprob: -5.861995697021484
    9. ' a' → logprob: -5.861995697021484
    10. '[
' → logprob: -5.861995697021484

Token 1064: ',b' (ID: 17568)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7902011871337891
    2. 'and' → logprob: -1.915201187133789
    3. '[' → logprob: -2.040201187133789
    4. ',' → logprob: -2.290201187133789
    5. '   ' → logprob: -2.415201187133789
    6. '       ' → logprob: -4.540201187133789
    7. 'with' → logprob: -4.540201187133789
    8. 'の' → logprob: -5.040201187133789
    9. ' with' → logprob: -5.415201187133789
    10. 's' → logprob: -5.415201187133789

Token 1065: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8816593885421753
    2. ',' → logprob: -1.7566593885421753
    3. ':
' → logprob: -2.256659507751465
    4. 'の' → logprob: -2.631659507751465
    5. ':' → logprob: -3.006659507751465
    6. '   ' → logprob: -3.381659507751465
    7. ' (' → logprob: -3.506659507751465
    8. ' with' → logprob: -4.006659507751465
    9. ''s' → logprob: -4.256659507751465
    10. ' is' → logprob: -4.881659507751465

Token 1066: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.44492340087890625
    2. 'abs' → logprob: -1.9449234008789062
    3. 'which' → logprob: -2.0699234008789062
    4. 'a' → logprob: -3.6949234008789062
    5. 'sm' → logprob: -3.6949234008789062
    6. 'ど' → logprob: -4.444923400878906
    7. ' the' → logprob: -4.694923400878906
    8. ' which' → logprob: -5.194923400878906
    9. '#' → logprob: -5.819923400878906
    10. '(abs' → logprob: -5.944923400878906

Token 1067: ' one' (ID: 1001)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.682190477848053
    2. 'abs' → logprob: -1.4321904182434082
    3. ' abs' → logprob: -2.307190418243408
    4. ' smaller' → logprob: -2.807190418243408
    5. 'token' → logprob: -3.307190418243408
    6. 'operand' → logprob: -4.307190418243408
    7. 'min' → logprob: -5.682190418243408
    8. ' token' → logprob: -5.807190418243408
    9. 'next' → logprob: -5.807190418243408
    10. '```' → logprob: -5.807190418243408

Token 1068: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.4323389530181885
    2. 'with' → logprob: -1.0573389530181885
    3. 'の' → logprob: -6.932338714599609
    4. ' of' → logprob: -7.307338714599609
    5. '   ' → logprob: -7.932338714599609
    6. ' の' → logprob: -8.43233871459961
    7. 'に' → logprob: -8.80733871459961
    8. 'が' → logprob: -8.93233871459961
    9. ' ' → logprob: -9.05733871459961
    10. ' that' → logprob: -9.18233871459961

Token 1069: ' smaller' (ID: 13679)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.005187863018363714
    2. ' smaller' → logprob: -5.38018798828125
    3. 'small' → logprob: -7.88018798828125
    4. 'abs' → logprob: -9.50518798828125
    5. 'the' → logprob: -9.75518798828125
    6. '#' → logprob: -10.00518798828125
    7. 'a' → logprob: -12.75518798828125
    8. '小' → logprob: -13.25518798828125
    9. 'minimum' → logprob: -13.88018798828125
    10. '```' → logprob: -13.88018798828125

Token 1070: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0012251086300238967
    2. 'absolute' → logprob: -7.126224994659424
    3. ' abs' → logprob: -8.001225471496582
    4. '(abs' → logprob: -9.751225471496582
    5. '絶' → logprob: -11.126225471496582
    6. ' absolute' → logprob: -12.376225471496582
    7. '```' → logprob: -12.876225471496582
    8. '   ' → logprob: -13.376225471496582
    9. '_abs' → logprob: -14.001225471496582
    10. '.abs' → logprob: -14.376225471496582

Token 1071: '
' (ID: 198)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2444918006658554
    2. '       ' → logprob: -2.4944918155670166
    3. 'val' → logprob: -2.6194918155670166
    4. '_value' → logprob: -3.1194918155670166
    5. '_val' → logprob: -5.1194915771484375
    6. '(a' → logprob: -5.4944915771484375
    7. 'a' → logprob: -5.7444915771484375
    8. '
' → logprob: -6.3694915771484375
    9. '   ' → logprob: -7.1194915771484375
    10. '{
' → logprob: -8.744491577148438

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07027251273393631
    2. '   ' → logprob: -2.820272445678711
    3. ',' → logprob: -5.945272445678711
    4. '           ' → logprob: -6.820272445678711
    5. '```' → logprob: -6.820272445678711
    6. ':
' → logprob: -7.320272445678711
    7. ' (' → logprob: -7.445272445678711
    8. ':' → logprob: -8.195272445678711
    9. '(' → logprob: -8.820272445678711
    10. ''' → logprob: -8.820272445678711

Token 1073: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014179765712469816
    2. '           ' → logprob: -8.251418113708496
    3. '```' → logprob: -8.376418113708496
    4. 'return' → logprob: -8.501418113708496
    5. '#' (adapté à ' #') → logprob: -9.126418113708496
    6. '   ' → logprob: -9.126418113708496
    7. 'Let's' → logprob: -9.251418113708496
    8. ',' → logprob: -9.751418113708496
    9. ' return' → logprob: -10.376418113708496
    10. '``' → logprob: -10.626418113708496

Token 1074: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013979081995785236
    2. '   ' → logprob: -4.763978958129883
    3. '#' → logprob: -6.388978958129883
    4. 'Let's' → logprob: -7.638978958129883
    5. ' ' → logprob: -7.888978958129883
    6. ' abs' → logprob: -8.263978958129883
    7. ' #' → logprob: -8.388978958129883
    8. ' b' → logprob: -8.638978958129883
    9. ' if' → logprob: -8.763978958129883
    10. ',' → logprob: -8.763978958129883

Token 1075: ' Round' (ID: 30479)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6079856157302856
    2. 'import' → logprob: -1.6079856157302856
    3. 'abs' → logprob: -1.7329856157302856
    4. 'target' → logprob: -2.232985496520996
    5. '#' → logprob: -2.357985496520996
    6. 'round' → logprob: -3.107985496520996
    7. 'sm' → logprob: -3.607985496520996
    8. 'value' → logprob: -3.857985496520996
    9. 'val' → logprob: -3.982985496520996
    10. 'return' → logprob: -4.232985496520996

Token 1076: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5711240768432617
    2. 'tow' → logprob: -1.1961240768432617
    3. 'the' → logprob: -3.4461240768432617
    4. '       ' → logprob: -3.6961240768432617
    5. 't' → logprob: -4.321124076843262
    6. '(a' → logprob: -4.571124076843262
    7. ' towards' → logprob: -4.696124076843262
    8. 'to' → logprob: -4.696124076843262
    9. '   ' → logprob: -5.071124076843262
    10. 'value' → logprob: -5.196124076843262

Token 1077: '/b' (ID: 7611)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2367469072341919
    2. '/b' → logprob: -1.611746907234192
    3. '/div' → logprob: -5.486746788024902
    4. '<|end|>' → logprob: -5.611746788024902
    5. ' /' → logprob: -5.986746788024902
    6. 'div' → logprob: -8.361746788024902
    7. '   ' → logprob: -8.486746788024902
    8. '_div' → logprob: -9.236746788024902
    9. '/a' → logprob: -9.611746788024902
    10. '       ' → logprob: -9.861746788024902

Token 1078: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.2624616026878357
    2. ' towards' → logprob: -2.3874616622924805
    3. ' toward' → logprob: -3.2624616622924805
    4. '       ' → logprob: -3.2624616622924805
    5. '(' → logprob: -3.8874616622924805
    6. '           ' → logprob: -4.3874616622924805
    7. '(a' → logprob: -5.0124616622924805
    8. '```' → logprob: -5.5124616622924805
    9. '   ' → logprob: -6.1374616622924805
    10. '                   ' → logprob: -6.1374616622924805

Token 1079: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.17665059864521027
    2. 'the' → logprob: -1.9266506433486938
    3. ' that' → logprob: -5.051650524139404
    4. 'abs' → logprob: -5.301650524139404
    5. 'sm' → logprob: -5.676650524139404
    6. 'int' → logprob: -7.801650524139404
    7. '(abs' → logprob: -8.801651000976562
    8. 'them' → logprob: -8.801651000976562
    9. ' the' → logprob: -9.176651000976562
    10. 'p' → logprob: -9.176651000976562

Token 1080: ' value' (ID: 1432)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.1753185987472534
    2. 'abs' → logprob: -1.8003185987472534
    3. ' operand' → logprob: -2.175318717956543
    4. '_operand' → logprob: -3.050318717956543
    5. 'operand' → logprob: -3.175318717956543
    6. ' value' → logprob: -3.300318717956543
    7. 'value' → logprob: -3.550318717956543
    8. 'sm' → logprob: -3.800318717956543
    9. '_abs' → logprob: -3.800318717956543
    10. '   ' → logprob: -3.925318717956543

Token 1081: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12113956362009048
    2. '   ' → logprob: -3.2461395263671875
    3. ' towards' → logprob: -4.2461395263671875
    4. ':' → logprob: -4.6211395263671875
    5. ':
' → logprob: -4.8711395263671875
    6. '           ' → logprob: -5.1211395263671875
    7. 'tow' → logprob: -5.2461395263671875
    8. ',' → logprob: -5.4961395263671875
    9. '(a' → logprob: -5.6211395263671875
    10. 'def' → logprob: -6.1211395263671875

Token 1082: 'so' (ID: 786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3972903490066528
    2. 'a' → logprob: -1.6472903490066528
    3. 'sm' → logprob: -2.0222902297973633
    4. 'the' → logprob: -2.1472902297973633
    5. 'abs' → logprob: -2.7722902297973633
    6. 'tow' → logprob: -3.5222902297973633
    7. ' the' → logprob: -3.8972902297973633
    8. '0' → logprob: -4.022290229797363
    9. ' a' → logprob: -4.272290229797363
    10. '   ' → logprob: -4.272290229797363

Token 1083: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7235565185546875
    2. ' the' → logprob: -1.4735565185546875
    3. 'a' → logprob: -2.7235565185546875
    4. ' abs' → logprob: -2.8485565185546875
    5. 'the' → logprob: -3.0985565185546875
    6. '0' → logprob: -3.4735565185546875
    7. 'abs' → logprob: -4.2235565185546875
    8. ' ' → logprob: -4.7235565185546875
    9. '       ' → logprob: -5.0985565185546875
    10. ' b' → logprob: -5.3485565185546875

Token 1084: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4825083911418915
    2. 'abs' → logprob: -1.2325084209442139
    3. '(abs' → logprob: -3.732508420944214
    4. ' abs' → logprob: -3.857508420944214
    5. 'op' → logprob: -4.482508182525635
    6. ' a' → logprob: -4.732508182525635
    7. 'the' → logprob: -4.857508182525635
    8. 'sm' → logprob: -5.107508182525635
    9. '(op' → logprob: -5.357508182525635
    10. '(a' → logprob: -6.232508182525635

Token 1085: '/b' (ID: 7611)
  Prédit: '/b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/b' → logprob: -0.15771706402301788
    2. ' <' → logprob: -2.532716989517212
    3. ' /' → logprob: -3.532716989517212
    4. '/' → logprob: -3.782716989517212
    5. '<b' → logprob: -5.657717227935791
    6. 'b' → logprob: -6.157717227935791
    7. '   ' → logprob: -6.532717227935791
    8. ' <=' → logprob: -6.782717227935791
    9. ' ' → logprob: -7.282717227935791
    10. ' >' → logprob: -7.282717227935791

Token 1086: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2855525016784668
    2. '<' → logprob: -1.9105525016784668
    3. ' <=' → logprob: -2.660552501678467
    4. '<=' → logprob: -4.035552501678467
    5. ' is' → logprob: -6.160552501678467
    6. '   ' → logprob: -6.660552501678467
    7. '>' → logprob: -6.785552501678467
    8. ' >' → logprob: -6.910552501678467
    9. ')' → logprob: -7.160552501678467
    10. 'の' → logprob: -7.535552501678467

Token 1087: ' that' (ID: 484)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3514502048492432
    2. 'a' → logprob: -1.8514502048492432
    3. 'abs' → logprob: -1.8514502048492432
    4. 'sm' → logprob: -1.9764502048492432
    5. 'b' → logprob: -2.601450204849243
    6. '0' → logprob: -3.351450204849243
    7. ' min' → logprob: -3.351450204849243
    8. 'the' → logprob: -3.476450204849243
    9. ' abs' → logprob: -3.726450204849243
    10. 'that' → logprob: -3.851450204849243

Token 1088: ' value' (ID: 1432)
  Prédit: ' operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operand' → logprob: -1.2804545164108276
    2. 'value' → logprob: -1.7804545164108276
    3. ' value' → logprob: -1.9054545164108276
    4. 'operand' → logprob: -1.9054545164108276
    5. ')' → logprob: -2.905454635620117
    6. ',' → logprob: -3.405454635620117
    7. '_operand' → logprob: -3.530454635620117
    8. 'の' → logprob: -3.530454635620117
    9. '_value' → logprob: -3.780454635620117
    10. ' ' → logprob: -4.155454635620117

Token 1089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3038293421268463
    2. ':
' → logprob: -2.3038294315338135
    3. ':' → logprob: -2.9288294315338135
    4. ' and' → logprob: -3.5538294315338135
    5. '       ' → logprob: -3.6788294315338135
    6. '-' → logprob: -3.9288294315338135
    7. ' -' → logprob: -4.678829193115234
    8. '+' → logprob: -5.178829193115234
    9. 'and' → logprob: -5.178829193115234
    10. ' then' → logprob: -6.303829193115234

Token 1090: ' round' (ID: 7353)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6153740286827087
    2. ' a' → logprob: -1.7403740882873535
    3. '       ' → logprob: -2.9903740882873535
    4. '           ' → logprob: -3.3653740882873535
    5. 'round' → logprob: -3.8653740882873535
    6. '```' → logprob: -3.8653740882873535
    7. 'b' → logprob: -3.9903740882873535
    8. ' return' → logprob: -4.1153740882873535
    9. 'return' → logprob: -4.2403740882873535
    10. ' b' → logprob: -4.6153740882873535

Token 1091: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.6840154528617859
    2. 'a' → logprob: -1.4340155124664307
    3. 'tow' → logprob: -2.8090155124664307
    4. ')' → logprob: -3.3090155124664307
    5. ' down' → logprob: -3.4340155124664307
    6. ' a' → logprob: -3.5590155124664307
    7. '<|end|>' → logprob: -3.6840155124664307
    8. ' ' → logprob: -4.184015274047852
    9. '   ' → logprob: -4.684015274047852
    10. '_down' → logprob: -4.809015274047852

Token 1092: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12683990597724915
    2. ',' → logprob: -3.1268398761749268
    3. '           ' → logprob: -3.7518398761749268
    4. '   ' → logprob: -4.376840114593506
    5. ' else' → logprob: -4.626840114593506
    6. ' or' → logprob: -5.126840114593506
    7. 'else' → logprob: -5.376840114593506
    8. ';' → logprob: -5.751840114593506
    9. ' and' → logprob: -6.251840114593506
    10. ')' → logprob: -6.376840114593506

Token 1093: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.082985281944275
    2. '#' → logprob: -1.582985281944275
    3. '       ' → logprob: -1.957985281944275
    4. 'else' → logprob: -2.2079854011535645
    5. 'if' → logprob: -2.4579854011535645
    6. ' if' → logprob: -2.5829854011535645
    7. 'a' → logprob: -3.8329854011535645
    8. ' else' → logprob: -4.2079854011535645
    9. ' elif' → logprob: -6.7079854011535645
    10. '   ' → logprob: -6.8329854011535645

Token 1094: ' up' (ID: 869)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19921940565109253
    2. ' a' → logprob: -2.1992194652557373
    3. 'if' → logprob: -3.6992194652557373
    4. '       ' → logprob: -4.074219226837158
    5. 'round' → logprob: -4.574219226837158
    6. ' if' → logprob: -5.449219226837158
    7. 'op' → logprob: -5.949219226837158
    8. '           ' → logprob: -6.074219226837158
    9. 'return' → logprob: -6.449219226837158
    10. 'down' → logprob: -7.324219226837158

Token 1095: '),' (ID: 936)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16902777552604675
    2. '):
' → logprob: -2.294027805328369
    3. '           ' → logprob: -3.919027805328369
    4. '):' → logprob: -4.919027805328369
    5. ',' → logprob: -5.044027805328369
    6. ')' → logprob: -5.044027805328369
    7. '   ' → logprob: -5.544027805328369
    8. ')
' → logprob: -5.669027805328369
    9. '               ' → logprob: -7.169027805328369
    10. '                   ' → logprob: -7.169027805328369

Token 1096: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018107565119862556
    2. '#' → logprob: -5.1431074142456055
    3. '   ' → logprob: -5.2681074142456055
    4. 'return' → logprob: -6.0181074142456055
    5. '           ' → logprob: -6.5181074142456055
    6. ' and' → logprob: -7.2681074142456055
    7. ' return' → logprob: -7.7681074142456055
    8. ' then' → logprob: -8.268107414245605
    9. ' but' → logprob: -8.518107414245605
    10. ' ' → logprob: -8.768107414245605

Token 1097: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8012542128562927
    2. 'return' → logprob: -1.5512542724609375
    3. 'truncate' → logprob: -2.0512542724609375
    4. '#' → logprob: -2.8012542724609375
    5. 'a' → logprob: -3.1762542724609375
    6. ' return' → logprob: -3.3012542724609375
    7. ' a' → logprob: -4.5512542724609375
    8. 'import' → logprob: -4.6762542724609375
    9. 'int' → logprob: -4.8012542724609375
    10. '           ' → logprob: -5.0512542724609375

Token 1098: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.885747492313385
    2. '(a' → logprob: -1.5107474327087402
    3. '   ' → logprob: -1.8857474327087402
    4. 'def' → logprob: -2.6357474327087402
    5. '           ' → logprob: -3.2607474327087402
    6. '               ' → logprob: -4.26074743270874
    7. '(' → logprob: -4.38574743270874
    8. '                   ' → logprob: -4.38574743270874
    9. ' (' → logprob: -4.51074743270874
    10. ' ' → logprob: -5.63574743270874

Token 1099: 'discard' (ID: 170880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4286391735076904
    2. 'a' → logprob: -1.4286391735076904
    3. 'int' → logprob: -1.8036391735076904
    4. 'truncate' → logprob: -2.4286391735076904
    5. 'the' → logprob: -2.9286391735076904
    6. 'discard' → logprob: -3.0536391735076904
    7. 'return' → logprob: -3.8036391735076904
    8. '       ' → logprob: -3.9286391735076904
    9. ' the' → logprob: -4.6786394119262695
    10. '   ' → logprob: -4.8036394119262695

Token 1100: ' decimal' (ID: 26964)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.334299087524414
    2. '       ' → logprob: -2.584299087524414
    3. '小' → logprob: -2.584299087524414
    4. '部分' → logprob: -2.584299087524414
    5. 'decimal' → logprob: -2.709299087524414
    6. ' ' → logprob: -3.084299087524414
    7. 'fraction' → logprob: -3.084299087524414
    8. '_' → logprob: -3.209299087524414
    9. '```' → logprob: -3.459299087524414
    10. '   ' → logprob: -3.584299087524414

Token 1101: ')
' (ID: 446)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.15768803656101227
    2. 'part' → logprob: -3.1576881408691406
    3. '_part' → logprob: -3.2826881408691406
    4. ')' → logprob: -3.9076881408691406
    5. '   ' → logprob: -3.9076881408691406
    6. '部分' → logprob: -4.907688140869141
    7. '       ' → logprob: -4.907688140869141
    8. '	part' → logprob: -6.282688140869141
    9. '           ' → logprob: -6.532688140869141
    10. ' parts' → logprob: -6.532688140869141

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01982024684548378
    2. '   ' → logprob: -4.019820213317871
    3. '           ' → logprob: -8.019820213317871
    4. '```' → logprob: -8.269820213317871
    5. '
' → logprob: -9.019820213317871
    6. 'return' → logprob: -9.144820213317871
    7. '        
' → logprob: -9.144820213317871
    8. ':
' → logprob: -9.269820213317871
    9. ' ' → logprob: -9.519820213317871
    10. '(' → logprob: -9.644820213317871

Token 1103: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00865499209612608
    2. '   ' → logprob: -5.383655071258545
    3. '           ' → logprob: -6.383655071258545
    4. ' if' → logprob: -7.383655071258545
    5. '\n' → logprob: -8.383654594421387
    6. 'return' → logprob: -8.508654594421387
    7. 'if' → logprob: -8.758654594421387
    8. '
' → logprob: -8.758654594421387
    9. ' return' → logprob: -9.133654594421387
    10. '```' → logprob: -9.383654594421387

Token 1104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47417882084846497
    2. '       ' → logprob: -0.9741787910461426
    3. '```' → logprob: -10.7241792678833
    4. '           ' → logprob: -10.8491792678833
    5. ' if' → logprob: -11.3491792678833
    6. ')' → logprob: -11.8491792678833
    7. ' ' → logprob: -12.2241792678833
    8. ' a' → logprob: -12.2241792678833
    9. '    ' → logprob: -12.5991792678833
    10. 'a' → logprob: -12.7241792678833

Token 1105: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00466461107134819
    2. '   ' → logprob: -5.754664421081543
    3. ' if' → logprob: -7.754664421081543
    4. '           ' → logprob: -8.004664421081543
    5. '#' (adapté à ' #') → logprob: -9.004664421081543
    6. 'if' → logprob: -9.379664421081543
    7. 'a' → logprob: -9.504664421081543
    8. '```' → logprob: -9.754664421081543
    9. '        ' → logprob: -10.004664421081543
    10. ' a' → logprob: -10.254664421081543

Token 1106: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21197988092899323
    2. '```' → logprob: -3.461979866027832
    3. 'a' → logprob: -3.961979866027832
    4. 'div' → logprob: -4.086979866027832
    5. 'def' → logprob: -4.336979866027832
    6. 'if' → logprob: -4.461979866027832
    7. 'import' → logprob: -4.711979866027832
    8. ' if' → logprob: -4.711979866027832
    9. '#' → logprob: -4.836979866027832
    10. ' a' → logprob: -4.961979866027832

Token 1107: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2884904742240906
    2. 'abs' → logprob: -2.2884905338287354
    3. 'a' → logprob: -2.4134905338287354
    4. '#' → logprob: -4.538490295410156
    5. ' abs' → logprob: -4.663490295410156
    6. ' a' → logprob: -4.663490295410156
    7. 'b' → logprob: -5.038490295410156
    8. 'return' → logprob: -5.413490295410156
    9. '   ' → logprob: -5.663490295410156
    10. '```' → logprob: -5.788490295410156

Token 1108: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0072044134140015
    2. '       ' → logprob: -1.7572044134140015
    3. '   ' → logprob: -2.257204532623291
    4. '#' → logprob: -2.507204532623291
    5. 'is' → logprob: -2.507204532623291
    6. 'def' → logprob: -2.882204532623291
    7. ' =' → logprob: -3.382204532623291
    8. '=' → logprob: -3.632204532623291
    9. 'a' → logprob: -4.132204532623291
    10. '```' → logprob: -5.007204532623291

Token 1109: ' complicated' (ID: 25334)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8758211135864258
    2. 'b' → logprob: -1.7508211135864258
    3. '       ' → logprob: -2.125821113586426
    4. 'a' → logprob: -2.250821113586426
    5. ' abs' → logprob: -3.125821113586426
    6. ' not' → logprob: -3.250821113586426
    7. ' a' → logprob: -3.875821113586426
    8. ' b' → logprob: -4.375821113586426
    9. 'not' → logprob: -4.375821113586426
    10. 'op' → logprob: -4.500821113586426

Token 1110: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.096775583922863
    2. '   ' → logprob: -2.471775531768799
    3. ':' → logprob: -5.721775531768799
    4. ':
' → logprob: -6.096775531768799
    5. ',' → logprob: -8.096776008605957
    6. '```' → logprob: -8.096776008605957
    7. '           ' → logprob: -8.221776008605957
    8. ' if' → logprob: -8.596776008605957
    9. '<|end|>' → logprob: -8.846776008605957
    10. '):
' → logprob: -8.846776008605957

Token 1111: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1294061541557312
    2. '   ' → logprob: -2.129406213760376
    3. '```' → logprob: -6.129405975341797
    4. '``' → logprob: -9.379405975341797
    5. '
' → logprob: -10.004405975341797
    6. '#' → logprob: -10.254405975341797
    7. 'return' → logprob: -10.504405975341797
    8. 'a' → logprob: -10.754405975341797
    9. 'result' → logprob: -11.004405975341797
    10. '           ' → logprob: -11.754405975341797

Token 1112: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3710286021232605
    2. '       ' → logprob: -2.2460286617279053
    3. 'def' → logprob: -2.6210286617279053
    4. 'div' → logprob: -3.2460286617279053
    5. '   ' → logprob: -3.6210286617279053
    6. 'abs' → logprob: -4.746028423309326
    7. 'result' → logprob: -5.121028423309326
    8. 'if' → logprob: -5.121028423309326
    9. 'import' → logprob: -5.371028423309326
    10. 'a' → logprob: -5.371028423309326

Token 1113: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4917358458042145
    2. '   ' → logprob: -1.616735816001892
    3. ' continues' → logprob: -2.4917359352111816
    4. ' is' → logprob: -2.7417359352111816
    5. '続きを' → logprob: -5.116735935211182
    6. '#' → logprob: -5.491735935211182
    7. 'contin' → logprob: -5.741735935211182
    8. ' will' → logprob: -5.991735935211182
    9. 'def' → logprob: -6.116735935211182
    10. ':' → logprob: -6.116735935211182

Token 1114: ' oriented' (ID: 60203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04610961675643921
    2. '   ' → logprob: -3.921109676361084
    3. 'a' → logprob: -5.296109676361084
    4. '```' → logprob: -5.421109676361084
    5. ' a' → logprob: -5.671109676361084
    6. '#' → logprob: -6.421109676361084
    7. ' not' → logprob: -6.421109676361084
    8. 'not' → logprob: -6.796109676361084
    9. 'b' → logprob: -6.796109676361084
    10. 'int' → logprob: -7.046109676361084

Token 1115: ' towards' (ID: 9979)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8402515649795532
    2. 'tow' → logprob: -1.8402515649795532
    3. ' towards' → logprob: -2.0902514457702637
    4. '```' → logprob: -2.3402514457702637
    5. ' to' → logprob: -2.8402514457702637
    6. '       ' → logprob: -3.2152514457702637
    7. 'to' → logprob: -3.3402514457702637
    8. ' toward' → logprob: -3.3402514457702637
    9. ' at' → logprob: -4.840251445770264
    10. 'at' → logprob: -5.590251445770264

Token 1116: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4143373668193817
    2. '       ' → logprob: -2.164337396621704
    3. 'a' → logprob: -2.539337396621704
    4. '```' → logprob: -2.789337396621704
    5. 'def' → logprob: -3.164337396621704
    6. 'abs' → logprob: -4.789337158203125
    7. 'return' → logprob: -5.164337158203125
    8. 'b' → logprob: -5.289337158203125
    9. ' int' → logprob: -5.414337158203125
    10. 'lambda' → logprob: -5.539337158203125

Token 1117: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.05721338465809822
    2. 'a' → logprob: -4.557213306427002
    3. '   ' → logprob: -4.557213306427002
    4. 'div' → logprob: -5.057213306427002
    5. 'import' → logprob: -5.182213306427002
    6. 'def' → logprob: -5.307213306427002
    7. 'return' → logprob: -5.432213306427002
    8. ' division' → logprob: -5.557213306427002
    9. 'ar' → logprob: -5.682213306427002
    10. 'result' → logprob: -6.557213306427002

Token 1118: ' modified' (ID: 19209)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0289814472198486
    2. '       ' → logprob: -1.2789814472198486
    3. '//' → logprob: -1.9039814472198486
    4. '```' → logprob: -3.0289814472198486
    5. ' //' → logprob: -3.2789814472198486
    6. 'def' → logprob: -4.2789812088012695
    7. 'a' → logprob: -4.4039812088012695
    8. 'return' → logprob: -4.6539812088012695
    9. ' =' → logprob: -4.6539812088012695
    10. ':' → logprob: -4.7789812088012695

Token 1119: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30608442425727844
    2. '       ' → logprob: -2.306084394454956
    3. 'tow' → logprob: -3.681084394454956
    4. '```' → logprob: -4.181084632873535
    5. ':
' → logprob: -4.306084632873535
    6. 'の' → logprob: -4.306084632873535
    7. 'して' → logprob: -4.556084632873535
    8. 'by' → logprob: -4.806084632873535
    9. 'for' → logprob: -4.931084632873535
    10. 'with' → logprob: -5.181084632873535

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010752035304903984
    2. '   ' → logprob: -7.001075267791748
    3. '```' → logprob: -8.87607479095459
    4. 'return' → logprob: -11.62607479095459
    5. '``' → logprob: -11.87607479095459
    6. '           ' → logprob: -12.87607479095459
    7. '`' → logprob: -13.12607479095459
    8. '
' → logprob: -14.00107479095459
    9. ' return' → logprob: -14.75107479095459
    10. ',' → logprob: -14.87607479095459

Token 1121: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012954773847013712
    2. '```' → logprob: -8.12629508972168
    3. 'return' → logprob: -8.25129508972168
    4. '   ' → logprob: -8.62629508972168
    5. '#' (adapté à ' #') → logprob: -8.62629508972168
    6. 'result' → logprob: -9.12629508972168
    7. 'a' → logprob: -9.37629508972168
    8. 'if' → logprob: -9.75129508972168
    9. '``' → logprob: -10.37629508972168
    10. 'b' → logprob: -11.25129508972168

Token 1122: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03736865147948265
    2. '   ' → logprob: -3.5373685359954834
    3. '```' → logprob: -5.7873687744140625
    4. 'def' → logprob: -6.6623687744140625
    5. ' if' → logprob: -7.6623687744140625
    6. '           ' → logprob: -7.6623687744140625
    7. '``' → logprob: -8.037368774414062
    8. '#' → logprob: -8.162368774414062
    9. 'if' → logprob: -8.412368774414062
    10. 'return' → logprob: -8.412368774414062

Token 1123: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8576995134353638
    2. '       ' → logprob: -1.1076995134353638
    3. '   ' → logprob: -1.9826995134353638
    4. ' return' → logprob: -3.732699394226074
    5. 'def' → logprob: -3.732699394226074
    6. '```' → logprob: -3.732699394226074
    7. '#' → logprob: -4.107699394226074
    8. 'a' → logprob: -5.732699394226074
    9. 'continue' → logprob: -5.857699394226074
    10. 'round' → logprob: -5.982699394226074

Token 1124: ' simpler' (ID: 48697)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003351782448589802
    2. '   ' → logprob: -6.75335168838501
    3. '```' → logprob: -7.62835168838501
    4. 'return' → logprob: -7.75335168838501
    5. ' return' → logprob: -8.253352165222168
    6. '           ' → logprob: -8.378352165222168
    7. ' if' → logprob: -8.503352165222168
    8. 'if' → logprob: -8.628352165222168
    9. 'a' → logprob: -9.378352165222168
    10. ' a' → logprob: -9.753352165222168

Token 1125: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07640291005373001
    2. 'return' → logprob: -3.4514029026031494
    3. '   ' → logprob: -4.4514031410217285
    4. ' return' → logprob: -4.5764031410217285
    5. 'def' → logprob: -5.3264031410217285
    6. 'a' → logprob: -5.4514031410217285
    7. '```' → logprob: -5.8264031410217285
    8. ' a' → logprob: -5.9514031410217285
    9. '           ' → logprob: -6.4514031410217285
    10. 'int' → logprob: -7.0764031410217285

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001953371800482273
    2. '   ' → logprob: -6.501953601837158
    3. '```' → logprob: -8.626953125
    4. ' return' → logprob: -9.501953125
    5. 'return' → logprob: -9.876953125
    6. '``' → logprob: -10.376953125
    7. '           ' → logprob: -10.501953125
    8. ' if' → logprob: -10.626953125
    9. '        ' → logprob: -11.626953125
    10. '    ' → logprob: -11.751953125

Token 1127: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08405636996030807
    2. 'if' → logprob: -3.7090563774108887
    3. '   ' → logprob: -4.084056377410889
    4. 'return' → logprob: -4.459056377410889
    5. '```' → logprob: -4.709056377410889
    6. ' if' → logprob: -5.209056377410889
    7. 'result' → logprob: -6.084056377410889
    8. '``' → logprob: -6.334056377410889
    9. 'a' → logprob: -6.584056377410889
    10. 'q' → logprob: -7.084056377410889

Token 1128: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5348501205444336
    2. '   ' → logprob: -1.6598501205444336
    3. '```' → logprob: -2.9098501205444336
    4. 'q' → logprob: -3.1598501205444336
    5. 'if' → logprob: -3.4098501205444336
    6. 'return' → logprob: -3.5348501205444336
    7. '``' → logprob: -4.409850120544434
    8. 'result' → logprob: -5.034850120544434
    9. 'quot' → logprob: -5.034850120544434
    10. 'sign' → logprob: -5.284850120544434

Token 1129: ' problem' (ID: 4792)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3932228088378906
    2. 'res' → logprob: -1.8932228088378906
    3. 'quot' → logprob: -2.0182228088378906
    4. 'a' → logprob: -2.2682228088378906
    5. 'div' → logprob: -2.5182228088378906
    6. '#' → logprob: -3.0182228088378906
    7. 'result' → logprob: -3.2682228088378906
    8. '       ' → logprob: -3.3932228088378906
    9. 'return' → logprob: -3.5182228088378906
    10. 'val' → logprob: -3.6432228088378906

Token 1130: ' example' (ID: 4994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5798057317733765
    2. '       ' → logprob: -1.4548057317733765
    3. '=' → logprob: -2.704805850982666
    4. ' =' → logprob: -2.829805850982666
    5. ' is' → logprob: -3.454805850982666
    6. 'def' → logprob: -4.329805850982666
    7. 'の' → logprob: -5.454805850982666
    8. 'is' → logprob: -5.579805850982666
    9. 'は' → logprob: -5.579805850982666
    10. ':' → logprob: -6.329805850982666

Token 1131: ' shows' (ID: 7398)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6934894323348999
    2. '```' → logprob: -1.9434894323349
    3. '   ' → logprob: -3.0684895515441895
    4. 'a' → logprob: -3.0684895515441895
    5. '//' → logprob: -3.3184895515441895
    6. ' /' → logprob: -3.3184895515441895
    7. ' a' → logprob: -3.4434895515441895
    8. 'int' → logprob: -3.6934895515441895
    9. ' //' → logprob: -3.8184895515441895
    10. ' =' → logprob: -4.5684895515441895

Token 1132: ' dividing' (ID: 94879)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1092168092727661
    2. 'a' → logprob: -1.2342168092727661
    3. ' a' → logprob: -1.4842168092727661
    4. ' (' → logprob: -3.4842166900634766
    5. '```' → logprob: -3.4842166900634766
    6. 'int' → logprob: -4.109216690063477
    7. '   ' → logprob: -4.734216690063477
    8. '`' → logprob: -4.859216690063477
    9. '           ' → logprob: -4.984216690063477
    10. ' int' → logprob: -4.984216690063477

Token 1133: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1770848035812378
    2. ' a' → logprob: -1.8020848035812378
    3. ' /' → logprob: -1.8020848035812378
    4. '/' → logprob: -2.4270849227905273
    5. '```' → logprob: -3.1770849227905273
    6. ' (' → logprob: -3.1770849227905273
    7. 'b' → logprob: -3.4270849227905273
    8. '       ' → logprob: -3.8020849227905273
    9. ')' → logprob: -3.8020849227905273
    10. '`' → logprob: -4.302084922790527

Token 1134: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9710859060287476
    2. '       ' → logprob: -1.9710859060287476
    3. ''' → logprob: -2.221086025238037
    4. '```' → logprob: -2.221086025238037
    5. '('/' → logprob: -2.596086025238037
    6. '/' → logprob: -2.846086025238037
    7. '('' → logprob: -2.971086025238037
    8. '('/')' → logprob: -3.221086025238037
    9. '   ' → logprob: -3.596086025238037
    10. '('/',' → logprob: -3.721086025238037

Token 1135: ' int' (ID: 677)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23244091868400574
    2. 'int' → logprob: -2.107440948486328
    3. '1' → logprob: -3.982440948486328
    4. '2' → logprob: -4.482440948486328
    5. ' b' → logprob: -4.607440948486328
    6. '```' → logprob: -4.732440948486328
    7. 'a' → logprob: -4.857440948486328
    8. '0' → logprob: -4.982440948486328
    9. ' int' → logprob: -5.482440948486328
    10. 'the' → logprob: -5.732440948486328

Token 1136: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9265879988670349
    2. '   ' → logprob: -1.4265880584716797
    3. ' =' → logprob: -2.1765880584716797
    4. '//' → logprob: -2.8015880584716797
    5. 'a' → logprob: -3.5515880584716797
    6. ' //' → logprob: -3.8015880584716797
    7. 'b' → logprob: -3.9265880584716797
    8. 'def' → logprob: -3.9265880584716797
    9. '```' → logprob: -4.05158805847168
    10. 'return' → logprob: -4.67658805847168

Token 1137: ' rounding' (ID: 112605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09206119179725647
    2. '   ' → logprob: -2.4670612812042236
    3. 'return' → logprob: -6.8420610427856445
    4. '```' → logprob: -7.2170610427856445
    5. ' return' → logprob: -7.7170610427856445
    6. '           ' → logprob: -7.8420610427856445
    7. ' and' → logprob: -9.342061042785645
    8. '`' → logprob: -9.592061042785645
    9. ' ' → logprob: -10.342061042785645
    10. '    ' → logprob: -10.342061042785645

Token 1138: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.5696468353271484
    2. ' towards' → logprob: -1.1946468353271484
    3. ' toward' → logprob: -2.5696468353271484
    4. '       ' → logprob: -3.9446468353271484
    5. 'down' → logprob: -4.069646835327148
    6. '   ' → logprob: -5.944646835327148
    7. '(' → logprob: -6.569646835327148
    8. ' down' → logprob: -6.569646835327148
    9. 'int' → logprob: -6.819646835327148
    10. 'の' → logprob: -7.069646835327148

Token 1139: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2491009682416916
    2. 'b' → logprob: -2.374100923538208
    3. 'sm' → logprob: -3.124100923538208
    4. '0' → logprob: -3.124100923538208
    5. 'zero' → logprob: -4.124101161956787
    6. 'a' → logprob: -4.374101161956787
    7. ' the' → logprob: -5.749101161956787
    8. ' smaller' → logprob: -6.749101161956787
    9. '(b' → logprob: -6.874101161956787
    10. '```' → logprob: -7.249101161956787

Token 1140: ' operand' (ID: 63895)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.22558291256427765
    2. 'b' → logprob: -2.7255828380584717
    3. ' smaller' → logprob: -2.8505828380584717
    4. 'next' → logprob: -3.9755828380584717
    5. '```' → logprob: -4.100583076477051
    6. ' next' → logprob: -4.600583076477051
    7. 'a' → logprob: -4.725583076477051
    8. ' b' → logprob: -5.600583076477051
    9. '`' → logprob: -5.725583076477051
    10. 'nearest' → logprob: -5.850583076477051

Token 1141: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4651305079460144
    2. '   ' → logprob: -2.840130567550659
    3. '(a' → logprob: -2.840130567550659
    4. '```' → logprob: -3.090130567550659
    5. ',' → logprob: -3.840130567550659
    6. '           ' → logprob: -3.840130567550659
    7. ' towards' → logprob: -4.09013032913208
    8. 'tow' → logprob: -4.21513032913208
    9. ')' → logprob: -4.34013032913208
    10. 'def' → logprob: -4.46513032913208

Token 1142: ' smaller' (ID: 13679)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -1.0787849426269531
    2. 'b' → logprob: -1.7037849426269531
    3. 'the' → logprob: -1.8287849426269531
    4. '0' → logprob: -1.9537849426269531
    5. '```' → logprob: -2.703784942626953
    6. '#' → logprob: -4.203784942626953
    7. ' smaller' → logprob: -4.203784942626953
    8. 'int' → logprob: -4.453784942626953
    9. 'a' → logprob: -4.703784942626953
    10. '1' → logprob: -4.828784942626953

Token 1143: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00043984793592244387
    2. ' abs' → logprob: -7.875439643859863
    3. '```' → logprob: -10.250439643859863
    4. '(abs' → logprob: -11.375439643859863
    5. 'value' → logprob: -12.125439643859863
    6. '_abs' → logprob: -13.250439643859863
    7. 'absolute' → logprob: -13.500439643859863
    8. '   ' → logprob: -14.000439643859863
    9. 'a' → logprob: -14.250439643859863
    10. ' ' → logprob: -14.375439643859863

Token 1144: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6121342182159424
    2. '   ' → logprob: -1.4871342182159424
    3. ' (' → logprob: -3.1121342182159424
    4. '```' → logprob: -3.4871342182159424
    5. ':' → logprob: -3.8621342182159424
    6. '           ' → logprob: -4.112133979797363
    7. ',' → logprob: -4.487133979797363
    8. '(' → logprob: -4.612133979797363
    9. '(a' → logprob: -4.737133979797363
    10. 'def' → logprob: -4.987133979797363

Token 1145: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018958302214741707
    2. ' and' → logprob: -4.39395809173584
    3. '```' → logprob: -7.01895809173584
    4. 'b' → logprob: -7.26895809173584
    5. 'and' → logprob: -7.26895809173584
    6. '           ' → logprob: -7.51895809173584
    7. '`' → logprob: -7.64395809173584
    8. '   ' → logprob: -7.76895809173584
    9. 'return' → logprob: -8.01895809173584
    10. ',' → logprob: -8.39395809173584

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007828776724636555
    2. ' and' → logprob: -6.382828712463379
    3. '   ' → logprob: -6.632828712463379
    4. 'and' → logprob: -6.882828712463379
    5. ''' → logprob: -7.007828712463379
    6. 'return' → logprob: -7.382828712463379
    7. '           ' → logprob: -7.382828712463379
    8. '```' → logprob: -7.507828712463379
    9. '`' → logprob: -9.007828712463379
    10. ' then' → logprob: -9.257828712463379

Token 1147: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031675174832344055
    2. '   ' → logprob: -4.031675338745117
    3. ''' → logprob: -6.406675338745117
    4. 'a' → logprob: -6.781675338745117
    5. '```' → logprob: -6.781675338745117
    6. '           ' → logprob: -7.031675338745117
    7. ' a' → logprob: -7.031675338745117
    8. 'and' → logprob: -7.031675338745117
    9. ')' → logprob: -7.406675338745117
    10. ' and' → logprob: -7.781675338745117

Token 1148: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0345146581530571
    2. ' b' → logprob: -4.784514427185059
    3. '   ' → logprob: -5.284514427185059
    4. 'b' → logprob: -5.534514427185059
    5. '```' → logprob: -5.534514427185059
    6. '#' → logprob: -5.659514427185059
    7. ' return' → logprob: -6.034514427185059
    8. 'return' → logprob: -6.159514427185059
    9. ' a' → logprob: -7.409514427185059
    10. ' #' → logprob: -7.659514427185059

Token 1149: ' then' (ID: 1815)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27858424186706543
    2. '       ' → logprob: -2.4035842418670654
    3. 'b' → logprob: -3.1535842418670654
    4. '```' → logprob: -3.5285842418670654
    5. 'int' → logprob: -3.7785842418670654
    6. 'a' → logprob: -4.4035844802856445
    7. '   ' → logprob: -4.6535844802856445
    8. 'op' → logprob: -5.1535844802856445
    9. 'truncate' → logprob: -5.1535844802856445
    10. 'round' → logprob: -5.6535844802856445

Token 1150: ' discard' (ID: 79636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7638418078422546
    2. 'return' → logprob: -1.3888418674468994
    3. 'int' → logprob: -2.2638418674468994
    4. '```' → logprob: -2.6388418674468994
    5. 'truncate' → logprob: -3.3888418674468994
    6. 'result' → logprob: -4.63884162902832
    7. 'a' → logprob: -4.76384162902832
    8. '   ' → logprob: -4.88884162902832
    9. 'tr' → logprob: -4.88884162902832
    10. ' return' → logprob: -5.38884162902832

Token 1151: ' decimal' (ID: 26964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1607465744018555
    2. '   ' → logprob: -1.4107465744018555
    3. '0' → logprob: -2.7857465744018555
    4. '1' → logprob: -2.9107465744018555
    5. '```' → logprob: -3.0357465744018555
    6. ' ' → logprob: -3.2857465744018555
    7. ''' → logprob: -3.7857465744018555
    8. '_' → logprob: -3.9107465744018555
    9. 'の' → logprob: -3.9107465744018555
    10. 'the' → logprob: -4.0357465744018555

Token 1152: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8792686462402344
    2. '   ' → logprob: -2.3792686462402344
    3. '           ' → logprob: -2.3792686462402344
    4. '()
' → logprob: -2.8792686462402344
    5. '(' → logprob: -3.2542686462402344
    6. ')' → logprob: -3.6292686462402344
    7. '```' → logprob: -3.6292686462402344
    8. '()' → logprob: -3.8792686462402344
    9. '(part' → logprob: -4.004268646240234
    10. ',' → logprob: -4.379268646240234

Token 1153: ' get' (ID: 717)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.961073100566864
    2. ''\' → logprob: -1.7110731601715088
    3. '0' → logprob: -2.086073160171509
    4. 'return' → logprob: -2.586073160171509
    5. '1' → logprob: -3.086073160171509
    6. '```' → logprob: -3.711073160171509
    7. ' ' → logprob: -3.836073160171509
    8. 'int' → logprob: -4.08607292175293
    9. '\n' → logprob: -4.08607292175293
    10. ''s' → logprob: -4.46107292175293

Token 1154: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33866095542907715
    2. 'the' → logprob: -1.5886609554290771
    3. 'a' → logprob: -3.338660955429077
    4. '整数' → logprob: -3.713660955429077
    5. '```' → logprob: -4.963661193847656
    6. 'b' → logprob: -5.213661193847656
    7. ' the' → logprob: -5.838661193847656
    8. '1' → logprob: -5.963661193847656
    9. 'integer' → logprob: -7.213661193847656
    10. 'an' → logprob: -7.463661193847656

Token 1155: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04797602817416191
    2. '   ' → logprob: -3.547976016998291
    3. '```' → logprob: -5.297976016998291
    4. 'import' → logprob: -6.172976016998291
    5. 'def' → logprob: -6.172976016998291
    6. 'a' → logprob: -6.297976016998291
    7. ':' → logprob: -6.547976016998291
    8. 'return' → logprob: -7.297976016998291
    9. 'b' → logprob: -7.422976016998291
    10. 'if' → logprob: -7.422976016998291

Token 1156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000984935206361115
    2. '```' → logprob: -7.750985145568848
    3. '   ' → logprob: -8.250985145568848
    4. 'return' → logprob: -9.500985145568848
    5. '           ' → logprob: -9.625985145568848
    6. '``' → logprob: -10.500985145568848
    7. ' if' → logprob: -11.000985145568848
    8. 'if' → logprob: -11.500985145568848
    9. ',' → logprob: -11.625985145568848
    10. '`' → logprob: -11.875985145568848

Token 1157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01582072675228119
    2. 'if' → logprob: -5.390820503234863
    3. '#' (adapté à ' #') → logprob: -6.265820503234863
    4. 'a' → logprob: -6.640820503234863
    5. 'q' → logprob: -6.765820503234863
    6. 'b' → logprob: -7.140820503234863
    7. '   ' → logprob: -7.140820503234863
    8. 'quot' → logprob: -7.140820503234863
    9. 'result' → logprob: -7.265820503234863
    10. '```' → logprob: -7.640820503234863

Token 1158: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017421899363398552
    2. '   ' → logprob: -4.267421722412109
    3. '           ' → logprob: -7.142421722412109
    4. '```' → logprob: -7.267421722412109
    5. 'return' → logprob: -7.767421722412109
    6. 'def' → logprob: -8.14242172241211
    7. 'if' → logprob: -8.51742172241211
    8. 'result' → logprob: -9.01742172241211
    9. '        ' → logprob: -9.26742172241211
    10. '#' → logprob: -9.26742172241211

Token 1159: ' interpret' (ID: 18135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1733609437942505
    2. '       ' → logprob: -1.2983609437942505
    3. ' continue' → logprob: -2.173360824584961
    4. ' =' → logprob: -2.548360824584961
    5. 'continue' → logprob: -2.923360824584961
    6. ' return' → logprob: -2.923360824584961
    7. 'return' → logprob: -3.173360824584961
    8. 'def' → logprob: -4.423360824584961
    9. '=' → logprob: -4.548360824584961
    10. 'import' → logprob: -5.423360824584961

Token 1160: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4122995138168335
    2. ' as' → logprob: -1.7872995138168335
    3. 'a' → logprob: -1.9122995138168335
    4. 'abs' → logprob: -2.412299633026123
    5. ' abs' → logprob: -2.537299633026123
    6. ' a' → logprob: -2.787299633026123
    7. 'int' → logprob: -2.912299633026123
    8. 'b' → logprob: -2.912299633026123
    9. ' int' → logprob: -4.162299633026123
    10. ' =' → logprob: -4.162299633026123

Token 1161: ' division' (ID: 21629)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5468517541885376
    2. 'b' → logprob: -1.6718517541885376
    3. ' b' → logprob: -1.6718517541885376
    4. 'op' → logprob: -2.671851634979248
    5. '       ' → logprob: -2.671851634979248
    6. '```' → logprob: -2.796851634979248
    7. '0' → logprob: -3.796851634979248
    8. 'a' → logprob: -3.796851634979248
    9. ' op' → logprob: -3.921851634979248
    10. '           ' → logprob: -3.921851634979248

Token 1162: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1097965240478516
    2. ' =' → logprob: -1.1097965240478516
    3. '=' → logprob: -1.8597965240478516
    4. '       ' → logprob: -2.1097965240478516
    5. '_result' → logprob: -4.484796524047852
    6. 'result' → logprob: -5.109796524047852
    7. '```' → logprob: -5.359796524047852
    8. '_value' → logprob: -5.359796524047852
    9. 'return' → logprob: -5.859796524047852
    10. 'def' → logprob: -5.859796524047852

Token 1163: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7976226210594177
    2. '=' → logprob: -1.7976226806640625
    3. '   ' → logprob: -1.7976226806640625
    4. '       ' → logprob: -1.9226226806640625
    5. ' is' → logprob: -3.7976226806640625
    6. 'を' → logprob: -4.6726226806640625
    7. 'の' → logprob: -4.7976226806640625
    8. ' as' → logprob: -5.2976226806640625
    9. '[' → logprob: -5.9226226806640625
    10. 'a' → logprob: -5.9226226806640625

Token 1164: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6831561326980591
    2. ')' → logprob: -1.808156132698059
    3. ' =' → logprob: -2.1831560134887695
    4. '=' → logprob: -2.6831560134887695
    5. '[' → logprob: -3.8081560134887695
    6. '[token' → logprob: -4.0581560134887695
    7. '       ' → logprob: -4.4331560134887695
    8. ']' → logprob: -4.6831560134887695
    9. 'return' → logprob: -4.9331560134887695
    10. '()' → logprob: -5.3081560134887695

Token 1165: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004329826217144728
    2. ' a' → logprob: -5.629329681396484
    3. 'int' → logprob: -7.504329681396484
    4. 'float' → logprob: -8.879329681396484
    5. ' int' → logprob: -11.379329681396484
    6. ' float' → logprob: -11.754329681396484
    7. '(a' → logprob: -11.879329681396484
    8. 'round' → logprob: -12.379329681396484
    9. 'abs' → logprob: -12.754329681396484
    10. '   ' → logprob: -13.754329681396484

Token 1166: '/b' (ID: 7611)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1039949581027031
    2. ' /' → logprob: -2.603994846343994
    3. '/b' → logprob: -3.728994846343994
    4. '       ' → logprob: -8.978995323181152
    5. 'b' → logprob: -9.353995323181152
    6. 'div' → logprob: -9.353995323181152
    7. '/div' → logprob: -9.353995323181152
    8. '//' → logprob: -9.478995323181152
    9. '/
' → logprob: -10.353995323181152
    10. '/d' → logprob: -10.603995323181152

Token 1167: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7604244947433472
    2. '   ' → logprob: -1.0104244947433472
    3. ' =' → logprob: -2.3854246139526367
    4. ' /' → logprob: -3.7604246139526367
    5. '=' → logprob: -4.760424613952637
    6. ',' → logprob: -4.760424613952637
    7. ':
' → logprob: -5.635424613952637
    8. '           ' → logprob: -5.760424613952637
    9. 'd' → logprob: -5.885424613952637
    10. 'def' → logprob: -5.885424613952637

Token 1168: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9834784269332886
    2. 'a' → logprob: -1.2334784269332886
    3. ' int' → logprob: -1.8584784269332886
    4. ' a' → logprob: -1.8584784269332886
    5. 'round' → logprob: -5.233478546142578
    6. 'float' → logprob: -5.733478546142578
    7. 'd' → logprob: -6.233478546142578
    8. ' float' → logprob: -6.233478546142578
    9. '   ' → logprob: -6.358478546142578
    10. ' (' → logprob: -6.483478546142578

Token 1169: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08961331844329834
    2. '       ' → logprob: -3.214613437652588
    3. ' =' → logprob: -4.214613437652588
    4. ':
' → logprob: -5.089613437652588
    5. '
' → logprob: -5.214613437652588
    6. ':' → logprob: -5.714613437652588
    7. '[' → logprob: -6.089613437652588
    8. 'd' → logprob: -6.089613437652588
    9. '()
' → logprob: -6.214613437652588
    10. '.' → logprob: -6.964613437652588

Token 1170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008160975761711597
    2. '   ' → logprob: -4.8831610679626465
    3. '```' → logprob: -7.8831610679626465
    4. 'return' → logprob: -10.133160591125488
    5. '``' → logprob: -10.133160591125488
    6. '           ' → logprob: -10.383160591125488
    7. ',' → logprob: -11.008160591125488
    8. '`' → logprob: -12.258160591125488
    9. '     ' → logprob: -12.383160591125488
    10. '\' → logprob: -12.508160591125488

Token 1171: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005259491503238678
    2. '   ' → logprob: -6.1302595138549805
    3. 'd' → logprob: -6.6302595138549805
    4. ' if' → logprob: -7.0052595138549805
    5. 'if' → logprob: -7.3802595138549805
    6. ' d' → logprob: -9.63025951385498
    7. 'result' → logprob: -10.00525951385498
    8. '           ' → logprob: -10.50525951385498
    9. '```' → logprob: -11.13025951385498
    10. 'sign' → logprob: -11.38025951385498

Token 1172: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11339570581912994
    2. 'if' → logprob: -3.4883956909179688
    3. '   ' → logprob: -3.7383956909179688
    4. 'd' → logprob: -4.238395690917969
    5. ' if' → logprob: -4.363395690917969
    6. '```' → logprob: -4.363395690917969
    7. 'sign' → logprob: -5.863395690917969
    8. 'abs' → logprob: -6.238395690917969
    9. '``' → logprob: -6.363395690917969
    10. 'result' → logprob: -6.988395690917969

Token 1173: ' "' (ID: 392)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.998810887336731
    2. '       ' → logprob: -1.873810887336731
    3. 'if' → logprob: -2.3738107681274414
    4. 'd' → logprob: -2.3738107681274414
    5. ' if' → logprob: -2.7488107681274414
    6. 'res' → logprob: -3.2488107681274414
    7. 'int' → logprob: -3.6238107681274414
    8. 'round' → logprob: -3.6238107681274414
    9. ' abs' → logprob: -3.7488107681274414
    10. 'result' → logprob: -4.123810768127441

Token 1174: 'round' (ID: 1964)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8669936060905457
    2. 'abs' → logprob: -1.3669936656951904
    3. 'round' → logprob: -2.2419936656951904
    4. 'sign' → logprob: -3.1169936656951904
    5. 'def' → logprob: -3.4919936656951904
    6. 'int' → logprob: -3.8669936656951904
    7. 'd' → logprob: -3.9919936656951904
    8. 'res' → logprob: -4.116993427276611
    9. 'import' → logprob: -4.491993427276611
    10. 'result' → logprob: -4.616993427276611

Token 1175: 'ing' (ID: 289)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1254248470067978
    2. 'ed' → logprob: -2.625424861907959
    3. '"' → logprob: -4.375424861907959
    4. '(d' → logprob: -4.625424861907959
    5. 'ing' → logprob: -5.000424861907959
    6. '"d' → logprob: -6.125424861907959
    7. ')' → logprob: -6.625424861907959
    8. ' d' → logprob: -6.625424861907959
    9. '       ' → logprob: -6.750424861907959
    10. ' ' → logprob: -7.000424861907959

Token 1176: ' towards' (ID: 9979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8244600296020508
    2. 'tow' → logprob: -1.8244600296020508
    3. '_result' → logprob: -1.9494600296020508
    4. 'result' → logprob: -2.824460029602051
    5. '_t' → logprob: -3.074460029602051
    6. '           ' → logprob: -3.699460029602051
    7. 'd' → logprob: -4.074460029602051
    8. ' result' → logprob: -4.074460029602051
    9. '_value' → logprob: -4.699460029602051
    10. ' towards' → logprob: -4.824460029602051

Token 1177: ' smaller' (ID: 13679)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4032402038574219
    2. 'b' → logprob: -2.028240203857422
    3. ')' → logprob: -2.778240203857422
    4. ' d' → logprob: -3.278240203857422
    5. ' b' → logprob: -4.028240203857422
    6. 'the' → logprob: -4.028240203857422
    7. ''' → logprob: -4.278240203857422
    8. 'op' → logprob: -4.278240203857422
    9. 'a' → logprob: -4.903240203857422
    10. '"' → logprob: -5.278240203857422

Token 1178: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.012910429388284683
    2. '(abs' → logprob: -4.88791036605835
    3. ' abs' → logprob: -5.88791036605835
    4. '_abs' → logprob: -6.63791036605835
    5. 'a' → logprob: -7.38791036605835
    6. '.abs' → logprob: -9.137910842895508
    7. 'op' → logprob: -9.137910842895508
    8. 'operand' → logprob: -9.637910842895508
    9. ')' → logprob: -9.887910842895508
    10. '(' → logprob: -9.887910842895508

Token 1179: ' operand' (ID: 63895)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.150108814239502
    2. 'operand' → logprob: -1.775108814239502
    3. '       ' → logprob: -2.025108814239502
    4. '_value' → logprob: -2.275108814239502
    5. ')' → logprob: -2.650108814239502
    6. '(a' → logprob: -3.025108814239502
    7. '_operand' → logprob: -3.025108814239502
    8. ' operand' → logprob: -3.400108814239502
    9. '(' → logprob: -3.650108814239502
    10. ' value' → logprob: -4.775108814239502

Token 1180: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3883850574493408
    2. ' "' → logprob: -2.513385057449341
    3. ')"' → logprob: -2.513385057449341
    4. ')' → logprob: -2.638385057449341
    5. '):
' → logprob: -4.638384819030762
    6. '):' → logprob: -4.763384819030762
    7. '   ' → logprob: -4.888384819030762
    8. ' is' → logprob: -5.138384819030762
    9. 'の' → logprob: -5.263384819030762
    10. 'result' → logprob: -5.513384819030762

Token 1181: ' means' (ID: 4748)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.100285530090332
    2. '       ' → logprob: -1.350285530090332
    3. '   ' → logprob: -1.975285530090332
    4. ':' → logprob: -2.725285530090332
    5. ' =' → logprob: -2.850285530090332
    6. ':
' → logprob: -3.475285530090332
    7. ')' → logprob: -4.100285530090332
    8. '):
' → logprob: -4.225285530090332
    9. '           ' → logprob: -4.600285530090332
    10. '):' → logprob: -4.725285530090332

Token 1182: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0611744299530983
    2. ' if' → logprob: -3.6861743927001953
    3. 'if' → logprob: -4.811174392700195
    4. 'abs' → logprob: -5.186174392700195
    5. 'd' → logprob: -5.311174392700195
    6. '```' → logprob: -5.436174392700195
    7. ' a' → logprob: -6.311174392700195
    8. 'a' → logprob: -6.311174392700195
    9. ' abs' → logprob: -6.561174392700195
    10. 'return' → logprob: -6.936174392700195

Token 1183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006548931705765426
    2. ' if' → logprob: -7.875654697418213
    3. '           ' → logprob: -9.625655174255371
    4. '```' → logprob: -9.625655174255371
    5. '   ' → logprob: -10.125655174255371
    6. ',' → logprob: -11.250655174255371
    7. '        ' → logprob: -11.375655174255371
    8. 'if' → logprob: -12.000655174255371
    9. ' return' → logprob: -12.000655174255371
    10. ')' → logprob: -12.000655174255371

Token 1184: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00325768836773932
    2. ' if' → logprob: -6.253257751464844
    3. 'if' → logprob: -7.753257751464844
    4. '           ' → logprob: -8.378257751464844
    5. '        ' → logprob: -9.003257751464844
    6. ' next' → logprob: -9.628257751464844
    7. '   ' → logprob: -9.628257751464844
    8. 'return' → logprob: -9.878257751464844
    9. 'next' → logprob: -10.128257751464844
    10. '```' → logprob: -10.253257751464844

Token 1185: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09891290962696075
    2. 'abs' → logprob: -3.4739129543304443
    3. 'if' → logprob: -3.7239129543304443
    4. ' if' → logprob: -4.223912715911865
    5. '```' → logprob: -4.348912715911865
    6. 'a' → logprob: -6.223912715911865
    7. '#' → logprob: -6.348912715911865
    8. ' abs' → logprob: -6.348912715911865
    9. '``' → logprob: -6.723912715911865
    10. 'return' → logprob: -7.098912715911865

Token 1186: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9330251812934875
    2. 'abs' → logprob: -1.1830251216888428
    3. 'a' → logprob: -1.3080251216888428
    4. 'op' → logprob: -4.683025360107422
    5. ' abs' → logprob: -5.308025360107422
    6. 'b' → logprob: -5.933025360107422
    7. '(abs' → logprob: -5.933025360107422
    8. ' a' → logprob: -6.058025360107422
    9. ' d' → logprob: -6.183025360107422
    10. '(a' → logprob: -6.433025360107422

Token 1187: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5598818063735962
    2. '<' → logprob: -1.3098818063735962
    3. ' <=' → logprob: -2.9348816871643066
    4. '<=' → logprob: -3.3098816871643066
    5. '>' → logprob: -3.6848816871643066
    6. ' >' → logprob: -3.8098816871643066
    7. '<a' → logprob: -5.059881687164307
    8. 'a' → logprob: -5.309881687164307
    9. ' is' → logprob: -6.184881687164307
    10. '==' → logprob: -6.559881687164307

Token 1188: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8298841118812561
    2. 'abs' → logprob: -1.5798840522766113
    3. 'b' → logprob: -1.9548840522766113
    4. 'a' → logprob: -2.3298840522766113
    5. ' min' → logprob: -3.2048840522766113
    6. 'the' → logprob: -3.5798840522766113
    7. ' abs' → logprob: -4.204884052276611
    8. 'sm' → logprob: -4.579884052276611
    9. 'op' → logprob: -5.704884052276611
    10. '   ' → logprob: -5.829884052276611

Token 1189: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.4897080361843109
    2. '(a' → logprob: -1.3647080659866333
    3. 'abs' → logprob: -2.2397079467773438
    4. '(' → logprob: -4.489707946777344
    5. '_abs' → logprob: -5.489707946777344
    6. '(
' → logprob: -5.614707946777344
    7. 'a' → logprob: -5.864707946777344
    8. '(b' → logprob: -6.739707946777344
    9. '([' → logprob: -7.364707946777344
    10. '(|' → logprob: -8.489707946777344

Token 1190: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18090972304344177
    2. '(a' → logprob: -1.8059097528457642
    3. '(abs' → logprob: -8.055910110473633
    4. ')' → logprob: -8.555910110473633
    5. 'op' → logprob: -8.930910110473633
    6. '(op' → logprob: -9.055910110473633
    7. '(' → logprob: -9.430910110473633
    8. '(
' → logprob: -9.430910110473633
    9. ' a' → logprob: -9.930910110473633
    10. 'abs' → logprob: -10.055910110473633

Token 1191: '),' (ID: 936)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38450151681900024
    2. '),' → logprob: -1.2595014572143555
    3. ')' → logprob: -4.0095014572143555
    4. ',' → logprob: -5.3845014572143555
    5. 'a' → logprob: -5.6345014572143555
    6. '['' → logprob: -6.6345014572143555
    7. 'abs' → logprob: -6.6345014572143555
    8. ')),' → logprob: -6.7595014572143555
    9. 'b' → logprob: -7.1345014572143555
    10. ')[' → logprob: -7.1345014572143555

Token 1192: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6052089929580688
    2. 'b' → logprob: -0.8552089929580688
    3. ' abs' → logprob: -3.9802088737487793
    4. 'op' → logprob: -4.855208873748779
    5. ' b' → logprob: -6.355208873748779
    6. 'min' → logprob: -8.230209350585938
    7. '(abs' → logprob: -9.230209350585938
    8. ' op' → logprob: -9.355209350585938
    9. 'a' → logprob: -9.730209350585938
    10. '   ' → logprob: -10.730209350585938

Token 1193: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02690310776233673
    2. 'a' → logprob: -3.9019031524658203
    3. '(b' → logprob: -5.15190315246582
    4. '(a' → logprob: -7.65190315246582
    5. 'd' → logprob: -10.52690315246582
    6. 'op' → logprob: -11.15190315246582
    7. 's' → logprob: -11.65190315246582
    8. ')' → logprob: -12.52690315246582
    9. '(op' → logprob: -12.52690315246582
    10. 'abs' → logprob: -12.52690315246582

Token 1194: ')),' (ID: 12098)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.042978640645742416
    2. ')):
' → logprob: -3.542978525161743
    3. '):' → logprob: -4.917978763580322
    4. ')' → logprob: -5.667978763580322
    5. '       ' → logprob: -6.792978763580322
    6. '),' → logprob: -7.917978763580322
    7. ')):' → logprob: -8.292978286743164
    8. '))' → logprob: -8.417978286743164
    9. '):

' → logprob: -9.417978286743164
    10. ')+' → logprob: -10.167978286743164

Token 1195: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21048694849014282
    2. '           ' → logprob: -2.335486888885498
    3. 'return' → logprob: -3.335486888885498
    4. ' return' → logprob: -3.960486888885498
    5. '#' → logprob: -4.585486888885498
    6. ' and' → logprob: -5.335486888885498
    7. ' if' → logprob: -5.585486888885498
    8. 'd' → logprob: -5.960486888885498
    9. ')' → logprob: -6.210486888885498
    10. '        ' → logprob: -6.210486888885498

Token 1196: ' round' (ID: 7353)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8232627511024475
    2. 'd' → logprob: -1.8232626914978027
    3. 'if' → logprob: -1.8232626914978027
    4. 'round' → logprob: -2.1982626914978027
    5. ' if' → logprob: -3.5732626914978027
    6. ' return' → logprob: -3.5732626914978027
    7. 'abs' → logprob: -4.073262691497803
    8. '       ' → logprob: -4.448262691497803
    9. 'op' → logprob: -5.073262691497803
    10. 'a' → logprob: -5.198262691497803

Token 1197: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.7485313415527344
    2. 'd' → logprob: -0.9985313415527344
    3. 'a' → logprob: -2.4985313415527344
    4. ' down' → logprob: -3.9985313415527344
    5. 'tow' → logprob: -5.123531341552734
    6. ' d' → logprob: -5.623531341552734
    7. '=' → logprob: -5.748531341552734
    8. '-' → logprob: -5.748531341552734
    9. '(d' → logprob: -5.748531341552734
    10. ' a' → logprob: -5.873531341552734

Token 1198: ' to' (ID: 316)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -1.4795809984207153
    2. '       ' → logprob: -1.6045809984207153
    3. ' towards' → logprob: -2.229580879211426
    4. ')' → logprob: -2.729580879211426
    5. ' toward' → logprob: -2.979580879211426
    6. ' if' → logprob: -3.229580879211426
    7. '=' → logprob: -3.354580879211426
    8. 'd' → logprob: -3.604580879211426
    9. '   ' → logprob: -3.854580879211426
    10. 'def' → logprob: -3.979580879211426

Token 1199: ' floor' (ID: 8350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4431387484073639
    2. 'min' → logprob: -1.1931387186050415
    3. 'the' → logprob: -3.068138837814331
    4. 'math' → logprob: -5.943138599395752
    5. 'that' → logprob: -6.318138599395752
    6. ' min' → logprob: -6.693138599395752
    7. ' int' → logprob: -6.943138599395752
    8. 'abs' → logprob: -7.318138599395752
    9. ' the' → logprob: -8.44313907623291
    10. '```' → logprob: -8.44313907623291

Token 1200: '(d' (ID: 2572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0931376218795776
    2. '()' → logprob: -1.2181376218795776
    3. 'd' → logprob: -2.718137741088867
    4. ')' → logprob: -3.218137741088867
    5. '()
' → logprob: -3.218137741088867
    6. '(d' → logprob: -3.718137741088867
    7. 'def' → logprob: -3.968137741088867
    8. '   ' → logprob: -4.093137741088867
    9. '           ' → logprob: -4.593137741088867
    10. 'or' → logprob: -4.718137741088867

Token 1201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023074138909578323
    2. '())' → logprob: -4.398074150085449
    3. ')
' → logprob: -4.648074150085449
    4. '())
' → logprob: -8.27307415008545
    5. ' )' → logprob: -8.52307415008545
    6. '       ' → logprob: -9.27307415008545
    7. '()' → logprob: -9.52307415008545
    8. '),' → logprob: -10.14807415008545
    9. '(d' → logprob: -10.27307415008545
    10. '   ' → logprob: -10.64807415008545

Token 1202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004270358011126518
    2. 'else' → logprob: -5.879270553588867
    3. 'elif' → logprob: -7.754270553588867
    4. ' else' → logprob: -7.879270553588867
    5. '           ' → logprob: -8.629270553588867
    6. '   ' → logprob: -9.254270553588867
    7. '```' → logprob: -9.254270553588867
    8. '#' → logprob: -9.879270553588867
    9. ',' → logprob: -10.129270553588867
    10. ' and' → logprob: -10.129270553588867

Token 1203: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05452631041407585
    2. 'else' → logprob: -3.6795263290405273
    3. ' else' → logprob: -3.8045263290405273
    4. '```' → logprob: -6.054526329040527
    5. 'elif' → logprob: -6.679526329040527
    6. '   ' → logprob: -6.929526329040527
    7. '           ' → logprob: -7.679526329040527
    8. ' elif' → logprob: -8.679526329040527
    9. ',' → logprob: -9.679526329040527
    10. '...' → logprob: -10.054526329040527

Token 1204: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03431977331638336
    2. ' else' → logprob: -4.034319877624512
    3. 'else' → logprob: -4.409319877624512
    4. '   ' → logprob: -6.784319877624512
    5. '           ' → logprob: -7.034319877624512
    6. 'elif' → logprob: -7.409319877624512
    7. '```' → logprob: -7.534319877624512
    8. ' elif' → logprob: -8.034319877624512
    9. 'return' → logprob: -9.534319877624512
    10. '``' → logprob: -9.784319877624512

Token 1205: ' round' (ID: 7353)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27308714389801025
    2. ' return' → logprob: -2.7730870246887207
    3. ' if' → logprob: -3.2730870246887207
    4. '           ' → logprob: -3.3980870246887207
    5. ' floor' → logprob: -3.5230870246887207
    6. ' d' → logprob: -3.5230870246887207
    7. 'return' → logprob: -4.023087024688721
    8. '        ' → logprob: -4.773087024688721
    9. 'd' → logprob: -5.398087024688721
    10. 'floor' → logprob: -5.523087024688721

Token 1206: ' up' (ID: 869)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.6342878341674805
    2. 'up' → logprob: -1.0092878341674805
    3. ' up' → logprob: -2.5092878341674805
    4. ' down' → logprob: -3.8842878341674805
    5. '_up' → logprob: -6.7592878341674805
    6. 'tow' → logprob: -7.1342878341674805
    7. '	up' → logprob: -8.00928783416748
    8. '_down' → logprob: -8.63428783416748
    9. 'd' → logprob: -8.75928783416748
    10. ' ' → logprob: -9.00928783416748

Token 1207: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42942312359809875
    2. '(d' → logprob: -1.5544230937957764
    3. '   ' → logprob: -3.3044230937957764
    4. 'def' → logprob: -3.5544230937957764
    5. '           ' → logprob: -4.0544233322143555
    6. ':
' → logprob: -4.1794233322143555
    7. '               ' → logprob: -4.6794233322143555
    8. '                   ' → logprob: -5.8044233322143555
    9. '(' → logprob: -5.8044233322143555
    10. 'd' → logprob: -5.9294233322143555

Token 1208: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.03939417004585266
    2. 'int' → logprob: -3.9143941402435303
    3. ' ceil' → logprob: -4.414394378662109
    4. 'math' → logprob: -5.289394378662109
    5. ' int' → logprob: -6.789394378662109
    6. 'floor' → logprob: -8.53939437866211
    7. ' math' → logprob: -8.66439437866211
    8. 'ce' → logprob: -11.53939437866211
    9. '(int' → logprob: -11.91439437866211
    10. ' ' → logprob: -12.16439437866211

Token 1209: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.28847208619117737
    2. '       ' → logprob: -1.663472056388855
    3. '   ' → logprob: -3.6634721755981445
    4. '           ' → logprob: -4.7884721755981445
    5. ')' → logprob: -4.7884721755981445
    6. '(' → logprob: -5.5384721755981445
    7. ')
' → logprob: -6.1634721755981445
    8. 'def' → logprob: -6.1634721755981445
    9. '(
' → logprob: -6.4134721755981445
    10. '(a' → logprob: -6.7884721755981445

Token 1210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04234432429075241
    2. ')
' → logprob: -3.667344331741333
    3. '       ' → logprob: -4.542344093322754
    4. '(d' → logprob: -5.917344093322754
    5. '):
' → logprob: -7.292344093322754
    6. ')
' → logprob: -7.667344093322754
    7. '):' → logprob: -7.917344093322754
    8. '   ' → logprob: -8.792344093322754
    9. '           ' → logprob: -8.792344093322754
    10. '))' → logprob: -9.167344093322754

Token 1211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012291580205783248
    2. '   ' → logprob: -7.251229286193848
    3. '           ' → logprob: -8.376229286193848
    4. '```' → logprob: -8.751229286193848
    5. 'return' → logprob: -11.126229286193848
    6. '(' → logprob: -11.251229286193848
    7. ',' → logprob: -11.251229286193848
    8. ' else' → logprob: -11.251229286193848
    9. '``' → logprob: -11.376229286193848
    10. 'else' → logprob: -11.376229286193848

Token 1212: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004439016804099083
    2. '   ' → logprob: -6.254438877105713
    3. ' if' → logprob: -6.629438877105713
    4. 'if' → logprob: -7.004438877105713
    5. '```' → logprob: -9.254439353942871
    6. '           ' → logprob: -9.629439353942871
    7. ' else' → logprob: -10.879439353942871
    8. 'else' → logprob: -10.879439353942871
    9. '``' → logprob: -11.504439353942871
    10. '
' → logprob: -11.504439353942871

Token 1213: ' Finally' (ID: 23568)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004565057344734669
    2. '   ' → logprob: -5.504565238952637
    3. ' if' → logprob: -9.004565238952637
    4. 'if' → logprob: -9.254565238952637
    5. '```' → logprob: -9.379565238952637
    6. '           ' → logprob: -9.754565238952637
    7. 'd' → logprob: -9.754565238952637
    8. 'def' → logprob: -11.129565238952637
    9. '``' → logprob: -12.129565238952637
    10. '        ' → logprob: -12.504565238952637

Token 1214: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10082010179758072
    2. 'd' → logprob: -3.8508200645446777
    3. ' if' → logprob: -3.8508200645446777
    4. 'return' → logprob: -4.225820064544678
    5. ' return' → logprob: -4.350820064544678
    6. 'if' → logprob: -5.350820064544678
    7. ':' → logprob: -5.725820064544678
    8. '           ' → logprob: -5.850820064544678
    9. 'import' → logprob: -5.975820064544678
    10. ' d' → logprob: -6.225820064544678

Token 1215: ' discard' (ID: 79636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9775360822677612
    2. ' if' → logprob: -1.2275360822677612
    3. '       ' → logprob: -1.9775360822677612
    4. 'return' → logprob: -3.227536201477051
    5. 'res' → logprob: -3.352536201477051
    6. 'val' → logprob: -3.977536201477051
    7. ' res' → logprob: -4.102536201477051
    8. 'd' → logprob: -4.102536201477051
    9. ' return' → logprob: -4.477536201477051
    10. 'import' → logprob: -4.477536201477051

Token 1216: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.6175212264060974
    2. ' decimal' → logprob: -1.3675212860107422
    3. 'the' → logprob: -2.492521286010742
    4. 'd' → logprob: -3.492521286010742
    5. ' the' → logprob: -3.742521286010742
    6. 'fraction' → logprob: -3.867521286010742
    7. ' fractional' → logprob: -3.992521286010742
    8. ' remainder' → logprob: -5.367521286010742
    9. '       ' → logprob: -5.867521286010742
    10. '_decimal' → logprob: -6.117521286010742

Token 1217: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05860062688589096
    2. ' =' → logprob: -4.183600425720215
    3. ' if' → logprob: -4.433600425720215
    4. 'd' → logprob: -4.808600425720215
    5. '           ' → logprob: -5.308600425720215
    6. ':
' → logprob: -6.058600425720215
    7. 'if' → logprob: -6.433600425720215
    8. '(d' → logprob: -6.433600425720215
    9. 'import' → logprob: -6.683600425720215
    10. '```' → logprob: -6.808600425720215

Token 1218: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06870293617248535
    2. '()
' → logprob: -4.193702697753906
    3. '   ' → logprob: -4.943702697753906
    4. '           ' → logprob: -5.068702697753906
    5. '(d' → logprob: -5.068702697753906
    6. '```' → logprob: -5.193702697753906
    7. '()' → logprob: -5.443702697753906
    8. ' =' → logprob: -5.568702697753906
    9. 'def' → logprob: -5.693702697753906
    10. ':
' → logprob: -5.818702697753906

Token 1219: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13315515220165253
    2. 'return' → logprob: -3.758155107498169
    3. '```' → logprob: -3.758155107498169
    4. 'd' → logprob: -4.133155345916748
    5. ' return' → logprob: -4.383155345916748
    6. ' if' → logprob: -4.758155345916748
    7. '\' → logprob: -5.258155345916748
    8. '           ' → logprob: -5.508155345916748
    9. '``' → logprob: -5.883155345916748
    10. '   ' → logprob: -6.008155345916748

Token 1220: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3810217082500458
    2. '(d' → logprob: -2.131021738052368
    3. '   ' → logprob: -2.756021738052368
    4. '(
' → logprob: -3.881021738052368
    5. '           ' → logprob: -4.006021499633789
    6. ' =' → logprob: -4.256021499633789
    7. ':
' → logprob: -4.256021499633789
    8. '):
' → logprob: -4.881021499633789
    9. ')' → logprob: -5.131021499633789
    10. 'def' → logprob: -5.256021499633789

Token 1221: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.0893179401755333
    2. ' ceil' → logprob: -2.589318037033081
    3. 'int' → logprob: -5.089317798614502
    4. 'ce' → logprob: -6.839317798614502
    5. 'round' → logprob: -7.089317798614502
    6. 'truncate' → logprob: -7.089317798614502
    7. ' int' → logprob: -7.214317798614502
    8. 'floor' → logprob: -9.08931827545166
    9. 'abs' → logprob: -9.21431827545166
    10. ' round' → logprob: -9.46431827545166

Token 1222: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5232199430465698
    2. '   ' → logprob: -2.1482200622558594
    3. 'def' → logprob: -2.7732200622558594
    4. '(d' → logprob: -2.7732200622558594
    5. '           ' → logprob: -3.5232200622558594
    6. '(' → logprob: -4.398220062255859
    7. '(
' → logprob: -4.773220062255859
    8. 'd' → logprob: -4.773220062255859
    9. '()
' → logprob: -4.898220062255859
    10. '
' → logprob: -5.023220062255859

Token 1223: ' integer' (ID: 16336)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8130688071250916
    2. 'int' → logprob: -2.0630688667297363
    3. ' a' → logprob: -2.6880688667297363
    4. ' d' → logprob: -2.9380688667297363
    5. ' int' → logprob: -2.9380688667297363
    6. '1' → logprob: -3.0630688667297363
    7. ' the' → logprob: -3.0630688667297363
    8. '```' → logprob: -3.4380688667297363
    9. ')' → logprob: -4.063068866729736
    10. 'a' → logprob: -4.063068866729736

Token 1224: ' value' (ID: 1432)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2285082340240479
    2. '()
' → logprob: -1.3535082340240479
    3. 'def' → logprob: -2.353508234024048
    4. '       ' → logprob: -2.603508234024048
    5. ' =' → logprob: -3.103508234024048
    6. '(d' → logprob: -3.228508234024048
    7. ')' → logprob: -3.603508234024048
    8. '   ' → logprob: -3.728508234024048
    9. '(
' → logprob: -3.853508234024048
    10. '```' → logprob: -3.978508234024048

Token 1225: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2212417870759964
    2. '   ' → logprob: -2.3462417125701904
    3. ' =' → logprob: -3.7212417125701904
    4. 'def' → logprob: -3.9712417125701904
    5. '
' → logprob: -4.2212419509887695
    6. '           ' → logprob: -4.8462419509887695
    7. '```' → logprob: -5.0962419509887695
    8. '()
' → logprob: -5.5962419509887695
    9. ' if' → logprob: -5.7212419509887695
    10. '):
' → logprob: -5.8462419509887695

Token 1226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009956525173038244
    2. '   ' → logprob: -7.625995635986328
    3. '           ' → logprob: -8.500995635986328
    4. '```' → logprob: -9.250995635986328
    5. ' if' → logprob: -9.375995635986328
    6. '        
' → logprob: -10.375995635986328
    7. '        ' → logprob: -11.125995635986328
    8. '``' → logprob: -11.250995635986328
    9. '               ' → logprob: -11.375995635986328
    10. '\n' → logprob: -12.000995635986328

Token 1227: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018984097987413406
    2. '   ' → logprob: -6.751898288726807
    3. 'if' → logprob: -8.001898765563965
    4. ' if' → logprob: -8.626898765563965
    5. '```' → logprob: -9.251898765563965
    6. '           ' → logprob: -10.126898765563965
    7. 'd' → logprob: -11.126898765563965
    8. 'def' → logprob: -11.251898765563965
    9. '``' → logprob: -11.876898765563965
    10. '        ' → logprob: -12.501898765563965

Token 1228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00409775460138917
    2. '```' → logprob: -5.879097938537598
    3. '   ' → logprob: -7.254097938537598
    4. ' if' → logprob: -8.004097938537598
    5. '``' → logprob: -9.254097938537598
    6. '           ' → logprob: -9.254097938537598
    7. '        ' → logprob: -11.754097938537598
    8. 'if' → logprob: -12.254097938537598
    9. 'If' → logprob: -12.254097938537598
    10. ')' → logprob: -12.254097938537598

Token 1229: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16961520910263062
    2. ' if' → logprob: -2.6696152687072754
    3. '   ' → logprob: -2.6696152687072754
    4. 'if' → logprob: -4.794615268707275
    5. '```' → logprob: -5.294615268707275
    6. 'd' → logprob: -6.919615268707275
    7. '``' → logprob: -7.294615268707275
    8. ' d' → logprob: -7.919615268707275
    9. '           ' → logprob: -8.044614791870117
    10. 'return' → logprob: -8.419614791870117

Token 1230: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7963814735412598
    2. 'd' → logprob: -1.4213814735412598
    3. 'if' → logprob: -1.9213814735412598
    4. 'val' → logprob: -3.0463814735412598
    5. 'abs' → logprob: -3.6713814735412598
    6. 'sign' → logprob: -3.7963814735412598
    7. 'import' → logprob: -4.42138147354126
    8. ' if' → logprob: -4.79638147354126
    9. 'div' → logprob: -4.79638147354126
    10. 'v' → logprob: -4.92138147354126

Token 1231: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8706935048103333
    2. 'if' → logprob: -1.7456934452056885
    3. 'abs' → logprob: -1.8706934452056885
    4. 'd' → logprob: -2.6206934452056885
    5. '#' → logprob: -2.7456934452056885
    6. ' if' → logprob: -3.7456934452056885
    7. 'return' → logprob: -3.7456934452056885
    8. '   ' → logprob: -3.9956934452056885
    9. 'a' → logprob: -4.120693683624268
    10. 'import' → logprob: -5.370693683624268

Token 1232: ' sample' (ID: 10176)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0133248567581177
    2. 'b' → logprob: -2.263324737548828
    3. ' b' → logprob: -2.513324737548828
    4. ''' → logprob: -2.513324737548828
    5. 'a' → logprob: -3.013324737548828
    6. 'op' → logprob: -3.013324737548828
    7. ' abs' → logprob: -3.763324737548828
    8. '   ' → logprob: -3.888324737548828
    9. 'abs' → logprob: -3.888324737548828
    10. 'd' → logprob: -3.888324737548828

Token 1233: ' outputs' (ID: 32725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6317328810691833
    2. '       ' → logprob: -2.256732940673828
    3. 'def' → logprob: -3.131732940673828
    4. '/' → logprob: -3.381732940673828
    5. ' /' → logprob: -3.506732940673828
    6. ':' → logprob: -3.631732940673828
    7. '```' → logprob: -3.756732940673828
    8. '[' → logprob: -4.006732940673828
    9. ' ' → logprob: -4.131732940673828
    10. ',' → logprob: -4.131732940673828

Token 1234: ' show' (ID: 2356)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19882002472877502
    2. '   ' → logprob: -2.323820114135742
    3. ':' → logprob: -3.698820114135742
    4. ':
' → logprob: -4.323820114135742
    5. '```' → logprob: -4.448820114135742
    6. ',' → logprob: -5.198820114135742
    7. '           ' → logprob: -5.823820114135742
    8. ' if' → logprob: -5.948820114135742
    9. 'return' → logprob: -6.198820114135742
    10. '        ' → logprob: -6.323820114135742

Token 1235: ' the' (ID: 290)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5278937816619873
    2. ' a' → logprob: -1.9028937816619873
    3. '       ' → logprob: -2.9028937816619873
    4. 'a' → logprob: -3.2778937816619873
    5. '``' → logprob: -3.5278937816619873
    6. ''' → logprob: -3.5278937816619873
    7. '`' → logprob: -3.6528937816619873
    8. ' b' → logprob: -3.6528937816619873
    9. 'b' → logprob: -4.902894020080566
    10. '   ' → logprob: -5.027894020080566

Token 1236: ' standard' (ID: 7024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5200433731079102
    2. ''' → logprob: -3.02004337310791
    3. '   ' → logprob: -3.27004337310791
    4. 'return' → logprob: -3.39504337310791
    5. ' return' → logprob: -3.52004337310791
    6. 'a' → logprob: -3.52004337310791
    7. '```' → logprob: -3.77004337310791
    8. ' /' → logprob: -4.02004337310791
    9. ' a' → logprob: -4.02004337310791
    10. '`' → logprob: -4.14504337310791

Token 1237: ' ambiguity' (ID: 154576)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.215206503868103
    2. '   ' → logprob: -1.465206503868103
    3. '       ' → logprob: -1.840206503868103
    4. '```' → logprob: -2.5902066230773926
    5. '//' → logprob: -2.7152066230773926
    6. 'return' → logprob: -2.7152066230773926
    7. 'a' → logprob: -4.090206623077393
    8. ' return' → logprob: -4.590206623077393
    9. 'int' → logprob: -4.590206623077393
    10. 'd' → logprob: -4.715206623077393

Token 1238: ' too' (ID: 3101)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3864580988883972
    2. '   ' → logprob: -1.511458158493042
    3. '```' → logprob: -3.261458158493042
    4. ':' → logprob: -4.511457920074463
    5. '           ' → logprob: -4.761457920074463
    6. ':
' → logprob: -5.011457920074463
    7. '):
' → logprob: -5.261457920074463
    8. ''' → logprob: -5.886457920074463
    9. '`' → logprob: -6.011457920074463
    10. ',' → logprob: -6.011457920074463

Token 1239: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0878516361117363
    2. '   ' → logprob: -2.5878515243530273
    3. '```' → logprob: -5.337851524353027
    4. ' /' → logprob: -7.712851524353027
    5. '           ' → logprob: -7.962851524353027
    6. '``' → logprob: -8.212851524353027
    7. '        ' → logprob: -8.337851524353027
    8. '    ' → logprob: -8.462851524353027
    9. 'return' → logprob: -8.587851524353027
    10. ' if' → logprob: -8.587851524353027

Token 1240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005788600537925959
    2. '   ' → logprob: -5.630788803100586
    3. '```' → logprob: -6.380788803100586
    4. 'return' → logprob: -8.755788803100586
    5. '``' → logprob: -8.755788803100586
    6. ' return' → logprob: -10.005788803100586
    7. '           ' → logprob: -10.380788803100586
    8. '`' → logprob: -11.505788803100586
    9. ' ' → logprob: -11.755788803100586
    10. ')' → logprob: -11.880788803100586

Token 1241: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017193306237459183
    2. '   ' → logprob: -4.26719331741333
    3. '```' → logprob: -6.64219331741333
    4. 'return' → logprob: -7.76719331741333
    5. '           ' → logprob: -8.267192840576172
    6. '``' → logprob: -8.392192840576172
    7. 'if' → logprob: -9.017192840576172
    8. ' return' → logprob: -9.392192840576172
    9. ' if' → logprob: -9.392192840576172
    10. ')' → logprob: -9.517192840576172

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016426921356469393
    2. '   ' → logprob: -6.75164270401001
    3. '```' → logprob: -7.75164270401001
    4. '``' → logprob: -11.001642227172852
    5. '           ' → logprob: -11.251642227172852
    6. ' if' → logprob: -12.501642227172852
    7. '        ' → logprob: -13.501642227172852
    8. 'if' → logprob: -14.251642227172852
    9. 'return' → logprob: -14.251642227172852
    10. 'Let's' → logprob: -14.376642227172852

Token 1243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11078602820634842
    2. 'd' → logprob: -2.985785961151123
    3. 'sign' → logprob: -3.860785961151123
    4. 'if' → logprob: -4.485785961151123
    5. '#' (adapté à ' #') → logprob: -5.610785961151123
    6. ' if' → logprob: -5.985785961151123
    7. '   ' → logprob: -5.985785961151123
    8. 'import' → logprob: -6.110785961151123
    9. 'q' → logprob: -6.235785961151123
    10. 'result' → logprob: -6.485785961151123

Token 1244: ' Alternatively' (ID: 46417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08749018609523773
    2. '   ' → logprob: -4.212490081787109
    3. 'a' → logprob: -4.837490081787109
    4. '```' → logprob: -4.962490081787109
    5. '           ' → logprob: -5.212490081787109
    6. 'if' → logprob: -5.212490081787109
    7. ' if' → logprob: -5.212490081787109
    8. 'def' → logprob: -5.462490081787109
    9. 'int' → logprob: -5.712490081787109
    10. 'return' → logprob: -5.712490081787109

Token 1245: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043258823454380035
    2. 'sign' → logprob: -4.4182586669921875
    3. '```' → logprob: -4.7932586669921875
    4. 'd' → logprob: -5.6682586669921875
    5. '   ' → logprob: -5.9182586669921875
    6. 'if' → logprob: -6.1682586669921875
    7. 'q' → logprob: -6.4182586669921875
    8. '#' → logprob: -6.4182586669921875
    9. '``' → logprob: -6.4182586669921875
    10. 'a' → logprob: -6.5432586669921875

Token 1246: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09868774563074112
    2. 'sign' → logprob: -3.3486876487731934
    3. '#' → logprob: -3.8486876487731934
    4. 'if' → logprob: -4.848687648773193
    5. '   ' → logprob: -5.473687648773193
    6. 'd' → logprob: -5.723687648773193
    7. 'return' → logprob: -5.723687648773193
    8. 'result' → logprob: -5.848687648773193
    9. 'def' → logprob: -5.848687648773193
    10. ' if' → logprob: -6.098687648773193

Token 1247: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0360409021377563
    2. 'a' → logprob: -1.4110409021377563
    3. 'int' → logprob: -1.6610409021377563
    4. 'b' → logprob: -2.411040782928467
    5. '       ' → logprob: -3.286040782928467
    6. ' abs' → logprob: -3.286040782928467
    7. ' a' → logprob: -4.161040782928467
    8. ' int' → logprob: -5.161040782928467
    9. 'd' → logprob: -5.411040782928467
    10. '```' → logprob: -5.536040782928467

Token 1248: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9769254326820374
    2. 'b' → logprob: -1.8519253730773926
    3. 'a' → logprob: -1.9769253730773926
    4. 'abs' → logprob: -1.9769253730773926
    5. '   ' → logprob: -3.3519253730773926
    6. '#' → logprob: -3.3519253730773926
    7. 'd' → logprob: -3.6019253730773926
    8. 'return' → logprob: -3.8519253730773926
    9. 'int' → logprob: -4.351925373077393
    10. 'op' → logprob: -4.351925373077393

Token 1249: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48067396879196167
    2. ' is' → logprob: -1.9806740283966064
    3. '   ' → logprob: -2.4806740283966064
    4. '=' → logprob: -3.3556740283966064
    5. ':
' → logprob: -3.7306740283966064
    6. '/' → logprob: -4.480673789978027
    7. '```' → logprob: -4.480673789978027
    8. ' =' → logprob: -4.605673789978027
    9. 'def' → logprob: -4.605673789978027
    10. ' /' → logprob: -4.855673789978027

Token 1250: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4025915861129761
    2. '```' → logprob: -1.902591586112976
    3. 'a' → logprob: -2.4025917053222656
    4. ' a' → logprob: -3.6525917053222656
    5. '``' → logprob: -4.152591705322266
    6. '   ' → logprob: -4.527591705322266
    7. '`' → logprob: -4.652591705322266
    8. ''' → logprob: -5.027591705322266
    9. 'int' → logprob: -5.277591705322266
    10. '           ' → logprob: -6.277591705322266

Token 1251: '割' (ID: 67361)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.5996357202529907
    2. 'int' → logprob: -1.9746357202529907
    3. '```' → logprob: -2.224635601043701
    4. '"' → logprob: -2.349635601043701
    5. 'a' → logprob: -2.474635601043701
    6. '       ' → logprob: -3.099635601043701
    7. ' a' → logprob: -3.224635601043701
    8. ')' → logprob: -3.349635601043701
    9. '   ' → logprob: -3.724635601043701
    10. ' /' → logprob: -4.099635601043701

Token 1252: 'り' (ID: 7297)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3490225374698639
    2. 'り' → logprob: -2.599022626876831
    3. ''' → logprob: -3.349022626876831
    4. '(' → logprob: -3.474022626876831
    5. '(
' → logprob: -3.849022626876831
    6. '```' → logprob: -4.224022388458252
    7. '   ' → logprob: -4.349022388458252
    8. '       ' → logprob: -4.849022388458252
    9. ' /' → logprob: -4.974022388458252
    10. ')' → logprob: -4.974022388458252

Token 1253: '算' (ID: 16727)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.013413508422672749
    2. '/' → logprob: -5.138413429260254
    3. '```' → logprob: -5.638413429260254
    4. 'r' → logprob: -6.888413429260254
    5. 'return' → logprob: -7.763413429260254
    6. 'っ' → logprob: -8.263413429260254
    7. '算' → logprob: -8.263413429260254
    8. 'b' → logprob: -8.513413429260254
    9. '=' → logprob: -8.638413429260254
    10. '
' → logprob: -9.138413429260254

Token 1254: 'では' (ID: 43147)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6304587125778198
    2. '   ' → logprob: -2.0054588317871094
    3. 'の' → logprob: -2.1304588317871094
    4. ')' → logprob: -2.7554588317871094
    5. '==' → logprob: -2.7554588317871094
    6. 'で' → logprob: -3.1304588317871094
    7. 'では' → logprob: -3.1304588317871094
    8. 'を' → logprob: -3.5054588317871094
    9. 'は' → logprob: -3.6304588317871094
    10. '/' → logprob: -3.8804588317871094

Token 1255: '常' (ID: 17731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0967419147491455
    2. ' a' → logprob: -1.2217419147491455
    3. ' abs' → logprob: -1.8467419147491455
    4. 'int' → logprob: -3.2217419147491455
    5. 'abs' → logprob: -3.2217419147491455
    6. ' int' → logprob: -3.5967419147491455
    7. 'b' → logprob: -4.346741676330566
    8. ' b' → logprob: -4.346741676330566
    9. '   ' → logprob: -4.596741676330566
    10. 'd' → logprob: -4.846741676330566

Token 1256: 'に' (ID: 5280)
  Prédit: '値'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '値' → logprob: -0.20789115130901337
    2. 'value' → logprob: -3.0828912258148193
    3. 'に' → logprob: -3.2078912258148193
    4. 'values' → logprob: -3.3328912258148193
    5. 'always' → logprob: -3.4578912258148193
    6. 'a' → logprob: -4.20789098739624
    7. '```' → logprob: -5.70789098739624
    8. 'り' → logprob: -6.08289098739624
    9. 'u' → logprob: -6.70789098739624
    10. 'の' → logprob: -6.83289098739624

Token 1257: '絶' (ID: 188458)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7344729900360107
    2. 'a' → logprob: -0.9844729900360107
    3. 'abs' → logprob: -3.1094729900360107
    4. 'd' → logprob: -3.9844729900360107
    5. 'b' → logprob: -3.9844729900360107
    6. 'round' → logprob: -4.35947322845459
    7. '```' → logprob: -4.85947322845459
    8. ')' → logprob: -5.10947322845459
    9. '`' → logprob: -5.35947322845459
    10. 'def' → logprob: -6.10947322845459

Token 1258: '対' (ID: 44518)
  Prédit: '値'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '値' → logprob: -1.1475951671600342
    2. 'value' → logprob: -1.7725951671600342
    3. '```' → logprob: -2.522595167160034
    4. 'd' → logprob: -2.897595167160034
    5. 'え' → logprob: -2.897595167160034
    6. '0' → logprob: -3.147595167160034
    7. 'て' → logprob: -3.147595167160034
    8. 'abs' → logprob: -3.272595167160034
    9. 'values' → logprob: -3.897595167160034
    10. 'ず' → logprob: -3.897595167160034

Token 1259: '値' (ID: 69555)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.026923419907689095
    2. '値' → logprob: -3.776923418045044
    3. 'Value' → logprob: -6.651923656463623
    4. 'a' → logprob: -7.526923656463623
    5. 'values' → logprob: -7.901923656463623
    6. '_value' → logprob: -8.026923179626465
    7. '       ' → logprob: -8.526923179626465
    8. '-value' → logprob: -9.026923179626465
    9. ''value' → logprob: -9.151923179626465
    10. ' value' → logprob: -9.276923179626465

Token 1260: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.016587212681770325
    2. ''s' → logprob: -4.891587257385254
    3. '```' → logprob: -6.641587257385254
    4. 'of' → logprob: -6.891587257385254
    5. 'を' → logprob: -7.016587257385254
    6. 'a' → logprob: -7.016587257385254
    7. 'で' → logprob: -7.266587257385254
    8. ' の' → logprob: -7.641587257385254
    9. ')' → logprob: -7.766587257385254
    10. '`' → logprob: -8.016587257385254

Token 1261: '小' (ID: 5820)
  Prédit: '小'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '小' → logprob: -0.7003779411315918
    2. 'a' → logprob: -1.3253779411315918
    3. 'b' → logprob: -2.075377941131592
    4. 'small' → logprob: -2.450377941131592
    5. 'sm' → logprob: -4.325377941131592
    6. '```' → logprob: -5.200377941131592
    7. '(a' → logprob: -6.575377941131592
    8. '0' → logprob: -7.575377941131592
    9. '[a' → logprob: -7.575377941131592
    10. ' 小' → logprob: -7.950377941131592

Token 1262: 'さい' (ID: 36201)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0309747457504272
    2. '値' → logprob: -1.5309747457504272
    3. 'の' → logprob: -2.280974864959717
    4. '0' → logprob: -2.905974864959717
    5. '```' → logprob: -2.905974864959717
    6. '(abs' → logprob: -3.405974864959717
    7. 'value' → logprob: -3.405974864959717
    8. '   ' → logprob: -3.780974864959717
    9. 'さい' → logprob: -3.905974864959717
    10. '#' → logprob: -4.030974864959717

Token 1263: '方' (ID: 4983)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.120598316192627
    2. ' b' → logprob: -2.120598316192627
    3. 'b' → logprob: -2.245598316192627
    4. 'abs' → logprob: -2.370598316192627
    5. 'value' → logprob: -2.745598316192627
    6. ')' → logprob: -2.995598316192627
    7. ' ' → logprob: -3.745598316192627
    8. '   ' → logprob: -3.745598316192627
    9. 'operand' → logprob: -3.745598316192627
    10. ' a' → logprob: -3.870598316192627

Token 1264: 'に' (ID: 5280)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.4235241711139679
    2. 'が' → logprob: -2.6735241413116455
    3. 'with' → logprob: -2.9235241413116455
    4. 'に' → logprob: -3.0485241413116455
    5. ')' → logprob: -3.7985241413116455
    6. '   ' → logprob: -3.7985241413116455
    7. 'を' → logprob: -4.048524379730225
    8. '[' → logprob: -4.173524379730225
    9. 'と' → logprob: -4.173524379730225
    10. '```' → logprob: -4.298524379730225

Token 1265: '丸' (ID: 170295)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5354827046394348
    2. 'round' → logprob: -1.28548264503479
    3. ' abs' → logprob: -2.41048264503479
    4. ' round' → logprob: -4.035482883453369
    5. ' ' → logprob: -5.035482883453369
    6. '   ' → logprob: -5.285482883453369
    7. 'sm' → logprob: -5.535482883453369
    8. 'b' → logprob: -6.410482883453369
    9. ')' → logprob: -6.785482883453369
    10. 'def' → logprob: -7.035482883453369

Token 1266: 'め' (ID: 17693)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0713495016098022
    2. 'return' → logprob: -1.8213495016098022
    3. 'def' → logprob: -2.571349620819092
    4. 'り' → logprob: -2.696349620819092
    5. '       ' → logprob: -2.946349620819092
    6. 'め' → logprob: -3.196349620819092
    7. ')' → logprob: -3.321349620819092
    8. 'ー' → logprob: -3.446349620819092
    9. '=' → logprob: -3.696349620819092
    10. 'て' → logprob: -3.696349620819092

Token 1267: '，小' (ID: 137380)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.540152370929718
    2. '(a' → logprob: -1.7901523113250732
    3. '       ' → logprob: -2.6651523113250732
    4. '(d' → logprob: -3.2901523113250732
    5. ' towards' → logprob: -3.5401523113250732
    6. '   ' → logprob: -4.040152549743652
    7. 'a' → logprob: -5.040152549743652
    8. 'def' → logprob: -5.040152549743652
    9. ')' → logprob: -5.165152549743652
    10. '           ' → logprob: -5.165152549743652

Token 1268: '数' (ID: 7135)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8695909380912781
    2. 'abs' → logprob: -1.7445909976959229
    3. 's' → logprob: -2.994590997695923
    4. '```' → logprob: -3.494590997695923
    5. 'す' → logprob: -3.869590997695923
    6. '#' → logprob: -4.119590759277344
    7. '(abs' → logprob: -4.119590759277344
    8. '1' → logprob: -4.244590759277344
    9. 'def' → logprob: -4.244590759277344
    10. 'ぶ' → logprob: -4.369590759277344

Token 1269: '部' (ID: 8572)
  Prédit: '値'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '値' → logprob: -0.6814693212509155
    2. ')' → logprob: -2.181469440460205
    3. 'abs' → logprob: -2.431469440460205
    4. 'value' → logprob: -2.556469440460205
    5. '```' → logprob: -3.181469440460205
    6. '       ' → logprob: -3.681469440460205
    7. '           ' → logprob: -3.806469440460205
    8. '部' → logprob: -4.306469440460205
    9. '）' → logprob: -4.556469440460205
    10. '{
' → logprob: -4.681469440460205

Token 1270: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.0376586839556694
    2. ')' → logprob: -4.66265869140625
    3. 'の' → logprob: -5.28765869140625
    4. '   ' → logprob: -6.03765869140625
    5. ' を' → logprob: -6.16265869140625
    6. 'て' → logprob: -6.41265869140625
    7. 'は' → logprob: -6.53765869140625
    8. '）' → logprob: -6.53765869140625
    9. 'が' → logprob: -6.78765869140625
    10. 'する' → logprob: -6.78765869140625

Token 1271: '切' (ID: 34921)
  Prédit: '切'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '切' → logprob: -0.0025654337368905544
    2. 'cut' → logprob: -6.377565383911133
    3. 'discard' → logprob: -8.002565383911133
    4. 'き' → logprob: -8.752565383911133
    5. 'す' → logprob: -9.002565383911133
    6. '\xe6\x8d' → logprob: -9.502565383911133
    7. '#' → logprob: -10.002565383911133
    8. '```' → logprob: -11.252565383911133
    9. '消' → logprob: -11.502565383911133
    10. '丸' → logprob: -11.502565383911133

Token 1272: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.00015753143816255033
    2. 'ろ' → logprob: -10.125157356262207
    3. '```' → logprob: -11.125157356262207
    4. 'る' → logprob: -11.375157356262207
    5. '\xe6\x8d' → logprob: -11.375157356262207
    6. 'def' → logprob: -11.500157356262207
    7. 'て' → logprob: -11.500157356262207
    8. '       ' → logprob: -11.625157356262207
    9. '0' → logprob: -11.750157356262207
    10. 'return' → logprob: -12.125157356262207

Token 1273: '�' (ID: 7804)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.5349278450012207
    2. 'て' → logprob: -1.4099278450012207
    3. '```' → logprob: -2.5349278450012207
    4. '\xe6\x8d' → logprob: -3.4099278450012207
    5. '_' → logprob: -4.409927845001221
    6. '取' → logprob: -4.659927845001221
    7. 'def' → logprob: -5.409927845001221
    8. 'れて' → logprob: -5.784927845001221
    9. '離' → logprob: -6.034927845001221
    10. 'し' → logprob: -6.284927845001221

Token 1274: '�' (ID: 101)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.12053000926971436
    2. 'て' → logprob: -2.370530128479004
    3. 'って' → logprob: -4.370530128479004
    4. 'っ' → logprob: -6.620530128479004
    5. '```' → logprob: -6.620530128479004
    6. 'def' → logprob: -6.870530128479004
    7. '[' → logprob: -7.995530128479004
    8. 'return' → logprob: -7.995530128479004
    9. '``' → logprob: -8.245530128479004
    10. 'し' → logprob: -8.370530128479004

Token 1275: 'て' (ID: 5711)
  Prédit: 'て'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.0666709616780281
    2. 'っ' → logprob: -4.066670894622803
    3. 'off' → logprob: -5.191670894622803
    4. 'り' → logprob: -5.316670894622803
    5. 'def' → logprob: -5.941670894622803
    6. 'た' → logprob: -5.941670894622803
    7. '```' → logprob: -6.066670894622803
    8. 'って' → logprob: -6.066670894622803
    9. '
' → logprob: -6.191670894622803
    10. ''' → logprob: -6.441670894622803

Token 1276: 'て' (ID: 5711)
  Prédit: 'て'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.5648275017738342
    2. 'す' → logprob: -2.5648274421691895
    3. '```' → logprob: -3.3148274421691895
    4. 'int' → logprob: -3.4398274421691895
    5. 'る' → logprob: -3.6898274421691895
    6. 'a' → logprob: -3.6898274421691895
    7. 'ら' → logprob: -3.6898274421691895
    8. ')' → logprob: -3.8148274421691895
    9. '0' → logprob: -3.8148274421691895
    10. 'しま' → logprob: -4.0648274421691895

Token 1277: '整数' (ID: 173952)
  Prédit: 'しま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'しま' → logprob: -0.7603814005851746
    2. 'a' → logprob: -1.1353814601898193
    3. 'int' → logprob: -2.3853814601898193
    4. 'b' → logprob: -3.0103814601898193
    5. '```' → logprob: -4.13538122177124
    6. 'd' → logprob: -4.26038122177124
    7. 'す' → logprob: -5.01038122177124
    8. 'あ' → logprob: -5.26038122177124
    9. '0' → logprob: -5.38538122177124
    10. '整数' → logprob: -5.88538122177124

Token 1278: 'に' (ID: 5280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7180927991867065
    2. ')' → logprob: -2.218092918395996
    3. '```' → logprob: -2.593092918395996
    4. 'を' → logprob: -2.843092918395996
    5. 'に' → logprob: -2.968092918395996
    6. '_' → logprob: -2.968092918395996
    7. ',' → logprob: -3.093092918395996
    8. '部' → logprob: -3.468092918395996
    9. 'part' → logprob: -3.468092918395996
    10. ')
' → logprob: -3.718092918395996

Token 1279: 'して' (ID: 22440)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.813319206237793
    2. '\xe6\x8d' → logprob: -1.938319206237793
    3. 'しま' → logprob: -2.438319206237793
    4. 'な' → logprob: -2.563319206237793
    5. 'て' → logprob: -3.438319206237793
    6. '1' → logprob: -3.688319206237793
    7. '```' → logprob: -3.688319206237793
    8. 'け' → logprob: -3.813319206237793
    9. '切' → logprob: -3.938319206237793
    10. '0' → logprob: -4.438319206237793

Token 1280: 'しま' (ID: 178826)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3847540616989136
    2. 'しま' → logprob: -1.6347540616989136
    3. 'す' → logprob: -1.7597540616989136
    4. 'd' → logprob: -2.259754180908203
    5. 'b' → logprob: -2.384754180908203
    6. 'あ' → logprob: -3.634754180908203
    7. '```' → logprob: -3.634754180908203
    8. ')' → logprob: -4.259754180908203
    9. 'よ' → logprob: -4.259754180908203
    10. 's' → logprob: -5.009754180908203

Token 1281: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.17978377640247345
    2. 'す' → logprob: -2.304783821105957
    3. '```' → logprob: -4.179783821105957
    4. 'る' → logprob: -4.804783821105957
    5. 'い' → logprob: -5.179783821105957
    6. 'て' → logprob: -5.304783821105957
    7. 'u' → logprob: -6.054783821105957
    8. 'く' → logprob: -6.179783821105957
    9. 'ます' → logprob: -6.554783821105957
    10. 'return' → logprob: -6.554783821105957

Token 1282: '．' (ID: 32217)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.187138319015503
    2. '```' → logprob: -1.437138319015503
    3. '.' → logprob: -2.687138319015503
    4. '   ' → logprob: -3.062138319015503
    5. '):
' → logprob: -3.312138319015503
    6. ',' → logprob: -3.437138319015503
    7. ''' → logprob: -3.562138319015503
    8. 'b' → logprob: -3.937138319015503
    9. '0' → logprob: -4.062138557434082
    10. ')
' → logprob: -4.062138557434082

Token 1283: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5130279660224915
    2. '   ' → logprob: -1.0130279064178467
    3. '):
' → logprob: -4.013028144836426
    4. 'abs' → logprob: -6.138028144836426
    5. '":
' → logprob: -6.513028144836426
    6. ':
' → logprob: -6.638028144836426
    7. '"):
' → logprob: -6.638028144836426
    8. 'a' → logprob: -6.763028144836426
    9. '":' → logprob: -6.888028144836426
    10. ' abs' → logprob: -7.013028144836426

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018215499818325043
    2. '   ' → logprob: -4.143215656280518
    3. '(' → logprob: -7.643215656280518
    4. '```' → logprob: -7.643215656280518
    5. ' (' → logprob: -8.01821517944336
    6. ':
' → logprob: -8.76821517944336
    7. ':' → logprob: -8.76821517944336
    8. 'a' → logprob: -9.51821517944336
    9. 'return' → logprob: -9.51821517944336
    10. '           ' → logprob: -9.89321517944336

Token 1285: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019087657565250993
    2. '   ' → logprob: -6.626908779144287
    3. 'return' → logprob: -8.501908302307129
    4. '           ' → logprob: -8.626908302307129
    5. '```' → logprob: -9.751908302307129
    6. ' return' → logprob: -10.251908302307129
    7. '        ' → logprob: -11.001908302307129
    8. ' if' → logprob: -11.126908302307129
    9. '(' → logprob: -11.751908302307129
    10. 'if' → logprob: -11.876908302307129

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017374205635860562
    2. '   ' → logprob: -6.501737594604492
    3. '(' → logprob: -10.376737594604492
    4. '```' → logprob: -10.376737594604492
    5. '           ' → logprob: -10.626737594604492
    6. ':' → logprob: -10.751737594604492
    7. ' (' → logprob: -11.001737594604492
    8. '        ' → logprob: -11.751737594604492
    9. ',' → logprob: -11.876737594604492
    10. '        
' → logprob: -12.001737594604492

Token 1287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013710915111005306
    2. '   ' → logprob: -4.888710975646973
    3. '```' → logprob: -6.513710975646973
    4. '"' → logprob: -6.763710975646973
    5. '(' → logprob: -7.763710975646973
    6. ' (' → logprob: -7.763710975646973
    7. ''' → logprob: -7.763710975646973
    8. '           ' → logprob: -7.888710975646973
    9. 'a' → logprob: -8.263710975646973
    10. ')' → logprob: -8.388710975646973

Token 1288: ' I' (ID: 357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013650353066623211
    2. '   ' → logprob: -5.013650417327881
    3. 'abs' → logprob: -6.638650417327881
    4. '           ' → logprob: -7.013650417327881
    5. '```' → logprob: -7.013650417327881
    6. '#' → logprob: -7.138650417327881
    7. 'if' → logprob: -7.263650417327881
    8. ' if' → logprob: -7.763650417327881
    9. 'a' → logprob: -8.138649940490723
    10. 'return' → logprob: -8.388649940490723

Token 1289: ' interpret' (ID: 18135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9227886199951172
    2. '       ' → logprob: -1.5477886199951172
    3. 'return' → logprob: -1.6727886199951172
    4. ' return' → logprob: -2.422788619995117
    5. ' =' → logprob: -2.797788619995117
    6. '=' → logprob: -3.672788619995117
    7. ' ' → logprob: -5.297788619995117
    8. '
' → logprob: -6.297788619995117
    9. ' is' → logprob: -6.297788619995117
    10. 'def' → logprob: -6.422788619995117

Token 1290: ' it' (ID: 480)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.632610559463501
    2. 'a' → logprob: -1.007610559463501
    3. '       ' → logprob: -3.382610559463501
    4. ''' → logprob: -3.757610559463501
    5. ' '' → logprob: -4.507610321044922
    6. 'd' → logprob: -4.882610321044922
    7. ' abs' → logprob: -5.757610321044922
    8. '           ' → logprob: -6.007610321044922
    9. ' that' → logprob: -6.132610321044922
    10. ' d' → logprob: -6.257610321044922

Token 1291: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.985348105430603
    2. '       ' → logprob: -1.235348105430603
    3. ' =' → logprob: -1.485348105430603
    4. '   ' → logprob: -3.1103482246398926
    5. ' as' → logprob: -3.3603482246398926
    6. ':
' → logprob: -5.485348224639893
    7. 'as' → logprob: -5.485348224639893
    8. '           ' → logprob: -5.485348224639893
    9. ':' → logprob: -5.735348224639893
    10. 'a' → logprob: -6.485348224639893

Token 1292: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2258845567703247
    2. 'a' → logprob: -2.600884437561035
    3. 'abs' → logprob: -2.725884437561035
    4. 'int' → logprob: -3.600884437561035
    5. ' abs' → logprob: -4.975884437561035
    6. '```' → logprob: -5.350884437561035
    7. ' a' → logprob: -5.475884437561035
    8. 'd' → logprob: -5.725884437561035
    9. 'b' → logprob: -5.975884437561035
    10. '           ' → logprob: -5.975884437561035

Token 1293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002941095153801143
    2. 'return' → logprob: -9.375293731689453
    3. '```' → logprob: -9.500293731689453
    4. '           ' → logprob: -10.000293731689453
    5. '   ' → logprob: -10.375293731689453
    6. 'a' → logprob: -11.000293731689453
    7. ' return' → logprob: -11.625293731689453
    8. '`' → logprob: -11.750293731689453
    9. ' a' → logprob: -12.500293731689453
    10. 'def' → logprob: -12.625293731689453

Token 1294: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004016426391899586
    2. 'if' → logprob: -6.004016399383545
    3. '```' → logprob: -7.879016399383545
    4. 'abs' → logprob: -8.254016876220703
    5. ' if' → logprob: -9.004016876220703
    6. '#' (adapté à ' #') → logprob: -9.129016876220703
    7. 'a' → logprob: -9.254016876220703
    8. '   ' → logprob: -9.629016876220703
    9. 'return' → logprob: -9.754016876220703
    10. 'v' → logprob: -9.754016876220703

Token 1295: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03721199929714203
    2. 'abs' → logprob: -4.412211894989014
    3. 'a' → logprob: -5.162211894989014
    4. '```' → logprob: -5.537211894989014
    5. '#' → logprob: -6.037211894989014
    6. 'd' → logprob: -6.412211894989014
    7. 'if' → logprob: -6.537211894989014
    8. '   ' → logprob: -6.662211894989014
    9. 'v' → logprob: -6.787211894989014
    10. ' abs' → logprob: -6.787211894989014

Token 1296: '1' (ID: 16)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8178834915161133
    2. '       ' → logprob: -1.5678834915161133
    3. 'abs' → logprob: -2.6928834915161133
    4. 'a' → logprob: -3.1928834915161133
    5. ' abs' → logprob: -3.1928834915161133
    6. '``' → logprob: -3.3178834915161133
    7. ' (' → logprob: -3.8178834915161133
    8. '(
' → logprob: -3.8178834915161133
    9. 'return' → logprob: -3.8178834915161133
    10. 'b' → logprob: -4.442883491516113

Token 1297: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31982842087745667
    2. '   ' → logprob: -2.569828510284424
    3. 'def' → logprob: -3.319828510284424
    4. '0' → logprob: -3.444828510284424
    5. 'a' → logprob: -4.194828510284424
    6. 'return' → logprob: -4.444828510284424
    7. '#' → logprob: -4.569828510284424
    8. ':' → logprob: -4.694828510284424
    9. '    ' → logprob: -4.819828510284424
    10. ' return' → logprob: -4.819828510284424

Token 1298: ' among' (ID: 6200)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2843644320964813
    2. '       ' → logprob: -1.9093644618988037
    3. 'a' → logprob: -3.1593644618988037
    4. ' abs' → logprob: -4.284364223480225
    5. '#' → logprob: -4.909364223480225
    6. 'import' → logprob: -5.159364223480225
    7. 'v' → logprob: -5.284364223480225
    8. 'min' → logprob: -5.784364223480225
    9. 'val' → logprob: -5.909364223480225
    10. 'sm' → logprob: -6.159364223480225

Token 1299: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002362563507631421
    2. 'abs' → logprob: -7.0023627281188965
    3. '[a' → logprob: -7.6273627281188965
    4. '(a' → logprob: -7.8773627281188965
    5. ' a' → logprob: -8.377362251281738
    6. '   ' → logprob: -9.002362251281738
    7. '(abs' → logprob: -10.002362251281738
    8. 'the' → logprob: -10.002362251281738
    9. '[' → logprob: -10.752362251281738
    10. 'int' → logprob: -11.127362251281738

Token 1300: ' and' (ID: 326)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.071785569190979
    2. 'abs' → logprob: -1.821785569190979
    3. '[' → logprob: -2.6967854499816895
    4. ' abs' → logprob: -2.8217854499816895
    5. '   ' → logprob: -2.9467854499816895
    6. ' and' → logprob: -2.9467854499816895
    7. ',' → logprob: -2.9467854499816895
    8. 'a' → logprob: -3.0717854499816895
    9. '/b' → logprob: -3.1967854499816895
    10. ')' → logprob: -3.9467854499816895

Token 1301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.841743303695694e-05
    2. ' b' → logprob: -9.37509822845459
    3. '       ' → logprob: -11.75009822845459
    4. '   ' → logprob: -12.75009822845459
    5. '           ' → logprob: -13.00009822845459
    6. '     ' → logprob: -16.500099182128906
    7. ' ' → logprob: -16.500099182128906
    8. '                   ' → logprob: -16.625099182128906
    9. '2' → logprob: -16.750099182128906
    10. '               ' → logprob: -16.750099182128906

Token 1302: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3108001947402954
    2. '   ' → logprob: -1.4358001947402954
    3. 'abs' → logprob: -2.060800075531006
    4. '[' → logprob: -2.060800075531006
    5. ',' → logprob: -2.685800075531006
    6. ':' → logprob: -3.560800075531006
    7. 'a' → logprob: -4.185800075531006
    8. ' ' → logprob: -4.560800075531006
    9. ''s' → logprob: -4.560800075531006
    10. '           ' → logprob: -4.560800075531006

Token 1303: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6982811093330383
    2. 'sm' → logprob: -0.9482811093330383
    3. ' smaller' → logprob: -3.3232810497283936
    4. 'abs' → logprob: -3.8232810497283936
    5. 'the' → logprob: -4.073281288146973
    6. '   ' → logprob: -4.573281288146973
    7. 'a' → logprob: -5.073281288146973
    8. 'small' → logprob: -5.073281288146973
    9. ' abs' → logprob: -6.323281288146973
    10. ' the' → logprob: -6.323281288146973

Token 1304: ' value' (ID: 1432)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5886671543121338
    2. 'min' → logprob: -2.213667154312134
    3. 'the' → logprob: -2.213667154312134
    4. '(abs' → logprob: -2.338667154312134
    5. 'a' → logprob: -2.838667154312134
    6. '(min' → logprob: -3.338667154312134
    7. 'sm' → logprob: -4.463666915893555
    8. ' abs' → logprob: -4.713666915893555
    9. '   ' → logprob: -5.463666915893555
    10. '(a' → logprob: -5.838666915893555

Token 1305: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.8632175922393799
    2. 'abs' → logprob: -1.9882175922393799
    3. 'min' → logprob: -2.23821759223938
    4. '       ' → logprob: -2.98821759223938
    5. '(abs' → logprob: -3.11321759223938
    6. '=' → logprob: -3.36321759223938
    7. '   ' → logprob: -3.61321759223938
    8. ' =' → logprob: -3.86321759223938
    9. '(min' → logprob: -3.98821759223938
    10. ' with' → logprob: -4.113217353820801

Token 1306: ' smaller' (ID: 13679)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.020237503573298454
    2. ' smaller' → logprob: -4.395237445831299
    3. 'abs' → logprob: -6.270237445831299
    4. 'the' → logprob: -6.395237445831299
    5. '#' → logprob: -6.770237445831299
    6. 'small' → logprob: -6.770237445831299
    7. 'min' → logprob: -7.270237445831299
    8. 'a' → logprob: -8.020237922668457
    9. '小' → logprob: -8.520237922668457
    10. '   ' → logprob: -8.895237922668457

Token 1307: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0011248565278947353
    2. '(abs' → logprob: -6.876124858856201
    3. '```' → logprob: -10.251124382019043
    4. '   ' → logprob: -11.251124382019043
    5. ' abs' → logprob: -11.376124382019043
    6. '
' → logprob: -11.501124382019043
    7. '_abs' → logprob: -12.126124382019043
    8. ')' → logprob: -12.626124382019043
    9. 'a' → logprob: -12.751124382019043
    10. 'value' → logprob: -13.001124382019043

Token 1308: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.10021809488534927
    2. '_value' → logprob: -2.4752180576324463
    3. ')' → logprob: -5.350218296051025
    4. ' value' → logprob: -6.225218296051025
    5. '   ' → logprob: -7.350218296051025
    6. '```' → logprob: -7.350218296051025
    7. '_val' → logprob: -7.600218296051025
    8. '('_' → logprob: -7.725218296051025
    9. '`' → logprob: -8.100217819213867
    10. ')_' → logprob: -8.475217819213867

Token 1309: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07666660100221634
    2. '   ' → logprob: -3.4516665935516357
    3. ',' → logprob: -5.076666831970215
    4. ' (' → logprob: -5.701666831970215
    5. ' =' → logprob: -5.826666831970215
    6. 'a' → logprob: -5.826666831970215
    7. ':' → logprob: -6.076666831970215
    8. '...' → logprob: -6.076666831970215
    9. '```' → logprob: -6.076666831970215
    10. 'abs' → logprob: -6.326666831970215

Token 1310: ' call' (ID: 2421)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2525136172771454
    2. ' abs' → logprob: -2.5025136470794678
    3. 'abs' → logprob: -3.3775136470794678
    4. ')' → logprob: -3.5025136470794678
    5. 'a' → logprob: -4.252513408660889
    6. '0' → logprob: -4.627513408660889
    7. ''' → logprob: -5.002513408660889
    8. '           ' → logprob: -5.377513408660889
    9. 'value' → logprob: -5.377513408660889
    10. '   ' → logprob: -5.377513408660889

Token 1311: ' it' (ID: 480)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12604877352714539
    2. 'that' → logprob: -2.6260488033294678
    3. 'it' → logprob: -4.251048564910889
    4. 'a' → logprob: -5.001048564910889
    5. 'the' → logprob: -5.376048564910889
    6. 'them' → logprob: -5.501048564910889
    7. '       ' → logprob: -6.001048564910889
    8. 'value' → logprob: -6.001048564910889
    9. ' abs' → logprob: -6.126048564910889
    10. 'min' → logprob: -6.501048564910889

Token 1312: ' c' (ID: 274)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.44231781363487244
    2. 'min' → logprob: -1.4423178434371948
    3. 'sm' → logprob: -2.5673177242279053
    4. 'a' → logprob: -4.067317962646484
    5. ' abs' → logprob: -4.442317962646484
    6. '`' → logprob: -5.692317962646484
    7. ' min' → logprob: -5.692317962646484
    8. 'c' → logprob: -6.192317962646484
    9. '```' → logprob: -6.692317962646484
    10. 'small' → logprob: -7.067317962646484

Token 1313: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07813101261854172
    2. '   ' → logprob: -3.0781309604644775
    3. '
' → logprob: -5.078131198883057
    4. '           ' → logprob: -5.203131198883057
    5. ':
' → logprob: -6.078131198883057
    6. ')
' → logprob: -6.078131198883057
    7. ' =' → logprob: -6.453131198883057
    8. ')' → logprob: -6.453131198883057
    9. '<|end|>' → logprob: -6.453131198883057
    10. '):
' → logprob: -6.703131198883057

Token 1314: 'could' (ID: 58995)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2040233016014099
    2. 'c' → logprob: -2.3290233612060547
    3. ' abs' → logprob: -3.7040233612060547
    4. ')' → logprob: -3.7040233612060547
    5. '):
' → logprob: -4.579023361206055
    6. '       ' → logprob: -5.079023361206055
    7. ')
' → logprob: -5.204023361206055
    8. 'a' → logprob: -6.329023361206055
    9. 'b' → logprob: -6.329023361206055
    10. '(abs' → logprob: -6.329023361206055

Token 1315: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1395808309316635
    2. 'abs' → logprob: -2.889580726623535
    3. 'be' → logprob: -3.514580726623535
    4. 'c' → logprob: -3.764580726623535
    5. '       ' → logprob: -5.264580726623535
    6. ' be' → logprob: -5.514580726623535
    7. 'a' → logprob: -6.014580726623535
    8. 'b' → logprob: -6.139580726623535
    9. ' =' → logprob: -6.264580726623535
    10. 'is' → logprob: -6.514580726623535

Token 1316: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31386250257492065
    2. 'abs' → logprob: -1.4388625621795654
    3. 'b' → logprob: -4.313862323760986
    4. ' abs' → logprob: -5.188862323760986
    5. 'the' → logprob: -5.313862323760986
    6. 'min' → logprob: -6.063862323760986
    7. ' a' → logprob: -6.188862323760986
    8. 'sm' → logprob: -7.313862323760986
    9. 'int' → logprob: -7.313862323760986
    10. '   ' → logprob: -7.438862323760986

Token 1317: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.45516058802604675
    2. 'or' → logprob: -1.9551606178283691
    3. ' if' → logprob: -2.455160617828369
    4. ',' → logprob: -2.830160617828369
    5. ')' → logprob: -3.580160617828369
    6. 'if' → logprob: -3.705160617828369
    7. ')
' → logprob: -4.955160617828369
    8. 'abs' → logprob: -5.205160617828369
    9. '   ' → logprob: -5.330160617828369
    10. '       ' → logprob: -6.455160617828369

Token 1318: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000840715249069035
    2. ' b' → logprob: -7.375840663909912
    3. 'c' → logprob: -9.50084114074707
    4. '       ' → logprob: -9.75084114074707
    5. '   ' → logprob: -9.87584114074707
    6. '           ' → logprob: -11.62584114074707
    7. 'a' → logprob: -11.87584114074707
    8. ')' → logprob: -13.25084114074707
    9. '  ' → logprob: -13.25084114074707
    10. '#' → logprob: -13.75084114074707

Token 1319: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22775812447071075
    2. ')
' → logprob: -1.9777581691741943
    3. ')' → logprob: -3.9777581691741943
    4. '):
' → logprob: -3.9777581691741943
    5. '           ' → logprob: -4.602757930755615
    6. '   ' → logprob: -5.602757930755615
    7. ':
' → logprob: -6.227757930755615
    8. '
' → logprob: -6.352757930755615
    9. ',' → logprob: -6.477757930755615
    10. '```' → logprob: -6.602757930755615

Token 1320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005460034008137882
    2. '```' → logprob: -8.6255464553833
    3. '           ' → logprob: -8.7505464553833
    4. ',' → logprob: -10.2505464553833
    5. '   ' → logprob: -10.5005464553833
    6. 'c' → logprob: -11.0005464553833
    7. ')' → logprob: -11.1255464553833
    8. ' c' → logprob: -11.2505464553833
    9. 'def' → logprob: -11.5005464553833
    10. '        ' → logprob: -11.6255464553833

Token 1321: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004883344518020749
    2. '           ' → logprob: -8.37548828125
    3. '   ' → logprob: -9.37548828125
    4. 'c' → logprob: -10.25048828125
    5. '```' → logprob: -10.87548828125
    6. ' c' → logprob: -11.00048828125
    7. 'def' → logprob: -11.12548828125
    8. '        ' → logprob: -11.12548828125
    9. ',' → logprob: -11.25048828125
    10. ')' → logprob: -11.62548828125

Token 1322: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029990902170538902
    2. '           ' → logprob: -4.6549906730651855
    3. ')' → logprob: -5.6549906730651855
    4. '   ' → logprob: -5.9049906730651855
    5. ':' → logprob: -6.1549906730651855
    6. ':
' → logprob: -6.2799906730651855
    7. '```' → logprob: -6.4049906730651855
    8. '(' → logprob: -6.9049906730651855
    9. 'a' → logprob: -7.0299906730651855
    10. ',' → logprob: -7.1549906730651855

Token 1323: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19660036265850067
    2. 'c' → logprob: -2.0716004371643066
    3. 'abs' → logprob: -3.8216004371643066
    4. 'if' → logprob: -5.071600437164307
    5. ' if' → logprob: -5.321600437164307
    6. ' c' → logprob: -5.446600437164307
    7. ' abs' → logprob: -5.446600437164307
    8. '   ' → logprob: -5.946600437164307
    9. '           ' → logprob: -6.071600437164307
    10. '```' → logprob: -7.446600437164307

Token 1324: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04914794862270355
    2. '   ' → logprob: -3.924147844314575
    3. ' if' → logprob: -4.674148082733154
    4. ' abs' → logprob: -5.299148082733154
    5. ' c' → logprob: -5.924148082733154
    6. 'abs' → logprob: -5.924148082733154
    7. 'c' → logprob: -6.424148082733154
    8. ' ' → logprob: -6.799148082733154
    9. ':' → logprob: -7.299148082733154
    10. ' =' → logprob: -7.549148082733154

Token 1325: ' calculate' (ID: 17950)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20844702422618866
    2. 'c' → logprob: -3.458446979522705
    3. 'if' → logprob: -3.458446979522705
    4. 'd' → logprob: -3.583446979522705
    5. 'abs' → logprob: -3.583446979522705
    6. 'v' → logprob: -3.833446979522705
    7. 'diff' → logprob: -4.083446979522705
    8. 'val' → logprob: -4.708446979522705
    9. ' if' → logprob: -4.833446979522705
    10. '   ' → logprob: -6.208446979522705

Token 1326: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2652294635772705
    2. 'a' → logprob: -2.7652294635772705
    3. 'int' → logprob: -2.8902294635772705
    4. 'result' → logprob: -2.8902294635772705
    5. 'res' → logprob: -3.2652294635772705
    6. 'val' → logprob: -5.515229225158691
    7. 'c' → logprob: -5.765229225158691
    8. 'round' → logprob: -5.890229225158691
    9. 'abs' → logprob: -5.890229225158691
    10. 'value' → logprob: -6.390229225158691

Token 1327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11133062094449997
    2. '=' → logprob: -2.361330509185791
    3. '       ' → logprob: -4.861330509185791
    4. '   ' → logprob: -6.111330509185791
    5. '/' → logprob: -8.23633098602295
    6. 'd' → logprob: -8.48633098602295
    7. '=a' → logprob: -8.61133098602295
    8. ' /' → logprob: -9.48633098602295
    9. '=b' → logprob: -9.98633098602295
    10. 'a' → logprob: -9.98633098602295

Token 1328: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001634835614822805
    2. ' a' → logprob: -6.87663459777832
    3. 'int' → logprob: -7.62663459777832
    4. 'float' → logprob: -9.25163459777832
    5. '   ' → logprob: -12.00163459777832
    6. 'd' → logprob: -12.87663459777832
    7. ' int' → logprob: -13.00163459777832
    8. 'round' → logprob: -13.37663459777832
    9. '(a' → logprob: -13.37663459777832
    10. ' float' → logprob: -13.62663459777832

Token 1329: '/b' (ID: 7611)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.041315969079732895
    2. ' /' → logprob: -3.291316032409668
    3. '/b' → logprob: -5.791316032409668
    4. '/
' → logprob: -9.541316032409668
    5. '       ' → logprob: -9.916316032409668
    6. ' /
' → logprob: -10.666316032409668
    7. '/div' → logprob: -11.041316032409668
    8. '[b' → logprob: -11.291316032409668
    9. 'b' → logprob: -11.791316032409668
    10. 'div' → logprob: -12.166316032409668

Token 1330: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07810509949922562
    2. '
' → logprob: -3.2031052112579346
    3. '   ' → logprob: -3.4531052112579346
    4. 'd' → logprob: -7.5781049728393555
    5. '```' → logprob: -7.5781049728393555
    6. ')
' → logprob: -8.078104972839355
    7. ' /' → logprob: -8.578104972839355
    8. '()
' → logprob: -8.953104972839355
    9. ' +' → logprob: -9.203104972839355
    10. '           ' → logprob: -9.328104972839355

Token 1331: ' real' (ID: 1374)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0027347395662218332
    2. 'a' → logprob: -6.252734661102295
    3. ' float' → logprob: -7.877734661102295
    4. '       ' → logprob: -7.877734661102295
    5. 'c' → logprob: -10.377735137939453
    6. 'int' → logprob: -12.377735137939453
    7. 'd' → logprob: -12.627735137939453
    8. '           ' → logprob: -12.752735137939453
    9. 'abs' → logprob: -13.377735137939453
    10. '```' → logprob: -13.502735137939453

Token 1332: ' float' (ID: 4428)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8785231709480286
    2. '       ' → logprob: -1.1285231113433838
    3. ')' → logprob: -2.128523111343384
    4. '
' → logprob: -3.628523111343384
    5. '   ' → logprob: -4.003523349761963
    6. ':' → logprob: -4.378523349761963
    7. '):
' → logprob: -4.503523349761963
    8. '):' → logprob: -4.628523349761963
    9. '```' → logprob: -4.878523349761963
    10. '**' → logprob: -5.378523349761963

Token 1333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0129658542573452
    2. '   ' → logprob: -4.637965679168701
    3. '
' → logprob: -6.137965679168701
    4. ')
' → logprob: -7.637965679168701
    5. '```' → logprob: -9.26296615600586
    6. '           ' → logprob: -9.38796615600586
    7. '\n' → logprob: -9.63796615600586
    8. ')' → logprob: -9.63796615600586
    9. 'd' → logprob: -10.13796615600586
    10. '3' → logprob: -11.13796615600586

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003951648832298815
    2. '   ' → logprob: -8.750394821166992
    3. '           ' → logprob: -9.250394821166992
    4. '```' → logprob: -9.375394821166992
    5. ',' → logprob: -10.750394821166992
    6. ' if' → logprob: -12.500394821166992
    7. '``' → logprob: -12.750394821166992
    8. '
' → logprob: -12.875394821166992
    9. '(' → logprob: -13.000394821166992
    10. '     ' → logprob: -13.125394821166992

Token 1335: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000967083964496851
    2. '           ' → logprob: -7.250967025756836
    3. '   ' → logprob: -9.500967025756836
    4. '```' → logprob: -9.875967025756836
    5. ')' → logprob: -10.500967025756836
    6. '               ' → logprob: -10.875967025756836
    7. ',' → logprob: -11.000967025756836
    8. 'if' → logprob: -11.000967025756836
    9. ' if' → logprob: -11.125967025756836
    10. ':' → logprob: -12.625967025756836

Token 1336: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002926591783761978
    2. '   ' → logprob: -6.877926826477051
    3. 'c' → logprob: -7.502926826477051
    4. ' if' → logprob: -7.752926826477051
    5. ' c' → logprob: -7.877926826477051
    6. 'if' → logprob: -8.87792682647705
    7. '           ' → logprob: -9.12792682647705
    8. '```' → logprob: -9.37792682647705
    9. '{
' → logprob: -10.62792682647705
    10. ' =' → logprob: -10.75292682647705

Token 1337: '3' (ID: 18)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7342281341552734
    2. 'c' → logprob: -0.9842281341552734
    3. 'if' → logprob: -2.8592281341552734
    4. '   ' → logprob: -3.1092281341552734
    5. 'abs' → logprob: -3.7342281341552734
    6. '#' → logprob: -5.234228134155273
    7. ' if' → logprob: -5.484228134155273
    8. ' c' → logprob: -5.734228134155273
    9. ' ' → logprob: -6.984228134155273
    10. ':' → logprob: -7.609228134155273

Token 1338: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07582957297563553
    2. '   ' → logprob: -3.82582950592041
    3. 'c' → logprob: -3.95082950592041
    4. ' if' → logprob: -4.07582950592041
    5. 'if' → logprob: -4.82582950592041
    6. ' c' → logprob: -5.32582950592041
    7. ' ' → logprob: -7.70082950592041
    8. '#' → logprob: -8.20082950592041
    9. 'abs' → logprob: -8.82582950592041
    10. ',' → logprob: -9.20082950592041

Token 1339: ' round' (ID: 7353)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1257096827030182
    2. 'if' → logprob: -2.6257097721099854
    3. ' if' → logprob: -4.250709533691406
    4. 'abs' → logprob: -4.500709533691406
    5. '   ' → logprob: -5.000709533691406
    6. 'c' → logprob: -5.125709533691406
    7. 'import' → logprob: -7.000709533691406
    8. 'diff' → logprob: -7.000709533691406
    9. ' c' → logprob: -7.125709533691406
    10. ' ' → logprob: -7.500709533691406

Token 1340: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16114220023155212
    2. 'tow' → logprob: -2.286142110824585
    3. '       ' → logprob: -3.661142110824585
    4. '(d' → logprob: -4.411142349243164
    5. 'a' → logprob: -6.411142349243164
    6. '           ' → logprob: -6.411142349243164
    7. '   ' → logprob: -6.661142349243164
    8. 'down' → logprob: -7.161142349243164
    9. ' d' → logprob: -7.411142349243164
    10. '(
' → logprob: -7.536142349243164

Token 1341: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.06631124019622803
    2. 'd' → logprob: -3.5663113594055176
    3. '       ' → logprob: -4.566311359405518
    4. ' =' → logprob: -5.191311359405518
    5. '=' → logprob: -5.191311359405518
    6. 't' → logprob: -5.316311359405518
    7. 'down' → logprob: -6.066311359405518
    8. '_t' → logprob: -6.191311359405518
    9. '(d' → logprob: -6.816311359405518
    10. ' towards' → logprob: -6.941311359405518

Token 1342: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0087516784551553e-05
    2. ' c' → logprob: -12.25001049041748
    3. 'abs' → logprob: -13.00001049041748
    4. 'the' → logprob: -13.25001049041748
    5. '   ' → logprob: -14.12501049041748
    6. 'int' → logprob: -15.87501049041748
    7. '```' → logprob: -15.87501049041748
    8. '	c' → logprob: -17.000009536743164
    9. 'sm' → logprob: -17.375009536743164
    10. ' abs' → logprob: -17.750009536743164

Token 1343: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04357077553868294
    2. '   ' → logprob: -3.9185707569122314
    3. '           ' → logprob: -5.2935709953308105
    4. ':' → logprob: -6.4185709953308105
    5. ',' → logprob: -6.5435709953308105
    6. 'tow' → logprob: -6.7935709953308105
    7. '```' → logprob: -6.7935709953308105
    8. 'def' → logprob: -6.9185709953308105
    9. ':
' → logprob: -6.9185709953308105
    10. ' ' → logprob: -6.9185709953308105

Token 1344: 'that' (ID: 14116)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.2358295917510986
    2. 'c' → logprob: -1.6108295917510986
    3. ')' → logprob: -1.9858295917510986
    4. '       ' → logprob: -2.1108295917510986
    5. 'd' → logprob: -3.1108295917510986
    6. '):' → logprob: -3.4858295917510986
    7. '   ' → logprob: -3.6108295917510986
    8. ' c' → logprob: -3.6108295917510986
    9. ' a' → logprob: -4.1108293533325195
    10. ' abs' → logprob: -4.4858293533325195

Token 1345: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3229634761810303
    2. '       ' → logprob: -1.5729634761810303
    3. ')' → logprob: -2.1979634761810303
    4. ' d' → logprob: -2.6979634761810303
    5. 'd' → logprob: -2.8229634761810303
    6. ' ' → logprob: -3.3229634761810303
    7. ' if' → logprob: -3.5729634761810303
    8. '   ' → logprob: -3.5729634761810303
    9. '):
' → logprob: -4.072963714599609
    10. ' means' → logprob: -4.072963714599609

Token 1346: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2504472732543945
    2. '       ' → logprob: -1.6254472732543945
    3. 'd' → logprob: -2.1254472732543945
    4. ' a' → logprob: -2.2504472732543945
    5. ' int' → logprob: -2.5004472732543945
    6. ' abs' → logprob: -3.6254472732543945
    7. 'int' → logprob: -3.7504472732543945
    8. ' -' → logprob: -3.8754472732543945
    9. ')' → logprob: -3.8754472732543945
    10. '0' → logprob: -4.0004472732543945

Token 1347: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.1505019664764404
    2. ' a' → logprob: -2.1505019664764404
    3. ' d' → logprob: -2.4005019664764404
    4. ' -' → logprob: -2.5255019664764404
    5. ' c' → logprob: -2.5255019664764404
    6. '0' → logprob: -2.6505019664764404
    7. 'c' → logprob: -2.6505019664764404
    8. '-' → logprob: -2.7755019664764404
    9. ' int' → logprob: -3.0255019664764404
    10. ' abs' → logprob: -3.1505019664764404

Token 1348: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009064060635864735
    2. 'abs' → logprob: -5.509064197540283
    3. ' d' → logprob: -6.134064197540283
    4. 'c' → logprob: -6.759064197540283
    5. '(d' → logprob: -7.134064197540283
    6. '   ' → logprob: -8.759063720703125
    7. '(abs' → logprob: -8.759063720703125
    8. ' abs' → logprob: -9.259063720703125
    9. '       ' → logprob: -9.384063720703125
    10. 'a' → logprob: -9.509063720703125

Token 1349: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20780158042907715
    2. '<' → logprob: -2.707801580429077
    3. ' >' → logprob: -2.707801580429077
    4. '>' → logprob: -3.957801580429077
    5. ' <=' → logprob: -4.082801818847656
    6. ')' → logprob: -5.707801818847656
    7. '<=' → logprob: -5.707801818847656
    8. '   ' → logprob: -6.332801818847656
    9. '```' → logprob: -7.082801818847656
    10. '       ' → logprob: -7.082801818847656

Token 1350: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.024216972291469574
    2. ' c' → logprob: -4.024217128753662
    3. 'min' → logprob: -5.899217128753662
    4. 'sm' → logprob: -6.524217128753662
    5. 'abs' → logprob: -7.524217128753662
    6. ' abs' → logprob: -8.024216651916504
    7. ' min' → logprob: -8.399216651916504
    8. 'the' → logprob: -8.399216651916504
    9. '   ' → logprob: -8.899216651916504
    10. ' smaller' → logprob: -8.899216651916504

Token 1351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6889539361000061
    2. ':
' → logprob: -1.3139538764953613
    3. ':' → logprob: -2.3139538764953613
    4. '       ' → logprob: -2.4389538764953613
    5. '           ' → logprob: -4.063953876495361
    6. '):
' → logprob: -4.688953876495361
    7. ')' → logprob: -5.313953876495361
    8. '),' → logprob: -5.563953876495361
    9. '):' → logprob: -6.188953876495361
    10. ' then' → logprob: -7.313953876495361

Token 1352: ' truncate' (ID: 126309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07697261869907379
    2. ' d' → logprob: -2.826972723007202
    3. 'round' → logprob: -5.326972484588623
    4. '       ' → logprob: -5.701972484588623
    5. '```' → logprob: -6.701972484588623
    6. 'floor' → logprob: -6.826972484588623
    7. ' round' → logprob: -7.076972484588623
    8. 'return' → logprob: -7.326972484588623
    9. ' floor' → logprob: -7.451972484588623
    10. ' ' → logprob: -7.951972484588623

Token 1353: ' decimal' (ID: 26964)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.32355499267578125
    2. '(d' → logprob: -2.3235549926757812
    3. ')' → logprob: -2.8235549926757812
    4. ' d' → logprob: -3.6985549926757812
    5. '       ' → logprob: -3.8235549926757812
    6. ' (' → logprob: -4.198554992675781
    7. '_' → logprob: -4.698554992675781
    8. 'tow' → logprob: -5.323554992675781
    9. ' towards' → logprob: -5.448554992675781
    10. '```' → logprob: -5.448554992675781

Token 1354: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.890879213809967
    2. '部分' → logprob: -1.7658791542053223
    3. '_part' → logprob: -2.1408791542053223
    4. '       ' → logprob: -2.5158791542053223
    5. ')' → logprob: -2.7658791542053223
    6. ' part' → logprob: -2.8908791542053223
    7. ' parts' → logprob: -3.7658791542053223
    8. '(d' → logprob: -4.515879154205322
    9. 'parts' → logprob: -4.640879154205322
    10. '   ' → logprob: -4.765879154205322

Token 1355: ' down' (ID: 1917)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3875808715820312
    2. ' towards' → logprob: -1.3875808715820312
    3. '       ' → logprob: -1.5125808715820312
    4. '           ' → logprob: -2.7625808715820312
    5. ' toward' → logprob: -2.7625808715820312
    6. 'tow' → logprob: -3.3875808715820312
    7. ',' → logprob: -3.7625808715820312
    8. '```' → logprob: -4.262580871582031
    9. '               ' → logprob: -5.012580871582031
    10. '):
' → logprob: -5.262580871582031

Token 1356: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3501121699810028
    2. ')' → logprob: -1.6001121997833252
    3. '           ' → logprob: -3.225112199783325
    4. ',' → logprob: -4.850111961364746
    5. '):' → logprob: -5.100111961364746
    6. '```' → logprob: -5.100111961364746
    7. '):
' → logprob: -5.725111961364746
    8. '),' → logprob: -5.850111961364746
    9. '   ' → logprob: -5.850111961364746
    10. '(d' → logprob: -6.100111961364746

Token 1357: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4553101658821106
    2. ' else' → logprob: -1.9553101062774658
    3. '```' → logprob: -2.080310106277466
    4. 'else' → logprob: -3.705310106277466
    5. ')' → logprob: -4.080310344696045
    6. '           ' → logprob: -4.580310344696045
    7. ' d' → logprob: -4.580310344696045
    8. 'd' → logprob: -4.830310344696045
    9. '``' → logprob: -4.830310344696045
    10. '   ' → logprob: -5.205310344696045

Token 1358: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12706029415130615
    2. ' d' → logprob: -2.1270604133605957
    3. '   ' → logprob: -10.752059936523438
    4. 'c' → logprob: -10.877059936523438
    5. '       ' → logprob: -10.877059936523438
    6. '<' → logprob: -11.377059936523438
    7. ' c' → logprob: -11.502059936523438
    8. '=' → logprob: -11.627059936523438
    9. '```' → logprob: -12.127059936523438
    10. ' ' → logprob: -12.252059936523438

Token 1359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018150994554162025
    2. ' <=' → logprob: -4.393150806427002
    3. '<' → logprob: -5.268150806427002
    4. '<=' → logprob: -8.14315128326416
    5. ' >' → logprob: -10.51815128326416
    6. ' ==' → logprob: -10.51815128326416
    7. ' <
' → logprob: -11.14315128326416
    8. ' ' → logprob: -11.39315128326416
    9. '_' → logprob: -11.51815128326416
    10. '=' → logprob: -11.64315128326416

Token 1360: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031983929220587015
    2. ' c' → logprob: -5.753198623657227
    3. '       ' → logprob: -12.003198623657227
    4. '```' → logprob: -12.253198623657227
    5. '   ' → logprob: -12.753198623657227
    6. '           ' → logprob: -13.253198623657227
    7. '	c' → logprob: -13.628198623657227
    8. ')c' → logprob: -13.878198623657227
    9. '=' → logprob: -14.503198623657227
    10. '=c' → logprob: -15.128198623657227

Token 1361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10658547282218933
    2. ':
' → logprob: -3.1065855026245117
    3. '       ' → logprob: -3.7315855026245117
    4. '):
' → logprob: -5.106585502624512
    5. ':' → logprob: -5.356585502624512
    6. ',
' → logprob: -5.606585502624512
    7. '>' → logprob: -5.731585502624512
    8. ')' → logprob: -6.231585502624512
    9. '',' → logprob: -6.481585502624512
    10. '   ' → logprob: -6.606585502624512

Token 1362: ' truncate' (ID: 126309)
  Prédit: 'truncate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.1962030529975891
    2. 'ceil' → logprob: -1.8212029933929443
    3. 'round' → logprob: -4.571203231811523
    4. 'floor' → logprob: -5.946203231811523
    5. 'd' → logprob: -6.696203231811523
    6. '       ' → logprob: -7.571203231811523
    7. ' truncate' → logprob: -7.696203231811523
    8. 'tr' → logprob: -7.946203231811523
    9. ' ceil' → logprob: -8.071203231811523
    10. '           ' → logprob: -9.071203231811523

Token 1363: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.48430711030960083
    2. 'd' → logprob: -0.9843071103096008
    3. ' decimal' → logprob: -4.859307289123535
    4. ' d' → logprob: -6.984307289123535
    5. 'down' → logprob: -7.734307289123535
    6. 'dec' → logprob: -8.359307289123535
    7. '   ' → logprob: -8.984307289123535
    8. '_decimal' → logprob: -8.984307289123535
    9. '(decimal' → logprob: -9.359307289123535
    10. ' ' → logprob: -9.484307289123535

Token 1364: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.08409077674150467
    2. ' part' → logprob: -2.5840907096862793
    3. '_part' → logprob: -6.334090709686279
    4. '部分' → logprob: -6.834090709686279
    5. 'parts' → logprob: -7.209090709686279
    6. '       ' → logprob: -7.959090709686279
    7. '   ' → logprob: -8.334091186523438
    8. '```' → logprob: -8.334091186523438
    9. ' parts' → logprob: -8.834091186523438
    10. ')' → logprob: -9.084091186523438

Token 1365: ' up' (ID: 869)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.24639447033405304
    2. '       ' → logprob: -2.871394395828247
    3. 'up' → logprob: -3.371394395828247
    4. '           ' → logprob: -3.621394395828247
    5. ' down' → logprob: -3.746394395828247
    6. 'tow' → logprob: -4.121394634246826
    7. '```' → logprob: -4.496394634246826
    8. '   ' → logprob: -4.621394634246826
    9. 'を' → logprob: -5.121394634246826
    10. 'd' → logprob: -5.871394634246826

Token 1366: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23399683833122253
    2. ')' → logprob: -2.733996868133545
    3. '):
' → logprob: -3.233996868133545
    4. '           ' → logprob: -3.358996868133545
    5. '   ' → logprob: -3.858996868133545
    6. ')
' → logprob: -4.108996868133545
    7. '):' → logprob: -4.483996868133545
    8. ':
' → logprob: -5.483996868133545
    9. ',' → logprob: -5.858996868133545
    10. '```' → logprob: -6.233996868133545

Token 1367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004469964769668877
    2. '           ' → logprob: -8.625447273254395
    3. '```' → logprob: -8.875447273254395
    4. '   ' → logprob: -9.375447273254395
    5. ',' → logprob: -11.750447273254395
    6. '        ' → logprob: -12.250447273254395
    7. ' if' → logprob: -12.500447273254395
    8. '#' → logprob: -12.875447273254395
    9. 'return' → logprob: -13.000447273254395
    10. '     ' → logprob: -13.000447273254395

Token 1368: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007540603168308735
    2. '           ' → logprob: -5.007540702819824
    3. '```' → logprob: -8.882540702819824
    4. '(' → logprob: -9.007540702819824
    5. 'return' → logprob: -9.132540702819824
    6. '   ' → logprob: -9.257540702819824
    7. '               ' → logprob: -9.507540702819824
    8. ':
' → logprob: -10.132540702819824
    9. ',' → logprob: -10.257540702819824
    10. '{
' → logprob: -10.507540702819824

Token 1369: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004978882148861885
    2. '           ' → logprob: -5.504978656768799
    3. '   ' → logprob: -7.629978656768799
    4. '(' → logprob: -9.629979133605957
    5. '```' → logprob: -9.754979133605957
    6. 'return' → logprob: -9.879979133605957
    7. '{
' → logprob: -10.379979133605957
    8. ' if' → logprob: -10.754979133605957
    9. '#' → logprob: -10.754979133605957
    10. 'if' → logprob: -10.754979133605957

Token 1370: '小' (ID: 5820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08959056437015533
    2. '"' → logprob: -3.464590549468994
    3. '   ' → logprob: -4.589590549468994
    4. '```' → logprob: -4.589590549468994
    5. ' if' → logprob: -4.714590549468994
    6. '           ' → logprob: -4.839590549468994
    7. 'if' → logprob: -5.464590549468994
    8. '":' → logprob: -6.089590549468994
    9. ')' → logprob: -6.589590549468994
    10. ' "' → logprob: -6.714590549468994

Token 1371: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.6368745565414429
    2. 'さ' → logprob: -1.8868745565414429
    3. 'さい' → logprob: -2.2618746757507324
    4. 's' → logprob: -2.6368746757507324
    5. '```' → logprob: -3.7618746757507324
    6. '   ' → logprob: -4.136874675750732
    7. 'を' → logprob: -4.886874675750732
    8. 'の' → logprob: -4.886874675750732
    9. ')' → logprob: -4.886874675750732
    10. '       ' → logprob: -5.136874675750732

Token 1372: '部' (ID: 8572)
  Prédit: '部'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '部' → logprob: -0.11578484624624252
    2. '_part' → logprob: -3.1157848834991455
    3. 'part' → logprob: -3.4907848834991455
    4. '部分' → logprob: -3.8657848834991455
    5. '```' → logprob: -5.490784645080566
    6. '_parts' → logprob: -5.615784645080566
    7. '   ' → logprob: -6.615784645080566
    8. 'parts' → logprob: -6.865784645080566
    9. '点' → logprob: -7.365784645080566
    10. ' part' → logprob: -7.615784645080566

Token 1373: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.007886620238423347
    2. '部' → logprob: -6.2578864097595215
    3. ')' → logprob: -6.6328864097595215
    4. 'は' → logprob: -6.7578864097595215
    5. '部分' → logprob: -6.8828864097595215
    6. 'が' → logprob: -7.3828864097595215
    7. 'の' → logprob: -7.6328864097595215
    8. '"' → logprob: -7.8828864097595215
    9. 'part' → logprob: -8.50788688659668
    10. '_part' → logprob: -9.13288688659668

Token 1374: '切' (ID: 34921)
  Prédit: '切'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '切' → logprob: -0.0021393168717622757
    2. 'discard' → logprob: -7.002139091491699
    3. 'cut' → logprob: -8.1271390914917
    4. 'き' → logprob: -8.3771390914917
    5. 'す' → logprob: -9.0021390914917
    6. '\xe6\x8d' → logprob: -9.2521390914917
    7. 'truncate' → logprob: -9.3771390914917
    8. '残' → logprob: -9.7521390914917
    9. '0' → logprob: -10.0021390914917
    10. '削' → logprob: -10.2521390914917

Token 1375: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.00012130453251302242
    2. '```' → logprob: -10.625121116638184
    3. 'って' → logprob: -11.000121116638184
    4. 'っ' → logprob: -11.250121116638184
    5. 'る' → logprob: -11.875121116638184
    6. '
' → logprob: -12.000121116638184
    7. 'r' → logprob: -12.125121116638184
    8. 'い' → logprob: -12.250121116638184
    9. 'return' → logprob: -12.375121116638184
    10. '   ' → logprob: -12.500121116638184

Token 1376: '�' (ID: 7804)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.16265535354614258
    2. '\xe6\x8d' → logprob: -1.9126553535461426
    3. '_' → logprob: -7.537655353546143
    4. '```' → logprob: -7.537655353546143
    5. '上' → logprob: -7.912655353546143
    6. '
' → logprob: -8.162654876708984
    7. 'って' → logprob: -8.537654876708984
    8. 'て' → logprob: -10.412654876708984
    9. 'def' → logprob: -10.412654876708984
    10. '落' → logprob: -10.537654876708984

Token 1377: '�' (ID: 101)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.06785283982753754
    2. '\xe6\x8d' → logprob: -2.942852735519409
    3. '```' → logprob: -5.817852973937988
    4. 'っ' → logprob: -6.317852973937988
    5. 'って' → logprob: -6.567852973937988
    6. 'て' → logprob: -6.567852973937988
    7. '_' → logprob: -6.942852973937988
    8. '
' → logprob: -7.692852973937988
    9. 'る' → logprob: -8.067852973937988
    10. '離' → logprob: -8.192852973937988

Token 1378: 'て' (ID: 5711)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe6\x8d' → logprob: -0.0663783922791481
    2. 'り' → logprob: -2.816378355026245
    3. 'って' → logprob: -6.441378593444824
    4. 'て' → logprob: -6.941378593444824
    5. '上' → logprob: -7.191378593444824
    6. '```' → logprob: -8.441378593444824
    7. 'す' → logprob: -8.566378593444824
    8. '取' → logprob: -9.191378593444824
    9. 'る' → logprob: -9.191378593444824
    10. '_' → logprob: -9.941378593444824

Token 1379: 'て' (ID: 5711)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.3240003287792206
    2. 'て' → logprob: -1.949000358581543
    3. 'る' → logprob: -2.449000358581543
    4. 'って' → logprob: -4.324000358581543
    5. '\xe6\x8d' → logprob: -4.824000358581543
    6. 'ら' → logprob: -4.949000358581543
    7. 'す' → logprob: -5.449000358581543
    8. '```' → logprob: -6.324000358581543
    9. '
' → logprob: -6.449000358581543
    10. '取' → logprob: -6.574000358581543

Token 1380: '整数' (ID: 173952)
  Prédit: '整数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '整数' → logprob: -1.0372860431671143
    2. 'す' → logprob: -1.4122860431671143
    3. 'しま' → logprob: -1.6622860431671143
    4. 'int' → logprob: -3.5372860431671143
    5. 'て' → logprob: -3.6622860431671143
    6. 'る' → logprob: -3.6622860431671143
    7. '```' → logprob: -4.287285804748535
    8. '切' → logprob: -4.662285804748535
    9. 'integer' → logprob: -4.662285804748535
    10. '\xe6\x8d' → logprob: -4.787285804748535

Token 1381: 'に' (ID: 5280)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9575862884521484
    2. '```' → logprob: -1.3325862884521484
    3. 'を' → logprob: -2.2075862884521484
    4. 'に' → logprob: -3.3325862884521484
    5. 'り' → logprob: -3.3325862884521484
    6. ')' → logprob: -3.7075862884521484
    7. '   ' → logprob: -4.457586288452148
    8. '部' → logprob: -4.582586288452148
    9. '部分' → logprob: -4.582586288452148
    10. '）' → logprob: -4.707586288452148

Token 1382: 'して' (ID: 22440)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.9404799938201904
    2. 'する' → logprob: -1.4404799938201904
    3. 'し' → logprob: -2.0654799938201904
    4. 'な' → logprob: -2.1904799938201904
    5. 'なる' → logprob: -2.8154799938201904
    6. 'は' → logprob: -4.0654802322387695
    7. 'さ' → logprob: -4.3154802322387695
    8. 'def' → logprob: -5.4404802322387695
    9. '\xe6\x8d' → logprob: -5.5654802322387695
    10. '```' → logprob: -5.6904802322387695

Token 1383: 'しま' (ID: 178826)
  Prédit: 'しま'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'しま' → logprob: -0.13683129847049713
    2. 'す' → logprob: -2.636831283569336
    3. 'る' → logprob: -4.511831283569336
    4. '```' → logprob: -4.886831283569336
    5. 'は' → logprob: -5.011831283569336
    6. 'いる' → logprob: -5.386831283569336
    7. 'd' → logprob: -5.386831283569336
    8. 'あ' → logprob: -5.636831283569336
    9. 'よ' → logprob: -6.511831283569336
    10. 'い' → logprob: -6.511831283569336

Token 1384: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.5879390835762024
    2. 'す' → logprob: -1.4629390239715576
    3. 'て' → logprob: -1.9629390239715576
    4. 'る' → logprob: -4.462939262390137
    5. '```' → logprob: -4.462939262390137
    6. 'く' → logprob: -4.962939262390137
    7. 'れ' → logprob: -5.087939262390137
    8. 'け' → logprob: -5.087939262390137
    9. 'つ' → logprob: -5.337939262390137
    10. 'た' → logprob: -5.462939262390137

Token 1385: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2738207280635834
    2. '"
' → logprob: -1.7738207578659058
    3. '```' → logprob: -4.148820877075195
    4. ')' → logprob: -5.148820877075195
    5. '。' → logprob: -5.523820877075195
    6. ''' → logprob: -5.773820877075195
    7. '.' → logprob: -6.023820877075195
    8. '."
' → logprob: -6.023820877075195
    9. '"`
' → logprob: -6.023820877075195
    10. ')"
' → logprob: -6.148820877075195

Token 1386: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07925063371658325
    2. ':
' → logprob: -3.2042505741119385
    3. '           ' → logprob: -3.7042505741119385
    4. '   ' → logprob: -6.079250812530518
    5. ':' → logprob: -6.454250812530518
    6. '               ' → logprob: -6.704250812530518
    7. '(' → logprob: -6.954250812530518
    8. ' (' → logprob: -7.329250812530518
    9. '：
' → logprob: -7.704250812530518
    10. '):
' → logprob: -7.954250812530518

Token 1387: ' floor' (ID: 8350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47742271423339844
    2. '       ' → logprob: -1.6024227142333984
    3. ' d' → logprob: -2.8524227142333984
    4. ' (' → logprob: -3.9774227142333984
    5. '   ' → logprob: -4.477422714233398
    6. ' the' → logprob: -4.602422714233398
    7. '```' → logprob: -4.602422714233398
    8. '#' → logprob: -4.852422714233398
    9. '           ' → logprob: -5.102422714233398
    10. ' ' → logprob: -5.102422714233398

Token 1388: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37973737716674805
    2. '           ' → logprob: -2.254737377166748
    3. '   ' → logprob: -3.254737377166748
    4. ')
' → logprob: -3.379737377166748
    5. ')' → logprob: -3.504737377166748
    6. '_' → logprob: -4.504737377166748
    7. '(d' → logprob: -4.754737377166748
    8. 'down' → logprob: -5.004737377166748
    9. '        ' → logprob: -5.254737377166748
    10. '               ' → logprob: -5.379737377166748

Token 1389: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.7797995805740356
    2. 'd' → logprob: -1.4047995805740356
    3. ' decimal' → logprob: -2.029799461364746
    4. '小' → logprob: -2.404799461364746
    5. ' d' → logprob: -3.529799461364746
    6. '部分' → logprob: -4.904799461364746
    7. ' 小' → logprob: -5.029799461364746
    8. ' fractional' → logprob: -5.154799461364746
    9. 'fraction' → logprob: -5.279799461364746
    10. ' ' → logprob: -6.154799461364746

Token 1390: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7225528955459595
    2. ')
' → logprob: -2.22255277633667
    3. ')' → logprob: -2.34755277633667
    4. '           ' → logprob: -2.59755277633667
    5. '   ' → logprob: -3.09755277633667
    6. '_' → logprob: -3.84755277633667
    7. '()
' → logprob: -4.34755277633667
    8. '```' → logprob: -4.47255277633667
    9. '(
' → logprob: -4.72255277633667
    10. '(d' → logprob: -4.84755277633667

Token 1391: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13238979876041412
    2. '   ' → logprob: -2.632389783859253
    3. '           ' → logprob: -3.882389783859253
    4. '```' → logprob: -4.007390022277832
    5. '):
' → logprob: -6.007390022277832
    6. ')' → logprob: -6.632390022277832
    7. 'def' → logprob: -6.882390022277832
    8. ':
' → logprob: -7.007390022277832
    9. ')
' → logprob: -7.257390022277832
    10. '):' → logprob: -7.257390022277832

Token 1392: 'ignore' (ID: 25112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8490879535675049
    2. ')
' → logprob: -0.8490879535675049
    3. 'd' → logprob: -3.224087953567505
    4. 'を' → logprob: -4.474087715148926
    5. '```' → logprob: -4.474087715148926
    6. '   ' → logprob: -4.599087715148926
    7. 'す' → logprob: -5.224087715148926
    8. 'する' → logprob: -5.349087715148926
    9. '       ' → logprob: -5.474087715148926
    10. '）' → logprob: -5.724087715148926

Token 1393: '),' (ID: 936)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9380241632461548
    2. ')' → logprob: -1.9380241632461548
    3. 'す' → logprob: -2.4380240440368652
    4. '```' → logprob: -2.9380240440368652
    5. '部分' → logprob: -3.1880240440368652
    6. ' the' → logprob: -3.5630240440368652
    7. 'decimal' → logprob: -3.6880240440368652
    8. ' fractional' → logprob: -3.9380240440368652
    9. '       ' → logprob: -4.438024044036865
    10. 'の' → logprob: -4.563024044036865

Token 1394: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12865804135799408
    2. '   ' → logprob: -2.2536580562591553
    3. '           ' → logprob: -4.753657817840576
    4. '```' → logprob: -6.503657817840576
    5. ')' → logprob: -6.878657817840576
    6. 'd' → logprob: -7.878657817840576
    7. '):
' → logprob: -7.878657817840576
    8. ')
' → logprob: -8.003658294677734
    9. 'def' → logprob: -8.128658294677734
    10. ':
' → logprob: -8.253658294677734

Token 1395: ' sign' (ID: 2232)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6275906562805176
    2. ' the' → logprob: -2.0025906562805176
    3. ' d' → logprob: -3.2525906562805176
    4. ' is' → logprob: -3.6275906562805176
    5. 'd' → logprob: -3.6275906562805176
    6. '   ' → logprob: -3.8775906562805176
    7. 'not' → logprob: -4.002590656280518
    8. '#' → logprob: -4.127590656280518
    9. ' abs' → logprob: -4.252590656280518
    10. '       ' → logprob: -4.252590656280518

Token 1396: ' depends' (ID: 20102)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.294885277748108
    2. '       ' → logprob: -1.794885277748108
    3. ')' → logprob: -1.919885277748108
    4. '```' → logprob: -2.9198851585388184
    5. '   ' → logprob: -3.0448851585388184
    6. 'def' → logprob: -3.7948851585388184
    7. '           ' → logprob: -3.9198851585388184
    8. '()
' → logprob: -4.169885158538818
    9. 'd' → logprob: -4.169885158538818
    10. ' ' → logprob: -4.294885158538818

Token 1397: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8786880970001221
    2. '   ' → logprob: -1.378688097000122
    3. ')
' → logprob: -1.878688097000122
    4. ')' → logprob: -3.253688097000122
    5. '```' → logprob: -3.503688097000122
    6. '           ' → logprob: -3.753688097000122
    7. '):
' → logprob: -4.003687858581543
    8. 'def' → logprob: -4.878687858581543
    9. '
' → logprob: -5.253687858581543
    10. ':
' → logprob: -5.378687858581543

Token 1398: ' direction' (ID: 9262)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7017884254455566
    2. 'd' → logprob: -1.4517884254455566
    3. ' the' → logprob: -1.9517884254455566
    4. 'direction' → logprob: -2.8267884254455566
    5. ' direction' → logprob: -3.7017884254455566
    6. 'c' → logprob: -4.951788425445557
    7. ' d' → logprob: -5.201788425445557
    8. '       ' → logprob: -5.326788425445557
    9. '   ' → logprob: -5.576788425445557
    10. 'whether' → logprob: -5.576788425445557

Token 1399: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14830385148525238
    2. '   ' → logprob: -2.648303747177124
    3. '           ' → logprob: -3.648303747177124
    4. '```' → logprob: -4.148303985595703
    5. ')' → logprob: -5.773303985595703
    6. '):
' → logprob: -6.398303985595703
    7. ':
' → logprob: -6.523303985595703
    8. '               ' → logprob: -6.523303985595703
    9. '
' → logprob: -6.523303985595703
    10. '     ' → logprob: -6.648303985595703

Token 1400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002715714741498232
    2. '           ' → logprob: -6.627715587615967
    3. '```' → logprob: -7.377715587615967
    4. '   ' → logprob: -7.502715587615967
    5. '``' → logprob: -9.252716064453125
    6. '               ' → logprob: -11.002716064453125
    7. ' if' → logprob: -11.252716064453125
    8. '        ' → logprob: -11.627716064453125
    9. 'if' → logprob: -11.627716064453125
    10. '
' → logprob: -11.877716064453125

Token 1401: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017365860985592008
    2. '   ' → logprob: -7.126736640930176
    3. '           ' → logprob: -7.376736640930176
    4. '```' → logprob: -8.626736640930176
    5. 'if' → logprob: -10.376736640930176
    6. '``' → logprob: -10.626736640930176
    7. 'return' → logprob: -10.876736640930176
    8. ' if' → logprob: -11.251736640930176
    9. '               ' → logprob: -11.876736640930176
    10. '        ' → logprob: -12.126736640930176

Token 1402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03432103991508484
    2. '   ' → logprob: -3.4093210697174072
    3. '```' → logprob: -7.534320831298828
    4. '           ' → logprob: -9.284320831298828
    5. '``' → logprob: -11.159320831298828
    6. '     ' → logprob: -12.284320831298828
    7. '    ' → logprob: -12.409320831298828
    8. ' ' → logprob: -12.784320831298828
    9. '      ' → logprob: -12.909320831298828
    10. '`' → logprob: -13.159320831298828

Token 1403: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025934701785445213
    2. '   ' → logprob: -4.52593469619751
    3. '           ' → logprob: -4.90093469619751
    4. '```' → logprob: -5.90093469619751
    5. ' if' → logprob: -7.27593469619751
    6. '(' → logprob: -7.27593469619751
    7. ''' → logprob: -7.27593469619751
    8. ':' → logprob: -7.77593469619751
    9. 'if' → logprob: -8.025935173034668
    10. '`' → logprob: -8.275935173034668

Token 1404: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010853740386664867
    2. '   ' → logprob: -5.6358537673950195
    3. '           ' → logprob: -6.2608537673950195
    4. ' if' → logprob: -6.6358537673950195
    5. 'if' → logprob: -7.1358537673950195
    6. '```' → logprob: -7.1358537673950195
    7. 'return' → logprob: -7.5108537673950195
    8. '(' → logprob: -8.38585376739502
    9. '``' → logprob: -8.88585376739502
    10. '#' → logprob: -8.88585376739502

Token 1405: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08754927664995193
    2. '   ' → logprob: -3.3375492095947266
    3. ' if' → logprob: -3.4625492095947266
    4. 'if' → logprob: -5.337549209594727
    5. ' abs' → logprob: -5.462549209594727
    6. 'abs' → logprob: -6.337549209594727
    7. 'd' → logprob: -6.462549209594727
    8. ' d' → logprob: -6.837549209594727
    9. ' a' → logprob: -7.462549209594727
    10. 'a' → logprob: -7.712549209594727

Token 1406: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7795971632003784
    2. '       ' → logprob: -0.9045971632003784
    3. '   ' → logprob: -3.029597282409668
    4. '=' → logprob: -3.654597282409668
    5. ' is' → logprob: -3.904597282409668
    6. '           ' → logprob: -4.654597282409668
    7. ' ==' → logprob: -5.529597282409668
    8. ' if' → logprob: -5.654597282409668
    9. '        ' → logprob: -6.029597282409668
    10. ':' → logprob: -6.029597282409668

Token 1407: ' towards' (ID: 9979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5317566394805908
    2. ' abs' → logprob: -2.281756639480591
    3. 'tow' → logprob: -3.406756639480591
    4. 'abs' → logprob: -3.531756639480591
    5. ' toward' → logprob: -3.656756639480591
    6. 'a' → logprob: -3.781756639480591
    7. ' if' → logprob: -3.781756639480591
    8. ' a' → logprob: -3.906756639480591
    9. 'd' → logprob: -3.906756639480591
    10. ' towards' → logprob: -3.906756639480591

Token 1408: ' c' (ID: 274)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5480841994285583
    2. 'sm' → logprob: -1.7980842590332031
    3. 'c' → logprob: -2.048084259033203
    4. ' the' → logprob: -2.923084259033203
    5. 'a' → logprob: -3.423084259033203
    6. ' smaller' → logprob: -3.673084259033203
    7. 'b' → logprob: -5.048084259033203
    8. ' c' → logprob: -6.173084259033203
    9. 'd' → logprob: -7.048084259033203
    10. ' a' → logprob: -7.173084259033203

Token 1409: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11654965579509735
    2. '   ' → logprob: -2.9915497303009033
    3. '           ' → logprob: -3.6165497303009033
    4. ' if' → logprob: -4.741549491882324
    5. ':
' → logprob: -5.616549491882324
    6. '```' → logprob: -5.991549491882324
    7. 'if' → logprob: -6.116549491882324
    8. '(
' → logprob: -6.616549491882324
    9. ':' → logprob: -6.741549491882324
    10. '
' → logprob: -6.866549491882324

Token 1410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003539013210684061
    2. '   ' → logprob: -6.003539085388184
    3. ' if' → logprob: -8.003539085388184
    4. '           ' → logprob: -8.628539085388184
    5. '(' → logprob: -9.003539085388184
    6. '```' → logprob: -9.003539085388184
    7. ':
' → logprob: -9.503539085388184
    8. ':' → logprob: -9.878539085388184
    9. ' (' → logprob: -10.753539085388184
    10. 'if' → logprob: -10.878539085388184

Token 1411: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05658510699868202
    2. '   ' → logprob: -2.9315850734710693
    3. ' if' → logprob: -7.431585311889648
    4. '           ' → logprob: -7.931585311889648
    5. '```' → logprob: -8.931585311889648
    6. 'if' → logprob: -9.056585311889648
    7. 'def' → logprob: -9.056585311889648
    8. 'return' → logprob: -9.931585311889648
    9. ':
' → logprob: -10.056585311889648
    10. '     ' → logprob: -10.306585311889648

Token 1412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0338856503367424
    2. '   ' → logprob: -3.4088857173919678
    3. '           ' → logprob: -9.658885955810547
    4. ' if' → logprob: -9.783885955810547
    5. '```' → logprob: -10.408885955810547
    6. 'if' → logprob: -11.033885955810547
    7. 'return' → logprob: -11.408885955810547
    8. 'def' → logprob: -11.783885955810547
    9. ',' → logprob: -12.408885955810547
    10. '
' → logprob: -12.533885955810547

Token 1413: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10405383259057999
    2. '   ' → logprob: -2.3540537357330322
    3. ' if' → logprob: -6.479053974151611
    4. 'if' → logprob: -7.479053974151611
    5. '           ' → logprob: -7.604053974151611
    6. '```' → logprob: -8.229053497314453
    7. ':
' → logprob: -8.854053497314453
    8. ' ' → logprob: -9.479053497314453
    9. ':' → logprob: -9.604053497314453
    10. '        ' → logprob: -9.729053497314453

Token 1414: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.107549749314785
    2. '   ' → logprob: -3.4825496673583984
    3. ' if' → logprob: -3.6075496673583984
    4. '           ' → logprob: -4.732549667358398
    5. 'if' → logprob: -4.857549667358398
    6. '(' → logprob: -4.982549667358398
    7. ' (' → logprob: -5.232549667358398
    8. '```' → logprob: -5.357549667358398
    9. '(
' → logprob: -5.857549667358398
    10. '{
' → logprob: -7.482549667358398

Token 1415: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9367820620536804
    2. ' a' → logprob: -2.311782121658325
    3. ' abs' → logprob: -2.311782121658325
    4. 'd' → logprob: -2.686782121658325
    5. '```' → logprob: -2.686782121658325
    6. 'a' → logprob: -2.686782121658325
    7. 'int' → logprob: -2.936782121658325
    8. 'abs' → logprob: -3.436782121658325
    9. '   ' → logprob: -3.936782121658325
    10. ' int' → logprob: -4.061781883239746

Token 1416: '小' (ID: 5820)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9799054861068726
    2. '       ' → logprob: -2.229905605316162
    3. 'd' → logprob: -2.729905605316162
    4. '   ' → logprob: -2.729905605316162
    5. 'int' → logprob: -2.729905605316162
    6. ' "' → logprob: -3.104905605316162
    7. '```' → logprob: -3.479905605316162
    8. ' abs' → logprob: -3.854905605316162
    9. 'round' → logprob: -4.104905605316162
    10. 'abs' → logprob: -4.229905605316162

Token 1417: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.9952922463417053
    2. '       ' → logprob: -1.8702921867370605
    3. '   ' → logprob: -2.2452921867370605
    4. '```' → logprob: -2.7452921867370605
    5. 's' → logprob: -2.9952921867370605
    6. ')' → logprob: -3.3702921867370605
    7. '.' → logprob: -3.4952921867370605
    8. 'def' → logprob: -3.7452921867370605
    9. ':
' → logprob: -4.3702921867370605
    10. 'return' → logprob: -4.6202921867370605

Token 1418: '部' (ID: 8572)
  Prédit: '部'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '部' → logprob: -0.04327138140797615
    2. 'part' → logprob: -3.91827130317688
    3. '```' → logprob: -4.668271541595459
    4. '_part' → logprob: -5.543271541595459
    5. '.' → logprob: -5.918271541595459
    6. '       ' → logprob: -7.168271541595459
    7. '   ' → logprob: -7.168271541595459
    8. 'parts' → logprob: -7.293271541595459
    9. '_parts' → logprob: -7.418271541595459
    10. '部分' → logprob: -7.668271541595459

Token 1419: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.040561091154813766
    2. 'は' → logprob: -4.915561199188232
    3. ')' → logprob: -5.290561199188232
    4. 'が' → logprob: -5.290561199188232
    5. 'の' → logprob: -5.415561199188232
    6. '_' → logprob: -5.665561199188232
    7. '部' → logprob: -5.915561199188232
    8. ' を' → logprob: -6.040561199188232
    9. '.' → logprob: -6.790561199188232
    10. '   ' → logprob: -6.790561199188232

Token 1420: '切' (ID: 34921)
  Prédit: '切'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '切' → logprob: -0.006656519137322903
    2. 'cut' → logprob: -5.131656646728516
    3. 'き' → logprob: -7.631656646728516
    4. 'discard' → logprob: -9.381656646728516
    5. 'す' → logprob: -10.381656646728516
    6. 'def' → logprob: -11.256656646728516
    7. '返' → logprob: -11.381656646728516
    8. '```' → logprob: -11.631656646728516
    9. '削' → logprob: -11.756656646728516
    10. '_cut' → logprob: -11.756656646728516

Token 1421: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.0027425887528806925
    2. '```' → logprob: -6.752742767333984
    3. 'r' → logprob: -8.002742767333984
    4. '``' → logprob: -9.002742767333984
    5. '   ' → logprob: -9.127742767333984
    6. 'った' → logprob: -9.252742767333984
    7. '       ' → logprob: -9.377742767333984
    8. 'る' → logprob: -9.627742767333984
    9. 'return' → logprob: -9.627742767333984
    10. '           ' → logprob: -9.877742767333984

Token 1422: '�' (ID: 7804)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.06434492766857147
    2. '\xe6\x8d' → logprob: -2.939344882965088
    3. '```' → logprob: -6.439344882965088
    4. '上' → logprob: -6.814344882965088
    5. '_' → logprob: -7.189344882965088
    6. '   ' → logprob: -7.564344882965088
    7. '=' → logprob: -7.689344882965088
    8. '       ' → logprob: -7.814344882965088
    9. 'って' → logprob: -7.939344882965088
    10. 'r' → logprob: -8.189345359802246

Token 1423: '�' (ID: 101)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.010826852172613144
    2. '\xe6\x8d' → logprob: -6.01082706451416
    3. 'っ' → logprob: -6.38582706451416
    4. 'って' → logprob: -6.76082706451416
    5. 'て' → logprob: -7.01082706451416
    6. '```' → logprob: -7.13582706451416
    7. 'う' → logprob: -7.26082706451416
    8. 'る' → logprob: -7.76082706451416
    9. 'った' → logprob: -7.88582706451416
    10. '"' → logprob: -8.63582706451416

Token 1424: 'て' (ID: 5711)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.16419343650341034
    2. 'て' → logprob: -2.5391933917999268
    3. 'って' → logprob: -3.9141933917999268
    4. '\xe6\x8d' → logprob: -4.164193630218506
    5. '```' → logprob: -5.039193630218506
    6. 'っ' → logprob: -5.164193630218506
    7. '_' → logprob: -6.164193630218506
    8. 'る' → logprob: -6.164193630218506
    9. 'す' → logprob: -6.664193630218506
    10. 'ら' → logprob: -6.789193630218506

Token 1425: 'て' (ID: 5711)
  Prédit: 'て'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.16641123592853546
    2. 'す' → logprob: -2.6664111614227295
    3. '```' → logprob: -4.041411399841309
    4. '\xe6\x8d' → logprob: -4.541411399841309
    5. 'しま' → logprob: -4.666411399841309
    6. 'ら' → logprob: -5.166411399841309
    7. 'よ' → logprob: -5.666411399841309
    8. 't' → logprob: -5.791411399841309
    9. '切' → logprob: -6.166411399841309
    10. 'き' → logprob: -6.416411399841309

Token 1426: '"' (ID: 1)
  Prédit: 'しま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'しま' → logprob: -1.08053457736969
    2. 'int' → logprob: -2.0805344581604004
    3. 'd' → logprob: -2.4555344581604004
    4. '```' → logprob: -2.7055344581604004
    5. 'す' → logprob: -2.9555344581604004
    6. '"' → logprob: -3.0805344581604004
    7. 'a' → logprob: -3.0805344581604004
    8. '0' → logprob: -3.2055344581604004
    9. '整数' → logprob: -3.5805344581604004
    10. 'あ' → logprob: -4.2055344581604

Token 1427: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5529342889785767
    2. 'を' → logprob: -1.6779342889785767
    3. ' is' → logprob: -2.177934169769287
    4. 'は' → logprob: -2.927934169769287
    5. ' ' → logprob: -3.177934169769287
    6. '```' → logprob: -3.177934169769287
    7. 'def' → logprob: -3.302934169769287
    8. ' を' → logprob: -3.427934169769287
    9. '       ' → logprob: -3.552934169769287
    10. '(' → logprob: -4.052934169769287

Token 1428: ' floor' (ID: 8350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6783083081245422
    2. '       ' → logprob: -2.5533082485198975
    3. 'd' → logprob: -2.6783082485198975
    4. 'math' → logprob: -2.6783082485198975
    5. ' int' → logprob: -2.8033082485198975
    6. ' math' → logprob: -3.1783082485198975
    7. '```' → logprob: -3.8033082485198975
    8. 'a' → logprob: -3.9283082485198975
    9. 'abs' → logprob: -3.9283082485198975
    10. ' abs' → logprob: -4.178308486938477

Token 1429: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7633756399154663
    2. '   ' → logprob: -2.138375759124756
    3. '(d' → logprob: -2.388375759124756
    4. '(' → logprob: -2.763375759124756
    5. '_' → logprob: -3.138375759124756
    6. 'd' → logprob: -3.638375759124756
    7. ')' → logprob: -3.638375759124756
    8. '```' → logprob: -3.763375759124756
    9. ' (' → logprob: -3.888375759124756
    10. '           ' → logprob: -4.263375759124756

Token 1430: ' decimal' (ID: 26964)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0031697750091553
    2. 'd' → logprob: -1.2531697750091553
    3. ' the' → logprob: -1.2531697750091553
    4. 'a' → logprob: -3.2531697750091553
    5. 'abs' → logprob: -5.878170013427734
    6. 'c' → logprob: -5.878170013427734
    7. ' a' → logprob: -6.003170013427734
    8. ' d' → logprob: -6.253170013427734
    9. ')' → logprob: -6.378170013427734
    10. '```' → logprob: -6.378170013427734

Token 1431: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.754325270652771
    2. '   ' → logprob: -2.3793253898620605
    3. '_part' → logprob: -2.3793253898620605
    4. '           ' → logprob: -3.0043253898620605
    5. 'part' → logprob: -3.3793253898620605
    6. '部分' → logprob: -3.3793253898620605
    7. '[' → logprob: -3.7543253898620605
    8. ' part' → logprob: -3.7543253898620605
    9. '[
' → logprob: -4.1293253898620605
    10. '部' → logprob: -4.1293253898620605

Token 1432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27570077776908875
    2. '   ' → logprob: -2.150700807571411
    3. '```' → logprob: -3.775700807571411
    4. '           ' → logprob: -4.025700569152832
    5. 'def' → logprob: -4.275700569152832
    6. ':
' → logprob: -4.525700569152832
    7. '[' → logprob: -5.275700569152832
    8. ',' → logprob: -5.400700569152832
    9. '):
' → logprob: -5.650700569152832
    10. ' ' → logprob: -5.900700569152832

Token 1433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38076379895210266
    2. '   ' → logprob: -1.2557637691497803
    3. ':
' → logprob: -3.8807637691497803
    4. '```' → logprob: -5.505764007568359
    5. '           ' → logprob: -6.630764007568359
    6. '):
' → logprob: -6.630764007568359
    7. ':' → logprob: -6.880764007568359
    8. '(' → logprob: -7.505764007568359
    9. '``' → logprob: -7.880764007568359
    10. ',' → logprob: -8.25576400756836

Token 1434: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027869308833032846
    2. '   ' → logprob: -6.002787113189697
    3. '           ' → logprob: -9.127786636352539
    4. 'return' → logprob: -10.252786636352539
    5. ' ' → logprob: -10.877786636352539
    6. ' if' → logprob: -10.877786636352539
    7. '        ' → logprob: -11.127786636352539
    8. ' ' → logprob: -11.127786636352539
    9. ':
' → logprob: -11.627786636352539
    10. 'if' → logprob: -11.627786636352539

Token 1435: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09934614598751068
    2. '   ' → logprob: -2.599346160888672
    3. '```' → logprob: -4.849346160888672
    4. '           ' → logprob: -5.974346160888672
    5. '(' → logprob: -6.099346160888672
    6. 'return' → logprob: -6.474346160888672
    7. ' (' → logprob: -7.224346160888672
    8. ':
' → logprob: -7.474346160888672
    9. '``' → logprob: -7.474346160888672
    10. ' if' → logprob: -7.599346160888672

Token 1436: ' this' (ID: 495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06052834913134575
    2. ' if' → logprob: -4.06052827835083
    3. '   ' → logprob: -4.68552827835083
    4. ' return' → logprob: -5.06052827835083
    5. 'd' → logprob: -5.18552827835083
    6. 'return' → logprob: -5.43552827835083
    7. ' d' → logprob: -5.43552827835083
    8. ' abs' → logprob: -6.06052827835083
    9. 'if' → logprob: -6.43552827835083
    10. '#' → logprob: -7.18552827835083

Token 1437: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8859344124794006
    2. 'def' → logprob: -2.010934352874756
    3. '   ' → logprob: -2.135934352874756
    4. ' is' → logprob: -2.385934352874756
    5. ' means' → logprob: -2.510934352874756
    6. ' =' → logprob: -3.260934352874756
    7. 'means' → logprob: -3.760934352874756
    8. ' part' → logprob: -4.010934352874756
    9. '#' → logprob: -4.260934352874756
    10. ' def' → logprob: -4.385934352874756

Token 1438: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.769095242023468
    2. 'int' → logprob: -2.2690951824188232
    3. '   ' → logprob: -2.5190951824188232
    4. ' a' → logprob: -2.5190951824188232
    5. ' math' → logprob: -2.8940951824188232
    6. 'a' → logprob: -3.0190951824188232
    7. ' int' → logprob: -3.3940951824188232
    8. 'd' → logprob: -3.5190951824188232
    9. '```' → logprob: -3.6440951824188232
    10. ' abs' → logprob: -3.7690951824188232

Token 1439: ' special' (ID: 3582)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9981979131698608
    2. '       ' → logprob: -1.6231979131698608
    3. '   ' → logprob: -2.3731980323791504
    4. 'floor' → logprob: -2.8731980323791504
    5. '整数' → logprob: -3.7481980323791504
    6. 'd' → logprob: -3.8731980323791504
    7. 'round' → logprob: -3.8731980323791504
    8. 'b' → logprob: -3.8731980323791504
    9. ' def' → logprob: -3.9981980323791504
    10. 'n' → logprob: -4.12319803237915

Token 1440: ' rounding' (ID: 112605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9204148054122925
    2. '       ' → logprob: -1.0454148054122925
    3. 'def' → logprob: -1.7954148054122925
    4. 'int' → logprob: -4.545414924621582
    5. ' def' → logprob: -5.045414924621582
    6. 'return' → logprob: -5.170414924621582
    7. ':' → logprob: -5.420414924621582
    8. ' ' → logprob: -5.545414924621582
    9. ' return' → logprob: -5.670414924621582
    10. 'の' → logprob: -5.670414924621582

Token 1441: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3040260970592499
    2. '   ' → logprob: -1.4290261268615723
    3. '```' → logprob: -5.304026126861572
    4. '           ' → logprob: -5.679026126861572
    5. 'def' → logprob: -6.179026126861572
    6. ':' → logprob: -6.179026126861572
    7. ':
' → logprob: -6.679026126861572
    8. '(' → logprob: -6.679026126861572
    9. ',' → logprob: -6.804026126861572
    10. ' (' → logprob: -7.179026126861572

Token 1442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15073847770690918
    2. '   ' → logprob: -2.025738477706909
    3. '(' → logprob: -6.275738716125488
    4. '           ' → logprob: -6.400738716125488
    5. '```' → logprob: -6.775738716125488
    6. '    ' → logprob: -7.900738716125488
    7. '        ' → logprob: -8.025738716125488
    8. '(
' → logprob: -8.525738716125488
    9. ' (' → logprob: -8.775738716125488
    10. '"' → logprob: -8.775738716125488

Token 1443: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004563038237392902
    2. '   ' → logprob: -5.629562854766846
    3. '```' → logprob: -7.879562854766846
    4. '           ' → logprob: -8.629563331604004
    5. ' if' → logprob: -9.379563331604004
    6. 'def' → logprob: -9.879563331604004
    7. 'return' → logprob: -10.254563331604004
    8. '        ' → logprob: -10.379563331604004
    9. 'if' → logprob: -10.504563331604004
    10. '``' → logprob: -10.504563331604004

Token 1444: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06057132035493851
    2. '   ' → logprob: -3.1855714321136475
    3. ' if' → logprob: -4.560571193695068
    4. '```' → logprob: -5.935571193695068
    5. 'if' → logprob: -6.560571193695068
    6. '           ' → logprob: -7.185571193695068
    7. '``' → logprob: -7.935571193695068
    8. 'def' → logprob: -8.560571670532227
    9. '(' → logprob: -8.685571670532227
    10. ' (' → logprob: -8.935571670532227

Token 1445: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12798656523227692
    2. '```' → logprob: -3.0029866695404053
    3. 'def' → logprob: -4.252986431121826
    4. '   ' → logprob: -4.502986431121826
    5. ' if' → logprob: -4.502986431121826
    6. 'return' → logprob: -5.002986431121826
    7. 'int' → logprob: -5.127986431121826
    8. 'if' → logprob: -5.252986431121826
    9. '``' → logprob: -5.377986431121826
    10. '           ' → logprob: -5.627986431121826

Token 1446: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5996495485305786
    2. 'op' → logprob: -1.4746495485305786
    3. 'abs' → logprob: -2.724649429321289
    4. ' d' → logprob: -2.849649429321289
    5. ' abs' → logprob: -3.849649429321289
    6. 'a' → logprob: -4.099649429321289
    7. ' op' → logprob: -4.099649429321289
    8. '       ' → logprob: -4.349649429321289
    9. 'b' → logprob: -4.349649429321289
    10. 'int' → logprob: -4.974649429321289

Token 1447: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.053478192538022995
    2. ' >' → logprob: -3.928478240966797
    3. '<' → logprob: -4.553478240966797
    4. ' <=' → logprob: -4.678478240966797
    5. ' ==' → logprob: -5.053478240966797
    6. '>' → logprob: -6.928478240966797
    7. ' ' → logprob: -7.303478240966797
    8. '==' → logprob: -7.678478240966797
    9. '   ' → logprob: -7.678478240966797
    10. ' is' → logprob: -7.928478240966797

Token 1448: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20042243599891663
    2. ' c' → logprob: -2.575422525405884
    3. '0' → logprob: -3.200422525405884
    4. 'a' → logprob: -3.825422525405884
    5. 'd' → logprob: -4.325422286987305
    6. ' a' → logprob: -5.200422286987305
    7. ' abs' → logprob: -5.450422286987305
    8. 'abs' → logprob: -5.700422286987305
    9. ' d' → logprob: -6.075422286987305
    10. 'b' → logprob: -6.325422286987305

Token 1449: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.112786054611206
    2. ':' → logprob: -1.487786054611206
    3. ' >' → logprob: -2.487786054611206
    4. ':
' → logprob: -2.612786054611206
    5. ' >=' → logprob: -3.237786054611206
    6. '>' → logprob: -3.362786054611206
    7. '           ' → logprob: -3.737786054611206
    8. ' <' → logprob: -3.737786054611206
    9. '   ' → logprob: -3.737786054611206
    10. ' (' → logprob: -4.237786293029785

Token 1450: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3834390640258789
    2. '           ' → logprob: -2.383439064025879
    3. ':' → logprob: -3.258439064025879
    4. ':
' → logprob: -3.258439064025879
    5. '```' → logprob: -3.633439064025879
    6. ' d' → logprob: -3.758439064025879
    7. ''' → logprob: -4.258439064025879
    8. ' '' → logprob: -4.758439064025879
    9. ' floor' → logprob: -5.008439064025879
    10. ' <' → logprob: -5.008439064025879

Token 1451: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03294441103935242
    2. '       ' → logprob: -4.532944202423096
    3. '(' → logprob: -4.782944202423096
    4. 'd' → logprob: -5.907944202423096
    5. '(
' → logprob: -5.907944202423096
    6. ' (' → logprob: -6.407944202423096
    7. ':
' → logprob: -6.907944202423096
    8. ':' → logprob: -6.907944202423096
    9. '   ' → logprob: -7.032944202423096
    10. '=' → logprob: -7.282944202423096

Token 1452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.688504695892334
    2. ')
' → logprob: -1.438504695892334
    3. '):
' → logprob: -1.938504695892334
    4. '       ' → logprob: -2.563504695892334
    5. '):' → logprob: -3.563504695892334
    6. '           ' → logprob: -5.813504695892334
    7. '   ' → logprob: -6.063504695892334
    8. '(d' → logprob: -6.813504695892334
    9. '+' → logprob: -7.813504695892334
    10. ')+' → logprob: -7.813504695892334

Token 1453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022218646481633186
    2. '           ' → logprob: -7.627222061157227
    3. ' else' → logprob: -8.002222061157227
    4. ':
' → logprob: -8.127222061157227
    5. 'else' → logprob: -8.127222061157227
    6. '   ' → logprob: -8.252222061157227
    7. '```' → logprob: -8.252222061157227
    8. ':' → logprob: -9.127222061157227
    9. ',' → logprob: -10.502222061157227
    10. '(' → logprob: -10.502222061157227

Token 1454: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006363854743540287
    2. 'else' → logprob: -6.256363868713379
    3. '           ' → logprob: -6.506363868713379
    4. '```' → logprob: -6.756363868713379
    5. ' else' → logprob: -7.631363868713379
    6. '   ' → logprob: -8.256363868713379
    7. 'elif' → logprob: -8.381363868713379
    8. '``' → logprob: -8.506363868713379
    9. '(' → logprob: -8.756363868713379
    10. '               ' → logprob: -9.131363868713379

Token 1455: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10913631319999695
    2. '           ' → logprob: -3.4841363430023193
    3. ' else' → logprob: -3.8591363430023193
    4. '   ' → logprob: -4.10913610458374
    5. 'else' → logprob: -4.73413610458374
    6. ':' → logprob: -4.98413610458374
    7. '```' → logprob: -5.48413610458374
    8. ':
' → logprob: -5.85913610458374
    9. '(' → logprob: -6.10913610458374
    10. ' if' → logprob: -6.73413610458374

Token 1456: ' Else' (ID: 42978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0055358409881592
    2. 'd' → logprob: -1.5055358409881592
    3. 'return' → logprob: -1.7555358409881592
    4. ' d' → logprob: -3.255535840988159
    5. ' return' → logprob: -3.380535840988159
    6. '-' → logprob: -3.880535840988159
    7. '   ' → logprob: -4.255536079406738
    8. '==' → logprob: -4.255536079406738
    9. 'abs' → logprob: -4.380536079406738
    10. '=' → logprob: -4.380536079406738

Token 1457: ' ceil' (ID: 35964)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.5987049341201782
    2. ' floor' → logprob: -1.5987049341201782
    3. 'ceil' → logprob: -1.5987049341201782
    4. ' ceil' → logprob: -3.5987048149108887
    5. '       ' → logprob: -4.098704814910889
    6. 'return' → logprob: -7.473704814910889
    7. '           ' → logprob: -7.723704814910889
    8. ' return' → logprob: -8.473705291748047
    9. '+' → logprob: -9.348705291748047
    10. 'round' → logprob: -9.473705291748047

Token 1458: '(d' (ID: 2572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6169022917747498
    2. '(d' → logprob: -2.2419023513793945
    3. '   ' → logprob: -2.4919023513793945
    4. ':' → logprob: -2.8669023513793945
    5. '(
' → logprob: -2.9919023513793945
    6. '(' → logprob: -3.2419023513793945
    7. '           ' → logprob: -3.3669023513793945
    8. ':
' → logprob: -3.6169023513793945
    9. '('\' → logprob: -4.4919023513793945
    10. '```' → logprob: -5.3669023513793945

Token 1459: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41538646817207336
    2. ')
' → logprob: -1.540386438369751
    3. '(d' → logprob: -3.290386438369751
    4. '       ' → logprob: -3.415386438369751
    5. ')' → logprob: -3.540386438369751
    6. '):' → logprob: -3.790386438369751
    7. '   ' → logprob: -6.79038667678833
    8. '           ' → logprob: -7.16538667678833
    9. 'd' → logprob: -7.79038667678833
    10. '):
' → logprob: -8.540386199951172

Token 1460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6370813846588135
    2. '   ' → logprob: -1.0120813846588135
    3. ':
' → logprob: -2.6370813846588135
    4. ':' → logprob: -3.3870813846588135
    5. '```' → logprob: -7.137081146240234
    6. '(' → logprob: -8.387081146240234
    7. ':return' → logprob: -8.637081146240234
    8. '):
' → logprob: -8.762081146240234
    9. '\n' → logprob: -9.137081146240234
    10. 'return' → logprob: -9.137081146240234

Token 1461: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002276104176416993
    2. '   ' → logprob: -6.3772759437561035
    3. ' if' → logprob: -8.502276420593262
    4. ':
' → logprob: -9.502276420593262
    5. 'if' → logprob: -9.627276420593262
    6. ':' → logprob: -9.627276420593262
    7. '           ' → logprob: -9.877276420593262
    8. 'return' → logprob: -10.377276420593262
    9. '```' → logprob: -10.502276420593262
    10. ',' → logprob: -11.877276420593262

Token 1462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029848329722881317
    2. '   ' → logprob: -5.877985000610352
    3. '```' → logprob: -9.002985000610352
    4. ' if' → logprob: -11.252985000610352
    5. 'return' → logprob: -11.377985000610352
    6. '           ' → logprob: -11.377985000610352
    7. ' return' → logprob: -12.252985000610352
    8. '
' → logprob: -12.877985000610352
    9. 'if' → logprob: -13.127985000610352
    10. '``' → logprob: -13.752985000610352

Token 1463: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00792056042701006
    2. '   ' → logprob: -4.882920742034912
    3. '```' → logprob: -10.007920265197754
    4. '           ' → logprob: -10.132920265197754
    5. 'if' → logprob: -10.132920265197754
    6. ' if' → logprob: -10.257920265197754
    7. '{
' → logprob: -10.507920265197754
    8. 'return' → logprob: -10.507920265197754
    9. 'def' → logprob: -10.632920265197754
    10. '
' → logprob: -11.382920265197754

Token 1464: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009060516953468323
    2. '           ' → logprob: -5.884060382843018
    3. 'return' → logprob: -6.509060382843018
    4. '   ' → logprob: -6.634060382843018
    5. ' if' → logprob: -6.759060382843018
    6. 'if' → logprob: -6.759060382843018
    7. '```' → logprob: -7.884060382843018
    8. ' return' → logprob: -9.009060859680176
    9. '{
' → logprob: -9.134060859680176
    10. '
' → logprob: -9.259060859680176

Token 1465: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19787977635860443
    2. 'd' → logprob: -2.3228797912597656
    3. ' d' → logprob: -2.9478797912597656
    4. '```' → logprob: -5.072879791259766
    5. '   ' → logprob: -5.322879791259766
    6. ' if' → logprob: -5.572879791259766
    7. ' return' → logprob: -5.947879791259766
    8. '           ' → logprob: -6.072879791259766
    9. 'return' → logprob: -6.197879791259766
    10. '        ' → logprob: -7.072879791259766

Token 1466: ' can' (ID: 665)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.4586502313613892
    2. ' =' → logprob: -1.5836502313613892
    3. ' <' → logprob: -1.9586502313613892
    4. '=' → logprob: -1.9586502313613892
    5. ' <=' → logprob: -2.3336501121520996
    6. '==' → logprob: -2.8336501121520996
    7. ' is' → logprob: -3.2086501121520996
    8. '       ' → logprob: -3.4586501121520996
    9. '<=' → logprob: -4.7086501121521
    10. 'c' → logprob: -5.0836501121521

Token 1467: ' be' (ID: 413)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0784399509429932
    2. '<=' → logprob: -1.4534399509429932
    3. ' <' → logprob: -2.078439950942993
    4. '<' → logprob: -2.328439950942993
    5. '=' → logprob: -2.328439950942993
    6. '==' → logprob: -2.828439950942993
    7. ' ==' → logprob: -3.703439950942993
    8. ' =' → logprob: -5.828439712524414
    9. ' is' → logprob: -6.078439712524414
    10. '   ' → logprob: -6.203439712524414

Token 1468: ' positive' (ID: 8841)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5291613936424255
    2. 'int' → logprob: -1.9041614532470703
    3. 'a' → logprob: -2.4041614532470703
    4. '0' → logprob: -3.4041614532470703
    5. 'c' → logprob: -3.4041614532470703
    6. ' abs' → logprob: -3.6541614532470703
    7. 'None' → logprob: -4.02916145324707
    8. '-' → logprob: -4.40416145324707
    9. 'b' → logprob: -4.65416145324707
    10. 'd' → logprob: -5.15416145324707

Token 1469: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1630154699087143
    2. '   ' → logprob: -2.413015365600586
    3. '           ' → logprob: -4.163015365600586
    4. '```' → logprob: -4.163015365600586
    5. ' if' → logprob: -5.288015365600586
    6. 'def' → logprob: -5.413015365600586
    7. ''' → logprob: -6.288015365600586
    8. ':' → logprob: -6.288015365600586
    9. ' =' → logprob: -6.413015365600586
    10. '):
' → logprob: -6.663015365600586

Token 1470: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.0034999309573322535
    2. '負' → logprob: -6.378499984741211
    3. ' negative' → logprob: -6.878499984741211
    4. 'c' → logprob: -7.628499984741211
    5. '-negative' → logprob: -9.003499984741211
    6. '0' → logprob: -9.878499984741211
    7. '负' → logprob: -10.503499984741211
    8. '   ' → logprob: -11.128499984741211
    9. '```' → logprob: -11.503499984741211
    10. 'positive' → logprob: -11.753499984741211

Token 1471: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18502388894557953
    2. '   ' → logprob: -2.060023784637451
    3. ':' → logprob: -4.185023784637451
    4. ':
' → logprob: -4.435023784637451
    5. '           ' → logprob: -5.435023784637451
    6. 'def' → logprob: -5.935023784637451
    7. '```' → logprob: -6.560023784637451
    8. ' =' → logprob: -6.685023784637451
    9. ',' → logprob: -7.060023784637451
    10. '):
' → logprob: -7.435023784637451

Token 1472: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032963793724775314
    2. '           ' → logprob: -4.532963752746582
    3. ' if' → logprob: -5.032963752746582
    4. '#' → logprob: -5.407963752746582
    5. '```' → logprob: -5.657963752746582
    6. ' and' → logprob: -6.657963752746582
    7. ':' → logprob: -6.907963752746582
    8. ' then' → logprob: -7.032963752746582
    9. '   ' → logprob: -7.282963752746582
    10. '               ' → logprob: -8.032963752746582

Token 1473: ' exact' (ID: 6354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040801335126161575
    2. ' if' → logprob: -4.165801525115967
    3. '           ' → logprob: -4.915801525115967
    4. '        ' → logprob: -6.165801525115967
    5. 'd' → logprob: -6.290801525115967
    6. '   ' → logprob: -6.290801525115967
    7. ' c' → logprob: -6.665801525115967
    8. 'if' → logprob: -6.790801525115967
    9. ' =' → logprob: -7.040801525115967
    10. ' (' → logprob: -7.040801525115967

Token 1474: ':
' (ID: 734)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.5563545227050781
    2. '       ' → logprob: -2.056354522705078
    3. '):
' → logprob: -2.931354522705078
    4. 'd' → logprob: -3.056354522705078
    5. ' value' → logprob: -3.056354522705078
    6. '   ' → logprob: -3.056354522705078
    7. ')' → logprob: -3.306354522705078
    8. '
' → logprob: -3.306354522705078
    9. '```' → logprob: -3.431354522705078
    10. ':' → logprob: -3.556354522705078

Token 1475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003326714737340808
    2. '   ' → logprob: -6.128326892852783
    3. ' if' → logprob: -8.128326416015625
    4. '           ' → logprob: -8.253326416015625
    5. '```' → logprob: -8.378326416015625
    6. 'def' → logprob: -9.253326416015625
    7. '(' → logprob: -10.628326416015625
    8. '`' → logprob: -10.628326416015625
    9. 'return' → logprob: -10.628326416015625
    10. ' return' → logprob: -10.878326416015625

Token 1476: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015962723409757018
    2. '           ' → logprob: -7.126596450805664
    3. '   ' → logprob: -7.501596450805664
    4. '```' → logprob: -9.626596450805664
    5. 'return' → logprob: -10.126596450805664
    6. 'def' → logprob: -10.876596450805664
    7. '(' → logprob: -11.126596450805664
    8. ' if' → logprob: -11.376596450805664
    9. '               ' → logprob: -11.751596450805664
    10. 'if' → logprob: -12.126596450805664

Token 1477: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01089124009013176
    2. 'if' → logprob: -5.635891437530518
    3. ' if' → logprob: -6.135891437530518
    4. '   ' → logprob: -6.510891437530518
    5. '```' → logprob: -6.760891437530518
    6. 'def' → logprob: -7.260891437530518
    7. 'd' → logprob: -7.510891437530518
    8. 'abs' → logprob: -8.01089096069336
    9. '           ' → logprob: -8.76089096069336
    10. '#' → logprob: -9.51089096069336

Token 1478: ' d' (ID: 272)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5304451584815979
    2. 'd' → logprob: -0.9054451584815979
    3. ' abs' → logprob: -5.530445098876953
    4. 'c' → logprob: -6.905445098876953
    5. '   ' → logprob: -7.280445098876953
    6. '(abs' → logprob: -7.530445098876953
    7. ' d' → logprob: -7.530445098876953
    8. 'a' → logprob: -8.530445098876953
    9. 'b' → logprob: -9.280445098876953
    10. '       ' → logprob: -9.280445098876953

Token 1479: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4253988564014435
    2. ' <=' → logprob: -1.175398826599121
    3. '<=' → logprob: -4.425398826599121
    4. '<' → logprob: -4.675398826599121
    5. ' >=' → logprob: -4.800398826599121
    6. '=' → logprob: -6.300398826599121
    7. ' >' → logprob: -6.425398826599121
    8. ' ==' → logprob: -6.925398826599121
    9. '   ' → logprob: -7.050398826599121
    10. ' =' → logprob: -7.675398826599121

Token 1480: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011070695705711842
    2. 'min' → logprob: -4.886070728302002
    3. 'abs' → logprob: -6.386070728302002
    4. ' c' → logprob: -7.136070728302002
    5. '   ' → logprob: -8.511070251464844
    6. '       ' → logprob: -8.636070251464844
    7. 'b' → logprob: -9.136070251464844
    8. '           ' → logprob: -9.136070251464844
    9. ' min' → logprob: -9.136070251464844
    10. 'a' → logprob: -9.261070251464844

Token 1481: ' =>' (ID: 871)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6438634991645813
    2. ':' → logprob: -1.1438634395599365
    3. '       ' → logprob: -2.5188634395599365
    4. '           ' → logprob: -2.7688634395599365
    5. ' and' → logprob: -5.643863677978516
    6. '):
' → logprob: -6.393863677978516
    7. '[' → logprob: -7.018863677978516
    8. '-' → logprob: -7.268863677978516
    9. '               ' → logprob: -7.393863677978516
    10. '(' → logprob: -7.393863677978516

Token 1482: ' round' (ID: 7353)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.03284602239727974
    2. ' floor' → logprob: -3.657845973968506
    3. '       ' → logprob: -5.782845973968506
    4. 'return' → logprob: -6.157845973968506
    5. '           ' → logprob: -6.907845973968506
    6. '```' → logprob: -9.032846450805664
    7. '``' → logprob: -9.532846450805664
    8. ' return' → logprob: -10.657846450805664
    9. 'int' → logprob: -11.157846450805664
    10. '`' → logprob: -11.282846450805664

Token 1483: ' towards' (ID: 9979)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.9671530723571777
    2. 'd' → logprob: -1.3421530723571777
    3. '(d' → logprob: -1.7171530723571777
    4. 'tow' → logprob: -2.2171530723571777
    5. '       ' → logprob: -3.5921530723571777
    6. '_down' → logprob: -4.592153072357178
    7. ' down' → logprob: -5.592153072357178
    8. '   ' → logprob: -5.842153072357178
    9. ' towards' → logprob: -5.842153072357178
    10. '(
' → logprob: -5.967153072357178

Token 1484: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17059841752052307
    2. 'c' → logprob: -1.9205983877182007
    3. 'the' → logprob: -5.67059850692749
    4. 'a' → logprob: -6.29559850692749
    5. 'floor' → logprob: -6.92059850692749
    6. 'down' → logprob: -7.29559850692749
    7. ' d' → logprob: -7.54559850692749
    8. '(d' → logprob: -8.170598030090332
    9. 'lower' → logprob: -8.170598030090332
    10. ' c' → logprob: -8.295598030090332

Token 1485: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4617445766925812
    2. '(d' → logprob: -2.211744546890259
    3. '   ' → logprob: -2.586744546890259
    4. '           ' → logprob: -3.836744546890259
    5. ':
' → logprob: -4.086744785308838
    6. ' =' → logprob: -4.461744785308838
    7. '=' → logprob: -4.711744785308838
    8. 'd' → logprob: -4.711744785308838
    9. 'down' → logprob: -4.836744785308838
    10. '('' → logprob: -4.836744785308838

Token 1486: ' round' (ID: 7353)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.5857468843460083
    2. 'floor' → logprob: -1.0857468843460083
    3. '       ' → logprob: -3.3357467651367188
    4. 'c' → logprob: -3.8357467651367188
    5. 'd' → logprob: -4.210746765136719
    6. ' c' → logprob: -4.210746765136719
    7. ' d' → logprob: -5.210746765136719
    8. 'ceil' → logprob: -5.960746765136719
    9. '```' → logprob: -6.210746765136719
    10. '           ' → logprob: -6.460746765136719

Token 1487: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.36879628896713257
    2. 'd' → logprob: -1.6187963485717773
    3. '       ' → logprob: -3.8687963485717773
    4. ' ' → logprob: -3.8687963485717773
    5. ' down' → logprob: -4.368796348571777
    6. '_' → logprob: -4.368796348571777
    7. '(' → logprob: -5.118796348571777
    8. '(d' → logprob: -5.243796348571777
    9. '_down' → logprob: -5.243796348571777
    10. 'tow' → logprob: -5.493796348571777

Token 1488: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.399970144033432
    2. '(d' → logprob: -1.6499701738357544
    3. '           ' → logprob: -3.149970054626465
    4. '   ' → logprob: -3.649970054626465
    5. '(' → logprob: -4.649970054626465
    6. 'down' → logprob: -5.024970054626465
    7. '(
' → logprob: -5.649970054626465
    8. 'd' → logprob: -5.649970054626465
    9. '               ' → logprob: -5.774970054626465
    10. '     ' → logprob: -5.899970054626465

Token 1489: ' floor' (ID: 8350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34955668449401855
    2. 'math' → logprob: -1.7245566844940186
    3. 'floor' → logprob: -2.2245566844940186
    4. 'd' → logprob: -5.724556922912598
    5. 'the' → logprob: -6.724556922912598
    6. ' math' → logprob: -6.724556922912598
    7. 'c' → logprob: -6.974556922912598
    8. '```' → logprob: -7.349556922912598
    9. ' floor' → logprob: -7.724556922912598
    10. ' int' → logprob: -7.724556922912598

Token 1490: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.05284449830651283
    2. '       ' → logprob: -4.052844524383545
    3. '(' → logprob: -4.427844524383545
    4. '(
' → logprob: -5.177844524383545
    5. '(c' → logprob: -5.427844524383545
    6. '   ' → logprob: -6.052844524383545
    7. '('' → logprob: -6.052844524383545
    8. 'd' → logprob: -6.677844524383545
    9. ')' → logprob: -7.052844524383545
    10. '```' → logprob: -7.177844524383545

Token 1491: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03518814221024513
    2. ')' → logprob: -3.6601881980895996
    3. '       ' → logprob: -5.4101881980896
    4. '   ' → logprob: -6.2851881980896
    5. '):
' → logprob: -7.1601881980896
    6. ')
' → logprob: -7.5351881980896
    7. '(d' → logprob: -7.9101881980896
    8. '())
' → logprob: -8.660187721252441
    9. ')`
' → logprob: -8.785187721252441
    10. '):' → logprob: -8.910187721252441

Token 1492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002571673830971122
    2. '   ' → logprob: -8.75025749206543
    3. '           ' → logprob: -9.87525749206543
    4. '```' → logprob: -10.37525749206543
    5. 'return' → logprob: -12.25025749206543
    6. 'else' → logprob: -12.62525749206543
    7. ' else' → logprob: -13.62525749206543
    8. ',' → logprob: -13.62525749206543
    9. '               ' → logprob: -14.00025749206543
    10. '(' → logprob: -14.12525749206543

Token 1493: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030422434210777283
    2. '   ' → logprob: -6.003042221069336
    3. '           ' → logprob: -8.878042221069336
    4. 'else' → logprob: -8.878042221069336
    5. 'elif' → logprob: -8.878042221069336
    6. '```' → logprob: -9.378042221069336
    7. 'return' → logprob: -10.878042221069336
    8. ' else' → logprob: -11.003042221069336
    9. ' elif' → logprob: -12.378042221069336
    10. '     ' → logprob: -12.628042221069336

Token 1494: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005690569523721933
    2. '   ' → logprob: -5.880690574645996
    3. '           ' → logprob: -7.005690574645996
    4. 'else' → logprob: -7.005690574645996
    5. ' else' → logprob: -7.255690574645996
    6. '```' → logprob: -9.380690574645996
    7. 'elif' → logprob: -10.130690574645996
    8. ' if' → logprob: -10.130690574645996
    9. 'return' → logprob: -10.505690574645996
    10. '               ' → logprob: -11.130690574645996

Token 1495: ' d' (ID: 272)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.06573206186294556
    2. ' ceil' → logprob: -2.815732002258301
    3. '       ' → logprob: -6.065732002258301
    4. '           ' → logprob: -6.940732002258301
    5. '.ceil' → logprob: -8.8157320022583
    6. '```' → logprob: -10.3157320022583
    7. 'floor' → logprob: -10.4407320022583
    8. 'd' → logprob: -10.6907320022583
    9. '        ' → logprob: -10.6907320022583
    10. '          ' → logprob: -11.1907320022583

Token 1496: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.581630527973175
    2. ' =' → logprob: -1.7066304683685303
    3. ' <' → logprob: -2.2066304683685303
    4. '<' → logprob: -2.3316304683685303
    5. '<=' → logprob: -3.8316304683685303
    6. ' <=' → logprob: -4.206630706787109
    7. ' +=' → logprob: -4.956630706787109
    8. '+=' → logprob: -5.581630706787109
    9. 'ceil' → logprob: -6.581630706787109
    10. '   ' → logprob: -7.206630706787109

Token 1497: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.031168049201369286
    2. ' c' → logprob: -3.531167984008789
    3. '=' → logprob: -6.906167984008789
    4. 'd' → logprob: -8.156167984008789
    5. ' d' → logprob: -10.031167984008789
    6. '=c' → logprob: -10.531167984008789
    7. '       ' → logprob: -11.406167984008789
    8. '   ' → logprob: -11.531167984008789
    9. ' =' → logprob: -11.656167984008789
    10. '           ' → logprob: -11.781167984008789

Token 1498: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032723029144108295
    2. '           ' → logprob: -6.128272533416748
    3. ':' → logprob: -7.253272533416748
    4. ',' → logprob: -9.12827205657959
    5. ':
' → logprob: -9.62827205657959
    6. '   ' → logprob: -9.75327205657959
    7. '```' → logprob: -9.87827205657959
    8. '               ' → logprob: -11.00327205657959
    9. 'return' → logprob: -11.37827205657959
    10. '(' → logprob: -11.62827205657959

Token 1499: ' round' (ID: 7353)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.03427335247397423
    2. ' ceil' → logprob: -3.659273386001587
    3. 'return' → logprob: -5.034273147583008
    4. '           ' → logprob: -7.409273147583008
    5. ' return' → logprob: -7.659273147583008
    6. '       ' → logprob: -8.409273147583008
    7. 'round' → logprob: -10.159273147583008
    8. 'floor' → logprob: -10.409273147583008
    9. '```' → logprob: -11.159273147583008
    10. '.ceil' → logprob: -11.409273147583008

Token 1500: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.04794511944055557
    2. 'down' → logprob: -3.297945022583008
    3. '(d' → logprob: -5.297945022583008
    4. 'ceil' → logprob: -6.422945022583008
    5. 'tow' → logprob: -6.422945022583008
    6. 'd' → logprob: -7.297945022583008
    7. ' up' → logprob: -8.797945022583008
    8. '       ' → logprob: -9.047945022583008
    9. '_up' → logprob: -9.547945022583008
    10. '   ' → logprob: -9.547945022583008

Token 1501: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2335556000471115
    2. '(d' → logprob: -2.358555555343628
    3. '           ' → logprob: -2.983555555343628
    4. '(' → logprob: -3.483555555343628
    5. '```' → logprob: -4.733555793762207
    6. ':
' → logprob: -4.858555793762207
    7. ':' → logprob: -5.358555793762207
    8. ' (' → logprob: -6.483555793762207
    9. '   ' → logprob: -6.608555793762207
    10. 'def' → logprob: -6.858555793762207

Token 1502: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -6.515961285913363e-05
    2. ' ceil' → logprob: -9.750064849853516
    3. '   ' → logprob: -13.125064849853516
    4. 'c' → logprob: -13.500064849853516
    5. 'd' → logprob: -13.625064849853516
    6. '```' → logprob: -14.750064849853516
    7. 'floor' → logprob: -14.750064849853516
    8. '``' → logprob: -15.000064849853516
    9. '
' → logprob: -15.625064849853516
    10. '       ' → logprob: -16.000064849853516

Token 1503: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.08254121243953705
    2. '       ' → logprob: -2.7075412273406982
    3. '(c' → logprob: -5.832540988922119
    4. '   ' → logprob: -5.832540988922119
    5. '(' → logprob: -6.207540988922119
    6. '           ' → logprob: -6.332540988922119
    7. ':
' → logprob: -7.957540988922119
    8. '(b' → logprob: -7.957540988922119
    9. '               ' → logprob: -8.207541465759277
    10. 'def' → logprob: -8.207541465759277

Token 1504: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6108956336975098
    2. ')' → logprob: -1.2358956336975098
    3. '(d' → logprob: -2.4858956336975098
    4. '):
' → logprob: -2.8608956336975098
    5. '       ' → logprob: -5.11089563369751
    6. '):' → logprob: -5.23589563369751
    7. ')`
' → logprob: -5.48589563369751
    8. '   ' → logprob: -5.73589563369751
    9. 'd' → logprob: -6.11089563369751
    10. ')'
' → logprob: -6.48589563369751

Token 1505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28147920966148376
    2. '   ' → logprob: -1.4064792394638062
    3. '```' → logprob: -8.406478881835938
    4. '           ' → logprob: -10.031478881835938
    5. '``' → logprob: -11.781478881835938
    6. '	' → logprob: -11.906478881835938
    7. ':
' → logprob: -12.281478881835938
    8. '
' → logprob: -12.406478881835938
    9. '(' → logprob: -12.531478881835938
    10. '        
' → logprob: -12.531478881835938

Token 1506: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002044863533228636
    2. '   ' → logprob: -6.877044677734375
    3. '           ' → logprob: -7.627044677734375
    4. ':
' → logprob: -8.252044677734375
    5. ':' → logprob: -9.752044677734375
    6. 'return' → logprob: -9.877044677734375
    7. 'def' → logprob: -10.627044677734375
    8. '):
' → logprob: -10.627044677734375
    9. '	' → logprob: -11.002044677734375
    10. ')' → logprob: -11.377044677734375

Token 1507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001118426793254912
    2. '   ' → logprob: -7.3761186599731445
    3. '           ' → logprob: -7.8761186599731445
    4. '```' → logprob: -9.876118659973145
    5. '(' → logprob: -11.251118659973145
    6. ',' → logprob: -11.501118659973145
    7. ' if' → logprob: -11.876118659973145
    8. '               ' → logprob: -12.251118659973145
    9. ':' → logprob: -12.876118659973145
    10. '        ' → logprob: -13.001118659973145

Token 1508: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021496864035725594
    2. '   ' → logprob: -3.8964967727661133
    3. '           ' → logprob: -7.771496772766113
    4. ' if' → logprob: -8.521496772766113
    5. 'if' → logprob: -9.146496772766113
    6. 'return' → logprob: -9.896496772766113
    7. '```' → logprob: -9.896496772766113
    8. 'def' → logprob: -10.271496772766113
    9. '        ' → logprob: -11.646496772766113
    10. '
' → logprob: -11.646496772766113

Token 1509: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0511043518781662
    2. '   ' → logprob: -3.4261043071746826
    3. '           ' → logprob: -5.426104545593262
    4. '(' → logprob: -5.801104545593262
    5. '(
' → logprob: -6.801104545593262
    6. ' (' → logprob: -6.801104545593262
    7. ':' → logprob: -6.926104545593262
    8. ' return' → logprob: -7.426104545593262
    9. '        ' → logprob: -7.551104545593262
    10. 'return' → logprob: -7.551104545593262

Token 1510: ' implement' (ID: 6365)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5450290441513062
    2. 'return' → logprob: -1.4200290441513062
    3. '   ' → logprob: -2.1700291633605957
    4. 'continue' → logprob: -3.4200291633605957
    5. 'def' → logprob: -4.670029163360596
    6. 'complete' → logprob: -4.920029163360596
    7. 'try' → logprob: -6.170029163360596
    8. ' return' → logprob: -6.670029163360596
    9. 'implement' → logprob: -6.670029163360596
    10. 'round' → logprob: -6.920029163360596

Token 1511: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05429881811141968
    2. '   ' → logprob: -3.5542988777160645
    3. ' if' → logprob: -4.8042988777160645
    4. '           ' → logprob: -5.1792988777160645
    5. 'if' → logprob: -6.1792988777160645
    6. 'def' → logprob: -6.6792988777160645
    7. '(' → logprob: -7.0542988777160645
    8. 'd' → logprob: -7.1792988777160645
    9. ':
' → logprob: -7.3042988777160645
    10. ':' → logprob: -7.3042988777160645

Token 1512: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015559505671262741
    2. '   ' → logprob: -4.890559673309326
    3. ' if' → logprob: -6.140559673309326
    4. ':' → logprob: -6.265559673309326
    5. ':
' → logprob: -6.640559673309326
    6. 'if' → logprob: -7.140559673309326
    7. '```' → logprob: -7.140559673309326
    8. '           ' → logprob: -7.890559673309326
    9. 'def' → logprob: -9.265559196472168
    10. '``' → logprob: -9.640559196472168

Token 1513: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4290846884250641
    2. '       ' → logprob: -1.0540846586227417
    3. 'def' → logprob: -8.304084777832031
    4. '```' → logprob: -9.804084777832031
    5. '
' → logprob: -10.304084777832031
    6. 'if' → logprob: -11.429084777832031
    7. '           ' → logprob: -11.929084777832031
    8. 'd' → logprob: -12.429084777832031
    9. ' if' → logprob: -12.554084777832031
    10. 'else' → logprob: -13.054084777832031

Token 1514: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07101019471883774
    2. '   ' → logprob: -2.696010112762451
    3. 'def' → logprob: -7.571010112762451
    4. 'if' → logprob: -8.82101058959961
    5. 'else' → logprob: -9.57101058959961
    6. '```' → logprob: -9.57101058959961
    7. 'd' → logprob: -9.82101058959961
    8. 'result' → logprob: -10.07101058959961
    9. 'return' → logprob: -10.32101058959961
    10. 'a' → logprob: -10.57101058959961

Token 1515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5800271034240723
    2. '=' → logprob: -0.8300271034240723
    3. '_abs' → logprob: -6.080027103424072
    4. '       ' → logprob: -7.205027103424072
    5. '_val' → logprob: -7.830027103424072
    6. 'abs' → logprob: -8.455026626586914
    7. '   ' → logprob: -8.705026626586914
    8. ',' → logprob: -9.705026626586914
    9. '           ' → logprob: -9.955026626586914
    10. 'c' → logprob: -10.580026626586914

Token 1516: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012560747563838959
    2. 'min' → logprob: -4.512560844421387
    3. 'b' → logprob: -7.012560844421387
    4. 'abs' → logprob: -8.137560844421387
    5. '   ' → logprob: -8.762560844421387
    6. ' a' → logprob: -9.387560844421387
    7. '(a' → logprob: -10.012560844421387
    8. ' min' → logprob: -11.512560844421387
    9. '(min' → logprob: -11.762560844421387
    10. ' ' → logprob: -12.887560844421387

Token 1517: ' if' (ID: 538)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.964229166507721
    2. '       ' → logprob: -1.8392291069030762
    3. '/b' → logprob: -2.589229106903076
    4. ' if' → logprob: -2.589229106903076
    5. 'if' → logprob: -2.589229106903076
    6. '_abs' → logprob: -2.964229106903076
    7. ' /' → logprob: -3.089229106903076
    8. 'b' → logprob: -3.339229106903076
    9. '[' → logprob: -3.714229106903076
    10. '.abs' → logprob: -3.839229106903076

Token 1518: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.006883146241307259
    2. ' abs' → logprob: -5.006883144378662
    3. '(abs' → logprob: -8.75688362121582
    4. '   ' → logprob: -11.63188362121582
    5. 'b' → logprob: -14.38188362121582
    6. 'op' → logprob: -14.88188362121582
    7. '       ' → logprob: -16.50688362121582
    8. ' ' → logprob: -16.50688362121582
    9. '    ' → logprob: -16.63188362121582
    10. '  ' → logprob: -16.75688362121582

Token 1519: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07159895449876785
    2. 'b' → logprob: -3.196599006652832
    3. 'c' → logprob: -3.571599006652832
    4. '(a' → logprob: -9.946599006652832
    5. '(c' → logprob: -11.446599006652832
    6. '(b' → logprob: -11.946599006652832
    7. '```' → logprob: -12.446599006652832
    8. '   ' → logprob: -12.446599006652832
    9. ' a' → logprob: -12.571599006652832
    10. 'op' → logprob: -13.446599006652832

Token 1520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003565977094694972
    2. ')<' → logprob: -5.753565788269043
    3. 'abs' → logprob: -9.628565788269043
    4. 'c' → logprob: -9.753565788269043
    5. ')<=' → logprob: -9.753565788269043
    6. '|' → logprob: -10.503565788269043
    7. ')c' → logprob: -10.753565788269043
    8. ')>' → logprob: -10.753565788269043
    9. '```' → logprob: -10.753565788269043
    10. '   ' → logprob: -11.128565788269043

Token 1521: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05592317506670952
    2. ' <' → logprob: -2.9309232234954834
    3. '>' → logprob: -7.680922985076904
    4. '<=' → logprob: -8.430923461914062
    5. '<size' → logprob: -9.930923461914062
    6. ' >' → logprob: -10.055923461914062
    7. '<c' → logprob: -10.055923461914062
    8. '<int' → logprob: -10.180923461914062
    9. '```' → logprob: -10.180923461914062
    10. ' <=' → logprob: -10.305923461914062

Token 1522: ' abs' (ID: 8443)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31369203329086304
    2. 'abs' → logprob: -1.3136920928955078
    3. ' abs' → logprob: -8.063692092895508
    4. '       ' → logprob: -10.063692092895508
    5. '   ' → logprob: -10.438692092895508
    6. ' b' → logprob: -10.563692092895508
    7. '           ' → logprob: -12.063692092895508
    8. '(abs' → logprob: -12.188692092895508
    9. '    ' → logprob: -13.438692092895508
    10. '  ' → logprob: -14.313692092895508

Token 1523: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.885492621222511e-05
    2. '(b' → logprob: -9.750068664550781
    3. '       ' → logprob: -12.500068664550781
    4. 'op' → logprob: -12.750068664550781
    5. '   ' → logprob: -13.500068664550781
    6. 'c' → logprob: -13.750068664550781
    7. '           ' → logprob: -14.875068664550781
    8. ' b' → logprob: -14.875068664550781
    9. 'a' → logprob: -15.125068664550781
    10. '(op' → logprob: -15.375068664550781

Token 1524: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050520941615104675
    2. '       ' → logprob: -3.300520896911621
    3. '[' → logprob: -5.300520896911621
    4. ' else' → logprob: -5.675520896911621
    5. 'else' → logprob: -6.050520896911621
    6. '):
' → logprob: -7.050520896911621
    7. '   ' → logprob: -8.175520896911621
    8. '           ' → logprob: -8.675520896911621
    9. '```' → logprob: -10.050520896911621
    10. '):' → logprob: -10.175520896911621

Token 1525: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6950100064277649
    2. ' else' → logprob: -0.9450100064277649
    3. '       ' → logprob: -2.19500994682312
    4. '           ' → logprob: -7.195010185241699
    5. '   ' → logprob: -10.0700101852417
    6. '	else' → logprob: -10.9450101852417
    7. '
' → logprob: -11.5700101852417
    8. '               ' → logprob: -11.5700101852417
    9. ' if' → logprob: -11.8200101852417
    10. ' ' → logprob: -11.8200101852417

Token 1526: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003365350130479783
    2. ' b' → logprob: -8.000336647033691
    3. '       ' → logprob: -14.875336647033691
    4. '           ' → logprob: -15.125336647033691
    5. '   ' → logprob: -15.250336647033691
    6. '	b' → logprob: -16.750335693359375
    7. '    ' → logprob: -16.875335693359375
    8. '  ' → logprob: -17.500335693359375
    9. '        ' → logprob: -17.875335693359375
    10. ')b' → logprob: -18.125335693359375

Token 1527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007789151277393103
    2. '
' → logprob: -6.007789134979248
    3. '```' → logprob: -6.757789134979248
    4. '   ' → logprob: -7.132789134979248
    5. ' if' → logprob: -7.257789134979248
    6. '           ' → logprob: -7.507789134979248
    7. 'if' → logprob: -7.882789134979248
    8. ':' → logprob: -8.382789611816406
    9. ',' → logprob: -8.507789611816406
    10. 'return' → logprob: -8.757789611816406

Token 1528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044696396216750145
    2. '
' → logprob: -5.504469871520996
    3. '   ' → logprob: -9.504469871520996
    4. '```' → logprob: -9.879469871520996
    5. ',' → logprob: -10.004469871520996
    6. '\n' → logprob: -10.129469871520996
    7. '           ' → logprob: -10.254469871520996
    8. ' if' → logprob: -10.629469871520996
    9. '        
' → logprob: -11.004469871520996
    10. 'if' → logprob: -11.254469871520996

Token 1529: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05521827191114426
    2. 'if' (adapté à ' if') → logprob: -3.55521821975708
    3. 'd' → logprob: -3.80521821975708
    4. ' if' → logprob: -6.43021821975708
    5. 'val' → logprob: -8.430218696594238
    6. '   ' → logprob: -8.805218696594238
    7. '           ' → logprob: -9.180218696594238
    8. 'div' → logprob: -9.430218696594238
    9. 'import' → logprob: -9.430218696594238
    10. '```' → logprob: -9.430218696594238

Token 1530: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006503509357571602
    2. ' d' → logprob: -5.506503582000732
    3. '       ' → logprob: -6.256503582000732
    4. 'abs' → logprob: -9.006503105163574
    5. '(d' → logprob: -9.256503105163574
    6. 'a' → logprob: -9.381503105163574
    7. 'op' → logprob: -9.756503105163574
    8. '           ' → logprob: -10.756503105163574
    9. ' abs' → logprob: -10.881503105163574
    10. '     ' → logprob: -11.131503105163574

Token 1531: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8510637879371643
    2. '=' → logprob: -1.7260637283325195
    3. ' =' → logprob: -1.8510637283325195
    4. ' ==' → logprob: -2.1010637283325195
    5. ' >' → logprob: -3.3510637283325195
    6. '<' → logprob: -3.3510637283325195
    7. '>' → logprob: -4.3510637283325195
    8. '==' → logprob: -4.4760637283325195
    9. ' <=' → logprob: -4.7260637283325195
    10. ' >=' → logprob: -5.9760637283325195

Token 1532: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016216307878494263
    2. ' c' → logprob: -4.391216278076172
    3. 'abs' → logprob: -6.391216278076172
    4. '0' → logprob: -7.266216278076172
    5. ' abs' → logprob: -7.766216278076172
    6. '       ' → logprob: -8.016216278076172
    7. '   ' → logprob: -8.766216278076172
    8. 'd' → logprob: -9.016216278076172
    9. '           ' → logprob: -9.391216278076172
    10. '(c' → logprob: -9.766216278076172

Token 1533: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5428845286369324
    2. ':' → logprob: -1.2928845882415771
    3. '           ' → logprob: -2.167884588241577
    4. '       ' → logprob: -4.917884349822998
    5. '():
' → logprob: -5.042884349822998
    6. '):
' → logprob: -5.542884349822998
    7. ' =' → logprob: -6.042884349822998
    8. ' :
' → logprob: -6.417884349822998
    9. '=' → logprob: -6.542884349822998
    10. ' :' → logprob: -6.917884349822998

Token 1534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020348353311419487
    2. ':' → logprob: -5.27034854888916
    3. '       ' → logprob: -5.39534854888916
    4. ' =' → logprob: -5.64534854888916
    5. ':
' → logprob: -6.14534854888916
    6. '               ' → logprob: -7.02034854888916
    7. '```' → logprob: -7.52034854888916
    8. 'return' → logprob: -8.02034854888916
    9. ' :' → logprob: -8.02034854888916
    10. '):
' → logprob: -8.14534854888916

Token 1535: ' r' (ID: 428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2545897364616394
    2. 'floor' → logprob: -2.504589796066284
    3. ' int' → logprob: -2.754589796066284
    4. '           ' → logprob: -3.254589796066284
    5. ' floor' → logprob: -4.129589557647705
    6. 'return' → logprob: -4.254589557647705
    7. '(int' → logprob: -5.879589557647705
    8. '       ' → logprob: -6.504589557647705
    9. 'math' → logprob: -6.504589557647705
    10. ' return' → logprob: -6.629589557647705

Token 1536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6454961895942688
    2. ' =' → logprob: -1.395496129989624
    3. 'eturn' → logprob: -1.520496129989624
    4. '=int' → logprob: -5.145496368408203
    5. 'r' → logprob: -6.770496368408203
    6. 'return' → logprob: -7.395496368408203
    7. 'ound' → logprob: -7.520496368408203
    8. '=r' → logprob: -8.145496368408203
    9. 'int' → logprob: -8.645496368408203
    10. 'turn' → logprob: -8.770496368408203

Token 1537: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005729448050260544
    2. ' int' → logprob: -5.255729675292969
    3. 'math' → logprob: -8.505729675292969
    4. 'float' → logprob: -9.005729675292969
    5. 'import' → logprob: -9.505729675292969
    6. '           ' → logprob: -10.380729675292969
    7. '(int' → logprob: -11.005729675292969
    8. '       ' → logprob: -11.130729675292969
    9. 'floor' → logprob: -11.130729675292969
    10. '   ' → logprob: -11.880729675292969

Token 1538: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43994662165641785
    2. '(d' → logprob: -1.0649466514587402
    3. ' d' → logprob: -4.56494665145874
    4. '(' → logprob: -8.314946174621582
    5. '(float' → logprob: -8.689946174621582
    6. 'float' → logprob: -8.939946174621582
    7. ' (' → logprob: -9.189946174621582
    8. '   ' → logprob: -10.189946174621582
    9. 'floor' → logprob: -10.439946174621582
    10. '	d' → logprob: -10.814946174621582

Token 1539: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5965533256530762
    2. ')
' → logprob: -0.9715533256530762
    3. '       ' → logprob: -3.846553325653076
    4. '           ' → logprob: -4.596553325653076
    5. '//' → logprob: -4.846553325653076
    6. '   ' → logprob: -5.096553325653076
    7. '.__' → logprob: -5.596553325653076
    8. '+' → logprob: -5.721553325653076
    9. ' //' → logprob: -5.846553325653076
    10. '())
' → logprob: -5.971553325653076

Token 1540: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '           ' → logprob: -15.875004768371582
    4. '   ' → logprob: -17.250003814697266
    5. '       ' → logprob: -18.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. '         ' → logprob: -18.500003814697266
    8. ')' → logprob: -18.875003814697266
    9. '+' → logprob: -19.125003814697266
    10. '               ' → logprob: -19.375003814697266

Token 1541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -18.25
    5. ')' → logprob: -19.375
    6. '１' → logprob: -19.75
    7. '`' → logprob: -19.875
    8. '+' → logprob: -20.125
    9. '<|end|>' → logprob: -20.125
    10. '``' → logprob: -20.5

Token 1542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023055491968989372
    2. ')
' → logprob: -4.398055553436279
    3. '           ' → logprob: -4.898055553436279
    4. '       ' → logprob: -6.273055553436279
    5. ' )' → logprob: -7.898055553436279
    6. '())' → logprob: -8.898055076599121
    7. '+' → logprob: -9.023055076599121
    8. ' +' → logprob: -9.148055076599121
    9. '               ' → logprob: -9.398055076599121
    10. 'd' → logprob: -10.773055076599121

Token 1543: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1544: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2313346415758133
    2. '<|end|>' → logprob: -2.231334686279297
    3. '           ' → logprob: -3.356334686279297
    4. ')' → logprob: -3.731334686279297
    5. '<|end|>' → logprob: -4.481334686279297
    6. 'else' → logprob: -5.231334686279297
    7. '
' → logprob: -5.356334686279297
    8. ' else' → logprob: -5.856334686279297
    9. '               ' → logprob: -5.856334686279297
    10. '   ' → logprob: -6.231334686279297

Token 1545: ' floor' (ID: 8350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5772629380226135
    2. '           ' → logprob: -1.5772628784179688
    3. '       ' → logprob: -2.2022628784179688
    4. '```' → logprob: -3.4522628784179688
    5. '(' → logprob: -4.452262878417969
    6. '(d' → logprob: -4.702262878417969
    7. '\' → logprob: -4.827262878417969
    8. '1' → logprob: -5.077262878417969
    9. '`' → logprob: -5.202262878417969
    10. 'floor' → logprob: -5.327262878417969

Token 1546: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29399383068084717
    2. '       ' → logprob: -1.9189938306808472
    3. '\n' → logprob: -3.6689939498901367
    4. ')
' → logprob: -3.9189939498901367
    5. '<|end|>' → logprob: -4.293993949890137
    6. '
' → logprob: -4.668993949890137
    7. '           ' → logprob: -4.793993949890137
    8. '):
' → logprob: -4.918993949890137
    9. '<|end|>' → logprob: -5.043993949890137
    10. ':
' → logprob: -5.668993949890137

Token 1547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03423326462507248
    2. '           ' → logprob: -4.034233093261719
    3. '\n' → logprob: -4.534233093261719
    4. '
' → logprob: -5.784233093261719
    5. 'else' → logprob: -8.034233093261719
    6. '```' → logprob: -8.159233093261719
    7. ':
' → logprob: -8.284233093261719
    8. '               ' → logprob: -8.784233093261719
    9. '   ' → logprob: -8.784233093261719
    10. '\' → logprob: -9.034233093261719

Token 1548: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5962390899658203
    2. 'else' (adapté à ' else') → logprob: -0.9712390899658203
    3. ' else' → logprob: -2.8462390899658203
    4. ':
' → logprob: -5.22123908996582
    5. '           ' → logprob: -6.72123908996582
    6. ':' → logprob: -6.84623908996582
    7. '   ' → logprob: -6.97123908996582
    8. 'elif' → logprob: -6.97123908996582
    9. '
' → logprob: -7.09623908996582
    10. '```' → logprob: -7.97123908996582

Token 1549: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04064854606986046
    2. ':' → logprob: -3.6656484603881836
    3. ':
' → logprob: -4.540648460388184
    4. '          ' → logprob: -6.665648460388184
    5. ' =' → logprob: -7.040648460388184
    6. '=' → logprob: -8.040648460388184
    7. '       ' → logprob: -8.415648460388184
    8. '            ' → logprob: -8.540648460388184
    9. '               ' → logprob: -9.415648460388184
    10. ' :' → logprob: -9.540648460388184

Token 1550: '           ' (ID: 352)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7037802338600159
    2. '           ' → logprob: -0.8287802338600159
    3. ' int' → logprob: -3.203780174255371
    4. '          ' → logprob: -4.953780174255371
    5. '       ' → logprob: -5.203780174255371
    6. '(int' → logprob: -5.203780174255371
    7. '(' → logprob: -6.078780174255371
    8. '1' → logprob: -6.203780174255371
    9. '            ' → logprob: -6.828780174255371
    10. ' ' → logprob: -6.828780174255371

Token 1551: ' r' (ID: 428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13218092918395996
    2. ' int' → logprob: -2.13218092918396
    3. '           ' → logprob: -5.507181167602539
    4. 'ceil' → logprob: -7.757181167602539
    5. '(int' → logprob: -8.257181167602539
    6. '       ' → logprob: -9.257181167602539
    7. ' ceil' → logprob: -9.382181167602539
    8. '   ' → logprob: -9.632181167602539
    9. '          ' → logprob: -9.757181167602539
    10. '1' → logprob: -10.507181167602539

Token 1552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742855727672577
    2. '=' → logprob: -0.9742856025695801
    3. '=int' → logprob: -8.599285125732422
    4. '           ' → logprob: -11.099285125732422
    5. 'int' → logprob: -12.599285125732422
    6. ':' → logprob: -13.349285125732422
    7. 'r' → logprob: -13.724285125732422
    8. '```' → logprob: -14.349285125732422
    9. ')' → logprob: -14.849285125732422
    10. '   ' → logprob: -15.099285125732422

Token 1553: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00039135036058723927
    2. '           ' → logprob: -8.000391006469727
    3. '(int' → logprob: -10.250391006469727
    4. ' int' → logprob: -11.000391006469727
    5. '       ' → logprob: -13.750391006469727
    6. '[int' → logprob: -14.375391006469727
    7. '          ' → logprob: -14.750391006469727
    8. '   ' → logprob: -14.750391006469727
    9. '               ' → logprob: -15.125391006469727
    10. '```' → logprob: -15.250391006469727

Token 1554: '(-' (ID: 8087)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1296323537826538
    2. 'd' → logprob: -2.3796324729919434
    3. '-d' → logprob: -4.379632472991943
    4. '(-' → logprob: -4.504632472991943
    5. '-' → logprob: -6.004632472991943
    6. '-(' → logprob: -6.629632472991943
    7. 'import' → logprob: -7.129632472991943
    8. '(' → logprob: -8.629631996154785
    9. ' (' → logprob: -8.754631996154785
    10. ' -' → logprob: -8.879631996154785

Token 1555: '((-' (ID: 135694)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.03908652439713478
    2. '(d' → logprob: -4.66408634185791
    3. 'int' → logprob: -4.78908634185791
    4. 'd' → logprob: -4.91408634185791
    5. '-d' → logprob: -5.53908634185791
    6. '((-' → logprob: -5.53908634185791
    7. '-' → logprob: -5.91408634185791
    8. '(' → logprob: -6.28908634185791
    9. '1' → logprob: -8.28908634185791
    10. '(int' → logprob: -8.53908634185791

Token 1556: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004670153430197388
    2. '(-' → logprob: -8.125467300415039
    3. 'int' → logprob: -8.875467300415039
    4. '(d' → logprob: -10.625467300415039
    5. '1' → logprob: -13.625467300415039
    6. '-' → logprob: -14.125467300415039
    7. '-d' → logprob: -14.250467300415039
    8. '   ' → logprob: -14.375467300415039
    9. '((-' → logprob: -14.375467300415039
    10. ' d' → logprob: -14.500467300415039

Token 1557: ')' (ID: 8)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4610854387283325
    2. ')' → logprob: -1.0860854387283325
    3. ')//' → logprob: -3.961085319519043
    4. ' //' → logprob: -4.711085319519043
    5. '1' → logprob: -7.086085319519043
    6. '```' → logprob: -7.461085319519043
    7. '       ' → logprob: -7.586085319519043
    8. ')+' → logprob: -8.086085319519043
    9. '[' → logprob: -8.086085319519043
    10. ')**' → logprob: -8.211085319519043

Token 1558: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03232690319418907
    2. ' //' → logprob: -3.6573269367218018
    3. ')' → logprob: -5.407326698303223
    4. '```' → logprob: -7.157326698303223
    5. '       ' → logprob: -8.032326698303223
    6. '           ' → logprob: -9.282326698303223
    7. ')//' → logprob: -9.282326698303223
    8. '   ' → logprob: -9.657326698303223
    9. '|' → logprob: -10.282326698303223
    10. '1' → logprob: -10.407326698303223

Token 1559: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -10.000053405761719
    3. '   ' → logprob: -13.250053405761719
    4. '           ' → logprob: -13.250053405761719
    5. '-' → logprob: -13.500053405761719
    6. '```' → logprob: -13.500053405761719
    7. '       ' → logprob: -14.375053405761719
    8. '               ' → logprob: -15.500053405761719
    9. '``' → logprob: -15.625053405761719
    10. '
' → logprob: -15.625053405761719

Token 1560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.625001907348633
    3. '-' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '
' → logprob: -16.000001907348633
    6. '```' → logprob: -16.125001907348633
    7. '                   ' → logprob: -16.875001907348633
    8. '           ' → logprob: -17.125001907348633
    9. '``' → logprob: -17.875001907348633
    10. '       ' → logprob: -17.875001907348633

Token 1561: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027363348752260208
    2. '())' → logprob: -4.152363300323486
    3. '           ' → logprob: -5.277363300323486
    4. '))' → logprob: -6.152363300323486
    5. '       ' → logprob: -6.527363300323486
    6. '()' → logprob: -6.777363300323486
    7. ')
' → logprob: -8.527363777160645
    8. ')]' → logprob: -8.777363777160645
    9. ')+' → logprob: -9.027363777160645
    10. '               ' → logprob: -9.027363777160645

Token 1562: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11692152917385101
    2. '<|end|>' → logprob: -2.7419214248657227
    3. ')' → logprob: -3.2419214248657227
    4. '           ' → logprob: -5.491921424865723
    5. '<|end|>' → logprob: -7.366921424865723
    6. '\n' → logprob: -8.241921424865723
    7. '        
' → logprob: -8.366921424865723
    8. '\' → logprob: -8.491921424865723
    9. ')
' → logprob: -8.866921424865723
    10. '   ' → logprob: -8.866921424865723

Token 1563: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536018431186676
    2. ':' → logprob: -1.5360183715820312
    3. ')' → logprob: -2.7860183715820312
    4. ':
' → logprob: -3.2860183715820312
    5. '           ' → logprob: -3.5360183715820312
    6. '```' → logprob: -4.286018371582031
    7. '<|end|>' → logprob: -4.411018371582031
    8. '):' → logprob: -4.536018371582031
    9. '(' → logprob: -4.786018371582031
    10. '):
' → logprob: -5.536018371582031

Token 1564: ' ceil' (ID: 35964)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30383169651031494
    2. '1' → logprob: -2.1788315773010254
    3. ''\' → logprob: -3.9288315773010254
    4. '<|end|>' → logprob: -3.9288315773010254
    5. '       ' → logprob: -4.053831577301025
    6. '           ' → logprob: -4.178831577301025
    7. '(' → logprob: -4.553831577301025
    8. ''' → logprob: -4.553831577301025
    9. '```' → logprob: -4.803831577301025
    10. 'ceil' → logprob: -5.803831577301025

Token 1565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06053340062499046
    2. ')' → logprob: -3.685533285140991
    3. '           ' → logprob: -4.81053352355957
    4. ':
' → logprob: -5.31053352355957
    5. '   ' → logprob: -5.81053352355957
    6. ')
' → logprob: -6.06053352355957
    7. '
' → logprob: -6.31053352355957
    8. ':' → logprob: -6.31053352355957
    9. '<|end|>' → logprob: -6.56053352355957
    10. '):
' → logprob: -6.68553352355957

Token 1566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29754167795181274
    2. '\n' → logprob: -2.047541618347168
    3. ':
' → logprob: -3.297541618347168
    4. '   ' → logprob: -3.797541618347168
    5. '           ' → logprob: -4.672541618347168
    6. ':' → logprob: -4.922541618347168
    7. '\' → logprob: -4.922541618347168
    8. '        
' → logprob: -5.047541618347168
    9. '```' → logprob: -5.297541618347168
    10. ':return' → logprob: -5.547541618347168

Token 1567: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009409191086888313
    2. 'return' (adapté à ' return') → logprob: -5.259409427642822
    3. '           ' → logprob: -6.259409427642822
    4. 'd' → logprob: -6.759409427642822
    5. ':
' → logprob: -8.509408950805664
    6. '   ' → logprob: -9.134408950805664
    7. ' return' → logprob: -9.259408950805664
    8. ':return' → logprob: -9.259408950805664
    9. '```' → logprob: -9.259408950805664
    10. '
' → logprob: -9.509408950805664

Token 1568: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0046927304938435555
    2. ' r' → logprob: -5.379692554473877
    3. '(r' → logprob: -9.629693031311035
    4. ' (' → logprob: -12.379693031311035
    5. '   ' → logprob: -13.254693031311035
    6. 'int' → logprob: -14.879693031311035
    7. '	r' → logprob: -16.50469207763672
    8. '       ' → logprob: -16.50469207763672
    9. '(int' → logprob: -16.87969207763672
    10. ' ' → logprob: -17.37969207763672

Token 1569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3407585322856903
    2. '<|end|>' → logprob: -2.3407585620880127
    3. '   ' → logprob: -2.7157585620880127
    4. '```' → logprob: -3.8407585620880127
    5. '<|end|>' → logprob: -3.8407585620880127
    6. '       ' → logprob: -3.9657585620880127
    7. ')' → logprob: -4.465758323669434
    8. ':' → logprob: -5.090758323669434
    9. '\n' → logprob: -5.215758323669434
    10. '+' → logprob: -5.590758323669434

Token 1570: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001105762057704851
    2. ' False' → logprob: -9.750110626220703
    3. 'True' → logprob: -9.875110626220703
    4. '(False' → logprob: -14.125110626220703
    5. '0' → logprob: -16.375110626220703
    6. '=False' → logprob: -17.750110626220703
    7. '   ' → logprob: -18.625110626220703
    8. ' True' → logprob: -19.500110626220703
    9. 'None' → logprob: -19.500110626220703
    10. '.False' → logprob: -21.000110626220703

Token 1571: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2504502236843109
    2. ':' → logprob: -2.3754501342773438
    3. ':
' → logprob: -2.3754501342773438
    4. '
' → logprob: -4.625450134277344
    5. '(' → logprob: -4.625450134277344
    6. '(
' → logprob: -5.875450134277344
    7. '```' → logprob: -5.875450134277344
    8. '       ' → logprob: -6.375450134277344
    9. '    
' → logprob: -6.625450134277344
    10. '\n' → logprob: -7.375450134277344

Token 1572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6363685131072998
    2. '       ' → logprob: -1.6363685131072998
    3. 'd' → logprob: -2.2613685131073
    4. ':
' → logprob: -2.8863685131073
    5. ':' → logprob: -3.1363685131073
    6. '
' → logprob: -3.6363685131073
    7. '(' → logprob: -4.761368751525879
    8. '```' → logprob: -4.886368751525879
    9. '\n' → logprob: -6.011368751525879
    10. '        
' → logprob: -6.136368751525879

Token 1573: ' return' (ID: 622)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.526284396648407
    2. '   ' → logprob: -1.5262844562530518
    3. '=' → logprob: -2.9012844562530518
    4. '       ' → logprob: -3.1512844562530518
    5. ':
' → logprob: -3.2762844562530518
    6. ':' → logprob: -4.151284217834473
    7. '
' → logprob: -4.776284217834473
    8. 'd' → logprob: -4.901284217834473
    9. '(' → logprob: -5.151284217834473
    10. '(d' → logprob: -6.026284217834473

Token 1574: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5772238373756409
    2. ' None' → logprob: -0.8272238373756409
    3. ''' → logprob: -7.202223777770996
    4. ' ' → logprob: -8.702223777770996
    5. '(None' → logprob: -8.952223777770996
    6. ' (' → logprob: -9.702223777770996
    7. '0' → logprob: -9.827223777770996
    8. ' '' → logprob: -10.577223777770996
    9. '(' → logprob: -10.577223777770996
    10. ')' → logprob: -10.702223777770996

Token 1575: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5637293457984924
    2. '```' → logprob: -1.3137292861938477
    3. '('\' → logprob: -3.4387292861938477
    4. '\n' → logprob: -3.6887292861938477
    5. '   ' → logprob: -4.188729286193848
    6. ':' → logprob: -4.313729286193848
    7. '(
' → logprob: -4.813729286193848
    8. 'def' → logprob: -4.938729286193848
    9. '

' → logprob: -4.938729286193848
    10. ''\' → logprob: -5.188729286193848

Token 1576: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38705408573150635
    2. 'True' → logprob: -1.1370540857315063
    3. ' True' → logprob: -9.512054443359375
    4. ' False' → logprob: -9.762054443359375
    5. '0' → logprob: -10.387054443359375
    6. 'None' → logprob: -11.012054443359375
    7. '=True' → logprob: -13.637054443359375
    8. '1' → logprob: -13.887054443359375
    9. '(False' → logprob: -13.887054443359375
    10. '(True' → logprob: -14.387054443359375

Token 1577: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6552078723907471
    2. 'def' → logprob: -1.030207872390747
    3. 'd' → logprob: -2.655207872390747
    4. ':' → logprob: -4.030207633972168
    5. ')' → logprob: -4.905207633972168
    6. '
' → logprob: -5.155207633972168
    7. '<|end|>' → logprob: -5.530207633972168
    8. '       ' → logprob: -5.780207633972168
    9. '```' → logprob: -6.030207633972168
    10. '**' → logprob: -6.155207633972168

Token 1578: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0835729837417603
    2. 'def' → logprob: -1.2085729837417603
    3. '   ' → logprob: -1.5835729837417603
    4. ')' → logprob: -2.7085728645324707
    5. '(' → logprob: -3.7085728645324707
    6. '<|end|>' → logprob: -4.708572864532471
    7. ',' → logprob: -4.958572864532471
    8. '[' → logprob: -5.208572864532471
    9. '       ' → logprob: -5.333572864532471
    10. '(
' → logprob: -5.458572864532471

Token 1579: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.47537729144096375
    2. 'evaluate' → logprob: -1.6003773212432861
    3. 'eval' → logprob: -2.475377321243286
    4. 'diff' → logprob: -2.975377321243286
    5. 'calculate' → logprob: -3.975377321243286
    6. 'compute' → logprob: -4.350377082824707
    7. 'solve' → logprob: -5.725377082824707
    8. 'dfs' → logprob: -6.225377082824707
    9. 'count' → logprob: -6.725377082824707
    10. 'dp' → logprob: -6.975377082824707

Token 1580: '_all' (ID: 13305)
  Prédit: '_expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.6329112648963928
    2. '_results' → logprob: -2.132911205291748
    3. '(expr' → logprob: -2.632911205291748
    4. '_all' → logprob: -2.757911205291748
    5. '_values' → logprob: -3.382911205291748
    6. '(s' → logprob: -3.507911205291748
    7. '('' → logprob: -4.007911205291748
    8. '_tokens' → logprob: -4.007911205291748
    9. '(tokens' → logprob: -4.007911205291748
    10. '(' → logprob: -4.132911205291748

Token 1581: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.11591353267431259
    2. '_values' → logprob: -2.8659136295318604
    3. 'results' → logprob: -3.4909136295318604
    4. '_' → logprob: -4.990913391113281
    5. '(s' → logprob: -5.240913391113281
    6. '(results' → logprob: -5.615913391113281
    7. 'values' → logprob: -6.240913391113281
    8. '_vals' → logprob: -6.865913391113281
    9. '```' → logprob: -7.115913391113281
    10. '_possible' → logprob: -7.615913391113281

Token 1582: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.010962927713990211
    2. '(expr' → logprob: -5.260962963104248
    3. '(s' → logprob: -5.885962963104248
    4. '(expression' → logprob: -6.885962963104248
    5. '(' → logprob: -7.135962963104248
    6. '(t' → logprob: -7.760962963104248
    7. '(lst' → logprob: -8.01096248626709
    8. '(token' → logprob: -9.01096248626709
    9. '(nums' → logprob: -9.88596248626709
    10. '(start' → logprob: -11.01096248626709

Token 1583: '):
' (ID: 1883)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.37676337361335754
    2. '   ' → logprob: -1.6267633438110352
    3. '):' → logprob: -2.376763343811035
    4. ',' → logprob: -4.251763343811035
    5. '):
' → logprob: -4.876763343811035
    6. '[' → logprob: -7.626763343811035
    7. '_tokens' → logprob: -7.626763343811035
    8. ')' → logprob: -8.001763343811035
    9. ':' → logprob: -8.251763343811035
    10. 'tokens' → logprob: -8.376763343811035

Token 1584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005062076961621642
    2. 'def' → logprob: -8.625506401062012
    3. 'n' → logprob: -9.000506401062012
    4. 'dp' → logprob: -9.125506401062012
    5. 'memo' → logprob: -10.375506401062012
    6. ' n' → logprob: -10.875506401062012
    7. ' memo' → logprob: -10.875506401062012
    8. '```' → logprob: -11.375506401062012
    9. 'from' → logprob: -12.375506401062012
    10. ' dp' → logprob: -12.375506401062012

Token 1585: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6502852439880371
    2. 'memo' → logprob: -1.525285243988037
    3. '   ' → logprob: -2.025285243988037
    4. 'n' → logprob: -2.650285243988037
    5. 'from' → logprob: -3.775285243988037
    6. 'cache' → logprob: -3.900285243988037
    7. 'def' → logprob: -4.650285243988037
    8. ' memo' → logprob: -6.150285243988037
    9. '```' → logprob: -6.275285243988037
    10. 'mem' → logprob: -7.525285243988037

Token 1586: ' Remove' (ID: 18141)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33736371994018555
    2. 'def' → logprob: -1.8373637199401855
    3. 'from' → logprob: -2.8373637199401855
    4. 'dp' → logprob: -3.4623637199401855
    5. '   ' → logprob: -3.5873637199401855
    6. 'memo' → logprob: -5.0873637199401855
    7. '#' → logprob: -6.4623637199401855
    8. 'if' → logprob: -6.9623637199401855
    9. 'cache' → logprob: -7.8373637199401855
    10. '
' → logprob: -8.587364196777344

Token 1587: ' parentheses' (ID: 180602)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4559350907802582
    2. 'paren' → logprob: -1.2059351205825806
    3. 'def' → logprob: -2.955935001373291
    4. 'spaces' → logprob: -5.455935001373291
    5. 'parent' → logprob: -5.955935001373291
    6. '('' → logprob: -6.080935001373291
    7. 'tokens' → logprob: -6.330935001373291
    8. ''' → logprob: -6.955935001373291
    9. 'all' → logprob: -7.330935001373291
    10. '#' → logprob: -7.830935001373291

Token 1588: ' tokens' (ID: 20290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3315274715423584
    2. '=' → logprob: -1.9565274715423584
    3. '   ' → logprob: -2.0815274715423584
    4. 'tokens' → logprob: -4.8315277099609375
    5. 'def' → logprob: -5.2065277099609375
    6. '_no' → logprob: -7.7065277099609375
    7. 'while' → logprob: -7.8315277099609375
    8. 'filtered' → logprob: -7.9565277099609375
    9. '_tokens' → logprob: -8.206527709960938
    10. 'no' → logprob: -8.581527709960938

Token 1589: ' because' (ID: 2236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47305044531822205
    2. ' =' → logprob: -1.7230504751205444
    3. 'tokens' → logprob: -2.223050355911255
    4. '=' → logprob: -2.473050355911255
    5. 'filtered' → logprob: -6.348050594329834
    6. 'def' → logprob: -6.473050594329834
    7. '(tokens' → logprob: -7.473050594329834
    8. '_tokens' → logprob: -8.348050117492676
    9. 'without' → logprob: -8.348050117492676
    10. '    
' → logprob: -8.598050117492676

Token 1590: ' in' (ID: 306)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6639626622200012
    2. 'filtered' → logprob: -0.7889626622200012
    3. '   ' → logprob: -4.4139628410339355
    4. ' tokens' → logprob: -5.1639628410339355
    5. 'new' → logprob: -5.5389628410339355
    6. ' filtered' → logprob: -5.6639628410339355
    7. '[t' → logprob: -6.1639628410339355
    8. 't' → logprob: -7.0389628410339355
    9. 'clean' → logprob: -7.5389628410339355
    10. 'expr' → logprob: -8.163962364196777

Token 1591: ' DP' (ID: 51992)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.2845301032066345
    2. 'the' → logprob: -2.5345301628112793
    3. 'def' → logprob: -3.4095301628112793
    4. 'calc' → logprob: -3.6595301628112793
    5. '[t' → logprob: -3.7845301628112793
    6. 't' → logprob: -4.159530162811279
    7. 'token' → logprob: -4.534530162811279
    8. ' tokens' → logprob: -4.534530162811279
    9. '#' → logprob: -4.784530162811279
    10. 'this' → logprob: -4.909530162811279

Token 1592: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14699915051460266
    2. ' =' → logprob: -2.3969991207122803
    3. 'tokens' → logprob: -3.5219991207122803
    4. '=' → logprob: -5.021999359130859
    5. 'def' → logprob: -6.021999359130859
    6. ':' → logprob: -6.146999359130859
    7. ' tokens' → logprob: -6.896999359130859
    8. 'filtered' → logprob: -7.271999359130859
    9. ':
' → logprob: -7.396999359130859
    10. '(tokens' → logprob: -7.896999359130859

Token 1593: ' consider' (ID: 3331)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27167969942092896
    2. ' =' → logprob: -2.271679639816284
    3. 'def' → logprob: -3.271679639816284
    4. 'remove' → logprob: -3.271679639816284
    5. 'filter' → logprob: -4.271679878234863
    6. '   ' → logprob: -4.521679878234863
    7. 'will' → logprob: -4.896679878234863
    8. 'only' → logprob: -4.896679878234863
    9. '=
' → logprob: -5.521679878234863
    10. ' only' → logprob: -6.021679878234863

Token 1594: ' all' (ID: 722)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6190371513366699
    2. '[t' → logprob: -1.36903715133667
    3. '   ' → logprob: -2.11903715133667
    4. '[token' → logprob: -3.99403715133667
    5. '[i' → logprob: -4.11903715133667
    6. 'filtered' → logprob: -4.49403715133667
    7. 'def' → logprob: -4.86903715133667
    8. '[' → logprob: -5.11903715133667
    9. '[n' → logprob: -5.61903715133667
    10. 't' → logprob: -5.61903715133667

Token 1595: ' parent' (ID: 5980)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.07817698270082474
    2. '   ' → logprob: -3.078176975250244
    3. ' tokens' → logprob: -4.453176975250244
    4. '_tokens' → logprob: -5.203176975250244
    5. 'token' → logprob: -6.078176975250244
    6. 'ops' → logprob: -6.078176975250244
    7. 'operators' → logprob: -6.828176975250244
    8. 'def' → logprob: -6.953176975250244
    9. 'the' → logprob: -7.703176975250244
    10. 'filtered' → logprob: -8.203177452087402

Token 1596: 'hes' (ID: 9780)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.01033474039286375
    2. 'hesis' → logprob: -5.2603349685668945
    3. 'tokens' → logprob: -5.7603349685668945
    4. 'hes' → logprob: -7.5103349685668945
    5. 'def' → logprob: -7.6353349685668945
    6. '_tokens' → logprob: -8.135334968566895
    7. 'h' → logprob: -8.385334968566895
    8. '   ' → logprob: -10.010334968566895
    9. '=None' → logprob: -10.010334968566895
    10. '=[]' → logprob: -10.135334968566895

Token 1597: 'izations' (ID: 25434)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.11006846278905869
    2. 'hes' → logprob: -2.4850685596466064
    3. 'hesis' → logprob: -4.360068321228027
    4. 'esized' → logprob: -5.735068321228027
    5. 'eses' → logprob: -6.485068321228027
    6. '```' → logprob: -7.235068321228027
    7. 'tokens' → logprob: -7.235068321228027
    8. 'h' → logprob: -7.235068321228027
    9. 'es' → logprob: -7.610068321228027
    10. '   ' → logprob: -8.735068321228027

Token 1598: ' anyway' (ID: 22332)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11868391931056976
    2. ' =' → logprob: -2.7436838150024414
    3. 'tokens' → logprob: -3.6186838150024414
    4. 'def' → logprob: -4.618683815002441
    5. '=' → logprob: -5.243683815002441
    6. 'filtered' → logprob: -5.993683815002441
    7. '
' → logprob: -7.243683815002441
    8. '=
' → logprob: -7.493683815002441
    9. 's' → logprob: -7.868683815002441
    10. ':' → logprob: -8.493683815002441

Token 1599: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26275771856307983
    2. 'tokens' → logprob: -1.5127577781677246
    3. 'filtered' → logprob: -4.887757778167725
    4. ' =' → logprob: -6.887757778167725
    5. 'def' → logprob: -7.387757778167725
    6. 'new' → logprob: -8.137757301330566
    7. ' tokens' → logprob: -8.387757301330566
    8. '=' → logprob: -8.387757301330566
    9. 'expr' → logprob: -8.387757301330566
    10. '
' → logprob: -9.387757301330566

Token 1600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2259344756603241
    2. 'tokens' → logprob: -1.7259345054626465
    3. 'def' → logprob: -4.1009345054626465
    4. 'expr' → logprob: -6.6009345054626465
    5. ' tokens' → logprob: -6.7259345054626465
    6. 's' → logprob: -6.8509345054626465
    7. 'filtered' → logprob: -6.9759345054626465
    8. ' =' → logprob: -7.3509345054626465
    9. 'clean' → logprob: -7.7259345054626465
    10. '```' → logprob: -7.8509345054626465

Token 1601: ' filtered' (ID: 31972)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.15131288766860962
    2. '   ' → logprob: -2.401312828063965
    3. 'filtered' (adapté à ' filtered') → logprob: -3.151312828063965
    4. ' tokens' → logprob: -6.026312828063965
    5. 'expr' → logprob: -7.151312828063965
    6. 'clean' → logprob: -7.276312828063965
    7. 'new' → logprob: -7.276312828063965
    8. 'no' → logprob: -7.651312828063965
    9. 'ts' → logprob: -8.026312828063965
    10. 'def' → logprob: -8.401312828063965

Token 1602: ' =' (ID: 314)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.14125946164131165
    2. '=' → logprob: -2.2662594318389893
    3. 'tokens' → logprob: -3.8912594318389893
    4. ' =' → logprob: -4.891259670257568
    5. '_t' → logprob: -10.64125919342041
    6. 'Tokens' → logprob: -10.89125919342041
    7. '=[]' → logprob: -11.14125919342041
    8. '```' → logprob: -11.39125919342041
    9. '=[]
' → logprob: -11.76625919342041
    10. '_=' → logprob: -12.26625919342041

Token 1603: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.22182205319404602
    2. '[token' → logprob: -1.9718220233917236
    3. '[i' → logprob: -3.7218220233917236
    4. '[c' → logprob: -4.221822261810303
    5. '[' → logprob: -4.721822261810303
    6. '[x' → logprob: -5.221822261810303
    7. '[k' → logprob: -5.471822261810303
    8. '[e' → logprob: -7.471822261810303
    9. '[]
' → logprob: -7.721822261810303
    10. '[o' → logprob: -7.846822261810303

Token 1604: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011512011289596558
    2. 'tok' → logprob: -4.51151180267334
    3. 'tk' → logprob: -8.26151180267334
    4. 'token' → logprob: -8.51151180267334
    5. 'x' → logprob: -12.88651180267334
    6. ' t' → logprob: -13.76151180267334
    7. '   ' → logprob: -15.13651180267334
    8. '
' → logprob: -15.13651180267334
    9. ' tok' → logprob: -15.63651180267334
    10. '(t' → logprob: -15.63651180267334

Token 1605: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35160937905311584
    2. 'for' → logprob: -1.2266093492507935
    3. '[' → logprob: -5.851609230041504
    4. '   ' → logprob: -8.476609230041504
    5. '    ' → logprob: -10.476609230041504
    6. '
' → logprob: -11.851609230041504
    7. '	for' → logprob: -11.851609230041504
    8. '==' → logprob: -12.351609230041504
    9. ' ' → logprob: -12.726609230041504
    10. '!=' → logprob: -12.726609230041504

Token 1606: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00017624642350710928
    2. ' t' → logprob: -8.750176429748535
    3. 'token' → logprob: -11.500176429748535
    4. 'x' → logprob: -13.000176429748535
    5. '   ' → logprob: -13.000176429748535
    6. 'tok' → logprob: -13.875176429748535
    7. '	t' → logprob: -14.500176429748535
    8. ' ' → logprob: -14.625176429748535
    9. '(t' → logprob: -15.000176429748535
    10. '_t' → logprob: -15.125176429748535

Token 1607: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.607353687286377
    2. ' in' → logprob: -0.857353687286377
    3. 't' → logprob: -3.482353687286377
    4. ' t' → logprob: -8.982353210449219
    5. ' ' → logprob: -10.232353210449219
    6. '   ' → logprob: -11.732353210449219
    7. '  ' → logprob: -12.857353210449219
    8. ')' → logprob: -12.982353210449219
    9. ',' → logprob: -12.982353210449219
    10. '(t' → logprob: -12.982353210449219

Token 1608: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.022767599672079086
    2. 'filtered' → logprob: -4.272767543792725
    3. 't' → logprob: -4.772767543792725
    4. 'token' → logprob: -9.897768020629883
    5. ' tokens' → logprob: -10.147768020629883
    6. ' filtered' → logprob: -11.897768020629883
    7. 'okens' → logprob: -12.897768020629883
    8. '(tokens' → logprob: -13.147768020629883
    9. 'x' → logprob: -13.647768020629883
    10. '```' → logprob: -13.772768020629883

Token 1609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3133009076118469
    2. ' if' → logprob: -1.3133008480072021
    3. '   ' → logprob: -10.688301086425781
    4. '       ' → logprob: -12.563301086425781
    5. '    ' → logprob: -12.688301086425781
    6. 'in' → logprob: -13.188301086425781
    7. '        ' → logprob: -13.813301086425781
    8. '[' → logprob: -13.813301086425781
    9. '	if' → logprob: -13.938301086425781
    10. '           ' → logprob: -13.938301086425781

Token 1610: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020711649267468601
    2. 'not' → logprob: -9.00020694732666
    3. ' t' → logprob: -9.50020694732666
    4. '   ' → logprob: -12.62520694732666
    5. '(t' → logprob: -12.87520694732666
    6. ' not' → logprob: -13.62520694732666
    7. 'len' → logprob: -14.00020694732666
    8. '`t' → logprob: -15.37520694732666
    9. '
' → logprob: -16.375207901000977
    10. '	t' → logprob: -16.500207901000977

Token 1611: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034717784728854895
    2. '!=' → logprob: -5.753471851348877
    3. '0' → logprob: -9.253471374511719
    4. '!=(' → logprob: -9.503471374511719
    5. 'not' → logprob: -10.753471374511719
    6. ' !=' → logprob: -10.878471374511719
    7. '```' → logprob: -10.878471374511719
    8. 'and' → logprob: -11.003471374511719
    9. '!='' → logprob: -11.628471374511719
    10. '=' → logprob: -11.753471374511719

Token 1612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '
' → logprob: -15.875000953674316
    4. '(' → logprob: -17.125
    5. '   ' → logprob: -17.625
    6. '```' → logprob: -17.625
    7. '۰' → logprob: -18.0
    8. '#' → logprob: -18.0
    9. 'type' → logprob: -18.5
    10. 'not' → logprob: -18.5

Token 1613: ']' (ID: 60)
  Prédit: '!=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.2380579710006714
    2. '!=' → logprob: -1.9880579710006714
    3. ' !=' → logprob: -2.738058090209961
    4. ' not' → logprob: -5.488058090209961
    5. ']!='' → logprob: -5.738058090209961
    6. 'not' → logprob: -6.363058090209961
    7. ']!=' → logprob: -7.863058090209961
    8. '!="' → logprob: -8.238058090209961
    9. ']' → logprob: -8.988058090209961
    10. '()!=' → logprob: -9.113058090209961

Token 1614: ' !=' (ID: 1666)
  Prédit: '!=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.43671196699142456
    2. '!=' → logprob: -1.0617120265960693
    3. ' !=' → logprob: -5.68671178817749
    4. 'not' → logprob: -5.81171178817749
    5. '!="' → logprob: -7.31171178817749
    6. ' not' → logprob: -8.186712265014648
    7. 'in' → logprob: -8.311712265014648
    8. ''' → logprob: -8.686712265014648
    9. '```' → logprob: -9.436712265014648
    10. ']!='' → logprob: -10.186712265014648

Token 1615: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010829445673152804
    2. '('' → logprob: -7.001082897186279
    3. ' '('' → logprob: -9.501083374023438
    4. '')' → logprob: -9.751083374023438
    5. ''(' → logprob: -11.001083374023438
    6. '(' → logprob: -11.751083374023438
    7. ')' → logprob: -12.626083374023438
    8. ' '' → logprob: -12.626083374023438
    9. '   ' → logprob: -13.126083374023438
    10. '"' → logprob: -14.001083374023438

Token 1616: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2522175908088684
    2. 'and' → logprob: -1.5022175312042236
    3. ')' → logprob: -9.127217292785645
    4. ')]' → logprob: -9.377217292785645
    5. ']' → logprob: -9.502217292785645
    6. '   ' → logprob: -12.002217292785645
    7. ')]
' → logprob: -12.377217292785645
    8. ']
' → logprob: -13.002217292785645
    9. ')][' → logprob: -14.127217292785645
    10. '])' → logprob: -14.127217292785645

Token 1617: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0079751992598176
    2. ' t' → logprob: -5.007975101470947
    3. '')' → logprob: -6.757975101470947
    4. '   ' → logprob: -10.132975578308105
    5. ')' → logprob: -10.757975578308105
    6. ')t' → logprob: -11.007975578308105
    7. '`t' → logprob: -12.382975578308105
    8. ' ')' → logprob: -12.882975578308105
    9. ' ' → logprob: -13.132975578308105
    10. '    ' → logprob: -13.132975578308105

Token 1618: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7228872179985046
    2. '0' → logprob: -1.0978872776031494
    3. 't' → logprob: -1.9728872776031494
    4. '')' → logprob: -3.8478872776031494
    5. ')' → logprob: -4.97288703918457
    6. ']' → logprob: -5.34788703918457
    7. '!=' → logprob: -5.72288703918457
    8. '1' → logprob: -6.34788703918457
    9. ''' → logprob: -7.34788703918457
    10. 'tokens' → logprob: -7.84788703918457

Token 1619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25675198435783386
    2. '1' → logprob: -1.5067520141601562
    3. ')' → logprob: -6.381752014160156
    4. ']' → logprob: -6.381752014160156
    5. '')' → logprob: -7.256752014160156
    6. ')]' → logprob: -7.756752014160156
    7. '']' → logprob: -9.006752014160156
    8. '')]' → logprob: -10.381752014160156
    9. '])' → logprob: -10.506752014160156
    10. '[' → logprob: -10.506752014160156

Token 1620: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6149259209632874
    2. ']' → logprob: -1.6149258613586426
    3. '[' → logprob: -2.1149258613586426
    4. ']!=' → logprob: -2.4899258613586426
    5. ' !=' → logprob: -3.4899258613586426
    6. ')' → logprob: -4.614925861358643
    7. ')!=' → logprob: -5.239925861358643
    8. '()!=' → logprob: -5.864925861358643
    9. '!='' → logprob: -6.114925861358643
    10. '       ' → logprob: -6.989925861358643

Token 1621: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0001847062085289508
    2. '!='' → logprob: -9.125185012817383
    3. ' !=' → logprob: -10.500185012817383
    4. '```' → logprob: -10.875185012817383
    5. '!==' → logprob: -11.625185012817383
    6. ']!=' → logprob: -12.375185012817383
    7. '=' → logprob: -12.500185012817383
    8. '[' → logprob: -12.875185012817383
    9. '==' → logprob: -13.000185012817383
    10. ')!=' → logprob: -13.250185012817383

Token 1622: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -9.794061770662665e-05
    2. ')' → logprob: -9.37509822845459
    3. ' ')'' → logprob: -12.87509822845459
    4. '('' → logprob: -13.25009822845459
    5. '']' → logprob: -13.25009822845459
    6. '')]' → logprob: -13.50009822845459
    7. ' ')' → logprob: -13.50009822845459
    8. '   ' → logprob: -13.62509822845459
    9. '')"' → logprob: -13.75009822845459
    10. '")' → logprob: -14.00009822845459

Token 1623: '']

' (ID: 36979)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009674042463302612
    2. ']
' → logprob: -5.259674072265625
    3. '']' → logprob: -6.009674072265625
    4. '   ' → logprob: -7.259674072265625
    5. ' and' → logprob: -7.884674072265625
    6. ')' → logprob: -8.009674072265625
    7. ')]' → logprob: -8.759674072265625
    8. '       ' → logprob: -8.884674072265625
    9. ' ]' → logprob: -9.509674072265625
    10. 'and' → logprob: -10.009674072265625

Token 1624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.942028820514679
    2. 'def' → logprob: -0.942028820514679
    3. ':' → logprob: -2.442028760910034
    4. '
' → logprob: -2.817028760910034
    5. '```' → logprob: -2.942028760910034
    6. 'filtered' → logprob: -5.817028999328613
    7. '    
' → logprob: -5.942028999328613
    8. 'tokens' → logprob: -6.067028999328613
    9. ':
' → logprob: -6.067028999328613
    10. ',' → logprob: -6.317028999328613

Token 1625: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03207676112651825
    2. 'dp' → logprob: -3.782076835632324
    3. 'def' → logprob: -5.407076835632324
    4. '   ' → logprob: -6.032076835632324
    5. 'memo' → logprob: -6.532076835632324
    6. 'if' → logprob: -8.282076835632324
    7. 'N' → logprob: -9.157076835632324
    8. 'cache' → logprob: -10.532076835632324
    9. ' n' → logprob: -10.782076835632324
    10. 'length' → logprob: -11.032076835632324

Token 1626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0702560693025589
    2. ' =' → logprob: -2.695255994796753
    3. '=len' → logprob: -8.820256233215332
    4. '   ' → logprob: -9.195256233215332
    5. '=
' → logprob: -10.570256233215332
    6. ')' → logprob: -11.945256233215332
    7. '=n' → logprob: -12.195256233215332
    8. '_filtered' → logprob: -12.320256233215332
    9. '_' → logprob: -12.695256233215332
    10. 'filtered' → logprob: -12.695256233215332

Token 1627: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015943869948387146
    2. ' len' → logprob: -9.00015926361084
    3. '(len' → logprob: -10.25015926361084
    4. '   ' → logprob: -14.50015926361084
    5. '[len' → logprob: -16.500160217285156
    6. '
' → logprob: -18.500160217285156
    7. '=len' → logprob: -18.875160217285156
    8. ' ' → logprob: -19.500160217285156
    9. ',len' → logprob: -19.625160217285156
    10. '       ' → logprob: -20.250160217285156

Token 1628: '(filtered' (ID: 143028)
  Prédit: '(filtered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filtered' → logprob: -0.07903828471899033
    2. 'filtered' → logprob: -2.579038381576538
    3. '(
' → logprob: -9.579038619995117
    4. '(' → logprob: -10.329038619995117
    5. ' filtered' → logprob: -11.079038619995117
    6. '(tokens' → logprob: -11.454038619995117
    7. '_filtered' → logprob: -11.454038619995117
    8. ' (' → logprob: -12.829038619995117
    9. '```' → logprob: -13.454038619995117
    10. 'tokens' → logprob: -13.704038619995117

Token 1629: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07484818249940872
    2. ')' → logprob: -3.074848175048828
    3. '   ' → logprob: -4.199848175048828
    4. ')
' → logprob: -4.574848175048828
    5. '    
' → logprob: -8.574848175048828
    6. 'tokens' → logprob: -8.699848175048828
    7. '```' → logprob: -9.824848175048828
    8. '  
' → logprob: -10.449848175048828
    9. 'def' → logprob: -10.574848175048828
    10. ',' → logprob: -11.074848175048828

Token 1630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16687220335006714
    2. 'dp' → logprob: -2.041872262954712
    3. ' dp' → logprob: -4.916872024536133
    4. 'if' → logprob: -5.791872024536133
    5. 'def' → logprob: -5.791872024536133
    6. '```' → logprob: -5.916872024536133
    7. ' if' → logprob: -6.041872024536133
    8. '
' → logprob: -6.166872024536133
    9. ' res' → logprob: -7.666872024536133
    10. ' memo' → logprob: -7.791872024536133

Token 1631: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00163947360124439
    2. '   ' → logprob: -6.876639366149902
    3. 'results' → logprob: -7.626639366149902
    4. 'res' → logprob: -9.876639366149902
    5. 'DP' → logprob: -11.001639366149902
    6. 'memo' → logprob: -11.126639366149902
    7. '
' → logprob: -11.251639366149902
    8. '#' (adapté à ' #') → logprob: -11.751639366149902
    9. ' dp' → logprob: -12.251639366149902
    10. 'result' → logprob: -12.751639366149902

Token 1632: ' filtered' (ID: 31972)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008916259743273258
    2. '   ' → logprob: -5.25891637802124
    3. 'res' → logprob: -6.00891637802124
    4. 'results' → logprob: -7.38391637802124
    5. 'from' → logprob: -8.383915901184082
    6. 'values' → logprob: -8.883915901184082
    7. 'memo' → logprob: -9.633915901184082
    8. 'vals' → logprob: -9.883915901184082
    9. 'DP' → logprob: -10.133915901184082
    10. ' dp' → logprob: -10.633915901184082

Token 1633: ' tokens' (ID: 20290)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.3294963836669922
    2. '_filtered' → logprob: -1.3294963836669922
    3. 'tokens' → logprob: -2.079496383666992
    4. 'filtered' → logprob: -2.329496383666992
    5. '_' → logprob: -2.829496383666992
    6. 'if' → logprob: -3.204496383666992
    7. '```' → logprob: -3.454496383666992
    8. 'def' → logprob: -3.954496383666992
    9. '   ' → logprob: -4.079496383666992
    10. '=' → logprob: -4.329496383666992

Token 1634: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0456761121749878
    2. 'tokens' → logprob: -1.4206761121749878
    3. '[
' → logprob: -2.4206762313842773
    4. 'filtered' → logprob: -2.7956762313842773
    5. '
' → logprob: -3.1706762313842773
    6. '_tokens' → logprob: -3.1706762313842773
    7. '[' → logprob: -3.5456762313842773
    8. '_filtered' → logprob: -3.5456762313842773
    9. '```' → logprob: -3.6706762313842773
    10. '=' → logprob: -4.045676231384277

Token 1635: ' num' (ID: 2269)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.9094967842102051
    2. '[' → logprob: -1.034496784210205
    3. 'filtered' → logprob: -2.284496784210205
    4. '[]' → logprob: -3.409496784210205
    5. '[num' → logprob: -3.409496784210205
    6. 'tokens' → logprob: -4.534496784210205
    7. 'num' → logprob: -4.534496784210205
    8. '[]
' → logprob: -4.534496784210205
    9. '[
' → logprob: -4.659496784210205
    10. '('' → logprob: -4.659496784210205

Token 1636: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05379895865917206
    2. ',' → logprob: -3.9287989139556885
    3. ' =' → logprob: -4.553799152374268
    4. '[' → logprob: -5.428799152374268
    5. '_tokens' → logprob: -5.428799152374268
    6. '=' → logprob: -6.053799152374268
    7. 'tokens' → logprob: -6.428799152374268
    8. ')' → logprob: -6.553799152374268
    9. '   ' → logprob: -6.553799152374268
    10. '
' → logprob: -7.053799152374268

Token 1637: ' operators' (ID: 29893)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9333407282829285
    2. 'filtered' → logprob: -1.4333407878875732
    3. 'operators' → logprob: -1.9333407878875732
    4. ''+' → logprob: -2.5583407878875732
    5. 'operator' → logprob: -2.6833407878875732
    6. '('' → logprob: -4.183340549468994
    7. ''op' → logprob: -4.433340549468994
    8. ''' → logprob: -4.808340549468994
    9. '('+' → logprob: -4.808340549468994
    10. '   ' → logprob: -5.183340549468994

Token 1638: ' alternatively' (ID: 112475)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15478259325027466
    2. '   ' → logprob: -2.52978253364563
    3. '
' → logprob: -3.15478253364563
    4. 'res' → logprob: -4.154782772064209
    5. 'results' → logprob: -6.779782772064209
    6. 'result' → logprob: -7.029782772064209
    7. '#' → logprob: -7.529782772064209
    8. '    
' → logprob: -7.904782772064209
    9. 'DP' → logprob: -8.02978229522705
    10. '`' → logprob: -8.15478229522705

Token 1639: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05172477290034294
    2. '
' → logprob: -3.301724672317505
    3. ',' → logprob: -5.176724910736084
    4. '```' → logprob: -6.551724910736084
    5. 'def' → logprob: -6.801724910736084
    6. '    
' → logprob: -7.301724910736084
    7. '[
' → logprob: -7.551724910736084
    8. ',
' → logprob: -7.551724910736084
    9. 'tokens' → logprob: -7.676724910736084
    10. ' if' → logprob: -7.926724910736084

Token 1640: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26536381244659424
    2. 'with' → logprob: -1.5153638124465942
    3. '0' → logprob: -5.140363693237305
    4. 'at' → logprob: -5.390363693237305
    5. '   ' → logprob: -6.890363693237305
    6. '=' → logprob: -7.140363693237305
    7. 'and' → logprob: -7.640363693237305
    8. ' from' → logprob: -8.640363693237305
    9. ' with' → logprob: -8.765363693237305
    10. 'i' → logprob: -9.390363693237305

Token 1641: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.07843966037034988
    2. 'num' → logprob: -3.078439712524414
    3. ' ending' → logprob: -3.578439712524414
    4. 'with' → logprob: -7.828439712524414
    5. 'number' → logprob: -8.203439712524414
    6. '   ' → logprob: -9.078439712524414
    7. 'then' → logprob: -9.078439712524414
    8. ' num' → logprob: -9.578439712524414
    9. 'token' → logprob: -9.828439712524414
    10. 'end' → logprob: -10.078439712524414

Token 1642: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.03942202031612396
    2. '[' → logprob: -4.164422035217285
    3. ' with' → logprob: -4.414422035217285
    4. '('' → logprob: -5.664422035217285
    5. ',' → logprob: -6.414422035217285
    6. '   ' → logprob: -6.539422035217285
    7. 'tokens' → logprob: -6.664422035217285
    8. '=' → logprob: -7.164422035217285
    9. '0' → logprob: -7.164422035217285
    10. ' =' → logprob: -8.664422035217285

Token 1643: ' num' (ID: 2269)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03500939533114433
    2. ''' → logprob: -3.6600093841552734
    3. 'num' → logprob: -5.285009384155273
    4. ''t' → logprob: -6.285009384155273
    5. ''n' → logprob: -7.535009384155273
    6. ' ('' → logprob: -8.285009384155273
    7. ''a' → logprob: -8.660009384155273
    8. 'a' → logprob: -9.035009384155273
    9. '`' → logprob: -9.035009384155273
    10. ''type' → logprob: -9.160009384155273

Token 1644: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050244592130184174
    2. '
' → logprob: -3.6752445697784424
    3. 'def' → logprob: -4.5502448081970215
    4. ':' → logprob: -6.1752448081970215
    5. '    
' → logprob: -6.5502448081970215
    6. ' =' → logprob: -6.5502448081970215
    7. '```' → logprob: -6.5502448081970215
    8. ',' → logprob: -6.6752448081970215
    9. ':
' → logprob: -6.8002448081970215
    10. ')
' → logprob: -7.9252448081970215

Token 1645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010696647688746452
    2. '```' → logprob: -5.3856964111328125
    3. '[' → logprob: -6.7606964111328125
    4. ' =' → logprob: -7.1356964111328125
    5. '
' → logprob: -7.2606964111328125
    6. ',' → logprob: -7.3856964111328125
    7. '`' → logprob: -7.7606964111328125
    8. ':' → logprob: -7.7606964111328125
    9. '[
' → logprob: -7.7606964111328125
    10. '``' → logprob: -8.510696411132812

Token 1646: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020495640113949776
    2. '   ' → logprob: -4.020495414733887
    3. 'results' → logprob: -6.770495414733887
    4. 'res' → logprob: -7.020495414733887
    5. 'DP' → logprob: -9.270495414733887
    6. ' dp' → logprob: -10.020495414733887
    7. '#' (adapté à ' #') → logprob: -10.520495414733887
    8. 'if' → logprob: -10.770495414733887
    9. 'result' → logprob: -10.895495414733887
    10. 'values' → logprob: -10.895495414733887

Token 1647: ' Make' (ID: 9393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003864919999614358
    2. '   ' → logprob: -6.253864765167236
    3. '#' → logprob: -7.253864765167236
    4. 'res' → logprob: -8.253865242004395
    5. 'results' → logprob: -8.503865242004395
    6. 'memo' → logprob: -8.503865242004395
    7. 'from' → logprob: -8.628865242004395
    8. 'values' → logprob: -9.128865242004395
    9. 'vals' → logprob: -9.753865242004395
    10. 'DP' → logprob: -9.878865242004395

Token 1648: ' list' (ID: 1562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10995451360940933
    2. 'nums' → logprob: -2.859954595565796
    3. ' dp' → logprob: -4.234954357147217
    4. 'num' → logprob: -4.359954357147217
    5. '   ' → logprob: -5.359954357147217
    6. 'vals' → logprob: -5.484954357147217
    7. 'values' → logprob: -5.484954357147217
    8. ' nums' → logprob: -6.609954357147217
    9. 'n' → logprob: -6.984954357147217
    10. 'value' → logprob: -7.109954357147217

Token 1649: ' of' (ID: 328)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.5943387150764465
    2. 'values' → logprob: -1.0943386554718018
    3. 'nums' → logprob: -2.8443386554718018
    4. '   ' → logprob: -3.9693386554718018
    5. ' =' → logprob: -3.9693386554718018
    6. 'filtered' → logprob: -5.219338893890381
    7. 'num' → logprob: -5.719338893890381
    8. 'tokens' → logprob: -6.219338893890381
    9. '=' → logprob: -6.469338893890381
    10. 'numbers' → logprob: -7.344338893890381

Token 1650: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.17820844054222107
    2. 'nums' → logprob: -2.428208351135254
    3. 'vals' → logprob: -2.803208351135254
    4. 'numbers' → logprob: -5.428208351135254
    5. 'num' → logprob: -5.678208351135254
    6. 'tokens' → logprob: -6.053208351135254
    7. 'filtered' → logprob: -6.303208351135254
    8. 'results' → logprob: -7.553208351135254
    9. 'ints' → logprob: -8.053208351135254
    10. ' values' → logprob: -8.178208351135254

Token 1651: ' and' (ID: 326)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5687589049339294
    2. 'vals' → logprob: -0.9437589049339294
    3. '   ' → logprob: -3.818758964538574
    4. ' =' → logprob: -4.193758964538574
    5. '=' → logprob: -5.693758964538574
    6. 'nums' → logprob: -5.818758964538574
    7. 'v' → logprob: -8.193758964538574
    8. ' values' → logprob: -8.318758964538574
    9. ' vals' → logprob: -8.443758964538574
    10. 'val' → logprob: -9.068758964538574

Token 1652: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0007142199319787323
    2. 'operators' → logprob: -7.500714302062988
    3. 'types' → logprob: -8.875714302062988
    4. 'op' → logprob: -12.000714302062988
    5. ' ops' → logprob: -12.125714302062988
    6. '   ' → logprob: -12.375714302062988
    7. '#' → logprob: -12.875714302062988
    8. '
' → logprob: -14.125714302062988
    9. '```' → logprob: -14.625714302062988
    10. 'opts' → logprob: -14.625714302062988

Token 1653: '
' (ID: 198)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.17268286645412445
    2. 'vals' → logprob: -1.9226828813552856
    3. '   ' → logprob: -4.422682762145996
    4. 'nums' → logprob: -9.047682762145996
    5. 'val' → logprob: -9.172682762145996
    6. ' values' → logprob: -9.297682762145996
    7. ' vals' → logprob: -10.547682762145996
    8. '    
' → logprob: -11.922682762145996
    9. '_vals' → logprob: -11.922682762145996
    10. '_values' → logprob: -12.172682762145996

Token 1654: '   ' (ID: 271)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.060717497020959854
    2. 'vals' → logprob: -3.0607175827026367
    3. '   ' → logprob: -4.685717582702637
    4. ' values' → logprob: -6.685717582702637
    5. 'nums' → logprob: -7.185717582702637
    6. ' =' → logprob: -7.935717582702637
    7. '_values' → logprob: -8.685717582702637
    8. '=' → logprob: -9.185717582702637
    9. ' vals' → logprob: -10.060717582702637
    10. '_vals' → logprob: -10.185717582702637

Token 1655: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.058929625898599625
    2. 'vals' → logprob: -2.933929681777954
    3. ' values' → logprob: -5.933929443359375
    4. 'nums' → logprob: -7.558929443359375
    5. ' vals' → logprob: -8.058929443359375
    6. '[
' → logprob: -8.558929443359375
    7. '[' → logprob: -9.183929443359375
    8. 'val' → logprob: -9.558929443359375
    9. 'v' → logprob: -9.683929443359375
    10. 'tokens' → logprob: -10.558929443359375

Token 1656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742918312549591
    2. ' =' → logprob: -0.9742918014526367
    3. '=[' → logprob: -9.349291801452637
    4. '=[]' → logprob: -9.974291801452637
    5. ',' → logprob: -10.099291801452637
    6. '=[]
' → logprob: -11.349291801452637
    7. '   ' → logprob: -11.349291801452637
    8. '[' → logprob: -11.974291801452637
    9. ' =[' → logprob: -12.724291801452637
    10. '=[
' → logprob: -13.599291801452637

Token 1657: ' []
' (ID: 8911)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.16832393407821655
    2. '[]
' → logprob: -1.9183239936828613
    3. '[' → logprob: -5.668323993682861
    4. '[i' → logprob: -5.793323993682861
    5. '[token' → logprob: -7.543323993682861
    6. '[]' → logprob: -7.793323993682861
    7. '[v' → logprob: -7.918323993682861
    8. '[
' → logprob: -9.793323516845703
    9. '[x' → logprob: -10.043323516845703
    10. '[]

' → logprob: -10.543323516845703

Token 1658: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9384883642196655
    2. 'tokens' → logprob: -2.063488483428955
    3. '=' → logprob: -2.438488483428955
    4. '   ' → logprob: -2.563488483428955
    5. 'for' → logprob: -2.813488483428955
    6. '[' → logprob: -2.938488483428955
    7. '```' → logprob: -3.563488483428955
    8. '.append' → logprob: -3.813488483428955
    9. '=[]
' → logprob: -3.938488483428955
    10. '[]' → logprob: -3.938488483428955

Token 1659: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.027521323412656784
    2. 'operators' → logprob: -3.7775213718414307
    3. 'for' → logprob: -5.777521133422852
    4. ' ops' → logprob: -8.027521133422852
    5. 'i' → logprob: -8.277521133422852
    6. '   ' → logprob: -8.902521133422852
    7. '[i' → logprob: -9.152521133422852
    8. 'tokens' → logprob: -9.277521133422852
    9. '
' → logprob: -9.527521133422852
    10. '[' → logprob: -10.277521133422852

Token 1660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2528093457221985
    2. ' =' → logprob: -1.5028092861175537
    3. '   ' → logprob: -7.377809524536133
    4. '=[]' → logprob: -8.752809524536133
    5. '=[]
' → logprob: -10.127809524536133
    6. ',' → logprob: -10.502809524536133
    7. '.append' → logprob: -11.127809524536133
    8. '    ' → logprob: -12.877809524536133
    9. 'tokens' → logprob: -12.877809524536133
    10. ')' → logprob: -13.252809524536133

Token 1661: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0985172912478447
    2. '[]
' → logprob: -2.4735171794891357
    3. '[' → logprob: -5.098517417907715
    4. ' []' → logprob: -6.473517417907715
    5. '[t' → logprob: -6.598517417907715
    6. ' []
' → logprob: -8.223517417907715
    7. '[]

' → logprob: -9.598517417907715
    8. '[
' → logprob: -9.973517417907715
    9. '[token' → logprob: -10.348517417907715
    10. ' [' → logprob: -10.598517417907715

Token 1662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7595979571342468
    2. 'for' → logprob: -1.5095980167388916
    3. ' for' → logprob: -1.7595980167388916
    4. '[' → logprob: -3.2595980167388916
    5. ' =' → logprob: -3.2595980167388916
    6. '  
' → logprob: -4.5095977783203125
    7. '```' → logprob: -4.5095977783203125
    8. ' 
' → logprob: -5.0095977783203125
    9. '    
' → logprob: -5.1345977783203125
    10. 'i' → logprob: -5.2595977783203125

Token 1663: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8260058164596558
    2. 'for' (adapté à ' for') → logprob: -0.9510058164596558
    3. 'i' → logprob: -2.5760059356689453
    4. '   ' → logprob: -2.8260059356689453
    5. ' i' → logprob: -3.4510059356689453
    6. '[' → logprob: -5.826005935668945
    7. ' =' → logprob: -6.951005935668945
    8. ':' → logprob: -7.451005935668945
    9. '[i' → logprob: -7.576005935668945
    10. '```' → logprob: -7.576005935668945

Token 1664: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003095838939771056
    2. 'tok' → logprob: -6.378095626831055
    3. 'token' → logprob: -7.253095626831055
    4. 'i' → logprob: -7.378095626831055
    5. ' t' → logprob: -10.128095626831055
    6. 'tk' → logprob: -11.628095626831055
    7. '   ' → logprob: -12.128095626831055
    8. 'idx' → logprob: -13.503095626831055
    9. 'x' → logprob: -13.878095626831055
    10. 'tt' → logprob: -14.128095626831055

Token 1665: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2812485098838806
    2. ' in' → logprob: -1.4062485694885254
    3. '   ' → logprob: -10.281248092651367
    4. 'i' → logprob: -10.406248092651367
    5. ',' → logprob: -11.531248092651367
    6. '=' → logprob: -11.906248092651367
    7. ' ' → logprob: -12.656248092651367
    8. '```' → logprob: -12.656248092651367
    9. '0' → logprob: -13.031248092651367
    10. 'if' → logprob: -13.656248092651367

Token 1666: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007281593861989677
    2. ' t' → logprob: -7.500728130340576
    3. 'token' → logprob: -9.000728607177734
    4. 'tok' → logprob: -9.875728607177734
    5. '   ' → logprob: -15.625728607177734
    6. ' token' → logprob: -15.750728607177734
    7. ' tok' → logprob: -17.000728607177734
    8. '`t' → logprob: -17.125728607177734
    9. 'tk' → logprob: -18.125728607177734
    10. '	t' → logprob: -18.375728607177734

Token 1667: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602916568517685
    2. ' in' → logprob: -1.9102916717529297
    3. 'if' → logprob: -11.03529167175293
    4. '=' → logprob: -11.66029167175293
    5. '   ' → logprob: -11.66029167175293
    6. 't' → logprob: -12.03529167175293
    7. '```' → logprob: -12.28529167175293
    8. '
' → logprob: -12.41029167175293
    9. ')' → logprob: -12.66029167175293
    10. 's' → logprob: -13.16029167175293

Token 1668: ' enumerate' (ID: 29671)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.177907332777977
    2. 'tokens' → logprob: -2.1779072284698486
    3. '('' → logprob: -3.8029072284698486
    4. 't' → logprob: -4.177907466888428
    5. ' filtered' → logprob: -5.552907466888428
    6. '(filtered' → logprob: -5.802907466888428
    7. 'enumer' → logprob: -7.052907466888428
    8. '(' → logprob: -7.177907466888428
    9. '(tokens' → logprob: -7.427907466888428
    10. '(('' → logprob: -7.552907466888428

Token 1669: '(filtered' (ID: 143028)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.01787773333489895
    2. 'tokens' → logprob: -4.142877578735352
    3. 't' → logprob: -7.017877578735352
    4. ' filtered' → logprob: -7.392877578735352
    5. '(filtered' → logprob: -8.142877578735352
    6. '(tokens' → logprob: -11.142877578735352
    7. '   ' → logprob: -11.767877578735352
    8. ' tokens' → logprob: -12.142877578735352
    9. '_filtered' → logprob: -12.642877578735352
    10. ')' → logprob: -13.392877578735352

Token 1670: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05022010579705238
    2. ':
' → logprob: -3.300220012664795
    3. '       ' → logprob: -4.800220012664795
    4. '():
' → logprob: -6.175220012664795
    5. '   ' → logprob: -7.425220012664795
    6. ':' → logprob: -7.550220012664795
    7. '):' → logprob: -7.925220012664795
    8. ''):
' → logprob: -8.300220489501953
    9. '
' → logprob: -11.675220489501953
    10. ']:
' → logprob: -11.800220489501953

Token 1671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015541665256023407
    2. 'if' → logprob: -4.7655415534973145
    3. ' if' → logprob: -5.6405415534973145
    4. '```' → logprob: -5.7655415534973145
    5. '   ' → logprob: -9.140542030334473
    6. ':' → logprob: -10.640542030334473
    7. '[' → logprob: -11.265542030334473
    8. '`' → logprob: -11.390542030334473
    9. ':
' → logprob: -11.765542030334473
    10. ' ' → logprob: -12.015542030334473

Token 1672: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05576692149043083
    2. '       ' → logprob: -3.3057668209075928
    3. ' if' → logprob: -4.055767059326172
    4. '           ' → logprob: -8.930767059326172
    5. '```' → logprob: -9.430767059326172
    6. '   ' → logprob: -10.680767059326172
    7. '	if' → logprob: -12.555767059326172
    8. ' ' → logprob: -12.805767059326172
    9. 'If' → logprob: -13.055767059326172
    10. '​' → logprob: -14.430767059326172

Token 1673: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00013083349040243775
    2. ' t' → logprob: -9.250130653381348
    3. 'i' → logprob: -10.375130653381348
    4. '`t' → logprob: -12.875130653381348
    5. '   ' → logprob: -14.875130653381348
    6. ' i' → logprob: -15.500130653381348
    7. '	t' → logprob: -15.750130653381348
    8. ' ' → logprob: -16.375131607055664
    9. 'tokens' → logprob: -16.750131607055664
    10. '```' → logprob: -17.375131607055664

Token 1674: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16189460456371307
    2. ' %' → logprob: -1.9118945598602295
    3. '==' → logprob: -6.536894798278809
    4. '0' → logprob: -8.786894798278809
    5. ' ==' → logprob: -9.911894798278809
    6. '[' → logprob: -12.411894798278809
    7. '#' → logprob: -12.786894798278809
    8. ')' → logprob: -13.286894798278809
    9. '=' → logprob: -13.536894798278809
    10. '```' → logprob: -13.536894798278809

Token 1675: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31461387872695923
    2. '2' → logprob: -1.3146138191223145
    3. '==' → logprob: -6.8146138191223145
    4. ' ' → logprob: -9.314614295959473
    5. '1' → logprob: -9.439614295959473
    6. '=' → logprob: -9.689614295959473
    7. '```' → logprob: -11.689614295959473
    8. ' ==' → logprob: -11.939614295959473
    9. '
' → logprob: -12.814614295959473
    10. '`' → logprob: -13.689614295959473

Token 1676: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0031793788075447083
    2. ' ==' → logprob: -5.753179550170898
    3. '==
' → logprob: -14.003179550170898
    4. '=' → logprob: -14.753179550170898
    5. '()==' → logprob: -14.878179550170898
    6. ')==' → logprob: -16.6281795501709
    7. '===' → logprob: -17.3781795501709
    8. ']==' → logprob: -17.5031795501709
    9. '```' → logprob: -18.3781795501709
    10. '0' → logprob: -18.6281795501709

Token 1677: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '==' → logprob: -16.75006675720215
    4. '   ' → logprob: -17.37506675720215
    5. '=' → logprob: -18.37506675720215
    6. '
' → logprob: -18.87506675720215
    7. '```' → logprob: -19.25006675720215
    8. 'num' → logprob: -19.87506675720215
    9. '       ' → logprob: -20.00006675720215
    10. ''' → logprob: -20.12506675720215

Token 1678: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -14.125006675720215
    4. '==' → logprob: -15.750006675720215
    5. '1' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.75000762939453
    7. '```' → logprob: -18.00000762939453
    8. '
' → logprob: -18.37500762939453
    9. '     ' → logprob: -19.25000762939453
    10. '  ' → logprob: -19.62500762939453

Token 1679: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2992250621318817
    2. '           ' → logprob: -1.799225091934204
    3. ':' → logprob: -2.674225091934204
    4. '==' → logprob: -4.049224853515625
    5. 'tokens' → logprob: -6.549224853515625
    6. ' ==' → logprob: -6.924224853515625
    7. '.values' → logprob: -7.174224853515625
    8. '=' → logprob: -7.424224853515625
    9. '       ' → logprob: -7.674224853515625
    10. ',' → logprob: -7.674224853515625

Token 1680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08590304851531982
    2. 'values' → logprob: -2.5859031677246094
    3. '.values' → logprob: -5.210903167724609
    4. 'tokens' → logprob: -7.585903167724609
    5. '(values' → logprob: -7.710903167724609
    6. ' values' → logprob: -8.33590316772461
    7. ':
' → logprob: -9.58590316772461
    8. '	values' → logprob: -9.96090316772461
    9. '_values' → logprob: -10.33590316772461
    10. '=' → logprob: -10.58590316772461

Token 1681: ' #' (ID: 1069)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -6.749814019713085e-06
    2. ' values' → logprob: -12.250006675720215
    3. '           ' → logprob: -13.250006675720215
    4. '               ' → logprob: -17.37500762939453
    5. 'tokens' → logprob: -17.37500762939453
    6. '	values' → logprob: -17.37500762939453
    7. '       ' → logprob: -17.50000762939453
    8. '.values' → logprob: -18.87500762939453
    9. '(values' → logprob: -19.00000762939453
    10. '   ' → logprob: -19.25000762939453

Token 1682: ' num' (ID: 2269)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -5.466968650580384e-05
    2. 'if' → logprob: -10.750054359436035
    3. ' values' → logprob: -10.750054359436035
    4. 'assert' → logprob: -11.875054359436035
    5. '           ' → logprob: -12.375054359436035
    6. 't' → logprob: -15.375054359436035
    7. '               ' → logprob: -16.12505531311035
    8. '       ' → logprob: -16.62505531311035
    9. '(values' → logprob: -16.62505531311035
    10. '	values' → logprob: -17.00005531311035

Token 1683: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9370208978652954
    2. '=' → logprob: -1.4370208978652954
    3. ' =' → logprob: -1.9370208978652954
    4. '.append' → logprob: -2.562020778656006
    5. '           ' → logprob: -2.562020778656006
    6. 'values' → logprob: -3.812020778656006
    7. 'tokens' → logprob: -4.187020778656006
    8. '[' → logprob: -4.687020778656006
    9. ')' → logprob: -5.437020778656006
    10. ':' → logprob: -6.062020778656006

Token 1684: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6786064505577087
    2. ' =' → logprob: -1.8036065101623535
    3. '.append' → logprob: -1.8036065101623535
    4. 'tokens' → logprob: -2.6786065101623535
    5. '           ' → logprob: -3.1786065101623535
    6. ',' → logprob: -3.8036065101623535
    7. ')' → logprob: -4.5536065101623535
    8. 's' → logprob: -5.9286065101623535
    9. ' tokens' → logprob: -6.3036065101623535
    10. 'values' → logprob: -6.4286065101623535

Token 1685: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.00011689399980241433
    2. '           ' → logprob: -9.500117301940918
    3. ' values' → logprob: -10.250117301940918
    4. '       ' → logprob: -12.875117301940918
    5. '               ' → logprob: -12.875117301940918
    6. '	values' → logprob: -14.000117301940918
    7. '   ' → logprob: -14.750117301940918
    8. '(values' → logprob: -15.750117301940918
    9. '.values' → logprob: -16.6251163482666
    10. 'VALUES' → logprob: -18.2501163482666

Token 1686: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.010204589925706387
    2. '=' → logprob: -4.885204792022705
    3. '.' → logprob: -6.135204792022705
    4. 'append' → logprob: -8.135204315185547
    5. '           ' → logprob: -9.760204315185547
    6. ' =' → logprob: -10.135204315185547
    7. '.=' → logprob: -11.385204315185547
    8. 'Append' → logprob: -12.135204315185547
    9. ' .' → logprob: -12.260204315185547
    10. ').' → logprob: -12.510204315185547

Token 1687: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.876193169271573e-05
    2. ' t' → logprob: -9.375088691711426
    3. '(t' → logprob: -12.875088691711426
    4. '`t' → logprob: -13.625088691711426
    5. '   ' → logprob: -16.875089645385742
    6. '	t' → logprob: -17.250089645385742
    7. ')t' → logprob: -17.500089645385742
    8. '```' → logprob: -18.125089645385742
    9. '[t' → logprob: -18.250089645385742
    10. '_t' → logprob: -18.375089645385742

Token 1688: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023846338444855064
    2. ')[' → logprob: -9.875238418579102
    3. ',' → logprob: -10.125238418579102
    4. ''[' → logprob: -10.375238418579102
    5. '   ' → logprob: -10.625238418579102
    6. '1' → logprob: -11.125238418579102
    7. '][' → logprob: -11.250238418579102
    8. '0' → logprob: -11.375238418579102
    9. ''' → logprob: -11.625238418579102
    10. ' [' → logprob: -12.125238418579102

Token 1689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3145151734352112
    2. ''' → logprob: -1.3145151138305664
    3. 'num' → logprob: -7.564515113830566
    4. ''type' → logprob: -8.814515113830566
    5. ''value' → logprob: -8.814515113830566
    6. ''int' → logprob: -9.564515113830566
    7. '0' → logprob: -10.064515113830566
    8. ''t' → logprob: -10.064515113830566
    9. '"' → logprob: -10.064515113830566
    10. '
' → logprob: -10.439515113830566

Token 1690: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016256680246442556
    2. ')
' → logprob: -6.5016255378723145
    3. '       ' → logprob: -9.376626014709473
    4. '           ' → logprob: -11.251626014709473
    5. '))' → logprob: -11.751626014709473
    6. '])' → logprob: -11.876626014709473
    7. '   ' → logprob: -12.126626014709473
    8. '())' → logprob: -13.126626014709473
    9. '               ' → logprob: -14.251626014709473
    10. ')]' → logprob: -15.126626014709473

Token 1691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.0536883615423e-05
    2. '   ' → logprob: -10.000080108642578
    3. 'else' → logprob: -11.000080108642578
    4. '           ' → logprob: -11.500080108642578
    5. ' else' → logprob: -13.000080108642578
    6. ')' → logprob: -13.250080108642578
    7. '```' → logprob: -13.750080108642578
    8. ',' → logprob: -14.000080108642578
    9. '
' → logprob: -14.250080108642578
    10. 'elif' → logprob: -15.250080108642578

Token 1692: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06274060904979706
    2. 'else' (adapté à ' else') → logprob: -2.8127405643463135
    3. ' else' → logprob: -7.187740802764893
    4. '   ' → logprob: -11.437740325927734
    5. 'elif' → logprob: -12.312740325927734
    6. '           ' → logprob: -14.312740325927734
    7. '```' → logprob: -15.062740325927734
    8. '	else' → logprob: -15.062740325927734
    9. '	' → logprob: -15.812740325927734
    10. '
' → logprob: -17.062740325927734

Token 1693: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1390708088874817
    2. '           ' → logprob: -2.764070749282837
    3. ':' → logprob: -3.264070749282837
    4. ':
' → logprob: -4.639070987701416
    5. '_ops' → logprob: -4.764070987701416
    6. ',' → logprob: -5.764070987701416
    7. ' ops' → logprob: -6.014070987701416
    8. '<|end|>' → logprob: -6.514070987701416
    9. 'ops' → logprob: -6.764070987701416
    10. 'op' → logprob: -7.889070987701416

Token 1694: '           ' (ID: 352)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.4828425347805023
    2. '       ' → logprob: -0.9828425645828247
    3. ' ops' → logprob: -5.107842445373535
    4. '           ' → logprob: -6.857842445373535
    5. '_ops' → logprob: -7.107842445373535
    6. 'op' → logprob: -7.732842445373535
    7. '   ' → logprob: -8.857842445373535
    8. '.ops' → logprob: -9.107842445373535
    9. '```' → logprob: -10.232842445373535
    10. 'operations' → logprob: -11.732842445373535

Token 1695: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.003144681453704834
    2. '           ' → logprob: -6.00314474105835
    3. ' ops' → logprob: -8.003144264221191
    4. '       ' → logprob: -8.503144264221191
    5. 'op' → logprob: -9.753144264221191
    6. '_ops' → logprob: -10.253144264221191
    7. '.ops' → logprob: -11.253144264221191
    8. '   ' → logprob: -11.753144264221191
    9. '               ' → logprob: -12.378144264221191
    10. '```' → logprob: -12.753144264221191

Token 1696: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4909736216068268
    2. '=' → logprob: -0.9909735918045044
    3. ' =' → logprob: -4.115973472595215
    4. '.' → logprob: -7.990973472595215
    5. ')' → logprob: -10.240973472595215
    6. 'append' → logprob: -10.365973472595215
    7. '           ' → logprob: -11.490973472595215
    8. ' .' → logprob: -11.615973472595215
    9. '   ' → logprob: -12.740973472595215
    10. ').' → logprob: -12.990973472595215

Token 1697: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.063052698969841
    2. '(t' → logprob: -2.8130526542663574
    3. ' t' → logprob: -6.938052654266357
    4. ' (' → logprob: -9.938053131103516
    5. 'tokens' → logprob: -10.688053131103516
    6. '`t' → logprob: -11.063053131103516
    7. '(' → logprob: -11.313053131103516
    8. '	t' → logprob: -12.063053131103516
    9. ')t' → logprob: -12.438053131103516
    10. '   ' → logprob: -13.688053131103516

Token 1698: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004258969333022833
    2. '0' → logprob: -6.25425910949707
    3. '(' → logprob: -7.12925910949707
    4. '][' → logprob: -7.75425910949707
    5. ''' → logprob: -8.37925910949707
    6. ')' → logprob: -8.87925910949707
    7. '   ' → logprob: -9.12925910949707
    8. '('' → logprob: -9.25425910949707
    9. ''][' → logprob: -9.50425910949707
    10. ''[' → logprob: -9.50425910949707

Token 1699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -11.50001335144043
    3. '(' → logprob: -14.12501335144043
    4. '1' → logprob: -14.75001335144043
    5. '][' → logprob: -14.87501335144043
    6. ''' → logprob: -15.12501335144043
    7. '
' → logprob: -15.37501335144043
    8. ')' → logprob: -15.50001335144043
    9. '   ' → logprob: -15.50001335144043
    10. ' ' → logprob: -15.62501335144043

Token 1700: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2068125307559967
    2. '])' → logprob: -1.7068125009536743
    3. ')]' → logprob: -5.956812381744385
    4. ')])' → logprob: -6.081812381744385
    5. ''])' → logprob: -8.206812858581543
    6. '))' → logprob: -9.831812858581543
    7. ']' → logprob: -9.956812858581543
    8. '   ' → logprob: -10.331812858581543
    9. '       ' → logprob: -10.706812858581543
    10. ')
' → logprob: -10.956812858581543

Token 1701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33937397599220276
    2. '
' → logprob: -1.5893739461898804
    3. 'dp' → logprob: -2.71437406539917
    4. '```' → logprob: -4.96437406539917
    5. '    
' → logprob: -5.58937406539917
    6. 'def' → logprob: -5.71437406539917
    7. '       ' → logprob: -6.58937406539917
    8. '_dp' → logprob: -7.46437406539917
    9. '

' → logprob: -8.714373588562012
    10. ')' → logprob: -8.714373588562012

Token 1702: ' memo' (ID: 46393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008832485415041447
    2. '   ' → logprob: -4.7588324546813965
    3. 'memo' (adapté à ' memo') → logprob: -8.883832931518555
    4. 'def' → logprob: -10.508832931518555
    5. 'from' → logprob: -11.258832931518555
    6. 'res' → logprob: -11.383832931518555
    7. '#' → logprob: -11.883832931518555
    8. '
' → logprob: -12.008832931518555
    9. 'DP' → logprob: -12.508832931518555
    10. '    
' → logprob: -12.758832931518555

Token 1703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762907862663269
    2. ' =' → logprob: -0.8262907862663269
    3. '   ' → logprob: -8.70129108428955
    4. '={(' → logprob: -10.20129108428955
    5. '={}' → logprob: -10.32629108428955
    6. '={' → logprob: -10.45129108428955
    7. ':' → logprob: -11.20129108428955
    8. '[(' → logprob: -11.20129108428955
    9. '```' → logprob: -11.20129108428955
    10. '={}
' → logprob: -11.57629108428955

Token 1704: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -8.41866585687967e-06
    2. '{}

' → logprob: -13.000008583068848
    3. '{}
' → logprob: -13.000008583068848
    4. '{' → logprob: -13.250008583068848
    5. 'dict' → logprob: -13.250008583068848
    6. ' {}' → logprob: -15.750008583068848
    7. '[' → logprob: -16.87500762939453
    8. '{}\' → logprob: -17.37500762939453
    9. '{})' → logprob: -17.50000762939453
    10. '={}' → logprob: -18.12500762939453

Token 1705: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059147629886865616
    2. '   ' → logprob: -3.309147596359253
    3. '```' → logprob: -4.684147834777832
    4. ' def' → logprob: -5.184147834777832
    5. '(' → logprob: -5.684147834777832
    6. 'for' → logprob: -6.684147834777832
    7. '`' → logprob: -8.184147834777832
    8. '``' → logprob: -8.309147834777832
    9. '(
' → logprob: -8.559147834777832
    10. ' for' → logprob: -8.684147834777832

Token 1706: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019511185586452484
    2. 'i' → logprob: -5.1445112228393555
    3. '(i' → logprob: -5.2695112228393555
    4. '(' → logprob: -5.3945112228393555
    5. '(
' → logprob: -6.3945112228393555
    6. '   ' → logprob: -7.0195112228393555
    7. ' def' → logprob: -7.2695112228393555
    8. '```' → logprob: -8.144511222839355
    9. '`' → logprob: -9.394511222839355
    10. '
' → logprob: -10.269511222839355

Token 1707: ' dfs' (ID: 51252)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.416823148727417
    2. 'dfs' → logprob: -1.166823148727417
    3. 'solve' → logprob: -4.416823387145996
    4. 'compute' → logprob: -4.666823387145996
    5. 'dp' → logprob: -4.916823387145996
    6. ' calc' → logprob: -7.791823387145996
    7. ' dfs' → logprob: -9.166823387145996
    8. 'calculate' → logprob: -10.416823387145996
    9. '_calc' → logprob: -10.416823387145996
    10. '(calc' → logprob: -10.541823387145996

Token 1708: '(l' (ID: 4179)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3337235450744629
    2. '(l' → logprob: -1.583723545074463
    3. '(start' → logprob: -2.708723545074463
    4. '(' → logprob: -4.583723545074463
    5. '(left' → logprob: -7.333723545074463
    6. '(idx' → logprob: -8.458723068237305
    7. '(s' → logprob: -8.583723068237305
    8. '((' → logprob: -9.333723068237305
    9. '(
' → logprob: -9.458723068237305
    10. ' (' → logprob: -9.583723068237305

Token 1709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0596667118370533
    2. ',l' → logprob: -2.934666633605957
    3. ' ,' → logprob: -5.434666633605957
    4. '   ' → logprob: -8.684666633605957
    5. ',n' → logprob: -9.434666633605957
    6. ',r' → logprob: -10.059666633605957
    7. ',f' → logprob: -11.309666633605957
    8. ',b' → logprob: -11.559666633605957
    9. ',u' → logprob: -11.684666633605957
    10. ',
' → logprob: -11.809666633605957

Token 1710: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00048644188791513443
    2. ' r' → logprob: -7.750486373901367
    3. '   ' → logprob: -9.875486373901367
    4. 'l' → logprob: -12.750486373901367
    5. '```' → logprob: -15.000486373901367
    6. '
' → logprob: -15.750486373901367
    7. '(r' → logprob: -16.000486373901367
    8. '    ' → logprob: -16.125486373901367
    9. ',' → logprob: -16.125486373901367
    10. '       ' → logprob: -16.250486373901367

Token 1711: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04572377726435661
    2. '):
' → logprob: -3.2957236766815186
    3. ':' → logprob: -5.920723915100098
    4. '       ' → logprob: -6.170723915100098
    5. '   ' → logprob: -6.545723915100098
    6. ',' → logprob: -7.545723915100098
    7. ')' → logprob: -8.920723915100098
    8. '<|end|>' → logprob: -9.045723915100098
    9. '<|end|>' → logprob: -9.045723915100098
    10. '+' → logprob: -9.420723915100098

Token 1712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018230482935905457
    2. '    ' → logprob: -4.643230438232422
    3. '        ' → logprob: -5.268230438232422
    4. '   ' → logprob: -7.268230438232422
    5. '           ' → logprob: -7.518230438232422
    6. ''' → logprob: -7.518230438232422
    7. '```' → logprob: -8.018230438232422
    8. ' ' → logprob: -8.643230438232422
    9. ':' → logprob: -9.018230438232422
    10. ' (' → logprob: -9.268230438232422

Token 1713: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5049836039543152
    2. ' if' → logprob: -1.00498366355896
    3. '       ' → logprob: -3.50498366355896
    4. '   ' → logprob: -8.629983901977539
    5. '           ' → logprob: -9.504983901977539
    6. '```' → logprob: -9.629983901977539
    7. '        ' → logprob: -10.629983901977539
    8. '    ' → logprob: -11.754983901977539
    9. '	if' → logprob: -12.254983901977539
    10. '
' → logprob: -12.504983901977539

Token 1714: ' calc' (ID: 25691)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004424667276907712
    2. ' if' → logprob: -8.000442504882812
    3. ')' → logprob: -10.125442504882812
    4. '   ' → logprob: -10.750442504882812
    5. '       ' → logprob: -10.875442504882812
    6. '(' → logprob: -11.375442504882812
    7. '(
' → logprob: -12.250442504882812
    8. '           ' → logprob: -13.125442504882812
    9. 'return' → logprob: -13.750442504882812
    10. '):' → logprob: -13.875442504882812

Token 1715: ' all' (ID: 722)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06574947386980057
    2. '(' → logprob: -2.940749406814575
    3. '_' → logprob: -4.565749645233154
    4. '(
' → logprob: -9.315749168395996
    5. ' (' → logprob: -9.940749168395996
    6. '_(' → logprob: -9.940749168395996
    7. ')' → logprob: -10.190749168395996
    8. '   ' → logprob: -10.315749168395996
    9. '_l' → logprob: -10.315749168395996
    10. '(_' → logprob: -11.190749168395996

Token 1716: ' results' (ID: 4376)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.538080096244812
    2. 'results' → logprob: -1.663080096244812
    3. 'possible' → logprob: -2.0380802154541016
    4. '(' → logprob: -2.7880802154541016
    5. '_results' → logprob: -4.413080215454102
    6. '_possible' → logprob: -5.038080215454102
    7. ' possible' → logprob: -5.663080215454102
    8. ')' → logprob: -5.788080215454102
    9. 'values' → logprob: -6.788080215454102
    10. '(
' → logprob: -6.913080215454102

Token 1717: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7166754007339478
    2. '       ' → logprob: -1.0916754007339478
    3. '           ' → logprob: -2.216675281524658
    4. '   ' → logprob: -3.841675281524658
    5. '(' → logprob: -4.466675281524658
    6. ' if' → logprob: -5.091675281524658
    7. ',' → logprob: -5.716675281524658
    8. ' (' → logprob: -5.716675281524658
    9. ' :' → logprob: -5.716675281524658
    10. '):' → logprob: -6.341675281524658

Token 1718: ' values' (ID: 4824)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00017469677550252527
    2. ' l' → logprob: -9.250174522399902
    3. 'values' → logprob: -9.875174522399902
    4. '   ' → logprob: -10.750174522399902
    5. '(l' → logprob: -13.250174522399902
    6. ' values' → logprob: -13.375174522399902
    7. '```' → logprob: -14.500174522399902
    8. 'tokens' → logprob: -14.750174522399902
    9. '
' → logprob: -15.000174522399902
    10. ')' → logprob: -15.000174522399902

Token 1719: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.018735451623797417
    2. '[' → logprob: -4.393735408782959
    3. ',' → logprob: -5.518735408782959
    4. ',l' → logprob: -6.643735408782959
    5. '   ' → logprob: -7.893735408782959
    6. '```' → logprob: -8.268735885620117
    7. '[
' → logprob: -9.268735885620117
    8. '``' → logprob: -10.268735885620117
    9. '       ' → logprob: -10.893735885620117
    10. ' [' → logprob: -11.143735885620117

Token 1720: ':r' (ID: 118417)
  Prédit: ':l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':l' → logprob: -0.8975904583930969
    2. ',' → logprob: -1.3975903987884521
    3. '],' → logprob: -1.5225903987884521
    4. ']' → logprob: -3.397590398788452
    5. ':' → logprob: -3.522590398788452
    6. ',l' → logprob: -4.272590637207031
    7. '       ' → logprob: -4.897590637207031
    8. '+' → logprob: -5.022590637207031
    9. ':r' → logprob: -5.147590637207031
    10. '   ' → logprob: -5.272590637207031

Token 1721: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2050328105688095
    2. ']' → logprob: -2.3300328254699707
    3. ',' → logprob: -2.7050328254699707
    4. '],' → logprob: -5.330032825469971
    5. '   ' → logprob: -5.455032825469971
    6. ' +' → logprob: -5.580032825469971
    7. ']:
' → logprob: -5.830032825469971
    8. ']
' → logprob: -6.830032825469971
    9. '+l' → logprob: -7.080032825469971
    10. ',l' → logprob: -7.580032825469971

Token 1722: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5811243057250977
    2. '+' → logprob: -0.8311243057250977
    3. ']
' → logprob: -5.456124305725098
    4. ']+' → logprob: -7.706124305725098
    5. '])' → logprob: -8.956124305725098
    6. ' +' → logprob: -9.206124305725098
    7. ')' → logprob: -9.331124305725098
    8. '   ' → logprob: -10.456124305725098
    9. '],' → logprob: -10.706124305725098
    10. '1' → logprob: -10.831124305725098

Token 1723: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.060088038444519
    2. ']:
' → logprob: -1.685088038444519
    3. '):
' → logprob: -2.3100881576538086
    4. '+' → logprob: -2.3100881576538086
    5. ']):
' → logprob: -2.4350881576538086
    6. ']:' → logprob: -3.0600881576538086
    7. '       ' → logprob: -3.1850881576538086
    8. '   ' → logprob: -3.1850881576538086
    9. ']):' → logprob: -3.4350881576538086
    10. '):' → logprob: -5.185088157653809

Token 1724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02947123348712921
    2. ':' → logprob: -3.7794711589813232
    3. '           ' → logprob: -6.529471397399902
    4. '   ' → logprob: -7.029471397399902
    5. '```' → logprob: -7.154471397399902
    6. ',' → logprob: -7.279471397399902
    7. '{' → logprob: -7.779471397399902
    8. '):' → logprob: -7.779471397399902
    9. '(' → logprob: -8.154471397399902
    10. '[' → logprob: -8.529471397399902

Token 1725: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6035560369491577
    2. ' if' → logprob: -1.1035560369491577
    3. 'if' (adapté à ' if') → logprob: -3.1035561561584473
    4. '(' → logprob: -3.8535561561584473
    5. '        ' → logprob: -3.9785561561584473
    6. ' (' → logprob: -4.228556156158447
    7. '           ' → logprob: -4.978556156158447
    8. ':' → logprob: -5.103556156158447
    9. '   ' → logprob: -6.103556156158447
    10. '(
' → logprob: -6.478556156158447

Token 1726: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007206532754935324
    2. ' l' → logprob: -7.250720500946045
    3. '       ' → logprob: -12.000720977783203
    4. '   ' → logprob: -13.250720977783203
    5. '     ' → logprob: -13.750720977783203
    6. '    ' → logprob: -14.000720977783203
    7. '           ' → logprob: -14.625720977783203
    8. '      ' → logprob: -15.375720977783203
    9. '        ' → logprob: -15.875720977783203
    10. ' ' → logprob: -17.125720977783203

Token 1727: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3425219549390022e-05
    2. ' l' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.75001335144043
    4. ')' → logprob: -13.87501335144043
    5. '       ' → logprob: -15.00001335144043
    6. '_l' → logprob: -15.12501335144043
    7. '```' → logprob: -16.12501335144043
    8. ',l' → logprob: -16.25001335144043
    9. ',' → logprob: -16.37501335144043
    10. '(l' → logprob: -16.62501335144043

Token 1728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09226208180189133
    2. ',l' → logprob: -2.592262029647827
    3. '==' → logprob: -4.467262268066406
    4. ')' → logprob: -8.092262268066406
    5. ' ==' → logprob: -8.217262268066406
    6. '+' → logprob: -8.342262268066406
    7. ',
' → logprob: -8.842262268066406
    8. ',n' → logprob: -9.092262268066406
    9. '   ' → logprob: -9.342262268066406
    10. ',r' → logprob: -9.467262268066406

Token 1729: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008581006550230086
    2. 'l' → logprob: -7.125858306884766
    3. ')' → logprob: -10.500858306884766
    4. '   ' → logprob: -11.250858306884766
    5. ' r' → logprob: -12.375858306884766
    6. ',' → logprob: -12.625858306884766
    7. '       ' → logprob: -13.625858306884766
    8. '```' → logprob: -14.000858306884766
    9. '           ' → logprob: -14.500858306884766
    10. '    ' → logprob: -14.625858306884766

Token 1730: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04315344616770744
    2. ')==' → logprob: -3.4181535243988037
    3. '==' → logprob: -4.793153285980225
    4. ']==' → logprob: -7.793153285980225
    5. ' ==' → logprob: -8.168153762817383
    6. '       ' → logprob: -8.668153762817383
    7. ']' → logprob: -9.793153762817383
    8. '):
' → logprob: -10.043153762817383
    9. '   ' → logprob: -10.168153762817383
    10. '[' → logprob: -10.918153762817383

Token 1731: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1310812532901764
    2. ' ==' → logprob: -2.1310813426971436
    3. ']==' → logprob: -6.6310811042785645
    4. '[' → logprob: -7.3810811042785645
    5. ')' → logprob: -7.6310811042785645
    6. '==
' → logprob: -8.006081581115723
    7. ':' → logprob: -8.131081581115723
    8. ')==' → logprob: -8.256081581115723
    9. '```' → logprob: -8.881081581115723
    10. ']' → logprob: -8.881081581115723

Token 1732: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.6240566083070007e-06
    2. ' memo' → logprob: -13.500001907348633
    3. '
' → logprob: -16.750001907348633
    4. 'memory' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.375001907348633
    6. 'm' → logprob: -18.375001907348633
    7. '```' → logprob: -19.875001907348633
    8. 'mem' → logprob: -20.000001907348633
    9. '.memo' → logprob: -20.375001907348633
    10. 'mutex' → logprob: -21.125001907348633

Token 1733: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20221629738807678
    2. '       ' → logprob: -2.077216386795044
    3. ':
' → logprob: -2.952216386795044
    4. '           ' → logprob: -5.952216148376465
    5. ':return' → logprob: -7.327216148376465
    6. '<|end|>' → logprob: -7.452216148376465
    7. '=' → logprob: -8.077216148376465
    8. '```' → logprob: -8.077216148376465
    9. '<|end|>' → logprob: -8.452216148376465
    10. '):
' → logprob: -8.452216148376465

Token 1734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02116066962480545
    2. '       ' → logprob: -3.89616060256958
    3. '               ' → logprob: -8.021161079406738
    4. ':' → logprob: -9.521161079406738
    5. '```' → logprob: -9.646161079406738
    6. '        ' → logprob: -10.271161079406738
    7. '   ' → logprob: -10.771161079406738
    8. '          ' → logprob: -10.896161079406738
    9. '{' → logprob: -11.146161079406738
    10. ',' → logprob: -11.646161079406738

Token 1735: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9452588558197021
    2. '           ' → logprob: -0.9452588558197021
    3. 'return' (adapté à ' return') → logprob: -1.5702588558197021
    4. ' return' → logprob: -5.195259094238281
    5. ':return' → logprob: -5.320259094238281
    6. '               ' → logprob: -6.070259094238281
    7. '   ' → logprob: -6.945259094238281
    8. '```' → logprob: -7.945259094238281
    9. ':' → logprob: -8.070259094238281
    10. ':
' → logprob: -9.445259094238281

Token 1736: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.00041970983147621155
    2. ' memo' → logprob: -7.875419616699219
    3. '       ' → logprob: -10.875419616699219
    4. '           ' → logprob: -11.250419616699219
    5. '   ' → logprob: -13.000419616699219
    6. '     ' → logprob: -13.625419616699219
    7. '         ' → logprob: -13.875419616699219
    8. '        ' → logprob: -14.250419616699219
    9. '      ' → logprob: -14.375419616699219
    10. '    ' → logprob: -14.750419616699219

Token 1737: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.07064647227525711
    2. '(l' → logprob: -3.1956465244293213
    3. '       ' → logprob: -3.9456465244293213
    4. '[l' → logprob: -5.445646286010742
    5. '((' → logprob: -6.445646286010742
    6. '
' → logprob: -7.320646286010742
    7. '           ' → logprob: -7.695646286010742
    8. '```' → logprob: -8.445646286010742
    9. '[' → logprob: -9.070646286010742
    10. '        ' → logprob: -9.570646286010742

Token 1738: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.650518920039758e-06
    2. '           ' → logprob: -13.625003814697266
    3. '   ' → logprob: -14.375003814697266
    4. ',l' → logprob: -14.625003814697266
    5. '       ' → logprob: -14.750003814697266
    6. ')' → logprob: -14.875003814697266
    7. ' l' → logprob: -15.375003814697266
    8. ',' → logprob: -15.875003814697266
    9. '(l' → logprob: -16.250003814697266
    10. '	l' → logprob: -17.250003814697266

Token 1739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14584487676620483
    2. ',l' → logprob: -2.0208449363708496
    3. '+' → logprob: -5.89584493637085
    4. '+l' → logprob: -8.395844459533691
    5. ',r' → logprob: -10.145844459533691
    6. '   ' → logprob: -10.270844459533691
    7. '       ' → logprob: -10.520844459533691
    8. ' ,' → logprob: -11.020844459533691
    9. 'l' → logprob: -11.145844459533691
    10. ',(' → logprob: -12.020844459533691

Token 1740: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.143808109802194e-05
    2. ' r' → logprob: -11.000041007995605
    3. 'l' → logprob: -11.625041007995605
    4. '   ' → logprob: -11.875041007995605
    5. '       ' → logprob: -13.000041007995605
    6. ')' → logprob: -13.250041007995605
    7. '           ' → logprob: -13.500041007995605
    8. ',' → logprob: -13.750041007995605
    9. ',r' → logprob: -15.000041007995605
    10. '         ' → logprob: -15.875041007995605

Token 1741: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3345678448677063
    2. ')]' → logprob: -1.3345677852630615
    3. ']
' → logprob: -4.709568023681641
    4. '       ' → logprob: -4.959568023681641
    5. ')]
' → logprob: -5.834568023681641
    6. ')' → logprob: -6.584568023681641
    7. '])' → logprob: -8.45956802368164
    8. ']:
' → logprob: -8.45956802368164
    9. ']:' → logprob: -9.08456802368164
    10. '   ' → logprob: -9.58456802368164

Token 1742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01304375659674406
    2. ':' → logprob: -4.5130438804626465
    3. ':
' → logprob: -6.7630438804626465
    4. '           ' → logprob: -8.013043403625488
    5. '```' → logprob: -9.138043403625488
    6. '[' → logprob: -9.638043403625488
    7. ':return' → logprob: -9.763043403625488
    8. '   ' → logprob: -10.138043403625488
    9. '):' → logprob: -10.513043403625488
    10. ' :' → logprob: -10.513043403625488

Token 1743: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13946326076984406
    2. '       ' → logprob: -2.139463186264038
    3. ' if' → logprob: -4.389463424682617
    4. 'results' → logprob: -10.889463424682617
    5. '```' → logprob: -11.514463424682617
    6. 'result' → logprob: -12.014463424682617
    7. 'res' → logprob: -12.139463424682617
    8. '           ' → logprob: -12.514463424682617
    9. '   ' → logprob: -12.514463424682617
    10. '
' → logprob: -14.514463424682617

Token 1744: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4736459888808895e-05
    2. '       ' → logprob: -11.750014305114746
    3. ' l' → logprob: -12.000014305114746
    4. '           ' → logprob: -14.375014305114746
    5. '   ' → logprob: -16.250015258789062
    6. '     ' → logprob: -18.500015258789062
    7. '	l' → logprob: -18.625015258789062
    8. '        ' → logprob: -19.250015258789062
    9. '_l' → logprob: -19.750015258789062
    10. '      ' → logprob: -19.750015258789062

Token 1745: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004319268278777599
    2. ' ==' → logprob: -5.504319190979004
    3. '==
' → logprob: -8.504319190979004
    4. ']==' → logprob: -11.629319190979004
    5. '```' → logprob: -11.629319190979004
    6. '===' → logprob: -11.879319190979004
    7. ')==' → logprob: -12.129319190979004
    8. '==(' → logprob: -13.254319190979004
    9. '[' → logprob: -13.504319190979004
    10. '>' → logprob: -13.629319190979004

Token 1746: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.704273118884885e-07
    2. ' r' → logprob: -15.000000953674316
    3. '       ' → logprob: -15.750000953674316
    4. '           ' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '     ' → logprob: -18.75
    7. '```' → logprob: -19.125
    8. 'l' → logprob: -19.375
    9. '               ' → logprob: -19.375
    10. '         ' → logprob: -19.875

Token 1747: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.364723801612854
    2. ':' → logprob: -1.614723801612854
    3. '           ' → logprob: -2.8647236824035645
    4. '       ' → logprob: -3.3647236824035645
    5. ':return' → logprob: -4.2397236824035645
    6. '[' → logprob: -8.489724159240723
    7. '               ' → logprob: -9.239724159240723
    8. '   ' → logprob: -9.739724159240723
    9. 'return' → logprob: -9.989724159240723
    10. '):
' → logprob: -9.989724159240723

Token 1748: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31459349393844604
    2. '       ' → logprob: -1.3145935535430908
    3. 'return' → logprob: -6.689593315124512
    4. '               ' → logprob: -10.439593315124512
    5. ' return' → logprob: -11.189593315124512
    6. '```' → logprob: -11.564593315124512
    7. '   ' → logprob: -11.814593315124512
    8. '        ' → logprob: -11.814593315124512
    9. '         ' → logprob: -12.314593315124512
    10. '          ' → logprob: -12.314593315124512

Token 1749: ' memo' (ID: 46393)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9182363748550415
    2. 'return' → logprob: -1.5432363748550415
    3. '{return' → logprob: -1.6682363748550415
    4. '[' → logprob: -2.418236255645752
    5. '[(' → logprob: -3.168236255645752
    6. '{'' → logprob: -3.793236255645752
    7. '{
' → logprob: -4.168236255645752
    8. '       ' → logprob: -4.918236255645752
    9. '   ' → logprob: -5.043236255645752
    10. '({'' → logprob: -5.168236255645752

Token 1750: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0013111939188092947
    2. '=' → logprob: -6.751311302185059
    3. '[l' → logprob: -9.251311302185059
    4. '[' → logprob: -10.751311302185059
    5. '[
' → logprob: -11.751311302185059
    6. '       ' → logprob: -12.501311302185059
    7. '=(' → logprob: -12.751311302185059
    8. ' =' → logprob: -12.876311302185059
    9. '   ' → logprob: -13.751311302185059
    10. '=
' → logprob: -13.751311302185059

Token 1751: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.869017852295656e-06
    2. '   ' → logprob: -12.625006675720215
    3. ' l' → logprob: -13.375006675720215
    4. '           ' → logprob: -13.875006675720215
    5. ')' → logprob: -14.125006675720215
    6. '       ' → logprob: -15.625006675720215
    7. ''l' → logprob: -16.37500762939453
    8. ' ' → logprob: -17.37500762939453
    9. '```' → logprob: -17.50000762939453
    10. '	l' → logprob: -17.87500762939453

Token 1752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19443044066429138
    2. ')]' → logprob: -2.194430351257324
    3. ']' → logprob: -3.444430351257324
    4. ',l' → logprob: -3.694430351257324
    5. '][' → logprob: -6.319430351257324
    6. ')' → logprob: -6.319430351257324
    7. '],' → logprob: -6.444430351257324
    8. ')][' → logprob: -7.194430351257324
    9. '       ' → logprob: -7.694430351257324
    10. '           ' → logprob: -7.694430351257324

Token 1753: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00022153646568767726
    2. ')' → logprob: -8.875221252441406
    3. 'r' → logprob: -10.500221252441406
    4. '   ' → logprob: -11.125221252441406
    5. ''l' → logprob: -11.500221252441406
    6. ')]' → logprob: -11.875221252441406
    7. ' l' → logprob: -12.125221252441406
    8. ']' → logprob: -12.750221252441406
    9. '),' → logprob: -13.500221252441406
    10. 'values' → logprob: -13.750221252441406

Token 1754: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011652224930003285
    2. ']=' → logprob: -7.001165390014648
    3. ')' → logprob: -8.376165390014648
    4. '       ' → logprob: -12.001165390014648
    5. '           ' → logprob: -12.001165390014648
    6. ')]' → logprob: -12.376165390014648
    7. ']=(' → logprob: -12.501165390014648
    8. ')=' → logprob: -14.126165390014648
    9. '   ' → logprob: -14.376165390014648
    10. '=' → logprob: -14.376165390014648

Token 1755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001173321157693863
    2. ' =' → logprob: -6.751173496246338
    3. '           ' → logprob: -13.37617301940918
    4. '       ' → logprob: -13.62617301940918
    5. '=[' → logprob: -15.62617301940918
    6. '   ' → logprob: -16.50117301940918
    7. '=
' → logprob: -16.62617301940918
    8. '=[]' → logprob: -17.50117301940918
    9. ']=' → logprob: -18.00117301940918
    10. ']' → logprob: -18.25117301940918

Token 1756: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9049620032310486
    2. '[' → logprob: -1.4049620628356934
    3. '[(' → logprob: -1.5299620628356934
    4. '([' → logprob: -2.4049620628356934
    5. 'set' → logprob: -3.7799620628356934
    6. '({' → logprob: -4.779962062835693
    7. '(set' → logprob: -4.904962062835693
    8. '([(' → logprob: -5.904962062835693
    9. '[{' → logprob: -6.654962062835693
    10. '(' → logprob: -8.779961585998535

Token 1757: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.24684497714042664
    2. '{' → logprob: -2.246845006942749
    3. '([(' → logprob: -2.246845006942749
    4. '({' → logprob: -4.99684476852417
    5. '((' → logprob: -8.496845245361328
    6. '(' → logprob: -8.746845245361328
    7. '([
' → logprob: -9.746845245361328
    8. '([{' → logprob: -9.871845245361328
    9. '(([' → logprob: -11.371845245361328
    10. '()' → logprob: -11.621845245361328

Token 1758: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.005359567701816559
    2. '(values' → logprob: -5.255359649658203
    3. ' values' → logprob: -9.130359649658203
    4. '       ' → logprob: -12.005359649658203
    5. '           ' → logprob: -12.255359649658203
    6. '   ' → logprob: -12.380359649658203
    7. '	values' → logprob: -13.755359649658203
    8. '{' → logprob: -15.255359649658203
    9. '               ' → logprob: -15.255359649658203
    10. '(' → logprob: -15.505359649658203

Token 1759: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00010318557906430215
    2. '(l' → logprob: -9.375102996826172
    3. '[
' → logprob: -12.125102996826172
    4. '][' → logprob: -12.500102996826172
    5. '   ' → logprob: -12.750102996826172
    6. '[' → logprob: -13.125102996826172
    7. '       ' → logprob: -13.375102996826172
    8. ']' → logprob: -14.250102996826172
    9. '```' → logprob: -14.875102996826172
    10. '[(' → logprob: -14.875102996826172

Token 1760: ']])
' (ID: 62818)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.21538391709327698
    2. '])' → logprob: -1.7153838872909546
    3. '       ' → logprob: -4.590384006500244
    4. ')])
' → logprob: -6.590384006500244
    5. '])]
' → logprob: -7.465384006500244
    6. ']])
' → logprob: -7.590384006500244
    7. ')])' → logprob: -7.715384006500244
    8. '])]' → logprob: -7.965384006500244
    9. '           ' → logprob: -8.090383529663086
    10. '   ' → logprob: -9.965383529663086

Token 1761: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4467373490333557
    2. '           ' → logprob: -1.071737289428711
    3. '               ' → logprob: -4.821737289428711
    4. '```' → logprob: -4.821737289428711
    5. '   ' → logprob: -7.321737289428711
    6. ')' → logprob: -7.946737289428711
    7. '``' → logprob: -8.821737289428711
    8. '\n' → logprob: -8.821737289428711
    9. '                   ' → logprob: -9.696737289428711
    10. '\t' → logprob: -9.946737289428711

Token 1762: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035369666875340044
    2. '       ' → logprob: -8.250353813171387
    3. 'return' (adapté à ' return') → logprob: -9.375353813171387
    4. '   ' → logprob: -12.750353813171387
    5. '```' → logprob: -12.875353813171387
    6. '               ' → logprob: -13.750353813171387
    7. '	       ' → logprob: -15.250353813171387
    8. '		' → logprob: -15.500353813171387
    9. ' return' → logprob: -16.25035285949707
    10. '         ' → logprob: -16.62535285949707

Token 1763: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0036308348644524813
    2. '{' → logprob: -5.878630638122559
    3. 'set' → logprob: -7.503630638122559
    4. ' memo' → logprob: -8.878630638122559
    5. '   ' → logprob: -9.253630638122559
    6. '           ' → logprob: -11.003630638122559
    7. '       ' → logprob: -11.378630638122559
    8. '
' → logprob: -13.378630638122559
    9. '               ' → logprob: -13.378630638122559
    10. '  ' → logprob: -13.503630638122559

Token 1764: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.8921695047756657e-05
    2. '((' → logprob: -11.000028610229492
    3. '(l' → logprob: -11.375028610229492
    4. '(' → logprob: -15.375028610229492
    5. '   ' → logprob: -16.625028610229492
    6. '[
' → logprob: -16.750028610229492
    7. '       ' → logprob: -17.125028610229492
    8. '```' → logprob: -17.125028610229492
    9. ',' → logprob: -17.375028610229492
    10. '[' → logprob: -17.500028610229492

Token 1765: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12694616615772247
    2. 'r' → logprob: -2.126946210861206
    3. '   ' → logprob: -12.001946449279785
    4. ')' → logprob: -12.376946449279785
    5. '(r' → logprob: -12.751946449279785
    6. '(l' → logprob: -13.126946449279785
    7. ' l' → logprob: -14.001946449279785
    8. '           ' → logprob: -14.751946449279785
    9. '```' → logprob: -15.126946449279785
    10. '       ' → logprob: -15.626946449279785

Token 1766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011272187111899257
    2. ',r' → logprob: -9.625112533569336
    3. '+' → logprob: -10.250112533569336
    4. 'r' → logprob: -12.250112533569336
    5. '   ' → logprob: -13.125112533569336
    6. ',l' → logprob: -13.250112533569336
    7. ' ,' → logprob: -14.000112533569336
    8. '       ' → logprob: -14.375112533569336
    9. 'l' → logprob: -15.125112533569336
    10. '           ' → logprob: -15.375112533569336

Token 1767: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.735893965815194e-05
    2. ' r' → logprob: -11.125017166137695
    3. 'l' → logprob: -13.750017166137695
    4. '(r' → logprob: -14.250017166137695
    5. ')' → logprob: -14.875017166137695
    6. '   ' → logprob: -15.750017166137695
    7. '(l' → logprob: -16.375017166137695
    8. '           ' → logprob: -16.625017166137695
    9. ' (' → logprob: -17.375017166137695
    10. '_r' → logprob: -17.500017166137695

Token 1768: ')]
' (ID: 11587)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05653891712427139
    2. '])
' → logprob: -3.5565388202667236
    3. '][' → logprob: -4.181539058685303
    4. '])' → logprob: -4.931539058685303
    5. '[l' → logprob: -6.681539058685303
    6. ']' → logprob: -7.056539058685303
    7. '       ' → logprob: -7.306539058685303
    8. '(l' → logprob: -7.681539058685303
    9. '   ' → logprob: -8.431538581848145
    10. ')' → logprob: -9.181538581848145

Token 1769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015085970517247915
    2. '```' → logprob: -9.625150680541992
    3. '	' → logprob: -10.500150680541992
    4. '   ' → logprob: -10.875150680541992
    5. '
' → logprob: -11.250150680541992
    6. '        
' → logprob: -12.125150680541992
    7. ')' → logprob: -12.375150680541992
    8. '           ' → logprob: -12.375150680541992
    9. '​' → logprob: -13.000150680541992
    10. ' ' → logprob: -13.250150680541992

Token 1770: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.46508949995040894
    2. 'results' → logprob: -1.4650895595550537
    3. '       ' → logprob: -1.9650895595550537
    4. '   ' → logprob: -7.590089321136475
    5. '        
' → logprob: -9.715089797973633
    6. 'result' → logprob: -9.965089797973633
    7. 'ans' → logprob: -10.215089797973633
    8. ' res' → logprob: -10.840089797973633
    9. ' results' → logprob: -11.590089797973633
    10. '
' → logprob: -11.590089797973633

Token 1771: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08915114402770996
    2. '=' → logprob: -2.46415114402771
    3. 's' → logprob: -8.589151382446289
    4. '   ' → logprob: -11.214151382446289
    5. '=[]' → logprob: -12.964151382446289
    6. '       ' → logprob: -12.964151382446289
    7. '=set' → logprob: -13.089151382446289
    8. '={}' → logprob: -13.714151382446289
    9. ' ' → logprob: -14.464151382446289
    10. ',' → logprob: -14.589151382446289

Token 1772: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.961759259458631e-06
    2. ' set' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. '       ' → logprob: -17.2500057220459
    5. '           ' → logprob: -18.7500057220459
    6. ' ' → logprob: -20.2500057220459
    7. '     ' → logprob: -22.1250057220459
    8. '=set' → logprob: -22.1250057220459
    9. '(set' → logprob: -22.2500057220459
    10. '  ' → logprob: -22.5000057220459

Token 1773: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38689061999320984
    2. '()
' → logprob: -1.1368906497955322
    3. '()

' → logprob: -12.011890411376953
    4. '()\' → logprob: -12.136890411376953
    5. '()
' → logprob: -13.511890411376953
    6. '=' → logprob: -13.511890411376953
    7. '       ' → logprob: -13.636890411376953
    8. ' =' → logprob: -14.261890411376953
    9. '();' → logprob: -14.511890411376953
    10. '(),' → logprob: -14.511890411376953

Token 1774: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05209159106016159
    2. '           ' → logprob: -3.302091598510742
    3. ' for' → logprob: -4.927091598510742
    4. 'for' → logprob: -5.302091598510742
    5. '```' → logprob: -6.552091598510742
    6. '   ' → logprob: -8.302091598510742
    7. '               ' → logprob: -10.802091598510742
    8. '``' → logprob: -11.677091598510742
    9. ' ' → logprob: -12.177091598510742
    10. '
' → logprob: -13.177091598510742

Token 1775: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04111669585108757
    2. '       ' → logprob: -3.291116714477539
    3. ' for' → logprob: -5.791116714477539
    4. '```' → logprob: -11.416116714477539
    5. '   ' → logprob: -12.666116714477539
    6. '           ' → logprob: -13.666116714477539
    7. '	for' → logprob: -14.541116714477539
    8. '``' → logprob: -16.79111671447754
    9. '	' → logprob: -17.16611671447754
    10. ' ' → logprob: -17.41611671447754

Token 1776: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0046927304938435555
    2. 'm' → logprob: -5.754692554473877
    3. 'i' → logprob: -6.754692554473877
    4. 'mid' → logprob: -8.004693031311035
    5. '   ' → logprob: -12.129693031311035
    6. ' k' → logprob: -12.254693031311035
    7. 'split' → logprob: -12.629693031311035
    8. 'spl' → logprob: -15.379693031311035
    9. 'p' → logprob: -16.00469207763672
    10. 's' → logprob: -16.12969207763672

Token 1777: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014212513342499733
    2. 'in' → logprob: -4.264212608337402
    3. '=' → logprob: -11.639212608337402
    4. ',' → logprob: -11.764212608337402
    5. '       ' → logprob: -11.889212608337402
    6. ' ' → logprob: -12.139212608337402
    7. ' l' → logprob: -12.764212608337402
    8. '(l' → logprob: -13.014212608337402
    9. '=l' → logprob: -13.014212608337402
    10. 'l' → logprob: -13.139212608337402

Token 1778: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07896073162555695
    2. ' range' → logprob: -2.578960657119751
    3. '(range' → logprob: -9.578960418701172
    4. '	range' → logprob: -13.828960418701172
    5. ' xrange' → logprob: -15.078960418701172
    6. '   ' → logprob: -15.703960418701172
    7. ' in' → logprob: -16.578960418701172
    8. 'l' → logprob: -16.828960418701172
    9. ' ' → logprob: -16.828960418701172
    10. '_range' → logprob: -17.078960418701172

Token 1779: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01825799234211445
    2. ' l' → logprob: -4.268258094787598
    3. '(l' → logprob: -5.518258094787598
    4. '   ' → logprob: -10.143258094787598
    5. '       ' → logprob: -11.018258094787598
    6. '	l' → logprob: -11.768258094787598
    7. ' (' → logprob: -12.643258094787598
    8. ',' → logprob: -13.643258094787598
    9. ',l' → logprob: -13.643258094787598
    10. '           ' → logprob: -14.143258094787598

Token 1780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5797185897827148
    2. '+' → logprob: -0.8297185897827148
    3. ' +' → logprob: -5.954718589782715
    4. '+,' → logprob: -7.704718589782715
    5. '       ' → logprob: -8.329718589782715
    6. '+i' → logprob: -8.454718589782715
    7. ',i' → logprob: -9.204718589782715
    8. ' ,' → logprob: -9.579718589782715
    9. '           ' → logprob: -10.204718589782715
    10. ',l' → logprob: -11.579718589782715

Token 1781: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.3080716346157715e-05
    2. 'l' → logprob: -11.375022888183594
    3. ' r' → logprob: -11.625022888183594
    4. 'i' → logprob: -13.000022888183594
    5. '   ' → logprob: -15.000022888183594
    6. '       ' → logprob: -17.250022888183594
    7. '           ' → logprob: -17.625022888183594
    8. '```' → logprob: -17.875022888183594
    9. '(r' → logprob: -18.000022888183594
    10. ' ' → logprob: -18.500022888183594

Token 1782: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7000092267990112
    2. ',' → logprob: -0.7000092267990112
    3. ' +' → logprob: -5.700009346008301
    4. '):
' → logprob: -6.325009346008301
    5. '       ' → logprob: -6.700009346008301
    6. '   ' → logprob: -8.3250093460083
    7. '           ' → logprob: -10.0750093460083
    8. ' ,' → logprob: -10.3250093460083
    9. '):' → logprob: -10.3250093460083
    10. '+,' → logprob: -10.4500093460083

Token 1783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001274877111427486
    2. ' if' → logprob: -6.876275062561035
    3. ' op' → logprob: -9.751275062561035
    4. '               ' → logprob: -9.876275062561035
    5. 'if' → logprob: -10.626275062561035
    6. '```' → logprob: -10.626275062561035
    7. ',' → logprob: -11.376275062561035
    8. 'op' → logprob: -12.001275062561035
    9. '<|end|>' → logprob: -12.126275062561035
    10. '   ' → logprob: -12.251275062561035

Token 1784: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.030607083812355995
    2. '           ' → logprob: -4.155607223510742
    3. ' left' → logprob: -4.655607223510742
    4. 'for' → logprob: -6.530607223510742
    5. '(left' → logprob: -7.155607223510742
    6. 'results' → logprob: -7.280607223510742
    7. '               ' → logprob: -7.280607223510742
    8. 'op' → logprob: -7.405607223510742
    9. 'if' → logprob: -8.280607223510742
    10. '   ' → logprob: -8.905607223510742

Token 1785: 's' (ID: 82)
  Prédit: '_results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.06108124926686287
    2. 'results' → logprob: -3.5610811710357666
    3. ' =' → logprob: -4.811081409454346
    4. ',' → logprob: -4.936081409454346
    5. '_vals' → logprob: -5.061081409454346
    6. '_values' → logprob: -5.186081409454346
    7. '_,' → logprob: -6.436081409454346
    8. '_' → logprob: -7.436081409454346
    9. '_res' → logprob: -8.061080932617188
    10. '=' → logprob: -8.311080932617188

Token 1786: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6186025142669678
    2. '=' → logprob: -0.9936025142669678
    3. ',' → logprob: -2.8686025142669678
    4. '_results' → logprob: -3.9936025142669678
    5. '           ' → logprob: -4.868602752685547
    6. 'results' → logprob: -6.368602752685547
    7. ' ,' → logprob: -6.493602752685547
    8. ')' → logprob: -7.243602752685547
    9. '       ' → logprob: -7.243602752685547
    10. '               ' → logprob: -7.618602752685547

Token 1787: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.034002382308244705
    2. ' dfs' → logprob: -3.4090023040771484
    3. '           ' → logprob: -8.034002304077148
    4. '               ' → logprob: -11.409002304077148
    5. 'd' → logprob: -12.659002304077148
    6. '                   ' → logprob: -13.034002304077148
    7. '   ' → logprob: -13.159002304077148
    8. '       ' → logprob: -13.159002304077148
    9. '            ' → logprob: -13.409002304077148
    10. '          ' → logprob: -13.784002304077148

Token 1788: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.518582762917504e-05
    2. '(' → logprob: -9.75008487701416
    3. '(i' → logprob: -10.62508487701416
    4. 'l' → logprob: -14.00008487701416
    5. '(
' → logprob: -14.25008487701416
    6. '           ' → logprob: -14.62508487701416
    7. ' (' → logprob: -14.75008487701416
    8. '```' → logprob: -17.375085830688477
    9. '               ' → logprob: -17.625085830688477
    10. ' l' → logprob: -17.750085830688477

Token 1789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0703771784901619
    2. ',i' → logprob: -2.6953771114349365
    3. 'i' → logprob: -8.070377349853516
    4. '           ' → logprob: -9.320377349853516
    5. ' ,' → logprob: -10.445377349853516
    6. '   ' → logprob: -12.945377349853516
    7. '               ' → logprob: -13.195377349853516
    8. '       ' → logprob: -13.445377349853516
    9. '                   ' → logprob: -13.945377349853516
    10. '(i' → logprob: -14.445377349853516

Token 1790: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.45848218582978e-06
    2. '           ' → logprob: -13.75000286102295
    3. ' i' → logprob: -14.62500286102295
    4. '       ' → logprob: -15.12500286102295
    5. '               ' → logprob: -15.37500286102295
    6. '   ' → logprob: -15.87500286102295
    7. '                   ' → logprob: -16.375001907348633
    8. '```' → logprob: -17.125001907348633
    9. '         ' → logprob: -17.250001907348633
    10. '     ' → logprob: -17.875001907348633

Token 1791: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01823282800614834
    2. ')' → logprob: -4.018232822418213
    3. '           ' → logprob: -9.643233299255371
    4. '       ' → logprob: -11.518233299255371
    5. '),' → logprob: -12.393233299255371
    6. ')[' → logprob: -13.893233299255371
    7. ' )
' → logprob: -14.643233299255371
    8. ')
' → logprob: -14.893233299255371
    9. '   ' → logprob: -15.143233299255371
    10. '               ' → logprob: -15.268233299255371

Token 1792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044050320982933044
    2. 'rights' → logprob: -3.1690502166748047
    3. 'right' → logprob: -7.669050216674805
    4. ' rights' → logprob: -7.794050216674805
    5. '               ' → logprob: -9.419050216674805
    6. '       ' → logprob: -10.919050216674805
    7. '(right' → logprob: -11.169050216674805
    8. '```' → logprob: -11.419050216674805
    9. ' RIGHTS' → logprob: -11.544050216674805
    10. '[right' → logprob: -11.794050216674805

Token 1793: ' rights' (ID: 6393)
  Prédit: 'rights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rights' (adapté à ' rights') → logprob: -0.0012376103550195694
    2. 'right' → logprob: -7.126237392425537
    3. 'for' → logprob: -8.376237869262695
    4. '           ' → logprob: -8.876237869262695
    5. ' rights' → logprob: -10.251237869262695
    6. '       ' → logprob: -12.001237869262695
    7. '   ' → logprob: -12.251237869262695
    8. 'rig' → logprob: -12.376237869262695
    9. 'Rights' → logprob: -12.751237869262695
    10. '
' → logprob: -13.251237869262695

Token 1794: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20230355858802795
    2. ' =' → logprob: -1.7023035287857056
    3. '           ' → logprob: -7.077303409576416
    4. ',' → logprob: -11.202303886413574
    5. '               ' → logprob: -11.452303886413574
    6. '   ' → logprob: -12.577303886413574
    7. '          ' → logprob: -13.077303886413574
    8. ')' → logprob: -13.202303886413574
    9. '            ' → logprob: -13.202303886413574
    10. '       ' → logprob: -13.202303886413574

Token 1795: ' dfs' (ID: 51252)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6337118744850159
    2. 'dfs' → logprob: -0.7587118744850159
    3. 'i' → logprob: -7.508711814880371
    4. ' dfs' → logprob: -7.883711814880371
    5. 'd' → logprob: -9.508711814880371
    6. '(d' → logprob: -10.258711814880371
    7. '   ' → logprob: -10.383711814880371
    8. ' (' → logprob: -11.508711814880371
    9. '           ' → logprob: -11.758711814880371
    10. 'df' → logprob: -12.383711814880371

Token 1796: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.842555426876061e-06
    2. 'i' → logprob: -12.375004768371582
    3. '(' → logprob: -14.625004768371582
    4. ' (' → logprob: -16.6250057220459
    5. '(
' → logprob: -17.0000057220459
    6. '```' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.7500057220459
    8. '           ' → logprob: -18.8750057220459
    9. ' i' → logprob: -19.6250057220459
    10. ',i' → logprob: -19.6250057220459

Token 1797: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006327360169962049
    2. ' +' → logprob: -7.3756327629089355
    3. ',' → logprob: -12.375632286071777
    4. 'i' → logprob: -14.375632286071777
    5. '+i' → logprob: -15.000632286071777
    6. '+
' → logprob: -15.125632286071777
    7. '+,' → logprob: -15.125632286071777
    8. '(i' → logprob: -15.375632286071777
    9. '1' → logprob: -15.625632286071777
    10. '```' → logprob: -16.125633239746094

Token 1798: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038075923919677734
    2. '1' → logprob: -3.2880759239196777
    3. '```' → logprob: -10.913076400756836
    4. ' r' → logprob: -12.163076400756836
    5. '   ' → logprob: -12.538076400756836
    6. '           ' → logprob: -12.663076400756836
    7. '(r' → logprob: -13.788076400756836
    8. ',' → logprob: -14.163076400756836
    9. '``' → logprob: -14.538076400756836
    10. 'i' → logprob: -14.663076400756836

Token 1799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.76759916334413e-05
    2. ',r' → logprob: -9.500077247619629
    3. ' ,' → logprob: -13.875077247619629
    4. 'r' → logprob: -14.250077247619629
    5. '```' → logprob: -15.000077247619629
    6. '(r' → logprob: -15.000077247619629
    7. '           ' → logprob: -15.125077247619629
    8. ',
' → logprob: -15.625077247619629
    9. ',i' → logprob: -17.250078201293945
    10. '   ' → logprob: -17.750078201293945

Token 1800: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.553032628493384e-05
    2. ' r' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.875075340270996
    4. '   ' → logprob: -16.375076293945312
    5. '               ' → logprob: -16.750076293945312
    6. '       ' → logprob: -17.125076293945312
    7. '             ' → logprob: -18.250076293945312
    8. '         ' → logprob: -18.375076293945312
    9. '     ' → logprob: -18.375076293945312
    10. ' ' → logprob: -18.625076293945312

Token 1801: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013786991126835346
    2. ')' → logprob: -4.388786792755127
    3. ')
' → logprob: -6.763786792755127
    4. '               ' → logprob: -10.013787269592285
    5. '):
' → logprob: -10.388787269592285
    6. ',' → logprob: -11.513787269592285
    7. '		' → logprob: -11.638787269592285
    8. '       ' → logprob: -12.388787269592285
    9. '```' → logprob: -12.513787269592285
    10. '                   ' → logprob: -12.763787269592285

Token 1802: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013602360850200057
    2. '           ' → logprob: -6.7513604164123535
    3. '```' → logprob: -9.501359939575195
    4. ' for' → logprob: -10.501359939575195
    5. '<|end|>' → logprob: -11.001359939575195
    6. 'for' → logprob: -11.126359939575195
    7. '                   ' → logprob: -11.251359939575195
    8. '       ' → logprob: -12.126359939575195
    9. '   ' → logprob: -12.376359939575195
    10. '                       ' → logprob: -12.501359939575195

Token 1803: ' op' (ID: 991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23255465924739838
    2. '           ' → logprob: -1.7325546741485596
    3. '               ' → logprob: -3.6075546741485596
    4. ' for' → logprob: -5.9825544357299805
    5. 'op' (adapté à ' op') → logprob: -6.9825544357299805
    6. 'ops' → logprob: -9.98255443572998
    7. '```' → logprob: -11.10755443572998
    8. '                   ' → logprob: -11.23255443572998
    9. ' op' → logprob: -12.48255443572998
    10. '       ' → logprob: -12.48255443572998

Token 1804: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603129804134369
    2. '=' → logprob: -1.9103130102157593
    3. 's' → logprob: -9.53531265258789
    4. '_token' → logprob: -12.41031265258789
    5. ' ' → logprob: -12.78531265258789
    6. '   ' → logprob: -12.78531265258789
    7. '_tokens' → logprob: -13.53531265258789
    8. ')' → logprob: -13.91031265258789
    9. 'tokens' → logprob: -14.66031265258789
    10. '  ' → logprob: -14.78531265258789

Token 1805: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.011051355861127377
    2. ' ops' → logprob: -4.511051177978516
    3. '_ops' → logprob: -14.261051177978516
    4. '   ' → logprob: -14.386051177978516
    5. '           ' → logprob: -14.386051177978516
    6. 'op' → logprob: -14.511051177978516
    7. '.ops' → logprob: -14.511051177978516
    8. '       ' → logprob: -14.636051177978516
    9. '```' → logprob: -16.136051177978516
    10. 'Ops' → logprob: -16.636051177978516

Token 1806: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '           ' → logprob: -14.125003814697266
    3. '```' → logprob: -14.375003814697266
    4. '(i' → logprob: -14.500003814697266
    5. 's' → logprob: -14.500003814697266
    6. '[
' → logprob: -14.625003814697266
    7. 'i' → logprob: -14.750003814697266
    8. '[' → logprob: -15.625003814697266
    9. '
' → logprob: -15.875003814697266
    10. ' [' → logprob: -15.875003814697266

Token 1807: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0886482298374176
    2. ']
' → logprob: -2.8386483192443848
    3. '           ' → logprob: -3.7136483192443848
    4. '[i' → logprob: -6.963648319244385
    5. '       ' → logprob: -8.463647842407227
    6. ')' → logprob: -8.588647842407227
    7. '               ' → logprob: -8.963647842407227
    8. '])' → logprob: -9.213647842407227
    9. '[' → logprob: -9.588647842407227
    10. '<|end|>' → logprob: -9.713647842407227

Token 1808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016217712312936783
    2. '               ' → logprob: -4.1412177085876465
    3. ' for' → logprob: -9.766218185424805
    4. '<|end|>' → logprob: -9.766218185424805
    5. 'for' → logprob: -11.141218185424805
    6. '```' → logprob: -11.391218185424805
    7. '<|end|>' → logprob: -11.766218185424805
    8. '            
' → logprob: -12.016218185424805
    9. '                   ' → logprob: -12.391218185424805
    10. '            ' → logprob: -12.641218185424805

Token 1809: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00932758767157793
    2. '           ' → logprob: -4.759327411651611
    3. ' for' → logprob: -7.259327411651611
    4. '               ' → logprob: -11.75932788848877
    5. '```' → logprob: -13.88432788848877
    6. '                   ' → logprob: -15.63432788848877
    7. '``' → logprob: -16.384326934814453
    8. '	for' → logprob: -17.759326934814453
    9. '_for' → logprob: -17.759326934814453
    10. '                       ' → logprob: -17.884326934814453

Token 1810: ' a' (ID: 261)
  Prédit: 'lv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lv' → logprob: -0.1028340756893158
    2. 'left' → logprob: -2.3528339862823486
    3. 'vl' → logprob: -7.102834224700928
    4. 'll' → logprob: -7.352834224700928
    5. 'lt' → logprob: -7.977834224700928
    6. ' lv' → logprob: -8.22783374786377
    7. 'l' → logprob: -8.60283374786377
    8. 'a' → logprob: -9.97783374786377
    9. 'ln' → logprob: -10.35283374786377
    10. 'lc' → logprob: -10.47783374786377

Token 1811: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47413742542266846
    2. 'in' → logprob: -0.9741374254226685
    3. ',' → logprob: -9.849137306213379
    4. 'b' → logprob: -12.099137306213379
    5. ' ' → logprob: -14.349137306213379
    6. ' ,' → logprob: -15.224137306213379
    7. '   ' → logprob: -15.724137306213379
    8. ',b' → logprob: -15.974137306213379
    9. 'n' → logprob: -16.224138259887695
    10. '       ' → logprob: -16.349138259887695

Token 1812: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.8624639324116288e-06
    2. ' left' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.625001907348633
    4. 'right' → logprob: -17.750001907348633
    5. '(left' → logprob: -18.375001907348633
    6. '           ' → logprob: -18.500001907348633
    7. '[left' → logprob: -19.625001907348633
    8. '       ' → logprob: -20.125001907348633
    9. 'lef' → logprob: -20.875001907348633
    10. '	left' → logprob: -21.000001907348633

Token 1813: 's' (ID: 82)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.49069055914878845
    2. ' in' → logprob: -1.3656905889511108
    3. 's' → logprob: -2.4906904697418213
    4. ',' → logprob: -3.1156904697418213
    5. 'for' → logprob: -5.7406907081604
    6. '               ' → logprob: -7.3656907081604
    7. '           ' → logprob: -7.4906907081604
    8. ' for' → logprob: -7.9906907081604
    9. ' ,' → logprob: -8.865690231323242
    10. '```' → logprob: -9.490690231323242

Token 1814: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.158741295337677
    2. ' in' → logprob: -2.1587412357330322
    3. 'for' → logprob: -4.658741474151611
    4. ' for' → logprob: -4.783741474151611
    5. ',' → logprob: -5.033741474151611
    6. ':
' → logprob: -5.908741474151611
    7. 'in' → logprob: -5.908741474151611
    8. '                               ' → logprob: -7.658741474151611
    9. '                   ' → logprob: -8.533740997314453
    10. '                       ' → logprob: -8.658740997314453

Token 1815: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17339076101779938
    2. ' for' → logprob: -2.1733908653259277
    3. 'for' → logprob: -3.1733908653259277
    4. '```' → logprob: -6.798390865325928
    5. ',' → logprob: -6.923390865325928
    6. '                                       ' → logprob: -7.798390865325928
    7. '                               ' → logprob: -8.42339038848877
    8. ' in' → logprob: -8.54839038848877
    9. ' ,' → logprob: -9.17339038848877
    10. 'b' → logprob: -9.17339038848877

Token 1816: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2955249845981598
    2. 'for' (adapté à ' for') → logprob: -1.4205249547958374
    3. ' b' → logprob: -5.045525074005127
    4. '                   ' → logprob: -5.420525074005127
    5. '               ' → logprob: -6.670525074005127
    6. 'b' → logprob: -6.920525074005127
    7. '                ' → logprob: -7.295525074005127
    8. '                    ' → logprob: -7.920525074005127
    9. '                       ' → logprob: -10.920524597167969
    10. ' ' → logprob: -11.295524597167969

Token 1817: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.908022285439074e-05
    2. ' b' → logprob: -9.750059127807617
    3. '               ' → logprob: -14.875059127807617
    4. '                   ' → logprob: -15.000059127807617
    5. '           ' → logprob: -18.250059127807617
    6. '                       ' → logprob: -19.125059127807617
    7. '(b' → logprob: -19.375059127807617
    8. '                ' → logprob: -20.000059127807617
    9. '                 ' → logprob: -20.000059127807617
    10. '                    ' → logprob: -20.125059127807617

Token 1818: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00410012761130929
    2. 'in' → logprob: -5.504100322723389
    3. '                   ' → logprob: -11.12909984588623
    4. '               ' → logprob: -13.12909984588623
    5. '```' → logprob: -13.37909984588623
    6. ',' → logprob: -14.37909984588623
    7. 'b' → logprob: -14.75409984588623
    8. '   ' → logprob: -14.87909984588623
    9. '                       ' → logprob: -15.25409984588623
    10. '                           ' → logprob: -15.50409984588623

Token 1819: ' rights' (ID: 6393)
  Prédit: 'rights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rights' → logprob: -0.002572448458522558
    2. ' rights' → logprob: -6.002572536468506
    3. 'right' → logprob: -9.252572059631348
    4. '(right' → logprob: -15.127572059631348
    5. '[right' → logprob: -15.127572059631348
    6. '           ' → logprob: -15.752572059631348
    7. '   ' → logprob: -16.627573013305664
    8. ' right' → logprob: -16.877573013305664
    9. 'rhs' → logprob: -17.002573013305664
    10. '               ' → logprob: -17.252573013305664

Token 1820: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005672441329807043
    2. ':
' → logprob: -5.755672454833984
    3. ':' → logprob: -7.005672454833984
    4. '                       ' → logprob: -7.505672454833984
    5. '                           ' → logprob: -8.005672454833984
    6. '```' → logprob: -8.630672454833984
    7. ',' → logprob: -8.880672454833984
    8. '<|end|>' → logprob: -9.755672454833984
    9. '                  ' → logprob: -9.880672454833984
    10. '<|end|>' → logprob: -10.130672454833984

Token 1821: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011802274966612458
    2. '                           ' → logprob: -7.876180171966553
    3. '                       ' → logprob: -8.376180648803711
    4. 'if' → logprob: -9.126180648803711
    5. '{
' → logprob: -9.126180648803711
    6. '                    ' → logprob: -9.626180648803711
    7. '                                           ' → logprob: -9.626180648803711
    8. '                  ' → logprob: -9.751180648803711
    9. '                                   ' → logprob: -10.376180648803711
    10. '                     ' → logprob: -10.751180648803711

Token 1822: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.43192818760871887
    2. '                       ' → logprob: -1.3069281578063965
    3. 'res' → logprob: -3.5569281578063965
    4. 'result' → logprob: -3.6819281578063965
    5. 'v' → logprob: -5.0569281578063965
    6. 'ret' → logprob: -5.1819281578063965
    7. 'r' → logprob: -5.6819281578063965
    8. ' val' → logprob: -5.8069281578063965
    9. 'rv' → logprob: -6.5569281578063965
    10. ' res' → logprob: -6.5569281578063965

Token 1823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004778872709721327
    2. ',val' → logprob: -5.754778861999512
    3. '                   ' → logprob: -7.504778861999512
    4. '=' → logprob: -8.254778861999512
    5. ' =' → logprob: -8.504778861999512
    6. 'ue' → logprob: -8.754778861999512
    7. '                       ' → logprob: -9.504778861999512
    8. ',_' → logprob: -9.629778861999512
    9. ',u' → logprob: -9.629778861999512
    10. '_,' → logprob: -10.129778861999512

Token 1824: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.14725002646446228
    2. 'error' → logprob: -2.397249937057495
    3. 'div' → logprob: -3.147249937057495
    4. 'skip' → logprob: -7.397250175476074
    5. 'is' → logprob: -7.522250175476074
    6. 'exc' → logprob: -7.522250175476074
    7. 'fail' → logprob: -7.897250175476074
    8. 'e' → logprob: -8.147250175476074
    9. 'divide' → logprob: -8.397250175476074
    10. 'errs' → logprob: -9.397250175476074

Token 1825: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12858286499977112
    2. ' =' → logprob: -2.3785829544067383
    3. ',' → logprob: -4.128582954406738
    4. '                   ' → logprob: -5.128582954406738
    5. 'or' → logprob: -5.378582954406738
    6. '               ' → logprob: -7.878582954406738
    7. '                       ' → logprob: -8.128582954406738
    8. '           ' → logprob: -9.128582954406738
    9. '       ' → logprob: -9.378582954406738
    10. '   ' → logprob: -9.753582954406738

Token 1826: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.014167741872370243
    2. ' apply' → logprob: -4.264167785644531
    3. '                   ' → logprob: -12.389167785644531
    4. '.apply' → logprob: -17.01416778564453
    5. '                    ' → logprob: -18.26416778564453
    6. '   ' → logprob: -18.76416778564453
    7. '_apply' → logprob: -18.76416778564453
    8. '           ' → logprob: -19.88916778564453
    9. '```' → logprob: -20.01416778564453
    10. '               ' → logprob: -20.01416778564453

Token 1827: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.008762052282691002
    2. '_' → logprob: -4.758761882781982
    3. 'op' → logprob: -9.38376235961914
    4. '_,' → logprob: -10.38376235961914
    5. '_
' → logprob: -11.75876235961914
    6. ''_' → logprob: -12.38376235961914
    7. '`' → logprob: -12.50876235961914
    8. ' _' → logprob: -12.75876235961914
    9. '```' → logprob: -12.88376235961914
    10. '(op' → logprob: -12.88376235961914

Token 1828: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0035288019571453333
    2. 'a' → logprob: -5.753528594970703
    3. '(' → logprob: -8.003528594970703
    4. ' (' → logprob: -11.628528594970703
    5. '(
' → logprob: -12.628528594970703
    6. '                   ' → logprob: -13.003528594970703
    7. ' a' → logprob: -13.253528594970703
    8. '   ' → logprob: -15.503528594970703
    9. '               ' → logprob: -15.753528594970703
    10. '                       ' → logprob: -17.003528594970703

Token 1829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032050427980720997
    2. ',b' → logprob: -6.503204822540283
    3. ' ,' → logprob: -7.253204822540283
    4. 'b' → logprob: -7.378204822540283
    5. '                   ' → logprob: -8.003205299377441
    6. '                       ' → logprob: -11.628205299377441
    7. ' b' → logprob: -12.003205299377441
    8. '                           ' → logprob: -12.628205299377441
    9. '                               ' → logprob: -12.628205299377441
    10. '               ' → logprob: -13.003205299377441

Token 1830: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000553151941858232
    2. ' b' → logprob: -7.500553131103516
    3. '                   ' → logprob: -15.625553131103516
    4. '                       ' → logprob: -19.250553131103516
    5. '                    ' → logprob: -20.625553131103516
    6. ')b' → logprob: -20.750553131103516
    7. '               ' → logprob: -21.250553131103516
    8. '                  ' → logprob: -21.750553131103516
    9. '                           ' → logprob: -22.625553131103516
    10. '                     ' → logprob: -22.750553131103516

Token 1831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008382192463614047
    2. '                   ' → logprob: -7.375838279724121
    3. '(op' → logprob: -9.125838279724121
    4. ',
' → logprob: -10.250838279724121
    5. ')' → logprob: -10.625838279724121
    6. '                       ' → logprob: -10.750838279724121
    7. ' ,' → logprob: -12.000838279724121
    8. ')
' → logprob: -12.125838279724121
    9. '               ' → logprob: -13.125838279724121
    10. '[' → logprob: -13.125838279724121

Token 1832: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.04858941584825516
    2. ' op' → logprob: -3.0485894680023193
    3. '(op' → logprob: -13.673589706420898
    4. ''op' → logprob: -14.548589706420898
    5. '	op' → logprob: -15.423589706420898
    6. 'ops' → logprob: -16.4235897064209
    7. 'opf' → logprob: -17.2985897064209
    8. '_op' → logprob: -17.2985897064209
    9. 'opcode' → logprob: -17.2985897064209
    10. '                   ' → logprob: -17.7985897064209

Token 1833: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4790872037410736
    2. ')' → logprob: -1.104087233543396
    3. ')
' → logprob: -3.1040871143341064
    4. '                       ' → logprob: -5.9790873527526855
    5. '):
' → logprob: -6.4790873527526855
    6. '               ' → logprob: -9.729086875915527
    7. '')' → logprob: -10.479086875915527
    8. '           ' → logprob: -10.854086875915527
    9. '                           ' → logprob: -11.104086875915527
    10. '       ' → logprob: -11.729086875915527

Token 1834: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.25422564148902893
    2. '                   ' → logprob: -1.5042256116867065
    3. '                     ' → logprob: -7.504225730895996
    4. '                           ' → logprob: -7.754225730895996
    5. '{
' → logprob: -8.129225730895996
    6. '```' → logprob: -8.254225730895996
    7. '                               ' → logprob: -8.629225730895996
    8. '                    ' → logprob: -8.879225730895996
    9. '                      ' → logprob: -9.004225730895996
    10. '<|end|>' → logprob: -9.629225730895996

Token 1835: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5937514901161194
    2. 'if' (adapté à ' if') → logprob: -1.3437514305114746
    3. '                   ' → logprob: -1.7187514305114746
    4. ' if' → logprob: -5.843751430511475
    5. '```' → logprob: -5.843751430511475
    6. '                     ' → logprob: -7.218751430511475
    7. '                           ' → logprob: -7.718751430511475
    8. '                    ' → logprob: -8.343751907348633
    9. '                      ' → logprob: -9.093751907348633
    10. '                               ' → logprob: -9.468751907348633

Token 1836: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01819828897714615
    2. ' not' → logprob: -4.018198490142822
    3. '                   ' → logprob: -10.018198013305664
    4. 'err' → logprob: -12.768198013305664
    5. '                       ' → logprob: -14.643198013305664
    6. '(not' → logprob: -15.393198013305664
    7. '                           ' → logprob: -16.268198013305664
    8. '               ' → logprob: -16.893198013305664
    9. '   ' → logprob: -17.393198013305664
    10. '	not' → logprob: -17.643198013305664

Token 1837: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.0040835049003362656
    2. ' err' → logprob: -5.504083633422852
    3. '           ' → logprob: -12.504083633422852
    4. '(err' → logprob: -14.504083633422852
    5. '                   ' → logprob: -14.754083633422852
    6. 'val' → logprob: -15.504083633422852
    7. '               ' → logprob: -16.37908363342285
    8. 'error' → logprob: -16.62908363342285
    9. '
' → logprob: -16.75408363342285
    10. '       ' → logprob: -17.12908363342285

Token 1838: ' and' (ID: 326)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0861542820930481
    2. ':
' → logprob: -2.7111542224884033
    3. ':' → logprob: -4.586154460906982
    4. '):
' → logprob: -6.211154460906982
    5. '                   ' → logprob: -6.336154460906982
    6. '                               ' → logprob: -7.086154460906982
    7. '                           ' → logprob: -7.211154460906982
    8. '                      ' → logprob: -9.461153984069824
    9. '```' → logprob: -9.586153984069824
    10. ',' → logprob: -10.086153984069824

Token 1839: ' abs' (ID: 8443)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.030651023611426353
    2. ' val' → logprob: -3.530651092529297
    3. '                   ' → logprob: -7.280651092529297
    4. '                       ' → logprob: -9.530651092529297
    5. '                           ' → logprob: -10.530651092529297
    6. '                    ' → logprob: -10.530651092529297
    7. '(val' → logprob: -10.655651092529297
    8. 'res' → logprob: -11.780651092529297
    9. '                     ' → logprob: -11.780651092529297
    10. '                                           ' → logprob: -12.030651092529297

Token 1840: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0031847211066633463
    2. 'val' → logprob: -5.753184795379639
    3. '(' → logprob: -12.87818431854248
    4. ' val' → logprob: -13.00318431854248
    5. '[val' → logprob: -14.25318431854248
    6. ',val' → logprob: -14.50318431854248
    7. '(
' → logprob: -15.00318431854248
    8. 'a' → logprob: -15.50318431854248
    9. '(a' → logprob: -15.50318431854248
    10. '```' → logprob: -15.75318431854248

Token 1841: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.48651620745658875
    2. '<=' → logprob: -0.9865162372589111
    3. '(val' → logprob: -5.486515998840332
    4. '```' → logprob: -6.111515998840332
    5. ' <' → logprob: -6.611515998840332
    6. '                   ' → logprob: -6.861515998840332
    7. '[val' → logprob: -6.861515998840332
    8. ')' → logprob: -6.986515998840332
    9. '<' → logprob: -7.236515998840332
    10. ')<=' → logprob: -8.236515998840332

Token 1842: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20607280731201172
    2. ' <=' → logprob: -2.0810728073120117
    3. '<' → logprob: -2.8310728073120117
    4. ' <' → logprob: -6.956072807312012
    5. '<int' → logprob: -7.581072807312012
    6. '```' → logprob: -7.706072807312012
    7. '100' → logprob: -9.081072807312012
    8. '[' → logprob: -9.581072807312012
    9. '<len' → logprob: -10.331072807312012
    10. ')<=' → logprob: -10.456072807312012

Token 1843: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12801803648471832
    2. '100' → logprob: -2.1280181407928467
    3. '200' → logprob: -7.253017902374268
    4. '2' → logprob: -9.003018379211426
    5. '250' → logprob: -9.003018379211426
    6. '1' → logprob: -10.253018379211426
    7. '320' → logprob: -10.378018379211426
    8. '300' → logprob: -10.378018379211426
    9. '500' → logprob: -11.253018379211426
    10. '20' → logprob: -12.003018379211426

Token 1844: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06622198969125748
    2. '100' → logprob: -2.8162219524383545
    3. '2' → logprob: -6.566222190856934
    4. '200' → logprob: -6.691222190856934
    5. '320' → logprob: -7.191222190856934
    6. '250' → logprob: -8.066222190856934
    7. '1' → logprob: -8.066222190856934
    8. '300' → logprob: -9.441222190856934
    9. '500' → logprob: -10.066222190856934
    10. 'int' → logprob: -10.566222190856934

Token 1845: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1869712471961975
    2. '7' → logprob: -1.9369711875915527
    3. '**' → logprob: -4.186971187591553
    4. '9' → logprob: -5.061971187591553
    5. '000' → logprob: -5.811971187591553
    6. '5' → logprob: -6.936971187591553
    7. '8' → logprob: -7.936971187591553
    8. '0' → logprob: -7.936971187591553
    9. '4' → logprob: -9.061971664428711
    10. '3' → logprob: -10.686971664428711

Token 1846: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04790467023849487
    2. '7' → logprob: -3.5479047298431396
    3. '6' → logprob: -4.4229044914245605
    4. '8' → logprob: -5.1729044914245605
    5. '18' → logprob: -8.922904968261719
    6. '5' → logprob: -9.547904968261719
    7. '12' → logprob: -9.672904968261719
    8. '15' → logprob: -10.297904968261719
    9. '10' → logprob: -11.047904968261719
    10. '14' → logprob: -13.422904968261719

Token 1847: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5777311325073242
    2. ':
' → logprob: -1.0777311325073242
    3. ':' → logprob: -2.827731132507324
    4. '):
' → logprob: -3.702731132507324
    5. '                               ' → logprob: -5.577731132507324
    6. '                           ' → logprob: -5.702731132507324
    7. '                   ' → logprob: -5.702731132507324
    8. ' and' → logprob: -6.327731132507324
    9. '```' → logprob: -7.827731132507324
    10. '):' → logprob: -7.952731132507324

Token 1848: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -3.4285862057004124e-05
    2. '                           ' → logprob: -10.62503433227539
    3. '                   ' → logprob: -12.87503433227539
    4. '```' → logprob: -12.87503433227539
    5. '                      ' → logprob: -13.00003433227539
    6. '                               ' → logprob: -13.75003433227539
    7. '                        ' → logprob: -14.50003433227539
    8. '                     ' → logprob: -14.75003433227539
    9. '					' → logprob: -16.12503433227539
    10. '                        
' → logprob: -16.50003433227539

Token 1849: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.7098414897918701
    2. '                           ' → logprob: -0.7098414897918701
    3. '                               ' → logprob: -4.209841728210449
    4. '                       ' → logprob: -6.709841728210449
    5. ' res' → logprob: -7.834841728210449
    6. '                                   ' → logprob: -10.33484172821045
    7. '```' → logprob: -11.20984172821045
    8. '                   ' → logprob: -12.20984172821045
    9. '                         ' → logprob: -12.20984172821045
    10. '                             ' → logprob: -12.20984172821045

Token 1850: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06219712644815445
    2. '.' → logprob: -2.812197208404541
    3. '.append' → logprob: -8.812196731567383
    4. '.update' → logprob: -10.187196731567383
    5. '                           ' → logprob: -10.687196731567383
    6. ' .' → logprob: -11.812196731567383
    7. '{}.' → logprob: -12.687196731567383
    8. '.insert' → logprob: -12.812196731567383
    9. '.setdefault' → logprob: -13.062196731567383
    10. '                       ' → logprob: -13.812196731567383

Token 1851: '(val' (ID: 17391)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7766014337539673
    2. ' val' → logprob: -0.7766014337539673
    3. '(val' → logprob: -2.5266013145446777
    4. ' (' → logprob: -9.151601791381836
    5. ',val' → logprob: -11.651601791381836
    6. '[val' → logprob: -11.651601791381836
    7. '	val' → logprob: -12.276601791381836
    8. '_val' → logprob: -12.276601791381836
    9. '(' → logprob: -13.901601791381836
    10. '```' → logprob: -13.901601791381836

Token 1852: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007886974141001701
    2. ')
' → logprob: -5.50788688659668
    3. '                   ' → logprob: -5.75788688659668
    4. '                       ' → logprob: -7.88288688659668
    5. '                           ' → logprob: -8.63288688659668
    6. '           ' → logprob: -11.00788688659668
    7. '               ' → logprob: -11.13288688659668
    8. '       ' → logprob: -11.75788688659668
    9. ')return' → logprob: -11.75788688659668
    10. ')}' → logprob: -11.88288688659668

Token 1853: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6236806511878967
    2. '                   ' → logprob: -0.9986806511878967
    3. '           ' → logprob: -2.748680591583252
    4. '       ' → logprob: -4.498680591583252
    5. '                       ' → logprob: -4.623680591583252
    6. '               ' → logprob: -5.248680591583252
    7. '                           ' → logprob: -5.748680591583252
    8. '``' → logprob: -7.623680591583252
    9. '                               ' → logprob: -7.998680591583252
    10. '                        
' → logprob: -8.24868106842041

Token 1854: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029175808653235435
    2. '           ' → logprob: -4.154175758361816
    3. '               ' → logprob: -5.404175758361816
    4. 'return' → logprob: -5.404175758361816
    5. '                   ' → logprob: -7.029175758361816
    6. '```' → logprob: -7.029175758361816
    7. '   ' → logprob: -7.529175758361816
    8. ')' → logprob: -7.529175758361816
    9. ')
' → logprob: -8.029175758361816
    10. '                       ' → logprob: -8.279175758361816

Token 1855: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.107425062713446e-06
    2. '[((' → logprob: -12.500006675720215
    3. '```' → logprob: -13.250006675720215
    4. '[' → logprob: -14.000006675720215
    5. '[
' → logprob: -14.875006675720215
    6. '((' → logprob: -16.12500762939453
    7. '``' → logprob: -16.12500762939453
    8. '.setdefault' → logprob: -16.50000762939453
    9. '   ' → logprob: -16.62500762939453
    10. '([(' → logprob: -18.00000762939453

Token 1856: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.93579563125968e-05
    2. 'r' → logprob: -9.750089645385742
    3. '0' → logprob: -11.375089645385742
    4. '(l' → logprob: -12.375089645385742
    5. '           ' → logprob: -12.875089645385742
    6. 'i' → logprob: -13.250089645385742
    7. ' l' → logprob: -13.375089645385742
    8. '   ' → logprob: -13.625089645385742
    9. ')' → logprob: -13.625089645385742
    10. '```' → logprob: -13.625089645385742

Token 1857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003742244793102145
    2. ',l' → logprob: -6.253742218017578
    3. ',r' → logprob: -6.378742218017578
    4. ',i' → logprob: -10.253742218017578
    5. ',(' → logprob: -10.378742218017578
    6. ' ,' → logprob: -11.378742218017578
    7. '+' → logprob: -11.628742218017578
    8. '       ' → logprob: -12.128742218017578
    9. '```' → logprob: -12.503742218017578
    10. '[' → logprob: -13.378742218017578

Token 1858: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020532844064291567
    2. ' r' → logprob: -8.500205039978027
    3. '(r' → logprob: -13.875205039978027
    4. '(' → logprob: -14.625205039978027
    5. '   ' → logprob: -15.375205039978027
    6. ',' → logprob: -17.125205993652344
    7. ' (' → logprob: -17.500205993652344
    8. '_r' → logprob: -17.500205993652344
    9. ')' → logprob: -17.625205993652344
    10. '       ' → logprob: -17.750205993652344

Token 1859: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2526230812072754
    2. ')' → logprob: -2.1276230812072754
    3. '])' → logprob: -2.3776230812072754
    4. ')]' → logprob: -4.877623081207275
    5. ']=' → logprob: -6.627623081207275
    6. '           ' → logprob: -6.752623081207275
    7. '       ' → logprob: -7.002623081207275
    8. '   ' → logprob: -9.377622604370117
    9. ')=' → logprob: -9.752622604370117
    10. ']
' → logprob: -10.252622604370117

Token 1860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001640876434976235
    2. ' =' → logprob: -8.750164031982422
    3. '.=' → logprob: -12.750164031982422
    4. '.update' → logprob: -14.125164031982422
    5. '=set' → logprob: -14.625164031982422
    6. '=
' → logprob: -15.125164031982422
    7. ' |=' → logprob: -15.250164031982422
    8. '.extend' → logprob: -15.375164031982422
    9. '|' → logprob: -15.750164031982422
    10. '.add' → logprob: -15.875164031982422

Token 1861: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -16.75
    3. 'set' → logprob: -19.25
    4. '       ' → logprob: -21.75
    5. '(res' → logprob: -22.125
    6. '$res' → logprob: -23.0
    7. '	res' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. '_res' → logprob: -24.125
    10. '           ' → logprob: -25.25

Token 1862: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.429896944202483e-05
    2. '           ' → logprob: -10.875043869018555
    3. '               ' → logprob: -11.500043869018555
    4. '   ' → logprob: -12.000043869018555
    5. '                       ' → logprob: -13.000043869018555
    6. '<|end|>' → logprob: -13.250043869018555
    7. '                   ' → logprob: -13.750043869018555
    8. ')' → logprob: -14.000043869018555
    9. 'return' → logprob: -14.625043869018555
    10. '	' → logprob: -14.750043869018555

Token 1863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006584754679352045
    2. '   ' → logprob: -5.506584644317627
    3. '           ' → logprob: -6.631584644317627
    4. '               ' → logprob: -8.381585121154785
    5. '<|end|>' → logprob: -8.506585121154785
    6. '
' → logprob: -8.631585121154785
    7. '```' → logprob: -9.006585121154785
    8. '        
' → logprob: -9.381585121154785
    9. '                   ' → logprob: -9.506585121154785
    10. 'return' → logprob: -10.381585121154785

Token 1864: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003355228342115879
    2. 'return' (adapté à ' return') → logprob: -5.753355026245117
    3. ' return' → logprob: -8.878355026245117
    4. '   ' → logprob: -11.253355026245117
    5. '           ' → logprob: -11.503355026245117
    6. '	return' → logprob: -12.128355026245117
    7. '	' → logprob: -12.128355026245117
    8. '               ' → logprob: -13.378355026245117
    9. ':return' → logprob: -13.878355026245117
    10. '```' → logprob: -14.503355026245117

Token 1865: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.048662085086107254
    2. 'memo' → logprob: -3.0486621856689453
    3. 'mem' → logprob: -10.173662185668945
    4. ' res' → logprob: -11.048662185668945
    5. '(res' → logprob: -11.173662185668945
    6. '   ' → logprob: -13.048662185668945
    7. ' memo' → logprob: -13.173662185668945
    8. '       ' → logprob: -14.423662185668945
    9. '{' → logprob: -14.548662185668945
    10. '```' → logprob: -14.548662185668945

Token 1866: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004641711246222258
    2. ')' → logprob: -5.629641532897949
    3. '       ' → logprob: -7.379641532897949
    4. '<|end|>' → logprob: -8.25464153289795
    5. '    
' → logprob: -9.62964153289795
    6. '```' → logprob: -10.62964153289795
    7. '<|end|>' → logprob: -10.75464153289795
    8. '           ' → logprob: -12.00464153289795
    9. '}' → logprob: -12.12964153289795
    10. '
' → logprob: -12.25464153289795

Token 1867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033758074045181274
    2. 'return' → logprob: -3.4087581634521484
    3. ' return' → logprob: -9.658758163452148
    4. '```' → logprob: -10.908758163452148
    5. 'def' → logprob: -11.158758163452148
    6. '       ' → logprob: -11.533758163452148
    7. '	return' → logprob: -14.033758163452148
    8. 'result' → logprob: -14.033758163452148
    9. '    
' → logprob: -14.283758163452148
    10. '(' → logprob: -14.658758163452148

Token 1868: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38723424077033997
    2. 'return' (adapté à ' return') → logprob: -1.1372342109680176
    3. ' return' → logprob: -8.012234687805176
    4. 'result' → logprob: -11.137234687805176
    5. '```' → logprob: -12.137234687805176
    6. 'def' → logprob: -12.512234687805176
    7. '
' → logprob: -12.762234687805176
    8. '	return' → logprob: -13.137234687805176
    9. 'res' → logprob: -13.637234687805176
    10. 'if' → logprob: -14.262234687805176

Token 1869: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -5.860340752406046e-05
    2. ' dfs' → logprob: -9.7500581741333
    3. 'memo' → logprob: -15.7500581741333
    4. 'df' → logprob: -16.125059127807617
    5. '   ' → logprob: -18.250059127807617
    6. 'dfa' → logprob: -18.375059127807617
    7. '
' → logprob: -18.625059127807617
    8. 'DFS' → logprob: -19.500059127807617
    9. 'dp' → logprob: -20.125059127807617
    10. '{' → logprob: -20.250059127807617

Token 1870: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038042180240154266
    2. '0' → logprob: -3.2880420684814453
    3. 'def' → logprob: -15.288042068481445
    4. '```' → logprob: -15.663042068481445
    5. ' (' → logprob: -15.788042068481445
    6. '[' → logprob: -16.663042068481445
    7. '   ' → logprob: -16.663042068481445
    8. ' ' → logprob: -17.288042068481445
    9. '
' → logprob: -17.413042068481445
    10. ',' → logprob: -17.413042068481445

Token 1871: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. '(' → logprob: -19.125
    6. '０' → logprob: -20.25
    7. '```' → logprob: -20.5
    8. '<|end|>' → logprob: -21.125
    9. '012' → logprob: -21.5
    10. '=' → logprob: -21.625

Token 1872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000422570708906278
    2. ',len' → logprob: -8.500422477722168
    3. ' ,' → logprob: -9.375422477722168
    4. '   ' → logprob: -9.625422477722168
    5. ',n' → logprob: -10.375422477722168
    6. ',
' → logprob: -10.375422477722168
    7. 'n' → logprob: -12.750422477722168
    8. 'len' → logprob: -13.625422477722168
    9. '```' → logprob: -14.875422477722168
    10. '(len' → logprob: -15.250422477722168

Token 1873: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04861347749829292
    2. 'len' → logprob: -3.0486135482788086
    3. ' n' → logprob: -11.048613548278809
    4. '(n' → logprob: -12.548613548278809
    5. '(len' → logprob: -12.798613548278809
    6. ' len' → logprob: -12.923613548278809
    7. '   ' → logprob: -13.923613548278809
    8. '
' → logprob: -15.173613548278809
    9. ')n' → logprob: -16.798612594604492
    10. '       ' → logprob: -16.798612594604492

Token 1874: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.04921218752861023
    2. 'values' → logprob: -3.0492122173309326
    3. '(filtered' → logprob: -7.6742119789123535
    4. 'filtered' → logprob: -8.924212455749512
    5. '-' → logprob: -10.674212455749512
    6. ' values' → logprob: -13.299212455749512
    7. ' -' → logprob: -14.174212455749512
    8. '	values' → logprob: -14.924212455749512
    9. '   ' → logprob: -15.549212455749512
    10. '.values' → logprob: -15.674212455749512

Token 1875: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04371296614408493
    2. ' -' → logprob: -3.168712854385376
    3. ')' → logprob: -7.293713092803955
    4. ')-' → logprob: -10.543712615966797
    5. '   ' → logprob: -12.418712615966797
    6. '()-' → logprob: -13.668712615966797
    7. ' ' → logprob: -14.418712615966797
    8. '–' → logprob: -15.043712615966797
    9. '−' → logprob: -15.293712615966797
    10. '<|end|>' → logprob: -15.293712615966797

Token 1876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.75
    4. '0' → logprob: -17.875
    5. ')' → logprob: -19.625
    6. '
' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. '(' → logprob: -20.375
    9. '``' → logprob: -20.625
    10. '-' → logprob: -20.75

Token 1877: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.250004768371582
    3. ' )' → logprob: -14.375004768371582
    4. ')return' → logprob: -14.500004768371582
    5. '<|end|>' → logprob: -14.625004768371582
    6. ')
' → logprob: -14.750004768371582
    7. '<|end|>' → logprob: -15.375004768371582
    8. ')#' → logprob: -16.0000057220459
    9. '))' → logprob: -16.1250057220459
    10. ')}' → logprob: -16.1250057220459

Token 1878: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22086621820926666
    2. '<|end|>' → logprob: -2.2208662033081055
    3. '(' → logprob: -3.2208662033081055
    4. '\n' → logprob: -4.3458662033081055
    5. '#' → logprob: -5.0958662033081055
    6. '.' → logprob: -5.3458662033081055
    7. ':' → logprob: -5.3458662033081055
    8. ''' → logprob: -5.5958662033081055
    9. '<|end|>' → logprob: -5.7208662033081055
    10. '```' → logprob: -5.8458662033081055

Token 1879: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2032085657119751
    2. 'line' → logprob: -1.703208565711975
    3. '_line' → logprob: -6.5782084465026855
    4. '_' → logprob: -8.703208923339844
    5. ' _' → logprob: -9.328208923339844
    6. 'expr' → logprob: -10.203208923339844
    7. 'i' → logprob: -10.578208923339844
    8. ' s' → logprob: -10.703208923339844
    9. 's' → logprob: -11.328208923339844
    10. ' expr' → logprob: -11.703208923339844

Token 1880: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013637648895382881
    2. 'in' → logprob: -4.388637542724609
    3. '():
' → logprob: -7.388637542724609
    4. '   ' → logprob: -8.51363754272461
    5. ':' → logprob: -9.26363754272461
    6. ':
' → logprob: -9.63863754272461
    7. '():' → logprob: -10.01363754272461
    8. '()' → logprob: -11.01363754272461
    9. ' =' → logprob: -11.38863754272461
    10. '(' → logprob: -11.38863754272461

Token 1881: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004975094925612211
    2. ' sys' → logprob: -8.250497817993164
    3. 'line' → logprob: -8.875497817993164
    4. 'input' → logprob: -9.625497817993164
    5. 'stdin' → logprob: -11.500497817993164
    6. '```' → logprob: -12.000497817993164
    7. 'import' → logprob: -12.500497817993164
    8. '=sys' → logprob: -12.500497817993164
    9. 'in' → logprob: -12.750497817993164
    10. 'token' → logprob: -13.125497817993164

Token 1882: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.060155436396598816
    2. '.stdin' → logprob: -3.1851553916931152
    3. 'stdin' → logprob: -4.935155391693115
    4. '```' → logprob: -5.185155391693115
    5. '.readlines' → logprob: -6.310155391693115
    6. '(stdin' → logprob: -7.310155391693115
    7. '=sys' → logprob: -7.435155391693115
    8. '=input' → logprob: -8.685155868530273
    9. 'import' → logprob: -8.810155868530273
    10. '   ' → logprob: -9.060155868530273

Token 1883: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.8416486382484436
    2. ':' → logprob: -1.4666485786437988
    3. ' in' → logprob: -1.8416485786437988
    4. ':
' → logprob: -2.466648578643799
    5. '   ' → logprob: -3.216648578643799
    6. '.readlines' → logprob: -3.966648578643799
    7. '():
' → logprob: -4.466648578643799
    8. '.rstrip' → logprob: -4.591648578643799
    9. ' as' → logprob: -6.091648578643799
    10. '.strip' → logprob: -6.091648578643799

Token 1884: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01181940920650959
    2. ' line' → logprob: -5.136819362640381
    3. ' s' → logprob: -5.636819362640381
    4. '```' → logprob: -7.011819362640381
    5. 's' → logprob: -7.136819362640381
    6. '    
' → logprob: -9.261819839477539
    7. '	line' → logprob: -9.386819839477539
    8. 'line' → logprob: -9.511819839477539
    9. '`s' → logprob: -9.761819839477539
    10. '(s' → logprob: -9.761819839477539

Token 1885: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31860998272895813
    2. 'line' → logprob: -1.3186099529266357
    3. '   ' → logprob: -5.318610191345215
    4. 'expr' → logprob: -8.443610191345215
    5. ' line' → logprob: -8.693610191345215
    6. ' s' → logprob: -10.318610191345215
    7. '	line' → logprob: -12.068610191345215
    8. '_line' → logprob: -12.818610191345215
    9. 'expression' → logprob: -12.818610191345215
    10. 'if' → logprob: -13.068610191345215

Token 1886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39410915970802307
    2. ' =' → logprob: -1.1441091299057007
    3. '=line' → logprob: -5.14410924911499
    4. '=s' → logprob: -6.64410924911499
    5. '   ' → logprob: -9.769108772277832
    6. 's' → logprob: -12.644108772277832
    7. '=input' → logprob: -12.769108772277832
    8. '.rstrip' → logprob: -12.894108772277832
    9. '.strip' → logprob: -13.144108772277832
    10. 'rstrip' → logprob: -13.644108772277832

Token 1887: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.038660429418087006
    2. 's' → logprob: -3.9136605262756348
    3. ' line' → logprob: -4.038660526275635
    4. ' s' → logprob: -8.788660049438477
    5. '   ' → logprob: -9.788660049438477
    6. '=line' → logprob: -9.788660049438477
    7. '#line' → logprob: -10.038660049438477
    8. '(line' → logprob: -11.163660049438477
    9. '	line' → logprob: -11.913660049438477
    10. '[line' → logprob: -13.413660049438477

Token 1888: '.strip' (ID: 40613)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19672107696533203
    2. '=' → logprob: -1.821721076965332
    3. '=s' → logprob: -4.571721076965332
    4. '.strip' → logprob: -5.446721076965332
    5. '.rstrip' → logprob: -6.571721076965332
    6. 'rstrip' → logprob: -7.946721076965332
    7. '=line' → logprob: -8.696721076965332
    8. '   ' → logprob: -8.696721076965332
    9. 'strip' → logprob: -10.071721076965332
    10. 's' → logprob: -10.446721076965332

Token 1889: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007547939196228981
    2. 'if' → logprob: -5.257547855377197
    3. ' if' → logprob: -6.132547855377197
    4. 'tokens' → logprob: -9.632548332214355
    5. ',' → logprob: -10.632548332214355
    6. 'token' → logprob: -11.382548332214355
    7. '	if' → logprob: -11.882548332214355
    8. '```' → logprob: -11.882548332214355
    9. '
' → logprob: -12.257548332214355
    10. '<|end|>' → logprob: -12.507548332214355

Token 1890: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008421457023359835
    2. 'if' → logprob: -7.250842094421387
    3. ' if' → logprob: -9.625842094421387
    4. 'tokens' → logprob: -10.000842094421387
    5. '```' → logprob: -10.875842094421387
    6. '	if' → logprob: -14.750842094421387
    7. '    
' → logprob: -15.250842094421387
    8. '       ' → logprob: -15.375842094421387
    9. 'token' → logprob: -15.375842094421387
    10. ' tokens' → logprob: -15.500842094421387

Token 1891: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.282635360956192
    2. 'tokens' → logprob: -1.4076353311538696
    3. '   ' → logprob: -7.15763521194458
    4. ' if' → logprob: -7.40763521194458
    5. '```' → logprob: -9.782635688781738
    6. ' tokens' → logprob: -10.782635688781738
    7. 't' → logprob: -11.907635688781738
    8. 'token' → logprob: -12.782635688781738
    9. '    
' → logprob: -13.032635688781738
    10. '
' → logprob: -13.032635688781738

Token 1892: ' s' (ID: 265)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0016211456386372447
    2. ' not' → logprob: -7.001621246337891
    3. 's' → logprob: -7.251621246337891
    4. '   ' → logprob: -15.87662124633789
    5. '```' → logprob: -15.87662124633789
    6. '(not' → logprob: -16.75162124633789
    7. '
' → logprob: -16.87662124633789
    8. 'Not' → logprob: -17.50162124633789
    9. ' s' → logprob: -18.12662124633789
    10. 'len' → logprob: -18.75162124633789

Token 1893: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023282283917069435
    2. ' ==' → logprob: -3.773282289505005
    3. '()==' → logprob: -11.398282051086426
    4. '```' → logprob: -11.773282051086426
    5. '=='' → logprob: -12.148282051086426
    6. '===' → logprob: -12.898282051086426
    7. ':' → logprob: -13.148282051086426
    8. '   ' → logprob: -13.398282051086426
    9. '==
' → logprob: -13.398282051086426
    10. '!=' → logprob: -13.898282051086426

Token 1894: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.017392728477716446
    2. ''' → logprob: -4.642392635345459
    3. '""' → logprob: -5.517392635345459
    4. '"' → logprob: -6.142392635345459
    5. '"":' → logprob: -7.517392635345459
    6. '   ' → logprob: -8.017393112182617
    7. '''
' → logprob: -8.017393112182617
    8. ''ex' → logprob: -8.642393112182617
    9. ' '':
' → logprob: -10.517393112182617
    10. '```' → logprob: -11.267393112182617

Token 1895: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.38103604316711426
    2. '':' → logprob: -1.2560360431671143
    3. ''):
' → logprob: -3.7560360431671143
    4. ''' → logprob: -6.256035804748535
    5. ':' → logprob: -6.506035804748535
    6. '   ' → logprob: -6.631035804748535
    7. ''):' → logprob: -6.631035804748535
    8. ':
' → logprob: -6.881035804748535
    9. '\n' → logprob: -7.756035804748535
    10. '')' → logprob: -7.881035804748535

Token 1896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013895198935642838
    2. '   ' → logprob: -6.626389503479004
    3. '```' → logprob: -10.501389503479004
    4. ':' → logprob: -10.626389503479004
    5. ':
' → logprob: -12.126389503479004
    6. '           ' → logprob: -13.126389503479004
    7. 'continue' → logprob: -13.376389503479004
    8. ',' → logprob: -14.751389503479004
    9. ' continue' → logprob: -15.001389503479004
    10. '     ' → logprob: -15.126389503479004

Token 1897: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3165123760700226
    2. 'break' (adapté à ' break') → logprob: -1.3165123462677002
    3. '   ' → logprob: -6.316512584686279
    4. '	break' → logprob: -6.941512584686279
    5. ' break' → logprob: -7.816512584686279
    6. '           ' → logprob: -10.441512107849121
    7. '_break' → logprob: -11.316512107849121
    8. '```' → logprob: -11.816512107849121
    9. '	   ' → logprob: -12.191512107849121
    10. '	' → logprob: -12.691512107849121

Token 1898: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08026120066642761
    2. 'tokens' → logprob: -2.58026123046875
    3. '```' → logprob: -6.95526123046875
    4. 't' → logprob: -8.83026123046875
    5. '    
' → logprob: -9.45526123046875
    6. '
' → logprob: -9.83026123046875
    7. ' tokens' → logprob: -9.83026123046875
    8. '_tokens' → logprob: -11.08026123046875
    9. '``' → logprob: -11.20526123046875
    10. 'if' → logprob: -11.33026123046875

Token 1899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02355850487947464
    2. 'tokens' → logprob: -3.7735586166381836
    3. 'if' → logprob: -9.148558616638184
    4. ' tokens' → logprob: -9.398558616638184
    5. 't' → logprob: -10.148558616638184
    6. ' if' → logprob: -10.273558616638184
    7. '```' → logprob: -10.273558616638184
    8. '_tokens' → logprob: -12.648558616638184
    9. '(tokens' → logprob: -12.773558616638184
    10. '    
' → logprob: -12.898558616638184

Token 1900: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.018353035673499107
    2. '   ' → logprob: -4.01835298538208
    3. ' tokens' → logprob: -9.268353462219238
    4. 't' → logprob: -9.268353462219238
    5. 'tok' → logprob: -11.643353462219238
    6. '```' → logprob: -13.018353462219238
    7. '    
' → logprob: -13.893353462219238
    8. 'token' → logprob: -14.518353462219238
    9. '(tokens' → logprob: -15.018353462219238
    10. '.tokens' → logprob: -15.018353462219238

Token 1901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134429454803467
    2. ' =' → logprob: -1.3134429454803467
    3. 'tokens' → logprob: -8.813443183898926
    4. '   ' → logprob: -10.938443183898926
    5. '=t' → logprob: -12.438443183898926
    6. '(tokens' → logprob: -12.563443183898926
    7. '_tokens' → logprob: -12.688443183898926
    8. ' tokens' → logprob: -13.438443183898926
    9. '.tokens' → logprob: -13.813443183898926
    10. ',' → logprob: -15.063443183898926

Token 1902: ' tokenize' (ID: 192720)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -3.619311974034645e-05
    2. ' tokenize' → logprob: -10.250036239624023
    3. ' token' → logprob: -14.500036239624023
    4. '(token' → logprob: -15.375036239624023
    5. '	token' → logprob: -18.000036239624023
    6. '[token' → logprob: -18.000036239624023
    7. '.token' → logprob: -18.250036239624023
    8. '_token' → logprob: -19.375036239624023
    9. 'tokens' → logprob: -19.375036239624023
    10. '   ' → logprob: -19.625036239624023

Token 1903: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.8325677703833207e-05
    2. 's' → logprob: -10.500028610229492
    3. '(' → logprob: -14.500028610229492
    4. ' (' → logprob: -16.000028610229492
    5. ' s' → logprob: -16.625028610229492
    6. '   ' → logprob: -18.375028610229492
    7. '```' → logprob: -19.625028610229492
    8. '#' → logprob: -20.125028610229492
    9. '{s' → logprob: -20.125028610229492
    10. ' ' → logprob: -20.250028610229492

Token 1904: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1347598433494568
    2. '   ' → logprob: -2.3847599029541016
    3. ')
' → logprob: -3.3847599029541016
    4. '
' → logprob: -10.384759902954102
    5. '    
' → logprob: -10.509759902954102
    6. '<|end|>' → logprob: -12.634759902954102
    7. ' )' → logprob: -13.009759902954102
    8. 'tokens' → logprob: -13.384759902954102
    9. ')
' → logprob: -13.509759902954102
    10. '#' → logprob: -13.634759902954102

Token 1905: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.005244783591479063
    2. 'res' → logprob: -5.505244731903076
    3. '   ' → logprob: -7.255244731903076
    4. 'vals' → logprob: -8.755245208740234
    5. ' results' → logprob: -9.130245208740234
    6. 'result' → logprob: -9.380245208740234
    7. 'values' → logprob: -9.505245208740234
    8. '```' → logprob: -10.630245208740234
    9. '    
' → logprob: -12.255245208740234
    10. '	results' → logprob: -13.130245208740234

Token 1906: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.006139003671705723
    2. 'res' → logprob: -5.256138801574707
    3. 'vals' → logprob: -7.756138801574707
    4. '   ' → logprob: -8.381138801574707
    5. 'values' → logprob: -8.381138801574707
    6. 'result' → logprob: -11.756138801574707
    7. ' results' → logprob: -12.756138801574707
    8. '    
' → logprob: -13.006138801574707
    9. '```' → logprob: -13.631138801574707
    10. 'nums' → logprob: -13.756138801574707

Token 1907: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34881657361984253
    2. ' =' → logprob: -1.2238166332244873
    3. '   ' → logprob: -8.223816871643066
    4. '(tokens' → logprob: -9.598816871643066
    5. '```' → logprob: -11.848816871643066
    6. '_tokens' → logprob: -12.098816871643066
    7. ' tokens' → logprob: -12.723816871643066
    8. 'tokens' → logprob: -12.723816871643066
    9. '<|end|>' → logprob: -13.223816871643066
    10. '    ' → logprob: -13.223816871643066

Token 1908: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.06205753982067108
    2. ' calc' → logprob: -2.8120574951171875
    3. '   ' → logprob: -10.062057495117188
    4. 'set' → logprob: -10.312057495117188
    5. '(calc' → logprob: -12.187057495117188
    6. 'sorted' → logprob: -12.562057495117188
    7. ' set' → logprob: -12.687057495117188
    8. 'cal' → logprob: -14.062057495117188
    9. ' sorted' → logprob: -14.312057495117188
    10. ' ' → logprob: -15.187057495117188

Token 1909: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -7.107425062713446e-06
    2. 'all' → logprob: -12.500006675720215
    3. '_results' → logprob: -12.875006675720215
    4. 'All' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.750006675720215
    6. '(results' → logprob: -16.50000762939453
    7. 'results' → logprob: -16.62500762939453
    8. 's' → logprob: -17.37500762939453
    9. '_ALL' → logprob: -18.12500762939453
    10. '```' → logprob: -18.37500762939453

Token 1910: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.00045593673712573946
    2. 'results' → logprob: -7.750455856323242
    3. '_all' → logprob: -10.625455856323242
    4. '(results' → logprob: -14.875455856323242
    5. 'all' → logprob: -16.375455856323242
    6. '_values' → logprob: -16.375455856323242
    7. '	results' → logprob: -16.500455856323242
    8. 's' → logprob: -16.750455856323242
    9. '_RESULTS' → logprob: -16.750455856323242
    10. ' results' → logprob: -16.875455856323242

Token 1911: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.00385719770565629
    2. '(results' → logprob: -5.628857135772705
    3. 'results' → logprob: -8.753857612609863
    4. 'tokens' → logprob: -9.253857612609863
    5. '(token' → logprob: -13.253857612609863
    6. ' =' → logprob: -15.253857612609863
    7. '```' → logprob: -15.253857612609863
    8. ' (' → logprob: -15.378857612609863
    9. '(t' → logprob: -15.628857612609863
    10. '(filtered' → logprob: -16.128856658935547

Token 1912: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4983547627925873
    2. '()
' → logprob: -1.7483547925949097
    3. ')
' → logprob: -1.9983547925949097
    4. '()' → logprob: -2.99835467338562
    5. ')' → logprob: -3.49835467338562
    6. '())
' → logprob: -6.373354911804199
    7. '())' → logprob: -7.373354911804199
    8. '
' → logprob: -8.1233549118042
    9. '    
' → logprob: -10.4983549118042
    10. '(' → logprob: -10.8733549118042

Token 1913: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11062423139810562
    2. '   ' → logprob: -2.360624313354492
    3. '```' → logprob: -4.610624313354492
    4. 'for' → logprob: -8.735624313354492
    5. '``' → logprob: -8.985624313354492
    6. 'sorted' → logprob: -9.860624313354492
    7. 'if' → logprob: -10.610624313354492
    8. '`' → logprob: -11.610624313354492
    9. ' print' → logprob: -11.735624313354492
    10. '#print' → logprob: -11.860624313354492

Token 1914: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0035184714943170547
    2. 'for' → logprob: -6.628518581390381
    3. 'results' → logprob: -7.128518581390381
    4. '```' → logprob: -7.253518581390381
    5. 'if' → logprob: -8.378518104553223
    6. 'sorted' → logprob: -8.628518104553223
    7. '   ' → logprob: -8.753518104553223
    8. 'result' → logprob: -10.378518104553223
    9. '``' → logprob: -10.628518104553223
    10. 'res' → logprob: -11.128518104553223

Token 1915: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.49500206112861633
    2. '(min' → logprob: -1.245002031326294
    3. 'len' → logprob: -2.495002031326294
    4. 'min' → logprob: -4.245002269744873
    5. '(max' → logprob: -6.245002269744873
    6. '(sorted' → logprob: -6.370002269744873
    7. '(sum' → logprob: -6.495002269744873
    8. 'sorted' → logprob: -8.370001792907715
    9. 'sum' → logprob: -8.995001792907715
    10. 'max' → logprob: -9.370001792907715

Token 1916: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.50000286102295
    3. 'results' → logprob: -13.50000286102295
    4. ')' → logprob: -15.62500286102295
    5. ' (' → logprob: -16.375003814697266
    6. '(res' → logprob: -17.500003814697266
    7. '(result' → logprob: -17.500003814697266
    8. '```' → logprob: -18.000003814697266
    9. '(tokens' → logprob: -18.375003814697266
    10. '(`' → logprob: -19.000003814697266

Token 1917: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011498635867610574
    2. '))' → logprob: -7.501149654388428
    3. '())' → logprob: -7.501149654388428
    4. '()' → logprob: -11.251150131225586
    5. '   ' → logprob: -11.751150131225586
    6. '`)' → logprob: -12.126150131225586
    7. ')
' → logprob: -12.376150131225586
    8. ')`' → logprob: -12.376150131225586
    9. ')))' → logprob: -12.501150131225586
    10. ',' → logprob: -12.626150131225586


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1915
Tokens correctement prédits (1ère position, stricte): 455
Tokens correctement prédits (1ère position, avec adaptation): 510
Tokens correctement prédits (top 10): 1178
Précision stricte (1ère position): 23.76%
Précision adaptée (1ère position): 26.63%
Précision (top 10): 61.51%
================================================================================
