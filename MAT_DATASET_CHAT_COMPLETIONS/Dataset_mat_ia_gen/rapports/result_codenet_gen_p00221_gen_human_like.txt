================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_correct(expected_num, said):
    if expected_num % 15 == 0:
        return said == "FizzBuzz"
    elif expected_num % 3 == 0:
        return said == "Fizz"
    elif expected_num % 5 == 0:
        return said == "Buzz"
    else:
        try:
            return int(said) == expected_num
        except ValueError:
            return False

import sys

for line in sys.stdin:
    if not line.strip():
        continue
    m_n = line.strip().split()
    if len(m_n) < 2:
        continue
    m, n = map(int, m_n)
    if m == 0 and n == 0:
        break
    s_list = []
    count = 0
    while count < n:
        s = sys.stdin.readline()
        if not s:
            break
        s_list.append(s.strip())
        count += 1

    players = list(range(1, m + 1))
    eliminated = set()
    current_number = 1
    turn_index = 0 # index in players list
    i = 0 # number of spoken turns so far

    while i < n:
        if len(players) - len(eliminated) <= 1:
            # Only one or zero players remain; stop processing
            break
        # find next player alive
        while players[turn_index] in eliminated:
            turn_index = (turn_index + 1) % m
        current_player = players[turn_index]
        said = s_list[i]
        if not is_correct(current_number, said):
            # eliminate current player
            eliminated.add(current_player)
            # next turn starts from next number after current_number
            current_number += 1
            # also move turn_index to next player alive for the next turn
            turn_index = (turn_index + 1) % m
            i += 1
            continue
        # if correct:
        current_number += 1
        turn_index = (turn_index + 1) % m
        i += 1

    survivors = [p for p in players if p not in eliminated]
    print(*sorted(survivors))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_correct' (ID: 77483)
  → Token d'amorce (pas de prédiction)

Token 3: '(expected' (ID: 26332)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03542565554380417
    2. '(' → logprob: -3.9104256629943848
    3. '```' → logprob: -5.035425662994385
    4. '_:' → logprob: -5.410425662994385
    5. '_parent' → logprob: -7.035425662994385
    6. '_correct' → logprob: -7.410425662994385
    7. '(_' → logprob: -7.535425662994385
    8. '(_:' → logprob: -8.285425186157227
    9. '_equal' → logprob: -8.660425186157227
    10. '_token' → logprob: -8.785425186157227

Token 4: '_num' (ID: 9834)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5954559445381165
    2. '):' → logprob: -0.8454559445381165
    3. ')' → logprob: -5.220456123352051
    4. '_token' → logprob: -5.345456123352051
    5. '_' → logprob: -5.720456123352051
    6. '_expected' → logprob: -6.970456123352051
    7. '_value' → logprob: -7.095456123352051
    8. '_character' → logprob: -7.345456123352051
    9. '_answer' → logprob: -7.845456123352051
    10. ':' → logprob: -7.970456123352051

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14433670043945312
    2. ')' → logprob: -2.269336700439453
    3. ',' → logprob: -3.644336700439453
    4. ':' → logprob: -5.394336700439453
    5. '_' → logprob: -9.519336700439453
    6. '```' → logprob: -10.769336700439453
    7. '):
' → logprob: -11.019336700439453
    8. 's' → logprob: -11.019336700439453
    9. ')_' → logprob: -11.269336700439453
    10. '=' → logprob: -11.269336700439453

Token 6: ' said' (ID: 2059)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.6317588686943054
    2. ' actual' → logprob: -1.6317589282989502
    3. 'actual' → logprob: -2.00675892829895
    4. 'user' → logprob: -2.25675892829895
    5. ' input' → logprob: -4.756758689880371
    6. ' given' → logprob: -5.006758689880371
    7. ' provided' → logprob: -5.131758689880371
    8. 'input' → logprob: -5.256758689880371
    9. 'provided' → logprob: -6.631758689880371
    10. 'given' → logprob: -6.756758689880371

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050915397703647614
    2. '_' → logprob: -3.425915479660034
    3. '_num' → logprob: -5.175915241241455
    4. '_word' → logprob: -5.675915241241455
    5. ')' → logprob: -5.925915241241455
    6. '_number' → logprob: -6.300915241241455
    7. ',' → logprob: -7.050915241241455
    8. ':' → logprob: -8.175915718078613
    9. '_value' → logprob: -8.175915718078613
    10. ')_' → logprob: -8.300915718078613

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02672264724969864
    2. '():' → logprob: -4.026722431182861
    3. '):' → logprob: -5.526722431182861
    4. '```' → logprob: -6.776722431182861
    5. '(' → logprob: -7.026722431182861
    6. '   ' → logprob: -7.276722431182861
    7. '(:' → logprob: -7.776722431182861
    8. '':' → logprob: -7.901722431182861
    9. ',' → logprob: -9.02672290802002
    10. ':**' → logprob: -9.15172290802002

Token 9: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06025038659572601
    2. ' return' → logprob: -4.310250282287598
    3. ' ' → logprob: -4.560250282287598
    4. '    ' → logprob: -4.560250282287598
    5. 'return' → logprob: -4.935250282287598
    6. '       ' → logprob: -5.310250282287598
    7. '```' → logprob: -5.685250282287598
    8. ' if' → logprob: -6.060250282287598
    9. ''' → logprob: -6.685250282287598
    10. ':' → logprob: -6.935250282287598

Token 10: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.0002776630863081664
    2. 'expected' → logprob: -8.250277519226074
    3. ' ' → logprob: -11.625277519226074
    4. ' not' → logprob: -12.125277519226074
    5. '(expected' → logprob: -14.625277519226074
    6. '	expected' → logprob: -15.125277519226074
    7. ' ' → logprob: -15.250277519226074
    8. ' said' → logprob: -15.375277519226074
    9. '_expected' → logprob: -15.500277519226074
    10. ' isinstance' → logprob: -15.750277519226074

Token 11: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.39679765701293945
    2. '_' → logprob: -1.1467976570129395
    3. ' _' → logprob: -5.2717976570129395
    4. ' ==' → logprob: -5.7717976570129395
    5. ' ' → logprob: -7.3967976570129395
    6. '==' → logprob: -7.8967976570129395
    7. '_number' → logprob: -8.521797180175781
    8. '_nums' → logprob: -9.146797180175781
    9. '.' → logprob: -9.646797180175781
    10. '_n' → logprob: -9.896797180175781

Token 12: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0067355032078921795
    2. '==' → logprob: -5.131735324859619
    3. ' >=' → logprob: -8.131735801696777
    4. ' <=' → logprob: -8.506735801696777
    5. ' >' → logprob: -9.256735801696777
    6. ' <' → logprob: -10.006735801696777
    7. ' ' → logprob: -10.381735801696777
    8. ' !=' → logprob: -10.506735801696777
    9. ' =' → logprob: -10.756735801696777
    10. '>' → logprob: -10.756735801696777

Token 13: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28450849652290344
    2. ' ' → logprob: -1.409508466720581
    3. '10' → logprob: -6.53450870513916
    4. '3' → logprob: -7.03450870513916
    5. '1' → logprob: -7.90950870513916
    6. '=' → logprob: -7.90950870513916
    7. '5' → logprob: -9.03450870513916
    8. '==' → logprob: -9.78450870513916
    9. '4' → logprob: -10.15950870513916
    10. '7' → logprob: -11.03450870513916

Token 14: '15' (ID: 1055)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33146825432777405
    2. '3' → logprob: -1.9564682245254517
    3. '10' → logprob: -2.331468343734741
    4. '5' → logprob: -3.581468343734741
    5. '1' → logprob: -4.706468105316162
    6. '15' → logprob: -5.956468105316162
    7. ' ' → logprob: -6.206468105316162
    8. '7' → logprob: -7.456468105316162
    9. '100' → logprob: -7.706468105316162
    10. '4' → logprob: -7.831468105316162

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07000911980867386
    2. '==' → logprob: -2.695009231567383
    3. '```' → logprob: -10.195009231567383
    4. ' !=' → logprob: -10.945009231567383
    5. ')' → logprob: -12.570009231567383
    6. '=' → logprob: -12.695009231567383
    7. ' ' → logprob: -12.820009231567383
    8. ')==' → logprob: -12.820009231567383
    9. '===' → logprob: -13.195009231567383
    10. ' ===' → logprob: -14.070009231567383

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326186656951904
    2. '0' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.813261032104492
    4. '```' → logprob: -16.938261032104492
    5. '=' → logprob: -17.063261032104492
    6. '  ' → logprob: -17.188261032104492
    7. '   ' → logprob: -17.500761032104492
    8. ')' → logprob: -18.188261032104492
    9. '1' → logprob: -18.313261032104492
    10. '00' → logprob: -18.813261032104492

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '00' → logprob: -18.62537956237793
    4. '  ' → logprob: -20.25037956237793
    5. 'o' → logprob: -20.31287956237793
    6. '۰' → logprob: -20.43787956237793
    7. '000' → logprob: -20.43787956237793
    8. '=' → logprob: -20.43787956237793
    9. '   ' → logprob: -20.62537956237793
    10. '```' → logprob: -20.62537956237793

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006248722202144563
    2. ' :' → logprob: -8.000624656677246
    3. ' and' → logprob: -8.750624656677246
    4. '):' → logprob: -9.875624656677246
    5. ':return' → logprob: -10.250624656677246
    6. ':
' → logprob: -11.250624656677246
    7. ':**' → logprob: -11.250624656677246
    8. '   ' → logprob: -12.875624656677246
    9. 'and' → logprob: -12.875624656677246
    10. ',' → logprob: -13.250624656677246

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1649057865142822
    2. ''' → logprob: -1.2899057865142822
    3. '   ' → logprob: -1.9149057865142822
    4. ' ' → logprob: -2.6649057865142822
    5. '"' → logprob: -3.1649057865142822
    6. ' and' → logprob: -3.2899057865142822
    7. '<|end|>' → logprob: -3.4149057865142822
    8. ':' → logprob: -3.6649057865142822
    9. ' '' → logprob: -3.7899057865142822
    10. ' return' → logprob: -4.664905548095703

Token 20: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12262395769357681
    2. ' return' → logprob: -2.497623920440674
    3. 'return' (adapté à ' return') → logprob: -3.997623920440674
    4. '   ' → logprob: -5.247623920440674
    5. ' ' → logprob: -6.497623920440674
    6. '<|end|>' → logprob: -6.497623920440674
    7. '           ' → logprob: -6.747623920440674
    8. ' (' → logprob: -7.247623920440674
    9. ':' → logprob: -7.247623920440674
    10. '\' → logprob: -7.997623920440674

Token 21: ' said' (ID: 2059)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2392706722021103
    2. ''s' → logprob: -2.1142706871032715
    3. ' "' → logprob: -2.6142706871032715
    4. ''' → logprob: -4.8642706871032715
    5. ' '' → logprob: -5.6142706871032715
    6. ' said' → logprob: -5.7392706871032715
    7. 'said' → logprob: -6.6142706871032715
    8. '"s' → logprob: -6.8642706871032715
    9. ' True' → logprob: -7.2392706871032715
    10. 'True' → logprob: -7.8642706871032715

Token 22: ' ==' (ID: 951)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3696628510951996
    2. ' ==' → logprob: -1.619662880897522
    3. ''' → logprob: -2.7446627616882324
    4. '==' → logprob: -3.1196627616882324
    5. ' ' → logprob: -6.619662761688232
    6. ' "' → logprob: -8.11966323852539
    7. ' in' → logprob: -9.11966323852539
    8. ')' → logprob: -9.24466323852539
    9. ',' → logprob: -9.24466323852539
    10. '[' → logprob: -9.36966323852539

Token 23: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08356677740812302
    2. ' "' → logprob: -2.958566665649414
    3. ''' → logprob: -3.708566665649414
    4. ' '' → logprob: -5.833566665649414
    5. ''f' → logprob: -7.208566665649414
    6. '   ' → logprob: -9.958566665649414
    7. ''"' → logprob: -11.333566665649414
    8. ' ' → logprob: -11.958566665649414
    9. ''s' → logprob: -12.458566665649414
    10. '    ' → logprob: -12.833566665649414

Token 24: 'Fizz' (ID: 198745)
  Prédit: 'Fizz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fizz' → logprob: -0.5292176008224487
    2. 'f' → logprob: -1.2792176008224487
    3. '"' → logprob: -2.0292177200317383
    4. 'F' → logprob: -7.654217720031738
    5. ''' → logprob: -8.404217720031738
    6. ''f' → logprob: -8.529217720031738
    7. ' fizz' → logprob: -9.279217720031738
    8. ' "' → logprob: -9.529217720031738
    9. ' F' → logprob: -9.779217720031738
    10. '```' → logprob: -10.654217720031738

Token 25: 'Buzz' (ID: 96714)
  Prédit: 'Buzz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Buzz' → logprob: -0.0015071245143190026
    2. 'Fizz' → logprob: -6.50150728225708
    3. 'buzz' → logprob: -12.876506805419922
    4. 'Bu' → logprob: -14.126506805419922
    5. ' Buzz' → logprob: -14.126506805419922
    6. '"' → logprob: -15.251506805419922
    7. 'F' → logprob: -15.251506805419922
    8. 'B' → logprob: -15.876506805419922
    9. ' ' → logprob: -16.251506805419922
    10. ' buzz' → logprob: -17.501506805419922

Token 26: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012146407971158624
    2. '"
' → logprob: -6.751214504241943
    3. '"
' → logprob: -10.376214981079102
    4. '"\' → logprob: -11.876214981079102
    5. '"

' → logprob: -13.001214981079102
    6. '"""' → logprob: -13.751214981079102
    7. '\n' → logprob: -14.626214981079102
    8. '\""' → logprob: -14.626214981079102
    9. '""' → logprob: -14.876214981079102
    10. '"`' → logprob: -14.876214981079102

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6293756365776062
    2. '\n' → logprob: -1.504375696182251
    3. '
' → logprob: -1.629375696182251
    4. '    
' → logprob: -4.004375457763672
    5. '```' → logprob: -5.129375457763672
    6. '<|end|>' → logprob: -5.129375457763672
    7. '  
' → logprob: -5.254375457763672
    8. ' 
' → logprob: -6.004375457763672
    9. ' ' → logprob: -6.254375457763672
    10. '\' → logprob: -6.379375457763672

Token 28: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33265602588653564
    2. '\n' → logprob: -2.082655906677246
    3. '    
' → logprob: -3.207655906677246
    4. ' ' → logprob: -3.332655906677246
    5. 'elif' (adapté à ' elif') → logprob: -3.832655906677246
    6. '
' → logprob: -4.207655906677246
    7. '  
' → logprob: -4.332655906677246
    8. '```' → logprob: -4.457655906677246
    9. ' elif' → logprob: -5.082655906677246
    10. ' 
' → logprob: -5.582655906677246

Token 29: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.016048094257712364
    2. 'expected' → logprob: -4.141047954559326
    3. '(expected' → logprob: -11.641048431396484
    4. '	expected' → logprob: -13.641048431396484
    5. ' ' → logprob: -13.766048431396484
    6. 'Expected' → logprob: -14.141048431396484
    7. ' ' → logprob: -14.266048431396484
    8. ' (' → logprob: -14.641048431396484
    9. '_expected' → logprob: -15.516048431396484
    10. '.expected' → logprob: -16.141048431396484

Token 30: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00550125353038311
    2. ' _' → logprob: -5.2555012702941895
    3. '_' → logprob: -8.380500793457031
    4. ' ' → logprob: -11.130500793457031
    5. '_nums' → logprob: -12.505500793457031
    6. '```' → logprob: -12.630500793457031
    7. '_n' → logprob: -12.880500793457031
    8. 'num' → logprob: -13.130500793457031
    9. '_NUM' → logprob: -13.505500793457031
    10. ' `_' → logprob: -13.505500793457031

Token 31: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.020566880702972412
    2. '%' → logprob: -3.895566940307617
    3. ' ' → logprob: -10.645566940307617
    4. ' ' → logprob: -14.020566940307617
    5. '```' → logprob: -16.770566940307617
    6. '   ' → logprob: -16.895566940307617
    7. '  ' → logprob: -17.583066940307617
    8. 's' → logprob: -17.645566940307617
    9. '1' → logprob: -17.708066940307617
    10. '7' → logprob: -17.770566940307617

Token 32: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3584758937358856
    2. ' ' → logprob: -1.233475923538208
    3. '5' → logprob: -4.608475685119629
    4. '15' → logprob: -12.608475685119629
    5. '```' → logprob: -12.858475685119629
    6. '   ' → logprob: -13.233475685119629
    7. ' ' → logprob: -13.358475685119629
    8. '    ' → logprob: -13.358475685119629
    9. '  ' → logprob: -13.608475685119629
    10. '03' → logprob: -15.608475685119629

Token 33: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004787295591086149
    2. '5' → logprob: -5.504787445068359
    3. ' ' → logprob: -7.254787445068359
    4. '   ' → logprob: -14.37978744506836
    5. '  ' → logprob: -14.75478744506836
    6. '```' → logprob: -14.75478744506836
    7. '15' → logprob: -15.81728744506836
    8. '    ' → logprob: -17.00478744506836
    9. 'else' → logprob: -17.75478744506836
    10. '03' → logprob: -17.81728744506836

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0299391970038414
    2. '==' → logprob: -3.5299391746520996
    3. ' ' → logprob: -8.654939651489258
    4. ' !=' → logprob: -11.529939651489258
    5. '  ' → logprob: -14.154939651489258
    6. '   ' → logprob: -14.279939651489258
    7. ' ' → logprob: -14.779939651489258
    8. '```' → logprob: -14.904939651489258
    9. '=' → logprob: -15.029939651489258
    10. '    ' → logprob: -15.154939651489258

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04301265999674797
    2. '0' → logprob: -3.1680126190185547
    3. '==' → logprob: -12.293012619018555
    4. '=' → logprob: -12.418012619018555
    5. '```' → logprob: -13.293012619018555
    6. ' ' → logprob: -13.418012619018555
    7. '  ' → logprob: -14.168012619018555
    8. ' ==' → logprob: -15.480512619018555
    9. '3' → logprob: -15.980512619018555
    10. '   ' → logprob: -16.168012619018555

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128586158156395
    2. ' ' → logprob: -2.237858533859253
    3. '3' → logprob: -11.112858772277832
    4. '=' → logprob: -11.862858772277832
    5. '==' → logprob: -12.112858772277832
    6. '```' → logprob: -12.237858772277832
    7. '1' → logprob: -14.362858772277832
    8. ' ' → logprob: -14.425358772277832
    9. '  ' → logprob: -14.487858772277832
    10. '!=' → logprob: -14.550358772277832

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004935935605317354
    2. '       ' → logprob: -5.7549357414245605
    3. ':
' → logprob: -6.7549357414245605
    4. ' and' → logprob: -8.129936218261719
    5. '   ' → logprob: -9.129936218261719
    6. '<|end|>' → logprob: -9.879936218261719
    7. ' :' → logprob: -10.004936218261719
    8. ' or' → logprob: -10.129936218261719
    9. 'and' → logprob: -11.254936218261719
    10. ':return' → logprob: -11.879936218261719

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012157135643064976
    2. ':' → logprob: -7.126215934753418
    3. '<|end|>' → logprob: -8.626215934753418
    4. ':
' → logprob: -8.751215934753418
    5. '   ' → logprob: -10.376215934753418
    6. ' ' → logprob: -11.876215934753418
    7. ':return' → logprob: -12.001215934753418
    8. ' return' → logprob: -12.126215934753418
    9. 'return' → logprob: -12.626215934753418
    10. '<|end|>' → logprob: -12.751215934753418

Token 39: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5034800171852112
    2. '       ' → logprob: -1.2534799575805664
    3. 'return' (adapté à ' return') → logprob: -2.5034799575805664
    4. '   ' → logprob: -4.003479957580566
    5. ' ' → logprob: -5.878479957580566
    6. ''s' → logprob: -6.503479957580566
    7. ' ' → logprob: -6.628479957580566
    8. 's' → logprob: -6.753479957580566
    9. ' s' → logprob: -7.128479957580566
    10. '  ' → logprob: -7.503479957580566

Token 40: ' said' (ID: 2059)
  Prédit: ' said'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' said' → logprob: -0.22566045820713043
    2. 'said' → logprob: -1.6006604433059692
    3. 's' → logprob: -9.10066032409668
    4. '"' → logprob: -10.47566032409668
    5. 'sa' → logprob: -10.72566032409668
    6. ' stated' → logprob: -10.72566032409668
    7. ' ' → logprob: -11.10066032409668
    8. '"s' → logprob: -11.60066032409668
    9. ' "' → logprob: -11.72566032409668
    10. ''s' → logprob: -11.97566032409668

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014180085621774197
    2. '==' → logprob: -4.2641801834106445
    3. ' ' → logprob: -11.889180183410645
    4. '=="' → logprob: -12.264180183410645
    5. ' =="' → logprob: -12.639180183410645
    6. '=' → logprob: -14.514180183410645
    7. ' ' → logprob: -15.264180183410645
    8. ' =' → logprob: -15.639180183410645
    9. '=='' → logprob: -15.639180183410645
    10. ' =='' → logprob: -16.014179229736328

Token 42: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.20147015154361725
    2. '"' → logprob: -1.701470136642456
    3. ''' → logprob: -10.576470375061035
    4. ' ' → logprob: -10.701470375061035
    5. ' '' → logprob: -12.076470375061035
    6. ' ' → logprob: -13.951470375061035
    7. '"I' → logprob: -14.951470375061035
    8. ')' → logprob: -14.951470375061035
    9. ''s' → logprob: -15.451470375061035
    10. 'space' → logprob: -16.20146942138672

Token 43: 'Fizz' (ID: 198745)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12696778774261475
    2. 'Fizz' → logprob: -2.1269679069519043
    3. ''' → logprob: -10.251967430114746
    4. ' "' → logprob: -12.751967430114746
    5. 'F' → logprob: -14.126967430114746
    6. '   ' → logprob: -15.751967430114746
    7. '"""' → logprob: -16.251968383789062
    8. '“' → logprob: -16.501968383789062
    9. ' ' → logprob: -16.626968383789062
    10. '\"' → logprob: -16.751968383789062

Token 44: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0010410251561552286
    2. '"
' → logprob: -6.876040935516357
    3. '"
' → logprob: -11.876041412353516
    4. '"

' → logprob: -15.251041412353516
    5. '```' → logprob: -15.251041412353516
    6. '")' → logprob: -15.501041412353516
    7. '   ' → logprob: -15.501041412353516
    8. '""' → logprob: -16.126041412353516
    9. '"""' → logprob: -16.501041412353516
    10. '"`
' → logprob: -16.876041412353516

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011925902217626572
    2. 'elif' → logprob: -5.63692569732666
    3. '	elif' → logprob: -6.01192569732666
    4. '<|end|>' → logprob: -6.13692569732666
    5. ' elif' → logprob: -6.38692569732666
    6. '```' → logprob: -6.63692569732666
    7. '    
' → logprob: -8.26192569732666
    8. ' ' → logprob: -9.01192569732666
    9. '<|end|>' → logprob: -9.38692569732666
    10. '
' → logprob: -9.76192569732666

Token 46: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3232933580875397
    2. ' elif' → logprob: -1.3232933282852173
    3. '   ' → logprob: -4.698293209075928
    4. '	elif' → logprob: -7.698293209075928
    5. 'e' → logprob: -8.198293685913086
    6. ' ' → logprob: -10.073293685913086
    7. 'else' → logprob: -10.448293685913086
    8. ' else' → logprob: -10.448293685913086
    9. 'el' → logprob: -10.823293685913086
    10. '  ' → logprob: -12.198293685913086

Token 47: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.0067170290276408195
    2. 'expected' → logprob: -5.006717205047607
    3. '(expected' → logprob: -13.63171672821045
    4. ' ' → logprob: -15.75671672821045
    5. '	expected' → logprob: -16.381717681884766
    6. 'Expected' → logprob: -16.381717681884766
    7. '.expected' → logprob: -17.381717681884766
    8. '_expected' → logprob: -17.506717681884766
    9. ' ' → logprob: -17.506717681884766
    10. ' esperado' → logprob: -18.381717681884766

Token 48: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -7.97024549683556e-05
    2. 'num' → logprob: -9.500080108642578
    3. '_' → logprob: -12.750080108642578
    4. 'Num' → logprob: -14.625080108642578
    5. '<|end|>' → logprob: -15.250080108642578
    6. ' _' → logprob: -15.375080108642578
    7. '-num' → logprob: -15.500080108642578
    8. '_n' → logprob: -15.625080108642578
    9. '_number' → logprob: -15.750080108642578
    10. '_code' → logprob: -15.750080108642578

Token 49: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11295188963413239
    2. '%' → logprob: -2.2379519939422607
    3. ' ' → logprob: -8.98795223236084
    4. ' ' → logprob: -13.36295223236084
    5. '<|end|>' → logprob: -13.61295223236084
    6. 's' → logprob: -14.11295223236084
    7. '  ' → logprob: -15.73795223236084
    8. '`' → logprob: -16.112951278686523
    9. ' `%' → logprob: -16.237951278686523
    10. '```' → logprob: -16.862951278686523

Token 50: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.31328776478767395
    2. ' ' → logprob: -1.3132877349853516
    3. '<|end|>' → logprob: -11.813287734985352
    4. '  ' → logprob: -12.063287734985352
    5. '   ' → logprob: -12.813287734985352
    6. '15' → logprob: -12.938287734985352
    7. '6' → logprob: -13.188287734985352
    8. '7' → logprob: -13.438287734985352
    9. ' ' → logprob: -13.688287734985352
    10. '```' → logprob: -14.313287734985352

Token 51: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.250045776367188
    4. '  ' → logprob: -15.875045776367188
    5. '```' → logprob: -16.750045776367188
    6. '<|end|>' → logprob: -17.250045776367188
    7. '15' → logprob: -19.062545776367188
    8. '۵' → logprob: -19.125045776367188
    9. '    ' → logprob: -19.250045776367188
    10. '५' → logprob: -19.437545776367188

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04862393066287041
    2. '==' → logprob: -3.048624038696289
    3. ' ' → logprob: -10.423624038696289
    4. '=' → logprob: -13.548624038696289
    5. ')==' → logprob: -13.923624038696289
    6. '()==' → logprob: -13.923624038696289
    7. '  ' → logprob: -14.173624038696289
    8. ' ' → logprob: -14.173624038696289
    9. '   ' → logprob: -14.798624038696289
    10. '<|end|>' → logprob: -14.798624038696289

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10020947456359863
    2. '0' → logprob: -2.3502094745635986
    3. '```' → logprob: -14.47520923614502
    4. '=' → logprob: -14.60020923614502
    5. ' ' → logprob: -14.60020923614502
    6. '  ' → logprob: -14.72520923614502
    7. '   ' → logprob: -14.72520923614502
    8. '<|end|>' → logprob: -15.72520923614502
    9. '    ' → logprob: -16.100210189819336
    10. '==' → logprob: -16.350210189819336

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009760101325809956
    2. ' ' → logprob: -4.634759902954102
    3. '```' → logprob: -13.134759902954102
    4. '   ' → logprob: -14.259759902954102
    5. '  ' → logprob: -14.947259902954102
    6. '``' → logprob: -15.447259902954102
    7. '       ' → logprob: -15.509759902954102
    8. '==' → logprob: -16.1972599029541
    9. '     ' → logprob: -16.1972599029541
    10. '=' → logprob: -16.3847599029541

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015147423837333918
    2. '       ' → logprob: -6.751514911651611
    3. ':
' → logprob: -8.251514434814453
    4. ' :' → logprob: -9.876514434814453
    5. ':return' → logprob: -11.376514434814453
    6. '):' → logprob: -11.876514434814453
    7. '   ' → logprob: -12.126514434814453
    8. ' ==' → logprob: -13.376514434814453
    9. '==' → logprob: -13.751514434814453
    10. '<|end|>' → logprob: -14.001514434814453

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006583566311746836
    2. ' return' → logprob: -6.2565836906433105
    3. ''' → logprob: -6.5065836906433105
    4. '<|end|>' → logprob: -7.0065836906433105
    5. ' ' → logprob: -7.2565836906433105
    6. '"' → logprob: -7.3815836906433105
    7. 'return' → logprob: -8.381583213806152
    8. '   ' → logprob: -8.381583213806152
    9. ' '' → logprob: -9.381583213806152
    10. '    ' → logprob: -9.381583213806152

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4076337516307831
    2. ' return' → logprob: -1.4076337814331055
    3. '       ' → logprob: -2.4076337814331055
    4. '   ' → logprob: -10.907633781433105
    5. '	return' → logprob: -12.782633781433105
    6. ' ' → logprob: -12.782633781433105
    7. '      ' → logprob: -14.157633781433105
    8. '     ' → logprob: -14.657633781433105
    9. '{return' → logprob: -14.782633781433105
    10. ':return' → logprob: -14.782633781433105

Token 58: ' said' (ID: 2059)
  Prédit: ' said'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' said' → logprob: -0.10023427754640579
    2. 'said' → logprob: -2.350234270095825
    3. 'sa' → logprob: -11.100234031677246
    4. ' sai' → logprob: -12.350234031677246
    5. ' sa' → logprob: -12.600234031677246
    6. ' ' → logprob: -13.725234031677246
    7. 's' → logprob: -13.850234031677246
    8. ' stated' → logprob: -13.975234031677246
    9. '(s' → logprob: -14.725234031677246
    10. ''s' → logprob: -14.975234031677246

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31338265538215637
    2. '==' → logprob: -1.313382625579834
    3. '=' → logprob: -9.438383102416992
    4. '=="' → logprob: -10.938383102416992
    5. ' =="' → logprob: -12.188383102416992
    6. ' ' → logprob: -12.313383102416992
    7. ' =' → logprob: -12.313383102416992
    8. '=='' → logprob: -13.063383102416992
    9. ')==' → logprob: -13.688383102416992
    10. ' ' → logprob: -13.813383102416992

Token 60: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.3132857382297516
    2. '"' → logprob: -1.3132857084274292
    3. ' ' → logprob: -11.313285827636719
    4. ''' → logprob: -12.063285827636719
    5. ' ' → logprob: -13.063285827636719
    6. ' '' → logprob: -13.313285827636719
    7. '5' → logprob: -14.188285827636719
    8. '"B' → logprob: -15.313285827636719
    9. '"s' → logprob: -15.563285827636719
    10. '    ' → logprob: -15.688285827636719

Token 61: 'Buzz' (ID: 96714)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0028235390782356262
    2. 'Buzz' → logprob: -6.002823352813721
    3. 'Fizz' → logprob: -8.002823829650879
    4. ''' → logprob: -11.377823829650879
    5. '"B' → logprob: -13.502823829650879
    6. 'buzz' → logprob: -15.377823829650879
    7. ' "' → logprob: -15.502823829650879
    8. '`' → logprob: -16.627822875976562
    9. '“' → logprob: -16.877822875976562
    10. 'f' → logprob: -17.877822875976562

Token 62: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12880004942417145
    2. '   ' → logprob: -2.5038001537323
    3. '"
' → logprob: -3.2538001537323
    4. 'return' → logprob: -8.253800392150879
    5. '")' → logprob: -9.628800392150879
    6. '```' → logprob: -10.003800392150879
    7. ' return' → logprob: -11.628800392150879
    8. ')' → logprob: -11.628800392150879
    9. '">
' → logprob: -11.753800392150879
    10. '       ' → logprob: -11.753800392150879

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007166040013544261
    2. 'return' → logprob: -7.625716686248779
    3. 'else' → logprob: -8.625716209411621
    4. ' return' → logprob: -10.875716209411621
    5. '```' → logprob: -11.500716209411621
    6. ' else' → logprob: -11.750716209411621
    7. '    
' → logprob: -12.250716209411621
    8. '       ' → logprob: -12.875716209411621
    9. '	return' → logprob: -13.625716209411621
    10. '<|end|>' → logprob: -13.750716209411621

Token 64: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13015985488891602
    2. 'else' (adapté à ' else') → logprob: -2.255159854888916
    3. 'return' → logprob: -4.130159854888916
    4. ' else' → logprob: -7.005159854888916
    5. ' return' → logprob: -8.755159378051758
    6. 'elif' → logprob: -11.755159378051758
    7. '    
' → logprob: -12.005159378051758
    8. '<|end|>' → logprob: -12.130159378051758
    9. ' ' → logprob: -12.255159378051758
    10. '       ' → logprob: -12.255159378051758

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04493248090147972
    2. '       ' → logprob: -3.2949323654174805
    3. ':
' → logprob: -5.6699323654174805
    4. '   ' → logprob: -6.0449323654174805
    5. ':return' → logprob: -6.9199323654174805
    6. '    ' → logprob: -11.16993236541748
    7. '<|end|>' → logprob: -11.66993236541748
    8. ' return' → logprob: -11.79493236541748
    9. ' :' → logprob: -11.79493236541748
    10. '     ' → logprob: -12.41993236541748

Token 66: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04849901422858238
    2. 'return' → logprob: -3.54849910736084
    3. '       ' → logprob: -4.54849910736084
    4. '   ' → logprob: -4.92349910736084
    5. '    ' → logprob: -7.42349910736084
    6. ' ' → logprob: -9.54849910736084
    7. '     ' → logprob: -10.92349910736084
    8. '  ' → logprob: -11.92349910736084
    9. '      ' → logprob: -12.04849910736084
    10. '	return' → logprob: -12.42349910736084

Token 67: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00210267910733819
    2. ' return' → logprob: -6.752102851867676
    3. '       ' → logprob: -7.002102851867676
    4. '   ' → logprob: -10.752102851867676
    5. ' ' → logprob: -15.127102851867676
    6. '	return' → logprob: -15.752102851867676
    7. '```' → logprob: -16.62710189819336
    8. '  ' → logprob: -17.00210189819336
    9. '     ' → logprob: -17.37710189819336
    10. '    ' → logprob: -17.50210189819336

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011080006137490273
    2. ':
' → logprob: -4.511079788208008
    3. ':return' → logprob: -11.136079788208008
    4. ' :' → logprob: -12.011079788208008
    5. '   ' → logprob: -12.011079788208008
    6. '<|end|>' → logprob: -13.386079788208008
    7. '{' → logprob: -14.011079788208008
    8. '       ' → logprob: -14.386079788208008
    9. ':

' → logprob: -14.511079788208008
    10. '<|end|>' → logprob: -14.761079788208008

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.210075244307518
    2. ':' → logprob: -1.9600752592086792
    3. ':
' → logprob: -3.7100751399993896
    4. '       ' → logprob: -4.335075378417969
    5. '   ' → logprob: -4.960075378417969
    6. ':return' → logprob: -6.335075378417969
    7. ' :' → logprob: -7.335075378417969
    8. ' return' → logprob: -7.960075378417969
    9. ' to' → logprob: -8.085075378417969
    10. '               ' → logprob: -8.460075378417969

Token 70: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7449438571929932
    2. '           ' → logprob: -1.7449438571929932
    3. '               ' → logprob: -1.8699438571929932
    4. 'int' → logprob: -2.744943857192993
    5. 'return' (adapté à ' return') → logprob: -2.744943857192993
    6. ' int' → logprob: -3.494943857192993
    7. '   ' → logprob: -4.244943618774414
    8. '       ' → logprob: -4.619943618774414
    9. ':return' → logprob: -5.869943618774414
    10. ':int' → logprob: -6.244943618774414

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.010855860076844692
    2. ' expected' → logprob: -4.885855674743652
    3. 'int' → logprob: -5.760855674743652
    4. 'expected' → logprob: -10.135855674743652
    5. ' said' → logprob: -10.635855674743652
    6. ' ' → logprob: -11.135855674743652
    7. '(int' → logprob: -12.135855674743652
    8. ' stated' → logprob: -12.635855674743652
    9. '<int' → logprob: -13.260855674743652
    10. 'said' → logprob: -13.885855674743652

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.008699547499418259
    2. '(' → logprob: -4.758699417114258
    3. '(expected' → logprob: -9.758699417114258
    4. '(sa' → logprob: -10.633699417114258
    5. ' (' → logprob: -13.258699417114258
    6. '(
' → logprob: -14.758699417114258
    7. 's' → logprob: -15.758699417114258
    8. ' ' → logprob: -16.133699417114258
    9. 'said' → logprob: -16.133699417114258
    10. '("' → logprob: -16.258699417114258

Token 73: 'aid' (ID: 16745)
  Prédit: 'aid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aid' → logprob: -0.02699790894985199
    2. 'a' → logprob: -3.6519978046417236
    3. 'said' → logprob: -7.776998043060303
    4. 'ai' → logprob: -9.776997566223145
    5. '```' → logprob: -9.901997566223145
    6. 'aised' → logprob: -10.901997566223145
    7. '   ' → logprob: -11.276997566223145
    8. ')' → logprob: -11.651997566223145
    9. 'aidh' → logprob: -11.776997566223145
    10. 'а' → logprob: -11.776997566223145

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.8497312895488e-05
    2. ')==' → logprob: -10.125068664550781
    3. ' )' → logprob: -10.750068664550781
    4. '       ' → logprob: -12.250068664550781
    5. '==' → logprob: -14.500068664550781
    6. ' ==' → logprob: -14.750068664550781
    7. '   ' → logprob: -15.000068664550781
    8. '           ' → logprob: -15.500068664550781
    9. '")' → logprob: -15.875068664550781
    10. '）' → logprob: -16.12506866455078

Token 75: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08933114260435104
    2. '==' → logprob: -2.4643311500549316
    3. ')' → logprob: -8.464330673217773
    4. '=' → logprob: -9.714330673217773
    5. '           ' → logprob: -9.839330673217773
    6. '       ' → logprob: -10.589330673217773
    7. ')==' → logprob: -10.589330673217773
    8. '        ' → logprob: -13.089330673217773
    9. '()==' → logprob: -13.089330673217773
    10. ' =' → logprob: -13.089330673217773

Token 76: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.0009243228123523295
    2. 'expected' → logprob: -7.000924110412598
    3. ' ' → logprob: -11.500924110412598
    4. ' ' → logprob: -13.250924110412598
    5. '(expected' → logprob: -14.625924110412598
    6. '	expected' → logprob: -15.875924110412598
    7. '_expected' → logprob: -16.250925064086914
    8. 'Expected' → logprob: -16.250925064086914
    9. ' Expected' → logprob: -17.125925064086914
    10. ' esperado' → logprob: -17.125925064086914

Token 77: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.37500286102295
    3. 'num' → logprob: -14.87500286102295
    4. ' _' → logprob: -15.00000286102295
    5. '_n' → logprob: -16.875001907348633
    6. '_NUM' → logprob: -17.500001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'expected' → logprob: -18.125001907348633
    9. '_expected' → logprob: -18.875001907348633
    10. '_nums' → logprob: -19.000001907348633

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043446677736938
    2. ' except' → logprob: -6.379344463348389
    3. 'except' → logprob: -6.504344463348389
    4. '
' → logprob: -7.754344463348389
    5. '	except' → logprob: -7.754344463348389
    6. '   ' → logprob: -8.754344940185547
    7. '<|end|>' → logprob: -9.379344940185547
    8. '\n' → logprob: -12.004344940185547
    9. '<|end|>' → logprob: -12.379344940185547
    10. '
' → logprob: -12.504344940185547

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016839731484651566
    2. ' except' → logprob: -4.766839504241943
    3. 'except' → logprob: -5.641839504241943
    4. '<|end|>' → logprob: -5.641839504241943
    5. '	except' → logprob: -7.391839504241943
    6. '
' → logprob: -8.516839981079102
    7. '   ' → logprob: -8.766839981079102
    8. '<|end|>' → logprob: -9.766839981079102
    9. ',' → logprob: -11.266839981079102
    10. ')' → logprob: -11.266839981079102

Token 80: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.6212611198425293
    2. ' except' → logprob: -0.9962611198425293
    3. '       ' → logprob: -2.8712611198425293
    4. '   ' → logprob: -3.9962611198425293
    5. '	except' → logprob: -3.9962611198425293
    6. '
' → logprob: -9.871261596679688
    7. '    ' → logprob: -11.996261596679688
    8. '	' → logprob: -11.996261596679688
    9. '           ' → logprob: -12.871261596679688
    10. '     ' → logprob: -13.246261596679688

Token 81: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.010086939670145512
    2. 'Value' → logprob: -5.385087013244629
    3. '	Value' → logprob: -6.010087013244629
    4. '(Value' → logprob: -6.510087013244629
    5. ' Exception' → logprob: -7.260087013244629
    6. ' ' → logprob: -8.260087013244629
    7. '_value' → logprob: -8.510087013244629
    8. '<|end|>' → logprob: -9.260087013244629
    9. ' (' → logprob: -9.385087013244629
    10. '<Value' → logprob: -9.760087013244629

Token 82: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.38687923550605774
    2. 'rror' → logprob: -1.1368792057037354
    3. 'ror' → logprob: -12.011878967285156
    4. 'alue' → logprob: -14.011878967285156
    5. 'r' → logprob: -14.261878967285156
    6. 'ption' → logprob: -15.761878967285156
    7. 'LError' → logprob: -16.136878967285156
    8. ' Error' → logprob: -16.261878967285156
    9. 'Errors' → logprob: -16.386878967285156
    10. 'error' → logprob: -16.511878967285156

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006429764907807112
    2. ':
' → logprob: -7.375642776489258
    3. ':return' → logprob: -11.625642776489258
    4. '):' → logprob: -12.250642776489258
    5. '       ' → logprob: -14.250642776489258
    6. ' :' → logprob: -14.375642776489258
    7. ':**' → logprob: -14.625642776489258
    8. '           ' → logprob: -14.875642776489258
    9. '   ' → logprob: -15.875642776489258
    10. '():' → logprob: -16.250642776489258

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012091610115021467
    2. '       ' → logprob: -6.876209259033203
    3. ' return' → logprob: -9.751209259033203
    4. ' False' → logprob: -10.126209259033203
    5. ':' → logprob: -10.751209259033203
    6. 'False' → logprob: -10.876209259033203
    7. ' True' → logprob: -11.626209259033203
    8. 'return' → logprob: -12.251209259033203
    9. '   ' → logprob: -12.501209259033203
    10. '0' → logprob: -12.626209259033203

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3351718485355377
    2. 'return' (adapté à ' return') → logprob: -1.5851718187332153
    3. '       ' → logprob: -3.210171937942505
    4. '   ' → logprob: -4.085171699523926
    5. ' False' → logprob: -4.210171699523926
    6. 'False' → logprob: -5.335171699523926
    7. '           ' → logprob: -5.960171699523926
    8. ' false' → logprob: -8.835171699523926
    9. ' ' → logprob: -9.085171699523926
    10. '	return' → logprob: -9.710171699523926

Token 86: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07888978719711304
    2. ' False' → logprob: -2.578889846801758
    3. '(False' → logprob: -18.953889846801758
    4. 'None' → logprob: -21.578889846801758
    5. 'F' → logprob: -22.328889846801758
    6. '   ' → logprob: -22.828889846801758
    7. 'True' → logprob: -22.828889846801758
    8. 'Fal' → logprob: -23.453889846801758
    9. '=False' → logprob: -23.703889846801758
    10. 'false' → logprob: -24.078889846801758

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7331843376159668
    2. '\n' → logprob: -1.6081843376159668
    3. '<|end|>' → logprob: -1.9831843376159668
    4. '
' → logprob: -2.483184337615967
    5. '```' → logprob: -3.108184337615967
    6. '\' → logprob: -3.858184337615967
    7. ' ' → logprob: -5.233184337615967
    8. 'def' → logprob: -5.608184337615967
    9. '<|end|>' → logprob: -5.608184337615967
    10. 'newline' → logprob: -5.608184337615967

Token 89: ' sys' (ID: 12228)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.24559332430362701
    2. ' sys' → logprob: -2.495593309402466
    3. ' unittest' → logprob: -2.870593309402466
    4. ' re' → logprob: -3.495593309402466
    5. ' math' → logprob: -3.745593309402466
    6. ' ' → logprob: -4.495593547821045
    7. ' itertools' → logprob: -4.495593547821045
    8. ' pytest' → logprob: -7.370593547821045
    9. ' collections' → logprob: -7.995593547821045
    10. ' functools' → logprob: -8.495593070983887

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.372249037027359
    2. '

' → logprob: -1.2472490072250366
    3. 'def' → logprob: -4.622249126434326
    4. '\n' → logprob: -4.997249126434326
    5. '<|end|>' → logprob: -6.372249126434326
    6. '' → logprob: -6.622249126434326
    7. '
' → logprob: -7.372249126434326
    8. 'newline' → logprob: -7.497249126434326
    9. '```' → logprob: -7.747249126434326
    10. 'n' → logprob: -7.872249126434326

Token 91: 'for' (ID: 1938)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7562241554260254
    2. 'for' → logprob: -1.0062241554260254
    3. 'def' → logprob: -2.0062241554260254
    4. 'num' → logprob: -4.381224155426025
    5. 'if' → logprob: -4.756224155426025
    6. 'number' → logprob: -5.881224155426025
    7. 'input' → logprob: -6.006224155426025
    8. 'print' → logprob: -6.631224155426025
    9. 'f' → logprob: -7.381224155426025
    10. 'user' → logprob: -7.881224155426025

Token 92: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3968450725078583
    2. ' i' → logprob: -1.1468451023101807
    3. ' _' → logprob: -5.396844863891602
    4. ' num' → logprob: -5.896844863891602
    5. ' expected' → logprob: -6.271844863891602
    6. ' line' → logprob: -8.396844863891602
    7. ' number' → logprob: -8.521844863891602
    8. ' n' → logprob: -8.896844863891602
    9. '_' → logprob: -9.896844863891602
    10. 'i' → logprob: -10.021844863891602

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006766886916011572
    2. 'in' → logprob: -5.1317667961120605
    3. ' ' → logprob: -7.1317667961120605
    4. '	in' → logprob: -11.131767272949219
    5. 's' → logprob: -12.131767272949219
    6. 'line' → logprob: -12.631767272949219
    7. '  ' → logprob: -13.006767272949219
    8. ' ' → logprob: -13.381767272949219
    9. '```' → logprob: -13.381767272949219
    10. '_' → logprob: -13.756767272949219

Token 94: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759485363960266
    2. 'sys' → logprob: -0.8259485363960266
    3. '	sys' → logprob: -12.450948715209961
    4. '=sys' → logprob: -12.575948715209961
    5. '(sys' → logprob: -14.200948715209961
    6. ' ' → logprob: -14.700948715209961
    7. 'stdin' → logprob: -15.825948715209961
    8. ' iter' → logprob: -15.950948715209961
    9. 'iter' → logprob: -16.07594871520996
    10. 's' → logprob: -17.32594871520996

Token 95: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0013535681646317244
    2. '.' → logprob: -6.626353740692139
    3. 'stdin' → logprob: -11.37635326385498
    4. ' .' → logprob: -11.75135326385498
    5. '.readline' → logprob: -12.87635326385498
    6. '.argv' → logprob: -13.12635326385498
    7. '.stdout' → logprob: -13.25135326385498
    8. '.readlines' → logprob: -14.50135326385498
    9. ' stdin' → logprob: -14.75135326385498
    10. '(stdin' → logprob: -15.37635326385498

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3757847249507904
    2. '.readline' → logprob: -1.5007847547531128
    3. '.strip' → logprob: -2.6257846355438232
    4. '.' → logprob: -4.375784873962402
    5. '.rstrip' → logprob: -6.000784873962402
    6. '.readlines' → logprob: -6.500784873962402
    7. ':
' → logprob: -8.250784873962402
    8. 'rstrip' → logprob: -8.500784873962402
    9. 'strip' → logprob: -8.750784873962402
    10. ' readline' → logprob: -9.000784873962402

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048596507986076176
    2. '    
' → logprob: -8.875486373901367
    3. ' line' → logprob: -8.875486373901367
    4. ' input' → logprob: -9.625486373901367
    5. ' expected' → logprob: -10.125486373901367
    6. ' readline' → logprob: -11.000486373901367
    7. 'n' → logprob: -11.250486373901367
    8. '
' → logprob: -12.000486373901367
    9. '   ' → logprob: -12.125486373901367
    10. ' s' → logprob: -12.125486373901367

Token 98: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6180797815322876
    2. '   ' → logprob: -1.2430797815322876
    3. ' num' → logprob: -2.368079662322998
    4. ' n' → logprob: -3.743079662322998
    5. ' expected' → logprob: -3.868079662322998
    6. ' number' → logprob: -3.993079662322998
    7. ' input' → logprob: -4.743079662322998
    8. 'num' → logprob: -5.993079662322998
    9. ' s' → logprob: -7.243079662322998
    10. 'line' → logprob: -7.368079662322998

Token 99: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1763058751821518
    2. ' line' → logprob: -1.926305890083313
    3. 'not' → logprob: -4.801305770874023
    4. 'line' → logprob: -4.926305770874023
    5. ' ' → logprob: -7.926305770874023
    6. ' is' → logprob: -9.301305770874023
    7. 'is' → logprob: -11.551305770874023
    8. '	line' → logprob: -12.676305770874023
    9. '  ' → logprob: -12.801305770874023
    10. ' ' → logprob: -13.051305770874023

Token 100: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04300912097096443
    2. 'line' → logprob: -3.168009042739868
    3. ' ' → logprob: -12.293008804321289
    4. '	line' → logprob: -12.668008804321289
    5. 'ine' → logprob: -14.293008804321289
    6. '(line' → logprob: -15.293008804321289
    7. '#line' → logprob: -15.293008804321289
    8. 'li' → logprob: -15.793008804321289
    9. ' lin' → logprob: -15.918008804321289
    10. '```' → logprob: -15.918008804321289

Token 101: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.038349222391843796
    2. '.' → logprob: -3.288349151611328
    3. '.rstrip' → logprob: -8.413349151611328
    4. ' .' → logprob: -9.788349151611328
    5. '.startswith' → logprob: -10.663349151611328
    6. 'strip' → logprob: -13.038349151611328
    7. ':' → logprob: -13.413349151611328
    8. '.readline' → logprob: -14.038349151611328
    9. '.chomp' → logprob: -14.413349151611328
    10. '.endswith' → logprob: -14.913349151611328

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005759556777775288
    2. '():
' → logprob: -5.2557597160339355
    3. '()' → logprob: -7.7557597160339355
    4. ' ():' → logprob: -9.880759239196777
    5. ':' → logprob: -10.130759239196777
    6. '():
' → logprob: -12.505759239196777
    7. '():

' → logprob: -13.505759239196777
    8. ' :' → logprob: -14.755759239196777
    9. '(' → logprob: -15.005759239196777
    10. '()==' → logprob: -15.630759239196777

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015468881465494633
    2. '   ' → logprob: -4.265469074249268
    3. ':' → logprob: -6.890469074249268
    4. ':
' → logprob: -9.01546859741211
    5. '    ' → logprob: -9.39046859741211
    6. ' ' → logprob: -11.14046859741211
    7. '      ' → logprob: -11.26546859741211
    8. '  ' → logprob: -11.76546859741211
    9. '     ' → logprob: -11.89046859741211
    10. ' break' → logprob: -12.01546859741211

Token 104: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.17896197736263275
    2. '       ' → logprob: -2.553961992263794
    3. '   ' → logprob: -2.803961992263794
    4. 'break' → logprob: -3.678961992263794
    5. '	break' → logprob: -8.803961753845215
    6. ' ' → logprob: -10.053961753845215
    7. ' continue' → logprob: -10.678961753845215
    8. '
' → logprob: -11.178961753845215
    9. '    ' → logprob: -11.428961753845215
    10. '           ' → logprob: -11.428961753845215

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015644121915102005
    2. '    
' → logprob: -4.515644073486328
    3. '
' → logprob: -5.390644073486328
    4. '   
' → logprob: -12.015644073486328
    5. '  
' → logprob: -12.015644073486328
    6. '        
' → logprob: -12.140644073486328
    7. '<|end|>' → logprob: -13.140644073486328
    8. ' 
' → logprob: -13.890644073486328
    9. '    

' → logprob: -14.140644073486328
    10. '    
' → logprob: -14.140644073486328

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006478756666183472
    2. '    
' → logprob: -5.131478786468506
    3. '
' → logprob: -7.631478786468506
    4. '    ' → logprob: -11.131478309631348
    5. '   
' → logprob: -11.381478309631348
    6. '        
' → logprob: -11.506478309631348
    7. '  
' → logprob: -11.506478309631348
    8. ' 
' → logprob: -12.506478309631348
    9. '<|end|>' → logprob: -12.506478309631348
    10. '     
' → logprob: -12.756478309631348

Token 107: ' m' (ID: 284)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.6122265458106995
    2. '   ' → logprob: -1.8622264862060547
    3. ' expected' → logprob: -2.2372264862060547
    4. ' parts' → logprob: -2.4872264862060547
    5. 'num' → logprob: -2.9872264862060547
    6. 'parts' → logprob: -2.9872264862060547
    7. 'tokens' → logprob: -5.737226486206055
    8. 'input' → logprob: -6.487226486206055
    9. ' num' → logprob: -6.612226486206055
    10. 'number' → logprob: -6.612226486206055

Token 108: '_n' (ID: 2170)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7492835521697998
    2. ' =' → logprob: -2.1242835521698
    3. 'sg' → logprob: -2.2492835521698
    4. '   ' → logprob: -2.3742835521698
    5. 'atch' → logprob: -3.6242835521698
    6. 'num' → logprob: -3.7492835521698
    7. 'atched' → logprob: -3.9992835521698
    8. '    ' → logprob: -4.124283790588379
    9. 'parts' → logprob: -4.124283790588379
    10. '=' → logprob: -4.124283790588379

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08467048406600952
    2. '=' → logprob: -2.9596705436706543
    3. 'atch' → logprob: -3.7096705436706543
    4. 's' → logprob: -6.834670543670654
    5. 'in' → logprob: -6.959670543670654
    6. 'ean' → logprob: -7.209670543670654
    7. 'ax' → logprob: -7.584670543670654
    8. 'aybe' → logprob: -8.334670066833496
    9. 'atching' → logprob: -8.584670066833496
    10. '   ' → logprob: -8.834670066833496

Token 110: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1833219975233078
    2. 'line' → logprob: -1.8083219528198242
    3. ' list' → logprob: -5.933321952819824
    4. 'list' → logprob: -7.808321952819824
    5. '[line' → logprob: -8.433321952819824
    6. ' map' → logprob: -9.058321952819824
    7. ' [' → logprob: -9.808321952819824
    8. '[' → logprob: -10.058321952819824
    9. '=line' → logprob: -11.058321952819824
    10. 'map' → logprob: -11.058321952819824

Token 111: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.14443327486515045
    2. '.' → logprob: -2.3944332599639893
    3. '.split' → logprob: -3.1444332599639893
    4. '.rstrip' → logprob: -9.26943302154541
    5. ' .' → logprob: -9.51943302154541
    6. 'split' → logprob: -13.64443302154541
    7. 'strip' → logprob: -14.26943302154541
    8. '.startswith' → logprob: -14.39443302154541
    9. '.readline' → logprob: -14.89443302154541
    10. '.trim' → logprob: -15.14443302154541

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011467679869383574
    2. '.split' → logprob: -7.1261467933654785
    3. '()' → logprob: -8.62614631652832
    4. '.' → logprob: -9.00114631652832
    5. ' .' → logprob: -10.62614631652832
    6. ' ().' → logprob: -11.12614631652832
    7. '()
' → logprob: -15.12614631652832
    8. '   ' → logprob: -16.12614631652832
    9. '(' → logprob: -16.12614631652832
    10. 'split' → logprob: -17.25114631652832

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -15.5
    3. ' split' → logprob: -16.25
    4. '.split' → logprob: -18.875
    5. 'strip' → logprob: -19.0
    6. 'sp' → logprob: -19.625
    7. '(split' → logprob: -20.625
    8. 's' → logprob: -21.25
    9. 'rstrip' → logprob: -21.75
    10. '_split' → logprob: -22.0

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003659746435005218
    2. '('' → logprob: -8.1253662109375
    3. '(',' → logprob: -10.2503662109375
    4. '(' → logprob: -10.6253662109375
    5. '("' → logprob: -12.5003662109375
    6. '(",' → logprob: -13.0003662109375
    7. '()
' → logprob: -13.5003662109375
    8. '()]' → logprob: -14.5003662109375
    9. ' ()' → logprob: -15.0003662109375
    10. '())' → logprob: -15.0003662109375

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22082777321338654
    2. '<|end|>' → logprob: -2.09582781791687
    3. '[' → logprob: -3.09582781791687
    4. ' ' → logprob: -4.345827579498291
    5. '
' → logprob: -4.970827579498291
    6. '  ' → logprob: -5.970827579498291
    7. '<|end|>' → logprob: -6.220827579498291
    8. '    
' → logprob: -6.595827579498291
    9. '  
' → logprob: -7.345827579498291
    10. ' 
' → logprob: -7.470827579498291

Token 116: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007027461193501949
    2. ' m' → logprob: -5.507027626037598
    3. 'i' → logprob: -6.257027626037598
    4. 'n' → logprob: -7.757027626037598
    5. 'start' → logprob: -8.632027626037598
    6. 'if' (adapté à ' if') → logprob: -8.882027626037598
    7. 'M' → logprob: -9.882027626037598
    8. '   ' → logprob: -9.882027626037598
    9. ' if' → logprob: -10.132027626037598
    10. ' i' → logprob: -10.132027626037598

Token 117: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16075533628463745
    2. ' len' → logprob: -1.9107553958892822
    3. ' not' → logprob: -7.660755157470703
    4. 'not' → logprob: -9.785755157470703
    5. '(len' → logprob: -13.535755157470703
    6. ' ' → logprob: -13.785755157470703
    7. 'int' → logprob: -14.535755157470703
    8. 'm' → logprob: -14.660755157470703
    9. ' m' → logprob: -14.785755157470703
    10. ' int' → logprob: -16.160755157470703

Token 118: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.20484709739685059
    2. '(' → logprob: -1.7048470973968506
    3. ' (' → logprob: -5.70484733581543
    4. ' m' → logprob: -9.95484733581543
    5. ' ' → logprob: -10.20484733581543
    6. '(
' → logprob: -12.45484733581543
    7. 'm' → logprob: -13.32984733581543
    8. '<|end|>' → logprob: -13.57984733581543
    9. '()' → logprob: -13.95484733581543
    10. '	m' → logprob: -14.07984733581543

Token 119: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.015779774636030197
    2. '_' → logprob: -4.640779972076416
    3. '_m' → logprob: -5.515779972076416
    4. ' _' → logprob: -6.765779972076416
    5. ' ' → logprob: -7.765779972076416
    6. ')' → logprob: -9.140779495239258
    7. '   ' → logprob: -9.140779495239258
    8. ' ==' → logprob: -10.140779495239258
    9. ' <' → logprob: -10.890779495239258
    10. 'm' → logprob: -11.015779495239258

Token 120: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.028725210577249527
    2. ' ==' → logprob: -4.6537251472473145
    3. ')' → logprob: -4.7787251472473145
    4. '!=' → logprob: -4.9037251472473145
    5. ' <' → logprob: -6.4037251472473145
    6. '==' → logprob: -7.4037251472473145
    7. ' )' → logprob: -7.7787251472473145
    8. ' ' → logprob: -9.153725624084473
    9. ')!=' → logprob: -9.278725624084473
    10. ' >=' → logprob: -10.278725624084473

Token 121: ' <' (ID: 464)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.046569399535655975
    2. '!=' → logprob: -3.296569347381592
    3. ' <' → logprob: -5.296569347381592
    4. ' ==' → logprob: -5.921569347381592
    5. '==' → logprob: -7.796569347381592
    6. '<' → logprob: -8.17156982421875
    7. ' ' → logprob: -9.29656982421875
    8. ' >=' → logprob: -12.29656982421875
    9. ' ' → logprob: -12.79656982421875
    10. ' not' → logprob: -13.67156982421875

Token 122: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.251983106136322
    2. ' ' → logprob: -1.5019831657409668
    3. '1' → logprob: -10.001982688903809
    4. '  ' → logprob: -13.189482688903809
    5. '<|end|>' → logprob: -13.751982688903809
    6. '>' → logprob: -14.126982688903809
    7. '=' → logprob: -14.251982688903809
    8. ' ' → logprob: -14.439482688903809
    9. '```' → logprob: -14.626982688903809
    10. '   ' → logprob: -14.814482688903809

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020950057660229504
    2. ' ' → logprob: -8.50020980834961
    3. '1' → logprob: -12.12520980834961
    4. '  ' → logprob: -16.25020980834961
    5. '   ' → logprob: -16.75020980834961
    6. '>' → logprob: -17.00020980834961
    7. '```' → logprob: -17.00020980834961
    8. '=' → logprob: -17.06270980834961
    9. '
' → logprob: -17.50020980834961
    10. '3' → logprob: -17.50020980834961

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09056652337312698
    2. ':
' → logprob: -2.590566635131836
    3. ' or' → logprob: -4.465566635131836
    4. '   ' → logprob: -9.840566635131836
    5. ' and' → logprob: -10.715566635131836
    6. ' :' → logprob: -11.840566635131836
    7. ':return' → logprob: -11.965566635131836
    8. '       ' → logprob: -12.465566635131836
    9. ':

' → logprob: -12.590566635131836
    10. ' :
' → logprob: -12.715566635131836

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3357778787612915
    2. ':
' → logprob: -1.4607778787612915
    3. ':' → logprob: -2.960777759552002
    4. '   ' → logprob: -7.460777759552002
    5. ' continue' → logprob: -7.835777759552002
    6. ' or' → logprob: -9.08577823638916
    7. ' :
' → logprob: -9.58577823638916
    8. '	continue' → logprob: -9.83577823638916
    9. 'continue' → logprob: -9.83577823638916
    10. '	' → logprob: -10.58577823638916

Token 126: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4473098814487457
    2. ' break' → logprob: -1.1973098516464233
    3. '   ' → logprob: -3.322309970855713
    4. ' continue' → logprob: -4.322309970855713
    5. 'break' → logprob: -4.947309970855713
    6. 'continue' (adapté à ' continue') → logprob: -6.322309970855713
    7. '	break' → logprob: -8.822309494018555
    8. '    ' → logprob: -9.447309494018555
    9. ' ' → logprob: -9.697309494018555
    10. '           ' → logprob: -9.697309494018555

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.491183340549469
    2. '
' → logprob: -0.991183340549469
    3. '    
' → logprob: -4.116183280944824
    4. '  
' → logprob: -8.116183280944824
    5. '<|end|>' → logprob: -8.991183280944824
    6. ' 
' → logprob: -9.491183280944824
    7. '   
' → logprob: -9.991183280944824
    8. '        
' → logprob: -10.366183280944824
    9. 'm' → logprob: -10.741183280944824
    10. '
' → logprob: -11.616183280944824

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5359770059585571
    2. '
' → logprob: -1.0359770059585571
    3. '    
' → logprob: -2.9109768867492676
    4. 'm' → logprob: -6.035976886749268
    5. ' 
' → logprob: -6.785976886749268
    6. ' m' → logprob: -7.160976886749268
    7. '  
' → logprob: -7.285976886749268
    8. '   
' → logprob: -8.785977363586426
    9. 'n' → logprob: -9.410977363586426
    10. '        
' → logprob: -9.535977363586426

Token 129: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.09175898134708405
    2. ' m' → logprob: -2.466758966445923
    3. 'M' → logprob: -6.966759204864502
    4. ' start' → logprob: -7.341759204864502
    5. 'start' → logprob: -7.341759204864502
    6. ' M' → logprob: -8.216758728027344
    7. '   ' → logprob: -9.466758728027344
    8. 'expected' → logprob: -10.216758728027344
    9. ' expected' → logprob: -10.216758728027344
    10. 'i' → logprob: -10.341758728027344

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009903295896947384
    2. ',n' → logprob: -5.134903430938721
    3. ' ,' → logprob: -6.509903430938721
    4. ' =' → logprob: -6.759903430938721
    5. ',num' → logprob: -7.759903430938721
    6. '_num' → logprob: -8.259902954101562
    7. '=' → logprob: -8.509902954101562
    8. ',m' → logprob: -8.759902954101562
    9. '=int' → logprob: -9.509902954101562
    10. '_n' → logprob: -9.634902954101562

Token 131: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029842812567949295
    2. 'n' → logprob: -3.5298428535461426
    3. ' ' → logprob: -10.154842376708984
    4. '_n' → logprob: -10.279842376708984
    5. ' ' → logprob: -12.279842376708984
    6. ' 
' → logprob: -12.404842376708984
    7. '	n' → logprob: -12.529842376708984
    8. '<|end|>' → logprob: -12.904842376708984
    9. '=' → logprob: -14.279842376708984
    10. ' =' → logprob: -14.529842376708984

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023654252290726
    2. '=' → logprob: -2.350236654281616
    3. ',' → logprob: -10.850236892700195
    4. ' ' → logprob: -12.100236892700195
    5. '=int' → logprob: -12.850236892700195
    6. ' =
' → logprob: -13.850236892700195
    7. ')' → logprob: -14.475236892700195
    8. '=
' → logprob: -15.975236892700195
    9. '=

' → logprob: -16.100236892700195
    10. '<|end|>' → logprob: -16.225236892700195

Token 133: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7325029373168945
    2. ' map' → logprob: -0.7325029373168945
    3. 'int' → logprob: -3.3575029373168945
    4. 'map' → logprob: -5.7325029373168945
    5. ' m' → logprob: -7.7325029373168945
    6. '[int' → logprob: -10.357502937316895
    7. ' ' → logprob: -10.607502937316895
    8. 'm' → logprob: -10.982502937316895
    9. ' list' → logprob: -11.982502937316895
    10. ' [' → logprob: -11.982502937316895

Token 134: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.03521392197581e-05
    2. '(' → logprob: -10.625030517578125
    3. 'int' → logprob: -12.250030517578125
    4. '(lambda' → logprob: -15.000030517578125
    5. '(str' → logprob: -15.125030517578125
    6. ' int' → logprob: -15.375030517578125
    7. '<int' → logprob: -15.750030517578125
    8. '[int' → logprob: -16.000030517578125
    9. ' (' → logprob: -16.125030517578125
    10. '(
' → logprob: -17.250030517578125

Token 135: ',' (ID: 11)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.010920838452875614
    2. '(' → logprob: -5.010921001434326
    3. ')' → logprob: -5.760921001434326
    4. ' (' → logprob: -7.510921001434326
    5. ',' → logprob: -7.885921001434326
    6. '(line' → logprob: -10.135920524597168
    7. '(
' → logprob: -10.760920524597168
    8. ')(' → logprob: -11.010920524597168
    9. 'm' → logprob: -11.260920524597168
    10. ' m' → logprob: -11.635920524597168

Token 136: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.313262403011322
    2. 'm' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.438261985778809
    4. '(m' → logprob: -15.813261985778809
    5. ')m' → logprob: -15.813261985778809
    6. '   ' → logprob: -16.813262939453125
    7. ')' → logprob: -16.938262939453125
    8. '	m' → logprob: -17.188262939453125
    9. '    ' → logprob: -18.313262939453125
    10. ' м' → logprob: -18.938262939453125

Token 137: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.750000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'n' → logprob: -15.750000953674316
    5. '_m' → logprob: -16.500001907348633
    6. '[n' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '(n' → logprob: -17.375001907348633
    9. '[' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.625001907348633

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ' )' → logprob: -11.250027656555176
    3. '[' → logprob: -11.750027656555176
    4. ')
' → logprob: -12.875027656555176
    5. ')`' → logprob: -13.125027656555176
    6. '())' → logprob: -14.125027656555176
    7. '(' → logprob: -14.625027656555176
    8. '[:' → logprob: -15.250027656555176
    9. ')}' → logprob: -16.125028610229492
    10. '))' → logprob: -16.375028610229492

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05568450316786766
    2. '   ' → logprob: -3.5556845664978027
    3. ' for' → logprob: -4.680684566497803
    4. '<|end|>' → logprob: -5.305684566497803
    5. '    
' → logprob: -5.805684566497803
    6. ' 
' → logprob: -5.930684566497803
    7. 'for' → logprob: -6.180684566497803
    8. '

' → logprob: -6.555684566497803
    9. '  
' → logprob: -6.680684566497803
    10. '<|end|>' → logprob: -8.180684089660645

Token 140: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33561545610427856
    2. 'for' → logprob: -1.3356153964996338
    3. '   ' → logprob: -4.960615634918213
    4. '
' → logprob: -5.210615634918213
    5. ' correct' → logprob: -5.585615634918213
    6. '    
' → logprob: -7.210615634918213
    7. 'result' → logprob: -7.335615634918213
    8. 'correct' → logprob: -7.335615634918213
    9. ' 
' → logprob: -7.710615634918213
    10. ' valid' → logprob: -7.835615634918213

Token 141: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08121512830257416
    2. ' n' → logprob: -3.2062151432037354
    3. 'm' → logprob: -3.3312151432037354
    4. 'n' → logprob: -6.581214904785156
    5. ' ' → logprob: -8.331214904785156
    6. ' not' → logprob: -9.331214904785156
    7. '	m' → logprob: -12.143714904785156
    8. '   ' → logprob: -12.456214904785156
    9. '  ' → logprob: -12.581214904785156
    10. ' (' → logprob: -12.956214904785156

Token 142: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04467693343758583
    2. ' <=' → logprob: -3.2946770191192627
    3. '>' → logprob: -5.169676780700684
    4. '<=' → logprob: -7.544676780700684
    5. ' <' → logprob: -8.919676780700684
    6. ' >=' → logprob: -9.044676780700684
    7. ' ' → logprob: -9.294676780700684
    8. ' ==' → logprob: -10.544676780700684
    9. ' %' → logprob: -11.294676780700684
    10. '==' → logprob: -12.419676780700684

Token 143: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.638583242893219
    2. '0' → logprob: -0.763583242893219
    3. ' n' → logprob: -5.638583183288574
    4. 'n' → logprob: -6.138583183288574
    5. '-' → logprob: -9.263583183288574
    6. ' -' → logprob: -9.388583183288574
    7. '1' → logprob: -10.263583183288574
    8. '  ' → logprob: -11.951083183288574
    9. '	n' → logprob: -12.888583183288574
    10. '   ' → logprob: -13.013583183288574

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012528955936431885
    2. '-' → logprob: -5.012528896331787
    3. 'n' → logprob: -5.887528896331787
    4. ' ' → logprob: -5.887528896331787
    5. ' -' → logprob: -9.137529373168945
    6. ' n' → logprob: -9.512529373168945
    7. '1' → logprob: -10.262529373168945
    8. '   ' → logprob: -12.137529373168945
    9. '-n' → logprob: -12.262529373168945
    10. '  ' → logprob: -13.075029373168945

Token 145: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07911285012960434
    2. 'and' → logprob: -2.5791127681732178
    3. ' or' → logprob: -8.954113006591797
    4. ' ' → logprob: -9.829113006591797
    5. ':' → logprob: -10.329113006591797
    6. ' a' → logprob: -12.579113006591797
    7. '<|end|>' → logprob: -13.579113006591797
    8. ':
' → logprob: -14.579113006591797
    9. ' ' → logprob: -14.829113006591797
    10. 'a' → logprob: -14.829113006591797

Token 146: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012512944638729095
    2. 'n' → logprob: -4.387513160705566
    3. '	n' → logprob: -13.137513160705566
    4. ' ' → logprob: -13.887513160705566
    5. ' ' → logprob: -15.012513160705566
    6. '<|end|>' → logprob: -17.13751220703125
    7. '   ' → logprob: -17.51251220703125
    8. '_n' → logprob: -17.63751220703125
    9. '  ' → logprob: -18.01251220703125
    10. '
' → logprob: -18.51251220703125

Token 147: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14893099665641785
    2. '==' → logprob: -2.0239310264587402
    3. ' ' → logprob: -5.27393102645874
    4. '<|end|>' → logprob: -7.52393102645874
    5. '0' → logprob: -7.64893102645874
    6. '<|end|>' → logprob: -10.273930549621582
    7. '  ' → logprob: -10.398930549621582
    8. '=' → logprob: -11.273930549621582
    9. '   ' → logprob: -12.523930549621582
    10. ' =' → logprob: -12.773930549621582

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014166564680635929
    2. ' ' → logprob: -4.264166355133057
    3. '   ' → logprob: -13.014166831970215
    4. '  ' → logprob: -14.889166831970215
    5. '<|end|>' → logprob: -16.3891658782959
    6. '-' → logprob: -17.0766658782959
    7. '    ' → logprob: -17.3266658782959
    8. ' -' → logprob: -17.3266658782959
    9. '<|end|>' → logprob: -17.3266658782959
    10. '00' → logprob: -17.5141658782959

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324792370200157
    2. ' ' → logprob: -3.7732479572296143
    3. '  ' → logprob: -14.023247718811035
    4. '1' → logprob: -15.023247718811035
    5. '   ' → logprob: -15.023247718811035
    6. '-' → logprob: -15.210747718811035
    7. ' ' → logprob: -15.523247718811035
    8. '<|end|>' → logprob: -16.21074867248535
    9. '۰' → logprob: -16.83574867248535
    10. '```' → logprob: -17.08574867248535

Token 150: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47570788860321045
    2. ':' → logprob: -0.9757078886032104
    3. '   ' → logprob: -6.7257080078125
    4. '       ' → logprob: -7.8507080078125
    5. ' :
' → logprob: -10.4757080078125
    6. ' :' → logprob: -12.7257080078125
    7. '):
' → logprob: -12.9757080078125
    8. ':
' → logprob: -13.8507080078125
    9. ':

' → logprob: -13.8507080078125
    10. '.' → logprob: -13.9757080078125

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11532532423734665
    2. ':' → logprob: -2.8653252124786377
    3. ':
' → logprob: -3.2403252124786377
    4. '   ' → logprob: -4.365325450897217
    5. '.' → logprob: -10.365324974060059
    6. ',' → logprob: -11.740324974060059
    7. '     ' → logprob: -11.865324974060059
    8. '      ' → logprob: -11.865324974060059
    9. '):
' → logprob: -12.240324974060059
    10. ' :
' → logprob: -12.240324974060059

Token 152: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2520610988140106
    2. 'break' (adapté à ' break') → logprob: -1.502061128616333
    3. '   ' → logprob: -9.752060890197754
    4. '       ' → logprob: -9.877060890197754
    5. '	break' → logprob: -10.752060890197754
    6. '           ' → logprob: -14.502060890197754
    7. '_break' → logprob: -15.502060890197754
    8. 'Break' → logprob: -16.25206184387207
    9. '
' → logprob: -16.25206184387207
    10. '```' → logprob: -16.87706184387207

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12863612174987793
    2. '    
' → logprob: -2.753636121749878
    3. '   ' → logprob: -2.878636121749878
    4. '<|end|>' → logprob: -8.128636360168457
    5. '  
' → logprob: -8.878636360168457
    6. ' 
' → logprob: -9.628636360168457
    7. '
' → logprob: -9.753636360168457
    8. '   
' → logprob: -10.003636360168457
    9. '        
' → logprob: -10.003636360168457
    10. '	
' → logprob: -10.378636360168457

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009470687946304679
    2. '    
' → logprob: -7.500946998596191
    3. '
' → logprob: -8.125946998596191
    4. ' for' → logprob: -9.875946998596191
    5. 'for' → logprob: -10.250946998596191
    6. '<|end|>' → logprob: -12.375946998596191
    7. '        
' → logprob: -13.750946998596191
    8. '```' → logprob: -14.000946998596191
    9. '  
' → logprob: -14.125946998596191
    10. '   
' → logprob: -14.125946998596191

Token 155: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15217624604701996
    2. 'correct' → logprob: -2.1521761417388916
    3. '   ' → logprob: -4.902176380157471
    4. 'score' → logprob: -5.027176380157471
    5. 'count' → logprob: -5.402176380157471
    6. 'current' → logprob: -5.902176380157471
    7. 'result' → logprob: -7.027176380157471
    8. 'results' → logprob: -7.277176380157471
    9. 'valid' → logprob: -8.277175903320312
    10. 'output' → logprob: -8.402175903320312

Token 156: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141903877258301
    2. 'um' → logprob: -2.56419038772583
    3. '=' → logprob: -3.18919038772583
    4. 't' → logprob: -3.68919038772583
    5. 'aid' → logprob: -4.06419038772583
    6. 'core' → logprob: -4.43919038772583
    7. 'e' → logprob: -4.43919038772583
    8. '_count' → logprob: -4.56419038772583
    9. '_correct' → logprob: -4.68919038772583
    10. '_' → logprob: -5.06419038772583

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009915098547935486
    2. '=' → logprob: -4.634914875030518
    3. ' ' → logprob: -9.509915351867676
    4. ',' → logprob: -10.259915351867676
    5. '=[]' → logprob: -11.009915351867676
    6. ' =
' → logprob: -11.009915351867676
    7. '<|end|>' → logprob: -12.509915351867676
    8. ' =[' → logprob: -13.509915351867676
    9. '=[]
' → logprob: -13.634915351867676
    10. '  ' → logprob: -13.634915351867676

Token 158: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8193739652633667
    2. ' [' → logprob: -1.3193739652633667
    3. '[]' → logprob: -1.4443739652633667
    4. '[input' → logprob: -3.8193740844726562
    5. '[line' → logprob: -4.319374084472656
    6. '[' → logprob: -4.444374084472656
    7. ' input' → logprob: -6.194374084472656
    8. '[s' → logprob: -6.569374084472656
    9. '[str' → logprob: -7.069374084472656
    10. '[list' → logprob: -7.444374084472656

Token 159: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3667478859424591
    2. ' for' → logprob: -1.2417478561401367
    3. '   ' → logprob: -4.366747856140137
    4. '<|end|>' → logprob: -5.241747856140137
    5. '<|end|>' → logprob: -9.616747856140137
    6. 'range' → logprob: -10.491747856140137
    7. '	for' → logprob: -11.241747856140137
    8. ' ' → logprob: -11.741747856140137
    9. 'while' → logprob: -11.741747856140137
    10. '
' → logprob: -12.116747856140137

Token 160: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004055721219629049
    2. '   ' → logprob: -6.129055500030518
    3. 'while' → logprob: -7.254055500030518
    4. 'correct' → logprob: -7.379055500030518
    5. ' for' → logprob: -8.379055976867676
    6. 'valid' → logprob: -8.629055976867676
    7. 'count' (adapté à ' count') → logprob: -9.254055976867676
    8. 'import' → logprob: -11.129055976867676
    9. 'try' → logprob: -12.129055976867676
    10. 'i' → logprob: -13.379055976867676

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051721833646297455
    2. '=' → logprob: -3.4267218112945557
    3. ' ' → logprob: -4.301722049713135
    4. '<|end|>' → logprob: -6.176722049713135
    5. '_' → logprob: -6.551722049713135
    6. '(' → logprob: -8.676721572875977
    7. '<|end|>' → logprob: -8.801721572875977
    8. '_space' → logprob: -9.176721572875977
    9. 's' → logprob: -9.551721572875977
    10. ' +=' → logprob: -9.926721572875977

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1270168274641037
    2. ' ' → logprob: -2.12701678276062
    3. ' n' → logprob: -9.7520170211792
    4. 'n' → logprob: -11.3770170211792
    5. ' m' → logprob: -11.6270170211792
    6. 'm' → logprob: -12.6270170211792
    7. '1' → logprob: -13.2520170211792
    8. '(' → logprob: -13.8770170211792
    9. '<|end|>' → logprob: -13.8770170211792
    10. ' ' → logprob: -14.1270170211792

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019757419358938932
    2. 'm' → logprob: -7.0019755363464355
    3. ' ' → logprob: -7.1269755363464355
    4. 'n' → logprob: -8.376976013183594
    5. ' m' → logprob: -11.251976013183594
    6. ' n' → logprob: -11.876976013183594
    7. '1' → logprob: -12.376976013183594
    8. '(' → logprob: -13.751976013183594
    9. 'abs' → logprob: -14.001976013183594
    10. '(n' → logprob: -14.501976013183594

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005737271625548601
    2. '<|end|>' → logprob: -5.3807373046875
    3. ' 
' → logprob: -7.6307373046875
    4. '    
' → logprob: -8.3807373046875
    5. '  
' → logprob: -9.1307373046875
    6. '<|end|>' → logprob: -9.2557373046875
    7. '
' → logprob: -9.6307373046875
    8. '   ' → logprob: -9.8807373046875
    9. '	
' → logprob: -10.6307373046875
    10. '

' → logprob: -11.1307373046875

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03981102257966995
    2. '   ' → logprob: -3.664811134338379
    3. '<|end|>' → logprob: -5.164811134338379
    4. ' 
' → logprob: -5.789811134338379
    5. '    
' → logprob: -6.164811134338379
    6. ' for' → logprob: -6.914811134338379
    7. 'for' → logprob: -7.539811134338379
    8. '  
' → logprob: -7.539811134338379
    9. '	
' → logprob: -8.914811134338379
    10. '<|end|>' → logprob: -9.039811134338379

Token 166: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015118331648409367
    2. 'while' (adapté à ' while') → logprob: -4.89011812210083
    3. ' for' → logprob: -5.14011812210083
    4. '   ' → logprob: -6.51511812210083
    5. '
' → logprob: -9.390118598937988
    6. ' while' → logprob: -10.140118598937988
    7. 'try' → logprob: -12.265118598937988
    8. '    
' → logprob: -12.265118598937988
    9. 'i' → logprob: -12.765118598937988
    10. 'line' → logprob: -13.515118598937988

Token 167: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.05597255006432533
    2. 'count' → logprob: -3.1809725761413574
    3. ' True' → logprob: -4.930972576141357
    4. ' m' → logprob: -5.930972576141357
    5. 'True' → logprob: -6.180972576141357
    6. ' len' → logprob: -7.805972576141357
    7. 'm' → logprob: -8.3059720993042
    8. '(count' → logprob: -9.1809720993042
    9. '	count' → logprob: -9.8059720993042
    10. ' n' → logprob: -10.0559720993042

Token 168: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12983620166778564
    2. ' <=' → logprob: -2.129836082458496
    3. '<' → logprob: -6.004836082458496
    4. ' ' → logprob: -8.129836082458496
    5. '<=' → logprob: -9.004836082458496
    6. '<n' → logprob: -11.379836082458496
    7. ' <
' → logprob: -12.879836082458496
    8. '<count' → logprob: -13.004836082458496
    9. '<m' → logprob: -14.129836082458496
    10. ' ≤' → logprob: -14.379836082458496

Token 169: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007408919744193554
    2. ' (' → logprob: -5.50740909576416
    3. 'n' → logprob: -5.75740909576416
    4. '(n' → logprob: -8.88240909576416
    5. '(' → logprob: -10.75740909576416
    6. ' ' → logprob: -12.63240909576416
    7. '	n' → logprob: -14.13240909576416
    8. '   ' → logprob: -15.00740909576416
    9. '=n' → logprob: -15.38240909576416
    10. '_n' → logprob: -15.75740909576416

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04339854419231415
    2. ':
' → logprob: -3.16839861869812
    3. ' :' → logprob: -8.5433988571167
    4. ' and' → logprob: -8.9183988571167
    5. ' :
' → logprob: -10.1683988571167
    6. '   ' → logprob: -11.2933988571167
    7. '):' → logprob: -11.9183988571167
    8. 'and' → logprob: -12.2933988571167
    9. '):
' → logprob: -12.9183988571167
    10. ':

' → logprob: -13.1683988571167

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012460559606552124
    2. '
' → logprob: -6.012460708618164
    3. '   ' → logprob: -6.012460708618164
    4. '<|end|>' → logprob: -6.387460708618164
    5. '        
' → logprob: -6.637460708618164
    6. ' ' → logprob: -7.137460708618164
    7. ' 
' → logprob: -7.512460708618164
    8. ' s' → logprob: -7.637460708618164
    9. '```' → logprob: -8.137460708618164
    10. '  
' → logprob: -8.262460708618164

Token 172: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9215573072433472
    2. ' line' → logprob: -1.1715573072433472
    3. '       ' → logprob: -2.1715574264526367
    4. 's' (adapté à ' s') → logprob: -2.1715574264526367
    5. 'line' → logprob: -3.2965574264526367
    6. ' try' → logprob: -5.046557426452637
    7. ' answer' → logprob: -5.421557426452637
    8. 'try' → logprob: -5.671557426452637
    9. ' input' → logprob: -5.921557426452637
    10. 'answer' → logprob: -5.921557426452637

Token 173: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.028850065544247627
    2. '_' → logprob: -3.7788500785827637
    3. ' =' → logprob: -5.778850078582764
    4. '=' → logprob: -7.153850078582764
    5. 'list' → logprob: -7.528850078582764
    6. ' _' → logprob: -8.278849601745605
    7. '_line' → logprob: -8.403849601745605
    8. '   ' → logprob: -9.528849601745605
    9. '  
' → logprob: -9.528849601745605
    10. ' ' → logprob: -9.903849601745605

Token 174: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.478395938873291
    2. ' input' → logprob: -1.603395938873291
    3. 'sys' → logprob: -2.353395938873291
    4. 'input' → logprob: -2.478395938873291
    5. ' ' → logprob: -10.853395462036133
    6. '	sys' → logprob: -11.353395462036133
    7. '(sys' → logprob: -11.353395462036133
    8. '=sys' → logprob: -12.103395462036133
    9. ' next' → logprob: -12.603395462036133
    10. 'next' → logprob: -12.603395462036133

Token 175: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.822646693966817e-06
    2. '.stdout' → logprob: -12.625007629394531
    3. '.' → logprob: -12.750007629394531
    4. 'stdin' → logprob: -13.625007629394531
    5. '.readline' → logprob: -15.375007629394531
    6. '.std' → logprob: -16.50000762939453
    7. '.argv' → logprob: -17.00000762939453
    8. ' stdin' → logprob: -19.50000762939453
    9. '.stderr' → logprob: -19.75000762939453
    10. '(stdin' → logprob: -20.50000762939453

Token 176: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.547789674485102e-05
    2. '.' → logprob: -10.250035285949707
    3. '.stdin' → logprob: -20.000036239624023
    4. ' readline' → logprob: -20.125036239624023
    5. '.rstrip' → logprob: -21.000036239624023
    6. '.read' → logprob: -21.375036239624023
    7. ' .' → logprob: -21.375036239624023
    8. '.next' → logprob: -21.500036239624023
    9. '
' → logprob: -22.000036239624023
    10. '.readlines' → logprob: -22.250036239624023

Token 177: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03827018663287163
    2. '()' → logprob: -3.2882702350616455
    3. '()
' → logprob: -8.413269996643066
    4. ' ().' → logprob: -12.663269996643066
    5. '.rstrip' → logprob: -13.663269996643066
    6. '()

' → logprob: -14.038269996643066
    7. ' ()' → logprob: -14.788269996643066
    8. '.strip' → logprob: -14.913269996643066
    9. 'rstrip' → logprob: -15.538269996643066
    10. '(' → logprob: -15.663269996643066

Token 178: '       ' (ID: 309)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.38292741775512695
    2. '.strip' → logprob: -1.507927417755127
    3. 'rstrip' → logprob: -2.382927417755127
    4. '       ' → logprob: -5.632927417755127
    5. '.' → logprob: -8.007926940917969
    6. 'strip' → logprob: -8.382926940917969
    7. ' strip' → logprob: -8.757926940917969
    8. '   ' → logprob: -9.257926940917969
    9. '.readline' → logprob: -10.382926940917969
    10. '_strip' → logprob: -11.257926940917969

Token 179: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10764116793870926
    2. 'if' (adapté à ' if') → logprob: -2.3576412200927734
    3. '       ' → logprob: -4.982641220092773
    4. ' s' → logprob: -7.607641220092773
    5. 's' → logprob: -10.607641220092773
    6. '   ' → logprob: -10.732641220092773
    7. ' ' → logprob: -12.107641220092773
    8. ' count' → logprob: -14.107641220092773
    9. '
' → logprob: -14.482641220092773
    10. '	if' → logprob: -15.232641220092773

Token 180: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05761094018816948
    2. 'not' → logprob: -2.9326109886169434
    3. ' s' → logprob: -6.432610988616943
    4. 's' → logprob: -6.807610988616943
    5. '	not' → logprob: -12.932610511779785
    6. 'n' → logprob: -13.432610511779785
    7. ' ' → logprob: -13.620110511779785
    8. ' ' → logprob: -13.745110511779785
    9. 'n't' → logprob: -13.995110511779785
    10. '(not' → logprob: -14.120110511779785

Token 181: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.313262403011322
    2. 's' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.938261985778809
    4. '	s' → logprob: -16.063262939453125
    5. '(s' → logprob: -16.563262939453125
    6. ' not' → logprob: -16.688262939453125
    7. '_s' → logprob: -16.875762939453125
    8. '`s' → logprob: -17.875762939453125
    9. ' ' → logprob: -18.125762939453125
    10. '  ' → logprob: -18.625762939453125

Token 182: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1105717271566391
    2. ':
' → logprob: -2.6105716228485107
    3. ':' → logprob: -3.4855716228485107
    4. 'strip' → logprob: -8.11057186126709
    5. '.' → logprob: -8.36057186126709
    6. ' strip' → logprob: -12.61057186126709
    7. ':return' → logprob: -12.73557186126709
    8. '.rstrip' → logprob: -13.11057186126709
    9. '_strip' → logprob: -13.23557186126709
    10. '.readline' → logprob: -13.86057186126709

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05641555413603783
    2. ' break' → logprob: -3.306415557861328
    3. '   ' → logprob: -4.681415557861328
    4. '       ' → logprob: -5.181415557861328
    5. ' continue' → logprob: -6.806415557861328
    6. 'break' → logprob: -7.556415557861328
    7. 'continue' → logprob: -8.056415557861328
    8. '               ' → logprob: -8.056415557861328
    9. '	break' → logprob: -8.431415557861328
    10. ' ' → logprob: -8.681415557861328

Token 184: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.023495281115174294
    2. 'break' (adapté à ' break') → logprob: -3.7734951972961426
    3. '       ' → logprob: -9.0234956741333
    4. '           ' → logprob: -9.7734956741333
    5. '   ' → logprob: -10.6484956741333
    6. '	break' → logprob: -10.6484956741333
    7. ' continue' → logprob: -10.8984956741333
    8. 'continue' → logprob: -12.3984956741333
    9. '               ' → logprob: -13.8984956741333
    10. ' ' → logprob: -14.2734956741333

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20506680011749268
    2. '
' → logprob: -1.7050668001174927
    3. '<|end|>' → logprob: -5.830066680908203
    4. '        
' → logprob: -7.455066680908203
    5. '  
' → logprob: -10.080066680908203
    6. '
' → logprob: -10.955066680908203
    7. ' 
' → logprob: -11.205066680908203
    8. '<|end|>' → logprob: -11.705066680908203
    9. '            
' → logprob: -11.830066680908203
    10. ',' → logprob: -11.955066680908203

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007528540212661028
    2. '
' → logprob: -5.007528305053711
    3. '<|end|>' → logprob: -7.382528305053711
    4. '        
' → logprob: -9.257528305053711
    5. '   ' → logprob: -10.507528305053711
    6. '           ' → logprob: -11.507528305053711
    7. ' ' → logprob: -11.632528305053711
    8. '  
' → logprob: -12.132528305053711
    9. '        ' → logprob: -12.257528305053711
    10. '
' → logprob: -12.507528305053711

Token 187: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8639339208602905
    2. ' if' → logprob: -0.8639339208602905
    3. '       ' → logprob: -2.11393404006958
    4. 's' (adapté à ' s') → logprob: -3.73893404006958
    5. 'if' → logprob: -4.48893404006958
    6. '   ' → logprob: -7.23893404006958
    7. ' ' → logprob: -8.363933563232422
    8. ' count' → logprob: -9.238933563232422
    9. '        
' → logprob: -10.488933563232422
    10. '    ' → logprob: -10.613933563232422

Token 188: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2527725100517273
    2. ' =' → logprob: -1.752772569656372
    3. '_list' → logprob: -3.252772569656372
    4. '=s' → logprob: -4.877772331237793
    5. '_strip' → logprob: -6.002772331237793
    6. '.strip' → logprob: -7.127772331237793
    7. 's' → logprob: -8.752772331237793
    8. 'strip' → logprob: -8.752772331237793
    9. '=
' → logprob: -9.752772331237793
    10. '=str' → logprob: -9.877772331237793

Token 189: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004084574058651924
    2. '.' → logprob: -5.504084587097168
    3. '.app' → logprob: -13.379084587097168
    4. '.extend' → logprob: -13.504084587097168
    5. 'append' → logprob: -13.504084587097168
    6. '.ap' → logprob: -14.004084587097168
    7. ' .' → logprob: -14.254084587097168
    8. '.push' → logprob: -16.50408363342285
    9. '=' → logprob: -16.75408363342285
    10. '.
' → logprob: -16.87908363342285

Token 190: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007251793285831809
    2. '(' → logprob: -7.250725269317627
    3. 's' → logprob: -11.125724792480469
    4. '(
' → logprob: -14.875724792480469
    5. ' (' → logprob: -16.00072479248047
    6. ' s' → logprob: -16.62572479248047
    7. '(

' → logprob: -18.00072479248047
    8. '((' → logprob: -18.62572479248047
    9. '(strip' → logprob: -18.62572479248047
    10. '(str' → logprob: -19.75072479248047

Token 191: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.008644239977002144
    2. '.rstrip' → logprob: -4.758644104003906
    3. '.' → logprob: -10.508644104003906
    4. ')' → logprob: -13.508644104003906
    5. 'strip' → logprob: -15.258644104003906
    6. ').' → logprob: -15.508644104003906
    7. 'rstrip' → logprob: -15.508644104003906
    8. ' .' → logprob: -16.133644104003906
    9. '().' → logprob: -16.258644104003906
    10. '.chomp' → logprob: -16.383644104003906

Token 192: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10516045987606049
    2. '())' → logprob: -2.3551604747772217
    3. ')
' → logprob: -5.605160236358643
    4. '())
' → logprob: -7.105160236358643
    5. '()' → logprob: -7.855160236358643
    6. ' )' → logprob: -10.3551607131958
    7. '()
' → logprob: -11.2301607131958
    8. '       ' → logprob: -12.8551607131958
    9. ')

' → logprob: -13.6051607131958
    10. ' ())' → logprob: -13.6051607131958

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003544118662830442
    2. '   ' → logprob: -8.000354766845703
    3. '
' → logprob: -11.250354766845703
    4. '        
' → logprob: -13.750354766845703
    5. '	   ' → logprob: -14.000354766845703
    6. ' ' → logprob: -14.000354766845703
    7. '	' → logprob: -14.500354766845703
    8. '           ' → logprob: -14.500354766845703
    9. '      ' → logprob: -14.625354766845703
    10. '    
' → logprob: -14.750354766845703

Token 194: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0138395382091403
    2. '       ' → logprob: -4.7638397216796875
    3. ' count' → logprob: -5.2638397216796875
    4. '   ' → logprob: -10.263839721679688
    5. ' ' → logprob: -14.138839721679688
    6. '
' → logprob: -16.138839721679688
    7. '	count' → logprob: -16.638839721679688
    8. '     ' → logprob: -17.013839721679688
    9. '      ' → logprob: -17.388839721679688
    10. '  ' → logprob: -17.888839721679688

Token 195: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08694447576999664
    2. '+=' → logprob: -2.586944580078125
    3. '+' → logprob: -4.836944580078125
    4. ' +' → logprob: -9.711944580078125
    5. ' ' → logprob: -10.586944580078125
    6. '=' → logprob: -12.961944580078125
    7. '<|end|>' → logprob: -13.211944580078125
    8. ' =' → logprob: -14.711944580078125
    9. '++' → logprob: -15.461944580078125
    10. '+="' → logprob: -15.961944580078125

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888978719711304
    2. ' ' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.703889846801758
    4. '```' → logprob: -20.828889846801758
    5. ' 
' → logprob: -21.328889846801758
    6. '   ' → logprob: -21.328889846801758
    7. '
' → logprob: -21.578889846801758
    8. '0' → logprob: -21.953889846801758
    9. '<|end|>' → logprob: -22.328889846801758
    10. '۱' → logprob: -22.578889846801758

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.062501907348633
    5. '
' → logprob: -21.062501907348633
    6. '１' → logprob: -21.312501907348633
    7. '0' → logprob: -21.562501907348633
    8. '۱' → logprob: -21.625001907348633
    9. '  ' → logprob: -22.062501907348633
    10. 's' → logprob: -22.312501907348633

Token 198: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052229673601686954
    2. '    
' → logprob: -5.755222797393799
    3. '
' → logprob: -6.630222797393799
    4. ' for' → logprob: -8.380223274230957
    5. 'for' → logprob: -8.630223274230957
    6. '<|end|>' → logprob: -8.630223274230957
    7. 'correct' → logprob: -10.630223274230957
    8. ' correct' → logprob: -10.755223274230957
    9. '        
' → logprob: -10.880223274230957
    10. '<|end|>' → logprob: -11.630223274230957

Token 199: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15081700682640076
    2. 'correct' → logprob: -2.0258169174194336
    3. '   ' → logprob: -5.525816917419434
    4. 'valid' → logprob: -6.150816917419434
    5. 'result' → logprob: -6.900816917419434
    6. 'i' → logprob: -8.150816917419434
    7. ' for' → logprob: -8.275816917419434
    8. 'all' → logprob: -9.525816917419434
    9. 'output' → logprob: -9.650816917419434
    10. 'if' → logprob: -9.650816917419434

Token 200: ' players' (ID: 7238)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.10917340964078903
    2. 'for' → logprob: -2.48417329788208
    3. 'valid' → logprob: -4.23417329788208
    4. 'result' → logprob: -6.10917329788208
    5. 'all' → logprob: -6.48417329788208
    6. 'is' → logprob: -6.98417329788208
    7. 'incorrect' → logprob: -8.359173774719238
    8. 'if' → logprob: -8.859173774719238
    9. '   ' → logprob: -8.984173774719238
    10. 'results' → logprob: -9.359173774719238

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44558241963386536
    2. '=' → logprob: -1.820582389831543
    3. '_scores' → logprob: -1.820582389831543
    4. '_results' → logprob: -4.070582389831543
    5. '_count' → logprob: -5.320582389831543
    6. '_correct' → logprob: -5.820582389831543
    7. '_res' → logprob: -6.320582389831543
    8. '_s' → logprob: -6.320582389831543
    9. '_answers' → logprob: -6.320582389831543
    10. '_score' → logprob: -6.570582389831543

Token 202: ' list' (ID: 1562)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.47792139649391174
    2. ' []' → logprob: -1.3529213666915894
    3. '{}' → logprob: -2.727921485900879
    4. ' [{}' → logprob: -3.602921485900879
    5. ' [' → logprob: -4.477921485900879
    6. ' len' → logprob: -5.227921485900879
    7. '[]' → logprob: -5.227921485900879
    8. ' [[]' → logprob: -6.602921485900879
    9. ' dict' → logprob: -6.727921485900879
    10. 'len' → logprob: -6.852921485900879

Token 203: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.02710697613656521
    2. '(s' → logprob: -4.277106761932373
    3. '(set' → logprob: -5.402106761932373
    4. '(map' → logprob: -5.777106761932373
    5. '(' → logprob: -5.902106761932373
    6. '(en' → logprob: -6.402106761932373
    7. '(zip' → logprob: -8.277107238769531
    8. '()' → logprob: -8.652107238769531
    9. '(filter' → logprob: -8.652107238769531
    10. '(
' → logprob: -9.277107238769531

Token 204: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008624386973679066
    2. '(' → logprob: -4.75862455368042
    3. '   ' → logprob: -13.133624076843262
    4. ')' → logprob: -13.133624076843262
    5. '(len' → logprob: -13.258624076843262
    6. ' (' → logprob: -13.383624076843262
    7. 'm' → logprob: -13.883624076843262
    8. '(n' → logprob: -15.258624076843262
    9. '(M' → logprob: -15.258624076843262
    10. '(s' → logprob: -15.383624076843262

Token 205: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01457289420068264
    2. '1' → logprob: -4.264573097229004
    3. '(m' → logprob: -8.764573097229004
    4. 'len' → logprob: -9.014573097229004
    5. '(' → logprob: -9.514573097229004
    6. ' m' → logprob: -10.889573097229004
    7. '0' → logprob: -11.139573097229004
    8. '   ' → logprob: -11.889573097229004
    9. '10' → logprob: -12.514573097229004
    10. '100' → logprob: -13.139573097229004

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003692835569381714
    2. ' ,' → logprob: -5.628692626953125
    3. ',m' → logprob: -10.128692626953125
    4. ',n' → logprob: -10.628692626953125
    5. '6' → logprob: -11.753692626953125
    6. ',len' → logprob: -12.378692626953125
    7. '1' → logprob: -12.753692626953125
    8. '0' → logprob: -12.753692626953125
    9. ' ' → logprob: -13.003692626953125
    10. ',
' → logprob: -13.503692626953125

Token 207: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03924930840730667
    2. 'n' → logprob: -4.289249420166016
    3. ' m' → logprob: -4.664249420166016
    4. 'len' → logprob: -5.164249420166016
    5. '11' → logprob: -5.539249420166016
    6. ' len' → logprob: -6.414249420166016
    7. ' n' → logprob: -6.539249420166016
    8. 'count' → logprob: -7.164249420166016
    9. '6' → logprob: -7.414249420166016
    10. '5' → logprob: -8.164249420166016

Token 208: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10022488981485367
    2. ' +' → logprob: -2.3502249717712402
    3. '))' → logprob: -10.975224494934082
    4. '*' → logprob: -14.475224494934082
    5. '+
' → logprob: -15.475224494934082
    6. ' +
' → logprob: -16.2252254486084
    7. ')' → logprob: -16.3502254486084
    8. '   ' → logprob: -16.7252254486084
    9. ' *' → logprob: -16.7252254486084
    10. '1' → logprob: -17.1002254486084

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.625123977661133
    4. '2' → logprob: -17.000123977661133
    5. '
' → logprob: -17.000123977661133
    6. '```' → logprob: -17.312623977661133
    7. ')' → logprob: -17.500123977661133
    8. '

' → logprob: -17.875123977661133
    9. '  ' → logprob: -18.375123977661133
    10. '=' → logprob: -19.000123977661133

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -15.500020027160645
    4. '
' → logprob: -15.625020027160645
    5. '   ' → logprob: -16.687519073486328
    6. '

' → logprob: -17.125019073486328
    7. '```' → logprob: -17.562519073486328
    8. '6' → logprob: -17.937519073486328
    9. '11' → logprob: -18.125019073486328
    10. ')' → logprob: -18.312519073486328

Token 211: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005180051666684449
    2. '))
' → logprob: -7.625517845153809
    3. '+' → logprob: -11.375517845153809
    4. ')' → logprob: -12.000517845153809
    5. ' ))' → logprob: -12.125517845153809
    6. '))

' → logprob: -12.500517845153809
    7. ')))' → logprob: -14.000517845153809
    8. '   ' → logprob: -14.000517845153809
    9. ' +' → logprob: -14.750517845153809
    10. ',' → logprob: -15.375517845153809

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1559656262397766
    2. '
' → logprob: -2.030965566635132
    3. '    
' → logprob: -5.030965805053711
    4. 'current' → logprob: -5.530965805053711
    5. 'for' → logprob: -7.655965805053711
    6. 'turn' → logprob: -7.780965805053711
    7. 'index' → logprob: -8.155965805053711
    8. 'score' → logprob: -8.655965805053711
    9. 'num' → logprob: -8.780965805053711
    10. '  
' → logprob: -9.030965805053711

Token 213: ' eliminated' (ID: 61164)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8063569068908691
    2. 'index' → logprob: -1.8063569068908691
    3. 'for' → logprob: -2.181356906890869
    4. 'turn' → logprob: -2.306356906890869
    5. 'idx' → logprob: -2.431356906890869
    6. 'i' → logprob: -3.556356906890869
    7. 'player' → logprob: -3.806356906890869
    8. 'num' → logprob: -4.556356906890869
    9. 'expected' → logprob: -5.556356906890869
    10. '   ' → logprob: -5.681356906890869

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6399056911468506
    2. ' =' → logprob: -0.7649056911468506
    3. '_players' → logprob: -5.76490592956543
    4. '_index' → logprob: -6.63990592956543
    5. '_indices' → logprob: -7.01490592956543
    6. '_' → logprob: -7.01490592956543
    7. '_idx' → logprob: -7.51490592956543
    8. '=[]' → logprob: -8.76490592956543
    9. '_ids' → logprob: -9.13990592956543
    10. '_indexes' → logprob: -9.38990592956543

Token 215: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018288657069206238
    2. 'set' → logprob: -4.018288612365723
    3. ' []' → logprob: -9.768288612365723
    4. '[]
' → logprob: -10.268288612365723
    5. '[' → logprob: -10.393288612365723
    6. ' set' → logprob: -11.643288612365723
    7. '[]}' → logprob: -12.643288612365723
    8. '{}' → logprob: -13.393288612365723
    9. '[],' → logprob: -14.018288612365723
    10. '[]

' → logprob: -14.393288612365723

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10086417943239212
    2. '()
' → logprob: -2.3508641719818115
    3. '()

' → logprob: -7.350864410400391
    4. '(' → logprob: -11.72586441040039
    5. '()
' → logprob: -12.60086441040039
    6. '()\' → logprob: -13.47586441040039
    7. '()"' → logprob: -14.60086441040039
    8. '()


' → logprob: -14.72586441040039
    9. '(),' → logprob: -14.85086441040039
    10. '()`' → logprob: -15.10086441040039

Token 217: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7136325240135193
    2. 'current' → logprob: -0.9636325240135193
    3. '   ' → logprob: -2.713632583618164
    4. 'round' → logprob: -4.463632583618164
    5. 'index' → logprob: -4.588632583618164
    6. 'expected' → logprob: -4.963632583618164
    7. 'i' → logprob: -5.088632583618164
    8. 'num' → logprob: -5.213632583618164
    9. 'turn' → logprob: -5.588632583618164
    10. 'correct' → logprob: -5.838632583618164

Token 218: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -1.20964515209198
    2. 'i' → logprob: -1.45964515209198
    3. 'index' → logprob: -2.2096452713012695
    4. 'step' → logprob: -2.3346452713012695
    5. 'idx' → logprob: -2.4596452713012695
    6. 'for' → logprob: -2.8346452713012695
    7. 'pos' → logprob: -2.8346452713012695
    8. 'cur' → logprob: -4.8346452713012695
    9. 'turn' → logprob: -4.8346452713012695
    10. ' i' → logprob: -4.8346452713012695

Token 219: '_number' (ID: 11733)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.21911758184432983
    2. '_index' → logprob: -1.7191176414489746
    3. '_idx' → logprob: -5.344117641448975
    4. '=' → logprob: -5.469117641448975
    5. ' =' → logprob: -5.844117641448975
    6. '_token' → logprob: -6.219117641448975
    7. '_turn' → logprob: -6.344117641448975
    8. 'player' → logprob: -7.594117641448975
    9. '_round' → logprob: -8.094117164611816
    10. '_' → logprob: -8.469117164611816

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815205067396164
    2. '=' → logprob: -4.018152236938477
    3. ',' → logprob: -13.643152236938477
    4. '<|end|>' → logprob: -14.768152236938477
    5. ' ' → logprob: -14.893152236938477
    6. ' =
' → logprob: -16.268152236938477
    7. 's' → logprob: -16.768152236938477
    8. ')' → logprob: -18.018152236938477
    9. '_index' → logprob: -18.268152236938477
    10. ' ' → logprob: -18.268152236938477

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.722539834911004e-05
    2. ' ' → logprob: -9.375097274780273
    3. '   ' → logprob: -12.250097274780273
    4. '0' → logprob: -13.375097274780273
    5. 'start' → logprob: -14.000097274780273
    6. 'm' → logprob: -14.062597274780273
    7. '  ' → logprob: -15.000097274780273
    8. '2' → logprob: -15.062597274780273
    9. 's' → logprob: -15.062597274780273
    10. '    ' → logprob: -15.187597274780273

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -12.250019073486328
    3. '0' → logprob: -12.500019073486328
    4. 's' → logprob: -13.312519073486328
    5. '
' → logprob: -13.562519073486328
    6. 'start' → logprob: -13.875019073486328
    7. '2' → logprob: -13.937519073486328
    8. 'm' → logprob: -14.000019073486328
    9. '   ' → logprob: -14.312519073486328
    10. '```' → logprob: -14.375019073486328

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037510696798563004
    2. '
' → logprob: -3.537510633468628
    3. 'while' → logprob: -5.912510871887207
    4. '    
' → logprob: -6.037510871887207
    5. '<|end|>' → logprob: -6.287510871887207
    6. ' while' → logprob: -7.537510871887207
    7. '<|end|>' → logprob: -9.912510871887207
    8. 'for' → logprob: -9.912510871887207
    9. ',' → logprob: -10.162510871887207
    10. 'current' → logprob: -10.662510871887207

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06167766824364662
    2. 'while' → logprob: -3.1866776943206787
    3. 'current' → logprob: -5.0616774559021
    4. '
' → logprob: -5.1866774559021
    5. ' while' → logprob: -6.0616774559021
    6. 'index' → logprob: -6.4366774559021
    7. '    
' → logprob: -6.4366774559021
    8. 'for' → logprob: -8.436677932739258
    9. '```' → logprob: -8.561677932739258
    10. 'player' → logprob: -8.686677932739258

Token 225: ' turn' (ID: 3716)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39235347509384155
    2. 'current' → logprob: -1.6423535346984863
    3. 'player' → logprob: -3.1423535346984863
    4. 'index' → logprob: -3.7673535346984863
    5. 'idx' → logprob: -3.7673535346984863
    6. 'turn' (adapté à ' turn') → logprob: -4.517353534698486
    7. 'i' → logprob: -4.642353534698486
    8. 'for' → logprob: -4.892353534698486
    9. '   ' → logprob: -5.267353534698486
    10. ' while' → logprob: -6.142353534698486

Token 226: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4771710932254791
    2. ' =' → logprob: -1.6021710634231567
    3. '_index' → logprob: -1.9771710634231567
    4. '=' → logprob: -4.227170944213867
    5. '_player' → logprob: -4.227170944213867
    6. '_idx' → logprob: -5.102170944213867
    7. 's' → logprob: -5.977170944213867
    8. '_players' → logprob: -7.852170944213867
    9. ' _' → logprob: -7.977170944213867
    10. ' ' → logprob: -8.227170944213867

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976449765264988
    2. '=' → logprob: -3.529764413833618
    3. ' ' → logprob: -11.279764175415039
    4. ' +=' → logprob: -14.029764175415039
    5. ' =
' → logprob: -15.529764175415039
    6. '0' → logprob: -16.27976417541504
    7. ',' → logprob: -16.52976417541504
    8. '<|end|>' → logprob: -16.77976417541504
    9. ' =)' → logprob: -17.40476417541504
    10. ' ,' → logprob: -17.90476417541504

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. 'current' → logprob: -15.000336647033691
    4. 'players' → logprob: -15.500336647033691
    5. '   ' → logprob: -15.625336647033691
    6. '1' → logprob: -16.000337600708008
    7. '(' → logprob: -16.375337600708008
    8. 'player' → logprob: -16.562837600708008
    9. ' players' → logprob: -17.125337600708008
    10. 'len' → logprob: -17.312837600708008

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.250038146972656
    3. 'current' → logprob: -14.000038146972656
    4. '1' → logprob: -15.375038146972656
    5. '   ' → logprob: -15.375038146972656
    6. '-' → logprob: -15.750038146972656
    7. '[' → logprob: -16.000038146972656
    8. '(' → logprob: -16.375038146972656
    9. 'player' → logprob: -16.812538146972656
    10. 'players' → logprob: -16.875038146972656

Token 230: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46256008744239807
    2. '   ' → logprob: -1.2125600576400757
    3. 'while' → logprob: -3.9625601768493652
    4. ' while' → logprob: -4.087560176849365
    5. '    
' → logprob: -4.212560176849365
    6. '<|end|>' → logprob: -4.212560176849365
    7. ' 
' → logprob: -5.587560176849365
    8. '  
' → logprob: -6.462560176849365
    9. '<|end|>' → logprob: -7.587560176849365
    10. '	while' → logprob: -7.587560176849365

Token 231: ' index' (ID: 3472)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02971704490482807
    2. '#' → logprob: -4.404716968536377
    3. ' while' → logprob: -4.529716968536377
    4. '
' → logprob: -5.654716968536377
    5. 'current' → logprob: -6.529716968536377
    6. '   ' → logprob: -8.029717445373535
    7. 'for' → logprob: -8.029717445373535
    8. ' #' → logprob: -8.904717445373535
    9. 'next' → logprob: -9.654717445373535
    10. 'While' → logprob: -9.654717445373535

Token 232: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' players' (ID: 7238)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.0010409059468656778
    2. ' players' → logprob: -6.876040935516357
    3. '(players' → logprob: -12.2510404586792
    4. '   ' → logprob: -13.8760404586792
    5. '```' → logprob: -14.0010404586792
    6. 'the' → logprob: -14.3760404586792
    7. '.players' → logprob: -15.5010404586792
    8. '`' → logprob: -15.6260404586792
    9. ' ' → logprob: -15.8760404586792
    10. '
' → logprob: -16.126041412353516

Token 234: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9456692934036255
    2. '
' → logprob: -1.1956692934036255
    3. '<|end|>' → logprob: -1.3206692934036255
    4. '<|end|>' → logprob: -4.570669174194336
    5. '  
' → logprob: -4.820669174194336
    6. ' 
' → logprob: -5.195669174194336
    7. '    
' → logprob: -5.195669174194336
    8. ',' → logprob: -5.945669174194336
    9. 'current' → logprob: -6.320669174194336
    10. '   
' → logprob: -6.695669174194336

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10800494253635406
    2. '   ' → logprob: -2.9830050468444824
    3. '<|end|>' → logprob: -3.4830050468444824
    4. ' while' → logprob: -5.233005046844482
    5. 'while' → logprob: -5.608005046844482
    6. ':' → logprob: -5.983005046844482
    7. ',' → logprob: -5.983005046844482
    8. '  
' → logprob: -6.233005046844482
    9. '    
' → logprob: -6.483005046844482
    10. '```' → logprob: -7.233005046844482

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40785709023475647
    2. 'while' → logprob: -1.157857060432434
    3. ' while' → logprob: -3.9078571796417236
    4. '    
' → logprob: -8.407856941223145
    5. 'current' → logprob: -8.657856941223145
    6. '
' → logprob: -9.407856941223145
    7. '```' → logprob: -10.282856941223145
    8. 'if' → logprob: -10.282856941223145
    9. ',' → logprob: -10.407856941223145
    10. '	while' → logprob: -10.782856941223145

Token 237: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07299719750881195
    2. ' while' → logprob: -2.8229970932006836
    3. '   ' → logprob: -4.572997093200684
    4. 'current' → logprob: -7.822997093200684
    5. 'step' → logprob: -10.447997093200684
    6. ' current' → logprob: -10.572997093200684
    7. '    
' → logprob: -10.697997093200684
    8. 'for' → logprob: -10.947997093200684
    9. '
' → logprob: -11.322997093200684
    10. 'correct' → logprob: -11.572997093200684

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30360549688339233
    2. ' =' → logprob: -1.428605556488037
    3. 'nd' → logprob: -4.053605556488037
    4. 'n' → logprob: -6.053605556488037
    5. 'f' → logprob: -6.178605556488037
    6. 'nt' → logprob: -8.553605079650879
    7. 's' → logprob: -9.678605079650879
    8. 'd' → logprob: -9.803605079650879
    9. 'dx' → logprob: -10.303605079650879
    10. 'x' → logprob: -11.053605079650879

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020614759996533394
    2. ' ' → logprob: -3.8956148624420166
    3. '1' → logprob: -10.020614624023438
    4. 'count' → logprob: -11.520614624023438
    5. ' count' → logprob: -11.895614624023438
    6. ' current' → logprob: -12.520614624023438
    7. 'current' → logprob: -12.895614624023438
    8. '   ' → logprob: -13.020614624023438
    9. 'n' → logprob: -13.895614624023438
    10. ' n' → logprob: -14.770614624023438

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.550411151489243e-05
    2. ' ' → logprob: -9.875055313110352
    3. '1' → logprob: -12.625055313110352
    4. 'current' → logprob: -15.437555313110352
    5. 'count' → logprob: -15.812555313110352
    6. '000' → logprob: -17.12505531311035
    7. '-' → logprob: -17.18755531311035
    8. '   ' → logprob: -17.18755531311035
    9. '```' → logprob: -17.18755531311035
    10. 'n' → logprob: -17.50005531311035

Token 241: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015340578742325306
    2. '<|end|>' → logprob: -4.265340805053711
    3. 'while' → logprob: -7.515340805053711
    4. ' while' → logprob: -8.265340805053711
    5. '<|end|>' → logprob: -8.390340805053711
    6. '   ' → logprob: -9.390340805053711
    7. ' 
' → logprob: -10.265340805053711
    8. '  
' → logprob: -11.890340805053711
    9. '    
' → logprob: -11.890340805053711
    10. '

' → logprob: -12.265340805053711

Token 242: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15266592800617218
    2. 'while' → logprob: -3.152665853500366
    3. ' ' → logprob: -3.527665853500366
    4. 'i' → logprob: -4.152666091918945
    5. ' while' → logprob: -4.402666091918945
    6. 'current' → logprob: -4.527666091918945
    7. ' i' → logprob: -4.652666091918945
    8. ' current' → logprob: -4.902666091918945
    9. 'count' → logprob: -4.902666091918945
    10. 'n' → logprob: -6.652666091918945

Token 243: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7254632115364075
    2. ' =' → logprob: -0.9754632115364075
    3. '_of' → logprob: -2.7254631519317627
    4. 'of' → logprob: -3.3504631519317627
    5. ' of' → logprob: -4.975463390350342
    6. 's' → logprob: -5.225463390350342
    7. '_tokens' → logprob: -5.725463390350342
    8. ' +=' → logprob: -5.850463390350342
    9. '_players' → logprob: -5.975463390350342
    10. '_current' → logprob: -6.100463390350342

Token 244: ' spoken' (ID: 36116)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.6384004354476929
    2. 'correct' → logprob: -1.6384004354476929
    3. 'players' → logprob: -2.3884005546569824
    4. 'round' → logprob: -3.1384005546569824
    5. 'turn' → logprob: -3.2634005546569824
    6. 's' → logprob: -4.013400554656982
    7. 'numbers' → logprob: -4.388400554656982
    8. 'incorrect' → logprob: -4.388400554656982
    9. 'wrong' → logprob: -5.138400554656982
    10. 'current' → logprob: -5.138400554656982

Token 245: ' turns' (ID: 18304)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.0364102125167847
    2. 'numbers' → logprob: -1.9114102125167847
    3. '_tokens' → logprob: -2.286410331726074
    4. '_numbers' → logprob: -2.536410331726074
    5. '<|end|>' → logprob: -2.661410331726074
    6. 's' → logprob: -2.786410331726074
    7. 'players' → logprob: -3.036410331726074
    8. 'words' → logprob: -3.661410331726074
    9. '_players' → logprob: -4.661410331726074
    10. '```' → logprob: -4.661410331726074

Token 246: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6802724003791809
    2. '
' → logprob: -0.8052724003791809
    3. 'while' → logprob: -4.055272579193115
    4. ' while' → logprob: -4.305272579193115
    5. '<|end|>' → logprob: -4.430272579193115
    6. '    
' → logprob: -6.430272579193115
    7. '<|end|>' → logprob: -7.180272579193115
    8. '  
' → logprob: -7.680272579193115
    9. ' 
' → logprob: -8.305272102355957
    10. '	while' → logprob: -8.555272102355957

Token 247: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.0015124812489375472
    2. ' far' → logprob: -6.50151252746582
    3. '
' → logprob: -12.62651252746582
    4. '_far' → logprob: -12.87651252746582
    5. 'Far' → logprob: -13.12651252746582
    6. '   ' → logprob: -13.37651252746582
    7. 'f' → logprob: -14.62651252746582
    8. ' ' → logprob: -16.00151252746582
    9. 'i' → logprob: -16.75151252746582
    10. 'for' → logprob: -17.37651252746582

Token 248: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20230239629745483
    2. 'while' → logprob: -1.8273024559020996
    3. ' while' → logprob: -4.3273024559021
    4. '   ' → logprob: -4.8273024559021
    5. '<|end|>' → logprob: -7.4523024559021
    6. '	while' → logprob: -9.202301979064941
    7. '    
' → logprob: -9.202301979064941
    8. '```' → logprob: -9.327301979064941
    9. '
' → logprob: -9.702301979064941
    10. '

' → logprob: -9.952301979064941

Token 249: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3936951756477356
    2. '   ' → logprob: -1.2686951160430908
    3. ' while' → logprob: -3.143695116043091
    4. '
' → logprob: -7.14369535446167
    5. 'if' → logprob: -9.018694877624512
    6. '	while' → logprob: -9.893694877624512
    7. '```' → logprob: -9.893694877624512
    8. '    
' → logprob: -10.393694877624512
    9. ',' → logprob: -11.268694877624512
    10. ' if' → logprob: -11.393694877624512

Token 250: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00016337241686414927
    2. '   ' → logprob: -9.375163078308105
    3. ' while' → logprob: -9.500163078308105
    4. 'correct' → logprob: -13.375163078308105
    5. 'wrong' → logprob: -14.375163078308105
    6. 'for' → logprob: -14.750163078308105
    7. '
' → logprob: -15.500163078308105
    8. 'if' → logprob: -15.875163078308105
    9. 'current' → logprob: -16.000164031982422
    10. 'result' → logprob: -16.125164031982422

Token 251: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35815000534057617
    2. ' i' → logprob: -1.3581500053405762
    3. 'current' → logprob: -4.108150005340576
    4. ' current' → logprob: -4.233150005340576
    5. 'count' → logprob: -4.858150005340576
    6. 'True' → logprob: -6.483150005340576
    7. ' True' → logprob: -6.858150005340576
    8. ' count' → logprob: -7.108150005340576
    9. 'len' → logprob: -7.358150005340576
    10. ' turn' → logprob: -8.233150482177734

Token 252: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02096819132566452
    2. '<' → logprob: -3.895968198776245
    3. '<n' → logprob: -7.895967960357666
    4. ' ' → logprob: -10.270968437194824
    5. ' <=' → logprob: -11.770968437194824
    6. '<len' → logprob: -12.020968437194824
    7. '<num' → logprob: -13.270968437194824
    8. '<size' → logprob: -14.270968437194824
    9. ' <
' → logprob: -14.270968437194824
    10. '<m' → logprob: -14.520968437194824

Token 253: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001011611195281148
    2. 'len' → logprob: -7.126011848449707
    3. ' n' → logprob: -8.501011848449707
    4. ' len' → logprob: -13.001011848449707
    5. '   ' → logprob: -14.876011848449707
    6. '
' → logprob: -14.876011848449707
    7. '	n' → logprob: -14.876011848449707
    8. ' ' → logprob: -15.876011848449707
    9. '(n' → logprob: -16.37601089477539
    10. 'count' → logprob: -16.37601089477539

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14354030787944794
    2. ':
' → logprob: -2.268540382385254
    3. ' and' → logprob: -3.518540382385254
    4. 'and' → logprob: -7.643540382385254
    5. '   ' → logprob: -10.143540382385254
    6. ' :' → logprob: -10.518540382385254
    7. '):
' → logprob: -11.018540382385254
    8. ':

' → logprob: -11.268540382385254
    9. ' :
' → logprob: -11.268540382385254
    10. '):' → logprob: -11.768540382385254

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002180477138608694
    2. ' if' → logprob: -6.877180576324463
    3. ' and' → logprob: -8.627180099487305
    4. ' current' → logprob: -8.627180099487305
    5. 'current' → logprob: -9.002180099487305
    6. ':
' → logprob: -9.127180099487305
    7. 'if' → logprob: -9.127180099487305
    8. 'player' → logprob: -9.252180099487305
    9. '        
' → logprob: -9.377180099487305
    10. '
' → logprob: -9.877180099487305

Token 256: ' if' (ID: 538)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.1762160211801529
    2. 'current' → logprob: -1.9262160062789917
    3. 'if' (adapté à ' if') → logprob: -4.176216125488281
    4. '       ' → logprob: -8.426216125488281
    5. 'curr' → logprob: -9.551216125488281
    6. ' player' → logprob: -9.801216125488281
    7. ' current' → logprob: -10.051216125488281
    8. 'p' → logprob: -10.301216125488281
    9. 'cur' → logprob: -10.426216125488281
    10. ' if' → logprob: -10.426216125488281

Token 257: ' len' (ID: 4631)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.156504824757576
    2. ' players' → logprob: -2.2815048694610596
    3. 'current' → logprob: -3.5315048694610596
    4. 'turn' → logprob: -5.5315046310424805
    5. ' current' → logprob: -5.5315046310424805
    6. 'i' → logprob: -5.6565046310424805
    7. ' i' → logprob: -7.6565046310424805
    8. 'not' → logprob: -7.9065046310424805
    9. 'is' → logprob: -8.28150463104248
    10. ' not' → logprob: -8.40650463104248

Token 258: '(players' (ID: 154267)
  Prédit: '(players'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(players' → logprob: -0.5765137672424316
    2. '(el' → logprob: -0.8265137672424316
    3. 'players' → logprob: -8.326513290405273
    4. '(' → logprob: -8.576513290405273
    5. 'el' → logprob: -9.076513290405273
    6. '(pl' → logprob: -11.701513290405273
    7. ' eliminated' → logprob: -12.201513290405273
    8. '(s' → logprob: -12.326513290405273
    9. ' players' → logprob: -12.576513290405273
    10. ' (' → logprob: -13.076513290405273

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013436852023005486
    2. ')==' → logprob: -7.126343727111816
    3. ')<=' → logprob: -8.501343727111816
    4. '[' → logprob: -8.626343727111816
    5. ')>' → logprob: -9.001343727111816
    6. ' )' → logprob: -11.001343727111816
    7. '   ' → logprob: -12.751343727111816
    8. '==' → logprob: -13.001343727111816
    9. ')-' → logprob: -13.501343727111816
    10. '```' → logprob: -13.876343727111816

Token 260: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26465940475463867
    2. ' ==' → logprob: -2.1396594047546387
    3. '>' → logprob: -2.3896594047546387
    4. '<=' → logprob: -4.889659404754639
    5. ' >' → logprob: -5.139659404754639
    6. ' <=' → logprob: -5.514659404754639
    7. ' -' → logprob: -6.514659404754639
    8. ')' → logprob: -6.764659404754639
    9. '[' → logprob: -6.889659404754639
    10. '-' → logprob: -7.139659404754639

Token 261: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.009751011617481709
    2. '1' → logprob: -5.384750843048096
    3. ' len' → logprob: -5.509750843048096
    4. 'el' → logprob: -7.009750843048096
    5. ' eliminated' → logprob: -8.884751319885254
    6. ' ' → logprob: -10.759751319885254
    7. '(len' → logprob: -12.634751319885254
    8. 'elapsed' → logprob: -13.884751319885254
    9. 'elim' → logprob: -14.009751319885254
    10. '	len' → logprob: -14.634751319885254

Token 262: '(el' (ID: 35872)
  Prédit: '(el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -0.011080714873969555
    2. 'el' → logprob: -4.511080741882324
    3. ' eliminated' → logprob: -11.136080741882324
    4. '(' → logprob: -11.761080741882324
    5. '(e' → logprob: -11.886080741882324
    6. '	el' → logprob: -13.636080741882324
    7. ' (' → logprob: -14.136080741882324
    8. '/el' → logprob: -14.386080741882324
    9. '(ele' → logprob: -14.636080741882324
    10. '_el' → logprob: -15.636080741882324

Token 263: 'imin' (ID: 10528)
  Prédit: 'imin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imin' → logprob: -0.029168859124183655
    2. 'inated' → logprob: -4.029169082641602
    3. 'imated' → logprob: -4.779169082641602
    4. 'min' → logprob: -6.404169082641602
    5. 'im' → logprob: -7.154169082641602
    6. 'ated' → logprob: -10.904169082641602
    7. ' eliminated' → logprob: -10.904169082641602
    8. 'amin' → logprob: -11.029169082641602
    9. 'imited' → logprob: -11.279169082641602
    10. 'imized' → logprob: -12.279169082641602

Token 264: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -7.896309739408025e-07
    2. 'inated' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375
    4. 'ATED' → logprob: -18.25
    5. 'ined' → logprob: -19.25
    6. 'at' → logprob: -19.625
    7. 'ted' → logprob: -19.875
    8. 'ed' → logprob: -20.25
    9. 'ited' → logprob: -20.25
    10. 'eted' → logprob: -20.25

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016494467854499817
    2. ' <=' → logprob: -5.016494274139404
    3. ')<=' → logprob: -5.391494274139404
    4. ' )' → logprob: -6.266494274139404
    5. ')==' → logprob: -7.391494274139404
    6. ')>' → logprob: -7.391494274139404
    7. ' ==' → logprob: -7.516494274139404
    8. '>' → logprob: -7.641494274139404
    9. '<=' → logprob: -7.891494274139404
    10. '==' → logprob: -7.891494274139404

Token 266: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5235347747802734
    2. ' ==' → logprob: -1.6485347747802734
    3. '<=' → logprob: -2.1485347747802734
    4. ' <=' → logprob: -2.3985347747802734
    5. '>' → logprob: -5.023534774780273
    6. ' >' → logprob: -7.023534774780273
    7. ')' → logprob: -8.648534774780273
    8. '=' → logprob: -10.648534774780273
    9. ')==' → logprob: -10.773534774780273
    10. ')<=' → logprob: -10.898534774780273

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.750067710876465
    4. '0' → logprob: -15.250067710876465
    5. '  ' → logprob: -16.75006675720215
    6. '<|end|>' → logprob: -17.62506675720215
    7. '    ' → logprob: -17.75006675720215
    8. 'one' → logprob: -17.81256675720215
    9. '```' → logprob: -17.87506675720215
    10. '2' → logprob: -18.31256675720215

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -10.375031471252441
    3. '0' → logprob: -14.750031471252441
    4. '   ' → logprob: -15.625031471252441
    5. '2' → logprob: -16.875032424926758
    6. 'one' → logprob: -18.125032424926758
    7. '  ' → logprob: -18.312532424926758
    8. '１' → logprob: -19.187532424926758
    9. '۱' → logprob: -19.250032424926758
    10. '3' → logprob: -19.437532424926758

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036114517599344254
    2. ':
' → logprob: -3.411114454269409
    3. ' and' → logprob: -6.161114692687988
    4. ' or' → logprob: -8.161114692687988
    5. '       ' → logprob: -10.161114692687988
    6. 'and' → logprob: -11.286114692687988
    7. ',' → logprob: -12.286114692687988
    8. '   ' → logprob: -12.661114692687988
    9. '           ' → logprob: -12.661114692687988
    10. ' :' → logprob: -13.161114692687988

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.066614530980587
    2. ':
' → logprob: -3.1916146278381348
    3. ':' → logprob: -4.066614627838135
    4. '       ' → logprob: -5.441614627838135
    5. ' and' → logprob: -6.566614627838135
    6. ',' → logprob: -8.941614151000977
    7. ' break' → logprob: -9.066614151000977
    8. '   ' → logprob: -10.191614151000977
    9. '
' → logprob: -10.691614151000977
    10. '):
' → logprob: -10.816614151000977

Token 271: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27354007959365845
    2. ' break' → logprob: -1.8985400199890137
    3. 'break' → logprob: -2.5235400199890137
    4. '	break' → logprob: -5.273540019989014
    5. '   ' → logprob: -6.398540019989014
    6. '
' → logprob: -6.648540019989014
    7. '           ' → logprob: -6.898540019989014
    8. '               ' → logprob: -8.523540496826172
    9. ' ' → logprob: -10.648540496826172
    10. '```' → logprob: -11.398540496826172

Token 272: ' Only' (ID: 12817)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.16167639195919037
    2. '       ' → logprob: -2.7866764068603516
    3. 'break' → logprob: -2.7866764068603516
    4. '           ' → logprob: -3.6616764068603516
    5. '	break' → logprob: -8.911676406860352
    6. '   ' → logprob: -8.911676406860352
    7. '               ' → logprob: -10.786676406860352
    8. '
' → logprob: -11.411676406860352
    9. ' ' → logprob: -11.411676406860352
    10. '#' → logprob: -11.536676406860352

Token 273: ' one' (ID: 1001)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.35043516755104065
    2. 'break' → logprob: -1.3504351377487183
    3. ' one' → logprob: -3.350435256958008
    4. 'one' → logprob: -7.475435256958008
    5. '   ' → logprob: -7.600435256958008
    6. ' ' → logprob: -8.600435256958008
    7. '           ' → logprob: -9.850435256958008
    8. '	break' → logprob: -10.475435256958008
    9. '
' → logprob: -10.850435256958008
    10. '       ' → logprob: -11.225435256958008

Token 274: ' or' (ID: 503)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.6995828747749329
    2. 'player' → logprob: -0.6995828747749329
    3. '
' → logprob: -6.074583053588867
    4. '   ' → logprob: -6.949583053588867
    5. ' remaining' → logprob: -7.449583053588867
    6. 'remaining' → logprob: -7.699583053588867
    7. ' break' → logprob: -8.199583053588867
    8. 'break' → logprob: -8.449583053588867
    9. ':
' → logprob: -8.574583053588867
    10. ')' → logprob: -8.824583053588867

Token 275: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05326617509126663
    2. 'zero' → logprob: -3.3032662868499756
    3. ' zero' → logprob: -5.0532660484313965
    4. 'no' → logprob: -5.8032660484313965
    5. 'none' → logprob: -5.9282660484313965
    6. ' ' → logprob: -6.4282660484313965
    7. ' no' → logprob: -7.0532660484313965
    8. ' none' → logprob: -7.9282660484313965
    9. 'None' → logprob: -8.803266525268555
    10. '
' → logprob: -10.928266525268555

Token 276: ' players' (ID: 7238)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.48668357729911804
    2. 'player' → logprob: -1.3616836071014404
    3. ' players' → logprob: -2.2366836071014404
    4. ' player' → logprob: -4.111683368682861
    5. 'remaining' → logprob: -5.611683368682861
    6. '   ' → logprob: -7.486683368682861
    7. ' remaining' → logprob: -7.861683368682861
    8. 'participants' → logprob: -8.23668384552002
    9. '```' → logprob: -9.23668384552002
    10. 'participant' → logprob: -9.23668384552002

Token 277: ' remain' (ID: 12760)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05918426439166069
    2. '               ' → logprob: -3.0591843128204346
    3. ':
' → logprob: -5.0591840744018555
    4. ':' → logprob: -6.1841840744018555
    5. '       ' → logprob: -6.6841840744018555
    6. ',' → logprob: -7.5591840744018555
    7. ' break' → logprob: -9.309184074401855
    8. ' is' → logprob: -9.934184074401855
    9. '		' → logprob: -9.934184074401855
    10. 'break' → logprob: -10.934184074401855

Token 278: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006825366988778114
    2. '               ' → logprob: -5.6318254470825195
    3. ':
' → logprob: -6.5068254470825195
    4. ':' → logprob: -7.0068254470825195
    5. ',' → logprob: -7.3818254470825195
    6. '       ' → logprob: -8.75682544708252
    7. ' and' → logprob: -11.75682544708252
    8. ' or' → logprob: -12.25682544708252
    9. ' break' → logprob: -12.38182544708252
    10. '.' → logprob: -12.50682544708252

Token 279: ' stop' (ID: 5666)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.941112756729126
    2. ' break' → logprob: -1.066112756729126
    3. '       ' → logprob: -1.816112756729126
    4. '           ' → logprob: -2.316112756729126
    5. '               ' → logprob: -6.066112518310547
    6. '	break' → logprob: -7.066112518310547
    7. '   ' → logprob: -7.191112518310547
    8. '
' → logprob: -9.441112518310547
    9. ' ' → logprob: -9.566112518310547
    10. ' ' → logprob: -10.816112518310547

Token 280: ' processing' (ID: 12323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005998947657644749
    2. '       ' → logprob: -5.3809990882873535
    3. '               ' → logprob: -6.7559990882873535
    4. 'break' → logprob: -9.505998611450195
    5. '   ' → logprob: -9.880998611450195
    6. '
' → logprob: -10.005998611450195
    7. '.' → logprob: -10.880998611450195
    8. ' break' → logprob: -12.505998611450195
    9. '```' → logprob: -12.755998611450195
    10. ' the' → logprob: -12.880998611450195

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07976258546113968
    2. '           ' → logprob: -2.5797626972198486
    3. '
' → logprob: -7.3297624588012695
    4. '.' → logprob: -9.95476245880127
    5. '<|end|>' → logprob: -9.95476245880127
    6. '               ' → logprob: -10.20476245880127
    7. '        
' → logprob: -10.70476245880127
    8. ',' → logprob: -10.95476245880127
    9. '   ' → logprob: -11.07976245880127
    10. ' break' → logprob: -12.45476245880127

Token 282: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02759936824440956
    2. '           ' → logprob: -3.652599334716797
    3. '<|end|>' → logprob: -7.277599334716797
    4. '
' → logprob: -8.277599334716797
    5. '.' → logprob: -9.402599334716797
    6. '```' → logprob: -9.777599334716797
    7. '   ' → logprob: -9.902599334716797
    8. ',' → logprob: -9.902599334716797
    9. '               ' → logprob: -10.277599334716797
    10. '        
' → logprob: -10.777599334716797

Token 283: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.18460878729820251
    2. '       ' → logprob: -2.1846086978912354
    3. ' break' → logprob: -2.9346086978912354
    4. '   ' → logprob: -6.4346089363098145
    5. '           ' → logprob: -6.9346089363098145
    6. '	break' → logprob: -8.184608459472656
    7. '```' → logprob: -10.684608459472656
    8. '               ' → logprob: -11.434608459472656
    9. '
' → logprob: -13.184608459472656
    10. ' ' → logprob: -13.309608459472656

Token 284: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04412629455327988
    2. '       ' → logprob: -3.169126272201538
    3. '        
' → logprob: -7.669126510620117
    4. '<|end|>' → logprob: -8.669126510620117
    5. '  
' → logprob: -8.919126510620117
    6. ' 
' → logprob: -9.169126510620117
    7. '
' → logprob: -9.294126510620117
    8. '    
' → logprob: -9.794126510620117
    9. '   ' → logprob: -10.794126510620117
    10. '' → logprob: -11.544126510620117

Token 285: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5775366425514221
    2. '       ' → logprob: -0.8275366425514221
    3. '        
' → logprob: -6.702536582946777
    4. '  
' → logprob: -9.077536582946777
    5. ' 
' → logprob: -9.577536582946777
    6. '<|end|>' → logprob: -9.952536582946777
    7. '
' → logprob: -10.202536582946777
    8. '    
' → logprob: -10.452536582946777
    9. '   ' → logprob: -11.327536582946777
    10. ' if' → logprob: -11.702536582946777

Token 286: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7510610818862915
    2. 'player' → logprob: -1.1260610818862915
    3. 'current' → logprob: -1.8760610818862915
    4. 'if' → logprob: -4.001060962677002
    5. ' current' → logprob: -4.626060962677002
    6. ' player' → logprob: -4.626060962677002
    7. 'spoken' → logprob: -5.251060962677002
    8. ' if' → logprob: -5.376060962677002
    9. ' spoken' → logprob: -7.126060962677002
    10. 'speaker' → logprob: -8.12606143951416

Token 287: ' find' (ID: 1646)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.39485374093055725
    2. 'current' → logprob: -1.1448537111282349
    3. 'if' → logprob: -5.394853591918945
    4. 'while' → logprob: -6.644853591918945
    5. 'curr' → logprob: -6.894853591918945
    6. 'speaker' → logprob: -7.894853591918945
    7. 'cur' → logprob: -8.144853591918945
    8. 'expected' → logprob: -8.394853591918945
    9. 'p' → logprob: -10.019853591918945
    10. 'pid' → logprob: -10.269853591918945

Token 288: ' next' (ID: 2613)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3301428556442261
    2. ' next' → logprob: -1.830142855644226
    3. ' while' → logprob: -2.8301429748535156
    4. 'current' → logprob: -3.8301429748535156
    5. ' the' → logprob: -4.205142974853516
    6. 'while' → logprob: -4.330142974853516
    7. 'next' → logprob: -4.955142974853516
    8. ' player' → logprob: -5.830142974853516
    9. 'the' → logprob: -7.080142974853516
    10. 'player' → logprob: -7.205142974853516

Token 289: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.6943053007125854
    2. ' player' → logprob: -1.0693053007125854
    3. ' while' → logprob: -2.444305419921875
    4. ' active' → logprob: -3.694305419921875
    5. ' valid' → logprob: -3.819305419921875
    6. 'while' → logprob: -4.319305419921875
    7. 'valid' → logprob: -6.444305419921875
    8. '_player' → logprob: -6.569305419921875
    9. 'active' → logprob: -6.694305419921875
    10. ' current' → logprob: -7.069305419921875

Token 290: ' alive' (ID: 23757)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07291131466627121
    2. ' while' → logprob: -3.072911262512207
    3. 'while' → logprob: -4.697911262512207
    4. '
' → logprob: -5.072911262512207
    5. '<|end|>' → logprob: -5.447911262512207
    6. '        
' → logprob: -6.322911262512207
    7. ',' → logprob: -7.197911262512207
    8. '<|end|>' → logprob: -7.947911262512207
    9. ':' → logprob: -8.447911262512207
    10. '	while' → logprob: -8.822911262512207

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6570084095001221
    2. '
' → logprob: -1.032008409500122
    3. 'while' → logprob: -3.032008409500122
    4. '<|end|>' → logprob: -3.157008409500122
    5. ' while' → logprob: -3.657008409500122
    6. '        
' → logprob: -6.032008171081543
    7. '<|end|>' → logprob: -6.407008171081543
    8. ':' → logprob: -6.907008171081543
    9. ',' → logprob: -7.407008171081543
    10. '	while' → logprob: -7.782008171081543

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4861590564250946
    2. ' while' → logprob: -1.986159086227417
    3. '<|end|>' → logprob: -2.236159086227417
    4. '
' → logprob: -2.736159086227417
    5. 'while' → logprob: -3.111159086227417
    6. '        
' → logprob: -4.486158847808838
    7. ',' → logprob: -5.486158847808838
    8. '<|end|>' → logprob: -5.611158847808838
    9. '    
' → logprob: -6.111158847808838
    10. '	while' → logprob: -6.486158847808838

Token 293: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.46434152126312256
    2. ' while' → logprob: -1.3393415212631226
    3. '       ' → logprob: -2.214341640472412
    4. '	while' → logprob: -9.214341163635254
    5. '        
' → logprob: -10.214341163635254
    6. '   ' → logprob: -10.839341163635254
    7. '    ' → logprob: -11.464341163635254
    8. 'current' → logprob: -11.714341163635254
    9. 'if' → logprob: -11.964341163635254
    10. ' current' → logprob: -12.464341163635254

Token 294: ' players' (ID: 7238)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.0013738033594563603
    2. ' players' → logprob: -7.126373767852783
    3. 'turn' → logprob: -7.876373767852783
    4. '(players' → logprob: -8.626374244689941
    5. '(turn' → logprob: -12.251374244689941
    6. 'play' → logprob: -13.251374244689941
    7. 'current' → logprob: -13.626374244689941
    8. ' turn' → logprob: -13.876374244689941
    9. '(' → logprob: -14.376374244689941
    10. 'player' → logprob: -15.001374244689941

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. 'turn' → logprob: -13.000003814697266
    3. ' [' → logprob: -14.125003814697266
    4. '[current' → logprob: -14.375003814697266
    5. '[to' → logprob: -15.375003814697266
    6. '[next' → logprob: -16.250003814697266
    7. ' turn' → logprob: -16.750003814697266
    8. '[
' → logprob: -17.375003814697266
    9. '
' → logprob: -17.500003814697266
    10. '[i' → logprob: -17.875003814697266

Token 296: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.00017231269157491624
    2. '(turn' → logprob: -9.00017261505127
    3. '[' → logprob: -10.12517261505127
    4. ' turn' → logprob: -11.75017261505127
    5. 'turned' → logprob: -15.00017261505127
    6. '(' → logprob: -15.62517261505127
    7. '
' → logprob: -16.375171661376953
    8. '_turn' → logprob: -16.500171661376953
    9. ']' → logprob: -16.750171661376953
    10. '.turn' → logprob: -17.000171661376953

Token 297: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1875571544806007e-05
    2. 'index' → logprob: -11.375011444091797
    3. '_' → logprob: -16.375011444091797
    4. ']' → logprob: -17.000011444091797
    5. ' _' → logprob: -17.125011444091797
    6. '[index' → logprob: -17.750011444091797
    7. ' index' → logprob: -18.000011444091797
    8. '_idx' → logprob: -18.000011444091797
    9. ']_' → logprob: -18.250011444091797
    10. 'Index' → logprob: -18.375011444091797

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34844428300857544
    2. ' in' → logprob: -1.3484442234039307
    3. 'in' → logprob: -3.5984442234039307
    4. ' ]' → logprob: -5.84844446182251
    5. ' not' → logprob: -6.09844446182251
    6. 'not' → logprob: -6.84844446182251
    7. ')' → logprob: -7.34844446182251
    8. ' ' → logprob: -8.848443984985352
    9. '%' → logprob: -9.223443984985352
    10. '[' → logprob: -9.723443984985352

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759443044662476
    2. 'in' → logprob: -0.8259443044662476
    3. ' ' → logprob: -12.950943946838379
    4. '
' → logprob: -13.700943946838379
    5. ')' → logprob: -14.700943946838379
    6. '	in' → logprob: -15.700943946838379
    7. ' 
' → logprob: -16.075944900512695
    8. 'not' → logprob: -16.075944900512695
    9. ' not' → logprob: -16.075944900512695
    10. '[in' → logprob: -16.075944900512695

Token 300: ' eliminated' (ID: 61164)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.018168320879340172
    2. ' eliminated' → logprob: -4.0181684494018555
    3. 'elim' → logprob: -12.018168449401855
    4. '	el' → logprob: -12.268168449401855
    5. ' el' → logprob: -13.393168449401855
    6. 'excluded' → logprob: -13.393168449401855
    7. 'elapsed' → logprob: -13.768168449401855
    8. '(el' → logprob: -14.018168449401855
    9. '_el' → logprob: -14.518168449401855
    10. 'El' → logprob: -15.143168449401855

Token 301: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48263171315193176
    2. ':' → logprob: -0.9826316833496094
    3. '):
' → logprob: -5.107631683349609
    4. '):' → logprob: -6.857631683349609
    5. ' or' → logprob: -7.482631683349609
    6. ' and' → logprob: -7.857631683349609
    7. '   ' → logprob: -7.982631683349609
    8. ',' → logprob: -10.10763168334961
    9. 'and' → logprob: -11.10763168334961
    10. '       ' → logprob: -11.23263168334961

Token 302: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3836980164051056
    2. ':
' → logprob: -1.5086979866027832
    3. '           ' → logprob: -3.133697986602783
    4. ':' → logprob: -3.758697986602783
    5. ' and' → logprob: -3.758697986602783
    6. '):
' → logprob: -5.633697986602783
    7. ',' → logprob: -6.883697986602783
    8. '   ' → logprob: -7.133697986602783
    9. ' or' → logprob: -7.258697986602783
    10. '```' → logprob: -8.633698463439941

Token 303: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.13923759758472443
    2. ' turn' → logprob: -2.264237642288208
    3. '           ' → logprob: -4.139237403869629
    4. '       ' → logprob: -4.639237403869629
    5. '   ' → logprob: -7.889237403869629
    6. '(turn' → logprob: -9.889237403869629
    7. '               ' → logprob: -11.014237403869629
    8. '.turn' → logprob: -12.264237403869629
    9. '
' → logprob: -12.389237403869629
    10. '```' → logprob: -12.639237403869629

Token 304: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: 0.0
    2. '_' → logprob: -17.625
    3. 'index' → logprob: -18.125
    4. '   ' → logprob: -18.5
    5. '_idx' → logprob: -19.5
    6. '[index' → logprob: -19.875
    7. '_token' → logprob: -20.375
    8. '_i' → logprob: -20.5
    9. '_INDEX' → logprob: -20.625
    10. 'Index' → logprob: -20.75

Token 305: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21749748289585114
    2. '=' → logprob: -1.96749746799469
    3. ' +=' → logprob: -2.9674975872039795
    4. ' =' → logprob: -5.4674973487854
    5. '+' → logprob: -11.717497825622559
    6. '   ' → logprob: -13.842497825622559
    7. '%=' → logprob: -14.342497825622559
    8. ']+=' → logprob: -14.967497825622559
    9. ' ' → logprob: -16.467496871948242
    10. '    ' → logprob: -16.967496871948242

Token 306: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7259273529052734
    2. '(turn' → logprob: -0.9759273529052734
    3. ' (' → logprob: -1.9759273529052734
    4. '(t' → logprob: -7.850927352905273
    5. '(next' → logprob: -9.225927352905273
    6. '   ' → logprob: -9.850927352905273
    7. '           ' → logprob: -10.475927352905273
    8. '(tt' → logprob: -10.725927352905273
    9. '(to' → logprob: -11.100927352905273
    10. '(end' → logprob: -12.350927352905273

Token 307: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.006890254560858011
    2. '(turn' → logprob: -5.006890296936035
    3. '(' → logprob: -8.756890296936035
    4. ' turn' → logprob: -11.006890296936035
    5. '   ' → logprob: -14.506890296936035
    6. '_turn' → logprob: -15.381890296936035
    7. ' (' → logprob: -16.38188934326172
    8. '.turn' → logprob: -16.50688934326172
    9. '(t' → logprob: -17.63188934326172
    10. 'eturn' → logprob: -18.00688934326172

Token 308: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.4153549020411447e-05
    2. 'index' → logprob: -10.75002384185791
    3. '+' → logprob: -13.62502384185791
    4. 'Index' → logprob: -14.75002384185791
    5. '1' → logprob: -15.37502384185791
    6. '_idx' → logprob: -16.000024795532227
    7. '   ' → logprob: -16.000024795532227
    8. '_turn' → logprob: -16.500024795532227
    9. 'turn' → logprob: -16.625024795532227
    10. '_token' → logprob: -16.875024795532227

Token 309: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759394764900208
    2. '+' → logprob: -0.8259394764900208
    3. '+
' → logprob: -18.075939178466797
    4. '＋' → logprob: -18.450939178466797
    5. '1' → logprob: -18.700939178466797
    6. ' ' → logprob: -18.825939178466797
    7. ' +
' → logprob: -19.325939178466797
    8. ')' → logprob: -19.450939178466797
    9. '+i' → logprob: -20.575939178466797
    10. '```' → logprob: -20.575939178466797

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -17.00007438659668
    4. '```' → logprob: -17.25007438659668
    5. '   ' → logprob: -17.50007438659668
    6. '<|end|>' → logprob: -19.25007438659668
    7. '
' → logprob: -19.37507438659668
    8. '  ' → logprob: -20.43757438659668
    9. '۱' → logprob: -20.75007438659668
    10. '１' → logprob: -21.18757438659668

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -16.250017166137695
    4. '   ' → logprob: -16.625017166137695
    5. '```' → logprob: -16.750017166137695
    6. '
' → logprob: -18.000017166137695
    7. '[' → logprob: -19.437517166137695
    8. '  ' → logprob: -19.812517166137695
    9. '           ' → logprob: -19.937517166137695
    10. '{' → logprob: -20.062517166137695

Token 312: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ')%' → logprob: -11.000018119812012
    3. ' )' → logprob: -13.625018119812012
    4. ')
' → logprob: -16.125017166137695
    5. '1' → logprob: -19.000017166137695
    6. ')

' → logprob: -19.625017166137695
    7. '%' → logprob: -19.875017166137695
    8. ']' → logprob: -20.250017166137695
    9. '```' → logprob: -20.250017166137695
    10. '),' → logprob: -20.375017166137695

Token 313: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019879372790455818
    2. ')%' → logprob: -4.019879341125488
    3. '%' → logprob: -6.894879341125488
    4. '1' → logprob: -7.519879341125488
    5. ' %' → logprob: -9.394879341125488
    6. ' )' → logprob: -9.394879341125488
    7. ' ' → logprob: -12.269879341125488
    8. '2' → logprob: -14.769879341125488
    9. ']' → logprob: -15.019879341125488
    10. '```' → logprob: -15.144879341125488

Token 314: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47458145022392273
    2. 'len' → logprob: -0.9745814800262451
    3. ' len' → logprob: -7.849581241607666
    4. ' m' → logprob: -9.099581718444824
    5. '(len' → logprob: -12.849581718444824
    6. '   ' → logprob: -16.974580764770508
    7. '(m' → logprob: -17.474580764770508
    8. ' ' → logprob: -18.099580764770508
    9. 'length' → logprob: -18.974580764770508
    10. '	len' → logprob: -19.099580764770508

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4239200949668884
    2. '
' → logprob: -1.5489201545715332
    3. '<|end|>' → logprob: -2.048920154571533
    4. '<|end|>' → logprob: -5.923920154571533
    5. '        
' → logprob: -8.298919677734375
    6. ')' → logprob: -8.423919677734375
    7. '  
' → logprob: -8.798919677734375
    8. '
' → logprob: -9.173919677734375
    9. ',' → logprob: -9.298919677734375
    10. ')
' → logprob: -9.298919677734375

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03534603491425514
    2. '
' → logprob: -3.535346031188965
    3. '<|end|>' → logprob: -5.660346031188965
    4. '   ' → logprob: -7.535346031188965
    5. '        
' → logprob: -7.785346031188965
    6. ',' → logprob: -8.285346031188965
    7. '<|end|>' → logprob: -8.785346031188965
    8. ')' → logprob: -9.160346031188965
    9. '  
' → logprob: -9.410346031188965
    10. ' if' → logprob: -9.410346031188965

Token 317: ' current' (ID: 2208)
  Prédit: 'said'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'said' → logprob: -0.46714553236961365
    2. 'spoken' → logprob: -2.0921454429626465
    3. '       ' → logprob: -2.7171454429626465
    4. 'player' → logprob: -3.0921454429626465
    5. 'current' (adapté à ' current') → logprob: -3.0921454429626465
    6. 'if' → logprob: -3.3421454429626465
    7. 'expected' → logprob: -3.3421454429626465
    8. 'correct' → logprob: -4.2171454429626465
    9. 'token' → logprob: -6.5921454429626465
    10. 'say' → logprob: -6.9671454429626465

Token 318: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.9864749312400818
    2. '_token' → logprob: -1.3614749908447266
    3. '_s' → logprob: -1.8614749908447266
    4. '_number' → logprob: -2.3614749908447266
    5. '_num' → logprob: -2.4864749908447266
    6. '_sp' → logprob: -4.861474990844727
    7. '_word' → logprob: -4.861474990844727
    8. '_phrase' → logprob: -4.861474990844727
    9. '_expected' → logprob: -5.611474990844727
    10. '_answer' → logprob: -6.486474990844727

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287445843219757
    2. '=' → logprob: -1.0537445545196533
    3. ')' → logprob: -11.428744316101074
    4. ',' → logprob: -11.678744316101074
    5. '   ' → logprob: -12.178744316101074
    6. ' ' → logprob: -12.303744316101074
    7. '_' → logprob: -12.928744316101074
    8. ']' → logprob: -13.303744316101074
    9. '_id' → logprob: -13.678744316101074
    10. '<|end|>' → logprob: -13.678744316101074

Token 320: ' players' (ID: 7238)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.07889298349618912
    2. ' players' → logprob: -2.578892946243286
    3. '(players' → logprob: -12.828892707824707
    4. '   ' → logprob: -15.203892707824707
    5. '.players' → logprob: -15.703892707824707
    6. 'player' → logprob: -16.578893661499023
    7. 'play' → logprob: -17.578893661499023
    8. '_players' → logprob: -17.578893661499023
    9. 'Players' → logprob: -17.578893661499023
    10. ' ' → logprob: -17.578893661499023

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -17.0
    3. ' [' → logprob: -17.5
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -20.0
    6. '[t' → logprob: -20.25
    7. '[current' → logprob: -20.5
    8. 'turn' → logprob: -20.625
    9. '(turn' → logprob: -21.375
    10. '[to' → logprob: -21.5

Token 322: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.1041145626222715e-05
    2. ' turn' → logprob: -11.500011444091797
    3. '(turn' → logprob: -14.250011444091797
    4. '
' → logprob: -16.750011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '[' → logprob: -17.625011444091797
    7. 'tur' → logprob: -18.375011444091797
    8. '
' → logprob: -19.000011444091797
    9. '_turn' → logprob: -19.375011444091797
    10. '```' → logprob: -19.875011444091797

Token 323: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.843177233240567e-05
    2. 'index' → logprob: -11.125018119812012
    3. 'ex' → logprob: -13.125018119812012
    4. 'dex' → logprob: -13.500018119812012
    5. 'Index' → logprob: -15.750018119812012
    6. 'nd' → logprob: -17.500019073486328
    7. ' index' → logprob: -18.000019073486328
    8. 'x' → logprob: -18.125019073486328
    9. '_INDEX' → logprob: -18.500019073486328
    10. '   ' → logprob: -18.750019073486328

Token 324: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019012577831745148
    2. ']' → logprob: -4.019012451171875
    3. ' )' → logprob: -7.644012451171875
    4. ')
' → logprob: -8.019012451171875
    5. ' ]' → logprob: -10.894012451171875
    6. ')]' → logprob: -11.644012451171875
    7. '])' → logprob: -11.894012451171875
    8. ']
' → logprob: -12.269012451171875
    9. ')

' → logprob: -12.394012451171875
    10. '<|end|>' → logprob: -12.644012451171875

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00121916679199785
    2. 'if' → logprob: -7.501219272613525
    3. ' if' → logprob: -8.251218795776367
    4. 'expected' → logprob: -9.251218795776367
    5. ',' → logprob: -9.626218795776367
    6. '        
' → logprob: -10.001218795776367
    7. 's' → logprob: -10.626218795776367
    8. '#' → logprob: -11.001218795776367
    9. 'correct' → logprob: -11.001218795776367
    10. '<|end|>' → logprob: -11.001218795776367

Token 326: ' said' (ID: 2059)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6400293111801147
    2. 'expected' → logprob: -2.0150294303894043
    3. 'said' (adapté à ' said') → logprob: -2.2650294303894043
    4. 'spoken' → logprob: -2.2650294303894043
    5. 'current' → logprob: -2.6400294303894043
    6. '       ' → logprob: -3.3900294303894043
    7. 'correct' → logprob: -3.7650294303894043
    8. 's' → logprob: -7.015029430389404
    9. 'answer' → logprob: -7.765029430389404
    10. 'sp' → logprob: -8.015028953552246

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523971438407898
    2. ' =' → logprob: -0.898971438407898
    3. '_' → logprob: -7.5239715576171875
    4. '_s' → logprob: -9.398971557617188
    5. '_token' → logprob: -9.648971557617188
    6. '_=' → logprob: -10.273971557617188
    7. 's' → logprob: -10.523971557617188
    8. '_word' → logprob: -11.398971557617188
    9. '<|end|>' → logprob: -11.398971557617188
    10. '_value' → logprob: -11.523971557617188

Token 328: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011048408225178719
    2. ' s' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.136048316955566
    4. '	s' → logprob: -16.136049270629883
    5. ' ' → logprob: -16.261049270629883
    6. '       ' → logprob: -17.136049270629883
    7. '           ' → logprob: -17.511049270629883
    8. '(s' → logprob: -18.011049270629883
    9. ' ' → logprob: -18.011049270629883
    10. ''s' → logprob: -18.261049270629883

Token 329: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'list' → logprob: -15.625
    3. '[i' → logprob: -16.25
    4. 'ist' → logprob: -17.875
    5. '[_' → logprob: -18.0
    6. 'List' → logprob: -18.0
    7. '[' → logprob: -18.25
    8. 's' → logprob: -18.75
    9. '_LIST' → logprob: -18.875
    10. '_' → logprob: -19.5

Token 330: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. ' [' → logprob: -19.125
    4. '[
' → logprob: -19.25
    5. '[I' → logprob: -19.25
    6. 'i' → logprob: -19.625
    7. '```' → logprob: -20.125
    8. '[current' → logprob: -20.375
    9. '[j' → logprob: -20.625
    10. '[index' → logprob: -20.75

Token 331: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006448837229982018
    2. '].' → logprob: -8.00064468383789
    3. ']
' → logprob: -8.25064468383789
    4. ']

' → logprob: -10.50064468383789
    5. ' ]' → logprob: -11.50064468383789
    6. ')' → logprob: -12.25064468383789
    7. '])' → logprob: -12.87564468383789
    8. '[' → logprob: -13.87564468383789
    9. '.strip' → logprob: -14.50064468383789
    10. '       ' → logprob: -14.75064468383789

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08606153726577759
    2. '
' → logprob: -2.836061477661133
    3. '<|end|>' → logprob: -3.961061477661133
    4. '        
' → logprob: -6.461061477661133
    5. ' if' → logprob: -6.836061477661133
    6. '<|end|>' → logprob: -7.086061477661133
    7. '  
' → logprob: -7.586061477661133
    8. ' 
' → logprob: -7.836061477661133
    9. 'if' → logprob: -8.336061477661133
    10. '   ' → logprob: -10.586061477661133

Token 333: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25554874539375305
    2. '       ' → logprob: -1.5055487155914307
    3. ' if' → logprob: -5.63054895401001
    4. '        
' → logprob: -12.130548477172852
    5. 'current' → logprob: -12.255548477172852
    6. '	if' → logprob: -12.380548477172852
    7. '   ' → logprob: -12.630548477172852
    8. '#' → logprob: -13.630548477172852
    9. '<|end|>' → logprob: -13.630548477172852
    10. '
' → logprob: -14.130548477172852

Token 334: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09142744541168213
    2. ' not' → logprob: -2.4664273262023926
    3. 'is' → logprob: -6.091427326202393
    4. '   ' → logprob: -9.09142780303955
    5. ' is' → logprob: -9.34142780303955
    6. '(not' → logprob: -11.84142780303955
    7. '	not' → logprob: -12.59142780303955
    8. ' ' → logprob: -12.84142780303955
    9. '
' → logprob: -13.09142780303955
    10. '```' → logprob: -13.34142780303955

Token 335: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.018150178715586662
    2. ' is' → logprob: -4.018150329589844
    3. '(is' → logprob: -16.393150329589844
    4. ' ' → logprob: -17.018150329589844
    5. '   ' → logprob: -17.518150329589844
    6. '	is' → logprob: -18.393150329589844
    7. '
' → logprob: -18.768150329589844
    8. ' ' → logprob: -19.143150329589844
    9. '`' → logprob: -19.643150329589844
    10. '```' → logprob: -19.643150329589844

Token 336: '_correct' (ID: 77483)
  Prédit: '_correct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_correct' → logprob: 0.0
    2. '_current' → logprob: -17.75
    3. 'correct' → logprob: -18.0
    4. '_complete' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '_' → logprob: -19.0
    7. '_c' → logprob: -19.0
    8. '__' → logprob: -19.25
    9. '_code' → logprob: -19.375
    10. 'orrect' → logprob: -20.0

Token 337: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.375012397766113
    3. '(expected' → logprob: -15.000012397766113
    4. ' (' → logprob: -15.750012397766113
    5. 'current' → logprob: -16.875011444091797
    6. '(correct' → logprob: -17.000011444091797
    7. '(
' → logprob: -17.625011444091797
    8. '(curr' → logprob: -17.750011444091797
    9. '(cur' → logprob: -17.750011444091797
    10. '(i' → logprob: -18.750011444091797

Token 338: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -7.672236824873835e-05
    2. '_num' → logprob: -9.500076293945312
    3. 'number' → logprob: -13.875076293945312
    4. '_player' → logprob: -14.375076293945312
    5. '_' → logprob: -16.250076293945312
    6. ' _' → logprob: -16.875076293945312
    7. '_n' → logprob: -17.250076293945312
    8. '   ' → logprob: -17.750076293945312
    9. 'Number' → logprob: -17.750076293945312
    10. 'umber' → logprob: -18.250076293945312

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007628110470250249
    2. ',s' → logprob: -7.500762939453125
    3. ' ,' → logprob: -8.500762939453125
    4. ',
' → logprob: -12.625762939453125
    5. '   ' → logprob: -13.875762939453125
    6. '       ' → logprob: -13.875762939453125
    7. ',S' → logprob: -15.375762939453125
    8. 'said' → logprob: -15.625762939453125
    9. '```' → logprob: -16.000762939453125
    10. '           ' → logprob: -16.875762939453125

Token 340: ' said' (ID: 2059)
  Prédit: 'said'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'said' → logprob: -0.16029448807239532
    2. ' said' → logprob: -1.910294532775879
    3. 'sa' → logprob: -9.910294532775879
    4. 's' → logprob: -11.410294532775879
    5. ')' → logprob: -13.285294532775879
    6. ' sa' → logprob: -13.410294532775879
    7. 'say' → logprob: -13.410294532775879
    8. ' ' → logprob: -13.785294532775879
    9. '(s' → logprob: -14.285294532775879
    10. '	s' → logprob: -14.535294532775879

Token 341: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006726856809109449
    2. '):
' → logprob: -5.0067267417907715
    3. ':' → logprob: -12.25672721862793
    4. ' ):' → logprob: -12.50672721862793
    5. '):
' → logprob: -14.13172721862793
    6. '   ' → logprob: -14.13172721862793
    7. ')' → logprob: -14.25672721862793
    8. '       ' → logprob: -14.25672721862793
    9. '):

' → logprob: -16.13172721862793
    10. '           ' → logprob: -17.25672721862793

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010141143575310707
    2. ' eliminated' → logprob: -7.876014232635498
    3. ':
' → logprob: -8.62601375579834
    4. '
' → logprob: -9.12601375579834
    5. '):
' → logprob: -9.25101375579834
    6. ',' → logprob: -9.87601375579834
    7. '       ' → logprob: -10.00101375579834
    8. '            
' → logprob: -10.12601375579834
    9. '```' → logprob: -11.00101375579834
    10. 'el' → logprob: -11.12601375579834

Token 343: ' #' (ID: 1069)
  Prédit: ' eliminated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eliminated' → logprob: -0.4855198562145233
    2. 'el' → logprob: -0.9855198860168457
    3. '           ' → logprob: -4.485519886016846
    4. 'excluded' → logprob: -10.360519409179688
    5. '	el' → logprob: -10.610519409179688
    6. '   ' → logprob: -11.235519409179688
    7. ' eliminado' → logprob: -11.485519409179688
    8. '       ' → logprob: -11.860519409179688
    9. 'elim' → logprob: -12.360519409179688
    10. ' elimin' → logprob: -12.860519409179688

Token 344: ' eliminate' (ID: 31408)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0009767174487933517
    2. ' eliminated' → logprob: -7.2509765625
    3. '           ' → logprob: -8.2509765625
    4. 'elim' → logprob: -13.0009765625
    5. 'excluded' → logprob: -13.7509765625
    6. '	el' → logprob: -14.2509765625
    7. '       ' → logprob: -14.6259765625
    8. '   ' → logprob: -15.0009765625
    9. 'elapsed' → logprob: -15.8759765625
    10. 'elif' → logprob: -15.8759765625

Token 345: ' current' (ID: 2208)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.35252609848976135
    2. ' eliminated' → logprob: -1.477526068687439
    3. 'current' → logprob: -2.9775261878967285
    4. ' current' → logprob: -4.4775261878967285
    5. '           ' → logprob: -5.1025261878967285
    6. ' players' → logprob: -8.22752571105957
    7. 'players' → logprob: -9.60252571105957
    8. 'excluded' → logprob: -9.85252571105957
    9. '   ' → logprob: -10.60252571105957
    10. '	el' → logprob: -10.97752571105957

Token 346: ' player' (ID: 5033)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -3.833878508885391e-05
    2. 'player' → logprob: -10.250038146972656
    3. '_players' → logprob: -13.250038146972656
    4. '_' → logprob: -15.000038146972656
    5. ' player' → logprob: -15.250038146972656
    6. 'Player' → logprob: -15.375038146972656
    7. '_current' → logprob: -15.750038146972656
    8. '```' → logprob: -16.500038146972656
    9. '_user' → logprob: -17.000038146972656
    10. '_PLAYER' → logprob: -17.375038146972656

Token 347: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43018049001693726
    2. '
' → logprob: -1.055180549621582
    3. 'el' → logprob: -7.305180549621582
    4. '   ' → logprob: -8.180180549621582
    5. ' eliminated' → logprob: -8.930180549621582
    6. '       ' → logprob: -9.180180549621582
    7. '            
' → logprob: -9.430180549621582
    8. ',' → logprob: -10.055180549621582
    9. '
' → logprob: -10.305180549621582
    10. '```' → logprob: -10.680180549621582

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017416395246982574
    2. '
' → logprob: -4.392416477203369
    3. ' eliminated' → logprob: -5.642416477203369
    4. 'el' → logprob: -7.267416477203369
    5. '            
' → logprob: -8.142416000366211
    6. ',' → logprob: -9.392416000366211
    7. '       ' → logprob: -9.767416000366211
    8. '               ' → logprob: -9.767416000366211
    9. '   ' → logprob: -9.892416000366211
    10. '```' → logprob: -10.767416000366211

Token 349: ' eliminated' (ID: 61164)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.5840310454368591
    2. ' eliminated' → logprob: -0.8340310454368591
    3. '           ' → logprob: -4.834031105041504
    4. 'excluded' → logprob: -9.959031105041504
    5. '	el' → logprob: -11.334031105041504
    6. '   ' → logprob: -11.334031105041504
    7. '       ' → logprob: -12.084031105041504
    8. ' el' → logprob: -12.209031105041504
    9. '.el' → logprob: -12.334031105041504
    10. 'elapsed' → logprob: -12.584031105041504

Token 350: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.5491004129871726e-05
    2. '.' → logprob: -10.000045776367188
    3. '.update' → logprob: -17.125045776367188
    4. ' .' → logprob: -17.875045776367188
    5. 'add' → logprob: -17.875045776367188
    6. ').' → logprob: -19.375045776367188
    7. '.Add' → logprob: -20.250045776367188
    8. '().' → logprob: -21.000045776367188
    9. '.remove' → logprob: -21.375045776367188
    10. ')add' → logprob: -21.500045776367188

Token 351: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00010366239439463243
    2. 'current' → logprob: -9.500103950500488
    3. '(' → logprob: -11.000103950500488
    4. '(players' → logprob: -11.375103950500488
    5. ' current' → logprob: -15.125103950500488
    6. '(cur' → logprob: -16.125102996826172
    7. '(curr' → logprob: -16.375102996826172
    8. 'players' → logprob: -17.250102996826172
    9. '(player' → logprob: -17.750102996826172
    10. '(
' → logprob: -17.875102996826172

Token 352: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -2.1888679839321412e-05
    2. 'player' → logprob: -10.750021934509277
    3. '_players' → logprob: -16.62502098083496
    4. ')' → logprob: -16.87502098083496
    5. ' player' → logprob: -17.00002098083496
    6. 'Player' → logprob: -17.37502098083496
    7. '_' → logprob: -17.37502098083496
    8. '_PLAYER' → logprob: -17.87502098083496
    9. ')_' → logprob: -18.75002098083496
    10. '[player' → logprob: -19.25002098083496

Token 353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3138595521450043
    2. ')' → logprob: -1.3138595819473267
    3. '       ' → logprob: -7.563859462738037
    4. '           ' → logprob: -10.188859939575195
    5. ')
' → logprob: -10.313859939575195
    6. ')

' → logprob: -12.688859939575195
    7. ' )
' → logprob: -12.813859939575195
    8. '   ' → logprob: -13.938859939575195
    9. ' )' → logprob: -14.813859939575195
    10. '               ' → logprob: -15.063859939575195

Token 354: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04673631489276886
    2. '           ' → logprob: -3.171736240386963
    3. '
' → logprob: -5.921736240386963
    4. ' turn' → logprob: -7.796736240386963
    5. 'current' → logprob: -8.671736717224121
    6. ' else' → logprob: -9.171736717224121
    7. ' current' → logprob: -9.296736717224121
    8. '   ' → logprob: -9.421736717224121
    9. '        
' → logprob: -9.421736717224121
    10. 'else' → logprob: -10.421736717224121

Token 355: ' #' (ID: 1069)
  Prédit: ' turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.18948589265346527
    2. 'turn' → logprob: -1.9394859075546265
    3. 'i' → logprob: -4.814486026763916
    4. '           ' → logprob: -5.314486026763916
    5. ' current' → logprob: -5.314486026763916
    6. 'current' → logprob: -5.439486026763916
    7. ' i' → logprob: -5.814486026763916
    8. '       ' → logprob: -6.189486026763916
    9. '   ' → logprob: -7.814486026763916
    10. 'if' → logprob: -8.064485549926758

Token 356: ' next' (ID: 2613)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.06674724072217941
    2. 'i' → logprob: -3.1917471885681152
    3. 'current' → logprob: -4.316747188568115
    4. 'if' → logprob: -5.566747188568115
    5. '#' → logprob: -5.816747188568115
    6. ' turn' → logprob: -6.441747188568115
    7. '   ' → logprob: -7.191747188568115
    8. 'n' → logprob: -8.191747665405273
    9. 'count' → logprob: -8.441747665405273
    10. 'print' → logprob: -8.941747665405273

Token 357: ' turn' (ID: 3716)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5727232694625854
    2. 'turn' → logprob: -1.4477232694625854
    3. ' turn' → logprob: -1.6977232694625854
    4. '
' → logprob: -5.197723388671875
    5. '   ' → logprob: -5.197723388671875
    6. 'token' → logprob: -7.072723388671875
    7. '       ' → logprob: -7.447723388671875
    8. ' ' → logprob: -7.572723388671875
    9. '_turn' → logprob: -7.697723388671875
    10. ')' → logprob: -7.822723388671875

Token 358: ' starts' (ID: 13217)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5065358877182007
    2. '       ' → logprob: -1.0065358877182007
    3. 'turn' → logprob: -4.00653600692749
    4. ' turn' → logprob: -4.50653600692749
    5. '   ' → logprob: -6.13153600692749
    6. '
' → logprob: -9.256535530090332
    7. 'index' → logprob: -9.381535530090332
    8. ',' → logprob: -9.631535530090332
    9. '               ' → logprob: -9.631535530090332
    10. '(turn' → logprob: -10.006535530090332

Token 359: ' from' (ID: 591)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.4661269187927246
    2. 'from' → logprob: -1.5911269187927246
    3. '           ' → logprob: -1.7161269187927246
    4. ' with' → logprob: -2.2161269187927246
    5. 'turn' → logprob: -2.2161269187927246
    6. 'with' → logprob: -2.8411269187927246
    7. ' from' → logprob: -2.9661269187927246
    8. ' turn' → logprob: -3.3411269187927246
    9. '               ' → logprob: -4.716126918792725
    10. 'at' → logprob: -5.591126918792725

Token 360: ' next' (ID: 2613)
  Prédit: '(turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(turn' → logprob: -0.018573511391878128
    2. 'turn' → logprob: -4.14357328414917
    3. ' (' → logprob: -6.39357328414917
    4. '(' → logprob: -8.393573760986328
    5. '(current' → logprob: -8.393573760986328
    6. '(next' → logprob: -9.143573760986328
    7. 'current' → logprob: -9.518573760986328
    8. ' turn' → logprob: -9.768573760986328
    9. '(t' → logprob: -10.018573760986328
    10. '   ' → logprob: -10.268573760986328

Token 361: ' number' (ID: 2086)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.10874878615140915
    2. ' player' → logprob: -3.2337486743927
    3. 'turn' → logprob: -3.9837486743927
    4. 'index' → logprob: -4.858748912811279
    5. '(player' → logprob: -4.858748912811279
    6. '(turn' → logprob: -4.858748912811279
    7. 'players' → logprob: -5.483748912811279
    8. ' (' → logprob: -5.733748912811279
    9. '_player' → logprob: -5.858748912811279
    10. '(' → logprob: -6.108748912811279

Token 362: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11810339987277985
    2. '       ' → logprob: -3.493103504180908
    3. '=' → logprob: -3.868103504180908
    4. ' =' → logprob: -4.493103504180908
    5. '   ' → logprob: -4.493103504180908
    6. 'current' → logprob: -5.118103504180908
    7. '_token' → logprob: -5.368103504180908
    8. '               ' → logprob: -5.743103504180908
    9. ' and' → logprob: -5.868103504180908
    10. ' current' → logprob: -5.868103504180908

Token 363: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.018350927159190178
    2. ' current' → logprob: -4.018351078033447
    3. 'i' → logprob: -10.268350601196289
    4. 'the' → logprob: -10.268350601196289
    5. '=current' → logprob: -10.893350601196289
    6. 'turn' → logprob: -11.018350601196289
    7. 'correct' → logprob: -11.018350601196289
    8. 'said' → logprob: -11.643350601196289
    9. '           ' → logprob: -11.768350601196289
    10. '(current' → logprob: -11.893350601196289

Token 364: '_number' (ID: 11733)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.26497259736061096
    2. '_number' → logprob: -1.6399725675582886
    3. 'player' → logprob: -3.514972686767578
    4. 'number' → logprob: -5.139972686767578
    5. 'current' → logprob: -6.139972686767578
    6. '_current' → logprob: -7.389972686767578
    7. '   ' → logprob: -9.639972686767578
    8. ' player' → logprob: -9.764972686767578
    9. 'Player' → logprob: -10.264972686767578
    10. '
' → logprob: -10.389972686767578

Token 365: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.077710509300232
    2. ' +' → logprob: -1.202710509300232
    3. '
' → logprob: -1.827710509300232
    4. 'current' → logprob: -2.9527106285095215
    5. '           ' → logprob: -3.3277106285095215
    6. ' 
' → logprob: -3.9527106285095215
    7. ' =' → logprob: -4.3277106285095215
    8. '=' → logprob: -4.3277106285095215
    9. '=current' → logprob: -4.3277106285095215
    10. '(current' → logprob: -4.4527106285095215

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056262534111738205
    2. '
' → logprob: -3.181262493133545
    3. '       ' → logprob: -4.556262493133545
    4. ',' → logprob: -7.056262493133545
    5. '<|end|>' → logprob: -7.681262493133545
    6. '        
' → logprob: -7.931262493133545
    7. '            
' → logprob: -7.931262493133545
    8. ' 
' → logprob: -9.306262969970703
    9. '               ' → logprob: -9.556262969970703
    10. 'current' → logprob: -9.681262969970703

Token 367: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.5784656405448914
    2. ' current' → logprob: -0.8284656405448914
    3. '
' → logprob: -6.703465461730957
    4. '           ' → logprob: -6.703465461730957
    5. '   ' → logprob: -11.078465461730957
    6. '
' → logprob: -11.328465461730957
    7. '(current' → logprob: -11.703465461730957
    8. ',current' → logprob: -11.953465461730957
    9. '_current' → logprob: -12.328465461730957
    10. '       ' → logprob: -12.453465461730957

Token 368: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -7.226628895296017e-06
    2. 'number' → logprob: -12.500007629394531
    3. '_' → logprob: -13.000007629394531
    4. '_num' → logprob: -14.500007629394531
    5. '_player' → logprob: -14.500007629394531
    6. 'Number' → logprob: -16.37500762939453
    7. '_NUMBER' → logprob: -17.50000762939453
    8. ' _' → logprob: -18.25000762939453
    9. '_index' → logprob: -18.50000762939453
    10. ' number' → logprob: -18.50000762939453

Token 369: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31332921981811523
    2. '+=' → logprob: -1.3133292198181152
    3. '=' → logprob: -9.688329696655273
    4. '+' → logprob: -12.813329696655273
    5. ' =' → logprob: -13.188329696655273
    6. ']+=' → logprob: -14.563329696655273
    7. ',' → logprob: -16.188329696655273
    8. '```' → logprob: -16.313329696655273
    9. '   ' → logprob: -16.813329696655273
    10. '    ' → logprob: -17.063329696655273

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -14.500012397766113
    4. '0' → logprob: -14.625012397766113
    5. '   ' → logprob: -16.87501335144043
    6. '
' → logprob: -17.06251335144043
    7. 's' → logprob: -17.68751335144043
    8. '```' → logprob: -17.93751335144043
    9. '  ' → logprob: -18.06251335144043
    10. 'current' → logprob: -18.75001335144043

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. '0' → logprob: -11.37501335144043
    3. '2' → logprob: -14.00001335144043
    4. ' ' → logprob: -14.25001335144043
    5. 's' → logprob: -16.93751335144043
    6. 'current' → logprob: -18.25001335144043
    7. '(' → logprob: -18.50001335144043
    8. 'i' → logprob: -18.56251335144043
    9. 'len' → logprob: -18.62501335144043
    10. '3' → logprob: -18.68751335144043

Token 372: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10857106000185013
    2. '
' → logprob: -2.8585710525512695
    3. '       ' → logprob: -3.1085710525512695
    4. '   ' → logprob: -7.7335710525512695
    5. '            
' → logprob: -9.35857105255127
    6. '        
' → logprob: -9.85857105255127
    7. ',' → logprob: -10.10857105255127
    8. '               ' → logprob: -10.23357105255127
    9. '                   ' → logprob: -10.35857105255127
    10. ',
' → logprob: -10.35857105255127

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010357036255300045
    2. '
' → logprob: -5.010356903076172
    3. '       ' → logprob: -5.635356903076172
    4. '   ' → logprob: -11.260356903076172
    5. '               ' → logprob: -11.385356903076172
    6. '		' → logprob: -11.510356903076172
    7. '            
' → logprob: -12.010356903076172
    8. ',' → logprob: -12.135356903076172
    9. '                   ' → logprob: -12.510356903076172
    10. '
' → logprob: -12.885356903076172

Token 374: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6123799681663513
    2. '       ' → logprob: -1.362380027770996
    3. 'turn' → logprob: -1.737380027770996
    4. ' turn' → logprob: -3.862380027770996
    5. '   ' → logprob: -5.362380027770996
    6. '
' → logprob: -10.487380027770996
    7. '               ' → logprob: -10.737380027770996
    8. 'while' → logprob: -10.737380027770996
    9. 'current' → logprob: -10.987380027770996
    10. '#' (adapté à ' #') → logprob: -10.987380027770996

Token 375: ' also' (ID: 1217)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0010170908644795418
    2. 'i' → logprob: -7.251017093658447
    3. '#' → logprob: -9.001016616821289
    4. ' turn' → logprob: -9.376016616821289
    5. '   ' → logprob: -9.626016616821289
    6. 'continue' → logprob: -11.501016616821289
    7. 'while' → logprob: -12.126016616821289
    8. 'if' → logprob: -12.626016616821289
    9. '       ' → logprob: -12.751016616821289
    10. 'current' → logprob: -13.001016616821289

Token 376: ' move' (ID: 5275)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.23975758254528046
    2. ' turn' → logprob: -1.6147575378417969
    3. '   ' → logprob: -4.614757537841797
    4. '           ' → logprob: -5.489757537841797
    5. 'move' → logprob: -9.989757537841797
    6. 'increment' → logprob: -10.114757537841797
    7. ' move' → logprob: -10.489757537841797
    8. '               ' → logprob: -10.989757537841797
    9. '
' → logprob: -11.614757537841797
    10. ' increment' → logprob: -11.739757537841797

Token 377: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.20240657031536102
    2. ' turn' → logprob: -1.7024065256118774
    3. '   ' → logprob: -7.952406406402588
    4. 'to' → logprob: -8.077406883239746
    5. '           ' → logprob: -8.327406883239746
    6. ' to' → logprob: -9.827406883239746
    7. '       ' → logprob: -11.577406883239746
    8. ' ' → logprob: -11.952406883239746
    9. ' forward' → logprob: -12.202406883239746
    10. '(turn' → logprob: -12.452406883239746

Token 378: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0011130700586363673
    2. '   ' → logprob: -6.876112937927246
    3. '       ' → logprob: -9.626112937927246
    4. 'index' → logprob: -11.376112937927246
    5. '           ' → logprob: -14.251112937927246
    6. 'to' → logprob: -14.376112937927246
    7. '_token' → logprob: -14.751112937927246
    8. '    ' → logprob: -14.876112937927246
    9. '	' → logprob: -15.376112937927246
    10. '_' → logprob: -15.376112937927246

Token 379: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15717045962810516
    2. '=' → logprob: -2.032170534133911
    3. ' +=' → logprob: -4.407170295715332
    4. '           ' → logprob: -6.782170295715332
    5. '+=' → logprob: -6.907170295715332
    6. '   ' → logprob: -11.032170295715332
    7. '            ' → logprob: -11.532170295715332
    8. '               ' → logprob: -11.657170295715332
    9. 'to' → logprob: -11.782170295715332
    10. ' to' → logprob: -12.032170295715332

Token 380: ' next' (ID: 2613)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0490250363945961
    2. '(' → logprob: -3.299025058746338
    3. '(turn' → logprob: -4.799025058746338
    4. '(next' → logprob: -5.924025058746338
    5. '(the' → logprob: -13.04902458190918
    6. '(to' → logprob: -13.54902458190918
    7. '(t' → logprob: -13.67402458190918
    8. '(play' → logprob: -13.79902458190918
    9. '(find' → logprob: -14.54902458190918
    10. 'next' → logprob: -14.67402458190918

Token 381: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.7361276745796204
    2. 'player' → logprob: -0.8611276745796204
    3. ' turn' → logprob: -3.4861276149749756
    4. ' (' → logprob: -4.361127853393555
    5. ' players' → logprob: -4.736127853393555
    6. ' ' → logprob: -4.986127853393555
    7. ' token' → logprob: -5.361127853393555
    8. '(' → logprob: -5.486127853393555
    9. 'turn' → logprob: -5.486127853393555
    10. 'index' → logprob: -5.611127853393555

Token 382: ' alive' (ID: 23757)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016344779869541526
    2. '       ' → logprob: -6.87663459777832
    3. '
' → logprob: -8.12663459777832
    4. '   ' → logprob: -8.75163459777832
    5. '               ' → logprob: -9.87663459777832
    6. '		' → logprob: -10.12663459777832
    7. '            
' → logprob: -11.25163459777832
    8. '    
' → logprob: -11.62663459777832
    9. ',' → logprob: -12.50163459777832
    10. ' =' → logprob: -12.50163459777832

Token 383: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14847053587436676
    2. '
' → logprob: -2.023470640182495
    3. '       ' → logprob: -5.273470401763916
    4. '
' → logprob: -9.023470878601074
    5. ',' → logprob: -9.273470878601074
    6. 'while' → logprob: -9.273470878601074
    7. '   ' → logprob: -9.398470878601074
    8. '            
' → logprob: -9.648470878601074
    9. '    
' → logprob: -10.148470878601074
    10. '```' → logprob: -10.523470878601074

Token 384: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7831550240516663
    2. ' next' → logprob: -1.5331549644470215
    3. 'the' → logprob: -1.6581549644470215
    4. 'next' → logprob: -2.0331549644470215
    5. 'turn' → logprob: -6.1581549644470215
    6. ' turn' → logprob: -6.6581549644470215
    7. 'play' → logprob: -7.2831549644470215
    8. ' playing' → logprob: -7.2831549644470215
    9. '(next' → logprob: -8.40815544128418
    10. 'playing' → logprob: -8.90815544128418

Token 385: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5760273337364197
    2. ' next' → logprob: -0.8260273337364197
    3. ' upcoming' → logprob: -9.701026916503906
    4. 'following' → logprob: -11.326026916503906
    5. ' following' → logprob: -11.701026916503906
    6. 'current' → logprob: -12.826026916503906
    7. '(next' → logprob: -14.201026916503906
    8. '	next' → logprob: -14.451026916503906
    9. ' current' → logprob: -14.451026916503906
    10. 'turn' → logprob: -14.701026916503906

Token 386: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.51483154296875
    2. ' turn' → logprob: -1.38983154296875
    3. ' iteration' → logprob: -2.26483154296875
    4. 'iteration' → logprob: -3.13983154296875
    5. 'round' → logprob: -5.38983154296875
    6. ' round' → logprob: -6.76483154296875
    7. 'line' → logprob: -9.76483154296875
    8. 'cycle' → logprob: -10.01483154296875
    9. 'step' → logprob: -10.13983154296875
    10. 'loop' → logprob: -10.26483154296875

Token 387: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11580289900302887
    2. '
' → logprob: -2.2408030033111572
    3. '       ' → logprob: -6.240802764892578
    4. '            
' → logprob: -8.365802764892578
    5. '```' → logprob: -8.615802764892578
    6. '
' → logprob: -9.115802764892578
    7. '<|end|>' → logprob: -9.240802764892578
    8. '    
' → logprob: -9.490802764892578
    9. '   ' → logprob: -9.865802764892578
    10. ',' → logprob: -9.990802764892578

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009795783553272486
    2. '
' → logprob: -7.625979423522949
    3. '       ' → logprob: -7.750979423522949
    4. '		' → logprob: -10.62597942352295
    5. '```' → logprob: -12.00097942352295
    6. '<|end|>' → logprob: -12.00097942352295
    7. '	       ' → logprob: -12.25097942352295
    8. '   ' → logprob: -12.37597942352295
    9. '               ' → logprob: -12.37597942352295
    10. '            
' → logprob: -12.75097942352295

Token 389: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.7712172865867615
    2. '       ' → logprob: -1.2712173461914062
    3. 'while' → logprob: -1.8962173461914062
    4. '           ' → logprob: -2.3962173461914062
    5. ' turn' → logprob: -4.521217346191406
    6. ' while' → logprob: -5.896217346191406
    7. '   ' → logprob: -6.271217346191406
    8. '```' → logprob: -8.396217346191406
    9. '               ' → logprob: -10.146217346191406
    10. '(turn' → logprob: -11.271217346191406

Token 390: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: 0.0
    2. '_' → logprob: -18.5
    3. '_idx' → logprob: -18.625
    4. 'index' → logprob: -19.375
    5. '_ind' → logprob: -20.25
    6. ' _' → logprob: -20.5
    7. '\' → logprob: -20.875
    8. '_i' → logprob: -21.125
    9. '   ' → logprob: -21.25
    10. '=_' → logprob: -21.5

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062050364911556244
    2. '=' → logprob: -2.8120503425598145
    3. ' +=' → logprob: -9.437050819396973
    4. '+=' → logprob: -12.812050819396973
    5. ' ' → logprob: -15.562050819396973
    6. ')' → logprob: -17.062049865722656
    7. '+' → logprob: -17.937049865722656
    8. '   ' → logprob: -18.312049865722656
    9. ' =(' → logprob: -18.687049865722656
    10. '```' → logprob: -18.937049865722656

Token 392: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16479860246181488
    2. '(turn' → logprob: -1.914798617362976
    3. '(' → logprob: -5.414798736572266
    4. '(next' → logprob: -9.789798736572266
    5. '(t' → logprob: -10.789798736572266
    6. '(players' → logprob: -11.039798736572266
    7. '(play' → logprob: -12.414798736572266
    8. '(current' → logprob: -12.664798736572266
    9. '(find' → logprob: -13.164798736572266
    10. '(to' → logprob: -13.164798736572266

Token 393: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0019500599009916186
    2. '(turn' → logprob: -6.251950263977051
    3. ' turn' → logprob: -10.87695026397705
    4. '(' → logprob: -13.12695026397705
    5. ' (' → logprob: -15.00195026397705
    6. 'tur' → logprob: -16.376949310302734
    7. '(t' → logprob: -16.876949310302734
    8. '   ' → logprob: -17.001949310302734
    9. '_turn' → logprob: -17.376949310302734
    10. '.turn' → logprob: -18.251949310302734

Token 394: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1472419600977446e-06
    2. '+' → logprob: -14.000000953674316
    3. 'index' → logprob: -15.750000953674316
    4. 'Index' → logprob: -16.750001907348633
    5. ' +' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '_' → logprob: -17.875001907348633
    8. '_INDEX' → logprob: -18.750001907348633
    9. '_idx' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.875001907348633

Token 395: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011047935113310814
    2. '+' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. ')' → logprob: -17.88604736328125
    5. ' +
' → logprob: -18.63604736328125
    6. ' ' → logprob: -19.01104736328125
    7. '   ' → logprob: -19.13604736328125
    8. 'import' → logprob: -19.76104736328125
    9. '＋' → logprob: -19.88604736328125
    10. ' plus' → logprob: -20.26104736328125

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.500804901123047
    4. ')' → logprob: -17.750804901123047
    5. '```' → logprob: -18.250804901123047
    6. '2' → logprob: -18.375804901123047
    7. '0' → logprob: -18.500804901123047
    8. '3' → logprob: -20.063304901123047
    9. '１' → logprob: -20.063304901123047
    10. '<|end|>' → logprob: -20.688304901123047

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '
' → logprob: -19.937503814697266
    6. '```' → logprob: -20.000003814697266
    7. '۱' → logprob: -20.062503814697266
    8. '2' → logprob: -20.250003814697266
    9. '１' → logprob: -20.312503814697266
    10. '0' → logprob: -21.312503814697266

Token 398: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. ' )' → logprob: -10.000062942504883
    3. ')%' → logprob: -11.000062942504883
    4. ')
' → logprob: -15.500062942504883
    5. '%' → logprob: -16.500062942504883
    6. '   ' → logprob: -17.125062942504883
    7. ' ' → logprob: -17.250062942504883
    8. '```' → logprob: -17.625062942504883
    9. ' %' → logprob: -18.000062942504883
    10. ']' → logprob: -18.500062942504883

Token 399: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033683620393276215
    2. '%' → logprob: -3.4086835384368896
    3. ')' → logprob: -10.533683776855469
    4. ')%' → logprob: -11.783683776855469
    5. ' ' → logprob: -13.908683776855469
    6. '<|end|>' → logprob: -14.283683776855469
    7. ' %
' → logprob: -14.533683776855469
    8. ' ' → logprob: -14.908683776855469
    9. '```' → logprob: -15.658683776855469
    10. '%d' → logprob: -15.908683776855469

Token 400: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.306760805164231e-05
    2. ' m' → logprob: -11.25001335144043
    3. '	m' → logprob: -21.00001335144043
    4. '%m' → logprob: -22.00001335144043
    5. '#m' → logprob: -22.25001335144043
    6. '   ' → logprob: -22.25001335144043
    7. '7' → logprob: -22.62501335144043
    8. '6' → logprob: -22.75001335144043
    9. ' ' → logprob: -22.75001335144043
    10. 'м' → logprob: -22.87501335144043

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03847644850611687
    2. '
' → logprob: -3.5384764671325684
    3. '           ' → logprob: -5.413476467132568
    4. '<|end|>' → logprob: -6.038476467132568
    5. '   ' → logprob: -6.663476467132568
    6. '<|end|>' → logprob: -8.91347599029541
    7. '```' → logprob: -9.28847599029541
    8. '        
' → logprob: -9.41347599029541
    9. '    
' → logprob: -9.78847599029541
    10. 'else' → logprob: -10.28847599029541

Token 402: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02641431801021099
    2. '           ' → logprob: -3.901414394378662
    3. '```' → logprob: -6.276414394378662
    4. '   ' → logprob: -6.526414394378662
    5. 'else' → logprob: -6.651414394378662
    6. 'i' → logprob: -7.401414394378662
    7. '
' → logprob: -7.776414394378662
    8. ' else' → logprob: -9.651413917541504
    9. '        
' → logprob: -10.901413917541504
    10. '	' → logprob: -11.026413917541504

Token 403: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6105625033378601
    2. 'i' (adapté à ' i') → logprob: -1.4855625629425049
    3. '       ' → logprob: -1.4855625629425049
    4. '   ' → logprob: -5.735562324523926
    5. 'else' → logprob: -7.610562324523926
    6. '```' → logprob: -8.360562324523926
    7. 'continue' → logprob: -9.235562324523926
    8. ' i' → logprob: -9.235562324523926
    9. 'elif' → logprob: -11.235562324523926
    10. '        
' → logprob: -12.360562324523926

Token 404: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.49075257778167725
    2. ' +=' → logprob: -0.9907525777816772
    3. '+' → logprob: -4.115752696990967
    4. '=' → logprob: -8.490752220153809
    5. ' +' → logprob: -11.490752220153809
    6. '<|end|>' → logprob: -12.740752220153809
    7. '++' → logprob: -13.740752220153809
    8. '+
' → logprob: -14.115752220153809
    9. ']+=' → logprob: -14.240752220153809
    10. ' =' → logprob: -14.615752220153809

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. ' ' → logprob: -9.62507152557373
    3. '0' → logprob: -12.25007152557373
    4. '   ' → logprob: -15.75007152557373
    5. '  ' → logprob: -17.875070571899414
    6. '2' → logprob: -17.937570571899414
    7. '```' → logprob: -18.125070571899414
    8. 'n' → logprob: -18.625070571899414
    9. '       ' → logprob: -18.937570571899414
    10. '１' → logprob: -19.312570571899414

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '2' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.062503814697266
    6. 'n' → logprob: -18.687503814697266
    7. 'i' → logprob: -19.375003814697266
    8. '
' → logprob: -19.375003814697266
    9. 'count' → logprob: -19.375003814697266
    10. '１' → logprob: -19.437503814697266

Token 407: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2520654797554016
    2. '       ' → logprob: -1.5020654201507568
    3. 'else' → logprob: -9.752065658569336
    4. 'continue' → logprob: -10.252065658569336
    5. '```' → logprob: -10.752065658569336
    6. '<|end|>' → logprob: -11.877065658569336
    7. ' continue' → logprob: -12.502065658569336
    8. ' else' → logprob: -12.627065658569336
    9. '	       ' → logprob: -13.127065658569336
    10. '   ' → logprob: -13.377065658569336

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07995464652776718
    2. '       ' → logprob: -2.5799546241760254
    3. 'continue' → logprob: -6.954954624176025
    4. 'else' → logprob: -9.329955101013184
    5. '   ' → logprob: -11.454955101013184
    6. ' continue' → logprob: -12.079955101013184
    7. '	       ' → logprob: -13.579955101013184
    8. '```' → logprob: -13.579955101013184
    9. '	continue' → logprob: -14.204955101013184
    10. '               ' → logprob: -14.329955101013184

Token 409: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058681173250079155
    2. '       ' → logprob: -5.505867958068848
    3. 'continue' (adapté à ' continue') → logprob: -6.380867958068848
    4. ' continue' → logprob: -9.630867958068848
    5. '   ' → logprob: -11.380867958068848
    6. '	continue' → logprob: -11.630867958068848
    7. 'else' → logprob: -13.005867958068848
    8. '	       ' → logprob: -13.380867958068848
    9. '_continue' → logprob: -13.380867958068848
    10. '		' → logprob: -13.755867958068848

Token 410: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011112819192931056
    2. 'current' → logprob: -7.6261115074157715
    3. 'else' → logprob: -8.126111030578613
    4. '        
' → logprob: -8.626111030578613
    5. '
' → logprob: -9.751111030578613
    6. '```' → logprob: -9.751111030578613
    7. ' current' → logprob: -11.876111030578613
    8. '<|end|>' → logprob: -12.001111030578613
    9. ' else' → logprob: -13.001111030578613
    10. '   ' → logprob: -13.376111030578613

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022353052627295256
    2. 'current' → logprob: -6.752235412597656
    3. 'else' → logprob: -7.252235412597656
    4. '```' → logprob: -8.127235412597656
    5. '        
' → logprob: -10.627235412597656
    6. 'if' → logprob: -11.877235412597656
    7. '​' → logprob: -12.252235412597656
    8. '#' → logprob: -12.627235412597656
    9. 'elif' → logprob: -12.627235412597656
    10. ' current' → logprob: -12.752235412597656

Token 412: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810354351997375
    2. 'current' → logprob: -0.8310354351997375
    3. '
' → logprob: -6.206035614013672
    4. '   ' → logprob: -6.706035614013672
    5. ' current' → logprob: -6.706035614013672
    6. 'else' → logprob: -7.581035614013672
    7. '        
' → logprob: -10.206035614013672
    8. '```' → logprob: -10.956035614013672
    9. '	current' → logprob: -11.206035614013672
    10. '#' (adapté à ' #') → logprob: -11.331035614013672

Token 413: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0002142650482710451
    2. '       ' → logprob: -9.500214576721191
    3. '   ' → logprob: -9.625214576721191
    4. ' current' → logprob: -10.250214576721191
    5. 'i' → logprob: -10.875214576721191
    6. '#' → logprob: -11.125214576721191
    7. 'else' → logprob: -13.125214576721191
    8. '
' → logprob: -13.250214576721191
    9. '	current' → logprob: -16.125213623046875
    10. '           ' → logprob: -16.125213623046875

Token 414: ' correct' (ID: 6145)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.2048780918121338
    2. 'is' → logprob: -1.4548780918121338
    3. ' is' → logprob: -1.5798780918121338
    4. 'current' → logprob: -1.8298780918121338
    5. ' not' → logprob: -2.704878091812134
    6. 'not' → logprob: -4.079877853393555
    7. 'correct' → logprob: -4.954877853393555
    8. ' correct' → logprob: -6.204877853393555
    9. 'said' → logprob: -6.204877853393555
    10. ' the' → logprob: -6.579877853393555

Token 415: ':
' (ID: 734)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.44800397753715515
    2. '   ' → logprob: -1.3230040073394775
    3. ':
' → logprob: -3.3230040073394775
    4. '
' → logprob: -3.6980040073394775
    5. ' current' → logprob: -3.6980040073394775
    6. '    
' → logprob: -6.323003768920898
    7. ':' → logprob: -6.448003768920898
    8. '_current' → logprob: -6.573003768920898
    9. '       ' → logprob: -6.948003768920898
    10. ',' → logprob: -6.948003768920898

Token 416: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.015625108033418655
    2. ' current' → logprob: -4.265625
    3. '       ' → logprob: -6.765625
    4. '   ' → logprob: -8.390625
    5. 'i' → logprob: -9.640625
    6. ' i' → logprob: -11.640625
    7. '	current' → logprob: -12.765625
    8. '           ' → logprob: -12.890625
    9. '```' → logprob: -14.640625
    10. ' ' → logprob: -15.140625

Token 417: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.018350696191191673
    2. ' current' → logprob: -4.018350601196289
    3. 'i' → logprob: -9.018350601196289
    4. '   ' → logprob: -9.768350601196289
    5. ' i' → logprob: -11.268350601196289
    6. '       ' → logprob: -11.893350601196289
    7. '           ' → logprob: -13.268350601196289
    8. '	current' → logprob: -14.893350601196289
    9. ' ' → logprob: -15.268350601196289
    10. '```' → logprob: -15.768350601196289

Token 418: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. '_num' → logprob: -17.875
    4. '_player' → logprob: -19.375
    5. 'number' → logprob: -20.0
    6. 'Number' → logprob: -20.125
    7. '_NUMBER' → logprob: -20.375
    8. '_index' → logprob: -20.75
    9. '_n' → logprob: -21.5
    10. '_Number' → logprob: -21.625

Token 419: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931476593017578
    2. '+=' → logprob: -0.6931476593017578
    3. ']+=' → logprob: -15.443147659301758
    4. '+' → logprob: -15.943147659301758
    5. '=' → logprob: -17.693147659301758
    6. '+=(' → logprob: -17.943147659301758
    7. '```' → logprob: -18.193147659301758
    8. '   ' → logprob: -18.318147659301758
    9. '+="' → logprob: -18.443147659301758
    10. '	' → logprob: -18.568147659301758

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.375003814697266
    4. '```' → logprob: -21.625003814697266
    5. '１' → logprob: -23.000003814697266
    6. '<|end|>' → logprob: -23.250003814697266
    7. '۱' → logprob: -23.375003814697266
    8. '  ' → logprob: -23.500003814697266
    9. '১' → logprob: -24.187503814697266
    10. '१' → logprob: -24.250003814697266

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -21.0
    5. '１' → logprob: -21.875
    6. '۱' → logprob: -21.9375
    7. '१' → logprob: -22.125
    8. '
' → logprob: -22.3125
    9. '!' → logprob: -22.9375
    10. '১' → logprob: -23.0

Token 422: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006428772117942572
    2. 'turn' → logprob: -5.1314287185668945
    3. ' turn' → logprob: -8.006428718566895
    4. '   ' → logprob: -9.006428718566895
    5. 'i' → logprob: -10.756428718566895
    6. '           ' → logprob: -11.256428718566895
    7. ' i' → logprob: -12.756428718566895
    8. '	' → logprob: -13.506428718566895
    9. '        
' → logprob: -13.631428718566895
    10. '      ' → logprob: -13.631428718566895

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2310401201248169
    2. 'turn' → logprob: -1.606040120124817
    3. 'i' → logprob: -5.856040000915527
    4. ' turn' → logprob: -6.231040000915527
    5. '   ' → logprob: -7.356040000915527
    6. '           ' → logprob: -9.356040000915527
    7. ' i' → logprob: -10.606040000915527
    8. '```' → logprob: -10.981040000915527
    9. '	' → logprob: -12.731040000915527
    10. ' ' → logprob: -13.356040000915527

Token 424: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.017589282244443893
    2. '       ' → logprob: -4.267589092254639
    3. ' turn' → logprob: -6.267589092254639
    4. 'i' → logprob: -6.517589092254639
    5. '   ' → logprob: -10.517589569091797
    6. ' i' → logprob: -11.892589569091797
    7. '           ' → logprob: -12.267589569091797
    8. 'if' → logprob: -12.642589569091797
    9. '```' → logprob: -13.392589569091797
    10. '(turn' → logprob: -14.142589569091797

Token 425: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.9361264946837764e-07
    2. 'index' → logprob: -17.0
    3. '_' → logprob: -17.75
    4. '\' → logprob: -20.125
    5. 'dex' → logprob: -20.5
    6. '_ind' → logprob: -21.125
    7. '_idx' → logprob: -21.25
    8. 'Index' → logprob: -21.25
    9. '_INDEX' → logprob: -21.875
    10. 'x' → logprob: -22.0

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386883020401001
    2. '=' → logprob: -1.136883020401001
    3. ' +=' → logprob: -11.511882781982422
    4. '+=' → logprob: -13.136882781982422
    5. ' ' → logprob: -16.886882781982422
    6. ')' → logprob: -17.636882781982422
    7. '   ' → logprob: -18.511882781982422
    8. '＝' → logprob: -19.386882781982422
    9. '+' → logprob: -19.761882781982422
    10. '```' → logprob: -19.886882781982422

Token 427: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0025996763724833727
    2. '(turn' → logprob: -6.002599716186523
    3. '(' → logprob: -9.002599716186523
    4. '(next' → logprob: -14.252599716186523
    5. '(t' → logprob: -15.127599716186523
    6. '(to' → logprob: -18.252599716186523
    7. '   ' → logprob: -18.752599716186523
    8. '(step' → logprob: -18.877599716186523
    9. ' ' → logprob: -18.877599716186523
    10. '(current' → logprob: -19.002599716186523

Token 428: 'turn' (ID: 529)
  Prédit: 'turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.6932359337806702
    2. '(turn' → logprob: -0.6932359337806702
    3. ' (' → logprob: -10.193236351013184
    4. '(' → logprob: -10.568236351013184
    5. ' turn' → logprob: -10.818236351013184
    6. '_turn' → logprob: -13.193236351013184
    7. '   ' → logprob: -13.443236351013184
    8. 'eturn' → logprob: -13.943236351013184
    9. '.turn' → logprob: -14.443236351013184
    10. '-turn' → logprob: -14.693236351013184

Token 429: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.847109812544659e-05
    2. 'index' → logprob: -10.000048637390137
    3. 'Index' → logprob: -13.500048637390137
    4. '+' → logprob: -14.000048637390137
    5. '   ' → logprob: -14.750048637390137
    6. 'dex' → logprob: -16.62504768371582
    7. 'ex' → logprob: -17.00004768371582
    8. '_' → logprob: -17.12504768371582
    9. '_INDEX' → logprob: -17.50004768371582
    10. '
' → logprob: -17.50004768371582

Token 430: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038046084344387054
    2. '+' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.163045883178711
    4. ')' → logprob: -13.163045883178711
    5. ' (' → logprob: -14.913045883178711
    6. '(' → logprob: -15.288045883178711
    7. '   ' → logprob: -16.41304588317871
    8. '=' → logprob: -16.91304588317871
    9. ' +
' → logprob: -17.41304588317871
    10. ' plus' → logprob: -17.66304588317871

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -15.750059127807617
    4. '(' → logprob: -16.750059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '```' → logprob: -17.250059127807617
    7. '
' → logprob: -17.812559127807617
    8. '0' → logprob: -19.125059127807617
    9. ' (' → logprob: -19.187559127807617
    10. '`' → logprob: -19.875059127807617

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -16.5000057220459
    4. '   ' → logprob: -18.1250057220459
    5. '(' → logprob: -18.2500057220459
    6. ')' → logprob: -18.5000057220459
    7. '```' → logprob: -19.1250057220459
    8. '

' → logprob: -20.0625057220459
    9. '  ' → logprob: -20.1250057220459
    10. '0' → logprob: -20.3125057220459

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.236549335066229e-05
    2. ')%' → logprob: -10.750021934509277
    3. ' )' → logprob: -14.000021934509277
    4. ')
' → logprob: -17.875022888183594
    5. '%' → logprob: -18.250022888183594
    6. '),' → logprob: -20.500022888183594
    7. ']' → logprob: -20.750022888183594
    8. '")' → logprob: -20.750022888183594
    9. ' %' → logprob: -20.875022888183594
    10. ')

' → logprob: -21.125022888183594

Token 434: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31326475739479065
    2. ' %' → logprob: -1.3132647275924683
    3. ')' → logprob: -14.438264846801758
    4. ')%' → logprob: -14.563264846801758
    5. ' ' → logprob: -14.938264846801758
    6. '<|end|>' → logprob: -14.938264846801758
    7. '()%' → logprob: -15.313264846801758
    8. '#' → logprob: -15.438264846801758
    9. '```' → logprob: -15.563264846801758
    10. '
' → logprob: -15.938264846801758

Token 435: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.4121114822482923e-06
    2. ' m' → logprob: -12.625003814697266
    3. '	m' → logprob: -20.750003814697266
    4. '```' → logprob: -20.750003814697266
    5. '   ' → logprob: -21.875003814697266
    6. '#m' → logprob: -22.125003814697266
    7. 'м' → logprob: -22.500003814697266
    8. ')m' → logprob: -22.625003814697266
    9. '<m' → logprob: -23.625003814697266
    10. '[m' → logprob: -23.625003814697266

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008724601939320564
    2. '   ' → logprob: -5.383724689483643
    3. 'i' → logprob: -5.508724689483643
    4. ' i' → logprob: -10.508724212646484
    5. ' ' → logprob: -11.633724212646484
    6. '           ' → logprob: -13.008724212646484
    7. '<|end|>' → logprob: -13.258724212646484
    8. '```' → logprob: -13.883724212646484
    9. '
' → logprob: -14.133724212646484
    10. '     ' → logprob: -14.633724212646484

Token 437: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09018176048994064
    2. '       ' → logprob: -2.840181827545166
    3. '   ' → logprob: -3.590181827545166
    4. ' i' → logprob: -8.465181350708008
    5. '	i' → logprob: -11.965181350708008
    6. '           ' → logprob: -12.340181350708008
    7. ' ' → logprob: -13.090181350708008
    8. '```' → logprob: -13.840181350708008
    9. '
' → logprob: -14.340181350708008
    10. '     ' → logprob: -14.965181350708008

Token 438: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00032831361750140786
    2. '   ' → logprob: -8.250328063964844
    3. '       ' → logprob: -10.000328063964844
    4. ' i' → logprob: -10.750328063964844
    5. '	i' → logprob: -15.750328063964844
    6. '```' → logprob: -17.250328063964844
    7. '           ' → logprob: -17.625328063964844
    8. ' ' → logprob: -18.000328063964844
    9. '  ' → logprob: -19.375328063964844
    10. '``' → logprob: -19.750328063964844

Token 439: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519460618495941
    2. ' +=' → logprob: -1.5019460916519165
    3. '+' → logprob: -11.001946449279785
    4. '=' → logprob: -15.751946449279785
    5. ']+=' → logprob: -16.75194549560547
    6. ' +' → logprob: -17.12694549560547
    7. '   ' → logprob: -18.50194549560547
    8. '+="' → logprob: -19.62694549560547
    9. '+='' → logprob: -19.75194549560547
    10. '+=(' → logprob: -20.00194549560547

Token 440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.000335693359375
    4. '<|end|>' → logprob: -18.312835693359375
    5. '   ' → logprob: -18.937835693359375
    6. '`' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.437835693359375
    8. '１' → logprob: -19.437835693359375
    9. '۱' → logprob: -19.750335693359375
    10. '0' → logprob: -20.062835693359375

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -19.1875
    5. '۱' → logprob: -20.0
    6. '１' → logprob: -20.0625
    7. '0' → logprob: -20.0625
    8. '2' → logprob: -20.4375
    9. '!' → logprob: -20.875
    10. '3' → logprob: -21.0

Token 442: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07919710129499435
    2. 'if' → logprob: -2.8291971683502197
    3. 'print' → logprob: -4.954196929931641
    4. 'for' → logprob: -5.454196929931641
    5. 'players' → logprob: -6.329196929931641
    6. '<|end|>' → logprob: -6.329196929931641
    7. '```' → logprob: -7.829196929931641
    8. 'continue' → logprob: -7.829196929931641
    9. '
' → logprob: -8.07919692993164
    10. ' if' → logprob: -8.57919692993164

Token 443: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1817842721939087
    2. '   ' → logprob: -2.181784152984619
    3. 'print' → logprob: -3.306784152984619
    4. 'for' → logprob: -4.306784152984619
    5. '#' → logprob: -6.806784152984619
    6. 'while' → logprob: -7.181784152984619
    7. 'remaining' → logprob: -7.681784152984619
    8. '```' → logprob: -7.681784152984619
    9. ' if' → logprob: -8.431784629821777
    10. 'alive' → logprob: -8.806784629821777

Token 444: ' survivors' (ID: 65221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7839655876159668
    2. 'remaining' → logprob: -1.6589655876159668
    3. 'for' → logprob: -1.7839655876159668
    4. 'alive' → logprob: -2.033965587615967
    5. 'while' → logprob: -3.533965587615967
    6. 'print' → logprob: -4.033965587615967
    7. '   ' → logprob: -5.283965587615967
    8. '#' → logprob: -7.533965587615967
    9. 'sur' → logprob: -7.783965587615967
    10. 'live' → logprob: -8.533966064453125

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143292844295502
    2. '=' → logprob: -1.7014329433441162
    3. '_' → logprob: -11.451433181762695
    4. '[:]' → logprob: -13.201433181762695
    5. '<|end|>' → logprob: -13.826433181762695
    6. '   ' → logprob: -13.951433181762695
    7. ')' → logprob: -14.076433181762695
    8. '=[]' → logprob: -14.076433181762695
    9. '.' → logprob: -14.201433181762695
    10. ' ' → logprob: -14.326433181762695

Token 446: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025591854006052017
    2. ' [' → logprob: -3.7755918502807617
    3. '[player' → logprob: -6.650591850280762
    4. '[len' → logprob: -7.525591850280762
    5. 'set' → logprob: -9.400591850280762
    6. '[num' → logprob: -9.900591850280762
    7. '{' → logprob: -9.900591850280762
    8. '[p' → logprob: -10.025591850280762
    9. '[s' → logprob: -10.025591850280762
    10. '[m' → logprob: -10.275591850280762

Token 447: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10167761147022247
    2. 'player' → logprob: -2.351677656173706
    3. 'players' → logprob: -6.601677417755127
    4. ' player' → logprob: -9.476677894592285
    5. ' p' → logprob: -10.476677894592285
    6. ' players' → logprob: -11.976677894592285
    7. 'pl' → logprob: -15.351677894592285
    8. 'ply' → logprob: -15.476677894592285
    9. '   ' → logprob: -16.35167694091797
    10. 'x' → logprob: -16.35167694091797

Token 448: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141586661338806
    2. 'for' → logprob: -1.7014158964157104
    3. '   ' → logprob: -13.701416015625
    4. '
' → logprob: -14.326416015625
    5. 'p' → logprob: -15.826416015625
    6. ' ' → logprob: -15.826416015625
    7. ']' → logprob: -15.951416015625
    8. '	for' → logprob: -16.076416015625
    9. ')' → logprob: -16.576416015625
    10. 'if' → logprob: -16.701416015625

Token 449: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001170225441455841
    2. ' p' → logprob: -6.7511701583862305
    3. '	p' → logprob: -18.751171112060547
    4. ' in' → logprob: -19.251171112060547
    5. 'players' → logprob: -19.501171112060547
    6. '
' → logprob: -19.751171112060547
    7. ' ' → logprob: -20.251171112060547
    8. ' players' → logprob: -20.251171112060547
    9. ' ' → logprob: -20.376171112060547
    10. 'player' → logprob: -20.876171112060547

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.505071759223938
    2. 'p' → logprob: -1.630071759223938
    3. ' p' → logprob: -2.1300716400146484
    4. 'in' → logprob: -2.5050716400146484
    5. 'not' → logprob: -9.380071640014648
    6. ',p' → logprob: -11.005071640014648
    7. ' not' → logprob: -11.255071640014648
    8. ',' → logprob: -12.630071640014648
    9. ' ' → logprob: -13.255071640014648
    10. 'n' → logprob: -14.005071640014648

Token 451: ' players' (ID: 7238)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.001170225441455841
    2. ' players' → logprob: -6.7511701583862305
    3. 'p' → logprob: -17.751171112060547
    4. '(players' → logprob: -18.376171112060547
    5. '.players' → logprob: -18.876171112060547
    6. 'player' → logprob: -19.751171112060547
    7. 'patients' → logprob: -20.751171112060547
    8. '_players' → logprob: -20.876171112060547
    9. 'range' → logprob: -21.001171112060547
    10. 'Players' → logprob: -21.001171112060547

Token 452: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.048589639365673065
    2. 'if' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.673589706420898
    4. 'not' → logprob: -15.048589706420898
    5. 'p' → logprob: -15.298589706420898
    6. ' not' → logprob: -15.423589706420898
    7. ' in' → logprob: -15.798589706420898
    8. ' ' → logprob: -16.0485897064209
    9. 'in' → logprob: -17.7985897064209
    10. '	if' → logprob: -17.9235897064209

Token 453: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011047814972698689
    2. ' p' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.63604736328125
    4. 'not' → logprob: -18.38604736328125
    5. ' ' → logprob: -19.38604736328125
    6. ' not' → logprob: -19.51104736328125
    7. '	p' → logprob: -19.63604736328125
    8. '
' → logprob: -20.01104736328125
    9. '(p' → logprob: -20.13604736328125
    10. '<p' → logprob: -20.13604736328125

Token 454: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01815006136894226
    2. 'not' → logprob: -4.0181498527526855
    3. ' no' → logprob: -16.018150329589844
    4. ' p' → logprob: -18.018150329589844
    5. ' ' → logprob: -18.893150329589844
    6. ']' → logprob: -19.268150329589844
    7. '	not' → logprob: -19.268150329589844
    8. 'p' → logprob: -19.518150329589844
    9. ':not' → logprob: -19.893150329589844
    10. 'no' → logprob: -19.893150329589844

Token 455: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6256596446037292
    2. ' in' → logprob: -0.8756596446037292
    3. 'el' → logprob: -3.375659704208374
    4. ' eliminated' → logprob: -4.250659465789795
    5. 'excluded' → logprob: -11.750659942626953
    6. '<|end|>' → logprob: -12.125659942626953
    7. 'elim' → logprob: -12.375659942626953
    8. 'import' → logprob: -12.375659942626953
    9. '_el' → logprob: -12.500659942626953
    10. ' eliminado' → logprob: -12.625659942626953

Token 456: ' eliminated' (ID: 61164)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.05492663010954857
    2. ' eliminated' → logprob: -2.929926633834839
    3. 'elim' → logprob: -11.429926872253418
    4. '	el' → logprob: -11.804926872253418
    5. ' el' → logprob: -12.054926872253418
    6. 'excluded' → logprob: -12.679926872253418
    7. ' elimin' → logprob: -13.054926872253418
    8. '   ' → logprob: -13.179926872253418
    9. ' eliminado' → logprob: -13.804926872253418
    10. ' ' → logprob: -13.804926872253418

Token 457: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017815368482843041
    2. ']
' → logprob: -8.750178337097168
    3. ' ]' → logprob: -11.125178337097168
    4. ']

' → logprob: -12.250178337097168
    5. '()]' → logprob: -16.37517738342285
    6. ']
' → logprob: -17.25017738342285
    7. '];' → logprob: -18.00017738342285
    8. ')]' → logprob: -18.50017738342285
    9. ' ]
' → logprob: -18.87517738342285
    10. '   ' → logprob: -19.25017738342285

Token 458: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2589323818683624
    2. '   ' → logprob: -2.00893235206604
    3. 'for' → logprob: -2.63393235206604
    4. 'print' → logprob: -3.88393235206604
    5. ' if' → logprob: -6.883932590484619
    6. '
' → logprob: -8.258932113647461
    7. ' for' → logprob: -8.508932113647461
    8. '```' → logprob: -9.133932113647461
    9. '<|end|>' → logprob: -10.883932113647461
    10. 'while' → logprob: -12.383932113647461

Token 459: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24305292963981628
    2. 'print' (adapté à ' print') → logprob: -1.7430529594421387
    3. 'for' → logprob: -3.2430529594421387
    4. '   ' → logprob: -6.368052959442139
    5. ' if' → logprob: -11.11805248260498
    6. '```' → logprob: -11.99305248260498
    7. ' for' → logprob: -13.49305248260498
    8. ' print' → logprob: -13.99305248260498
    9. '
' → logprob: -14.61805248260498
    10. '    
' → logprob: -15.11805248260498

Token 460: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.21411330997943878
    2. '(s' → logprob: -1.9641133546829224
    3. '('' → logprob: -3.464113235473633
    4. '("' → logprob: -4.214113235473633
    5. '(' → logprob: -5.214113235473633
    6. '(len' → logprob: -7.339113235473633
    7. '(*(' → logprob: -9.089113235473633
    8. 'sur' → logprob: -9.589113235473633
    9. '(min' → logprob: -9.839113235473633
    10. '()' → logprob: -11.339113235473633

Token 461: 'sorted' (ID: 64288)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.6240566083070007e-06
    2. ' survivors' → logprob: -13.375001907348633
    3. 'sorted' → logprob: -17.375001907348633
    4. ')' → logprob: -18.875001907348633
    5. '(s' → logprob: -19.125001907348633
    6. '_sur' → logprob: -19.125001907348633
    7. 'sus' → logprob: -19.375001907348633
    8. '-sur' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.000001907348633
    10. 'Sur' → logprob: -20.125001907348633

Token 462: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.100216805934906
    2. 'sur' → logprob: -2.350216865539551
    3. ' survivors' → logprob: -12.47521686553955
    4. ')' → logprob: -12.85021686553955
    5. 's' → logprob: -12.97521686553955
    6. '_sur' → logprob: -14.10021686553955
    7. 'Sur' → logprob: -15.47521686553955
    8. '(' → logprob: -16.225215911865234
    9. '```' → logprob: -16.600215911865234
    10. '(
' → logprob: -16.975215911865234

Token 463: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.033751972019672394
    2. 'sur' → logprob: -3.408751964569092
    3. ')' → logprob: -11.28375244140625
    4. 'rv' → logprob: -11.40875244140625
    5. 'v' → logprob: -11.78375244140625
    6. 'uro' → logprob: -11.78375244140625
    7. '   ' → logprob: -11.78375244140625
    8. ' survivors' → logprob: -11.90875244140625
    9. 's' → logprob: -12.03375244140625
    10. 'viv' → logprob: -12.15875244140625

Token 464: 'viv' (ID: 37442)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.00256067281588912
    2. 'viv' → logprob: -6.877560615539551
    3. 'ivers' → logprob: -7.752560615539551
    4. '{' → logprob: -8.25256061553955
    5. 'vors' → logprob: -8.37756061553955
    6. 'ivals' → logprob: -9.12756061553955
    7. '   ' → logprob: -9.25256061553955
    8. 'ors' → logprob: -9.50256061553955
    9. 'iors' → logprob: -10.00256061553955
    10. '+' → logprob: -10.12756061553955

Token 465: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -3.8889261304575484e-06
    2. 'vors' → logprob: -13.125003814697266
    3. '[' → logprob: -14.625003814697266
    4. 'iors' → logprob: -14.750003814697266
    5. 'ars' → logprob: -15.000003814697266
    6. '{' → logprob: -15.500003814697266
    7. '
' → logprob: -16.500003814697266
    8. 'iv' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. 'ORS' → logprob: -17.375003814697266

Token 466: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008618946187198162
    2. '))' → logprob: -4.7586188316345215
    3. '())' → logprob: -12.63361930847168
    4. ')))' → logprob: -14.63361930847168
    5. ')}' → logprob: -15.75861930847168
    6. ' )' → logprob: -16.00861930847168
    7. '})' → logprob: -16.13361930847168
    8. '])' → logprob: -16.25861930847168
    9. ')
' → logprob: -16.88361930847168
    10. '()' → logprob: -17.00861930847168


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 464
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 228
Tokens correctement prédits (top 10): 406
Précision stricte (1ère position): 45.69%
Précision adaptée (1ère position): 49.14%
Précision (top 10): 87.50%
================================================================================
