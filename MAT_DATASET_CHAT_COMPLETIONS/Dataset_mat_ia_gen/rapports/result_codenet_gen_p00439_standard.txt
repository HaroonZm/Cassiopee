================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

while True:
    n,k=map(int,input().split())
    if n==0 and k==0:
        break
    a=[int(input()) for _ in range(n)]
    window_sum = sum(a[:k])
    max_sum = window_sum
    for i in range(k,n):
        window_sum += a[i] - a[i-k]
        if window_sum > max_sum:
            max_sum = window_sum
    print(max_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02374373935163021
    2. '\n' → logprob: -4.023743629455566
    3. '<|end|>' → logprob: -6.773743629455566
    4. '\' → logprob: -7.273743629455566
    5. 'newline' → logprob: -7.273743629455566
    6. 'import' → logprob: -7.398743629455566
    7. '```' → logprob: -7.648743629455566
    8. '' → logprob: -8.023743629455566
    9. '<|end|>' → logprob: -8.023743629455566
    10. 'print' → logprob: -8.398743629455566

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017290872347075492
    2. '[' → logprob: -10.00017261505127
    3. '.
' → logprob: -10.12517261505127
    4. ' .' → logprob: -10.12517261505127
    5. '.readline' → logprob: -10.62517261505127
    6. '.get' → logprob: -13.00017261505127
    7. '.[' → logprob: -13.00017261505127
    8. '.

' → logprob: -13.00017261505127
    9. '```' → logprob: -13.12517261505127
    10. '.setdefault' → logprob: -13.62517261505127

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05519808083772659
    2. '.readline' → logprob: -2.9301981925964355
    3. '.read' → logprob: -8.180197715759277
    4. '.
' → logprob: -11.930197715759277
    5. '.​' → logprob: -12.180197715759277
    6. '.Read' → logprob: -12.305197715759277
    7. '```' → logprob: -12.555197715759277
    8. '.

' → logprob: -12.680197715759277
    9. '.\' → logprob: -13.055197715759277
    10. '.`' → logprob: -13.430197715759277

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576596200466156
    2. '()' → logprob: -0.826596200466156
    3. '().' → logprob: -8.2015962600708
    4. '(
' → logprob: -8.4515962600708
    5. '()
' → logprob: -9.8265962600708
    6. ')' → logprob: -10.9515962600708
    7. '("")' → logprob: -11.2015962600708
    8. '.' → logprob: -11.8265962600708
    9. '()

' → logprob: -11.8265962600708
    10. '#' → logprob: -12.2015962600708

Token 9: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016061515780165792
    2. ' True' → logprob: -7.126605987548828
    3. '  ' → logprob: -7.626605987548828
    4. ' (' → logprob: -9.126605987548828
    5. '(' → logprob: -9.501605987548828
    6. '"' → logprob: -10.376605987548828
    7. '    ' → logprob: -10.626605987548828
    8. ''' → logprob: -10.751605987548828
    9. ' )' → logprob: -11.501605987548828
    10. ' not' → logprob: -11.751605987548828

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004416113253682852
    2. '():' → logprob: -5.504415988922119
    3. ' :' → logprob: -8.129416465759277
    4. ':**' → logprob: -11.379416465759277
    5. ' ():' → logprob: -11.879416465759277
    6. ':
' → logprob: -12.004416465759277
    7. '):' → logprob: -12.129416465759277
    8. '(:' → logprob: -12.129416465759277
    9. '   ' → logprob: -13.379416465759277
    10. ':return' → logprob: -14.379416465759277

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029992183670401573
    2. ' ' → logprob: -4.52999210357666
    3. '    ' → logprob: -5.15499210357666
    4. '    
' → logprob: -5.52999210357666
    5. ':' → logprob: -6.15499210357666
    6. '(' → logprob: -6.15499210357666
    7. 'input' → logprob: -7.02999210357666
    8. ' 
' → logprob: -7.27999210357666
    9. '  
' → logprob: -7.40499210357666
    10. '  ' → logprob: -7.77999210357666

Token 12: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24502182006835938
    2. '   ' → logprob: -2.3700218200683594
    3. 'line' → logprob: -2.4950218200683594
    4. 'data' → logprob: -3.7450218200683594
    5. ' data' → logprob: -5.370021820068359
    6. 'user' → logprob: -5.870021820068359
    7. '    ' → logprob: -6.370021820068359
    8. ' user' → logprob: -6.370021820068359
    9. '    
' → logprob: -6.870021820068359
    10. 's' → logprob: -6.995021820068359

Token 13: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09252934902906418
    2. '=' → logprob: -2.842529296875
    3. ' ==' → logprob: -3.592529296875
    4. ' ' → logprob: -6.842529296875
    5. '==' → logprob: -7.467529296875
    6. ' >' → logprob: -8.342529296875
    7. '=int' → logprob: -8.467529296875
    8. ' :=' → logprob: -9.592529296875
    9. '=input' → logprob: -9.592529296875
    10. '>' → logprob: -9.592529296875

Token 14: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869492709636688
    2. ' =' → logprob: -1.1369493007659912
    3. '=input' → logprob: -10.01194953918457
    4. ',' → logprob: -10.63694953918457
    5. ' ' → logprob: -12.13694953918457
    6. '=int' → logprob: -14.01194953918457
    7. ' ,' → logprob: -14.26194953918457
    8. ')' → logprob: -14.51194953918457
    9. '    ' → logprob: -15.13694953918457
    10. ' =
' → logprob: -15.13694953918457

Token 15: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04866378381848335
    2. ' map' → logprob: -3.048663854598999
    3. 'input' → logprob: -9.548664093017578
    4. 'list' → logprob: -13.048664093017578
    5. ' input' → logprob: -13.173664093017578
    6. ' ' → logprob: -14.923664093017578
    7. '	map' → logprob: -15.048664093017578
    8. '(map' → logprob: -15.548664093017578
    9. 'm' → logprob: -16.048664093017578
    10. ' list' → logprob: -16.423664093017578

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.044463276863098145
    2. '(' → logprob: -3.1694631576538086
    3. '(str' → logprob: -7.044463157653809
    4. '(lambda' → logprob: -7.669463157653809
    5. 'int' → logprob: -9.669463157653809
    6. '[int' → logprob: -10.419463157653809
    7. '(input' → logprob: -11.294463157653809
    8. '<int' → logprob: -12.169463157653809
    9. '(
' → logprob: -12.294463157653809
    10. '(list' → logprob: -13.669463157653809

Token 17: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1211835965514183
    2. ',' → logprob: -2.2461836338043213
    3. '(input' → logprob: -4.996183395385742
    4. 'input' → logprob: -6.871183395385742
    5. ')' → logprob: -8.121183395385742
    6. '(' → logprob: -8.996183395385742
    7. ' input' → logprob: -10.121183395385742
    8. ' ,' → logprob: -10.621183395385742
    9. ',int' → logprob: -11.246183395385742
    10. '=input' → logprob: -11.371183395385742

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009248805232346058
    2. '())' → logprob: -4.759248733520508
    3. '()' → logprob: -7.384248733520508
    4. '()))' → logprob: -12.134248733520508
    5. ')' → logprob: -12.384248733520508
    6. ' ())' → logprob: -13.509248733520508
    7. ' ().' → logprob: -14.384248733520508
    8. '(' → logprob: -15.009248733520508
    9. '()
' → logprob: -15.134248733520508
    10. '());' → logprob: -15.384248733520508

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005577721633017063
    2. 'strip' → logprob: -5.505577564239502
    3. 'rstrip' → logprob: -6.505577564239502
    4. ' split' → logprob: -13.13057804107666
    5. '(split' → logprob: -14.38057804107666
    6. 'rs' → logprob: -15.88057804107666
    7. ')' → logprob: -16.005577087402344
    8. 'read' → logprob: -16.630577087402344
    9. ' strip' → logprob: -17.005577087402344
    10. '_split' → logprob: -17.005577087402344

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035731035750359297
    2. '))' → logprob: -6.253572940826416
    3. '())' → logprob: -6.503572940826416
    4. '()' → logprob: -9.128573417663574
    5. '(' → logprob: -11.003573417663574
    6. '),' → logprob: -12.253573417663574
    7. ')`' → logprob: -12.378573417663574
    8. ')
' → logprob: -13.128573417663574
    9. ')")' → logprob: -13.628573417663574
    10. '()))' → logprob: -13.628573417663574

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5149635672569275
    2. ' if' → logprob: -1.5149636268615723
    3. ' ' → logprob: -2.3899636268615723
    4. '<|end|>' → logprob: -3.5149636268615723
    5. 'if' → logprob: -4.014963626861572
    6. '  ' → logprob: -4.514963626861572
    7. '\n' → logprob: -5.264963626861572
    8. '    ' → logprob: -5.264963626861572
    9. ' 
' → logprob: -5.514963626861572
    10. '
' → logprob: -5.639963626861572

Token 22: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.596712052822113
    2. ' ' → logprob: -1.9717121124267578
    3. '<|end|>' → logprob: -1.9717121124267578
    4. '   ' → logprob: -2.471712112426758
    5. 'if' (adapté à ' if') → logprob: -2.721712112426758
    6. '    ' → logprob: -5.346712112426758
    7. ' 
' → logprob: -5.846712112426758
    8. '  ' → logprob: -5.846712112426758
    9. '\n' → logprob: -6.221712112426758
    10. ')' → logprob: -6.471712112426758

Token 23: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007229743059724569
    2. 'n' → logprob: -5.632229804992676
    3. ' not' → logprob: -5.632229804992676
    4. 'not' → logprob: -10.507229804992676
    5. ' ' → logprob: -11.132229804992676
    6. '	n' → logprob: -15.007229804992676
    7. ' ' → logprob: -16.00722885131836
    8. '   ' → logprob: -16.63222885131836
    9. '  ' → logprob: -16.75722885131836
    10. '(n' → logprob: -17.00722885131836

Token 24: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25270307064056396
    2. ' ==' → logprob: -1.502703070640564
    3. '=' → logprob: -7.7527031898498535
    4. '<' → logprob: -8.627702713012695
    5. ')' → logprob: -10.377702713012695
    6. ')==' → logprob: -10.377702713012695
    7. ' <' → logprob: -11.002702713012695
    8. '<=' → logprob: -11.127702713012695
    9. ' ' → logprob: -11.252702713012695
    10. ' =' → logprob: -11.502702713012695

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02056746743619442
    2. ' ' → logprob: -3.8955674171447754
    3. 'k' → logprob: -11.395567893981934
    4. '   ' → logprob: -13.083067893981934
    5. '  ' → logprob: -13.458067893981934
    6. '```' → logprob: -13.583067893981934
    7. ' k' → logprob: -13.895567893981934
    8. '-' → logprob: -13.958067893981934
    9. '    ' → logprob: -14.520567893981934
    10. ''' → logprob: -14.520567893981934

Token 26: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05678369104862213
    2. 'and' → logprob: -2.931783676147461
    3. ' ' → logprob: -6.681783676147461
    4. ':' → logprob: -7.556783676147461
    5. ' or' → logprob: -9.181783676147461
    6. '	and' → logprob: -11.806783676147461
    7. ' a' → logprob: -12.056783676147461
    8. ' ' → logprob: -12.806783676147461
    9. ' an' → logprob: -13.056783676147461
    10. '  ' → logprob: -14.681783676147461

Token 27: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07889165729284286
    2. 'k' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.82889175415039
    4. '	k' → logprob: -14.07889175415039
    5. ' ' → logprob: -16.20389175415039
    6. ',k' → logprob: -16.82889175415039
    7. '_k' → logprob: -18.20389175415039
    8. '<|end|>' → logprob: -18.57889175415039
    9. '"k' → logprob: -18.57889175415039
    10. ' к' → logprob: -18.70389175415039

Token 28: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023344242945313454
    2. ' ==' → logprob: -3.7733442783355713
    3. '=' → logprob: -9.898344039916992
    4. '0' → logprob: -11.148344039916992
    5. '<|end|>' → logprob: -11.148344039916992
    6. ' ' → logprob: -12.273344039916992
    7. ' ' → logprob: -12.648344039916992
    8. ')==' → logprob: -12.898344039916992
    9. '```' → logprob: -12.898344039916992
    10. '<|end|>' → logprob: -13.273344039916992

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -17.000085830688477
    4. '০' → logprob: -18.625085830688477
    5. '०' → logprob: -19.000085830688477
    6. '<|end|>' → logprob: -19.000085830688477
    7. '<|end|>' → logprob: -19.250085830688477
    8. '０' → logprob: -19.625085830688477
    9. '٠' → logprob: -20.187585830688477
    10. '  ' → logprob: -20.625085830688477

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00435226783156395
    2. ':
' → logprob: -5.87935209274292
    3. '   ' → logprob: -6.50435209274292
    4. '       ' → logprob: -10.254352569580078
    5. '.' → logprob: -12.629352569580078
    6. '	break' → logprob: -13.004352569580078
    7. ':return' → logprob: -13.254352569580078
    8. ' :' → logprob: -13.254352569580078
    9. ',' → logprob: -14.004352569580078
    10. '    ' → logprob: -14.379352569580078

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004716464783996344
    2. '   ' → logprob: -5.379716396331787
    3. '	break' → logprob: -10.379716873168945
    4. ' break' → logprob: -10.629716873168945
    5. '\n' → logprob: -11.754716873168945
    6. '	' → logprob: -12.004716873168945
    7. '     ' → logprob: -12.129716873168945
    8. '    ' → logprob: -12.254716873168945
    9. '      ' → logprob: -13.004716873168945
    10. '\t' → logprob: -13.129716873168945

Token 32: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5420308113098145
    2. 'break' (adapté à ' break') → logprob: -1.0420308113098145
    3. '       ' → logprob: -2.7920308113098145
    4. '   ' → logprob: -5.5420308113098145
    5. '	break' → logprob: -7.6670308113098145
    6. '           ' → logprob: -12.542030334472656
    7. 'b' → logprob: -13.042030334472656
    8. '_break' → logprob: -13.292030334472656
    9. '```' → logprob: -13.667030334472656
    10. '-break' → logprob: -14.167030334472656

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33895155787467957
    2. '
' → logprob: -2.088951587677002
    3. '    
' → logprob: -2.213951587677002
    4. '<|end|>' → logprob: -3.338951587677002
    5. '\n' → logprob: -4.713951587677002
    6. '  
' → logprob: -5.463951587677002
    7. ' 
' → logprob: -6.713951587677002
    8. '```' → logprob: -6.963951587677002
    9. '   
' → logprob: -7.338951587677002
    10. '<|end|>' → logprob: -7.463951587677002

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03172875940799713
    2. '    
' → logprob: -3.531728744506836
    3. '```' → logprob: -7.906728744506836
    4. '\n' → logprob: -8.281728744506836
    5. 'n' → logprob: -8.781728744506836
    6. '    ' → logprob: -8.906728744506836
    7. '[' → logprob: -9.156728744506836
    8. '<|end|>' → logprob: -9.281728744506836
    9. '   
' → logprob: -9.406728744506836
    10. 'print' → logprob: -9.406728744506836

Token 35: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25972980260849
    2. 'result' → logprob: -3.1347298622131348
    3. 'count' → logprob: -3.1347298622131348
    4. 'dp' → logprob: -3.6347298622131348
    5. 'counts' → logprob: -3.7597298622131348
    6. 'pairs' → logprob: -4.884729862213135
    7. 'b' → logprob: -5.009729862213135
    8. 's' → logprob: -5.009729862213135
    9. 'numbers' → logprob: -5.259729862213135
    10. ' dp' → logprob: -5.509729862213135

Token 36: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8159002661705017
    2. ' =' → logprob: -0.8159002661705017
    3. 'rr' → logprob: -2.6909003257751465
    4. 'rray' → logprob: -4.1909003257751465
    5. ',b' → logprob: -4.4409003257751465
    6. '=[]' → logprob: -4.6909003257751465
    7. '=[' → logprob: -5.8159003257751465
    8. ',' → logprob: -6.0659003257751465
    9. ' =[' → logprob: -6.4409003257751465
    10. '=list' → logprob: -6.9409003257751465

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17590351402759552
    2. '0' → logprob: -1.925903558731079
    3. 'list' → logprob: -4.5509033203125
    4. 'i' → logprob: -6.3009033203125
    5. '*' → logprob: -7.3009033203125
    6. ']' → logprob: -7.4259033203125
    7. ']int' → logprob: -7.5509033203125
    8. 'map' → logprob: -8.1759033203125
    9. 'False' → logprob: -8.4259033203125
    10. ' int' → logprob: -8.4259033203125

Token 38: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002477796748280525
    2. '(' → logprob: -6.752477645874023
    3. '(x' → logprob: -7.127477645874023
    4. '(i' → logprob: -9.002477645874023
    5. 'input' → logprob: -9.127477645874023
    6. '()' → logprob: -9.127477645874023
    7. ']' → logprob: -9.127477645874023
    8. '()]' → logprob: -10.377477645874023
    9. ',input' → logprob: -12.252477645874023
    10. '(a' → logprob: -12.502477645874023

Token 39: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012560649774968624
    2. '().' → logprob: -6.876255989074707
    3. '()' → logprob: -8.626255989074707
    4. '()]' → logprob: -10.626255989074707
    5. '())
' → logprob: -11.376255989074707
    6. '()),' → logprob: -13.376255989074707
    7. '())

' → logprob: -13.626255989074707
    8. ')' → logprob: -13.626255989074707
    9. '()
' → logprob: -13.751255989074707
    10. '()))' → logprob: -14.001255989074707

Token 40: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.040981221944093704
    2. 'for' → logprob: -3.7909812927246094
    3. ' for' → logprob: -4.165981292724609
    4. ')' → logprob: -6.790981292724609
    5. '()]' → logprob: -7.665981292724609
    6. '())' → logprob: -8.79098129272461
    7. '(' → logprob: -8.79098129272461
    8. ' ()' → logprob: -10.04098129272461
    9. '().' → logprob: -10.04098129272461
    10. ']' → logprob: -10.16598129272461

Token 41: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04740888252854347
    2. ' _' → logprob: -4.0474090576171875
    3. ' ' → logprob: -4.1724090576171875
    4. '_' → logprob: -4.4224090576171875
    5. 'range' → logprob: -6.6724090576171875
    6. '_range' → logprob: -9.797409057617188
    7. '	range' → logprob: -10.172409057617188
    8. '  ' → logprob: -10.547409057617188
    9. ' i' → logprob: -11.547409057617188
    10. ' in' → logprob: -11.797409057617188

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09380415827035904
    2. 'in' → logprob: -2.968804121017456
    3. 'range' → logprob: -3.343804121017456
    4. ' range' → logprob: -5.968804359436035
    5. ' ' → logprob: -8.218804359436035
    6. '  ' → logprob: -10.343804359436035
    7. 'n' → logprob: -12.593804359436035
    8. '	range' → logprob: -13.343804359436035
    9. '   ' → logprob: -13.468804359436035
    10. 'a' → logprob: -14.218804359436035

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001953018014319241
    2. ' range' → logprob: -6.251953125
    3. ' ' → logprob: -12.001953125
    4. '   ' → logprob: -12.376953125
    5. '  ' → logprob: -12.876953125
    6. 'ran' → logprob: -13.001953125
    7. '(range' → logprob: -13.001953125
    8. '	range' → logprob: -13.501953125
    9. 'a' → logprob: -13.626953125
    10. 'r' → logprob: -13.751953125

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16064560413360596
    2. '(k' → logprob: -1.910645604133606
    3. '(' → logprob: -7.785645484924316
    4. ' (' → logprob: -12.785645484924316
    5. 'k' → logprob: -13.785645484924316
    6. 'n' → logprob: -14.035645484924316
    7. ' k' → logprob: -14.660645484924316
    8. ' n' → logprob: -15.535645484924316
    9. '(a' → logprob: -16.410646438598633
    10. '(
' → logprob: -16.535646438598633

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026076447684317827
    2. ']' → logprob: -6.002607822418213
    3. ')' → logprob: -9.127607345581055
    4. ' )' → logprob: -12.252607345581055
    5. '])' → logprob: -12.627607345581055
    6. ' ]' → logprob: -12.627607345581055
    7. '])]' → logprob: -12.627607345581055
    8. ')]
' → logprob: -12.752607345581055
    9. ')])' → logprob: -13.502607345581055
    10. '')]' → logprob: -14.252607345581055

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18552280962467194
    2. 'a' → logprob: -2.5605227947235107
    3. '<|end|>' → logprob: -3.4355227947235107
    4. '
' → logprob: -4.56052303314209
    5. 'indices' → logprob: -4.56052303314209
    6. 's' → logprob: -5.31052303314209
    7. '    
' → logprob: -5.56052303314209
    8. '[' → logprob: -5.56052303314209
    9. ' a' → logprob: -5.68552303314209
    10. 'b' → logprob: -5.81052303314209

Token 47: ' window' (ID: 5734)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.433541178703308
    2. 'dp' → logprob: -2.0585412979125977
    3. 'b' → logprob: -2.3085412979125977
    4. 'answer' → logprob: -2.4335412979125977
    5. 'result' → logprob: -2.6835412979125977
    6. 'count' → logprob: -2.8085412979125977
    7. 'res' → logprob: -3.3085412979125977
    8. '   ' → logprob: -3.5585412979125977
    9. 's' → logprob: -3.8085412979125977
    10. ' a' → logprob: -4.058541297912598

Token 48: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7208073735237122
    2. '_sum' → logprob: -1.3458073139190674
    3. '_size' → logprob: -1.4708073139190674
    4. '=' → logprob: -4.7208075523376465
    5. '_s' → logprob: -4.8458075523376465
    6. '=[]' → logprob: -5.8458075523376465
    7. '_start' → logprob: -6.7208075523376465
    8. 's' → logprob: -6.9708075523376465
    9. '_len' → logprob: -7.5958075523376465
    10. '_=' → logprob: -8.095807075500488

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233731865882874
    2. '=' → logprob: -0.8983731865882874
    3. ' +=' → logprob: -9.2733736038208
    4. '=sum' → logprob: -9.5233736038208
    5. '+=' → logprob: -10.3983736038208
    6. '=a' → logprob: -11.0233736038208
    7. ' ' → logprob: -11.7733736038208
    8. '  ' → logprob: -12.2733736038208
    9. 's' → logprob: -12.3983736038208
    10. '=s' → logprob: -12.8983736038208

Token 50: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19517667591571808
    2. ' sum' → logprob: -1.8201767206192017
    3. '0' → logprob: -4.195176601409912
    4. ' ' → logprob: -8.57017707824707
    5. 'a' → logprob: -10.69517707824707
    6. '=sum' → logprob: -11.69517707824707
    7. '	sum' → logprob: -12.07017707824707
    8. '   ' → logprob: -12.57017707824707
    9. ' a' → logprob: -12.69517707824707
    10. '(sum' → logprob: -12.69517707824707

Token 51: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00015943869948387146
    2. '(' → logprob: -8.75015926361084
    3. 'a' → logprob: -14.37515926361084
    4. '()' → logprob: -16.750160217285156
    5. '(s' → logprob: -16.750160217285156
    6. '(
' → logprob: -16.875160217285156
    7. ' (' → logprob: -17.375160217285156
    8. '(array' → logprob: -17.625160217285156
    9. '(ai' → logprob: -17.875160217285156
    10. '([' → logprob: -18.250160217285156

Token 52: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0025341638829559088
    2. '[' → logprob: -6.00253438949585
    3. '[i' → logprob: -10.127533912658691
    4. ')' → logprob: -11.877533912658691
    5. '[k' → logprob: -11.877533912658691
    6. ' [:' → logprob: -12.877533912658691
    7. '[:]' → logprob: -13.877533912658691
    8. '   ' → logprob: -14.877533912658691
    9. '[
' → logprob: -15.127533912658691
    10. '[:-' → logprob: -15.377533912658691

Token 53: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001370320824207738
    2. ' k' → logprob: -9.000137329101562
    3. '   ' → logprob: -12.250137329101562
    4. ' ' → logprob: -12.500137329101562
    5. '1' → logprob: -13.375137329101562
    6. ')' → logprob: -14.625137329101562
    7. '  ' → logprob: -14.750137329101562
    8. '	k' → logprob: -14.937637329101562
    9. ' ' → logprob: -15.625137329101562
    10. '2' → logprob: -15.625137329101562

Token 54: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005433809128589928
    2. ')' → logprob: -7.625543594360352
    3. '])
' → logprob: -10.250543594360352
    4. ' ])' → logprob: -11.500543594360352
    5. ')])' → logprob: -12.625543594360352
    6. ']' → logprob: -13.250543594360352
    7. '))' → logprob: -13.875543594360352
    8. ' )' → logprob: -14.000543594360352
    9. ']))' → logprob: -14.625543594360352
    10. ')]' → logprob: -14.750543594360352

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24605797231197357
    2. '<|end|>' → logprob: -1.6210579872131348
    3. '    
' → logprob: -4.871057987213135
    4. '
' → logprob: -4.871057987213135
    5. '<|end|>' → logprob: -6.871057987213135
    6. '  ' → logprob: -7.371057987213135
    7. ' ' → logprob: -7.496057987213135
    8. '    ' → logprob: -7.871057987213135
    9. '   
' → logprob: -7.996057987213135
    10. '\n' → logprob: -8.246057510375977

Token 56: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.22290873527526855
    2. ' max' → logprob: -1.7229087352752686
    3. 'result' → logprob: -4.722908973693848
    4. '   ' → logprob: -5.222908973693848
    5. 'best' → logprob: -6.847908973693848
    6. ' best' → logprob: -7.222908973693848
    7. ' 
' → logprob: -7.472908973693848
    8. '    
' → logprob: -7.472908973693848
    9. 'count' → logprob: -7.722908973693848
    10. ' result' → logprob: -7.847908973693848

Token 57: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.13409392535686493
    2. '_' → logprob: -2.134093999862671
    3. '_window' → logprob: -5.134093761444092
    4. '_val' → logprob: -6.884093761444092
    5. '_value' → logprob: -8.88409423828125
    6. '_s' → logprob: -10.63409423828125
    7. '(window' → logprob: -11.25909423828125
    8. '_len' → logprob: -12.25909423828125
    9. '_=' → logprob: -12.25909423828125
    10. ' _' → logprob: -12.38409423828125

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25197726488113403
    2. ' =' → logprob: -1.5019772052764893
    3. '=max' → logprob: -10.00197696685791
    4. ',' → logprob: -13.25197696685791
    5. ' ' → logprob: -15.25197696685791
    6. '=

' → logprob: -15.50197696685791
    7. '＝' → logprob: -16.126977920532227
    8. '=int' → logprob: -16.251977920532227
    9. '=index' → logprob: -17.126977920532227
    10. '=len' → logprob: -17.126977920532227

Token 59: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.42874011397361755
    2. 'window' → logprob: -1.05374014377594
    3. '	window' → logprob: -11.428740501403809
    4. ' ' → logprob: -11.678740501403809
    5. ' max' → logprob: -11.928740501403809
    6. 'max' → logprob: -12.928740501403809
    7. '0' → logprob: -13.178740501403809
    8. ' ' → logprob: -13.178740501403809
    9. '   ' → logprob: -13.553740501403809
    10. 'windows' → logprob: -13.678740501403809

Token 60: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00048715711454860866
    2. '_' → logprob: -7.750487327575684
    3. '_s' → logprob: -10.125487327575684
    4. 'sum' → logprob: -12.000487327575684
    5. '_max' → logprob: -12.375487327575684
    6. ' _' → logprob: -12.875487327575684
    7. 'Sum' → logprob: -14.875487327575684
    8. '_SUM' → logprob: -15.000487327575684
    9. '_window' → logprob: -15.125487327575684
    10. 's' → logprob: -15.500487327575684

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004881130997091532
    2. '<|end|>' → logprob: -5.754880905151367
    3. '
' → logprob: -7.504880905151367
    4. '    
' → logprob: -7.754880905151367
    5. '   ' → logprob: -7.879880905151367
    6. '  
' → logprob: -9.129880905151367
    7. '

' → logprob: -9.629880905151367
    8. '<|end|>' → logprob: -9.754880905151367
    9. ' 
' → logprob: -10.254880905151367
    10. '\n' → logprob: -10.379880905151367

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.532981812953949
    2. '   ' → logprob: -1.1579818725585938
    3. '    
' → logprob: -2.9079818725585938
    4. ' for' → logprob: -4.532981872558594
    5. '\n' → logprob: -4.657981872558594
    6. '<|end|>' → logprob: -4.907981872558594
    7. '  
' → logprob: -5.157981872558594
    8. ' 
' → logprob: -5.282981872558594
    9. 'for' → logprob: -5.907981872558594
    10. '   
' → logprob: -6.782981872558594

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28093892335891724
    2. ' for' → logprob: -1.6559388637542725
    3. '   ' → logprob: -3.6559388637542725
    4. '
' → logprob: -4.530939102172852
    5. '\n' → logprob: -5.280939102172852
    6. '    
' → logprob: -5.280939102172852
    7. '<|end|>' → logprob: -5.405939102172852
    8. '  
' → logprob: -7.530939102172852
    9. '```' → logprob: -7.905939102172852
    10. ' 
' → logprob: -7.905939102172852

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002678272081539035
    2. 'i' → logprob: -6.002678394317627
    3. ' ' → logprob: -8.627677917480469
    4. '	i' → logprob: -11.252677917480469
    5. ' _' → logprob: -12.252677917480469
    6. '  ' → logprob: -12.877677917480469
    7. '   ' → logprob: -13.627677917480469
    8. '_i' → logprob: -14.002677917480469
    9. '_' → logprob: -14.627677917480469
    10. ' ' → logprob: -15.002677917480469

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004666268825531006
    2. 'in' → logprob: -5.379666328430176
    3. ' ' → logprob: -10.254666328430176
    4. '	in' → logprob: -12.129666328430176
    5. '  ' → logprob: -12.629666328430176
    6. '   ' → logprob: -13.879666328430176
    7. 'range' → logprob: -15.254666328430176
    8. '+' → logprob: -15.629666328430176
    9. 'n' → logprob: -16.00466537475586
    10. '```' → logprob: -16.37966537475586

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759441256523132
    2. ' range' → logprob: -0.8259441256523132
    3. ' ' → logprob: -13.075943946838379
    4. '	range' → logprob: -13.575943946838379
    5. '   ' → logprob: -14.075943946838379
    6. '  ' → logprob: -15.200943946838379
    7. '(range' → logprob: -15.950943946838379
    8. 'r' → logprob: -17.075944900512695
    9. 'ra' → logprob: -18.075944900512695
    10. '    ' → logprob: -18.075944900512695

Token 67: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.06242416426539421
    2. '(' → logprob: -3.6874241828918457
    3. 'k' → logprob: -3.9374241828918457
    4. ' k' → logprob: -4.187424182891846
    5. ' (' → logprob: -7.812424182891846
    6. '1' → logprob: -8.062423706054688
    7. '   ' → logprob: -10.312423706054688
    8. '(n' → logprob: -10.437423706054688
    9. ',k' → logprob: -12.312423706054688
    10. '	k' → logprob: -12.937423706054688

Token 68: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3871975243091583
    2. ',n' → logprob: -1.137197494506836
    3. ' ,' → logprob: -8.387197494506836
    4. ',len' → logprob: -9.262197494506836
    5. ',num' → logprob: -13.887197494506836
    6. ' n' → logprob: -14.387197494506836
    7. '   ' → logprob: -14.762197494506836
    8. 'n' → logprob: -14.887197494506836
    9. ',k' → logprob: -15.262197494506836
    10. '<n' → logprob: -15.512197494506836

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023341098800301552
    2. '):
' → logprob: -3.773341178894043
    3. '):
' → logprob: -9.898341178894043
    4. ' ):' → logprob: -10.398341178894043
    5. ')' → logprob: -11.523341178894043
    6. ':' → logprob: -13.023341178894043
    7. '):

' → logprob: -14.273341178894043
    8. '-' → logprob: -14.398341178894043
    9. ' ):
' → logprob: -14.398341178894043
    10. '   ' → logprob: -15.523341178894043

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7443395256996155
    2. '       ' → logprob: -1.1193394660949707
    3. ' 
' → logprob: -2.3693394660949707
    4. ' window' → logprob: -3.2443394660949707
    5. '<|end|>' → logprob: -3.9943394660949707
    6. ' ' → logprob: -4.244339466094971
    7. '    ' → logprob: -4.369339466094971
    8. '    
' → logprob: -4.619339466094971
    9. '        
' → logprob: -5.494339466094971
    10. '     
' → logprob: -6.244339466094971

Token 71: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.6940634846687317
    2. 'window' (adapté à ' window') → logprob: -0.6940634846687317
    3. '   ' → logprob: -7.069063663482666
    4. '       ' → logprob: -10.444063186645508
    5. '	window' → logprob: -10.444063186645508
    6. '
' → logprob: -12.694063186645508
    7. '    ' → logprob: -13.694063186645508
    8. '           ' → logprob: -14.194063186645508
    9. ' ' → logprob: -14.444063186645508
    10. '```' → logprob: -14.819063186645508

Token 72: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0016175732016563416
    2. '_s' → logprob: -7.001617431640625
    3. ' _' → logprob: -7.876617431640625
    4. '_' → logprob: -9.126617431640625
    5. ''_' → logprob: -10.251617431640625
    6. '```' → logprob: -10.376617431640625
    7. '"_' → logprob: -10.876617431640625
    8. ')_' → logprob: -11.001617431640625
    9. ']_' → logprob: -11.376617431640625
    10. '##_' → logprob: -11.751617431640625

Token 73: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8342733979225159
    2. '+=' → logprob: -1.334273338317871
    3. '=' → logprob: -1.584273338317871
    4. ' =' → logprob: -2.334273338317871
    5. ' -=' → logprob: -7.834273338317871
    6. '-=' → logprob: -9.459273338317871
    7. '+=(' → logprob: -12.959273338317871
    8. '+='' → logprob: -13.459273338317871
    9. ']+=' → logprob: -14.209273338317871
    10. ' +' → logprob: -14.709273338317871

Token 74: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6326485872268677
    2. ' a' → logprob: -0.7576485872268677
    3. '-a' → logprob: -10.632648468017578
    4. '	a' → logprob: -12.132648468017578
    5. ' -' → logprob: -12.257648468017578
    6. '(a' → logprob: -12.382648468017578
    7. '   ' → logprob: -12.632648468017578
    8. '-' → logprob: -12.882648468017578
    9. ' (' → logprob: -13.132648468017578
    10. ' ' → logprob: -13.507648468017578

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.25
    3. '```' → logprob: -16.875
    4. 'i' → logprob: -18.0
    5. '\[' → logprob: -18.375
    6. '[I' → logprob: -18.875
    7. '[j' → logprob: -18.875
    8. ' [' → logprob: -19.0
    9. '[
' → logprob: -19.625
    10. '
' → logprob: -19.75

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025448685511946678
    2. ']-' → logprob: -3.775448799133301
    3. '-' → logprob: -6.650448799133301
    4. ' ]' → logprob: -7.400448799133301
    5. ' -' → logprob: -8.1504487991333
    6. ')' → logprob: -12.6504487991333
    7. '   ' → logprob: -13.7754487991333
    8. ' ' → logprob: -14.4004487991333
    9. '-k' → logprob: -14.6504487991333
    10. '    ' → logprob: -14.6504487991333

Token 77: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07921307533979416
    2. '-' → logprob: -2.5792131423950195
    3. '-k' → logprob: -8.20421314239502
    4. ' ' → logprob: -11.70421314239502
    5. '-window' → logprob: -11.95421314239502
    6. '-token' → logprob: -12.45421314239502
    7. '   ' → logprob: -12.45421314239502
    8. '-i' → logprob: -12.70421314239502
    9. '-n' → logprob: -12.82921314239502
    10. '-int' → logprob: -13.32921314239502

Token 78: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502598519437015
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -15.501502990722656
    4. '_a' → logprob: -18.376502990722656
    5. '>a' → logprob: -18.376502990722656
    6. '<|end|>' → logprob: -18.501502990722656
    7. ')a' → logprob: -18.876502990722656
    8. '#a' → logprob: -19.251502990722656
    9. ''a' → logprob: -19.376502990722656
    10. ' ' → logprob: -19.626502990722656

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. '[a' → logprob: -16.375
    4. '```' → logprob: -16.75
    5. '[j' → logprob: -17.5
    6. '[k' → logprob: -18.625
    7. '\[' → logprob: -18.625
    8. 'a' → logprob: -18.625
    9. '[
' → logprob: -18.75
    10. '{i' → logprob: -19.0

Token 80: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.19036531448364258
    2. '-' → logprob: -1.8153653144836426
    3. ' -' → logprob: -4.565365314483643
    4. '-K' → logprob: -9.690364837646484
    5. '-key' → logprob: -10.815364837646484
    6. '-kar' → logprob: -11.315364837646484
    7. '-kit' → logprob: -11.690364837646484
    8. '-token' → logprob: -11.940364837646484
    9. '-code' → logprob: -12.315364837646484
    10. '-window' → logprob: -12.440364837646484

Token 81: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005903314799070358
    2. ']' → logprob: -5.255903244018555
    3. ')
' → logprob: -7.380903244018555
    4. '<|end|>' → logprob: -10.755903244018555
    5. '   ' → logprob: -11.755903244018555
    6. ')]' → logprob: -11.880903244018555
    7. '])' → logprob: -13.255903244018555
    8. '}' → logprob: -13.505903244018555
    9. ']
' → logprob: -13.505903244018555
    10. '```' → logprob: -13.630903244018555

Token 82: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4651546776294708
    2. '
' → logprob: -1.3401546478271484
    3. '    
' → logprob: -2.4651546478271484
    4. ' 
' → logprob: -4.840154647827148
    5. '<|end|>' → logprob: -5.215154647827148
    6. '   
' → logprob: -5.965154647827148
    7. '\n' → logprob: -6.340154647827148
    8. '  
' → logprob: -6.465154647827148
    9. '       ' → logprob: -6.590154647827148
    10. ' if' → logprob: -6.840154647827148

Token 83: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.643235445022583
    2. 'if' (adapté à ' if') → logprob: -0.893235445022583
    3. 'max' → logprob: -2.893235445022583
    4. ' max' → logprob: -4.643235206604004
    5. '       ' → logprob: -10.518235206604004
    6. '   ' → logprob: -10.643235206604004
    7. '
' → logprob: -12.268235206604004
    8. ' ' → logprob: -13.768235206604004
    9. '           ' → logprob: -14.643235206604004
    10. '  ' → logprob: -15.518235206604004

Token 84: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.0001817297888919711
    2. 'window' → logprob: -8.625182151794434
    3. ' ' → logprob: -13.250182151794434
    4. '	window' → logprob: -15.625182151794434
    5. ' max' → logprob: -16.000181198120117
    6. ' ' → logprob: -16.500181198120117
    7. '(window' → logprob: -16.750181198120117
    8. '   ' → logprob: -20.625181198120117
    9. ' a' → logprob: -20.875181198120117
    10. ' w' → logprob: -21.000181198120117

Token 85: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.790129555156454e-05
    2. 'sum' → logprob: -10.375067710876465
    3. '_' → logprob: -11.000067710876465
    4. '_max' → logprob: -11.750067710876465
    5. '_s' → logprob: -12.125067710876465
    6. ' _' → logprob: -12.875067710876465
    7. '>' → logprob: -13.250067710876465
    8. 'Sum' → logprob: -15.375067710876465
    9. 'max' → logprob: -15.375067710876465
    10. '__' → logprob: -15.500067710876465

Token 86: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10025542229413986
    2. '>' → logprob: -2.3502554893493652
    3. ' ' → logprob: -9.975255012512207
    4. ' ' → logprob: -13.850255012512207
    5. '   ' → logprob: -14.975255012512207
    6. ' >

' → logprob: -15.475255012512207
    7. ' >
' → logprob: -16.225255966186523
    8. '  ' → logprob: -16.350255966186523
    9. '.' → logprob: -16.350255966186523
    10. '">' → logprob: -16.725255966186523

Token 87: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020741820335388
    2. ' max' → logprob: -2.3502073287963867
    3. '	max' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '=max' → logprob: -16.350208282470703
    6. '(max' → logprob: -16.725208282470703
    7. '   ' → logprob: -16.975208282470703
    8. '[max' → logprob: -17.475208282470703
    9. '_max' → logprob: -17.975208282470703
    10. '```' → logprob: -18.725208282470703

Token 88: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00011975488450843841
    2. '_max' → logprob: -9.125120162963867
    3. '_' → logprob: -12.125120162963867
    4. ' _' → logprob: -12.750120162963867
    5. '_s' → logprob: -13.625120162963867
    6. '```' → logprob: -15.125120162963867
    7. '__' → logprob: -16.125120162963867
    8. ''_' → logprob: -16.875120162963867
    9. '_value' → logprob: -17.125120162963867
    10. '_score' → logprob: -17.125120162963867

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.975612187583465e-05
    2. '       ' → logprob: -11.375029563903809
    3. '=' → logprob: -12.250029563903809
    4. ':
' → logprob: -12.500029563903809
    5. ' :' → logprob: -13.000029563903809
    6. ':max' → logprob: -13.125029563903809
    7. '           ' → logprob: -13.250029563903809
    8. '):' → logprob: -13.750029563903809
    9. '<|end|>' → logprob: -14.125029563903809
    10. 'max' → logprob: -15.000029563903809

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20919010043144226
    2. ' max' → logprob: -1.8341901302337646
    3. 'max' → logprob: -3.5841901302337646
    4. '       ' → logprob: -7.8341898918151855
    5. '<|end|>' → logprob: -8.459190368652344
    6. '```' → logprob: -8.834190368652344
    7. '        ' → logprob: -9.209190368652344
    8. '(max' → logprob: -9.584190368652344
    9. '            
' → logprob: -10.209190368652344
    10. '            ' → logprob: -10.334190368652344

Token 91: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.28184160590171814
    2. 'max' (adapté à ' max') → logprob: -1.4068416357040405
    3. '           ' → logprob: -7.40684175491333
    4. '               ' → logprob: -10.406841278076172
    5. '       ' → logprob: -11.406841278076172
    6. '[max' → logprob: -11.406841278076172
    7. '   ' → logprob: -11.531841278076172
    8. '	max' → logprob: -12.031841278076172
    9. '_max' → logprob: -12.531841278076172
    10. 'window' → logprob: -12.906841278076172

Token 92: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.375007629394531
    3. '_s' → logprob: -13.500007629394531
    4. ' _' → logprob: -13.625007629394531
    5. 'sum' → logprob: -15.125007629394531
    6. '_max' → logprob: -16.25000762939453
    7. '_score' → logprob: -17.00000762939453
    8. '_set' → logprob: -17.62500762939453
    9. 'Sum' → logprob: -17.75000762939453
    10. '_S' → logprob: -18.12500762939453

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. ' =
' → logprob: -15.876928329467773
    4. '=max' → logprob: -16.001928329467773
    5. '=

' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.001928329467773
    7. '＝' → logprob: -17.376928329467773
    8. ' =)' → logprob: -17.501928329467773
    9. '<|end|>' → logprob: -18.501928329467773
    10. ' ' → logprob: -18.626928329467773

Token 94: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.3132622241973877
    2. 'window' → logprob: -1.3132622241973877
    3. '	window' → logprob: -15.313261985778809
    4. '(window' → logprob: -16.063262939453125
    5. '.window' → logprob: -17.813262939453125
    6. 'indow' → logprob: -18.313262939453125
    7. '```' → logprob: -18.688262939453125
    8. '_window' → logprob: -18.688262939453125
    9. '   ' → logprob: -19.063262939453125
    10. 'Window' → logprob: -19.188262939453125

Token 95: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.641841820150148e-05
    2. '_' → logprob: -11.00002670288086
    3. 'sum' → logprob: -11.87502670288086
    4. '_s' → logprob: -13.12502670288086
    5. ' _' → logprob: -14.87502670288086
    6. '_max' → logprob: -16.62502670288086
    7. 'Sum' → logprob: -17.00002670288086
    8. '__' → logprob: -17.62502670288086
    9. '_set' → logprob: -17.75002670288086
    10. '```' → logprob: -17.87502670288086

Token 96: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3569513261318207
    2. '   ' → logprob: -1.231951355934143
    3. '
' → logprob: -5.3569512367248535
    4. '    
' → logprob: -6.4819512367248535
    5. '<|end|>' → logprob: -6.8569512367248535
    6. ' print' → logprob: -7.1069512367248535
    7. '```' → logprob: -9.356951713562012
    8. '\n' → logprob: -9.481951713562012
    9. '  
' → logprob: -10.231951713562012
    10. '	print' → logprob: -10.356951713562012

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10197046399116516
    2. 'print' → logprob: -2.3519704341888428
    3. '
' → logprob: -6.601970672607422
    4. '    
' → logprob: -8.226970672607422
    5. '```' → logprob: -9.726970672607422
    6. ' print' → logprob: -9.976970672607422
    7. '<|end|>' → logprob: -11.601970672607422
    8. '       ' → logprob: -12.476970672607422
    9. '	print' → logprob: -12.476970672607422
    10. '        
' → logprob: -12.601970672607422

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.025668885558843613
    2. '   ' → logprob: -4.025669097900391
    3. ' print' → logprob: -4.900669097900391
    4. '    
' → logprob: -10.40066909790039
    5. '
' → logprob: -11.65066909790039
    6. ' 
' → logprob: -12.40066909790039
    7. '```' → logprob: -13.15066909790039
    8. '\n' → logprob: -13.65066909790039
    9. '	print' → logprob: -13.77566909790039
    10. '  
' → logprob: -14.77566909790039

Token 99: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -5.085517113911919e-05
    2. '(' → logprob: -10.00005054473877
    3. 'max' → logprob: -12.12505054473877
    4. ' max' → logprob: -17.000051498413086
    5. ' (' → logprob: -18.125051498413086
    6. '(min' → logprob: -18.750051498413086
    7. ',max' → logprob: -19.250051498413086
    8. '(m' → logprob: -19.500051498413086
    9. '(ma' → logprob: -19.500051498413086
    10. '=max' → logprob: -20.000051498413086

Token 100: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.875003814697266
    3. '_max' → logprob: -13.875003814697266
    4. '_s' → logprob: -13.875003814697266
    5. ')_' → logprob: -14.250003814697266
    6. '_' → logprob: -15.250003814697266
    7. 'sum' → logprob: -16.375003814697266
    8. ' _' → logprob: -17.000003814697266
    9. '_set' → logprob: -17.250003814697266
    10. '_val' → logprob: -17.375003814697266

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -14.500001907348633
    4. ')`' → logprob: -16.375001907348633
    5. '`)' → logprob: -17.125001907348633
    6. '))' → logprob: -17.625001907348633
    7. '')' → logprob: -18.000001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '）' → logprob: -19.500001907348633
    10. '()' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 60.61%
Précision adaptée (1ère position): 63.64%
Précision (top 10): 89.90%
================================================================================
