================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if line.strip() == '':
        continue
    a, b, n = map(int, line.split())
    s = 0
    r = a % b
    for _ in range(n):
        r *= 10
        digit = r // b
        r %= b
        s += digit
    print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2506629228591919
    2. '\n' → logprob: -2.1256628036499023
    3. 'import' → logprob: -3.1256628036499023
    4. '<|end|>' → logprob: -3.2506628036499023
    5. 'newline' → logprob: -5.500662803649902
    6. '\' → logprob: -5.625662803649902
    7. '<|end|>' → logprob: -6.125662803649902
    8. '' → logprob: -6.250662803649902
    9. '#' → logprob: -6.875662803649902
    10. ',' → logprob: -6.875662803649902

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010584368370473385
    2. '  ' → logprob: -4.760584354400635
    3. ' i' → logprob: -6.260584354400635
    4. 'i' → logprob: -11.635584831237793
    5. '_' → logprob: -12.135584831237793
    6. ' in' → logprob: -12.260584831237793
    7. ' space' → logprob: -12.385584831237793
    8. '```' → logprob: -12.510584831237793
    9. ' )' → logprob: -12.635584831237793
    10. ' sys' → logprob: -12.885584831237793

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10139565914869308
    2. 'in' → logprob: -2.601395606994629
    3. '[' → logprob: -4.101395606994629
    4. ':' → logprob: -6.226395606994629
    5. ' ' → logprob: -6.851395606994629
    6. '.' → logprob: -7.851395606994629
    7. '[:]' → logprob: -7.976395606994629
    8. '[]' → logprob: -8.476395606994629
    9. '  ' → logprob: -8.601395606994629
    10. '(' → logprob: -8.726395606994629

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01129148993641138
    2. 'sys' → logprob: -4.51129150390625
    3. ' ' → logprob: -9.38629150390625
    4. '=sys' → logprob: -9.51129150390625
    5. '	sys' → logprob: -10.51129150390625
    6. '(sys' → logprob: -10.76129150390625
    7. ' iter' → logprob: -11.13629150390625
    8. '```' → logprob: -12.26129150390625
    9. ' file' → logprob: -12.38629150390625
    10. ' open' → logprob: -12.51129150390625

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858248591423035
    2. '.readline' → logprob: -4.7588582038879395
    3. '.stdin' → logprob: -9.383858680725098
    4. '.argv' → logprob: -10.133858680725098
    5. '.stdout' → logprob: -10.633858680725098
    6. ' .' → logprob: -10.758858680725098
    7. '.readlines' → logprob: -11.133858680725098
    8. '```' → logprob: -12.133858680725098
    9. '.setdefault' → logprob: -12.383858680725098
    10. '.`' → logprob: -12.508858680725098

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.550411151489243e-05
    2. ' :' → logprob: -11.000055313110352
    3. ':
' → logprob: -11.250055313110352
    4. '>:' → logprob: -11.750055313110352
    5. '():' → logprob: -12.375055313110352
    6. '[:]' → logprob: -12.625055313110352
    7. ':**' → logprob: -12.875055313110352
    8. '):' → logprob: -13.250055313110352
    9. '':' → logprob: -13.750055313110352
    10. '`:' → logprob: -14.125055313110352

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003718723077327013
    2. ' print' → logprob: -6.128718852996826
    3. '    
' → logprob: -6.753718852996826
    4. 'print' → logprob: -8.628718376159668
    5. '    ' → logprob: -9.628718376159668
    6. ' if' → logprob: -10.128718376159668
    7. ' readline' → logprob: -11.003718376159668
    8. '```' → logprob: -11.628718376159668
    9. ' ' → logprob: -11.878718376159668
    10. ' line' → logprob: -12.128718376159668

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3255872130393982
    2. 'print' → logprob: -1.325587272644043
    3. ' print' → logprob: -4.450587272644043
    4. '    ' → logprob: -8.700587272644043
    5. 'pass' → logprob: -8.825587272644043
    6. '       ' → logprob: -9.200587272644043
    7. ' pass' → logprob: -9.575587272644043
    8. ' if' → logprob: -10.075587272644043
    9. 'if' (adapté à ' if') → logprob: -11.325587272644043
    10. '```' → logprob: -11.825587272644043

Token 11: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.037587970495224
    2. ' not' → logprob: -3.537587881088257
    3. ' ' → logprob: -5.037588119506836
    4. 'line' → logprob: -7.037588119506836
    5. ''' → logprob: -8.787588119506836
    6. '"' → logprob: -9.787588119506836
    7. ' len' → logprob: -9.912588119506836
    8. ' '' → logprob: -10.037588119506836
    9. ' ' → logprob: -10.162588119506836
    10. 'not' → logprob: -10.287588119506836

Token 12: '.strip' (ID: 40613)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.763694167137146
    2. '.' → logprob: -1.263694167137146
    3. '.strip' → logprob: -1.388694167137146
    4. '.rstrip' → logprob: -6.3886942863464355
    5. '.endswith' → logprob: -8.763693809509277
    6. ' .' → logprob: -8.763693809509277
    7. '.chomp' → logprob: -11.138693809509277
    8. 'startswith' → logprob: -11.138693809509277
    9. '.readline' → logprob: -12.138693809509277
    10. ' ==' → logprob: -12.263693809509277

Token 13: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6692644357681274
    2. ':' → logprob: -1.6692644357681274
    3. '==' → logprob: -1.9192644357681274
    4. ' ==' → logprob: -2.669264316558838
    5. '()' → logprob: -3.044264316558838
    6. '()==' → logprob: -3.419264316558838
    7. '):' → logprob: -7.419264316558838
    8. '.startswith' → logprob: -7.669264316558838
    9. '(' → logprob: -8.044264793395996
    10. '<|end|>' → logprob: -8.044264793395996

Token 14: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003629646496847272
    2. ' :' → logprob: -7.003629684448242
    3. ' ==' → logprob: -7.253629684448242
    4. '==' → logprob: -7.503629684448242
    5. '>' → logprob: -7.878629684448242
    6. '):' → logprob: -8.003629684448242
    7. '.' → logprob: -8.753629684448242
    8. '=' → logprob: -9.128629684448242
    9. ':**' → logprob: -9.628629684448242
    10. '   ' → logprob: -9.753629684448242

Token 15: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.9100993871688843
    2. '""' → logprob: -1.1600993871688843
    3. ''' → logprob: -1.6600993871688843
    4. '"' → logprob: -3.035099506378174
    5. '"":' → logprob: -3.160099506378174
    6. ''ex' → logprob: -6.035099506378174
    7. ''"' → logprob: -7.785099506378174
    8. ''import' → logprob: -9.285099029541016
    9. ''''' → logprob: -9.910099029541016
    10. '"user' → logprob: -10.160099029541016

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027420982951298356
    2. '   ' → logprob: -9.125274658203125
    3. 'continue' → logprob: -9.750274658203125
    4. ' break' → logprob: -10.000274658203125
    5. 'break' → logprob: -10.250274658203125
    6. ' continue' → logprob: -10.750274658203125
    7. '           ' → logprob: -14.125274658203125
    8. '```' → logprob: -14.125274658203125
    9. '    ' → logprob: -14.125274658203125
    10. '	break' → logprob: -14.500274658203125

Token 17: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.16408094763755798
    2. '       ' → logprob: -2.164080858230591
    3. ' break' → logprob: -3.789080858230591
    4. '   ' → logprob: -4.28908109664917
    5. '	break' → logprob: -9.414080619812012
    6. '```' → logprob: -10.539080619812012
    7. 'continue' (adapté à ' continue') → logprob: -10.914080619812012
    8. '_break' → logprob: -12.414080619812012
    9. '-break' → logprob: -13.789080619812012
    10. ' ' → logprob: -13.914080619812012

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008465526043437421
    2. '    
' → logprob: -7.2508463859558105
    3. '       ' → logprob: -9.875846862792969
    4. '        
' → logprob: -10.875846862792969
    5. 'print' → logprob: -11.125846862792969
    6. '    ' → logprob: -11.250846862792969
    7. '```' → logprob: -11.250846862792969
    8. '
' → logprob: -11.750846862792969
    9. '\n' → logprob: -11.875846862792969
    10. '   ' → logprob: -12.750846862792969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.329167369287461e-05
    2. 'print' → logprob: -9.500093460083008
    3. '    
' → logprob: -11.250093460083008
    4. ' print' → logprob: -13.500093460083008
    5. '   ' → logprob: -13.750093460083008
    6. '       ' → logprob: -14.000093460083008
    7. '```' → logprob: -14.000093460083008
    8. '    ' → logprob: -14.250093460083008
    9. 'else' → logprob: -16.125093460083008
    10. '        
' → logprob: -16.250093460083008

Token 20: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953529715538025
    2. 'print' → logprob: -0.6953529715538025
    3. ' print' → logprob: -6.570353031158447
    4. 'data' → logprob: -8.695352554321289
    5. 'try' → logprob: -8.820352554321289
    6. '       ' → logprob: -9.195352554321289
    7. 'process' → logprob: -9.570352554321289
    8. 'result' → logprob: -9.695352554321289
    9. 'import' → logprob: -9.820352554321289
    10. 'tokens' → logprob: -10.445352554321289

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6638887524604797
    2. 'r' → logprob: -1.538888692855835
    3. '=' → logprob: -1.913888692855835
    4. ' ' → logprob: -2.538888692855835
    5. 'rg' → logprob: -3.663888692855835
    6. 'd' → logprob: -5.663888931274414
    7. '.append' → logprob: -6.163888931274414
    8. ',' → logprob: -6.288888931274414
    9. 'dd' → logprob: -6.413888931274414
    10. ' +=' → logprob: -6.538888931274414

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6332334876060486
    2. ' b' → logprob: -0.7582334876060486
    3. '=' → logprob: -8.258233070373535
    4. ' =' → logprob: -8.508233070373535
    5. ' ' → logprob: -9.633233070373535
    6. ' line' → logprob: -9.758233070373535
    7. 'line' → logprob: -10.883233070373535
    8. '=line' → logprob: -11.008233070373535
    9. '=b' → logprob: -12.258233070373535
    10. ',b' → logprob: -13.633233070373535

Token 23: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08969680964946747
    2. '=' → logprob: -2.4646968841552734
    3. ',' → logprob: -7.214696884155273
    4. ' ' → logprob: -11.964696884155273
    5. '<|end|>' → logprob: -12.214696884155273
    6. ' ,' → logprob: -12.464696884155273
    7. ')' → logprob: -12.964696884155273
    8. ' =
' → logprob: -14.464696884155273
    9. '=line' → logprob: -14.464696884155273
    10. '   ' → logprob: -14.464696884155273

Token 24: ' n' (ID: 297)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.23565882444381714
    2. 'c' → logprob: -1.860658884048462
    3. ' =' → logprob: -3.235658884048462
    4. ' line' → logprob: -4.485658645629883
    5. '=' → logprob: -5.985658645629883
    6. '=line' → logprob: -7.235658645629883
    7. ' ' → logprob: -8.360658645629883
    8. 'line' → logprob: -8.735658645629883
    9. ' rest' → logprob: -10.610658645629883
    10. '<|end|>' → logprob: -11.110658645629883

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994910538196564
    2. '=' → logprob: -2.694949150085449
    3. ',' → logprob: -12.06994915008545
    4. ')' → logprob: -12.44494915008545
    5. ' ' → logprob: -13.69494915008545
    6. ' =
' → logprob: -14.44494915008545
    7. '  ' → logprob: -14.56994915008545
    8. '_' → logprob: -15.69494915008545
    9. '   ' → logprob: -15.69494915008545
    10. '.' → logprob: -16.069948196411133

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11775676906108856
    2. 'map' → logprob: -2.4927568435668945
    3. ' line' → logprob: -3.6177568435668945
    4. 'line' → logprob: -6.4927568435668945
    5. '[' → logprob: -11.117756843566895
    6. ' [' → logprob: -11.742756843566895
    7. ' ' → logprob: -11.742756843566895
    8. '[line' → logprob: -11.742756843566895
    9. '(map' → logprob: -12.367756843566895
    10. '	map' → logprob: -13.367756843566895

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04028082266449928
    2. '(' → logprob: -3.290280818939209
    3. '(str' → logprob: -6.290280818939209
    4. '(lambda' → logprob: -7.915280818939209
    5. '(eval' → logprob: -12.665281295776367
    6. '(line' → logprob: -12.665281295776367
    7. 'int' → logprob: -13.165281295776367
    8. '(float' → logprob: -13.415281295776367
    9. '(list' → logprob: -13.415281295776367
    10. '[int' → logprob: -13.665281295776367

Token 28: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.003913714550435543
    2. '(' → logprob: -6.253913879394531
    3. ')' → logprob: -6.253913879394531
    4. ' line' → logprob: -11.128913879394531
    5. ',line' → logprob: -11.378913879394531
    6. '[line' → logprob: -12.253913879394531
    7. '(sys' → logprob: -12.378913879394531
    8. '	line' → logprob: -13.003913879394531
    9. '#line' → logprob: -13.003913879394531
    10. '=line' → logprob: -13.128913879394531

Token 29: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.22569680213928223
    2. ' line' → logprob: -1.6006968021392822
    3. '   ' → logprob: -8.600696563720703
    4. '(line' → logprob: -10.100696563720703
    5. ')' → logprob: -10.850696563720703
    6. '[line' → logprob: -10.850696563720703
    7. '	line' → logprob: -11.225696563720703
    8. '=line' → logprob: -12.725696563720703
    9. ' ' → logprob: -13.475696563720703
    10. '#line' → logprob: -13.975696563720703

Token 30: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03196500986814499
    2. '.split' → logprob: -3.5319650173187256
    3. '.' → logprob: -6.1569647789001465
    4. '.rstrip' → logprob: -9.656965255737305
    5. '.readline' → logprob: -11.031965255737305
    6. ' .' → logprob: -11.656965255737305
    7. ').' → logprob: -12.906965255737305
    8. 'strip' → logprob: -14.281965255737305
    9. ')' → logprob: -14.781965255737305
    10. '().' → logprob: -15.281965255737305

Token 31: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3070286512374878
    2. '())' → logprob: -1.9320286512374878
    3. ')' → logprob: -2.1820287704467773
    4. '()' → logprob: -5.932028770446777
    5. '(','' → logprob: -6.307028770446777
    6. '(' → logprob: -6.557028770446777
    7. '')' → logprob: -7.682028770446777
    8. '))' → logprob: -8.932028770446777
    9. '(',' → logprob: -9.432028770446777
    10. '("' → logprob: -9.932028770446777

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14451384544372559
    2. '\n' → logprob: -3.5195138454437256
    3. '<|end|>' → logprob: -3.5195138454437256
    4. ' ' → logprob: -3.6445138454437256
    5. '    
' → logprob: -4.019514083862305
    6. '
' → logprob: -5.019514083862305
    7. ':' → logprob: -5.144514083862305
    8. ' if' → logprob: -6.019514083862305
    9. '    ' → logprob: -6.269514083862305
    10. ' 
' → logprob: -6.269514083862305

Token 33: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4791686236858368
    2. ' ' → logprob: -2.104168653488159
    3. '    
' → logprob: -3.229168653488159
    4. ' if' → logprob: -3.604168653488159
    5. 'if' → logprob: -3.604168653488159
    6. 'for' → logprob: -3.729168653488159
    7. '    ' → logprob: -3.729168653488159
    8. '[' → logprob: -3.854168653488159
    9. ' 
' → logprob: -4.22916841506958
    10. '<|end|>' → logprob: -4.35416841506958

Token 34: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.598626971244812
    2. '=' → logprob: -1.348626971244812
    3. ' =' → logprob: -1.723626971244812
    4. 't' → logprob: -4.848627090454102
    5. ' ' → logprob: -6.348627090454102
    6. 'u' → logprob: -7.473627090454102
    7. 'o' → logprob: -8.098627090454102
    8. '_' → logprob: -8.348627090454102
    9. 'tep' → logprob: -8.348627090454102
    10. 'ize' → logprob: -9.348627090454102

Token 35: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31263044476509094
    2. '0' → logprob: -2.5626304149627686
    3. ' a' → logprob: -3.0626304149627686
    4. ''a' → logprob: -3.6876304149627686
    5. ' (' → logprob: -3.8126304149627686
    6. '(a' → logprob: -4.062630653381348
    7. ''' → logprob: -4.187630653381348
    8. '''' → logprob: -4.562630653381348
    9. ' ' → logprob: -4.937630653381348
    10. '""' → logprob: -5.187630653381348

Token 36: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3967874348163605
    2. 'str' → logprob: -1.646787405014038
    3. '0' → logprob: -3.146787405014038
    4. '(a' → logprob: -4.146787643432617
    5. '[a' → logprob: -4.146787643432617
    6. 'sum' → logprob: -4.271787643432617
    7. '''' → logprob: -4.396787643432617
    8. 'set' → logprob: -4.771787643432617
    9. ''a' → logprob: -5.021787643432617
    10. '(str' → logprob: -5.646787643432617

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3977174460887909
    2. ' for' → logprob: -1.7727174758911133
    3. '<|end|>' → logprob: -2.1477174758911133
    4. 'for' → logprob: -3.7727174758911133
    5. ' ' → logprob: -4.647717475891113
    6. '    ' → logprob: -5.397717475891113
    7. '<|end|>' → logprob: -6.522717475891113
    8. '  ' → logprob: -7.022717475891113
    9. '\n' → logprob: -7.647717475891113
    10. '	for' → logprob: -8.147717475891113

Token 39: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12891238927841187
    2. ' for' → logprob: -2.1289124488830566
    3. '   ' → logprob: -6.503912448883057
    4. 'i' → logprob: -8.503911972045898
    5. '```' → logprob: -8.878911972045898
    6. ' ' → logprob: -10.628911972045898
    7. '<|end|>' → logprob: -11.253911972045898
    8. 'range' → logprob: -11.253911972045898
    9. ' i' → logprob: -11.378911972045898
    10. '	for' → logprob: -11.628911972045898

Token 40: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.18373414874076843
    2. ' =' → logprob: -2.308734178543091
    3. 'a' → logprob: -3.808734178543091
    4. '=' → logprob: -3.933734178543091
    5. 'e' → logprob: -4.308733940124512
    6. 'aise' → logprob: -5.058733940124512
    7. 'es' → logprob: -7.058733940124512
    8. ' ' → logprob: -7.183733940124512
    9. 'for' → logprob: -7.558733940124512
    10. 'unning' → logprob: -7.683733940124512

Token 41: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7242750525474548
    2. ' a' → logprob: -0.9742750525474548
    3. ' b' → logprob: -3.4742751121520996
    4. '1' → logprob: -3.5992751121520996
    5. 'b' → logprob: -3.7242751121520996
    6. ' n' → logprob: -3.8492751121520996
    7. ' ' → logprob: -4.0992751121521
    8. 'n' → logprob: -4.3492751121521
    9. '0' → logprob: -7.0992751121521
    10. '(a' → logprob: -7.0992751121521

Token 42: ' %' (ID: 1851)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7812163829803467
    2. '+' → logprob: -1.5312163829803467
    3. ' %' → logprob: -1.5312163829803467
    4. '%' → logprob: -2.4062163829803467
    5. ' ' → logprob: -5.281216621398926
    6. ' *' → logprob: -6.281216621398926
    7. '<|end|>' → logprob: -6.281216621398926
    8. ' **' → logprob: -7.031216621398926
    9. ' +=' → logprob: -7.156216621398926
    10. ')' → logprob: -7.156216621398926

Token 43: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007516168989241123
    2. 'n' → logprob: -7.250751495361328
    3. ' b' → logprob: -10.125751495361328
    4. ' ' → logprob: -14.875751495361328
    5. 'm' → logprob: -15.125751495361328
    6. ' n' → logprob: -15.250751495361328
    7. '1' → logprob: -15.625751495361328
    8. '   ' → logprob: -15.875751495361328
    9. 'mod' → logprob: -16.125751495361328
    10. '10' → logprob: -16.625751495361328

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6241884827613831
    2. '<|end|>' → logprob: -0.8741884827613831
    3. '\n' → logprob: -4.374188423156738
    4. '<|end|>' → logprob: -4.499188423156738
    5. '   ' → logprob: -4.749188423156738
    6. ' for' → logprob: -6.124188423156738
    7. '    
' → logprob: -6.249188423156738
    8. '*' → logprob: -6.499188423156738
    9. '+' → logprob: -6.499188423156738
    10. '  
' → logprob: -6.749188423156738

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9774163961410522
    2. 'for' (adapté à ' for') → logprob: -1.3524163961410522
    3. '   ' → logprob: -2.102416515350342
    4. '
' → logprob: -2.852416515350342
    5. '+' → logprob: -3.477416515350342
    6. '\n' → logprob: -3.602416515350342
    7. '<|end|>' → logprob: -3.727416515350342
    8. '**' → logprob: -3.852416515350342
    9. ' ' → logprob: -3.977416515350342
    10. 'n' → logprob: -4.102416515350342

Token 47: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5810412764549255
    2. ' i' → logprob: -0.9560412764549255
    3. '_' → logprob: -2.9560413360595703
    4. 'i' → logprob: -5.70604133605957
    5. ' ' → logprob: -7.33104133605957
    6. '_i' → logprob: -8.58104133605957
    7. ' range' → logprob: -10.58104133605957
    8. ' n' → logprob: -10.95604133605957
    9. ' in' → logprob: -11.33104133605957
    10. ' ' → logprob: -11.95604133605957

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0214270930737257
    2. 'in' → logprob: -4.396427154541016
    3. ' ' → logprob: -5.021427154541016
    4. ' i' → logprob: -7.396427154541016
    5. '_' → logprob: -7.646427154541016
    6. 'n' → logprob: -7.896427154541016
    7. 'i' → logprob: -8.146427154541016
    8. ' _' → logprob: -8.146427154541016
    9. 'range' → logprob: -9.021427154541016
    10. '  ' → logprob: -9.646427154541016

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14276321232318878
    2. ' range' → logprob: -2.017763137817383
    3. ' ' → logprob: -10.892763137817383
    4. '	range' → logprob: -10.892763137817383
    5. '(range' → logprob: -11.392763137817383
    6. '[' → logprob: -11.642763137817383
    7. ' xrange' → logprob: -11.892763137817383
    8. '  ' → logprob: -12.392763137817383
    9. 'ange' → logprob: -12.767763137817383
    10. 'rang' → logprob: -13.017763137817383

Token 50: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003126382827758789
    2. '(' → logprob: -5.87812614440918
    3. 'n' → logprob: -8.50312614440918
    4. ' (' → logprob: -9.62812614440918
    5. ' n' → logprob: -9.87812614440918
    6. '(int' → logprob: -15.00312614440918
    7. '(
' → logprob: -15.12812614440918
    8. ' ' → logprob: -15.50312614440918
    9. '(r' → logprob: -15.75312614440918
    10. '(i' → logprob: -16.12812614440918

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005649559665471315
    2. ' ):' → logprob: -5.630649566650391
    3. '+' → logprob: -7.005649566650391
    4. '):
' → logprob: -7.130649566650391
    5. ')' → logprob: -8.88064956665039
    6. ':' → logprob: -9.38064956665039
    7. '   ' → logprob: -10.13064956665039
    8. '-' → logprob: -10.25564956665039
    9. ',' → logprob: -11.50564956665039
    10. '):
' → logprob: -12.00564956665039

Token 52: '       ' (ID: 309)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5929798483848572
    2. 'r' → logprob: -1.592979907989502
    3. '       ' → logprob: -2.092979907989502
    4. '    ' → logprob: -3.342979907989502
    5. ' ' → logprob: -3.592979907989502
    6. ' s' → logprob: -3.842979907989502
    7. 's' → logprob: -4.092979907989502
    8. '   ' → logprob: -4.217979907989502
    9. '        ' → logprob: -6.592979907989502
    10. ' *' → logprob: -7.217979907989502

Token 53: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2219737023115158
    2. ' r' → logprob: -1.8469736576080322
    3. '   ' → logprob: -4.096973896026611
    4. 's' → logprob: -4.471973896026611
    5. '       ' → logprob: -4.721973896026611
    6. ' s' → logprob: -5.471973896026611
    7. ' ' → logprob: -9.846973419189453
    8. '```' → logprob: -10.346973419189453
    9. '
' → logprob: -10.721973419189453
    10. '<|end|>' → logprob: -10.846973419189453

Token 54: ' *=' (ID: 25253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20887216925621033
    2. '=' → logprob: -2.083872079849243
    3. ' *=' → logprob: -2.958872079849243
    4. '*=' → logprob: -4.958872318267822
    5. ' +=' → logprob: -5.958872318267822
    6. '+=' → logprob: -6.208872318267822
    7. ' ' → logprob: -7.958872318267822
    8. '*' → logprob: -8.958871841430664
    9. ',' → logprob: -10.958871841430664
    10. ' <<=' → logprob: -11.083871841430664

Token 55: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2991617023944855
    2. '10' → logprob: -1.549161672592163
    3. ' a' → logprob: -3.924161672592163
    4. ' ' → logprob: -4.049161911010742
    5. '2' → logprob: -5.299161911010742
    6. 'r' → logprob: -5.674161911010742
    7. ' r' → logprob: -8.549161911010742
    8. '3' → logprob: -9.986661911010742
    9. '	a' → logprob: -10.049161911010742
    10. '_a' → logprob: -10.236661911010742

Token 56: '10' (ID: 702)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2022683024406433
    2. '10' → logprob: -1.702268362045288
    3. ' ' → logprob: -8.452268600463867
    4. 'r' → logprob: -8.577268600463867
    5. ' a' → logprob: -8.702268600463867
    6. '2' → logprob: -8.702268600463867
    7. '3' → logprob: -10.452268600463867
    8. '   ' → logprob: -10.827268600463867
    9. '	a' → logprob: -11.577268600463867
    10. '_a' → logprob: -11.952268600463867

Token 57: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25576263666152954
    2. '   ' → logprob: -1.7557625770568848
    3. '<|end|>' → logprob: -3.2557625770568848
    4. 'r' → logprob: -5.505762577056885
    5. ' ' → logprob: -5.630762577056885
    6. ' r' → logprob: -6.505762577056885
    7. '
' → logprob: -6.755762577056885
    8. '<|end|>' → logprob: -7.505762577056885
    9. '0' → logprob: -7.630762577056885
    10. '+' → logprob: -7.880762577056885

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5124610066413879
    2. '   ' → logprob: -1.6374609470367432
    3. '<|end|>' → logprob: -1.6374609470367432
    4. ' ' → logprob: -6.012461185455322
    5. '
' → logprob: -6.637461185455322
    6. '0' → logprob: -6.762461185455322
    7. '<|end|>' → logprob: -6.762461185455322
    8. 'r' → logprob: -7.012461185455322
    9. '+' → logprob: -7.137461185455322
    10. ',' → logprob: -7.387461185455322

Token 59: ' digit' (ID: 19181)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2912061810493469
    2. ' r' → logprob: -2.416206121444702
    3. '       ' → logprob: -2.416206121444702
    4. 's' → logprob: -3.666206121444702
    5. ' s' → logprob: -3.666206121444702
    6. '   ' → logprob: -3.791206121444702
    7. ' ' → logprob: -9.166206359863281
    8. 'print' → logprob: -10.291206359863281
    9. 'd' → logprob: -10.416206359863281
    10. '    ' → logprob: -10.541206359863281

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029823511838912964
    2. '=' → logprob: -3.5298235416412354
    3. ',' → logprob: -9.904823303222656
    4. 's' → logprob: -11.154823303222656
    5. ' ' → logprob: -11.904823303222656
    6. ' +=' → logprob: -13.654823303222656
    7. ' ,' → logprob: -14.904823303222656
    8. '=int' → logprob: -15.279823303222656
    9. '=s' → logprob: -17.029823303222656
    10. '    ' → logprob: -17.404823303222656

Token 61: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3133437931537628
    2. 'r' → logprob: -1.3133437633514404
    3. ' (' → logprob: -9.93834400177002
    4. '(r' → logprob: -10.56334400177002
    5. ' ' → logprob: -12.93834400177002
    6. 'int' → logprob: -13.18834400177002
    7. '	r' → logprob: -14.43834400177002
    8. ' ' → logprob: -14.56334400177002
    9. '   ' → logprob: -14.81334400177002
    10. '       ' → logprob: -14.81334400177002

Token 62: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.25197190046310425
    2. ' //' → logprob: -1.501971960067749
    3. '//=' → logprob: -10.626972198486328
    4. ' ' → logprob: -12.501972198486328
    5. '%' → logprob: -12.501972198486328
    6. 'div' → logprob: -13.001972198486328
    7. ' ' → logprob: -13.126972198486328
    8. '`' → logprob: -13.626972198486328
    9. '//
' → logprob: -13.876972198486328
    10. ' 
' → logprob: -14.251972198486328

Token 63: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. ' ' → logprob: -19.000911712646484
    4. '>b' → logprob: -19.125911712646484
    5. '%b' → logprob: -20.000911712646484
    6. '	b' → logprob: -20.125911712646484
    7. '   ' → logprob: -20.375911712646484
    8. ')b' → logprob: -20.500911712646484
    9. '*b' → logprob: -21.500911712646484
    10. '$b' → logprob: -22.125911712646484

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15995211899280548
    2. '       ' → logprob: -2.034952163696289
    3. '<|end|>' → logprob: -4.659952163696289
    4. 'r' → logprob: -5.909952163696289
    5. ' 
' → logprob: -7.034952163696289
    6. ' r' → logprob: -7.159952163696289
    7. '        
' → logprob: -7.159952163696289
    8. '```' → logprob: -7.409952163696289
    9. '
' → logprob: -7.534952163696289
    10. 's' → logprob: -8.409952163696289

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18101367354393005
    2. 's' → logprob: -2.431013584136963
    3. ' s' → logprob: -3.806013584136963
    4. 'r' → logprob: -3.931013584136963
    5. ' r' → logprob: -4.181013584136963
    6. '   ' → logprob: -4.306013584136963
    7. '<|end|>' → logprob: -5.306013584136963
    8. ' ' → logprob: -6.681013584136963
    9. '```' → logprob: -8.931014060974121
    10. '    ' → logprob: -9.181014060974121

Token 66: ' r' (ID: 428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3985119163990021
    2. ' s' → logprob: -1.2735118865966797
    3. 'r' (adapté à ' r') → logprob: -3.3985118865966797
    4. ' r' → logprob: -4.39851188659668
    5. ' ' → logprob: -6.02351188659668
    6. '       ' → logprob: -8.27351188659668
    7. '<|end|>' → logprob: -8.77351188659668
    8. ' 
' → logprob: -9.39851188659668
    9. '    ' → logprob: -9.77351188659668
    10. '   ' → logprob: -9.89851188659668

Token 67: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.3173263967037201
    2. '=' → logprob: -1.3173264265060425
    3. ' %=' → logprob: -5.567326545715332
    4. '%' → logprob: -8.442326545715332
    5. ' =' → logprob: -10.942326545715332
    6. '=%' → logprob: -13.567326545715332
    7. '-=' → logprob: -14.192326545715332
    8. '.=' → logprob: -15.692326545715332
    9. '＝' → logprob: -16.067325592041016
    10. '=

' → logprob: -16.317325592041016

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.751171112060547
    4. '	b' → logprob: -18.126171112060547
    5. '   ' → logprob: -18.751171112060547
    6. '  ' → logprob: -20.126171112060547
    7. '       ' → logprob: -20.376171112060547
    8. '    ' → logprob: -20.751171112060547
    9. ')b' → logprob: -21.626171112060547
    10. '10' → logprob: -21.876171112060547

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10416296869516373
    2. 's' → logprob: -2.6041629314422607
    3. '   ' → logprob: -4.10416316986084
    4. '
' → logprob: -5.60416316986084
    5. ' s' → logprob: -5.72916316986084
    6. '        
' → logprob: -8.35416316986084
    7. ' ' → logprob: -8.35416316986084
    8. '      ' → logprob: -8.97916316986084
    9. '```' → logprob: -8.97916316986084
    10. '+' → logprob: -9.10416316986084

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0739494115114212
    2. 's' → logprob: -2.9489493370056152
    3. '   ' → logprob: -4.073949337005615
    4. ' s' → logprob: -6.448949337005615
    5. ' ' → logprob: -9.698949813842773
    6. '    ' → logprob: -9.948949813842773
    7. '
' → logprob: -10.198949813842773
    8. '```' → logprob: -10.448949813842773
    9. '        
' → logprob: -10.448949813842773
    10. '  ' → logprob: -10.573949813842773

Token 71: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.2520056366920471
    2. ' s' → logprob: -1.5020055770874023
    3. '   ' → logprob: -9.627005577087402
    4. ' ' → logprob: -12.502005577087402
    5. '       ' → logprob: -12.502005577087402
    6. '```' → logprob: -13.627005577087402
    7. '  ' → logprob: -14.377005577087402
    8. '+' → logprob: -15.127005577087402
    9. '`s' → logprob: -15.502005577087402
    10. '    ' → logprob: -15.502005577087402

Token 72: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20217004418373108
    2. ' +=' → logprob: -1.7021700143814087
    3. '+' → logprob: -7.202169895172119
    4. '=' → logprob: -11.952170372009277
    5. '+=(' → logprob: -13.202170372009277
    6. ' +' → logprob: -13.952170372009277
    7. '+='' → logprob: -13.952170372009277
    8. '+="' → logprob: -14.077170372009277
    9. ']+=' → logprob: -14.952170372009277
    10. '++' → logprob: -15.827170372009277

Token 73: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.005930101033300161
    2. ' digit' → logprob: -5.130929946899414
    3. ' ' → logprob: -15.380929946899414
    4. 'digits' → logprob: -15.380929946899414
    5. 'digital' → logprob: -15.630929946899414
    6. '-digit' → logprob: -15.755929946899414
    7. 'int' → logprob: -15.755929946899414
    8. 'd' → logprob: -16.005929946899414
    9. 'dig' → logprob: -16.505929946899414
    10. 'igit' → logprob: -16.880929946899414

Token 74: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12876945734024048
    2. '
' → logprob: -2.2537693977355957
    3. ' print' → logprob: -4.878769397735596
    4. '   ' → logprob: -5.003769397735596
    5. '    
' → logprob: -7.628769397735596
    6. '\n' → logprob: -8.003769874572754
    7. '%' → logprob: -8.753769874572754
    8. '
' → logprob: -9.003769874572754
    9. ' 
' → logprob: -9.378769874572754
    10. '  
' → logprob: -9.628769874572754

Token 75: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012863474898040295
    2. '   ' → logprob: -5.012863636016846
    3. ' print' → logprob: -5.887863636016846
    4. '\n' → logprob: -6.512863636016846
    5. '<|end|>' → logprob: -6.887863636016846
    6. '
' → logprob: -8.262863159179688
    7. ')' → logprob: -8.387863159179688
    8. ' ' → logprob: -9.262863159179688
    9. '    
' → logprob: -9.512863159179688
    10. '+' → logprob: -10.512863159179688

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.048873141407966614
    2. ' print' → logprob: -3.04887318611145
    3. '   ' → logprob: -8.173872947692871
    4. '\n' → logprob: -13.923872947692871
    5. '
' → logprob: -14.423872947692871
    6. '	print' → logprob: -14.548872947692871
    7. ' ' → logprob: -14.798872947692871
    8. '```' → logprob: -14.798872947692871
    9. ' 
' → logprob: -14.923872947692871
    10. '.print' → logprob: -15.423872947692871

Token 77: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02338547073304653
    2. '(' → logprob: -3.773385524749756
    3. 's' → logprob: -9.898385047912598
    4. '()' → logprob: -10.148385047912598
    5. '('' → logprob: -10.773385047912598
    6. '(f' → logprob: -11.398385047912598
    7. '((' → logprob: -12.148385047912598
    8. '(a' → logprob: -13.023385047912598
    9. ' (' → logprob: -13.148385047912598
    10. '(r' → logprob: -13.148385047912598

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -15.000003814697266
    4. ')
' → logprob: -15.375003814697266
    5. ')`' → logprob: -15.875003814697266
    6. '+' → logprob: -17.250003814697266
    7. '`)' → logprob: -18.250003814697266
    8. '')' → logprob: -18.875003814697266
    9. ')}' → logprob: -19.000003814697266
    10. '(' → logprob: -19.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 31.58%
Précision adaptée (1ère position): 35.53%
Précision (top 10): 84.21%
================================================================================
