================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

# Lecture des données initiales
N, Q, S, T = map(int, input().split())
A = [int(input()) for _ in range(N + 1)]

# La température change dépend uniquement des pentes entre A[i] et A[i+1]
# Initialement, la température à Spot 0 est 0
# Delta T entre Spot i et Spot i+1 :
#   Si A[i] < A[i+1] => temperature diminue de S*(A[i+1]-A[i])
#   Sinon => temperature augmente de T*(A[i]-A[i+1])

# Calculer initialement la somme de température à Spot N
# On somme les changements de température entre chaque paire (i,i+1)
temp_sum = 0
for i in range(N):
    diff = A[i+1] - A[i]
    if diff > 0:
        temp_sum -= S * diff
    else:
        temp_sum += T * (-diff)

# Pour chaque opération, on modifie certains A[k] avec X_j (additif)
# L'altitude change de X_j pour tous les k in [L_j,R_j]
# Il faut mettre à jour la température en tenant compte uniquement des bords de l'intervalle car
# les pentes internes de l'intervalle sont inchangées (tout est augmenté du même montant)

# Ainsi seules les pentes aux positions L_j-1 et R_j peuvent être affectées :
# - arête à gauche : entre L_j-1 et L_j (si L_j > 1)
# - arête à droite : entre R_j et R_j+1 (si R_j < N)

# On applique donc les changements uniquement sur ces 0, 1 ou 2 pentes

# Fonction pour calculer la contribution à la température entre i et i+1
def edge_contrib(a_i, a_next):
    diff = a_next - a_i
    if diff > 0:
        return -S * diff
    else:
        return T * (-diff)

for _ in range(Q):
    L, R, X = map(int, input().split())

    # Mise à jour des bords affectés
    # Avant modification, on retire la contribution des 2 arêtes possibles

    # Arête à gauche (L-1, L)
    if L > 1:
        temp_sum -= edge_contrib(A[L - 2], A[L - 1])

    # Arête à droite (R, R+1)
    if R < N:
        temp_sum -= edge_contrib(A[R - 1], A[R])

    # On applique la modification aux altitudes de L à R
    # Pour éviter une boucle coûteuse, on met à jour les altitudes directement
    # Cela peut être optimisé avec segment tree mais pas obligatoire ici
    # Néanmoins la contrainte est grande, il faut une solution O(Q) ou O(Q log N) => 
    # Pour cela on ne modifie pas tout A[L:R+1] mais on garde en mémoire un delta et on applique le delta avec une structure
    # Comme la solution en temps réel peut être coûteuse, on utilise un tableau de décalage (lazy propagation concept)
    # mais ici, on a la contrainte que les altitudes sont directement lus (ne pas faire lazy)
    # La seule façon est de stocker les altitudes, mais ici on va faire une approche différente

    # Approche alternative:
    # On garde les altitudes dans un tableau, on applique la modification à un buffer de décalage
    # Prendre en compte décalages de chaque position avec un tableau de taille N+1 en utilisant une fenwick ou segment tree
    #
    # Mais on a besoin uniquement d'altitudes à L-1, L, R, R+1 car seules 2 arêtes sont affectées
    # Donc on garde un tableau de décalages + les altitudes initiales pour récupérer les altitudes uniquement nécessaires
    #
    # On va gérer un tableau delta de décalages de rang N+1 initialisé à 0
    # Après chaque query, on met delta[L], delta[R+1] pour faire difference prefix sum (Imos method)
    # Puis on calcule valeurs pour L-1, L, R, R+1 en calculant la somme prefix

    # Initialisation du tableau delta si premier tour:
    # On crée delta avec 0

    # On commence par ça : (hors boucle)

# Init delta [0]*(N+2) pour la méthode Imos
delta = [0] * (N + 2)

# Fonction pour avoir altitude actuelle à l'indice i: A[i] + sum delta[1..i]
def get_alt(i):
    # préfixe de delta jusqu'à i inclus
    # On va construire un tableau prefix sum pour delta en dehors de la boucle Q, 
    # mais ici on fait linéaire par query car max Q=200000 donc linéaire Q*4 ok
    # On optimise la somme prefix delta effectivement

    # On peut créer un prefix sum delta avant les queries mais on modifie delta à chaque query
    # On calcule la somme prefix delta à part sur les indices nécessaires

    # Ici on doit faire au maximum 4 calcule de delta prefix par query
    # On utilise une fonction auxiliaire:

    s = 0
    for j in range(i):
        s += delta[j+1]
    return A[i] + s

# mais la fonction ci-dessus en O(N) pour chaque call est trop lente.
# On doit garder un prefix_delta et le mettre à jour à chaque query.
# Problème : on modifie delta[L] += X et delta[R+1] -= X
# On peut avoir un prefix_delta corrompu après chaque modification.
# Donc, on garde un tableau prefix_delta à jour en faisant delta comme Fenwick ou segment tree.
# Comme on fait Q updates et Q queries, Fenwick tree est adapté.

class Fenwick:
    def __init__(self, n):
        self.n = n
        self.bit = [0]*(n+1)
    def add(self, i, x):
        while i <= self.n:
            self.bit[i] += x
            i += i & (-i)
    def sum(self, i):
        s = 0
        while i > 0:
            s += self.bit[i]
            i -= i & (-i)
        return s
    def range_add(self, l, r, x):
        self.add(l, x)
        self.add(r+1, -x)
    def get(self, i):
        return self.sum(i)

fenw = Fenwick(N+1)

for _ in range(Q):
    L, R, X = map(int, input().split())

    # Retirer anciennes contributions
    if L > 1:
        a_left = A[L-2] + fenw.get(L-1)
        a_right = A[L-1] + fenw.get(L)
        temp_sum -= edge_contrib(a_left, a_right)
    if R < N:
        a_left = A[R-1] + fenw.get(R)
        a_right = A[R] + fenw.get(R+1)
        temp_sum -= edge_contrib(a_left, a_right)

    # Appliquer modification dans fenw
    fenw.range_add(L, R, X)

    # Ajouter nouvelles contributions
    if L > 1:
        a_left = A[L-2] + fenw.get(L-1)
        a_right = A[L-1] + fenw.get(L)
        temp_sum += edge_contrib(a_left, a_right)
    if R < N:
        a_left = A[R-1] + fenw.get(R)
        a_right = A[R] + fenw.get(R+1)
        temp_sum += edge_contrib(a_left, a_right)

    print(temp_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005429040757007897
    2. '.' → logprob: -8.375542640686035
    3. '()' → logprob: -8.875542640686035
    4. ' (' → logprob: -9.375542640686035
    5. '('' → logprob: -10.500542640686035
    6. '(
' → logprob: -11.000542640686035
    7. ')' → logprob: -11.625542640686035
    8. '```' → logprob: -12.375542640686035
    9. ''' → logprob: -12.500542640686035
    10. '_' → logprob: -12.625542640686035

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00685567781329155
    2. 'sys' → logprob: -5.006855487823486
    3. ' input' → logprob: -9.006855964660645
    4. 'input' → logprob: -11.631855964660645
    5. '	sys' → logprob: -12.381855964660645
    6. ' ' → logprob: -13.256855964660645
    7. '=sys' → logprob: -13.381855964660645
    8. '(sys' → logprob: -14.006855964660645
    9. ' system' → logprob: -14.881855964660645
    10. ' lambda' → logprob: -16.381855010986328

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00026860725483857095
    2. '.readline' → logprob: -9.375268936157227
    3. ' .' → logprob: -10.375268936157227
    4. '[' → logprob: -10.500268936157227
    5. '.stdin' → logprob: -10.625268936157227
    6. '.import' → logprob: -10.750268936157227
    7. '.
' → logprob: -11.375268936157227
    8. '.setdefault' → logprob: -11.750268936157227
    9. '.`' → logprob: -12.000268936157227
    10. '.get' → logprob: -12.125268936157227

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019614169374108315
    2. '.read' → logprob: -4.519614219665527
    3. '.' → logprob: -4.769614219665527
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.519614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11948300898075104
    2. '(' → logprob: -2.36948299407959
    3. '()
' → logprob: -4.74448299407959
    4. '(
' → logprob: -5.74448299407959
    5. '().' → logprob: -5.86948299407959
    6. '
' → logprob: -5.86948299407959
    7. '\n' → logprob: -7.86948299407959
    8. '()\' → logprob: -7.86948299407959
    9. '()

' → logprob: -8.61948299407959
    10. '\' → logprob: -8.99448299407959

Token 9: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35041964054107666
    2. ' ' → logprob: -2.100419521331787
    3. ' n' → logprob: -2.350419521331787
    4. 'def' → logprob: -3.850419521331787
    5. 't' → logprob: -4.100419521331787
    6. 's' → logprob: -4.850419521331787
    7. 'print' → logprob: -5.100419521331787
    8. '#' → logprob: -5.225419521331787
    9. 'data' → logprob: -5.350419521331787
    10. 'a' → logprob: -5.350419521331787

Token 11: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33175626397132874
    2. ' ' → logprob: -1.8317562341690063
    3. '_' → logprob: -3.206756353378296
    4. ':' → logprob: -3.831756353378296
    5. ' =' → logprob: -4.206756114959717
    6. '(' → logprob: -4.581756114959717
    7. '=' → logprob: -5.206756114959717
    8. '#' → logprob: -5.206756114959717
    9. ''s' → logprob: -5.331756114959717
    10. '()' → logprob: -5.581756114959717

Token 12: ' données' (ID: 30580)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1964433491230011
    2. '(' → logprob: -2.0714433193206787
    3. ' ' → logprob: -3.5714433193206787
    4. 'l' → logprob: -5.196443557739258
    5. ' ()' → logprob: -5.196443557739258
    6. 's' → logprob: -5.446443557739258
    7. ' la' → logprob: -5.696443557739258
    8. '('' → logprob: -7.071443557739258
    9. ' l' → logprob: -7.571443557739258
    10. ' (' → logprob: -7.696443557739258

Token 13: ' initial' (ID: 4871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38996371626853943
    2. 's' → logprob: -1.8899637460708618
    3. '()' → logprob: -2.6399636268615723
    4. '(n' → logprob: -2.8899636268615723
    5. 'n' → logprob: -4.139963626861572
    6. '\n' → logprob: -4.764963626861572
    7. 'data' → logprob: -5.639963626861572
    8. ')' → logprob: -5.764963626861572
    9. '(
' → logprob: -6.014963626861572
    10. '[' → logprob: -6.264963626861572

Token 14: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.006977736949920654
    2. 'e' → logprob: -5.506977558135986
    3. 's' → logprob: -6.006977558135986
    4. ' ' → logprob: -8.131978034973145
    5. 'ales' → logprob: -9.631978034973145
    6. ' es' → logprob: -10.881978034973145
    7. ':' → logprob: -11.256978034973145
    8. '_' → logprob: -11.756978034973145
    9. ',' → logprob: -12.506978034973145
    10. ''s' → logprob: -12.756978034973145

Token 15: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034024160355329514
    2. 's' → logprob: -4.159024238586426
    3. '(n' → logprob: -5.034024238586426
    4. '\n' → logprob: -5.659024238586426
    5. 'nombre' → logprob: -6.284024238586426
    6. 'nb' → logprob: -7.034024238586426
    7. 'a' → logprob: -7.159024238586426
    8. '(' → logprob: -7.534024238586426
    9. 'd' → logprob: -7.909024238586426
    10. 'num' → logprob: -7.909024238586426

Token 16: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0023808805271983147
    2. 'N' → logprob: -6.752380847930908
    3. 'nombre' → logprob: -7.377380847930908
    4. 'nb' → logprob: -8.252381324768066
    5. 'num' → logprob: -9.502381324768066
    6. 'number' → logprob: -10.377381324768066
    7. 'nbr' → logprob: -10.377381324768066
    8. '(n' → logprob: -10.627381324768066
    9. 'a' → logprob: -10.627381324768066
    10. 's' → logprob: -10.752381324768066

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0470846891403198
    2. ',' → logprob: -1.2970846891403198
    3. ' ,' → logprob: -1.2970846891403198
    4. ' ' → logprob: -2.2970848083496094
    5. '=' → logprob: -6.672084808349609
    6. '  ' → logprob: -8.17208480834961
    7. ' )' → logprob: -9.29708480834961
    8. '=int' → logprob: -10.17208480834961
    9. '_' → logprob: -10.29708480834961
    10. ')' → logprob: -10.29708480834961

Token 18: ' Q' (ID: 1486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7515685558319092
    2. ' M' → logprob: -0.7515685558319092
    3. ' K' → logprob: -3.126568555831909
    4. 'M' → logprob: -5.001568794250488
    5. ' T' → logprob: -6.126568794250488
    6. 'K' → logprob: -7.126568794250488
    7. ' input' → logprob: -7.501568794250488
    8. 'space' → logprob: -7.626568794250488
    9. 'input' → logprob: -7.751568794250488
    10. '  ' → logprob: -8.001568794250488

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698763608932495
    2. '=' → logprob: -2.1269876956939697
    3. ',' → logprob: -9.87698745727539
    4. ' ' → logprob: -12.50198745727539
    5. '=input' → logprob: -13.00198745727539
    6. ' =
' → logprob: -14.12698745727539
    7. '=int' → logprob: -14.62698745727539
    8. ')' → logprob: -15.12698745727539
    9. ' ,' → logprob: -15.12698745727539
    10. '=

' → logprob: -16.37698745727539

Token 20: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3462428152561188
    2. '=' → logprob: -1.4712427854537964
    3. ' ' → logprob: -3.096242904663086
    4. ' M' → logprob: -4.971242904663086
    5. ' K' → logprob: -5.596242904663086
    6. 'M' → logprob: -6.096242904663086
    7. 'K' → logprob: -6.096242904663086
    8. 'T' → logprob: -8.596242904663086
    9. ' T' → logprob: -8.596242904663086
    10. 'D' → logprob: -8.596242904663086

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25296348333358765
    2. '=' → logprob: -1.5029635429382324
    3. ',' → logprob: -7.002963542938232
    4. ' ' → logprob: -9.752963066101074
    5. '=input' → logprob: -9.752963066101074
    6. '=int' → logprob: -13.002963066101074
    7. '=sys' → logprob: -13.377963066101074
    8. ' ' → logprob: -14.127963066101074
    9. '  ' → logprob: -14.502963066101074
    10. ')' → logprob: -15.002963066101074

Token 22: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -1.270835280418396
    2. 'T' → logprob: -1.895835280418396
    3. ' M' → logprob: -2.2708353996276855
    4. ' =' → logprob: -2.5208353996276855
    5. ' D' → logprob: -2.7708353996276855
    6. 'D' → logprob: -3.1458353996276855
    7. ' K' → logprob: -3.2708353996276855
    8. '=' → logprob: -3.5208353996276855
    9. 'M' → logprob: -3.5208353996276855
    10. 'K' → logprob: -3.8958353996276855

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133655786514282
    2. '=' → logprob: -1.3133655786514282
    3. ',' → logprob: -9.438365936279297
    4. '=input' → logprob: -11.188365936279297
    5. ' ' → logprob: -11.813365936279297
    6. '=int' → logprob: -14.563365936279297
    7. '  ' → logprob: -14.688365936279297
    8. '=sys' → logprob: -15.438365936279297
    9. '```' → logprob: -15.563365936279297
    10. ')' → logprob: -15.688365936279297

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.003707442432641983
    2. ' input' → logprob: -6.128707408905029
    3. 'map' → logprob: -6.503707408905029
    4. 'input' → logprob: -10.878707885742188
    5. ' ' → logprob: -12.628707885742188
    6. ' list' → logprob: -14.753707885742188
    7. ' ' → logprob: -15.753707885742188
    8. ' sys' → logprob: -15.753707885742188
    9. '	map' → logprob: -15.878707885742188
    10. ' ma' → logprob: -16.503707885742188

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07975257188081741
    2. '(' → logprob: -2.5797526836395264
    3. '(str' → logprob: -7.329752445220947
    4. '(input' → logprob: -8.704752922058105
    5. '(lambda' → logprob: -10.704752922058105
    6. '(list' → logprob: -12.329752922058105
    7. '(eval' → logprob: -12.454752922058105
    8. '(
' → logprob: -12.579752922058105
    9. 'int' → logprob: -12.954752922058105
    10. '(tuple' → logprob: -13.954752922058105

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.821578860282898
    2. '(input' → logprob: -0.821578860282898
    3. ',input' → logprob: -2.8215789794921875
    4. '(' → logprob: -3.0715789794921875
    5. ')' → logprob: -4.6965789794921875
    6. '(sys' → logprob: -5.4465789794921875
    7. 'input' → logprob: -7.0715789794921875
    8. ')(' → logprob: -8.696578979492188
    9. '),' → logprob: -9.946578979492188
    10. '(stdin' → logprob: -10.946578979492188

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38688895106315613
    2. 'input' → logprob: -1.1368889808654785
    3. ')' → logprob: -12.13688850402832
    4. 'sys' → logprob: -12.13688850402832
    5. ' sys' → logprob: -12.26188850402832
    6. '(input' → logprob: -14.51188850402832
    7. ',input' → logprob: -14.63688850402832
    8. ' )' → logprob: -14.76188850402832
    9. ' ' → logprob: -14.76188850402832
    10. '=input' → logprob: -15.63688850402832

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006310084834694862
    2. '()' → logprob: -5.131309986114502
    3. '())' → logprob: -7.881309986114502
    4. '(' → logprob: -13.88131046295166
    5. ' ().' → logprob: -14.00631046295166
    6. ')' → logprob: -14.25631046295166
    7. '()))' → logprob: -15.38131046295166
    8. '()
' → logprob: -15.50631046295166
    9. '());' → logprob: -16.006309509277344
    10. ' ()' → logprob: -16.381309509277344

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.315083384513855
    2. 'strip' → logprob: -1.315083384513855
    3. 'rstrip' → logprob: -6.3150835037231445
    4. ')' → logprob: -12.190083503723145
    5. 'read' → logprob: -12.815083503723145
    6. ' split' → logprob: -13.315083503723145
    7. '(split' → logprob: -14.440083503723145
    8. ' strip' → logprob: -14.565083503723145
    9. 'decode' → logprob: -15.565083503723145
    10. 'str' → logprob: -16.190082550048828

Token 30: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026283347979187965
    2. '())' → logprob: -6.627628326416016
    3. '))' → logprob: -6.752628326416016
    4. '()' → logprob: -9.002628326416016
    5. '`)' → logprob: -13.002628326416016
    6. '(' → logprob: -13.002628326416016
    7. ')`' → logprob: -13.502628326416016
    8. ')))' → logprob: -13.752628326416016
    9. '),' → logprob: -14.002628326416016
    10. '()))' → logprob: -14.502628326416016

Token 31: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030764086171984673
    2. '\n' → logprob: -4.780764102935791
    3. 'data' → logprob: -4.905764102935791
    4. ')' → logprob: -5.655764102935791
    5. '
' → logprob: -5.905764102935791
    6. ' 
' → logprob: -6.030764102935791
    7. '' → logprob: -6.780764102935791
    8. '#' → logprob: -6.905764102935791
    9. 'graph' → logprob: -7.030764102935791
    10. 'a' → logprob: -8.280763626098633

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2941359579563141
    2. '[' → logprob: -1.6691359281539917
    3. '=' → logprob: -3.1691360473632812
    4. ',' → logprob: -4.669136047363281
    5. ' ' → logprob: -5.419136047363281
    6. '.' → logprob: -5.794136047363281
    7. '_' → logprob: -5.794136047363281
    8. '[:]' → logprob: -6.419136047363281
    9. ')' → logprob: -7.044136047363281
    10. '[]' → logprob: -7.419136047363281

Token 33: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6940245628356934
    2. 'list' → logprob: -0.6940245628356934
    3. '[' → logprob: -7.819024562835693
    4. ' [' → logprob: -8.569025039672852
    5. '[]' → logprob: -8.819025039672852
    6. '[list' → logprob: -9.444025039672852
    7. ' []' → logprob: -9.819025039672852
    8. '[int' → logprob: -14.069025039672852
    9. 'map' → logprob: -14.569025039672852
    10. ' ' → logprob: -14.944025039672852

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028948707040399313
    2. '0' → logprob: -6.252894878387451
    3. ' int' → logprob: -7.627894878387451
    4. ']int' → logprob: -8.252894401550293
    5. '*' → logprob: -9.252894401550293
    6. ']' → logprob: -9.502894401550293
    7. '(int' → logprob: -10.627894401550293
    8. '1' → logprob: -12.752894401550293
    9. ']*' → logprob: -12.877894401550293
    10. '-' → logprob: -13.127894401550293

Token 35: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00804260652512312
    2. '(input' → logprob: -5.383042812347412
    3. '(x' → logprob: -5.758042812347412
    4. '()' → logprob: -9.508042335510254
    5. '(i' → logprob: -9.508042335510254
    6. '(
' → logprob: -10.008042335510254
    7. '(

' → logprob: -10.133042335510254
    8. '(a' → logprob: -11.383042335510254
    9. ']' → logprob: -12.633042335510254
    10. '()]' → logprob: -13.008042335510254

Token 36: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00017243190086446702
    2. '()' → logprob: -9.12517261505127
    3. '().' → logprob: -10.25017261505127
    4. '()]' → logprob: -11.37517261505127
    5. '())
' → logprob: -11.62517261505127
    6. '()),' → logprob: -13.00017261505127
    7. '()))' → logprob: -13.50017261505127
    8. ')' → logprob: -13.87517261505127
    9. ' ())' → logprob: -14.00017261505127
    10. '()
' → logprob: -14.25017261505127

Token 37: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002766240620985627
    2. '()]' → logprob: -6.127766132354736
    3. '())' → logprob: -7.502766132354736
    4. '(' → logprob: -11.127766609191895
    5. ' ()' → logprob: -12.127766609191895
    6. '().' → logprob: -12.502766609191895
    7. ')' → logprob: -13.627766609191895
    8. '()[' → logprob: -14.502766609191895
    9. '()
' → logprob: -14.627766609191895
    10. '(),' → logprob: -14.877766609191895

Token 38: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10453508794307709
    2. ' _' → logprob: -2.3545351028442383
    3. ' range' → logprob: -6.104535102844238
    4. ' ' → logprob: -6.354535102844238
    5. ' i' → logprob: -8.729535102844238
    6. '(' → logprob: -9.229535102844238
    7. ' in' → logprob: -9.979535102844238
    8. ' ' → logprob: -11.354535102844238
    9. 'range' → logprob: -11.979535102844238
    10. '_range' → logprob: -11.979535102844238

Token 39: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4328916072845459
    2. ' in' → logprob: -1.432891607284546
    3. ' range' → logprob: -2.307891607284546
    4. 'in' → logprob: -5.432891845703125
    5. '()' → logprob: -5.557891845703125
    6. '(range' → logprob: -6.182891845703125
    7. '(' → logprob: -6.557891845703125
    8. '	range' → logprob: -7.182891845703125
    9. ' ' → logprob: -8.057891845703125
    10. '_' → logprob: -8.557891845703125

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197597458958626
    2. ' range' → logprob: -2.8119759559631348
    3. ' ' → logprob: -12.311976432800293
    4. '	range' → logprob: -13.311976432800293
    5. 'rang' → logprob: -13.936976432800293
    6. '  ' → logprob: -14.686976432800293
    7. '(range' → logprob: -14.686976432800293
    8. '   ' → logprob: -16.061975479125977
    9. 'r' → logprob: -16.436975479125977
    10. 'ran' → logprob: -17.186975479125977

Token 41: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007383962511084974
    2. '(' → logprob: -7.250738620758057
    3. '(Q' → logprob: -11.000738143920898
    4. ' (' → logprob: -12.250738143920898
    5. 'N' → logprob: -12.250738143920898
    6. '(n' → logprob: -14.375738143920898
    7. '(S' → logprob: -14.875738143920898
    8. '(
' → logprob: -15.250738143920898
    9. 'Q' → logprob: -15.875738143920898
    10. '(A' → logprob: -16.0007381439209

Token 42: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0010094691533595324
    2. ']' → logprob: -7.001009464263916
    3. ')' → logprob: -9.251009941101074
    4. '])]' → logprob: -14.251009941101074
    5. ')]
' → logprob: -15.376009941101074
    6. ' )' → logprob: -15.376009941101074
    7. '])' → logprob: -15.501009941101074
    8. '')]' → logprob: -15.751009941101074
    9. ')])' → logprob: -16.001008987426758
    10. ' ]' → logprob: -16.501008987426758

Token 43: ' ' (ID: 220)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4825093448162079
    2. ' Q' → logprob: -1.2325093746185303
    3. '1' → logprob: -2.4825093746185303
    4. ' ' → logprob: -4.982509136199951
    5. '2' → logprob: -7.482509136199951
    6. '4' → logprob: -9.60750961303711
    7. '0' → logprob: -10.35750961303711
    8. 'T' → logprob: -10.73250961303711
    9. '	Q' → logprob: -10.85750961303711
    10. ' T' → logprob: -10.85750961303711

Token 44: '1' (ID: 16)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.04458014667034149
    2. '1' → logprob: -3.1695802211761475
    3. ' Q' → logprob: -7.044579982757568
    4. '2' → logprob: -7.669579982757568
    5. ' ' → logprob: -9.294580459594727
    6. 'T' → logprob: -10.419580459594727
    7. '4' → logprob: -10.669580459594727
    8. '0' → logprob: -10.794580459594727
    9. ')' → logprob: -11.044580459594727
    10. '5' → logprob: -11.419580459594727

Token 45: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10037682950496674
    2. ']' → logprob: -2.350376844406128
    3. ')' → logprob: -9.475377082824707
    4. '])]' → logprob: -9.725377082824707
    5. '])' → logprob: -11.100377082824707
    6. '`]' → logprob: -12.475377082824707
    7. ' ]' → logprob: -12.600377082824707
    8. '')]' → logprob: -12.975377082824707
    9. '()]' → logprob: -13.100377082824707
    10. ')])' → logprob: -13.100377082824707

Token 46: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09280642867088318
    2. ')' → logprob: -3.217806339263916
    3. '#' → logprob: -3.967806339263916
    4. '
' → logprob: -4.842806339263916
    5. ']' → logprob: -5.467806339263916
    6. '[' → logprob: -5.842806339263916
    7. '\n' → logprob: -5.967806339263916
    8. '' → logprob: -6.342806339263916
    9. '<|end|>' → logprob: -6.342806339263916
    10. '```' → logprob: -6.342806339263916

Token 47: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8200352191925049
    2. 'dp' → logprob: -1.6950352191925049
    3. 'for' → logprob: -2.820035219192505
    4. 'queries' → logprob: -3.070035219192505
    5. ' queries' → logprob: -3.195035219192505
    6. 'def' → logprob: -3.195035219192505
    7. 'Q' → logprob: -3.445035219192505
    8. ' for' → logprob: -3.695035219192505
    9. 'A' → logprob: -4.445034980773926
    10. 'result' → logprob: -4.570034980773926

Token 48: ' température' (ID: 78610)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.0444304943084717
    2. ' ' → logprob: -1.5444304943084717
    3. 's' → logprob: -1.7944304943084717
    4. '#' → logprob: -1.9194304943084717
    5. '_' → logprob: -3.9194304943084717
    6. ' s' → logprob: -4.419430732727051
    7. ' d' → logprob: -4.419430732727051
    8. ' question' → logprob: -4.419430732727051
    9. ' i' → logprob: -4.669430732727051
    10. ' description' → logprob: -4.794430732727051

Token 49: ' change' (ID: 3343)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7176429629325867
    2. 's' → logprob: -0.8426429629325867
    3. '=' → logprob: -3.2176430225372314
    4. '_' → logprob: -4.092642784118652
    5. ' ' → logprob: -4.842642784118652
    6. '[' → logprob: -4.842642784118652
    7. '_s' → logprob: -6.342642784118652
    8. '[]' → logprob: -6.967642784118652
    9. '.' → logprob: -7.092642784118652
    10. ',' → logprob: -7.467642784118652

Token 50: ' dépend' (ID: 68660)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23594845831394196
    2. ' =' → logprob: -1.8609484434127808
    3. 's' → logprob: -3.6109485626220703
    4. '=' → logprob: -4.36094856262207
    5. '_' → logprob: -5.11094856262207
    6. ',' → logprob: -6.11094856262207
    7. '.' → logprob: -6.48594856262207
    8. '[' → logprob: -6.61094856262207
    9. ':' → logprob: -7.61094856262207
    10. ' +=' → logprob: -7.61094856262207

Token 51: ' uniquement' (ID: 65527)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.635473370552063
    2. 'amment' → logprob: -0.760473370552063
    3. 'ament' → logprob: -7.260473251342773
    4. 'ante' → logprob: -7.260473251342773
    5. 'am' → logprob: -8.010473251342773
    6. '[' → logprob: -8.510473251342773
    7. 'emment' → logprob: -8.635473251342773
    8. '#' → logprob: -9.135473251342773
    9. 'a' → logprob: -9.385473251342773
    10. 't' → logprob: -9.760473251342773

Token 52: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7808337807655334
    2. ' des' → logprob: -0.9058337807655334
    3. ' du' → logprob: -2.0308337211608887
    4. 'de' → logprob: -5.530833721160889
    5. 'des' → logprob: -6.655833721160889
    6. 'du' → logprob: -6.905833721160889
    7. ' d' → logprob: -9.530834197998047
    8. ' ' → logprob: -9.530834197998047
    9. 's' → logprob: -10.155834197998047
    10. ' au' → logprob: -10.655834197998047

Token 53: ' p' (ID: 275)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -2.144865036010742
    2. ' jours' → logprob: -2.394865036010742
    3. 'positions' → logprob: -2.832365036010742
    4. ' températures' → logprob: -2.832365036010742
    5. ' positions' → logprob: -3.019865036010742
    6. ' valeurs' → logprob: -3.144865036010742
    7. 'indices' → logprob: -3.394865036010742
    8. 'A' → logprob: -3.394865036010742
    9. ' A' → logprob: -3.457365036010742
    10. ' interv' → logprob: -3.644865036010742

Token 54: 'entes' (ID: 5651)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3044811189174652
    2. 'ré' → logprob: -2.179481029510498
    3. 'ar' → logprob: -3.429481029510498
    4. 'éri' → logprob: -3.429481029510498
    5. 'oint' → logprob: -4.554481029510498
    6. 'oints' → logprob: -4.554481029510498
    7. 'er' → logprob: -4.679481029510498
    8. 'ro' → logprob: -4.804481029510498
    9. 'a' → logprob: -5.304481029510498
    10. 'e' → logprob: -5.429481029510498

Token 55: ' entre' (ID: 3853)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6527907252311707
    2. ',' → logprob: -1.1527907848358154
    3. ' .' → logprob: -3.0277907848358154
    4. ' ,' → logprob: -3.0277907848358154
    5. ' ' → logprob: -3.5277907848358154
    6. 's' → logprob: -4.527790546417236
    7. ':' → logprob: -5.777790546417236
    8. '[' → logprob: -5.777790546417236
    9. ' :' → logprob: -5.902790546417236
    10. '```' → logprob: -6.027790546417236

Token 56: ' A' (ID: 355)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3453127443790436
    2. 'A' → logprob: -2.0953128337860107
    3. ' les' → logprob: -2.5953128337860107
    4. 'points' → logprob: -3.3453128337860107
    5. 'élé' → logprob: -4.345312595367432
    6. ' points' → logprob: -4.595312595367432
    7. '```' → logprob: -4.970312595367432
    8. ' chaque' → logprob: -5.345312595367432
    9. ' A' → logprob: -5.845312595367432
    10. 'adj' → logprob: -6.095312595367432

Token 57: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04005546122789383
    2. '[i' → logprob: -3.915055513381958
    3. ']' → logprob: -4.790055274963379
    4. ',' → logprob: -6.040055274963379
    5. '[]' → logprob: -6.415055274963379
    6. '[:-' → logprob: -6.415055274963379
    7. 's' → logprob: -6.665055274963379
    8. '```' → logprob: -6.665055274963379
    9. '.' → logprob: -7.415055274963379
    10. ')' → logprob: -8.040055274963379

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10405156761407852
    2. '+' → logprob: -2.3540515899658203
    3. ' +' → logprob: -6.85405158996582
    4. ' ]' → logprob: -6.85405158996582
    5. '-' → logprob: -7.10405158996582
    6. '],' → logprob: -7.47905158996582
    7. ' ' → logprob: -9.72905158996582
    8. '[i' → logprob: -10.10405158996582
    9. 's' → logprob: -10.47905158996582
    10. ' and' → logprob: -10.47905158996582

Token 59: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1074137687683105
    2. ']' → logprob: -1.2324137687683105
    3. '[' → logprob: -1.6074137687683105
    4. '-' → logprob: -2.8574137687683105
    5. '+' → logprob: -3.1074137687683105
    6. ' and' → logprob: -3.7324137687683105
    7. '[i' → logprob: -3.8574137687683105
    8. ')' → logprob: -4.3574137687683105
    9. ' ,' → logprob: -5.8574137687683105
    10. 'and' → logprob: -5.9824137687683105

Token 60: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3134310245513916
    2. 'A' → logprob: -1.3134310245513916
    3. ' ' → logprob: -8.813430786132812
    4. ' ' → logprob: -11.438430786132812
    5. 'a' → logprob: -13.188430786132812
    6. 'i' → logprob: -13.563430786132812
    7. ' i' → logprob: -14.188430786132812
    8. '`' → logprob: -14.188430786132812
    9. '	A' → logprob: -14.188430786132812
    10. ' la' → logprob: -14.313430786132812

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021307668066583574
    2. '[j' → logprob: -8.875212669372559
    3. '[' → logprob: -10.125212669372559
    4. '```' → logprob: -11.375212669372559
    5. 'i' → logprob: -11.500212669372559
    6. '+' → logprob: -12.750212669372559
    7. '[
' → logprob: -13.500212669372559
    8. 's' → logprob: -14.500212669372559
    9. '[next' → logprob: -14.750212669372559
    10. '
' → logprob: -14.750212669372559

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0400288850069046
    2. ' +' → logprob: -3.2900288105010986
    3. ']' → logprob: -6.540029048919678
    4. '],' → logprob: -8.29002857208252
    5. '-' → logprob: -8.91502857208252
    6. '+i' → logprob: -9.91502857208252
    7. '   ' → logprob: -10.66502857208252
    8. '])' → logprob: -11.29002857208252
    9. '+]' → logprob: -11.54002857208252
    10. ']+' → logprob: -11.79002857208252

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20628990232944489
    2. ']' → logprob: -1.8312898874282837
    3. '+' → logprob: -3.7062900066375732
    4. ' ' → logprob: -6.831289768218994
    5. 'i' → logprob: -7.956289768218994
    6. '```' → logprob: -9.581290245056152
    7. ' +' → logprob: -10.206290245056152
    8. ' ' → logprob: -11.081290245056152
    9. ']+' → logprob: -11.581290245056152
    10. '   ' → logprob: -11.581290245056152

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011790310963988304
    2. ')]' → logprob: -5.5117902755737305
    3. '])' → logprob: -5.7617902755737305
    4. ')' → logprob: -6.7617902755737305
    5. ' ]' → logprob: -6.8867902755737305
    6. ',' → logprob: -7.0117902755737305
    7. '],' → logprob: -7.7617902755737305
    8. '.' → logprob: -8.13679027557373
    9. '].' → logprob: -9.13679027557373
    10. '])]' → logprob: -9.38679027557373

Token 65: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9260885119438171
    2. '.' → logprob: -1.676088571548462
    3. 'for' → logprob: -2.051088571548462
    4. '#' → logprob: -2.426088571548462
    5. ',' → logprob: -3.301088571548462
    6. ']' → logprob: -3.426088571548462
    7. '\n' → logprob: -3.801088571548462
    8. '```' → logprob: -3.926088571548462
    9. '_' → logprob: -4.676088333129883
    10. '' → logprob: -4.676088333129883

Token 66: ' Initial' (ID: 9209)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1044018268585205
    2. 'for' → logprob: -1.6044018268585205
    3. 's' → logprob: -2.1044018268585205
    4. ' for' → logprob: -2.4794018268585205
    5. 'temperature' → logprob: -2.6044018268585205
    6. 'dp' → logprob: -3.6044018268585205
    7. '#' → logprob: -3.7294018268585205
    8. '```' → logprob: -4.479401588439941
    9. 'd' → logprob: -4.604401588439941
    10. 'temps' → logprob: -4.916901588439941

Token 67: 'ement' (ID: 962)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7582025527954102
    2. 'isation' → logprob: -1.6332025527954102
    3. 'i' → logprob: -2.75820255279541
    4. 'iser' → logprob: -2.88320255279541
    5. 'ement' → logprob: -3.13320255279541
    6. '_' → logprob: -3.25820255279541
    7. 'ization' → logprob: -3.38320255279541
    8. '#' → logprob: -3.50820255279541
    9. 'is' → logprob: -4.25820255279541
    10. '```' → logprob: -4.63320255279541

Token 68: ',' (ID: 11)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -1.8179668188095093
    2. 'temp' → logprob: -1.9429668188095093
    3. ',' → logprob: -2.192966938018799
    4. 'temperature' → logprob: -2.442966938018799
    5. ' p' → logprob: -3.067966938018799
    6. ' temperature' → logprob: -3.192966938018799
    7. 'dp' → logprob: -3.317966938018799
    8. 'diff' → logprob: -3.317966938018799
    9. 'p' → logprob: -3.317966938018799
    10. ' temps' → logprob: -3.567966938018799

Token 69: ' la' (ID: 557)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7619407773017883
    2. ' temp' → logprob: -1.6369407176971436
    3. ' la' → logprob: -3.1369407176971436
    4. 'temps' → logprob: -3.1369407176971436
    5. 'temperature' → logprob: -3.3869407176971436
    6. 'p' → logprob: -3.7619407176971436
    7. ' les' → logprob: -3.7619407176971436
    8. 'T' → logprob: -4.261940956115723
    9. ' p' → logprob: -4.386940956115723
    10. ' temps' → logprob: -4.386940956115723

Token 70: ' température' (ID: 78610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1952126026153564
    2. ' température' → logprob: -1.4452126026153564
    3. ' pente' → logprob: -2.3202126026153564
    4. 'p' → logprob: -2.8202126026153564
    5. ' p' → logprob: -3.1952126026153564
    6. 'temp' → logprob: -3.4452126026153564
    7. 'diff' → logprob: -3.6952126026153564
    8. ' temperature' → logprob: -3.6952126026153564
    9. 'temperature' → logprob: -3.6952126026153564
    10. ' temp' → logprob: -4.070212364196777

Token 71: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9338337779045105
    2. ' =' → logprob: -1.1838338375091553
    3. ' change' → logprob: -2.4338338375091553
    4. ' est' → logprob: -3.0588338375091553
    5. 'change' → logprob: -3.5588338375091553
    6. ' ' → logprob: -4.308833599090576
    7. ' s' → logprob: -4.308833599090576
    8. ' des' → logprob: -4.308833599090576
    9. '=' → logprob: -4.683833599090576
    10. '_change' → logprob: -4.683833599090576

Token 72: ' Spot' (ID: 29223)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8571979999542236
    2. 'l' → logprob: -1.8571979999542236
    3. ' A' → logprob: -1.8571979999542236
    4. 'i' → logprob: -2.1071979999542236
    5. '0' → logprob: -3.2321979999542236
    6. ' l' → logprob: -3.3571979999542236
    7. ' i' → logprob: -3.9821979999542236
    8. ' chaque' → logprob: -4.4821977615356445
    9. ' la' → logprob: -4.6071977615356445
    10. ' ' → logprob: -5.1071977615356445

Token 73: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3735552132129669
    2. '[' → logprob: -2.1235551834106445
    3. '[S' → logprob: -3.2485551834106445
    4. 's' → logprob: -3.4985551834106445
    5. ' S' → logprob: -3.8735551834106445
    6. 'T' → logprob: -4.3735551834106445
    7. '[i' → logprob: -4.3735551834106445
    8. ' ' → logprob: -4.7485551834106445
    9. '   ' → logprob: -4.8735551834106445
    10. '#' → logprob: -4.9985551834106445

Token 74: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7735464572906494
    2. '0' → logprob: -2.0235464572906494
    3. ' ' → logprob: -2.1485464572906494
    4. 'S' → logprob: -2.6485464572906494
    5. 's' → logprob: -2.7735464572906494
    6. ' S' → logprob: -2.8985464572906494
    7. '[i' → logprob: -3.5235464572906494
    8. ']' → logprob: -4.89854621887207
    9. ',' → logprob: -4.89854621887207
    10. '1' → logprob: -5.14854621887207

Token 75: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8134229779243469
    2. ' ' → logprob: -1.1884229183197021
    3. ' =' → logprob: -1.6884229183197021
    4. '=' → logprob: -4.188423156738281
    5. ' is' → logprob: -4.188423156738281
    6. ',' → logprob: -4.813423156738281
    7. ':' → logprob: -5.063423156738281
    8. '0' → logprob: -5.688423156738281
    9. 's' → logprob: -5.813423156738281
    10. ' vaut' → logprob: -5.938423156738281

Token 76: ' ' (ID: 220)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4281238317489624
    2. 'S' → logprob: -1.6781238317489624
    3. ' ' → logprob: -2.803123950958252
    4. ' T' → logprob: -3.053123950958252
    5. '0' → logprob: -3.428123950958252
    6. 'T' → logprob: -4.428123950958252
    7. ' A' → logprob: -5.053123950958252
    8. 'A' → logprob: -6.553123950958252
    9. '  ' → logprob: -8.678123474121094
    10. ' ég' → logprob: -9.053123474121094

Token 77: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10614131391048431
    2. '0' → logprob: -2.7311413288116455
    3. 'T' → logprob: -3.7311413288116455
    4. 'A' → logprob: -5.231141090393066
    5. ' S' → logprob: -5.606141090393066
    6. ' ' → logprob: -6.231141090393066
    7. ' T' → logprob: -8.481141090393066
    8. ' A' → logprob: -9.356141090393066
    9. '100' → logprob: -9.481141090393066
    10. '1' → logprob: -9.981141090393066

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2702083885669708
    2. 'temperature' → logprob: -2.6452083587646484
    3. '' → logprob: -3.1452083587646484
    4. 'temp' → logprob: -3.6452083587646484
    5. '#' → logprob: -3.8952083587646484
    6. 't' → logprob: -4.145208358764648
    7. ',' → logprob: -4.520208358764648
    8. '
' → logprob: -4.770208358764648
    9. '

' → logprob: -5.395208358764648
    10. ' 
' → logprob: -5.770208358764648

Token 79: '#' (ID: 2)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6273496747016907
    2. 'temperature' → logprob: -1.127349615097046
    3. 'T' → logprob: -3.252349615097046
    4. 'temps' → logprob: -3.752349615097046
    5. 't' → logprob: -3.877349615097046
    6. 'temper' → logprob: -4.127349853515625
    7. 'delta' → logprob: -4.752349853515625
    8. 'dp' → logprob: -4.877349853515625
    9. 'd' → logprob: -5.502349853515625
    10. 'current' → logprob: -5.627349853515625

Token 80: ' Delta' (ID: 35018)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8172125816345215
    2. 'temperature' → logprob: -1.3172125816345215
    3. 'dp' → logprob: -1.6922125816345215
    4. 'temps' → logprob: -3.3172125816345215
    5. 'temper' → logprob: -4.0672125816345215
    6. 'current' → logprob: -4.4422125816345215
    7. 'T' → logprob: -4.6922125816345215
    8. 'delta' → logprob: -5.6922125816345215
    9. 'spot' → logprob: -5.6922125816345215
    10. 'res' → logprob: -6.0672125816345215

Token 81: ' T' (ID: 353)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7996290922164917
    2. 'T' → logprob: -1.9246290922164917
    3. '_t' → logprob: -2.2996292114257812
    4. '_T' → logprob: -2.2996292114257812
    5. '_' → logprob: -2.4246292114257812
    6. '_temp' → logprob: -3.0496292114257812
    7. 's' → logprob: -3.7996292114257812
    8. '=' → logprob: -4.049629211425781
    9. '_temperature' → logprob: -4.674629211425781
    10. '_s' → logprob: -5.049629211425781

Token 82: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5058008432388306
    2. 's' → logprob: -1.0058008432388306
    3. '=' → logprob: -3.505800724029541
    4. '_s' → logprob: -8.2558012008667
    5. '=[' → logprob: -8.5058012008667
    6. '=[]' → logprob: -9.2558012008667
    7. '_per' → logprob: -9.5058012008667
    8. ' ' → logprob: -9.6308012008667
    9. 'per' → logprob: -9.6308012008667
    10. '_' → logprob: -9.7558012008667

Token 83: ' Spot' (ID: 29223)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.40470755100250244
    2. 'les' → logprob: -2.404707431793213
    3. ' A' → logprob: -2.529707431793213
    4. ' deux' → logprob: -3.029707431793213
    5. 'i' → logprob: -3.154707431793213
    6. ' les' → logprob: -4.279707431793213
    7. ' chaque' → logprob: -5.029707431793213
    8. 'spot' → logprob: -5.154707431793213
    9. ' spots' → logprob: -5.404707431793213
    10. 'Spot' → logprob: -5.529707431793213

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7085892558097839
    2. 'i' → logprob: -0.8335892558097839
    3. '[i' → logprob: -2.9585893154144287
    4. '0' → logprob: -4.20858907699585
    5. ' ' → logprob: -5.58358907699585
    6. 's' → logprob: -6.58358907699585
    7. '[' → logprob: -7.33358907699585
    8. ' [' → logprob: -8.833589553833008
    9. '[]' → logprob: -9.833589553833008
    10. ' ' → logprob: -9.833589553833008

Token 85: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.09601368755102158
    2. ' ' → logprob: -3.0960137844085693
    3. 'et' → logprob: -3.8460137844085693
    4. ' and' → logprob: -4.22101354598999
    5. '+' → logprob: -5.97101354598999
    6. '  ' → logprob: -6.34601354598999
    7. 's' → logprob: -6.72101354598999
    8. ',' → logprob: -6.97101354598999
    9. ' и' → logprob: -7.34601354598999
    10. '-' → logprob: -7.47101354598999

Token 86: ' Spot' (ID: 29223)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45069900155067444
    2. ' Spot' → logprob: -1.200698971748352
    3. 'Spot' → logprob: -3.4506990909576416
    4. ' spot' → logprob: -4.2006988525390625
    5. 'i' → logprob: -4.3256988525390625
    6. ' ' → logprob: -6.8256988525390625
    7. 'spot' → logprob: -8.700698852539062
    8. ' le' → logprob: -8.700698852539062
    9. ' Spots' → logprob: -9.200698852539062
    10. '	i' → logprob: -9.513198852539062

Token 87: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04430967941880226
    2. 'i' → logprob: -3.294309616088867
    3. '+' → logprob: -5.544309616088867
    4. ' ' → logprob: -6.419309616088867
    5. '	i' → logprob: -8.794309616088867
    6. ' ' → logprob: -9.294309616088867
    7. '0' → logprob: -9.294309616088867
    8. ' (' → logprob: -9.794309616088867
    9. ' +' → logprob: -10.169309616088867
    10. '[i' → logprob: -10.294309616088867

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019750266801565886
    2. ' +' → logprob: -6.251975059509277
    3. '+i' → logprob: -10.751975059509277
    4. ' plus' → logprob: -12.001975059509277
    5. ' i' → logprob: -12.626975059509277
    6. ' ' → logprob: -12.626975059509277
    7. '1' → logprob: -13.001975059509277
    8. '-' → logprob: -13.001975059509277
    9. ' ' → logprob: -13.501975059509277
    10. 'plus' → logprob: -13.876975059509277

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019495772721711546
    2. ' ' → logprob: -9.125194549560547
    3. '+' → logprob: -9.750194549560547
    4. 'i' → logprob: -10.750194549560547
    5. '```' → logprob: -13.500194549560547
    6. '0' → logprob: -13.625194549560547
    7. '`' → logprob: -13.875194549560547
    8. ' i' → logprob: -14.375194549560547
    9. ' ' → logprob: -15.125194549560547
    10. '<|end|>' → logprob: -15.125194549560547

Token 90: ' :
' (ID: 10039)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4190593659877777
    2. ' =' → logprob: -1.1690593957901
    3. ' s' → logprob: -4.1690592765808105
    4. '=' → logprob: -4.6690592765808105
    5. ' ' → logprob: -5.7940592765808105
    6. '_' → logprob: -7.4190592765808105
    7. ' is' → logprob: -7.5440592765808105
    8. ',' → logprob: -7.7940592765808105
    9. ':' → logprob: -8.294059753417969
    10. ' _' → logprob: -8.419059753417969

Token 91: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0017244815826416
    2. 'delta' → logprob: -2.7517244815826416
    3. ' [' → logprob: -3.1267244815826416
    4. ' =' → logprob: -3.1267244815826416
    5. 'd' → logprob: -3.2517244815826416
    6. ' delta' → logprob: -3.3767244815826416
    7. 's' → logprob: -3.3767244815826416
    8. '```' → logprob: -3.3767244815826416
    9. '[' → logprob: -3.5017244815826416
    10. ' d' → logprob: -3.5017244815826416

Token 92: '  ' (ID: 256)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.634586215019226
    2. 'd' → logprob: -2.1345863342285156
    3. ' delta' → logprob: -2.2595863342285156
    4. ' A' → logprob: -2.5095863342285156
    5. ' ' → logprob: -2.5095863342285156
    6. 'delta' → logprob: -2.5095863342285156
    7. ' diff' → logprob: -2.8845863342285156
    8. 'diff' → logprob: -3.1345863342285156
    9. 'for' → logprob: -4.009586334228516
    10. ' for' → logprob: -4.009586334228516

Token 93: ' Si' (ID: 7832)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.37945085763931274
    2. ' A' → logprob: -1.254450798034668
    3. ' (' → logprob: -4.629450798034668
    4. 'T' → logprob: -4.879450798034668
    5. '(A' → logprob: -5.754450798034668
    6. ' T' → logprob: -5.879450798034668
    7. ' max' → logprob: -6.754450798034668
    8. 'abs' → logprob: -7.004450798034668
    9. ' abs' → logprob: -7.004450798034668
    10. 'max' → logprob: -7.129450798034668

Token 94: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0068369717337191105
    2. 'A' → logprob: -5.131836891174316
    3. ' ' → logprob: -7.131836891174316
    4. '	A' → logprob: -10.631836891174316
    5. ' ' → logprob: -10.756836891174316
    6. ' S' → logprob: -10.756836891174316
    7. '  ' → logprob: -11.569336891174316
    8. ' (' → logprob: -12.131836891174316
    9. ' a' → logprob: -12.256836891174316
    10. '(A' → logprob: -12.881836891174316

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022841955069452524
    2. '[' → logprob: -6.127284049987793
    3. '[
' → logprob: -9.627284049987793
    4. 'i' → logprob: -11.002284049987793
    5. ']' → logprob: -12.877284049987793
    6. '[I' → logprob: -13.127284049987793
    7. ' [' → logprob: -13.252284049987793
    8. '
' → logprob: -13.377284049987793
    9. ' i' → logprob: -13.627284049987793
    10. '[j' → logprob: -14.002284049987793

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6624929904937744
    2. '+' → logprob: -0.7874929904937744
    3. '[i' → logprob: -4.037492752075195
    4. '[' → logprob: -5.287492752075195
    5. ']>' → logprob: -6.162492752075195
    6. '>' → logprob: -6.412492752075195
    7. '-' → logprob: -7.162492752075195
    8. ' ]' → logprob: -7.662492752075195
    9. ' >' → logprob: -7.662492752075195
    10. ']<' → logprob: -7.912492752075195

Token 97: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7272664904594421
    2. '<' → logprob: -1.102266550064087
    3. '>' → logprob: -2.352266550064087
    4. ' >' → logprob: -2.477266550064087
    5. '+' → logprob: -5.977266311645508
    6. '[' → logprob: -6.727266311645508
    7. ' ' → logprob: -7.352266311645508
    8. '[i' → logprob: -7.727266311645508
    9. '-' → logprob: -8.227266311645508
    10. 's' → logprob: -10.789766311645508

Token 98: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4289376139640808
    2. ' A' → logprob: -1.0539376735687256
    3. ' ' → logprob: -8.428937911987305
    4. ' ' → logprob: -11.178937911987305
    5. '  ' → logprob: -13.428937911987305
    6. '	A' → logprob: -13.678937911987305
    7. '   ' → logprob: -15.303937911987305
    8. '>A' → logprob: -15.491437911987305
    9. '0' → logprob: -15.866437911987305
    10. 'a' → logprob: -16.116437911987305

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010485442908247933
    2. '[' → logprob: -9.250104904174805
    3. '[j' → logprob: -12.250104904174805
    4. '[
' → logprob: -13.250104904174805
    5. ' [' → logprob: -14.625104904174805
    6. '[I' → logprob: -14.625104904174805
    7. '+' → logprob: -15.250104904174805
    8. '[++' → logprob: -16.000104904174805
    9. 'i' → logprob: -16.250104904174805
    10. '```' → logprob: -16.500104904174805

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001959678716957569
    2. ' +' → logprob: -7.001959800720215
    3. ']' → logprob: -7.251959800720215
    4. '],' → logprob: -8.376959800720215
    5. '1' → logprob: -10.001959800720215
    6. '[i' → logprob: -10.376959800720215
    7. '-' → logprob: -12.251959800720215
    8. '[' → logprob: -12.501959800720215
    9. ' ' → logprob: -12.501959800720215
    10. '+]' → logprob: -12.626959800720215

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021676832693628967
    2. '+' → logprob: -8.625216484069824
    3. ' ' → logprob: -10.250216484069824
    4. ']' → logprob: -13.625216484069824
    5. '```' → logprob: -16.12521743774414
    6. '2' → logprob: -16.50021743774414
    7. '   ' → logprob: -16.75021743774414
    8. ']+' → logprob: -16.81271743774414
    9. '-' → logprob: -16.87521743774414
    10. ' +' → logprob: -17.00021743774414

Token 102: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1015031635761261
    2. ',' → logprob: -2.8515031337738037
    3. ' :' → logprob: -3.4765031337738037
    4. ']:' → logprob: -5.976503372192383
    5. ' ,' → logprob: -6.101503372192383
    6. ']' → logprob: -6.851503372192383
    7. ':
' → logprob: -7.351503372192383
    8. '],' → logprob: -7.726503372192383
    9. ' ' → logprob: -7.976503372192383
    10. ' else' → logprob: -8.851503372192383

Token 103: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429154634475708
    2. ' else' → logprob: -1.679154634475708
    3. ',' → logprob: -2.679154634475708
    4. ' :' → logprob: -2.929154634475708
    5. ' ' → logprob: -4.179154396057129
    6. ':
' → logprob: -4.929154396057129
    7. '+' → logprob: -4.929154396057129
    8. ' +' → logprob: -6.054154396057129
    9. 'else' → logprob: -6.304154396057129
    10. '1' → logprob: -6.679154396057129

Token 104: ' temperature' (ID: 12088)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5297971963882446
    2. ' ' → logprob: -1.7797971963882446
    3. '+' → logprob: -2.779797077178955
    4. ' +' → logprob: -2.904797077178955
    5. ' S' → logprob: -3.529797077178955
    6. ' T' → logprob: -3.529797077178955
    7. 'S' → logprob: -3.654797077178955
    8. 'T' → logprob: -4.154797077178955
    9. '"' → logprob: -5.154797077178955
    10. ' (' → logprob: -5.404797077178955

Token 105: ' dim' (ID: 6051)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2603723108768463
    2. ' +' → logprob: -1.885372281074524
    3. '+' → logprob: -2.8853724002838135
    4. ' =' → logprob: -5.260372161865234
    5. ' -=' → logprob: -5.510372161865234
    6. '+=' → logprob: -5.635372161865234
    7. ' change' → logprob: -5.885372161865234
    8. ' -' → logprob: -6.760372161865234
    9. ' ' → logprob: -7.010372161865234
    10. '_change' → logprob: -7.385372161865234

Token 106: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.00037740718107670546
    2. 'in' → logprob: -8.000377655029297
    3. 'inu' → logprob: -11.250377655029297
    4. 'ine' → logprob: -11.250377655029297
    5. 'i' → logprob: -13.125377655029297
    6. 'INUE' → logprob: -13.125377655029297
    7. 'inus' → logprob: -13.250377655029297
    8. 'pute' → logprob: -13.625377655029297
    9. 'inut' → logprob: -13.750377655029297
    10. 'e' → logprob: -14.125377655029297

Token 107: ' de' (ID: 334)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5957840085029602
    2. 'else' → logprob: -2.2207839488983154
    3. ' ' → logprob: -2.3457839488983154
    4. '-' → logprob: -2.5957839488983154
    5. ',' → logprob: -2.9707839488983154
    6. '<|end|>' → logprob: -3.5957839488983154
    7. 'elif' → logprob: -3.9707839488983154
    8. ' elif' → logprob: -3.9707839488983154
    9. '\n' → logprob: -4.3457841873168945
    10. ' -' → logprob: -5.2207841873168945

Token 108: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6063365936279297
    2. '1' → logprob: -0.8563365936279297
    3. ' T' → logprob: -4.35633659362793
    4. ' S' → logprob: -5.10633659362793
    5. 'S' → logprob: -5.23133659362793
    6. 'T' → logprob: -5.35633659362793
    7. ' (' → logprob: -8.23133659362793
    8. '2' → logprob: -8.73133659362793
    9. '10' → logprob: -9.54383659362793
    10. ' -' → logprob: -9.60633659362793

Token 109: '*(' (ID: 14793)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4539220333099365
    2. '  
' → logprob: -1.5789220333099365
    3. '
' → logprob: -1.9539220333099365
    4. ',' → logprob: -2.7039220333099365
    5. '```' → logprob: -2.8289220333099365
    6. ' ' → logprob: -2.9539220333099365
    7. '-' → logprob: -2.9539220333099365
    8. 'else' → logprob: -3.7039220333099365
    9. ',
' → logprob: -3.7039220333099365
    10. 'elif' → logprob: -4.203922271728516

Token 110: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7854863405227661
    2. '1' → logprob: -1.6604863405227661
    3. '(A' → logprob: -2.0354862213134766
    4. ' (' → logprob: -2.5354862213134766
    5. ' A' → logprob: -3.0354862213134766
    6. 'i' → logprob: -3.6604862213134766
    7. ' ' → logprob: -4.285486221313477
    8. 'T' → logprob: -4.410486221313477
    9. '(i' → logprob: -4.785486221313477
    10. '(T' → logprob: -4.785486221313477

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009065798367373645
    2. '[j' → logprob: -7.250906467437744
    3. '[' → logprob: -9.125906944274902
    4. 'i' → logprob: -10.625906944274902
    5. '[next' → logprob: -10.750906944274902
    6. ']' → logprob: -11.125906944274902
    7. ')' → logprob: -11.875906944274902
    8. '```' → logprob: -12.375906944274902
    9. '[
' → logprob: -13.125906944274902
    10. '

' → logprob: -13.250906944274902

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2609364092350006
    2. '[i' → logprob: -1.5109363794326782
    3. ']' → logprob: -5.385936260223389
    4. '[j' → logprob: -5.885936260223389
    5. '[' → logprob: -6.760936260223389
    6. '+i' → logprob: -9.010936737060547
    7. '[next' → logprob: -9.760936737060547
    8. '+]' → logprob: -9.760936737060547
    9. ']+' → logprob: -10.010936737060547
    10. ' +' → logprob: -10.260936737060547

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.800739018013701e-05
    2. ' ' → logprob: -10.1250581741333
    3. ']' → logprob: -12.0000581741333
    4. '

' → logprob: -13.0000581741333
    5. ']+' → logprob: -13.0000581741333
    6. 'i' → logprob: -13.2500581741333
    7. '0' → logprob: -13.5000581741333
    8. '-' → logprob: -14.2500581741333
    9. '[i' → logprob: -14.4375581741333
    10. '])' → logprob: -15.1250581741333

Token 114: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31394264101982117
    2. '-' → logprob: -1.3139426708221436
    3. '[i' → logprob: -7.8139424324035645
    4. '-A' → logprob: -9.188942909240723
    5. ' ' → logprob: -9.438942909240723
    6. '[' → logprob: -9.938942909240723
    7. ']' → logprob: -10.188942909240723
    8. 'A' → logprob: -12.563942909240723
    9. '-i' → logprob: -13.938942909240723
    10. '#' → logprob: -14.438942909240723

Token 115: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03365388140082359
    2. ' A' → logprob: -3.408653974533081
    3. '	A' → logprob: -12.78365421295166
    4. ' ' → logprob: -13.28365421295166
    5. 'i' → logprob: -13.28365421295166
    6. '<|end|>' → logprob: -14.78365421295166
    7. ')' → logprob: -14.90865421295166
    8. '  ' → logprob: -15.78365421295166
    9. ' ' → logprob: -16.033653259277344
    10. ' i' → logprob: -16.033653259277344

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014978687977418303
    2. '[' → logprob: -9.625149726867676
    3. 'i' → logprob: -9.750149726867676
    4. '])' → logprob: -10.875149726867676
    5. ')' → logprob: -12.375149726867676
    6. ']' → logprob: -13.500149726867676
    7. '[j' → logprob: -15.875149726867676
    8. '```' → logprob: -16.000150680541992
    9. '[I' → logprob: -16.375150680541992
    10. '[
' → logprob: -16.625150680541992

Token 117: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35778072476387024
    2. '])' → logprob: -1.2327806949615479
    3. ')
' → logprob: -5.982780933380127
    4. '])
' → logprob: -6.232780933380127
    5. '))' → logprob: -6.357780933380127
    6. ']' → logprob: -6.482780933380127
    7. ')])' → logprob: -7.982780933380127
    8. ' )' → logprob: -8.482780456542969
    9. ')]' → logprob: -8.482780456542969
    10. ')
' → logprob: -9.232780456542969

Token 118: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160355806350708
    2. 'else' → logprob: -1.4910355806350708
    3. '
' → logprob: -2.2410354614257812
    4. '#' → logprob: -2.6160354614257812
    5. 'elif' → logprob: -2.7410354614257812
    6. ',' → logprob: -2.9910354614257812
    7. ']' → logprob: -3.6160354614257812
    8. ' else' → logprob: -3.8660354614257812
    9. ' ' → logprob: -3.9910354614257812
    10. 'A' → logprob: -4.366035461425781

Token 119: '  ' (ID: 256)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.1633192300796509
    2. 'else' → logprob: -1.4133192300796509
    3. ' else' → logprob: -2.1633191108703613
    4. ' ' → logprob: -2.5383191108703613
    5. ' elif' → logprob: -2.9133191108703613
    6. '
' → logprob: -3.5383191108703613
    7. ',' → logprob: -3.7883191108703613
    8. '  
' → logprob: -3.9133191108703613
    9. '#' → logprob: -4.038319110870361
    10. ' 
' → logprob: -4.038319110870361

Token 120: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21923956274986267
    2. ' else' → logprob: -1.719239592552185
    3. 'elif' → logprob: -4.344239711761475
    4. 'Si' → logprob: -6.594239711761475
    5. ' elif' → logprob: -6.844239711761475
    6. 'Sinon' (adapté à ' Sinon') → logprob: -7.344239711761475
    7. 'Else' → logprob: -7.844239711761475
    8. ' ' → logprob: -8.094239234924316
    9. ' Si' → logprob: -8.344239234924316
    10. '  ' → logprob: -8.719239234924316

Token 121: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23989863693714142
    2. ' :' → logprob: -1.989898681640625
    3. '  ' → logprob: -3.864898681640625
    4. ' ' → logprob: -3.989898681640625
    5. ' #' → logprob: -4.364898681640625
    6. '#' → logprob: -4.989898681640625
    7. ' =>' → logprob: -5.489898681640625
    8. ',' → logprob: -5.989898681640625
    9. ' temperature' → logprob: -6.114898681640625
    10. '   ' → logprob: -6.364898681640625

Token 122: ' temperature' (ID: 12088)
  Prédit: ' temperature'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temperature' → logprob: -0.28921231627464294
    2. 'temperature' → logprob: -1.5392123460769653
    3. ' T' → logprob: -4.289212226867676
    4. '0' → logprob: -4.664212226867676
    5. 'T' → logprob: -5.539212226867676
    6. ' ' → logprob: -5.539212226867676
    7. ' température' → logprob: -6.289212226867676
    8. ' -' → logprob: -7.539212226867676
    9. 'temp' → logprob: -7.539212226867676
    10. ' temperatur' → logprob: -7.789212226867676

Token 123: ' augmente' (ID: 150199)
  Prédit: ' augmente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' augmente' → logprob: -0.33937007188796997
    2. 'aug' → logprob: -1.7143700122833252
    3. 'dim' → logprob: -2.964370012283325
    4. 'reste' → logprob: -4.214370250701904
    5. 'augment' → logprob: -4.464370250701904
    6. ' dim' → logprob: -4.964370250701904
    7. 'increase' → logprob: -5.339370250701904
    8. '=' → logprob: -5.464370250701904
    9. ' reste' → logprob: -5.964370250701904
    10. ' =' → logprob: -6.589370250701904

Token 124: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.005903907585889101
    2. 'de' → logprob: -5.755903720855713
    3. ' ' → logprob: -7.255903720855713
    4. '+' → logprob: -7.380903720855713
    5. ' of' → logprob: -7.880903720855713
    6. 'S' → logprob: -8.130904197692871
    7. ' +=' → logprob: -8.380904197692871
    8. ' S' → logprob: -9.505904197692871
    9. 'T' → logprob: -9.505904197692871
    10. ' T' → logprob: -9.630904197692871

Token 125: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.6896167993545532
    2. 'T' → logprob: -0.9396167993545532
    3. 'S' → logprob: -2.8146166801452637
    4. ' S' → logprob: -3.0646166801452637
    5. ' ' → logprob: -7.189616680145264
    6. '1' → logprob: -10.939617156982422
    7. ' (' → logprob: -11.064617156982422
    8. ' ' → logprob: -11.564617156982422
    9. '(T' → logprob: -11.564617156982422
    10. '0' → logprob: -11.689617156982422

Token 126: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0959618017077446
    2. '*' → logprob: -2.595961809158325
    3. ' *' → logprob: -4.095961570739746
    4. '*((' → logprob: -8.720961570739746
    5. '*A' → logprob: -9.970961570739746
    6. '(A' → logprob: -10.095961570739746
    7. '*[' → logprob: -11.720961570739746
    8. '#' → logprob: -12.595961570739746
    9. ')*(' → logprob: -12.970961570739746
    10. ' *(' → logprob: -12.970961570739746

Token 127: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01559178251773119
    2. ' (' → logprob: -4.515591621398926
    3. 'A' → logprob: -5.515591621398926
    4. '(' → logprob: -7.890591621398926
    5. ' A' → logprob: -9.890591621398926
    6. '(abs' → logprob: -11.015591621398926
    7. ' ' → logprob: -11.515591621398926
    8. 'abs' → logprob: -11.828091621398926
    9. '((' → logprob: -12.140591621398926
    10. '1' → logprob: -12.203091621398926

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005133562372066081
    2. 'i' → logprob: -7.875513553619385
    3. '[' → logprob: -10.125513076782227
    4. ']' → logprob: -10.125513076782227
    5. '(i' → logprob: -10.625513076782227
    6. ')' → logprob: -12.250513076782227
    7. ' [' → logprob: -12.250513076782227
    8. '-' → logprob: -12.500513076782227
    9. ']-' → logprob: -13.375513076782227
    10. '][' → logprob: -13.500513076782227

Token 129: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20455627143383026
    2. ']-' → logprob: -2.2045562267303467
    3. '[i' → logprob: -3.0795562267303467
    4. '+' → logprob: -3.8295562267303467
    5. '-' → logprob: -5.704556465148926
    6. '])' → logprob: -6.704556465148926
    7. ']+' → logprob: -7.579556465148926
    8. ']>' → logprob: -7.704556465148926
    9. '])-' → logprob: -8.204556465148926
    10. '1' → logprob: -8.204556465148926

Token 130: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0052360063418745995
    2. ' A' → logprob: -5.2552361488342285
    3. '	A' → logprob: -14.00523567199707
    4. ' ' → logprob: -14.25523567199707
    5. 'i' → logprob: -14.88023567199707
    6. '  ' → logprob: -15.75523567199707
    7. '   ' → logprob: -15.88023567199707
    8. ')' → logprob: -16.75523567199707
    9. '[i' → logprob: -17.13023567199707
    10. '>A' → logprob: -18.13023567199707

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06220462918281555
    2. 'i' → logprob: -2.812204599380493
    3. ' i' → logprob: -9.437204360961914
    4. '[' → logprob: -9.562204360961914
    5. ' [' → logprob: -10.437204360961914
    6. '
' → logprob: -11.187204360961914
    7. '```' → logprob: -11.437204360961914
    8. 'A' → logprob: -12.187204360961914
    9. '	i' → logprob: -12.312204360961914
    10. ' ' → logprob: -12.437204360961914

Token 132: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.33715423941612244
    2. '[i' → logprob: -1.7121542692184448
    3. '1' → logprob: -2.8371541500091553
    4. '+' → logprob: -3.0871541500091553
    5. ')' → logprob: -7.587154388427734
    6. '[' → logprob: -7.962154388427734
    7. '-' → logprob: -8.587154388427734
    8. ']' → logprob: -8.712154388427734
    9. '])
' → logprob: -10.212154388427734
    10. '])
' → logprob: -10.462154388427734

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.375012397766113
    3. '])' → logprob: -14.625012397766113
    4. '[i' → logprob: -15.000012397766113
    5. '-' → logprob: -16.12501335144043
    6. '   ' → logprob: -16.25001335144043
    7. '１' → logprob: -16.25001335144043
    8. '```' → logprob: -16.37501335144043
    9. '[' → logprob: -16.62501335144043
    10. '
' → logprob: -17.00001335144043

Token 134: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05042664334177971
    2. '])' → logprob: -3.175426721572876
    3. '))' → logprob: -5.925426483154297
    4. ')]' → logprob: -6.050426483154297
    5. ')])' → logprob: -6.175426483154297
    6. ' )' → logprob: -9.550426483154297
    7. ']' → logprob: -9.675426483154297
    8. ')`' → logprob: -10.800426483154297
    9. ''])' → logprob: -10.925426483154297
    10. '])]' → logprob: -11.050426483154297

Token 135: '#' (ID: 2)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5216404795646667
    2. 'temp' → logprob: -1.7716405391693115
    3. 'temperature' → logprob: -2.0216405391693115
    4. 'diff' → logprob: -3.5216405391693115
    5. 'res' → logprob: -3.8966405391693115
    6. '#' → logprob: -4.646640300750732
    7. 'd' → logprob: -4.896640300750732
    8. 'temps' → logprob: -4.896640300750732
    9. 'temper' → logprob: -5.646640300750732
    10. 'dp' → logprob: -5.771640300750732

Token 136: ' Calcul' (ID: 57243)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.7028478980064392
    2. 'diff' → logprob: -2.077847957611084
    3. 'temp' → logprob: -2.077847957611084
    4. 'temperature' → logprob: -2.577847957611084
    5. 'dp' → logprob: -3.202847957611084
    6. 'd' → logprob: -3.952847957611084
    7. 'temps' → logprob: -3.952847957611084
    8. 'for' → logprob: -4.327847957611084
    9. 'p' → logprob: -4.577847957611084
    10. ' delta' → logprob: -4.577847957611084

Token 137: 'er' (ID: 259)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.6534905433654785
    2. 'temp' → logprob: -1.1534905433654785
    3. 'temperature' → logprob: -2.6534905433654785
    4. 'diff' → logprob: -2.7784905433654785
    5. 'temps' → logprob: -4.4034905433654785
    6. ' delta' → logprob: -5.1534905433654785
    7. 'd' → logprob: -5.4034905433654785
    8. 'dp' → logprob: -6.7784905433654785
    9. ' temp' → logprob: -7.0284905433654785
    10. '=' → logprob: -7.1534905433654785

Token 138: ' initial' (ID: 4871)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5754461884498596
    2. 'temp' → logprob: -1.5754461288452148
    3. 'diff' → logprob: -2.450446128845215
    4. ' delta' → logprob: -3.325446128845215
    5. 'temperature' → logprob: -3.450446128845215
    6. 'temps' → logprob: -4.075446128845215
    7. 'dp' → logprob: -4.200446128845215
    8. 'd' → logprob: -4.450446128845215
    9. ' temp' → logprob: -4.950446128845215
    10. 'res' → logprob: -5.325446128845215

Token 139: 'ement' (ID: 962)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006749716121703386
    2. 'ation' → logprob: -6.381749629974365
    3. '#' → logprob: -6.506749629974365
    4. 'e' → logprob: -7.006749629974365
    5. 'iser' → logprob: -7.631749629974365
    6. '_' → logprob: -8.131750106811523
    7. '=' → logprob: -8.381750106811523
    8. 'ating' → logprob: -8.506750106811523
    9. 's' → logprob: -8.631750106811523
    10. '```' → logprob: -8.631750106811523

Token 140: ' la' (ID: 557)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.04926291108131409
    2. 'd' → logprob: -3.6742630004882812
    3. 'temp' → logprob: -4.799263000488281
    4. 'temperature' → logprob: -5.049263000488281
    5. 'diff' → logprob: -5.299263000488281
    6. 'temps' → logprob: -7.049263000488281
    7. ' delta' → logprob: -7.174263000488281
    8. 'Delta' → logprob: -7.799263000488281
    9. 'dp' → logprob: -8.424263000488281
    10. 'dif' → logprob: -8.674263000488281

Token 141: ' somme' (ID: 64484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7866337299346924
    2. 'delta' → logprob: -1.1616337299346924
    3. 'temperature' → logprob: -2.2866337299346924
    4. 'diff' → logprob: -2.7866337299346924
    5. 'temps' → logprob: -3.1616337299346924
    6. 'temper' → logprob: -4.036633491516113
    7. 'd' → logprob: -5.411633491516113
    8. 'dif' → logprob: -6.911633491516113
    9. 'dp' → logprob: -7.161633491516113
    10. 'Delta' → logprob: -7.786633491516113

Token 142: ' de' (ID: 334)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.35000330209732056
    2. 'temp' → logprob: -1.7250032424926758
    3. 'diff' → logprob: -2.600003242492676
    4. 'temperature' → logprob: -3.475003242492676
    5. 'total' → logprob: -4.725003242492676
    6. 'temps' → logprob: -7.600003242492676
    7. 'initial' → logprob: -7.600003242492676
    8. 'd' → logprob: -7.975003242492676
    9. 'current' → logprob: -8.350003242492676
    10. 'difference' → logprob: -8.350003242492676

Token 143: ' température' (ID: 78610)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5615804195404053
    2. 'd' → logprob: -1.9365804195404053
    3. 'temperature' → logprob: -2.3115804195404053
    4. 'temp' → logprob: -2.6865804195404053
    5. 'diff' → logprob: -3.3115804195404053
    6. 'dif' → logprob: -3.6865804195404053
    7. 'temper' → logprob: -3.6865804195404053
    8. 'vari' → logprob: -4.561580657958984
    9. 'la' → logprob: -5.186580657958984
    10. ' delta' → logprob: -5.436580657958984

Token 144: ' à' (ID: 1221)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5329188704490662
    2. 'delta' → logprob: -1.282918930053711
    3. 'temperature' → logprob: -2.157918930053711
    4. 'total' → logprob: -4.407918930053711
    5. 'temps' → logprob: -5.657918930053711
    6. 'diff' → logprob: -5.782918930053711
    7. 'current' → logprob: -7.532918930053711
    8. 'res' → logprob: -8.407918930053711
    9. 'sum' → logprob: -8.907918930053711
    10. 'tmp' → logprob: -8.907918930053711

Token 145: ' Spot' (ID: 29223)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15476594865322113
    2. 'i' → logprob: -3.2797658443450928
    3. 'spot' → logprob: -4.279766082763672
    4. 'l' → logprob: -4.404766082763672
    5. ' partir' → logprob: -4.404766082763672
    6. 'Spot' → logprob: -4.404766082763672
    7. 'part' → logprob: -4.654766082763672
    8. '[i' → logprob: -4.779766082763672
    9. '1' → logprob: -5.404766082763672
    10. 'u' → logprob: -5.529766082763672

Token 146: ' N' (ID: 478)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4743991494178772
    2. '0' → logprob: -1.5993990898132324
    3. '=' → logprob: -2.5993990898132324
    4. 'diff' → logprob: -3.7243990898132324
    5. ' =' → logprob: -3.8493990898132324
    6. 'temp' → logprob: -4.599399089813232
    7. 'temps' → logprob: -4.599399089813232
    8. 'sum' → logprob: -4.724399089813232
    9. 'spots' → logprob: -4.849399089813232
    10. 'total' → logprob: -5.474399089813232

Token 147: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.444234699010849
    2. 'delta' → logprob: -1.3192347288131714
    3. 'temperature' → logprob: -2.444234609603882
    4. 'diff' → logprob: -6.694234848022461
    5. 'temps' → logprob: -6.944234848022461
    6. 'total' → logprob: -7.319234848022461
    7. 'res' → logprob: -7.819234848022461
    8. 'T' → logprob: -8.069234848022461
    9. 'current' → logprob: -8.069234848022461
    10. 'result' → logprob: -8.819234848022461

Token 148: '#' (ID: 2)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6364602446556091
    2. 'delta' → logprob: -0.8864602446556091
    3. 'temperature' → logprob: -2.886460304260254
    4. 'total' → logprob: -6.886460304260254
    5. 'temps' → logprob: -7.386460304260254
    6. 'diff' → logprob: -7.636460304260254
    7. 'T' → logprob: -8.386460304260254
    8. 'current' → logprob: -8.761460304260254
    9. 'res' → logprob: -9.136460304260254
    10. 'd' → logprob: -9.886460304260254

Token 149: ' On' (ID: 2160)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3194189965724945
    2. 'temp' → logprob: -1.444419026374817
    3. 'temperature' → logprob: -3.5694189071655273
    4. 'diff' → logprob: -4.819418907165527
    5. 'temps' → logprob: -7.444418907165527
    6. 'total' → logprob: -8.569418907165527
    7. ' delta' → logprob: -9.194418907165527
    8. 'current' → logprob: -9.319418907165527
    9. 'res' → logprob: -9.694418907165527
    10. 'T' → logprob: -9.944418907165527

Token 150: ' somme' (ID: 64484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5048810839653015
    2. 'for' → logprob: -1.3798811435699463
    3. ' =' → logprob: -2.0048811435699463
    4. ' for' → logprob: -5.754880905151367
    5. 'def' → logprob: -6.379880905151367
    6. '_' → logprob: -6.504880905151367
    7. '#' → logprob: -7.754880905151367
    8. 'temperature' → logprob: -8.004880905151367
    9. 'range' → logprob: -8.129880905151367
    10. 'i' → logprob: -8.504880905151367

Token 151: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3764750957489014
    2. '0' → logprob: -1.8764750957489014
    3. 'temp' → logprob: -1.8764750957489014
    4. '_' → logprob: -2.5014750957489014
    5. 'for' → logprob: -2.5014750957489014
    6. ' =' → logprob: -3.0014750957489014
    7. 'i' → logprob: -3.3764750957489014
    8. '+=' → logprob: -3.5014750957489014
    9. '(' → logprob: -3.7514750957489014
    10. 'delta' → logprob: -3.8764750957489014

Token 152: ' changements' (ID: 105486)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5703636407852173
    2. 'd' → logprob: -1.1953636407852173
    3. 'diff' → logprob: -2.6953635215759277
    4. 'temp' → logprob: -4.320363521575928
    5. 'vari' → logprob: -4.570363521575928
    6. 'chang' → logprob: -4.820363521575928
    7. 'dif' → logprob: -5.070363521575928
    8. 'temps' → logprob: -5.570363521575928
    9. ' delta' → logprob: -5.695363521575928
    10. 'N' → logprob: -5.945363521575928

Token 153: ' de' (ID: 334)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.521368145942688
    2. 'delta' → logprob: -1.271368145942688
    3. 'temperature' → logprob: -2.1463680267333984
    4. 'diff' → logprob: -6.146368026733398
    5. 'temps' → logprob: -6.396368026733398
    6. 'res' → logprob: -6.396368026733398
    7. 'total' → logprob: -6.646368026733398
    8. 'result' → logprob: -7.896368026733398
    9. 'current' → logprob: -7.896368026733398
    10. 'change' → logprob: -8.021368026733398

Token 154: ' température' (ID: 78610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34357020258903503
    2. 'temp' → logprob: -1.8435702323913574
    3. 'temperature' → logprob: -2.5935702323913574
    4. ' i' → logprob: -3.9685702323913574
    5. 't' → logprob: -4.968570232391357
    6. ' température' → logprob: -4.968570232391357
    7. '0' → logprob: -5.468570232391357
    8. 'delta' → logprob: -5.593570232391357
    9. 'temper' → logprob: -5.968570232391357
    10. 'temps' → logprob: -6.093570232391357

Token 155: ' entre' (ID: 3853)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5480642318725586
    2. 'temperature' → logprob: -1.2980642318725586
    3. 'delta' → logprob: -1.9230642318725586
    4. 'diff' → logprob: -7.173064231872559
    5. 'temps' → logprob: -7.298064231872559
    6. 'T' → logprob: -8.298064231872559
    7. 'current' → logprob: -8.423064231872559
    8. 'res' → logprob: -8.673064231872559
    9. 'total' → logprob: -8.798064231872559
    10. 't' → logprob: -9.048064231872559

Token 156: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25415751338005066
    2. 'i' → logprob: -1.504157543182373
    3. ' i' → logprob: -6.754157543182373
    4. 'les' → logprob: -7.629157543182373
    5. 'range' → logprob: -8.504157066345215
    6. ' ' → logprob: -9.504157066345215
    7. 'indices' → logprob: -10.254157066345215
    8. '```' → logprob: -10.254157066345215
    9. 'spots' → logprob: -10.379157066345215
    10. '[i' → logprob: -10.629157066345215

Token 157: ' paire' (ID: 148856)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9289857149124146
    2. 'segment' → logprob: -1.4289857149124146
    3. 'indice' → logprob: -2.428985595703125
    4. ' paire' → logprob: -2.678985595703125
    5. 'pair' → logprob: -2.803985595703125
    6. 'point' → logprob: -3.803985595703125
    7. 'interval' → logprob: -4.053985595703125
    8. 'spot' → logprob: -4.178985595703125
    9. ' couple' → logprob: -4.303985595703125
    10. ' i' → logprob: -4.428985595703125

Token 158: ' (' (ID: 350)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7790036797523499
    2. 'delta' → logprob: -1.154003620147705
    3. 'temperature' → logprob: -1.529003620147705
    4. 'total' → logprob: -6.029003620147705
    5. 'temps' → logprob: -6.529003620147705
    6. 'res' → logprob: -6.654003620147705
    7. 'diff' → logprob: -7.279003620147705
    8. 'current' → logprob: -7.529003620147705
    9. 'result' → logprob: -7.529003620147705
    10. '```' → logprob: -7.654003620147705

Token 159: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002465071389451623
    2. ' i' → logprob: -6.87746524810791
    3. '0' → logprob: -7.62746524810791
    4. ')' → logprob: -7.75246524810791
    5. 'range' → logprob: -8.87746524810791
    6. 'A' → logprob: -9.37746524810791
    7. '[i' → logprob: -9.75246524810791
    8. ')i' → logprob: -9.87746524810791
    9. '(i' → logprob: -10.12746524810791
    10. 'for' → logprob: -10.62746524810791

Token 160: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02006329596042633
    2. ',i' → logprob: -4.645063400268555
    3. ' ,' → logprob: -5.520063400268555
    4. 'i' → logprob: -5.895063400268555
    5. ')' → logprob: -6.145063400268555
    6. '),' → logprob: -7.645063400268555
    7. '[i' → logprob: -8.395063400268555
    8. ' i' → logprob: -8.520063400268555
    9. '0' → logprob: -9.520063400268555
    10. 'for' → logprob: -9.645063400268555

Token 161: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21358300745487213
    2. '+' → logprob: -2.338582992553711
    3. ',i' → logprob: -2.463582992553711
    4. ')' → logprob: -5.338582992553711
    5. '+i' → logprob: -6.338582992553711
    6. ' ,' → logprob: -6.588582992553711
    7. ' i' → logprob: -7.213582992553711
    8. 'i' → logprob: -7.713582992553711
    9. '[i' → logprob: -7.713582992553711
    10. ',
' → logprob: -7.963582992553711

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -10.000096321105957
    3. 'i' → logprob: -10.375096321105957
    4. '+' → logprob: -11.250096321105957
    5. ')' → logprob: -12.250096321105957
    6. '```' → logprob: -14.625096321105957
    7. '`' → logprob: -14.750096321105957
    8. ' i' → logprob: -15.000096321105957
    9. '`)' → logprob: -16.000097274780273
    10. '0' → logprob: -16.125097274780273

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005070421029813588
    2. 'for' → logprob: -8.125507354736328
    3. ')
' → logprob: -9.000507354736328
    4. '):' → logprob: -10.625507354736328
    5. '+' → logprob: -10.875507354736328
    6. ' )' → logprob: -11.375507354736328
    7. '),' → logprob: -12.125507354736328
    8. ',' → logprob: -12.375507354736328
    9. ')+' → logprob: -12.500507354736328
    10. '#' → logprob: -12.500507354736328

Token 164: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7923991680145264
    2. 'temperature' → logprob: -1.0423991680145264
    3. 'delta' → logprob: -1.6673991680145264
    4. 'diff' → logprob: -5.7923994064331055
    5. 'total' → logprob: -7.4173994064331055
    6. 'temps' → logprob: -7.5423994064331055
    7. 'res' → logprob: -8.042399406433105
    8. 'result' → logprob: -8.042399406433105
    9. 'current' → logprob: -8.292399406433105
    10. '
' → logprob: -8.417399406433105

Token 165: '_sum' (ID: 29859)
  Prédit: 'érature'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érature' → logprob: -0.7660360336303711
    2. ' =' → logprob: -1.891036033630371
    3. '_temp' → logprob: -2.391036033630371
    4. '_temperature' → logprob: -2.516036033630371
    5. 'er' → logprob: -2.766036033630371
    6. '=' → logprob: -3.016036033630371
    7. '_' → logprob: -3.141036033630371
    8. '_diff' → logprob: -4.266036033630371
    9. '_sum' → logprob: -4.391036033630371
    10. '_change' → logprob: -5.266036033630371

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47437000274658203
    2. ' =' → logprob: -0.974370002746582
    3. 's' → logprob: -8.224370002746582
    4. '_=' → logprob: -11.599370002746582
    5. '=_' → logprob: -12.724370002746582
    6. '_' → logprob: -12.849370002746582
    7. ' ' → logprob: -12.974370002746582
    8. 'ation' → logprob: -13.724370002746582
    9. '=s' → logprob: -13.724370002746582
    10. ' ' → logprob: -13.849370002746582

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002966127940453589
    2. ' ' → logprob: -8.125296592712402
    3. '[' → logprob: -14.875296592712402
    4. 'int' → logprob: -17.37529754638672
    5. '(' → logprob: -17.81279754638672
    6. 's' → logprob: -17.81279754638672
    7. '-' → logprob: -17.87529754638672
    8. '   ' → logprob: -18.06279754638672
    9. ' ' → logprob: -18.06279754638672
    10. '۰' → logprob: -18.06279754638672

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -16.9375057220459
    4. 'sum' → logprob: -17.4375057220459
    5. 'int' → logprob: -17.5625057220459
    6. '[' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.3750057220459
    8. 's' → logprob: -18.3750057220459
    9. '=' → logprob: -18.4375057220459
    10. '۰' → logprob: -18.6875057220459

Token 169: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6705003976821899
    2. '
' → logprob: -0.7955003976821899
    3. ' for' → logprob: -3.2955002784729004
    4. '
' → logprob: -9.670500755310059
    5. '<|end|>' → logprob: -10.920500755310059
    6. '\n' → logprob: -11.045500755310059
    7. ' 
' → logprob: -11.170500755310059
    8. '' → logprob: -11.295500755310059
    9. '

' → logprob: -12.545500755310059
    10. '[' → logprob: -12.795500755310059

Token 170: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018293341621756554
    2. ' for' → logprob: -4.643293380737305
    3. '
' → logprob: -4.768293380737305
    4. '\n' → logprob: -12.768293380737305
    5. '<|end|>' → logprob: -14.143293380737305
    6. '
' → logprob: -14.768293380737305
    7. '```' → logprob: -15.018293380737305
    8. '	for' → logprob: -15.018293380737305
    9. ' 
' → logprob: -15.143293380737305
    10. '

' → logprob: -15.518293380737305

Token 171: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06994910538196564
    2. 'i' → logprob: -2.694949150085449
    3. '_i' → logprob: -12.44494915008545
    4. ' range' → logprob: -12.81994915008545
    5. '	i' → logprob: -12.94494915008545
    6. 'range' → logprob: -13.69494915008545
    7. ' ' → logprob: -14.44494915008545
    8. '_' → logprob: -14.69494915008545
    9. ' _' → logprob: -14.81994915008545
    10. '(i' → logprob: -14.94494915008545

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002122780540958047
    2. 'in' → logprob: -6.25212287902832
    3. ' ' → logprob: -9.00212287902832
    4. 'range' → logprob: -10.00212287902832
    5. ' range' → logprob: -10.75212287902832
    6. '_' → logprob: -14.12712287902832
    7. '=' → logprob: -14.25212287902832
    8. ')' → logprob: -14.62712287902832
    9. ',' → logprob: -14.75212287902832
    10. '<|end|>' → logprob: -14.87712287902832

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967913061380386
    2. ' range' → logprob: -2.8119678497314453
    3. '(range' → logprob: -15.436967849731445
    4. '	range' → logprob: -17.311967849731445
    5. ' ' → logprob: -19.061967849731445
    6. ' xrange' → logprob: -20.936967849731445
    7. 'rang' → logprob: -22.936967849731445
    8. '0' → logprob: -23.061967849731445
    9. '.range' → logprob: -23.061967849731445
    10. '  ' → logprob: -23.561967849731445

Token 174: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001853315974585712
    2. '(' → logprob: -6.5018534660339355
    3. 'N' → logprob: -8.001852989196777
    4. ' N' → logprob: -11.751852989196777
    5. '(len' → logprob: -12.376852989196777
    6. '1' → logprob: -13.626852989196777
    7. '(n' → logprob: -13.876852989196777
    8. ' (' → logprob: -14.626852989196777
    9. '0' → logprob: -14.751852989196777
    10. '(
' → logprob: -14.876852989196777

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025752317160367966
    2. ')' → logprob: -4.650752544403076
    3. ' ):' → logprob: -4.775752544403076
    4. '):
' → logprob: -5.525752544403076
    5. '-' → logprob: -6.025752544403076
    6. '+' → logprob: -7.400752544403076
    7. ' -' → logprob: -8.900752067565918
    8. ' )' → logprob: -9.525752067565918
    9. '1' → logprob: -9.525752067565918
    10. ' ' → logprob: -9.650752067565918

Token 176: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5825899839401245
    2. '   ' → logprob: -0.9575899839401245
    3. 'if' → logprob: -3.207590103149414
    4. '	if' → logprob: -4.207590103149414
    5. ' ' → logprob: -6.957590103149414
    6. '    
' → logprob: -8.207590103149414
    7. '    ' → logprob: -8.332590103149414
    8. '  ' → logprob: -8.582590103149414
    9. '       ' → logprob: -9.082590103149414
    10. 'diff' → logprob: -9.582590103149414

Token 177: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013175057247281075
    2. ' if' → logprob: -4.888175010681152
    3. '   ' → logprob: -5.263175010681152
    4. 'diff' (adapté à ' diff') → logprob: -8.013175010681152
    5. 'delta' → logprob: -10.513175010681152
    6. '	if' → logprob: -12.013175010681152
    7. ' diff' → logprob: -13.013175010681152
    8. '       ' → logprob: -13.388175010681152
    9. 'temp' → logprob: -13.388175010681152
    10. '```' → logprob: -13.513175010681152

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6988614201545715
    2. ' =' → logprob: -0.6988614201545715
    3. '=A' → logprob: -5.198861598968506
    4. '>' → logprob: -9.698861122131348
    5. '=i' → logprob: -10.698861122131348
    6. ']' → logprob: -10.948861122131348
    7. '=int' → logprob: -11.198861122131348
    8. 'A' → logprob: -11.323861122131348
    9. ')' → logprob: -11.573861122131348
    10. ' ' → logprob: -11.573861122131348

Token 179: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009163398644886911
    2. ' A' → logprob: -7.000916481018066
    3. '(A' → logprob: -12.625916481018066
    4. '   ' → logprob: -13.750916481018066
    5. '	A' → logprob: -14.625916481018066
    6. ' ' → logprob: -17.12591552734375
    7. '>A' → logprob: -17.37591552734375
    8. '  ' → logprob: -18.37591552734375
    9. '=A' → logprob: -18.75091552734375
    10. '
' → logprob: -18.87591552734375

Token 180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.996708104154095e-05
    2. '[' → logprob: -9.375100135803223
    3. 'i' → logprob: -11.875100135803223
    4. ' [' → logprob: -12.500100135803223
    5. '[I' → logprob: -13.625100135803223
    6. '[A' → logprob: -14.250100135803223
    7. '```' → logprob: -14.750100135803223
    8. '   ' → logprob: -15.000100135803223
    9. ' ' → logprob: -15.000100135803223
    10. '[
' → logprob: -15.250100135803223

Token 181: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049012430012226105
    2. ']' → logprob: -3.0490124225616455
    3. ' +' → logprob: -8.549012184143066
    4. ']<' → logprob: -8.674012184143066
    5. '[i' → logprob: -10.924012184143066
    6. '],' → logprob: -11.799012184143066
    7. '+]' → logprob: -11.924012184143066
    8. ']+' → logprob: -12.049012184143066
    9. ' ]' → logprob: -12.049012184143066
    10. '[' → logprob: -12.299012184143066

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010086346883326769
    2. '+' → logprob: -7.0010085105896
    3. ']' → logprob: -9.376008987426758
    4. ' ' → logprob: -11.876008987426758
    5. ']+' → logprob: -13.126008987426758
    6. '```' → logprob: -14.126008987426758
    7. ']-' → logprob: -14.501008987426758
    8. '   ' → logprob: -14.626008987426758
    9. ' +' → logprob: -14.751008987426758
    10. '
' → logprob: -15.126008987426758

Token 183: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06211075559258461
    2. '-' → logprob: -2.812110662460327
    3. ' ' → logprob: -8.937110900878906
    4. ')' → logprob: -12.687110900878906
    5. '   ' → logprob: -12.687110900878906
    6. ']' → logprob: -13.312110900878906
    7. ' ' → logprob: -14.187110900878906
    8. '  ' → logprob: -14.687110900878906
    9. '[' → logprob: -14.812110900878906
    10. '-A' → logprob: -15.062110900878906

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.386883020401001
    2. '-' → logprob: -1.136883020401001
    3. '<|end|>' → logprob: -12.261882781982422
    4. '>' → logprob: -13.386882781982422
    5. ' ' → logprob: -13.886882781982422
    6. '-
' → logprob: -14.136882781982422
    7. ' -
' → logprob: -14.136882781982422
    8. '[' → logprob: -14.261882781982422
    9. '<' → logprob: -14.636882781982422
    10. '-A' → logprob: -14.636882781982422

Token 185: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010914575977949426
    2. ' A' → logprob: -9.12510871887207
    3. 'i' → logprob: -16.00010871887207
    4. '	A' → logprob: -17.62510871887207
    5. '<|end|>' → logprob: -18.12510871887207
    6. '[i' → logprob: -18.50010871887207
    7. 'a' → logprob: -19.00010871887207
    8. '>A' → logprob: -19.25010871887207
    9. '[' → logprob: -19.75010871887207
    10. '```' → logprob: -20.25010871887207

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -13.000004768371582
    3. '[' → logprob: -13.250004768371582
    4. '```' → logprob: -15.250004768371582
    5. ']' → logprob: -17.750003814697266
    6. '\[' → logprob: -18.250003814697266
    7. '[I' → logprob: -18.500003814697266
    8. '[
' → logprob: -18.750003814697266
    9. '[int' → logprob: -19.125003814697266
    10. '(i' → logprob: -19.125003814697266

Token 187: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6232281923294067
    2. '   ' → logprob: -1.2482281923294067
    3. ')
' → logprob: -1.7482281923294067
    4. ']' → logprob: -6.498228073120117
    5. 'if' → logprob: -7.873228073120117
    6. '):
' → logprob: -8.123228073120117
    7. ']
' → logprob: -8.373228073120117
    8. '
' → logprob: -9.998228073120117
    9. ')
' → logprob: -9.998228073120117
    10. ':
' → logprob: -10.623228073120117

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07608944177627563
    2. ' if' → logprob: -2.951089382171631
    3. 'if' → logprob: -3.951089382171631
    4. '
' → logprob: -7.201089382171631
    5. '	if' → logprob: -7.201089382171631
    6. '    
' → logprob: -9.576089859008789
    7. '<|end|>' → logprob: -10.201089859008789
    8. ' ' → logprob: -10.576089859008789
    9. '  ' → logprob: -11.076089859008789
    10. '```' → logprob: -11.201089859008789

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005066845333203673
    2. ' if' → logprob: -7.87550687789917
    3. '   ' → logprob: -9.000506401062012
    4. 'temp' → logprob: -12.875506401062012
    5. '```' → logprob: -14.625506401062012
    6. '	if' → logprob: -15.500506401062012
    7. '       ' → logprob: -17.000507354736328
    8. 'If' → logprob: -18.250507354736328
    9. ' ' → logprob: -18.625507354736328
    10. '
' → logprob: -18.625507354736328

Token 190: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.1286231279373169
    2. 'diff' → logprob: -2.1286230087280273
    3. 'A' → logprob: -7.003623008728027
    4. ' A' → logprob: -7.253623008728027
    5. '	diff' → logprob: -9.628623008728027
    6. '   ' → logprob: -12.003623008728027
    7. '(diff' → logprob: -12.878623008728027
    8. ' ' → logprob: -13.878623008728027
    9. ' dif' → logprob: -14.378623008728027
    10. '    ' → logprob: -15.003623008728027

Token 191: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16028372943401337
    2. '>' → logprob: -1.9102836847305298
    3. ' <' → logprob: -10.160284042358398
    4. ' ' → logprob: -11.410284042358398
    5. '<' → logprob: -12.035284042358398
    6. '">' → logprob: -13.910284042358398
    7. ' <=' → logprob: -14.285284042358398
    8. ')' → logprob: -15.035284042358398
    9. ')>' → logprob: -15.035284042358398
    10. '  ' → logprob: -15.410284042358398

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -18.877805709838867
    4. '<|end|>' → logprob: -19.127805709838867
    5. '```' → logprob: -19.252805709838867
    6. '۰' → logprob: -19.627805709838867
    7. ' ' → logprob: -20.252805709838867
    8. '  ' → logprob: -20.315305709838867
    9. '>' → logprob: -20.440305709838867
    10. 'import' → logprob: -20.877805709838867

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.00002098083496
    4. '۰' → logprob: -20.25002098083496
    5. '>' → logprob: -21.25002098083496
    6. '```' → logprob: -21.37502098083496
    7. '1' → logprob: -21.50002098083496
    8. '  ' → logprob: -21.50002098083496
    9. '<|end|>' → logprob: -21.62502098083496
    10. 'import' → logprob: -21.87502098083496

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05501723289489746
    2. ':
' → logprob: -2.9300172328948975
    3. '       ' → logprob: -9.680017471313477
    4. '   ' → logprob: -10.055017471313477
    5. '):
' → logprob: -11.180017471313477
    6. '):' → logprob: -11.430017471313477
    7. ':
' → logprob: -13.305017471313477
    8. ' :' → logprob: -14.055017471313477
    9. 'temp' → logprob: -14.680017471313477
    10. ',' → logprob: -14.805017471313477

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003875958500429988
    2. 'temp' → logprob: -6.003875732421875
    3. '<|end|>' → logprob: -7.003875732421875
    4. ' temp' → logprob: -8.253875732421875
    5. '   ' → logprob: -8.628875732421875
    6. '           ' → logprob: -12.003875732421875
    7. '        
' → logprob: -12.003875732421875
    8. ' ' → logprob: -12.128875732421875
    9. '<|end|>' → logprob: -12.253875732421875
    10. '      ' → logprob: -12.378875732421875

Token 196: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.004014291800558567
    2. ' temp' → logprob: -5.629014492034912
    3. '   ' → logprob: -8.379014015197754
    4. '       ' → logprob: -9.004014015197754
    5. '
' → logprob: -9.879014015197754
    6. '-' → logprob: -12.629014015197754
    7. '-temp' → logprob: -13.129014015197754
    8. '           ' → logprob: -13.254014015197754
    9. '	temp' → logprob: -13.379014015197754
    10. 'tmp' → logprob: -14.254014015197754

Token 197: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.511406809295295e-06
    2. '_s' → logprob: -12.625006675720215
    3. '_change' → logprob: -13.625006675720215
    4. '_' → logprob: -14.625006675720215
    5. '_temp' → logprob: -14.875006675720215
    6. 'sum' → logprob: -15.000006675720215
    7. '_diff' → logprob: -15.625006675720215
    8. '_sub' → logprob: -16.3750057220459
    9. '=' → logprob: -16.8750057220459
    10. '\' → logprob: -17.1250057220459

Token 198: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.22899910807609558
    2. ' -=' → logprob: -1.603999137878418
    3. '-' → logprob: -5.978999137878418
    4. '+=' → logprob: -7.478999137878418
    5. '   ' → logprob: -7.853999137878418
    6. ' +=' → logprob: -10.103999137878418
    7. '=' → logprob: -10.728999137878418
    8. ' -' → logprob: -10.728999137878418
    9. '```' → logprob: -12.978999137878418
    10. '	' → logprob: -13.103999137878418

Token 199: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.627176768844947e-05
    2. ' S' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.50009536743164
    4. 'diff' → logprob: -18.12509536743164
    5. '	S' → logprob: -19.75009536743164
    6. '(S' → logprob: -20.25009536743164
    7. ' ' → logprob: -20.75009536743164
    8. '  ' → logprob: -22.00009536743164
    9. '```' → logprob: -22.12509536743164
    10. ' ' → logprob: -22.87509536743164

Token 200: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10035234689712524
    2. '*' → logprob: -2.3503522872924805
    3. '*(' → logprob: -8.85035228729248
    4. 'diff' → logprob: -13.35035228729248
    5. '(diff' → logprob: -14.72535228729248
    6. ' ' → logprob: -15.47535228729248
    7. ' *(' → logprob: -16.225353240966797
    8. ' ' → logprob: -16.225353240966797
    9. '*object' → logprob: -17.350353240966797
    10. '**' → logprob: -17.600353240966797

Token 201: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0007104054093360901
    2. ' diff' → logprob: -7.250710487365723
    3. '(diff' → logprob: -14.750710487365723
    4. '	diff' → logprob: -16.500709533691406
    5. 'dif' → logprob: -19.000709533691406
    6. 'difference' → logprob: -20.000709533691406
    7. '.diff' → logprob: -20.750709533691406
    8. '_diff' → logprob: -20.750709533691406
    9. '   ' → logprob: -21.375709533691406
    10. 'd' → logprob: -21.500709533691406

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002875726670026779
    2. 'else' → logprob: -6.002875804901123
    3. ' else' → logprob: -7.877875804901123
    4. '
' → logprob: -12.002875328063965
    5. 'elif' → logprob: -12.502875328063965
    6. '    
' → logprob: -12.627875328063965
    7. '	else' → logprob: -12.627875328063965
    8. '```' → logprob: -13.002875328063965
    9. '<|end|>' → logprob: -13.252875328063965
    10. '\n' → logprob: -16.50287628173828

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015289057046175003
    2. 'else' → logprob: -6.501528739929199
    3. ' else' → logprob: -10.6265287399292
    4. '```' → logprob: -13.7515287399292
    5. '	else' → logprob: -13.8765287399292
    6. 'elif' → logprob: -15.3765287399292
    7. '   ' → logprob: -16.626529693603516
    8. '    
' → logprob: -16.876529693603516
    9. '<|end|>' → logprob: -17.001529693603516
    10. '       ' → logprob: -18.376529693603516

Token 204: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20692488551139832
    2. '   ' → logprob: -1.7069249153137207
    3. ' else' → logprob: -5.206924915313721
    4. 'elif' → logprob: -10.956924438476562
    5. '	else' → logprob: -15.081924438476562
    6. '```' → logprob: -16.831924438476562
    7. ' ' → logprob: -17.081924438476562
    8. ' elif' → logprob: -17.331924438476562
    9. '       ' → logprob: -17.581924438476562
    10. '  ' → logprob: -17.831924438476562

Token 205: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0639338344335556
    2. ':' → logprob: -2.813933849334717
    3. ':
' → logprob: -6.313933849334717
    4. '   ' → logprob: -9.563933372497559
    5. 'temp' → logprob: -10.813933372497559
    6. '      ' → logprob: -11.438933372497559
    7. ' :' → logprob: -11.438933372497559
    8. '        ' → logprob: -11.813933372497559
    9. '           ' → logprob: -11.813933372497559
    10. ' temp' → logprob: -12.313933372497559

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009552309289574623
    2. 'temp' → logprob: -4.884552478790283
    3. ' temp' → logprob: -6.259552478790283
    4. '   ' → logprob: -11.259552001953125
    5. '           ' → logprob: -12.509552001953125
    6. '        ' → logprob: -12.509552001953125
    7. '	temp' → logprob: -12.759552001953125
    8. '    ' → logprob: -12.759552001953125
    9. '      ' → logprob: -13.134552001953125
    10. '     ' → logprob: -13.509552001953125

Token 207: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0033940868452191353
    2. ' temp' → logprob: -5.87839412689209
    3. '       ' → logprob: -7.50339412689209
    4. '   ' → logprob: -10.25339412689209
    5. '	temp' → logprob: -13.62839412689209
    6. '    ' → logprob: -14.62839412689209
    7. '        ' → logprob: -14.75339412689209
    8. '           ' → logprob: -16.003393173217773
    9. ' ' → logprob: -16.628393173217773
    10. 'tmp' → logprob: -16.753393173217773

Token 208: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.392202976712724e-06
    2. 'sum' → logprob: -12.500006675720215
    3. '_' → logprob: -13.625006675720215
    4. '_s' → logprob: -14.000006675720215
    5. ' _' → logprob: -15.875006675720215
    6. '_val' → logprob: -16.7500057220459
    7. '=_' → logprob: -17.0000057220459
    8. '#' → logprob: -17.8750057220459
    9. ''_' → logprob: -18.0000057220459
    10. '##_' → logprob: -18.1250057220459

Token 209: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006727333180606365
    2. ' +=' → logprob: -5.00672721862793
    3. ']+=' → logprob: -11.63172721862793
    4. '-=' → logprob: -14.13172721862793
    5. '   ' → logprob: -14.25672721862793
    6. '+=(' → logprob: -14.25672721862793
    7. ' ' → logprob: -15.00672721862793
    8. '       ' → logprob: -15.38172721862793
    9. '=' → logprob: -15.75672721862793
    10. '    ' → logprob: -16.38172721862793

Token 210: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.026306336745619774
    2. ' T' → logprob: -3.651306390762329
    3. '   ' → logprob: -12.77630615234375
    4. ' ' → logprob: -13.77630615234375
    5. '(T' → logprob: -14.02630615234375
    6. '  ' → logprob: -15.02630615234375
    7. '-T' → logprob: -15.27630615234375
    8. '	T' → logprob: -15.27630615234375
    9. '-' → logprob: -15.90130615234375
    10. '(' → logprob: -16.27630615234375

Token 211: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27465665340423584
    2. ' *' → logprob: -1.5246566534042358
    3. '*(-' → logprob: -3.8996567726135254
    4. '*-' → logprob: -6.274656772613525
    5. '*(' → logprob: -8.274656295776367
    6. '   ' → logprob: -9.524656295776367
    7. '(-' → logprob: -12.899656295776367
    8. 'abs' → logprob: -13.149656295776367
    9. '  ' → logprob: -13.649656295776367
    10. ' ' → logprob: -13.774656295776367

Token 212: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24631965160369873
    2. '(-' → logprob: -1.9963196516036987
    3. ' -' → logprob: -2.7463197708129883
    4. '-d' → logprob: -4.746319770812988
    5. '-A' → logprob: -5.621319770812988
    6. '-D' → logprob: -5.871319770812988
    7. '-int' → logprob: -8.246319770812988
    8. ' (-' → logprob: -8.371319770812988
    9. '-code' → logprob: -8.496319770812988
    10. '-inf' → logprob: -8.871319770812988

Token 213: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -9.13388703338569e-06
    2. ' diff' → logprob: -11.625009536743164
    3. '	diff' → logprob: -15.875009536743164
    4. '(diff' → logprob: -17.500009536743164
    5. 'dif' → logprob: -18.375009536743164
    6. '   ' → logprob: -18.875009536743164
    7. '_diff' → logprob: -20.125009536743164
    8. 'di' → logprob: -20.125009536743164
    9. '  ' → logprob: -20.250009536743164
    10. '.diff' → logprob: -20.500009536743164

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.661626634420827e-05
    2. ' )' → logprob: -9.500086784362793
    3. ')
' → logprob: -11.750086784362793
    4. '   ' → logprob: -13.000086784362793
    5. '))' → logprob: -15.000086784362793
    6. '<|end|>' → logprob: -15.375086784362793
    7. ')#' → logprob: -15.750086784362793
    8. ')return' → logprob: -16.250085830688477
    9. ' ' → logprob: -16.375085830688477
    10. '),' → logprob: -16.750085830688477

Token 215: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10053972899913788
    2. 'print' → logprob: -2.3505396842956543
    3. ' for' → logprob: -8.475540161132812
    4. 'Q' → logprob: -10.100540161132812
    5. '```' → logprob: -10.350540161132812
    6. '
' → logprob: -10.975540161132812
    7. '#' → logprob: -10.975540161132812
    8. 'results' → logprob: -12.600540161132812
    9. 'result' → logprob: -12.850540161132812
    10. 'answer' → logprob: -13.225540161132812

Token 216: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018625955563038588
    2. 'results' → logprob: -7.251862525939941
    3. 'output' → logprob: -8.001862525939941
    4. 'queries' → logprob: -8.251862525939941
    5. ' for' → logprob: -8.626862525939941
    6. 'result' → logprob: -9.001862525939941
    7. 'print' → logprob: -9.501862525939941
    8. 'outputs' → logprob: -9.626862525939941
    9. 'res' → logprob: -10.001862525939941
    10. 'answers' → logprob: -10.501862525939941

Token 217: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.020752551034092903
    2. '_' → logprob: -4.020752429962158
    3. ' q' → logprob: -6.395752429962158
    4. ' range' → logprob: -7.520752429962158
    5. ' chaque' → logprob: -9.145752906799316
    6. ' i' → logprob: -9.395752906799316
    7. '__' → logprob: -10.520752906799316
    8. ' r' → logprob: -10.895752906799316
    9. ' ' → logprob: -11.020752906799316
    10. ' Q' → logprob: -11.145752906799316

Token 218: ' opération' (ID: 86023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25221574306488037
    2. ' _' → logprob: -1.5022157430648804
    3. ' query' → logprob: -9.127215385437012
    4. '_query' → logprob: -9.252215385437012
    5. '__' → logprob: -10.377215385437012
    6. 'query' → logprob: -10.627215385437012
    7. '_q' → logprob: -11.502215385437012
    8. 'q' → logprob: -12.502215385437012
    9. ' q' → logprob: -13.127215385437012
    10. '_question' → logprob: -13.252215385437012

Token 219: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2971479892730713
    2. 'for' → logprob: -1.4221479892730713
    3. ' for' → logprob: -4.297147750854492
    4. ':
' → logprob: -6.922147750854492
    5. '
' → logprob: -7.422147750854492
    6. '<|end|>' → logprob: -8.172147750854492
    7. 'range' → logprob: -8.672147750854492
    8. ' range' → logprob: -10.422147750854492
    9. 'in' → logprob: -10.547147750854492
    10. '\n' → logprob: -10.547147750854492

Token 220: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8575116991996765
    2. 'for' → logprob: -1.7325117588043213
    3. '_' → logprob: -2.1075117588043213
    4. ' _' → logprob: -2.2325117588043213
    5. ' line' → logprob: -2.4825117588043213
    6. ' 
' → logprob: -4.357511520385742
    7. ' x' → logprob: -4.357511520385742
    8. ' ' → logprob: -4.482511520385742
    9. 'x' → logprob: -4.732511520385742
    10. ' op' → logprob: -4.982511520385742

Token 221: ' mod' (ID: 1812)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38908377289772034
    2. 'for' → logprob: -1.139083743095398
    3. ' range' → logprob: -7.6390838623046875
    4. ' ' → logprob: -8.764083862304688
    5. '<|end|>' → logprob: -8.764083862304688
    6. ' #' → logprob: -8.889083862304688
    7. ' souhaite' → logprob: -9.014083862304688
    8. ' 
' → logprob: -9.264083862304688
    9. ':' → logprob: -9.264083862304688
    10. 'range' → logprob: -9.514083862304688

Token 222: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4244733452796936
    2. 'ify' → logprob: -1.1744732856750488
    3. 'ifie' → logprob: -4.299473285675049
    4. 'f' → logprob: -4.549473285675049
    5. 'for' → logprob: -4.924473285675049
    6. 'def' → logprob: -6.549473285675049
    7. 'port' → logprob: -6.799473285675049
    8. ' =' → logprob: -7.549473285675049
    9. '=' → logprob: -7.674473285675049
    10. 'ifier' → logprob: -7.799473285675049

Token 223: ' certains' (ID: 30681)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0411173105239868
    2. 'for' → logprob: -1.4161173105239868
    3. ' A' → logprob: -2.1661171913146973
    4. ' for' → logprob: -2.2911171913146973
    5. '<|end|>' → logprob: -3.1661171913146973
    6. ' the' → logprob: -3.6661171913146973
    7. 'the' → logprob: -4.041117191314697
    8. 'temp' → logprob: -4.291117191314697
    9. ' ' → logprob: -4.541117191314697
    10. '#' → logprob: -4.791117191314697

Token 224: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2355546951293945
    2. 'tokens' → logprob: -1.3605546951293945
    3. 'indices' → logprob: -1.3605546951293945
    4. 'token' → logprob: -2.8605546951293945
    5. '<|end|>' → logprob: -2.9855546951293945
    6. 'spots' → logprob: -3.7355546951293945
    7. 'lines' → logprob: -4.1105546951293945
    8. 'points' → logprob: -4.8605546951293945
    9. 'i' → logprob: -5.1105546951293945
    10. 'indexes' → logprob: -5.2355546951293945

Token 225: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6598602533340454
    2. '[' → logprob: -1.1598602533340454
    3. 'for' → logprob: -2.284860134124756
    4. ',' → logprob: -4.284860134124756
    5. '[]' → logprob: -4.534860134124756
    6. '[N' → logprob: -4.909860134124756
    7. ']' → logprob: -5.034860134124756
    8. ')' → logprob: -5.034860134124756
    9. 's' → logprob: -6.034860134124756
    10. ' for' → logprob: -6.159860134124756

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.081282839179039
    2. '],' → logprob: -2.5812828540802
    3. '+' → logprob: -6.706282615661621
    4. '[' → logprob: -8.331282615661621
    5. '[i' → logprob: -8.956282615661621
    6. ' ]' → logprob: -8.956282615661621
    7. '[k' → logprob: -8.956282615661621
    8. '[j' → logprob: -8.956282615661621
    9. 's' → logprob: -9.581282615661621
    10. ']+' → logprob: -9.956282615661621

Token 227: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' X' (ID: 2127)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31328967213630676
    2. 'input' → logprob: -2.0632896423339844
    3. ' input' → logprob: -2.8132896423339844
    4. ' int' → logprob: -3.5632896423339844
    5. ' l' → logprob: -4.313289642333984
    6. 'l' → logprob: -4.563289642333984
    7. ' la' → logprob: -5.438289642333984
    8. 'lambda' → logprob: -5.813289642333984
    9. ' k' → logprob: -6.313289642333984
    10. ' new' → logprob: -6.313289642333984

Token 229: '_j' (ID: 12021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056877393275499344
    2. ' for' → logprob: -3.681877374649048
    3. '<|end|>' → logprob: -3.931877374649048
    4. '
' → logprob: -4.681877613067627
    5. '\n' → logprob: -7.806877613067627
    6. ':' → logprob: -8.431877136230469
    7. '<|end|>' → logprob: -8.431877136230469
    8. ',' → logprob: -9.306877136230469
    9. '  
' → logprob: -10.056877136230469
    10. ':
' → logprob: -10.306877136230469

Token 230: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026820488274097443
    2. ' for' → logprob: -4.401820659637451
    3. '<|end|>' → logprob: -4.651820659637451
    4. '
' → logprob: -5.526820659637451
    5. '<|end|>' → logprob: -8.901820182800293
    6. '\n' → logprob: -9.026820182800293
    7. ',' → logprob: -9.401820182800293
    8. 'while' → logprob: -9.651820182800293
    9. '#' → logprob: -10.401820182800293
    10. '[' → logprob: -10.651820182800293

Token 231: 'add' (ID: 964)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1472325325012207
    2. '):' → logprob: -3.1472325325012207
    3. 'for' → logprob: -3.2722325325012207
    4. ' )' → logprob: -3.8972325325012207
    5. ')
' → logprob: -4.772232532501221
    6. ' for' → logprob: -4.772232532501221
    7. 'input' → logprob: -5.272232532501221
    8. '):
' → logprob: -5.647232532501221
    9. '=' → logprob: -6.647232532501221
    10. ',' → logprob: -6.647232532501221

Token 232: 'itif' (ID: 94904)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0868685320019722
    2. '=' → logprob: -3.2118685245513916
    3. 'ition' → logprob: -3.9618685245513916
    4. ' =' → logprob: -4.836868762969971
    5. 'ed' → logprob: -5.086868762969971
    6. ' +=' → logprob: -6.336868762969971
    7. 'itional' → logprob: -6.336868762969971
    8. ' )' → logprob: -6.461868762969971
    9. '+=' → logprob: -7.586868762969971
    10. ']' → logprob: -7.711868762969971

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058732494711875916
    2. ' )' → logprob: -2.933732509613037
    3. '=' → logprob: -7.558732509613037
    4. ')
' → logprob: -7.808732509613037
    5. ' +=' → logprob: -8.058732032775879
    6. '+' → logprob: -8.433732032775879
    7. ' =' → logprob: -8.433732032775879
    8. '_)' → logprob: -8.433732032775879
    9. '_j' → logprob: -8.558732032775879
    10. 'def' → logprob: -8.683732032775879

Token 234: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0063124471344053745
    2. ' for' → logprob: -5.506312370300293
    3. '
' → logprob: -6.256312370300293
    4. '<|end|>' → logprob: -8.381312370300293
    5. 'Q' → logprob: -10.256312370300293
    6. '```' → logprob: -11.381312370300293
    7. '<|end|>' → logprob: -11.506312370300293
    8. '.' → logprob: -12.631312370300293
    9. ' 
' → logprob: -12.881312370300293
    10. '\n' → logprob: -13.006312370300293

Token 235: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006740119773894548
    2. ' for' → logprob: -5.006740093231201
    3. 'Q' → logprob: -11.50674057006836
    4. '<|end|>' → logprob: -12.13174057006836
    5. '
' → logprob: -12.50674057006836
    6. 'range' → logprob: -13.75674057006836
    7. 'while' → logprob: -14.00674057006836
    8. '#' → logprob: -14.75674057006836
    9. '```' → logprob: -15.00674057006836
    10. '<|end|>' → logprob: -15.13174057006836

Token 236: ''alt' (ID: 121845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0647943019866943
    2. '#' → logprob: -1.1897943019866943
    3. 'i' → logprob: -2.1897943019866943
    4. 'ine' → logprob: -2.4397943019866943
    5. ' for' → logprob: -3.6897943019866943
    6. '_' → logprob: -3.6897943019866943
    7. '+' → logprob: -4.064794540405273
    8. 'e' → logprob: -4.064794540405273
    9. 'A' → logprob: -4.814794540405273
    10. 'n' → logprob: -5.189794540405273

Token 237: 'itude' (ID: 5962)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.6331973671913147
    2. 'itude' → logprob: -1.38319730758667
    3. 'er' → logprob: -2.50819730758667
    4. 'itudes' → logprob: -3.00819730758667
    5. 'e' → logprob: -3.50819730758667
    6. 'é' → logprob: -4.00819730758667
    7. 'érations' → logprob: -4.25819730758667
    8. 'u' → logprob: -5.13319730758667
    9. 'érité' → logprob: -5.25819730758667
    10. '#' → logprob: -5.50819730758667

Token 238: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.11262845993042
    2. 's' → logprob: -1.61262845993042
    3. 'diff' → logprob: -1.73762845993042
    4. 'A' → logprob: -2.61262845993042
    5. '<|end|>' → logprob: -2.73762845993042
    6. ' change' → logprob: -3.23762845993042
    7. '#' → logprob: -4.36262845993042
    8. 'k' → logprob: -4.61262845993042
    9. 'mod' → logprob: -4.73762845993042
    10. ' A' → logprob: -4.98762845993042

Token 239: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.625039279460907
    2. ' =' → logprob: -1.3750393390655518
    3. '=' → logprob: -2.5000393390655518
    4. 'A' → logprob: -2.7500393390655518
    5. ',' → logprob: -4.250039100646973
    6. '<|end|>' → logprob: -4.375039100646973
    7. 'for' → logprob: -5.000039100646973
    8. 'd' → logprob: -5.500039100646973
    9. ' A' → logprob: -5.750039100646973
    10. ']' → logprob: -5.750039100646973

Token 240: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1832890510559082
    2. ' X' → logprob: -1.9332890510559082
    3. 'A' → logprob: -4.308289051055908
    4. ' A' → logprob: -5.433289051055908
    5. '1' → logprob: -6.808289051055908
    6. ' ' → logprob: -7.308289051055908
    7. 'x' → logprob: -7.433289051055908
    8. 'diff' → logprob: -7.433289051055908
    9. ' +' → logprob: -7.558289051055908
    10. '+' → logprob: -7.558289051055908

Token 241: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.11148972809314728
    2. '_' → logprob: -2.361489772796631
    3. '_k' → logprob: -5.111489772796631
    4. 'j' → logprob: -6.486489772796631
    5. '[' → logprob: -6.611489772796631
    6. '[j' → logprob: -6.861489772796631
    7. '[k' → logprob: -8.111489295959473
    8. 'k' → logprob: -8.361489295959473
    9. '_i' → logprob: -9.111489295959473
    10. ')' → logprob: -9.236489295959473

Token 242: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36585313081741333
    2. '<|end|>' → logprob: -1.4908530712127686
    3. '
' → logprob: -3.3658530712127686
    4. ' for' → logprob: -3.6158530712127686
    5. '<|end|>' → logprob: -4.865853309631348
    6. '+' → logprob: -5.490853309631348
    7. '#' → logprob: -6.365853309631348
    8. ')' → logprob: -6.615853309631348
    9. ',' → logprob: -7.240853309631348
    10. '\n' → logprob: -7.740853309631348

Token 243: ' tous' (ID: 10688)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5760130286216736
    2. 'A' → logprob: -1.5760130882263184
    3. ' k' → logprob: -2.2010130882263184
    4. ' A' → logprob: -2.8260130882263184
    5. 'l' → logprob: -3.5760130882263184
    6. ' la' → logprob: -5.326013088226318
    7. 'le' → logprob: -5.451013088226318
    8. ' l' → logprob: -5.701013088226318
    9. 'la' → logprob: -6.201013088226318
    10. 'un' → logprob: -6.201013088226318

Token 244: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.46743878722190857
    2. ' k' → logprob: -1.592438817024231
    3. 'indices' → logprob: -3.3424386978149414
    4. '_k' → logprob: -3.7174386978149414
    5. 'A' → logprob: -4.092438697814941
    6. ' i' → logprob: -4.217438697814941
    7. ')' → logprob: -4.717438697814941
    8. '[k' → logprob: -4.967438697814941
    9. ' indices' → logprob: -5.092438697814941
    10. 'j' → logprob: -5.217438697814941

Token 245: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.193027064204216
    2. 'i' → logprob: -1.8180270195007324
    3. 'A' → logprob: -5.943027019500732
    4. ' k' → logprob: -6.068027019500732
    5. ' i' → logprob: -6.318027019500732
    6. 'j' → logprob: -6.318027019500732
    7. 'range' → logprob: -6.818027019500732
    8. '_' → logprob: -7.193027019500732
    9. '_k' → logprob: -7.193027019500732
    10. 'indices' → logprob: -7.693027019500732

Token 246: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4689217209815979
    2. ' for' → logprob: -2.218921661376953
    3. '
' → logprob: -2.468921661376953
    4. '<|end|>' → logprob: -2.968921661376953
    5. '+' → logprob: -3.468921661376953
    6. 's' → logprob: -3.968921661376953
    7. ' =' → logprob: -4.468921661376953
    8. '=' → logprob: -4.593921661376953
    9. ',' → logprob: -4.593921661376953
    10. '+
' → logprob: -5.218921661376953

Token 247: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5266752243041992
    2. ' range' → logprob: -0.9016752243041992
    3. '[' → logprob: -6.651675224304199
    4. 'A' → logprob: -8.6516752243042
    5. 'queries' → logprob: -8.6516752243042
    6. ']' → logprob: -8.7766752243042
    7. 's' → logprob: -8.7766752243042
    8. '(range' → logprob: -8.7766752243042
    9. 'r' → logprob: -9.0266752243042
    10. '{' → logprob: -9.0266752243042

Token 248: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4642352759838104
    2. '1' → logprob: -2.339235305786133
    3. 'L' → logprob: -2.464235305786133
    4. 'Q' → logprob: -3.089235305786133
    5. ']' → logprob: -3.089235305786133
    6. 'i' → logprob: -3.339235305786133
    7. 'k' → logprob: -4.089235305786133
    8. 'S' → logprob: -4.589235305786133
    9. 'l' → logprob: -4.964235305786133
    10. 'input' → logprob: -5.089235305786133

Token 249: '_j' (ID: 12021)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015103540383279324
    2. ',Q' → logprob: -5.140103340148926
    3. 'Q' → logprob: -6.015103340148926
    4. ' ,' → logprob: -6.265103340148926
    5. ',R' → logprob: -6.640103340148926
    6. 'k' → logprob: -6.640103340148926
    7. ',j' → logprob: -7.890103340148926
    8. ',k' → logprob: -8.015103340148926
    9. ',L' → logprob: -8.265103340148926
    10. ',K' → logprob: -8.640103340148926

Token 250: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015530983917415142
    2. ' ,' → logprob: -4.390531063079834
    3. ',L' → logprob: -6.890531063079834
    4. ',Q' → logprob: -6.890531063079834
    5. ',K' → logprob: -7.765531063079834
    6. ',j' → logprob: -9.015530586242676
    7. ',M' → logprob: -9.015530586242676
    8. ',P' → logprob: -9.515530586242676
    9. ',R' → logprob: -9.890530586242676
    10. ',N' → logprob: -10.015530586242676

Token 251: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.28530481457710266
    2. ']' → logprob: -1.4103047847747803
    3. '+' → logprob: -6.410305023193359
    4. '],' → logprob: -6.785305023193359
    5. 'j' → logprob: -7.410305023193359
    6. '])' → logprob: -8.91030502319336
    7. ',' → logprob: -8.91030502319336
    8. ']+' → logprob: -9.03530502319336
    9. ']_' → logprob: -9.53530502319336
    10. '_k' → logprob: -9.78530502319336

Token 252: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24859163165092468
    2. '+' → logprob: -1.623591661453247
    3. '],' → logprob: -4.498591423034668
    4. ']
' → logprob: -4.748591423034668
    5. ' +' → logprob: -6.623591423034668
    6. ']+' → logprob: -7.873591423034668
    7. ',' → logprob: -8.123591423034668
    8. ']:
' → logprob: -8.123591423034668
    9. ' ]' → logprob: -8.623591423034668
    10. ')' → logprob: -8.998591423034668

Token 253: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00788425374776125
    2. ' for' → logprob: -5.0078840255737305
    3. 'Q' → logprob: -7.0078840255737305
    4. '
' → logprob: -8.75788402557373
    5. '#' → logprob: -10.50788402557373
    6. ',' → logprob: -11.50788402557373
    7. '```' → logprob: -11.75788402557373
    8. '\n' → logprob: -11.88288402557373
    9. 'while' → logprob: -12.13288402557373
    10. 'range' → logprob: -12.38288402557373

Token 254: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007653143256902695
    2. ' for' → logprob: -8.125764846801758
    3. 'results' → logprob: -8.625764846801758
    4. 'output' → logprob: -9.125764846801758
    5. 'res' → logprob: -9.375764846801758
    6. 'result' → logprob: -9.625764846801758
    7. 'Q' → logprob: -12.000764846801758
    8. 'outputs' → logprob: -12.250764846801758
    9. 'queries' → logprob: -12.250764846801758
    10. 'answer' → logprob: -12.750764846801758

Token 255: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.4600585401058197
    2. '#' → logprob: -1.710058569908142
    3. 's' → logprob: -2.9600584506988525
    4. 'f' → logprob: -3.3350584506988525
    5. 'def' → logprob: -3.4600584506988525
    6. ' reste' → logprob: -4.210058689117432
    7. ' semble' → logprob: -4.335058689117432
    8. ' faudra' → logprob: -4.460058689117432
    9. ' faudrait' → logprob: -4.710058689117432
    10. 'continue' → logprob: -6.085058689117432

Token 256: ' mettre' (ID: 25339)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.2405223846435547
    2. ' mettre' → logprob: -2.2405223846435547
    3. ' gérer' → logprob: -3.8655223846435547
    4. 'contin' → logprob: -3.8655223846435547
    5. 'maint' → logprob: -4.115522384643555
    6. 'update' → logprob: -4.240522384643555
    7. ' recal' → logprob: -4.865522384643555
    8. '#' → logprob: -5.365522384643555
    9. 'ré' → logprob: -5.615522384643555
    10. 'met' → logprob: -5.865522384643555

Token 257: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.645150363445282
    2. 'à' → logprob: -0.770150363445282
    3. '#' → logprob: -5.020150184631348
    4. '```' → logprob: -6.145150184631348
    5. 'aj' → logprob: -6.520150184631348
    6. 'À' → logprob: -7.145150184631348
    7. ''à' → logprob: -8.020150184631348
    8. 'a' → logprob: -8.145150184631348
    9. 'jour' → logprob: -8.395150184631348
    10. '-à' → logprob: -8.520150184631348

Token 258: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0014515443472191691
    2. '```' → logprob: -7.25145149230957
    3. 'jou' → logprob: -8.00145149230957
    4. 'jours' → logprob: -8.25145149230957
    5. ' ' → logprob: -10.25145149230957
    6. '#' → logprob: -11.00145149230957
    7. ' jour' → logprob: -11.25145149230957
    8. '``' → logprob: -11.50145149230957
    9. 'Jour' → logprob: -11.62645149230957
    10. 'day' → logprob: -11.75145149230957

Token 259: ' la' (ID: 557)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1562710404396057
    2. ' temp' → logprob: -2.156270980834961
    3. ' la' → logprob: -4.656270980834961
    4. 'A' → logprob: -5.156270980834961
    5. ' A' → logprob: -5.531270980834961
    6. ' le' → logprob: -5.656270980834961
    7. ' les' → logprob: -6.781270980834961
    8. 'la' → logprob: -6.906270980834961
    9. 'le' → logprob: -7.281270980834961
    10. 'l' → logprob: -7.406270980834961

Token 260: ' température' (ID: 78610)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.017024096101522446
    2. ' temp' → logprob: -5.642024040222168
    3. 's' → logprob: -5.767024040222168
    4. 'diff' → logprob: -6.017024040222168
    5. '#' → logprob: -6.142024040222168
    6. 'val' → logprob: -6.392024040222168
    7. 'for' → logprob: -6.642024040222168
    8. 'temperature' → logprob: -7.267024040222168
    9. 'sum' → logprob: -7.642024040222168
    10. ' somme' → logprob: -8.017024040222168

Token 261: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014847563579678535
    2. ' for' → logprob: -9.12514877319336
    3. 'Q' → logprob: -10.25014877319336
    4. 'def' → logprob: -13.37514877319336
    5. 'import' → logprob: -13.87514877319336
    6. 'q' → logprob: -14.87514877319336
    7. '#' → logprob: -15.12514877319336
    8. 'from' → logprob: -15.12514877319336
    9. '
' → logprob: -15.75014877319336
    10. 'L' → logprob: -15.75014877319336

Token 262: ' tenant' (ID: 38634)
  Prédit: 'tenant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tenant' → logprob: -1.0468517541885376
    2. 'for' → logprob: -1.7968517541885376
    3. '```' → logprob: -2.171851634979248
    4. 'fonction' → logprob: -2.671851634979248
    5. 'comp' → logprob: -3.296851634979248
    6. '#' → logprob: -3.421851634979248
    7. ' prenant' → logprob: -3.671851634979248
    8. 'consider' → logprob: -3.796851634979248
    9. 'continu' → logprob: -3.796851634979248
    10. 'g' → logprob: -4.171851634979248

Token 263: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.001019471324980259
    2. ' compte' → logprob: -7.376019477844238
    3. '```' → logprob: -8.626019477844238
    4. 'account' → logprob: -9.376019477844238
    5. '#' → logprob: -9.876019477844238
    6. 'com' → logprob: -10.126019477844238
    7. 'compagn' → logprob: -12.251019477844238
    8. '   ' → logprob: -12.251019477844238
    9. '     ' → logprob: -12.501019477844238
    10. '    ' → logprob: -12.626019477844238

Token 264: ' uniquement' (ID: 65527)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.10873157531023026
    2. ' de' → logprob: -2.483731508255005
    3. 'des' → logprob: -4.358731746673584
    4. ' du' → logprob: -5.483731746673584
    5. 'de' → logprob: -6.483731746673584
    6. ' uniquement' → logprob: -8.108731269836426
    7. 'du' → logprob: -8.733731269836426
    8. '```' → logprob: -8.983731269836426
    9. 'import' → logprob: -9.483731269836426
    10. ' of' → logprob: -9.608731269836426

Token 265: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.010390075854957104
    2. 'des' → logprob: -4.635390281677246
    3. ' de' → logprob: -8.260390281677246
    4. ' du' → logprob: -8.760390281677246
    5. ' aux' → logprob: -9.135390281677246
    6. 'du' → logprob: -10.385390281677246
    7. 'de' → logprob: -11.135390281677246
    8. ' ' → logprob: -11.510390281677246
    9. 'aux' → logprob: -11.510390281677246
    10. ' les' → logprob: -11.635390281677246

Token 266: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8558123707771301
    2. 'b' → logprob: -1.3558123111724854
    3. 'i' → logprob: -2.6058123111724854
    4. 'diff' → logprob: -2.6058123111724854
    5. 'points' → logprob: -3.1058123111724854
    6. 'bord' → logprob: -3.2308123111724854
    7. 'ar' → logprob: -4.8558125495910645
    8. ' frontières' → logprob: -4.9808125495910645
    9. 'chang' → logprob: -4.9808125495910645
    10. 'indices' → logprob: -5.1058125495910645

Token 267: 'ords' (ID: 9142)
  Prédit: 'orn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orn' → logprob: -1.0828096866607666
    2. 'ords' → logprob: -1.0828096866607666
    3. 'ord' → logprob: -2.0828096866607666
    4. '#' → logprob: -2.5828096866607666
    5. 'or' → logprob: -3.8328096866607666
    6. '```' → logprob: -4.0828094482421875
    7. 'o' → logprob: -4.5828094482421875
    8. 'orders' → logprob: -4.5828094482421875
    9. 'orne' → logprob: -4.8328094482421875
    10. 'ound' → logprob: -5.0828094482421875

Token 268: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002211516024544835
    2. ' for' → logprob: -6.127211570739746
    3. 'Q' → logprob: -10.627211570739746
    4. '
' → logprob: -14.502211570739746
    5. 'import' → logprob: -14.877211570739746
    6. 'def' → logprob: -15.627211570739746
    7. ' Q' → logprob: -15.627211570739746
    8. '```' → logprob: -15.877211570739746
    9. 'from' → logprob: -16.00221061706543
    10. '#' → logprob: -16.00221061706543

Token 269: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0090265274047852
    2. 'interval' → logprob: -1.8840265274047852
    3. ' la' → logprob: -2.259026527404785
    4. 'L' → logprob: -2.509026527404785
    5. 'R' → logprob: -2.509026527404785
    6. 'range' → logprob: -2.634026527404785
    7. 'la' → logprob: -2.759026527404785
    8. ' l' → logprob: -3.384026527404785
    9. ' L' → logprob: -4.634026527404785
    10. 'ranges' → logprob: -4.884026527404785

Token 270: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13086050748825073
    2. ''' → logprob: -2.8808605670928955
    3. 'e' → logprob: -3.5058605670928955
    4. 'interval' → logprob: -3.7558605670928955
    5. 'es' → logprob: -4.630860328674316
    6. ''inter' → logprob: -7.630860328674316
    7. '```' → logprob: -7.755860328674316
    8. ''é' → logprob: -8.380860328674316
    9. ''import' → logprob: -8.755860328674316
    10. 'interface' → logprob: -8.880860328674316

Token 271: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1330135315656662
    2. 'a' → logprob: -2.3830134868621826
    3. ''' → logprob: -3.7580134868621826
    4. 'e' → logprob: -5.258013725280762
    5. 'range' → logprob: -7.008013725280762
    6. 'interface' → logprob: -7.133013725280762
    7. 'é' → logprob: -8.633013725280762
    8. ''inter' → logprob: -8.758013725280762
    9. 'array' → logprob: -8.883013725280762
    10. '`' → logprob: -9.008013725280762

Token 272: 'le' (ID: 282)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23063792288303375
    2. 's' → logprob: -2.605638027191162
    3. ':' → logprob: -2.855638027191162
    4. 'def' → logprob: -3.980638027191162
    5. '#' → logprob: -4.480638027191162
    6. ',' → logprob: -4.605638027191162
    7. ']' → logprob: -4.730638027191162
    8. ' for' → logprob: -4.980638027191162
    9. 'import' → logprob: -5.480638027191162
    10. '[' → logprob: -5.855638027191162

Token 273: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007226797170005739
    2. ' for' → logprob: -7.250722885131836
    3. 'def' → logprob: -12.750722885131836
    4. 'Q' → logprob: -12.750722885131836
    5. '
' → logprob: -13.375722885131836
    6. 'results' → logprob: -13.375722885131836
    7. 'result' → logprob: -13.875722885131836
    8. 'output' → logprob: -13.875722885131836
    9. 'import' → logprob: -14.750722885131836
    10. 'answer' → logprob: -15.125722885131836

Token 274: '
' (ID: 198)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4823586940765381
    2. ' les' → logprob: -2.232358694076538
    3. 'se' → logprob: -2.732358694076538
    4. '#' → logprob: -3.482358694076538
    5. 'c' → logprob: -3.482358694076538
    6. 'l' → logprob: -4.232358932495117
    7. 'ces' → logprob: -4.232358932495117
    8. 'la' → logprob: -4.232358932495117
    9. 'ce' → logprob: -4.357358932495117
    10. 'ch' → logprob: -4.482358932495117

Token 275: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08810708671808243
    2. ' les' → logprob: -3.088107109069824
    3. ' #' → logprob: -5.088107109069824
    4. ' L' → logprob: -5.213107109069824
    5. 'L' → logprob: -5.338107109069824
    6. 'for' → logprob: -5.713107109069824
    7. ' for' → logprob: -5.838107109069824
    8. ' la' → logprob: -6.088107109069824
    9. ' if' → logprob: -6.213107109069824
    10. ' le' → logprob: -6.338107109069824

Token 276: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27022257447242737
    2. 'for' → logprob: -2.3952226638793945
    3. ' for' → logprob: -3.0202226638793945
    4. ' les' → logprob: -3.8952226638793945
    5. 'L' → logprob: -4.1452226638793945
    6. ' #' → logprob: -4.6452226638793945
    7. 'A' → logprob: -4.6452226638793945
    8. ' L' → logprob: -4.6452226638793945
    9. '
' → logprob: -5.1452226638793945
    10. ' A' → logprob: -5.7702226638793945

Token 277: ' p' (ID: 275)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.48363012075424194
    2. 'bord' → logprob: -2.4836301803588867
    3. ' b' → logprob: -2.7336301803588867
    4. ' p' → logprob: -3.3586301803588867
    5. ' voisins' → logprob: -3.7336301803588867
    6. 'p' → logprob: -3.9836301803588867
    7. ' bord' → logprob: -4.108630180358887
    8. 'diff' → logprob: -4.233630180358887
    9. ' changements' → logprob: -4.483630180358887
    10. 'a' → logprob: -4.608630180358887

Token 278: 'entes' (ID: 5651)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.224496841430664
    2. 'oints' → logprob: -1.224496841430664
    3. '#' → logprob: -1.349496841430664
    4. 'ro' → logprob: -2.724496841430664
    5. 'our' → logprob: -3.349496841430664
    6. 'a' → logprob: -4.224496841430664
    7. 'for' → logprob: -4.474496841430664
    8. 'oint' → logprob: -5.599496841430664
    9. 'ar' → logprob: -5.849496841430664
    10. 'ér' → logprob: -6.224496841430664

Token 279: ' internes' (ID: 183434)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.8667653799057007
    2. ' entre' → logprob: -2.1167654991149902
    3. '#' → logprob: -2.3667654991149902
    4. ' at' → logprob: -2.9917654991149902
    5. ' affect' → logprob: -3.1167654991149902
    6. 'import' → logprob: -3.3667654991149902
    7. ' peuvent' → logprob: -3.7417654991149902
    8. ' between' → logprob: -3.7417654991149902
    9. ' chang' → logprob: -3.7417654991149902
    10. ' change' → logprob: -4.11676549911499

Token 280: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6635584831237793
    2. ' chang' → logprob: -2.2885584831237793
    3. ' peuvent' → logprob: -2.6635584831237793
    4. '   ' → logprob: -3.0385584831237793
    5. ' ne' → logprob: -3.1635584831237793
    6. 'ch' → logprob: -3.7885584831237793
    7. ' restent' → logprob: -3.9135584831237793
    8. ' #' → logprob: -4.163558483123779
    9. 'ne' → logprob: -4.163558483123779
    10. ' sont' → logprob: -4.288558483123779

Token 281: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1801730990409851
    2. ' l' → logprob: -2.30517315864563
    3. 'R' → logprob: -4.055172920227051
    4. ' R' → logprob: -4.430172920227051
    5. 'la' → logprob: -4.680172920227051
    6. '[l' → logprob: -4.805172920227051
    7. 'L' → logprob: -5.305172920227051
    8. 'interval' → logprob: -5.555172920227051
    9. ' la' → logprob: -5.680172920227051
    10. '[' → logprob: -6.805172920227051

Token 282: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3606557250022888
    2. 'interval' → logprob: -1.4856557846069336
    3. 'a' → logprob: -2.7356557846069336
    4. ''inter' → logprob: -5.235655784606934
    5. 'range' → logprob: -6.610655784606934
    6. 'e' → logprob: -6.735655784606934
    7. ''a' → logprob: -6.860655784606934
    8. '#' → logprob: -7.610655784606934
    9. ''é' → logprob: -8.235655784606934
    10. ''#' → logprob: -8.360655784606934

Token 283: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0013305948814377189
    2. 'A' → logprob: -7.501330375671387
    3. 'inter' → logprob: -8.001330375671387
    4. 'range' → logprob: -8.376330375671387
    5. 'R' → logprob: -9.251330375671387
    6. ' interval' → logprob: -10.126330375671387
    7. 'L' → logprob: -11.501330375671387
    8. 'interface' → logprob: -11.626330375671387
    9. 'I' → logprob: -12.001330375671387
    10. 'import' → logprob: -12.251330375671387

Token 284: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6383482813835144
    2. 'ur' → logprob: -1.7633483409881592
    3. 've' → logprob: -1.8883483409881592
    4. 'ce' → logprob: -3.263348340988159
    5. 't' → logprob: -3.763348340988159
    6. 'u' → logprob: -4.38834810256958
    7. 'r' → logprob: -5.13834810256958
    8. 'à' → logprob: -5.26334810256958
    9. 'igne' → logprob: -5.26334810256958
    10. '#' → logprob: -5.38834810256958

Token 285: ' sont' (ID: 5242)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28545475006103516
    2. '#' → logprob: -2.910454750061035
    3. ')' → logprob: -3.410454750061035
    4. 'def' → logprob: -3.660454750061035
    5. ' are' → logprob: -3.785454750061035
    6. 'for' → logprob: -4.160454750061035
    7. '```' → logprob: -4.160454750061035
    8. ' ]' → logprob: -4.410454750061035
    9. 's' → logprob: -4.785454750061035
    10. ',' → logprob: -4.785454750061035

Token 286: ' inch' (ID: 23594)
  Prédit: 'inch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inch' → logprob: -0.7905635237693787
    2. 'in' → logprob: -1.9155635833740234
    3. ' inch' → logprob: -2.1655635833740234
    4. 'null' → logprob: -2.4155635833740234
    5. 'const' → logprob: -3.4155635833740234
    6. ' constantes' → logprob: -3.5405635833740234
    7. 'mod' → logprob: -3.7905635833740234
    8. 'n' → logprob: -3.9155635833740234
    9. 'unch' → logprob: -4.540563583374023
    10. 'int' → logprob: -4.540563583374023

Token 287: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.16200004518032074
    2. 'angé' → logprob: -1.912000060081482
    3. 'anged' → logprob: -7.6620001792907715
    4. 'angs' → logprob: -8.036999702453613
    5. 'anges' → logprob: -8.411999702453613
    6. 'ange' → logprob: -8.661999702453613
    7. 'g' → logprob: -9.286999702453613
    8. 'angt' → logprob: -10.099499702453613
    9. 'a' → logprob: -10.161999702453613
    10. 'angers' → logprob: -10.411999702453613

Token 288: 'ées' (ID: 5161)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9090110063552856
    2. 'es' → logprob: -1.2840110063552856
    3. 'def' → logprob: -1.6590110063552856
    4. 'for' → logprob: -3.284010887145996
    5. '#' → logprob: -3.409010887145996
    6. '```' → logprob: -4.659010887145996
    7. 's' → logprob: -4.784010887145996
    8. 'é' → logprob: -4.909010887145996
    9. 'r' → logprob: -5.534010887145996
    10. ' for' → logprob: -5.659010887145996

Token 289: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018804390856530517
    2. 'Q' → logprob: -8.875187873840332
    3. ' for' → logprob: -10.625187873840332
    4. 'def' → logprob: -11.625187873840332
    5. 'queries' → logprob: -12.500187873840332
    6. '
' → logprob: -12.625187873840332
    7. 'q' → logprob: -13.375187873840332
    8. 'results' → logprob: -13.500187873840332
    9. 'result' → logprob: -13.875187873840332
    10. 'output' → logprob: -13.875187873840332

Token 290: 'tout' (ID: 191666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0406021848320961
    2. ' )' → logprob: -3.790602207183838
    3. ')
' → logprob: -4.540602207183838
    4. '#' → logprob: -5.540602207183838
    5. ' )
' → logprob: -7.415602207183838
    6. ' ' → logprob: -8.04060173034668
    7. 'for' → logprob: -8.41560173034668
    8. ')

' → logprob: -8.66560173034668
    9. '   ' → logprob: -8.66560173034668
    10. ',' → logprob: -8.79060173034668

Token 291: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1963231563568115
    2. 'l' → logprob: -2.0713231563568115
    3. 'le' → logprob: -2.3213231563568115
    4. 's' → logprob: -2.9463231563568115
    5. 'les' → logprob: -2.9463231563568115
    6. ']' → logprob: -2.9463231563568115
    7. '```' → logprob: -2.9463231563568115
    8. ' les' → logprob: -3.1963231563568115
    9. '   ' → logprob: -3.4463231563568115
    10. ' ce' → logprob: -3.5713231563568115

Token 292: ' augmenté' (ID: 199653)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.2471911907196045
    2. 'd' → logprob: -2.1221911907196045
    3. 'shift' → logprob: -2.1221911907196045
    4. ' dé' → logprob: -2.6221911907196045
    5. 'uniform' → logprob: -2.7471911907196045
    6. 'increment' → logprob: -3.1221911907196045
    7. ' multip' → logprob: -3.3721911907196045
    8. 'add' → logprob: -3.3721911907196045
    9. 'augment' → logprob: -3.3721911907196045
    10. ' augmenté' → logprob: -3.8721911907196045

Token 293: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1256283074617386
    2. 'de' → logprob: -2.8756282329559326
    3. ' uniform' → logprob: -3.2506282329559326
    4. 'uniform' → logprob: -4.375628471374512
    5. ' d' → logprob: -6.000628471374512
    6. 'ensemble' → logprob: -6.750628471374512
    7. ' par' → logprob: -6.875628471374512
    8. ' of' → logprob: -7.000628471374512
    9. 'd' → logprob: -7.250628471374512
    10. ')' → logprob: -7.250628471374512

Token 294: ' même' (ID: 9679)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3132789433002472
    2. ' X' → logprob: -1.3132789134979248
    3. ' ' → logprob: -11.313279151916504
    4. '1' → logprob: -13.188279151916504
    5. ' ' → logprob: -14.438279151916504
    6. 'diff' → logprob: -14.688279151916504
    7. '	X' → logprob: -14.938279151916504
    8. ')' → logprob: -15.063279151916504
    9. '0' → logprob: -15.063279151916504
    10. 'x' → logprob: -16.063278198242188

Token 295: ' montant' (ID: 72364)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7905070781707764
    2. ' montant' → logprob: -1.4155070781707764
    3. 'mont' → logprob: -1.9155070781707764
    4. 'delta' → logprob: -2.9155070781707764
    5. 'amount' → logprob: -3.1655070781707764
    6. 'offset' → logprob: -4.2905073165893555
    7. '```' → logprob: -5.0405073165893555
    8. 'pas' → logprob: -5.4155073165893555
    9. 'value' → logprob: -5.5405073165893555
    10. ' delta' → logprob: -5.7905073165893555

Token 296: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016111789271235466
    2. ' )' → logprob: -5.016111850738525
    3. ')
' → logprob: -6.016111850738525
    4. ',' → logprob: -6.141111850738525
    5. 'for' → logprob: -6.641111850738525
    6. '   ' → logprob: -7.266111850738525
    7. ']' → logprob: -7.766111850738525
    8. '])' → logprob: -8.016111373901367
    9. ').' → logprob: -8.141111373901367
    10. '#' → logprob: -8.391111373901367

Token 297: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032349901739507914
    2. ' for' → logprob: -5.75323486328125
    3. 'Q' → logprob: -9.87823486328125
    4. 'def' → logprob: -13.50323486328125
    5. ' Q' → logprob: -14.00323486328125
    6. 'from' → logprob: -14.62823486328125
    7. 'q' → logprob: -14.75323486328125
    8. 'import' → logprob: -14.87823486328125
    9. '```' → logprob: -14.87823486328125
    10. 'output' → logprob: -15.12823486328125

Token 298: ' Ainsi' (ID: 65093)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015312091272789985
    2. 'output' → logprob: -9.500153541564941
    3. 'def' → logprob: -10.375153541564941
    4. 'results' → logprob: -10.875153541564941
    5. 'result' → logprob: -11.250153541564941
    6. 'res' → logprob: -12.250153541564941
    7. ' for' → logprob: -12.625153541564941
    8. 'Q' → logprob: -13.250153541564941
    9. 'outputs' → logprob: -13.375153541564941
    10. 'import' → logprob: -13.875153541564941

Token 299: ' seules' (ID: 198094)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3481327295303345
    2. ' for' → logprob: -1.7231327295303345
    3. 'def' → logprob: -2.223132610321045
    4. ' def' → logprob: -5.473132610321045
    5. ',' → logprob: -5.973132610321045
    6. '
' → logprob: -8.223133087158203
    7. ':' → logprob: -9.848133087158203
    8. 'import' → logprob: -10.348133087158203
    9. ' ,' → logprob: -10.473133087158203
    10. '#' → logprob: -10.598133087158203

Token 300: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7150471806526184
    2. 'les' → logprob: -1.0900471210479736
    3. ' les' → logprob: -2.4650471210479736
    4. 'for' → logprob: -3.7150471210479736
    5. 'def' → logprob: -3.8400471210479736
    6. ' i' → logprob: -4.090047359466553
    7. 'l' → logprob: -5.215047359466553
    8. 'indices' → logprob: -5.465047359466553
    9. '#' → logprob: -5.715047359466553
    10. '
' → logprob: -6.215047359466553

Token 301: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17232723534107208
    2. 'positions' → logprob: -2.2973272800445557
    3. 'b' → logprob: -3.9223272800445557
    4. 'ar' → logprob: -4.547327041625977
    5. 'diff' → logprob: -4.922327041625977
    6. 'bord' → logprob: -5.922327041625977
    7. 'i' → logprob: -6.172327041625977
    8. 'de' → logprob: -6.547327041625977
    9. 'pend' → logprob: -6.672327041625977
    10. 'indices' → logprob: -6.672327041625977

Token 302: 'entes' (ID: 5651)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7963927388191223
    2. 'r' → logprob: -0.7963927388191223
    3. 'aires' → logprob: -3.9213926792144775
    4. '#' → logprob: -4.296392917633057
    5. 'ar' → logprob: -4.796392917633057
    6. 'l' → logprob: -5.171392917633057
    7. 'ro' → logprob: -5.421392917633057
    8. 'b' → logprob: -5.546392917633057
    9. '```' → logprob: -5.546392917633057
    10. 'oints' → logprob: -5.671392917633057

Token 303: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.6051712036132812
    2. 'adj' → logprob: -1.4801712036132812
    3. 'aux' → logprob: -1.8551712036132812
    4. ' entre' → logprob: -4.105171203613281
    5. 'sur' → logprob: -4.230171203613281
    6. 'au' → logprob: -5.230171203613281
    7. ' adj' → logprob: -5.355171203613281
    8. 'extern' → logprob: -5.480171203613281
    9. 'à' → logprob: -5.730171203613281
    10. 'situ' → logprob: -5.730171203613281

Token 304: ' positions' (ID: 15897)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005897507071495056
    2. 'indices' → logprob: -5.505897521972656
    3. ' L' → logprob: -7.005897521972656
    4. 'positions' → logprob: -8.255897521972656
    5. 'b' → logprob: -8.880897521972656
    6. 'R' → logprob: -8.880897521972656
    7. 'index' → logprob: -9.255897521972656
    8. 'l' → logprob: -9.505897521972656
    9. 'interfaces' → logprob: -9.630897521972656
    10. 'indexes' → logprob: -9.755897521972656

Token 305: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10042448341846466
    2. ' L' → logprob: -2.3504245281219482
    3. '[L' → logprob: -8.850424766540527
    4. 'R' → logprob: -10.600424766540527
    5. ' ' → logprob: -11.350424766540527
    6. 'adj' → logprob: -11.600424766540527
    7. '	L' → logprob: -11.850424766540527
    8. ' R' → logprob: -12.475424766540527
    9. '(L' → logprob: -12.600424766540527
    10. '   ' → logprob: -13.350424766540527

Token 306: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00480058416724205
    2. '-' → logprob: -5.379800796508789
    3. ' -' → logprob: -9.629800796508789
    4. '_' → logprob: -10.254800796508789
    5. 'j' → logprob: -10.504800796508789
    6. '_-' → logprob: -11.004800796508789
    7. '_i' → logprob: -11.754800796508789
    8. '[j' → logprob: -12.379800796508789
    9. '```' → logprob: -12.629800796508789
    10. ',' → logprob: -12.754800796508789

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02630993351340294
    2. ' -' → logprob: -3.6513099670410156
    3. ',' → logprob: -13.026309967041016
    4. ' ' → logprob: -13.151309967041016
    5. ' and' → logprob: -13.651309967041016
    6. 'L' → logprob: -14.276309967041016
    7. '−' → logprob: -14.651309967041016
    8. '   ' → logprob: -14.838809967041016
    9. ' et' → logprob: -14.901309967041016
    10. '>' → logprob: -15.088809967041016

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001601539261173457
    2. ' ' → logprob: -8.750160217285156
    3. '-' → logprob: -14.250160217285156
    4. '```' → logprob: -14.875160217285156
    5. ',' → logprob: -15.125160217285156
    6. '0' → logprob: -15.750160217285156
    7. '
' → logprob: -16.812660217285156
    8. '2' → logprob: -17.312660217285156
    9. '...' → logprob: -17.562660217285156
    10. 'L' → logprob: -17.562660217285156

Token 309: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7588708400726318
    2. ' et' → logprob: -0.8838708400726318
    3. 'et' → logprob: -2.758870840072632
    4. 'and' → logprob: -3.383870840072632
    5. ',' → logprob: -4.633871078491211
    6. '-' → logprob: -5.383871078491211
    7. ' и' → logprob: -6.008871078491211
    8. ' -' → logprob: -6.258871078491211
    9. '```' → logprob: -7.008871078491211
    10. ' ,' → logprob: -7.633871078491211

Token 310: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.048898350447416306
    2. ' R' → logprob: -3.173898458480835
    3. 'L' → logprob: -5.173898220062256
    4. ' L' → logprob: -8.548898696899414
    5. '   ' → logprob: -11.548898696899414
    6. '	R' → logprob: -12.423898696899414
    7. '(R' → logprob: -13.048898696899414
    8. ' ' → logprob: -13.173898696899414
    9. '
' → logprob: -14.111398696899414
    10. ',' → logprob: -14.611398696899414

Token 311: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00020783171930816025
    2. '+' → logprob: -8.500207901000977
    3. 'j' → logprob: -13.250207901000977
    4. '```' → logprob: -14.250207901000977
    5. '+j' → logprob: -14.500207901000977
    6. '_' → logprob: -15.000207901000977
    7. ' +' → logprob: -15.375207901000977
    8. '_i' → logprob: -15.750207901000977
    9. ' _' → logprob: -15.875207901000977
    10. '
' → logprob: -16.250207901000977

Token 312: ' peuvent' (ID: 21321)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15277151763439178
    2. ']' → logprob: -2.402771472930908
    3. ',' → logprob: -3.902771472930908
    4. ' +' → logprob: -4.402771472930908
    5. '<|end|>' → logprob: -5.277771472930908
    6. ']+=' → logprob: -5.777771472930908
    7. ')' → logprob: -6.902771472930908
    8. '```' → logprob: -7.027771472930908
    9. ' and' → logprob: -7.090271472930908
    10. ' are' → logprob: -7.215271472930908

Token 313: ' être' (ID: 9104)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.0765206813812256
    2. 'être' → logprob: -1.3265206813812256
    3. ' affect' → logprob: -1.5765206813812256
    4. 'import' → logprob: -3.0765206813812256
    5. 'imp' → logprob: -3.0765206813812256
    6. 'impact' → logprob: -4.201520919799805
    7. 'changer' → logprob: -4.201520919799805
    8. 'in' → logprob: -4.326520919799805
    9. 'affected' → logprob: -4.576520919799805
    10. ' être' → logprob: -4.826520919799805

Token 314: ' affect' (ID: 7902)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2858879566192627
    2. 'impact' → logprob: -1.9108879566192627
    3. ' mod' → logprob: -2.9108879566192627
    4. 'aff' → logprob: -3.4108879566192627
    5. ' impact' → logprob: -5.285887718200684
    6. ' affect' → logprob: -5.410887718200684
    7. 'touch' → logprob: -6.535887718200684
    8. 'modifiable' → logprob: -7.160887718200684
    9. 'affected' → logprob: -7.535887718200684
    10. 'imp' → logprob: -7.910887718200684

Token 315: 'ées' (ID: 5161)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5041428208351135
    2. 'ées' → logprob: -1.3791427612304688
    3. 'es' → logprob: -2.6291427612304688
    4. '#' → logprob: -3.1291427612304688
    5. 'er' → logprob: -4.254142761230469
    6. 'é' → logprob: -5.379142761230469
    7. 'u' → logprob: -5.879142761230469
    8. 'e' → logprob: -7.129142761230469
    9. 'ues' → logprob: -7.379142761230469
    10. 'if' → logprob: -7.504142761230469

Token 316: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009140860638581216
    2. ' for' → logprob: -7.125914096832275
    3. 'Q' → logprob: -9.250913619995117
    4. 'q' → logprob: -11.875913619995117
    5. 'def' → logprob: -12.625913619995117
    6. 'L' → logprob: -13.875913619995117
    7. '
' → logprob: -14.875913619995117
    8. 'import' → logprob: -15.000913619995117
    9. 'query' → logprob: -15.125913619995117
    10. 'queries' → logprob: -15.250913619995117

Token 317: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02305002138018608
    2. 'Q' → logprob: -3.89805006980896
    3. 'import' → logprob: -6.648049831390381
    4. ' for' → logprob: -7.648049831390381
    5. 'def' → logprob: -7.773049831390381
    6. 'M' → logprob: -8.648050308227539
    7. 'q' → logprob: -9.523050308227539
    8. 'queries' → logprob: -11.398050308227539
    9. ' Q' → logprob: -11.773050308227539
    10. '```' → logprob: -11.898050308227539

Token 318: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005625854711979628
    2. 'def' → logprob: -5.7556257247924805
    3. ' for' → logprob: -6.2556257247924805
    4. 'import' → logprob: -8.25562572479248
    5. 'Q' → logprob: -8.38062572479248
    6. 'L' → logprob: -11.75562572479248
    7. 'M' → logprob: -12.00562572479248
    8. 'from' → logprob: -12.38062572479248
    9. 'next' → logprob: -13.00562572479248
    10. ' def' → logprob: -13.13062572479248

Token 319: ' ar' (ID: 646)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6384072303771973
    2. 'if' → logprob: -1.0134072303771973
    3. 'for' → logprob: -2.8884072303771973
    4. ' for' → logprob: -4.013407230377197
    5. ' def' → logprob: -4.263407230377197
    6. 'def' → logprob: -4.263407230377197
    7. '#' → logprob: -5.763407230377197
    8. 'L' → logprob: -6.388407230377197
    9. ' L' → logprob: -7.138407230377197
    10. ' #' → logprob: -7.513407230377197

Token 320: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04906294122338295
    2. 'range' → logprob: -4.049062728881836
    3. 'e' → logprob: -4.174062728881836
    4. 'g' → logprob: -5.174062728881836
    5. 'gs' → logprob: -5.549062728881836
    6. 'ray' → logprob: -6.174062728881836
    7. 't' → logprob: -7.299062728881836
    8. 'i' → logprob: -7.549062728881836
    9. 'gv' → logprob: -8.049062728881836
    10. 'gent' → logprob: -8.674062728881836

Token 321: ' à' (ID: 1221)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9961472153663635
    2. 's' → logprob: -0.9961472153663635
    3. ' L' → logprob: -1.9961471557617188
    4. ' =' → logprob: -3.7461471557617188
    5. ' aux' → logprob: -4.246147155761719
    6. '[L' → logprob: -4.746147155761719
    7. ' gauche' → logprob: -4.996147155761719
    8. ' s' → logprob: -5.371147155761719
    9. 'g' → logprob: -5.621147155761719
    10. 'avant' → logprob: -5.621147155761719

Token 322: ' gauche' (ID: 58367)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1429009586572647
    2. ' L' → logprob: -2.0179009437561035
    3. '(L' → logprob: -9.892901420593262
    4. 'max' → logprob: -10.267901420593262
    5. ' (' → logprob: -11.017901420593262
    6. '`' → logprob: -11.017901420593262
    7. 'index' → logprob: -11.267901420593262
    8. '[L' → logprob: -11.392901420593262
    9. '	L' → logprob: -11.517901420593262
    10. '#' → logprob: -11.517901420593262

Token 323: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2981205880641937
    2. ' if' → logprob: -1.4231206178665161
    3. ' =' → logprob: -5.048120498657227
    4. '=' → logprob: -5.798120498657227
    5. 'L' → logprob: -6.298120498657227
    6. '   ' → logprob: -6.548120498657227
    7. ':' → logprob: -6.548120498657227
    8. ',' → logprob: -7.673120498657227
    9. '#' → logprob: -7.923120498657227
    10. 'idx' → logprob: -8.173120498657227

Token 324: ' entre' (ID: 3853)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.38321003317832947
    2. ' L' → logprob: -1.3832100629806519
    3. 'if' → logprob: -3.0082099437713623
    4. ' if' → logprob: -4.633210182189941
    5. 'max' → logprob: -5.258210182189941
    6. ' max' → logprob: -5.883210182189941
    7. '(L' → logprob: -8.633210182189941
    8. ' (' → logprob: -9.633210182189941
    9. '   ' → logprob: -10.258210182189941
    10. 'for' → logprob: -10.633210182189941

Token 325: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004434035625308752
    2. ' L' → logprob: -5.629434108734131
    3. 'A' → logprob: -8.129433631896973
    4. '(L' → logprob: -8.379433631896973
    5. 'max' → logprob: -8.504433631896973
    6. '   ' → logprob: -10.254433631896973
    7. '[L' → logprob: -10.629433631896973
    8. '`' → logprob: -11.629433631896973
    9. '	L' → logprob: -12.379433631896973
    10. '```' → logprob: -12.629433631896973

Token 326: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0016744681634008884
    2. '-' → logprob: -6.501674652099609
    3. 'j' → logprob: -9.62667465209961
    4. '[j' → logprob: -10.37667465209961
    5. '```' → logprob: -11.12667465209961
    6. ' -' → logprob: -11.25167465209961
    7. '_' → logprob: -11.25167465209961
    8. '_i' → logprob: -12.00167465209961
    9. '#' → logprob: -12.37667465209961
    10. '   ' → logprob: -12.62667465209961

Token 327: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023305809125304222
    2. ' -' → logprob: -3.773305892944336
    3. '_j' → logprob: -10.648305892944336
    4. '```' → logprob: -12.148305892944336
    5. '-j' → logprob: -12.398305892944336
    6. ' ' → logprob: -12.398305892944336
    7. '   ' → logprob: -12.648305892944336
    8. 'j' → logprob: -12.648305892944336
    9. '1' → logprob: -12.898305892944336
    10. '[' → logprob: -13.523305892944336

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009784188121557236
    2. ' ' → logprob: -4.63478422164917
    3. '-' → logprob: -11.009783744812012
    4. '   ' → logprob: -12.634783744812012
    5. ' -' → logprob: -13.197283744812012
    6. '```' → logprob: -13.759783744812012
    7. '2' → logprob: -13.822283744812012
    8. 'L' → logprob: -14.009783744812012
    9. '  ' → logprob: -14.509783744812012
    10. '
' → logprob: -14.822283744812012

Token 329: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6682693958282471
    2. '-' → logprob: -0.7932693958282471
    3. ' and' → logprob: -3.418269395828247
    4. 'and' → logprob: -6.543269157409668
    5. ' ' → logprob: -8.168269157409668
    6. ' и' → logprob: -8.918269157409668
    7. ',' → logprob: -9.293269157409668
    8. ' ,' → logprob: -9.668269157409668
    9. '   ' → logprob: -10.043269157409668
    10. '0' → logprob: -10.293269157409668

Token 330: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.006729457061737776
    2. ' L' → logprob: -5.006729602813721
    3. 'Lj' → logprob: -11.881729125976562
    4. '	L' → logprob: -13.256729125976562
    5. '   ' → logprob: -13.256729125976562
    6. ' ' → logprob: -14.631729125976562
    7. '`' → logprob: -14.819229125976562
    8. ' ' → logprob: -15.006729125976562
    9. '```' → logprob: -15.069229125976562
    10. 'A' → logprob: -15.069229125976562

Token 331: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -9.591415437171236e-05
    2. 'j' → logprob: -9.375096321105957
    3. '[j' → logprob: -12.875096321105957
    4. '```' → logprob: -13.125096321105957
    5. '_' → logprob: -13.500096321105957
    6. '_i' → logprob: -13.625096321105957
    7. ']' → logprob: -14.000096321105957
    8. '[' → logprob: -14.500096321105957
    9. 'J' → logprob: -14.625096321105957
    10. ')' → logprob: -15.000096321105957

Token 332: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5969140529632568
    2. 'if' → logprob: -1.4719140529632568
    3. 'def' → logprob: -2.471914052963257
    4. '
' → logprob: -2.721914052963257
    5. ' for' → logprob: -3.596914052963257
    6. '#' → logprob: -3.971914052963257
    7. ' if' → logprob: -4.846914291381836
    8. ':' → logprob: -5.846914291381836
    9. ',' → logprob: -5.971914291381836
    10. '   ' → logprob: -6.721914291381836

Token 333: 'si' (ID: 4778)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8245113492012024
    2. ')' → logprob: -1.1995112895965576
    3. ' if' → logprob: -2.0745112895965576
    4. ']' → logprob: -2.5745112895965576
    5. ')
' → logprob: -3.5745112895965576
    6. 'L' → logprob: -4.949511528015137
    7. ' )' → logprob: -5.574511528015137
    8. ' ]' → logprob: -5.949511528015137
    9. '])' → logprob: -6.074511528015137
    10. ',' → logprob: -6.324511528015137

Token 334: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.019777698442339897
    2. ' L' → logprob: -4.019777774810791
    3. '0' → logprob: -6.519777774810791
    4. '1' → logprob: -8.894777297973633
    5. ' ' → logprob: -11.769777297973633
    6. '	L' → logprob: -12.519777297973633
    7. '   ' → logprob: -13.144777297973633
    8. '>L' → logprob: -13.894777297973633
    9. ')L' → logprob: -15.269777297973633
    10. '(L' → logprob: -15.519777297973633

Token 335: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.002906158333644271
    2. '_' → logprob: -7.127906322479248
    3. '>' → logprob: -7.377906322479248
    4. '-' → logprob: -8.25290584564209
    5. ')' → logprob: -8.75290584564209
    6. '_i' → logprob: -9.12790584564209
    7. '[' → logprob: -9.12790584564209
    8. '<' → logprob: -9.50290584564209
    9. '```' → logprob: -9.62790584564209
    10. 'j' → logprob: -9.62790584564209

Token 336: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9378376007080078
    2. ' <=' → logprob: -1.1878376007080078
    3. '<=' → logprob: -2.562837600708008
    4. ')' → logprob: -2.562837600708008
    5. ' >' → logprob: -3.187837600708008
    6. '<' → logprob: -3.562837600708008
    7. '>' → logprob: -3.687837600708008
    8. '):' → logprob: -4.437837600708008
    9. '0' → logprob: -4.937837600708008
    10. '+' → logprob: -5.437837600708008

Token 337: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006348780007101595
    2. '1' → logprob: -7.750634670257568
    3. ' ' → logprob: -8.500635147094727
    4. '```' → logprob: -15.250635147094727
    5. '   ' → logprob: -15.375635147094727
    6. '=' → logprob: -16.250635147094727
    7. ')' → logprob: -16.750635147094727
    8. '#' → logprob: -16.750635147094727
    9. '`' → logprob: -17.313135147094727
    10. '>' → logprob: -17.563135147094727

Token 338: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. '1' → logprob: -8.87515926361084
    3. ' ' → logprob: -10.87515926361084
    4. '=' → logprob: -17.250158309936523
    5. ')' → logprob: -18.125158309936523
    6. '   ' → logprob: -18.375158309936523
    7. '```' → logprob: -19.000158309936523
    8. '#' → logprob: -19.250158309936523
    9. '۰' → logprob: -20.312658309936523
    10. '`' → logprob: -20.437658309936523

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023699386045336723
    2. '):' → logprob: -4.1486992835998535
    3. ' )' → logprob: -5.5236992835998535
    4. ')
' → logprob: -6.1486992835998535
    5. ' and' → logprob: -7.6486992835998535
    6. '   ' → logprob: -8.148699760437012
    7. ':' → logprob: -8.398699760437012
    8. '):
' → logprob: -8.523699760437012
    9. ' )
' → logprob: -9.773699760437012
    10. 'and' → logprob: -10.273699760437012

Token 340: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06418853998184204
    2. ' if' → logprob: -2.8141884803771973
    3. '   ' → logprob: -6.189188480377197
    4. '
' → logprob: -10.189188957214355
    5. ':' → logprob: -10.314188957214355
    6. ' 
' → logprob: -10.439188957214355
    7. 'for' → logprob: -11.439188957214355
    8. '    
' → logprob: -11.564188957214355
    9. ':
' → logprob: -11.564188957214355
    10. 'L' → logprob: -11.689188957214355

Token 341: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026905663311481476
    2. ' if' → logprob: -3.7769057750701904
    3. 'for' → logprob: -5.901905536651611
    4. 'L' → logprob: -7.776905536651611
    5. '#' → logprob: -8.52690601348877
    6. '   ' → logprob: -8.90190601348877
    7. ' for' → logprob: -10.15190601348877
    8. 'def' → logprob: -10.15190601348877
    9. ' L' → logprob: -10.52690601348877
    10. 'left' → logprob: -11.15190601348877

Token 342: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.1259041577577591
    2. 'ar' → logprob: -2.250904083251953
    3. '#' → logprob: -4.500904083251953
    4. ' edge' → logprob: -7.500904083251953
    5. ' #' → logprob: -7.750904083251953
    6. ''ar' → logprob: -9.000904083251953
    7. ' ' → logprob: -9.188404083251953
    8. ' droite' → logprob: -9.250904083251953
    9. ' ' → logprob: -9.563404083251953
    10. 'edge' → logprob: -9.688404083251953

Token 343: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.010521139949560165
    2. 'ète' → logprob: -6.135520935058594
    3. 'ê' → logprob: -6.260520935058594
    4. 'êtes' → logprob: -6.385520935058594
    5. 'r' → logprob: -6.510520935058594
    6. 'te' → logprob: -6.760520935058594
    7. 'êt' → logprob: -7.510520935058594
    8. 'é' → logprob: -8.135520935058594
    9. '#' → logprob: -8.260520935058594
    10. 'être' → logprob: -8.760520935058594

Token 344: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.023500638082623482
    2. 'à' → logprob: -4.273500442504883
    3. ' at' → logprob: -5.273500442504883
    4. ' ' → logprob: -6.148500442504883
    5. '```' → logprob: -8.273500442504883
    6. ' ' → logprob: -8.523500442504883
    7. ''à' → logprob: -8.648500442504883
    8. 'at' → logprob: -8.711000442504883
    9. ' =' → logprob: -8.836000442504883
    10. '   ' → logprob: -8.961000442504883

Token 345: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.24303068220615387
    2. 'R' → logprob: -2.3680307865142822
    3. 'dro' → logprob: -2.9930307865142822
    4. 'right' → logprob: -3.3680307865142822
    5. ' R' → logprob: -4.243030548095703
    6. ' right' → logprob: -4.368030548095703
    7. ' droit' → logprob: -5.118030548095703
    8. ' ' → logprob: -6.243030548095703
    9. 'Right' → logprob: -7.618030548095703
    10. ' gauche' → logprob: -8.118030548095703

Token 346: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1849484145641327
    2. ' :' → logprob: -1.809948444366455
    3. ' =' → logprob: -6.309948444366455
    4. ' between' → logprob: -7.059948444366455
    5. '=' → logprob: -7.559948444366455
    6. '#' → logprob: -7.934948444366455
    7. '   ' → logprob: -8.184947967529297
    8. ' entre' → logprob: -8.184947967529297
    9. '```' → logprob: -8.434947967529297
    10. 'between' → logprob: -8.809947967529297

Token 347: ' entre' (ID: 3853)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.24514953792095184
    2. ' entre' → logprob: -2.620149612426758
    3. 'R' → logprob: -2.995149612426758
    4. 'between' → logprob: -2.995149612426758
    5. ' R' → logprob: -3.245149612426758
    6. ' ' → logprob: -6.870149612426758
    7. '#' → logprob: -6.870149612426758
    8. '   ' → logprob: -7.120149612426758
    9. ' if' → logprob: -7.620149612426758
    10. 'entre' → logprob: -7.620149612426758

Token 348: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20141811668872833
    2. ' R' → logprob: -1.701418161392212
    3. '   ' → logprob: -13.451417922973633
    4. ' ' → logprob: -14.076417922973633
    5. '	R' → logprob: -14.576417922973633
    6. ' ' → logprob: -14.701417922973633
    7. '`' → logprob: -14.826417922973633
    8. 'r' → logprob: -14.826417922973633
    9. '(R' → logprob: -15.201417922973633
    10. '_R' → logprob: -15.576417922973633

Token 349: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0039452980272471905
    2. '+' → logprob: -5.628945350646973
    3. '_' → logprob: -8.378945350646973
    4. '+j' → logprob: -10.378945350646973
    5. '```' → logprob: -10.378945350646973
    6. ' +' → logprob: -10.503945350646973
    7. ' _' → logprob: -11.128945350646973
    8. 'j' → logprob: -12.753945350646973
    9. '   ' → logprob: -13.878945350646973
    10. ' ' → logprob: -14.128945350646973

Token 350: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7918606400489807
    2. 'et' → logprob: -1.291860580444336
    3. ' and' → logprob: -2.166860580444336
    4. 'and' → logprob: -2.416860580444336
    5. '+' → logprob: -3.666860580444336
    6. '   ' → logprob: -3.791860580444336
    7. ' и' → logprob: -4.916860580444336
    8. ',' → logprob: -5.291860580444336
    9. ' ' → logprob: -6.041860580444336
    10. '```' → logprob: -6.416860580444336

Token 351: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.693177342414856
    2. ' R' → logprob: -0.693177342414856
    3. 'r' → logprob: -11.818177223205566
    4. '   ' → logprob: -11.943177223205566
    5. ' ' → logprob: -12.318177223205566
    6. '(R' → logprob: -12.318177223205566
    7. '    ' → logprob: -13.068177223205566
    8. ' (' → logprob: -13.943177223205566
    9. '+' → logprob: -14.068177223205566
    10. '  ' → logprob: -14.193177223205566

Token 352: '_j' (ID: 12021)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6892288327217102
    2. '_j' → logprob: -1.1892287731170654
    3. '+' → logprob: -2.1892287731170654
    4. 'j' → logprob: -3.1892287731170654
    5. ' R' → logprob: -3.4392287731170654
    6. ' +' → logprob: -6.6892290115356445
    7. '_' → logprob: -6.8142290115356445
    8. '[' → logprob: -7.3142290115356445
    9. '_R' → logprob: -7.4392290115356445
    10. '   ' → logprob: -7.4392290115356445

Token 353: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015378349926322699
    2. ' +' → logprob: -6.626537799835205
    3. '<|end|>' → logprob: -9.501538276672363
    4. '[' → logprob: -10.376538276672363
    5. '   ' → logprob: -10.876538276672363
    6. '+
' → logprob: -10.876538276672363
    7. ')' → logprob: -11.251538276672363
    8. '#' → logprob: -11.751538276672363
    9. '```' → logprob: -11.751538276672363
    10. '+#' → logprob: -12.376538276672363

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000285530521068722
    2. ' ' → logprob: -8.250285148620605
    3. '0' → logprob: -11.000285148620605
    4. '```' → logprob: -12.500285148620605
    5. '<|end|>' → logprob: -13.125285148620605
    6. '[' → logprob: -14.500285148620605
    7. '   ' → logprob: -15.000285148620605
    8. '<|end|>' → logprob: -15.000285148620605
    9. '+' → logprob: -15.250285148620605
    10. '`' → logprob: -16.250286102294922

Token 355: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003937579691410065
    2. ' for' → logprob: -5.628937721252441
    3. 'Q' → logprob: -8.253937721252441
    4. '<|end|>' → logprob: -10.253937721252441
    5. '
' → logprob: -11.003937721252441
    6. 'import' → logprob: -12.003937721252441
    7. '#' → logprob: -12.253937721252441
    8. ')' → logprob: -13.253937721252441
    9. '```' → logprob: -13.253937721252441
    10. 'L' → logprob: -13.628937721252441

Token 356: 'si' (ID: 4778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01994200609624386
    2. 'if' → logprob: -4.144941806793213
    3. ' if' → logprob: -6.019941806793213
    4. '+' → logprob: -7.644941806793213
    5. ' )' → logprob: -8.019942283630371
    6. 'R' → logprob: -8.644942283630371
    7. '```' → logprob: -9.144942283630371
    8. '`)' → logprob: -9.644942283630371
    9. 'N' → logprob: -9.769942283630371
    10. ']' → logprob: -10.269942283630371

Token 357: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14268052577972412
    2. ' R' → logprob: -2.0176806449890137
    3. ' ' → logprob: -13.642680168151855
    4. 'N' → logprob: -13.642680168151855
    5. 'Q' → logprob: -14.142680168151855
    6. 'r' → logprob: -14.392680168151855
    7. '   ' → logprob: -14.517680168151855
    8. '	R' → logprob: -15.392680168151855
    9. ' ' → logprob: -15.392680168151855
    10. '1' → logprob: -15.642680168151855

Token 358: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.022807924076914787
    2. '+' → logprob: -4.397808074951172
    3. '<' → logprob: -5.147808074951172
    4. ' <' → logprob: -5.522808074951172
    5. ' +' → logprob: -8.647808074951172
    6. '_' → logprob: -10.147808074951172
    7. '```' → logprob: -10.272808074951172
    8. 'j' → logprob: -10.522808074951172
    9. '+j' → logprob: -10.522808074951172
    10. ' ' → logprob: -10.522808074951172

Token 359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9395202398300171
    2. '<' → logprob: -1.064520239830017
    3. '+' → logprob: -1.439520239830017
    4. ' +' → logprob: -4.064520359039307
    5. ')' → logprob: -5.189520359039307
    6. '<N' → logprob: -6.189520359039307
    7. ']' → logprob: -6.939520359039307
    8. '   ' → logprob: -8.564519882202148
    9. ' ' → logprob: -8.814519882202148
    10. '
' → logprob: -9.064519882202148

Token 360: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. '	N' → logprob: -18.000431060791016
    4. '   ' → logprob: -19.875431060791016
    5. 'n' → logprob: -19.875431060791016
    6. '```' → logprob: -20.125431060791016
    7. '#' → logprob: -20.250431060791016
    8. ' ' → logprob: -20.625431060791016
    9. '>N' → logprob: -21.375431060791016
    10. 'Ｎ' → logprob: -21.875431060791016

Token 361: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026757761370390654
    2. '):' → logprob: -6.127676010131836
    3. ')
' → logprob: -8.252676010131836
    4. ' )' → logprob: -9.002676010131836
    5. '):
' → logprob: -10.127676010131836
    6. '#' → logprob: -11.627676010131836
    7. ':' → logprob: -11.752676010131836
    8. '```' → logprob: -12.127676010131836
    9. ')

' → logprob: -12.377676010131836
    10. 'N' → logprob: -12.377676010131836

Token 362: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00031508569372817874
    2. ' for' → logprob: -8.125314712524414
    3. 'Q' → logprob: -11.625314712524414
    4. 'def' → logprob: -12.125314712524414
    5. 'import' → logprob: -12.750314712524414
    6. '
' → logprob: -14.875314712524414
    7. 'from' → logprob: -14.875314712524414
    8. 'L' → logprob: -15.625314712524414
    9. '	for' → logprob: -15.625314712524414
    10. ')' → logprob: -16.000314712524414

Token 363: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.771655115589965e-05
    2. 'Q' → logprob: -11.500018119812012
    3. 'output' → logprob: -12.750018119812012
    4. ' for' → logprob: -13.000018119812012
    5. 'result' → logprob: -14.125018119812012
    6. 'import' → logprob: -14.625018119812012
    7. 'def' → logprob: -15.250018119812012
    8. 'answer' → logprob: -15.375018119812012
    9. 'q' → logprob: -15.750018119812012
    10. 'res' → logprob: -15.875018119812012

Token 364: ' applique' (ID: 180579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025921111926436424
    2. ' for' → logprob: -4.02592134475708
    3. 'def' → logprob: -4.90092134475708
    4. ' def' → logprob: -9.150920867919922
    5. ' =' → logprob: -10.025920867919922
    6. '=' → logprob: -10.275920867919922
    7. ' continue' → logprob: -10.775920867919922
    8. 'import' → logprob: -10.900920867919922
    9. 'continue' → logprob: -11.150920867919922
    10. 't' → logprob: -11.650920867919922

Token 365: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27699151635169983
    2. ' for' → logprob: -2.401991605758667
    3. 'Q' → logprob: -2.651991605758667
    4. ' Q' → logprob: -3.401991605758667
    5. 'range' → logprob: -3.526991605758667
    6. ' range' → logprob: -5.526991367340088
    7. ' L' → logprob: -6.401991367340088
    8. 'input' → logprob: -6.526991367340088
    9. ' input' → logprob: -6.651991367340088
    10. '(Q' → logprob: -6.776991367340088

Token 366: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0684095099568367
    2. 'Q' → logprob: -3.1934094429016113
    3. ' for' → logprob: -3.8184094429016113
    4. ' Q' → logprob: -5.818409442901611
    5. 'import' → logprob: -9.69340991973877
    6. 'def' → logprob: -10.19340991973877
    7. '
' → logprob: -10.56840991973877
    8. '_Q' → logprob: -11.69340991973877
    9. 'range' → logprob: -11.81840991973877
    10. '(Q' → logprob: -12.69340991973877

Token 367: ' changements' (ID: 105486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.7428650856018066
    2. 'for' → logprob: -0.8678650856018066
    3. 'mod' → logprob: -2.6178650856018066
    4. 'updates' → logprob: -3.8678650856018066
    5. ' for' → logprob: -6.242865085601807
    6. ' Q' → logprob: -6.367865085601807
    7. 'import' → logprob: -6.492865085601807
    8. 'm' → logprob: -7.117865085601807
    9. 'L' → logprob: -7.117865085601807
    10. 'aj' → logprob: -7.242865085601807

Token 368: ' uniquement' (ID: 65527)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015095196664333344
    2. ' for' → logprob: -4.390095233917236
    3. 'Q' → logprob: -6.640095233917236
    4. '
' → logprob: -6.765095233917236
    5. 'import' → logprob: -9.765094757080078
    6. 'def' → logprob: -10.765094757080078
    7. ':' → logprob: -11.765094757080078
    8. ' Q' → logprob: -12.015094757080078
    9. '\n' → logprob: -12.140094757080078
    10. '```' → logprob: -12.265094757080078

Token 369: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058591973036527634
    2. ' for' → logprob: -3.1835920810699463
    3. '   ' → logprob: -4.808591842651367
    4. 'import' → logprob: -5.433591842651367
    5. ' aux' → logprob: -7.058591842651367
    6. 'def' → logprob: -7.558591842651367
    7. ' at' → logprob: -8.308591842651367
    8. 'L' → logprob: -8.558591842651367
    9. ' L' → logprob: -8.683591842651367
    10. '       ' → logprob: -9.308591842651367

Token 370: ' ces' (ID: 10532)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.590241551399231
    2. ' les' → logprob: -1.590241551399231
    3. ' L' → logprob: -1.715241551399231
    4. 'the' → logprob: -2.2152414321899414
    5. 'i' → logprob: -3.0902414321899414
    6. 'A' → logprob: -3.4652414321899414
    7. 'temp' → logprob: -3.5902414321899414
    8. ' la' → logprob: -3.7152414321899414
    9. 'l' → logprob: -3.7152414321899414
    10. 'les' → logprob: -4.215241432189941

Token 371: ' ' (ID: 220)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.4515950381755829
    2. ' positions' → logprob: -1.4515950679779053
    3. ' ar' → logprob: -3.3265950679779053
    4. ' indices' → logprob: -4.076594829559326
    5. ' edges' → logprob: -4.326594829559326
    6. ' ' → logprob: -4.326594829559326
    7. ' b' → logprob: -4.451594829559326
    8. ' voisins' → logprob: -4.951594829559326
    9. ' two' → logprob: -5.076594829559326
    10. 'positions' → logprob: -5.201594829559326

Token 372: '0' (ID: 15)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5230604410171509
    2. 'positions' → logprob: -1.6480604410171509
    3. 'indices' → logprob: -2.3980603218078613
    4. 'b' → logprob: -2.7730603218078613
    5. 'ar' → logprob: -3.1480603218078613
    6. ' deux' → logprob: -5.273060321807861
    7. 'indexes' → logprob: -5.523060321807861
    8. '2' → logprob: -6.023060321807861
    9. '```' → logprob: -6.773060321807861
    10. 'edges' → logprob: -7.148060321807861

Token 373: ',' (ID: 11)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.6259159445762634
    2. ' positions' → logprob: -2.250916004180908
    3. 'positions' → logprob: -2.375916004180908
    4. 'de' → logprob: -2.875916004180908
    5. ' two' → logprob: -3.125916004180908
    6. 'e' → logprob: -3.875916004180908
    7. 's' → logprob: -4.375916004180908
    8. '2' → logprob: -4.375916004180908
    9. 'b' → logprob: -4.375916004180908
    10. 'indices' → logprob: -4.500916004180908

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9542350769042969
    2. '2' → logprob: -2.329235076904297
    3. 'indices' → logprob: -2.579235076904297
    4. 'L' → logprob: -2.829235076904297
    5. '#' → logprob: -3.204235076904297
    6. 'positions' → logprob: -3.204235076904297
    7. ')' → logprob: -3.329235076904297
    8. ' deux' → logprob: -3.454235076904297
    9. ' ' → logprob: -3.704235076904297
    10. '```' → logprob: -3.954235076904297

Token 375: '1' (ID: 16)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9796668291091919
    2. '2' → logprob: -1.104666829109192
    3. '1' → logprob: -2.3546667098999023
    4. 'positions' → logprob: -2.9796667098999023
    5. 'edges' → logprob: -3.6046667098999023
    6. 'indexes' → logprob: -3.7296667098999023
    7. 'if' → logprob: -3.7296667098999023
    8. 'N' → logprob: -4.854666709899902
    9. '```' → logprob: -5.104666709899902
    10. 'de' → logprob: -5.229666709899902

Token 376: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.742210328578949
    2. ',' → logprob: -0.867210328578949
    3. ' deux' → logprob: -3.6172103881835938
    4. '2' → logprob: -3.7422103881835938
    5. ' ' → logprob: -3.7422103881835938
    6. ' or' → logprob: -4.242210388183594
    7. ' ,' → logprob: -4.617210388183594
    8. 'ou' → logprob: -5.867210388183594
    9. 'or' → logprob: -6.867210388183594
    10. ' et' → logprob: -8.492210388183594

Token 377: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519325911998749
    2. ' ' → logprob: -1.5019326210021973
    3. ' deux' → logprob: -12.876932144165039
    4. '
' → logprob: -15.939432144165039
    5. '3' → logprob: -16.18943214416504
    6. ' two' → logprob: -16.37693214416504
    7. ' ' → logprob: -16.50193214416504
    8. '0' → logprob: -16.56443214416504
    9. ',' → logprob: -16.56443214416504
    10. '   ' → logprob: -16.93943214416504

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008062947308644652
    2. ' ' → logprob: -7.1258063316345215
    3. ' deux' → logprob: -13.500805854797363
    4. ' two' → logprob: -15.875805854797363
    5. 'de' → logprob: -16.75080680847168
    6. '   ' → logprob: -17.00080680847168
    7. '۲' → logprob: -17.62580680847168
    8. '２' → logprob: -18.31330680847168
    9. '  ' → logprob: -18.43830680847168
    10. ' dois' → logprob: -18.62580680847168

Token 379: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5367574691772461
    2. 'edges' → logprob: -1.161757469177246
    3. 'lines' → logprob: -3.411757469177246
    4. 'def' → logprob: -4.286757469177246
    5. 'tokens' → logprob: -4.536757469177246
    6. 'positions' → logprob: -4.661757469177246
    7. ' edges' → logprob: -5.036757469177246
    8. ' for' → logprob: -5.161757469177246
    9. 'ar' → logprob: -5.661757469177246
    10. 'changes' → logprob: -5.911757469177246

Token 380: 'entes' (ID: 5651)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.03373652324080467
    2. 'ar' → logprob: -4.658736705780029
    3. 'os' → logprob: -4.783736705780029
    4. 'positions' → logprob: -6.158736705780029
    5. 'oint' → logprob: -6.283736705780029
    6. 's' → logprob: -6.533736705780029
    7. 'r' → logprob: -6.783736705780029
    8. 'a' → logprob: -7.033736705780029
    9. 't' → logprob: -7.158736705780029
    10. 'u' → logprob: -7.283736705780029

Token 381: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003212805895600468
    2. 'Q' → logprob: -8.875321388244629
    3. ' for' → logprob: -9.125321388244629
    4. '
' → logprob: -9.625321388244629
    5. '\n' → logprob: -12.500321388244629
    6. 'q' → logprob: -14.625321388244629
    7. 'import' → logprob: -14.875321388244629
    8. 'def' → logprob: -15.375321388244629
    9. '\' → logprob: -15.875321388244629
    10. '#' → logprob: -16.000320434570312

Token 382: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002336162608116865
    2. 'Q' → logprob: -6.252336025238037
    3. ' for' → logprob: -7.877336025238037
    4. 'q' → logprob: -11.252336502075195
    5. '
' → logprob: -11.877336502075195
    6. 'queries' → logprob: -13.127336502075195
    7. 'def' → logprob: -14.002336502075195
    8. 'result' → logprob: -14.377336502075195
    9. 'L' → logprob: -14.627336502075195
    10. '_' → logprob: -14.627336502075195

Token 383: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00048775310278870165
    2. 'Q' → logprob: -8.250487327575684
    3. ' for' → logprob: -9.125487327575684
    4. 'output' → logprob: -9.625487327575684
    5. '
' → logprob: -10.875487327575684
    6. 'result' → logprob: -11.500487327575684
    7. 'import' → logprob: -12.125487327575684
    8. 'results' → logprob: -12.500487327575684
    9. 'def' → logprob: -12.625487327575684
    10. 'answer' → logprob: -12.875487327575684

Token 384: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002582402084954083
    2. ' def' → logprob: -8.750258445739746
    3. '
' → logprob: -9.875258445739746
    4. 'update' → logprob: -10.250258445739746
    5. '_update' → logprob: -11.625258445739746
    6. 'calculate' → logprob: -13.875258445739746
    7. '_def' → logprob: -14.375258445739746
    8. ' update' → logprob: -14.875258445739746
    9. ':def' → logprob: -14.875258445739746
    10. 'de' → logprob: -15.000258445739746

Token 385: ' calcul' (ID: 7559)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5900446176528931
    2. 'calculate' → logprob: -2.0900444984436035
    3. 'calc' → logprob: -2.2150444984436035
    4. 'calcul' → logprob: -2.5900444984436035
    5. ' recal' → logprob: -3.3400444984436035
    6. 'compute' → logprob: -3.9650444984436035
    7. ' calc' → logprob: -4.2150444984436035
    8. 'get' → logprob: -4.5900444984436035
    9. ' update' → logprob: -4.5900444984436035
    10. 'cal' → logprob: -4.7150444984436035

Token 386: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.8114368915557861
    2. 'er' → logprob: -0.9364368915557861
    3. 'def' → logprob: -2.186436891555786
    4. 'late' → logprob: -3.311436891555786
    5. 'ulate' → logprob: -5.061436653137207
    6. 'ler' → logprob: -6.561436653137207
    7. '#' → logprob: -6.561436653137207
    8. 'culate' → logprob: -6.561436653137207
    9. 'temp' → logprob: -6.811436653137207
    10. 'uler' → logprob: -6.811436653137207

Token 387: ' la' (ID: 557)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5860440135002136
    2. 'def' → logprob: -1.3360440731048584
    3. 'temp' → logprob: -2.4610440731048584
    4. 'diff' → logprob: -3.0860440731048584
    5. 'la' → logprob: -3.8360440731048584
    6. 'le' → logprob: -3.8360440731048584
    7. 'change' → logprob: -6.461043834686279
    8. 'the' → logprob: -7.086043834686279
    9. 'l' → logprob: -7.086043834686279
    10. '_delta' → logprob: -7.336043834686279

Token 388: ' contribution' (ID: 26735)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.05931098759174347
    2. 'diff' → logprob: -3.1843109130859375
    3. 'temp' → logprob: -4.8093109130859375
    4. 'con' → logprob: -5.4343109130859375
    5. 'impact' → logprob: -7.3093109130859375
    6. 'change' → logprob: -7.4343109130859375
    7. 'p' → logprob: -7.4343109130859375
    8. 'temperature' → logprob: -7.6843109130859375
    9. 'difference' → logprob: -7.8093109130859375
    10. 'variation' → logprob: -8.059310913085938

Token 389: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.787507714354433e-05
    2. 'diff' → logprob: -10.75004768371582
    3. ' def' → logprob: -11.75004768371582
    4. 'of' → logprob: -12.37504768371582
    5. '
' → logprob: -12.75004768371582
    6. 'delta' → logprob: -12.75004768371582
    7. '```' → logprob: -13.12504768371582
    8. '_def' → logprob: -14.12504768371582
    9. 'de' → logprob: -14.25004768371582
    10. 'prev' → logprob: -14.37504768371582

Token 390: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.0760412216186523
    2. 'temp' → logprob: -1.4510412216186523
    3. 'def' → logprob: -1.8260412216186523
    4. 'la' → logprob: -1.9510412216186523
    5. 'l' → logprob: -3.2010412216186523
    6. '(i' → logprob: -4.201041221618652
    7. 'i' → logprob: -4.451041221618652
    8. 'une' → logprob: -4.701041221618652
    9. '_diff' → logprob: -4.951041221618652
    10. 'p' → logprob: -5.076041221618652

Token 391: ' température' (ID: 78610)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.08603539317846298
    2. 'diff' → logprob: -3.0860354900360107
    3. 'temperature' → logprob: -3.4610354900360107
    4. 'delta' → logprob: -6.211035251617432
    5. 'p' → logprob: -7.086035251617432
    6. 'con' → logprob: -7.461035251617432
    7. 'def' → logprob: -7.711035251617432
    8. 'temper' → logprob: -7.836035251617432
    9. 'distance' → logprob: -8.46103572845459
    10. 'temps' → logprob: -8.46103572845459

Token 392: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001375089050270617
    2. '
' → logprob: -9.125137329101562
    3. ' def' → logprob: -10.625137329101562
    4. '```' → logprob: -12.750137329101562
    5. ':def' → logprob: -14.625137329101562
    6. 'from' → logprob: -15.375137329101562
    7. '(def' → logprob: -15.625137329101562
    8. '	def' → logprob: -16.250137329101562
    9. '_def' → logprob: -16.500137329101562
    10. '#' → logprob: -16.500137329101562

Token 393: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08707933127880096
    2. 'diff' → logprob: -3.7120792865753174
    3. 'def' → logprob: -3.9620792865753174
    4. 'indice' → logprob: -4.8370795249938965
    5. ' deux' → logprob: -5.4620795249938965
    6. 'temp' → logprob: -5.4620795249938965
    7. 'une' → logprob: -5.5870795249938965
    8. 'l' → logprob: -5.7120795249938965
    9. 'de' → logprob: -5.9620795249938965
    10. ' i' → logprob: -6.3370795249938965

Token 394: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8534541130065918
    2. '[' → logprob: -1.6034541130065918
    3. '_' → logprob: -1.8534541130065918
    4. '(i' → logprob: -1.9784541130065918
    5. '[i' → logprob: -2.853454113006592
    6. ',' → logprob: -5.603454113006592
    7. ')' → logprob: -5.978454113006592
    8. ' _' → logprob: -6.478454113006592
    9. '```' → logprob: -6.478454113006592
    10. 's' → logprob: -6.603454113006592

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004348705988377333
    2. ' i' → logprob: -5.5043487548828125
    3. '(i' → logprob: -9.129348754882812
    4. '
' → logprob: -10.004348754882812
    5. 'def' → logprob: -10.004348754882812
    6. 'diff' → logprob: -10.629348754882812
    7. 'A' → logprob: -10.754348754882812
    8. '```' → logprob: -11.379348754882812
    9. '
' → logprob: -13.254348754882812
    10. '#' → logprob: -13.254348754882812

Token 396: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024002723395824432
    2. 'plus' → logprob: -4.149002552032471
    3. 'i' → logprob: -5.899002552032471
    4. '1' → logprob: -6.274002552032471
    5. '+
' → logprob: -7.024002552032471
    6. '+i' → logprob: -7.024002552032471
    7. '_plus' → logprob: -7.149002552032471
    8. ' +' → logprob: -8.524003028869629
    9. '```' → logprob: -8.899003028869629
    10. ' plus' → logprob: -9.149003028869629

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '+' → logprob: -12.87500286102295
    3. 'i' → logprob: -15.87500286102295
    4. ' ' → logprob: -15.87500286102295
    5. '```' → logprob: -16.000003814697266
    6. '`' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '{' → logprob: -17.750003814697266
    9. '
' → logprob: -18.500003814697266
    10. '１' → logprob: -19.062503814697266

Token 398: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.8206473871250637e-05
    2. ' def' → logprob: -11.125028610229492
    3. '
' → logprob: -11.500028610229492
    4. '```' → logprob: -13.125028610229492
    5. '_def' → logprob: -14.625028610229492
    6. '(i' → logprob: -15.250028610229492
    7. '(
' → logprob: -15.375028610229492
    8. ':def' → logprob: -16.000028610229492
    9. '(' → logprob: -16.125028610229492
    10. '(def' → logprob: -17.125028610229492

Token 399: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3319124011322856e-05
    2. ' def' → logprob: -11.500022888183594
    3. '```' → logprob: -11.875022888183594
    4. '
' → logprob: -12.125022888183594
    5. ':def' → logprob: -14.375022888183594
    6. '``' → logprob: -16.875022888183594
    7. '	def' → logprob: -17.250022888183594
    8. '_def' → logprob: -17.375022888183594
    9. '-def' → logprob: -17.375022888183594
    10. '(def' → logprob: -17.875022888183594

Token 400: ' edge' (ID: 11165)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.21972934901714325
    2. 'temp' → logprob: -2.094729423522949
    3. 'get' → logprob: -3.719729423522949
    4. 'delta' → logprob: -3.969729423522949
    5. 'temperature' → logprob: -4.344729423522949
    6. 'calc' → logprob: -5.344729423522949
    7. 'edge' → logprob: -5.594729423522949
    8. 'contr' → logprob: -5.594729423522949
    9. 'compute' → logprob: -5.844729423522949
    10. 'diff' → logprob: -7.469729423522949

Token 401: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.2949560582637787
    2. '_temp' → logprob: -2.0449559688568115
    3. '(i' → logprob: -2.7949559688568115
    4. '_value' → logprob: -3.6699559688568115
    5. '_diff' → logprob: -4.169956207275391
    6. '_change' → logprob: -4.294956207275391
    7. '_delta' → logprob: -5.544956207275391
    8. '_temperature' → logprob: -5.544956207275391
    9. '_val' → logprob: -7.044956207275391
    10. '_cost' → logprob: -7.294956207275391

Token 402: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.5764613151550293
    2. 'tribution' → logprob: -0.8264613151550293
    3. 'tr' → logprob: -8.326461791992188
    4. 't' → logprob: -9.201461791992188
    5. 'tri' → logprob: -9.701461791992188
    6. ' trib' → logprob: -9.826461791992188
    7. 'tribute' → logprob: -10.576461791992188
    8. 'f' → logprob: -11.826461791992188
    9. 'st' → logprob: -12.326461791992188
    10. 'def' → logprob: -12.451461791992188

Token 403: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011431955499574542
    2. '(' → logprob: -6.876142978668213
    3. '(A' → logprob: -9.876143455505371
    4. '(a' → logprob: -10.501143455505371
    5. '(diff' → logprob: -11.251143455505371
    6. ' (' → logprob: -11.751143455505371
    7. '(idx' → logprob: -12.376143455505371
    8. '(
' → logprob: -13.751143455505371
    9. 'i' → logprob: -13.876143455505371
    10. 'def' → logprob: -14.001143455505371

Token 404: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7791257500648499
    2. 'rr' → logprob: -1.029125690460205
    3. ',i' → logprob: -2.404125690460205
    4. 'rray' → logprob: -2.904125690460205
    5. 'i' → logprob: -3.654125690460205
    6. 'r' → logprob: -5.404125690460205
    7. '_i' → logprob: -6.279125690460205
    8. 'ry' → logprob: -6.279125690460205
    9. 'l' → logprob: -6.404125690460205
    10. 'lt' → logprob: -7.529125690460205

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005889683496206999
    2. ' ,' → logprob: -5.505889892578125
    3. ',i' → logprob: -6.630889892578125
    4. ',a' → logprob: -8.505889892578125
    5. '):' → logprob: -10.005889892578125
    6. '):
' → logprob: -10.380889892578125
    7. 'i' → logprob: -10.505889892578125
    8. 'nd' → logprob: -10.505889892578125
    9. '_,' → logprob: -10.755889892578125
    10. ',b' → logprob: -11.005889892578125

Token 406: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006267757853493094
    2. ' a' → logprob: -7.375626564025879
    3. '	a' → logprob: -15.625626564025879
    4. 'b' → logprob: -16.750627517700195
    5. ' ' → logprob: -17.625627517700195
    6. '   ' → logprob: -18.125627517700195
    7. '_a' → logprob: -18.375627517700195
    8. '```' → logprob: -18.500627517700195
    9. '#a' → logprob: -19.125627517700195
    10. ',a' → logprob: -19.563127517700195

Token 407: '_next' (ID: 25436)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030938081443309784
    2. '_i' → logprob: -3.655938148498535
    3. '_next' → logprob: -6.030938148498535
    4. '_ip' → logprob: -7.280938148498535
    5. '_plus' → logprob: -7.530938148498535
    6. 'ip' → logprob: -8.280938148498535
    7. 'next' → logprob: -8.405938148498535
    8. 'plus' → logprob: -8.780938148498535
    9. 'j' → logprob: -9.530938148498535
    10. '1' → logprob: -9.780938148498535

Token 408: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0261257886886597
    2. '):' → logprob: -1.1511257886886597
    3. '):
' → logprob: -1.1511257886886597
    4. ' ,' → logprob: -5.526125907897949
    5. '1' → logprob: -6.651125907897949
    6. ')' → logprob: -7.276125907897949
    7. 'i' → logprob: -7.401125907897949
    8. '+' → logprob: -7.901125907897949
    9. ',i' → logprob: -8.02612590789795
    10. '_i' → logprob: -8.52612590789795

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.227250610711053e-05
    2. ':' → logprob: -10.375041961669922
    3. ' if' → logprob: -12.375041961669922
    4. '):' → logprob: -13.875041961669922
    5. '):
' → logprob: -13.875041961669922
    6. '	if' → logprob: -13.875041961669922
    7. '<|end|>' → logprob: -14.375041961669922
    8. '   ' → logprob: -14.625041961669922
    9. 'if' → logprob: -14.750041961669922
    10. '(' → logprob: -15.000041961669922

Token 410: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03170647472143173
    2. 'diff' (adapté à ' diff') → logprob: -3.9067065715789795
    3. '   ' → logprob: -4.6567063331604
    4. ' if' → logprob: -6.7817063331604
    5. 'return' → logprob: -7.7817063331604
    6. ' diff' → logprob: -10.156706809997559
    7. 'delta' → logprob: -12.281706809997559
    8. '```' → logprob: -13.281706809997559
    9. '	diff' → logprob: -13.656706809997559
    10. 'temp' → logprob: -13.906706809997559

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.523244857788086
    4. '>' → logprob: -16.648244857788086
    5. '=int' → logprob: -16.898244857788086
    6. ')' → logprob: -17.523244857788086
    7. '=a' → logprob: -17.648244857788086
    8. '＝' → logprob: -18.023244857788086
    9. ' ' → logprob: -18.273244857788086
    10. '	' → logprob: -18.398244857788086

Token 412: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. '	a' → logprob: -17.125553131103516
    4. '(a' → logprob: -19.000553131103516
    5. '   ' → logprob: -19.625553131103516
    6. ' ' → logprob: -19.750553131103516
    7. '
' → logprob: -21.375553131103516
    8. ' ' → logprob: -21.625553131103516
    9. '_a' → logprob: -22.250553131103516
    10. '```' → logprob: -22.625553131103516

Token 413: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.037006497383117676
    2. '_i' → logprob: -3.537006378173828
    3. 'next' → logprob: -5.037006378173828
    4. 'i' → logprob: -7.537006378173828
    5. ' next' → logprob: -9.412006378173828
    6. 'Next' → logprob: -9.912006378173828
    7. 'a' → logprob: -10.287006378173828
    8. '_n' → logprob: -11.537006378173828
    9. '_NEXT' → logprob: -12.537006378173828
    10. '
' → logprob: -12.662006378173828

Token 414: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.693199098110199
    2. ' -' → logprob: -0.693199098110199
    3. '-i' → logprob: -10.693199157714844
    4. 'a' → logprob: -11.568199157714844
    5. '-a' → logprob: -12.068199157714844
    6. '-int' → logprob: -12.193199157714844
    7. ' ' → logprob: -13.068199157714844
    8. '-ai' → logprob: -13.318199157714844
    9. '-token' → logprob: -13.943199157714844
    10. '-input' → logprob: -14.068199157714844

Token 415: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -18.75002098083496
    4. 'i' → logprob: -19.25002098083496
    5. 'ai' → logprob: -19.62502098083496
    6. ' ' → logprob: -20.12502098083496
    7. '```' → logprob: -20.25002098083496
    8. '   ' → logprob: -20.75002098083496
    9. '  ' → logprob: -21.50002098083496
    10. 'а' → logprob: -22.37502098083496

Token 416: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.018154388293623924
    2. 'i' → logprob: -4.018154621124268
    3. '[i' → logprob: -13.26815414428711
    4. ' i' → logprob: -14.26815414428711
    5. '[' → logprob: -14.51815414428711
    6. ',i' → logprob: -15.26815414428711
    7. '```' → logprob: -15.39315414428711
    8. 'int' → logprob: -15.51815414428711
    9. '{i' → logprob: -16.26815414428711
    10. '	i' → logprob: -16.26815414428711

Token 417: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07902198284864426
    2. '
' → logprob: -2.70402193069458
    3. '<|end|>' → logprob: -5.20402193069458
    4. '<|end|>' → logprob: -6.95402193069458
    5. ')' → logprob: -7.07902193069458
    6. ',' → logprob: -7.82902193069458
    7. ' if' → logprob: -7.82902193069458
    8. ' ' → logprob: -8.829022407531738
    9. '	if' → logprob: -9.204022407531738
    10. 'if' → logprob: -9.579022407531738

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004811969120055437
    2. ' if' → logprob: -5.754811763763428
    3. 'if' → logprob: -6.629811763763428
    4. '<|end|>' → logprob: -8.629812240600586
    5. '	if' → logprob: -9.879812240600586
    6. '```' → logprob: -10.504812240600586
    7. ')' → logprob: -11.004812240600586
    8. ' ' → logprob: -11.879812240600586
    9. '<|end|>' → logprob: -12.004812240600586
    10. '    
' → logprob: -12.754812240600586

Token 419: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005064461147412658
    2. '   ' → logprob: -7.750506401062012
    3. ' if' → logprob: -9.500506401062012
    4. 'return' → logprob: -14.125506401062012
    5. '	if' → logprob: -15.375506401062012
    6. '```' → logprob: -17.375507354736328
    7. ' ' → logprob: -17.500507354736328
    8. '       ' → logprob: -17.625507354736328
    9. '
' → logprob: -18.000507354736328
    10. 'i' → logprob: -18.250507354736328

Token 420: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6931743621826172
    2. 'diff' → logprob: -0.6931743621826172
    3. '	diff' → logprob: -10.693174362182617
    4. '0' → logprob: -13.818174362182617
    5. '(diff' → logprob: -13.818174362182617
    6. '   ' → logprob: -13.818174362182617
    7. ' ' → logprob: -14.068174362182617
    8. ' dif' → logprob: -16.068174362182617
    9. '    ' → logprob: -16.318174362182617
    10. '.diff' → logprob: -16.443174362182617

Token 421: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12693576514720917
    2. ' >' → logprob: -2.1269357204437256
    3. '()>' → logprob: -13.376935958862305
    4. '<=' → logprob: -13.876935958862305
    5. ')>' → logprob: -14.126935958862305
    6. '0' → logprob: -14.251935958862305
    7. '">' → logprob: -14.376935958862305
    8. '>
' → logprob: -14.376935958862305
    9. ' <=' → logprob: -14.501935958862305
    10. '<' → logprob: -14.751935958862305

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.387510299682617
    4. '  ' → logprob: -17.887510299682617
    5. '
' → logprob: -18.887510299682617
    6. '>' → logprob: -19.262510299682617
    7. 'import' → logprob: -19.575010299682617
    8. ' ' → logprob: -19.762510299682617
    9. '```' → logprob: -19.825010299682617
    10. '۰' → logprob: -20.200010299682617

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -20.375009536743164
    4. '```' → logprob: -21.500009536743164
    5. '۰' → logprob: -22.000009536743164
    6. '  ' → logprob: -22.250009536743164
    7. 'import' → logprob: -22.500009536743164
    8. 'def' → logprob: -22.750009536743164
    9. 'O' → logprob: -23.000009536743164
    10. 'return' → logprob: -23.250009536743164

Token 424: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11457744240760803
    2. '       ' → logprob: -2.364577531814575
    3. ':
' → logprob: -4.364577293395996
    4. '   ' → logprob: -7.489577293395996
    5. ':return' → logprob: -7.864577293395996
    6. '):' → logprob: -8.614577293395996
    7. '<|end|>' → logprob: -9.364577293395996
    8. '):
' → logprob: -9.364577293395996
    9. ',' → logprob: -9.614577293395996
    10. ' :' → logprob: -9.739577293395996

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12488577514886856
    2. 'return' → logprob: -2.3748857975006104
    3. ' return' → logprob: -3.9998857975006104
    4. '   ' → logprob: -5.124885559082031
    5. '	return' → logprob: -9.749885559082031
    6. '	' → logprob: -10.749885559082031
    7. '	   ' → logprob: -10.999885559082031
    8. '    ' → logprob: -12.499885559082031
    9. '           ' → logprob: -12.499885559082031
    10. '     ' → logprob: -12.624885559082031

Token 426: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011208031326532364
    2. ' return' → logprob: -4.5112080574035645
    3. '   ' → logprob: -8.886207580566406
    4. '       ' → logprob: -10.886207580566406
    5. '	return' → logprob: -13.636207580566406
    6. '-' → logprob: -13.761207580566406
    7. 'result' → logprob: -16.136207580566406
    8. '
' → logprob: -16.261207580566406
    9. ' -' → logprob: -16.261207580566406
    10. '```' → logprob: -16.511207580566406

Token 427: ' -' (ID: 533)
  Prédit: '-S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-S' → logprob: -0.2664223313331604
    2. '-' → logprob: -1.7664222717285156
    3. ' -' → logprob: -2.7664222717285156
    4. '(-' → logprob: -10.766422271728516
    5. '   ' → logprob: -11.016422271728516
    6. '-s' → logprob: -11.766422271728516
    7. '-(' → logprob: -12.016422271728516
    8. ' ' → logprob: -14.141422271728516
    9. '0' → logprob: -14.516422271728516
    10. 'S' → logprob: -14.641422271728516

Token 428: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00020413640595506877
    2. ' S' → logprob: -8.500204086303711
    3. '(S' → logprob: -15.000204086303711
    4. 'diff' → logprob: -15.500204086303711
    5. ' (' → logprob: -17.50020408630371
    6. '   ' → logprob: -18.00020408630371
    7. ' ' → logprob: -18.25020408630371
    8. '_S' → logprob: -18.62520408630371
    9. '```' → logprob: -18.87520408630371
    10. '
' → logprob: -19.12520408630371

Token 429: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16022758185863495
    2. '*' → logprob: -1.9102275371551514
    3. '*(' → logprob: -13.41022777557373
    4. ' ' → logprob: -13.78522777557373
    5. ' ' → logprob: -14.53522777557373
    6. '   ' → logprob: -16.035226821899414
    7. '**' → logprob: -16.660226821899414
    8. '*object' → logprob: -16.785226821899414
    9. '    ' → logprob: -17.160226821899414
    10. '```' → logprob: -17.535226821899414

Token 430: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00043853666284121573
    2. ' diff' → logprob: -7.750438690185547
    3. '(diff' → logprob: -11.750438690185547
    4. '	diff' → logprob: -17.625438690185547
    5. 'dif' → logprob: -20.375438690185547
    6. '.diff' → logprob: -21.125438690185547
    7. '_diff' → logprob: -21.375438690185547
    8. ' (' → logprob: -22.000438690185547
    9. '(' → logprob: -22.125438690185547
    10. 'd' → logprob: -22.250438690185547

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006601344794034958
    2. ' else' → logprob: -8.125659942626953
    3. 'else' → logprob: -8.375659942626953
    4. '
' → logprob: -9.750659942626953
    5. '	else' → logprob: -10.000659942626953
    6. '<|end|>' → logprob: -11.125659942626953
    7. '	return' → logprob: -12.500659942626953
    8. 'return' → logprob: -12.500659942626953
    9. '    
' → logprob: -12.875659942626953
    10. '       ' → logprob: -14.000659942626953

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.036524842376821e-05
    2. 'else' → logprob: -10.375040054321289
    3. '	else' → logprob: -12.875040054321289
    4. ' else' → logprob: -13.125040054321289
    5. 'return' → logprob: -13.375040054321289
    6. '   ' → logprob: -13.750040054321289
    7. '	return' → logprob: -14.250040054321289
    8. '
' → logprob: -14.875040054321289
    9. ',' → logprob: -15.875040054321289
    10. '	' → logprob: -16.00004005432129

Token 433: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002108743879944086
    2. 'else' (adapté à ' else') → logprob: -6.252108573913574
    3. ' else' → logprob: -9.127108573913574
    4. 'return' → logprob: -9.752108573913574
    5. 'elif' → logprob: -12.002108573913574
    6. '	else' → logprob: -12.752108573913574
    7. '
' → logprob: -13.252108573913574
    8. ' return' → logprob: -14.377108573913574
    9. '   ' → logprob: -14.377108573913574
    10. '       ' → logprob: -15.127108573913574

Token 434: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012468972709029913
    2. ':' → logprob: -7.126246929168701
    3. ':
' → logprob: -8.876246452331543
    4. 'return' → logprob: -9.001246452331543
    5. ' return' → logprob: -9.001246452331543
    6. ':return' → logprob: -10.501246452331543
    7. '   ' → logprob: -11.126246452331543
    8. '	return' → logprob: -12.376246452331543
    9. ',' → logprob: -12.501246452331543
    10. '      ' → logprob: -13.251246452331543

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0156323853880167
    2. 'return' → logprob: -4.515632152557373
    3. ' return' → logprob: -5.390632152557373
    4. '   ' → logprob: -11.640632629394531
    5. '	return' → logprob: -12.765632629394531
    6. '      ' → logprob: -13.765632629394531
    7. '           ' → logprob: -14.640632629394531
    8. '	' → logprob: -14.765632629394531
    9. '        ' → logprob: -14.765632629394531
    10. '    ' → logprob: -15.015632629394531

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004084335640072823
    2. ' return' → logprob: -5.50408411026001
    3. '       ' → logprob: -12.379084587097168
    4. 'T' → logprob: -13.379084587097168
    5. '   ' → logprob: -15.504084587097168
    6. '	return' → logprob: -17.00408363342285
    7. ' T' → logprob: -18.37908363342285
    8. '
' → logprob: -19.37908363342285
    9. ' ' → logprob: -20.12908363342285
    10. '    ' → logprob: -20.37908363342285

Token 437: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -9.627176768844947e-05
    2. ' T' → logprob: -9.250096321105957
    3. '+' → logprob: -15.750096321105957
    4. '   ' → logprob: -17.87509536743164
    5. ' ' → logprob: -18.25009536743164
    6. '  ' → logprob: -20.00009536743164
    7. '	T' → logprob: -20.50009536743164
    8. ' +' → logprob: -20.87509536743164
    9. ' ' → logprob: -21.00009536743164
    10. '(T' → logprob: -21.37509536743164

Token 438: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5028592348098755
    2. ' *' → logprob: -1.0028592348098755
    3. '*(-' → logprob: -3.877859115600586
    4. '*(' → logprob: -4.877859115600586
    5. '   ' → logprob: -10.252859115600586
    6. ' ' → logprob: -11.252859115600586
    7. '*-' → logprob: -12.127859115600586
    8. ' ' → logprob: -12.627859115600586
    9. '  ' → logprob: -13.127859115600586
    10. '(-' → logprob: -13.627859115600586

Token 439: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00011248346709180623
    2. ' (-' → logprob: -9.125112533569336
    3. '(' → logprob: -12.625112533569336
    4. '   ' → logprob: -16.500112533569336
    5. ' (' → logprob: -17.625112533569336
    6. '-d' → logprob: -17.625112533569336
    7. ' -' → logprob: -17.875112533569336
    8. '((-' → logprob: -17.875112533569336
    9. ' ' → logprob: -18.875112533569336
    10. '(
' → logprob: -19.000112533569336

Token 440: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -5.438573680294212e-06
    2. ' diff' → logprob: -12.125005722045898
    3. '	diff' → logprob: -18.5000057220459
    4. '(diff' → logprob: -18.6250057220459
    5. '   ' → logprob: -20.7500057220459
    6. 'dif' → logprob: -21.3750057220459
    7. '
' → logprob: -22.0000057220459
    8. '1' → logprob: -22.0000057220459
    9. '_diff' → logprob: -22.5000057220459
    10. ' ' → logprob: -22.6250057220459

Token 441: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -15.250001907348633
    4. ')return' → logprob: -15.875001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. '))' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '),' → logprob: -18.375001907348633
    9. '}' → logprob: -18.375001907348633
    10. ')#' → logprob: -18.625001907348633

Token 442: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004289353732019663
    2. 'Q' → logprob: -5.504289150238037
    3. 'def' → logprob: -8.879289627075195
    4. ' for' → logprob: -9.629289627075195
    5. '#' → logprob: -12.879289627075195
    6. '```' → logprob: -13.379289627075195
    7. 'import' → logprob: -14.379289627075195
    8. '	for' → logprob: -15.254289627075195
    9. '
' → logprob: -15.629289627075195
    10. 'q' → logprob: -16.254289627075195

Token 443: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004671137779951096
    2. '_' → logprob: -5.379671096801758
    3. ' ' → logprob: -10.629671096801758
    4. ' in' → logprob: -10.754671096801758
    5. ' range' → logprob: -13.504671096801758
    6. ' i' → logprob: -13.754671096801758
    7. ' j' → logprob: -14.004671096801758
    8. ' ' → logprob: -14.254671096801758
    9. ' Q' → logprob: -15.004671096801758
    10. '_j' → logprob: -15.129671096801758

Token 444: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07008014619350433
    2. 'in' → logprob: -2.695080041885376
    3. ' ' → logprob: -9.070079803466797
    4. '_' → logprob: -11.820079803466797
    5. 'range' → logprob: -11.820079803466797
    6. '  ' → logprob: -11.945079803466797
    7. 'import' → logprob: -13.820079803466797
    8. ',' → logprob: -14.070079803466797
    9. ' _' → logprob: -14.070079803466797
    10. '	in' → logprob: -14.195079803466797

Token 445: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721536163240671
    2. ' range' → logprob: -5.006721496582031
    3. '(range' → logprob: -12.756721496582031
    4. 'input' → logprob: -12.881721496582031
    5. 'in' → logprob: -15.381721496582031
    6. '	range' → logprob: -16.13172149658203
    7. 'read' → logprob: -16.25672149658203
    8. 'map' → logprob: -17.13172149658203
    9. '(' → logprob: -17.38172149658203
    10. ' in' → logprob: -17.38172149658203

Token 446: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.747814349073451e-05
    2. 'Q' → logprob: -11.250017166137695
    3. '(' → logprob: -12.375017166137695
    4. ' (' → logprob: -16.500017166137695
    5. ' Q' → logprob: -17.250017166137695
    6. '(int' → logprob: -20.250017166137695
    7. '(
' → logprob: -20.500017166137695
    8. '	Q' → logprob: -21.250017166137695
    9. '(q' → logprob: -21.625017166137695
    10. '(Qt' → logprob: -21.750017166137695

Token 447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06219051405787468
    2. '):
' → logprob: -2.812190532684326
    3. '):
' → logprob: -9.187190055847168
    4. ')' → logprob: -9.312190055847168
    5. ' ):' → logprob: -11.187190055847168
    6. ':' → logprob: -11.687190055847168
    7. '():' → logprob: -12.687190055847168
    8. '():
' → logprob: -13.312190055847168
    9. ',' → logprob: -14.187190055847168
    10. '):

' → logprob: -14.437190055847168

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026079533621668816
    2. ' L' → logprob: -4.0260796546936035
    3. '	L' → logprob: -5.4010796546936035
    4. 'L' → logprob: -5.7760796546936035
    5. '   ' → logprob: -8.651079177856445
    6. ',L' → logprob: -10.151079177856445
    7. ' line' → logprob: -10.901079177856445
    8. '	line' → logprob: -11.651079177856445
    9. '    ' → logprob: -12.026079177856445
    10. '	l' → logprob: -12.151079177856445

Token 449: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -2.546478935983032e-05
    2. ' L' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.125025749206543
    4. '	L' → logprob: -15.500025749206543
    5. 'l' → logprob: -15.875025749206543
    6. '    
' → logprob: -17.875024795532227
    7. '  ' → logprob: -19.375024795532227
    8. ',L' → logprob: -19.500024795532227
    9. '_L' → logprob: -19.750024795532227
    10. ' ' → logprob: -19.750024795532227

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011427151912357658
    2. ',R' → logprob: -9.750114440917969
    3. ',j' → logprob: -11.125114440917969
    4. ',J' → logprob: -11.250114440917969
    5. ' ,' → logprob: -11.500114440917969
    6. ',K' → logprob: -11.875114440917969
    7. '_,' → logprob: -12.125114440917969
    8. ',k' → logprob: -13.750114440917969
    9. ',Q' → logprob: -14.125114440917969
    10. ',r' → logprob: -14.625114440917969

Token 451: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006715370807796717
    2. ' R' → logprob: -5.006715297698975
    3. '   ' → logprob: -19.006715774536133
    4. ' ' → logprob: -19.506715774536133
    5. ',' → logprob: -19.756715774536133
    6. '    
' → logprob: -20.131715774536133
    7. '
' → logprob: -20.131715774536133
    8. 'r' → logprob: -20.756715774536133
    9. ' 
' → logprob: -21.131715774536133
    10. '  ' → logprob: -21.756715774536133

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '=' → logprob: -15.875015258789062
    4. ',X' → logprob: -16.375015258789062
    5. '_,' → logprob: -16.500015258789062
    6. '‌,' → logprob: -17.875015258789062
    7. ',input' → logprob: -18.375015258789062
    8. ',x' → logprob: -18.500015258789062
    9. ' ' → logprob: -18.500015258789062
    10. ',
' → logprob: -19.125015258789062

Token 453: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -8.113290095934644e-05
    2. ' X' → logprob: -9.500081062316895
    3. 'x' → logprob: -12.000081062316895
    4. ' ' → logprob: -18.62508201599121
    5. 'int' → logprob: -19.00008201599121
    6. '_X' → logprob: -19.25008201599121
    7. 'Y' → logprob: -19.37508201599121
    8. 'C' → logprob: -19.50008201599121
    9. '	X' → logprob: -19.87508201599121
    10. 'Xs' → logprob: -20.00008201599121

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132634460926056
    2. ' =' → logprob: -1.3132634162902832
    3. '=input' → logprob: -13.688263893127441
    4. '	' → logprob: -15.813263893127441
    5. ' ' → logprob: -15.938263893127441
    6. ',' → logprob: -16.188262939453125
    7. '=int' → logprob: -16.438262939453125
    8. '   ' → logprob: -16.688262939453125
    9. '=line' → logprob: -17.438262939453125
    10. '＝' → logprob: -17.563262939453125

Token 455: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931505799293518
    2. ' map' → logprob: -0.6931505799293518
    3. '	map' → logprob: -12.818150520324707
    4. ' ' → logprob: -14.693150520324707
    5. 'm' → logprob: -16.318151473999023
    6. '   ' → logprob: -17.193151473999023
    7. '  ' → logprob: -18.193151473999023
    8. '(map' → logprob: -18.193151473999023
    9. ' ' → logprob: -18.818151473999023
    10. '[' → logprob: -19.443151473999023

Token 456: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.967624019831419e-05
    2. 'int' → logprob: -9.750060081481934
    3. '(' → logprob: -14.500060081481934
    4. '=int' → logprob: -15.000060081481934
    5. ',int' → logprob: -15.750060081481934
    6. '[int' → logprob: -15.875060081481934
    7. '```' → logprob: -16.375059127807617
    8. ' (' → logprob: -16.875059127807617
    9. '<int' → logprob: -17.125059127807617
    10. ' int' → logprob: -17.375059127807617

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17138752341270447
    2. ',input' → logprob: -1.9213875532150269
    3. '(),' → logprob: -4.546387672424316
    4. '(input' → logprob: -8.421387672424316
    5. ' ,' → logprob: -8.671387672424316
    6. 'input' → logprob: -10.171387672424316
    7. '   ' → logprob: -10.796387672424316
    8. '(' → logprob: -11.296387672424316
    9. ',int' → logprob: -11.296387672424316
    10. '()' → logprob: -11.546387672424316

Token 458: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.547789674485102e-05
    2. ' input' → logprob: -10.250035285949707
    3. 'int' → logprob: -20.625036239624023
    4. '(input' → logprob: -21.625036239624023
    5. ',input' → logprob: -22.625036239624023
    6. 'sys' → logprob: -22.750036239624023
    7. '=input' → logprob: -23.000036239624023
    8. ')' → logprob: -23.375036239624023
    9. '<input' → logprob: -23.625036239624023
    10. '[input' → logprob: -24.000036239624023

Token 459: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -15.750007629394531
    4. '()
' → logprob: -16.87500762939453
    5. '.' → logprob: -18.00000762939453
    6. '.split' → logprob: -18.25000762939453
    7. ')' → logprob: -18.50000762939453
    8. '(' → logprob: -18.87500762939453
    9. '())' → logprob: -19.00000762939453
    10. ' .' → logprob: -19.25000762939453

Token 460: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.875000953674316
    3. 'strip' → logprob: -15.625000953674316
    4. '(split' → logprob: -17.75
    5. 'spl' → logprob: -19.25
    6. 'rstrip' → logprob: -19.625
    7. ')' → logprob: -20.0
    8. '.split' → logprob: -20.25
    9. ' ' → logprob: -21.0
    10. 'plit' → logprob: -21.875

Token 461: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017170661594718695
    2. ')
' → logprob: -6.3767170906066895
    3. '()' → logprob: -12.626716613769531
    4. '   ' → logprob: -12.626716613769531
    5. '())' → logprob: -12.626716613769531
    6. ')
' → logprob: -12.751716613769531
    7. ')`' → logprob: -13.751716613769531
    8. ' )' → logprob: -15.001716613769531
    9. ')`
' → logprob: -15.001716613769531
    10. ')

' → logprob: -15.501716613769531

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008713211864233017
    2. 'if' → logprob: -8.250871658325195
    3. '    
' → logprob: -8.250871658325195
    4. '```' → logprob: -8.750871658325195
    5. 'for' → logprob: -9.500871658325195
    6. '
' → logprob: -10.125871658325195
    7. ' if' → logprob: -10.375871658325195
    8. '#' → logprob: -11.000871658325195
    9. ' for' → logprob: -11.500871658325195
    10. '	if' → logprob: -13.000871658325195

Token 463: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2021060585975647
    2. '#' (adapté à ' #') → logprob: -1.70210599899292
    3. 'for' → logprob: -7.70210599899292
    4. 'old' → logprob: -9.077106475830078
    5. 'L' → logprob: -9.452106475830078
    6. '   ' → logprob: -10.827106475830078
    7. 'def' → logprob: -12.202106475830078
    8. 'edges' → logprob: -12.327106475830078
    9. 'delta' → logprob: -12.702106475830078
    10. 'before' → logprob: -12.827106475830078

Token 464: ' Mise' (ID: 157932)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09028066694736481
    2. '#' → logprob: -2.465280771255493
    3. 'for' → logprob: -7.090280532836914
    4. 'L' → logprob: -7.965280532836914
    5. '   ' → logprob: -9.715280532836914
    6. 'old' → logprob: -10.215280532836914
    7. ' if' → logprob: -10.840280532836914
    8. 'def' → logprob: -11.090280532836914
    9. 'edges' → logprob: -12.215280532836914
    10. 'left' → logprob: -12.590280532836914

Token 465: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5958088040351868
    2. 'à' → logprob: -0.8458088040351868
    3. ' à' → logprob: -4.095808982849121
    4. '```' → logprob: -6.345808982849121
    5. '#' → logprob: -7.095808982849121
    6. 'À' → logprob: -9.095808982849121
    7. 'a' → logprob: -9.345808982849121
    8. '-à' → logprob: -9.470808982849121
    9. '    ' → logprob: -9.720808982849121
    10. ''à' → logprob: -10.595808982849121

Token 466: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.020703865215182304
    2. ' jour' → logprob: -4.1457037925720215
    3. 'day' → logprob: -6.3957037925720215
    4. 'jours' → logprob: -6.7707037925720215
    5. '```' → logprob: -7.1457037925720215
    6. 'jou' → logprob: -7.3957037925720215
    7. 'for' → logprob: -8.77070426940918
    8. '#' → logprob: -10.02070426940918
    9. 'Jour' → logprob: -10.02070426940918
    10. '_j' → logprob: -10.14570426940918

Token 467: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3385118246078491
    2. 'if' → logprob: -1.4635118246078491
    3. ' if' → logprob: -3.3385119438171387
    4. 'for' → logprob: -4.338511943817139
    5. '#' → logprob: -5.463511943817139
    6. ' for' → logprob: -5.963511943817139
    7. '	if' → logprob: -8.96351146697998
    8. '```' → logprob: -9.83851146697998
    9. ',' → logprob: -10.08851146697998
    10. 'L' → logprob: -10.58851146697998

Token 468: ' b' (ID: 287)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7399632334709167
    2. '#' → logprob: -1.3649632930755615
    3. 'b' → logprob: -1.4899632930755615
    4. 'edges' → logprob: -4.364963054656982
    5. 'bord' → logprob: -4.489963054656982
    6. 'val' → logprob: -5.239963054656982
    7. 'temp' → logprob: -5.239963054656982
    8. 'for' → logprob: -6.614963054656982
    9. 'L' → logprob: -6.739963054656982
    10. 'diff' → logprob: -7.114963054656982

Token 469: 'ords' (ID: 9142)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011224533431231976
    2. 'ords' → logprob: -4.761224746704102
    3. 'ounds' → logprob: -7.761224746704102
    4. '#' → logprob: -8.136224746704102
    5. 'orne' → logprob: -8.136224746704102
    6. '```' → logprob: -8.386224746704102
    7. '[i' → logprob: -8.636224746704102
    8. 'A' → logprob: -8.886224746704102
    9. 'r' → logprob: -9.011224746704102
    10. '   ' → logprob: -9.011224746704102

Token 470: ' affect' (ID: 7902)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034023032640106976
    2. 'if' → logprob: -8.250340461730957
    3. ' if' → logprob: -9.625340461730957
    4. 'for' → logprob: -11.875340461730957
    5. ',' → logprob: -13.875340461730957
    6. ':' → logprob: -13.875340461730957
    7. '    
' → logprob: -13.875340461730957
    8. ' for' → logprob: -14.125340461730957
    9. '	if' → logprob: -14.125340461730957
    10. '       ' → logprob: -15.000340461730957

Token 471: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00044092073221690953
    2. 'ant' → logprob: -8.50044059753418
    3. 'ées' → logprob: -9.12544059753418
    4. '#' → logprob: -9.87544059753418
    5. 'A' → logprob: -11.12544059753418
    6. '   ' → logprob: -11.25044059753418
    7. 'é' → logprob: -11.25044059753418
    8. 'ée' → logprob: -11.37544059753418
    9. 'es' → logprob: -11.50044059753418
    10. 's' → logprob: -12.50044059753418

Token 472: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011287372559309006
    2. 'if' → logprob: -4.511287212371826
    3. ' if' → logprob: -9.386287689208984
    4. 'for' → logprob: -9.636287689208984
    5. '
' → logprob: -10.136287689208984
    6. '    
' → logprob: -10.636287689208984
    7. ',' → logprob: -12.011287689208984
    8. '	if' → logprob: -12.261287689208984
    9. 'L' → logprob: -12.636287689208984
    10. '#' → logprob: -12.636287689208984

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08961039781570435
    2. 'if' → logprob: -2.4646103382110596
    3. ' if' → logprob: -7.589610576629639
    4. 'for' → logprob: -8.96461009979248
    5. '	if' → logprob: -10.58961009979248
    6. '```' → logprob: -12.08961009979248
    7. '    
' → logprob: -13.33961009979248
    8. ' for' → logprob: -14.08961009979248
    9. '
' → logprob: -14.33961009979248
    10. '       ' → logprob: -14.46461009979248

Token 474: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062231749296188354
    2. '   ' → logprob: -2.8122317790985107
    3. 'for' → logprob: -8.56223201751709
    4. ' if' → logprob: -9.93723201751709
    5. '#' (adapté à ' #') → logprob: -11.18723201751709
    6. '```' → logprob: -12.56223201751709
    7. '	if' → logprob: -12.68723201751709
    8. 'left' → logprob: -13.81223201751709
    9. '    
' → logprob: -14.06223201751709
    10. 'edges' → logprob: -14.31223201751709

Token 475: ' Avant' (ID: 88245)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010669774375855923
    2. '   ' → logprob: -4.635669708251953
    3. 'for' → logprob: -7.510669708251953
    4. '#' → logprob: -8.010669708251953
    5. ' if' → logprob: -11.010669708251953
    6. 'L' → logprob: -11.885669708251953
    7. '	if' → logprob: -13.010669708251953
    8. 'edges' → logprob: -13.135669708251953
    9. 'import' → logprob: -13.260669708251953
    10. 'indices' → logprob: -13.510669708251953

Token 476: ' modification' (ID: 29847)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.485199511051178
    2. '   ' → logprob: -1.6101994514465332
    3. ' if' → logprob: -1.7351994514465332
    4. 'for' → logprob: -5.610199451446533
    5. ' for' → logprob: -6.860199451446533
    6. 'L' → logprob: -6.985199451446533
    7. ' L' → logprob: -7.485199451446533
    8. ':' → logprob: -7.610199451446533
    9. '#' → logprob: -7.735199451446533
    10. '```' → logprob: -8.860199928283691

Token 477: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2034725546836853
    2. 'if' → logprob: -1.70347261428833
    3. 'for' → logprob: -6.95347261428833
    4. ' if' → logprob: -6.95347261428833
    5. '	if' → logprob: -10.453472137451172
    6. ',' → logprob: -10.453472137451172
    7. ':' → logprob: -10.578472137451172
    8. ' for' → logprob: -11.453472137451172
    9. '```' → logprob: -11.703472137451172
    10. '#' → logprob: -11.953472137451172

Token 478: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.053888872265815735
    2. 'for' → logprob: -3.5538887977600098
    3. '   ' → logprob: -3.8038887977600098
    4. ' if' → logprob: -6.55388879776001
    5. ' for' → logprob: -9.928889274597168
    6. '#' → logprob: -10.178889274597168
    7. 'edges' → logprob: -11.053889274597168
    8. '	if' → logprob: -11.553889274597168
    9. 'def' → logprob: -11.928889274597168
    10. 'temp' → logprob: -12.303889274597168

Token 479: ' retire' (ID: 48410)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31394341588020325
    2. 'for' → logprob: -1.6889433860778809
    3. ' if' → logprob: -3.313943386077881
    4. '   ' → logprob: -3.313943386077881
    5. ' for' → logprob: -4.688943386077881
    6. '#' → logprob: -6.063943386077881
    7. 's' → logprob: -9.188943862915039
    8. '    ' → logprob: -9.688943862915039
    9. '  ' → logprob: -10.063943862915039
    10. ':' → logprob: -10.313943862915039

Token 480: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7280341386795044
    2. 'les' → logprob: -1.1030341386795044
    3. '   ' → logprob: -3.103034019470215
    4. 'l' → logprob: -3.603034019470215
    5. ' la' → logprob: -3.603034019470215
    6. 'temp' → logprob: -4.103034019470215
    7. 'la' → logprob: -4.103034019470215
    8. ' des' → logprob: -4.353034019470215
    9. 'if' → logprob: -5.103034019470215
    10. ' leurs' → logprob: -5.228034019470215

Token 481: ' contribution' (ID: 26735)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05681827664375305
    2. '#' → logprob: -3.4318182468414307
    3. 'con' → logprob: -4.05681848526001
    4. 'temp' → logprob: -5.68181848526001
    5. 'for' → logprob: -6.68181848526001
    6. ' if' → logprob: -7.55681848526001
    7. ' contribution' → logprob: -9.181818008422852
    8. 's' → logprob: -9.556818008422852
    9. 'ancienne' → logprob: -10.556818008422852
    10. ' #' → logprob: -10.806818008422852

Token 482: ' des' (ID: 731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5612517595291138
    2. '   ' → logprob: -0.9362517595291138
    3. ' if' → logprob: -3.936251640319824
    4. 'for' → logprob: -4.311251640319824
    5. 'de' → logprob: -6.186251640319824
    6. 'des' → logprob: -7.686251640319824
    7. 'left' → logprob: -7.936251640319824
    8. ' des' → logprob: -8.436251640319824
    9. ' de' → logprob: -8.561251640319824
    10. ' for' → logprob: -8.561251640319824

Token 483: ' ' (ID: 220)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.9996152520179749
    2. 'L' → logprob: -1.24961519241333
    3. 'b' → logprob: -1.24961519241333
    4. ' edges' → logprob: -3.99961519241333
    5. 'edge' → logprob: -4.62461519241333
    6. 'A' → logprob: -5.24961519241333
    7. ' L' → logprob: -5.24961519241333
    8. 'ar' → logprob: -5.49961519241333
    9. 'bord' → logprob: -5.62461519241333
    10. '#' → logprob: -5.62461519241333

Token 484: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2759086787700653
    2. 'edges' → logprob: -1.7759087085723877
    3. 'if' → logprob: -3.9009087085723877
    4. '0' → logprob: -4.150908470153809
    5. 'L' → logprob: -4.650908470153809
    6. 'i' → logprob: -5.150908470153809
    7. 'positions' → logprob: -5.775908470153809
    8. 'bord' → logprob: -6.150908470153809
    9. '[L' → logprob: -6.525908470153809
    10. '[
' → logprob: -6.650908470153809

Token 485: ' ar' (ID: 646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.379035621881485
    2. 'if' → logprob: -1.7540355920791626
    3. 'edges' → logprob: -2.379035711288452
    4. 'positions' → logprob: -4.254035472869873
    5. 'ar' → logprob: -4.754035472869873
    6. ' if' → logprob: -5.129035472869873
    7. ' b' → logprob: -5.129035472869873
    8. 'are' → logprob: -6.129035472869873
    9. 'for' → logprob: -6.254035472869873
    10. 'p' → logprob: -6.379035472869873

Token 486: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.20463494956493378
    2. 'etes' → logprob: -1.7046349048614502
    3. 'tes' → logprob: -6.454635143280029
    4. 'ètes' → logprob: -7.454635143280029
    5. 'es' → logprob: -7.954635143280029
    6. 'cs' → logprob: -8.954634666442871
    7. 'ê' → logprob: -9.079634666442871
    8. 'ets' → logprob: -9.204634666442871
    9. 'r' → logprob: -9.579634666442871
    10. 'e' → logprob: -9.704634666442871

Token 487: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012583942152559757
    2. 'if' → logprob: -4.3875837326049805
    3. ' if' → logprob: -9.76258373260498
    4. '
' → logprob: -12.01258373260498
    5. 'for' → logprob: -12.63758373260498
    6. '    
' → logprob: -13.01258373260498
    7. ',' → logprob: -13.51258373260498
    8. '	if' → logprob: -13.51258373260498
    9. '```' → logprob: -13.88758373260498
    10. '       ' → logprob: -15.26258373260498

Token 488: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01269563939422369
    2. 'if' → logprob: -4.387695789337158
    3. ' if' → logprob: -8.7626953125
    4. '
' → logprob: -11.7626953125
    5. '	if' → logprob: -12.0126953125
    6. '    
' → logprob: -12.2626953125
    7. 'for' → logprob: -12.3876953125
    8. ',' → logprob: -13.3876953125
    9. '```' → logprob: -14.0126953125
    10. ':' → logprob: -14.1376953125

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16063636541366577
    2. 'if' → logprob: -1.9106364250183105
    3. ' if' → logprob: -8.410635948181152
    4. 'for' → logprob: -9.035635948181152
    5. '	if' → logprob: -9.660635948181152
    6. '    
' → logprob: -12.910635948181152
    7. '```' → logprob: -13.160635948181152
    8. '
' → logprob: -13.785635948181152
    9. '       ' → logprob: -15.410635948181152
    10. '   ' → logprob: -15.785635948181152

Token 490: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03392564505338669
    2. '   ' → logprob: -3.4089255332946777
    3. 'for' → logprob: -8.783926010131836
    4. ' if' → logprob: -9.033926010131836
    5. '	if' → logprob: -12.533926010131836
    6. '#' (adapté à ' #') → logprob: -13.658926010131836
    7. 'i' → logprob: -14.533926010131836
    8. '    
' → logprob: -14.783926010131836
    9. 'edges' → logprob: -14.783926010131836
    10. 'indices' → logprob: -15.283926010131836

Token 491: ' Ar' (ID: 1754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006373812211677432
    2. ' if' → logprob: -7.875637531280518
    3. 'for' → logprob: -8.75063705444336
    4. '   ' → logprob: -9.25063705444336
    5. '#' → logprob: -13.87563705444336
    6. 'L' → logprob: -14.50063705444336
    7. 'i' → logprob: -15.00063705444336
    8. '	if' → logprob: -15.00063705444336
    9. 'edges' → logprob: -15.50063705444336
    10. '```' → logprob: -15.75063705444336

Token 492: 'ête' (ID: 16808)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09842092543840408
    2. '   ' → logprob: -3.3484208583831787
    3. 'r' → logprob: -3.9734208583831787
    4. 'ea' → logprob: -4.348421096801758
    5. 'gs' → logprob: -4.723421096801758
    6. 'g' → logprob: -5.098421096801758
    7. 'e' → logprob: -5.098421096801758
    8. 't' → logprob: -5.848421096801758
    9. ' if' → logprob: -7.348421096801758
    10. 'row' → logprob: -7.348421096801758

Token 493: ' à' (ID: 1221)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.5194297432899475
    2. 'if' → logprob: -1.6444296836853027
    3. 'left' → logprob: -2.5194296836853027
    4. 'g' → logprob: -2.6444296836853027
    5. '   ' → logprob: -4.019429683685303
    6. ' if' → logprob: -4.644429683685303
    7. ' =' → logprob: -5.019429683685303
    8. '_g' → logprob: -5.269429683685303
    9. ' gauche' → logprob: -5.519429683685303
    10. ' left' → logprob: -5.894429683685303

Token 494: ' gauche' (ID: 58367)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.010029824450612068
    2. ' L' → logprob: -4.6350297927856445
    3. 'if' → logprob: -8.760029792785645
    4. 'left' → logprob: -9.885029792785645
    5. 'max' → logprob: -10.260029792785645
    6. '(L' → logprob: -11.260029792785645
    7. '	L' → logprob: -12.635029792785645
    8. '[L' → logprob: -13.135029792785645
    9. ' if' → logprob: -13.385029792785645
    10. 'Left' → logprob: -13.385029792785645

Token 495: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10117536038160324
    2. '   ' → logprob: -2.351175308227539
    3. ' if' → logprob: -6.976175308227539
    4. '	if' → logprob: -10.601175308227539
    5. ':' → logprob: -12.851175308227539
    6. ',' → logprob: -13.101175308227539
    7. '    
' → logprob: -13.601175308227539
    8. '```' → logprob: -14.351175308227539
    9. '       ' → logprob: -15.101175308227539
    10. '=' → logprob: -15.351175308227539

Token 496: 'L' (ID: 43)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20054486393928528
    2. 'L' → logprob: -2.325544834136963
    3. ' if' → logprob: -2.575544834136963
    4. ' L' → logprob: -4.950544834136963
    5. '   ' → logprob: -7.450544834136963
    6. ')' → logprob: -9.075545310974121
    7. ')L' → logprob: -10.950545310974121
    8. '
' → logprob: -11.200545310974121
    9. '=L' → logprob: -11.950545310974121
    10. '(L' → logprob: -11.950545310974121

Token 497: '-' (ID: 12)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6485942006111145
    2. '>' → logprob: -0.7735942006111145
    3. '-' → logprob: -4.273594379425049
    4. ' -' → logprob: -6.648594379425049
    5. ')' → logprob: -8.02359390258789
    6. ')>' → logprob: -9.27359390258789
    7. '   ' → logprob: -9.52359390258789
    8. '```' → logprob: -9.89859390258789
    9. ' ' → logprob: -10.89859390258789
    10. '_j' → logprob: -10.89859390258789

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -11.375022888183594
    3. '```' → logprob: -12.250022888183594
    4. '   ' → logprob: -12.375022888183594
    5. ')' → logprob: -14.000022888183594
    6. '>' → logprob: -14.375022888183594
    7. ',' → logprob: -15.375022888183594
    8. 'if' → logprob: -15.500022888183594
    9. '
' → logprob: -16.125022888183594
    10. '#' → logprob: -16.187522888183594

Token 499: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.33918297290802
    2. '>' → logprob: -1.33918297290802
    3. ' >' → logprob: -1.33918297290802
    4. ' -' → logprob: -2.3391828536987305
    5. ')' → logprob: -3.2141828536987305
    6. 'if' → logprob: -3.2141828536987305
    7. '   ' → logprob: -4.4641828536987305
    8. '):
' → logprob: -4.7141828536987305
    9. ' if' → logprob: -5.2141828536987305
    10. ')>' → logprob: -5.3391828536987305

Token 500: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02997494488954544
    2. ' L' → logprob: -3.529974937438965
    3. ')' → logprob: -8.654974937438965
    4. ')L' → logprob: -11.154974937438965
    5. '   ' → logprob: -11.279974937438965
    6. '	L' → logprob: -13.154974937438965
    7. ' ' → logprob: -13.279974937438965
    8. ' )' → logprob: -13.404974937438965
    9. ')
' → logprob: -13.654974937438965
    10. '(L' → logprob: -13.654974937438965

Token 501: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9389634132385254
    2. ')' → logprob: -1.3139634132385254
    3. '   ' → logprob: -1.5639634132385254
    4. 'if' → logprob: -2.3139634132385254
    5. '):
' → logprob: -4.313963413238525
    6. ' if' → logprob: -4.438963413238525
    7. '-' → logprob: -5.938963413238525
    8. '):' → logprob: -5.938963413238525
    9. ' -' → logprob: -7.563963413238525
    10. ')
' → logprob: -8.688962936401367

Token 502: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031090269330888987
    2. '   ' → logprob: -6.003108978271484
    3. ' if' → logprob: -7.378108978271484
    4. '	if' → logprob: -12.378108978271484
    5. '```' → logprob: -12.878108978271484
    6. 'i' → logprob: -14.503108978271484
    7. ':' → logprob: -15.253108978271484
    8. '
' → logprob: -15.378108978271484
    9. '    
' → logprob: -15.503108978271484
    10. ',' → logprob: -15.878108978271484

Token 503: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014958404004573822
    2. '   ' → logprob: -4.264958381652832
    3. ' if' → logprob: -7.139958381652832
    4. '	if' → logprob: -13.764958381652832
    5. 'i' → logprob: -14.764958381652832
    6. '```' → logprob: -14.764958381652832
    7. '  ' → logprob: -17.51495933532715
    8. 'If' → logprob: -18.01495933532715
    9. '    
' → logprob: -18.26495933532715
    10. ' ' → logprob: -18.38995933532715

Token 504: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014202408492565155
    2. ' L' → logprob: -4.26420259475708
    3. '1' → logprob: -10.389202117919922
    4. '   ' → logprob: -12.139202117919922
    5. '	L' → logprob: -13.389202117919922
    6. ' ' → logprob: -13.764202117919922
    7. '(L' → logprob: -16.264202117919922
    8. '  ' → logprob: -16.389202117919922
    9. '    ' → logprob: -17.514202117919922
    10. '>L' → logprob: -18.014202117919922

Token 505: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5760618448257446
    2. ' >' → logprob: -0.8260618448257446
    3. '-' → logprob: -9.326062202453613
    4. '   ' → logprob: -11.451062202453613
    5. ' -' → logprob: -12.701062202453613
    6. '">' → logprob: -12.951062202453613
    7. '1' → logprob: -12.951062202453613
    8. ')>' → logprob: -12.951062202453613
    9. ' ' → logprob: -13.326062202453613
    10. ')' → logprob: -13.451062202453613

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -16.0
    4. '   ' → logprob: -20.125
    5. '=' → logprob: -21.5
    6. '۱' → logprob: -22.875
    7. '[' → logprob: -23.5
    8. '<|end|>' → logprob: -23.75
    9. '```' → logprob: -24.25
    10. '  ' → logprob: -24.375

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '
' → logprob: -21.625
    5. '   ' → logprob: -21.625
    6. '１' → logprob: -23.25
    7. '۱' → logprob: -23.25
    8. '```' → logprob: -23.375
    9. '१' → logprob: -24.125
    10. '=' → logprob: -24.625

Token 508: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09591957181692123
    2. ':' → logprob: -2.470919609069824
    3. '   ' → logprob: -5.095919609069824
    4. '       ' → logprob: -7.345919609069824
    5. '):
' → logprob: -9.220919609069824
    6. ':
' → logprob: -10.470919609069824
    7. 'and' → logprob: -11.095919609069824
    8. ' and' → logprob: -11.345919609069824
    9. ' :
' → logprob: -11.720919609069824
    10. 'temp' → logprob: -12.345919609069824

Token 509: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3599005937576294
    2. 'temp' → logprob: -1.3599005937576294
    3. '       ' → logprob: -3.23490047454834
    4. ' temp' → logprob: -5.10990047454834
    5. '	temp' → logprob: -9.10990047454834
    6. '    ' → logprob: -11.73490047454834
    7. '	   ' → logprob: -11.73490047454834
    8. '     ' → logprob: -12.35990047454834
    9. ' ' → logprob: -12.48490047454834
    10. '  ' → logprob: -12.48490047454834

Token 510: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0003290288441348821
    2. '   ' → logprob: -8.37532901763916
    3. ' temp' → logprob: -9.50032901763916
    4. '       ' → logprob: -11.00032901763916
    5. 'old' → logprob: -12.75032901763916
    6. '	temp' → logprob: -13.00032901763916
    7. 'prev' → logprob: -13.62532901763916
    8. 'tmp' → logprob: -16.000329971313477
    9. 'left' → logprob: -16.625329971313477
    10. '    ' → logprob: -16.875329971313477

Token 511: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00015085970517247915
    2. '_con' → logprob: -8.875150680541992
    3. '_sub' → logprob: -12.375150680541992
    4. '_' → logprob: -12.875150680541992
    5. 'sum' → logprob: -13.000150680541992
    6. 'con' → logprob: -14.500150680541992
    7. '_temp' → logprob: -14.625150680541992
    8. '\' → logprob: -15.250150680541992
    9. '_s' → logprob: -15.625150680541992
    10. ' -=' → logprob: -16.375150680541992

Token 512: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.007531386334449053
    2. ' -=' → logprob: -5.00753116607666
    3. '-' → logprob: -7.13253116607666
    4. '   ' → logprob: -11.13253116607666
    5. '=' → logprob: -13.63253116607666
    6. '+=' → logprob: -14.75753116607666
    7. ' -' → logprob: -15.25753116607666
    8. ' ' → logprob: -15.88253116607666
    9. '    ' → logprob: -16.007532119750977
    10. '  ' → logprob: -16.132532119750977

Token 513: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.9027791495318525e-05
    2. ' edge' → logprob: -10.875019073486328
    3. '(edge' → logprob: -18.000019073486328
    4. '=edge' → logprob: -19.750019073486328
    5. '   ' → logprob: -19.875019073486328
    6. '.edge' → logprob: -20.625019073486328
    7. 'temp' → logprob: -21.500019073486328
    8. '
' → logprob: -21.750019073486328
    9. 'egde' → logprob: -21.875019073486328
    10. 'edges' → logprob: -22.250019073486328

Token 514: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -4.4849443838757e-06
    2. 'con' → logprob: -12.500004768371582
    3. '_' → logprob: -14.875004768371582
    4. 'Con' → logprob: -15.750004768371582
    5. 'edge' → logprob: -16.500003814697266
    6. '_edge' → logprob: -17.750003814697266
    7. 'a' → logprob: -18.125003814697266
    8. '_CON' → logprob: -18.250003814697266
    9. '_com' → logprob: -18.750003814697266
    10. 's' → logprob: -18.875003814697266

Token 515: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -4.60414821645827e-06
    2. 'temp' → logprob: -13.000004768371582
    3. 'con' → logprob: -13.750004768371582
    4. 'tr' → logprob: -14.250004768371582
    5. 'rib' → logprob: -15.125004768371582
    6. 't' → logprob: -16.125003814697266
    7. 'str' → logprob: -17.375003814697266
    8. 'tri' → logprob: -17.625003814697266
    9. 'sub' → logprob: -18.250003814697266
    10. 'trip' → logprob: -18.375003814697266

Token 516: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.580929347255733e-05
    2. 'A' → logprob: -11.500016212463379
    3. '(' → logprob: -12.125016212463379
    4. '(
' → logprob: -15.750016212463379
    5. ' (' → logprob: -18.125015258789062
    6. '   ' → logprob: -18.375015258789062
    7. '	A' → logprob: -20.250015258789062
    8. ' A' → logprob: -20.750015258789062
    9. '((' → logprob: -21.000015258789062
    10. ',A' → logprob: -21.000015258789062

Token 517: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -3.273621405242011e-05
    2. 'L' → logprob: -10.375032424926758
    3. '[' → logprob: -13.875032424926758
    4. '[
' → logprob: -15.250032424926758
    5. ' [' → logprob: -17.000032424926758
    6. '	L' → logprob: -17.000032424926758
    7. ' L' → logprob: -17.125032424926758
    8. '(L' → logprob: -17.125032424926758
    9. '
' → logprob: -17.875032424926758
    10. ')L' → logprob: -17.875032424926758

Token 518: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028785327449440956
    2. '[L' → logprob: -3.653785228729248
    3. 'L' → logprob: -6.278785228729248
    4. '[' → logprob: -7.778785228729248
    5. ' -' → logprob: -8.778785705566406
    6. '[-' → logprob: -11.403785705566406
    7. '1' → logprob: -11.778785705566406
    8. ']' → logprob: -12.153785705566406
    9. ' L' → logprob: -13.028785705566406
    10. ']-' → logprob: -13.403785705566406

Token 519: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007218453683890402
    2. '1' → logprob: -7.2507219314575195
    3. ' ' → logprob: -12.12572193145752
    4. '   ' → logprob: -12.12572193145752
    5. '```' → logprob: -14.25072193145752
    6. '  ' → logprob: -15.87572193145752
    7. '-' → logprob: -16.250720977783203
    8. '    ' → logprob: -17.125720977783203
    9. '`' → logprob: -17.563220977783203
    10. ']' → logprob: -17.625720977783203

Token 520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018161057960242033
    2. '1' → logprob: -8.625181198120117
    3. '```' → logprob: -14.250181198120117
    4. ' ' → logprob: -14.375181198120117
    5. '   ' → logprob: -14.375181198120117
    6. '
' → logprob: -16.750181198120117
    7. '  ' → logprob: -17.125181198120117
    8. ']' → logprob: -17.375181198120117
    9. '``' → logprob: -17.687681198120117
    10. '-' → logprob: -18.062681198120117

Token 521: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -3.6550729419104755e-05
    2. ']' → logprob: -10.625036239624023
    3. ' ],' → logprob: -11.625036239624023
    4. '],
' → logprob: -12.875036239624023
    5. ',' → logprob: -14.750036239624023
    6. '   ' → logprob: -15.500036239624023
    7. '],[' → logprob: -16.875036239624023
    8. '],

' → logprob: -17.125036239624023
    9. 'A' → logprob: -17.500036239624023
    10. '),' → logprob: -17.750036239624023

Token 522: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.623244553338736e-05
    2. ' A' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.00006675720215
    4. '	A' → logprob: -19.12506675720215
    5. ' ' → logprob: -19.75006675720215
    6. '  ' → logprob: -19.87506675720215
    7. '
' → logprob: -20.12506675720215
    8. '    ' → logprob: -20.25006675720215
    9. ')' → logprob: -21.37506675720215
    10. 'a' → logprob: -21.75006675720215

Token 523: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0005538671393878758
    2. 'L' → logprob: -7.500554084777832
    3. '[' → logprob: -14.500554084777832
    4. '[
' → logprob: -14.875554084777832
    5. '	L' → logprob: -17.125553131103516
    6. ' L' → logprob: -18.000553131103516
    7. '(L' → logprob: -18.250553131103516
    8. '   ' → logprob: -18.500553131103516
    9. ' [' → logprob: -18.750553131103516
    10. '```' → logprob: -19.000553131103516

Token 524: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018125296628568321
    2. ' -' → logprob: -8.625181198120117
    3. '[' → logprob: -13.750181198120117
    4. '1' → logprob: -14.250181198120117
    5. ']-' → logprob: -17.625181198120117
    6. '–' → logprob: -18.125181198120117
    7. ']' → logprob: -18.750181198120117
    8. 'L' → logprob: -18.875181198120117
    9. '()-' → logprob: -19.250181198120117
    10. '```' → logprob: -19.500181198120117

Token 525: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -14.750000953674316
    4. '3' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '```' → logprob: -18.375001907348633
    7. '１' → logprob: -19.125001907348633
    8. '0' → logprob: -19.187501907348633
    9. '۱' → logprob: -19.437501907348633
    10. '-' → logprob: -19.687501907348633

Token 526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -15.875
    4. '-' → logprob: -16.125
    5. '3' → logprob: -17.625
    6. '```' → logprob: -18.0
    7. '0' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. '１' → logprob: -19.125
    10. '
' → logprob: -19.25

Token 527: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05597864091396332
    2. ')' → logprob: -2.930978536605835
    3. ']' → logprob: -7.430978775024414
    4. '])
' → logprob: -8.055978775024414
    5. ')]' → logprob: -9.930978775024414
    6. ')
' → logprob: -10.055978775024414
    7. ' ])' → logprob: -10.305978775024414
    8. ')])' → logprob: -10.805978775024414
    9. ' )' → logprob: -11.305978775024414
    10. '+' → logprob: -11.680978775024414

Token 528: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38715922832489014
    2. '   ' → logprob: -1.1371592283248901
    3. '	A' → logprob: -8.63715934753418
    4. ' A' → logprob: -9.26215934753418
    5. '    
' → logprob: -12.13715934753418
    6. '```' → logprob: -12.51215934753418
    7. '  ' → logprob: -13.26215934753418
    8. ' ' → logprob: -13.63715934753418
    9. '
' → logprob: -14.26215934753418
    10. '       ' → logprob: -14.63715934753418

Token 529: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8341686129570007
    2. 'if' → logprob: -0.9591686129570007
    3. '#' (adapté à ' #') → logprob: -2.5841686725616455
    4. '   ' → logprob: -2.7091686725616455
    5. 'for' → logprob: -3.2091686725616455
    6. ' if' → logprob: -9.709168434143066
    7. ' for' → logprob: -11.459168434143066
    8. ' A' → logprob: -11.459168434143066
    9. '
' → logprob: -11.709168434143066
    10. '```' → logprob: -12.334168434143066

Token 530: ' Ar' (ID: 1754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09227632731199265
    2. 'A' → logprob: -2.7172763347625732
    3. '#' → logprob: -3.8422763347625732
    4. '   ' → logprob: -8.092276573181152
    5. 'Ar' → logprob: -8.592276573181152
    6. ' if' → logprob: -9.467276573181152
    7. 'R' → logprob: -10.842276573181152
    8. 'edge' → logprob: -11.467276573181152
    9. 'If' → logprob: -11.592276573181152
    10. 'L' → logprob: -11.592276573181152

Token 531: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0010479353368282318
    2. 'te' → logprob: -7.0010480880737305
    3. 'ete' → logprob: -9.25104808807373
    4. 'ète' → logprob: -10.75104808807373
    5. 'être' → logprob: -12.37604808807373
    6. 'êtes' → logprob: -12.37604808807373
    7. 'êt' → logprob: -13.25104808807373
    8. 'é' → logprob: -13.25104808807373
    9. '#' → logprob: -13.37604808807373
    10. 'ê' → logprob: -14.00104808807373

Token 532: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1141209751367569
    2. 'à' → logprob: -2.3641209602355957
    3. ' at' → logprob: -5.114120960235596
    4. '   ' → logprob: -5.364120960235596
    5. 'À' → logprob: -7.364120960235596
    6. ' ' → logprob: -7.989120960235596
    7. 'a' → logprob: -8.239121437072754
    8. ' a' → logprob: -8.239121437072754
    9. ''à' → logprob: -8.489121437072754
    10. 'at' → logprob: -8.614121437072754

Token 533: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6048483848571777
    2. 'dro' → logprob: -0.8548483848571777
    3. ' droite' → logprob: -3.7298483848571777
    4. 'R' → logprob: -5.854848384857178
    5. 'd' → logprob: -7.479848384857178
    6. 'Right' → logprob: -8.229848861694336
    7. 'min' → logprob: -8.854848861694336
    8. 'left' → logprob: -8.979848861694336
    9. 'Dro' → logprob: -8.979848861694336
    10. 'D' → logprob: -9.479848861694336

Token 534: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7089987397193909
    2. 'if' → logprob: -0.9589987397193909
    3. ' if' → logprob: -2.083998680114746
    4. ',' → logprob: -9.208998680114746
    5. '```' → logprob: -11.208998680114746
    6. ' =' → logprob: -11.333998680114746
    7. '	if' → logprob: -11.708998680114746
    8. '=' → logprob: -12.333998680114746
    9. ':' → logprob: -12.958998680114746
    10. '  ' → logprob: -12.958998680114746

Token 535: 'R' (ID: 49)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4309186041355133
    2. 'R' → logprob: -1.055918574333191
    3. ' if' → logprob: -6.4309186935424805
    4. ' R' → logprob: -7.6809186935424805
    5. '   ' → logprob: -9.18091869354248
    6. 'If' → logprob: -11.55591869354248
    7. ')' → logprob: -12.18091869354248
    8. 'elif' → logprob: -12.18091869354248
    9. '#' → logprob: -12.68091869354248
    10. '(R' → logprob: -12.80591869354248

Token 536: ',' (ID: 11)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.15429046750068665
    2. ' <' → logprob: -2.2792904376983643
    3. ',' → logprob: -3.6542904376983643
    4. ')' → logprob: -4.654290676116943
    5. '+' → logprob: -6.529290676116943
    6. ' ' → logprob: -7.029290676116943
    7. 'if' → logprob: -7.154290676116943
    8. '   ' → logprob: -7.779290676116943
    9. ']' → logprob: -8.404290199279785
    10. '
' → logprob: -8.654290199279785

Token 537: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03897428512573242
    2. ' R' → logprob: -3.4139742851257324
    3. 'if' → logprob: -5.413974285125732
    4. ' if' → logprob: -7.413974285125732
    5. 'A' → logprob: -8.78897476196289
    6. 'temp' → logprob: -10.16397476196289
    7. ')' → logprob: -10.53897476196289
    8. ' temp' → logprob: -11.91397476196289
    9. ' A' → logprob: -12.16397476196289
    10. '   ' → logprob: -12.41397476196289

Token 538: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6657444834709167
    2. ')' → logprob: -0.7907444834709167
    3. '])' → logprob: -3.7907445430755615
    4. '+' → logprob: -5.915744304656982
    5. ')
' → logprob: -6.540744304656982
    6. 'if' → logprob: -6.540744304656982
    7. '   ' → logprob: -6.665744304656982
    8. ')]' → logprob: -6.665744304656982
    9. '):' → logprob: -7.415744304656982
    10. ' if' → logprob: -8.29074478149414

Token 539: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7274375557899475
    2. '1' → logprob: -0.8524375557899475
    3. ')' → logprob: -2.7274374961853027
    4. ' ' → logprob: -3.9774374961853027
    5. '])' → logprob: -6.477437496185303
    6. '   ' → logprob: -6.477437496185303
    7. ']' → logprob: -6.977437496185303
    8. '`)' → logprob: -7.352437496185303
    9. '```' → logprob: -7.852437496185303
    10. '
' → logprob: -8.102437973022461

Token 540: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.292192667722702
    2. ')' → logprob: -1.6671926975250244
    3. '):
' → logprob: -2.9171926975250244
    4. '):' → logprob: -5.417192459106445
    5. 'if' → logprob: -5.542192459106445
    6. '   ' → logprob: -6.417192459106445
    7. ' if' → logprob: -7.667192459106445
    8. ')
' → logprob: -11.792192459106445
    9. ')

' → logprob: -11.792192459106445
    10. ' )
' → logprob: -11.917192459106445

Token 541: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00318353995680809
    2. ' if' → logprob: -5.753183364868164
    3. '   ' → logprob: -12.253183364868164
    4. '	if' → logprob: -14.878183364868164
    5. '```' → logprob: -15.128183364868164
    6. 'If' → logprob: -15.753183364868164
    7. ')' → logprob: -15.878183364868164
    8. '=' → logprob: -16.378183364868164
    9. ';if' → logprob: -16.378183364868164
    10. ',' → logprob: -17.253183364868164

Token 542: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.8206473871250637e-05
    2. ' if' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.375028610229492
    4. '	if' → logprob: -17.875028610229492
    5. 'If' → logprob: -18.250028610229492
    6. '```' → logprob: -20.750028610229492
    7. '#' → logprob: -23.750028610229492
    8. 'for' → logprob: -23.750028610229492
    9. ';if' → logprob: -24.625028610229492
    10. 'ifs' → logprob: -24.625028610229492

Token 543: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.1002068892121315
    2. ' R' → logprob: -2.3502068519592285
    3. '	R' → logprob: -16.22520637512207
    4. ' ' → logprob: -16.72520637512207
    5. '   ' → logprob: -17.22520637512207
    6. '(R' → logprob: -18.10020637512207
    7. ' ' → logprob: -18.22520637512207
    8. '<R' → logprob: -19.22520637512207
    9. 'r' → logprob: -19.60020637512207
    10. 'Ｒ' → logprob: -20.35020637512207

Token 544: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759624242782593
    2. '<' → logprob: -0.8259624242782593
    3. '+' → logprob: -12.32596206665039
    4. ')' → logprob: -12.70096206665039
    5. ' ' → logprob: -12.70096206665039
    6. '<N' → logprob: -12.82596206665039
    7. '<len' → logprob: -13.20096206665039
    8. '<int' → logprob: -13.32596206665039
    9. '<R' → logprob: -13.57596206665039
    10. '<size' → logprob: -13.95096206665039

Token 545: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.2729995988775045e-06
    2. ' N' → logprob: -12.000006675720215
    3. '	N' → logprob: -21.7500057220459
    4. '   ' → logprob: -22.6250057220459
    5. ' ' → logprob: -23.1250057220459
    6. 'n' → logprob: -23.3750057220459
    7. 'len' → logprob: -24.1250057220459
    8. '#' → logprob: -24.3750057220459
    9. '  ' → logprob: -25.7500057220459
    10. 'Ｎ' → logprob: -25.8750057220459

Token 546: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10225719958543777
    2. ':' → logprob: -2.477257251739502
    3. '       ' → logprob: -4.477257251739502
    4. '   ' → logprob: -6.477257251739502
    5. '):
' → logprob: -8.227256774902344
    6. '):' → logprob: -10.977256774902344
    7. ' :
' → logprob: -11.852256774902344
    8. ',' → logprob: -11.977256774902344
    9. ':
' → logprob: -12.477256774902344
    10. ')' → logprob: -12.727256774902344

Token 547: '       ' (ID: 309)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5441075563430786
    2. '       ' → logprob: -1.0441075563430786
    3. '   ' → logprob: -2.794107437133789
    4. ' temp' → logprob: -5.044107437133789
    5. '	temp' → logprob: -11.419107437133789
    6. '    ' → logprob: -13.544107437133789
    7. ' ' → logprob: -14.044107437133789
    8. '  ' → logprob: -14.169107437133789
    9. '     ' → logprob: -14.169107437133789
    10. '   ' → logprob: -14.169107437133789

Token 548: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -1.3902033970225602e-05
    2. ' temp' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.125014305114746
    4. '       ' → logprob: -16.12501335144043
    5. '	temp' → logprob: -18.75001335144043
    6. 'tmp' → logprob: -19.25001335144043
    7. '    ' → logprob: -20.12501335144043
    8. '  ' → logprob: -20.37501335144043
    9. ' ' → logprob: -20.75001335144043
    10. 'tem' → logprob: -20.75001335144043

Token 549: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9027791495318525e-05
    2. 'sum' → logprob: -10.875019073486328
    3. '\' → logprob: -17.500019073486328
    4. '_' → logprob: -17.750019073486328
    5. 'Sum' → logprob: -17.750019073486328
    6. '_s' → logprob: -18.250019073486328
    7. '   ' → logprob: -18.375019073486328
    8. '	sum' → logprob: -19.000019073486328
    9. '```' → logprob: -19.125019073486328
    10. ' _' → logprob: -19.375019073486328

Token 550: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04868093132972717
    2. ' -=' → logprob: -3.0486810207366943
    3. '-' → logprob: -9.298681259155273
    4. '   ' → logprob: -14.048681259155273
    5. ' ' → logprob: -14.923681259155273
    6. ' ' → logprob: -15.423681259155273
    7. '    ' → logprob: -15.798681259155273
    8. '  ' → logprob: -15.923681259155273
    9. '=' → logprob: -16.048681259155273
    10. '       ' → logprob: -16.548681259155273

Token 551: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00033546582562848926
    2. ' edge' → logprob: -8.000335693359375
    3. '(edge' → logprob: -17.000335693359375
    4. '=edge' → logprob: -19.500335693359375
    5. '.edge' → logprob: -19.500335693359375
    6. '   ' → logprob: -20.125335693359375
    7. 'edges' → logprob: -21.625335693359375
    8. ' ' → logprob: -21.625335693359375
    9. '_edge' → logprob: -21.625335693359375
    10. '
' → logprob: -22.125335693359375

Token 552: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -5.5577775128767826e-06
    2. 'con' → logprob: -12.500005722045898
    3. 'Con' → logprob: -13.500005722045898
    4. '_cont' → logprob: -16.2500057220459
    5. '_CON' → logprob: -16.7500057220459
    6. '+' → logprob: -17.1250057220459
    7. '[' → logprob: -17.3750057220459
    8. '```' → logprob: -17.5000057220459
    9. '+=' → logprob: -17.6250057220459
    10. '_cons' → logprob: -17.8750057220459

Token 553: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.00023977462842594832
    2. 'tr' → logprob: -9.125239372253418
    3. '_con' → logprob: -9.875239372253418
    4. 'rib' → logprob: -10.500239372253418
    5. 't' → logprob: -10.750239372253418
    6. 'con' → logprob: -11.125239372253418
    7. 'edge' → logprob: -12.625239372253418
    8. 'tri' → logprob: -13.000239372253418
    9. 'trab' → logprob: -13.875239372253418
    10. 'Trib' → logprob: -14.250239372253418

Token 554: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.1008713702030946e-06
    2. 'A' → logprob: -13.500001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(
' → logprob: -17.125001907348633
    5. '[A' → logprob: -19.125001907348633
    6. '```' → logprob: -21.250001907348633
    7. ' (' → logprob: -21.375001907348633
    8. '(AST' → logprob: -21.875001907348633
    9. '	A' → logprob: -22.000001907348633
    10. '   ' → logprob: -22.125001907348633

Token 555: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.625006675720215
    3. 'R' → logprob: -12.875006675720215
    4. '[
' → logprob: -15.500006675720215
    5. '(R' → logprob: -16.1250057220459
    6. ' [' → logprob: -16.6250057220459
    7. '	R' → logprob: -16.8750057220459
    8. '   ' → logprob: -18.2500057220459
    9. ' R' → logprob: -18.7500057220459
    10. '<R' → logprob: -18.8750057220459

Token 556: ' -' (ID: 533)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.016165627166628838
    2. ']' → logprob: -4.516165733337402
    3. ' ],' → logprob: -5.516165733337402
    4. '-' → logprob: -8.016165733337402
    5. '   ' → logprob: -8.016165733337402
    6. '])' → logprob: -9.016165733337402
    7. ' ' → logprob: -9.516165733337402
    8. ' -' → logprob: -9.641165733337402
    9. ' ]' → logprob: -9.891165733337402
    10. '+' → logprob: -10.766165733337402

Token 557: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007933051674626768
    2. '0' → logprob: -7.75079345703125
    3. ']' → logprob: -8.50079345703125
    4. ' ' → logprob: -9.00079345703125
    5. '])' → logprob: -11.62579345703125
    6. '   ' → logprob: -12.12579345703125
    7. '][' → logprob: -12.50079345703125
    8. ')' → logprob: -12.75079345703125
    9. '  ' → logprob: -13.00079345703125
    10. ',' → logprob: -13.56329345703125

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006795499939471483
    2. '0' → logprob: -8.250679969787598
    3. ' ' → logprob: -8.500679969787598
    4. ']' → logprob: -8.750679969787598
    5. '])' → logprob: -11.250679969787598
    6. '   ' → logprob: -11.375679969787598
    7. ')' → logprob: -11.875679969787598
    8. '  ' → logprob: -12.375679969787598
    9. '```' → logprob: -12.938179969787598
    10. ']+' → logprob: -13.188179969787598

Token 559: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -7.226628895296017e-06
    2. ']' → logprob: -12.375007629394531
    3. ' ],' → logprob: -12.875007629394531
    4. ',' → logprob: -15.875007629394531
    5. '],
' → logprob: -16.37500762939453
    6. ''],' → logprob: -17.37500762939453
    7. '+' → logprob: -17.50000762939453
    8. '),' → logprob: -17.87500762939453
    9. '],

' → logprob: -18.50000762939453
    10. '>,' → logprob: -18.87500762939453

Token 560: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020354038861114532
    2. ' A' → logprob: -8.500203132629395
    3. '	A' → logprob: -20.37520408630371
    4. '   ' → logprob: -20.87520408630371
    5. '(A' → logprob: -22.12520408630371
    6. '[A' → logprob: -22.25020408630371
    7. ' ' → logprob: -23.12520408630371
    8. ')' → logprob: -23.12520408630371
    9. '```' → logprob: -23.50020408630371
    10. 'a' → logprob: -23.75020408630371

Token 561: '[R' (ID: 115069)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.16026261448860168
    2. '[R' → logprob: -1.9102625846862793
    3. ' R' → logprob: -10.285263061523438
    4. '[' → logprob: -13.035263061523438
    5. '[
' → logprob: -13.785263061523438
    6. '   ' → logprob: -15.285263061523438
    7. '	R' → logprob: -15.285263061523438
    8. '(R' → logprob: -15.660263061523438
    9. 'A' → logprob: -15.785263061523438
    10. ' [' → logprob: -15.785263061523438

Token 562: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003345122095197439
    2. ']' → logprob: -8.875334739685059
    3. '+' → logprob: -9.125334739685059
    4. ' ])' → logprob: -9.750334739685059
    5. ')' → logprob: -11.125334739685059
    6. '])]' → logprob: -12.125334739685059
    7. '])
' → logprob: -12.875334739685059
    8. ']);' → logprob: -14.375334739685059
    9. '],' → logprob: -15.000334739685059
    10. ')])' → logprob: -15.125334739685059

Token 563: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.314159631729126
    2. '   ' → logprob: -1.314159631729126
    3. '#' → logprob: -7.814159393310547
    4. ' for' → logprob: -8.564159393310547
    5. 'A' → logprob: -8.689159393310547
    6. '```' → logprob: -9.314159393310547
    7. 'L' → logprob: -10.939159393310547
    8. 'i' → logprob: -11.314159393310547
    9. '	for' → logprob: -11.814159393310547
    10. 'if' → logprob: -12.814159393310547

Token 564: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027526880148798227
    2. '   ' → logprob: -6.377752780914307
    3. '#' (adapté à ' #') → logprob: -6.877752780914307
    4. ' for' → logprob: -11.377752304077148
    5. 'A' → logprob: -12.752752304077148
    6. '```' → logprob: -13.252752304077148
    7. '	for' → logprob: -13.752752304077148
    8. 'i' → logprob: -13.877752304077148
    9. 'if' → logprob: -14.127752304077148
    10. 'L' → logprob: -14.377752304077148

Token 565: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037013579276390374
    2. '   ' → logprob: -8.000370025634766
    3. ' for' → logprob: -10.375370025634766
    4. '	for' → logprob: -13.375370025634766
    5. 'i' → logprob: -13.750370025634766
    6. '```' → logprob: -14.500370025634766
    7. 'if' → logprob: -15.625370025634766
    8. '#' → logprob: -16.125370025634766
    9. 'from' → logprob: -17.375370025634766
    10. '  ' → logprob: -17.375370025634766

Token 566: ' applique' (ID: 180579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029792383313179016
    2. ' for' → logprob: -3.529792308807373
    3. '   ' → logprob: -10.279792785644531
    4. 'range' → logprob: -13.404792785644531
    5. 'continue' → logprob: -13.404792785644531
    6. 'from' → logprob: -14.154792785644531
    7. '#' → logprob: -14.154792785644531
    8. '
' → logprob: -14.279792785644531
    9. '	for' → logprob: -14.654792785644531
    10. ' continue' → logprob: -15.279792785644531

Token 567: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3604007959365845
    2. 'for' → logprob: -1.4854007959365845
    3. 'X' → logprob: -2.735400676727295
    4. ' X' → logprob: -4.610400676727295
    5. '
' → logprob: -7.235400676727295
    6. '   ' → logprob: -7.610400676727295
    7. '[X' → logprob: -9.860401153564453
    8. '[' → logprob: -10.360401153564453
    9. ' [' → logprob: -10.860401153564453
    10. ' to' → logprob: -11.610401153564453

Token 568: ' modification' (ID: 29847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12899476289749146
    2. ' for' → logprob: -2.1289947032928467
    3. 'X' → logprob: -6.253994941711426
    4. ' X' → logprob: -9.628994941711426
    5. 'diff' → logprob: -10.878994941711426
    6. 'change' → logprob: -11.503994941711426
    7. 'delta' → logprob: -11.628994941711426
    8. '   ' → logprob: -11.753994941711426
    9. 'add' → logprob: -12.128994941711426
    10. 'increment' → logprob: -12.378994941711426

Token 569: ' aux' (ID: 5850)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008725132793188095
    2. ' for' → logprob: -7.250872611999512
    3. '   ' → logprob: -8.750872611999512
    4. '	for' → logprob: -12.375872611999512
    5. '```' → logprob: -17.000871658325195
    6. '
' → logprob: -18.000871658325195
    7. 'from' → logprob: -18.000871658325195
    8. '``' → logprob: -19.250871658325195
    9. ' ' → logprob: -19.875871658325195
    10. 'i' → logprob: -20.500871658325195

Token 570: ' alt' (ID: 5001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006550124380737543
    2. 'A' → logprob: -7.875655174255371
    3. 'range' → logprob: -9.000655174255371
    4. ' for' → logprob: -9.250655174255371
    5. 'i' → logprob: -11.375655174255371
    6. 'import' → logprob: -11.750655174255371
    7. 'L' → logprob: -11.875655174255371
    8. 'from' → logprob: -11.875655174255371
    9. 'indices' → logprob: -12.500655174255371
    10. '#' → logprob: -12.500655174255371

Token 571: 'itudes' (ID: 25642)
  Prédit: 'itudes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itudes' → logprob: -0.015177277848124504
    2. 't' → logprob: -4.265177249908447
    3. 'A' → logprob: -7.140177249908447
    4. 'ti' → logprob: -9.390177726745605
    5. 'itude' → logprob: -9.390177726745605
    6. 'tit' → logprob: -10.640177726745605
    7. 'indices' → logprob: -12.265177726745605
    8. 'it' → logprob: -12.265177726745605
    9. 'itud' → logprob: -12.640177726745605
    10. '```' → logprob: -13.015177726745605

Token 572: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014793036505579948
    2. ' for' → logprob: -4.2647929191589355
    3. '   ' → logprob: -7.5147929191589355
    4. '	for' → logprob: -9.389793395996094
    5. '```' → logprob: -14.389793395996094
    6. '``' → logprob: -17.264793395996094
    7. '
' → logprob: -17.264793395996094
    8. ' ' → logprob: -19.139793395996094
    9. '    
' → logprob: -19.389793395996094
    10. '\' → logprob: -19.514793395996094

Token 573: ' L' (ID: 451)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07559020072221756
    2. 'for' → logprob: -2.825590133666992
    3. ' range' → logprob: -4.950590133666992
    4. 'A' → logprob: -5.075590133666992
    5. ' for' → logprob: -8.950590133666992
    6. 'i' → logprob: -10.825590133666992
    7. 'L' → logprob: -10.950590133666992
    8. ' A' → logprob: -11.075590133666992
    9. 'rang' → logprob: -11.575590133666992
    10. '(range' → logprob: -12.825590133666992

Token 574: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08910686522722244
    2. ' -' → logprob: -2.464106798171997
    3. '   ' → logprob: -9.589106559753418
    4. ' ' → logprob: -9.589106559753418
    5. ':' → logprob: -11.839106559753418
    6. '  ' → logprob: -12.589106559753418
    7. '1' → logprob: -12.589106559753418
    8. '[' → logprob: -12.714106559753418
    9. '–' → logprob: -13.339106559753418
    10. '−' → logprob: -13.464106559753418

Token 575: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.003736660582944751
    2. ' R' → logprob: -5.62873649597168
    3. 'L' → logprob: -9.75373649597168
    4. 'A' → logprob: -9.87873649597168
    5. 'range' → logprob: -11.50373649597168
    6. ' range' → logprob: -12.12873649597168
    7. '   ' → logprob: -12.37873649597168
    8. '[R' → logprob: -13.12873649597168
    9. 'for' → logprob: -13.50373649597168
    10. ' ' → logprob: -14.50373649597168

Token 576: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005726370960474014
    2. ' for' → logprob: -5.755726337432861
    3. '   ' → logprob: -6.005726337432861
    4. '	for' → logprob: -9.50572681427002
    5. '```' → logprob: -12.00572681427002
    6. '
' → logprob: -15.75572681427002
    7. '``' → logprob: -16.255725860595703
    8. '    
' → logprob: -17.005725860595703
    9. ' ' → logprob: -17.380725860595703
    10. '  ' → logprob: -18.130725860595703

Token 577: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030003979802131653
    2. ' for' → logprob: -3.5300040245056152
    3. '   ' → logprob: -8.530003547668457
    4. '	for' → logprob: -9.905003547668457
    5. '```' → logprob: -12.030003547668457
    6. '``' → logprob: -16.155004501342773
    7. '    
' → logprob: -17.905004501342773
    8. '
' → logprob: -18.030004501342773
    9. ' ' → logprob: -19.030004501342773
    10. '\t' → logprob: -19.155004501342773

Token 578: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003491705865599215
    2. ' for' → logprob: -8.000349044799805
    3. '   ' → logprob: -11.250349044799805
    4. '	for' → logprob: -14.125349044799805
    5. '```' → logprob: -19.125349044799805
    6. '    
' → logprob: -21.875349044799805
    7. ' ' → logprob: -22.375349044799805
    8. '``' → logprob: -22.625349044799805
    9. '
' → logprob: -23.000349044799805
    10. '\t' → logprob: -23.125349044799805

Token 579: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.816591434879228e-05
    2. ' for' → logprob: -9.50008773803711
    3. '   ' → logprob: -11.25008773803711
    4. '	for' → logprob: -15.37508773803711
    5. '```' → logprob: -18.25008773803711
    6. 'i' → logprob: -20.37508773803711
    7. '    
' → logprob: -20.50008773803711
    8. '
' → logprob: -20.62508773803711
    9. '``' → logprob: -21.00008773803711
    10. 'from' → logprob: -22.37508773803711

Token 580: ' éviter' (ID: 64013)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043400691356509924
    2. 'k' → logprob: -8.250433921813965
    3. ' i' → logprob: -8.750433921813965
    4. 'idx' → logprob: -11.250433921813965
    5. 'index' → logprob: -13.875433921813965
    6. ' idx' → logprob: -16.37543487548828
    7. 'j' → logprob: -16.50043487548828
    8. '```' → logprob: -16.87543487548828
    9. ' k' → logprob: -18.87543487548828
    10. '	i' → logprob: -19.00043487548828

Token 581: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4372405409812927
    2. 'for' → logprob: -1.4372406005859375
    3. ' i' → logprob: -2.6872406005859375
    4. 'i' → logprob: -3.8122406005859375
    5. '_' → logprob: -4.3122406005859375
    6. ' range' → logprob: -5.8122406005859375
    7. ' L' → logprob: -5.8122406005859375
    8. ' _' → logprob: -6.5622406005859375
    9. ' j' → logprob: -6.9372406005859375
    10. ' in' → logprob: -7.4372406005859375

Token 582: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041393106803298
    2. 'range' → logprob: -6.254139423370361
    3. ' for' → logprob: -6.879139423370361
    4. 'O' → logprob: -7.754139423370361
    5. 'import' → logprob: -8.004138946533203
    6. '
' → logprob: -9.004138946533203
    7. 'diff' → logprob: -10.004138946533203
    8. 'pour' → logprob: -10.504138946533203
    9. 'r' → logprob: -10.879138946533203
    10. 'lazy' → logprob: -10.879138946533203

Token 583: ' coûte' (ID: 118994)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38761723041534424
    2. 'for' → logprob: -1.7626172304153442
    3. ',' → logprob: -2.5126171112060547
    4. '   ' → logprob: -2.7626171112060547
    5. ' in' → logprob: -6.637617111206055
    6. 'A' → logprob: -6.637617111206055
    7. ':' → logprob: -7.387617111206055
    8. 'import' → logprob: -8.387617111206055
    9. 'range' → logprob: -8.387617111206055
    10. ' range' → logprob: -8.637617111206055

Token 584: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.026685265824198723
    2. 'ux' → logprob: -3.6516852378845215
    3. 'x' → logprob: -9.15168571472168
    4. 'e' → logprob: -9.27668571472168
    5. 'u' → logprob: -9.52668571472168
    6. 'uses' → logprob: -10.40168571472168
    7. 'uxe' → logprob: -10.65168571472168
    8. 'lle' → logprob: -11.40168571472168
    9. 'reuse' → logprob: -11.90168571472168
    10. 'usement' → logprob: -12.02668571472168

Token 585: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.288257896900177
    2. ' for' → logprob: -1.4132578372955322
    3. '   ' → logprob: -5.038258075714111
    4. ',' → logprob: -7.538258075714111
    5. '
' → logprob: -10.413257598876953
    6. '	for' → logprob: -11.288257598876953
    7. '```' → logprob: -11.413257598876953
    8. 'A' → logprob: -12.913257598876953
    9. ':' → logprob: -13.413257598876953
    10. 'range' → logprob: -13.413257598876953

Token 586: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5688238143920898
    2. 'for' → logprob: -0.9438238143920898
    3. 'delta' → logprob: -3.94382381439209
    4. 'diff' → logprob: -4.69382381439209
    5. ' for' → logprob: -4.94382381439209
    6. ' A' → logprob: -5.56882381439209
    7. 'from' → logprob: -6.94382381439209
    8. 'add' → logprob: -7.19382381439209
    9. ' delta' → logprob: -7.31882381439209
    10. 'offset' → logprob: -7.31882381439209

Token 587: ' met' (ID: 1421)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17662324011325836
    2. 'from' → logprob: -2.0516233444213867
    3. 'import' → logprob: -4.176623344421387
    4. ' from' → logprob: -5.301623344421387
    5. 'for' → logprob: -5.301623344421387
    6. '#' → logprob: -6.051623344421387
    7. ' A' → logprob: -6.301623344421387
    8. 'diff' → logprob: -6.301623344421387
    9. ' for' → logprob: -8.051623344421387
    10. 'B' → logprob: -8.176623344421387

Token 588: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17162440717220306
    2. 'à' → logprob: -2.4216244220733643
    3. ' à' → logprob: -3.4216244220733643
    4. '```' → logprob: -4.171624183654785
    5. '   ' → logprob: -4.796624183654785
    6. 'A' → logprob: -5.421624183654785
    7. 'À' → logprob: -6.171624183654785
    8. '``' → logprob: -6.171624183654785
    9. 'au' → logprob: -6.671624183654785
    10. ' for' → logprob: -7.796624183654785

Token 589: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0015243870439007878
    2. 'A' → logprob: -7.251524448394775
    3. 'jours' → logprob: -8.376523971557617
    4. '```' → logprob: -8.751523971557617
    5. 'jou' → logprob: -9.251523971557617
    6. ' jour' → logprob: -9.501523971557617
    7. 'point' → logprob: -10.126523971557617
    8. 'L' → logprob: -10.126523971557617
    9. 'journ' → logprob: -10.126523971557617
    10. 'Jour' → logprob: -10.626523971557617

Token 590: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16232642531394958
    2. 'A' → logprob: -2.0373263359069824
    3. ' for' → logprob: -4.037326335906982
    4. 'diff' → logprob: -7.412326335906982
    5. ' A' → logprob: -7.787326335906982
    6. 'delta' → logprob: -8.28732681274414
    7. 'temp' → logprob: -8.78732681274414
    8. 'range' → logprob: -9.78732681274414
    9. 'from' → logprob: -9.78732681274414
    10. 'L' → logprob: -10.03732681274414

Token 591: ' alt' (ID: 5001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06012703850865364
    2. 'from' → logprob: -3.560127019882202
    3. 'A' → logprob: -3.685127019882202
    4. 'import' → logprob: -5.560127258300781
    5. 'delta' → logprob: -8.435127258300781
    6. ' for' → logprob: -8.560127258300781
    7. '#' → logprob: -8.935127258300781
    8. 'diff' → logprob: -9.060127258300781
    9. 'offset' → logprob: -9.810127258300781
    10. 'L' → logprob: -10.060127258300781

Token 592: 'itudes' (ID: 25642)
  Prédit: 'itudes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itudes' → logprob: -0.11936134845018387
    2. 'A' → logprob: -2.244361400604248
    3. 'L' → logprob: -5.869361400604248
    4. 'er' → logprob: -7.494361400604248
    5. '[L' → logprob: -7.494361400604248
    6. 't' → logprob: -7.869361400604248
    7. 'itude' → logprob: -7.994361400604248
    8. 'érations' → logprob: -8.11936092376709
    9. 's' → logprob: -8.24436092376709
    10. 'itud' → logprob: -8.74436092376709

Token 593: ' directement' (ID: 52317)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39961910247802734
    2. '   ' → logprob: -1.7746191024780273
    3. 'A' → logprob: -2.3996191024780273
    4. ' for' → logprob: -2.8996191024780273
    5. 'L' → logprob: -4.524619102478027
    6. '[L' → logprob: -6.399619102478027
    7. '[i' → logprob: -8.149619102478027
    8. ' A' → logprob: -8.149619102478027
    9. '[A' → logprob: -8.649619102478027
    10. '=' → logprob: -8.774619102478027

Token 594: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05230850353837013
    2. ' for' → logprob: -3.1773085594177246
    3. '   ' → logprob: -5.177308559417725
    4. 'A' → logprob: -5.677308559417725
    5. ',' → logprob: -9.927308082580566
    6. '
' → logprob: -10.177308082580566
    7. 'import' → logprob: -10.802308082580566
    8. 'from' → logprob: -11.052308082580566
    9. '```' → logprob: -11.177308082580566
    10. '	for' → logprob: -11.552308082580566

Token 595: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009347076527774334
    2. ' for' → logprob: -5.259346961975098
    3. '   ' → logprob: -5.509346961975098
    4. '	for' → logprob: -10.134346961975098
    5. '```' → logprob: -11.134346961975098
    6. '
' → logprob: -15.259346961975098
    7. '    
' → logprob: -15.259346961975098
    8. 'i' → logprob: -15.384346961975098
    9. 'A' → logprob: -15.384346961975098
    10. '\t' → logprob: -15.634346961975098

Token 596: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06220608577132225
    2. ' for' → logprob: -2.8122060298919678
    3. '   ' → logprob: -8.812206268310547
    4. 'A' → logprob: -10.687206268310547
    5. 'diff' → logprob: -10.812206268310547
    6. '	for' → logprob: -11.312206268310547
    7. 'add' → logprob: -11.937206268310547
    8. 'delta' → logprob: -12.062206268310547
    9. '```' → logprob: -12.062206268310547
    10. 'i' → logprob: -12.437206268310547

Token 597: ' Cela' (ID: 44403)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004842696245759726
    2. ' for' → logprob: -5.754842758178711
    3. 'A' → logprob: -6.879842758178711
    4. 'delta' → logprob: -8.254842758178711
    5. 'add' → logprob: -8.879842758178711
    6. 'diff' → logprob: -9.129842758178711
    7. '   ' → logprob: -9.504842758178711
    8. 'increment' → logprob: -11.254842758178711
    9. 'from' → logprob: -11.504842758178711
    10. 'import' → logprob: -12.129842758178711

Token 598: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07940853387117386
    2. ' for' → logprob: -2.579408645629883
    3. '
' → logprob: -7.954408645629883
    4. '   ' → logprob: -9.704408645629883
    5. 'A' → logprob: -11.329408645629883
    6. 'diff' → logprob: -11.454408645629883
    7. 'L' → logprob: -11.704408645629883
    8. 'import' → logprob: -11.704408645629883
    9. '#' → logprob: -11.704408645629883
    10. '	for' → logprob: -11.954408645629883

Token 599: ' être' (ID: 9104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10946355015039444
    2. ' for' → logprob: -2.3594634532928467
    3. 'range' → logprob: -5.609463691711426
    4. 'import' → logprob: -6.484463691711426
    5. 'A' → logprob: -7.234463691711426
    6. '#' → logprob: -7.234463691711426
    7. 'continue' → logprob: -7.984463691711426
    8. 'raise' → logprob: -7.984463691711426
    9. ' range' → logprob: -8.734463691711426
    10. ' affect' → logprob: -8.984463691711426

Token 600: ' optim' (ID: 9367)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -1.0531647205352783
    2. 'for' → logprob: -1.1781647205352783
    3. 'A' → logprob: -1.5531647205352783
    4. ' done' → logprob: -2.5531647205352783
    5. 'b' → logprob: -4.053164482116699
    6. 'range' → logprob: -4.928164482116699
    7. 'fait' → logprob: -5.053164482116699
    8. 'import' → logprob: -5.428164482116699
    9. 'f' → logprob: -6.428164482116699
    10. ' for' → logprob: -6.428164482116699

Token 601: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.04336133599281311
    2. 'ized' → logprob: -3.1683614253997803
    3. 'is' → logprob: -9.29336166381836
    4. 'al' → logprob: -9.54336166381836
    5. 'izable' → logprob: -10.79336166381836
    6. 'alis' → logprob: -10.91836166381836
    7. 'A' → logprob: -10.91836166381836
    8. 'isée' → logprob: -10.91836166381836
    9. '```' → logprob: -11.04336166381836
    10. 'iz' → logprob: -11.04336166381836

Token 602: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48662322759628296
    2. ' for' → logprob: -0.986623227596283
    3. '   ' → logprob: -5.111623287200928
    4. 'import' → logprob: -6.111623287200928
    5. 'from' → logprob: -6.361623287200928
    6. 'diff' → logprob: -6.611623287200928
    7. 'A' → logprob: -8.11162281036377
    8. ' from' → logprob: -8.48662281036377
    9. '```' → logprob: -8.86162281036377
    10. '
' → logprob: -8.98662281036377

Token 603: ' segment' (ID: 14806)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7471771836280823
    2. 'from' → logprob: -0.9971771836280823
    3. 'import' → logprob: -2.9971771240234375
    4. 'diff' → logprob: -3.7471771240234375
    5. 'range' → logprob: -4.2471771240234375
    6. '[' → logprob: -4.6221771240234375
    7. 'difference' → logprob: -4.6221771240234375
    8. 'segment' → logprob: -4.7471771240234375
    9. 'for' → logprob: -4.8721771240234375
    10. 'prefix' → logprob: -5.1221771240234375

Token 604: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.11586394160985947
    2. ' tree' → logprob: -2.9908640384674072
    3. '_tree' → logprob: -3.2408640384674072
    4. 'A' → logprob: -5.365863800048828
    5. '   ' → logprob: -5.740863800048828
    6. '[' → logprob: -5.740863800048828
    7. '[
' → logprob: -5.865863800048828
    8. ' A' → logprob: -6.615863800048828
    9. '_' → logprob: -6.990863800048828
    10. 'trees' → logprob: -7.740863800048828

Token 605: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5610815286636353
    2. ' for' → logprob: -0.9360815286636353
    3. '   ' → logprob: -3.4360814094543457
    4. '```' → logprob: -6.186081409454346
    5. 'diff' → logprob: -6.936081409454346
    6. 'from' → logprob: -8.061081886291504
    7. 'import' → logprob: -8.186081886291504
    8. '
' → logprob: -8.686081886291504
    9. ',' → logprob: -8.811081886291504
    10. '#' → logprob: -8.936081886291504

Token 606: ' pas' (ID: 2173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1817728579044342
    2. ' for' → logprob: -2.5567729473114014
    3. 'pass' → logprob: -2.5567729473114014
    4. 'A' → logprob: -5.306772708892822
    5. ' pass' → logprob: -5.681772708892822
    6. '#' → logprob: -6.181772708892822
    7. 'continue' → logprob: -8.43177318572998
    8. '...' → logprob: -8.68177318572998
    9. 'import' → logprob: -9.18177318572998
    10. ' A' → logprob: -10.30677318572998

Token 607: ' obligatoire' (ID: 109362)
  Prédit: 'shown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shown' → logprob: -1.440187692642212
    2. 'needed' → logprob: -1.690187692642212
    3. 'necessary' → logprob: -2.065187692642212
    4. ' nécessaire' → logprob: -2.065187692642212
    5. 'import' → logprob: -2.565187692642212
    6. 'implemented' → logprob: -2.940187692642212
    7. 'for' → logprob: -3.565187692642212
    8. 'possible' → logprob: -4.065187454223633
    9. 'dans' → logprob: -4.190187454223633
    10. 'necess' → logprob: -4.440187454223633

Token 608: ' ici' (ID: 27994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048622675240039825
    2. ' for' → logprob: -3.0486226081848145
    3. '   ' → logprob: -10.298623085021973
    4. '```' → logprob: -14.048623085021973
    5. '	for' → logprob: -14.423623085021973
    6. '
' → logprob: -15.798623085021973
    7. 'diff' → logprob: -17.673622131347656
    8. ',' → logprob: -17.798622131347656
    9. '    
' → logprob: -18.173622131347656
    10. ' 
' → logprob: -18.298622131347656

Token 609: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005302300211042166
    2. ' for' → logprob: -5.255302429199219
    3. '   ' → logprob: -9.630302429199219
    4. '	for' → logprob: -13.130302429199219
    5. '```' → logprob: -14.505302429199219
    6. '
' → logprob: -15.630302429199219
    7. '    
' → logprob: -17.25530242919922
    8. 'range' → logprob: -18.75530242919922
    9. '\' → logprob: -19.00530242919922
    10. 'diff' → logprob: -19.13030242919922

Token 610: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018343668431043625
    2. ' for' → logprob: -4.018343448638916
    3. '   ' → logprob: -8.643343925476074
    4. '	for' → logprob: -11.393343925476074
    5. '```' → logprob: -12.018343925476074
    6. '
' → logprob: -17.268342971801758
    7. '``' → logprob: -17.268342971801758
    8. '    
' → logprob: -17.518342971801758
    9. ' ' → logprob: -18.018342971801758
    10. ',' → logprob: -18.393342971801758

Token 611: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026419671485200524
    2. ' for' → logprob: -8.250264167785645
    3. '   ' → logprob: -12.875264167785645
    4. '	for' → logprob: -15.250264167785645
    5. 'diff' → logprob: -16.50026512145996
    6. '```' → logprob: -17.00026512145996
    7. 'from' → logprob: -17.37526512145996
    8. 'add' → logprob: -18.00026512145996
    9. '    
' → logprob: -18.87526512145996
    10. 'increment' → logprob: -19.12526512145996

Token 612: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.0219828002154827e-05
    2. ' for' → logprob: -10.875020027160645
    3. '   ' → logprob: -13.875020027160645
    4. '	for' → logprob: -16.62502098083496
    5. 'from' → logprob: -16.87502098083496
    6. 'diff' → logprob: -17.12502098083496
    7. '
' → logprob: -18.75002098083496
    8. 'import' → logprob: -18.87502098083496
    9. '    
' → logprob: -19.12502098083496
    10. '```' → logprob: -19.25002098083496

Token 613: 'éanmoins' (ID: 176785)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09196626394987106
    2. ' for' → logprob: -3.091966152191162
    3. '   ' → logprob: -4.341966152191162
    4. '=' → logprob: -4.841966152191162
    5. 'ext' → logprob: -5.466966152191162
    6. '
' → logprob: -5.466966152191162
    7. 'ew' → logprob: -5.966966152191162
    8. 'L' → logprob: -6.966966152191162
    9. '+=' → logprob: -7.091966152191162
    10. 'o' → logprob: -7.216966152191162

Token 614: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11285851150751114
    2. ' for' → logprob: -2.237858533859253
    3. '
' → logprob: -11.237858772277832
    4. '   ' → logprob: -11.362858772277832
    5. '	for' → logprob: -12.487858772277832
    6. 'import' → logprob: -12.862858772277832
    7. 'from' → logprob: -13.112858772277832
    8. '    ' → logprob: -14.237858772277832
    9. 'A' → logprob: -14.862858772277832
    10. '    
' → logprob: -15.112858772277832

Token 615: ' contr' (ID: 6030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007429030258208513
    2. ' for' → logprob: -5.132429122924805
    3. 'from' → logprob: -6.757429122924805
    4. '#' → logprob: -9.007429122924805
    5. 'A' → logprob: -10.007429122924805
    6. 'import' → logprob: -10.132429122924805
    7. '```' → logprob: -10.257429122924805
    8. 'pass' → logprob: -10.882429122924805
    9. 'code' → logprob: -11.132429122924805
    10. 'diff' → logprob: -11.757429122924805

Token 616: 'ainte' (ID: 48434)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11291888356208801
    2. 'for' → logprob: -3.1129188537597656
    3. '=' → logprob: -4.987918853759766
    4. 'A' → logprob: -4.987918853759766
    5. 'st' → logprob: -4.987918853759766
    6. ' for' → logprob: -4.987918853759766
    7. 'inue' → logprob: -5.112918853759766
    8. 'te' → logprob: -5.487918853759766
    9. '```' → logprob: -5.487918853759766
    10. 'ext' → logprob: -5.862918853759766

Token 617: ' est' (ID: 893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0387494564056396
    2. 'import' → logprob: -1.6637494564056396
    3. '   ' → logprob: -2.2887494564056396
    4. 'A' → logprob: -2.6637494564056396
    5. 'L' → logprob: -2.6637494564056396
    6. ' for' → logprob: -3.0387494564056396
    7. '=' → logprob: -3.4137494564056396
    8. 'N' → logprob: -3.6637494564056396
    9. 's' → logprob: -4.163749694824219
    10. '<=' → logprob: -4.288749694824219

Token 618: ' grande' (ID: 10094)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2907627522945404
    2. 'Q' → logprob: -2.2907626628875732
    3. 'N' → logprob: -2.5407626628875732
    4. 'que' → logprob: -4.040762901306152
    5. 'import' → logprob: -4.290762901306152
    6. 'g' → logprob: -4.915762901306152
    7. ' mod' → logprob: -5.165762901306152
    8. ' faible' → logprob: -5.540762901306152
    9. '100' → logprob: -5.790762901306152
    10. 't' → logprob: -6.415762901306152

Token 619: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7292497754096985
    2. ' for' → logprob: -0.9792497754096985
    3. '   ' → logprob: -1.9792497158050537
    4. '	for' → logprob: -6.104249954223633
    5. '
' → logprob: -7.229249954223633
    6. '    
' → logprob: -8.604249954223633
    7. ',' → logprob: -8.604249954223633
    8. '```' → logprob: -8.729249954223633
    9. 'i' → logprob: -8.979249954223633
    10. ' i' → logprob: -10.229249954223633

Token 620: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10235846042633057
    2. ' for' → logprob: -2.352358341217041
    3. '#' → logprob: -7.352358341217041
    4. 'pass' → logprob: -7.977358341217041
    5. 'diff' → logprob: -8.1023588180542
    6. ' pass' → logprob: -8.7273588180542
    7. 'continue' → logprob: -8.9773588180542
    8. 'import' → logprob: -9.1023588180542
    9. 'delta' → logprob: -9.1023588180542
    10. '   ' → logprob: -9.4773588180542

Token 621: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.9896539449691772
    2. ' is' → logprob: -1.9896539449691772
    3. ' faudra' → logprob: -2.239654064178467
    4. 's' → logprob: -2.989654064178467
    5. ' will' → logprob: -2.989654064178467
    6. '#' → logprob: -3.114654064178467
    7. 'import' → logprob: -3.239654064178467
    8. ' faudrait' → logprob: -3.489654064178467
    9. '   ' → logprob: -3.614654064178467
    10. 'is' → logprob: -3.989654064178467

Token 622: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4057430922985077
    2. 'util' → logprob: -2.03074312210083
    3. 'for' → logprob: -3.15574312210083
    4. 'from' → logprob: -3.15574312210083
    5. 'optim' → logprob: -4.03074312210083
    6. 'pass' → logprob: -4.03074312210083
    7. 'penser' → logprob: -4.15574312210083
    8. 'un' → logprob: -4.15574312210083
    9. 'une' → logprob: -4.53074312210083
    10. '```' → logprob: -5.28074312210083

Token 623: ' solution' (ID: 7578)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7424665689468384
    2. 'import' → logprob: -1.1174665689468384
    3. 'diff' → logprob: -2.367466449737549
    4. 'appro' → logprob: -2.992466449737549
    5. 'fen' → logprob: -3.992466449737549
    6. 'liste' → logprob: -4.867466449737549
    7. 'structure' → logprob: -5.117466449737549
    8. 'for' → logprob: -5.367466449737549
    9. 'tech' → logprob: -5.492466449737549
    10. 'segment' → logprob: -6.867466449737549

Token 624: ' O' (ID: 532)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5828781127929688
    2. 'from' → logprob: -1.3328781127929688
    3. '#' → logprob: -2.7078781127929688
    4. '   ' → logprob: -3.9578781127929688
    5. ' from' → logprob: -4.082878112792969
    6. 'diff' → logprob: -4.207878112792969
    7. 'for' → logprob: -4.707878112792969
    8. '<|end|>' → logprob: -4.707878112792969
    9. 'continue' → logprob: -5.082878112792969
    10. '```' → logprob: -5.207878112792969

Token 625: '(Q' (ID: 14437)
  Prédit: '(log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(log' → logprob: -0.02228575386106968
    2. '(' → logprob: -4.7722859382629395
    3. '(Q' → logprob: -4.7722859382629395
    4. '(N' → logprob: -5.8972859382629395
    5. '((' → logprob: -6.6472859382629395
    6. '(l' → logprob: -8.022285461425781
    7. '(\' → logprob: -8.022285461425781
    8. 'log' → logprob: -8.147285461425781
    9. '(Log' → logprob: -10.522285461425781
    10. '(np' → logprob: -10.522285461425781

Token 626: ')' (ID: 8)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.32430195808410645
    2. '*' → logprob: -2.1993019580841064
    3. ')' → logprob: -2.4493019580841064
    4. ' log' → logprob: -2.9493019580841064
    5. '(log' → logprob: -4.824301719665527
    6. '(N' → logprob: -5.199301719665527
    7. ' *' → logprob: -5.324301719665527
    8. 'import' → logprob: -6.074301719665527
    9. '(' → logprob: -6.074301719665527
    10. 'N' → logprob: -6.699301719665527

Token 627: ' ou' (ID: 2031)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7467297315597534
    2. 'import' → logprob: -1.7467297315597534
    3. 'diff' → logprob: -1.8717297315597534
    4. 'for' → logprob: -2.246729850769043
    5. 'from' → logprob: -2.496729850769043
    6. 'A' → logprob: -2.496729850769043
    7. '   ' → logprob: -2.746729850769043
    8. 'if' → logprob: -3.246729850769043
    9. ' for' → logprob: -3.371729850769043
    10. 'delta' → logprob: -3.371729850769043

Token 628: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.03415354713797569
    2. '(N' → logprob: -4.409153461456299
    3. 'log' → logprob: -4.409153461456299
    4. '(' → logprob: -5.409153461456299
    5. 'o' → logprob: -7.284153461456299
    6. '(Q' → logprob: -7.284153461456299
    7. '
' → logprob: -7.409153461456299
    8. ' O' → logprob: -7.534153461456299
    9. 'N' → logprob: -7.659153461456299
    10. '```' → logprob: -8.034153938293457

Token 629: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.2568434476852417
    2. '(log' → logprob: -2.6318435668945312
    3. '(N' → logprob: -2.7568435668945312
    4. '(' → logprob: -2.8818435668945312
    5. '((' → logprob: -3.3818435668945312
    6. 'log' → logprob: -7.631843566894531
    7. '(\' → logprob: -8.381843566894531
    8. '(
' → logprob: -9.756843566894531
    9. '(Log' → logprob: -9.756843566894531
    10. 'ut' → logprob: -10.631843566894531

Token 630: ' log' (ID: 2142)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8994285464286804
    2. '*' → logprob: -1.2744286060333252
    3. 'log' → logprob: -1.7744286060333252
    4. ' log' → logprob: -3.024428606033325
    5. '+' → logprob: -3.649428606033325
    6. '(N' → logprob: -3.899428606033325
    7. '(' → logprob: -4.274428367614746
    8. '(log' → logprob: -4.274428367614746
    9. ' *' → logprob: -4.899428367614746
    10. ' )' → logprob: -5.524428367614746

Token 631: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0035732227843254805
    2. '(N' → logprob: -5.878573417663574
    3. ' N' → logprob: -7.503573417663574
    4. 'n' → logprob: -9.003573417663574
    5. ')' → logprob: -9.503573417663574
    6. '(' → logprob: -12.753573417663574
    7. ' (' → logprob: -12.753573417663574
    8. 'arith' → logprob: -12.753573417663574
    9. '
' → logprob: -13.003573417663574
    10. '(n' → logprob: -13.003573417663574

Token 632: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22962164878845215
    2. ')
' → logprob: -1.6046216487884521
    3. 'import' → logprob: -6.979621887207031
    4. ',' → logprob: -7.479621887207031
    5. ')

' → logprob: -7.604621887207031
    6. '):' → logprob: -7.604621887207031
    7. 'A' → logprob: -7.979621887207031
    8. '   ' → logprob: -8.604621887207031
    9. 'for' → logprob: -8.604621887207031
    10. ').' → logprob: -9.229621887207031

Token 633: ' =>' (ID: 871)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.105401873588562
    2. '#' → logprob: -1.480401873588562
    3. 'from' → logprob: -1.480401873588562
    4. 'A' → logprob: -2.7304019927978516
    5. 'for' → logprob: -3.1054019927978516
    6. 'diff' → logprob: -3.3554019927978516
    7. 'delta' → logprob: -4.105401992797852
    8. '```' → logprob: -4.605401992797852
    9. '   ' → logprob: -5.105401992797852
    10. 'segment' → logprob: -5.355401992797852

Token 634: ' 
' (ID: 793)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5608266592025757
    2. 'import' → logprob: -2.0608267784118652
    3. 'for' → logprob: -2.1858267784118652
    4. 'diff' → logprob: -2.9358267784118652
    5. '#' → logprob: -3.0608267784118652
    6. 'class' → logprob: -3.3108267784118652
    7. 'BIT' → logprob: -4.685826778411865
    8. 'fen' → logprob: -4.685826778411865
    9. 'bit' → logprob: -5.185826778411865
    10. 'segment' → logprob: -5.185826778411865

Token 635: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2810765504837036
    2. 'import' → logprob: -2.281076431274414
    3. '#' → logprob: -2.531076431274414
    4. 'pass' → logprob: -3.781076431274414
    5. 'continue' → logprob: -4.156076431274414
    6. 'A' → logprob: -4.781076431274414
    7. 'for' → logprob: -4.906076431274414
    8. ' from' → logprob: -5.656076431274414
    9. '...' → logprob: -6.281076431274414
    10. 'diff' → logprob: -7.531076431274414

Token 636: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2687925100326538
    2. 'import' → logprob: -2.2687926292419434
    3. '#' (adapté à ' #') → logprob: -2.5187926292419434
    4. 'pass' → logprob: -3.8937926292419434
    5. 'A' → logprob: -4.393792629241943
    6. 'for' → logprob: -4.768792629241943
    7. 'diff' → logprob: -5.768792629241943
    8. 'continue' → logprob: -6.393792629241943
    9. 'raise' → logprob: -6.643792629241943
    10. '...' → logprob: -6.768792629241943

Token 637: ' Pour' (ID: 13931)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4943101704120636
    2. 'import' → logprob: -1.4943101406097412
    3. '#' → logprob: -1.8693101406097412
    4. 'for' → logprob: -5.49431037902832
    5. 'class' → logprob: -5.99431037902832
    6. 'diff' → logprob: -6.36931037902832
    7. 'A' → logprob: -6.61931037902832
    8. 'pass' → logprob: -7.86931037902832
    9. 'continue' → logprob: -8.74431037902832
    10. 'prefix' → logprob: -8.86931037902832

Token 638: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24207110702991486
    2. '_' → logprob: -2.6170711517333984
    3. 'k' → logprob: -3.2420711517333984
    4. ' i' → logprob: -3.2420711517333984
    5. 'l' → logprob: -3.3670711517333984
    6. 'L' → logprob: -4.992071151733398
    7. ' _' → logprob: -5.117071151733398
    8. ' l' → logprob: -5.867071151733398
    9. 'diff' → logprob: -5.992071151733398
    10. ' k' → logprob: -6.242071151733398

Token 639: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.313699334859848
    2. 'from' → logprob: -1.9386993646621704
    3. '
' → logprob: -3.188699245452881
    4. ',' → logprob: -3.438699245452881
    5. '#' → logprob: -4.563699245452881
    6. 'A' → logprob: -4.688699245452881
    7. 'for' → logprob: -4.813699245452881
    8. ' from' → logprob: -5.438699245452881
    9. '   ' → logprob: -5.563699245452881
    10. ' for' → logprob: -5.938699245452881

Token 640: ' ne' (ID: 453)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.021389365196228
    2. 'import' → logprob: -1.896389365196228
    3. ' can' → logprob: -2.5213894844055176
    4. 's' → logprob: -2.8963894844055176
    5. ' peux' → logprob: -3.0213894844055176
    6. 'continue' → logprob: -3.5213894844055176
    7. ''ll' → logprob: -3.7713894844055176
    8. ' will' → logprob: -4.021389484405518
    9. ' vais' → logprob: -4.021389484405518
    10. '#' → logprob: -4.146389484405518

Token 641: ' mod' (ID: 1812)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.4072604179382324
    2. 'import' → logprob: -2.4072604179382324
    3. 'pas' → logprob: -2.5322604179382324
    4. 'f' → logprob: -2.6572604179382324
    5. 'from' → logprob: -2.7822604179382324
    6. 'A' → logprob: -2.9072604179382324
    7. ' utilise' → logprob: -2.9072604179382324
    8. 's' → logprob: -3.0322604179382324
    9. 'contin' → logprob: -3.1572604179382324
    10. 'use' → logprob: -3.5322604179382324

Token 642: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.8899804949760437
    2. 'if' → logprob: -1.2649805545806885
    3. 'ify' → logprob: -1.5149805545806885
    4. 'ifié' → logprob: -3.8899805545806885
    5. 'ifier' → logprob: -4.014980316162109
    6. 'f' → logprob: -4.139980316162109
    7. 'import' → logprob: -4.389980316162109
    8. 'from' → logprob: -5.389980316162109
    9. 'ifiez' → logprob: -5.889980316162109
    10. 'A' → logprob: -6.014980316162109

Token 643: ' pas' (ID: 2173)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2074672281742096
    2. 'pas' → logprob: -2.8324673175811768
    3. 'diff' → logprob: -3.5824673175811768
    4. ' pas' → logprob: -3.9574673175811768
    5. ' A' → logprob: -4.207467079162598
    6. ' uniquement' → logprob: -4.332467079162598
    7. ' seulement' → logprob: -4.707467079162598
    8. 'un' → logprob: -5.207467079162598
    9. ' que' → logprob: -5.207467079162598
    10. 'l' → logprob: -5.457467079162598

Token 644: ' tout' (ID: 5501)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.053692203015089035
    2. 'la' → logprob: -4.05369234085083
    3. 'diff' → logprob: -4.80369234085083
    4. 'un' → logprob: -5.05369234085083
    5. 'direct' → logprob: -5.17869234085083
    6. 'les' → logprob: -5.92869234085083
    7. 'une' → logprob: -5.92869234085083
    8. 'l' → logprob: -6.17869234085083
    9. ' directement' → logprob: -6.30369234085083
    10. 'explicit' → logprob: -7.05369234085083

Token 645: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1749425232410431
    2. 'diff' → logprob: -2.4249424934387207
    3. 's' → logprob: -3.9249424934387207
    4. ' A' → logprob: -4.049942493438721
    5. '#' → logprob: -4.924942493438721
    6. '<|end|>' → logprob: -5.799942493438721
    7. 'delta' → logprob: -5.799942493438721
    8. 'l' → logprob: -6.049942493438721
    9. 'B' → logprob: -6.174942493438721
    10. ',' → logprob: -6.424942493438721

Token 646: '[L' (ID: 112100)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.37486109137535095
    2. 'delta' → logprob: -1.4998611211776733
    3. '<|end|>' → logprob: -3.874861001968384
    4. '   ' → logprob: -4.124861240386963
    5. ' delta' → logprob: -4.249861240386963
    6. ' diff' → logprob: -4.999861240386963
    7. 'prefix' → logprob: -5.624861240386963
    8. 'A' → logprob: -5.624861240386963
    9. '+' → logprob: -5.874861240386963
    10. 'd' → logprob: -5.999861240386963

Token 647: ':R' (ID: 163578)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004593772813677788
    2. ' -' → logprob: -5.629593849182129
    3. ':' → logprob: -8.004593849182129
    4. ']' → logprob: -8.254593849182129
    5. ':R' → logprob: -8.504593849182129
    6. '],' → logprob: -9.379593849182129
    7. 'R' → logprob: -10.129593849182129
    8. '   ' → logprob: -11.004593849182129
    9. '[R' → logprob: -11.754593849182129
    10. '-R' → logprob: -11.754593849182129

Token 648: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04670889303088188
    2. ']+' → logprob: -4.421709060668945
    3. '+' → logprob: -4.671709060668945
    4. ']+=' → logprob: -4.671709060668945
    5. '],' → logprob: -4.921709060668945
    6. '])' → logprob: -6.171709060668945
    7. ']=' → logprob: -6.546709060668945
    8. ':' → logprob: -6.921709060668945
    9. '][:' → logprob: -7.546709060668945
    10. 'X' → logprob: -7.921709060668945

Token 649: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1649254709482193
    2. '+' → logprob: -2.0399255752563477
    3. '1' → logprob: -4.164925575256348
    4. '],' → logprob: -5.414925575256348
    5. 'R' → logprob: -6.414925575256348
    6. 'L' → logprob: -8.789925575256348
    7. ']+' → logprob: -9.664925575256348
    8. '```' → logprob: -10.664925575256348
    9. 'X' → logprob: -10.914925575256348
    10. ')' → logprob: -11.414925575256348

Token 650: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12931041419506073
    2. '],' → logprob: -2.129310369491577
    3. '+' → logprob: -6.504310607910156
    4. ']:' → logprob: -8.629310607910156
    5. ' ]' → logprob: -9.129310607910156
    6. ']
' → logprob: -9.629310607910156
    7. ' ],' → logprob: -9.879310607910156
    8. 'X' → logprob: -9.879310607910156
    9. 'L' → logprob: -10.129310607910156
    10. ']=' → logprob: -10.379310607910156

Token 651: ' mais' (ID: 2899)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3752788305282593
    2. 'delta' → logprob: -1.7502788305282593
    3. '   ' → logprob: -2.875278949737549
    4. 'A' → logprob: -3.250278949737549
    5. ' A' → logprob: -5.125278949737549
    6. ' diff' → logprob: -5.250278949737549
    7. ' delta' → logprob: -5.250278949737549
    8. '#' → logprob: -5.375278949737549
    9. '+' → logprob: -5.375278949737549
    10. 'd' → logprob: -5.750278949737549

Token 652: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.24144692718982697
    2. 'util' → logprob: -2.3664469718933105
    3. ' on' → logprob: -3.1164469718933105
    4. 'A' → logprob: -3.8664469718933105
    5. 'stock' → logprob: -3.8664469718933105
    6. 'pl' → logprob: -5.2414469718933105
    7. 'l' → logprob: -5.3664469718933105
    8. ' plutôt' → logprob: -5.6164469718933105
    9. 'aj' → logprob: -5.9914469718933105
    10. 'un' → logprob: -6.1164469718933105

Token 653: ' garde' (ID: 65309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2655656635761261
    2. '+' → logprob: -3.6405656337738037
    3. 'util' → logprob: -3.8905656337738037
    4. 'A' → logprob: -4.015565872192383
    5. 'from' → logprob: -4.265565872192383
    6. 'uil' → logprob: -4.765565872192383
    7. ' can' → logprob: -4.890565872192383
    8. 'g' → logprob: -5.015565872192383
    9. 'l' → logprob: -5.078065872192383
    10. ''util' → logprob: -5.515565872192383

Token 654: ' en' (ID: 469)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.4610985219478607
    2. ' une' → logprob: -2.0860984325408936
    3. 'une' → logprob: -2.3360984325408936
    4. 'a' → logprob: -2.4610984325408936
    5. ' un' → logprob: -2.9610984325408936
    6. 'diff' → logprob: -5.086098670959473
    7. 'A' → logprob: -6.711098670959473
    8. ' a' → logprob: -6.836098670959473
    9. 'la' → logprob: -7.961098670959473
    10. '_un' → logprob: -8.086098670959473

Token 655: ' mémoire' (ID: 79071)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5597817301750183
    2. 'une' → logprob: -2.059781789779663
    3. 'delta' → logprob: -2.309781789779663
    4. 'd' → logprob: -3.184781789779663
    5. 'offset' → logprob: -3.434781789779663
    6. 'un' → logprob: -3.434781789779663
    7. 'difference' → logprob: -3.559781789779663
    8. '```' → logprob: -3.934781789779663
    9. 'memo' → logprob: -4.684781551361084
    10. 'plus' → logprob: -4.934781551361084

Token 656: ' un' (ID: 537)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.45593947172164917
    2. 'delta' → logprob: -1.205939531326294
    3. 'offset' → logprob: -3.955939531326294
    4. 'updates' → logprob: -4.330939292907715
    5. 'increments' → logprob: -4.830939292907715
    6. 'd' → logprob: -5.080939292907715
    7. '   ' → logprob: -5.955939292907715
    8. ' delta' → logprob: -5.955939292907715
    9. 'difference' → logprob: -6.080939292907715
    10. 'update' → logprob: -6.330939292907715

Token 657: ' delta' (ID: 18800)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6449432969093323
    2. 'delta' → logprob: -1.2699432373046875
    3. 'diff' → logprob: -1.8949432373046875
    4. 'lazy' → logprob: -4.1449432373046875
    5. 'd' → logprob: -4.3949432373046875
    6. 'add' → logprob: -5.7699432373046875
    7. 'difference' → logprob: -5.7699432373046875
    8. 'increment' → logprob: -5.7699432373046875
    9. 'aj' → logprob: -6.5199432373046875
    10. ' delta' → logprob: -6.7699432373046875

Token 658: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: ' on' (ID: 402)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.8005644083023071
    2. 'print' → logprob: -2.1755642890930176
    3. 'prefix' → logprob: -2.1755642890930176
    4. 'l' → logprob: -2.6755642890930176
    5. 'util' → logprob: -2.8005642890930176
    6. 'apply' → logprob: -2.9255642890930176
    7. 'import' → logprob: -2.9255642890930176
    8. 'contin' → logprob: -3.5505642890930176
    9. 'lazy' → logprob: -3.6755642890930176
    10. 'continue' → logprob: -3.6755642890930176

Token 660: ' applique' (ID: 180579)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8037674427032471
    2. 'aj' → logprob: -1.178767442703247
    3. 'ap' → logprob: -2.678767442703247
    4. 'g' → logprob: -2.928767442703247
    5. 'continue' → logprob: -3.678767442703247
    6. 'stock' → logprob: -4.428767204284668
    7. 'import' → logprob: -4.553767204284668
    8. 'apply' → logprob: -4.553767204284668
    9. ' utilise' → logprob: -4.928767204284668
    10. 'contin' → logprob: -5.303767204284668

Token 661: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5935194492340088
    2. 'delta' → logprob: -1.2185194492340088
    3. ' delta' → logprob: -3.593519449234009
    4. ' A' → logprob: -3.593519449234009
    5. 'the' → logprob: -3.843519449234009
    6. 'diff' → logprob: -4.09351921081543
    7. 'X' → logprob: -4.96851921081543
    8. '#' → logprob: -4.96851921081543
    9. '   ' → logprob: -4.96851921081543
    10. 'L' → logprob: -5.34351921081543

Token 662: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.4055670201778412
    2. ' delta' → logprob: -1.5305670499801636
    3. 'diff' → logprob: -2.405566930770874
    4. 'd' → logprob: -4.780567169189453
    5. ' changement' → logprob: -4.905567169189453
    6. 'offset' → logprob: -5.655567169189453
    7. 'difference' → logprob: -6.530567169189453
    8. 'lazy' → logprob: -6.655567169189453
    9. ' diff' → logprob: -7.655567169189453
    10. 'dé' → logprob: -7.780567169189453

Token 663: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 664: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8065437078475952
    2. 'une' → logprob: -1.6815437078475952
    3. 'diff' → logprob: -1.8065437078475952
    4. 'lazy' → logprob: -2.3065438270568848
    5. 'A' → logprob: -3.0565438270568848
    6. 'prefix' → logprob: -3.9315438270568848
    7. 'difference' → logprob: -4.181543827056885
    8. 'd' → logprob: -5.806543827056885
    9. 'acc' → logprob: -5.931543827056885
    10. 'delta' → logprob: -5.931543827056885

Token 665: ' structure' (ID: 8866)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -1.0880916118621826
    2. 'diff' → logprob: -1.2130916118621826
    3. 'lazy' → logprob: -1.7130916118621826
    4. 'segment' → logprob: -2.5880916118621826
    5. 'fen' → logprob: -2.8380916118621826
    6. 'd' → logprob: -3.5880916118621826
    7. ' segment' → logprob: -4.963091850280762
    8. 'delta' → logprob: -5.088091850280762
    9. 'liste' → logprob: -6.463091850280762
    10. 'de' → logprob: -6.588091850280762

Token 666: '
' (ID: 198)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6692608594894409
    2. 'diff' → logprob: -1.919260859489441
    3. 'from' → logprob: -2.6692609786987305
    4. 'import' → logprob: -2.7942609786987305
    5. 'd' → logprob: -2.9192609786987305
    6. 'data' → logprob: -3.1692609786987305
    7. 'class' → logprob: -3.9192609786987305
    8. 'delta' → logprob: -4.1692609786987305
    9. 'A' → logprob: -4.2942609786987305
    10. 'deque' → logprob: -4.4192609786987305

Token 667: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8362055420875549
    2. 'from' → logprob: -1.3362054824829102
    3. 'diff' → logprob: -1.8362054824829102
    4. '<|end|>' → logprob: -3.08620548248291
    5. 'A' → logprob: -3.71120548248291
    6. 'delta' → logprob: -3.83620548248291
    7. 'd' → logprob: -4.33620548248291
    8. 'de' → logprob: -4.96120548248291
    9. 'class' → logprob: -5.21120548248291
    10. '```' → logprob: -5.33620548248291

Token 668: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2695033550262451
    2. 'import' → logprob: -1.3945033550262451
    3. '#' (adapté à ' #') → logprob: -2.144503355026245
    4. 'A' → logprob: -2.269503355026245
    5. 'diff' → logprob: -2.269503355026245
    6. 'delta' → logprob: -3.519503355026245
    7. '<|end|>' → logprob: -3.769503355026245
    8. '+' → logprob: -4.019503593444824
    9. '```' → logprob: -4.144503593444824
    10. ' A' → logprob: -4.769503593444824

Token 669: ' Comme' (ID: 53252)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8728113174438477
    2. 'delta' → logprob: -1.7478113174438477
    3. '#' → logprob: -1.8728113174438477
    4. 'import' → logprob: -1.9978113174438477
    5. 'diff' → logprob: -2.7478113174438477
    6. 'A' → logprob: -3.7478113174438477
    7. 'continue' → logprob: -4.622811317443848
    8. '```' → logprob: -5.372811317443848
    9. 'pass' → logprob: -5.497811317443848
    10. 'if' → logprob: -5.497811317443848

Token 670: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22128696739673615
    2. 'delta' → logprob: -2.8462870121002197
    3. 'A' → logprob: -3.8462870121002197
    4. 'difference' → logprob: -3.9712870121002197
    5. 'fen' → logprob: -4.096286773681641
    6. 'from' → logprob: -4.346286773681641
    7. 'Fen' → logprob: -4.471286773681641
    8. 'segment' → logprob: -4.596286773681641
    9. 'd' → logprob: -4.846286773681641
    10. 'import' → logprob: -4.846286773681641

Token 671: ' solution' (ID: 7578)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8610329627990723
    2. 'Fen' → logprob: -1.3610329627990723
    3. 'difference' → logprob: -2.2360329627990723
    4. 'fen' → logprob: -2.6110329627990723
    5. 'liste' → logprob: -3.2360329627990723
    6. 'd' → logprob: -3.3610329627990723
    7. 'import' → logprob: -4.736032962799072
    8. '#' → logprob: -4.861032962799072
    9. ' différence' → logprob: -4.986032962799072
    10. 'list' → logprob: -5.236032962799072

Token 672: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.234503984451294
    2. 'import' → logprob: -1.984503984451294
    3. 'diff' → logprob: -1.984503984451294
    4. 'from' → logprob: -2.609503984451294
    5. '<|end|>' → logprob: -2.609503984451294
    6. 'de' → logprob: -2.859503984451294
    7. 'Fen' → logprob: -3.359503984451294
    8. 'd' → logprob: -3.359503984451294
    9. 'class' → logprob: -3.984503984451294
    10. 'difference' → logprob: -4.359503746032715

Token 673: ' temps' (ID: 11160)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.5617372989654541
    2. 'diff' → logprob: -2.061737298965454
    3. 'Fen' → logprob: -2.436737298965454
    4. 'fen' → logprob: -2.561737298965454
    5. 'python' → logprob: -3.061737298965454
    6. 'segment' → logprob: -3.686737298965454
    7. 'Python' → logprob: -4.061737060546875
    8. ' différence' → logprob: -4.811737060546875
    9. '```' → logprob: -4.936737060546875
    10. 'C' → logprob: -5.311737060546875

Token 674: ' réel' (ID: 58265)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.8874559998512268
    2. 'diff' → logprob: -2.137455940246582
    3. 'import' → logprob: -2.512455940246582
    4. 'segment' → logprob: -2.637455940246582
    5. 'difference' → logprob: -2.637455940246582
    6. 'complex' → logprob: -3.012455940246582
    7. 'Fen' → logprob: -3.512455940246582
    8. 'd' → logprob: -3.637455940246582
    9. 'part' → logprob: -4.012455940246582
    10. 'limit' → logprob: -4.262455940246582

Token 675: ' peut' (ID: 9216)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.23429274559021
    2. 'delta' → logprob: -1.48429274559021
    3. 'diff' → logprob: -1.48429274559021
    4. 'import' → logprob: -2.73429274559021
    5. 'continue' → logprob: -2.85929274559021
    6. '   ' → logprob: -3.85929274559021
    7. 'A' → logprob: -3.98429274559021
    8. '#' → logprob: -3.98429274559021
    9. ' from' → logprob: -4.234292984008789
    10. 'if' → logprob: -4.359292984008789

Token 676: ' être' (ID: 9104)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8322466611862183
    2. 'être' → logprob: -1.0822466611862183
    3. 'pas' → logprob: -2.457246780395508
    4. '```' → logprob: -3.332246780395508
    5. 'ne' → logprob: -4.832246780395508
    6. 'pass' → logprob: -5.082246780395508
    7. 'sembler' → logprob: -5.207246780395508
    8. 'not' → logprob: -5.207246780395508
    9. 't' → logprob: -5.332246780395508
    10. '#' → logprob: -5.332246780395508

Token 677: ' coûte' (ID: 118994)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9427943825721741
    2. 'complex' → logprob: -1.5677943229675293
    3. 'un' → logprob: -2.9427943229675293
    4. 'd' → logprob: -2.9427943229675293
    5. 'impl' → logprob: -2.9427943229675293
    6. 'diff' → logprob: -2.9427943229675293
    7. '```' → logprob: -3.0677943229675293
    8. 'long' → logprob: -3.0677943229675293
    9. 'compl' → logprob: -4.192794322967529
    10. 'util' → logprob: -4.567794322967529

Token 678: 'use' (ID: 1821)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.8219267725944519
    2. 'ur' → logprob: -1.9469268321990967
    3. 'use' → logprob: -2.1969268321990967
    4. 'ante' → logprob: -2.4469268321990967
    5. 'urée' → logprob: -2.5719268321990967
    6. 'ant' → logprob: -4.321926593780518
    7. 'é' → logprob: -4.321926593780518
    8. 'r' → logprob: -4.321926593780518
    9. 'u' → logprob: -4.446926593780518
    10. 'e' → logprob: -4.571926593780518

Token 679: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 680: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0912854671478271
    2. 'import' → logprob: -1.2162854671478271
    3. '#' → logprob: -1.5912854671478271
    4. 'diff' → logprob: -2.341285467147827
    5. 'continue' → logprob: -3.341285467147827
    6. 'delta' → logprob: -4.216285705566406
    7. 'fen' → logprob: -5.591285705566406
    8. 'break' → logprob: -6.091285705566406
    9. ' from' → logprob: -6.216285705566406
    10. 'd' → logprob: -6.341285705566406

Token 681: ' utilise' (ID: 70283)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5151165723800659
    2. ' continue' → logprob: -1.515116572380066
    3. 'import' → logprob: -3.1401166915893555
    4. 'util' → logprob: -3.5151166915893555
    5. '#' → logprob: -4.0151166915893555
    6. 'stop' → logprob: -4.0151166915893555
    7. 'contin' → logprob: -4.0151166915893555
    8. 'g' → logprob: -4.8901166915893555
    9. 'arr' → logprob: -4.8901166915893555
    10. 's' → logprob: -5.3901166915893555

Token 682: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.49063625931739807
    2. 'diff' → logprob: -1.3656362295150757
    3. 'une' → logprob: -2.8656363487243652
    4. ' une' → logprob: -3.7406363487243652
    5. 'a' → logprob: -3.8656363487243652
    6. 'from' → logprob: -4.365636348724365
    7. ' un' → logprob: -5.365636348724365
    8. 'delta' → logprob: -5.490636348724365
    9. 'difference' → logprob: -5.740636348724365
    10. 'import' → logprob: -6.490636348724365

Token 683: ' tableau' (ID: 67053)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7487502098083496
    2. 'segment' → logprob: -1.4987502098083496
    3. 'fen' → logprob: -1.9987502098083496
    4. 'difference' → logprob: -2.6237502098083496
    5. 'lazy' → logprob: -3.6237502098083496
    6. 'delta' → logprob: -3.6237502098083496
    7. 'd' → logprob: -3.7487502098083496
    8. ' segment' → logprob: -4.74875020980835
    9. 'Fen' → logprob: -5.62375020980835
    10. 'from' → logprob: -6.37375020980835

Token 684: ' de' (ID: 334)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4175388216972351
    2. 'delta' → logprob: -1.1675388813018799
    3. 'de' → logprob: -3.91753888130188
    4. 'd' → logprob: -5.417538642883301
    5. ' delta' → logprob: -5.917538642883301
    6. 'offset' → logprob: -7.292538642883301
    7. 'des' → logprob: -7.917538642883301
    8. 'D' → logprob: -7.917538642883301
    9. 'dif' → logprob: -8.0425386428833
    10. 'difference' → logprob: -8.2925386428833

Token 685: ' dé' (ID: 2393)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5127018094062805
    2. 'd' → logprob: -1.0127017498016357
    3. 'dif' → logprob: -3.5127017498016357
    4. 'delta' → logprob: -5.512701988220215
    5. 'lazy' → logprob: -5.887701988220215
    6. 'difference' → logprob: -6.887701988220215
    7. 'del' → logprob: -10.012701988220215
    8. '```' → logprob: -10.262701988220215
    9. 'prefix' → logprob: -10.637701988220215
    10. 'l' → logprob: -10.637701988220215

Token 686: 'cal' (ID: 5842)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3694472014904022
    2. 'cal' → logprob: -2.1194472312927246
    3. 'diff' → logprob: -2.8694472312927246
    4. 'lé' → logprob: -3.1194472312927246
    5. 'r' → logprob: -3.9944472312927246
    6. 'delta' → logprob: -4.119447231292725
    7. 'f' → logprob: -4.619447231292725
    8. 'lus' → logprob: -4.744447231292725
    9. 'lazy' → logprob: -5.244447231292725
    10. 'lap' → logprob: -5.619447231292725

Token 687: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.09682969748973846
    2. 'ages' → logprob: -3.346829652786255
    3. 'tage' → logprob: -3.721829652786255
    4. 'ement' → logprob: -3.846829652786255
    5. 'ements' → logprob: -4.971829891204834
    6. 'rement' → logprob: -6.596829891204834
    7. 't' → logprob: -6.721829891204834
    8. 'ment' → logprob: -7.346829891204834
    9. '   ' → logprob: -8.596829414367676
    10. 'ments' → logprob: -8.971829414367676

Token 688: ' (' (ID: 350)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0780973806977272
    2. 'offset' → logprob: -3.203097343444824
    3. ' delta' → logprob: -3.953097343444824
    4. 'd' → logprob: -5.203097343444824
    5. 'diff' → logprob: -5.203097343444824
    6. 'D' → logprob: -6.453097343444824
    7. 'increments' → logprob: -7.078097343444824
    8. 'de' → logprob: -8.078097343444824
    9. ' offsets' → logprob: -8.203097343444824
    10. 'shift' → logprob: -8.828097343444824

Token 689: 'lazy' (ID: 101772)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.1776246279478073
    2. 'diff' → logprob: -2.6776247024536133
    3. ' delta' → logprob: -2.6776247024536133
    4. 'offset' → logprob: -4.427624702453613
    5. 'd' → logprob: -4.802624702453613
    6. 'D' → logprob: -5.552624702453613
    7. ' diff' → logprob: -7.302624702453613
    8. 'del' → logprob: -9.052624702453613
    9. ' D' → logprob: -9.302624702453613
    10. 'lazy' → logprob: -9.427624702453613

Token 690: ' propagation' (ID: 86772)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3733613193035126
    2. ' propagation' → logprob: -1.873361349105835
    3. '_updates' → logprob: -3.123361349105835
    4. '_diff' → logprob: -4.123361110687256
    5. '=' → logprob: -4.623361110687256
    6. 'delta' → logprob: -4.748361110687256
    7. ' =' → logprob: -4.748361110687256
    8. ')' → logprob: -4.748361110687256
    9. '=[]' → logprob: -4.873361110687256
    10. '_add' → logprob: -5.123361110687256

Token 691: ' concept' (ID: 8496)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3712684214115143
    2. 'delta' → logprob: -2.7462685108184814
    3. 'diff' → logprob: -2.8712685108184814
    4. 'increments' → logprob: -3.2462685108184814
    5. '_offsets' → logprob: -3.2462685108184814
    6. ']' → logprob: -3.4962685108184814
    7. 'offset' → logprob: -4.246268272399902
    8. ' =' → logprob: -4.746268272399902
    9. ' delta' → logprob: -4.871268272399902
    10. ',' → logprob: -4.996268272399902

Token 692: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36192426085472107
    2. '_offsets' → logprob: -1.7369242906570435
    3. '_offset' → logprob: -3.236924171447754
    4. 'offset' → logprob: -3.361924171447754
    5. ')
' → logprob: -4.611924171447754
    6. ' =' → logprob: -5.486924171447754
    7. '=' → logprob: -5.486924171447754
    8. 'delta' → logprob: -5.736924171447754
    9. '_delta' → logprob: -5.861924171447754
    10. 'diff' → logprob: -6.111924171447754

Token 693: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.15217378735542297
    2. 'offset' → logprob: -2.6521737575531006
    3. 'diff' → logprob: -3.5271737575531006
    4. 'd' → logprob: -4.02717399597168
    5. 'D' → logprob: -4.15217399597168
    6. 'A' → logprob: -5.90217399597168
    7. ' delta' → logprob: -6.52717399597168
    8. 'B' → logprob: -7.27717399597168
    9. 'increments' → logprob: -7.52717399597168
    10. 'lazy' → logprob: -7.65217399597168

Token 694: ' #' (ID: 1069)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3236500322818756
    2. 'if' → logprob: -2.0736501216888428
    3. 'offset' → logprob: -2.4486501216888428
    4. ' delta' → logprob: -4.198649883270264
    5. 'diff' → logprob: -4.323649883270264
    6. 'A' → logprob: -4.823649883270264
    7. ' if' → logprob: -4.823649883270264
    8. 'd' → logprob: -5.073649883270264
    9. '#' (adapté à ' #') → logprob: -6.073649883270264
    10. 'D' → logprob: -6.198649883270264

Token 695: ' mais' (ID: 2899)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.15570610761642456
    2. 'diff' → logprob: -3.0307061672210693
    3. 'offset' → logprob: -3.4057061672210693
    4. 'if' → logprob: -3.6557061672210693
    5. '#' → logprob: -4.15570592880249
    6. 'D' → logprob: -4.90570592880249
    7. 'd' → logprob: -5.28070592880249
    8. 'A' → logprob: -6.03070592880249
    9. 'lazy' → logprob: -6.53070592880249
    10. 'from' → logprob: -6.65570592880249

Token 696: ' ici' (ID: 27994)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8286752104759216
    2. 'continue' → logprob: -2.2036752700805664
    3. 'diff' → logprob: -2.4536752700805664
    4. 'delta' → logprob: -2.4536752700805664
    5. '#' → logprob: -2.9536752700805664
    6. 'import' → logprob: -3.3286752700805664
    7. ' A' → logprob: -3.5786752700805664
    8. '...' → logprob: -3.8286752700805664
    9. ' delta' → logprob: -3.8286752700805664
    10. 'pass' → logprob: -4.078675270080566

Token 697: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0633734464645386
    2. 'A' → logprob: -1.3133734464645386
    3. 'continue' → logprob: -1.6883734464645386
    4. 'delta' → logprob: -2.688373565673828
    5. '#' → logprob: -3.313373565673828
    6. ' continue' → logprob: -4.063373565673828
    7. ' A' → logprob: -4.313373565673828
    8. '
' → logprob: -4.563373565673828
    9. ' delta' → logprob: -4.688373565673828
    10. 'diff' → logprob: -4.938373565673828

Token 698: ' on' (ID: 402)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -1.2406775951385498
    2. 'break' → logprob: -1.3656775951385498
    3. 'A' → logprob: -2.36567759513855
    4. ' delta' → logprob: -2.86567759513855
    5. 'diff' → logprob: -2.86567759513855
    6. '#' → logprob: -2.86567759513855
    7. ' break' → logprob: -3.11567759513855
    8. 'offset' → logprob: -3.11567759513855
    9. 'continue' → logprob: -3.24067759513855
    10. 'pass' → logprob: -4.865677833557129

Token 699: ' a' (ID: 261)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.5886768698692322
    2. ' peut' → logprob: -1.463676929473877
    3. ' continue' → logprob: -2.588676929473877
    4. 'continue' → logprob: -3.213676929473877
    5. ' utilise' → logprob: -3.838676929473877
    6. 'pe' → logprob: -4.213676929473877
    7. 'util' → logprob: -5.088676929473877
    8. 'va' → logprob: -5.088676929473877
    9. 'contin' → logprob: -5.213676929473877
    10. ' doit' → logprob: -5.338676929473877

Token 700: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3209660053253174
    2. 'import' → logprob: -3.3209660053253174
    3. ' juste' → logprob: -3.5709660053253174
    4. ' seulement' → logprob: -3.5709660053253174
    5. ' besoin' → logprob: -3.6959660053253174
    6. ' A' → logprob: -3.6959660053253174
    7. 'un' → logprob: -3.8209660053253174
    8. 'just' → logprob: -3.8209660053253174
    9. ' un' → logprob: -4.445965766906738
    10. ' uniquement' → logprob: -4.820965766906738

Token 701: ' contr' (ID: 6030)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.7147504091262817
    2. 'difference' → logprob: -1.7147504091262817
    3. 'delta' → logprob: -2.214750289916992
    4. '#' → logprob: -2.589750289916992
    5. 'next' → logprob: -2.714750289916992
    6. 'diff' → logprob: -2.714750289916992
    7. 'A' → logprob: -3.214750289916992
    8. 'continue' → logprob: -3.214750289916992
    9. ' next' → logprob: -3.839750289916992
    10. 'lazy' → logprob: -3.964750289916992

Token 702: 'ainte' (ID: 48434)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -1.1270334720611572
    2. 'ainte' → logprob: -1.6270334720611572
    3. 'ôle' → logprob: -1.7520334720611572
    4. 'ete' → logprob: -2.1270334720611572
    5. 'ête' → logprob: -3.2520334720611572
    6. 'ole' → logprob: -3.3770334720611572
    7. 'int' → logprob: -3.5020334720611572
    8. 'ol' → logprob: -3.7520334720611572
    9. 'êt' → logprob: -5.252033233642578
    10. 'ève' → logprob: -5.377033233642578

Token 703: ' que' (ID: 661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5486369132995605
    2. ' =' → logprob: -1.6736369132995605
    3. 'diff' → logprob: -2.0486369132995605
    4. 'A' → logprob: -2.1736369132995605
    5. '_' → logprob: -3.1736369132995605
    6. '=' → logprob: -3.2986369132995605
    7. ' +=' → logprob: -3.2986369132995605
    8. '_delta' → logprob: -3.5486369132995605
    9. '_diff' → logprob: -3.6736369132995605
    10. '   ' → logprob: -3.7986369132995605

Token 704: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9906913638114929
    2. 'A' → logprob: -1.4906914234161377
    3. 'L' → logprob: -2.2406914234161377
    4. 'l' → logprob: -2.3656914234161377
    5. 'le' → logprob: -3.1156914234161377
    6. 'the' → logprob: -3.2406914234161377
    7. 'la' → logprob: -3.6156914234161377
    8. ' les' → logprob: -3.7406914234161377
    9. 'X' → logprob: -4.115691184997559
    10. 'only' → logprob: -4.240691184997559

Token 705: ' alt' (ID: 5001)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6429929733276367
    2. 'alt' → logprob: -1.3929929733276367
    3. 'interval' → logprob: -3.0179929733276367
    4. 'A' → logprob: -3.6429929733276367
    5. 'updates' → logprob: -3.8929929733276367
    6. 'aj' → logprob: -4.017992973327637
    7. 'X' → logprob: -4.392992973327637
    8. 'diff' → logprob: -4.767992973327637
    9. 'inter' → logprob: -4.767992973327637
    10. 'indices' → logprob: -4.892992973327637

Token 706: 'itudes' (ID: 25642)
  Prédit: 'itudes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itudes' → logprob: -0.12183812260627747
    2. 'itude' → logprob: -2.371838092803955
    3. 'A' → logprob: -4.371838092803955
    4. '=' → logprob: -5.746838092803955
    5. 't' → logprob: -6.746838092803955
    6. '=A' → logprob: -7.371838092803955
    7. 'L' → logprob: -7.496838092803955
    8. '=[]' → logprob: -7.996838092803955
    9. 's' → logprob: -7.996838092803955
    10. 'itud' → logprob: -7.996838092803955

Token 707: ' sont' (ID: 5242)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.4430658221244812
    2. 'diff' → logprob: -1.943065881729126
    3. '<|end|>' → logprob: -2.443065881729126
    4. '[' → logprob: -2.818065881729126
    5. ' are' → logprob: -4.068065643310547
    6. ')' → logprob: -5.443065643310547
    7. 's' → logprob: -5.568065643310547
    8. '[i' → logprob: -5.818065643310547
    9. ' +=' → logprob: -5.818065643310547
    10. 'L' → logprob: -5.943065643310547

Token 708: ' directement' (ID: 52317)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.2597668170928955
    2. 'initial' → logprob: -1.8847668170928955
    3. 'const' → logprob: -2.1347668170928955
    4. 'mon' → logprob: -2.2597668170928955
    5. 'immut' → logprob: -2.6347668170928955
    6. 'non' → logprob: -2.8847668170928955
    7. 'mod' → logprob: -3.2597668170928955
    8. 'stock' → logprob: -3.3847668170928955
    9. ' constantes' → logprob: -3.8847668170928955
    10. 'immutable' → logprob: -3.8847668170928955

Token 709: ' lus' (ID: 54762)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.29694664478302
    2. 'modifiable' → logprob: -1.79694664478302
    3. 'stock' → logprob: -2.9219465255737305
    4. ' mod' → logprob: -4.5469465255737305
    5. 'A' → logprob: -4.7969465255737305
    6. 'aff' → logprob: -5.4219465255737305
    7. 'augment' → logprob: -6.5469465255737305
    8. ' stock' → logprob: -6.6719465255737305
    9. 'import' → logprob: -6.7969465255737305
    10. 'access' → logprob: -7.4219465255737305

Token 710: ' (' (ID: 350)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.9295492768287659
    2. 'diff' → logprob: -1.304549217224121
    3. 'A' → logprob: -2.304549217224121
    4. '   ' → logprob: -2.554549217224121
    5. 'for' → logprob: -2.554549217224121
    6. 'offset' → logprob: -4.054549217224121
    7. ' for' → logprob: -4.054549217224121
    8. ' delta' → logprob: -4.179549217224121
    9. ' A' → logprob: -5.179549217224121
    10. '#' → logprob: -5.554549217224121

Token 711: 'ne' (ID: 611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.611241340637207
    2. 'from' → logprob: -2.111241340637207
    3. ' )' → logprob: -2.486241340637207
    4. 'A' → logprob: -2.861241340637207
    5. '),' → logprob: -3.611241340637207
    6. 'for' → logprob: -3.861241340637207
    7. '#' → logprob: -4.361241340637207
    8. 'import' → logprob: -4.611241340637207
    9. 'et' → logprob: -4.611241340637207
    10. 'input' → logprob: -4.736241340637207

Token 712: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.46811968088150024
    2. 'cess' → logprob: -1.9681196212768555
    3. 's' → logprob: -2.7181196212768555
    4. ' pas' → logprob: -3.4681196212768555
    5. '#' → logprob: -3.8431196212768555
    6. 'import' → logprob: -3.9681196212768555
    7. 'ed' → logprob: -4.4681196212768555
    8. 'A' → logprob: -4.8431196212768555
    9. 'pe' → logprob: -4.8431196212768555
    10. '_pas' → logprob: -4.8431196212768555

Token 713: ' faire' (ID: 8119)
  Prédit: 'modifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'modifier' → logprob: -0.4270459711551666
    2. 'mod' → logprob: -2.427046060562134
    3. 'print' → logprob: -2.927046060562134
    4. 'mettre' → logprob: -3.427046060562134
    5. 'A' → logprob: -3.677046060562134
    6. 'modify' → logprob: -4.177045822143555
    7. '```' → logprob: -4.302045822143555
    8. 'for' → logprob: -4.552045822143555
    9. 'pas' → logprob: -4.552045822143555
    10. ' modifier' → logprob: -4.677045822143555

Token 714: ' lazy' (ID: 29082)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8587071895599365
    2. 'pas' → logprob: -1.8587071895599365
    3. 'd' → logprob: -2.1087071895599365
    4. 'diff' → logprob: -2.9837071895599365
    5. 'import' → logprob: -3.1087071895599365
    6. 'A' → logprob: -3.3587071895599365
    7. 'plus' → logprob: -3.7337071895599365
    8. 'l' → logprob: -4.483707427978516
    9. 'mod' → logprob: -4.483707427978516
    10. 'un' → logprob: -4.733707427978516

Token 715: ')
' (ID: 446)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6298438906669617
    2. '_A' → logprob: -2.0048439502716064
    3. ' A' → logprob: -2.1298439502716064
    4. ' +=' → logprob: -2.3798439502716064
    5. '_' → logprob: -3.3798439502716064
    6. '_update' → logprob: -4.004843711853027
    7. ')' → logprob: -4.504843711853027
    8. '_add' → logprob: -4.629843711853027
    9. '+=' → logprob: -4.754843711853027
    10. 'diff' → logprob: -5.004843711853027

Token 716: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3668391704559326
    2. 'delta' → logprob: -1.6168391704559326
    3. 'A' → logprob: -3.3668391704559326
    4. ' for' → logprob: -3.3668391704559326
    5. '   ' → logprob: -4.116839408874512
    6. 'diff' → logprob: -4.491839408874512
    7. 'offset' → logprob: -5.366839408874512
    8. '#' → logprob: -6.241839408874512
    9. ' delta' → logprob: -6.741839408874512
    10. ' A' → logprob: -7.241839408874512

Token 717: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5232901573181152
    2. 'delta' → logprob: -1.2732901573181152
    3. 'diff' → logprob: -3.5232901573181152
    4. ' for' → logprob: -3.5232901573181152
    5. '#' (adapté à ' #') → logprob: -4.148290157318115
    6. 'offset' → logprob: -4.273290157318115
    7. 'if' → logprob: -4.523290157318115
    8. 'A' → logprob: -4.523290157318115
    9. ' delta' → logprob: -5.523290157318115
    10. '   ' → logprob: -5.648290157318115

Token 718: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01090893056243658
    2. 'delta' → logprob: -4.885909080505371
    3. 'diff' → logprob: -6.635909080505371
    4. ' for' → logprob: -7.260909080505371
    5. 'offset' → logprob: -7.510909080505371
    6. 'i' → logprob: -8.510909080505371
    7. '#' → logprob: -8.760909080505371
    8. 'A' → logprob: -9.010909080505371
    9. '   ' → logprob: -9.760909080505371
    10. 'add' → logprob: -10.635909080505371

Token 719: ' seule' (ID: 41983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23004111647605896
    2. '#' → logprob: -1.9800411462783813
    3. 'from' → logprob: -3.855041027069092
    4. 'import' → logprob: -4.230041027069092
    5. ' for' → logprob: -4.355041027069092
    6. 'diff' → logprob: -4.855041027069092
    7. 'A' → logprob: -6.230041027069092
    8. 'temp' → logprob: -7.105041027069092
    9. 'delta' → logprob: -7.230041027069092
    10. 'pass' → logprob: -7.230041027069092

Token 720: ' façon' (ID: 33381)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05281747877597809
    2. ' for' → logprob: -3.0528175830841064
    3. 'A' → logprob: -6.052817344665527
    4. 'X' → logprob: -8.177817344665527
    5. '   ' → logprob: -8.427817344665527
    6. 'delta' → logprob: -8.552817344665527
    7. 'L' → logprob: -8.677817344665527
    8. ' A' → logprob: -8.927817344665527
    9. 'diff' → logprob: -8.927817344665527
    10. 'd' → logprob: -9.302817344665527

Token 721: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5939916968345642
    2. ':' → logprob: -1.343991756439209
    3. 'A' → logprob: -2.468991756439209
    4. 'for' → logprob: -2.843991756439209
    5. ' for' → logprob: -4.843991756439209
    6. '    ' → logprob: -5.593991756439209
    7. '=' → logprob: -5.593991756439209
    8. 'to' → logprob: -6.093991756439209
    9. ',' → logprob: -6.218991756439209
    10. '       ' → logprob: -6.343991756439209

Token 722: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1526069641113281
    2. 'd' → logprob: -1.4026069641113281
    3. '   ' → logprob: -2.152606964111328
    4. ' d' → logprob: -2.152606964111328
    5. 'de' → logprob: -2.402606964111328
    6. ' de' → logprob: -2.652606964111328
    7. 'A' → logprob: -4.277606964111328
    8. 'import' → logprob: -4.652606964111328
    9. ' for' → logprob: -5.027606964111328
    10. '    ' → logprob: -5.652606964111328

Token 723: ' stock' (ID: 6546)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6517623066902161
    2. 'for' → logprob: -1.5267622470855713
    3. 'A' → logprob: -2.0267622470855713
    4. 'from' → logprob: -2.6517622470855713
    5. 'continue' → logprob: -4.77676248550415
    6. 'pass' → logprob: -5.02676248550415
    7. '#' → logprob: -5.02676248550415
    8. 'mettre' → logprob: -5.40176248550415
    9. 'contin' → logprob: -5.40176248550415
    10. 'print' → logprob: -5.65176248550415

Token 724: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0010774685069918633
    2. 'A' → logprob: -7.001077651977539
    3. 'e' → logprob: -9.626077651977539
    4. '=' → logprob: -10.501077651977539
    5. '=A' → logprob: -10.876077651977539
    6. 'é' → logprob: -11.376077651977539
    7. ' A' → logprob: -11.751077651977539
    8. 'def' → logprob: -12.126077651977539
    9. '[' → logprob: -12.501077651977539
    10. '#' → logprob: -12.626077651977539

Token 725: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9100325703620911
    2. 'diff' → logprob: -1.2850325107574463
    3. 'A' → logprob: -2.4100325107574463
    4. 'offset' → logprob: -2.6600325107574463
    5. 'un' → logprob: -3.1600325107574463
    6. 'delta' → logprob: -3.7850325107574463
    7. 'dif' → logprob: -3.9100325107574463
    8. 'les' → logprob: -4.035032749176025
    9. 'increments' → logprob: -4.410032749176025
    10. ' un' → logprob: -5.035032749176025

Token 726: ' alt' (ID: 5001)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19064414501190186
    2. 'diff' → logprob: -1.9406441450119019
    3. 'delta' → logprob: -4.440644264221191
    4. 'offset' → logprob: -4.565644264221191
    5. 'increments' → logprob: -5.690644264221191
    6. 'lazy' → logprob: -6.440644264221191
    7. 'dif' → logprob: -6.565644264221191
    8. 'mod' → logprob: -7.440644264221191
    9. 'updates' → logprob: -8.315644264221191
    10. 'dé' → logprob: -8.940644264221191

Token 727: 'itudes' (ID: 25642)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3404127359390259
    2. 't' → logprob: -3.2154126167297363
    3. '   ' → logprob: -3.2154126167297363
    4. 'ts' → logprob: -3.2154126167297363
    5. 'tas' → logprob: -3.7154126167297363
    6. 'itudes' → logprob: -3.8404126167297363
    7. 's' → logprob: -3.9654126167297363
    8. 'delta' → logprob: -4.340412616729736
    9. '=A' → logprob: -4.715412616729736
    10. '[' → logprob: -4.840412616729736

Token 728: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3509621024131775
    2. ' for' → logprob: -1.2259621620178223
    3. '   ' → logprob: -6.850962162017822
    4. '<|end|>' → logprob: -7.725962162017822
    5. 'diff' → logprob: -8.475961685180664
    6. '#' → logprob: -8.975961685180664
    7. 'delta' → logprob: -9.225961685180664
    8. '	for' → logprob: -9.350961685180664
    9. '+' → logprob: -9.975961685180664
    10. '=' → logprob: -10.100961685180664

Token 729: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23386038839817047
    2. ' for' → logprob: -1.6088603734970093
    3. 'A' → logprob: -5.858860492706299
    4. ' A' → logprob: -6.858860492706299
    5. 'and' → logprob: -6.858860492706299
    6. ' and' → logprob: -7.358860492706299
    7. 'import' → logprob: -7.608860492706299
    8. 'delta' → logprob: -7.983860492706299
    9. 'diff' → logprob: -8.10886001586914
    10. 'et' → logprob: -8.48386001586914

Token 730: ' ici' (ID: 27994)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.610755443572998
    2. '#' → logprob: -1.485755443572998
    3. 'for' → logprob: -2.360755443572998
    4. 'A' → logprob: -3.610755443572998
    5. ' for' → logprob: -3.610755443572998
    6. '...' → logprob: -3.735755443572998
    7. 'continue' → logprob: -4.360755443572998
    8. ' on' → logprob: -4.985755443572998
    9. 'contin' → logprob: -4.985755443572998
    10. 'from' → logprob: -5.235755443572998

Token 731: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0250909328460693
    2. 'import' → logprob: -1.4000909328460693
    3. ' for' → logprob: -2.1500909328460693
    4. 'for' → logprob: -2.2750909328460693
    5. '   ' → logprob: -3.0250909328460693
    6. 'diff' → logprob: -3.0250909328460693
    7. 'A' → logprob: -3.6500909328460693
    8. 'from' → logprob: -4.150091171264648
    9. ' #' → logprob: -5.150091171264648
    10. 'continue' → logprob: -5.275091171264648

Token 732: ' va' (ID: 3423)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.075115442276001
    2. ' can' → logprob: -1.950115442276001
    3. ' peux' → logprob: -2.325115442276001
    4. 'for' → logprob: -2.575115442276001
    5. '<|end|>' → logprob: -2.950115442276001
    6. ' for' → logprob: -3.575115442276001
    7. ' n' → logprob: -3.575115442276001
    8. ' continue' → logprob: -3.700115442276001
    9. 'A' → logprob: -3.825115442276001
    10. 's' → logprob: -4.200115203857422

Token 733: ' faire' (ID: 8119)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.081241175532341
    2. 'util' → logprob: -3.7062411308288574
    3. 'import' → logprob: -4.081241130828857
    4. ' stock' → logprob: -5.081241130828857
    5. ' appliquer' → logprob: -5.581241130828857
    6. ' sim' → logprob: -5.831241130828857
    7. 'stock' → logprob: -5.956241130828857
    8. ' continuer' → logprob: -6.081241130828857
    9. 'sim' → logprob: -6.206241130828857
    10. 'b' → logprob: -6.206241130828857

Token 734: ' une' (ID: 2463)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5597755312919617
    2. 'for' → logprob: -1.0597755908966064
    3. 'diff' → logprob: -3.4347755908966064
    4. 'pass' → logprob: -4.309775352478027
    5. 'L' → logprob: -5.059775352478027
    6. ' for' → logprob: -5.309775352478027
    7. ' A' → logprob: -5.684775352478027
    8. 'import' → logprob: -5.809775352478027
    9. 'delta' → logprob: -5.809775352478027
    10. ' une' → logprob: -6.059775352478027

Token 735: ' approche' (ID: 102373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7726022005081177
    2. 'diff' → logprob: -1.0226022005081177
    3. 'difference' → logprob: -3.022602081298828
    4. 'from' → logprob: -3.522602081298828
    5. 'segment' → logprob: -3.647602081298828
    6. 'd' → logprob: -4.272602081298828
    7. 'delta' → logprob: -4.397602081298828
    8. ' segment' → logprob: -4.522602081298828
    9. 'pass' → logprob: -4.897602081298828
    10. 'range' → logprob: -4.897602081298828

Token 736: ' différente' (ID: 140707)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4215541481971741
    2. 'from' → logprob: -2.1715540885925293
    3. 'A' → logprob: -3.1715540885925293
    4. 'import' → logprob: -3.5465540885925293
    5. 'difference' → logprob: -3.6715540885925293
    6. 'd' → logprob: -3.7965540885925293
    7. ' segment' → logprob: -4.171554088592529
    8. 'offset' → logprob: -4.171554088592529
    9. 'delta' → logprob: -4.171554088592529
    10. ' diff' → logprob: -4.296554088592529

Token 737: '

' (ID: 279)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.6019221544265747
    2. 'diff' → logprob: -1.3519221544265747
    3. 'A' → logprob: -3.101922035217285
    4. 'if' → logprob: -3.101922035217285
    5. 'offset' → logprob: -3.726922035217285
    6. '#' → logprob: -4.226922035217285
    7. ' delta' → logprob: -4.351922035217285
    8. 'continue' → logprob: -4.601922035217285
    9. 'import' → logprob: -4.726922035217285
    10. 'd' → logprob: -5.101922035217285

Token 738: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9082759618759155
    2. 'delta' → logprob: -1.1582759618759155
    3. 'from' → logprob: -2.533276081085205
    4. 'if' → logprob: -3.033276081085205
    5. 'diff' → logprob: -3.033276081085205
    6. 'import' → logprob: -3.533276081085205
    7. '   ' → logprob: -3.658276081085205
    8. 'A' → logprob: -3.908276081085205
    9. 'continue' → logprob: -4.908276081085205
    10. 'offset' → logprob: -5.033276081085205

Token 739: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4484603703022003
    2. 'for' → logprob: -2.448460340499878
    3. 'delta' → logprob: -2.573460340499878
    4. 'A' → logprob: -2.698460340499878
    5. 'if' → logprob: -2.948460340499878
    6. 'diff' → logprob: -3.698460340499878
    7. 'print' → logprob: -4.073460578918457
    8. 'offset' → logprob: -4.698460578918457
    9. 'from' → logprob: -4.823460578918457
    10. 'pass' → logprob: -5.448460578918457

Token 740: ' Appro' (ID: 24145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.216583251953125
    2. 'diff' → logprob: -1.466583251953125
    3. 'delta' → logprob: -1.591583251953125
    4. 'A' → logprob: -1.966583251953125
    5. 'offset' → logprob: -3.216583251953125
    6. 'from' → logprob: -3.341583251953125
    7. '#' → logprob: -4.216583251953125
    8. 'import' → logprob: -4.591583251953125
    9. 'd' → logprob: -4.841583251953125
    10. 'B' → logprob: -5.591583251953125

Token 741: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.2776814103126526
    2. 'ach' → logprob: -1.5276813507080078
    3. 'ch' → logprob: -4.027681350708008
    4. 'x' → logprob: -5.652681350708008
    5. '#' → logprob: -6.152681350708008
    6. '   ' → logprob: -6.652681350708008
    7. 'fond' → logprob: -9.152681350708008
    8. 'cher' → logprob: -9.277681350708008
    9. 'ches' → logprob: -9.527681350708008
    10. 'xim' → logprob: -9.652681350708008

Token 742: ' alternative' (ID: 13319)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8008064031600952
    2. 'delta' → logprob: -1.4258064031600952
    3. '#' → logprob: -2.4258065223693848
    4. 'A' → logprob: -2.8008065223693848
    5. '   ' → logprob: -2.9258065223693848
    6. 'offset' → logprob: -4.175806522369385
    7. 'import' → logprob: -4.175806522369385
    8. ' delta' → logprob: -4.300806522369385
    9. 'd' → logprob: -4.925806522369385
    10. ' =' → logprob: -5.050806522369385

Token 743: ':
' (ID: 734)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -1.0785343647003174
    2. '#' → logprob: -1.7035343647003174
    3. 'diff' → logprob: -1.7035343647003174
    4. 'if' → logprob: -2.4535343647003174
    5. '   ' → logprob: -2.7035343647003174
    6. 'A' → logprob: -2.8285343647003174
    7. 'for' → logprob: -4.078534126281738
    8. ' if' → logprob: -4.203534126281738
    9. 'offset' → logprob: -4.328534126281738
    10. ' delta' → logprob: -4.578534126281738

Token 744: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.745517909526825
    2. 'A' → logprob: -2.1205179691314697
    3. 'if' → logprob: -2.1205179691314697
    4. 'delta' → logprob: -2.3705179691314697
    5. ' if' → logprob: -3.3705179691314697
    6. 'diff' → logprob: -3.4955179691314697
    7. ' A' → logprob: -3.8705179691314697
    8. ' #' → logprob: -3.8705179691314697
    9. ' delta' → logprob: -3.9955179691314697
    10. 'offset' → logprob: -4.245517730712891

Token 745: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.26077625155448914
    2. 'if' → logprob: -2.2607762813568115
    3. 'A' → logprob: -2.7607762813568115
    4. 'delta' → logprob: -3.3857762813568115
    5. 'diff' → logprob: -4.635776042938232
    6. 'offset' → logprob: -5.135776042938232
    7. 'for' → logprob: -5.385776042938232
    8. 'from' → logprob: -6.260776042938232
    9. 'print' → logprob: -6.635776042938232
    10. 'D' → logprob: -6.760776042938232

Token 746: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21372215449810028
    2. 'delta' → logprob: -2.7137222290039062
    3. 'diff' → logprob: -3.4637222290039062
    4. 'offset' → logprob: -3.9637222290039062
    5. 'from' → logprob: -4.088722229003906
    6. 'continue' → logprob: -4.213722229003906
    7. 'pass' → logprob: -4.713722229003906
    8. 'import' → logprob: -4.713722229003906
    9. 'A' → logprob: -4.838722229003906
    10. 'if' → logprob: -4.838722229003906

Token 747: ' garde' (ID: 65309)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.27365216612815857
    2. 'g' → logprob: -2.7736520767211914
    3. 'pe' → logprob: -3.2736520767211914
    4. 'va' → logprob: -3.3986520767211914
    5. 'stock' → logprob: -3.6486520767211914
    6. 'continue' → logprob: -3.8986520767211914
    7. 'aj' → logprob: -4.523652076721191
    8. ' utilise' → logprob: -4.898652076721191
    9. '#' → logprob: -5.648652076721191
    10. 'cr' → logprob: -5.773652076721191

Token 748: ' les' (ID: 1341)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.43257641792297363
    2. ' un' → logprob: -1.9325764179229736
    3. 'diff' → logprob: -1.9325764179229736
    4. 'delta' → logprob: -3.8075764179229736
    5. ' une' → logprob: -4.1825761795043945
    6. 'une' → logprob: -4.3075761795043945
    7. 'offset' → logprob: -5.9325761795043945
    8. 'd' → logprob: -6.1825761795043945
    9. 'a' → logprob: -6.8075761795043945
    10. 'A' → logprob: -6.8075761795043945

Token 749: ' alt' (ID: 5001)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8738256692886353
    2. 'diff' → logprob: -0.8738256692886353
    3. 'offset' → logprob: -2.4988255500793457
    4. 'delta' → logprob: -2.6238255500793457
    5. 'increments' → logprob: -5.873825550079346
    6. 'dif' → logprob: -6.123825550079346
    7. 'lazy' → logprob: -6.248825550079346
    8. '#' → logprob: -6.623825550079346
    9. 'changes' → logprob: -7.623825550079346
    10. 'de' → logprob: -7.748825550079346

Token 750: 'itudes' (ID: 25642)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0470709800720215
    2. 's' → logprob: -1.5470709800720215
    3. '=A' → logprob: -1.6720709800720215
    4. 'itudes' → logprob: -2.2970709800720215
    5. '=[' → logprob: -3.0470709800720215
    6. '=' → logprob: -3.1720709800720215
    7. 't' → logprob: -4.2970709800720215
    8. '=[]' → logprob: -5.0470709800720215
    9. 'itude' → logprob: -5.4220709800720215
    10. 'tas' → logprob: -5.4220709800720215

Token 751: ' dans' (ID: 2671)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3297196626663208
    2. '<|end|>' → logprob: -2.4547195434570312
    3. '_diff' → logprob: -3.2047195434570312
    4. 'delta' → logprob: -3.5797195434570312
    5. 'dif' → logprob: -3.7047195434570312
    6. 'd' → logprob: -3.9547195434570312
    7. 'A' → logprob: -4.454719543457031
    8. '[L' → logprob: -4.704719543457031
    9. 'increments' → logprob: -4.954719543457031
    10. '[' → logprob: -5.079719543457031

Token 752: ' un' (ID: 537)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.042470693588256836
    2. 'diff' → logprob: -4.292470932006836
    3. 'une' → logprob: -4.542470932006836
    4. 'un' → logprob: -4.917470932006836
    5. 'dif' → logprob: -5.542470932006836
    6. 'delta' → logprob: -6.417470932006836
    7. 'd' → logprob: -6.542470932006836
    8. '[' → logprob: -7.042470932006836
    9. 'a' → logprob: -7.417470932006836
    10. '[A' → logprob: -7.667470932006836

Token 753: ' tableau' (ID: 67053)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.38318976759910583
    2. 'delta' → logprob: -1.6331897974014282
    3. 'd' → logprob: -2.8831896781921387
    4. 'offset' → logprob: -3.1331896781921387
    5. 'dif' → logprob: -5.133189678192139
    6. 'segment' → logprob: -5.258189678192139
    7. 'difference' → logprob: -5.258189678192139
    8. 'array' → logprob: -5.633189678192139
    9. 'lazy' → logprob: -7.508189678192139
    10. 'import' → logprob: -7.633189678192139

Token 754: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6647304892539978
    2. 'delta' → logprob: -1.2897305488586426
    3. 'offset' → logprob: -1.7897305488586426
    4. 'B' → logprob: -4.039730548858643
    5. 'de' → logprob: -4.664730548858643
    6. 'd' → logprob: -5.289730548858643
    7. 'D' → logprob: -5.539730548858643
    8. 'A' → logprob: -6.414730548858643
    9. ' delta' → logprob: -6.789730548858643
    10. 'increments' → logprob: -6.789730548858643

Token 755: ' on' (ID: 402)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7956129908561707
    2. 'delta' → logprob: -1.0456130504608154
    3. 'offset' → logprob: -2.6706130504608154
    4. 'for' → logprob: -3.4206130504608154
    5. 'A' → logprob: -3.5456130504608154
    6. '#' → logprob: -4.045612812042236
    7. 'B' → logprob: -4.545612812042236
    8. 'd' → logprob: -4.545612812042236
    9. 'prefix' → logprob: -5.545612812042236
    10. 'D' → logprob: -5.670612812042236

Token 756: ' applique' (ID: 180579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1975060999393463
    2. '#' → logprob: -2.6975061893463135
    3. 'continue' → logprob: -3.8225061893463135
    4. 'diff' → logprob: -3.8225061893463135
    5. ' for' → logprob: -3.9475061893463135
    6. 'contin' → logprob: -4.447505950927734
    7. 'aj' → logprob: -4.822505950927734
    8. 'import' → logprob: -4.822505950927734
    9. 'range' → logprob: -5.447505950927734
    10. 's' → logprob: -6.447505950927734

Token 757: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3658920228481293
    2. 'X' → logprob: -2.490891933441162
    3. 'diff' → logprob: -2.740891933441162
    4. 'l' → logprob: -3.240891933441162
    5. 'delta' → logprob: -3.490891933441162
    6. 'L' → logprob: -3.865891933441162
    7. ' A' → logprob: -4.240891933441162
    8. '   ' → logprob: -4.865891933441162
    9. ' la' → logprob: -5.115891933441162
    10. ' un' → logprob: -5.115891933441162

Token 758: ' modification' (ID: 29847)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.6514874696731567
    2. 'diff' → logprob: -1.5264874696731567
    3. 'X' → logprob: -2.651487350463867
    4. 'offset' → logprob: -2.776487350463867
    5. 'difference' → logprob: -3.526487350463867
    6. ' delta' → logprob: -3.651487350463867
    7. 'd' → logprob: -3.776487350463867
    8. 'A' → logprob: -4.151487350463867
    9. 'for' → logprob: -4.401487350463867
    10. 'lazy' → logprob: -5.026487350463867

Token 759: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08255898952484131
    2. ' for' → logprob: -2.582559108734131
    3. '   ' → logprob: -6.332559108734131
    4. 'diff' → logprob: -6.957559108734131
    5. '[L' → logprob: -8.332558631896973
    6. '
' → logprob: -8.957558631896973
    7. 'delta' → logprob: -9.582558631896973
    8. ' =' → logprob: -9.832558631896973
    9. '=' → logprob: -9.957558631896973
    10. '	for' → logprob: -10.207558631896973

Token 760: ' un' (ID: 537)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04983241483569145
    2. 'L' → logprob: -3.549832344055176
    3. 'diff' → logprob: -4.549832344055176
    4. 'l' → logprob: -6.174832344055176
    5. ' A' → logprob: -6.174832344055176
    6. 'un' → logprob: -6.924832344055176
    7. 'difference' → logprob: -7.549832344055176
    8. 'une' → logprob: -7.674832344055176
    9. 'lazy' → logprob: -7.799832344055176
    10. '```' → logprob: -8.049832344055176

Token 761: ' buffer' (ID: 8573)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9386026263237
    2. 'delta' → logprob: -1.6886026859283447
    3. 'offset' → logprob: -1.9386026859283447
    4. 'difference' → logprob: -2.0636026859283447
    5. 'de' → logprob: -3.1886026859283447
    6. 'd' → logprob: -3.1886026859283447
    7. 'lazy' → logprob: -3.9386026859283447
    8. 'segment' → logprob: -4.688602447509766
    9. ' segment' → logprob: -5.313602447509766
    10. ' delta' → logprob: -5.438602447509766

Token 762: ' de' (ID: 334)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9947088956832886
    2. '_offsets' → logprob: -1.6197088956832886
    3. '_diff' → logprob: -2.119709014892578
    4. '_delta' → logprob: -2.369709014892578
    5. ' =' → logprob: -2.494709014892578
    6. 'delta' → logprob: -3.369709014892578
    7. '_add' → logprob: -4.369709014892578
    8. 's' → logprob: -4.494709014892578
    9. 'de' → logprob: -4.869709014892578
    10. '_offset' → logprob: -4.994709014892578

Token 763: ' dé' (ID: 2393)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6843917369842529
    2. 'd' → logprob: -1.059391736984253
    3. 'delta' → logprob: -2.934391736984253
    4. 'lazy' → logprob: -3.934391736984253
    5. 'dé' → logprob: -3.934391736984253
    6. 'offset' → logprob: -4.434391975402832
    7. 'dif' → logprob: -4.559391975402832
    8. '0' → logprob: -4.559391975402832
    9. 'de' → logprob: -5.684391975402832
    10. 'l' → logprob: -5.684391975402832

Token 764: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.005700534675270319
    2. 'l' → logprob: -5.255700588226318
    3. 'lai' → logprob: -9.00570011138916
    4. 'cale' → logprob: -9.88070011138916
    5. 'f' → logprob: -10.00570011138916
    6. 'placement' → logprob: -10.38070011138916
    7. 'lé' → logprob: -10.50570011138916
    8. 'la' → logprob: -10.63070011138916
    9. 'diff' → logprob: -10.75570011138916
    10. 'lap' → logprob: -10.88070011138916

Token 765: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.35674574971199036
    2. '   ' → logprob: -1.606745719909668
    3. 'tage' → logprob: -2.606745719909668
    4. ' ' → logprob: -5.106745719909668
    5. 't' → logprob: -5.481745719909668
    6. '  ' → logprob: -5.856745719909668
    7. '       ' → logprob: -6.481745719909668
    8. 'ement' → logprob: -6.481745719909668
    9. '    ' → logprob: -7.356745719909668
    10. '     ' → logprob: -7.356745719909668

Token 766: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3562662601470947
    2. 'delta' → logprob: -1.7312662601470947
    3. ' delta' → logprob: -3.1062662601470947
    4. 'offset' → logprob: -3.3562662601470947
    5. ' diff' → logprob: -4.231266021728516
    6. ' =' → logprob: -5.356266021728516
    7. '<|end|>' → logprob: -5.606266021728516
    8. 'A' → logprob: -5.731266021728516
    9. '_offsets' → logprob: -6.481266021728516
    10. 'increments' → logprob: -6.481266021728516

Token 767: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.6832243800163269
    2. 'diff' → logprob: -1.3082244396209717
    3. 'offset' → logprob: -1.6832244396209717
    4. ' delta' → logprob: -3.8082244396209717
    5. 'd' → logprob: -5.683224201202393
    6. 'A' → logprob: -5.933224201202393
    7. '<|end|>' → logprob: -6.308224201202393
    8. 'increments' → logprob: -6.808224201202393
    9. 'D' → logprob: -6.933224201202393
    10. ' diff' → logprob: -7.308224201202393

Token 768: ' #' (ID: 1069)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5682903528213501
    2. 'offset' → logprob: -1.81829035282135
    3. ' delta' → logprob: -1.94329035282135
    4. 'diff' → logprob: -2.6932902336120605
    5. 'if' → logprob: -3.9432902336120605
    6. ' if' → logprob: -4.1932902336120605
    7. '   ' → logprob: -4.8182902336120605
    8. ' offset' → logprob: -5.5682902336120605
    9. ' diff' → logprob: -6.4432902336120605
    10. 'A' → logprob: -6.5682902336120605

Token 769: ' Pr' (ID: 2284)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5270792245864868
    2. 'offset' → logprob: -1.1520792245864868
    3. 'diff' → logprob: -3.5270791053771973
    4. 'if' → logprob: -3.7770791053771973
    5. ' delta' → logprob: -4.277079105377197
    6. 'A' → logprob: -5.027079105377197
    7. 'buffer' → logprob: -5.527079105377197
    8. 'B' → logprob: -5.777079105377197
    9. '#' → logprob: -6.027079105377197
    10. 'D' → logprob: -6.027079105377197

Token 770: 'endre' (ID: 9574)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.03113291785120964
    2. 'int' → logprob: -4.906132698059082
    3. 'éf' → logprob: -4.906132698059082
    4. 'efs' → logprob: -5.031132698059082
    5. 'e' → logprob: -6.156132698059082
    6. 'é' → logprob: -6.281132698059082
    7. 'es' → logprob: -6.656132698059082
    8. 'eff' → logprob: -6.781132698059082
    9. '#' → logprob: -7.281132698059082
    10. 'ec' → logprob: -8.281132698059082

Token 771: ' en' (ID: 469)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6596983671188354
    2. 'delta' → logprob: -2.284698486328125
    3. 'offset' → logprob: -2.659698486328125
    4. 'prefix' → logprob: -2.909698486328125
    5. ' delta' → logprob: -3.034698486328125
    6. '_' → logprob: -3.159698486328125
    7. ' diff' → logprob: -3.284698486328125
    8. 'difference' → logprob: -4.034698486328125
    9. 'lazy' → logprob: -4.284698486328125
    10. ' prefix' → logprob: -4.784698486328125

Token 772: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.024308422580361366
    2. 'account' → logprob: -4.399308204650879
    3. ' compte' → logprob: -4.649308204650879
    4. 'count' → logprob: -6.399308204650879
    5. 'charge' → logprob: -7.899308204650879
    6. 'consider' → logprob: -9.774308204650879
    7. 'com' → logprob: -11.149308204650879
    8. 'counter' → logprob: -11.399308204650879
    9. '```' → logprob: -11.524308204650879
    10. 'import' → logprob: -12.274308204650879

Token 773: ' dé' (ID: 2393)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8252854347229004
    2. 'offset' → logprob: -1.7002854347229004
    3. 'A' → logprob: -2.2002854347229004
    4. '#' → logprob: -2.8252854347229004
    5. 'delta' → logprob: -3.3252854347229004
    6. ' la' → logprob: -3.9502854347229004
    7. ' un' → logprob: -4.2002854347229
    8. 'import' → logprob: -4.2002854347229
    9. 'un' → logprob: -4.4502854347229
    10. 'l' → logprob: -4.4502854347229

Token 774: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.06064872443675995
    2. 'l' → logprob: -2.9356486797332764
    3. 'la' → logprob: -6.6856489181518555
    4. 'f' → logprob: -7.0606489181518555
    5. 'lé' → logprob: -7.1856489181518555
    6. 'lac' → logprob: -7.5606489181518555
    7. 'lai' → logprob: -7.6856489181518555
    8. '```' → logprob: -7.8106489181518555
    9. 'lais' → logprob: -8.185648918151855
    10. 'lay' → logprob: -8.310648918151855

Token 775: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.010910934768617153
    2. 'ages' → logprob: -5.385910987854004
    3. 'tage' → logprob: -5.635910987854004
    4. '   ' → logprob: -6.260910987854004
    5. ' ' → logprob: -8.135910987854004
    6. 'o' → logprob: -9.260910987854004
    7. '  ' → logprob: -9.635910987854004
    8. '
' → logprob: -10.385910987854004
    9. 'e' → logprob: -10.510910987854004
    10. 'offset' → logprob: -10.510910987854004

Token 776: ' de' (ID: 334)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5988889336585999
    2. ' =' → logprob: -1.723888874053955
    3. 'delta' → logprob: -2.598888874053955
    4. 'offset' → logprob: -2.848888874053955
    5. '=' → logprob: -3.223888874053955
    6. ' delta' → logprob: -4.223888874053955
    7. '[' → logprob: -4.348888874053955
    8. ' diff' → logprob: -4.473888874053955
    9. '_offsets' → logprob: -4.848888874053955
    10. ' +=' → logprob: -4.973888874053955

Token 777: ' chaque' (ID: 21194)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6829761266708374
    2. 'interval' → logprob: -1.8079761266708374
    3. 'diff' → logprob: -2.682976245880127
    4. 'l' → logprob: -2.932976245880127
    5. 'positions' → logprob: -3.182976245880127
    6. 'A' → logprob: -3.307976245880127
    7. 'lazy' → logprob: -3.807976245880127
    8. 'segments' → logprob: -4.057976245880127
    9. 'segment' → logprob: -4.557976245880127
    10. 'range' → logprob: -4.932976245880127

Token 778: ' position' (ID: 4010)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9680540561676025
    2. 'position' → logprob: -1.4680540561676025
    3. 'indice' → logprob: -1.4680540561676025
    4. 'segment' → logprob: -2.7180540561676025
    5. 'interval' → logprob: -2.8430540561676025
    6. 'point' → logprob: -4.843053817749023
    7. ' segment' → logprob: -4.968053817749023
    8. ' position' → logprob: -5.468053817749023
    9. 'élé' → logprob: -5.843053817749023
    10. ' index' → logprob: -6.468053817749023

Token 779: ' avec' (ID: 3937)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5400829315185547
    2. 'offset' → logprob: -1.1650829315185547
    3. 'diff' → logprob: -2.9150829315185547
    4. ' delta' → logprob: -3.5400829315185547
    5. 'd' → logprob: -5.665082931518555
    6. 'A' → logprob: -5.915082931518555
    7. ' offsets' → logprob: -6.040082931518555
    8. 'de' → logprob: -6.165082931518555
    9. 'shift' → logprob: -6.665082931518555
    10. 'if' → logprob: -6.790082931518555

Token 780: ' un' (ID: 537)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2638821601867676
    2. '[' → logprob: -2.5138821601867676
    3. 'delta' → logprob: -3.0138821601867676
    4. 'offset' → logprob: -3.1388821601867676
    5. '0' → logprob: -4.013882160186768
    6. 'A' → logprob: -4.763882160186768
    7. 'lazy' → logprob: -5.513882160186768
    8. 'acc' → logprob: -5.638882160186768
    9. 'X' → logprob: -5.638882160186768
    10. 'difference' → logprob: -5.888882160186768

Token 781: ' tableau' (ID: 67053)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.8358237743377686
    2. 'diff' → logprob: -0.8358237743377686
    3. 'segment' → logprob: -2.9608237743377686
    4. 'difference' → logprob: -3.3358237743377686
    5. 'delta' → logprob: -4.085824012756348
    6. 'Fen' → logprob: -4.335824012756348
    7. 'offset' → logprob: -5.335824012756348
    8. 'd' → logprob: -5.710824012756348
    9. 'lazy' → logprob: -6.335824012756348
    10. 'prefix' → logprob: -6.710824012756348

Token 782: ' de' (ID: 334)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5237405300140381
    2. 'offset' → logprob: -1.648740530014038
    3. 'diff' → logprob: -1.773740530014038
    4. ' delta' → logprob: -4.148740768432617
    5. 'd' → logprob: -4.773740768432617
    6. 'D' → logprob: -5.023740768432617
    7. 'de' → logprob: -5.398740768432617
    8. ' offsets' → logprob: -6.398740768432617
    9. 'increments' → logprob: -6.398740768432617
    10. '_offsets' → logprob: -6.648740768432617

Token 783: ' taille' (ID: 41644)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22714808583259583
    2. 'd' → logprob: -2.1021480560302734
    3. '0' → logprob: -3.3521480560302734
    4. 'lazy' → logprob: -4.227148056030273
    5. 'delta' → logprob: -4.477148056030273
    6. 'offset' → logprob: -4.602148056030273
    7. 'dif' → logprob: -5.602148056030273
    8. 'length' → logprob: -6.852148056030273
    9. 'zeros' → logprob: -6.852148056030273
    10. 'prefix' → logprob: -7.352148056030273

Token 784: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007245833403430879
    2. '(N' → logprob: -7.625724792480469
    3. ' N' → logprob: -8.500724792480469
    4. '[N' → logprob: -11.375724792480469
    5. 'Q' → logprob: -11.750724792480469
    6. '=' → logprob: -12.375724792480469
    7. 'n' → logprob: -12.625724792480469
    8. '=N' → logprob: -13.625724792480469
    9. 'diff' → logprob: -14.000724792480469
    10. '   ' → logprob: -14.250724792480469

Token 785: '+' (ID: 10)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.729904294013977
    2. 'delta' → logprob: -0.729904294013977
    3. ' delta' → logprob: -4.2299041748046875
    4. 'diff' → logprob: -5.1049041748046875
    5. 'd' → logprob: -5.2299041748046875
    6. 'de' → logprob: -5.6049041748046875
    7. 'D' → logprob: -6.6049041748046875
    8. 'shift' → logprob: -6.9799041748046875
    9. ' offset' → logprob: -7.2299041748046875
    10. ' offsets' → logprob: -7.2299041748046875

Token 786: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17976035177707672
    2. '1' → logprob: -1.8047603368759155
    3. ' ' → logprob: -11.304759979248047
    4. '+' → logprob: -13.679759979248047
    5. '
' → logprob: -14.679759979248047
    6. '```' → logprob: -15.054759979248047
    7. '`' → logprob: -15.304759979248047
    8. '   ' → logprob: -15.554759979248047
    9. '3' → logprob: -15.617259979248047
    10. 'import' → logprob: -16.117259979248047

Token 787: ' en' (ID: 469)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5941613912582397
    2. 'offset' → logprob: -0.8441613912582397
    3. 'D' → logprob: -5.344161510467529
    4. 'd' → logprob: -5.594161510467529
    5. 'diff' → logprob: -5.719161510467529
    6. 'de' → logprob: -6.094161510467529
    7. ' delta' → logprob: -6.719161510467529
    8. 'dec' → logprob: -6.969161510467529
    9. 'shift' → logprob: -7.469161510467529
    10. 'increments' → logprob: -7.594161510467529

Token 788: ' utilisant' (ID: 92474)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7018404006958008
    2. 'diff' → logprob: -0.9518404006958008
    3. 'zeros' → logprob: -3.076840400695801
    4. 'z' → logprob: -3.826840400695801
    5. 'zero' → logprob: -4.701840400695801
    6. 'delta' → logprob: -4.701840400695801
    7. 'difference' → logprob: -4.951840400695801
    8. '+' → logprob: -5.201840400695801
    9. ' zeros' → logprob: -5.576840400695801
    10. 'lazy' → logprob: -5.826840400695801

Token 789: ' une' (ID: 2463)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06244734302163124
    2. 'difference' → logprob: -3.9374473094940186
    3. 'une' → logprob: -4.437447547912598
    4. 'delta' → logprob: -4.937447547912598
    5. 'un' → logprob: -4.937447547912598
    6. 'dif' → logprob: -5.562447547912598
    7. 'd' → logprob: -5.687447547912598
    8. 'prefix' → logprob: -5.937447547912598
    9. 'lazy' → logprob: -6.437447547912598
    10. 'acc' → logprob: -7.187447547912598

Token 790: ' fen' (ID: 25170)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10669016093015671
    2. 'difference' → logprob: -2.4816901683807373
    3. 'fen' → logprob: -4.856689929962158
    4. 'delta' → logprob: -5.481689929962158
    5. 'd' → logprob: -6.106689929962158
    6. 'Fen' → logprob: -6.856689929962158
    7. 'lazy' → logprob: -7.106689929962158
    8. ' Fen' → logprob: -7.731689929962158
    9. 'dif' → logprob: -8.231690406799316
    10. 'prefix' → logprob: -8.481690406799316

Token 791: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.022158319130539894
    2. '```' → logprob: -4.397158145904541
    3. 't' → logprob: -5.522158145904541
    4. 'wick' → logprob: -5.647158145904541
    5. '   ' → logprob: -7.647158145904541
    6. 'wt' → logprob: -7.647158145904541
    7. '``' → logprob: -8.7721586227417
    8. '    ' → logprob: -9.5221586227417
    9. '#' → logprob: -9.6471586227417
    10. '
' → logprob: -9.7721586227417

Token 792: ' ou' (ID: 2031)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.1779002547264099
    2. 'tree' → logprob: -2.3029003143310547
    3. 'ree' → logprob: -3.5529003143310547
    4. 'Tree' → logprob: -4.052900314331055
    5. ' tree' → logprob: -4.677900314331055
    6. '[' → logprob: -6.177900314331055
    7. '_TREE' → logprob: -6.427900314331055
    8. '_t' → logprob: -7.677900314331055
    9. '<Tree' → logprob: -7.802900314331055
    10. '_' → logprob: -7.802900314331055

Token 793: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8463095426559448
    2. 'diff' → logprob: -1.5963095426559448
    3. 'difference' → logprob: -1.5963095426559448
    4. ' segment' → logprob: -1.8463095426559448
    5. 'range' → logprob: -5.971309661865234
    6. ' difference' → logprob: -6.346309661865234
    7. '差' → logprob: -7.346309661865234
    8. 'd' → logprob: -7.721309661865234
    9. 'import' → logprob: -8.096309661865234
    10. 'seg' → logprob: -8.221309661865234

Token 794: ' tree' (ID: 8165)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.24137116968631744
    2. 'tree' → logprob: -1.6163711547851562
    3. ' tree' → logprob: -4.366371154785156
    4. ')' → logprob: -6.241371154785156
    5. 'Tree' → logprob: -7.866371154785156
    6. '_' → logprob: -8.741371154785156
    7. '_TREE' → logprob: -8.741371154785156
    8. '_t' → logprob: -8.991371154785156
    9. 'tre' → logprob: -9.491371154785156
    10. '   ' → logprob: -10.241371154785156

Token 795: '
' (ID: 198)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.6331213712692261
    2. 'offset' → logprob: -1.633121371269226
    3. 'diff' → logprob: -2.0081214904785156
    4. 'fen' → logprob: -3.2581214904785156
    5. '<|end|>' → logprob: -3.6331214904785156
    6. 'import' → logprob: -4.008121490478516
    7. '#' → logprob: -4.383121490478516
    8. ' fen' → logprob: -4.633121490478516
    9. ' delta' → logprob: -4.883121490478516
    10. 'from' → logprob: -5.633121490478516

Token 796: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.8407549262046814
    2. '   ' → logprob: -2.090754985809326
    3. '#' → logprob: -2.465754985809326
    4. 'diff' → logprob: -2.590754985809326
    5. 'import' → logprob: -2.715754985809326
    6. 'fen' → logprob: -3.090754985809326
    7. 'offset' → logprob: -3.215754985809326
    8. 'from' → logprob: -3.590754985809326
    9. 'if' → logprob: -3.590754985809326
    10. ' fen' → logprob: -4.215754985809326

Token 797: ' #
' (ID: 21888)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9988315105438232
    2. 'delta' → logprob: -1.2488315105438232
    3. '#' → logprob: -2.4988315105438232
    4. 'offset' → logprob: -2.7488315105438232
    5. 'diff' → logprob: -2.9988315105438232
    6. 'import' → logprob: -3.3738315105438232
    7. 'from' → logprob: -3.4988315105438232
    8. 'fen' → logprob: -3.6238315105438232
    9. ' if' → logprob: -4.373831748962402
    10. 'A' → logprob: -4.623831748962402

Token 798: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.572021484375
    2. 'offset' → logprob: -2.197021484375
    3. 'import' → logprob: -2.322021484375
    4. 'fen' → logprob: -2.947021484375
    5. 'from' → logprob: -3.072021484375
    6. 'if' → logprob: -3.197021484375
    7. 'diff' → logprob: -3.322021484375
    8. '#' → logprob: -3.572021484375
    9. 'A' → logprob: -5.197021484375
    10. ' delta' → logprob: -5.697021484375

Token 799: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.5019646883010864
    2. 'fen' → logprob: -1.5019646883010864
    3. 'from' → logprob: -1.7519646883010864
    4. 'offset' → logprob: -2.126964569091797
    5. 'delta' → logprob: -2.251964569091797
    6. 'import' → logprob: -3.126964569091797
    7. 'if' → logprob: -3.251964569091797
    8. 'diff' → logprob: -4.126964569091797
    9. 'Fen' → logprob: -4.376964569091797
    10. '   ' → logprob: -4.751964569091797

Token 800: ' Mais' (ID: 13880)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9224947690963745
    2. 'fen' → logprob: -1.7974947690963745
    3. 'delta' → logprob: -1.9224947690963745
    4. 'import' → logprob: -2.422494888305664
    5. 'offset' → logprob: -2.672494888305664
    6. '#' → logprob: -2.922494888305664
    7. 'if' → logprob: -3.672494888305664
    8. 'diff' → logprob: -3.672494888305664
    9. 'A' → logprob: -4.672494888305664
    10. 'Fen' → logprob: -5.047494888305664

Token 801: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8473004102706909
    2. 'continue' → logprob: -1.847300410270691
    3. '#' → logprob: -1.972300410270691
    4. ' A' → logprob: -2.4723005294799805
    5. ' continue' → logprob: -2.5973005294799805
    6. 'import' → logprob: -3.4723005294799805
    7. ' #' → logprob: -3.9723005294799805
    8. ' pass' → logprob: -3.9723005294799805
    9. 'pass' → logprob: -4.0973005294799805
    10. '   ' → logprob: -5.4723005294799805

Token 802: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3258098363876343
    2. 'continue' → logprob: -1.3258098363876343
    3. '#' → logprob: -2.200809955596924
    4. ' can' → logprob: -2.325809955596924
    5. ' peut' → logprob: -2.575809955596924
    6. 'import' → logprob: -3.450809955596924
    7. 'can' → logprob: -3.575809955596924
    8. '...' → logprob: -3.700809955596924
    9. ' n' → logprob: -4.450809955596924
    10. ' peux' → logprob: -4.700809955596924

Token 803: ' besoin' (ID: 27703)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6086771488189697
    2. ' besoin' → logprob: -2.2336771488189697
    3. 'pas' → logprob: -2.2336771488189697
    4. ' une' → logprob: -2.7336771488189697
    5. ' pas' → logprob: -3.6086771488189697
    6. 'not' → logprob: -3.8586771488189697
    7. 'une' → logprob: -3.8586771488189697
    8. 'un' → logprob: -3.8586771488189697
    9. ' un' → logprob: -4.608676910400391
    10. ' juste' → logprob: -4.858676910400391

Token 804: ' uniquement' (ID: 65527)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 805: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5139117240905762
    2. 'de' → logprob: -1.6389117240905762
    3. '<|end|>' → logprob: -2.763911724090576
    4. 'd' → logprob: -3.013911724090576
    5. ' d' → logprob: -3.388911724090576
    6. ' of' → logprob: -4.138911724090576
    7. '    ' → logprob: -4.513911724090576
    8. 'import' → logprob: -5.263911724090576
    9. ' des' → logprob: -5.763911724090576
    10. '  ' → logprob: -5.763911724090576

Token 806: ''alt' (ID: 121845)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8526158928871155
    2. 'l' → logprob: -1.9776158332824707
    3. 'A' → logprob: -2.4776158332824707
    4. 'mettre' → logprob: -2.7276158332824707
    5. ' la' → logprob: -2.9776158332824707
    6. 'les' → logprob: -3.1026158332824707
    7. 'de' → logprob: -3.4776158332824707
    8. ' deux' → logprob: -4.227615833282471
    9. 'un' → logprob: -4.602615833282471
    10. 'maint' → logprob: -4.727615833282471

Token 807: 'itudes' (ID: 25642)
  Prédit: 'itudes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itudes' → logprob: -0.11765133589506149
    2. 'itude' → logprob: -2.6176512241363525
    3. 'A' → logprob: -3.9926512241363525
    4. 's' → logprob: -5.492651462554932
    5. 'itud' → logprob: -5.742651462554932
    6. '[i' → logprob: -6.242651462554932
    7. '[' → logprob: -6.492651462554932
    8. 'L' → logprob: -6.867651462554932
    9. '   ' → logprob: -6.867651462554932
    10. '[L' → logprob: -6.992651462554932

Token 808: ' à' (ID: 1221)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.961657702922821
    2. 'A' → logprob: -1.2116577625274658
    3. '[' → logprob: -2.336657762527466
    4. '   ' → logprob: -3.461657762527466
    5. '[A' → logprob: -3.461657762527466
    6. '<|end|>' → logprob: -3.586657762527466
    7. 'diff' → logprob: -3.836657762527466
    8. ')' → logprob: -4.211657524108887
    9. '#' → logprob: -4.211657524108887
    10. '[
' → logprob: -4.336657524108887

Token 809: ' L' (ID: 451)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8674890995025635
    2. 'L' → logprob: -1.8674890995025635
    3. 'index' → logprob: -1.8674890995025635
    4. 'position' → logprob: -2.7424890995025635
    5. 'l' → logprob: -3.2424890995025635
    6. 'indices' → logprob: -3.4924890995025635
    7. 'bord' → logprob: -3.7424890995025635
    8. 'acc' → logprob: -3.9924890995025635
    9. 'certain' → logprob: -3.9924890995025635
    10. 'la' → logprob: -4.492488861083984

Token 810: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16605083644390106
    2. '   ' → logprob: -2.666050910949707
    3. ' -' → logprob: -3.416050910949707
    4. ',' → logprob: -4.166050910949707
    5. '_j' → logprob: -4.916050910949707
    6. 'L' → logprob: -5.166050910949707
    7. '#' → logprob: -5.916050910949707
    8. ':' → logprob: -6.166050910949707
    9. ' -=' → logprob: -6.291050910949707
    10. 'for' → logprob: -6.416050910949707

Token 811: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005125218303874135
    2. 'R' → logprob: -8.25051212310791
    3. '2' → logprob: -8.87551212310791
    4. ',' → logprob: -10.50051212310791
    5. ',R' → logprob: -10.62551212310791
    6. 'L' → logprob: -11.25051212310791
    7. 'and' → logprob: -11.25051212310791
    8. '-' → logprob: -11.62551212310791
    9. ' ' → logprob: -11.87551212310791
    10. ' and' → logprob: -12.37551212310791

Token 812: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18958589434623718
    2. 'A' → logprob: -3.4395859241485596
    3. 'for' → logprob: -4.0645856857299805
    4. ',' → logprob: -4.0645856857299805
    5. '#' → logprob: -4.3145856857299805
    6. '+' → logprob: -4.5645856857299805
    7. ')' → logprob: -4.6895856857299805
    8. 'L' → logprob: -5.0645856857299805
    9. '...' → logprob: -5.0645856857299805
    10. '[L' → logprob: -5.0645856857299805

Token 813: ' L' (ID: 451)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.158870667219162
    2. ' R' → logprob: -2.5338706970214844
    3. 'L' → logprob: -2.7838706970214844
    4. ' L' → logprob: -5.408870697021484
    5. ' and' → logprob: -7.658870697021484
    6. '0' → logprob: -8.158870697021484
    7. 'A' → logprob: -8.158870697021484
    8. 'and' → logprob: -9.658870697021484
    9. 'N' → logprob: -10.158870697021484
    10. ']' → logprob: -10.408870697021484

Token 814: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0412472486495972
    2. '<|end|>' → logprob: -2.0412473678588867
    3. '+' → logprob: -2.4162473678588867
    4. 'for' → logprob: -2.9162473678588867
    5. '[L' → logprob: -2.9162473678588867
    6. 'A' → logprob: -3.0412473678588867
    7. 'L' → logprob: -3.1662473678588867
    8. '#' → logprob: -3.2912473678588867
    9. '    ' → logprob: -3.4162473678588867
    10. ')' → logprob: -3.7912473678588867

Token 815: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.011132119223475456
    2. ' R' → logprob: -4.51113224029541
    3. 'A' → logprob: -10.51113224029541
    4. 'and' → logprob: -10.76113224029541
    5. ' and' → logprob: -10.76113224029541
    6. 'L' → logprob: -12.13613224029541
    7. '   ' → logprob: -12.76113224029541
    8. ',' → logprob: -13.88613224029541
    9. 'import' → logprob: -14.13613224029541
    10. '[R' → logprob: -14.26113224029541

Token 816: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03647135943174362
    2. 'A' → logprob: -4.536471366882324
    3. 'for' → logprob: -5.411471366882324
    4. ',' → logprob: -5.536471366882324
    5. '
' → logprob: -5.786471366882324
    6. '+' → logprob: -5.911471366882324
    7. '    
' → logprob: -5.911471366882324
    8. '#' → logprob: -6.411471366882324
    9. 'if' → logprob: -6.536471366882324
    10. '```' → logprob: -6.911471366882324

Token 817: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08919267356395721
    2. ' R' → logprob: -2.4641926288604736
    3. ' and' → logprob: -8.714192390441895
    4. 'and' → logprob: -9.589192390441895
    5. '   ' → logprob: -11.964192390441895
    6. 'L' → logprob: -11.964192390441895
    7. ',' → logprob: -13.214192390441895
    8. ')' → logprob: -14.339192390441895
    9. '(R' → logprob: -14.589192390441895
    10. 'import' → logprob: -14.714192390441895

Token 818: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07090270519256592
    2. 'A' → logprob: -4.4459028244018555
    3. '
' → logprob: -4.5709028244018555
    4. '#' → logprob: -4.5709028244018555
    5. '+' → logprob: -4.5709028244018555
    6. 'if' → logprob: -4.8209028244018555
    7. 'for' → logprob: -5.3209028244018555
    8. ',' → logprob: -6.0709028244018555
    9. '    
' → logprob: -6.3209028244018555
    10. 'L' → logprob: -6.4459028244018555

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11764783412218094
    2. '+' → logprob: -2.242647886276245
    3. ']' → logprob: -5.867647647857666
    4. ')' → logprob: -7.617647647857666
    5. ']+' → logprob: -7.867647647857666
    6. 'R' → logprob: -7.867647647857666
    7. '```' → logprob: -8.992648124694824
    8. ',' → logprob: -9.492648124694824
    9. '0' → logprob: -9.492648124694824
    10. '++' → logprob: -9.617648124694824

Token 820: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6566728949546814
    2. 'A' → logprob: -1.6566729545593262
    3. 'delta' → logprob: -2.031672954559326
    4. 'if' → logprob: -3.281672954559326
    5. 'diff' → logprob: -3.531672954559326
    6. 'for' → logprob: -3.531672954559326
    7. 'L' → logprob: -3.906672954559326
    8. '#' → logprob: -4.156672954559326
    9. ' A' → logprob: -5.406672954559326
    10. ' for' → logprob: -5.656672954559326

Token 821: ' seules' (ID: 198094)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.1097768545150757
    2. 'ces' → logprob: -1.7347768545150757
    3. 'les' → logprob: -1.8597768545150757
    4. 'A' → logprob: -2.4847769737243652
    5. 'only' → logprob: -2.9847769737243652
    6. ' seules' → logprob: -3.3597769737243652
    7. ' ces' → logprob: -3.8597769737243652
    8. 'these' → logprob: -4.109776973724365
    9. 'the' → logprob: -4.359776973724365
    10. 'for' → logprob: -4.484776973724365

Token 822: ' ' (ID: 220)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8168384432792664
    2. ' les' → logprob: -1.0668385028839111
    3. 'A' → logprob: -2.941838502883911
    4. 'ces' → logprob: -3.316838502883911
    5. ' ces' → logprob: -3.441838502883911
    6. 'these' → logprob: -3.691838502883911
    7. 'the' → logprob: -4.316838264465332
    8. 'de' → logprob: -4.691838264465332
    9. ' deux' → logprob: -4.816838264465332
    10. 'L' → logprob: -5.191838264465332

Token 823: '2' (ID: 17)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.6826801896095276
    2. ' ces' → logprob: -1.6826801300048828
    3. 'les' → logprob: -1.6826801300048828
    4. 'A' → logprob: -3.182680130004883
    5. ' les' → logprob: -3.182680130004883
    6. 'these' → logprob: -4.807680130004883
    7. ' celles' → logprob: -4.932680130004883
    8. 'L' → logprob: -4.932680130004883
    9. 'l' → logprob: -5.932680130004883
    10. ' these' → logprob: -6.557680130004883

Token 824: ' ar' (ID: 646)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.47103217244148254
    2. 'positions' → logprob: -1.9710321426391602
    3. ' edges' → logprob: -2.47103214263916
    4. ' indices' → logprob: -2.97103214263916
    5. 'edges' → logprob: -3.97103214263916
    6. 'indices' → logprob: -3.97103214263916
    7. ' points' → logprob: -4.34603214263916
    8. ' adjacent' → logprob: -4.47103214263916
    9. ' alt' → logprob: -4.84603214263916
    10. 'A' → logprob: -5.34603214263916

Token 825: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.14675699174404144
    2. 'r' → logprob: -2.146756887435913
    3. 'edges' → logprob: -5.396757125854492
    4. '[' → logprob: -5.646757125854492
    5. 'êts' → logprob: -6.021757125854492
    6. 'etes' → logprob: -6.521757125854492
    7. 'e' → logprob: -6.646757125854492
    8. 'ètes' → logprob: -7.521757125854492
    9. 'gs' → logprob: -7.646757125854492
    10. 'ray' → logprob: -7.771757125854492

Token 826: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09308429807424545
    2. 'if' → logprob: -3.2180843353271484
    3. ' if' → logprob: -4.468084335327148
    4. '
' → logprob: -4.593084335327148
    5. 'A' → logprob: -5.093084335327148
    6. '#' → logprob: -5.218084335327148
    7. 'delta' → logprob: -5.218084335327148
    8. 'L' → logprob: -6.093084335327148
    9. 'diff' → logprob: -6.468084335327148
    10. '    
' → logprob: -6.968084335327148

Token 827: ' affect' (ID: 7902)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0366552509367466
    2. 'aff' → logprob: -4.411655426025391
    3. ' mod' → logprob: -4.661655426025391
    4. 'impact' → logprob: -4.786655426025391
    5. 'touch' → logprob: -5.786655426025391
    6. 'conc' → logprob: -7.036655426025391
    7. ' affect' → logprob: -7.661655426025391
    8. 'modifiable' → logprob: -7.786655426025391
    9. 'import' → logprob: -8.78665542602539
    10. ' impact' → logprob: -9.16165542602539

Token 828: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.02631295472383499
    2. 'és' → logprob: -4.276312828063965
    3. '   ' → logprob: -5.401312828063965
    4. ']' → logprob: -6.401312828063965
    5. 'ée' → logprob: -7.151312828063965
    6. 'é' → logprob: -7.401312828063965
    7. 'ees' → logprob: -7.401312828063965
    8. ')' → logprob: -7.776312828063965
    9. 'es' → logprob: -8.026312828063965
    10. ')
' → logprob: -8.026312828063965

Token 829: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1603408008813858
    2. 'if' → logprob: -2.5353407859802246
    3. 'A' → logprob: -3.4103407859802246
    4. '#' → logprob: -4.285340785980225
    5. 'delta' → logprob: -4.285340785980225
    6. 'L' → logprob: -6.410340785980225
    7. 'diff' → logprob: -6.410340785980225
    8. ' if' → logprob: -6.660340785980225
    9. 'for' → logprob: -6.910340785980225
    10. 'offset' → logprob: -7.160340785980225

Token 830: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06492624431848526
    2. '#' → logprob: -4.0649261474609375
    3. 'A' → logprob: -4.0649261474609375
    4. 'delta' → logprob: -4.0649261474609375
    5. 'diff' → logprob: -5.8149261474609375
    6. 'if' → logprob: -5.8149261474609375
    7. 'offset' → logprob: -6.1899261474609375
    8. 'L' → logprob: -6.8149261474609375
    9. 'import' → logprob: -7.9399261474609375
    10. 'from' → logprob: -8.439926147460938

Token 831: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21135322749614716
    2. 'if' → logprob: -2.461353302001953
    3. '#' (adapté à ' #') → logprob: -3.086353302001953
    4. 'delta' → logprob: -3.836353302001953
    5. 'L' → logprob: -3.961353302001953
    6. 'A' → logprob: -5.086353302001953
    7. 'offset' → logprob: -5.711353302001953
    8. 'def' → logprob: -5.836353302001953
    9. 'for' → logprob: -6.211353302001953
    10. 'diff' → logprob: -6.461353302001953

Token 832: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.055686354637146
    2. 'delta' → logprob: -1.430686354637146
    3. 'A' → logprob: -2.1806864738464355
    4. 'offset' → logprob: -2.4306864738464355
    5. 'if' → logprob: -2.5556864738464355
    6. '#' → logprob: -2.6806864738464355
    7. 'L' → logprob: -4.1806864738464355
    8. 'def' → logprob: -4.5556864738464355
    9. 'diff' → logprob: -4.5556864738464355
    10. 'for' → logprob: -5.0556864738464355

Token 833: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8201687932014465
    2. 'for' → logprob: -1.9451687335968018
    3. 'def' → logprob: -2.3201687335968018
    4. ' if' → logprob: -2.3201687335968018
    5. '#' → logprob: -2.4451687335968018
    6. ' for' → logprob: -3.4451687335968018
    7. '   ' → logprob: -3.5701687335968018
    8. 'delta' → logprob: -3.8201687335968018
    9. 'A' → logprob: -4.445168972015381
    10. ' def' → logprob: -4.945168972015381

Token 834: ' garde' (ID: 65309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.768657386302948
    2. 'def' → logprob: -1.8936574459075928
    3. ' peux' → logprob: -2.3936574459075928
    4. 'continue' → logprob: -2.5186574459075928
    5. ' vais' → logprob: -3.1436574459075928
    6. 'for' → logprob: -3.3936574459075928
    7. 'import' → logprob: -3.5186574459075928
    8. ' #' → logprob: -4.018657207489014
    9. ' continue' → logprob: -4.393657207489014
    10. 'contin' → logprob: -4.518657207489014

Token 835: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.14817535877227783
    2. 'une' → logprob: -3.2731752395629883
    3. 'track' → logprob: -3.2731752395629883
    4. 'A' → logprob: -3.5231752395629883
    5. '#' → logprob: -4.648175239562988
    6. ' un' → logprob: -5.398175239562988
    7. 'diff' → logprob: -5.773175239562988
    8. 'les' → logprob: -5.898175239562988
    9. 'la' → logprob: -5.898175239562988
    10. 'a' → logprob: -6.523175239562988

Token 836: ' tableau' (ID: 67053)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.46091005206108093
    2. 'offset' → logprob: -1.7109100818634033
    3. 'diff' → logprob: -1.8359100818634033
    4. 'fen' → logprob: -4.710909843444824
    5. 'def' → logprob: -5.210909843444824
    6. 'd' → logprob: -5.460909843444824
    7. 'lazy' → logprob: -5.710909843444824
    8. 'de' → logprob: -6.710909843444824
    9. 'segment' → logprob: -7.460909843444824
    10. 'buffer' → logprob: -7.460909843444824

Token 837: ' de' (ID: 334)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.1774321794509888
    2. 'delta' → logprob: -1.1774321794509888
    3. 'de' → logprob: -1.4274321794509888
    4. 'diff' → logprob: -2.427432060241699
    5. 'd' → logprob: -3.802432060241699
    6. 'des' → logprob: -4.677432060241699
    7. 'of' → logprob: -5.302432060241699
    8. '_offsets' → logprob: -5.427432060241699
    9. '_offset' → logprob: -5.927432060241699
    10. '_delta' → logprob: -6.302432060241699

Token 838: ' dé' (ID: 2393)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5323466658592224
    2. 'offset' → logprob: -1.2823467254638672
    3. 'diff' → logprob: -2.657346725463867
    4. 'delta' → logprob: -3.032346725463867
    5. 'lazy' → logprob: -4.532346725463867
    6. '0' → logprob: -6.407346725463867
    7. 'increments' → logprob: -6.407346725463867
    8. 'de' → logprob: -7.032346725463867
    9. 'int' → logprob: -7.532346725463867
    10. 'dé' → logprob: -8.032346725463867

Token 839: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.001470822375267744
    2. 'call' → logprob: -7.376471042633057
    3. 'l' → logprob: -8.501470565795898
    4. 'c' → logprob: -8.626470565795898
    5. 'f' → logprob: -8.626470565795898
    6. 'placement' → logprob: -9.876470565795898
    7. 'cale' → logprob: -10.126470565795898
    8. 'placements' → logprob: -10.751470565795898
    9. 'fault' → logprob: -10.751470565795898
    10. 'lap' → logprob: -11.376470565795898

Token 840: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.6231306195259094
    2. 'ages' → logprob: -0.8731306195259094
    3. '_offsets' → logprob: -4.123130798339844
    4. 'tage' → logprob: -4.248130798339844
    5. '   ' → logprob: -5.123130798339844
    6. 'offset' → logprob: -5.373130798339844
    7. ' offsets' → logprob: -7.248130798339844
    8. '_offset' → logprob: -7.373130798339844
    9. 'os' → logprob: -7.623130798339844
    10. 'o' → logprob: -7.998130798339844

Token 841: ' +' (ID: 659)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.26481106877326965
    2. 'offset' → logprob: -1.7648110389709473
    3. ' delta' → logprob: -3.5148110389709473
    4. 'diff' → logprob: -4.264811038970947
    5. 'de' → logprob: -5.014811038970947
    6. 'd' → logprob: -5.139811038970947
    7. 'shift' → logprob: -6.389811038970947
    8. '   ' → logprob: -7.264811038970947
    9. 'D' → logprob: -7.389811038970947
    10. ' offset' → logprob: -8.139811515808105

Token 842: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8840523362159729
    2. 'A' → logprob: -1.1340522766113281
    3. '[' → logprob: -2.759052276611328
    4. 'delta' → logprob: -3.009052276611328
    5. 'offset' → logprob: -3.259052276611328
    6. 'diff' → logprob: -4.009052276611328
    7. '1' → logprob: -4.134052276611328
    8. 'prefix' → logprob: -4.259052276611328
    9. '=' → logprob: -4.384052276611328
    10. 'import' → logprob: -4.384052276611328

Token 843: ' alt' (ID: 5001)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2579929530620575
    2. 'offset' → logprob: -2.75799298286438
    3. '#' → logprob: -3.00799298286438
    4. 'import' → logprob: -3.50799298286438
    5. 'delta' → logprob: -4.132992744445801
    6. 'd' → logprob: -4.257992744445801
    7. ' A' → logprob: -4.757992744445801
    8. 'def' → logprob: -5.007992744445801
    9. 'actual' → logprob: -5.382992744445801
    10. 'positions' → logprob: -5.632992744445801

Token 844: 'itudes' (ID: 25642)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20121146738529205
    2. 't' → logprob: -3.201211452484131
    3. 'itudes' → logprob: -3.576211452484131
    4. 'alts' → logprob: -3.576211452484131
    5. 'al' → logprob: -3.951211452484131
    6. 'ts' → logprob: -4.576211452484131
    7. 'os' → logprob: -4.951211452484131
    8. '   ' → logprob: -5.076211452484131
    9. 'érations' → logprob: -5.201211452484131
    10. '_offsets' → logprob: -5.326211452484131

Token 845: ' initial' (ID: 4871)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3248980641365051
    2. 'offset' → logprob: -2.0748980045318604
    3. '   ' → logprob: -2.6998980045318604
    4. ' delta' → logprob: -3.5748980045318604
    5. 'diff' → logprob: -4.1998982429504395
    6. 'd' → logprob: -4.1998982429504395
    7. 'de' → logprob: -4.9498982429504395
    8. 'A' → logprob: -5.6998982429504395
    9. 'D' → logprob: -5.8248982429504395
    10. '_offsets' → logprob: -6.4498982429504395

Token 846: 'es' (ID: 268)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3116684854030609
    2. 's' → logprob: -2.4366683959960938
    3. 'es' → logprob: -2.4366683959960938
    4. 'L' → logprob: -3.8116683959960938
    5. 'aux' → logprob: -3.9366683959960938
    6. 'aires' → logprob: -4.936668395996094
    7. 'e' → logprob: -5.186668395996094
    8. ')' → logprob: -5.186668395996094
    9. '_offsets' → logprob: -5.936668395996094
    10. '   ' → logprob: -5.936668395996094

Token 847: ' pour' (ID: 1930)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.24944165349006653
    2. 'offset' → logprob: -1.7494416236877441
    3. 'd' → logprob: -4.499441623687744
    4. 'D' → logprob: -4.624441623687744
    5. 'diff' → logprob: -4.874441623687744
    6. '   ' → logprob: -5.249441623687744
    7. ' delta' → logprob: -5.624441623687744
    8. 'shift' → logprob: -5.999441623687744
    9. 'de' → logprob: -6.624441623687744
    10. '#' → logprob: -6.624441623687744

Token 848: ' récupérer' (ID: 120406)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.10717456787824631
    2. 'les' → logprob: -2.8571746349334717
    3. 'L' → logprob: -4.982174396514893
    4. 'A' → logprob: -5.107174396514893
    5. 'acc' → logprob: -5.107174396514893
    6. 'l' → logprob: -5.482174396514893
    7. 'positions' → logprob: -5.732174396514893
    8. 'le' → logprob: -5.982174396514893
    9. 'calculate' → logprob: -6.607174396514893
    10. 'indices' → logprob: -6.607174396514893

Token 849: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0654264688491821
    2. 'L' → logprob: -1.5654264688491821
    3. ' L' → logprob: -2.1904263496398926
    4. ' A' → logprob: -2.3154263496398926
    5. '   ' → logprob: -2.6904263496398926
    6. 'delta' → logprob: -3.6904263496398926
    7. 'tokens' → logprob: -4.065426349639893
    8. 'vals' → logprob: -4.315426349639893
    9. 'l' → logprob: -4.565426349639893
    10. ' delta' → logprob: -4.815426349639893

Token 850: ' alt' (ID: 5001)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18141378462314606
    2. 'delta' → logprob: -2.8064138889312744
    3. 'alt' → logprob: -3.4314138889312744
    4. 'positions' → logprob: -3.9314138889312744
    5. 'A' → logprob: -3.9314138889312744
    6. 'diff' → logprob: -4.681413650512695
    7. 'vals' → logprob: -5.681413650512695
    8. 'next' → logprob: -5.681413650512695
    9. 'd' → logprob: -5.806413650512695
    10. 'values' → logprob: -5.931413650512695

Token 851: 'itudes' (ID: 25642)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.644483745098114
    2. 'itudes' → logprob: -0.769483745098114
    3. 'ts' → logprob: -5.01948356628418
    4. 'A' → logprob: -5.39448356628418
    5. 'ti' → logprob: -9.26948356628418
    6. '   ' → logprob: -9.64448356628418
    7. 'itude' → logprob: -9.89448356628418
    8. '=A' → logprob: -9.89448356628418
    9. 'tu' → logprob: -10.14448356628418
    10. 'L' → logprob: -10.26948356628418

Token 852: ' uniquement' (ID: 65527)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7507302761077881
    2. 'delta' → logprob: -1.000730276107788
    3. 'offset' → logprob: -2.125730276107788
    4. 'diff' → logprob: -3.875730276107788
    5. 'd' → logprob: -5.125730514526367
    6. ' delta' → logprob: -5.750730514526367
    7. 'D' → logprob: -6.250730514526367
    8. '    
' → logprob: -6.500730514526367
    9. 'L' → logprob: -6.625730514526367
    10. '#' → logprob: -6.875730514526367

Token 853: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8450638055801392
    2. 'delta' → logprob: -0.9700638055801392
    3. 'offset' → logprob: -1.9700638055801392
    4. ' delta' → logprob: -4.34506368637085
    5. 'diff' → logprob: -4.47006368637085
    6. 'd' → logprob: -4.47006368637085
    7. 'de' → logprob: -5.34506368637085
    8. 'D' → logprob: -5.84506368637085
    9. '#' → logprob: -6.47006368637085
    10. 'dec' → logprob: -7.09506368637085

Token 854: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13620148599147797
    2. 'delta' → logprob: -2.2612013816833496
    3. 'offset' → logprob: -4.38620138168335
    4. 'diff' → logprob: -5.51120138168335
    5. 'd' → logprob: -6.13620138168335
    6. '#' → logprob: -6.38620138168335
    7. 'de' → logprob: -7.38620138168335
    8. 'shift' → logprob: -7.51120138168335
    9. 'dec' → logprob: -8.386201858520508
    10. '    
' → logprob: -8.386201858520508

Token 855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3281886875629425
    2. 'delta' → logprob: -1.5781886577606201
    3. 'offset' → logprob: -2.95318865776062
    4. 'diff' → logprob: -4.453188896179199
    5. '#' → logprob: -5.703188896179199
    6. 'd' → logprob: -5.828188896179199
    7. 'L' → logprob: -7.578188896179199
    8. 'shift' → logprob: -7.703188896179199
    9. 'D' → logprob: -7.953188896179199
    10. '
' → logprob: -8.3281888961792

Token 856: ' #
' (ID: 21888)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.41347169876098633
    2. 'offset' → logprob: -1.4134716987609863
    3. '   ' → logprob: -2.9134716987609863
    4. 'd' → logprob: -4.413471698760986
    5. 'D' → logprob: -4.788471698760986
    6. 'diff' → logprob: -5.038471698760986
    7. 'L' → logprob: -5.288471698760986
    8. ' delta' → logprob: -6.163471698760986
    9. 'if' → logprob: -6.288471698760986
    10. 'de' → logprob: -6.913471698760986

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05971802771091461
    2. 'delta' → logprob: -3.059718132019043
    3. 'offset' → logprob: -4.934718132019043
    4. 'd' → logprob: -6.559718132019043
    5. '#' → logprob: -7.434718132019043
    6. 'diff' → logprob: -7.934718132019043
    7. '    
' → logprob: -7.934718132019043
    8. 'D' → logprob: -8.184718132019043
    9. 'shift' → logprob: -8.309718132019043
    10. 'if' → logprob: -8.934718132019043

Token 858: ' #' (ID: 1069)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.526314914226532
    2. 'offset' → logprob: -1.7763149738311768
    3. '   ' → logprob: -1.9013149738311768
    4. 'if' → logprob: -3.0263149738311768
    5. '#' (adapté à ' #') → logprob: -3.6513149738311768
    6. 'd' → logprob: -5.276314735412598
    7. ' delta' → logprob: -5.651314735412598
    8. 'diff' → logprob: -6.776314735412598
    9. 'dec' → logprob: -6.901314735412598
    10. 'D' → logprob: -6.901314735412598

Token 859: ' On' (ID: 2160)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.7995458841323853
    2. 'offset' → logprob: -1.0495458841323853
    3. 'if' → logprob: -2.5495457649230957
    4. '#' → logprob: -2.7995457649230957
    5. 'd' → logprob: -3.7995457649230957
    6. '   ' → logprob: -4.549545764923096
    7. 'D' → logprob: -4.799545764923096
    8. 'diff' → logprob: -5.174545764923096
    9. 'dec' → logprob: -5.924545764923096
    10. 'del' → logprob: -6.049545764923096

Token 860: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20549960434436798
    2. 'contin' → logprob: -2.7054996490478516
    3. 'aj' → logprob: -3.8304996490478516
    4. ' continue' → logprob: -4.330499649047852
    5. 'util' → logprob: -4.455499649047852
    6. '#' → logprob: -4.580499649047852
    7. 'stock' → logprob: -4.955499649047852
    8. 'met' → logprob: -5.205499649047852
    9. 'continu' → logprob: -5.205499649047852
    10. 'maint' → logprob: -5.580499649047852

Token 861: ' gérer' (ID: 86786)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.28341615200042725
    2. ' continuer' → logprob: -2.533416271209717
    3. 'util' → logprob: -2.908416271209717
    4. 'import' → logprob: -3.908416271209717
    5. 'maint' → logprob: -4.033416271209717
    6. ' utiliser' → logprob: -4.033416271209717
    7. '   ' → logprob: -4.033416271209717
    8. 'stock' → logprob: -5.033416271209717
    9. 'read' → logprob: -5.283416271209717
    10. ' créer' → logprob: -5.658416271209717

Token 862: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.21484720706939697
    2. 'offset' → logprob: -2.2148470878601074
    3. 'delta' → logprob: -3.5898470878601074
    4. ' un' → logprob: -4.214847087860107
    5. 'diff' → logprob: -4.339847087860107
    6. 'de' → logprob: -5.339847087860107
    7. 'lazy' → logprob: -5.589847087860107
    8. 'd' → logprob: -5.714847087860107
    9. '_offsets' → logprob: -5.839847087860107
    10. 'une' → logprob: -6.089847087860107

Token 863: ' tableau' (ID: 67053)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.666848361492157
    2. 'delta' → logprob: -1.1668484210968018
    3. 'fen' → logprob: -2.7918484210968018
    4. 'offset' → logprob: -3.0418484210968018
    5. 'd' → logprob: -3.9168484210968018
    6. ' fen' → logprob: -4.291848182678223
    7. ' delta' → logprob: -4.666848182678223
    8. 'lazy' → logprob: -4.916848182678223
    9. 'de' → logprob: -5.666848182678223
    10. ' diff' → logprob: -6.166848182678223

Token 864: ' delta' (ID: 18800)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.145203709602356
    2. 'diff' → logprob: -1.520203709602356
    3. '_offsets' → logprob: -1.770203709602356
    4. 'de' → logprob: -2.0202035903930664
    5. 'delta' → logprob: -2.2702035903930664
    6. '_offset' → logprob: -4.520203590393066
    7. ' delta' → logprob: -4.770203590393066
    8. '_delta' → logprob: -5.020203590393066
    9. 'd' → logprob: -5.270203590393066
    10. '_diff' → logprob: -5.270203590393066

Token 865: ' de' (ID: 334)
  Prédit: '_delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_delta' → logprob: -0.1636810451745987
    2. ' =' → logprob: -2.4136810302734375
    3. 'delta' → logprob: -3.1636810302734375
    4. '_d' → logprob: -5.1636810302734375
    5. 'd' → logprob: -5.9136810302734375
    6. '_offsets' → logprob: -6.1636810302734375
    7. '=' → logprob: -6.4136810302734375
    8. 'Delta' → logprob: -6.5386810302734375
    9. '_offset' → logprob: -6.6636810302734375
    10. '_diff' → logprob: -6.6636810302734375

Token 866: ' dé' (ID: 2393)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3989512324333191
    2. 'N' → logprob: -1.7739512920379639
    3. '[' → logprob: -2.273951292037964
    4. '[N' → logprob: -2.898951292037964
    5. ' [' → logprob: -8.023951530456543
    6. '(N' → logprob: -8.398951530456543
    7. ' N' → logprob: -8.398951530456543
    8. 'size' → logprob: -8.523951530456543
    9. 'len' → logprob: -9.648951530456543
    10. 'length' → logprob: -9.648951530456543

Token 867: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.017319856211543083
    2. 'f' → logprob: -4.642319679260254
    3. 'fault' → logprob: -5.767319679260254
    4. 'lé' → logprob: -7.017319679260254
    5. 'l' → logprob: -7.142319679260254
    6. '[' → logprob: -7.767319679260254
    7. '```' → logprob: -7.767319679260254
    8. 'caler' → logprob: -8.267319679260254
    9. 'A' → logprob: -8.642319679260254
    10. 'c' → logprob: -9.267319679260254

Token 868: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.8245431184768677
    2. 'age' → logprob: -0.9495431184768677
    3. 'tage' → logprob: -2.574542999267578
    4. 'tas' → logprob: -2.699542999267578
    5. 'ta' → logprob: -4.574542999267578
    6. '   ' → logprob: -5.074542999267578
    7. 'ts' → logprob: -5.449542999267578
    8. 't' → logprob: -6.199542999267578
    9. '_offsets' → logprob: -6.949542999267578
    10. '```' → logprob: -7.199542999267578

Token 869: ' de' (ID: 334)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3977040648460388
    2. ' delta' → logprob: -1.1477041244506836
    3. ' if' → logprob: -5.397704124450684
    4. 'if' → logprob: -6.147704124450684
    5. '_delta' → logprob: -6.397704124450684
    6. '   ' → logprob: -7.147704124450684
    7. ' =' → logprob: -7.147704124450684
    8. ',' → logprob: -9.022704124450684
    9. '(delta' → logprob: -9.022704124450684
    10. 'import' → logprob: -9.397704124450684

Token 870: ' rang' (ID: 32287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07331319153308868
    2. 'N' → logprob: -3.1983132362365723
    3. '[' → logprob: -3.9483132362365723
    4. 'length' → logprob: -5.948313236236572
    5. 'tail' → logprob: -6.073313236236572
    6. 'size' → logprob: -6.073313236236572
    7. '[N' → logprob: -6.573313236236572
    8. 'len' → logprob: -7.073313236236572
    9. ' taille' → logprob: -7.823313236236572
    10. 'long' → logprob: -8.823312759399414

Token 871: ' N' (ID: 478)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0936917066574097
    2. 't' → logprob: -1.3436917066574097
    3. '   ' → logprob: -2.343691825866699
    4. ' =' → logprob: -2.593691825866699
    5. 's' → logprob: -2.718691825866699
    6. ' ' → logprob: -3.968691825866699
    7. ' N' → logprob: -3.968691825866699
    8. 'es' → logprob: -4.093691825866699
    9. 'N' → logprob: -4.218691825866699
    10. '=' → logprob: -4.343691825866699

Token 872: '+' (ID: 10)
  Prédit: '_delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_delta' → logprob: -0.22756527364253998
    2. ' =' → logprob: -1.9775652885437012
    3. 'delta' → logprob: -3.227565288543701
    4. 's' → logprob: -5.602565288543701
    5. '=' → logprob: -5.977565288543701
    6. '
' → logprob: -6.102565288543701
    7. '_' → logprob: -6.102565288543701
    8. '_d' → logprob: -6.102565288543701
    9. '_offsets' → logprob: -6.102565288543701
    10. ' delta' → logprob: -6.477565288543701

Token 873: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10074582695960999
    2. '2' → logprob: -2.350745916366577
    3. '+' → logprob: -7.600745677947998
    4. 'import' → logprob: -11.225746154785156
    5. ' ' → logprob: -11.850746154785156
    6. '   ' → logprob: -12.475746154785156
    7. '
' → logprob: -12.975746154785156
    8. '```' → logprob: -13.225746154785156
    9. ' +' → logprob: -13.725746154785156
    10. 'array' → logprob: -14.350746154785156

Token 874: ' initial' (ID: 4871)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.050799041986465454
    2. ' delta' → logprob: -3.0507991313934326
    3. '
' → logprob: -6.5507988929748535
    4. '   ' → logprob: -7.5507988929748535
    5. '_delta' → logprob: -9.175799369812012
    6. '(delta' → logprob: -10.550799369812012
    7. 'import' → logprob: -10.925799369812012
    8. 'Delta' → logprob: -11.425799369812012
    9. '\' → logprob: -11.425799369812012
    10. '```' → logprob: -11.550799369812012

Token 875: 'isé' (ID: 30065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1540951132774353
    2. ' =' → logprob: -2.27909517288208
    3. 'delta' → logprob: -4.27909517288208
    4. '=[' → logprob: -5.52909517288208
    5. '[' → logprob: -5.52909517288208
    6. ' delta' → logprob: -6.40409517288208
    7. '   ' → logprob: -6.40409517288208
    8. 'e' → logprob: -6.65409517288208
    9. '_delta' → logprob: -6.65409517288208
    10. '=[]
' → logprob: -6.77909517288208

Token 876: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6536951661109924
    2. ' =' → logprob: -0.7786951661109924
    3. '=[' → logprob: -4.153695106506348
    4. '[' → logprob: -5.903695106506348
    5. 'import' → logprob: -7.778695106506348
    6. ' [' → logprob: -8.028695106506348
    7. 'delta' → logprob: -8.278695106506348
    8. '[N' → logprob: -8.403695106506348
    9. '0' → logprob: -8.528695106506348
    10. '=zeros' → logprob: -8.778695106506348

Token 877: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38693806529045105
    2. '[' → logprob: -1.1369380950927734
    3. ' [' → logprob: -9.761938095092773
    4. ' ' → logprob: -11.636938095092773
    5. '[N' → logprob: -14.886938095092773
    6. '[int' → logprob: -15.386938095092773
    7. '[n' → logprob: -17.386938095092773
    8. '```' → logprob: -17.761938095092773
    9. '{' → logprob: -18.386938095092773
    10. 'zero' → logprob: -18.886938095092773

Token 878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759764313697815
    2. '[' → logprob: -0.8259764313697815
    3. ' [' → logprob: -10.950976371765137
    4. '[N' → logprob: -10.950976371765137
    5. ' ' → logprob: -13.325976371765137
    6. '[n' → logprob: -15.450976371765137
    7. '[int' → logprob: -16.075977325439453
    8. '{' → logprob: -17.950977325439453
    9. '(' → logprob: -18.450977325439453
    10. '[num' → logprob: -18.825977325439453

Token 879: '
' (ID: 198)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.009884759783744812
    2. ' delta' → logprob: -4.759884834289551
    3. 'if' → logprob: -6.884884834289551
    4. ' if' → logprob: -9.25988483428955
    5. '
' → logprob: -9.50988483428955
    6. 'import' → logprob: -10.88488483428955
    7. '   ' → logprob: -11.00988483428955
    8. '_delta' → logprob: -11.63488483428955
    9. 'Delta' → logprob: -11.88488483428955
    10. '(delta' → logprob: -12.00988483428955

Token 880: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.006550528574734926
    2. ' delta' → logprob: -5.256550312042236
    3. '   ' → logprob: -6.881550312042236
    4. '
' → logprob: -9.006550788879395
    5. 'if' → logprob: -10.006550788879395
    6. '```' → logprob: -10.006550788879395
    7. 'import' → logprob: -11.256550788879395
    8. '    
' → logprob: -11.256550788879395
    9. '_delta' → logprob: -11.631550788879395
    10. 'Delta' → logprob: -11.881550788879395

Token 881: ' #' (ID: 1069)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.006704481318593025
    2. ' delta' → logprob: -5.131704330444336
    3. 'if' → logprob: -7.631704330444336
    4. '   ' → logprob: -9.381704330444336
    5. 'import' → logprob: -9.506704330444336
    6. '
' → logprob: -10.381704330444336
    7. 'Delta' → logprob: -10.756704330444336
    8. ' if' → logprob: -10.756704330444336
    9. '#' (adapté à ' #') → logprob: -11.256704330444336
    10. '(delta' → logprob: -11.381704330444336

Token 882: ' Après' (ID: 47562)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00047356789582408965
    2. ' delta' → logprob: -8.250473976135254
    3. 'if' → logprob: -9.250473976135254
    4. 'import' → logprob: -9.625473976135254
    5. 'from' → logprob: -11.000473976135254
    6. '#' → logprob: -11.875473976135254
    7. '
' → logprob: -12.000473976135254
    8. '(delta' → logprob: -12.125473976135254
    9. '   ' → logprob: -12.625473976135254
    10. 'Delta' → logprob: -12.875473976135254

Token 883: ' chaque' (ID: 21194)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.4453071355819702
    2. 'delta' → logprob: -1.6953071355819702
    3. '#' → logprob: -1.8203071355819702
    4. '   ' → logprob: -2.1953072547912598
    5. ' delta' → logprob: -2.8203072547912598
    6. ' L' → logprob: -3.3203072547912598
    7. '
' → logprob: -3.6953072547912598
    8. 'input' → logprob: -3.6953072547912598
    9. 'import' → logprob: -3.8203072547912598
    10. 'R' → logprob: -4.19530725479126

Token 884: ' query' (ID: 5703)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.1933632493019104
    2. 'update' → logprob: -2.3183631896972656
    3. ' operation' → logprob: -3.5683631896972656
    4. '_update' → logprob: -5.193363189697266
    5. ' L' → logprob: -5.318363189697266
    6. ' query' → logprob: -5.443363189697266
    7. ' delta' → logprob: -5.443363189697266
    8. 'operation' → logprob: -5.568363189697266
    9. ' _' → logprob: -5.693363189697266
    10. ' line' → logprob: -6.068363189697266

Token 885: ',' (ID: 11)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.7951995134353638
    2. '   ' → logprob: -1.2951995134353638
    3. ',' → logprob: -1.6701995134353638
    4. ':' → logprob: -3.545199394226074
    5. ' delta' → logprob: -3.545199394226074
    6. '
' → logprob: -4.670199394226074
    7. ':
' → logprob: -4.795199394226074
    8. ' ,' → logprob: -6.295199394226074
    9. '_delta' → logprob: -6.295199394226074
    10. ',
' → logprob: -6.795199394226074

Token 886: ' on' (ID: 402)
  Prédit: ' delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' delta' → logprob: -0.5699518322944641
    2. 'delta' → logprob: -0.9449518322944641
    3. '   ' → logprob: -3.8199517726898193
    4. ' for' → logprob: -4.194952011108398
    5. 'for' → logprob: -4.944952011108398
    6. 'd' → logprob: -7.944952011108398
    7. ' pass' → logprob: -8.319952011108398
    8. ' delt' → logprob: -8.944952011108398
    9. 'pass' → logprob: -9.319952011108398
    10. ' ' → logprob: -9.694952011108398

Token 887: ' met' (ID: 1421)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.40885472297668457
    2. '+=' → logprob: -1.5338547229766846
    3. 'increment' → logprob: -4.0338544845581055
    4. '   ' → logprob: -4.4088544845581055
    5. ' update' → logprob: -4.4088544845581055
    6. 'for' → logprob: -4.4088544845581055
    7. 'update' → logprob: -4.5338544845581055
    8. '[' → logprob: -5.0338544845581055
    9. 'increments' → logprob: -5.2838544845581055
    10. ' increment' → logprob: -5.2838544845581055

Token 888: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.4794294834136963
    2. '   ' → logprob: -1.6044294834136963
    3. ' delta' → logprob: -1.8544294834136963
    4. ' à' → logprob: -4.229429244995117
    5. '```' → logprob: -5.854429244995117
    6. '_delta' → logprob: -6.104429244995117
    7. 'à' → logprob: -6.979429244995117
    8. 'L' → logprob: -7.479429244995117
    9. '  ' → logprob: -8.229429244995117
    10. '(delta' → logprob: -8.229429244995117

Token 889: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0034029979724437
    2. '[R' → logprob: -6.378403186798096
    3. 'L' → logprob: -7.378403186798096
    4. '[' → logprob: -7.503403186798096
    5. '   ' → logprob: -8.503402709960938
    6. ' =' → logprob: -8.628402709960938
    7. '=L' → logprob: -11.253402709960938
    8. ' L' → logprob: -11.378402709960938
    9. '[int' → logprob: -11.628402709960938
    10. 'diff' → logprob: -11.753402709960938

Token 890: '],' (ID: 2155)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02604353241622448
    2. ']' → logprob: -4.15104341506958
    3. ' -' → logprob: -4.65104341506958
    4. '   ' → logprob: -8.276043891906738
    5. ']+=' → logprob: -9.401043891906738
    6. '  ' → logprob: -11.276043891906738
    7. '[' → logprob: -11.651043891906738
    8. '']' → logprob: -11.901043891906738
    9. '```' → logprob: -12.151043891906738
    10. ' ]' → logprob: -12.151043891906738

Token 891: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.19104298949241638
    2. '+=' → logprob: -2.941042900085449
    3. 'R' → logprob: -3.191042900085449
    4. 'X' → logprob: -3.316042900085449
    5. ' +=' → logprob: -4.066042900085449
    6. ' delta' → logprob: -4.441042900085449
    7. '   ' → logprob: -5.441042900085449
    8. '+' → logprob: -5.941042900085449
    9. ' R' → logprob: -6.566042900085449
    10. '-' → logprob: -6.691042900085449

Token 892: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.7659202218055725
    2. '[' → logprob: -1.0159201622009277
    3. '[L' → logprob: -2.5159201622009277
    4. ']+=' → logprob: -3.3909201622009277
    5. ']' → logprob: -3.8909201622009277
    6. '+=' → logprob: -4.140920162200928
    7. ' +=' → logprob: -5.015920162200928
    8. '```' → logprob: -5.015920162200928
    9. '+' → logprob: -6.015920162200928
    10. '   ' → logprob: -6.265920162200928

Token 893: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47850510478019714
    2. '+' → logprob: -0.9785051345825195
    3. ']+=' → logprob: -6.1035051345825195
    4. ' +' → logprob: -6.4785051345825195
    5. '   ' → logprob: -7.6035051345825195
    6. ']+' → logprob: -9.72850513458252
    7. ' ]' → logprob: -10.97850513458252
    8. '```' → logprob: -11.47850513458252
    9. '[' → logprob: -11.72850513458252
    10. ' ' → logprob: -11.97850513458252

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012582694762386382
    2. '+' → logprob: -9.125125885009766
    3. ' ' → logprob: -12.000125885009766
    4. ']' → logprob: -12.625125885009766
    5. ']+=' → logprob: -13.250125885009766
    6. '   ' → logprob: -14.000125885009766
    7. ' +' → logprob: -14.500125885009766
    8. ']+' → logprob: -14.500125885009766
    9. '```' → logprob: -14.750125885009766
    10. '+=' → logprob: -15.000125885009766

Token 895: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035058727953583
    2. ']+=' → logprob: -5.753505706787109
    3. '   ' → logprob: -8.75350570678711
    4. '']' → logprob: -10.25350570678711
    5. '"]' → logprob: -10.37850570678711
    6. '[' → logprob: -10.50350570678711
    7. ' ]' → logprob: -10.87850570678711
    8. '+' → logprob: -11.62850570678711
    9. '```' → logprob: -11.75350570678711
    10. ']+' → logprob: -11.87850570678711

Token 896: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47167205810546875
    2. '
' → logprob: -1.5966720581054688
    3. ' =' → logprob: -2.5966720581054688
    4. '[L' → logprob: -3.2216720581054688
    5. '[' → logprob: -4.346672058105469
    6. '    
' → logprob: -4.846672058105469
    7. 'def' → logprob: -4.971672058105469
    8. 'delta' → logprob: -5.096672058105469
    9. '=' → logprob: -5.221672058105469
    10. ' +=' → logprob: -6.221672058105469

Token 897: ' faire' (ID: 8119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8430734276771545
    2. '+=' → logprob: -0.9680734276771545
    3. ' +=' → logprob: -2.3430733680725098
    4. 'delta' → logprob: -2.8430733680725098
    5. 'increment' → logprob: -4.46807336807251
    6. ' delta' → logprob: -4.59307336807251
    7. ' +' → logprob: -5.21807336807251
    8. 'X' → logprob: -5.71807336807251
    9. ' increment' → logprob: -7.84307336807251
    10. ']+=' → logprob: -7.96807336807251

Token 898: ' difference' (ID: 9809)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0261859893798828
    2. 'delta' → logprob: -1.6511859893798828
    3. ' une' → logprob: -2.151185989379883
    4. ' delta' → logprob: -2.651185989379883
    5. ' +=' → logprob: -2.901185989379883
    6. '+=' → logprob: -3.151185989379883
    7. ' la' → logprob: -3.401185989379883
    8. 'l' → logprob: -3.651185989379883
    9. 'une' → logprob: -3.776185989379883
    10. ' un' → logprob: -4.151185989379883

Token 899: ' prefix' (ID: 18633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2841911315917969
    2. ' =' → logprob: -1.2841911315917969
    3. '   ' → logprob: -1.7841911315917969
    4. '
' → logprob: -2.659191131591797
    5. ']' → logprob: -2.659191131591797
    6. '[
' → logprob: -3.284191131591797
    7. '[' → logprob: -4.034191131591797
    8. '\' → logprob: -4.784191131591797
    9. '=
' → logprob: -4.784191131591797
    10. 'delta' → logprob: -4.784191131591797

Token 900: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38003629446029663
    2. ' =' → logprob: -2.8800363540649414
    3. '_delta' → logprob: -3.0050363540649414
    4. '_' → logprob: -3.1300363540649414
    5. 'delta' → logprob: -3.2550363540649414
    6. 's' → logprob: -4.005036354064941
    7. '=' → logprob: -4.380036354064941
    8. '```' → logprob: -4.505036354064941
    9. '[
' → logprob: -4.630036354064941
    10. '
' → logprob: -4.880036354064941

Token 901: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48193782567977905
    2. 'delta' → logprob: -1.4819378852844238
    3. '
' → logprob: -2.106937885284424
    4. '    
' → logprob: -4.356937885284424
    5. ' delta' → logprob: -4.606937885284424
    6. ' 
' → logprob: -5.481937885284424
    7. '   
' → logprob: -6.981937885284424
    8. '  
' → logprob: -6.981937885284424
    9. '\n' → logprob: -7.356937885284424
    10. 'if' → logprob: -7.856937885284424

Token 902: 'Im' (ID: 1707)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7388383746147156
    2. ')' → logprob: -0.9888383746147156
    3. '=' → logprob: -3.4888384342193604
    4. ' +=' → logprob: -3.6138384342193604
    5. ' =' → logprob: -4.113838195800781
    6. '   ' → logprob: -4.238838195800781
    7. '+' → logprob: -4.363838195800781
    8. ' ]' → logprob: -4.488838195800781
    9. '+=' → logprob: -4.488838195800781
    10. ')
' → logprob: -5.613838195800781

Token 903: 'os' (ID: 365)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0012351145269349217
    2. 'p' → logprob: -6.751235008239746
    3. 'ported' → logprob: -10.876235008239746
    4. 'plement' → logprob: -11.001235008239746
    5. 'os' → logprob: -11.626235008239746
    6. 'porta' → logprob: -12.501235008239746
    7. 'ports' → logprob: -12.751235008239746
    8. '
' → logprob: -12.751235008239746
    9. 'possible' → logprob: -13.126235008239746
    10. '=' → logprob: -13.376235008239746

Token 904: ' method' (ID: 2595)
  Prédit: ' method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' method' → logprob: -0.6868929266929626
    2. ')' → logprob: -0.9368929266929626
    3. ')]' → logprob: -3.6868929862976074
    4. 'method' → logprob: -4.061892986297607
    5. ')
' → logprob: -4.686892986297607
    6. ' array' → logprob: -4.811892986297607
    7. ']' → logprob: -5.186892986297607
    8. ' methode' → logprob: -5.186892986297607
    9. ' méthode' → logprob: -5.561892986297607
    10. 'array' → logprob: -5.561892986297607

Token 905: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5759986042976379
    2. '   ' → logprob: -1.3259985446929932
    3. ']
' → logprob: -2.075998544692993
    4. ')' → logprob: -4.450998783111572
    5. ')
' → logprob: -4.700998783111572
    6. '
' → logprob: -4.700998783111572
    7. '[L' → logprob: -4.700998783111572
    8. '[
' → logprob: -5.950998783111572
    9. ' =' → logprob: -6.950998783111572
    10. '[' → logprob: -7.200998783111572

Token 906: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.36774274706840515
    2. '   ' → logprob: -1.2427427768707275
    3. '
' → logprob: -4.617742538452148
    4. ' delta' → logprob: -4.867742538452148
    5. '    
' → logprob: -7.242742538452148
    6. 'if' → logprob: -7.992742538452148
    7. '```' → logprob: -9.242742538452148
    8. ' if' → logprob: -9.867742538452148
    9. '\' → logprob: -9.992742538452148
    10. '#' → logprob: -9.992742538452148

Token 907: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8292909264564514
    2. 'delta' → logprob: -0.8292909264564514
    3. '
' → logprob: -2.3292908668518066
    4. ' delta' → logprob: -3.9542908668518066
    5. '    
' → logprob: -4.954290866851807
    6. ' 
' → logprob: -7.079290866851807
    7. '```' → logprob: -7.329290866851807
    8. '  
' → logprob: -7.329290866851807
    9. '   
' → logprob: -7.579290866851807
    10. '

' → logprob: -9.079291343688965

Token 908: ' Puis' (ID: 87717)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.03919393941760063
    2. '   ' → logprob: -4.039194107055664
    3. 'if' → logprob: -4.289194107055664
    4. '
' → logprob: -5.039194107055664
    5. '    
' → logprob: -8.289194107055664
    6. ' delta' → logprob: -8.664194107055664
    7. '#' → logprob: -9.664194107055664
    8. 'import' → logprob: -10.539194107055664
    9. ' if' → logprob: -10.664194107055664
    10. '(delta' → logprob: -11.164194107055664

Token 909: ' on' (ID: 402)
  Prédit: ' delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' delta' → logprob: -0.5859317183494568
    2. '   ' → logprob: -1.8359317779541016
    3. 'delta' → logprob: -2.0859317779541016
    4. '
' → logprob: -2.5859317779541016
    5. ' continue' → logprob: -3.2109317779541016
    6. 'continue' → logprob: -3.7109317779541016
    7. 'import' → logprob: -4.585931777954102
    8. '#' → logprob: -6.085931777954102
    9. 'contin' → logprob: -7.210931777954102
    10. 'prefix' → logprob: -7.335931777954102

Token 910: ' calc' (ID: 25691)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5894030332565308
    2. ' continue' → logprob: -0.9644030332565308
    3. 'contin' → logprob: -3.2144031524658203
    4. '#' → logprob: -5.21440315246582
    5. 'def' → logprob: -5.96440315246582
    6. 'for' → logprob: -5.96440315246582
    7. 'import' → logprob: -6.46440315246582
    8. 'delta' → logprob: -6.71440315246582
    9. 'update' → logprob: -6.83940315246582
    10. 'apply' → logprob: -7.08940315246582

Token 911: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.032100897282361984
    2. 'ul' → logprob: -4.032100677490234
    3. 'ulate' → logprob: -4.532100677490234
    4. '=' → logprob: -7.282100677490234
    5. 'delta' → logprob: -7.407100677490234
    6. '_delta' → logprob: -7.407100677490234
    7. 'uler' → logprob: -8.157100677490234
    8. 'ulte' → logprob: -9.032100677490234
    9. 'ulé' → logprob: -9.157100677490234
    10. 'al' → logprob: -9.407100677490234

Token 912: ' valeurs' (ID: 73668)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5237128734588623
    2. ' delta' → logprob: -1.1487128734588623
    3. '   ' → logprob: -3.3987128734588623
    4. 'prefix' → logprob: -3.8987128734588623
    5. ' prefix' → logprob: -5.273713111877441
    6. 'temp' → logprob: -5.523713111877441
    7. '```' → logprob: -6.023713111877441
    8. 'import' → logprob: -6.273713111877441
    9. 'continue' → logprob: -6.273713111877441
    10. '    ' → logprob: -6.398713111877441

Token 913: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0888579934835434
    2. 'delta' → logprob: -3.213857889175415
    3. '
' → logprob: -4.463858127593994
    4. ' =' → logprob: -4.963858127593994
    5. ' delta' → logprob: -5.213858127593994
    6. '    
' → logprob: -5.463858127593994
    7. 'import' → logprob: -5.963858127593994
    8. '[' → logprob: -6.213858127593994
    9. '_delta' → logprob: -6.463858127593994
    10. '[
' → logprob: -6.588858127593994

Token 914: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4960561692714691
    2. 'A' → logprob: -1.2460561990737915
    3. 'positions' → logprob: -2.621056079864502
    4. 'les' → logprob: -4.746056079864502
    5. 'indices' → logprob: -4.871056079864502
    6. 'pos' → logprob: -5.871056079864502
    7. ' L' → logprob: -5.996056079864502
    8. 'position' → logprob: -6.496056079864502
    9. 'l' → logprob: -6.621056079864502
    10. ' les' → logprob: -7.121056079864502

Token 915: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27521681785583496
    2. ' -' → logprob: -2.025216817855835
    3. ']' → logprob: -3.025216817855835
    4. '   ' → logprob: -3.275216817855835
    5. ',' → logprob: -5.025217056274414
    6. '],' → logprob: -5.275217056274414
    7. '[L' → logprob: -5.775217056274414
    8. ' ,' → logprob: -7.025217056274414
    9. '
' → logprob: -7.025217056274414
    10. '```' → logprob: -7.150217056274414

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012674804776906967
    2. '2' → logprob: -4.762674808502197
    3. ' ' → logprob: -5.512674808502197
    4. '3' → logprob: -12.325174331665039
    5. '```' → logprob: -13.325174331665039
    6. '5' → logprob: -13.637674331665039
    7. '4' → logprob: -13.825174331665039
    8. 'L' → logprob: -14.262674331665039
    9. '-' → logprob: -14.262674331665039
    10. '   ' → logprob: -14.325174331665039

Token 917: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5021052360534668
    2. '
' → logprob: -1.0021052360534668
    3. '    
' → logprob: -5.127105236053467
    4. 'delta' → logprob: -5.127105236053467
    5. ')
' → logprob: -6.002105236053467
    6. '```' → logprob: -6.127105236053467
    7. ']' → logprob: -6.252105236053467
    8. ']
' → logprob: -6.502105236053467
    9. '+' → logprob: -7.127105236053467
    10. '
' → logprob: -7.252105236053467

Token 918: ' L' (ID: 451)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5496993660926819
    2. 'L' → logprob: -1.174699306488037
    3. ' R' → logprob: -2.424699306488037
    4. ' L' → logprob: -3.674699306488037
    5. '   ' → logprob: -11.049699783325195
    6. ' ' → logprob: -11.174699783325195
    7. 'delta' → logprob: -11.424699783325195
    8. 'A' → logprob: -11.549699783325195
    9. ' delta' → logprob: -11.674699783325195
    10. ' and' → logprob: -11.799699783325195

Token 919: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07840923964977264
    2. 'delta' → logprob: -3.328409194946289
    3. '
' → logprob: -3.453409194946289
    4. '    
' → logprob: -5.078409194946289
    5. ' delta' → logprob: -7.578409194946289
    6. 'if' → logprob: -8.703409194946289
    7. ',' → logprob: -8.953409194946289
    8. 'import' → logprob: -8.953409194946289
    9. '```' → logprob: -9.078409194946289
    10. ' 
' → logprob: -9.078409194946289

Token 920: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.026402710005640984
    2. ' R' → logprob: -3.651402711868286
    3. 'L' → logprob: -9.651402473449707
    4. '   ' → logprob: -10.776402473449707
    5. 'delta' → logprob: -13.026402473449707
    6. ' L' → logprob: -13.401402473449707
    7. '```' → logprob: -13.401402473449707
    8. 'and' → logprob: -13.526402473449707
    9. ' ' → logprob: -13.651402473449707
    10. ' and' → logprob: -13.651402473449707

Token 921: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03577813878655434
    2. 'delta' → logprob: -4.035778045654297
    3. '
' → logprob: -4.785778045654297
    4. 'import' → logprob: -5.785778045654297
    5. '    
' → logprob: -6.160778045654297
    6. 'if' → logprob: -6.285778045654297
    7. ',' → logprob: -7.660778045654297
    8. '#' → logprob: -8.035778045654297
    9. '```' → logprob: -8.160778045654297
    10. ' delta' → logprob: -8.785778045654297

Token 922: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0125663997605443
    2. ' R' → logprob: -4.387566566467285
    3. '   ' → logprob: -10.387566566467285
    4. 'delta' → logprob: -10.887566566467285
    5. ' delta' → logprob: -13.262566566467285
    6. ' ' → logprob: -14.262566566467285
    7. 'L' → logprob: -14.262566566467285
    8. '(R' → logprob: -14.762566566467285
    9. '    ' → logprob: -14.950066566467285
    10. '...' → logprob: -15.012566566467285

Token 923: '+' (ID: 10)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5489543676376343
    2. '   ' → logprob: -1.0489543676376343
    3. 'delta' → logprob: -3.673954486846924
    4. '    
' → logprob: -4.798954486846924
    5. '_delta' → logprob: -4.923954486846924
    6. ']
' → logprob: -5.548954486846924
    7. ')
' → logprob: -5.923954486846924
    8. ']' → logprob: -5.923954486846924
    9. '[
' → logprob: -5.923954486846924
    10. '[L' → logprob: -6.298954486846924

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001773192489054054
    2. '+' → logprob: -9.000177383422852
    3. '2' → logprob: -11.000177383422852
    4. '```' → logprob: -11.000177383422852
    5. ' ' → logprob: -12.125177383422852
    6. '0' → logprob: -12.750177383422852
    7. ']' → logprob: -13.250177383422852
    8. '
' → logprob: -13.750177383422852
    9. '   ' → logprob: -13.750177383422852
    10. '++' → logprob: -14.125177383422852

Token 925: ' en' (ID: 469)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.23743091523647308
    2. '   ' → logprob: -1.8624309301376343
    3. '
' → logprob: -3.4874308109283447
    4. ' delta' → logprob: -4.362431049346924
    5. '    
' → logprob: -5.487431049346924
    6. 'if' → logprob: -5.612431049346924
    7. '```' → logprob: -6.237431049346924
    8. ' if' → logprob: -7.112431049346924
    9. ' 
' → logprob: -7.487431049346924
    10. '(delta' → logprob: -8.612430572509766

Token 926: ' calcul' (ID: 7559)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09745753556489944
    2. 'O' → logprob: -2.7224576473236084
    3. 'lambda' → logprob: -4.847457408905029
    4. '```' → logprob: -5.472457408905029
    5. 'python' → logprob: -5.972457408905029
    6. '#' → logprob: -5.972457408905029
    7. 'for' → logprob: -6.472457408905029
    8. ' O' → logprob: -6.847457408905029
    9. 'calcul' → logprob: -7.097457408905029
    10. 'prefix' → logprob: -7.097457408905029

Token 927: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8577971458435059
    2. '=' → logprob: -1.6077971458435059
    3. 'ating' → logprob: -2.732797145843506
    4. 'delta' → logprob: -2.732797145843506
    5. ' =' → logprob: -2.982797145843506
    6. '[' → logprob: -2.982797145843506
    7. 'ing' → logprob: -3.107797145843506
    8. '       ' → logprob: -3.857797145843506
    9. 'ation' → logprob: -4.232797145843506
    10. ' +=' → logprob: -5.482797145843506

Token 928: ' la' (ID: 557)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.5200279355049133
    2. 'prefix' → logprob: -1.7700278759002686
    3. ' delta' → logprob: -2.2700278759002686
    4. '
' → logprob: -3.0200278759002686
    5. ' prefix' → logprob: -3.7700278759002686
    6. '0' → logprob: -4.145028114318848
    7. '```' → logprob: -5.145028114318848
    8. '1' → logprob: -5.145028114318848
    9. 'diff' → logprob: -5.395028114318848
    10. 'd' → logprob: -6.020028114318848

Token 929: ' somme' (ID: 64484)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.8291412591934204
    2. 'delta' → logprob: -1.4541412591934204
    3. ' prefix' → logprob: -2.704141139984131
    4. 'def' → logprob: -3.079141139984131
    5. 'c' → logprob: -3.704141139984131
    6. '#' → logprob: -3.704141139984131
    7. '0' → logprob: -4.079141139984131
    8. ' delta' → logprob: -4.079141139984131
    9. ' cumulative' → logprob: -4.079141139984131
    10. 'acc' → logprob: -4.329141139984131

Token 930: ' prefix' (ID: 18633)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.612956702709198
    2. '   ' → logprob: -0.987956702709198
    3. ' delta' → logprob: -2.9879567623138428
    4. '
' → logprob: -3.4879567623138428
    5. '_delta' → logprob: -6.487956523895264
    6. '    
' → logprob: -7.362956523895264
    7. 'if' → logprob: -7.612956523895264
    8. 'import' → logprob: -7.612956523895264
    9. '(delta' → logprob: -7.862956523895264
    10. '```' → logprob: -8.487957000732422

Token 931: '

' (ID: 279)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.23373614251613617
    2. '   ' → logprob: -2.108736038208008
    3. '
' → logprob: -2.858736038208008
    4. ' delta' → logprob: -4.358736038208008
    5. '_delta' → logprob: -5.358736038208008
    6. '    
' → logprob: -5.358736038208008
    7. '```' → logprob: -6.108736038208008
    8. ' 
' → logprob: -7.733736038208008
    9. 'diff' → logprob: -7.733736038208008
    10. '(delta' → logprob: -7.858736038208008

Token 932: '   ' (ID: 271)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.39073583483695984
    2. '   ' → logprob: -1.1407358646392822
    3. ' delta' → logprob: -6.515735626220703
    4. 'if' → logprob: -7.015735626220703
    5. '
' → logprob: -7.390735626220703
    6. '```' → logprob: -8.140735626220703
    7. '    
' → logprob: -8.265735626220703
    8. '(delta' → logprob: -9.140735626220703
    9. '#' → logprob: -9.890735626220703
    10. 'import' → logprob: -10.015735626220703

Token 933: ' #' (ID: 1069)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.042797740548849106
    2. '   ' → logprob: -3.542797803878784
    3. 'if' → logprob: -4.417797565460205
    4. '#' (adapté à ' #') → logprob: -7.292797565460205
    5. '
' → logprob: -9.292798042297363
    6. ' delta' → logprob: -9.917798042297363
    7. '```' → logprob: -11.042798042297363
    8. 'import' → logprob: -11.042798042297363
    9. '    
' → logprob: -11.167798042297363
    10. 'from' → logprob: -12.042798042297363

Token 934: ' Initial' (ID: 9209)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.07414999604225159
    2. 'if' → logprob: -2.6991500854492188
    3. '   ' → logprob: -5.824150085449219
    4. '#' → logprob: -7.199150085449219
    5. 'from' → logprob: -8.449150085449219
    6. ' delta' → logprob: -8.949150085449219
    7. 'import' → logprob: -9.949150085449219
    8. ' if' → logprob: -10.324150085449219
    9. '    
' → logprob: -10.699150085449219
    10. '
' → logprob: -11.199150085449219

Token 935: 'isation' (ID: 6993)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.06914579123258591
    2. 'delta' → logprob: -2.819145679473877
    3. '   ' → logprob: -5.944145679473877
    4. '_delta' → logprob: -6.194145679473877
    5. 'ize' → logprob: -7.444145679473877
    6. '#' → logprob: -7.444145679473877
    7. 'd' → logprob: -8.069146156311035
    8. 'i' → logprob: -8.319146156311035
    9. 'zed' → logprob: -9.069146156311035
    10. 'size' → logprob: -9.319146156311035

Token 936: ' du' (ID: 1462)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0020619959104806185
    2. 'if' → logprob: -6.25206184387207
    3. ' delta' → logprob: -9.00206184387207
    4. '   ' → logprob: -13.12706184387207
    5. 'Delta' → logprob: -13.12706184387207
    6. 'try' → logprob: -13.50206184387207
    7. ' if' → logprob: -13.87706184387207
    8. '#' → logprob: -14.00206184387207
    9. '
' → logprob: -14.00206184387207
    10. 'del' → logprob: -14.87706184387207

Token 937: ' tableau' (ID: 67053)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.005422411952167749
    2. ' delta' → logprob: -5.255422592163086
    3. '_delta' → logprob: -10.005422592163086
    4. 'if' → logprob: -10.255422592163086
    5. 'import' → logprob: -10.255422592163086
    6. 'from' → logprob: -10.505422592163086
    7. '#' → logprob: -11.380422592163086
    8. '```' → logprob: -11.880422592163086
    9. 'd' → logprob: -12.630422592163086
    10. 'del' → logprob: -12.880422592163086

Token 938: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -4.620622712536715e-05
    2. ' delta' → logprob: -10.000045776367188
    3. '
' → logprob: -15.625045776367188
    4. 'Delta' → logprob: -15.875045776367188
    5. 'del' → logprob: -16.250045776367188
    6. '(delta' → logprob: -16.250045776367188
    7. '   ' → logprob: -16.500045776367188
    8. 'd' → logprob: -16.875045776367188
    9. '_delta' → logprob: -17.125045776367188
    10. '#' → logprob: -17.250045776367188

Token 939: ' si' (ID: 1784)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -3.166338137816638e-05
    2. ' delta' → logprob: -10.875031471252441
    3. 'if' → logprob: -11.375031471252441
    4. '(delta' → logprob: -14.750031471252441
    5. 'try' → logprob: -15.500031471252441
    6. 'Delta' → logprob: -15.875031471252441
    7. '
' → logprob: -16.000032424926758
    8. '```' → logprob: -16.000032424926758
    9. 'import' → logprob: -16.125032424926758
    10. '#' → logprob: -17.375032424926758

Token 940: ' premier' (ID: 15506)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038835540413856506
    2. ''' → logprob: -3.6638355255126953
    3. 'L' → logprob: -5.913835525512695
    4. ' _' → logprob: -5.913835525512695
    5. ' '' → logprob: -5.913835525512695
    6. ''L' → logprob: -6.038835525512695
    7. 'len' → logprob: -7.538835525512695
    8. ' L' → logprob: -8.038835525512695
    9. ''_' → logprob: -8.288835525512695
    10. ''s' → logprob: -8.788835525512695

Token 941: ' tour' (ID: 6970)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08909333497285843
    2. 'try' → logprob: -3.2140934467315674
    3. ' if' → logprob: -3.9640934467315674
    4. '_' → logprob: -4.714093208312988
    5. '=' → logprob: -5.339093208312988
    6. 'delta' → logprob: -5.839093208312988
    7. 'for' → logprob: -6.089093208312988
    8. '_delta' → logprob: -6.464093208312988
    9. ' =' → logprob: -7.214093208312988
    10. 's' → logprob: -7.589093208312988

Token 942: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.380387544631958
    2. 'try' → logprob: -1.255387544631958
    3. 'delta' → logprob: -3.505387544631958
    4. ' if' → logprob: -6.880387306213379
    5. '   ' → logprob: -8.380387306213379
    6. '
' → logprob: -9.755387306213379
    7. ' try' → logprob: -10.255387306213379
    8. ' delta' → logprob: -10.255387306213379
    9. 'import' → logprob: -12.505387306213379
    10. 'Delta' → logprob: -12.630387306213379

Token 943: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7025865316390991
    2. 'try' → logprob: -0.7025865316390991
    3. 'delta' → logprob: -4.702586650848389
    4. '   ' → logprob: -8.82758617401123
    5. ' if' → logprob: -8.95258617401123
    6. ' try' → logprob: -10.45258617401123
    7. ' delta' → logprob: -12.45258617401123
    8. 'import' → logprob: -12.57758617401123
    9. '```' → logprob: -13.20258617401123
    10. '	if' → logprob: -13.20258617401123

Token 944: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.33233842253685
    2. 'if' → logprob: -1.3323384523391724
    3. ' if' → logprob: -4.957338333129883
    4. 'delta' → logprob: -5.082338333129883
    5. ' try' → logprob: -5.207338333129883
    6. ' delta' → logprob: -8.957338333129883
    7. '   ' → logprob: -10.582338333129883
    8. '```' → logprob: -11.582338333129883
    9. 'import' → logprob: -12.082338333129883
    10. '
' → logprob: -12.832338333129883

Token 945: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7195615172386169
    2. 'try' → logprob: -0.7195615172386169
    3. 'delta' → logprob: -3.9695615768432617
    4. ' if' → logprob: -5.219561576843262
    5. ' try' → logprob: -6.719561576843262
    6. '   ' → logprob: -8.344561576843262
    7. ' delta' → logprob: -8.594561576843262
    8. 'import' → logprob: -9.469561576843262
    9. '```' → logprob: -10.469561576843262
    10. 'from' → logprob: -11.344561576843262

Token 946: ' crée' (ID: 102256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07372819632291794
    2. 'continue' → logprob: -3.323728084564209
    3. ' if' → logprob: -3.698728084564209
    4. ' continue' → logprob: -6.198728084564209
    5. 'import' → logprob: -6.323728084564209
    6. 'n' → logprob: -6.573728084564209
    7. 'delta' → logprob: -6.573728084564209
    8. '=' → logprob: -6.948728084564209
    9. 'try' → logprob: -7.073728084564209
    10. '   ' → logprob: -7.948728084564209

Token 947: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.08783558756113052
    2. 'if' → logprob: -2.7128355503082275
    3. ' delta' → logprob: -4.212835788726807
    4. 'try' → logprob: -6.212835788726807
    5. ' if' → logprob: -7.087835788726807
    6. '   ' → logprob: -10.837835311889648
    7. 'import' → logprob: -10.962835311889648
    8. '```' → logprob: -11.587835311889648
    9. '(delta' → logprob: -11.587835311889648
    10. '
' → logprob: -11.712835311889648

Token 948: ' avec' (ID: 3937)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.406850665807724
    2. 'delta' → logprob: -1.4068506956100464
    3. 'try' → logprob: -2.531850576400757
    4. '
' → logprob: -5.281850814819336
    5. ' if' → logprob: -5.531850814819336
    6. ' delta' → logprob: -8.031850814819336
    7. '   ' → logprob: -9.281850814819336
    8. 'import' → logprob: -9.531850814819336
    9. '(delta' → logprob: -9.531850814819336
    10. '```' → logprob: -9.656850814819336

Token 949: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18929935991764069
    2. 'delta' → logprob: -2.0642993450164795
    3. '[N' → logprob: -3.1892993450164795
    4. 'N' → logprob: -6.564299583435059
    5. ' [' → logprob: -6.689299583435059
    6. '0' → logprob: -7.064299583435059
    7. ' delta' → logprob: -7.314299583435059
    8. '(delta' → logprob: -9.564299583435059
    9. '[n' → logprob: -10.064299583435059
    10. '(N' → logprob: -11.189299583435059

Token 950: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32211172580718994
    2. '[N' → logprob: -1.32211172580719
    3. 'N' → logprob: -5.4471116065979
    4. 'delta' → logprob: -5.6971116065979
    5. '0' → logprob: -7.1971116065979
    6. ' [' → logprob: -8.197112083435059
    7. '(N' → logprob: -9.697112083435059
    8. '[n' → logprob: -10.572112083435059
    9. '(delta' → logprob: -12.197112083435059
    10. ' delta' → logprob: -12.447112083435059

Token 951: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4704509675502777
    2. 'delta' → logprob: -1.0954509973526
    3. 'try' → logprob: -4.0954508781433105
    4. '
' → logprob: -4.2204508781433105
    5. ' if' → logprob: -5.2204508781433105
    6. ' delta' → logprob: -6.4704508781433105
    7. '   ' → logprob: -6.4704508781433105
    8. 'import' → logprob: -7.5954508781433105
    9. '```' → logprob: -8.595451354980469
    10. '(delta' → logprob: -9.220451354980469

Token 952: '   ' (ID: 271)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.8725141882896423
    2. 'if' → logprob: -1.122514247894287
    3. 'delta' → logprob: -1.372514247894287
    4. '   ' → logprob: -6.622514247894287
    5. ' if' → logprob: -7.122514247894287
    6. 'import' → logprob: -7.747514247894287
    7. ' delta' → logprob: -8.372513771057129
    8. '
' → logprob: -9.122513771057129
    9. '```' → logprob: -9.372513771057129
    10. ' try' → logprob: -9.497513771057129

Token 953: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.40875673294067383
    2. 'if' → logprob: -1.1587567329406738
    3. 'delta' → logprob: -4.033756732940674
    4. ' if' → logprob: -5.908756732940674
    5. ' try' → logprob: -7.408756732940674
    6. 'import' → logprob: -8.283756256103516
    7. '
' → logprob: -9.033756256103516
    8. '   ' → logprob: -9.033756256103516
    9. ' delta' → logprob: -9.908756256103516
    10. '```' → logprob: -10.408756256103516

Token 954: ' On' (ID: 2160)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.5685573220252991
    2. 'if' → logprob: -1.0685572624206543
    3. 'delta' → logprob: -2.4435572624206543
    4. 'import' → logprob: -6.193557262420654
    5. 'from' → logprob: -7.818557262420654
    6. ' if' → logprob: -7.818557262420654
    7. '#' → logprob: -8.693557739257812
    8. ' try' → logprob: -9.318557739257812
    9. ' delta' → logprob: -9.818557739257812
    10. '
' → logprob: -10.318557739257812

Token 955: ' commence' (ID: 44755)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5155981183052063
    2. '=' → logprob: -1.7655980587005615
    3. 'try' → logprob: -2.5155980587005615
    4. 'continue' → logprob: -2.6405980587005615
    5. 'import' → logprob: -3.8905980587005615
    6. ' =' → logprob: -4.265598297119141
    7. '
' → logprob: -4.515598297119141
    8. 'n' → logprob: -4.515598297119141
    9. ' if' → logprob: -4.640598297119141
    10. 'delta' → logprob: -5.390598297119141

Token 956: ' par' (ID: 686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5582152605056763
    2. 'delta' → logprob: -1.0582152605056763
    3. 'try' → logprob: -3.0582151412963867
    4. '   ' → logprob: -4.558215141296387
    5. '
' → logprob: -4.558215141296387
    6. ' if' → logprob: -5.183215141296387
    7. 'import' → logprob: -5.558215141296387
    8. ' delta' → logprob: -5.933215141296387
    9. '    
' → logprob: -8.433215141296387
    10. 'from' → logprob: -9.183215141296387

Token 957: ' ça' (ID: 13590)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.4385838508605957
    2. 'try' → logprob: -1.9385838508605957
    3. 'import' → logprob: -2.3135838508605957
    4. ' delta' → logprob: -3.3135838508605957
    5. 'if' → logprob: -3.3135838508605957
    6. 'from' → logprob: -3.9385838508605957
    7. 'N' → logprob: -5.563583850860596
    8. 'len' → logprob: -5.688583850860596
    9. '(delta' → logprob: -5.688583850860596
    10. 'continue' → logprob: -5.938583850860596

Token 958: ' :' (ID: 712)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.06273926049470901
    2. 'try' → logprob: -3.187739372253418
    3. 'if' → logprob: -3.937739372253418
    4. ' delta' → logprob: -10.812739372253418
    5. '
' → logprob: -11.437739372253418
    6. 'import' → logprob: -12.062739372253418
    7. '   ' → logprob: -12.187739372253418
    8. 'from' → logprob: -12.937739372253418
    9. '```' → logprob: -13.312739372253418
    10. ' if' → logprob: -13.437739372253418

Token 959: ' (' (ID: 350)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.2160206437110901
    2. 'try' → logprob: -2.2160205841064453
    3. 'if' → logprob: -2.4660205841064453
    4. 'import' → logprob: -8.841020584106445
    5. 'from' → logprob: -8.966020584106445
    6. ' delta' → logprob: -11.216020584106445
    7. '   ' → logprob: -11.216020584106445
    8. '#' → logprob: -12.091020584106445
    9. 'Delta' → logprob: -13.216020584106445
    10. '
' → logprob: -13.216020584106445

Token 960: 'hors' (ID: 70144)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.28076738119125366
    2. 'try' → logprob: -1.9057674407958984
    3. 'if' → logprob: -2.4057674407958984
    4. ' delta' → logprob: -5.780767440795898
    5. 'import' → logprob: -6.405767440795898
    6. ' if' → logprob: -7.780767440795898
    7. 'from' → logprob: -8.155767440795898
    8. '   ' → logprob: -8.530767440795898
    9. ' try' → logprob: -8.905767440795898
    10. '
' → logprob: -10.405767440795898

Token 961: ' boucle' (ID: 174211)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.2205982506275177
    2. 'locals' → logprob: -2.0955982208251953
    3. 'if' → logprob: -3.8455982208251953
    4. ''' → logprob: -3.9705982208251953
    5. ' try' → logprob: -5.095598220825195
    6. 'len' → logprob: -5.720598220825195
    7. '__' → logprob: -5.970598220825195
    8. 'delta' → logprob: -6.345598220825195
    9. 'import' → logprob: -6.345598220825195
    10. ''d' → logprob: -6.470598220825195

Token 962: ')

' (ID: 1029)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.7652285099029541
    2. ')
' → logprob: -0.8902285099029541
    3. ')' → logprob: -2.140228509902954
    4. ')

' → logprob: -5.765228271484375
    5. '
' → logprob: -5.890228271484375
    6. ' delta' → logprob: -8.640228271484375
    7. 'import' → logprob: -9.015228271484375
    8. 'N' → logprob: -9.765228271484375
    9. '#' → logprob: -9.765228271484375
    10. '(delta' → logprob: -10.390228271484375

Token 963: '#' (ID: 2)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -2.2603901015827432e-05
    2. '
' → logprob: -11.500022888183594
    3. 'import' → logprob: -12.375022888183594
    4. '```' → logprob: -12.875022888183594
    5. 'from' → logprob: -13.125022888183594
    6. ' delta' → logprob: -13.500022888183594
    7. 'if' → logprob: -13.875022888183594
    8. '#' → logprob: -14.750022888183594
    9. 'N' → logprob: -15.000022888183594
    10. '   ' → logprob: -15.500022888183594

Token 964: ' Init' (ID: 30869)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0001126026691053994
    2. 'if' → logprob: -9.375112533569336
    3. 'try' → logprob: -10.625112533569336
    4. ' delta' → logprob: -13.625112533569336
    5. '
' → logprob: -14.000112533569336
    6. '#' → logprob: -14.250112533569336
    7. 'import' → logprob: -15.500112533569336
    8. 'from' → logprob: -15.750112533569336
    9. '   ' → logprob: -16.250112533569336
    10. '    
' → logprob: -16.375112533569336

Token 965: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.01281781867146492
    2. '_delta' → logprob: -5.012817859649658
    3. 'ial' → logprob: -5.262817859649658
    4. ' delta' → logprob: -7.262817859649658
    5. '   ' → logprob: -9.3878173828125
    6. 'Delta' → logprob: -9.6378173828125
    7. '(delta' → logprob: -11.2628173828125
    8. 'N' → logprob: -11.5128173828125
    9. 'ialize' → logprob: -11.6378173828125
    10. '#' → logprob: -12.2628173828125

Token 966: ' [' (ID: 723)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -3.054500666621607e-06
    2. ' delta' → logprob: -13.12500286102295
    3. '
' → logprob: -14.00000286102295
    4. '(delta' → logprob: -16.750003814697266
    5. 'from' → logprob: -16.875003814697266
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.750003814697266
    8. 'import' → logprob: -17.875003814697266
    9. 'Delta' → logprob: -18.000003814697266
    10. '#' → logprob: -18.375003814697266

Token 967: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33031970262527466
    2. '=' → logprob: -2.08031964302063
    3. '[' → logprob: -2.58031964302063
    4. 'delta' → logprob: -3.33031964302063
    5. ']' → logprob: -4.205319881439209
    6. 'N' → logprob: -4.580319881439209
    7. ' =' → logprob: -4.580319881439209
    8. ' [' → logprob: -5.705319881439209
    9. '[N' → logprob: -6.205319881439209
    10. '=[' → logprob: -6.205319881439209

Token 968: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1336342841386795
    2. '=' → logprob: -2.633634328842163
    3. ']=' → logprob: -3.383634328842163
    4. ' =' → logprob: -4.758634090423584
    5. ']*(' → logprob: -5.383634090423584
    6. '+' → logprob: -6.258634090423584
    7. ']*' → logprob: -6.883634090423584
    8. ']+' → logprob: -7.258634090423584
    9. '0' → logprob: -7.633634090423584
    10. ':' → logprob: -8.258634567260742

Token 969: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.176947600673884e-05
    2. '(N' → logprob: -10.750021934509277
    3. ' N' → logprob: -15.250021934509277
    4. 'len' → logprob: -17.12502098083496
    5. '   ' → logprob: -17.87502098083496
    6. '(' → logprob: -18.37502098083496
    7. '[N' → logprob: -18.37502098083496
    8. ' ' → logprob: -18.62502098083496
    9. '=' → logprob: -18.62502098083496
    10. '
' → logprob: -18.87502098083496

Token 970: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.12127808178775e-05
    2. ' +' → logprob: -10.000051498413086
    3. '+
' → logprob: -12.375051498413086
    4. '
' → logprob: -14.125051498413086
    5. '1' → logprob: -15.000051498413086
    6. '   ' → logprob: -15.875051498413086
    7. '```' → logprob: -15.875051498413086
    8. '+)' → logprob: -16.500051498413086
    9. '+[' → logprob: -16.875051498413086
    10. '2' → logprob: -16.875051498413086

Token 971: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07893407344818115
    2. '1' → logprob: -2.5789341926574707
    3. ' ' → logprob: -11.328933715820312
    4. '3' → logprob: -11.828933715820312
    5. '
' → logprob: -11.953933715820312
    6. '+' → logprob: -12.328933715820312
    7. '6' → logprob: -12.578933715820312
    8. '```' → logprob: -13.141433715820312
    9. '5' → logprob: -13.203933715820312
    10. '7' → logprob: -13.453933715820312

Token 972: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09303466975688934
    2. ')
' → logprob: -2.4680347442626953
    3. ']' → logprob: -5.718034744262695
    4. '=' → logprob: -8.843034744262695
    5. ')=' → logprob: -8.843034744262695
    6. 'delta' → logprob: -9.093034744262695
    7. ')

' → logprob: -9.468034744262695
    8. ' )' → logprob: -9.968034744262695
    9. '+' → logprob: -9.968034744262695
    10. ')]' → logprob: -10.218034744262695

Token 973: ' pour' (ID: 1930)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00016539888747502118
    2. '
' → logprob: -8.875164985656738
    3. ' delta' → logprob: -11.000164985656738
    4. 'N' → logprob: -12.375164985656738
    5. '(delta' → logprob: -13.750164985656738
    6. '

' → logprob: -13.750164985656738
    7. '#' → logprob: -14.000164985656738
    8. '```' → logprob: -14.125164985656738
    9. '    
' → logprob: -15.375164985656738
    10. '   ' → logprob: -15.500164985656738

Token 974: ' la' (ID: 557)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.23977729678153992
    2. 'N' → logprob: -2.3647773265838623
    3. '0' → logprob: -2.9897773265838623
    4. ' delta' → logprob: -4.364777088165283
    5. 'stock' → logprob: -4.614777088165283
    6. 'acc' → logprob: -4.989777088165283
    7. 'faire' → logprob: -5.489777088165283
    8. ' gérer' → logprob: -5.614777088165283
    9. 'diff' → logprob: -5.989777088165283
    10. 'len' → logprob: -5.989777088165283

Token 975: ' méthode' (ID: 71490)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00796373188495636
    2. ' delta' → logprob: -4.88296365737915
    3. 'N' → logprob: -8.382964134216309
    4. '_delta' → logprob: -10.007964134216309
    5. '```' → logprob: -10.507964134216309
    6. '(delta' → logprob: -10.632964134216309
    7. '_' → logprob: -11.882964134216309
    8. 'd' → logprob: -12.632964134216309
    9. '
' → logprob: -12.632964134216309
    10. ')' → logprob: -12.757964134216309

Token 976: ' Im' (ID: 3133)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0005429040757007897
    2. '
' → logprob: -7.625543117523193
    3. ' delta' → logprob: -10.250542640686035
    4. '```' → logprob: -11.125542640686035
    5. 'N' → logprob: -13.250542640686035
    6. '

' → logprob: -14.250542640686035
    7. '(delta' → logprob: -14.250542640686035
    8. '#' → logprob: -14.875542640686035
    9. '   ' → logprob: -14.875542640686035
    10. '`' → logprob: -15.625542640686035

Token 977: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.2271040976047516
    2. 'delta' → logprob: -1.6021040678024292
    3. 'Delta' → logprob: -7.727104187011719
    4. '_delta' → logprob: -7.852104187011719
    5. 'port' → logprob: -8.352104187011719
    6. 'p' → logprob: -9.102104187011719
    7. ' delta' → logprob: -9.227104187011719
    8. '(delta' → logprob: -9.602104187011719
    9. '```' → logprob: -9.727104187011719
    10. 'mutable' → logprob: -10.352104187011719

Token 978: '
' (ID: 198)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00011915886716451496
    2. '
' → logprob: -9.25011920928955
    3. ' delta' → logprob: -11.12511920928955
    4. 'N' → logprob: -13.12511920928955
    5. '```' → logprob: -13.12511920928955
    6. '#' → logprob: -13.37511920928955
    7. '

' → logprob: -14.12511920928955
    8. '    
' → logprob: -14.62511920928955
    9. '   ' → logprob: -14.87511920928955
    10. '(delta' → logprob: -14.87511920928955

Token 979: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -7.696077227592468e-05
    2. '
' → logprob: -9.625077247619629
    3. ' delta' → logprob: -11.625077247619629
    4. '```' → logprob: -14.125077247619629
    5. 'N' → logprob: -14.250077247619629
    6. '

' → logprob: -15.125077247619629
    7. '(delta' → logprob: -16.000076293945312
    8. '    
' → logprob: -17.500076293945312
    9. '#' → logprob: -17.625076293945312
    10. '
' → logprob: -17.875076293945312

Token 980: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740842878818512
    2. ' =' → logprob: -0.9740842580795288
    3. '=[' → logprob: -11.97408390045166
    4. '[' → logprob: -15.22408390045166
    5. '=[]' → logprob: -16.099084854125977
    6. '```' → logprob: -16.099084854125977
    7. ' =[' → logprob: -16.224084854125977
    8. ' ' → logprob: -16.224084854125977
    9. '＝' → logprob: -16.474084854125977
    10. ' ' → logprob: -16.474084854125977

Token 981: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.493430894101039e-05
    2. ' [' → logprob: -9.500075340270996
    3. '0' → logprob: -18.12507438659668
    4. '[N' → logprob: -18.50007438659668
    5. ' ' → logprob: -20.00007438659668
    6. '   ' → logprob: -21.87507438659668
    7. '([' → logprob: -22.37507438659668
    8. '  ' → logprob: -23.87507438659668
    9. '[int' → logprob: -24.50007438659668
    10. '{' → logprob: -24.62507438659668

Token 982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.875
    4. '00' → logprob: -21.75
    5. '000' → logprob: -21.875
    6. '   ' → logprob: -22.0
    7. '０' → logprob: -23.25
    8. '	' → logprob: -24.25
    9. ' ' → logprob: -24.4375
    10. '०' → logprob: -24.4375

Token 983: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03305387496948242
    2. ']*(' → logprob: -3.6580538749694824
    3. ']*' → logprob: -5.408053874969482
    4. ']+' → logprob: -6.533053874969482
    5. 'for' → logprob: -7.783053874969482
    6. ' for' → logprob: -7.908053874969482
    7. ')' → logprob: -12.90805435180664
    8. '(N' → logprob: -13.40805435180664
    9. ' ]' → logprob: -13.65805435180664
    10. '
' → logprob: -13.90805435180664

Token 984: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5512374639511108
    2. ']*(' → logprob: -1.0512374639511108
    3. ']*' → logprob: -3.3012375831604004
    4. '*(' → logprob: -4.1762375831604
    5. '*' → logprob: -4.1762375831604
    6. ' for' → logprob: -5.1762375831604
    7. 'for' → logprob: -7.6762375831604
    8. ' *' → logprob: -8.051237106323242
    9. '(N' → logprob: -9.426237106323242
    10. '*N' → logprob: -9.676237106323242

Token 985: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010497196344658732
    2. '((' → logprob: -7.001049518585205
    3. '(' → logprob: -9.126049995422363
    4. ' (' → logprob: -10.876049995422363
    5. '(n' → logprob: -11.501049995422363
    6. '   ' → logprob: -16.251049041748047
    7. '(NS' → logprob: -16.376049041748047
    8. '(len' → logprob: -16.876049041748047
    9. '(int' → logprob: -17.251049041748047
    10. '	' → logprob: -17.501049041748047

Token 986: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014165391214191914
    2. '(N' → logprob: -4.26416540145874
    3. ' N' → logprob: -13.889164924621582
    4. ' (' → logprob: -14.264164924621582
    5. '(' → logprob: -15.389164924621582
    6. '   ' → logprob: -16.1391658782959
    7. ' ' → logprob: -17.5141658782959
    8. '	N' → logprob: -17.6391658782959
    9. '((' → logprob: -17.8891658782959
    10. '
' → logprob: -19.1391658782959

Token 987: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003855093673337251
    2. ' +' → logprob: -7.875385284423828
    3. '2' → logprob: -12.500385284423828
    4. '+
' → logprob: -13.500385284423828
    5. '
' → logprob: -17.000385284423828
    6. ' ' → logprob: -17.250385284423828
    7. '＋' → logprob: -17.375385284423828
    8. '[' → logprob: -17.375385284423828
    9. '   ' → logprob: -17.875385284423828
    10. '```' → logprob: -17.875385284423828

Token 988: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02324605919420719
    2. '3' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.773245811462402
    4. '4' → logprob: -17.14824676513672
    5. '   ' → logprob: -17.52324676513672
    6. '
' → logprob: -17.77324676513672
    7. '  ' → logprob: -17.89824676513672
    8. '```' → logprob: -18.27324676513672
    9. '02' → logprob: -18.77324676513672
    10. '

' → logprob: -19.52324676513672

Token 989: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018150413408875465
    2. '3' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. '
' → logprob: -15.893150329589844
    5. '4' → logprob: -17.143150329589844
    6. '   ' → logprob: -17.268150329589844
    7. '```' → logprob: -17.393150329589844
    8. '22' → logprob: -17.768150329589844
    9. '02' → logprob: -17.768150329589844
    10. '5' → logprob: -18.018150329589844

Token 990: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.864272967912257e-05
    2. ')
' → logprob: -9.500088691711426
    3. ')

' → logprob: -11.375088691711426
    4. ' )' → logprob: -14.000088691711426
    5. ')#' → logprob: -15.125088691711426
    6. '
' → logprob: -15.375088691711426
    7. ')
' → logprob: -16.12508773803711
    8. '))' → logprob: -16.25008773803711
    9. '#' → logprob: -16.25008773803711
    10. ']' → logprob: -16.50008773803711

Token 991: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00031091354321688414
    2. '
' → logprob: -9.125310897827148
    3. '#' → logprob: -9.625310897827148
    4. ' for' → logprob: -9.750310897827148
    5. 'prev' → logprob: -11.125310897827148
    6. 'delta' → logprob: -11.125310897827148
    7. '   ' → logprob: -11.625310897827148
    8. 'import' → logprob: -11.875310897827148
    9. 'current' → logprob: -12.125310897827148
    10. '    
' → logprob: -12.125310897827148

Token 992: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004488988779485226
    2. '#' → logprob: -5.879488945007324
    3. 'delta' → logprob: -7.129488945007324
    4. '   ' → logprob: -8.379488945007324
    5. 'def' → logprob: -8.879488945007324
    6. ' for' → logprob: -9.129488945007324
    7. 'import' → logprob: -9.629488945007324
    8. '
' → logprob: -9.629488945007324
    9. 'prefix' → logprob: -9.754488945007324
    10. 'prev' → logprob: -9.879488945007324

Token 993: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007424455252476037
    2. ' def' → logprob: -7.250742435455322
    3. '
' → logprob: -10.50074291229248
    4. '#' → logprob: -13.50074291229248
    5. 'de' → logprob: -13.75074291229248
    6. 'to' → logprob: -14.50074291229248
    7. ' to' → logprob: -14.50074291229248
    8. '_def' → logprob: -15.25074291229248
    9. '```' → logprob: -15.50074291229248
    10. ' 
' → logprob: -15.75074291229248

Token 994: ' avoir' (ID: 16595)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.40184566378593445
    2. 'get' → logprob: -1.1518456935882568
    3. 'pref' → logprob: -5.526845455169678
    4. 'def' → logprob: -5.651845455169678
    5. 'compute' → logprob: -6.276845455169678
    6. 'apply' → logprob: -6.276845455169678
    7. 'update' → logprob: -6.401845455169678
    8. 'calc' → logprob: -7.026845455169678
    9. ' prefix' → logprob: -8.276845932006836
    10. 'calculate' → logprob: -8.651845932006836

Token 995: ' altitude' (ID: 66032)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6061240434646606
    2. 'def' → logprob: -0.8561240434646606
    3. ' la' → logprob: -4.106123924255371
    4. 'prefix' → logprob: -4.856123924255371
    5. 'l' → logprob: -6.606123924255371
    6. ' def' → logprob: -6.856123924255371
    7. 'le' → logprob: -7.231123924255371
    8. 'current' → logprob: -7.981123924255371
    9. '_prefix' → logprob: -8.106123924255371
    10. 'c' → logprob: -8.481123924255371

Token 996: ' actuelle' (ID: 104951)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4815123677253723
    2. '_at' → logprob: -1.2315123081207275
    3. '(i' → logprob: -2.7315123081207275
    4. 'at' → logprob: -3.9815123081207275
    5. '(idx' → logprob: -6.231512546539307
    6. '(' → logprob: -6.981512546539307
    7. '(position' → logprob: -7.731512546539307
    8. '(index' → logprob: -7.856512546539307
    9. '(at' → logprob: -7.981512546539307
    10. '(pos' → logprob: -7.981512546539307

Token 997: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.183501293184236e-05
    2. '
' → logprob: -9.62507152557373
    3. ' def' → logprob: -12.62507152557373
    4. '(i' → logprob: -14.37507152557373
    5. '(def' → logprob: -14.50007152557373
    6. '(
' → logprob: -14.75007152557373
    7. '_def' → logprob: -15.25007152557373
    8. '(' → logprob: -15.50007152557373
    9. '(idx' → logprob: -16.375072479248047
    10. '_at' → logprob: -16.375072479248047

Token 998: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6035712361335754
    2. 'pos' → logprob: -1.6035711765289307
    3. 'index' → logprob: -2.3535711765289307
    4. 'indice' → logprob: -2.6035711765289307
    5. 'idx' → logprob: -2.8535711765289307
    6. 'position' → logprob: -3.7285711765289307
    7. 'x' → logprob: -7.47857141494751
    8. 'k' → logprob: -7.97857141494751
    9. 'un' → logprob: -9.353570938110352
    10. 'ind' → logprob: -9.478570938110352

Token 999: ''ind' (ID: 82245)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2540452778339386
    2. 'i' → logprob: -2.504045248031616
    3. 'a' → logprob: -2.629045248031616
    4. 'indice' → logprob: -2.879045248031616
    5. 'position' → logprob: -5.004045486450195
    6. 'idx' → logprob: -5.504045486450195
    7. 'indices' → logprob: -7.754045486450195
    8. '=index' → logprob: -7.754045486450195
    9. ''instant' → logprob: -7.879045486450195
    10. 'ambda' → logprob: -8.254045486450195

Token 1000: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011081179603934288
    2. 'ice' → logprob: -4.511081218719482
    3. 'def' → logprob: -11.386080741882324
    4. 'dex' → logprob: -12.011080741882324
    5. 'i' → logprob: -12.636080741882324
    6. 'exp' → logprob: -13.011080741882324
    7. 'index' → logprob: -13.011080741882324
    8. 'exe' → logprob: -13.636080741882324
    9. 'e' → logprob: -13.761080741882324
    10. '#' → logprob: -13.886080741882324

Token 1001: ' i' (ID: 575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015014449309092015
    2. ' def' → logprob: -9.750149726867676
    3. '
' → logprob: -9.750149726867676
    4. 'idx' → logprob: -11.750149726867676
    5. '```' → logprob: -12.500149726867676
    6. 'i' → logprob: -12.750149726867676
    7. 'position' → logprob: -12.875149726867676
    8. '(i' → logprob: -13.000149726867676
    9. 'index' → logprob: -13.125149726867676
    10. '(idx' → logprob: -13.375149726867676

Token 1002: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013011827832087874
    2. ' def' → logprob: -9.125129699707031
    3. '
' → logprob: -11.375129699707031
    4. ':' → logprob: -12.250129699707031
    5. '(' → logprob: -13.625129699707031
    6. ':def' → logprob: -13.750129699707031
    7. '```' → logprob: -13.875129699707031
    8. '(i' → logprob: -15.250129699707031
    9. '(def' → logprob: -15.250129699707031
    10. ' =' → logprob: -15.625129699707031

Token 1003: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000122608442325145
    2. '
' → logprob: -9.250123023986816
    3. ' def' → logprob: -10.625123023986816
    4. '```' → logprob: -13.250123023986816
    5. '	def' → logprob: -16.5001220703125
    6. '``' → logprob: -16.8751220703125
    7. ' 
' → logprob: -17.1251220703125
    8. 'import' → logprob: -17.5001220703125
    9. '   ' → logprob: -17.7501220703125
    10. '\' → logprob: -17.7501220703125

Token 1004: '[i' (ID: 1768)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.9111306071281433
    2. 'def' → logprob: -1.161130666732788
    3. '_' → logprob: -1.661130666732788
    4. '_current' → logprob: -4.036130428314209
    5. ' def' → logprob: -4.411130428314209
    6. '[i' → logprob: -4.661130428314209
    7. '_idx' → logprob: -4.786130428314209
    8. '_at' → logprob: -4.786130428314209
    9. 'i' → logprob: -5.161130428314209
    10. '_alt' → logprob: -5.286130428314209

Token 1005: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010518652852624655
    2. 'i' → logprob: -7.376051902770996
    3. ']+' → logprob: -8.501051902770996
    4. '[i' → logprob: -8.626051902770996
    5. '[' → logprob: -11.376051902770996
    6. '"]' → logprob: -11.876051902770996
    7. '']' → logprob: -12.001051902770996
    8. ']
' → logprob: -12.626051902770996
    9. ' ]' → logprob: -12.876051902770996
    10. '[]' → logprob: -13.001051902770996

Token 1006: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018042469397187233
    2. ')' → logprob: -6.01804256439209
    3. ' =' → logprob: -6.01804256439209
    4. '<|end|>' → logprob: -6.26804256439209
    5. '=' → logprob: -6.39304256439209
    6. '+' → logprob: -6.64304256439209
    7. ',' → logprob: -6.64304256439209
    8. '
' → logprob: -6.76804256439209
    9. ' def' → logprob: -7.01804256439209
    10. ' +' → logprob: -7.14304256439209

Token 1007: ' sum' (ID: 4215)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.24246136844158173
    2. 'sum' → logprob: -1.8674613237380981
    3. 'prefix' → logprob: -3.1174614429473877
    4. '(delta' → logprob: -4.992461204528809
    5. ' delta' → logprob: -5.492461204528809
    6. '(sum' → logprob: -5.867461204528809
    7. ' (' → logprob: -7.117461204528809
    8. '(prefix' → logprob: -7.492461204528809
    9. ' sum' → logprob: -7.742461204528809
    10. ' prefix' → logprob: -8.117461204528809

Token 1008: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3949192464351654
    2. '(delta' → logprob: -1.6449192762374878
    3. '_delta' → logprob: -2.1449191570281982
    4. '(' → logprob: -4.644919395446777
    5. '_' → logprob: -6.644919395446777
    6. ' delta' → logprob: -7.144919395446777
    7. '=' → logprob: -7.269919395446777
    8. '_prefix' → logprob: -7.519919395446777
    9. ' =' → logprob: -7.644919395446777
    10. '   ' → logprob: -7.769919395446777

Token 1009: '[' (ID: 58)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09620589017868042
    2. '_prefix' → logprob: -3.096205949783325
    3. '_' → logprob: -3.721205949783325
    4. ' =' → logprob: -4.471205711364746
    5. '=' → logprob: -6.096205711364746
    6. '
' → logprob: -6.846205711364746
    7. 'prefix' → logprob: -6.846205711364746
    8. '(' → logprob: -7.346205711364746
    9. '_=' → logprob: -7.346205711364746
    10. '_delta' → logprob: -7.596205711364746

Token 1010: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5757407546043396
    2. ':i' → logprob: -1.2007408142089844
    3. '0' → logprob: -2.0757408142089844
    4. ':index' → logprob: -5.575740814208984
    5. ':j' → logprob: -6.075740814208984
    6. '[:' → logprob: -6.575740814208984
    7. ':d' → logprob: -6.700740814208984
    8. 'i' → logprob: -7.575740814208984
    9. '1' → logprob: -7.575740814208984
    10. ':def' → logprob: -8.325740814208984

Token 1011: '..' (ID: 485)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0049715242348611355
    2. 'i' → logprob: -5.504971504211426
    3. ':' → logprob: -7.629971504211426
    4. ']' → logprob: -8.129971504211426
    5. '   ' → logprob: -10.754971504211426
    6. ',i' → logprob: -10.879971504211426
    7. ' i' → logprob: -11.254971504211426
    8. '...' → logprob: -11.379971504211426
    9. '	i' → logprob: -11.379971504211426
    10. ' :' → logprob: -11.504971504211426

Token 1012: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003001888981088996
    2. ' i' → logprob: -8.125300407409668
    3. '(i' → logprob: -13.875300407409668
    4. '{i' → logprob: -14.000300407409668
    5. ']' → logprob: -14.125300407409668
    6. '```' → logprob: -14.500300407409668
    7. '
' → logprob: -15.500300407409668
    8. ' (' → logprob: -15.625300407409668
    9. '   ' → logprob: -15.750300407409668
    10. '_i' → logprob: -15.750300407409668

Token 1013: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024576576426625252
    2. '[i' → logprob: -4.024576663970947
    3. ']
' → logprob: -5.899576663970947
    4. 'i' → logprob: -7.149576663970947
    5. '])' → logprob: -7.399576663970947
    6. '+' → logprob: -7.649576663970947
    7. '(i' → logprob: -7.899576663970947
    8. '[:' → logprob: -8.024576187133789
    9. 'def' → logprob: -8.149576187133789
    10. '[' → logprob: -8.524576187133789

Token 1014: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004004024958703667
    2. '
' → logprob: -7.875400543212891
    3. '```' → logprob: -11.25040054321289
    4. ' def' → logprob: -12.00040054321289
    5. '``' → logprob: -14.87540054321289
    6. '\' → logprob: -15.75040054321289
    7. '   ' → logprob: -15.87540054321289
    8. '    
' → logprob: -16.62540054321289
    9. ' 
' → logprob: -16.62540054321289
    10. 'from' → logprob: -17.00040054321289

Token 1015: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.44578081369400024
    2. 'prefix' → logprob: -1.5707807540893555
    3. 'current' → logprob: -2.3207807540893555
    4. 'alt' → logprob: -3.0707807540893555
    5. 'pref' → logprob: -5.4457807540893555
    6. 'query' → logprob: -6.9457807540893555
    7. ' get' → logprob: -7.5707807540893555
    8. 'curr' → logprob: -7.6957807540893555
    9. ' prefix' → logprob: -8.195780754089355
    10. ' altitude' → logprob: -8.570780754089355

Token 1016: '_alt' (ID: 77054)
  Prédit: '_alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.0039557479321956635
    2. '(i' → logprob: -6.378955841064453
    3. 'alt' → logprob: -7.378955841064453
    4. '_current' → logprob: -7.753955841064453
    5. '_val' → logprob: -7.878955841064453
    6. '_delta' → logprob: -8.253955841064453
    7. '_' → logprob: -8.878955841064453
    8. 'Altitude' → logprob: -9.378955841064453
    9. '_value' → logprob: -9.628955841064453
    10. '(' → logprob: -9.878955841064453

Token 1017: '(i' (ID: 3649)
  Prédit: 'itude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itude' → logprob: -0.014157517813146114
    2. '(i' → logprob: -5.139157295227051
    3. '[i' → logprob: -5.764157295227051
    4. 'i' → logprob: -6.139157295227051
    5. 'ude' → logprob: -7.264157295227051
    6. '   ' → logprob: -7.639157295227051
    7. '_i' → logprob: -8.01415729522705
    8. 'idue' → logprob: -8.63915729522705
    9. '_val' → logprob: -8.88915729522705
    10. 'def' → logprob: -8.88915729522705

Token 1018: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6944994926452637
    2. '):' → logprob: -0.6944994926452637
    3. ')' → logprob: -6.944499492645264
    4. '(i' → logprob: -8.194499969482422
    5. '):
' → logprob: -10.194499969482422
    6. ',' → logprob: -10.569499969482422
    7. '):

' → logprob: -10.944499969482422
    8. '   ' → logprob: -11.569499969482422
    9. ' ):
' → logprob: -12.444499969482422
    10. '(' → logprob: -12.569499969482422

Token 1019: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1924125850200653
    2. 'return' → logprob: -2.1924126148223877
    3. '   ' → logprob: -3.5674126148223877
    4. ' sum' → logprob: -3.9424126148223877
    5. 'sum' → logprob: -4.442412376403809
    6. ' delta' → logprob: -6.317412376403809
    7. 'delta' → logprob: -6.817412376403809
    8. '    ' → logprob: -8.192412376403809
    9. ' get' → logprob: -8.692412376403809
    10. ' alt' → logprob: -8.942412376403809

Token 1020: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09175920486450195
    2. 'sum' → logprob: -2.841759204864502
    3. ' return' → logprob: -3.591759204864502
    4. ' sum' → logprob: -7.716759204864502
    5. '   ' → logprob: -7.841759204864502
    6. 'prefix' → logprob: -7.841759204864502
    7. '0' → logprob: -8.341758728027344
    8. 'delta' → logprob: -9.341758728027344
    9. '
' → logprob: -9.966758728027344
    10. 'result' → logprob: -10.716758728027344

Token 1021: ' pré' (ID: 9424)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10473113507032394
    2. ' return' → logprob: -2.7297310829162598
    3. 'res' → logprob: -4.10473108291626
    4. '   ' → logprob: -5.22973108291626
    5. 'prefix' → logprob: -5.72973108291626
    6. ' res' → logprob: -5.85473108291626
    7. 'sum' → logprob: -6.10473108291626
    8. 'acc' → logprob: -6.60473108291626
    9. 'i' → logprob: -7.47973108291626
    10. 'ans' → logprob: -7.72973108291626

Token 1022: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0055452436208724976
    2. 'sum' → logprob: -5.255545139312744
    3. 'return' → logprob: -9.255545616149902
    4. 'fixed' → logprob: -9.630545616149902
    5. '   ' → logprob: -10.380545616149902
    6. 'f' → logprob: -10.505545616149902
    7. 'def' → logprob: -10.630545616149902
    8. 'fi' → logprob: -11.255545616149902
    9. 'if' → logprob: -11.755545616149902
    10. '
' → logprob: -11.755545616149902

Token 1023: 'e' (ID: 68)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3972945511341095
    2. 'fix' → logprob: -1.647294521331787
    3. '_sum' → logprob: -3.147294521331787
    4. '   ' → logprob: -3.397294521331787
    5. ' =' → logprob: -3.522294521331787
    6. '=' → logprob: -4.022294521331787
    7. 'f' → logprob: -6.397294521331787
    8. 'm' → logprob: -6.522294521331787
    9. '=sum' → logprob: -6.647294521331787
    10. ' sum' → logprob: -6.647294521331787

Token 1024: ' de' (ID: 334)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6053953766822815
    2. '=' → logprob: -1.8553953170776367
    3. '_sum' → logprob: -1.9803953170776367
    4. ' =' → logprob: -1.9803953170776367
    5. 'return' → logprob: -4.730395317077637
    6. 'def' → logprob: -5.480395317077637
    7. '=sum' → logprob: -5.605395317077637
    8. '   ' → logprob: -6.355395317077637
    9. 's' → logprob: -6.730395317077637
    10. '_prefix' → logprob: -7.980395317077637

Token 1025: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.33301350474357605
    2. 'sum' → logprob: -1.3330135345458984
    3. 'i' → logprob: -3.9580135345458984
    4. ' delta' → logprob: -8.208013534545898
    5. ' sum' → logprob: -9.833013534545898
    6. 'acc' → logprob: -10.458013534545898
    7. 'lambda' → logprob: -11.333013534545898
    8. 'prefix' → logprob: -11.458013534545898
    9. '(delta' → logprob: -11.708013534545898
    10. ' i' → logprob: -11.708013534545898

Token 1026: ' jusqu' (ID: 21961)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7750051617622375
    2. 'sum' → logprob: -1.0250051021575928
    3. ' =' → logprob: -2.9000051021575928
    4. 'return' → logprob: -3.4000051021575928
    5. 'def' → logprob: -3.5250051021575928
    6. '   ' → logprob: -3.7750051021575928
    7. '
' → logprob: -5.150005340576172
    8. 'prefix' → logprob: -5.150005340576172
    9. '=sum' → logprob: -5.400005340576172
    10. '_sum' → logprob: -5.650005340576172

Token 1027: ''à' (ID: 33688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006401523482054472
    2. '(i' → logprob: -5.381401538848877
    3. '   ' → logprob: -6.756401538848877
    4. ' i' → logprob: -7.631401538848877
    5. '[i' → logprob: -9.756401062011719
    6. '=i' → logprob: -10.881401062011719
    7. '	i' → logprob: -10.881401062011719
    8. 'à' → logprob: -11.256401062011719
    9. 'index' → logprob: -12.131401062011719
    10. '_i' → logprob: -12.506401062011719

Token 1028: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1054253011243418e-05
    2. ' i' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.375020980834961
    4. '	i' → logprob: -15.500020980834961
    5. 'indice' → logprob: -15.875020980834961
    6. 'index' → logprob: -16.25002098083496
    7. '```' → logprob: -17.00002098083496
    8. '[i' → logprob: -17.12502098083496
    9. '_i' → logprob: -17.50002098083496
    10. '
' → logprob: -17.87502098083496

Token 1029: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2213839441537857
    2. 'res' → logprob: -2.221384048461914
    3. 'return' → logprob: -2.971384048461914
    4. 'sum' → logprob: -4.471384048461914
    5. 'prefix' → logprob: -4.721384048461914
    6. 'acc' → logprob: -5.346384048461914
    7. 'ans' → logprob: -5.846384048461914
    8. 's' → logprob: -6.346384048461914
    9. 'total' → logprob: -6.596384048461914
    10. 'result' → logprob: -6.596384048461914

Token 1030: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04153202101588249
    2. 'res' → logprob: -4.166532039642334
    3. 'return' → logprob: -4.416532039642334
    4. 'sum' → logprob: -5.666532039642334
    5. 'prefix' → logprob: -5.791532039642334
    6. ' res' → logprob: -6.166532039642334
    7. ' return' → logprob: -7.041532039642334
    8. 'total' → logprob: -7.166532039642334
    9. '```' → logprob: -7.541532039642334
    10. '
' → logprob: -7.541532039642334

Token 1031: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007849830202758312
    2. 'return' → logprob: -5.50784969329834
    3. 'def' → logprob: -7.00784969329834
    4. 'sum' → logprob: -7.00784969329834
    5. ' return' → logprob: -7.13284969329834
    6. '```' → logprob: -8.25784969329834
    7. ' res' → logprob: -8.63284969329834
    8. 'res' → logprob: -8.63284969329834
    9. 'prefix' → logprob: -8.63284969329834
    10. '
' → logprob: -9.13284969329834

Token 1032: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7500287294387817
    2. 'acc' → logprob: -2.000028610229492
    3. 'res' → logprob: -2.125028610229492
    4. ' res' → logprob: -2.750028610229492
    5. ' prefix' → logprob: -3.000028610229492
    6. ' acc' → logprob: -3.125028610229492
    7. 'return' → logprob: -3.500028610229492
    8. '   ' → logprob: -4.000028610229492
    9. 's' → logprob: -4.500028610229492
    10. 'psum' → logprob: -4.750028610229492

Token 1033: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25399544835090637
    2. 'res' → logprob: -2.003995418548584
    3. 's' → logprob: -3.378995418548584
    4. '   ' → logprob: -4.128995418548584
    5. ' return' → logprob: -4.128995418548584
    6. 'acc' → logprob: -4.753995418548584
    7. 'prefix' → logprob: -5.003995418548584
    8. ' res' → logprob: -5.503995418548584
    9. ' s' → logprob: -6.628995418548584
    10. 'total' → logprob: -6.878995418548584

Token 1034: ' va' (ID: 3423)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6868911981582642
    2. ' prefix' → logprob: -2.6868910789489746
    3. 'def' → logprob: -2.6868910789489746
    4. 'acc' → logprob: -2.8118910789489746
    5. ' =' → logprob: -2.9368910789489746
    6. 'sum' → logprob: -3.1868910789489746
    7. '_prefix' → logprob: -3.3118910789489746
    8. '=' → logprob: -3.6868910789489746
    9. 'res' → logprob: -3.8118910789489746
    10. '   ' → logprob: -3.9368910789489746

Token 1035: ' construire' (ID: 92473)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7505244016647339
    2. 'acc' → logprob: -2.0005245208740234
    3. 'sum' → logprob: -2.5005245208740234
    4. 's' → logprob: -2.5005245208740234
    5. 'res' → logprob: -3.1255245208740234
    6. 'def' → logprob: -3.5005245208740234
    7. ' prefix' → logprob: -3.7505245208740234
    8. '   ' → logprob: -4.125524520874023
    9. 'pref' → logprob: -4.125524520874023
    10. 'psum' → logprob: -4.250524520874023

Token 1036: ' un' (ID: 537)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2495892494916916
    2. 'acc' → logprob: -2.749589204788208
    3. 'psum' → logprob: -3.374589204788208
    4. 'res' → logprob: -3.499589204788208
    5. ' prefix' → logprob: -3.874589204788208
    6. 'sum' → logprob: -3.999589204788208
    7. 'curr' → logprob: -4.624589443206787
    8. 'def' → logprob: -5.124589443206787
    9. 'pref' → logprob: -5.249589443206787
    10. '_prefix' → logprob: -5.374589443206787

Token 1037: ' tableau' (ID: 67053)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.1376829296350479
    2. 'acc' → logprob: -2.6376829147338867
    3. 'curr' → logprob: -4.262682914733887
    4. 'c' → logprob: -4.637682914733887
    5. 'pref' → logprob: -4.887682914733887
    6. '_prefix' → logprob: -5.012682914733887
    7. 'def' → logprob: -5.262682914733887
    8. 'psum' → logprob: -5.887682914733887
    9. ' prefix' → logprob: -6.137682914733887
    10. '_acc' → logprob: -6.637682914733887

Token 1038: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.12075982987880707
    2. '_prefix' → logprob: -2.6207597255706787
    3. ' prefix' → logprob: -3.8707597255706787
    4. 'delta' → logprob: -5.120759963989258
    5. 'cum' → logprob: -5.620759963989258
    6. 'def' → logprob: -6.120759963989258
    7. 'psum' → logprob: -6.495759963989258
    8. '=' → logprob: -7.245759963989258
    9. 'pref' → logprob: -7.245759963989258
    10. ' delta' → logprob: -7.620759963989258

Token 1039: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.68599933385849
    2. '_prefix' → logprob: -1.9359993934631348
    3. '_' → logprob: -2.0609993934631348
    4. '_delta' → logprob: -2.1859993934631348
    5. 'sum' → logprob: -2.5609993934631348
    6. 'psum' → logprob: -4.435999393463135
    7. '_s' → logprob: -5.060999393463135
    8. 'prefix' → logprob: -5.435999393463135
    9. '_ps' → logprob: -5.810999393463135
    10. 'delta' → logprob: -5.810999393463135

Token 1040: ' pour' (ID: 1930)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.11924050748348236
    2. 'delta' → logprob: -3.1192405223846436
    3. '_prefix' → logprob: -3.2442405223846436
    4. '=' → logprob: -4.7442402839660645
    5. 'psum' → logprob: -4.8692402839660645
    6. ' =' → logprob: -5.7442402839660645
    7. '#' → logprob: -6.2442402839660645
    8. '
' → logprob: -6.3692402839660645
    9. 'def' → logprob: -6.8692402839660645
    10. ' prefix' → logprob: -7.1192402839660645

Token 1041: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.31361833214759827
    2. ' delta' → logprob: -2.0636184215545654
    3. '_delta' → logprob: -3.0636184215545654
    4. 'i' → logprob: -3.0636184215545654
    5. 'prefix' → logprob: -4.188618183135986
    6. 'acc' → logprob: -4.688618183135986
    7. '_prefix' → logprob: -4.938618183135986
    8. 'def' → logprob: -5.938618183135986
    9. 'c' → logprob: -6.063618183135986
    10. ' i' → logprob: -6.438618183135986

Token 1042: ' en' (ID: 469)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.10411645472049713
    2. 'delta' → logprob: -2.354116439819336
    3. ' prefix' → logprob: -6.729116439819336
    4. 'psum' → logprob: -6.854116439819336
    5. '#' → logprob: -7.354116439819336
    6. '_prefix' → logprob: -8.104116439819336
    7. '
' → logprob: -8.729116439819336
    8. 'if' → logprob: -9.104116439819336
    9. 'pref' → logprob: -9.104116439819336
    10. ' delta' → logprob: -9.229116439819336

Token 1043: ' dehors' (ID: 95167)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.348663330078125
    2. 'def' → logprob: -1.723663330078125
    3. 'cache' → logprob: -2.098663330078125
    4. 'it' → logprob: -2.098663330078125
    5. 'c' → logprob: -2.223663330078125
    6. '
' → logprob: -3.348663330078125
    7. 'temp' → logprob: -3.598663330078125
    8. 'delta' → logprob: -3.598663330078125
    9. 'range' → logprob: -3.973663330078125
    10. 'global' → logprob: -4.598663330078125

Token 1044: ' de' (ID: 334)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.36705249547958374
    2. 'def' → logprob: -2.1170525550842285
    3. 'for' → logprob: -2.1170525550842285
    4. '#' → logprob: -3.6170525550842285
    5. 'la' → logprob: -4.1170525550842285
    6. 'get' → logprob: -4.8670525550842285
    7. 'delta' → logprob: -5.7420525550842285
    8. ' the' → logprob: -5.8670525550842285
    9. 'of' → logprob: -6.2420525550842285
    10. 'loop' → logprob: -6.3670525550842285

Token 1045: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03727711737155914
    2. 'bou' → logprob: -3.6622772216796875
    3. 'for' → logprob: -5.1622772216796875
    4. 'loop' → logprob: -5.7872772216796875
    5. ' boucle' → logprob: -6.9122772216796875
    6. ' la' → logprob: -7.1622772216796875
    7. 'the' → logprob: -9.037277221679688
    8. 'l' → logprob: -9.412277221679688
    9. '
' → logprob: -9.912277221679688
    10. 'Bou' → logprob: -11.287277221679688

Token 1046: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00297686830163002
    2. 'loop' → logprob: -5.877976894378662
    3. '_loop' → logprob: -9.502976417541504
    4. '_for' → logprob: -10.627976417541504
    5. ' for' → logprob: -11.002976417541504
    6. 'bou' → logprob: -11.002976417541504
    7. ' boucle' → logprob: -11.127976417541504
    8. 'def' → logprob: -11.877976417541504
    9. 'range' → logprob: -12.127976417541504
    10. ' loop' → logprob: -12.252976417541504

Token 1047: ' Q' (ID: 1486)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.014116964302957058
    2. 'delta' → logprob: -4.7641167640686035
    3. '#' → logprob: -5.5141167640686035
    4. 'psum' → logprob: -7.5141167640686035
    5. ' prefix' → logprob: -8.514117240905762
    6. '
' → logprob: -8.639117240905762
    7. 'ps' → logprob: -8.764117240905762
    8. '<|end|>' → logprob: -9.139117240905762
    9. '(prefix' → logprob: -9.389117240905762
    10. '_prefix' → logprob: -9.889117240905762

Token 1048: ',' (ID: 11)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.011544299311935902
    2. 'delta' → logprob: -5.261544227600098
    3. '#' → logprob: -5.761544227600098
    4. 'psum' → logprob: -6.761544227600098
    5. '
' → logprob: -7.261544227600098
    6. ' prefix' → logprob: -7.636544227600098
    7. '<|end|>' → logprob: -8.261544227600098
    8. 'ps' → logprob: -8.761544227600098
    9. '_prefix' → logprob: -9.386544227600098
    10. '(prefix' → logprob: -9.386544227600098

Token 1049: ' 
' (ID: 793)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9503018260002136
    2. 'prefix' → logprob: -1.4503018856048584
    3. ' pass' → logprob: -1.8253018856048584
    4. '#' → logprob: -2.5753018856048584
    5. 'continue' → logprob: -3.4503018856048584
    6. ' prefix' → logprob: -3.5753018856048584
    7. ' continue' → logprob: -3.9503018856048584
    8. '   ' → logprob: -4.450301647186279
    9. '<|end|>' → logprob: -5.075301647186279
    10. '
' → logprob: -5.075301647186279

Token 1050: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7352745532989502
    2. 'def' → logprob: -1.6102745532989502
    3. 'prefix' → logprob: -1.8602745532989502
    4. '   ' → logprob: -2.48527455329895
    5. ' prefix' → logprob: -4.110274314880371
    6. '    ' → logprob: -4.360274314880371
    7. '
' → logprob: -4.485274314880371
    8. ' #' → logprob: -4.610274314880371
    9. ' ' → logprob: -4.985274314880371
    10. 'delta' → logprob: -5.485274314880371

Token 1051: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6197327375411987
    2. '   ' → logprob: -1.8697327375411987
    3. 'pass' → logprob: -1.8697327375411987
    4. 'prefix' → logprob: -2.8697328567504883
    5. 'def' → logprob: -3.3697328567504883
    6. ' pass' → logprob: -3.8697328567504883
    7. ' #' → logprob: -4.619732856750488
    8. '    ' → logprob: -5.244732856750488
    9. '...' → logprob: -5.369732856750488
    10. ' prefix' → logprob: -5.494732856750488

Token 1052: ' mais' (ID: 2899)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3806784451007843
    2. '#' → logprob: -2.005678415298462
    3. '   ' → logprob: -2.255678415298462
    4. 'def' → logprob: -3.505678415298462
    5. ' prefix' → logprob: -3.755678415298462
    6. '    ' → logprob: -5.255678653717041
    7. ' #' → logprob: -5.505678653717041
    8. '
' → logprob: -6.255678653717041
    9. 'pass' → logprob: -6.255678653717041
    10. 'delta' → logprob: -6.380678653717041

Token 1053: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7319090366363525
    2. '#' → logprob: -0.8569090366363525
    3. 'for' → logprob: -3.1069090366363525
    4. 'continue' → logprob: -3.8569090366363525
    5. 'prefix' → logprob: -4.606908798217773
    6. ' #' → logprob: -5.856908798217773
    7. 'pass' → logprob: -5.981908798217773
    8. '       ' → logprob: -6.231908798217773
    9. 'contin' → logprob: -6.856908798217773
    10. '    ' → logprob: -6.981908798217773

Token 1054: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15081670880317688
    2. 'prefix' → logprob: -3.1508166790008545
    3. 'pass' → logprob: -3.2758166790008545
    4. ' pass' → logprob: -3.6508166790008545
    5. ' prefix' → logprob: -4.525816917419434
    6. '    ' → logprob: -5.400816917419434
    7. '    
' → logprob: -6.275816917419434
    8. 'sum' → logprob: -6.275816917419434
    9. '
' → logprob: -6.400816917419434
    10. 'def' → logprob: -6.650816917419434

Token 1055: ' fait' (ID: 7473)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8636744618415833
    2. 'def' → logprob: -1.6136744022369385
    3. 'for' → logprob: -2.3636744022369385
    4. ' continue' → logprob: -2.4886744022369385
    5. '#' → logprob: -2.6136744022369385
    6. 'prefix' → logprob: -3.8636744022369385
    7. 'do' → logprob: -4.238674640655518
    8. ' for' → logprob: -4.488674640655518
    9. 'ind' → logprob: -4.613674640655518
    10. '=' → logprob: -4.738674640655518

Token 1056: ' lin' (ID: 14432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34222155809402466
    2. 'prefix' → logprob: -2.21722149848938
    3. 'res' → logprob: -2.59222149848938
    4. 'sum' → logprob: -3.46722149848938
    5. 'acc' → logprob: -4.092221736907959
    6. '   ' → logprob: -4.467221736907959
    7. 's' → logprob: -4.592221736907959
    8. ' res' → logprob: -5.092221736907959
    9. ' prefix' → logprob: -5.592221736907959
    10. 'ans' → logprob: -5.717221736907959

Token 1057: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.45611342787742615
    2. 'é' → logprob: -1.8311134576797485
    3. 'ear' → logprob: -1.8311134576797485
    4. 'aire' → logprob: -3.706113338470459
    5. 'ea' → logprob: -4.581113338470459
    6. 'def' → logprob: -5.206113338470459
    7. 'a' → logprob: -7.331113338470459
    8. '   ' → logprob: -7.456113338470459
    9. '#' → logprob: -7.706113338470459
    10. 'éar' → logprob: -7.956113338470459

Token 1058: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.02026495337486267
    2. 'ar' → logprob: -4.270265102386475
    3. 'def' → logprob: -6.395265102386475
    4. 'al' → logprob: -6.770265102386475
    5. 'are' → logprob: -7.395265102386475
    6. 'air' → logprob: -7.645265102386475
    7. ' ' → logprob: -7.770265102386475
    8. 'a' → logprob: -8.145264625549316
    9. 'naire' → logprob: -8.145264625549316
    10. '
' → logprob: -8.770264625549316

Token 1059: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1060: ' query' (ID: 5703)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3235171139240265
    2. 'for' → logprob: -2.073517084121704
    3. 'pass' → logprob: -3.198517084121704
    4. 'token' → logprob: -3.323517084121704
    5. '#' → logprob: -4.198517322540283
    6. 'def' → logprob: -4.448517322540283
    7. 'iteration' → logprob: -4.448517322540283
    8. 'i' → logprob: -4.698517322540283
    9. 'range' → logprob: -5.323517322540283
    10. 'get' → logprob: -5.573517322540283

Token 1061: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6301137208938599
    2. 'prefix' → logprob: -1.1301137208938599
    3. '<|end|>' → logprob: -3.0051136016845703
    4. 'for' → logprob: -3.3801136016845703
    5. '
' → logprob: -4.38011360168457
    6. '#' → logprob: -4.50511360168457
    7. ' for' → logprob: -4.63011360168457
    8. ' prefix' → logprob: -5.25511360168457
    9. 'def' → logprob: -5.50511360168457
    10. '(prefix' → logprob: -6.13011360168457

Token 1062: ' max' (ID: 2999)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20730863511562347
    2. 'i' → logprob: -2.332308530807495
    3. ' False' → logprob: -3.207308530807495
    4. 'True' → logprob: -3.582308530807495
    5. '0' → logprob: -4.707308769226074
    6. ' True' → logprob: -5.332308769226074
    7. ' i' → logprob: -5.332308769226074
    8. 'N' → logprob: -6.957308769226074
    9. 'delta' → logprob: -7.207308769226074
    10. '   ' → logprob: -7.707308769226074

Token 1063: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5833798050880432
    2. 'prefix' → logprob: -1.3333797454833984
    3. ' prefix' → logprob: -2.9583797454833984
    4. 'def' → logprob: -3.8333797454833984
    5. 'sum' → logprob: -4.208379745483398
    6. '
' → logprob: -4.208379745483398
    7. ' if' → logprob: -4.208379745483398
    8. ' alt' → logprob: -4.708379745483398
    9. '(prefix' → logprob: -4.708379745483398
    10. 'psum' → logprob: -5.458379745483398

Token 1064: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5736242532730103
    2. '<|end|>' → logprob: -2.5736241340637207
    3. ' ' → logprob: -2.6986241340637207
    4. 'prefix' → logprob: -2.6986241340637207
    5. ')' → logprob: -2.8236241340637207
    6. '_' → logprob: -3.3236241340637207
    7. '_prefix' → logprob: -3.5736241340637207
    8. 'def' → logprob: -3.9486241340637207
    9. '
' → logprob: -4.198624134063721
    10. '  ' → logprob: -4.948624134063721

Token 1065: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5771808624267578
    2. '100' → logprob: -0.9521808624267578
    3. '0' → logprob: -4.077180862426758
    4. '200' → logprob: -4.327180862426758
    5. 'Q' → logprob: -4.952180862426758
    6. '500' → logprob: -5.202180862426758
    7. '1' → logprob: -5.327180862426758
    8. 'int' → logprob: -6.452180862426758
    9. '300' → logprob: -6.952180862426758
    10. 'N' → logprob: -7.952180862426758

Token 1066: '000' (ID: 1302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1067: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23451894521713257
    2. '<|end|>' → logprob: -2.2345190048217773
    3. 'prefix' → logprob: -2.8595190048217773
    4. '
' → logprob: -3.7345190048217773
    5. 'def' → logprob: -5.859519004821777
    6. '_prefix' → logprob: -6.234519004821777
    7. ')' → logprob: -6.609519004821777
    8. ' ' → logprob: -6.609519004821777
    9. 'for' → logprob: -6.734519004821777
    10. '+' → logprob: -6.734519004821777

Token 1068: ' lin' (ID: 14432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3468073010444641
    2. 'prefix' → logprob: -2.8468072414398193
    3. 'sum' → logprob: -2.9718072414398193
    4. 'next' → logprob: -3.0968072414398193
    5. '1' → logprob: -3.0968072414398193
    6. 'pass' → logprob: -3.5968072414398193
    7. 'i' → logprob: -4.221807479858398
    8. 'delta' → logprob: -4.596807479858398
    9. 'def' → logprob: -4.971807479858398
    10. 'token' → logprob: -5.096807479858398

Token 1069: 'é' (ID: 377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5537471771240234
    2. '   ' → logprob: -1.8037471771240234
    3. '       ' → logprob: -2.3037471771240234
    4. 'delta' → logprob: -3.6787471771240234
    5. 'sum' → logprob: -3.9287471771240234
    6. 't' → logprob: -3.9287471771240234
    7. '
' → logprob: -4.678747177124023
    8. 'e' → logprob: -4.928747177124023
    9. '[]' → logprob: -4.928747177124023
    10. 'range' → logprob: -5.053747177124023

Token 1070: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.008018016815185547
    2. '
' → logprob: -6.2580180168151855
    3. 'ar' → logprob: -6.7580180168151855
    4. '   ' → logprob: -6.8830180168151855
    5. 'def' → logprob: -7.2580180168151855
    6. '       ' → logprob: -7.3830180168151855
    7. 'ear' → logprob: -7.5080180168151855
    8. 'e' → logprob: -7.7580180168151855
    9. 'al' → logprob: -8.383018493652344
    10. 'a' → logprob: -8.758018493652344

Token 1071: ' Q' (ID: 1486)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1072: '*' (ID: 9)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0071781873703003
    2. '<|end|>' → logprob: -1.5071781873703003
    3. 'def' → logprob: -2.38217830657959
    4. '
' → logprob: -2.50717830657959
    5. '+' → logprob: -2.88217830657959
    6. ':' → logprob: -3.75717830657959
    7. '<|end|>' → logprob: -3.88217830657959
    8. ')' → logprob: -3.88217830657959
    9. '=' → logprob: -4.25717830657959
    10. '_prefix' → logprob: -4.25717830657959

Token 1073: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49271929264068604
    2. 'log' → logprob: -1.492719292640686
    3. 'import' → logprob: -2.7427191734313965
    4. 'N' → logprob: -2.9927191734313965
    5. 'i' → logprob: -3.9927191734313965
    6. '20' → logprob: -4.3677191734313965
    7. '(N' → logprob: -5.4927191734313965
    8. '(' → logprob: -5.7427191734313965
    9. '0' → logprob: -6.2427191734313965
    10. 'O' → logprob: -6.8677191734313965

Token 1074: ' ok' (ID: 4763)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08180968463420868
    2. 'prefix' → logprob: -3.4568097591400146
    3. '<|end|>' → logprob: -4.2068095207214355
    4. '
' → logprob: -4.8318095207214355
    5. '+' → logprob: -5.2068095207214355
    6. 'def' → logprob: -5.4568095207214355
    7. '_prefix' → logprob: -5.8318095207214355
    8. '(prefix' → logprob: -6.7068095207214355
    9. '    ' → logprob: -6.8318095207214355
    10. 'sum' → logprob: -6.9568095207214355

Token 1075: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26098182797431946
    2. 'prefix' → logprob: -2.385981798171997
    3. 'def' → logprob: -3.010981798171997
    4. '<|end|>' → logprob: -3.885981798171997
    5. '
' → logprob: -4.385982036590576
    6. ' ' → logprob: -4.885982036590576
    7. 'delta' → logprob: -5.260982036590576
    8. 'sum' → logprob: -5.385982036590576
    9. ' prefix' → logprob: -5.760982036590576
    10. ')' → logprob: -5.885982036590576

Token 1076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032731812447309494
    2. 'prefix' → logprob: -3.657731771469116
    3. '
' → logprob: -6.032732009887695
    4. 'def' → logprob: -6.532732009887695
    5. ' prefix' → logprob: -6.782732009887695
    6. '    
' → logprob: -7.657732009887695
    7. 'sum' → logprob: -7.782732009887695
    8. 'delta' → logprob: -8.657732009887695
    9. '```' → logprob: -9.657732009887695
    10. '       ' → logprob: -9.907732009887695

Token 1077: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05362847447395325
    2. 'prefix' → logprob: -3.553628444671631
    3. 'pass' → logprob: -4.678628444671631
    4. 'def' → logprob: -5.553628444671631
    5. ' pass' → logprob: -5.553628444671631
    6. ' prefix' → logprob: -6.053628444671631
    7. 'sum' → logprob: -7.178628444671631
    8. '    ' → logprob: -7.678628444671631
    9. ' alt' → logprob: -7.803628444671631
    10. '	pass' → logprob: -8.303628921508789

Token 1078: ' On' (ID: 2160)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3835136294364929
    2. '   ' → logprob: -1.6335136890411377
    3. ' prefix' → logprob: -2.3835136890411377
    4. 'def' → logprob: -4.383513450622559
    5. '
' → logprob: -5.008513450622559
    6. 'pref' → logprob: -6.383513450622559
    7. ' res' → logprob: -6.883513450622559
    8. '    
' → logprob: -6.883513450622559
    9. 'delta' → logprob: -6.883513450622559
    10. 'psum' → logprob: -7.008513450622559

Token 1079: ' optimise' (ID: 143741)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7536097168922424
    2. 'def' → logprob: -1.3786096572875977
    3. '   ' → logprob: -2.5036096572875977
    4. ' prefix' → logprob: -2.7536096572875977
    5. '_prefix' → logprob: -3.2536096572875977
    6. ' def' → logprob: -3.8786096572875977
    7. 'sum' → logprob: -3.8786096572875977
    8. ' =' → logprob: -4.378609657287598
    9. '=' → logprob: -4.878609657287598
    10. 'pref' → logprob: -5.503609657287598

Token 1080: ' la' (ID: 557)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.8521548509597778
    2. 'def' → logprob: -1.3521548509597778
    3. '   ' → logprob: -2.4771547317504883
    4. '<|end|>' → logprob: -2.6021547317504883
    5. '_prefix' → logprob: -3.4771547317504883
    6. '    ' → logprob: -4.352154731750488
    7. 'sum' → logprob: -4.352154731750488
    8. ' prefix' → logprob: -4.477154731750488
    9. '
' → logprob: -4.602154731750488
    10. ' alt' → logprob: -4.727154731750488

Token 1081: ' somme' (ID: 64484)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2367585003376007
    2. 'prefix' → logprob: -2.9867584705352783
    3. '
' → logprob: -3.1117584705352783
    4. 'pass' → logprob: -3.3617584705352783
    5. '_prefix' → logprob: -4.236758708953857
    6. 'sum' → logprob: -4.236758708953857
    7. 'for' → logprob: -5.111758708953857
    8. 'next' → logprob: -5.236758708953857
    9. 'delta' → logprob: -5.736758708953857
    10. 'i' → logprob: -5.861758708953857

Token 1082: ' prefix' (ID: 18633)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0282248258590698
    2. 'def' → logprob: -1.2782248258590698
    3. ' =' → logprob: -2.2782249450683594
    4. '=' → logprob: -2.4032249450683594
    5. '_prefix' → logprob: -3.4032249450683594
    6. 'prefix' → logprob: -3.5282249450683594
    7. ' +=' → logprob: -3.9032249450683594
    8. '(prefix' → logprob: -3.9032249450683594
    9. 'import' → logprob: -4.653224945068359
    10. 'delta' → logprob: -5.028224945068359

Token 1083: ' delta' (ID: 18800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1003408432006836
    2. 'def' → logprob: -1.3503408432006836
    3. 'prefix' → logprob: -2.4753408432006836
    4. ' =' → logprob: -2.6003408432006836
    5. '_prefix' → logprob: -2.6003408432006836
    6. '=' → logprob: -2.8503408432006836
    7. '
' → logprob: -3.2253408432006836
    8. '<|end|>' → logprob: -3.9753408432006836
    9. '<|end|>' → logprob: -4.975340843200684
    10. '(prefix' → logprob: -5.100340843200684

Token 1084: ' effectivement' (ID: 123809)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0520780086517334
    2. 'prefix' → logprob: -1.1770780086517334
    3. '   ' → logprob: -2.1770780086517334
    4. '_prefix' → logprob: -2.8020780086517334
    5. 'sum' → logprob: -3.8020780086517334
    6. 'delta' → logprob: -3.8020780086517334
    7. '
' → logprob: -3.9270780086517334
    8. '<|end|>' → logprob: -3.9270780086517334
    9. 'if' → logprob: -4.0520782470703125
    10. '=' → logprob: -4.4270782470703125

Token 1085: '

' (ID: 279)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2664715349674225
    2. '   ' → logprob: -2.6414716243743896
    3. 'sum' → logprob: -3.0164716243743896
    4. '
' → logprob: -3.5164716243743896
    5. 'def' → logprob: -3.5164716243743896
    6. ' prefix' → logprob: -4.3914713859558105
    7. 'psum' → logprob: -4.5164713859558105
    8. '(prefix' → logprob: -5.3914713859558105
    9. '_prefix' → logprob: -5.7664713859558105
    10. 'delta' → logprob: -5.8914713859558105

Token 1086: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3868200182914734
    2. '   ' → logprob: -1.2618200778961182
    3. 'delta' → logprob: -4.261819839477539
    4. ' prefix' → logprob: -5.261819839477539
    5. 'if' → logprob: -5.761819839477539
    6. 'sum' → logprob: -5.886819839477539
    7. 'def' → logprob: -6.261819839477539
    8. '
' → logprob: -6.261819839477539
    9. '    
' → logprob: -6.261819839477539
    10. '    ' → logprob: -6.761819839477539

Token 1087: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.35225003957748413
    2. '   ' → logprob: -2.227250099182129
    3. 'return' → logprob: -2.727250099182129
    4. ' prefix' → logprob: -2.852250099182129
    5. 'def' → logprob: -3.477250099182129
    6. 'sum' → logprob: -4.977250099182129
    7. ' return' → logprob: -4.977250099182129
    8. 'pass' → logprob: -5.227250099182129
    9. 'psum' → logprob: -5.602250099182129
    10. 'pref' → logprob: -5.852250099182129

Token 1088: ' On' (ID: 2160)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.30140095949172974
    2. 'return' → logprob: -2.426400899887085
    3. '   ' → logprob: -2.926400899887085
    4. ' prefix' → logprob: -3.301400899887085
    5. 'def' → logprob: -3.676400899887085
    6. 'res' → logprob: -3.676400899887085
    7. 'if' → logprob: -5.051401138305664
    8. 'sum' → logprob: -5.301401138305664
    9. ' res' → logprob: -5.676401138305664
    10. ' return' → logprob: -5.801401138305664

Token 1089: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0152463912963867
    2. 'def' → logprob: -1.2652463912963867
    3. 'prefix' → logprob: -2.0152463912963867
    4. '_prefix' → logprob: -3.0152463912963867
    5. '=' → logprob: -3.5152463912963867
    6. 'sum' → logprob: -3.6402463912963867
    7. ' =' → logprob: -4.140246391296387
    8. 'return' → logprob: -4.515246391296387
    9. 'res' → logprob: -4.515246391296387
    10. ' def' → logprob: -4.765246391296387

Token 1090: ' créer' (ID: 40938)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9646005034446716
    2. 'def' → logprob: -1.8396005630493164
    3. '_prefix' → logprob: -1.8396005630493164
    4. '   ' → logprob: -2.4646005630493164
    5. 'pass' → logprob: -2.9646005630493164
    6. 'continue' → logprob: -2.9646005630493164
    7. ' prefix' → logprob: -4.589600563049316
    8. 'cache' → logprob: -4.589600563049316
    9. 'compute' → logprob: -4.589600563049316
    10. 'acc' → logprob: -4.714600563049316

Token 1091: ' un' (ID: 537)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.12503021955490112
    2. 'delta' → logprob: -2.875030279159546
    3. 'pass' → logprob: -4.000030040740967
    4. ' prefix' → logprob: -4.000030040740967
    5. '_prefix' → logprob: -4.875030040740967
    6. 'a' → logprob: -5.125030040740967
    7. ' delta' → logprob: -5.625030040740967
    8. ' a' → logprob: -6.625030040740967
    9. 'psum' → logprob: -6.625030040740967
    10. ' pass' → logprob: -7.250030040740967

Token 1092: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.013561343774199486
    2. '_prefix' → logprob: -5.263561248779297
    3. 'delta' → logprob: -5.638561248779297
    4. ' prefix' → logprob: -6.263561248779297
    5. 'class' → logprob: -7.138561248779297
    6. 'from' → logprob: -7.263561248779297
    7. 'def' → logprob: -7.888561248779297
    8. 'pass' → logprob: -8.138561248779297
    9. 'pref' → logprob: -8.513561248779297
    10. 'psum' → logprob: -9.263561248779297

Token 1093: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.597324788570404
    2. '_delta' → logprob: -0.847324788570404
    3. '_' → logprob: -4.597324848175049
    4. '_prefix' → logprob: -4.972324848175049
    5. 'sum' → logprob: -6.222324848175049
    6. '_s' → logprob: -6.597324848175049
    7. 'delta' → logprob: -8.59732437133789
    8. ' _' → logprob: -9.22232437133789
    9. 'Delta' → logprob: -9.34732437133789
    10. '_diff' → logprob: -9.59732437133789

Token 1094: ' delta' (ID: 18800)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5976444482803345
    2. '_delta' → logprob: -0.8476444482803345
    3. '_prefix' → logprob: -3.972644329071045
    4. 'delta' → logprob: -7.097644329071045
    5. '_sum' → logprob: -7.472644329071045
    6. '_d' → logprob: -7.972644329071045
    7. 's' → logprob: -9.347644805908203
    8. ' _' → logprob: -9.847644805908203
    9. '_diff' → logprob: -9.847644805908203
    10. '_
' → logprob: -9.847644805908203

Token 1095: ' avant' (ID: 13339)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.7336463332176208
    2. 'prefix' → logprob: -1.8586463928222656
    3. '_delta' → logprob: -2.1086463928222656
    4. 'delta' → logprob: -2.3586463928222656
    5. '_' → logprob: -2.6086463928222656
    6. '
' → logprob: -3.4836463928222656
    7. '<|end|>' → logprob: -3.9836463928222656
    8. '#' → logprob: -4.733646392822266
    9. 'def' → logprob: -5.608646392822266
    10. '   ' → logprob: -6.608646392822266

Token 1096: ' les' (ID: 1341)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4889359474182129
    2. '#' → logprob: -2.238935947418213
    3. 'delta' → logprob: -2.363935947418213
    4. '<|end|>' → logprob: -3.113935947418213
    5. 'pass' → logprob: -3.238935947418213
    6. 'def' → logprob: -3.863935947418213
    7. '   ' → logprob: -3.988935947418213
    8. '_prefix' → logprob: -4.488935947418213
    9. ' prefix' → logprob: -4.738935947418213
    10. '
' → logprob: -4.988935947418213

Token 1097: ' queries' (ID: 32122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09738000482320786
    2. 'bou' → logprob: -2.9723799228668213
    3. 'loop' → logprob: -3.7223799228668213
    4. 'query' → logprob: -5.5973801612854
    5. 'def' → logprob: -5.8473801612854
    6. ' for' → logprob: -5.9723801612854
    7. 'queries' → logprob: -5.9723801612854
    8. ' boucle' → logprob: -6.4723801612854
    9. '#' → logprob: -7.3473801612854
    10. '```' → logprob: -7.7223801612854

Token 1098: ' mais' (ID: 2899)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.47366926074028015
    2. 'delta' → logprob: -1.0986692905426025
    3. '#' → logprob: -3.4736692905426025
    4. '
' → logprob: -5.348669052124023
    5. '<|end|>' → logprob: -5.973669052124023
    6. 'pass' → logprob: -6.473669052124023
    7. 'psum' → logprob: -6.723669052124023
    8. '_prefix' → logprob: -6.848669052124023
    9. ' prefix' → logprob: -7.723669052124023
    10. ' delta' → logprob: -8.098669052124023

Token 1099: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7351880669593811
    2. 'pass' → logprob: -1.3601880073547363
    3. ' pass' → logprob: -2.4851880073547363
    4. '#' → logprob: -2.7351880073547363
    5. 'continue' → logprob: -2.8601880073547363
    6. ' continue' → logprob: -3.9851880073547363
    7. '    ' → logprob: -4.485188007354736
    8. '    
' → logprob: -5.235188007354736
    9. ' #' → logprob: -5.485188007354736
    10. '...' → logprob: -5.610188007354736

Token 1100: ' mod' (ID: 1812)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03881237655878067
    2. 'n' → logprob: -4.413812160491943
    3. 'do' → logprob: -4.663812160491943
    4. '#' → logprob: -6.038812160491943
    5. 'contin' → logprob: -6.038812160491943
    6. 'ne' → logprob: -6.288812160491943
    7. ' continue' → logprob: -6.663812160491943
    8. 'cannot' → logprob: -6.913812160491943
    9. 'pass' → logprob: -7.163812160491943
    10. 'need' → logprob: -7.163812160491943

Token 1101: 'ifie' (ID: 46409)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.9591038823127747
    2. 'ifie' → logprob: -1.2091038227081299
    3. 'if' → logprob: -1.4591038227081299
    4. 'ifier' → logprob: -2.58410382270813
    5. 'ifié' → logprob: -5.834104061126709
    6. 'ified' → logprob: -6.334104061126709
    7. '=' → logprob: -6.959104061126709
    8. '#' → logprob: -7.459104061126709
    9. 'ifies' → logprob: -7.459104061126709
    10. 'ifiez' → logprob: -7.584104061126709

Token 1102: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.9132485389709473
    2. '=' → logprob: -1.9132485389709473
    3. ' +=' → logprob: -2.7882485389709473
    4. ' delta' → logprob: -2.9132485389709473
    5. 'def' → logprob: -3.0382485389709473
    6. ' =' → logprob: -3.1632485389709473
    7. '+=' → logprob: -3.2882485389709473
    8. '_' → logprob: -3.9132485389709473
    9. '
' → logprob: -4.163248538970947
    10. '   ' → logprob: -4.413248538970947

Token 1103: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1104: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.019547192379832268
    2. 'L' → logprob: -4.894546985626221
    3. 'every' → logprob: -5.894546985626221
    4. '#' → logprob: -6.144546985626221
    5. 'delta' → logprob: -6.394546985626221
    6. 'i' → logprob: -6.519546985626221
    7. ' each' → logprob: -6.894546985626221
    8. ' chaque' → logprob: -7.144546985626221
    9. 'indices' → logprob: -7.519546985626221
    10. 'indice' → logprob: -8.144547462463379

Token 1105: ' query' (ID: 5703)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6777532696723938
    2. 'i' → logprob: -2.052753210067749
    3. 'L' → logprob: -2.302753210067749
    4. '_' → logprob: -2.552753210067749
    5. '=' → logprob: -3.677753210067749
    6. ' for' → logprob: -4.052753448486328
    7. '1' → logprob: -4.302753448486328
    8. 'query' → logprob: -4.552753448486328
    9. ' i' → logprob: -4.677753448486328
    10. '+' → logprob: -4.802753448486328

Token 1106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1107: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6164113879203796
    2. '   ' → logprob: -1.1164114475250244
    3. 'def' → logprob: -3.2414114475250244
    4. ' prefix' → logprob: -4.241411209106445
    5. 'delta' → logprob: -4.241411209106445
    6. 'sum' → logprob: -4.366411209106445
    7. 'i' → logprob: -4.491411209106445
    8. '    ' → logprob: -4.616411209106445
    9. '<|end|>' → logprob: -5.741411209106445
    10. ' i' → logprob: -6.116411209106445

Token 1108: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4239526391029358
    2. '   ' → logprob: -1.548952579498291
    3. ' prefix' → logprob: -3.048952579498291
    4. 'pass' → logprob: -3.548952579498291
    5. 'def' → logprob: -4.423952579498291
    6. 'sum' → logprob: -4.548952579498291
    7. '#' (adapté à ' #') → logprob: -5.173952579498291
    8. ' pass' → logprob: -5.673952579498291
    9. 'i' → logprob: -5.798952579498291
    10. 'delta' → logprob: -5.798952579498291

Token 1109: ' On' (ID: 2160)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.09086950868368149
    2. '   ' → logprob: -2.965869426727295
    3. ' prefix' → logprob: -4.215869426727295
    4. 'delta' → logprob: -5.090869426727295
    5. 'def' → logprob: -5.715869426727295
    6. '#' → logprob: -5.715869426727295
    7. '
' → logprob: -6.590869426727295
    8. 'psum' → logprob: -6.590869426727295
    9. 'for' → logprob: -6.840869426727295
    10. 'if' → logprob: -7.090869426727295

Token 1110: ' calc' (ID: 25691)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.055716075003147125
    2. ' prefix' → logprob: -3.680716037750244
    3. '_prefix' → logprob: -3.930716037750244
    4. '#' → logprob: -6.305716037750244
    5. 'def' → logprob: -6.805716037750244
    6. 'import' → logprob: -6.930716037750244
    7. 'delta' → logprob: -7.055716037750244
    8. 'psum' → logprob: -7.180716037750244
    9. 'pref' → logprob: -7.305716037750244
    10. 'cum' → logprob: -7.680716037750244

Token 1111: 'ule' (ID: 1601)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1375019550323486
    2. '_prefix' → logprob: -2.5125019550323486
    3. 'ulate' → logprob: -2.5125019550323486
    4. 'umulate' → logprob: -2.6375019550323486
    5. 'prefix' → logprob: -2.7625019550323486
    6. 'def' → logprob: -2.7625019550323486
    7. 'cum' → logprob: -2.7625019550323486
    8. 'um' → logprob: -2.8875019550323486
    9. '_sum' → logprob: -3.2625019550323486
    10. ' =' → logprob: -3.3875019550323486

Token 1112: ' la' (ID: 557)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2473343461751938
    2. 'def' → logprob: -2.9973342418670654
    3. 'sum' → logprob: -3.2473342418670654
    4. '0' → logprob: -3.3723342418670654
    5. 'psum' → logprob: -3.8723342418670654
    6. ' prefix' → logprob: -4.1223344802856445
    7. 'delta' → logprob: -4.1223344802856445
    8. '_prefix' → logprob: -4.2473344802856445
    9. '   ' → logprob: -5.4973344802856445
    10. 'res' → logprob: -5.8723344802856445

Token 1113: ' somme' (ID: 64484)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.19973479211330414
    2. 'psum' → logprob: -3.324734687805176
    3. '_prefix' → logprob: -3.699734687805176
    4. 'def' → logprob: -3.949734687805176
    5. 'curr' → logprob: -3.949734687805176
    6. 'acc' → logprob: -4.449734687805176
    7. 'c' → logprob: -4.449734687805176
    8. 'current' → logprob: -4.699734687805176
    9. 'res' → logprob: -4.699734687805176
    10. 'delta' → logprob: -4.824734687805176

Token 1114: ' prefix' (ID: 18633)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -1.1228759288787842
    2. 'prefix' → logprob: -1.6228759288787842
    3. 'delta' → logprob: -1.7478759288787842
    4. '=' → logprob: -2.497875928878784
    5. '_delta' → logprob: -2.747875928878784
    6. ' =' → logprob: -3.122875928878784
    7. '_' → logprob: -3.497875928878784
    8. '   ' → logprob: -3.497875928878784
    9. 'def' → logprob: -4.122876167297363
    10. '_=' → logprob: -5.247876167297363

Token 1115: ' delta' (ID: 18800)
  Prédit: '_delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_delta' → logprob: -0.5413884520530701
    2. '_prefix' → logprob: -1.6663885116577148
    3. '_' → logprob: -1.7913885116577148
    4. 'delta' → logprob: -3.416388511657715
    5. 'def' → logprob: -4.541388511657715
    6. ' =' → logprob: -4.916388511657715
    7. 'prefix' → logprob: -5.666388511657715
    8. '   ' → logprob: -6.291388511657715
    9. '_sum' → logprob: -6.916388511657715
    10. '=' → logprob: -7.291388511657715

Token 1116: ' à' (ID: 1221)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2825343608856201
    2. '_prefix' → logprob: -3.03253436088562
    3. '   ' → logprob: -3.15753436088562
    4. 'def' → logprob: -3.28253436088562
    5. 'delta' → logprob: -3.65753436088562
    6. ' =' → logprob: -3.78253436088562
    7. '
' → logprob: -4.157534599304199
    8. '=' → logprob: -4.157534599304199
    9. 'psum' → logprob: -4.407534599304199
    10. 'sum' → logprob: -5.157534599304199

Token 1117: ' part' (ID: 997)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01584360934793949
    2. 'each' → logprob: -5.015843391418457
    3. 'index' → logprob: -6.140843391418457
    4. 'get' → logprob: -6.640843391418457
    5. 'l' → logprob: -7.265843391418457
    6. ' i' → logprob: -7.265843391418457
    7. 'indice' → logprob: -7.265843391418457
    8. ' chaque' → logprob: -7.640843391418457
    9. '[i' → logprob: -7.890843391418457
    10. '#' → logprob: -8.140843391418457

Token 1118: ' sur' (ID: 1512)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.060760799795389175
    2. ' prefix' → logprob: -4.435760974884033
    3. '#' → logprob: -4.685760974884033
    4. '
' → logprob: -4.810760974884033
    5. 'delta' → logprob: -4.810760974884033
    6. '   ' → logprob: -5.060760974884033
    7. '<|end|>' → logprob: -5.435760974884033
    8. 'def' → logprob: -6.060760974884033
    9. 'psum' → logprob: -6.435760974884033
    10. '```' → logprob: -6.810760974884033

Token 1119: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22068515419960022
    2. 'delta' → logprob: -2.7206852436065674
    3. 'N' → logprob: -3.5956852436065674
    4. 'L' → logprob: -3.7206852436065674
    5. 'len' → logprob: -4.095685005187988
    6. ' i' → logprob: -4.470685005187988
    7. '   ' → logprob: -4.720685005187988
    8. 'def' → logprob: -4.720685005187988
    9. '1' → logprob: -5.595685005187988
    10. 'le' → logprob: -5.845685005187988

Token 1120: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1336278915405273
    2. 'fly' → logprob: -1.3836278915405273
    3. '#' → logprob: -1.6336278915405273
    4. 'delta' → logprob: -3.1336278915405273
    5. 'L' → logprob: -3.6336278915405273
    6. 'for' → logprob: -3.7586278915405273
    7. 'N' → logprob: -3.8836278915405273
    8. 'def' → logprob: -4.258627891540527
    9. 'indices' → logprob: -4.383627891540527
    10. '```' → logprob: -4.383627891540527

Token 1121: ' nécessaires' (ID: 74402)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9241480827331543
    2. '<|end|>' → logprob: -1.0491480827331543
    3. '   ' → logprob: -2.2991480827331543
    4. '
' → logprob: -2.5491480827331543
    5. 'def' → logprob: -4.049148082733154
    6. '_prefix' → logprob: -4.174148082733154
    7. '#' → logprob: -5.049148082733154
    8. ' prefix' → logprob: -5.049148082733154
    9. '<|end|>' → logprob: -5.174148082733154
    10. 'delta' → logprob: -5.299148082733154

Token 1122: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43999001383781433
    2. 'prefix' → logprob: -1.8149900436401367
    3. '
' → logprob: -2.9399900436401367
    4. 'for' → logprob: -3.0649900436401367
    5. 'def' → logprob: -3.4399900436401367
    6. ' for' → logprob: -4.439990043640137
    7. '    
' → logprob: -4.689990043640137
    8. '#' → logprob: -4.814990043640137
    9. 'delta' → logprob: -4.939990043640137
    10. ' prefix' → logprob: -5.439990043640137

Token 1123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4736294746398926
    2. 'def' → logprob: -1.3486294746398926
    3. 'prefix' → logprob: -2.4736294746398926
    4. '
' → logprob: -3.5986294746398926
    5. 'sum' → logprob: -6.348629474639893
    6. '    
' → logprob: -6.723629474639893
    7. 'delta' → logprob: -7.098629474639893
    8. ' prefix' → logprob: -7.598629474639893
    9. '```' → logprob: -7.598629474639893
    10. ' def' → logprob: -7.973629474639893

Token 1124: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.34993743896484375
    2. 'def' → logprob: -1.5999374389648438
    3. '   ' → logprob: -2.5999374389648438
    4. 'delta' → logprob: -5.599937438964844
    5. '
' → logprob: -5.849937438964844
    6. 'for' → logprob: -5.974937438964844
    7. 'sum' → logprob: -6.099937438964844
    8. ' prefix' → logprob: -6.474937438964844
    9. 'psum' → logprob: -6.599937438964844
    10. 'pref' → logprob: -6.724937438964844

Token 1125: ' Ici' (ID: 145754)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9384309649467468
    2. 'return' → logprob: -1.1884310245513916
    3. 'def' → logprob: -2.0634310245513916
    4. 'res' → logprob: -2.6884310245513916
    5. '   ' → logprob: -2.8134310245513916
    6. 'sum' → logprob: -4.3134307861328125
    7. 's' → logprob: -5.1884307861328125
    8. 'total' → logprob: -5.3134307861328125
    9. ' prefix' → logprob: -5.4384307861328125
    10. 'psum' → logprob: -5.5634307861328125

Token 1126: ' on' (ID: 402)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.8508325815200806
    2. 'def' → logprob: -1.3508325815200806
    3. '   ' → logprob: -2.350832462310791
    4. 'return' → logprob: -2.725832462310791
    5. 'res' → logprob: -2.850832462310791
    6. ' prefix' → logprob: -3.350832462310791
    7. ' return' → logprob: -4.475832462310791
    8. ' res' → logprob: -4.725832462310791
    9. ' def' → logprob: -4.975832462310791
    10. 'sum' → logprob: -5.100832462310791

Token 1127: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07353560626506805
    2. '   ' → logprob: -3.698535680770874
    3. 'continue' → logprob: -4.073535442352295
    4. 'return' → logprob: -4.198535442352295
    5. ' def' → logprob: -5.073535442352295
    6. ' continue' → logprob: -7.073535442352295
    7. '#' → logprob: -7.073535442352295
    8. 'pass' → logprob: -7.198535442352295
    9. ' return' → logprob: -7.448535442352295
    10. '
' → logprob: -7.698535442352295

Token 1128: ' faire' (ID: 8119)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5026952028274536
    2. 'def' → logprob: -1.5026952028274536
    3. '   ' → logprob: -2.502695083618164
    4. 'prefix' → logprob: -3.377695083618164
    5. ' return' → logprob: -4.127695083618164
    6. 'sum' → logprob: -4.502695083618164
    7. 'calculate' → logprob: -5.002695083618164
    8. '
' → logprob: -5.252695083618164
    9. '_prefix' → logprob: -5.627695083618164
    10. 'compute' → logprob: -5.627695083618164

Token 1129: ' au' (ID: 2791)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25441303849220276
    2. 'prefix' → logprob: -2.50441312789917
    3. '0' → logprob: -3.00441312789917
    4. 'return' → logprob: -3.50441312789917
    5. 'res' → logprob: -3.75441312789917
    6. '   ' → logprob: -4.12941312789917
    7. 'def' → logprob: -4.25441312789917
    8. ' sum' → logprob: -6.50441312789917
    9. 's' → logprob: -6.62941312789917
    10. '
' → logprob: -6.87941312789917

Token 1130: ' maximum' (ID: 10562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03226308152079582
    2. '#' → logprob: -5.032263278961182
    3. 'c' → logprob: -5.282263278961182
    4. '
' → logprob: -5.657263278961182
    5. 'for' → logprob: -5.657263278961182
    6. '   ' → logprob: -5.782263278961182
    7. '=' → logprob: -6.407263278961182
    8. 'cache' → logprob: -6.657263278961182
    9. '       ' → logprob: -7.032263278961182
    10. 'i' → logprob: -7.157263278961182

Token 1131: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.17674191296100616
    2. '   ' → logprob: -2.3017418384552
    3. 'def' → logprob: -3.4267418384552
    4. 'for' → logprob: -4.926742076873779
    5. 'return' → logprob: -5.051742076873779
    6. ' ' → logprob: -5.176742076873779
    7. '
' → logprob: -6.051742076873779
    8. '2' → logprob: -6.426742076873779
    9. '1' → logprob: -6.551742076873779
    10. '5' → logprob: -6.926742076873779

Token 1132: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.009968447498977184
    2. '5' → logprob: -4.634968280792236
    3. 'four' → logprob: -9.634968757629395
    4. '7' → logprob: -10.634968757629395
    5. 'O' → logprob: -10.759968757629395
    6. ' ' → logprob: -10.759968757629395
    7. '6' → logprob: -10.759968757629395
    8. '
' → logprob: -11.259968757629395
    9. '```' → logprob: -11.634968757629395
    10. '8' → logprob: -12.009968757629395

Token 1133: ' calc' (ID: 25691)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1109260320663452
    2. 'def' → logprob: -1.8609260320663452
    3. 'calls' → logprob: -2.3609261512756348
    4. 'sum' → logprob: -2.6109261512756348
    5. 'return' → logprob: -2.6109261512756348
    6. 's' → logprob: -2.8609261512756348
    7. 'get' → logprob: -2.9859261512756348
    8. 'for' → logprob: -3.4859261512756348
    9. ' calls' → logprob: -3.7359261512756348
    10. '+' → logprob: -3.7359261512756348

Token 1134: 'ule' (ID: 1601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.256748080253601
    2. 'ule' → logprob: -1.506748080253601
    3. 'ul' → logprob: -1.756748080253601
    4. 'ulations' → logprob: -2.6317481994628906
    5. '   ' → logprob: -2.7567481994628906
    6. 'ulation' → logprob: -4.006748199462891
    7. 'u' → logprob: -4.131748199462891
    8. 'ulate' → logprob: -4.256748199462891
    9. 'ulator' → logprob: -4.256748199462891
    10. '       ' → logprob: -4.381748199462891

Token 1135: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5593721866607666
    2. 'def' → logprob: -1.8093721866607666
    3. '   ' → logprob: -2.8093721866607666
    4. '():' → logprob: -3.5593721866607666
    5. '    ' → logprob: -3.8093721866607666
    6. ':
' → logprob: -3.8093721866607666
    7. ' :' → logprob: -3.9343721866607666
    8. '
' → logprob: -3.9343721866607666
    9. '(' → logprob: -4.6843719482421875
    10. ')' → logprob: -5.0593719482421875

Token 1136: ' delta' (ID: 18800)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9476224184036255
    2. ' prefix' → logprob: -1.6976224184036255
    3. 'get' → logprob: -2.322622299194336
    4. ' get' → logprob: -2.572622299194336
    5. 'delta' → logprob: -2.697622299194336
    6. 's' → logprob: -2.947622299194336
    7. 'sum' → logprob: -3.197622299194336
    8. 'token' → logprob: -3.947622299194336
    9. ' la' → logprob: -4.447622299194336
    10. ' delta' → logprob: -4.697622299194336

Token 1137: ' prefix' (ID: 18633)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7332011461257935
    2. '   ' → logprob: -0.9832011461257935
    3. '
' → logprob: -2.483201026916504
    4. ':' → logprob: -3.483201026916504
    5. 'prefix' → logprob: -4.733201026916504
    6. ':
' → logprob: -4.858201026916504
    7. '(prefix' → logprob: -5.858201026916504
    8. ' def' → logprob: -6.233201026916504
    9. '    
' → logprob: -6.233201026916504
    10. 'sum' → logprob: -6.983201026916504

Token 1138: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4829477369785309
    2. '   ' → logprob: -1.2329477071762085
    3. '
' → logprob: -2.607947826385498
    4. 'prefix' → logprob: -5.107947826385498
    5. '    
' → logprob: -5.982947826385498
    6. ' def' → logprob: -6.232947826385498
    7. 'sum' → logprob: -6.732947826385498
    8. '    ' → logprob: -7.357947826385498
    9. '  
' → logprob: -7.482947826385498
    10. ' 
' → logprob: -7.607947826385498

Token 1139: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.006692391820251942
    2. ' query' → logprob: -5.506692409515381
    3. 'for' → logprob: -7.381692409515381
    4. '
' → logprob: -8.006691932678223
    5. '#' → logprob: -8.256691932678223
    6. 'token' → logprob: -8.506691932678223
    7. 'get' → logprob: -8.631691932678223
    8. 'i' → logprob: -8.881691932678223
    9. 'requ' → logprob: -9.256691932678223
    10. 'input' → logprob: -9.381691932678223

Token 1140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7171761989593506
    2. 'def' → logprob: -0.9671761989593506
    3. '
' → logprob: -2.3421761989593506
    4. 'prefix' → logprob: -4.34217643737793
    5. '    
' → logprob: -5.46717643737793
    6. ' def' → logprob: -5.84217643737793
    7. 'sum' → logprob: -6.09217643737793
    8. ':' → logprob: -6.46717643737793
    9. ' 
' → logprob: -6.59217643737793
    10. '  
' → logprob: -6.71717643737793

Token 1141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0976828783750534
    2. '
' → logprob: -2.8476829528808594
    3. 'def' → logprob: -4.722682952880859
    4. 'prefix' → logprob: -4.847682952880859
    5. 'return' → logprob: -4.972682952880859
    6. '```' → logprob: -5.597682952880859
    7. 'sum' → logprob: -5.972682952880859
    8. '    
' → logprob: -6.472682952880859
    9. 'delta' → logprob: -7.472682952880859
    10. '\' → logprob: -7.597682952880859

Token 1142: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.369707852602005
    2. 'prefix' → logprob: -2.3697078227996826
    3. 'def' → logprob: -2.6197078227996826
    4. '
' → logprob: -2.6197078227996826
    5. 'return' → logprob: -3.8697078227996826
    6. 'res' → logprob: -3.9947078227996826
    7. 'sum' → logprob: -4.119708061218262
    8. '    
' → logprob: -6.119708061218262
    9. ' prefix' → logprob: -6.369708061218262
    10. ' res' → logprob: -6.619708061218262

Token 1143: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5129483938217163
    2. 'prefix' → logprob: -1.6379483938217163
    3. '   ' → logprob: -1.7629483938217163
    4. '
' → logprob: -4.137948513031006
    5. 'delta' → logprob: -4.887948513031006
    6. 'sum' → logprob: -5.137948513031006
    7. 'res' → logprob: -6.887948513031006
    8. 'psum' → logprob: -7.012948513031006
    9. '    
' → logprob: -7.262948513031006
    10. 'return' → logprob: -7.637948513031006

Token 1144: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27697741985321045
    2. 'prefix' → logprob: -2.1519775390625
    3. '_prefix' → logprob: -3.5269775390625
    4. '   ' → logprob: -3.6519775390625
    5. 'sum' → logprob: -3.7769775390625
    6. '_sum' → logprob: -4.9019775390625
    7. '#' → logprob: -5.0269775390625
    8. ' prefix' → logprob: -5.4019775390625
    9. ' def' → logprob: -5.4019775390625
    10. '
' → logprob: -5.6519775390625

Token 1145: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22895416617393494
    2. '0' → logprob: -2.1039540767669678
    3. 'sum' → logprob: -3.7289540767669678
    4. 'acc' → logprob: -4.228954315185547
    5. 'prefix' → logprob: -4.228954315185547
    6. 'lambda' → logprob: -4.978954315185547
    7. 'partial' → logprob: -4.978954315185547
    8. '
' → logprob: -5.353954315185547
    9. 'c' → logprob: -6.478954315185547
    10. 'delta' → logprob: -6.478954315185547

Token 1146: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3317360579967499
    2. 'prefix' → logprob: -1.8317360877990723
    3. 'cache' → logprob: -2.9567360877990723
    4. 'tmp' → logprob: -4.456736087799072
    5. 'acc' → logprob: -4.581736087799072
    6. 'from' → logprob: -4.831736087799072
    7. 'sum' → logprob: -5.206736087799072
    8. '
' → logprob: -5.331736087799072
    9. 'partial' → logprob: -5.331736087799072
    10. '_prefix' → logprob: -5.706736087799072

Token 1147: ' auxilia' (ID: 135764)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01419888436794281
    2. '
' → logprob: -5.0141987800598145
    3. '   ' → logprob: -5.5141987800598145
    4. ' def' → logprob: -6.8891987800598145
    5. '(
' → logprob: -7.7641987800598145
    6. ':
' → logprob: -7.8891987800598145
    7. ':' → logprob: -8.514199256896973
    8. ' =' → logprob: -8.764199256896973
    9. ' 
' → logprob: -8.889199256896973
    10. 'get' → logprob: -9.389199256896973

Token 1148: 'ire' (ID: 594)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03582288697361946
    2. ' def' → logprob: -3.410822868347168
    3. 'taire' → logprob: -6.785822868347168
    4. 'tion' → logprob: -7.785822868347168
    5. ')' → logprob: -9.035822868347168
    6. '   ' → logprob: -9.535822868347168
    7. ' (' → logprob: -9.785822868347168
    8. 'toire' → logprob: -10.285822868347168
    9. 'ire' → logprob: -10.410822868347168
    10. 'iaire' → logprob: -10.660822868347168

Token 1149: ':

' (ID: 1402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043505605310201645
    2. '
' → logprob: -3.1685056686401367
    3. '   ' → logprob: -8.418505668640137
    4. '```' → logprob: -9.418505668640137
    5. ' def' → logprob: -9.793505668640137
    6. '_prefix' → logprob: -10.168505668640137
    7. 'prefix' → logprob: -10.543505668640137
    8. 'import' → logprob: -11.043505668640137
    9. '    
' → logprob: -11.543505668640137
    10. '\' → logprob: -11.918505668640137

Token 1150: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05639718100428581
    2. '
' → logprob: -3.5563971996307373
    3. '   ' → logprob: -3.6813971996307373
    4. 'prefix' → logprob: -7.556396961212158
    5. ' def' → logprob: -8.431397438049316
    6. 'sum' → logprob: -9.431397438049316
    7. '```' → logprob: -9.556397438049316
    8. '    
' → logprob: -10.306397438049316
    9. '\' → logprob: -10.556397438049316
    10. 'import' → logprob: -10.681397438049316

Token 1151: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033094123005867004
    2. '
' → logprob: -4.2830939292907715
    3. '   ' → logprob: -4.2830939292907715
    4. 'prefix' → logprob: -5.7830939292907715
    5. 'sum' → logprob: -7.9080939292907715
    6. 'res' → logprob: -8.03309440612793
    7. 'i' → logprob: -8.15809440612793
    8. ' def' → logprob: -8.40809440612793
    9. 'return' → logprob: -8.40809440612793
    10. '    
' → logprob: -9.40809440612793

Token 1152: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.178419291973114
    2. ' =' → logprob: -1.9284193515777588
    3. '=' → logprob: -4.05341911315918
    4. '_' → logprob: -7.92841911315918
    5. '_=' → logprob: -10.42841911315918
    6. 'umm' → logprob: -10.55341911315918
    7. '=sum' → logprob: -10.55341911315918
    8. '	' → logprob: -10.92841911315918
    9. 't' → logprob: -11.30341911315918
    10. 'u' → logprob: -11.30341911315918

Token 1153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.484132169745862e-05
    2. 'delta' → logprob: -9.875094413757324
    3. 'sum' → logprob: -10.500094413757324
    4. ' ' → logprob: -11.125094413757324
    5. 'prefix' → logprob: -14.750094413757324
    6. 'lambda' → logprob: -15.875094413757324
    7. ' delta' → logprob: -16.50009536743164
    8. '
' → logprob: -16.62509536743164
    9. 'acc' → logprob: -16.62509536743164
    10. 'i' → logprob: -16.75009536743164

Token 1154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01155549194663763
    2. 'sum' → logprob: -4.5115556716918945
    3. 'delta' → logprob: -7.8865556716918945
    4. 'prefix' → logprob: -9.011555671691895
    5. 'get' → logprob: -13.011555671691895
    6. 'lambda' → logprob: -13.511555671691895
    7. 'acc' → logprob: -13.886555671691895
    8. ' ' → logprob: -14.011555671691895
    9. 'i' → logprob: -14.011555671691895
    10. 'c' → logprob: -14.386555671691895

Token 1155: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04991621524095535
    2. ' for' → logprob: -3.7999162673950195
    3. 'def' → logprob: -4.9249162673950195
    4. '   ' → logprob: -5.2999162673950195
    5. 'i' → logprob: -5.6749162673950195
    6. 'if' → logprob: -5.9249162673950195
    7. '<|end|>' → logprob: -5.9249162673950195
    8. '
' → logprob: -6.5499162673950195
    9. '+' → logprob: -6.6749162673950195
    10. '	for' → logprob: -6.7999162673950195

Token 1156: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2876335680484772
    2. ' for' → logprob: -2.0376336574554443
    3. 'i' → logprob: -2.4126336574554443
    4. '   ' → logprob: -4.287633419036865
    5. '	for' → logprob: -5.162633419036865
    6. ' i' → logprob: -5.787633419036865
    7. 's' → logprob: -6.037633419036865
    8. '```' → logprob: -6.537633419036865
    9. '+' → logprob: -6.912633419036865
    10. '	i' → logprob: -7.537633419036865

Token 1157: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.042179424315690994
    2. 'i' → logprob: -3.2921793460845947
    3. ' for' → logprob: -5.667179584503174
    4. 'def' → logprob: -7.667179584503174
    5. ' i' → logprob: -9.542179107666016
    6. '   ' → logprob: -9.917179107666016
    7. '```' → logprob: -10.542179107666016
    8. '
' → logprob: -11.042179107666016
    9. 'j' → logprob: -11.542179107666016
    10. '	for' → logprob: -12.042179107666016

Token 1158: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0022429160308092833
    2. 'k' → logprob: -6.7522430419921875
    3. 'x' → logprob: -7.2522430419921875
    4. 'idx' → logprob: -8.877243041992188
    5. ' j' → logprob: -9.252243041992188
    6. 'i' → logprob: -9.502243041992188
    7. '_j' → logprob: -9.877243041992188
    8. '
' → logprob: -15.252243041992188
    9. 'pos' → logprob: -15.252243041992188
    10. ' idx' → logprob: -15.502243041992188

Token 1159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3868924081325531
    2. 'in' → logprob: -1.1368924379348755
    3. 'j' → logprob: -12.636892318725586
    4. ' j' → logprob: -12.761892318725586
    5. '0' → logprob: -13.011892318725586
    6. 'i' → logprob: -13.011892318725586
    7. '   ' → logprob: -13.511892318725586
    8. '	in' → logprob: -13.761892318725586
    9. 's' → logprob: -13.886892318725586
    10. '
' → logprob: -13.886892318725586

Token 1160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021472852677106857
    2. ' range' → logprob: -6.252147197723389
    3. 'in' → logprob: -8.502147674560547
    4. '0' → logprob: -11.877147674560547
    5. '
' → logprob: -12.252147674560547
    6. ' in' → logprob: -13.127147674560547
    7. '   ' → logprob: -13.627147674560547
    8. '	range' → logprob: -16.002147674560547
    9. 'r' → logprob: -16.127147674560547
    10. 'ran' → logprob: -16.252147674560547

Token 1161: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12579116225242615
    2. '1' → logprob: -2.875791072845459
    3. 'j' → logprob: -3.500791072845459
    4. '0' → logprob: -3.500791072845459
    5. '(i' → logprob: -7.375791072845459
    6. ' i' → logprob: -8.000791549682617
    7. '(' → logprob: -8.250791549682617
    8. '   ' → logprob: -8.500791549682617
    9. ' j' → logprob: -11.625791549682617
    10. '(j' → logprob: -11.625791549682617

Token 1162: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018793592229485512
    2. ' +' → logprob: -4.01879358291626
    3. ',' → logprob: -8.018794059753418
    4. '-' → logprob: -9.518794059753418
    5. '   ' → logprob: -10.018794059753418
    6. '
' → logprob: -10.018794059753418
    7. '0' → logprob: -10.268794059753418
    8. '):
' → logprob: -10.393794059753418
    9. ' ,' → logprob: -11.268794059753418
    10. '1' → logprob: -11.643794059753418

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010849966667592525
    2. 's' → logprob: -4.885849952697754
    3. ' s' → logprob: -5.760849952697754
    4. '<|end|>' → logprob: -10.260849952697754
    5. '   ' → logprob: -10.635849952697754
    6. '+' → logprob: -11.260849952697754
    7. '<|end|>' → logprob: -12.760849952697754
    8. '	   ' → logprob: -13.510849952697754
    9. ' ' → logprob: -13.635849952697754
    10. '      ' → logprob: -13.635849952697754

Token 1164: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0003582263889256865
    2. '       ' → logprob: -8.375358581542969
    3. ' s' → logprob: -9.000358581542969
    4. '   ' → logprob: -13.125358581542969
    5. '           ' → logprob: -13.250358581542969
    6. '	s' → logprob: -15.375358581542969
    7. '               ' → logprob: -15.500358581542969
    8. '+' → logprob: -17.37535858154297
    9. '```' → logprob: -17.50035858154297
    10. ' ' → logprob: -18.12535858154297

Token 1165: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01613594964146614
    2. ' +=' → logprob: -4.141136169433594
    3. ']+=' → logprob: -9.641136169433594
    4. '+' → logprob: -10.266136169433594
    5. '+="' → logprob: -14.641136169433594
    6. '+='' → logprob: -14.766136169433594
    7. '   ' → logprob: -15.016136169433594
    8. '=' → logprob: -15.266136169433594
    9. '+=(' → logprob: -15.641136169433594
    10. 's' → logprob: -16.391136169433594

Token 1166: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -1.306760805164231e-05
    2. ' delta' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.75001335144043
    4. '(delta' → logprob: -18.62501335144043
    5. '.delta' → logprob: -21.37501335144043
    6. '0' → logprob: -22.00001335144043
    7. 'd' → logprob: -22.12501335144043
    8. 'δ' → logprob: -22.25001335144043
    9. 'elta' → logprob: -22.62501335144043
    10. '  ' → logprob: -22.62501335144043

Token 1167: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002219011075794697
    2. '[' → logprob: -6.127219200134277
    3. 'j' → logprob: -11.752219200134277
    4. '_j' → logprob: -12.377219200134277
    5. '   ' → logprob: -12.877219200134277
    6. ']' → logprob: -13.002219200134277
    7. '	j' → logprob: -13.127219200134277
    8. '[s' → logprob: -13.127219200134277
    9. '```' → logprob: -13.127219200134277
    10. '<|end|>' → logprob: -13.252219200134277

Token 1168: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004113692557439208
    2. ' ]' → logprob: -8.000411033630371
    3. '<|end|>' → logprob: -10.375411033630371
    4. '<|end|>' → logprob: -11.250411033630371
    5. '+' → logprob: -11.750411033630371
    6. ']
' → logprob: -12.000411033630371
    7. ']+' → logprob: -12.250411033630371
    8. ')' → logprob: -12.500411033630371
    9. '   ' → logprob: -12.625411033630371
    10. ']+=' → logprob: -14.000411033630371

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002126587787643075
    2. ']' → logprob: -7.002126693725586
    3. ' ' → logprob: -7.502126693725586
    4. '<|end|>' → logprob: -7.752126693725586
    5. '0' → logprob: -9.127126693725586
    6. '<|end|>' → logprob: -10.377126693725586
    7. ' j' → logprob: -11.002126693725586
    8. ' ]' → logprob: -11.127126693725586
    9. ')' → logprob: -11.252126693725586
    10. 's' → logprob: -11.752126693725586

Token 1170: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6359635591506958
    2. ']' → logprob: -0.7609635591506958
    3. '])' → logprob: -6.510963439941406
    4. ')]' → logprob: -7.135963439941406
    5. '   ' → logprob: -7.760963439941406
    6. ')
' → logprob: -8.260963439941406
    7. ']
' → logprob: -8.510963439941406
    8. '<|end|>' → logprob: -9.760963439941406
    9. ' ]' → logprob: -10.260963439941406
    10. ' )' → logprob: -10.510963439941406

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04364004358649254
    2. 'return' → logprob: -3.91864013671875
    3. ' return' → logprob: -4.16864013671875
    4. '	return' → logprob: -5.54364013671875
    5. ':return' → logprob: -7.54364013671875
    6. '    
' → logprob: -7.79364013671875
    7. '\t' → logprob: -7.79364013671875
    8. '\n' → logprob: -7.91864013671875
    9. '
' → logprob: -8.16864013671875
    10. '    ' → logprob: -8.29364013671875

Token 1172: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6363263130187988
    2. 'return' (adapté à ' return') → logprob: -1.3863263130187988
    3. ' return' → logprob: -1.6363263130187988
    4. '	return' → logprob: -4.261326313018799
    5. '
' → logprob: -4.511326313018799
    6. ':return' → logprob: -8.13632583618164
    7. ' 
' → logprob: -8.76132583618164
    8. ' ' → logprob: -8.88632583618164
    9. '    
' → logprob: -8.88632583618164
    10. '	
' → logprob: -9.88632583618164

Token 1173: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005530327325686812
    2. ' A' → logprob: -7.500553131103516
    3. '	A' → logprob: -17.375553131103516
    4. '   ' → logprob: -17.500553131103516
    5. '(A' → logprob: -18.000553131103516
    6. ' ' → logprob: -18.500553131103516
    7. '
' → logprob: -18.750553131103516
    8. '(' → logprob: -20.125553131103516
    9. 'a' → logprob: -20.250553131103516
    10. 's' → logprob: -20.500553131103516

Token 1174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000158842682139948
    2. '[' → logprob: -8.87515926361084
    3. 'i' → logprob: -12.12515926361084
    4. ' [' → logprob: -12.25015926361084
    5. '[j' → logprob: -12.50015926361084
    6. '[I' → logprob: -13.25015926361084
    7. '[
' → logprob: -13.37515926361084
    8. '(i' → logprob: -14.75015926361084
    9. '```' → logprob: -15.00015926361084
    10. ' i' → logprob: -15.87515926361084

Token 1175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007847334491088986
    2. ']+' → logprob: -7.250784873962402
    3. ' ]' → logprob: -9.750784873962402
    4. '[' → logprob: -12.375784873962402
    5. ']
' → logprob: -12.500784873962402
    6. '[i' → logprob: -12.750784873962402
    7. '])' → logprob: -13.500784873962402
    8. ')' → logprob: -13.625784873962402
    9. '+' → logprob: -14.125784873962402
    10. '']' → logprob: -14.875784873962402

Token 1176: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4749296009540558
    2. '+' → logprob: -0.9749295711517334
    3. '   ' → logprob: -7.8499298095703125
    4. '```' → logprob: -8.349929809570312
    5. '+A' → logprob: -9.724929809570312
    6. '[' → logprob: -10.224929809570312
    7. '
' → logprob: -11.099929809570312
    8. '[i' → logprob: -11.099929809570312
    9. '+i' → logprob: -11.099929809570312
    10. 'def' → logprob: -11.224929809570312

Token 1177: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.493430894101039e-05
    2. ' s' → logprob: -9.500075340270996
    3. '	s' → logprob: -23.37507438659668
    4. '   ' → logprob: -24.37507438659668
    5. '```' → logprob: -24.37507438659668
    6. ' ' → logprob: -24.50007438659668
    7. '`s' → logprob: -24.62507438659668
    8. '_s' → logprob: -24.87507438659668
    9. ' ' → logprob: -25.25007438659668
    10. '
' → logprob: -25.37507438659668

Token 1178: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1228007823228836
    2. '<|end|>' → logprob: -2.997800827026367
    3. 'for' → logprob: -3.122800827026367
    4. '
' → logprob: -4.247800827026367
    5. ' for' → logprob: -5.372800827026367
    6. '    
' → logprob: -6.997800827026367
    7. '#' → logprob: -7.122800827026367
    8. '<|end|>' → logprob: -7.872800827026367
    9. 'def' → logprob: -9.122800827026367
    10. '	for' → logprob: -9.247800827026367

Token 1179: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6185076236724854
    2. 'for' → logprob: -1.4935076236724854
    3. '<|end|>' → logprob: -1.6185076236724854
    4. ' for' → logprob: -4.118507385253906
    5. '
' → logprob: -4.868507385253906
    6. '    
' → logprob: -5.368507385253906
    7. '<|end|>' → logprob: -5.993507385253906
    8. 'L' → logprob: -6.243507385253906
    9. '#' → logprob: -6.618507385253906
    10. '```' → logprob: -6.868507385253906

Token 1180: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41397157311439514
    2. '   ' → logprob: -1.1639715433120728
    3. ' for' → logprob: -4.038971424102783
    4. 'delta' → logprob: -4.913971424102783
    5. '#' → logprob: -7.288971424102783
    6. 'L' → logprob: -7.413971424102783
    7. '    
' → logprob: -9.288971900939941
    8. '
' → logprob: -9.538971900939941
    9. 'while' → logprob: -9.538971900939941
    10. '```' → logprob: -9.538971900939941

Token 1181: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7969772815704346
    2. 'def' → logprob: -1.4219772815704346
    3. 'for' → logprob: -2.7969772815704346
    4. '<|end|>' → logprob: -2.9219772815704346
    5. ' for' → logprob: -3.1719772815704346
    6. ' #' → logprob: -3.6719772815704346
    7. 'import' → logprob: -3.6719772815704346
    8. ' ' → logprob: -3.9219772815704346
    9. '   ' → logprob: -4.1719770431518555
    10. '    ' → logprob: -5.1719770431518555

Token 1182: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7620740532875061
    2. '#' → logprob: -1.5120739936828613
    3. 'import' → logprob: -1.6370739936828613
    4. 'delta' → logprob: -3.5120739936828613
    5. '<|end|>' → logprob: -3.7620739936828613
    6. '
' → logprob: -4.637073993682861
    7. 'from' → logprob: -4.887073993682861
    8. ' delta' → logprob: -5.137073993682861
    9. ' def' → logprob: -5.512073993682861
    10. 'for' → logprob: -5.512073993682861

Token 1183: ' ci' (ID: 7405)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.378664493560791
    2. 'get' → logprob: -1.253664493560791
    3. 'def' → logprob: -4.378664493560791
    4. ')' → logprob: -5.128664493560791
    5. ' ' → logprob: -6.378664493560791
    6. '(' → logprob: -6.378664493560791
    7. '_get' → logprob: -6.628664493560791
    8. ' )' → logprob: -6.878664493560791
    9. 's' → logprob: -7.253664493560791
    10. '
' → logprob: -7.628664493560791

Token 1184: '-dessus' (ID: 74812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27503737807273865
    2. 'n' → logprob: -2.7750372886657715
    3. '#' → logprob: -3.2750372886657715
    4. ' n' → logprob: -3.4000372886657715
    5. ' def' → logprob: -3.5250372886657715
    6. 'est' → logprob: -4.5250372886657715
    7. '-dessous' → logprob: -5.1500372886657715
    8. 'a' → logprob: -5.4000372886657715
    9. 't' → logprob: -5.5250372886657715
    10. ' est' → logprob: -5.6500372886657715

Token 1185: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1186: ' O' (ID: 532)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0995577573776245
    2. 'fait' → logprob: -1.2245577573776245
    3. 'O' → logprob: -2.474557876586914
    4. 'faite' → logprob: -2.724557876586914
    5. 'def' → logprob: -3.724557876586914
    6. 'pr' → logprob: -3.974557876586914
    7. 'code' → logprob: -4.099557876586914
    8. 'for' → logprob: -4.099557876586914
    9. 'python' → logprob: -4.349557876586914
    10. 'lin' → logprob: -4.474557876586914

Token 1187: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3595575988292694
    2. '(' → logprob: -1.2345576286315918
    3. '(i' → logprob: -5.109557628631592
    4. '(Q' → logprob: -6.109557628631592
    5. '(n' → logprob: -6.859557628631592
    6. '1' → logprob: -6.984557628631592
    7. '(log' → logprob: -7.984557628631592
    8. '(len' → logprob: -9.109557151794434
    9. '(k' → logprob: -9.734557151794434
    10. 'N' → logprob: -9.859557151794434

Token 1188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003479500999674201
    2. '+' → logprob: -7.003479480743408
    3. ' )' → logprob: -7.878479480743408
    4. 'def' → logprob: -8.003479957580566
    5. '#' → logprob: -8.253479957580566
    6. '+)' → logprob: -8.253479957580566
    7. ')#' → logprob: -8.378479957580566
    8. ')
' → logprob: -8.878479957580566
    9. '//' → logprob: -8.878479957580566
    10. '-' → logprob: -9.628479957580566

Token 1189: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1190: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8221171498298645
    2. 'each' → logprob: -1.6971170902252197
    3. 'cha' → logprob: -1.9471170902252197
    4. 'ch' → logprob: -3.0721170902252197
    5. 'j' → logprob: -3.6971170902252197
    6. 'for' → logprob: -3.6971170902252197
    7. '_' → logprob: -3.6971170902252197
    8. ' chaque' → logprob: -3.9471170902252197
    9. 'get' → logprob: -4.197117328643799
    10. 'l' → logprob: -4.197117328643799

Token 1191: ' call' (ID: 2421)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.32265734672546387
    2. 'i' → logprob: -2.322657346725464
    3. 'token' → logprob: -3.072657346725464
    4. 'query' → logprob: -3.322657346725464
    5. ')' → logprob: -3.822657346725464
    6. '#' → logprob: -4.072657585144043
    7. 'call' → logprob: -4.322657585144043
    8. 'def' → logprob: -4.697657585144043
    9. ' get' → logprob: -5.072657585144043
    10. '
' → logprob: -5.322657585144043

Token 1192: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1193: ' trop' (ID: 14765)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26966744661331177
    2. 'in' → logprob: -2.019667387008667
    3. 'inut' → logprob: -3.144667387008667
    4. 'ine' → logprob: -3.894667387008667
    5. 'im' → logprob: -4.519667625427246
    6. 'iné' → logprob: -5.019667625427246
    7. 'too' → logprob: -5.019667625427246
    8. 'lent' → logprob: -5.519667625427246
    9. 'insu' → logprob: -6.019667625427246
    10. 'ins' → logprob: -6.019667625427246

Token 1194: ' lente' (ID: 91524)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6970869898796082
    2. 'lent' → logprob: -0.6970869898796082
    3. ' lente' → logprob: -6.197086811065674
    4. 'long' → logprob: -6.697086811065674
    5. 'slow' → logprob: -7.572086811065674
    6. 'len' → logprob: -10.197087287902832
    7. ' lento' → logprob: -10.322087287902832
    8. 'co' → logprob: -10.322087287902832
    9. ' lent' → logprob: -11.322087287902832
    10. 'cost' → logprob: -11.697087287902832

Token 1195: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3747485876083374
    2. '<|end|>' → logprob: -1.6247485876083374
    3. 'def' → logprob: -1.9997485876083374
    4. 'from' → logprob: -2.124748706817627
    5. 'import' → logprob: -2.624748706817627
    6. '#' → logprob: -2.624748706817627
    7. 'delta' → logprob: -3.499748706817627
    8. '[' → logprob: -3.749748706817627
    9. '\' → logprob: -4.124748706817627
    10. ')' → logprob: -4.374748706817627

Token 1196: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28769758343696594
    2. 'def' → logprob: -2.1626975536346436
    3. 'import' → logprob: -3.0376975536346436
    4. '#' → logprob: -3.1626975536346436
    5. 'delta' → logprob: -3.4126975536346436
    6. '
' → logprob: -5.787697792053223
    7. '```' → logprob: -6.037697792053223
    8. ' from' → logprob: -6.662697792053223
    9. '[' → logprob: -6.787697792053223
    10. 'for' → logprob: -7.662697792053223

Token 1197: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4035395681858063
    2. 'import' → logprob: -1.5285395383834839
    3. '#' → logprob: -2.4035396575927734
    4. 'def' → logprob: -4.153539657592773
    5. 'class' → logprob: -4.903539657592773
    6. 'delta' → logprob: -7.278539657592773
    7. 'prefix' → logprob: -8.153539657592773
    8. ' from' → logprob: -8.653539657592773
    9. '```' → logprob: -8.653539657592773
    10. 'Fen' → logprob: -9.278539657592773

Token 1198: ' doit' (ID: 21822)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3083376884460449
    2. '#' → logprob: -1.683337688446045
    3. 'va' → logprob: -4.058337688446045
    4. 'do' → logprob: -4.308337688446045
    5. 'pe' → logprob: -4.558337688446045
    6. 'continue' → logprob: -4.683337688446045
    7. 'util' → logprob: -5.433337688446045
    8. ' va' → logprob: -5.683337688446045
    9. 'can' → logprob: -6.058337688446045
    10. 'def' → logprob: -6.183337688446045

Token 1199: ' garder' (ID: 63069)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.1624060869216919
    2. 'impl' → logprob: -3.0374059677124023
    3. 'am' → logprob: -3.2874059677124023
    4. 'optim' → logprob: -4.162405967712402
    5. 'pass' → logprob: -4.537405967712402
    6. 'rem' → logprob: -4.787405967712402
    7. 'acc' → logprob: -5.162405967712402
    8. 'faire' → logprob: -5.537405967712402
    9. 'instead' → logprob: -5.787405967712402
    10. 'mettre' → logprob: -6.037405967712402

Token 1200: ' un' (ID: 537)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.69833904504776
    2. 'un' → logprob: -0.82333904504776
    3. 'a' → logprob: -3.8233389854431152
    4. 'une' → logprob: -4.198338985443115
    5. 'from' → logprob: -4.823338985443115
    6. ' un' → logprob: -5.323338985443115
    7. 'acc' → logprob: -5.948338985443115
    8. ' une' → logprob: -6.073338985443115
    9. 'cum' → logprob: -6.073338985443115
    10. 'import' → logprob: -6.198338985443115

Token 1201: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.27655360102653503
    2. 'fen' → logprob: -1.5265536308288574
    3. 'from' → logprob: -4.151553630828857
    4. 'Fen' → logprob: -6.276553630828857
    5. 'acc' → logprob: -6.401553630828857
    6. 'cum' → logprob: -6.651553630828857
    7. 'import' → logprob: -7.401553630828857
    8. 'pref' → logprob: -7.401553630828857
    9. 'delta' → logprob: -7.651553630828857
    10. 'c' → logprob: -8.0265531539917

Token 1202: '_delta' (ID: 64352)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6444197297096252
    2. 'sum' → logprob: -1.0194196701049805
    3. '_delta' → logprob: -2.5194196701049805
    4. 'delta' → logprob: -4.0194196701049805
    5. '_s' → logprob: -4.2694196701049805
    6. '
' → logprob: -7.6444196701049805
    7. 's' → logprob: -7.8944196701049805
    8. '_prefix' → logprob: -8.51941967010498
    9. 'Delta' → logprob: -8.64441967010498
    10. ' =' → logprob: -9.26941967010498

Token 1203: ' et' (ID: 859)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00500272074714303
    2. '#' → logprob: -6.005002498626709
    3. '_prefix' → logprob: -7.005002498626709
    4. ' prefix' → logprob: -7.505002498626709
    5. 'delta' → logprob: -7.630002498626709
    6. '
' → logprob: -7.630002498626709
    7. '```' → logprob: -10.505002975463867
    8. '(prefix' → logprob: -10.630002975463867
    9. 'pre' → logprob: -11.755002975463867
    10. 'pref' → logprob: -12.130002975463867

Token 1204: ' le' (ID: 505)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22084937989711761
    2. 'def' → logprob: -2.9708492755889893
    3. 'update' → logprob: -2.9708492755889893
    4. 'prefix' → logprob: -3.4708492755889893
    5. 'from' → logprob: -3.5958492755889893
    6. '#' → logprob: -5.095849514007568
    7. 'delta' → logprob: -5.345849514007568
    8. 'maint' → logprob: -5.470849514007568
    9. 'fen' → logprob: -5.845849514007568
    10. '
' → logprob: -6.095849514007568

Token 1205: ' mettre' (ID: 25339)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0559489727020264
    2. 'import' → logprob: -1.1809489727020264
    3. '#' → logprob: -2.3059489727020264
    4. 'prefix' → logprob: -2.6809489727020264
    5. 'from' → logprob: -3.0559489727020264
    6. 'update' → logprob: -3.0559489727020264
    7. 'maint' → logprob: -4.1809492111206055
    8. 'next' → logprob: -4.6809492111206055
    9. 'can' → logprob: -4.8059492111206055
    10. 'delta' → logprob: -5.4309492111206055

Token 1206: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.011664830148220062
    2. '#' → logprob: -5.136664867401123
    3. ' à' → logprob: -6.011664867401123
    4. '```' → logprob: -6.636664867401123
    5. ''à' → logprob: -7.761664867401123
    6. 'aj' → logprob: -7.761664867401123
    7. 'a' → logprob: -8.011664390563965
    8. 'À' → logprob: -8.011664390563965
    9. 'def' → logprob: -8.636664390563965
    10. '-à' → logprob: -9.136664390563965

Token 1207: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.004250658210366964
    2. 'jou' → logprob: -5.879250526428223
    3. '```' → logprob: -7.629250526428223
    4. 'jours' → logprob: -8.254250526428223
    5. '
' → logprob: -8.754250526428223
    6. ' ' → logprob: -8.754250526428223
    7. 'j' → logprob: -9.254250526428223
    8. '[j' → logprob: -9.504250526428223
    9. '[' → logprob: -9.504250526428223
    10. 'day' → logprob: -10.004250526428223

Token 1208: ' à' (ID: 1221)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5553647875785828
    2. '<|end|>' → logprob: -1.5553648471832275
    3. '#' → logprob: -1.8053648471832275
    4. '
' → logprob: -3.9303648471832275
    5. '```' → logprob: -4.680364608764648
    6. '_prefix' → logprob: -4.805364608764648
    7. ' prefix' → logprob: -5.680364608764648
    8. 'delta' → logprob: -5.805364608764648
    9. '<|end|>' → logprob: -6.180364608764648
    10. '.' → logprob: -7.305364608764648

Token 1209: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.12787653505802155
    2. 'jour' → logprob: -2.5028765201568604
    3. ' chaque' → logprob: -4.5028767585754395
    4. 'l' → logprob: -4.5028767585754395
    5. 'la' → logprob: -5.7528767585754395
    6. 'each' → logprob: -5.7528767585754395
    7. 'ch' → logprob: -6.1278767585754395
    8. 'part' → logprob: -6.5028767585754395
    9. 'jours' → logprob: -6.5028767585754395
    10. ' jour' → logprob: -6.7528767585754395

Token 1210: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -1.1542649269104004
    2. 'token' → logprob: -1.6542649269104004
    3. '#' → logprob: -1.7792649269104004
    4. '
' → logprob: -2.4042649269104004
    5. 'delta' → logprob: -2.5292649269104004
    6. '```' → logprob: -3.2792649269104004
    7. 'mod' → logprob: -3.5292649269104004
    8. 'update' → logprob: -3.7792649269104004
    9. 'change' → logprob: -4.1542649269104
    10. 'for' → logprob: -4.6542649269104

Token 1211: '.
' (ID: 558)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.043747082352638245
    2. '#' → logprob: -3.6687471866607666
    3. ' prefix' → logprob: -4.6687469482421875
    4. 'delta' → logprob: -5.4187469482421875
    5. '
' → logprob: -6.9187469482421875
    6. '```' → logprob: -7.1687469482421875
    7. '<|end|>' → logprob: -8.043746948242188
    8. '_prefix' → logprob: -8.168746948242188
    9. 'import' → logprob: -8.543746948242188
    10. 'def' → logprob: -8.918746948242188

Token 1212: '#' (ID: 2)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.03748474642634392
    2. '#' → logprob: -3.537484645843506
    3. 'delta' → logprob: -5.162484645843506
    4. '```' → logprob: -6.912484645843506
    5. ' prefix' → logprob: -7.787484645843506
    6. '
' → logprob: -8.912485122680664
    7. 'def' → logprob: -9.787485122680664
    8. 'for' → logprob: -10.037485122680664
    9. 'class' → logprob: -10.037485122680664
    10. '_prefix' → logprob: -10.162485122680664

Token 1213: ' Pro' (ID: 1258)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00848372932523489
    2. '#' → logprob: -5.00848388671875
    3. 'delta' → logprob: -7.13348388671875
    4. ' prefix' → logprob: -7.75848388671875
    5. 'def' → logprob: -9.00848388671875
    6. '```' → logprob: -9.50848388671875
    7. 'class' → logprob: -9.63348388671875
    8. 'from' → logprob: -9.63348388671875
    9. 'import' → logprob: -9.75848388671875
    10. '
' → logprob: -10.25848388671875

Token 1214: 'bl' (ID: 1751)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5915945768356323
    2. 'fix' → logprob: -1.7165945768356323
    3. '#' → logprob: -1.9665945768356323
    4. 'm' → logprob: -2.591594696044922
    5. 'cess' → logprob: -4.716594696044922
    6. 'def' → logprob: -4.716594696044922
    7. 'refix' → logprob: -4.966594696044922
    8. 'blem' → logprob: -5.341594696044922
    9. 'gram' → logprob: -5.466594696044922
    10. '```' → logprob: -5.841594696044922

Token 1215: 'ème' (ID: 9767)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -1.0733095407485962
    2. '#' → logprob: -1.4483095407485962
    3. 'prefix' → logprob: -2.0733094215393066
    4. 'm' → logprob: -2.3233094215393066
    5. 'gram' → logprob: -2.5733094215393066
    6. 'f' → logprob: -4.448309421539307
    7. 'blem' → logprob: -4.823309421539307
    8. 'refix' → logprob: -5.073309421539307
    9. 'duit' → logprob: -5.198309421539307
    10. 'from' → logprob: -5.323309421539307

Token 1216: ' :' (ID: 712)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.935045599937439
    2. '#' → logprob: -1.310045599937439
    3. 'delta' → logprob: -1.935045599937439
    4. 'from' → logprob: -2.0600457191467285
    5. '<|end|>' → logprob: -4.1850457191467285
    6. 'import' → logprob: -4.1850457191467285
    7. 'def' → logprob: -5.0600457191467285
    8. 'class' → logprob: -5.5600457191467285
    9. ' prefix' → logprob: -5.5600457191467285
    10. '_prefix' → logprob: -5.6850457191467285

Token 1217: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1852535009384155
    2. 'prefix' → logprob: -1.1852535009384155
    3. 'from' → logprob: -1.4352535009384155
    4. 'delta' → logprob: -2.810253620147705
    5. 'import' → logprob: -3.060253620147705
    6. 'pass' → logprob: -4.060253620147705
    7. 'continue' → logprob: -4.560253620147705
    8. '<|end|>' → logprob: -4.935253620147705
    9. '```' → logprob: -5.685253620147705
    10. 'class' → logprob: -7.435253620147705

Token 1218: ' mod' (ID: 1812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0929807424545288
    2. 'n' → logprob: -1.5929807424545288
    3. ' ne' → logprob: -2.7179808616638184
    4. 'need' → logprob: -2.8429808616638184
    5. ' n' → logprob: -2.9679808616638184
    6. 'ne' → logprob: -3.0929808616638184
    7. 'cannot' → logprob: -3.3429808616638184
    8. 'import' → logprob: -3.8429808616638184
    9. 'do' → logprob: -3.9679808616638184
    10. ' va' → logprob: -4.092980861663818

Token 1219: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.062254250049591064
    2. 'f' → logprob: -3.8122541904449463
    3. 'd' → logprob: -4.187254428863525
    4. 'delta' → logprob: -4.437254428863525
    5. 'od' → logprob: -5.937254428863525
    6. 'df' → logprob: -6.187254428863525
    7. 'ut' → logprob: -6.687254428863525
    8. 'if' → logprob: -7.187254428863525
    9. 'uf' → logprob: -7.812254428863525
    10. '#' → logprob: -7.812254428863525

Token 1220: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3672252893447876
    2. ' delta' → logprob: -1.2422252893447876
    3. ' le' → logprob: -6.242225170135498
    4. 'le' → logprob: -6.367225170135498
    5. ' la' → logprob: -6.492225170135498
    6. 'the' → logprob: -6.617225170135498
    7. ' un' → logprob: -6.742225170135498
    8. 'import' → logprob: -6.867225170135498
    9. 'la' → logprob: -7.117225170135498
    10. 'un' → logprob: -7.242225170135498

Token 1221: '[L' (ID: 112100)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29443928599357605
    2. '+' → logprob: -1.6694393157958984
    3. '],' → logprob: -3.4194393157958984
    4. '[L' → logprob: -4.294439315795898
    5. ']+' → logprob: -5.544439315795898
    6. ']+=' → logprob: -5.794439315795898
    7. '[R' → logprob: -5.794439315795898
    8. '+]' → logprob: -6.044439315795898
    9. ']=' → logprob: -6.919439315795898
    10. '']' → logprob: -7.044439315795898

Token 1223: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1224: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005247395019978285
    2. ' X' → logprob: -5.255247592926025
    3. '1' → logprob: -12.005247116088867
    4. '=' → logprob: -12.755247116088867
    5. '   ' → logprob: -14.005247116088867
    6. '	X' → logprob: -14.380247116088867
    7. '=X' → logprob: -14.380247116088867
    8. ' =' → logprob: -14.505247116088867
    9. '+' → logprob: -14.505247116088867
    10. ' ' → logprob: -14.755247116088867

Token 1225: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1226: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.00736737996339798
    2. ' delta' → logprob: -5.0073676109313965
    3. '   ' → logprob: -7.5073676109313965
    4. '
' → logprob: -9.632367134094238
    5. '```' → logprob: -12.007367134094238
    6. '(delta' → logprob: -12.382367134094238
    7. '...' → logprob: -12.382367134094238
    8. ' ' → logprob: -12.382367134094238
    9. '    
' → logprob: -12.882367134094238
    10. '#' → logprob: -13.257367134094238

Token 1227: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.00014418430509977043
    2. '[' → logprob: -9.250144004821777
    3. '[L' → logprob: -10.250144004821777
    4. ' [' → logprob: -12.500144004821777
    5. '```' → logprob: -13.000144004821777
    6. 'R' → logprob: -13.125144004821777
    7. '
' → logprob: -13.625144004821777
    8. '[
' → logprob: -14.500144004821777
    9. 'plus' → logprob: -14.500144004821777
    10. '   ' → logprob: -14.625144004821777

Token 1228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015798516105860472
    2. ' +' → logprob: -6.501579761505127
    3. ']' → logprob: -9.626580238342285
    4. '```' → logprob: -12.876580238342285
    5. '_plus' → logprob: -13.501580238342285
    6. '
' → logprob: -13.626580238342285
    7. 'plus' → logprob: -13.626580238342285
    8. ']+' → logprob: -13.751580238342285
    9. '[' → logprob: -13.751580238342285
    10. '+]' → logprob: -14.126580238342285

Token 1229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002559753193054348
    2. '+' → logprob: -8.500255584716797
    3. ' ' → logprob: -10.250255584716797
    4. '
' → logprob: -11.875255584716797
    5. ' +' → logprob: -12.937755584716797
    6. 'X' → logprob: -13.500255584716797
    7. ']' → logprob: -13.500255584716797
    8. '```' → logprob: -13.937755584716797
    9. '   ' → logprob: -14.125255584716797
    10. '2' → logprob: -14.750255584716797

Token 1230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002013932913541794
    2. ']+=' → logprob: -6.37701416015625
    3. ']+' → logprob: -9.50201416015625
    4. '']' → logprob: -9.62701416015625
    5. '"]' → logprob: -10.12701416015625
    6. '   ' → logprob: -10.37701416015625
    7. '```' → logprob: -10.50201416015625
    8. ' +=' → logprob: -11.37701416015625
    9. '[' → logprob: -11.50201416015625
    10. '+=' → logprob: -11.62701416015625

Token 1231: ' -=' (ID: 12583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1232: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.018383940681815147
    2. ' X' → logprob: -4.018383979797363
    3. '1' → logprob: -8.518383979797363
    4. ' ' → logprob: -11.143383979797363
    5. '   ' → logprob: -11.268383979797363
    6. '```' → logprob: -13.018383979797363
    7. '	X' → logprob: -14.268383979797363
    8. 'x' → logprob: -14.268383979797363
    9. ' ' → logprob: -14.518383979797363
    10. '`' → logprob: -14.643383979797363

Token 1233: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9537904858589172
    2. '#' → logprob: -1.2037904262542725
    3. 'prefix' → logprob: -1.4537904262542725
    4. 'import' → logprob: -2.8287904262542725
    5. 'class' → logprob: -4.578790664672852
    6. 'def' → logprob: -5.328790664672852
    7. '<|end|>' → logprob: -6.453790664672852
    8. '   ' → logprob: -6.578790664672852
    9. 'delta' → logprob: -7.203790664672852
    10. '_prefix' → logprob: -7.828790664672852

Token 1234: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4584543704986572
    2. '#' → logprob: -2.0834543704986572
    3. 'import' → logprob: -2.0834543704986572
    4. 'prefix' → logprob: -2.7084543704986572
    5. 'class' → logprob: -3.5834543704986572
    6. 'Fen' → logprob: -4.833454132080078
    7. 'fen' → logprob: -5.583454132080078
    8. 'for' → logprob: -5.583454132080078
    9. 'def' → logprob: -5.583454132080078
    10. 'delta' → logprob: -6.833454132080078

Token 1235: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7075875997543335
    2. 'prefix' → logprob: -1.2075875997543335
    3. '#' → logprob: -1.9575875997543335
    4. 'import' → logprob: -3.207587718963623
    5. 'class' → logprob: -4.082587718963623
    6. 'def' → logprob: -5.582587718963623
    7. ' prefix' → logprob: -6.707587718963623
    8. '```' → logprob: -7.082587718963623
    9. 'Fen' → logprob: -7.332587718963623
    10. 'delta' → logprob: -7.582587718963623

Token 1236: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.073085904121399
    2. '#' → logprob: -1.198085904121399
    3. 'pe' → logprob: -2.0730857849121094
    4. 'from' → logprob: -2.3230857849121094
    5. 'va' → logprob: -3.0730857849121094
    6. 'need' → logprob: -3.8230857849121094
    7. 'can' → logprob: -4.323085784912109
    8. 'do' → logprob: -4.823085784912109
    9. 'continue' → logprob: -5.198085784912109
    10. 'def' → logprob: -5.323085784912109

Token 1237: ' avoir' (ID: 16595)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.0686546564102173
    2. 'maint' → logprob: -1.5686546564102173
    3. 'contin' → logprob: -2.5686545372009277
    4. 'import' → logprob: -2.5686545372009277
    5. 'faire' → logprob: -2.6936545372009277
    6. 'pré' → logprob: -2.8186545372009277
    7. 'impl' → logprob: -3.4436545372009277
    8. 'g' → logprob: -3.8186545372009277
    9. 'implement' → logprob: -3.9436545372009277
    10. 'pass' → logprob: -4.068654537200928

Token 1238: ' un' (ID: 537)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.16921782493591309
    2. 'un' → logprob: -1.919217824935913
    3. 'import' → logprob: -6.044218063354492
    4. 'une' → logprob: -6.544218063354492
    5. '#' → logprob: -6.669218063354492
    6. 'a' → logprob: -6.794218063354492
    7. 'from' → logprob: -6.919218063354492
    8. 'delta' → logprob: -7.544218063354492
    9. 'pré' → logprob: -7.919218063354492
    10. 'pref' → logprob: -8.294218063354492

Token 1239: ' prefix' (ID: 18633)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.5839400887489319
    2. 'prefix' → logprob: -0.9589400887489319
    3. 'Fen' → logprob: -3.583940029144287
    4. 'from' → logprob: -4.083940029144287
    5. 'def' → logprob: -5.208940029144287
    6. 'import' → logprob: -5.958940029144287
    7. 'class' → logprob: -6.208940029144287
    8. ' fen' → logprob: -6.833940029144287
    9. '#' → logprob: -6.833940029144287
    10. ' Fen' → logprob: -7.083940029144287

Token 1240: '_delta' (ID: 64352)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6680700778961182
    2. 'sum' → logprob: -1.5430700778961182
    3. '_delta' → logprob: -1.5430700778961182
    4. '_s' → logprob: -3.543070077896118
    5. 'delta' → logprob: -3.918070077896118
    6. 's' → logprob: -5.168069839477539
    7. '_' → logprob: -6.543069839477539
    8. 'def' → logprob: -6.793069839477539
    9. '```' → logprob: -7.543069839477539
    10. '_diff' → logprob: -7.918069839477539

Token 1241: ' cor' (ID: 1907)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.262071967124939
    2. '_sum' → logprob: -1.387071967124939
    3. '<|end|>' → logprob: -1.887071967124939
    4. 'sum' → logprob: -2.3870720863342285
    5. '_prefix' → logprob: -2.7620720863342285
    6. '=' → logprob: -2.8870720863342285
    7. '_' → logprob: -3.2620720863342285
    8. '_s' → logprob: -4.2620720863342285
    9. 'def' → logprob: -4.6370720863342285
    10. 's' → logprob: -4.6370720863342285

Token 1242: 'rom' (ID: 511)
  Prédit: 'rom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.3055928349494934
    2. 'rect' → logprob: -1.8055927753448486
    3. 'rupt' → logprob: -2.4305927753448486
    4. 'rupted' → logprob: -4.930593013763428
    5. 'respond' → logprob: -6.430593013763428
    6. 'r' → logprob: -7.305593013763428
    7. 'rompt' → logprob: -8.18059253692627
    8. '
' → logprob: -8.30559253692627
    9. 're' → logprob: -8.68059253692627
    10. 'rum' → logprob: -9.05559253692627

Token 1243: 'pu' (ID: 5112)
  Prédit: 'rupt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rupt' → logprob: -0.18296168744564056
    2. 'rect' → logprob: -1.9329617023468018
    3. 'rupted' → logprob: -4.182961463928223
    4. 'upt' → logprob: -6.182961463928223
    5. 'r' → logprob: -6.682961463928223
    6. '
' → logprob: -6.807961463928223
    7. '[' → logprob: -7.307961463928223
    8. '_r' → logprob: -8.307961463928223
    9. '```' → logprob: -8.432961463928223
    10. 'rig' → logprob: -8.557961463928223

Token 1244: ' après' (ID: 16460)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30212149024009705
    2. 'from' → logprob: -2.17712140083313
    3. '<|end|>' → logprob: -3.17712140083313
    4. 'import' → logprob: -3.42712140083313
    5. 'for' → logprob: -4.052121639251709
    6. 'def' → logprob: -4.427121639251709
    7. '
' → logprob: -4.427121639251709
    8. 'delta' → logprob: -4.677121639251709
    9. 'prefix' → logprob: -5.302121639251709
    10. '```' → logprob: -5.427121639251709

Token 1245: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1000184714794159
    2. 'from' → logprob: -3.7250185012817383
    3. 'import' → logprob: -4.225018501281738
    4. 'delta' → logprob: -4.475018501281738
    5. 'def' → logprob: -4.725018501281738
    6. 'prefix' → logprob: -4.850018501281738
    7. 'continue' → logprob: -4.850018501281738
    8. 'pass' → logprob: -5.350018501281738
    9. 'for' → logprob: -5.725018501281738
    10. '<|end|>' → logprob: -6.100018501281738

Token 1246: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.23382191359996796
    2. 'delta' → logprob: -1.8588218688964844
    3. 'query' → logprob: -3.8588218688964844
    4. 'update' → logprob: -3.9838218688964844
    5. 'L' → logprob: -5.233821868896484
    6. 'for' → logprob: -5.858821868896484
    7. ' delta' → logprob: -7.108821868896484
    8. '
' → logprob: -7.483821868896484
    9. ' L' → logprob: -7.858821868896484
    10. ' modification' → logprob: -7.983821868896484

Token 1247: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7000666856765747
    2. 'prefix' → logprob: -1.2000666856765747
    3. '<|end|>' → logprob: -2.325066566467285
    4. 'from' → logprob: -3.200066566467285
    5. 'def' → logprob: -3.950066566467285
    6. 'delta' → logprob: -4.075066566467285
    7. 'import' → logprob: -4.825066566467285
    8. 'for' → logprob: -4.825066566467285
    9. '```' → logprob: -6.450066566467285
    10. '_prefix' → logprob: -6.450066566467285

Token 1248: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.46906888484954834
    2. '#' → logprob: -2.094069004058838
    3. 'import' → logprob: -2.219069004058838
    4. 'class' → logprob: -2.469069004058838
    5. 'Fen' → logprob: -3.594069004058838
    6. 'def' → logprob: -3.844069004058838
    7. 'fen' → logprob: -5.469069004058838
    8. '```' → logprob: -6.219069004058838
    9. 'for' → logprob: -6.844069004058838
    10. '   ' → logprob: -7.844069004058838

Token 1249: ' Donc' (ID: 88837)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3623291254043579
    2. '#' → logprob: -1.737329125404358
    3. 'import' → logprob: -2.6123290061950684
    4. 'prefix' → logprob: -3.6123290061950684
    5. 'class' → logprob: -4.112329006195068
    6. 'delta' → logprob: -5.362329006195068
    7. 'def' → logprob: -5.487329006195068
    8. ' from' → logprob: -7.362329006195068
    9. 'for' → logprob: -7.737329006195068
    10. '```' → logprob: -8.362329483032227

Token 1250: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5928428173065186
    2. 'from' → logprob: -1.4678428173065186
    3. 'class' → logprob: -2.2178428173065186
    4. '#' → logprob: -2.4678428173065186
    5. 'fen' → logprob: -4.592843055725098
    6. 'def' → logprob: -4.717843055725098
    7. 'prefix' → logprob: -6.842843055725098
    8. ' from' → logprob: -7.217843055725098
    9. 'Fen' → logprob: -7.842843055725098
    10. ' class' → logprob: -7.967843055725098

Token 1251: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.767280638217926
    2. 'from' → logprob: -0.892280638217926
    3. 'class' → logprob: -2.8922805786132812
    4. '#' → logprob: -2.8922805786132812
    5. 'prefix' → logprob: -4.642280578613281
    6. 'fen' → logprob: -6.017280578613281
    7. 'def' → logprob: -6.142280578613281
    8. ' from' → logprob: -8.767280578613281
    9. 'break' → logprob: -8.892280578613281
    10. 'pass' → logprob: -8.892280578613281

Token 1252: ' garde' (ID: 65309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6028873920440674
    2. '#' → logprob: -1.7278873920440674
    3. 'need' → logprob: -1.9778873920440674
    4. 'util' → logprob: -3.1028873920440674
    5. 'do' → logprob: -3.4778873920440674
    6. 'pe' → logprob: -3.9778873920440674
    7. 'from' → logprob: -4.727887153625488
    8. 'can' → logprob: -4.852887153625488
    9. 'continue' → logprob: -4.977887153625488
    10. 'vais' → logprob: -5.727887153625488

Token 1253: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.05977035313844681
    2. 'prefix' → logprob: -3.809770345687866
    3. 'une' → logprob: -4.434770584106445
    4. 'import' → logprob: -4.809770584106445
    5. 'a' → logprob: -4.934770584106445
    6. ' un' → logprob: -5.309770584106445
    7. 'delta' → logprob: -6.309770584106445
    8. 'fen' → logprob: -7.434770584106445
    9. ' une' → logprob: -7.934770584106445
    10. 'from' → logprob: -8.184770584106445

Token 1254: ' tableau' (ID: 67053)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.007866982370615005
    2. 'Fen' → logprob: -5.507866859436035
    3. 'from' → logprob: -6.507866859436035
    4. 'import' → logprob: -7.132866859436035
    5. 'bit' → logprob: -7.507866859436035
    6. 'BIT' → logprob: -8.132866859436035
    7. 'prefix' → logprob: -8.257866859436035
    8. 'class' → logprob: -8.882866859436035
    9. 'tree' → logprob: -9.757866859436035
    10. ' fen' → logprob: -9.882866859436035

Token 1255: ' prefix' (ID: 18633)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.1287083476781845
    2. 'bit' → logprob: -3.1287083625793457
    3. 'prefix' → logprob: -3.1287083625793457
    4. 'freq' → logprob: -3.8787083625793457
    5. 'Fen' → logprob: -5.628708362579346
    6. 'diff' → logprob: -5.753708362579346
    7. 'import' → logprob: -6.003708362579346
    8. ' fen' → logprob: -6.753708362579346
    9. 'BIT' → logprob: -7.503708362579346
    10. 'tree' → logprob: -7.628708362579346

Token 1256: '_delta' (ID: 64352)
  Prédit: '_delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_delta' → logprob: -0.041111551225185394
    2. '_sum' → logprob: -3.291111469268799
    3. 'sum' → logprob: -6.541111469268799
    4. 'delta' → logprob: -6.791111469268799
    5. '_prefix' → logprob: -8.166111946105957
    6. '_s' → logprob: -9.416111946105957
    7. '_' → logprob: -10.041111946105957
    8. 'Delta' → logprob: -10.541111946105957
    9. '_d' → logprob: -11.041111946105957
    10. '_max' → logprob: -12.166111946105957

Token 1257: ' à' (ID: 1221)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.30661794543266296
    2. 'prefix' → logprob: -1.5566179752349854
    3. '<|end|>' → logprob: -3.1816179752349854
    4. ' =' → logprob: -5.056617736816406
    5. '=' → logprob: -6.431617736816406
    6. '_' → logprob: -6.681617736816406
    7. '
' → logprob: -7.431617736816406
    8. '#' → logprob: -7.556617736816406
    9. ' prefix' → logprob: -8.181617736816406
    10. '(prefix' → logprob: -8.431617736816406

Token 1258: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.83466637134552
    2. '[' → logprob: -1.33466637134552
    3. ' jour' → logprob: -1.95966637134552
    4. 'None' → logprob: -2.2096662521362305
    5. 'day' → logprob: -4.4596662521362305
    6. 'date' → logprob: -4.7096662521362305
    7. 'j' → logprob: -4.8346662521362305
    8. 'jours' → logprob: -5.0846662521362305
    9. 'len' → logprob: -5.4596662521362305
    10. '[j' → logprob: -5.5846662521362305

Token 1259: ' en' (ID: 469)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.000399925687815994
    2. '#' → logprob: -8.375399589538574
    3. ' prefix' → logprob: -8.875399589538574
    4. '
' → logprob: -12.000399589538574
    5. '(prefix' → logprob: -12.125399589538574
    6. 'import' → logprob: -12.750399589538574
    7. 'pref' → logprob: -12.875399589538574
    8. '_prefix' → logprob: -13.250399589538574
    9. '   ' → logprob: -13.375399589538574
    10. '```' → logprob: -13.875399589538574

Token 1260: ' faisant' (ID: 67003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18270105123519897
    2. 'temps' → logprob: -2.6827011108398438
    3. 'O' → logprob: -3.5577011108398438
    4. '#' → logprob: -3.8077011108398438
    5. '```' → logprob: -4.932701110839844
    6. '[' → logprob: -5.057701110839844
    7. 'from' → logprob: -5.182701110839844
    8. 'for' → logprob: -5.932701110839844
    9. '0' → logprob: -6.057701110839844
    10. 'import' → logprob: -6.307701110839844

Token 1261: ' delta' (ID: 18800)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.412808358669281
    2. 'delta' → logprob: -1.2878084182739258
    3. 'pass' → logprob: -3.787808418273926
    4. '#' → logprob: -4.162808418273926
    5. '```' → logprob: -5.037808418273926
    6. 'def' → logprob: -5.162808418273926
    7. 'diff' → logprob: -6.287808418273926
    8. 'prefix' → logprob: -6.287808418273926
    9. ' for' → logprob: -6.287808418273926
    10. 'from' → logprob: -6.412808418273926

Token 1262: ' comme' (ID: 7971)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0015310514718294144
    2. 'L' → logprob: -7.62653112411499
    3. '[' → logprob: -8.001530647277832
    4. 'delta' → logprob: -8.251530647277832
    5. 'import' → logprob: -9.126530647277832
    6. 'from' → logprob: -9.251530647277832
    7. 'def' → logprob: -10.126530647277832
    8. '<|end|>' → logprob: -10.501530647277832
    9. '[R' → logprob: -11.001530647277832
    10. '(L' → logprob: -11.251530647277832

Token 1263: ' Fen' (ID: 48230)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.8328918218612671
    2. 'un' → logprob: -1.582891821861267
    3. 'diff' → logprob: -2.2078919410705566
    4. 'une' → logprob: -2.2078919410705566
    5. 'delta' → logprob: -3.5828919410705566
    6. 'difference' → logprob: -3.7078919410705566
    7. 'Fen' → logprob: -4.082891941070557
    8. 'a' → logprob: -4.457891941070557
    9. 'dif' → logprob: -4.707891941070557
    10. 'd' → logprob: -4.707891941070557

Token 1264: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.029703868553042412
    2. 'wick' → logprob: -3.6547038555145264
    3. 't' → logprob: -6.1547040939331055
    4. '```' → logprob: -8.279704093933105
    5. 'wt' → logprob: -8.654704093933105
    6. 'tree' → logprob: -8.779704093933105
    7. '
' → logprob: -9.779704093933105
    8. '   ' → logprob: -10.279704093933105
    9. '       ' → logprob: -10.529704093933105
    10. '``' → logprob: -10.654704093933105

Token 1265: ' ou' (ID: 2031)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0106947422027588
    2. 'class' → logprob: -1.2606947422027588
    3. 'def' → logprob: -1.8856947422027588
    4. 'import' → logprob: -2.635694742202759
    5. 'from' → logprob: -3.760694742202759
    6. '<|end|>' → logprob: -4.01069450378418
    7. '[]' → logprob: -4.26069450378418
    8. '#' → logprob: -4.76069450378418
    9. '_' → logprob: -4.88569450378418
    10. '(' → logprob: -4.88569450378418

Token 1266: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.09553435444831848
    2. 'Segment' → logprob: -2.595534324645996
    3. 'class' → logprob: -4.595534324645996
    4. 'BIT' → logprob: -5.845534324645996
    5. 'import' → logprob: -6.220534324645996
    6. ' segment' → logprob: -7.720534324645996
    7. 'def' → logprob: -8.095534324645996
    8. 'prefix' → logprob: -8.095534324645996
    9. 'seg' → logprob: -8.470534324645996
    10. '#' → logprob: -8.720534324645996

Token 1267: ' tree' (ID: 8165)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5770156979560852
    2. 'tree' → logprob: -1.9520156383514404
    3. '<|end|>' → logprob: -2.2020156383514404
    4. 'Tree' → logprob: -3.0770156383514404
    5. 'import' → logprob: -3.8270156383514404
    6. ')' → logprob: -3.9520156383514404
    7. '[]' → logprob: -4.2020158767700195
    8. '+' → logprob: -4.8270158767700195
    9. ' tree' → logprob: -4.8270158767700195
    10. '_' → logprob: -5.0770158767700195

Token 1268: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.553560495376587
    2. '#' → logprob: -1.678560495376587
    3. '[' → logprob: -1.803560495376587
    4. 'import' → logprob: -2.303560495376587
    5. 'def' → logprob: -2.303560495376587
    6. '_' → logprob: -2.553560495376587
    7. '=' → logprob: -3.678560495376587
    8. 'class' → logprob: -3.678560495376587
    9. ')' → logprob: -3.678560495376587
    10. 'delta' → logprob: -4.428560256958008

Token 1269: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20682843029499054
    2. 'def' → logprob: -2.5818283557891846
    3. 'd' → logprob: -2.9568283557891846
    4. '#' → logprob: -3.9568283557891846
    5. 'import' → logprob: -4.456828594207764
    6. '```' → logprob: -4.956828594207764
    7. 'from' → logprob: -5.706828594207764
    8. '[' → logprob: -5.706828594207764
    9. '`' → logprob: -6.456828594207764
    10. ' class' → logprob: -6.456828594207764

Token 1270: ' Comme' (ID: 53252)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8354828953742981
    2. 'from' → logprob: -1.0854828357696533
    3. 'def' → logprob: -2.0854828357696533
    4. 'import' → logprob: -2.9604828357696533
    5. '#' → logprob: -3.7104828357696533
    6. '[' → logprob: -4.710483074188232
    7. 'delta' → logprob: -5.210483074188232
    8. '```' → logprob: -5.960483074188232
    9. '+' → logprob: -6.335483074188232
    10. 'Fen' → logprob: -6.335483074188232

Token 1271: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9409081935882568
    2. 'la' → logprob: -2.190908193588257
    3. ' la' → logprob: -2.565908193588257
    4. ' vous' → logprob: -3.190908193588257
    5. 'le' → logprob: -3.315908193588257
    6. 'class' → logprob: -3.440908193588257
    7. ' on' → logprob: -3.565908193588257
    8. 'N' → logprob: -3.815908193588257
    9. ' N' → logprob: -3.815908193588257
    10. ' les' → logprob: -3.940908193588257

Token 1272: ' fait' (ID: 7473)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4577106237411499
    2. 'veux' → logprob: -1.83271062374115
    3. 'vais' → logprob: -2.5827107429504395
    4. '#' → logprob: -3.3327107429504395
    5. 'n' → logprob: -3.7077107429504395
    6. 'dispose' → logprob: -3.8327107429504395
    7. 'vou' → logprob: -5.0827107429504395
    8. 've' → logprob: -5.4577107429504395
    9. 's' → logprob: -5.4577107429504395
    10. 'va' → logprob: -5.5827107429504395

Token 1273: ' Q' (ID: 1486)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7732657194137573
    2. 'une' → logprob: -1.8982657194137573
    3. 'def' → logprob: -2.273265838623047
    4. 'a' → logprob: -2.523265838623047
    5. 'import' → logprob: -2.648265838623047
    6. '#' → logprob: -3.148265838623047
    7. 'Fen' → logprob: -3.898265838623047
    8. ' une' → logprob: -4.148265838623047
    9. 'from' → logprob: -4.898265838623047
    10. 'un' → logprob: -5.023265838623047

Token 1274: ' updates' (ID: 12663)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.287196159362793
    2. '=' → logprob: -1.662196159362793
    3. '+' → logprob: -2.037196159362793
    4. ' +=' → logprob: -2.287196159362793
    5. '+=' → logprob: -2.787196159362793
    6. ':' → logprob: -3.037196159362793
    7. '#' → logprob: -3.287196159362793
    8. 'Fen' → logprob: -3.287196159362793
    9. 'import' → logprob: -4.037196159362793
    10. ')' → logprob: -4.662196159362793

Token 1275: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1276: ' Q' (ID: 1486)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.02234952338039875
    2. 'Q' → logprob: -4.3973493576049805
    3. 'N' → logprob: -5.1473493576049805
    4. 'prefix' → logprob: -6.2723493576049805
    5. '4' → logprob: -6.6473493576049805
    6. 'query' → logprob: -8.14734935760498
    7. 'get' → logprob: -8.89734935760498
    8. 'gets' → logprob: -9.14734935760498
    9. '#' → logprob: -9.27234935760498
    10. ' queries' → logprob: -9.89734935760498

Token 1277: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.006863017100840807
    2. ' queries' → logprob: -5.006863117218018
    3. 'gets' → logprob: -9.75686264038086
    4. 'reads' → logprob: -10.00686264038086
    5. 'query' → logprob: -11.88186264038086
    6. 'def' → logprob: -12.50686264038086
    7. 'requests' → logprob: -12.50686264038086
    8. 'calls' → logprob: -12.50686264038086
    9. 'asks' → logprob: -12.63186264038086
    10. 'inputs' → logprob: -12.75686264038086

Token 1278: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6341586709022522
    2. 'import' → logprob: -1.2591586112976074
    3. 'from' → logprob: -2.5091586112976074
    4. '#' → logprob: -2.7591586112976074
    5. '
' → logprob: -4.134158611297607
    6. 'def' → logprob: -4.259158611297607
    7. '```' → logprob: -6.259158611297607
    8. '[' → logprob: -6.384158611297607
    9. ')' → logprob: -6.634158611297607
    10. '<|end|>' → logprob: -6.759158611297607

Token 1279: ' Fen' (ID: 48230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0960775762796402
    2. 'import' → logprob: -2.8460776805877686
    3. 'from' → logprob: -3.7210776805877686
    4. ' class' → logprob: -5.0960774421691895
    5. '
' → logprob: -6.7210774421691895
    6. '#' → logprob: -7.0960774421691895
    7. ' from' → logprob: -7.5960774421691895
    8. '```' → logprob: -8.221077919006348
    9. 'def' → logprob: -8.596077919006348
    10. ' import' → logprob: -9.971077919006348

Token 1280: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.3889037072658539
    2. 'w' → logprob: -1.1389037370681763
    3. '```' → logprob: -6.888903617858887
    4. 'wt' → logprob: -8.263903617858887
    5. 'wik' → logprob: -8.513903617858887
    6. '
' → logprob: -10.013903617858887
    7. '   ' → logprob: -10.138903617858887
    8. 'wig' → logprob: -10.138903617858887
    9. '``' → logprob: -10.263903617858887
    10. '-w' → logprob: -10.888903617858887

Token 1281: ' tree' (ID: 8165)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.12382402271032333
    2. 'ree' → logprob: -2.998824119567871
    3. '_tree' → logprob: -4.373824119567871
    4. 'tree' → logprob: -4.623824119567871
    5. '<|end|>' → logprob: -4.748824119567871
    6. 'Fen' → logprob: -5.498824119567871
    7. '_' → logprob: -5.748824119567871
    8. 'T' → logprob: -5.873824119567871
    9. '(
' → logprob: -5.873824119567871
    10. 'class' → logprob: -5.998824119567871

Token 1282: ' est' (ID: 893)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010243650525808334
    2. ':' → logprob: -5.8852434158325195
    3. '(
' → logprob: -6.0102434158325195
    4. '(' → logprob: -6.3852434158325195
    5. '
' → logprob: -7.0102434158325195
    6. 'import' → logprob: -7.7602434158325195
    7. ' =' → logprob: -7.8852434158325195
    8. ' class' → logprob: -7.8852434158325195
    9. '[' → logprob: -8.13524341583252
    10. '#' → logprob: -8.51024341583252

Token 1283: ' adapté' (ID: 102650)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11606160551309586
    2. ' class' → logprob: -2.9910616874694824
    3. ' appropriate' → logprob: -4.491061687469482
    4. ' needed' → logprob: -4.991061687469482
    5. 'def' → logprob: -5.116061687469482
    6. 'import' → logprob: -5.116061687469482
    7. '#' → logprob: -5.116061687469482
    8. 'needed' → logprob: -5.366061687469482
    9. ' better' → logprob: -5.741061687469482
    10. 'appropriate' → logprob: -5.741061687469482

Token 1284: '.

' (ID: 364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00013691288768313825
    2. ' class' → logprob: -9.500137329101562
    3. 'def' → logprob: -10.625137329101562
    4. 'import' → logprob: -10.875137329101562
    5. '#' → logprob: -11.250137329101562
    6. '```' → logprob: -13.000137329101562
    7. '
' → logprob: -13.625137329101562
    8. 'from' → logprob: -13.875137329101562
    9. '   ' → logprob: -15.125137329101562
    10. ' 
' → logprob: -15.750137329101562

Token 1285: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.203409844194539e-05
    2. '
' → logprob: -10.250041961669922
    3. 'def' → logprob: -12.625041961669922
    4. '#' → logprob: -13.500041961669922
    5. ' class' → logprob: -13.500041961669922
    6. 'import' → logprob: -15.250041961669922
    7. ' 
' → logprob: -16.375041961669922
    8. '```' → logprob: -16.750041961669922
    9. '  
' → logprob: -17.000041961669922
    10. 'delta' → logprob: -17.625041961669922

Token 1286: ' Fen' (ID: 48230)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.4740813970565796
    2. ' Fen' → logprob: -0.9740813970565796
    3. ' fen' → logprob: -12.724081039428711
    4. 'F' → logprob: -13.849081039428711
    5. 'fen' → logprob: -15.099081039428711
    6. '_F' → logprob: -15.849081039428711
    7. ' BIT' → logprob: -18.84908103942871
    8. 'BIT' → logprob: -18.97408103942871
    9. '[F' → logprob: -18.97408103942871
    10. '__' → logprob: -19.34908103942871

Token 1287: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.20164741575717926
    2. 'w' → logprob: -1.701647400856018
    3. 'wik' → logprob: -8.701647758483887
    4. '```' → logprob: -10.201647758483887
    5. 'wic' → logprob: -11.576647758483887
    6. 'wt' → logprob: -11.951647758483887
    7. '``' → logprob: -13.326647758483887
    8. 'wig' → logprob: -13.576647758483887
    9. 'wy' → logprob: -13.701647758483887
    10. '
' → logprob: -14.076647758483887

Token 1288: ':
' (ID: 734)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0011310477275401354
    2. ':' → logprob: -7.501131057739258
    3. ':
' → logprob: -7.501131057739258
    4. '(Tree' → logprob: -11.876131057739258
    5. '_tree' → logprob: -12.626131057739258
    6. 'tree' → logprob: -12.751131057739258
    7. ' tree' → logprob: -12.751131057739258
    8. '():
' → logprob: -12.751131057739258
    9. '():' → logprob: -13.126131057739258
    10. ' Tree' → logprob: -13.876131057739258

Token 1289: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.064261555671692
    2. ':
' → logprob: -1.064261555671692
    3. '   ' → logprob: -1.189261555671692
    4. '
' → logprob: -5.814261436462402
    5. '```' → logprob: -7.439261436462402
    6. '  ' → logprob: -7.689261436462402
    7. '    
' → logprob: -7.939261436462402
    8. '(object' → logprob: -8.314261436462402
    9. '  
' → logprob: -8.439261436462402
    10. '    ' → logprob: -8.689261436462402

Token 1290: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6156626343727112
    2. ':
' → logprob: -1.2406625747680664
    3. '   ' → logprob: -2.4906625747680664
    4. 'def' (adapté à ' def') → logprob: -2.6156625747680664
    5. 'object' → logprob: -5.740662574768066
    6. '```' → logprob: -5.865662574768066
    7. '
' → logprob: -6.240662574768066
    8. ' def' → logprob: -6.740662574768066
    9. '(object' → logprob: -6.865662574768066
    10. ':def' → logprob: -6.865662574768066

Token 1291: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4034869372844696
    2. 'init' → logprob: -1.153486967086792
    3. ' __' → logprob: -4.153486728668213
    4. '__(' → logprob: -8.528487205505371
    5. ' init' → logprob: -9.028487205505371
    6. '(init' → logprob: -9.028487205505371
    7. '```' → logprob: -9.153487205505371
    8. '_init' → logprob: -9.403487205505371
    9. '___' → logprob: -10.903487205505371
    10. 'object' → logprob: -11.028487205505371

Token 1292: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.531315314830863e-06
    2. 'int' → logprob: -12.750003814697266
    3. ' init' → logprob: -15.000003814697266
    4. 'iter' → logprob: -16.625003814697266
    5. '__' → logprob: -16.875003814697266
    6. '```' → logprob: -17.000003814697266
    7. 'class' → logprob: -17.500003814697266
    8. '`' → logprob: -17.625003814697266
    9. '(init' → logprob: -17.875003814697266
    10. 'getitem' → logprob: -17.875003814697266

Token 1293: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006825247313827276
    2. '   ' → logprob: -6.2568254470825195
    3. '(int' → logprob: -6.2568254470825195
    4. ' (' → logprob: -7.0068254470825195
    5. '(n' → logprob: -7.3818254470825195
    6. 'self' → logprob: -7.7568254470825195
    7. '(N' → logprob: -8.25682544708252
    8. '(' → logprob: -8.25682544708252
    9. ',' → logprob: -8.88182544708252
    10. '(size' → logprob: -9.25682544708252

Token 1294: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.255023956531659e-05
    2. 'N' → logprob: -10.875072479248047
    3. 'n' → logprob: -11.000072479248047
    4. 'int' → logprob: -11.125072479248047
    5. ' self' → logprob: -11.250072479248047
    6. '   ' → logprob: -12.000072479248047
    7. '       ' → logprob: -13.750072479248047
    8. 'lambda' → logprob: -13.750072479248047
    9. '
' → logprob: -14.875072479248047
    10. '           ' → logprob: -15.750072479248047

Token 1295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003108549863100052
    2. 'self' → logprob: -6.628108501434326
    3. ' self' → logprob: -7.503108501434326
    4. '   ' → logprob: -7.503108501434326
    5. '(self' → logprob: -8.753108978271484
    6. ',self' → logprob: -8.878108978271484
    7. ',n' → logprob: -9.503108978271484
    8. ' ,' → logprob: -9.503108978271484
    9. '(N' → logprob: -9.628108978271484
    10. ' (' → logprob: -10.003108978271484

Token 1296: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5050761103630066
    2. 'N' → logprob: -1.0050761699676514
    3. 'size' → logprob: -3.5050761699676514
    4. '   ' → logprob: -8.25507640838623
    5. 'self' → logprob: -8.75507640838623
    6. ' n' → logprob: -10.13007640838623
    7. ' N' → logprob: -11.75507640838623
    8. ' size' → logprob: -11.75507640838623
    9. '       ' → logprob: -13.38007640838623
    10. 'length' → logprob: -13.88007640838623

Token 1297: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11208734661340714
    2. ',' → logprob: -2.7370872497558594
    3. '):' → logprob: -3.2370872497558594
    4. '+' → logprob: -7.362087249755859
    5. '   ' → logprob: -8.23708724975586
    6. '(n' → logprob: -8.48708724975586
    7. '):
' → logprob: -8.73708724975586
    8. ',n' → logprob: -8.86208724975586
    9. 'n' → logprob: -8.98708724975586
    10. ')' → logprob: -8.98708724975586

Token 1298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29239511489868164
    2. '(n' → logprob: -1.5423951148986816
    3. '[n' → logprob: -3.7923951148986816
    4. '   ' → logprob: -4.667395114898682
    5. '[' → logprob: -5.542395114898682
    6. '```' → logprob: -7.292395114898682
    7. 'n' → logprob: -7.417395114898682
    8. '        
' → logprob: -7.417395114898682
    9. '0' → logprob: -7.542395114898682
    10. '    
' → logprob: -8.542394638061523

Token 1299: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3032219409942627
    2. ' [' → logprob: -1.5532219409942627
    3. '[self' → logprob: -3.9282219409942627
    4. '[n' → logprob: -4.053221702575684
    5. '   ' → logprob: -4.428221702575684
    6. 'self' (adapté à ' self') → logprob: -7.428221702575684
    7. ' self' → logprob: -8.178221702575684
    8. '       ' → logprob: -10.428221702575684
    9. '[size' → logprob: -10.553221702575684
    10. '[N' → logprob: -11.053221702575684

Token 1300: '.n' (ID: 1835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5459010004997253
    2. '=' → logprob: -1.2959010601043701
    3. 'n' → logprob: -2.42090106010437
    4. '=n' → logprob: -3.67090106010437
    5. 'size' → logprob: -4.295900821685791
    6. '.n' → logprob: -5.045900821685791
    7. '[n' → logprob: -5.795900821685791
    8. '   ' → logprob: -6.170900821685791
    9. ' n' → logprob: -6.545900821685791
    10. '(n' → logprob: -6.795900821685791

Token 1301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014202527701854706
    2. ' =' → logprob: -4.26420259475708
    3. '+=' → logprob: -10.514202117919922
    4. '   ' → logprob: -12.014202117919922
    5. ' +=' → logprob: -13.264202117919922
    6. '=int' → logprob: -13.639202117919922
    7. '=n' → logprob: -14.014202117919922
    8. '+' → logprob: -14.389202117919922
    9. '    ' → logprob: -14.514202117919922
    10. '=len' → logprob: -15.139202117919922

Token 1302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.505351095460355e-05
    2. ' n' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.00007438659668
    4. '	n' → logprob: -16.87507438659668
    5. '[n' → logprob: -19.62507438659668
    6. '    ' → logprob: -19.87507438659668
    7. '[' → logprob: -20.75007438659668
    8. '
' → logprob: -21.87507438659668
    9. '_n' → logprob: -21.87507438659668
    10. '(n' → logprob: -23.12507438659668

Token 1303: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024189507588744164
    2. '<|end|>' → logprob: -4.399189472198486
    3. '       ' → logprob: -5.274189472198486
    4. '   ' → logprob: -6.024189472198486
    5. '=' → logprob: -6.274189472198486
    6. 'self' → logprob: -8.149189949035645
    7. ' =' → logprob: -8.274189949035645
    8. '        
' → logprob: -8.399189949035645
    9. '<|end|>' → logprob: -8.649189949035645
    10. '[' → logprob: -8.649189949035645

Token 1304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007223221473395824
    2. '   ' → logprob: -7.625722408294678
    3. '	' → logprob: -9.37572193145752
    4. '
' → logprob: -9.62572193145752
    5. '	self' → logprob: -10.12572193145752
    6. 'self' → logprob: -10.50072193145752
    7. '	   ' → logprob: -11.87572193145752
    8. '           ' → logprob: -12.87572193145752
    9. ' self' → logprob: -13.12572193145752
    10. '	       ' → logprob: -13.25072193145752

Token 1305: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2908594608306885
    2. '[self' → logprob: -1.4158594608306885
    3. '[n' → logprob: -5.415859222412109
    4. 'self' (adapté à ' self') → logprob: -5.790859222412109
    5. '[data' → logprob: -6.915859222412109
    6. ' [' → logprob: -8.04085922241211
    7. '   ' → logprob: -9.16585922241211
    8. '[i' → logprob: -9.16585922241211
    9. '0' → logprob: -9.29085922241211
    10. '[idx' → logprob: -10.04085922241211

Token 1306: '.bit' (ID: 61866)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.648210346698761
    2. '_data' → logprob: -2.148210287094116
    3. '   ' → logprob: -2.523210287094116
    4. '_' → logprob: -3.023210287094116
    5. '_array' → logprob: -3.023210287094116
    6. 'data' → logprob: -3.273210287094116
    7. ' =' → logprob: -3.398210287094116
    8. '_tree' → logprob: -3.523210287094116
    9. '_size' → logprob: -4.398210525512695
    10. '_f' → logprob: -4.773210525512695

Token 1307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889353483915329
    2. ' =' → logprob: -2.5788934230804443
    3. '   ' → logprob: -12.703893661499023
    4. '=[' → logprob: -14.703893661499023
    5. '[' → logprob: -15.203893661499023
    6. '    ' → logprob: -17.203893661499023
    7. '	' → logprob: -17.453893661499023
    8. ' ' → logprob: -17.828893661499023
    9. ' =[' → logprob: -17.953893661499023
    10. '       ' → logprob: -19.328893661499023

Token 1308: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003357006062287837
    2. ' [' → logprob: -8.000335693359375
    3. '[n' → logprob: -15.375335693359375
    4. '   ' → logprob: -19.625335693359375
    5. '[self' → logprob: -19.875335693359375
    6. '[N' → logprob: -20.375335693359375
    7. '[int' → logprob: -21.500335693359375
    8. '[a' → logprob: -21.625335693359375
    9. '[size' → logprob: -22.125335693359375
    10. '[len' → logprob: -22.750335693359375

Token 1309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -22.0
    4. '   ' → logprob: -22.125
    5. '۰' → logprob: -22.25
    6. '(' → logprob: -23.25
    7. '00' → logprob: -23.625
    8. '000' → logprob: -24.125
    9. '"' → logprob: -24.25
    10. '
' → logprob: -24.375

Token 1310: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12737016379833221
    2. ']*(' → logprob: -2.1273701190948486
    3. ']*' → logprob: -7.877370357513428
    4. '*(' → logprob: -9.87736988067627
    5. '*' → logprob: -11.87736988067627
    6. ' *' → logprob: -12.87736988067627
    7. ']+' → logprob: -13.87736988067627
    8. '   ' → logprob: -14.62736988067627
    9. ')' → logprob: -14.87736988067627
    10. '	' → logprob: -16.877370834350586

Token 1311: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1002492681145668
    2. 'N' → logprob: -2.3502492904663086
    3. '   ' → logprob: -10.600249290466309
    4. 'self' → logprob: -11.350249290466309
    5. '(n' → logprob: -12.350249290466309
    6. ' n' → logprob: -13.975249290466309
    7. ' N' → logprob: -15.100249290466309
    8. '(N' → logprob: -15.600249290466309
    9. '	n' → logprob: -15.850249290466309
    10. '    ' → logprob: -15.975249290466309

Token 1312: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4855663721391466e-05
    2. ' +' → logprob: -11.125015258789062
    3. '+n' → logprob: -16.125015258789062
    4. '+
' → logprob: -18.250015258789062
    5. '＋' → logprob: -21.000015258789062
    6. '+B' → logprob: -21.125015258789062
    7. '+)' → logprob: -21.250015258789062
    8. '+self' → logprob: -21.500015258789062
    9. '+++' → logprob: -21.750015258789062
    10. '```' → logprob: -21.750015258789062

Token 1313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.387006551027298
    2. '2' → logprob: -1.1370065212249756
    3. '3' → logprob: -9.012006759643555
    4. '5' → logprob: -11.387006759643555
    5. '4' → logprob: -13.512006759643555
    6. '10' → logprob: -15.262006759643555
    7. '
' → logprob: -15.762006759643555
    8. ' ' → logprob: -16.012006759643555
    9. '6' → logprob: -16.387006759643555
    10. '20' → logprob: -16.762006759643555

Token 1314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5597102396423e-05
    2. ')
' → logprob: -10.375035285949707
    3. '+' → logprob: -12.625035285949707
    4. '   ' → logprob: -15.000035285949707
    5. ' )' → logprob: -15.000035285949707
    6. ')
' → logprob: -16.375036239624023
    7. ')

' → logprob: -16.750036239624023
    8. '),' → logprob: -17.250036239624023
    9. '+)' → logprob: -17.375036239624023
    10. '}' → logprob: -17.500036239624023

Token 1315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03857119381427765
    2. 'def' → logprob: -3.2885711193084717
    3. '
' → logprob: -8.28857135772705
    4. ' def' → logprob: -8.66357135772705
    5. '    
' → logprob: -9.66357135772705
    6. '	def' → logprob: -10.66357135772705
    7. '        
' → logprob: -11.16357135772705
    8. '```' → logprob: -12.78857135772705
    9. '       ' → logprob: -14.53857135772705
    10. '
' → logprob: -15.66357135772705

Token 1316: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03402922675013542
    2. '   ' → logprob: -3.534029245376587
    3. ' def' → logprob: -6.159029006958008
    4. '
' → logprob: -6.159029006958008
    5. '	def' → logprob: -10.659029006958008
    6. '    
' → logprob: -11.159029006958008
    7. '
' → logprob: -14.034029006958008
    8. ' ' → logprob: -14.409029006958008
    9. '  ' → logprob: -14.534029006958008
    10. '        
' → logprob: -14.784029006958008

Token 1317: ' add' (ID: 1147)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.05639413744211197
    2. '_update' → logprob: -3.306394100189209
    3. 'add' → logprob: -4.056394100189209
    4. '_add' → logprob: -7.306394100189209
    5. ' update' → logprob: -8.806394577026367
    6. 'upd' → logprob: -9.931394577026367
    7. ' add' → logprob: -13.681394577026367
    8. '__' → logprob: -13.931394577026367
    9. 'sum' → logprob: -14.806394577026367
    10. 'build' → logprob: -15.181394577026367

Token 1318: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01116195134818554
    2. '(' → logprob: -4.511161804199219
    3. ' (' → logprob: -9.386161804199219
    4. '<|end|>' → logprob: -12.011161804199219
    5. '(
' → logprob: -12.386161804199219
    6. '(s' → logprob: -12.511161804199219
    7. '   ' → logprob: -12.636161804199219
    8. '(i' → logprob: -12.636161804199219
    9. 'self' → logprob: -13.386161804199219
    10. 'def' → logprob: -13.511161804199219

Token 1319: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00616234727203846
    2. '(' → logprob: -5.131162166595459
    3. '(i' → logprob: -9.506162643432617
    4. ' (' → logprob: -10.131162643432617
    5. 'self' → logprob: -10.256162643432617
    6. '(idx' → logprob: -11.381162643432617
    7. '(
' → logprob: -11.506162643432617
    8. '(s' → logprob: -11.631162643432617
    9. 'def' → logprob: -11.631162643432617
    10. ')' → logprob: -11.756162643432617

Token 1320: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3107404112815857
    2. 'i' → logprob: -1.4357404708862305
    3. 'index' → logprob: -4.1857404708862305
    4. ' idx' → logprob: -4.4357404708862305
    5. 'x' → logprob: -7.5607404708862305
    6. ' i' → logprob: -7.8107404708862305
    7. 'l' → logprob: -7.9357404708862305
    8. 'pos' → logprob: -8.18574047088623
    9. 'p' → logprob: -8.18574047088623
    10. '   ' → logprob: -9.43574047088623

Token 1321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007850303314626217
    2. ' ,' → logprob: -5.007850170135498
    3. ',i' → logprob: -7.632850170135498
    4. '   ' → logprob: -8.882850646972656
    5. ' +=' → logprob: -9.132850646972656
    6. '       ' → logprob: -9.382850646972656
    7. '+=' → logprob: -9.507850646972656
    8. '    ' → logprob: -9.882850646972656
    9. ',value' → logprob: -10.382850646972656
    10. '```' → logprob: -10.632850646972656

Token 1322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20737800002098083
    2. '1' → logprob: -2.2073779106140137
    3. 'X' → logprob: -2.7073779106140137
    4. ' x' → logprob: -4.582377910614014
    5. ' X' → logprob: -8.707378387451172
    6. '   ' → logprob: -9.332378387451172
    7. 'value' → logprob: -10.082378387451172
    8. ' ' → logprob: -10.832378387451172
    9. 'v' → logprob: -11.082378387451172
    10. 'delta' → logprob: -11.457378387451172

Token 1323: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5776137113571167
    2. '):
' → logprob: -0.8276137113571167
    3. ':' → logprob: -7.202613830566406
    4. '):
' → logprob: -7.452613830566406
    5. '   ' → logprob: -8.952613830566406
    6. ')' → logprob: -9.452613830566406
    7. ',' → logprob: -9.577613830566406
    8. '       ' → logprob: -11.202613830566406
    9. ' ):' → logprob: -11.577613830566406
    10. ' ):
' → logprob: -11.577613830566406

Token 1324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19682849943637848
    2. ' i' → logprob: -2.071828603744507
    3. 'i' → logprob: -4.446828365325928
    4. '    ' → logprob: -4.571828365325928
    5. '1' → logprob: -4.821828365325928
    6. ' 
' → logprob: -4.946828365325928
    7. '```' → logprob: -5.446828365325928
    8. '
' → logprob: -5.571828365325928
    9. '        
' → logprob: -6.571828365325928
    10. '   ' → logprob: -6.696828365325928

Token 1325: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3324134945869446
    2. 'while' (adapté à ' while') → logprob: -1.5824134349822998
    3. ' i' → logprob: -3.5824134349823
    4. '       ' → logprob: -3.7074134349823
    5. ' while' → logprob: -3.7074134349823
    6. '```' → logprob: -8.082413673400879
    7. '   ' → logprob: -9.832413673400879
    8. '	while' → logprob: -10.332413673400879
    9. '	i' → logprob: -10.832413673400879
    10. '	' → logprob: -11.832413673400879

Token 1326: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804194927215576
    2. ' i' → logprob: -3.2880420684814453
    3. '   ' → logprob: -14.663042068481445
    4. '	i' → logprob: -16.788042068481445
    5. '       ' → logprob: -18.913042068481445
    6. '    ' → logprob: -19.663042068481445
    7. ' ' → logprob: -20.663042068481445
    8. '(i' → logprob: -20.663042068481445
    9. '1' → logprob: -20.788042068481445
    10. '  ' → logprob: -21.163042068481445

Token 1327: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3958524167537689
    2. '<' → logprob: -1.5208524465560913
    3. '+=' → logprob: -2.3958523273468018
    4. '<n' → logprob: -4.895852565765381
    5. ' +=' → logprob: -5.520852565765381
    6. ' <=' → logprob: -6.520852565765381
    7. ' <' → logprob: -6.895852565765381
    8. '<len' → logprob: -7.145852565765381
    9. '<i' → logprob: -7.645852565765381
    10. '<N' → logprob: -7.645852565765381

Token 1328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.309382373117842e-05
    2. ' self' → logprob: -10.500033378601074
    3. 'n' → logprob: -12.125033378601074
    4. '   ' → logprob: -17.000032424926758
    5. '	self' → logprob: -17.750032424926758
    6. '(self' → logprob: -19.500032424926758
    7. '=self' → logprob: -20.250032424926758
    8. '[self' → logprob: -20.750032424926758
    9. '
' → logprob: -20.875032424926758
    10. 'N' → logprob: -21.250032424926758

Token 1329: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11502615362405777
    2. 'self' → logprob: -2.2400262355804443
    3. '.n' → logprob: -6.240025997161865
    4. ' self' → logprob: -9.365026473999023
    5. '_n' → logprob: -9.990026473999023
    6. ' n' → logprob: -10.615026473999023
    7. '	n' → logprob: -10.615026473999023
    8. ':n' → logprob: -10.865026473999023
    9. ',n' → logprob: -11.365026473999023
    10. '   ' → logprob: -11.490026473999023

Token 1330: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21864818036556244
    2. ':' → logprob: -1.8436481952667236
    3. '       ' → logprob: -4.0936479568481445
    4. '           ' → logprob: -5.0936479568481445
    5. '   ' → logprob: -5.3436479568481445
    6. ':i' → logprob: -6.2186479568481445
    7. 'n' → logprob: -6.4686479568481445
    8. ' and' → logprob: -6.7186479568481445
    9. 'i' → logprob: -6.8436479568481445
    10. '[i' → logprob: -6.8436479568481445

Token 1331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003164175897836685
    2. 'i' → logprob: -6.003164291381836
    3. ' i' → logprob: -7.878164291381836
    4. '	       ' → logprob: -9.003164291381836
    5. '```' → logprob: -9.253164291381836
    6. '		' → logprob: -10.878164291381836
    7. '       ' → logprob: -11.128164291381836
    8. '[i' → logprob: -12.003164291381836
    9. '		   ' → logprob: -12.128164291381836
    10. '   ' → logprob: -12.128164291381836

Token 1332: ' self' (ID: 1051)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5846450924873352
    2. 'self' (adapté à ' self') → logprob: -0.8346450924873352
    3. '           ' → logprob: -5.4596452713012695
    4. ' i' → logprob: -5.9596452713012695
    5. ' self' → logprob: -6.3346452713012695
    6. '               ' → logprob: -10.33464527130127
    7. '   ' → logprob: -11.33464527130127
    8. 'x' → logprob: -12.58464527130127
    9. '```' → logprob: -12.70964527130127
    10. 'b' → logprob: -12.83464527130127

Token 1333: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.029011499136686325
    2. 'bit' → logprob: -3.7790114879608154
    3. '   ' → logprob: -6.9040117263793945
    4. '.n' → logprob: -7.0290117263793945
    5. '.' → logprob: -7.0290117263793945
    6. 'n' → logprob: -7.1540117263793945
    7. '           ' → logprob: -7.6540117263793945
    8. '.user' → logprob: -7.7790117263793945
    9. '       ' → logprob: -7.9040117263793945
    10. '_bit' → logprob: -8.404011726379395

Token 1334: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.000000953674316
    3. '```' → logprob: -16.125001907348633
    4. '[I' → logprob: -17.125001907348633
    5. '[index' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '[idx' → logprob: -18.375001907348633
    8. '[' → logprob: -18.375001907348633
    9. '
' → logprob: -18.875001907348633
    10. '	i' → logprob: -19.000001907348633

Token 1335: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04862244799733162
    2. ' +=' → logprob: -3.0486223697662354
    3. ']+=' → logprob: -10.923622131347656
    4. '       ' → logprob: -12.173622131347656
    5. '        ' → logprob: -12.423622131347656
    6. '    ' → logprob: -12.798622131347656
    7. '   ' → logprob: -13.048622131347656
    8. '	' → logprob: -13.548622131347656
    9. '```' → logprob: -14.423622131347656
    10. '           ' → logprob: -14.548622131347656

Token 1336: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00012558852904476225
    2. ' +=' → logprob: -9.000125885009766
    3. ']+=' → logprob: -14.125125885009766
    4. '   ' → logprob: -14.625125885009766
    5. '       ' → logprob: -14.875125885009766
    6. '           ' → logprob: -15.625125885009766
    7. '        ' → logprob: -16.000125885009766
    8. '    ' → logprob: -16.000125885009766
    9. '	' → logprob: -16.375125885009766
    10. '```' → logprob: -17.125125885009766

Token 1337: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.25
    3. '	x' → logprob: -22.125
    4. '$x' → logprob: -24.625
    5. '           ' → logprob: -25.875
    6. '"x' → logprob: -26.375
    7. ')x' → logprob: -26.75
    8. '               ' → logprob: -27.5
    9. '{x' → logprob: -27.5
    10. '       ' → logprob: -27.875

Token 1338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0649535059928894
    2. 'i' → logprob: -2.814953565597534
    3. ' i' → logprob: -6.689953327178955
    4. '       ' → logprob: -6.814953327178955
    5. ',i' → logprob: -7.564953327178955
    6. '   ' → logprob: -10.064953804016113
    7. ';i' → logprob: -10.939953804016113
    8. '               ' → logprob: -11.314953804016113
    9. '(i' → logprob: -11.314953804016113
    10. '[i' → logprob: -11.439953804016113

Token 1339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004672560840845108
    2. '       ' → logprob: -5.379672527313232
    3. '   ' → logprob: -10.87967300415039
    4. '	       ' → logprob: -10.87967300415039
    5. ',' → logprob: -12.87967300415039
    6. 'i' → logprob: -13.00467300415039
    7. '    	   ' → logprob: -13.75467300415039
    8. '	   ' → logprob: -14.00467300415039
    9. ' i' → logprob: -14.00467300415039
    10. '<|end|>' → logprob: -14.12967300415039

Token 1340: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.011751789599657059
    2. ' i' → logprob: -4.511751651763916
    3. '           ' → logprob: -7.261751651763916
    4. '               ' → logprob: -13.386752128601074
    5. '	i' → logprob: -16.136751174926758
    6. '   ' → logprob: -16.511751174926758
    7. ',i' → logprob: -16.636751174926758
    8. ' ' → logprob: -18.636751174926758
    9. '=i' → logprob: -18.636751174926758
    10. '{i' → logprob: -18.886751174926758

Token 1341: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.022510847076773643
    2. '<<' → logprob: -4.272511005401611
    3. '*=' → logprob: -5.272511005401611
    4. ' +=' → logprob: -6.522511005401611
    5. '|' → logprob: -7.522511005401611
    6. ' <<=' → logprob: -7.772511005401611
    7. '=' → logprob: -8.147510528564453
    8. '```' → logprob: -8.272510528564453
    9. '   ' → logprob: -9.397510528564453
    10. '&' → logprob: -9.897510528564453

Token 1342: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.751746746478602e-05
    2. ' i' → logprob: -10.00004768371582
    3. '(i' → logprob: -13.37504768371582
    4. '   ' → logprob: -15.25004768371582
    5. '(' → logprob: -16.00004768371582
    6. '	i' → logprob: -16.75004768371582
    7. ' (' → logprob: -17.25004768371582
    8. '  ' → logprob: -18.12504768371582
    9. ' ' → logprob: -18.37504768371582
    10. '{i' → logprob: -20.25004768371582

Token 1343: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.9040898880339228e-05
    2. ' i' → logprob: -10.625028610229492
    3. '(i' → logprob: -13.125028610229492
    4. '   ' → logprob: -13.250028610229492
    5. '	i' → logprob: -14.250028610229492
    6. '           ' → logprob: -16.750028610229492
    7. '*i' → logprob: -16.750028610229492
    8. '&i' → logprob: -17.000028610229492
    9. '(' → logprob: -17.125028610229492
    10. '{i' → logprob: -17.125028610229492

Token 1344: ' (-' (ID: 21382)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.05640270560979843
    2. ' -' → logprob: -3.4314026832580566
    3. '(-' → logprob: -4.056402683258057
    4. '-' → logprob: -5.306402683258057
    5. 'i' → logprob: -8.681403160095215
    6. ' (-' → logprob: -10.556403160095215
    7. '(i' → logprob: -11.056403160095215
    8. '   ' → logprob: -12.431403160095215
    9. '-s' → logprob: -13.181403160095215
    10. '-t' → logprob: -13.431403160095215

Token 1345: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.2994620242971e-06
    2. '-i' → logprob: -12.000008583068848
    3. ' i' → logprob: -13.125008583068848
    4. '-' → logprob: -17.75000762939453
    5. '	i' → logprob: -18.62500762939453
    6. '_i' → logprob: -18.87500762939453
    7. ' -' → logprob: -19.25000762939453
    8. '(i' → logprob: -20.37500762939453
    9. ''i' → logprob: -20.62500762939453
    10. ')i' → logprob: -21.00000762939453

Token 1346: ')
' (ID: 446)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022163337096571922
    2. '-i' → logprob: -4.022163391113281
    3. '-' → logprob: -6.397163391113281
    4. ' i' → logprob: -6.647163391113281
    5. ')' → logprob: -7.272163391113281
    6. '(i' → logprob: -9.397163391113281
    7. ')i' → logprob: -9.522163391113281
    8. '*i' → logprob: -10.272163391113281
    9. ',i' → logprob: -10.397163391113281
    10. '1' → logprob: -10.647163391113281

Token 1347: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.00954593438655138
    2. '<|end|>' → logprob: -5.509545803070068
    3. '``' → logprob: -5.759545803070068
    4. 'def' → logprob: -6.259545803070068
    5. '<|end|>' → logprob: -9.009546279907227
    6. '#' → logprob: -10.009546279907227
    7. '\' → logprob: -10.509546279907227
    8. '
' → logprob: -10.509546279907227
    9. '   ' → logprob: -10.634546279907227
    10. '	return' → logprob: -10.759546279907227

Token 1348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03622248396277428
    2. ' def' → logprob: -3.786222457885742
    3. '   ' → logprob: -4.536222457885742
    4. '```' → logprob: -6.161222457885742
    5. '	def' → logprob: -10.536222457885742
    6. ' ' → logprob: -10.786222457885742
    7. '#' → logprob: -11.286222457885742
    8. '       ' → logprob: -12.286222457885742
    9. '``' → logprob: -14.286222457885742
    10. ' ' → logprob: -14.286222457885742

Token 1349: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005921808537095785
    2. 'query' → logprob: -5.255921840667725
    3. 'prefix' → logprob: -7.630921840667725
    4. ' sum' → logprob: -8.630921363830566
    5. '_sum' → logprob: -11.130921363830566
    6. ' query' → logprob: -11.880921363830566
    7. ' prefix' → logprob: -14.630921363830566
    8. 'psum' → logprob: -14.630921363830566
    9. '_query' → logprob: -14.880921363830566
    10. 'range' → logprob: -15.255921363830566

Token 1350: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024370834580622613
    2. '(i' → logprob: -9.000244140625
    3. '(' → logprob: -9.250244140625
    4. ' (' → logprob: -11.000244140625
    5. 'self' → logprob: -12.250244140625
    6. '(u' → logprob: -14.125244140625
    7. '(int' → logprob: -14.625244140625
    8. '(x' → logprob: -14.875244140625
    9. ',' → logprob: -15.375244140625
    10. '(Self' → logprob: -15.750244140625

Token 1351: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011143776355311275
    2. '(' → logprob: -7.126114368438721
    3. ' (' → logprob: -8.876114845275879
    4. 'self' → logprob: -9.501114845275879
    5. ',' → logprob: -9.751114845275879
    6. '(i' → logprob: -10.751114845275879
    7. ')' → logprob: -12.626114845275879
    8. '(
' → logprob: -12.751114845275879
    9. '   ' → logprob: -12.876114845275879
    10. ')(' → logprob: -13.751114845275879

Token 1352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0051966398023068905
    2. ' i' → logprob: -5.755196571350098
    3. 'self' → logprob: -6.630196571350098
    4. '<|end|>' → logprob: -8.630196571350098
    5. '   ' → logprob: -8.880196571350098
    6. 'n' → logprob: -9.005196571350098
    7. ')' → logprob: -10.005196571350098
    8. 'int' → logprob: -10.255196571350098
    9. 'lambda' → logprob: -10.255196571350098
    10. 'x' → logprob: -10.255196571350098

Token 1353: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9470959901809692
    2. '       ' → logprob: -1.6970959901809692
    3. ':' → logprob: -2.3220958709716797
    4. '):
' → logprob: -2.4470958709716797
    5. '(i' → logprob: -2.8220958709716797
    6. '=' → logprob: -2.9470958709716797
    7. '   ' → logprob: -3.3220958709716797
    8. ':
' → logprob: -3.3220958709716797
    9. '):' → logprob: -4.44709587097168
    10. '(int' → logprob: -4.44709587097168

Token 1354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23105962574481964
    2. '0' → logprob: -1.6060596704483032
    3. ' return' → logprob: -5.606059551239014
    4. 'return' → logprob: -7.106059551239014
    5. ' ' → logprob: -7.731059551239014
    6. '        ' → logprob: -8.106060028076172
    7. '```' → logprob: -9.231060028076172
    8. '   ' → logprob: -9.731060028076172
    9. '    ' → logprob: -9.856060028076172
    10. ' s' → logprob: -10.356060028076172

Token 1355: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013957922346889973
    2. 'return' → logprob: -5.513957977294922
    3. 's' (adapté à ' s') → logprob: -5.638957977294922
    4. 'res' → logprob: -5.763957977294922
    5. 'result' → logprob: -6.263957977294922
    6. '       ' → logprob: -7.138957977294922
    7. ' s' → logprob: -9.138957977294922
    8. ' ' → logprob: -9.263957977294922
    9. 'ret' → logprob: -9.513957977294922
    10. '   ' → logprob: -9.638957977294922

Token 1356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04517189413309097
    2. '+=' → logprob: -3.4201719760894775
    3. ' =' → logprob: -5.170171737670898
    4. ' +=' → logprob: -5.170171737670898
    5. '=int' → logprob: -11.170171737670898
    6. '```' → logprob: -11.545171737670898
    7. '=s' → logprob: -11.670171737670898
    8. '       ' → logprob: -11.795171737670898
    9. '<|end|>' → logprob: -11.795171737670898
    10. '+' → logprob: -11.920171737670898

Token 1357: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.375009536743164
    4. '       ' → logprob: -20.625009536743164
    5. '=' → logprob: -21.375009536743164
    6. '
' → logprob: -21.750009536743164
    7. '۰' → logprob: -21.750009536743164
    8. ' ' → logprob: -22.000009536743164
    9. '```' → logprob: -22.500009536743164
    10. 'self' → logprob: -22.625009536743164

Token 1358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -22.0
    4. '=' → logprob: -23.625
    5. '
' → logprob: -24.25
    6. 'self' → logprob: -24.25
    7. '       ' → logprob: -24.25
    8. 's' → logprob: -24.5
    9. '```' → logprob: -24.625
    10. '۰' → logprob: -24.875

Token 1359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015324958600103855
    2. '
' → logprob: -4.51532506942749
    3. 'while' → logprob: -6.39032506942749
    4. '<|end|>' → logprob: -7.76532506942749
    5. ':
' → logprob: -8.015324592590332
    6. ' while' → logprob: -8.140324592590332
    7. '   ' → logprob: -8.390324592590332
    8. '        
' → logprob: -8.515324592590332
    9. ';' → logprob: -8.640324592590332
    10. ':' → logprob: -8.890324592590332

Token 1360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046895790845155716
    2. ':' → logprob: -3.671895742416382
    3. '=' → logprob: -4.796895980834961
    4. ':
' → logprob: -5.046895980834961
    5. ' +=' → logprob: -7.046895980834961
    6. ' =' → logprob: -7.046895980834961
    7. 'while' → logprob: -7.046895980834961
    8. '           ' → logprob: -7.296895980834961
    9. '+=' → logprob: -7.921895980834961
    10. '
' → logprob: -8.296895980834961

Token 1361: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2700563371181488
    2. ' while' → logprob: -1.5200563669204712
    3. '       ' → logprob: -4.020056247711182
    4. '	while' → logprob: -12.52005672454834
    5. '           ' → logprob: -13.14505672454834
    6. '   ' → logprob: -13.27005672454834
    7. 'for' → logprob: -13.64505672454834
    8. 'While' → logprob: -13.77005672454834
    9. '```' → logprob: -14.39505672454834
    10. ' for' → logprob: -14.89505672454834

Token 1362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019288709154352546
    2. ' i' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.75192928314209
    4. '       ' → logprob: -17.251928329467773
    5. '	i' → logprob: -18.376928329467773
    6. '           ' → logprob: -18.501928329467773
    7. '     ' → logprob: -19.001928329467773
    8. '    ' → logprob: -19.126928329467773
    9. ' ' → logprob: -19.376928329467773
    10. '(i' → logprob: -20.251928329467773

Token 1363: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -3.3213025744771585e-05
    2. ' >' → logprob: -11.125033378601074
    3. '+=' → logprob: -11.375033378601074
    4. '-=' → logprob: -13.125033378601074
    5. '&gt' → logprob: -13.625033378601074
    6. '   ' → logprob: -14.125033378601074
    7. '=' → logprob: -14.500033378601074
    8. '>=' → logprob: -14.625033378601074
    9. '```' → logprob: -14.750033378601074
    10. '       ' → logprob: -15.125033378601074

Token 1364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001246348983841017
    2. 'i' → logprob: -9.37512493133545
    3. ' ' → logprob: -10.37512493133545
    4. '=' → logprob: -11.75012493133545
    5. ' i' → logprob: -16.000123977661133
    6. '       ' → logprob: -16.250123977661133
    7. '           ' → logprob: -16.500123977661133
    8. 's' → logprob: -16.625123977661133
    9. '<|end|>' → logprob: -16.625123977661133
    10. '[' → logprob: -17.125123977661133

Token 1365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '=' → logprob: -17.125
    4. 'i' → logprob: -18.0
    5. '
' → logprob: -20.625
    6. '```' → logprob: -21.875
    7. '       ' → logprob: -22.625
    8. '   ' → logprob: -22.75
    9. '#' → logprob: -22.875
    10. '[' → logprob: -23.0

Token 1366: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24193736910820007
    2. ':' → logprob: -1.6169373989105225
    3. '           ' → logprob: -4.241937160491943
    4. '       ' → logprob: -6.741937160491943
    5. '=' → logprob: -8.491937637329102
    6. 's' → logprob: -8.866937637329102
    7. ':s' → logprob: -8.991937637329102
    8. '):
' → logprob: -9.991937637329102
    9. ':return' → logprob: -10.116937637329102
    10. ',' → logprob: -10.241937637329102

Token 1367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015375965740531683
    2. 's' → logprob: -6.876537799835205
    3. 'i' → logprob: -8.376537322998047
    4. '       ' → logprob: -9.001537322998047
    5. '```' → logprob: -9.251537322998047
    6. '   ' → logprob: -10.501537322998047
    7. ' s' → logprob: -12.126537322998047
    8. '	       ' → logprob: -12.251537322998047
    9. '0' → logprob: -12.501537322998047
    10. '``' → logprob: -13.126537322998047

Token 1368: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00038837024476379156
    2. ' s' → logprob: -7.875388145446777
    3. '           ' → logprob: -11.875388145446777
    4. '       ' → logprob: -14.375388145446777
    5. '               ' → logprob: -14.625388145446777
    6. '{s' → logprob: -16.625389099121094
    7. '   ' → logprob: -16.875389099121094
    8. '
' → logprob: -17.125389099121094
    9. '	s' → logprob: -17.250389099121094
    10. '```' → logprob: -18.500389099121094

Token 1369: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006809276062995195
    2. ' +=' → logprob: -5.006809234619141
    3. '           ' → logprob: -9.88180923461914
    4. '-=' → logprob: -11.13180923461914
    5. ']+=' → logprob: -11.75680923461914
    6. '=' → logprob: -11.75680923461914
    7. '!=' → logprob: -12.63180923461914
    8. '```' → logprob: -12.63180923461914
    9. '       ' → logprob: -13.00680923461914
    10. 's' → logprob: -14.38180923461914

Token 1370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '           ' → logprob: -18.62501335144043
    5. '(self' → logprob: -19.12501335144043
    6. '	self' → logprob: -19.75001335144043
    7. '       ' → logprob: -20.37501335144043
    8. '[self' → logprob: -20.62501335144043
    9. '
' → logprob: -22.00001335144043
    10. '=self' → logprob: -22.62501335144043

Token 1371: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -1.6240566083070007e-06
    2. 'bit' → logprob: -13.375001907348633
    3. '.' → logprob: -19.000001907348633
    4. '.b' → logprob: -19.250001907348633
    5. '.bits' → logprob: -19.250001907348633
    6. '.bot' → logprob: -19.375001907348633
    7. '.bet' → logprob: -19.750001907348633
    8. '.user' → logprob: -19.750001907348633
    9. '```' → logprob: -20.500001907348633
    10. '.byte' → logprob: -20.625001907348633

Token 1372: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5792810916900635
    2. '=' → logprob: -1.7042810916900635
    3. '           ' → logprob: -1.7042810916900635
    4. '&' → logprob: -1.9542810916900635
    5. '
' → logprob: -2.4542810916900635
    6. '               ' → logprob: -2.9542810916900635
    7. '   ' → logprob: -3.7042810916900635
    8. '       ' → logprob: -3.8292810916900635
    9. '[' → logprob: -3.9542810916900635
    10. '```' → logprob: -3.9542810916900635

Token 1373: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2594837546348572
    2. '=' → logprob: -2.759483814239502
    3. '           ' → logprob: -3.384483814239502
    4. '       ' → logprob: -3.509483814239502
    5. '):
' → logprob: -3.759483814239502
    6. '-' → logprob: -4.009483814239502
    7. ' -=' → logprob: -4.384483814239502
    8. ']' → logprob: -4.509483814239502
    9. ':
' → logprob: -5.259483814239502
    10. '<|end|>' → logprob: -5.259483814239502

Token 1374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023605444002896547
    2. 'i' → logprob: -6.7523603439331055
    3. '```' → logprob: -7.5023603439331055
    4. ' i' → logprob: -8.627360343933105
    5. '=i' → logprob: -9.002360343933105
    6. '       ' → logprob: -9.627360343933105
    7. '=' → logprob: -9.752360343933105
    8. '		' → logprob: -10.252360343933105
    9. '(i' → logprob: -10.377360343933105
    10. ',i' → logprob: -10.502360343933105

Token 1375: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2406563013792038
    2. 'i' (adapté à ' i') → logprob: -1.6156562566757202
    3. ' i' → logprob: -4.36565637588501
    4. '       ' → logprob: -6.36565637588501
    5. '   ' → logprob: -7.49065637588501
    6. 'return' → logprob: -9.865655899047852
    7. '	i' → logprob: -10.740655899047852
    8. ',i' → logprob: -11.240655899047852
    9. '0' → logprob: -11.990655899047852
    10. '		' → logprob: -11.990655899047852

Token 1376: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.017938967794179916
    2. '=' → logprob: -4.26793909072876
    3. ' -=' → logprob: -5.64293909072876
    4. '-' → logprob: -8.517938613891602
    5. '+=' → logprob: -11.017938613891602
    6. '       ' → logprob: -12.642938613891602
    7. '=i' → logprob: -13.517938613891602
    8. ' =' → logprob: -13.642938613891602
    9. '>' → logprob: -13.767938613891602
    10. '           ' → logprob: -14.142938613891602

Token 1377: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011735594598576427
    2. ' i' → logprob: -6.751173496246338
    3. '(i' → logprob: -13.626173973083496
    4. '	i' → logprob: -13.626173973083496
    5. '   ' → logprob: -14.126173973083496
    6. ' (' → logprob: -16.87617301940918
    7. '  ' → logprob: -17.00117301940918
    8. '           ' → logprob: -17.00117301940918
    9. '(' → logprob: -17.00117301940918
    10. '{i' → logprob: -17.50117301940918

Token 1378: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011202149325981736
    2. ' i' → logprob: -6.876120090484619
    3. '(i' → logprob: -9.626120567321777
    4. '   ' → logprob: -11.376120567321777
    5. '	i' → logprob: -12.751120567321777
    6. '&i' → logprob: -12.876120567321777
    7. '=i' → logprob: -13.751120567321777
    8. '           ' → logprob: -14.001120567321777
    9. '{i' → logprob: -14.626120567321777
    10. ' (' → logprob: -14.751120567321777

Token 1379: ' (-' (ID: 21382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17767901718616486
    2. ' i' → logprob: -1.9276790618896484
    3. '(-' → logprob: -4.427679061889648
    4. ' (-' → logprob: -5.677679061889648
    5. '-i' → logprob: -7.177679061889648
    6. ' -' → logprob: -7.177679061889648
    7. '(i' → logprob: -7.927679061889648
    8. '-' → logprob: -10.427679061889648
    9. ' (' → logprob: -11.052679061889648
    10. '	i' → logprob: -12.552679061889648

Token 1380: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023238400171976537
    2. ' i' → logprob: -8.375232696533203
    3. '(i' → logprob: -14.375232696533203
    4. '-i' → logprob: -14.625232696533203
    5. '   ' → logprob: -15.500232696533203
    6. '	i' → logprob: -15.750232696533203
    7. '-' → logprob: -16.000232696533203
    8. '_i' → logprob: -16.750232696533203
    9. '  ' → logprob: -17.125232696533203
    10. ' -' → logprob: -17.375232696533203

Token 1381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03781400993466377
    2. '0' → logprob: -3.912813901901245
    3. '1' → logprob: -5.162814140319824
    4. '       ' → logprob: -6.037814140319824
    5. '           ' → logprob: -6.412814140319824
    6. ')
' → logprob: -6.537814140319824
    7. '```' → logprob: -7.037814140319824
    8. 'i' → logprob: -7.162814140319824
    9. '
' → logprob: -7.287814140319824
    10. '               ' → logprob: -7.412814140319824

Token 1382: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3793262243270874
    2. '	return' → logprob: -2.004326343536377
    3. '       ' → logprob: -2.629326343536377
    4. '```' → logprob: -2.754326343536377
    5. ' return' → logprob: -3.879326343536377
    6. 'return' → logprob: -5.129326343536377
    7. '    
' → logprob: -5.379326343536377
    8. '
' → logprob: -6.004326343536377
    9. '``' → logprob: -6.504326343536377
    10. '        
' → logprob: -6.504326343536377

Token 1383: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1705608367919922
    2. '       ' → logprob: -1.2955608367919922
    3. '	return' → logprob: -1.2955608367919922
    4. ' return' → logprob: -2.420560836791992
    5. '```' → logprob: -4.170560836791992
    6. '   ' → logprob: -4.295560836791992
    7. '<|end|>' → logprob: -4.670560836791992
    8. '	' → logprob: -5.170560836791992
    9. ':return' → logprob: -6.295560836791992
    10. '[' → logprob: -6.670560836791992

Token 1384: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033546582562848926
    2. ' s' → logprob: -8.000335693359375
    3. '0' → logprob: -21.250335693359375
    4. '	s' → logprob: -22.250335693359375
    5. '{s' → logprob: -22.500335693359375
    6. '(s' → logprob: -23.125335693359375
    7. '_s' → logprob: -23.875335693359375
    8. '<s' → logprob: -24.125335693359375
    9. ' ' → logprob: -24.875335693359375
    10. '
' → logprob: -25.000335693359375

Token 1385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056249018758535385
    2. 'def' → logprob: -2.931248903274536
    3. ' def' → logprob: -6.681249141693115
    4. '	def' → logprob: -9.931248664855957
    5. '```' → logprob: -10.306248664855957
    6. '
' → logprob: -11.181248664855957
    7. '    
' → logprob: -11.931248664855957
    8. '       ' → logprob: -12.306248664855957
    9. '#' → logprob: -13.431248664855957
    10. ' ' → logprob: -14.306248664855957

Token 1386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1398458033800125
    2. 'def' → logprob: -2.139845848083496
    3. '```' → logprob: -4.514845848083496
    4. ' def' → logprob: -6.889845848083496
    5. '#' → logprob: -8.264845848083496
    6. '
' → logprob: -8.639845848083496
    7. 'get' → logprob: -9.014845848083496
    8. '    
' → logprob: -9.264845848083496
    9. 'for' → logprob: -9.889845848083496
    10. '``' → logprob: -10.639845848083496

Token 1387: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005524373147636652
    2. '   ' → logprob: -5.255524158477783
    3. '#' → logprob: -8.880524635314941
    4. ' def' → logprob: -9.380524635314941
    5. '
' → logprob: -9.880524635314941
    6. '    
' → logprob: -12.505524635314941
    7. '```' → logprob: -12.505524635314941
    8. '	def' → logprob: -12.880524635314941
    9. ' ' → logprob: -13.505524635314941
    10. '       ' → logprob: -13.755524635314941

Token 1388: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24216020107269287
    2. 'query' → logprob: -1.7421602010726929
    3. 'get' → logprob: -3.3671603202819824
    4. 'prefix' → logprob: -5.492160320281982
    5. ' range' → logprob: -7.367160320281982
    6. ' query' → logprob: -7.992160320281982
    7. ' get' → logprob: -9.367159843444824
    8. 'fen' → logprob: -9.367159843444824
    9. 'build' → logprob: -9.617159843444824
    10. 'point' → logprob: -10.867159843444824

Token 1389: '_add' (ID: 8390)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.16051556169986725
    2. '_add' → logprob: -1.910515546798706
    3. 'update' → logprob: -8.535515785217285
    4. 'add' → logprob: -9.535515785217285
    5. '_query' → logprob: -11.035515785217285
    6. '_sum' → logprob: -12.660515785217285
    7. '_modify' → logprob: -12.785515785217285
    8. '_up' → logprob: -16.16051483154297
    9. 'upd' → logprob: -16.28551483154297
    10. '_updates' → logprob: -16.41051483154297

Token 1390: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004421127669047564
    2. '(' → logprob: -7.875442028045654
    3. 'self' → logprob: -10.125442504882812
    4. '   ' → logprob: -11.375442504882812
    5. '```' → logprob: -12.500442504882812
    6. ' (' → logprob: -13.250442504882812
    7. '(l' → logprob: -13.375442504882812
    8. 'def' → logprob: -13.375442504882812
    9. '(i' → logprob: -14.500442504882812
    10. ' ' → logprob: -14.750442504882812

Token 1391: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07986792176961899
    2. '(' → logprob: -2.5798678398132324
    3. ',' → logprob: -8.20486831665039
    4. '(i' → logprob: -8.32986831665039
    5. '   ' → logprob: -8.95486831665039
    6. 'self' → logprob: -9.32986831665039
    7. 'def' → logprob: -9.45486831665039
    8. '(start' → logprob: -9.95486831665039
    9. ')' → logprob: -10.32986831665039
    10. '```' → logprob: -10.70486831665039

Token 1392: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7429149150848389
    2. 'l' → logprob: -0.8679149150848389
    3. ' l' → logprob: -2.867914915084839
    4. ' self' → logprob: -3.367914915084839
    5. '1' → logprob: -5.617915153503418
    6. 'def' → logprob: -5.992915153503418
    7. 'i' → logprob: -6.117915153503418
    8. 'L' → logprob: -6.992915153503418
    9. 'a' → logprob: -6.992915153503418
    10. '   ' → logprob: -6.992915153503418

Token 1393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002632430987432599
    2. ' ,' → logprob: -8.750263214111328
    3. ',l' → logprob: -9.625263214111328
    4. ',int' → logprob: -11.250263214111328
    5. '   ' → logprob: -12.125263214111328
    6. ',self' → logprob: -12.125263214111328
    7. ',i' → logprob: -12.875263214111328
    8. ',n' → logprob: -13.000263214111328
    9. ',b' → logprob: -13.375263214111328
    10. ',k' → logprob: -13.500263214111328

Token 1394: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006797663867473602
    2. ' r' → logprob: -5.006797790527344
    3. 'l' → logprob: -10.006797790527344
    4. '   ' → logprob: -11.131797790527344
    5. ',' → logprob: -11.131797790527344
    6. ',r' → logprob: -12.256797790527344
    7. ' l' → logprob: -13.381797790527344
    8. '	r' → logprob: -13.506797790527344
    9. '  ' → logprob: -17.131797790527344
    10. '    
' → logprob: -17.506797790527344

Token 1395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002401697216555476
    2. ',l' → logprob: -7.127401828765869
    3. ' ,' → logprob: -7.252401828765869
    4. '   ' → logprob: -7.252401828765869
    5. '       ' → logprob: -10.252401351928711
    6. '(l' → logprob: -10.877401351928711
    7. '```' → logprob: -11.002401351928711
    8. '[' → logprob: -11.127401351928711
    9. 'self' → logprob: -11.502401351928711
    10. ',
' → logprob: -11.502401351928711

Token 1396: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5046507716178894
    2. 'x' → logprob: -1.0046508312225342
    3. 'X' → logprob: -4.129650592803955
    4. '1' → logprob: -4.629650592803955
    5. ' X' → logprob: -5.754650592803955
    6. '   ' → logprob: -7.129650592803955
    7. ' ' → logprob: -9.129651069641113
    8. '0' → logprob: -9.379651069641113
    9. '    ' → logprob: -10.504651069641113
    10. '+' → logprob: -10.879651069641113

Token 1397: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.194536954164505
    2. '):' → logprob: -2.0695369243621826
    3. '(self' → logprob: -3.9445369243621826
    4. '       ' → logprob: -4.069537162780762
    5. '   ' → logprob: -4.944537162780762
    6. ':' → logprob: -6.319537162780762
    7. 'self' → logprob: -6.569537162780762
    8. ',' → logprob: -6.569537162780762
    9. ':
' → logprob: -7.444537162780762
    10. '```' → logprob: -7.444537162780762

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37029823660850525
    2. '   ' → logprob: -1.7452982664108276
    3. '    ' → logprob: -2.995298147201538
    4. '<|end|>' → logprob: -3.495298147201538
    5. '        ' → logprob: -5.120298385620117
    6. ' ' → logprob: -5.245298385620117
    7. '[' → logprob: -5.370298385620117
    8. ',' → logprob: -5.370298385620117
    9. ' =' → logprob: -5.495298385620117
    10. ' ' → logprob: -5.495298385620117

Token 1399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09680718928575516
    2. ' self' → logprob: -2.4718072414398193
    3. '   ' → logprob: -5.59680700302124
    4. 'def' → logprob: -6.22180700302124
    5. '       ' → logprob: -6.34680700302124
    6. ' def' → logprob: -8.846807479858398
    7. '
' → logprob: -9.346807479858398
    8. '	self' → logprob: -9.971807479858398
    9. '(self' → logprob: -9.971807479858398
    10. '```' → logprob: -11.346807479858398

Token 1400: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.742448022123426e-05
    2. '.' → logprob: -10.125067710876465
    3. ' .' → logprob: -10.750067710876465
    4. ').' → logprob: -13.250067710876465
    5. '   ' → logprob: -13.500067710876465
    6. '].' → logprob: -14.000067710876465
    7. '.bit' → logprob: -14.625067710876465
    8. '=' → logprob: -15.250067710876465
    9. 'add' → logprob: -15.250067710876465
    10. '.Add' → logprob: -15.375067710876465

Token 1401: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25455546379089355
    2. '(l' → logprob: -1.5045554637908936
    3. ' l' → logprob: -6.004555702209473
    4. '(' → logprob: -9.754555702209473
    5. '	l' → logprob: -10.129555702209473
    6. ' (' → logprob: -11.004555702209473
    7. '       ' → logprob: -11.004555702209473
    8. '   ' → logprob: -11.129555702209473
    9. ',l' → logprob: -12.629555702209473
    10. '(
' → logprob: -13.379555702209473

Token 1402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019208953017368913
    2. ' ,' → logprob: -6.751920700073242
    3. ',x' → logprob: -7.251920700073242
    4. ',r' → logprob: -11.376920700073242
    5. ',l' → logprob: -11.751920700073242
    6. ',
' → logprob: -12.376920700073242
    7. ',n' → logprob: -12.751920700073242
    8. '   ' → logprob: -13.001920700073242
    9. ')' → logprob: -13.126920700073242
    10. ',p' → logprob: -13.626920700073242

Token 1403: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '1' → logprob: -18.500158309936523
    4. ')x' → logprob: -18.500158309936523
    5. '+' → logprob: -19.375158309936523
    6. 'X' → logprob: -19.875158309936523
    7. '	x' → logprob: -20.000158309936523
    8. '(x' → logprob: -20.000158309936523
    9. '+x' → logprob: -20.875158309936523
    10. ')' → logprob: -21.125158309936523

Token 1404: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03456658497452736
    2. ')' → logprob: -3.409566640853882
    3. '       ' → logprob: -7.284566402435303
    4. '   ' → logprob: -8.659566879272461
    5. ');
' → logprob: -10.784566879272461
    6. '<|end|>' → logprob: -11.659566879272461
    7. ',' → logprob: -11.784566879272461
    8. ');' → logprob: -12.534566879272461
    9. '),' → logprob: -12.784566879272461
    10. ')
' → logprob: -13.034566879272461

Token 1405: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6425884366035461
    2. '       ' → logprob: -1.1425883769989014
    3. '   ' → logprob: -2.6425883769989014
    4. '<|end|>' → logprob: -3.1425883769989014
    5. 'self' → logprob: -3.8925883769989014
    6. '``' → logprob: -4.7675886154174805
    7. ')' → logprob: -5.1425886154174805
    8. '[' → logprob: -6.5175886154174805
    9. ' self' → logprob: -7.3925886154174805
    10. '<|end|>' → logprob: -7.6425886154174805

Token 1406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00029828163678757846
    2. ' self' → logprob: -8.250298500061035
    3. '       ' → logprob: -10.250298500061035
    4. 'r' → logprob: -13.750298500061035
    5. '	self' → logprob: -16.00029754638672
    6. '(self' → logprob: -16.25029754638672
    7. '[self' → logprob: -16.50029754638672
    8. 'fen' → logprob: -16.62529754638672
    9. 'def' → logprob: -16.87529754638672
    10. '   ' → logprob: -17.12529754638672

Token 1407: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.841743303695694e-05
    2. '.' → logprob: -9.87509822845459
    3. 'add' → logprob: -10.12509822845459
    4. '   ' → logprob: -12.62509822845459
    5. ' .' → logprob: -13.50009822845459
    6. ').' → logprob: -14.50009822845459
    7. '].' → logprob: -14.50009822845459
    8. '```' → logprob: -15.37509822845459
    9. 'def' → logprob: -15.50009822845459
    10. '
' → logprob: -16.000099182128906

Token 1408: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001623291289433837
    2. ' r' → logprob: -6.626623153686523
    3. '(r' → logprob: -8.126623153686523
    4. '   ' → logprob: -13.626623153686523
    5. '       ' → logprob: -15.376623153686523
    6. '(' → logprob: -16.126623153686523
    7. ' (' → logprob: -16.501623153686523
    8. '	r' → logprob: -16.626623153686523
    9. '_r' → logprob: -17.626623153686523
    10. '[r' → logprob: -17.751623153686523

Token 1409: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019299437990412116
    2. ' +' → logprob: -6.251929759979248
    3. 'r' → logprob: -14.501930236816406
    4. '1' → logprob: -15.001930236816406
    5. 'plus' → logprob: -15.251930236816406
    6. '+r' → logprob: -15.876930236816406
    7. '   ' → logprob: -16.501930236816406
    8. '+
' → logprob: -17.376930236816406
    9. '```' → logprob: -17.876930236816406
    10. ',' → logprob: -18.126930236816406

Token 1410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -16.75
    4. ' -' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. '0' → logprob: -18.375
    7. '   ' → logprob: -19.0
    8. '``' → logprob: -19.875
    9. '
' → logprob: -20.0
    10. ')' → logprob: -20.25

Token 1411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020890454470645636
    2. ',-' → logprob: -9.500208854675293
    3. '   ' → logprob: -10.000208854675293
    4. '       ' → logprob: -10.500208854675293
    5. ' ,' → logprob: -10.500208854675293
    6. '-' → logprob: -11.500208854675293
    7. ')' → logprob: -11.625208854675293
    8. '```' → logprob: -12.000208854675293
    9. ',
' → logprob: -13.125208854675293
    10. '),' → logprob: -13.750208854675293

Token 1412: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6071193218231201
    2. '-x' → logprob: -1.1071193218231201
    3. ' -' → logprob: -2.10711932182312
    4. '-r' → logprob: -5.857119560241699
    5. '-t' → logprob: -10.1071195602417
    6. '-i' → logprob: -11.3571195602417
    7. '-f' → logprob: -11.3571195602417
    8. '-s' → logprob: -11.3571195602417
    9. '-T' → logprob: -11.8571195602417
    10. '   ' → logprob: -11.8571195602417

Token 1413: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.547789674485102e-05
    2. ' x' → logprob: -10.250035285949707
    3. 'X' → logprob: -17.375036239624023
    4. '   ' → logprob: -18.625036239624023
    5. ')x' → logprob: -18.750036239624023
    6. '```' → logprob: -19.000036239624023
    7. '1' → logprob: -19.125036239624023
    8. '	x' → logprob: -19.875036239624023
    9. '{x' → logprob: -21.500036239624023
    10. '       ' → logprob: -21.500036239624023

Token 1414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017600801947992295
    2. '   ' → logprob: -9.000176429748535
    3. '<|end|>' → logprob: -10.500176429748535
    4. ')
' → logprob: -10.750176429748535
    5. ' )' → logprob: -14.250176429748535
    6. '       ' → logprob: -14.250176429748535
    7. '')' → logprob: -14.625176429748535
    8. '```' → logprob: -14.750176429748535
    9. '<|end|>' → logprob: -14.875176429748535
    10. '")' → logprob: -15.375176429748535

Token 1415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16575512290000916
    2. 'for' → logprob: -2.790755033493042
    3. '```' → logprob: -2.790755033493042
    4. ' for' → logprob: -3.665755033493042
    5. '    
' → logprob: -6.290755271911621
    6. 'def' → logprob: -7.540755271911621
    7. '``' → logprob: -7.915755271911621
    8. ')' → logprob: -8.165755271911621
    9. '
' → logprob: -8.415755271911621
    10. '#' → logprob: -8.540755271911621

Token 1416: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2121405303478241
    2. '   ' → logprob: -1.9621405601501465
    3. ' for' → logprob: -3.2121405601501465
    4. 'def' (adapté à ' def') → logprob: -4.8371405601501465
    5. '```' → logprob: -7.3371405601501465
    6. '
' → logprob: -7.7121405601501465
    7. 'get' → logprob: -8.087140083312988
    8. '#' → logprob: -8.462140083312988
    9. '    
' → logprob: -8.587140083312988
    10. 'next' → logprob: -8.712140083312988

Token 1417: ' get' (ID: 717)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4762873649597168
    2. 'prefix' → logprob: -1.4762873649597168
    3. 'get' → logprob: -2.476287364959717
    4. 'query' → logprob: -2.726287364959717
    5. 'range' → logprob: -7.351287364959717
    6. 'fen' → logprob: -8.476287841796875
    7. ' point' → logprob: -10.976287841796875
    8. 'pref' → logprob: -11.351287841796875
    9. 'sum' → logprob: -11.976287841796875
    10. 'at' → logprob: -12.226287841796875

Token 1418: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029835186898708344
    2. '(' → logprob: -4.279835224151611
    3. '_alt' → logprob: -5.029835224151611
    4. '_prefix' → logprob: -6.029835224151611
    5. 'self' → logprob: -6.404835224151611
    6. 'sum' → logprob: -6.904835224151611
    7. '<|end|>' → logprob: -7.279835224151611
    8. 'def' → logprob: -7.529835224151611
    9. '_sum' → logprob: -7.654835224151611
    10. ' ' → logprob: -8.154834747314453

Token 1419: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8157368302345276
    2. '_alt' → logprob: -1.0657367706298828
    3. 'self' → logprob: -2.065736770629883
    4. 'sum' → logprob: -3.940736770629883
    5. ',' → logprob: -4.190736770629883
    6. '(' → logprob: -4.690736770629883
    7. 'def' → logprob: -4.940736770629883
    8. '_prefix' → logprob: -5.315736770629883
    9. '   ' → logprob: -5.440736770629883
    10. 'alt' → logprob: -5.690736770629883

Token 1420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009929266758263111
    2. ' i' → logprob: -4.634929180145264
    3. 'x' → logprob: -9.384929656982422
    4. 'self' → logprob: -9.509929656982422
    5. '   ' → logprob: -12.384929656982422
    6. ' self' → logprob: -12.509929656982422
    7. 'idx' → logprob: -13.009929656982422
    8. '	i' → logprob: -13.634929656982422
    9. ' x' → logprob: -13.884929656982422
    10. 'k' → logprob: -14.009929656982422

Token 1421: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16593065857887268
    2. '(i' → logprob: -2.04093074798584
    3. 'self' → logprob: -4.66593074798584
    4. '   ' → logprob: -5.29093074798584
    5. '       ' → logprob: -5.29093074798584
    6. ',' → logprob: -6.79093074798584
    7. '):
' → logprob: -7.16593074798584
    8. '(' → logprob: -7.29093074798584
    9. 'i' → logprob: -8.54093074798584
    10. ')' → logprob: -8.54093074798584

Token 1422: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5149333477020264
    2. ' self' → logprob: -1.2649333477020264
    3. 'self' → logprob: -2.7649333477020264
    4. 'return' → logprob: -3.1399333477020264
    5. ' i' → logprob: -4.5149335861206055
    6. ' 
' → logprob: -7.0149335861206055
    7. ' ' → logprob: -7.2649335861206055
    8. '(self' → logprob: -7.6399335861206055
    9. '```' → logprob: -8.264933586120605
    10. '0' → logprob: -9.139933586120605

Token 1423: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012126854620873928
    2. 'return' (adapté à ' return') → logprob: -4.637126922607422
    3. ' self' → logprob: -6.137126922607422
    4. ' return' → logprob: -8.637126922607422
    5. '```' → logprob: -11.387126922607422
    6. '       ' → logprob: -11.637126922607422
    7. '   ' → logprob: -12.887126922607422
    8. '=self' → logprob: -13.012126922607422
    9. '``' → logprob: -13.137126922607422
    10. '(self' → logprob: -14.262126922607422

Token 1424: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197687238454819
    2. ' self' → logprob: -2.811976909637451
    3. '(self' → logprob: -12.311976432800293
    4. '[self' → logprob: -14.061976432800293
    5. '```' → logprob: -14.311976432800293
    6. '   ' → logprob: -14.436976432800293
    7. '=self' → logprob: -14.561976432800293
    8. '0' → logprob: -14.561976432800293
    9. 'Fen' → logprob: -14.686976432800293
    10. '	self' → logprob: -14.811976432800293

Token 1425: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.18090146780014038
    2. '.bit' → logprob: -1.8059015274047852
    3. ' .' → logprob: -8.430901527404785
    4. '<|end|>' → logprob: -9.055901527404785
    5. '.fml' → logprob: -9.180901527404785
    6. '.s' → logprob: -9.555901527404785
    7. '.bits' → logprob: -9.555901527404785
    8. '.user' → logprob: -9.930901527404785
    9. '.f' → logprob: -9.930901527404785
    10. '.' → logprob: -10.180901527404785

Token 1426: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0029731837566941977
    2. 'i' → logprob: -6.2529730796813965
    3. ' i' → logprob: -7.1279730796813965
    4. ' (' → logprob: -8.627973556518555
    5. '[i' → logprob: -10.627973556518555
    6. '(' → logprob: -11.252973556518555
    7. ',i' → logprob: -11.877973556518555
    8. ')i' → logprob: -12.002973556518555
    9. '```' → logprob: -12.752973556518555
    10. '<|end|>' → logprob: -13.002973556518555

Token 1427: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015622020873706788
    2. '<|end|>' → logprob: -9.25015640258789
    3. ' )' → logprob: -10.50015640258789
    4. '   ' → logprob: -11.25015640258789
    5. ')
' → logprob: -12.25015640258789
    6. ')#' → logprob: -12.87515640258789
    7. '<|end|>' → logprob: -13.37515640258789
    8. '())' → logprob: -13.37515640258789
    9. ')i' → logprob: -13.50015640258789
    10. '#' → logprob: -13.62515640258789

Token 1428: 'fen' (ID: 12353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030453646555542946
    2. '#' → logprob: -4.155453681945801
    3. 'for' → logprob: -4.905453681945801
    4. 'L' → logprob: -5.405453681945801
    5. 'delta' → logprob: -6.780453681945801
    6. '```' → logprob: -7.530453681945801
    7. '    
' → logprob: -8.1554536819458
    8. '
' → logprob: -8.5304536819458
    9. ' for' → logprob: -9.4054536819458
    10. 'A' → logprob: -9.7804536819458

Token 1429: 'w' (ID: 86)
  Prédit: 'wick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.11909480392932892
    2. 'w' → logprob: -2.2440948486328125
    3. 'wt' → logprob: -6.2440948486328125
    4. 'wik' → logprob: -6.4940948486328125
    5. '=' → logprob: -7.4940948486328125
    6. ' =' → logprob: -7.7440948486328125
    7. '_w' → logprob: -8.119094848632812
    8. '```' → logprob: -8.244094848632812
    9. 'wit' → logprob: -8.494094848632812
    10. '   ' → logprob: -8.744094848632812

Token 1430: ' =' (ID: 314)
  Prédit: 'ick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.0001785112835932523
    2. 'i' → logprob: -10.000178337097168
    3. 'it' → logprob: -10.000178337097168
    4. ' =' → logprob: -11.000178337097168
    5. 'e' → logprob: -11.000178337097168
    6. 'ck' → logprob: -11.375178337097168
    7. 't' → logprob: -12.125178337097168
    8. '\' → logprob: -12.250178337097168
    9. '=' → logprob: -12.375178337097168
    10. '[' → logprob: -12.625178337097168

Token 1431: ' Fen' (ID: 48230)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -6.392202976712724e-06
    2. ' Fen' → logprob: -12.000006675720215
    3. 'F' → logprob: -15.750006675720215
    4. 'Fel' → logprob: -19.7500057220459
    5. 'fen' → logprob: -21.3750057220459
    6. 'Fem' → logprob: -23.3750057220459
    7. 'Fal' → logprob: -23.7500057220459
    8. 'Fib' → logprob: -23.8750057220459
    9. 'Fl' → logprob: -24.0000057220459
    10. 'Fe' → logprob: -24.0000057220459

Token 1432: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.13126641511917114
    2. 'w' → logprob: -2.1312663555145264
    3. 'ick' → logprob: -5.6312665939331055
    4. '
' → logprob: -9.381266593933105
    5. 'wit' → logprob: -9.506266593933105
    6. '_w' → logprob: -9.506266593933105
    7. 'i' → logprob: -9.631266593933105
    8. '(' → logprob: -10.006266593933105
    9. '=' → logprob: -10.006266593933105
    10. 'wt' → logprob: -10.131266593933105

Token 1433: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07891678065061569
    2. 'N' → logprob: -2.5789167881011963
    3. '[N' → logprob: -11.203916549682617
    4. '   ' → logprob: -12.078916549682617
    5. '(n' → logprob: -13.078916549682617
    6. ' N' → logprob: -13.453916549682617
    7. '(' → logprob: -13.453916549682617
    8. '	N' → logprob: -14.328916549682617
    9. '```' → logprob: -14.453916549682617
    10. '(
' → logprob: -14.703916549682617

Token 1434: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01619214192032814
    2. ')' → logprob: -4.1411919593811035
    3. ' +' → logprob: -9.141192436218262
    4. ')
' → logprob: -10.641192436218262
    5. '+
' → logprob: -11.266192436218262
    6. ')+' → logprob: -12.141192436218262
    7. '+)' → logprob: -12.516192436218262
    8. '<|end|>' → logprob: -12.891192436218262
    9. '1' → logprob: -14.266192436218262
    10. '<|end|>' → logprob: -15.141192436218262

Token 1435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929743405431509
    2. '2' → logprob: -5.130929946899414
    3. '+' → logprob: -14.505929946899414
    4. ' ' → logprob: -15.130929946899414
    5. '3' → logprob: -15.505929946899414
    6. '```' → logprob: -16.505929946899414
    7. '
' → logprob: -16.880929946899414
    8. '   ' → logprob: -17.068429946899414
    9. '１' → logprob: -17.630929946899414
    10. '5' → logprob: -18.255929946899414

Token 1436: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -17.75
    5. ')#' → logprob: -18.875
    6. ')

' → logprob: -18.875
    7. '))' → logprob: -19.625
    8. '),' → logprob: -19.75
    9. ')add' → logprob: -20.625
    10. ').' → logprob: -20.875

Token 1437: 'for' (ID: 1938)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012403461150825024
    2. '
' → logprob: -4.51240348815918
    3. '#' → logprob: -7.63740348815918
    4. 'if' → logprob: -7.88740348815918
    5. '    
' → logprob: -8.01240348815918
    6. '```' → logprob: -8.88740348815918
    7. '       ' → logprob: -11.88740348815918
    8. '
' → logprob: -12.13740348815918
    9. 'for' → logprob: -12.51240348815918
    10. ' if' → logprob: -12.63740348815918

Token 1438: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016046686097979546
    2. ' _' → logprob: -4.141046524047852
    3. '__' → logprob: -12.016046524047852
    4. ' in' → logprob: -13.141046524047852
    5. '```' → logprob: -14.391046524047852
    6. '___' → logprob: -14.516046524047852
    7. '_in' → logprob: -14.641046524047852
    8. '_=' → logprob: -15.016046524047852
    9. 'range' → logprob: -15.266046524047852
    10. ' ' → logprob: -15.266046524047852

Token 1439: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5796065926551819
    2. ' in' → logprob: -0.8296065926551819
    3. 'range' → logprob: -6.329606533050537
    4. '_' → logprob: -6.704606533050537
    5. ' _' → logprob: -7.704606533050537
    6. ' range' → logprob: -8.829607009887695
    7. ' ' → logprob: -10.329607009887695
    8. 's' → logprob: -11.829607009887695
    9. ',' → logprob: -12.204607009887695
    10. '
' → logprob: -13.829607009887695

Token 1440: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008947690017521381
    2. ' range' → logprob: -4.758947849273682
    3. '_' → logprob: -8.008947372436523
    4. '_range' → logprob: -14.758947372436523
    5. '(range' → logprob: -16.258947372436523
    6. ' _' → logprob: -17.383947372436523
    7. '	range' → logprob: -18.383947372436523
    8. ' in' → logprob: -18.508947372436523
    9. 'in' → logprob: -19.258947372436523
    10. 'input' → logprob: -20.008947372436523

Token 1441: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0003255719493608922
    2. 'Q' → logprob: -8.625325202941895
    3. '(' → logprob: -9.500325202941895
    4. ' (' → logprob: -10.250325202941895
    5. ' Q' → logprob: -10.250325202941895
    6. '(len' → logprob: -16.00032615661621
    7. '(int' → logprob: -16.50032615661621
    8. '(
' → logprob: -16.62532615661621
    9. '1' → logprob: -17.12532615661621
    10. ')' → logprob: -17.12532615661621

Token 1442: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37126877903938293
    2. '):' → logprob: -1.7462687492370605
    3. ':' → logprob: -2.9962687492370605
    4. '   ' → logprob: -2.9962687492370605
    5. ',' → logprob: -3.8712687492370605
    6. ':
' → logprob: -5.1212687492370605
    7. '():
' → logprob: -5.1212687492370605
    8. '():' → logprob: -6.8712687492370605
    9. ' :' → logprob: -7.4962687492370605
    10. ' ,' → logprob: -8.621269226074219

Token 1443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055765449069440365
    2. 'L' → logprob: -6.1305766105651855
    3. '	L' → logprob: -6.2555766105651855
    4. ' L' → logprob: -6.6305766105651855
    5. '```' → logprob: -9.630576133728027
    6. '   ' → logprob: -10.005576133728027
    7. ',L' → logprob: -11.755576133728027
    8. '    ' → logprob: -11.755576133728027
    9. '    
' → logprob: -12.005576133728027
    10. '       ' → logprob: -12.755576133728027

Token 1444: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.015289274975657463
    2. ' L' → logprob: -4.765289306640625
    3. '   ' → logprob: -5.015289306640625
    4. '	L' → logprob: -12.265289306640625
    5. 'import' → logprob: -12.515289306640625
    6. 'l' → logprob: -12.890289306640625
    7. '```' → logprob: -13.515289306640625
    8. 'input' → logprob: -14.140289306640625
    9. ' ' → logprob: -14.390289306640625
    10. '(L' → logprob: -15.265289306640625

Token 1445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00302702933549881
    2. ' ,' → logprob: -6.003026962280273
    3. '   ' → logprob: -7.878026962280273
    4. '=' → logprob: -10.378026962280273
    5. ')' → logprob: -10.503026962280273
    6. ',
' → logprob: -10.503026962280273
    7. '-' → logprob: -10.753026962280273
    8. '‌,' → logprob: -11.128026962280273
    9. '<|end|>' → logprob: -11.253026962280273
    10. '_,' → logprob: -12.128026962280273

Token 1446: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0009114635176956654
    2. ' R' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.000911712646484
    4. 'r' → logprob: -19.250911712646484
    5. ',' → logprob: -20.500911712646484
    6. ' ' → logprob: -22.250911712646484
    7. '	R' → logprob: -22.500911712646484
    8. '```' → logprob: -22.500911712646484
    9. 'L' → logprob: -22.625911712646484
    10. '<|end|>' → logprob: -22.750911712646484

Token 1447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015618811594322324
    2. '   ' → logprob: -7.126562118530273
    3. ' ,' → logprob: -8.251562118530273
    4. '<|end|>' → logprob: -8.751562118530273
    5. '=' → logprob: -9.376562118530273
    6. ',
' → logprob: -10.376562118530273
    7. 'tokens' → logprob: -10.501562118530273
    8. '<|end|>' → logprob: -10.626562118530273
    9. ' =' → logprob: -10.939062118530273
    10. '_,' → logprob: -11.126562118530273

Token 1448: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.935296834039036e-06
    2. ' X' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.625003814697266
    4. ' ' → logprob: -21.750003814697266
    5. '
' → logprob: -22.625003814697266
    6. 'x' → logprob: -22.875003814697266
    7. ',' → logprob: -23.000003814697266
    8. '  ' → logprob: -23.625003814697266
    9. '	X' → logprob: -23.625003814697266
    10. ')' → logprob: -23.875003814697266

Token 1449: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3370117247104645
    2. '=' → logprob: -1.462011694908142
    3. ' =' → logprob: -3.5870118141174316
    4. ')' → logprob: -5.087011814117432
    5. 'fen' → logprob: -5.337011814117432
    6. ',' → logprob: -5.837011814117432
    7. ':' → logprob: -6.212011814117432
    8. '    
' → logprob: -6.337011814117432
    9. '<|end|>' → logprob: -6.462011814117432
    10. '
' → logprob: -6.587011814117432

Token 1450: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.27548402547836304
    2. ' map' → logprob: -1.7754840850830078
    3. 'L' → logprob: -2.775484085083008
    4. ' L' → logprob: -5.025484085083008
    5. '[' → logprob: -7.275484085083008
    6. 'int' → logprob: -8.025484085083008
    7. 'input' → logprob: -8.150484085083008
    8. '[int' → logprob: -8.400484085083008
    9. 'list' → logprob: -8.525484085083008
    10. '1' → logprob: -8.775484085083008

Token 1451: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08044567704200745
    2. 'int' → logprob: -2.5804457664489746
    3. '=int' → logprob: -6.955445766448975
    4. '[int' → logprob: -7.830445766448975
    5. ',int' → logprob: -9.580445289611816
    6. '<int' → logprob: -10.205445289611816
    7. 'def' → logprob: -10.330445289611816
    8. '(lambda' → logprob: -10.705445289611816
    9. ':int' → logprob: -11.455445289611816
    10. ' int' → logprob: -11.830445289611816

Token 1452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0150842797011137
    2. ',int' → logprob: -4.265084266662598
    3. '(int' → logprob: -7.640084266662598
    4. ' ,' → logprob: -8.015084266662598
    5. 'int' → logprob: -10.265084266662598
    6. ',input' → logprob: -10.890084266662598
    7. '   ' → logprob: -11.265084266662598
    8. '=int' → logprob: -11.765084266662598
    9. '(lambda' → logprob: -12.140084266662598
    10. '(' → logprob: -12.140084266662598

Token 1453: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00047750159865245223
    2. 'int' → logprob: -7.750477313995361
    3. ' input' → logprob: -10.00047779083252
    4. 'lambda' → logprob: -14.25047779083252
    5. 'list' → logprob: -14.62547779083252
    6. 'map' → logprob: -15.12547779083252
    7. '_input' → logprob: -17.875476837158203
    8. 'import' → logprob: -18.375476837158203
    9. '=input' → logprob: -18.375476837158203
    10. 'index' → logprob: -18.625476837158203

Token 1454: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07762924581766129
    2. '()' → logprob: -3.702629327774048
    3. '(),' → logprob: -3.827629327774048
    4. '()[' → logprob: -4.452629089355469
    5. '():
' → logprob: -5.827629089355469
    6. '())' → logprob: -6.327629089355469
    7. '():' → logprob: -6.452629089355469
    8. '());' → logprob: -6.452629089355469
    9. '()
' → logprob: -6.702629089355469
    10. '(),
' → logprob: -6.952629089355469

Token 1455: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. 'strip' → logprob: -13.250006675720215
    3. ' split' → logprob: -13.500006675720215
    4. 'rstrip' → logprob: -13.875006675720215
    5. '(split' → logprob: -14.375006675720215
    6. '_split' → logprob: -14.625006675720215
    7. 'read' → logprob: -15.125006675720215
    8. 'spl' → logprob: -15.375006675720215
    9. 'plit' → logprob: -15.500006675720215
    10. 'parse' → logprob: -15.750006675720215

Token 1456: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026916343718767166
    2. ')
' → logprob: -4.15191650390625
    3. '   ' → logprob: -4.52691650390625
    4. '):
' → logprob: -12.65191650390625
    5. ')
' → logprob: -13.52691650390625
    6. '):' → logprob: -14.02691650390625
    7. ')

' → logprob: -14.15191650390625
    8. ')**' → logprob: -14.77691650390625
    9. '),' → logprob: -15.15191650390625
    10. '```' → logprob: -15.15191650390625

Token 1457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013198119588196278
    2. 'fen' → logprob: -4.388197898864746
    3. '```' → logprob: -7.763197898864746
    4. ' fen' → logprob: -9.263197898864746
    5. '    
' → logprob: -9.888197898864746
    6. '
' → logprob: -10.013197898864746
    7. '#' → logprob: -10.138197898864746
    8. '   ' → logprob: -11.763197898864746
    9. 'if' → logprob: -12.138197898864746
    10. '``' → logprob: -12.138197898864746

Token 1458: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4019649922847748
    2. '#' (adapté à ' #') → logprob: -1.1519650220870972
    3. '   ' → logprob: -4.276965141296387
    4. 'for' → logprob: -6.901965141296387
    5. '```' → logprob: -9.901965141296387
    6. ' if' → logprob: -11.276965141296387
    7. ' #' → logprob: -12.651965141296387
    8. '
' → logprob: -12.776965141296387
    9. '    
' → logprob: -12.901965141296387
    10. 'def' → logprob: -12.901965141296387

Token 1459: ' Ret' (ID: 16724)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.064142145216465
    2. '#' → logprob: -2.9391422271728516
    3. '   ' → logprob: -4.939142227172852
    4. 'for' → logprob: -6.314142227172852
    5. 'left' → logprob: -8.939142227172852
    6. ' if' → logprob: -9.939142227172852
    7. 'L' → logprob: -10.814142227172852
    8. 'def' → logprob: -11.939142227172852
    9. '```' → logprob: -12.064142227172852
    10. 'temp' → logprob: -12.314142227172852

Token 1460: 'irer' (ID: 85189)
  Prédit: 'emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emp' → logprob: -0.2487153559923172
    2. 'urn' → logprob: -1.6237154006958008
    3. '   ' → logprob: -5.248715400695801
    4. 'ra' → logprob: -5.748715400695801
    5. 'rait' → logprob: -5.873715400695801
    6. '#' → logprob: -6.248715400695801
    7. 'fen' → logprob: -6.373715400695801
    8. 'if' → logprob: -6.373715400695801
    9. 'em' → logprob: -6.498715400695801
    10. 'inue' → logprob: -6.998715400695801

Token 1461: ' anciennes' (ID: 176001)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08178024739027023
    2. '   ' → logprob: -3.081780195236206
    3. '#' → logprob: -4.081780433654785
    4. ' if' → logprob: -4.456780433654785
    5. 'temp' → logprob: -5.706780433654785
    6. 'for' → logprob: -7.706780433654785
    7. 'from' → logprob: -8.456780433654785
    8. ' #' → logprob: -10.581780433654785
    9. 'left' → logprob: -10.581780433654785
    10. '(' → logprob: -10.831780433654785

Token 1462: ' contributions' (ID: 29298)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.4567074179649353
    2. ' contributions' → logprob: -1.83170747756958
    3. 'temp' → logprob: -2.58170747756958
    4. 'if' → logprob: -3.83170747756958
    5. '_con' → logprob: -3.95670747756958
    6. '#' → logprob: -3.95670747756958
    7. '   ' → logprob: -4.08170747756958
    8. 'for' → logprob: -4.33170747756958
    9. ' temp' → logprob: -5.08170747756958
    10. ' if' → logprob: -5.33170747756958

Token 1463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10130108147859573
    2. 'if' → logprob: -2.3513011932373047
    3. ' if' → logprob: -7.101301193237305
    4. 'from' → logprob: -8.726301193237305
    5. '	if' → logprob: -10.726301193237305
    6. '
' → logprob: -10.851301193237305
    7. '#' → logprob: -10.976301193237305
    8. '```' → logprob: -10.976301193237305
    9. 'for' → logprob: -11.351301193237305
    10. ':' → logprob: -12.351301193237305

Token 1464: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5794538259506226
    2. '   ' → logprob: -0.8294538259506226
    3. ' if' → logprob: -5.704453945159912
    4. '```' → logprob: -9.079453468322754
    5. 'for' → logprob: -10.454453468322754
    6. '	if' → logprob: -10.704453468322754
    7. '#' → logprob: -12.704453468322754
    8. 'If' → logprob: -13.204453468322754
    9. 'from' → logprob: -13.704453468322754
    10. ',' → logprob: -13.954453468322754

Token 1465: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038371481001377106
    2. '   ' → logprob: -3.2883715629577637
    3. ' if' → logprob: -8.038371086120605
    4. '```' → logprob: -12.663371086120605
    5. '	if' → logprob: -13.288371086120605
    6. 'for' → logprob: -13.538371086120605
    7. '    
' → logprob: -15.788371086120605
    8. '       ' → logprob: -16.038372039794922
    9. ' ' → logprob: -16.288372039794922
    10. '
' → logprob: -16.288372039794922

Token 1466: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002806894714012742
    2. ' L' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.502806663513184
    4. '1' → logprob: -14.877806663513184
    5. '	L' → logprob: -16.0028076171875
    6. '(L' → logprob: -16.1278076171875
    7. '>L' → logprob: -16.3778076171875
    8. ' ' → logprob: -17.7528076171875
    9. '  ' → logprob: -18.1278076171875
    10. '    ' → logprob: -18.5028076171875

Token 1467: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20512205362319946
    2. ' >' → logprob: -1.8301219940185547
    3. '-' → logprob: -3.7051219940185547
    4. ' -' → logprob: -8.455121994018555
    5. '   ' → logprob: -8.955121994018555
    6. '```' → logprob: -10.955121994018555
    7. ')' → logprob: -11.330121994018555
    8. ')>' → logprob: -11.330121994018555
    9. ' ' → logprob: -11.580121994018555
    10. '()>' → logprob: -11.830121994018555

Token 1468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.00003719329834
    4. '=' → logprob: -14.00003719329834
    5. '```' → logprob: -17.375036239624023
    6. '
' → logprob: -18.250036239624023
    7. '0' → logprob: -19.000036239624023
    8. '>' → logprob: -19.000036239624023
    9. '  ' → logprob: -19.250036239624023
    10. '' → logprob: -19.750036239624023

Token 1469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '=' → logprob: -20.0
    3. ' ' → logprob: -20.0
    4. '
' → logprob: -20.625
    5. '0' → logprob: -21.5
    6. '```' → logprob: -22.0
    7. '۱' → logprob: -22.125
    8. '१' → logprob: -22.25
    9. '   ' → logprob: -22.375
    10. '#' → logprob: -22.875

Token 1470: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04087686911225319
    2. ':' → logprob: -3.665876865386963
    3. ':
' → logprob: -4.415876865386963
    4. '   ' → logprob: -6.290876865386963
    5. ',' → logprob: -8.665877342224121
    6. '):
' → logprob: -9.290877342224121
    7. '	' → logprob: -9.415877342224121
    8. '<|end|>' → logprob: -10.665877342224121
    9. 'temp' → logprob: -10.790877342224121
    10. '    ' → logprob: -10.915877342224121

Token 1471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10678240656852722
    2. 'temp' → logprob: -2.3567824363708496
    3. '   ' → logprob: -5.48178243637085
    4. ' temp' → logprob: -6.23178243637085
    5. 'fen' → logprob: -9.481781959533691
    6. '    ' → logprob: -9.606781959533691
    7. '     ' → logprob: -9.731781959533691
    8. '```' → logprob: -9.731781959533691
    9. 'temps' → logprob: -10.731781959533691
    10. ',temp' → logprob: -11.106781959533691

Token 1472: ' a' (ID: 261)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.20305463671684265
    2. 'old' → logprob: -2.078054666519165
    3. 'alt' → logprob: -4.078054428100586
    4. 'val' → logprob: -4.578054428100586
    5. 'a' (adapté à ' a') → logprob: -4.828054428100586
    6. 'left' → logprob: -4.828054428100586
    7. 'l' → logprob: -4.828054428100586
    8. 'prev' → logprob: -6.328054428100586
    9. 'curr' → logprob: -6.453054428100586
    10. 'tmp' → logprob: -6.953054428100586

Token 1473: '_left' (ID: 22189)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2885229289531708
    2. '_L' → logprob: -2.288522958755493
    3. '_i' → logprob: -2.413522958755493
    4. '_val' → logprob: -4.288522720336914
    5. '_l' → logprob: -4.788522720336914
    6. '_left' → logprob: -5.038522720336914
    7. '_prev' → logprob: -5.163522720336914
    8. 'i' → logprob: -5.288522720336914
    9. '_old' → logprob: -5.288522720336914
    10. '_alt' → logprob: -5.288522720336914

Token 1474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19980734586715698
    2. '=' → logprob: -2.1998074054718018
    3. '_alt' → logprob: -3.6998074054718018
    4. '_val' → logprob: -4.199807167053223
    5. '_idx' → logprob: -4.324807167053223
    6. '_current' → logprob: -5.824807167053223
    7. '_prev' → logprob: -5.824807167053223
    8. '_curr' → logprob: -6.199807167053223
    9. '_L' → logprob: -6.449807167053223
    10. '_index' → logprob: -6.574807167053223

Token 1475: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010887817479670048
    2. 'get' → logprob: -7.126088619232178
    3. 'fen' → logprob: -8.751089096069336
    4. ' A' → logprob: -9.001089096069336
    5. '   ' → logprob: -14.251089096069336
    6. '	A' → logprob: -14.751089096069336
    7. ' get' → logprob: -14.876089096069336
    8. 'a' → logprob: -15.251089096069336
    9. 'Fen' → logprob: -15.251089096069336
    10. ' fen' → logprob: -16.001089096069336

Token 1476: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -3.130576806142926e-05
    2. 'L' → logprob: -10.625031471252441
    3. '[' → logprob: -12.500031471252441
    4. '[
' → logprob: -13.500031471252441
    5. '(L' → logprob: -15.000031471252441
    6. '[l' → logprob: -15.125031471252441
    7. '[F' → logprob: -15.500031471252441
    8. '	L' → logprob: -15.625031471252441
    9. ' [' → logprob: -15.875031471252441
    10. 'fen' → logprob: -15.875031471252441

Token 1477: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00045426786527968943
    2. ' -' → logprob: -8.12545394897461
    3. '[' → logprob: -9.62545394897461
    4. '2' → logprob: -10.12545394897461
    5. 'L' → logprob: -10.87545394897461
    6. '1' → logprob: -11.00045394897461
    7. '```' → logprob: -11.75045394897461
    8. ']' → logprob: -13.12545394897461
    9. '   ' → logprob: -13.37545394897461
    10. ']-' → logprob: -14.25045394897461

Token 1478: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. '   ' → logprob: -12.75001049041748
    3. '1' → logprob: -13.00001049041748
    4. ' ' → logprob: -13.25001049041748
    5. '```' → logprob: -13.50001049041748
    6. '-' → logprob: -14.00001049041748
    7. '3' → logprob: -14.62501049041748
    8. '
' → logprob: -16.375009536743164
    9. '``' → logprob: -16.500009536743164
    10. '  ' → logprob: -17.375009536743164

Token 1479: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002445096615701914
    2. ']+' → logprob: -6.752445220947266
    3. ')' → logprob: -6.877445220947266
    4. '])' → logprob: -8.877445220947266
    5. ']
' → logprob: -9.377445220947266
    6. '],' → logprob: -11.877445220947266
    7. ' ]' → logprob: -12.752445220947266
    8. ')+' → logprob: -13.377445220947266
    9. ')]' → logprob: -13.377445220947266
    10. '   ' → logprob: -14.002445220947266

Token 1480: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804665803909302
    2. ' +' → logprob: -3.2880465984344482
    3. 'fen' → logprob: -13.163046836853027
    4. '+
' → logprob: -13.913046836853027
    5. '
' → logprob: -14.288046836853027
    6. '+=' → logprob: -14.413046836853027
    7. '   ' → logprob: -14.788046836853027
    8. 'plus' → logprob: -16.03804588317871
    9. '```' → logprob: -16.03804588317871
    10. '    ' → logprob: -16.66304588317871

Token 1481: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -1.0280383548888494e-06
    2. ' fen' → logprob: -13.875000953674316
    3. '
' → logprob: -19.250001907348633
    4. 'fel' → logprob: -19.750001907348633
    5. 'Fen' → logprob: -20.625001907348633
    6. 'phen' → logprob: -21.750001907348633
    7. 'f' → logprob: -21.875001907348633
    8. 'fe' → logprob: -22.000001907348633
    9. '```' → logprob: -22.000001907348633
    10. 'fon' → logprob: -22.500001907348633

Token 1482: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.534558552724775e-05
    2. '.get' → logprob: -10.625025749206543
    3. 'get' → logprob: -15.125025749206543
    4. '.add' → logprob: -16.000024795532227
    5. 'f' → logprob: -16.750024795532227
    6. '.w' → logprob: -16.875024795532227
    7. '.query' → logprob: -17.000024795532227
    8. 'wx' → logprob: -17.000024795532227
    9. '.update' → logprob: -17.250024795532227
    10. 'wt' → logprob: -17.500024795532227

Token 1483: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010723850573413074
    2. '.sum' → logprob: -9.375106811523438
    3. '.range' → logprob: -10.875106811523438
    4. 'get' → logprob: -12.875106811523438
    5. '.query' → logprob: -15.000106811523438
    6. 'sum' → logprob: -15.875106811523438
    7. 'range' → logprob: -16.125106811523438
    8. '.' → logprob: -16.500106811523438
    9. ').' → logprob: -16.750106811523438
    10. ' .' → logprob: -16.875106811523438

Token 1484: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0001239196863025427
    2. 'L' → logprob: -9.000123977661133
    3. '(' → logprob: -15.500123977661133
    4. '((' → logprob: -16.375123977661133
    5. '[L' → logprob: -16.500123977661133
    6. '	L' → logprob: -16.625123977661133
    7. ' (' → logprob: -17.000123977661133
    8. ' L' → logprob: -17.750123977661133
    9. ')L' → logprob: -18.625123977661133
    10. 'def' → logprob: -18.750123977661133

Token 1485: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.2524021157296374e-05
    2. ' -' → logprob: -9.875052452087402
    3. 'L' → logprob: -14.375052452087402
    4. ')' → logprob: -15.625052452087402
    5. '2' → logprob: -16.62505340576172
    6. '1' → logprob: -17.00005340576172
    7. '```' → logprob: -17.25005340576172
    8. '−' → logprob: -18.50005340576172
    9. '–' → logprob: -18.62505340576172
    10. '[' → logprob: -18.75005340576172

Token 1486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001033999491482973
    2. '2' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.626033782958984
    4. '-' → logprob: -15.001033782958984
    5. '```' → logprob: -15.126033782958984
    6. ' ' → logprob: -16.376033782958984
    7. 'L' → logprob: -17.001033782958984
    8. '
' → logprob: -17.626033782958984
    9. '``' → logprob: -18.063533782958984
    10. '１' → logprob: -18.126033782958984

Token 1487: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06317390501499176
    2. ')
' → logprob: -2.81317400932312
    3. '   ' → logprob: -7.563173770904541
    4. '-' → logprob: -7.563173770904541
    5. ' )' → logprob: -9.6881742477417
    6. ' -' → logprob: -11.0631742477417
    7. '')' → logprob: -11.1881742477417
    8. ' )
' → logprob: -11.3131742477417
    9. '),' → logprob: -11.3131742477417
    10. ')

' → logprob: -11.5631742477417

Token 1488: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1802106350660324
    2. '<|end|>' → logprob: -2.305210590362549
    3. 'a' → logprob: -3.180210590362549
    4. ')' → logprob: -4.555210590362549
    5. '
' → logprob: -5.930210590362549
    6. ' 
' → logprob: -6.305210590362549
    7. '    
' → logprob: -6.430210590362549
    8. ' ' → logprob: -7.180210590362549
    9. ',' → logprob: -7.180210590362549
    10. ')
' → logprob: -7.305210590362549

Token 1489: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0005289645632728934
    2. ' a' → logprob: -7.875528812408447
    3. '   ' → logprob: -9.750529289245605
    4. 'b' → logprob: -10.000529289245605
    5. 'print' → logprob: -11.000529289245605
    6. 'temp' → logprob: -11.500529289245605
    7. '       ' → logprob: -11.875529289245605
    8. '	a' → logprob: -12.875529289245605
    9. '
' → logprob: -13.875529289245605
    10. 'old' → logprob: -14.438029289245605

Token 1490: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.10786133259534836
    2. '_right' → logprob: -2.357861280441284
    3. 'left' → logprob: -5.607861518859863
    4. 'L' → logprob: -5.982861518859863
    5. 'Left' → logprob: -7.607861518859863
    6. 'right' → logprob: -8.107861518859863
    7. 'Right' → logprob: -8.107861518859863
    8. '_next' → logprob: -9.482861518859863
    9. '_prev' → logprob: -10.482861518859863
    10. '[L' → logprob: -10.482861518859863

Token 1491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029756855219602585
    2. ' =' → logprob: -3.529756784439087
    3. 'a' → logprob: -13.279756546020508
    4. '=L' → logprob: -13.529756546020508
    5. '=
' → logprob: -14.279756546020508
    6. ')' → logprob: -14.529756546020508
    7. '   ' → logprob: -14.529756546020508
    8. '=A' → logprob: -14.779756546020508
    9. '[' → logprob: -14.904756546020508
    10. ' ' → logprob: -15.404756546020508

Token 1492: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004622611217200756
    2. ' A' → logprob: -5.379622459411621
    3. '	A' → logprob: -14.004622459411621
    4. '   ' → logprob: -14.129622459411621
    5. '=A' → logprob: -15.754622459411621
    6. 'Fen' → logprob: -16.254623413085938
    7. ' ' → logprob: -16.379623413085938
    8. '       ' → logprob: -16.379623413085938
    9. 'fen' → logprob: -16.629623413085938
    10. 'a' → logprob: -16.629623413085938

Token 1493: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0009864849271252751
    2. '[R' → logprob: -7.000986576080322
    3. 'L' → logprob: -9.500986099243164
    4. '[' → logprob: -16.250986099243164
    5. '(L' → logprob: -17.125986099243164
    6. '[
' → logprob: -17.125986099243164
    7. '   ' → logprob: -17.750986099243164
    8. 'R' → logprob: -17.750986099243164
    9. '	L' → logprob: -18.375986099243164
    10. '[l' → logprob: -18.500986099243164

Token 1494: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.967624019831419e-05
    2. ' -' → logprob: -10.000060081481934
    3. '[' → logprob: -11.250060081481934
    4. '   ' → logprob: -14.125060081481934
    5. '[-' → logprob: -16.375059127807617
    6. '–' → logprob: -16.500059127807617
    7. ' ' → logprob: -16.750059127807617
    8. '```' → logprob: -17.375059127807617
    9. '	' → logprob: -17.500059127807617
    10. '−' → logprob: -17.625059127807617

Token 1495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011057134717702866
    2. '2' → logprob: -4.511056900024414
    3. '   ' → logprob: -12.636056900024414
    4. '3' → logprob: -12.886056900024414
    5. '```' → logprob: -13.511056900024414
    6. ' ' → logprob: -13.636056900024414
    7. '-' → logprob: -14.636056900024414
    8. '
' → logprob: -16.261056900024414
    9. '[' → logprob: -16.636056900024414
    10. '	' → logprob: -16.698556900024414

Token 1496: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1282765418291092
    2. '+' → logprob: -2.1282765865325928
    3. ')' → logprob: -6.753276348114014
    4. ')+' → logprob: -9.503276824951172
    5. ']' → logprob: -9.753276824951172
    6. ']+' → logprob: -10.753276824951172
    7. '<|end|>' → logprob: -11.378276824951172
    8. '[' → logprob: -12.878276824951172
    9. '+)' → logprob: -13.128276824951172
    10. '    ' → logprob: -13.253276824951172

Token 1497: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10025391727685928
    2. '+' → logprob: -2.3502538204193115
    3. '<|end|>' → logprob: -10.72525405883789
    4. ')' → logprob: -11.35025405883789
    5. ' ' → logprob: -13.10025405883789
    6. '   ' → logprob: -13.22525405883789
    7. '<|end|>' → logprob: -13.35025405883789
    8. ' plus' → logprob: -13.60025405883789
    9. '...' → logprob: -13.85025405883789
    10. ' +
' → logprob: -13.97525405883789

Token 1498: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -5.836499985889532e-05
    2. ' fen' → logprob: -9.7500581741333
    3. 'Fen' → logprob: -17.250059127807617
    4. 'fe' → logprob: -18.500059127807617
    5. 'phen' → logprob: -18.625059127807617
    6. 'fel' → logprob: -18.750059127807617
    7. '```' → logprob: -19.000059127807617
    8. 'fon' → logprob: -19.125059127807617
    9. '0' → logprob: -19.375059127807617
    10. 'fal' → logprob: -19.625059127807617

Token 1499: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.4656579120783135e-05
    2. '(L' → logprob: -10.250044822692871
    3. 'k' → logprob: -13.500044822692871
    4. '(' → logprob: -13.750044822692871
    5. '(w' → logprob: -14.000044822692871
    6. 'f' → logprob: -14.000044822692871
    7. '1' → logprob: -14.375044822692871
    8. 'wik' → logprob: -14.625044822692871
    9. 'wick' → logprob: -14.750044822692871
    10. '_w' → logprob: -14.750044822692871

Token 1500: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.813969957875088e-05
    2. 'get' → logprob: -9.625067710876465
    3. '```' → logprob: -14.625067710876465
    4. '.' → logprob: -14.875067710876465
    5. '
' → logprob: -15.000067710876465
    6. '(L' → logprob: -15.500067710876465
    7. '.sum' → logprob: -16.50006866455078
    8. ' .' → logprob: -16.50006866455078
    9. '1' → logprob: -16.62506866455078
    10. ').' → logprob: -17.00006866455078

Token 1501: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.615255839889869e-05
    2. 'L' → logprob: -9.250096321105957
    3. '((' → logprob: -18.87509536743164
    4. '(' → logprob: -19.25009536743164
    5. '	L' → logprob: -19.25009536743164
    6. '(R' → logprob: -19.37509536743164
    7. '[L' → logprob: -19.87509536743164
    8. '(l' → logprob: -20.25009536743164
    9. ' (' → logprob: -20.50009536743164
    10. ' L' → logprob: -20.62509536743164

Token 1502: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39379021525382996
    2. ')' → logprob: -1.1437902450561523
    3. ')L' → logprob: -6.393790245056152
    4. '   ' → logprob: -6.518790245056152
    5. 'L' → logprob: -6.643790245056152
    6. '2' → logprob: -7.143790245056152
    7. '(L' → logprob: -7.643790245056152
    8. '1' → logprob: -8.643790245056152
    9. '0' → logprob: -8.768790245056152
    10. '```' → logprob: -9.018790245056152

Token 1503: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003458945080637932
    2. '       ' → logprob: -5.8784589767456055
    3. '
' → logprob: -8.128458976745605
    4. ')' → logprob: -8.628458976745605
    5. '<|end|>' → logprob: -9.628458976745605
    6. '```' → logprob: -9.878458976745605
    7. 'temp' → logprob: -10.753458976745605
    8. ')
' → logprob: -10.753458976745605
    9. '    
' → logprob: -12.128458976745605
    10. '``' → logprob: -12.628458976745605

Token 1504: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.22607463598251343
    2. '   ' → logprob: -1.8510746955871582
    3. '       ' → logprob: -3.101074695587158
    4. ' temp' → logprob: -8.60107421875
    5. 'temps' → logprob: -11.47607421875
    6. '	temp' → logprob: -11.72607421875
    7. '
' → logprob: -11.72607421875
    8. 'if' → logprob: -11.72607421875
    9. 'temperature' → logprob: -11.97607421875
    10. 'for' → logprob: -12.10107421875

Token 1505: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -13.875003814697266
    3. '_s' → logprob: -14.250003814697266
    4. '_con' → logprob: -14.625003814697266
    5. 'sum' → logprob: -14.625003814697266
    6. '_sub' → logprob: -14.750003814697266
    7. '\' → logprob: -15.375003814697266
    8. '```' → logprob: -15.750003814697266
    9. '   ' → logprob: -16.125003814697266
    10. ' -=' → logprob: -16.250003814697266

Token 1506: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.049070198088884354
    2. ' -=' → logprob: -3.049070119857788
    3. '-' → logprob: -7.924070358276367
    4. '   ' → logprob: -9.424070358276367
    5. '=' → logprob: -10.549070358276367
    6. '+=' → logprob: -12.174070358276367
    7. '    ' → logprob: -12.299070358276367
    8. '       ' → logprob: -13.924070358276367
    9. '  ' → logprob: -14.049070358276367
    10. '```' → logprob: -14.549070358276367

Token 1507: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00029637437546625733
    2. ' edge' → logprob: -8.125296592712402
    3. '(edge' → logprob: -15.500296592712402
    4. '```' → logprob: -17.500295639038086
    5. '   ' → logprob: -18.500295639038086
    6. 'edges' → logprob: -18.875295639038086
    7. '`' → logprob: -19.000295639038086
    8. '
' → logprob: -19.500295639038086
    9. '-edge' → logprob: -19.500295639038086
    10. '``' → logprob: -19.500295639038086

Token 1508: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.2664456789934775e-06
    2. '\' → logprob: -14.875000953674316
    3. '_' → logprob: -15.250000953674316
    4. 'con' → logprob: -15.625000953674316
    5. ' _' → logprob: -15.750000953674316
    6. '_cont' → logprob: -16.250001907348633
    7. ')_' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. ''_' → logprob: -17.750001907348633
    10. '_com' → logprob: -18.125001907348633

Token 1509: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.00011939727846765891
    2. 't' → logprob: -9.62511920928955
    3. 'tr' → logprob: -10.87511920928955
    4. 'con' → logprob: -11.12511920928955
    5. '_con' → logprob: -11.37511920928955
    6. '_' → logprob: -12.87511920928955
    7. 'tri' → logprob: -13.87511920928955
    8. 'tro' → logprob: -13.87511920928955
    9. 'trab' → logprob: -14.62511920928955
    10. 'tribut' → logprob: -14.75011920928955

Token 1510: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0019419649615883827
    2. 'a' → logprob: -6.251942157745361
    3. '(' → logprob: -11.501941680908203
    4. '(
' → logprob: -13.001941680908203
    5. '(A' → logprob: -14.501941680908203
    6. ' a' → logprob: -15.501941680908203
    7. 'A' → logprob: -16.126941680908203
    8. ' (' → logprob: -16.376941680908203
    9. '   ' → logprob: -17.751941680908203
    10. '	a' → logprob: -18.251941680908203

Token 1511: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.004171833395957947
    2. 'left' → logprob: -6.129171848297119
    3. '_right' → logprob: -6.254171848297119
    4. 'a' → logprob: -10.879171371459961
    5. '[L' → logprob: -11.129171371459961
    6. '[left' → logprob: -11.254171371459961
    7. 'right' → logprob: -12.254171371459961
    8. 'Left' → logprob: -13.004171371459961
    9. '[' → logprob: -13.004171371459961
    10. '[a' → logprob: -13.379171371459961

Token 1512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001462619286030531
    2. ',a' → logprob: -6.751462459564209
    3. ' ,' → logprob: -8.626462936401367
    4. 'a' → logprob: -9.126462936401367
    5. ',
' → logprob: -13.001462936401367
    6. '   ' → logprob: -14.626462936401367
    7. '```' → logprob: -15.251462936401367
    8. '‌,' → logprob: -15.751462936401367
    9. ' a' → logprob: -16.001462936401367
    10. '_,' → logprob: -16.001462936401367

Token 1513: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.320199877838604e-07
    2. ' a' → logprob: -15.0
    3. '	a' → logprob: -21.5
    4. '   ' → logprob: -21.75
    5. '```' → logprob: -22.625
    6. 'A' → logprob: -23.625
    7. '
' → logprob: -23.875
    8. '       ' → logprob: -23.875
    9. '           ' → logprob: -23.875
    10. ')a' → logprob: -24.375

Token 1514: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.061972279101610184
    2. 'right' → logprob: -2.8119723796844482
    3. 'a' → logprob: -13.436972618103027
    4. 'Right' → logprob: -13.686972618103027
    5. 'r' → logprob: -14.311972618103027
    6. 'rig' → logprob: -14.561972618103027
    7. '
' → logprob: -14.811972618103027
    8. 'rights' → logprob: -14.811972618103027
    9. '_left' → logprob: -16.43697166442871
    10. ' right' → logprob: -16.81197166442871

Token 1515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003354401094838977
    2. ')
' → logprob: -6.128354549407959
    3. '   ' → logprob: -6.753354549407959
    4. ' )' → logprob: -14.6283540725708
    5. ')
' → logprob: -15.3783540725708
    6. ')#' → logprob: -15.6283540725708
    7. ')

' → logprob: -16.128355026245117
    8. ')\
' → logprob: -16.503355026245117
    9. ')**' → logprob: -16.628355026245117
    10. '
' → logprob: -16.878355026245117

Token 1516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01429008785635233
    2. '
' → logprob: -4.264289855957031
    3. 'if' → logprob: -9.639289855957031
    4. '```' → logprob: -9.889289855957031
    5. '    
' → logprob: -11.639289855957031
    6. ' if' → logprob: -14.264289855957031
    7. '``' → logprob: -15.389289855957031
    8. '#' → logprob: -15.514289855957031
    9. '
' → logprob: -15.639289855957031
    10. ')' → logprob: -15.764289855957031

Token 1517: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38702645897865295
    2. 'if' (adapté à ' if') → logprob: -1.1370264291763306
    3. ' if' → logprob: -9.6370267868042
    4. '#' → logprob: -9.7620267868042
    5. '```' → logprob: -10.8870267868042
    6. '
' → logprob: -11.2620267868042
    7. '    
' → logprob: -15.0120267868042
    8. '	if' → logprob: -15.2620267868042
    9. 'If' → logprob: -15.3870267868042
    10. '       ' → logprob: -16.137025833129883

Token 1518: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.04859180003404617
    2. ' R' → logprob: -3.0485918521881104
    3. '   ' → logprob: -12.548591613769531
    4. '(R' → logprob: -15.798591613769531
    5. ' ' → logprob: -15.986091613769531
    6. 'r' → logprob: -16.04859161376953
    7. '	R' → logprob: -16.29859161376953
    8. '#' → logprob: -17.11109161376953
    9. ' ' → logprob: -17.23609161376953
    10. '  ' → logprob: -17.79859161376953

Token 1519: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10043009370565414
    2. '<' → logprob: -2.3504300117492676
    3. '   ' → logprob: -8.850430488586426
    4. '<R' → logprob: -11.225430488586426
    5. ' ' → logprob: -11.350430488586426
    6. ')' → logprob: -11.350430488586426
    7. '<N' → logprob: -11.725430488586426
    8. '<int' → logprob: -12.350430488586426
    9. '<size' → logprob: -12.475430488586426
    10. '+' → logprob: -12.850430488586426

Token 1520: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.107425062713446e-06
    2. ' N' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.87500762939453
    4. '	N' → logprob: -19.12500762939453
    5. ' ' → logprob: -21.12500762939453
    6. '
' → logprob: -22.00000762939453
    7. '```' → logprob: -22.25000762939453
    8. '    ' → logprob: -22.50000762939453
    9. '#' → logprob: -22.87500762939453
    10. '  ' → logprob: -22.87500762939453

Token 1521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8563131093978882
    2. '       ' → logprob: -0.8563131093978882
    3. ':
' → logprob: -2.3563132286071777
    4. '   ' → logprob: -2.9813132286071777
    5. '```' → logprob: -5.856313228607178
    6. ',' → logprob: -6.731313228607178
    7. '{
' → logprob: -8.85631275177002
    8. '    ' → logprob: -9.23131275177002
    9. '           ' → logprob: -9.48131275177002
    10. '     ' → logprob: -9.48131275177002

Token 1522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06387210637331009
    2. 'a' → logprob: -3.1888720989227295
    3. '   ' → logprob: -4.063872337341309
    4. ' a' → logprob: -5.688872337341309
    5. '```' → logprob: -10.313872337341309
    6. ' ' → logprob: -11.063872337341309
    7. '           ' → logprob: -11.438872337341309
    8. '	a' → logprob: -11.813872337341309
    9. '#' → logprob: -12.063872337341309
    10. '     ' → logprob: -12.688872337341309

Token 1523: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.6240566083070007e-06
    2. ' a' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '       ' → logprob: -15.250001907348633
    5. '	a' → logprob: -18.250001907348633
    6. '           ' → logprob: -19.250001907348633
    7. '```' → logprob: -19.750001907348633
    8. 'b' → logprob: -20.875001907348633
    9. '_a' → logprob: -20.875001907348633
    10. 'A' → logprob: -21.625001907348633

Token 1524: '_left' (ID: 22189)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.02313390001654625
    2. 'R' → logprob: -3.8981339931488037
    3. '_right' → logprob: -7.273133754730225
    4. 'Right' → logprob: -7.648133754730225
    5. ' R' → logprob: -7.773133754730225
    6. '_R' → logprob: -8.898134231567383
    7. ' =' → logprob: -8.898134231567383
    8. '[' → logprob: -8.898134231567383
    9. 'A' → logprob: -9.023134231567383
    10. '   ' → logprob: -9.398134231567383

Token 1525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021066665649414
    2. ' =' → logprob: -2.350210666656494
    3. 'a' → logprob: -13.475210189819336
    4. '=A' → logprob: -13.475210189819336
    5. 'A' → logprob: -14.850210189819336
    6. '   ' → logprob: -15.100210189819336
    7. '=
' → logprob: -15.725210189819336
    8. '```' → logprob: -15.725210189819336
    9. ' ' → logprob: -16.225210189819336
    10. '[' → logprob: -16.975210189819336

Token 1526: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02324605919420719
    2. ' A' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.898245811462402
    4. '	A' → logprob: -15.648245811462402
    5. '=A' → logprob: -17.77324676513672
    6. ' ' → logprob: -17.89824676513672
    7. '[A' → logprob: -19.14824676513672
    8. 'a' → logprob: -19.39824676513672
    9. '```' → logprob: -19.77324676513672
    10. '    ' → logprob: -19.89824676513672

Token 1527: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -2.7610454708337784e-05
    2. 'R' → logprob: -10.500027656555176
    3. '(R' → logprob: -18.50002670288086
    4. '   ' → logprob: -18.75002670288086
    5. '[' → logprob: -18.75002670288086
    6. ' R' → logprob: -19.12502670288086
    7. '[
' → logprob: -19.37502670288086
    8. '	R' → logprob: -19.62502670288086
    9. '
' → logprob: -20.62502670288086
    10. '[r' → logprob: -20.75002670288086

Token 1528: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004210651386529207
    2. '[' → logprob: -6.254210472106934
    3. '   ' → logprob: -6.879210472106934
    4. ' -' → logprob: -6.879210472106934
    5. ']' → logprob: -8.754210472106934
    6. ' ' → logprob: -11.254210472106934
    7. '[-' → logprob: -11.379210472106934
    8. '
' → logprob: -11.504210472106934
    9. ']-' → logprob: -12.004210472106934
    10. '       ' → logprob: -12.129210472106934

Token 1529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010032298043370247
    2. '0' → logprob: -4.6350321769714355
    3. '[' → logprob: -8.760032653808594
    4. '```' → logprob: -10.010032653808594
    5. ' ' → logprob: -10.385032653808594
    6. '   ' → logprob: -11.760032653808594
    7. '-' → logprob: -11.760032653808594
    8. '#' → logprob: -12.385032653808594
    9. ']' → logprob: -12.635032653808594
    10. '...' → logprob: -13.010032653808594

Token 1530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008117345161736012
    2. ']+' → logprob: -5.633117198944092
    3. '+' → logprob: -6.008117198944092
    4. ' +' → logprob: -6.258117198944092
    5. ')' → logprob: -9.13311767578125
    6. ' ]' → logprob: -11.25811767578125
    7. ')+' → logprob: -12.75811767578125
    8. '   ' → logprob: -13.25811767578125
    9. 'a' → logprob: -13.63311767578125
    10. '],' → logprob: -13.75811767578125

Token 1531: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687223196029663
    2. ' +' → logprob: -1.1368722915649414
    3. '[' → logprob: -14.886872291564941
    4. '   ' → logprob: -15.261872291564941
    5. '＋' → logprob: -15.761872291564941
    6. ' ' → logprob: -15.886872291564941
    7. '+[' → logprob: -16.011871337890625
    8. ' plus' → logprob: -16.761871337890625
    9. '+
' → logprob: -17.261871337890625
    10. '    ' → logprob: -17.761871337890625

Token 1532: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -1.5048530030981055e-06
    2. ' fen' → logprob: -13.500001907348633
    3. 'Fen' → logprob: -17.750001907348633
    4. 'f' → logprob: -18.500001907348633
    5. 'fel' → logprob: -18.875001907348633
    6. 'fon' → logprob: -19.125001907348633
    7. '
' → logprob: -19.375001907348633
    8. 'phen' → logprob: -19.625001907348633
    9. 'fe' → logprob: -19.750001907348633
    10. 'fal' → logprob: -20.125001907348633

Token 1533: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.128163257315464e-07
    2. '_w' → logprob: -16.125
    3. 'fen' → logprob: -17.375
    4. 'W' → logprob: -17.375
    5. '
' → logprob: -17.5
    6. '(w' → logprob: -17.75
    7. 'wr' → logprob: -18.0
    8. 'ew' → logprob: -18.0
    9. 'f' → logprob: -18.125
    10. 'wx' → logprob: -18.25

Token 1534: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.026304941624403
    2. 'get' → logprob: -3.6513049602508545
    3. 'fen' → logprob: -13.276305198669434
    4. '```' → logprob: -13.901305198669434
    5. '(get' → logprob: -14.901305198669434
    6. 'Fen' → logprob: -15.401305198669434
    7. '
' → logprob: -15.776305198669434
    8. '.' → logprob: -16.026304244995117
    9. '#get' → logprob: -16.526304244995117
    10. '	get' → logprob: -16.651304244995117

Token 1535: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.04858850687742233
    2. 'R' → logprob: -3.048588514328003
    3. ' R' → logprob: -14.298588752746582
    4. '[R' → logprob: -15.423588752746582
    5. ' (' → logprob: -16.298587799072266
    6. '	R' → logprob: -16.673587799072266
    7. '(' → logprob: -16.923587799072266
    8. '   ' → logprob: -17.423587799072266
    9. 'def' → logprob: -17.548587799072266
    10. '
' → logprob: -17.798587799072266

Token 1536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010134856216609478
    2. '[' → logprob: -5.510134696960449
    3. '+' → logprob: -5.885134696960449
    4. 'R' → logprob: -7.385134696960449
    5. ')+' → logprob: -7.385134696960449
    6. '<|end|>' → logprob: -7.885134696960449
    7. '```' → logprob: -8.13513469696045
    8. '[R' → logprob: -8.51013469696045
    9. '(R' → logprob: -8.76013469696045
    10. '0' → logprob: -8.88513469696045

Token 1537: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2256535142660141
    2. '   ' → logprob: -2.1006534099578857
    3. '       ' → logprob: -2.6006534099578857
    4. ' a' → logprob: -5.475653648376465
    5. ',' → logprob: -7.350653648376465
    6. '```' → logprob: -8.350653648376465
    7. ',a' → logprob: -9.225653648376465
    8. '	a' → logprob: -9.600653648376465
    9. ' ' → logprob: -9.725653648376465
    10. '<|end|>' → logprob: -11.100653648376465

Token 1538: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -11.125017166137695
    3. ' a' → logprob: -12.875017166137695
    4. '       ' → logprob: -15.875017166137695
    5. '	a' → logprob: -16.875017166137695
    6. ' ' → logprob: -20.375017166137695
    7. '  ' → logprob: -21.250017166137695
    8. '_a' → logprob: -21.500017166137695
    9. '```' → logprob: -22.000017166137695
    10. '           ' → logprob: -22.125017166137695

Token 1539: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.4607571065425873
    2. 'a' → logprob: -1.5857571363449097
    3. '_left' → logprob: -2.33575701713562
    4. 'Right' → logprob: -2.83575701713562
    5. 'A' → logprob: -5.960757255554199
    6. 'Left' → logprob: -6.085757255554199
    7. '
' → logprob: -7.085757255554199
    8. ' a' → logprob: -7.335757255554199
    9. '   ' → logprob: -7.835757255554199
    10. '#' → logprob: -7.835757255554199

Token 1540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519751191139221
    2. ' =' → logprob: -1.5019750595092773
    3. '=A' → logprob: -10.626975059509277
    4. 'A' → logprob: -11.001975059509277
    5. ' A' → logprob: -13.501975059509277
    6. '<|end|>' → logprob: -14.001975059509277
    7. '   ' → logprob: -14.251975059509277
    8. 'a' → logprob: -14.626975059509277
    9. '       ' → logprob: -15.251975059509277
    10. '[' → logprob: -15.376975059509277

Token 1541: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020354038861114532
    2. ' A' → logprob: -8.500203132629395
    3. '	A' → logprob: -17.75020408630371
    4. 'a' → logprob: -19.00020408630371
    5. '[A' → logprob: -19.87520408630371
    6. '(A' → logprob: -20.00020408630371
    7. '=A' → logprob: -20.37520408630371
    8. '
' → logprob: -20.50020408630371
    9. '```' → logprob: -20.87520408630371
    10. 'Ａ' → logprob: -21.12520408630371

Token 1542: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.001222370658069849
    2. 'R' → logprob: -6.751222133636475
    3. 'A' → logprob: -10.126222610473633
    4. '(R' → logprob: -12.626222610473633
    5. '[
' → logprob: -12.751222610473633
    6. '[' → logprob: -12.876222610473633
    7. '   ' → logprob: -14.001222610473633
    8. ' R' → logprob: -14.376222610473633
    9. '
' → logprob: -14.626222610473633
    10. '```' → logprob: -14.876222610473633

Token 1543: ']' (ID: 60)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.03949926048517227
    2. 'R' → logprob: -3.414499282836914
    3. '+' → logprob: -5.539499282836914
    4. '   ' → logprob: -7.539499282836914
    5. ' R' → logprob: -7.539499282836914
    6. ']' → logprob: -8.289499282836914
    7. '[
' → logprob: -8.539499282836914
    8. ' +' → logprob: -9.039499282836914
    9. '[' → logprob: -9.414499282836914
    10. '```' → logprob: -10.039499282836914

Token 1544: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519338130950928
    2. '+' → logprob: -1.5019338130950928
    3. '()+' → logprob: -13.501934051513672
    4. '=' → logprob: -13.876934051513672
    5. 'f' → logprob: -15.001934051513672
    6. ')' → logprob: -15.251934051513672
    7. '   ' → logprob: -15.501934051513672
    8. ' ' → logprob: -15.751934051513672
    9. '()' → logprob: -15.751934051513672
    10. '       ' → logprob: -15.876934051513672

Token 1545: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -2.4272752852994017e-05
    2. ' fen' → logprob: -11.37502384185791
    3. 'R' → logprob: -12.00002384185791
    4. 'Fen' → logprob: -12.87502384185791
    5. 'fe' → logprob: -13.50002384185791
    6. '(R' → logprob: -13.87502384185791
    7. 'fel' → logprob: -14.62502384185791
    8. 'f' → logprob: -15.75002384185791
    9. '
' → logprob: -15.87502384185791
    10. 'fer' → logprob: -16.375024795532227

Token 1546: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007044489029794931
    2. '(R' → logprob: -7.500704288482666
    3. 'k' → logprob: -9.875704765319824
    4. 'wick' → logprob: -10.125704765319824
    5. 'W' → logprob: -11.000704765319824
    6. 'wik' → logprob: -11.625704765319824
    7. 'v' → logprob: -12.000704765319824
    8. 'ick' → logprob: -12.625704765319824
    9. '+' → logprob: -12.750704765319824
    10. 'ew' → logprob: -12.875704765319824

Token 1547: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.3358446166384965e-05
    2. 'get' → logprob: -10.125053405761719
    3. '(R' → logprob: -11.750053405761719
    4. '```' → logprob: -13.625053405761719
    5. 'Fen' → logprob: -14.000053405761719
    6. 'fen' → logprob: -14.125053405761719
    7. '
' → logprob: -14.250053405761719
    8. '.' → logprob: -15.000053405761719
    9. '(' → logprob: -15.750053405761719
    10. '().' → logprob: -16.00005340576172

Token 1548: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00020354038861114532
    2. 'R' → logprob: -8.500203132629395
    3. ' (' → logprob: -18.12520408630371
    4. '(' → logprob: -18.12520408630371
    5. ' R' → logprob: -18.12520408630371
    6. '[R' → logprob: -18.25020408630371
    7. '   ' → logprob: -18.87520408630371
    8. '`' → logprob: -19.25020408630371
    9. '	R' → logprob: -20.00020408630371
    10. '
' → logprob: -20.37520408630371

Token 1549: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043104127049446106
    2. 'R' → logprob: -3.4181041717529297
    3. '(R' → logprob: -4.79310417175293
    4. ')' → logprob: -7.16810417175293
    5. ' +' → logprob: -8.54310417175293
    6. '[R' → logprob: -9.79310417175293
    7. ')]' → logprob: -10.54310417175293
    8. '   ' → logprob: -10.91810417175293
    9. ' R' → logprob: -11.04310417175293
    10. ')+' → logprob: -11.79310417175293

Token 1550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031305922311730683
    2. 'R' → logprob: -8.250312805175781
    3. '(R' → logprob: -10.500312805175781
    4. ' ' → logprob: -11.625312805175781
    5. ')' → logprob: -12.375312805175781
    6. '```' → logprob: -12.500312805175781
    7. '+' → logprob: -12.625312805175781
    8. '
' → logprob: -13.375312805175781
    9. ' R' → logprob: -14.125312805175781
    10. '0' → logprob: -14.625312805175781

Token 1551: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07957710325717926
    2. ')' → logprob: -2.5795772075653076
    3. '       ' → logprob: -7.3295769691467285
    4. '   ' → logprob: -10.829577445983887
    5. ')
' → logprob: -11.954577445983887
    6. '```' → logprob: -12.954577445983887
    7. ')

' → logprob: -14.579577445983887
    8. ')a' → logprob: -14.954577445983887
    9. '),' → logprob: -15.579577445983887
    10. ' )
' → logprob: -15.704577445983887

Token 1552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013716686517000198
    2. '```' → logprob: -7.00137186050415
    3. '   ' → logprob: -8.001371383666992
    4. 'temp' → logprob: -9.876371383666992
    5. '
' → logprob: -10.251371383666992
    6. '<|end|>' → logprob: -11.001371383666992
    7. '``' → logprob: -12.001371383666992
    8. '           ' → logprob: -12.751371383666992
    9. ' temp' → logprob: -13.001371383666992
    10. ',' → logprob: -13.126371383666992

Token 1553: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.011075647547841072
    2. ' temp' → logprob: -4.761075496673584
    3. '       ' → logprob: -6.011075496673584
    4. '   ' → logprob: -12.386075973510742
    5. '```' → logprob: -13.011075973510742
    6. '           ' → logprob: -16.636075973510742
    7. '	temp' → logprob: -16.761075973510742
    8. '``' → logprob: -17.011075973510742
    9. '        ' → logprob: -17.886075973510742
    10. '
' → logprob: -18.261075973510742

Token 1554: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0564331205387134e-05
    2. 'sum' → logprob: -11.50001049041748
    3. '_' → logprob: -16.750011444091797
    4. 'Sum' → logprob: -16.750011444091797
    5. ' -=' → logprob: -16.875011444091797
    6. '-=' → logprob: -18.125011444091797
    7. '_s' → logprob: -18.375011444091797
    8. ' sum' → logprob: -18.875011444091797
    9. '	sum' → logprob: -18.875011444091797
    10. 'um' → logprob: -19.125011444091797

Token 1555: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.47654464840888977
    2. '-=' → logprob: -0.9765446186065674
    3. '       ' → logprob: -6.8515448570251465
    4. '-' → logprob: -7.3515448570251465
    5. '   ' → logprob: -7.6015448570251465
    6. '    ' → logprob: -9.476544380187988
    7. '        ' → logprob: -9.976544380187988
    8. '```' → logprob: -10.101544380187988
    9. '     ' → logprob: -10.226544380187988
    10. '      ' → logprob: -10.476544380187988

Token 1556: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -5.836499985889532e-05
    2. ' edge' → logprob: -9.7500581741333
    3. '
' → logprob: -17.625059127807617
    4. '(edge' → logprob: -17.625059127807617
    5. 'edges' → logprob: -20.000059127807617
    6. 'temp' → logprob: -20.250059127807617
    7. '   ' → logprob: -20.625059127807617
    8. '```' → logprob: -20.750059127807617
    9. '=edge' → logprob: -21.375059127807617
    10. '.edge' → logprob: -21.750059127807617

Token 1557: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.3856492842023727e-06
    2. 'con' → logprob: -13.750000953674316
    3. 'edge' → logprob: -16.125001907348633
    4. 'Con' → logprob: -16.125001907348633
    5. '_cont' → logprob: -17.250001907348633
    6. '```' → logprob: -19.250001907348633
    7. '`' → logprob: -19.375001907348633
    8. '_' → logprob: -19.500001907348633
    9. '_CON' → logprob: -19.625001907348633
    10. '[' → logprob: -19.750001907348633

Token 1558: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.3988489806652069
    2. '_con' → logprob: -1.1488490104675293
    3. 'con' → logprob: -6.023849010467529
    4. 'rb' → logprob: -6.148849010467529
    5. 'rib' → logprob: -6.273849010467529
    6. 'Con' → logprob: -6.398849010467529
    7. 'tr' → logprob: -6.648849010467529
    8. 'edge' → logprob: -7.398849010467529
    9. 't' → logprob: -7.398849010467529
    10. '_tr' → logprob: -8.648848533630371

Token 1559: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3132653534412384
    2. 'a' → logprob: -1.313265323638916
    3. 'A' → logprob: -13.188265800476074
    4. '```' → logprob: -13.563265800476074
    5. '(A' → logprob: -15.938265800476074
    6. ' a' → logprob: -15.938265800476074
    7. '   ' → logprob: -16.813264846801758
    8. '(' → logprob: -16.813264846801758
    9. '	a' → logprob: -17.438264846801758
    10. '[a' → logprob: -17.563264846801758

Token 1560: '_left' (ID: 22189)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11113105714321136
    2. '_left' → logprob: -2.736130952835083
    3. 'left' → logprob: -3.236130952835083
    4. 'con' → logprob: -7.236131191253662
    5. '_con' → logprob: -8.861130714416504
    6. '_right' → logprob: -9.486130714416504
    7. '(a' → logprob: -10.111130714416504
    8. ' a' → logprob: -10.361130714416504
    9. 'right' → logprob: -10.861130714416504
    10. '[a' → logprob: -13.111130714416504

Token 1561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062956297770142555
    2. ',a' → logprob: -5.256295680999756
    3. 'a' → logprob: -6.881295680999756
    4. ' ,' → logprob: -10.506295204162598
    5. ',
' → logprob: -13.631295204162598
    6. '   ' → logprob: -13.756295204162598
    7. ' a' → logprob: -13.756295204162598
    8. '```' → logprob: -14.131295204162598
    9. '_,' → logprob: -14.631295204162598
    10. '`,' → logprob: -14.881295204162598

Token 1562: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.5577775128767826e-06
    2. ' a' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.1250057220459
    4. ' ' → logprob: -20.7500057220459
    5. '	a' → logprob: -20.7500057220459
    6. '       ' → logprob: -21.0000057220459
    7. '
' → logprob: -21.2500057220459
    8. '         ' → logprob: -22.1250057220459
    9. '  ' → logprob: -22.2500057220459
    10. '    ' → logprob: -22.2500057220459

Token 1563: '_right' (ID: 24402)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07900325208902359
    2. '_right' → logprob: -2.57900333404541
    3. 'Right' → logprob: -9.20400333404541
    4. 'r' → logprob: -12.45400333404541
    5. '
' → logprob: -12.57900333404541
    6. ' right' → logprob: -12.82900333404541
    7. 'ight' → logprob: -14.07900333404541
    8. ',right' → logprob: -14.82900333404541
    9. '	right' → logprob: -15.20400333404541
    10. 'RIGHT' → logprob: -15.32900333404541

Token 1564: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023317568004131317
    2. '   ' → logprob: -4.023317337036133
    3. ')
' → logprob: -5.273317337036133
    4. ')

' → logprob: -10.773317337036133
    5. '```' → logprob: -12.773317337036133
    6. '       ' → logprob: -13.148317337036133
    7. '<|end|>' → logprob: -14.773317337036133
    8. ')
' → logprob: -15.273317337036133
    9. ')#' → logprob: -15.648317337036133
    10. ' )' → logprob: -15.648317337036133

Token 1565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2027135193347931
    2. 'fen' → logprob: -1.7027134895324707
    3. '```' → logprob: -6.952713489532471
    4. '
' → logprob: -8.452713966369629
    5. '    
' → logprob: -9.702713966369629
    6. ' fen' → logprob: -10.327713966369629
    7. '``' → logprob: -10.702713966369629
    8. 'Fen' → logprob: -12.577713966369629
    9. '   ' → logprob: -13.077713966369629
    10. '       ' → logprob: -13.202713966369629

Token 1566: ' #' (ID: 1069)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.5765221118927002
    2. '   ' → logprob: -0.8265221118927002
    3. '```' → logprob: -7.951521873474121
    4. '
' → logprob: -8.951521873474121
    5. '    
' → logprob: -9.826521873474121
    6. ' fen' → logprob: -10.826521873474121
    7. '``' → logprob: -11.326521873474121
    8. 'Fen' → logprob: -12.326521873474121
    9. '   ' → logprob: -13.326521873474121
    10. 'fe' → logprob: -13.701521873474121

Token 1567: ' Ap' (ID: 6537)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -9.281485836254433e-05
    2. '#' → logprob: -10.000092506408691
    3. '   ' → logprob: -10.000092506408691
    4. '
' → logprob: -14.125092506408691
    5. ' fen' → logprob: -14.375092506408691
    6. '    
' → logprob: -15.375092506408691
    7. 'fon' → logprob: -15.625092506408691
    8. '```' → logprob: -16.125093460083008
    9. 'Fen' → logprob: -16.875093460083008
    10. 'fal' → logprob: -17.250093460083008

Token 1568: 'pliquer' (ID: 101028)
  Prédit: 'ply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ply' → logprob: -0.1922019124031067
    2. 'pliquer' → logprob: -2.192201852798462
    3. 'pl' → logprob: -3.567201852798462
    4. 'p' → logprob: -3.942201852798462
    5. 'plier' → logprob: -5.192202091217041
    6. 'ple' → logprob: -5.817202091217041
    7. 'pli' → logprob: -6.567202091217041
    8. 'pel' → logprob: -6.817202091217041
    9. 'pler' → logprob: -7.192202091217041
    10. 'pen' → logprob: -7.692202091217041

Token 1569: ' modification' (ID: 29847)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.002498133108019829
    2. ' fen' → logprob: -6.002498149871826
    3. '   ' → logprob: -10.877497673034668
    4. '
' → logprob: -14.002497673034668
    5. 'Fen' → logprob: -14.252497673034668
    6. 'X' → logprob: -14.377497673034668
    7. 'range' → logprob: -14.752497673034668
    8. 'L' → logprob: -15.252497673034668
    9. 'fe' → logprob: -15.877497673034668
    10. 'f' → logprob: -16.002498626708984

Token 1570: ' dans' (ID: 2671)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.32888221740722656
    2. '   ' → logprob: -1.4538822174072266
    3. ' fen' → logprob: -3.0788822174072266
    4. '
' → logprob: -7.828882217407227
    5. '    
' → logprob: -9.328882217407227
    6. 'Fen' → logprob: -9.703882217407227
    7. ' Fen' → logprob: -11.328882217407227
    8. '(f' → logprob: -11.828882217407227
    9. 'fe' → logprob: -12.453882217407227
    10. '```' → logprob: -12.453882217407227

Token 1571: ' fen' (ID: 25170)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004447562620043755
    2. ' L' → logprob: -5.5044474601745605
    3. 'fen' → logprob: -8.254447937011719
    4. '   ' → logprob: -9.879447937011719
    5. 'range' → logprob: -10.754447937011719
    6. ' fen' → logprob: -11.129447937011719
    7. 'Fen' → logprob: -11.754447937011719
    8. '(L' → logprob: -11.879447937011719
    9. '
' → logprob: -13.629447937011719
    10. 'the' → logprob: -14.004447937011719

Token 1572: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.75000286102295
    3. '
' → logprob: -14.87500286102295
    4. '_w' → logprob: -15.62500286102295
    5. 'wt' → logprob: -16.125001907348633
    6. 'wx' → logprob: -16.250001907348633
    7. 'wk' → logprob: -16.375001907348633
    8. '       ' → logprob: -16.500001907348633
    9. 'k' → logprob: -17.125001907348633
    10. '```' → logprob: -17.250001907348633

Token 1573: '
' (ID: 198)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.286334365606308
    2. '   ' → logprob: -2.036334276199341
    3. ' fen' → logprob: -2.786334276199341
    4. '(f' → logprob: -3.411334276199341
    5. '
' → logprob: -4.28633451461792
    6. '    
' → logprob: -5.91133451461792
    7. '[' → logprob: -6.53633451461792
    8. 'Fen' → logprob: -6.53633451461792
    9. '  
' → logprob: -6.78633451461792
    10. '(L' → logprob: -7.28633451461792

Token 1574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18036890029907227
    2. 'fen' → logprob: -1.9303689002990723
    3. '(f' → logprob: -4.305368900299072
    4. '.f' → logprob: -5.680368900299072
    5. ' fen' → logprob: -6.555368900299072
    6. 'range' → logprob: -7.180368900299072
    7. '.range' → logprob: -8.430368423461914
    8. 'f' → logprob: -8.930368423461914
    9. '```' → logprob: -9.180368423461914
    10. '.add' → logprob: -9.430368423461914

Token 1575: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' (adapté à ' fen') → logprob: -0.00012415809032972902
    2. ' fen' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. 'fe' → logprob: -15.250123977661133
    5. 'Fen' → logprob: -16.375123977661133
    6. '```' → logprob: -16.750123977661133
    7. '
' → logprob: -17.125123977661133
    8. '    
' → logprob: -18.750123977661133
    9. 'f' → logprob: -20.250123977661133
    10. '[' → logprob: -20.375123977661133

Token 1576: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.676981345459353e-06
    2. '.w' → logprob: -13.000005722045898
    3. '.add' → logprob: -13.000005722045898
    4. 'f' → logprob: -14.500005722045898
    5. '.write' → logprob: -15.500005722045898
    6. '   ' → logprob: -16.3750057220459
    7. ' .' → logprob: -17.1250057220459
    8. '.update' → logprob: -17.2500057220459
    9. '.' → logprob: -17.7500057220459
    10. '.f' → logprob: -17.8750057220459

Token 1577: '.range' (ID: 62228)
  Prédit: '.range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.range' → logprob: -2.7848862373502925e-05
    2. 'range' → logprob: -10.500027656555176
    3. '.add' → logprob: -16.375028610229492
    4. '	range' → logprob: -17.375028610229492
    5. '.Range' → logprob: -18.000028610229492
    6. '.' → logprob: -18.000028610229492
    7. ' range' → logprob: -19.000028610229492
    8. ' .' → logprob: -19.125028610229492
    9. '.rank' → logprob: -19.750028610229492
    10. '.rate' → logprob: -19.750028610229492

Token 1578: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.00029637437546625733
    2. 'add' → logprob: -8.125296592712402
    3. 'Add' → logprob: -15.625296592712402
    4. 'range' → logprob: -17.125295639038086
    5. '.add' → logprob: -17.500295639038086
    6. '	add' → logprob: -18.000295639038086
    7. ' add' → logprob: -18.125295639038086
    8. 'ange' → logprob: -18.125295639038086
    9. '   ' → logprob: -18.250295639038086
    10. ')add' → logprob: -18.375295639038086

Token 1579: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.662937372922897e-05
    2. 'L' → logprob: -9.250096321105957
    3. '(' → logprob: -15.000096321105957
    4. '[L' → logprob: -16.250097274780273
    5. '	L' → logprob: -17.875097274780273
    6. '(
' → logprob: -18.000097274780273
    7. ' L' → logprob: -18.125097274780273
    8. ',L' → logprob: -18.750097274780273
    9. '=L' → logprob: -19.000097274780273
    10. ' (' → logprob: -19.750097274780273

Token 1580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011398635804653168
    2. ',R' → logprob: -4.761398792266846
    3. 'R' → logprob: -6.386398792266846
    4. ' ,' → logprob: -7.261398792266846
    5. 'L' → logprob: -8.261398315429688
    6. ',L' → logprob: -9.761398315429688
    7. ' R' → logprob: -10.136398315429688
    8. '(R' → logprob: -11.011398315429688
    9. '   ' → logprob: -12.261398315429688
    10. '```' → logprob: -12.761398315429688

Token 1581: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.0126840758603066e-05
    2. ' R' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.37504005432129
    4. '	R' → logprob: -20.37504005432129
    5. 'RCT' → logprob: -21.75004005432129
    6. ',R' → logprob: -22.50004005432129
    7. '_R' → logprob: -22.75004005432129
    8. ' ' → logprob: -23.00004005432129
    9. 'RSpec' → logprob: -23.00004005432129
    10. '
' → logprob: -23.37504005432129

Token 1582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02208859659731388
    2. 'X' → logprob: -4.147088527679443
    3. ',X' → logprob: -5.147088527679443
    4. ' ,' → logprob: -9.647089004516602
    5. '(X' → logprob: -9.772089004516602
    6. ',L' → logprob: -10.147089004516602
    7. '   ' → logprob: -10.272089004516602
    8. 'L' → logprob: -12.147089004516602
    9. '```' → logprob: -12.147089004516602
    10. ' X' → logprob: -12.272089004516602

Token 1583: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0004306692280806601
    2. ' X' → logprob: -7.750430583953857
    3. '   ' → logprob: -20.875431060791016
    4. '	X' → logprob: -22.625431060791016
    5. ' ' → logprob: -22.750431060791016
    6. ')' → logprob: -23.000431060791016
    7. 'x' → logprob: -23.875431060791016
    8. '```' → logprob: -23.875431060791016
    9. '
' → logprob: -24.000431060791016
    10. '_X' → logprob: -24.125431060791016

Token 1584: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022782986983656883
    2. '```' → logprob: -4.272782802581787
    3. 'if' → logprob: -4.772782802581787
    4. '#' → logprob: -9.647783279418945
    5. '
' → logprob: -9.897783279418945
    6. '    
' → logprob: -12.147783279418945
    7. '``' → logprob: -12.397783279418945
    8. ' if' → logprob: -13.897783279418945
    9. '       ' → logprob: -15.397783279418945
    10. '	if' → logprob: -16.397783279418945

Token 1586: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16921570897102356
    2. '   ' → logprob: -1.9192156791687012
    3. '#' (adapté à ' #') → logprob: -4.794215679168701
    4. '```' → logprob: -7.419215679168701
    5. '
' → logprob: -9.91921615600586
    6. '    
' → logprob: -11.16921615600586
    7. ' if' → logprob: -11.91921615600586
    8. '``' → logprob: -13.29421615600586
    9. 'for' → logprob: -13.79421615600586
    10. '       ' → logprob: -14.91921615600586

Token 1587: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04167919233441353
    2. '#' → logprob: -3.4166791439056396
    3. '   ' → logprob: -4.916679382324219
    4. '```' → logprob: -7.416679382324219
    5. '
' → logprob: -10.791679382324219
    6. ' if' → logprob: -11.041679382324219
    7. 'for' → logprob: -11.041679382324219
    8. '+' → logprob: -11.666679382324219
    9. '++' → logprob: -12.791679382324219
    10. '    
' → logprob: -13.041679382324219

Token 1588: ' nouvelles' (ID: 37997)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2830817401409149
    2. '   ' → logprob: -1.7830817699432373
    3. 'for' → logprob: -2.9080817699432373
    4. '```' → logprob: -5.158081531524658
    5. '#' → logprob: -5.283081531524658
    6. 'à' → logprob: -5.408081531524658
    7. 'temp' → logprob: -5.783081531524658
    8. 'left' → logprob: -6.533081531524658
    9. ' if' → logprob: -6.908081531524658
    10. 'aux' → logprob: -7.533081531524658

Token 1589: ' contributions' (ID: 29298)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.031626440584659576
    2. ' contributions' → logprob: -4.281626224517822
    3. '_con' → logprob: -4.781626224517822
    4. '   ' → logprob: -5.281626224517822
    5. 'if' → logprob: -5.781626224517822
    6. 'for' → logprob: -8.28162670135498
    7. '_' → logprob: -8.65662670135498
    8. ' if' → logprob: -9.53162670135498
    9. '```' → logprob: -10.03162670135498
    10. 'temp' → logprob: -10.03162670135498

Token 1590: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4745155870914459
    2. 'if' → logprob: -0.9745155572891235
    3. '```' → logprob: -7.974515438079834
    4. ' if' → logprob: -9.349515914916992
    5. '
' → logprob: -12.599515914916992
    6. '	if' → logprob: -13.599515914916992
    7. '#' → logprob: -14.349515914916992
    8. '    
' → logprob: -14.849515914916992
    9. '``' → logprob: -15.224515914916992
    10. '       ' → logprob: -15.224515914916992

Token 1591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0620235949754715
    2. 'if' → logprob: -2.812023639678955
    3. '```' → logprob: -9.937023162841797
    4. ' if' → logprob: -11.937023162841797
    5. '
' → logprob: -14.437023162841797
    6. '       ' → logprob: -15.937023162841797
    7. '	if' → logprob: -16.187023162841797
    8. '    
' → logprob: -16.562023162841797
    9. '``' → logprob: -17.187023162841797
    10. '#' → logprob: -17.687023162841797

Token 1592: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029920566827058792
    2. '   ' → logprob: -3.5299205780029297
    3. '```' → logprob: -8.77992057800293
    4. ' if' → logprob: -11.02992057800293
    5. '``' → logprob: -16.65492057800293
    6. '	if' → logprob: -16.90492057800293
    7. 'for' → logprob: -17.40492057800293
    8. 'If' → logprob: -17.65492057800293
    9. '
' → logprob: -18.15492057800293
    10. '#' → logprob: -18.65492057800293

Token 1593: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04860281944274902
    2. ' L' → logprob: -3.048602819442749
    3. '   ' → logprob: -11.173603057861328
    4. '(L' → logprob: -14.673603057861328
    5. 'R' → logprob: -14.798603057861328
    6. ' ' → logprob: -16.048603057861328
    7. '    ' → logprob: -16.298603057861328
    8. '	L' → logprob: -16.423603057861328
    9. '#' → logprob: -17.111103057861328
    10. '  ' → logprob: -17.173603057861328

Token 1594: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5231383442878723
    2. ' >' → logprob: -0.8981383442878723
    3. '   ' → logprob: -12.148138046264648
    4. '```' → logprob: -13.023138046264648
    5. ' <' → logprob: -13.273138046264648
    6. ' !=' → logprob: -13.773138046264648
    7. '<' → logprob: -14.148138046264648
    8. ',' → logprob: -14.398138046264648
    9. ' ' → logprob: -14.398138046264648
    10. ' ' → logprob: -15.023138046264648

Token 1595: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018165862187743187
    2. ' ' → logprob: -4.0181660652160645
    3. '   ' → logprob: -11.143165588378906
    4. '
' → logprob: -14.018165588378906
    5. '```' → logprob: -15.393165588378906
    6. '=' → logprob: -16.143165588378906
    7. '  ' → logprob: -16.393165588378906
    8. '	' → logprob: -16.643165588378906
    9. '0' → logprob: -16.768165588378906
    10. '    ' → logprob: -17.143165588378906

Token 1596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. '0' → logprob: -17.00001335144043
    5. '```' → logprob: -17.37501335144043
    6. '
' → logprob: -17.87501335144043
    7. '=' → logprob: -18.25001335144043
    8. '  ' → logprob: -19.56251335144043
    9. '!' → logprob: -20.31251335144043
    10. '' → logprob: -20.75001335144043

Token 1597: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1099766194820404
    2. ':
' → logprob: -2.6099765300750732
    3. ':' → logprob: -3.8599765300750732
    4. '   ' → logprob: -4.734976768493652
    5. '```' → logprob: -8.359976768493652
    6. '):
' → logprob: -9.359976768493652
    7. '<|end|>' → logprob: -9.359976768493652
    8. '{
' → logprob: -9.484976768493652
    9. ',' → logprob: -9.859976768493652
    10. '	' → logprob: -10.234976768493652

Token 1598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03707864135503769
    2. 'a' → logprob: -3.537078619003296
    3. '   ' → logprob: -5.037078857421875
    4. '```' → logprob: -7.412078857421875
    5. ' a' → logprob: -8.787078857421875
    6. 'temp' → logprob: -10.412078857421875
    7. '           ' → logprob: -12.037078857421875
    8. '{
' → logprob: -12.162078857421875
    9. '     ' → logprob: -13.412078857421875
    10. '``' → logprob: -13.537078857421875

Token 1599: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -4.978233846486546e-05
    2. '   ' → logprob: -10.250049591064453
    3. '       ' → logprob: -11.750049591064453
    4. ' a' → logprob: -12.000049591064453
    5. '	a' → logprob: -15.250049591064453
    6. '```' → logprob: -16.500049591064453
    7. '           ' → logprob: -18.625049591064453
    8. 'new' → logprob: -19.500049591064453
    9. '_a' → logprob: -19.625049591064453
    10. ' ' → logprob: -19.625049591064453

Token 1600: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.5822400857578032e-05
    2. 'left' → logprob: -10.750025749206543
    3. 'Left' → logprob: -13.250025749206543
    4. 'L' → logprob: -13.625025749206543
    5. 'a' → logprob: -14.625025749206543
    6. '_l' → logprob: -15.750025749206543
    7. '_prev' → logprob: -16.00002670288086
    8. 'g' → logprob: -16.12502670288086
    9. '_a' → logprob: -16.25002670288086
    10. '_L' → logprob: -16.25002670288086

Token 1601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143292844295502
    2. ' =' → logprob: -1.7014329433441162
    3. '=A' → logprob: -11.201433181762695
    4. 'a' → logprob: -12.576433181762695
    5. 'A' → logprob: -13.951433181762695
    6. '   ' → logprob: -14.076433181762695
    7. ',' → logprob: -15.826433181762695
    8. '=L' → logprob: -15.951433181762695
    9. '=a' → logprob: -16.076433181762695
    10. '```' → logprob: -16.451433181762695

Token 1602: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029750484973192215
    2. ' A' → logprob: -3.5297505855560303
    3. '	A' → logprob: -17.90475082397461
    4. '   ' → logprob: -18.15475082397461
    5. '=A' → logprob: -19.27975082397461
    6. '(A' → logprob: -19.65475082397461
    7. ' ' → logprob: -19.65475082397461
    8. '[A' → logprob: -20.40475082397461
    9. '_A' → logprob: -21.27975082397461
    10. '>A' → logprob: -21.65475082397461

Token 1603: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.0005543439765460789
    2. 'L' → logprob: -7.50055456161499
    3. '[' → logprob: -13.750554084777832
    4. '(L' → logprob: -15.250554084777832
    5. '[
' → logprob: -17.00055503845215
    6. '```' → logprob: -17.37555503845215
    7. ' L' → logprob: -18.25055503845215
    8. '   ' → logprob: -18.50055503845215
    9. '`' → logprob: -18.62555503845215
    10. '>L' → logprob: -19.12555503845215

Token 1604: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015669701679144055
    2. ' -' → logprob: -9.12515640258789
    3. '[' → logprob: -10.00015640258789
    4. '[-' → logprob: -13.50015640258789
    5. '   ' → logprob: -14.37515640258789
    6. '```' → logprob: -15.87515640258789
    7. '       ' → logprob: -16.25015640258789
    8. '
' → logprob: -16.87515640258789
    9. '−' → logprob: -17.37515640258789
    10. '	' → logprob: -17.37515640258789

Token 1605: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028137899935245514
    2. '2' → logprob: -5.877813816070557
    3. '-' → logprob: -12.377813339233398
    4. '   ' → logprob: -12.502813339233398
    5. '```' → logprob: -14.877813339233398
    6. '
' → logprob: -15.127813339233398
    7. ' ' → logprob: -15.877813339233398
    8. '  ' → logprob: -17.0028133392334
    9. '	' → logprob: -18.1278133392334
    10. '``' → logprob: -18.3778133392334

Token 1606: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023910317569971085
    2. '+' → logprob: -4.6489105224609375
    3. ' +' → logprob: -4.6489105224609375
    4. ']+' → logprob: -5.6489105224609375
    5. ')' → logprob: -7.1489105224609375
    6. ' ]' → logprob: -9.023910522460938
    7. ')+' → logprob: -10.648910522460938
    8. '   ' → logprob: -11.648910522460938
    9. '    ' → logprob: -12.273910522460938
    10. ' ' → logprob: -12.648910522460938

Token 1607: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132619559764862
    2. ' +' → logprob: -1.3132619857788086
    3. '   ' → logprob: -17.063261032104492
    4. '＋' → logprob: -17.188261032104492
    5. ' ' → logprob: -17.438261032104492
    6. '```' → logprob: -17.438261032104492
    7. 'import' → logprob: -18.063261032104492
    8. '[' → logprob: -18.563261032104492
    9. '<|end|>' → logprob: -18.688261032104492
    10. ' ' → logprob: -18.938261032104492

Token 1608: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -9.13388703338569e-06
    2. ' fen' → logprob: -11.625009536743164
    3. '```' → logprob: -16.750009536743164
    4. 'fe' → logprob: -17.000009536743164
    5. 'fon' → logprob: -17.375009536743164
    6. 'Fen' → logprob: -17.875009536743164
    7. 'phen' → logprob: -18.625009536743164
    8. 'fel' → logprob: -18.875009536743164
    9. 'fin' → logprob: -19.375009536743164
    10. '   ' → logprob: -19.500009536743164

Token 1609: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9361264946837764e-07
    2. '_w' → logprob: -16.25
    3. '(w' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. '``' → logprob: -19.0
    6. '#' → logprob: -19.0
    7. '
' → logprob: -19.5
    8. 'wx' → logprob: -19.5
    9. 'W' → logprob: -19.5
    10. 'f' → logprob: -19.625

Token 1610: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00012582694762386382
    2. 'get' → logprob: -9.000125885009766
    3. '.' → logprob: -13.750125885009766
    4. '```' → logprob: -14.875125885009766
    5. ' .' → logprob: -15.250125885009766
    6. 'fen' → logprob: -16.000125885009766
    7. ').' → logprob: -16.250125885009766
    8. '1' → logprob: -17.000125885009766
    9. 's' → logprob: -17.125125885009766
    10. '   ' → logprob: -17.125125885009766

Token 1611: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.024604277219623e-05
    2. 'L' → logprob: -10.125040054321289
    3. '[L' → logprob: -15.750040054321289
    4. '	L' → logprob: -18.50004005432129
    5. '```' → logprob: -18.62504005432129
    6. ' L' → logprob: -19.12504005432129
    7. '(
' → logprob: -19.25004005432129
    8. '(' → logprob: -19.37504005432129
    9. '((' → logprob: -19.87504005432129
    10. ' (' → logprob: -20.12504005432129

Token 1612: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013238313840702176
    2. ' -' → logprob: -9.00013256072998
    3. ')' → logprob: -11.75013256072998
    4. ')-' → logprob: -14.62513256072998
    5. '```' → logprob: -14.75013256072998
    6. '   ' → logprob: -15.50013256072998
    7. '[' → logprob: -17.125131607055664
    8. '()-' → logprob: -17.625131607055664
    9. '1' → logprob: -17.875131607055664
    10. '-)' → logprob: -18.125131607055664

Token 1613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025292949751019478
    2. '2' → logprob: -3.7752928733825684
    3. '-' → logprob: -6.775292873382568
    4. 'L' → logprob: -7.275292873382568
    5. '0' → logprob: -9.025293350219727
    6. ' ' → logprob: -10.400293350219727
    7. '```' → logprob: -10.900293350219727
    8. '   ' → logprob: -11.025293350219727
    9. '(L' → logprob: -11.775293350219727
    10. 'def' → logprob: -12.650293350219727

Token 1614: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3888150453567505
    2. ')
' → logprob: -1.1388150453567505
    3. '   ' → logprob: -6.263814926147461
    4. '       ' → logprob: -11.763814926147461
    5. '<|end|>' → logprob: -12.263814926147461
    6. ' )
' → logprob: -12.513814926147461
    7. '```' → logprob: -12.638814926147461
    8. ')a' → logprob: -12.763814926147461
    9. '),' → logprob: -13.013814926147461
    10. ' ' → logprob: -13.138814926147461

Token 1615: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05893884599208832
    2. ' a' → logprob: -3.68393874168396
    3. '       ' → logprob: -4.058938980102539
    4. '   ' → logprob: -5.433938980102539
    5. '```' → logprob: -6.183938980102539
    6. '_a' → logprob: -6.308938980102539
    7. '	a' → logprob: -6.308938980102539
    8. ' ' → logprob: -6.433938980102539
    9. '<|end|>' → logprob: -6.808938980102539
    10. ' ' → logprob: -7.308938980102539

Token 1616: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00680205225944519
    2. '   ' → logprob: -5.381802082061768
    3. '       ' → logprob: -6.631802082061768
    4. '	a' → logprob: -7.506802082061768
    5. ' a' → logprob: -8.13180160522461
    6. '```' → logprob: -11.75680160522461
    7. ' ' → logprob: -12.75680160522461
    8. '	' → logprob: -12.75680160522461
    9. ' ' → logprob: -13.88180160522461
    10. '_a' → logprob: -14.13180160522461

Token 1617: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0005451689939945936
    2. '-' → logprob: -7.875545024871826
    3. 'right' → logprob: -9.375545501708984
    4. '_left' → logprob: -10.625545501708984
    5. '-right' → logprob: -10.750545501708984
    6. 'a' → logprob: -11.125545501708984
    7. '   ' → logprob: -11.875545501708984
    8. 'Right' → logprob: -11.875545501708984
    9. '       ' → logprob: -12.875545501708984
    10. '_RIGHT' → logprob: -13.625545501708984

Token 1618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387003093957901
    2. '=' → logprob: -1.1370030641555786
    3. '<|end|>' → logprob: -9.512002944946289
    4. '```' → logprob: -10.387002944946289
    5. '[' → logprob: -12.637002944946289
    6. 'a' → logprob: -12.637002944946289
    7. '=A' → logprob: -12.762002944946289
    8. '   ' → logprob: -13.137002944946289
    9. ' ' → logprob: -13.137002944946289
    10. ')' → logprob: -13.137002944946289

Token 1619: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078401252627373
    2. ' A' → logprob: -5.504078388214111
    3. '	A' → logprob: -18.754077911376953
    4. '```' → logprob: -19.379077911376953
    5. '   ' → logprob: -20.379077911376953
    6. ' ' → logprob: -20.629077911376953
    7. '`' → logprob: -20.879077911376953
    8. 'a' → logprob: -20.879077911376953
    9. '=A' → logprob: -20.879077911376953
    10. '_A' → logprob: -21.004077911376953

Token 1620: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -6.511406809295295e-06
    2. 'L' → logprob: -13.000006675720215
    3. 'A' → logprob: -13.125006675720215
    4. '(L' → logprob: -13.250006675720215
    5. '[A' → logprob: -15.625006675720215
    6. '```' → logprob: -16.3750057220459
    7. '[' → logprob: -17.0000057220459
    8. '[
' → logprob: -17.5000057220459
    9. ' L' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.1250057220459

Token 1621: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9862216504407115e-05
    2. ' -' → logprob: -10.875020027160645
    3. '[' → logprob: -14.125020027160645
    4. '   ' → logprob: -16.625019073486328
    5. '[-' → logprob: -16.875019073486328
    6. '       ' → logprob: -16.875019073486328
    7. '```' → logprob: -17.625019073486328
    8. '           ' → logprob: -17.875019073486328
    9. '(' → logprob: -17.875019073486328
    10. 'L' → logprob: -18.375019073486328

Token 1622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. '-' → logprob: -11.37502384185791
    3. ' ' → logprob: -11.62502384185791
    4. '0' → logprob: -13.37502384185791
    5. '```' → logprob: -14.37502384185791
    6. '   ' → logprob: -14.50002384185791
    7. 'def' → logprob: -16.125022888183594
    8. '[' → logprob: -16.250022888183594
    9. '       ' → logprob: -17.250022888183594
    10. '  ' → logprob: -17.375022888183594

Token 1623: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8672004342079163
    2. ')' → logprob: -1.2422003746032715
    3. ' +' → logprob: -1.2422003746032715
    4. ')+' → logprob: -6.1172003746032715
    5. '<|end|>' → logprob: -9.61720085144043
    6. ']' → logprob: -10.36720085144043
    7. ' )' → logprob: -10.49220085144043
    8. '+)' → logprob: -10.99220085144043
    9. ']+' → logprob: -12.11720085144043
    10. '()+' → logprob: -12.36720085144043

Token 1624: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889353483915329
    2. ' +' → logprob: -2.5788934230804443
    3. ')' → logprob: -12.828893661499023
    4. '()+' → logprob: -14.703893661499023
    5. '```' → logprob: -15.203893661499023
    6. ')+' → logprob: -16.078893661499023
    7. '<|end|>' → logprob: -16.578893661499023
    8. ' ' → logprob: -17.203893661499023
    9. '   ' → logprob: -17.328893661499023
    10. '+)' → logprob: -17.453893661499023

Token 1625: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -9.627176768844947e-05
    2. ' fen' → logprob: -9.250096321105957
    3. 'fe' → logprob: -16.75009536743164
    4. '```' → logprob: -16.87509536743164
    5. 'fon' → logprob: -17.25009536743164
    6. 'fel' → logprob: -17.62509536743164
    7. 'fer' → logprob: -17.87509536743164
    8. ' ' → logprob: -18.37509536743164
    9. 'Fen' → logprob: -18.37509536743164
    10. '
' → logprob: -18.75009536743164

Token 1626: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.579495235811919e-05
    2. '1' → logprob: -10.50009536743164
    3. '_w' → logprob: -11.50009536743164
    4. 'wor' → logprob: -11.50009536743164
    5. '2' → logprob: -11.62509536743164
    6. 'ow' → logprob: -11.87509536743164
    7. '```' → logprob: -12.00009536743164
    8. 'wr' → logprob: -12.37509536743164
    9. '``' → logprob: -12.75009536743164
    10. '   ' → logprob: -12.87509536743164

Token 1627: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0022611175663769245
    2. 'get' → logprob: -6.127261161804199
    3. '(L' → logprob: -10.5022611618042
    4. 'fen' → logprob: -11.0022611618042
    5. '
' → logprob: -11.8772611618042
    6. ')' → logprob: -12.1272611618042
    7. '```' → logprob: -12.7522611618042
    8. '.' → logprob: -12.7522611618042
    9. '(' → logprob: -13.1272611618042
    10. '   ' → logprob: -13.2522611618042

Token 1628: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04145185276865959
    2. '(L' → logprob: -3.291451930999756
    3. 'R' → logprob: -5.916451930999756
    4. '(R' → logprob: -7.291451930999756
    5. ' L' → logprob: -10.916451454162598
    6. '(' → logprob: -12.541451454162598
    7. '(
' → logprob: -13.291451454162598
    8. 'T' → logprob: -13.416451454162598
    9. '```' → logprob: -13.666451454162598
    10. '   ' → logprob: -14.166451454162598

Token 1629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005607772618532181
    2. ')
' → logprob: -8.125560760498047
    3. ' )' → logprob: -8.750560760498047
    4. ')L' → logprob: -10.500560760498047
    5. ')+' → logprob: -10.750560760498047
    6. '),' → logprob: -10.875560760498047
    7. '+' → logprob: -11.250560760498047
    8. '```' → logprob: -12.000560760498047
    9. '1' → logprob: -13.000560760498047
    10. '   ' → logprob: -13.125560760498047

Token 1630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008899244479835033
    2. '   ' → logprob: -4.758899211883545
    3. '<|end|>' → logprob: -9.008899688720703
    4. '```' → logprob: -10.008899688720703
    5. 'temp' → logprob: -10.133899688720703
    6. ')' → logprob: -10.508899688720703
    7. '
' → logprob: -11.008899688720703
    8. '           ' → logprob: -11.508899688720703
    9. '     ' → logprob: -12.383899688720703
    10. '	' → logprob: -12.508899688720703

Token 1631: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0037348796613514423
    2. '   ' → logprob: -5.753735065460205
    3. ' temp' → logprob: -7.503735065460205
    4. '       ' → logprob: -12.378734588623047
    5. '```' → logprob: -13.503734588623047
    6. '	temp' → logprob: -15.003734588623047
    7. 'temperature' → logprob: -16.253734588623047
    8. '``' → logprob: -17.128734588623047
    9. ' ' → logprob: -17.628734588623047
    10. '  ' → logprob: -18.003734588623047

Token 1632: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.319370302458992e-06
    2. 'sum' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.125005722045898
    4. '       ' → logprob: -14.625005722045898
    5. ' _' → logprob: -15.250005722045898
    6. '+' → logprob: -17.5000057220459
    7. '    ' → logprob: -17.7500057220459
    8. 'Sum' → logprob: -17.7500057220459
    9. ' +=' → logprob: -18.2500057220459
    10. ' sum' → logprob: -18.5000057220459

Token 1633: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10782654583454132
    2. '   ' → logprob: -2.8578264713287354
    3. ' +=' → logprob: -3.1078264713287354
    4. '+' → logprob: -9.232826232910156
    5. '  ' → logprob: -11.982826232910156
    6. ']+=' → logprob: -11.982826232910156
    7. '    ' → logprob: -12.107826232910156
    8. '+=(' → logprob: -12.857826232910156
    9. '	' → logprob: -13.482826232910156
    10. '```' → logprob: -13.732826232910156

Token 1634: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0002613358374219388
    2. ' edge' → logprob: -8.250261306762695
    3. '(edge' → logprob: -16.750261306762695
    4. '```' → logprob: -19.250261306762695
    5. 'edges' → logprob: -19.875261306762695
    6. '   ' → logprob: -20.500261306762695
    7. '=edge' → logprob: -20.500261306762695
    8. '`' → logprob: -21.000261306762695
    9. '
' → logprob: -21.125261306762695
    10. '.edge' → logprob: -21.375261306762695

Token 1635: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.7432603272027336e-06
    2. 'con' → logprob: -13.875001907348633
    3. '+' → logprob: -15.000001907348633
    4. 'Con' → logprob: -15.750001907348633
    5. '_CON' → logprob: -16.500001907348633
    6. '_cont' → logprob: -16.750001907348633
    7. '+=' → logprob: -17.250001907348633
    8. '\' → logprob: -18.375001907348633
    9. '_com' → logprob: -18.500001907348633
    10. 'a' → logprob: -18.750001907348633

Token 1636: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.0004281659494154155
    2. '_con' → logprob: -7.875428199768066
    3. 'con' → logprob: -10.875428199768066
    4. 'tr' → logprob: -11.375428199768066
    5. 't' → logprob: -11.625428199768066
    6. 'tri' → logprob: -12.750428199768066
    7. 'tribut' → logprob: -14.000428199768066
    8. '_tr' → logprob: -14.000428199768066
    9. '```' → logprob: -14.625428199768066
    10. 'edge' → logprob: -15.000428199768066

Token 1637: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.700132997939363e-05
    2. 'a' → logprob: -11.000017166137695
    3. '(' → logprob: -15.500017166137695
    4. '(
' → logprob: -16.875017166137695
    5. '(A' → logprob: -19.375017166137695
    6. '```' → logprob: -19.750017166137695
    7. ' a' → logprob: -19.875017166137695
    8. '   ' → logprob: -20.625017166137695
    9. '	a' → logprob: -21.625017166137695
    10. ' (' → logprob: -22.125017166137695

Token 1638: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -8.73314929776825e-05
    2. '_right' → logprob: -9.50008773803711
    3. 'left' → logprob: -11.50008773803711
    4. '[left' → logprob: -13.37508773803711
    5. 'Left' → logprob: -15.50008773803711
    6. '_LEFT' → logprob: -16.00008773803711
    7. '[' → logprob: -16.25008773803711
    8. '_Left' → logprob: -16.25008773803711
    9. 'eft' → logprob: -16.62508773803711
    10. '-left' → logprob: -17.50008773803711

Token 1639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006566775846295059
    2. ' ,' → logprob: -7.750656604766846
    3. ',a' → logprob: -8.500657081604004
    4. 'a' → logprob: -11.375657081604004
    5. ',A' → logprob: -12.250657081604004
    6. '   ' → logprob: -13.250657081604004
    7. ',
' → logprob: -14.250657081604004
    8. '[' → logprob: -14.500657081604004
    9. 'A' → logprob: -14.625657081604004
    10. '```' → logprob: -14.875657081604004

Token 1640: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024756586644798517
    2. ' a' → logprob: -6.002475738525391
    3. '	a' → logprob: -17.12747573852539
    4. '   ' → logprob: -18.75247573852539
    5. ' ' → logprob: -19.37747573852539
    6. '    ' → logprob: -19.50247573852539
    7. '       ' → logprob: -19.75247573852539
    8. '(a' → logprob: -20.25247573852539
    9. '#a' → logprob: -20.25247573852539
    10. ')a' → logprob: -20.37747573852539

Token 1641: '_right' (ID: 24402)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6932755708694458
    2. '_right' → logprob: -0.6932755708694458
    3. 'Right' → logprob: -9.068275451660156
    4. 'r' → logprob: -12.193275451660156
    5. '
' → logprob: -12.943275451660156
    6. '-right' → logprob: -13.443275451660156
    7. 'RIGHT' → logprob: -13.818275451660156
    8. '_RIGHT' → logprob: -14.193275451660156
    9. 'ight' → logprob: -14.818275451660156
    10. '[right' → logprob: -14.818275451660156

Token 1642: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10043322294950485
    2. '   ' → logprob: -2.475433111190796
    3. ')
' → logprob: -4.475433349609375
    4. '```' → logprob: -10.600433349609375
    5. '<|end|>' → logprob: -12.725433349609375
    6. ' )' → logprob: -12.850433349609375
    7. ')

' → logprob: -12.850433349609375
    8. '#' → logprob: -13.475433349609375
    9. '``' → logprob: -14.100433349609375
    10. ')
' → logprob: -14.475433349609375

Token 1643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.782141569303349e-05
    2. '```' → logprob: -9.25009822845459
    3. 'if' → logprob: -13.50009822845459
    4. '>' → logprob: -15.62509822845459
    5. '       ' → logprob: -17.750097274780273
    6. ' if' → logprob: -18.000097274780273
    7. '``' → logprob: -18.625097274780273
    8. '#' → logprob: -18.750097274780273
    9. '<|end|>' → logprob: -19.500097274780273
    10. '
' → logprob: -20.125097274780273

Token 1644: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000539093220140785
    2. 'if' (adapté à ' if') → logprob: -8.00053882598877
    3. '```' → logprob: -8.50053882598877
    4. ' if' → logprob: -15.50053882598877
    5. '>' → logprob: -17.000539779663086
    6. '       ' → logprob: -17.250539779663086
    7. '``' → logprob: -17.375539779663086
    8. '#' → logprob: -17.750539779663086
    9. '
' → logprob: -18.375539779663086
    10. '    
' → logprob: -19.000539779663086

Token 1645: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.011048054322600365
    2. ' R' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.511048316955566
    4. ' ' → logprob: -18.51104736328125
    5. '	R' → logprob: -19.01104736328125
    6. ' ' → logprob: -19.88604736328125
    7. '  ' → logprob: -20.26104736328125
    8. '(R' → logprob: -20.26104736328125
    9. '    ' → logprob: -20.88604736328125
    10. '
' → logprob: -20.88604736328125

Token 1646: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3486977517604828
    2. '<' → logprob: -1.2236977815628052
    3. '<N' → logprob: -8.473697662353516
    4. '   ' → logprob: -10.848697662353516
    5. '<R' → logprob: -11.223697662353516
    6. ' ' → logprob: -13.473697662353516
    7. '```' → logprob: -13.473697662353516
    8. '<n' → logprob: -13.598697662353516
    9. ')' → logprob: -13.973697662353516
    10. '<Q' → logprob: -14.473697662353516

Token 1647: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031777136027812958
    2. ' N' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.503177642822266
    4. '	N' → logprob: -19.128177642822266
    5. '```' → logprob: -20.378177642822266
    6. ' ' → logprob: -20.503177642822266
    7. 'n' → logprob: -20.878177642822266
    8. '=N' → logprob: -22.003177642822266
    9. '  ' → logprob: -22.253177642822266
    10. '#' → logprob: -22.378177642822266

Token 1648: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13878373801708221
    2. ':' → logprob: -2.2637836933135986
    3. '   ' → logprob: -4.138783931732178
    4. ':
' → logprob: -4.888783931732178
    5. '```' → logprob: -6.388783931732178
    6. '<|end|>' → logprob: -8.76378345489502
    7. '	' → logprob: -9.63878345489502
    8. '    ' → logprob: -10.13878345489502
    9. ' :' → logprob: -10.26378345489502
    10. ',' → logprob: -10.63878345489502

Token 1649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017179841175675392
    2. 'a' → logprob: -4.8921799659729
    3. '   ' → logprob: -5.3921799659729
    4. '```' → logprob: -5.3921799659729
    5. ' a' → logprob: -9.017179489135742
    6. '``' → logprob: -9.267179489135742
    7. '     ' → logprob: -9.517179489135742
    8. '           ' → logprob: -10.392179489135742
    9. '{
' → logprob: -11.017179489135742
    10. '    ' → logprob: -11.267179489135742

Token 1650: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.007862604223191738
    2. '   ' → logprob: -5.257862567901611
    3. '       ' → logprob: -6.257862567901611
    4. ' a' → logprob: -7.257862567901611
    5. '	a' → logprob: -12.25786304473877
    6. '           ' → logprob: -15.13286304473877
    7. ' ' → logprob: -15.63286304473877
    8. '```' → logprob: -16.007862091064453
    9. '     ' → logprob: -16.257862091064453
    10. '_a' → logprob: -17.382862091064453

Token 1651: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.3425219549390022e-05
    2. '_right' → logprob: -11.37501335144043
    3. 'left' → logprob: -13.25001335144043
    4. 'Left' → logprob: -16.00001335144043
    5. 'g' → logprob: -17.12501335144043
    6. '_LEFT' → logprob: -17.37501335144043
    7. 'a' → logprob: -17.87501335144043
    8. '_Left' → logprob: -18.37501335144043
    9. '-left' → logprob: -18.75001335144043
    10. ' Left' → logprob: -19.87501335144043

Token 1652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132782578468323
    2. ' =' → logprob: -1.3132781982421875
    3. '=A' → logprob: -11.063278198242188
    4. 'a' → logprob: -15.313278198242188
    5. '```' → logprob: -15.688278198242188
    6. 'A' → logprob: -15.813278198242188
    7. '=a' → logprob: -16.313278198242188
    8. '   ' → logprob: -16.563278198242188
    9. '=
' → logprob: -16.688278198242188
    10. ',' → logprob: -17.313278198242188

Token 1653: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023245712742209435
    2. ' A' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.898245811462402
    4. '	A' → logprob: -16.273244857788086
    5. '```' → logprob: -17.898244857788086
    6. ' ' → logprob: -18.148244857788086
    7. '[A' → logprob: -18.773244857788086
    8. '=A' → logprob: -19.148244857788086
    9. '_A' → logprob: -19.523244857788086
    10. 'a' → logprob: -20.148244857788086

Token 1654: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -2.45848218582978e-06
    2. 'R' → logprob: -13.12500286102295
    3. '[' → logprob: -15.25000286102295
    4. '(R' → logprob: -16.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. 'A' → logprob: -19.125001907348633
    7. '<R' → logprob: -19.500001907348633
    8. '[A' → logprob: -20.625001907348633
    9. ' R' → logprob: -20.750001907348633
    10. '[
' → logprob: -21.500001907348633

Token 1655: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018852074863389134
    2. '       ' → logprob: -7.251885414123535
    3. '   ' → logprob: -7.251885414123535
    4. ' -' → logprob: -8.001885414123535
    5. '[' → logprob: -9.876885414123535
    6. '[R' → logprob: -10.501885414123535
    7. '[-' → logprob: -11.001885414123535
    8. '           ' → logprob: -11.501885414123535
    9. ']' → logprob: -12.626885414123535
    10. '  ' → logprob: -12.626885414123535

Token 1656: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7762881517410278
    2. 'R' → logprob: -1.2762881517410278
    3. '```' → logprob: -2.6512880325317383
    4. '   ' → logprob: -2.9012880325317383
    5. '1' → logprob: -3.1512880325317383
    6. '-' → logprob: -3.2762880325317383
    7. '
' → logprob: -3.9012880325317383
    8. 'N' → logprob: -4.526288032531738
    9. '       ' → logprob: -5.776288032531738
    10. 'r' → logprob: -5.776288032531738

Token 1657: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11314471065998077
    2. '+' → logprob: -2.238144636154175
    3. ']' → logprob: -8.113144874572754
    4. ']+' → logprob: -11.113144874572754
    5. ')' → logprob: -12.613144874572754
    6. '   ' → logprob: -13.988144874572754
    7. ',' → logprob: -14.238144874572754
    8. '=' → logprob: -14.613144874572754
    9. ' ' → logprob: -14.863144874572754
    10. '```' → logprob: -14.988144874572754

Token 1658: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759466886520386
    2. '+' → logprob: -0.8259466886520386
    3. '```' → logprob: -13.075946807861328
    4. '=' → logprob: -13.200946807861328
    5. '   ' → logprob: -14.325946807861328
    6. ')' → logprob: -14.950946807861328
    7. '+[' → logprob: -14.950946807861328
    8. ' ' → logprob: -15.075946807861328
    9. '[' → logprob: -15.325946807861328
    10. 'a' → logprob: -15.700946807861328

Token 1659: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -6.623244553338736e-05
    2. ' fen' → logprob: -9.625065803527832
    3. 'fel' → logprob: -16.62506675720215
    4. 'Fen' → logprob: -17.12506675720215
    5. '   ' → logprob: -17.75006675720215
    6. 'fon' → logprob: -18.62506675720215
    7. 'fe' → logprob: -18.87506675720215
    8. '+' → logprob: -19.00006675720215
    9. 'phen' → logprob: -19.12506675720215
    10. 'feng' → logprob: -19.25006675720215

Token 1660: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5213274309644476e-05
    2. 'wk' → logprob: -12.375015258789062
    3. 'wik' → logprob: -12.625015258789062
    4. 'k' → logprob: -13.375015258789062
    5. '_w' → logprob: -14.000015258789062
    6. '(w' → logprob: -14.000015258789062
    7. '1' → logprob: -14.250015258789062
    8. 'wt' → logprob: -14.375015258789062
    9. 'wick' → logprob: -14.500015258789062
    10. '2' → logprob: -15.000015258789062

Token 1661: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00010306637705070898
    2. 'get' → logprob: -9.500102996826172
    3. '   ' → logprob: -11.625102996826172
    4. '.add' → logprob: -12.750102996826172
    5. '```' → logprob: -12.875102996826172
    6. ').' → logprob: -13.375102996826172
    7. '
' → logprob: -13.625102996826172
    8. '+' → logprob: -13.750102996826172
    9. ')' → logprob: -13.750102996826172
    10. '       ' → logprob: -13.875102996826172

Token 1662: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00020377879263833165
    2. 'R' → logprob: -8.500204086303711
    3. '[R' → logprob: -15.875204086303711
    4. ' R' → logprob: -17.50020408630371
    5. '(' → logprob: -17.50020408630371
    6. ' (' → logprob: -18.25020408630371
    7. '(
' → logprob: -18.87520408630371
    8. 'def' → logprob: -18.87520408630371
    9. '   ' → logprob: -19.25020408630371
    10. '_R' → logprob: -19.62520408630371

Token 1663: ')
' (ID: 446)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.1474253237247467
    2. ')' → logprob: -2.147425413131714
    3. '   ' → logprob: -4.647425174713135
    4. 'R' → logprob: -4.772425174713135
    5. ']' → logprob: -6.647425174713135
    6. '[R' → logprob: -8.647425651550293
    7. '
' → logprob: -9.022425651550293
    8. ' ' → logprob: -9.147425651550293
    9. '       ' → logprob: -9.147425651550293
    10. '+' → logprob: -9.397425651550293

Token 1664: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030977610498666763
    2. 'a' → logprob: -3.655977725982666
    3. '       ' → logprob: -6.030977725982666
    4. ' a' → logprob: -6.280977725982666
    5. '```' → logprob: -8.655977249145508
    6. ' ' → logprob: -9.655977249145508
    7. '	a' → logprob: -10.030977249145508
    8. '  ' → logprob: -10.530977249145508
    9. '<|end|>' → logprob: -10.780977249145508
    10. '    ' → logprob: -11.030977249145508

Token 1665: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.20146431028842926
    2. 'A' → logprob: -1.701464295387268
    3. '   ' → logprob: -10.951464653015137
    4. ' a' → logprob: -11.076464653015137
    5. '       ' → logprob: -11.576464653015137
    6. ' A' → logprob: -11.951464653015137
    7. '```' → logprob: -13.826464653015137
    8. '           ' → logprob: -14.826464653015137
    9. '
' → logprob: -14.951464653015137
    10. '_a' → logprob: -15.701464653015137

Token 1666: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.46818628907203674
    2. 'Right' → logprob: -1.2181862592697144
    3. 'ight' → logprob: -3.593186378479004
    4. 'R' → logprob: -4.218186378479004
    5. 'right' → logprob: -5.093186378479004
    6. '[R' → logprob: -5.218186378479004
    7. '   ' → logprob: -5.343186378479004
    8. '(R' → logprob: -5.593186378479004
    9. '_RIGHT' → logprob: -6.093186378479004
    10. '       ' → logprob: -6.218186378479004

Token 1667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10028699785470963
    2. ' =' → logprob: -2.6002869606018066
    3. '=A' → logprob: -4.850286960601807
    4. '(A' → logprob: -5.100286960601807
    5. 'A' → logprob: -5.100286960601807
    6. ' A' → logprob: -6.850286960601807
    7. '```' → logprob: -11.100287437438965
    8. '[A' → logprob: -11.600287437438965
    9. ' (' → logprob: -11.725287437438965
    10. '`' → logprob: -11.850287437438965

Token 1668: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0040785204619169235
    2. ' A' → logprob: -5.504078388214111
    3. '	A' → logprob: -17.629077911376953
    4. '   ' → logprob: -17.879077911376953
    5. ' ' → logprob: -19.004077911376953
    6. '(A' → logprob: -19.629077911376953
    7. 'a' → logprob: -19.754077911376953
    8. '```' → logprob: -20.879077911376953
    9. '`' → logprob: -21.004077911376953
    10. '_A' → logprob: -21.504077911376953

Token 1669: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.001355475396849215
    2. 'A' → logprob: -6.6263556480407715
    3. '[' → logprob: -10.751355171203613
    4. '[A' → logprob: -12.251355171203613
    5. '[
' → logprob: -13.751355171203613
    6. 'R' → logprob: -14.376355171203613
    7. '[N' → logprob: -15.126355171203613
    8. '(R' → logprob: -15.126355171203613
    9. '```' → logprob: -15.501355171203613
    10. '   ' → logprob: -15.501355171203613

Token 1670: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5422695875167847
    2. '[R' → logprob: -0.9172695875167847
    3. '][' → logprob: -4.667269706726074
    4. 'R' → logprob: -4.792269706726074
    5. '+' → logprob: -7.542269706726074
    6. '[
' → logprob: -8.542269706726074
    7. '   ' → logprob: -8.917269706726074
    8. ' R' → logprob: -9.917269706726074
    9. '[' → logprob: -10.167269706726074
    10. '```' → logprob: -10.167269706726074

Token 1671: ' +' (ID: 659)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.14663057029247284
    2. '+' → logprob: -2.0216305255889893
    3. ' +' → logprob: -5.646630764007568
    4. '[' → logprob: -8.14663028717041
    5. '   ' → logprob: -10.27163028717041
    6. '(R' → logprob: -10.64663028717041
    7. ']' → logprob: -10.89663028717041
    8. '[L' → logprob: -11.77163028717041
    9. '+[' → logprob: -11.77163028717041
    10. '```' → logprob: -12.14663028717041

Token 1672: ' fen' (ID: 25170)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.517272024415433e-05
    2. ' A' → logprob: -9.500075340270996
    3. '```' → logprob: -16.00007438659668
    4. '[A' → logprob: -16.87507438659668
    5. '
' → logprob: -17.25007438659668
    6. '`' → logprob: -17.75007438659668
    7. 'fen' → logprob: -18.50007438659668
    8. 'a' → logprob: -18.87507438659668
    9. '   ' → logprob: -18.87507438659668
    10. '...' → logprob: -19.12507438659668

Token 1673: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003948625177145004
    2. '+' → logprob: -5.87894868850708
    3. '(R' → logprob: -7.87894868850708
    4. ']' → logprob: -8.253948211669922
    5. '[R' → logprob: -8.503948211669922
    6. 'W' → logprob: -8.878948211669922
    7. '[' → logprob: -9.253948211669922
    8. '   ' → logprob: -11.253948211669922
    9. '-' → logprob: -11.378948211669922
    10. ')' → logprob: -11.878948211669922

Token 1674: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0028243737760931253
    2. 'get' → logprob: -6.002824306488037
    3. '(R' → logprob: -8.502824783325195
    4. '[R' → logprob: -9.127824783325195
    5. '   ' → logprob: -10.627824783325195
    6. '       ' → logprob: -12.877824783325195
    7. '_get' → logprob: -13.252824783325195
    8. 'A' → logprob: -13.377824783325195
    9. 'def' → logprob: -13.752824783325195
    10. ')' → logprob: -14.127824783325195

Token 1675: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.20141568779945374
    2. 'R' → logprob: -1.7014156579971313
    3. ' R' → logprob: -13.451416015625
    4. '[R' → logprob: -14.951416015625
    5. '```' → logprob: -15.576416015625
    6. '	R' → logprob: -16.076416015625
    7. '   ' → logprob: -16.451416015625
    8. '`' → logprob: -16.701416015625
    9. '(' → logprob: -16.951416015625
    10. '<R' → logprob: -17.076416015625

Token 1676: '+' (ID: 10)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.5675671696662903
    2. 'R' → logprob: -1.3175671100616455
    3. '+' → logprob: -2.4425671100616455
    4. '   ' → logprob: -3.8175671100616455
    5. '[R' → logprob: -3.8175671100616455
    6. ']' → logprob: -4.442567348480225
    7. '       ' → logprob: -4.692567348480225
    8. '```' → logprob: -4.942567348480225
    9. '           ' → logprob: -6.567567348480225
    10. ' R' → logprob: -7.067567348480225

Token 1677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009839191101491451
    2. '(R' → logprob: -5.509839057922363
    3. '+' → logprob: -5.884839057922363
    4. 'R' → logprob: -6.509839057922363
    5. '```' → logprob: -6.884839057922363
    6. '0' → logprob: -8.759839057922363
    7. ')' → logprob: -9.884839057922363
    8. ' ' → logprob: -10.009839057922363
    9. '[R' → logprob: -10.384839057922363
    10. '   ' → logprob: -10.509839057922363

Token 1678: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020598530769348145
    2. ')
' → logprob: -3.8955984115600586
    3. '<|end|>' → logprob: -10.520598411560059
    4. '   ' → logprob: -10.895598411560059
    5. ')return' → logprob: -12.770598411560059
    6. ' )' → logprob: -13.895598411560059
    7. '```' → logprob: -13.895598411560059
    8. ')#' → logprob: -14.020598411560059
    9. ')\
' → logprob: -14.520598411560059
    10. ']' → logprob: -14.645598411560059

Token 1679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28497371077537537
    2. '   ' → logprob: -1.6599737405776978
    3. '```' → logprob: -3.284973621368408
    4. 'temp' → logprob: -4.284973621368408
    5. ' temp' → logprob: -5.284973621368408
    6. '``' → logprob: -7.909973621368408
    7. ')' → logprob: -8.034974098205566
    8. '+=' → logprob: -9.159974098205566
    9. '+' → logprob: -9.159974098205566
    10. '):
' → logprob: -9.659974098205566

Token 1680: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0030551888048648834
    2. '   ' → logprob: -6.253055095672607
    3. ' temp' → logprob: -7.253055095672607
    4. '       ' → logprob: -7.878055095672607
    5. '```' → logprob: -10.253055572509766
    6. '	temp' → logprob: -13.753055572509766
    7. '``' → logprob: -14.378055572509766
    8. '_temp' → logprob: -14.378055572509766
    9. '    ' → logprob: -14.628055572509766
    10. '           ' → logprob: -15.628055572509766

Token 1681: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.558399319241289e-05
    2. 'sum' → logprob: -10.875025749206543
    3. '_' → logprob: -13.000025749206543
    4. ' +=' → logprob: -13.500025749206543
    5. '+=' → logprob: -13.750025749206543
    6. 'Sum' → logprob: -14.875025749206543
    7. '```' → logprob: -15.000025749206543
    8. '_s' → logprob: -15.250025749206543
    9. '+' → logprob: -15.500025749206543
    10. '   ' → logprob: -15.625025749206543

Token 1682: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.049404747784137726
    2. ' +=' → logprob: -3.0494048595428467
    3. '+' → logprob: -7.924404621124268
    4. '```' → logprob: -8.674405097961426
    5. '       ' → logprob: -8.924405097961426
    6. '   ' → logprob: -9.049405097961426
    7. ']+=' → logprob: -11.549405097961426
    8. ')' → logprob: -12.549405097961426
    9. '+="' → logprob: -12.674405097961426
    10. '=' → logprob: -12.924405097961426

Token 1683: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.001170225441455841
    2. ' edge' → logprob: -6.7511701583862305
    3. '(edge' → logprob: -17.751171112060547
    4. '   ' → logprob: -19.251171112060547
    5. ' ' → logprob: -19.876171112060547
    6. '
' → logprob: -20.876171112060547
    7. 'edges' → logprob: -21.001171112060547
    8. '       ' → logprob: -21.251171112060547
    9. '=edge' → logprob: -21.251171112060547
    10. '  ' → logprob: -21.251171112060547

Token 1684: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -2.5776860184123507e-06
    2. '_cont' → logprob: -13.62500286102295
    3. 'con' → logprob: -14.25000286102295
    4. '```' → logprob: -16.125001907348633
    5. 'edge' → logprob: -16.500001907348633
    6. '+=' → logprob: -16.500001907348633
    7. 'Con' → logprob: -17.000001907348633
    8. '-_' → logprob: -17.125001907348633
    9. ' +=' → logprob: -17.250001907348633
    10. '_' → logprob: -17.375001907348633

Token 1685: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.002984951948747039
    2. '_con' → logprob: -6.502985000610352
    3. 'con' → logprob: -7.127985000610352
    4. 't' → logprob: -7.752985000610352
    5. 'tr' → logprob: -9.502985000610352
    6. 'edge' → logprob: -10.127985000610352
    7. 'Con' → logprob: -10.502985000610352
    8. 'temp' → logprob: -11.002985000610352
    9. 'contr' → logprob: -11.127985000610352
    10. 'tri' → logprob: -11.252985000610352

Token 1686: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. 'a' → logprob: -13.750000953674316
    3. '```' → logprob: -19.500001907348633
    4. '(' → logprob: -20.375001907348633
    5. '(A' → logprob: -20.625001907348633
    6. '[a' → logprob: -21.375001907348633
    7. ' a' → logprob: -21.625001907348633
    8. '   ' → logprob: -21.625001907348633
    9. 'def' → logprob: -22.000001907348633
    10. '(
' → logprob: -22.125001907348633

Token 1687: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0007716284599155188
    2. 'a' → logprob: -7.625771522521973
    3. 'left' → logprob: -8.250771522521973
    4. '_right' → logprob: -11.500771522521973
    5. '_LEFT' → logprob: -12.125771522521973
    6. 'Left' → logprob: -13.125771522521973
    7. '_a' → logprob: -13.625771522521973
    8. '[R' → logprob: -14.125771522521973
    9. '[left' → logprob: -14.500771522521973
    10. ' a' → logprob: -14.500771522521973

Token 1688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.499691903591156
    2. 'a' → logprob: -0.999691903591156
    3. ',a' → logprob: -4.124691963195801
    4. '(a' → logprob: -4.749691963195801
    5. '```' → logprob: -8.6246919631958
    6. ' ,' → logprob: -9.7496919631958
    7. '_a' → logprob: -10.2496919631958
    8. ')' → logprob: -10.3746919631958
    9. '[a' → logprob: -10.3746919631958
    10. '   ' → logprob: -10.4996919631958

Token 1689: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. '	a' → logprob: -17.500009536743164
    4. ')a' → logprob: -20.000009536743164
    5. '   ' → logprob: -20.500009536743164
    6. ' ' → logprob: -20.625009536743164
    7. '```' → logprob: -21.000009536743164
    8. 'A' → logprob: -21.250009536743164
    9. '>a' → logprob: -21.250009536743164
    10. 'right' → logprob: -21.375009536743164

Token 1690: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.1014418676495552
    2. 'right' → logprob: -2.3514418601989746
    3. 'Right' → logprob: -7.101441860198975
    4. '
' → logprob: -8.601442337036133
    5. '   ' → logprob: -9.976442337036133
    6. 'R' → logprob: -10.226442337036133
    7. ' ' → logprob: -11.101442337036133
    8. 'r' → logprob: -11.101442337036133
    9. '_RIGHT' → logprob: -11.351442337036133
    10. '  ' → logprob: -11.601442337036133

Token 1691: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05726708471775055
    2. ')
' → logprob: -3.182267189025879
    3. ')' → logprob: -4.307267189025879
    4. ')

' → logprob: -7.307267189025879
    5. ')
' → logprob: -11.432267189025879
    6. '```' → logprob: -11.932267189025879
    7. '
' → logprob: -13.182267189025879
    8. ' ' → logprob: -13.807267189025879
    9. ')

' → logprob: -13.932267189025879
    10. '<|end|>' → logprob: -14.307267189025879

Token 1692: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10029573738574982
    2. '   ' → logprob: -2.3502957820892334
    3. '```' → logprob: -9.350296020507812
    4. ' print' → logprob: -13.725296020507812
    5. '``' → logprob: -14.725296020507812
    6. '	print' → logprob: -14.850296020507812
    7. '
' → logprob: -15.850296020507812
    8. '    
' → logprob: -17.350296020507812
    9. '`' → logprob: -17.725296020507812
    10. '       ' → logprob: -19.225296020507812

Token 1693: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5760326385498047
    2. '   ' → logprob: -0.8260326385498047
    3. '```' → logprob: -9.326032638549805
    4. ' print' → logprob: -12.826032638549805
    5. '	print' → logprob: -13.951032638549805
    6. '``' → logprob: -14.826032638549805
    7. '
' → logprob: -16.576032638549805
    8. '`' → logprob: -17.201032638549805
    9. '    
' → logprob: -17.451032638549805
    10. '       ' → logprob: -17.826032638549805

Token 1694: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.023251768201589584
    2. 'temp' → logprob: -3.77325177192688
    3. '(' → logprob: -12.1482515335083
    4. ' temp' → logprob: -14.0232515335083
    5. '(tmp' → logprob: -17.398252487182617
    6. ',temp' → logprob: -17.523252487182617
    7. '_temp' → logprob: -18.273252487182617
    8. '$temp' → logprob: -18.398252487182617
    9. '	temp' → logprob: -18.523252487182617
    10. '=temp' → logprob: -18.648252487182617

Token 1695: '_sum' (ID: 29859)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5769129991531372
    2. '_sum' → logprob: -0.8269129991531372
    3. 'psum' → logprob: -6.951912879943848
    4. 'sum' → logprob: -12.076912879943848
    5. 'per' → logprob: -12.326912879943848
    6. 'pr' → logprob: -13.826912879943848
    7. 'ps' → logprob: -14.076912879943848
    8. '_' → logprob: -14.451912879943848
    9. 'r' → logprob: -14.576912879943848
    10. '_p' → logprob: -14.701912879943848

Token 1696: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.598092684522271e-05
    2. '<|end|>' → logprob: -10.500056266784668
    3. ')
' → logprob: -11.125056266784668
    4. '```' → logprob: -12.750056266784668
    5. '()' → logprob: -13.000056266784668
    6. '')' → logprob: -13.375056266784668
    7. '
' → logprob: -13.500056266784668
    8. ' )' → logprob: -13.750056266784668
    9. '")' → logprob: -14.000056266784668
    10. '`)' → logprob: -14.375056266784668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1694
Tokens correctement prédits (1ère position, stricte): 431
Tokens correctement prédits (1ère position, avec adaptation): 474
Tokens correctement prédits (top 10): 1035
Précision stricte (1ère position): 25.44%
Précision adaptée (1ère position): 27.98%
Précision (top 10): 61.10%
================================================================================
