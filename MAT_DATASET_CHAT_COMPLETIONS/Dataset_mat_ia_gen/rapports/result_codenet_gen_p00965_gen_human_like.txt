================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def main():
    input = sys.stdin.readline
    n = int(input())
    intervals = [tuple(map(int, input().split())) for _ in range(n)]
    
    # Policy-2: assign seats after all reservations -> minimum number required is
    # the maximum number of overlapping intervals at any point (interval graph coloring)
    # We can find it by sorting start and end points and sweeping through:
    events = []
    for a, b in intervals:
        events.append((a, 'start'))
        events.append((b, 'end'))
    events.sort(key=lambda x: (x[0], 0 if x[1]=='start' else 1))
    
    current = 0
    max_overlap = 0
    for _, typ in events:
        if typ == 'start':
            current += 1
            if current > max_overlap:
                max_overlap = current
        else:
            current -= 1
    s2 = max_overlap
    
    # Policy-1: passengers choose seats arbitrarily, all possible orders considered
    # As per problem's explanation, s1 is given by the maximum size of a clique in the
    # interval graph that cannot be avoided by any booking order or seat choice.
    # In other words, s1 corresponds to the max number of intervals that mutually overlap
    # at some point (the size of a maximum clique in the interval graph).
    #
    # For intervals [a_i, b_i), the max clique size is the maximum number of intervals
    # covering an interior point.
    #
    # This is the same as max number of overlapping intervals at any point, so at first glance,
    # s1 might look equal to s2. But the problem clarifies that the passengers can have seat
    # preferences in any order and the worst case needs accounting.
    #
    # According to the editorial and the sample explanation, s1 can be computed as the maximum
    # number of intervals whose intervals are pairwise intersecting but with overlapping travel sections,
    # which can be found by checking the size of "the maximum number of intervals overlapping at a point
    # but excluding some subtle conditions".
    #
    # However, the problem itself is known to have a solution where:
    # - s2 = chromatic number of the interval graph = max number of overlapping intervals
    # - s1 = clique number, which coincides with the size of the largest set of intervals that pairwise overlap,
    #   but due to passenger seat choice and unknown order, s1 equals the maximum number of intervals overlapping
    #   at the same time at any point AND maximum number of intervals with a chain of partial overlaps, i.e.,
    #   the minimal number of colors in a worst reservation order.
    #
    # The problem's sample inputs also suggest s1 can be found by:
    # Sorting intervals by start then tracking interval ends in a max-heap and counting intervals that overlap.
    #
    # Actually, from discussion on similar problems, to get s1, we can:
    # count the maximum number of intervals that overlap at any point (as with s2),
    # but also consider the largest size of a set of intervals where each pair overlaps.
    #
    # For intervals, the maximum clique size equals the maximum number of intervals overlapping at some point,
    # which is the same as s2 in usual interval graph coloring.
    #
    # The problem says s1 >= s2.
    #
    # The difference is that under policy-1, an adversarial reservation order can force more required seats:
    #
    # From known solutions: s1 = maximum number of intervals that intersect pairwise (max clique size),
    # s2 = chromatic number = max number of intervals overlapping any station,
    #
    # But the problem states s1 considers all reservation orders, passengers pick seats arbitrarily,
    # and s2 is assignment after all reservations complete.
    #
    # Under policy-1, the worst-case is that for certain reservation order and seat choices
    # the number of required seats matches the maximum number of intervals that intersect pairwise, i.e.,
    # the size of a maximum *clique* of the interval graph.
    #
    # They define "overlapping sections" between intervals as having intersection in their travel sections.
    #
    # Hence, s1 is the maximum size of a set of intervals pairwise overlapping, which is the maximum clique size.
    #
    # Since all intervals are half-open in practice? The problem doesn't says, but we treat from a_i to b_i as [a_i, b_i)
    #
    # Implementing the clique size:
    #
    # We can find the maximum clique size by sorting intervals by their start, and maintaining their min end in a heap:
    # The number of intervals in the heap when removing intervals that end before current start gives us the clique size.
    
    # Sort intervals by start time ascending, if tie by end ascending
    intervals.sort()
    min_heap = []
    max_clique = 0
    
    for a, b in intervals:
        # Remove intervals ending before or at current start
        while min_heap and min_heap[0] <= a:
            heapq.heappop(min_heap)
        # Add current interval's end
        heapq.heappush(min_heap, b)
        if len(min_heap) > max_clique:
            max_clique = len(min_heap)
    s1 = max_clique
    
    print(s1, s2)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.297342985868454
    2. '\n' → logprob: -1.5473430156707764
    3. '<|end|>' → logprob: -3.7973430156707764
    4. '\' → logprob: -4.922342777252197
    5. 'newline' → logprob: -5.672342777252197
    6. 'import' → logprob: -5.672342777252197
    7. '<|end|>' → logprob: -6.047342777252197
    8. '
' → logprob: -6.922342777252197
    9. '```' → logprob: -6.922342777252197
    10. '' → logprob: -7.672342777252197

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00043126524542458355
    2. 'os' → logprob: -7.750431060791016
    3. '"os' → logprob: -15.125431060791016
    4. ' re' → logprob: -16.375431060791016
    5. ' math' → logprob: -16.625431060791016
    6. '	os' → logprob: -17.125431060791016
    7. '_os' → logprob: -17.250431060791016
    8. ' o' → logprob: -17.375431060791016
    9. ' json' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.250431060791016

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ')' → logprob: -14.875028610229492
    9. '

' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21456386148929596
    2. '
' → logprob: -2.4645638465881348
    3. '\n' → logprob: -3.2145638465881348
    4. '\' → logprob: -3.7145638465881348
    5. '<|end|>' → logprob: -4.589563846588135
    6. '.
' → logprob: -4.964563846588135
    7. '

' → logprob: -4.964563846588135
    8. 'import' → logprob: -5.339563846588135
    9. '' → logprob: -5.464563846588135
    10. '```' → logprob: -5.714563846588135

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6963363289833069
    2. 'def' → logprob: -1.696336269378662
    3. '
' → logprob: -2.321336269378662
    4. '\' → logprob: -3.196336269378662
    5. '```' → logprob: -3.321336269378662
    6. 'class' → logprob: -3.571336269378662
    7. '\n' → logprob: -3.821336269378662
    8. 'from' → logprob: -4.071336269378662
    9. 'import' → logprob: -4.196336269378662
    10. '' → logprob: -4.321336269378662

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030507624614983797
    2. '(:' → logprob: -8.87530517578125
    3. '():' → logprob: -10.00030517578125
    4. ' (' → logprob: -10.75030517578125
    5. '(
' → logprob: -11.00030517578125
    6. '("("' → logprob: -11.00030517578125
    7. ':' → logprob: -11.50030517578125
    8. '(`' → logprob: -11.87530517578125
    9. '):' → logprob: -12.12530517578125
    10. '```' → logprob: -12.25030517578125

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9871604442596436
    2. '(' → logprob: -1.2371604442596436
    3. ' ' → logprob: -1.7371604442596436
    4. '    ' → logprob: -2.1121604442596436
    5. '[' → logprob: -4.487160682678223
    6. '\' → logprob: -4.987160682678223
    7. ' 
' → logprob: -5.737160682678223
    8. ' (' → logprob: -6.362160682678223
    9. '     
' → logprob: -6.362160682678223
    10. '```' → logprob: -6.362160682678223

Token 11: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6247238516807556
    2. 'n' → logprob: -2.2497239112854004
    3. ' data' → logprob: -2.2497239112854004
    4. '   ' → logprob: -2.2497239112854004
    5. 'data' → logprob: -3.3747239112854004
    6. ' ' → logprob: -3.7497239112854004
    7. ' input' → logprob: -3.8747239112854004
    8. ' max' → logprob: -4.2497239112854
    9. ' heap' → logprob: -4.6247239112854
    10. 'input' (adapté à ' input') → logprob: -5.2497239112854

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2098507583141327
    2. '()' → logprob: -1.709850788116455
    3. '_data' → logprob: -5.584850788116455
    4. '_' → logprob: -6.459850788116455
    5. ' =' → logprob: -7.834850788116455
    6. '.' → logprob: -7.834850788116455
    7. '_line' → logprob: -8.084850311279297
    8. '=' → logprob: -8.209850311279297
    9. '().' → logprob: -8.334850311279297
    10. '```' → logprob: -8.709850311279297

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.003205161774531007
    2. 'sys' → logprob: -5.753205299377441
    3. ' input' → logprob: -11.378205299377441
    4. ' ' → logprob: -11.878205299377441
    5. '	sys' → logprob: -12.378205299377441
    6. 'input' → logprob: -12.753205299377441
    7. '(sys' → logprob: -13.753205299377441
    8. '=sys' → logprob: -14.128205299377441
    9. '   ' → logprob: -15.753205299377441
    10. ' open' → logprob: -17.503204345703125

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16082070767879486
    2. '.' → logprob: -1.910820722579956
    3. '.stdout' → logprob: -8.285820960998535
    4. ' .' → logprob: -8.660820960998535
    5. '.argv' → logprob: -9.535820960998535
    6. '.std' → logprob: -9.910820960998535
    7. '.readline' → logprob: -10.410820960998535
    8. '.input' → logprob: -12.535820960998535
    9. '.setdefault' → logprob: -13.160820960998535
    10. '._' → logprob: -13.285820960998535

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011080834083259106
    2. '.read' → logprob: -4.761080741882324
    3. '.' → logprob: -6.011080741882324
    4. '.readlines' → logprob: -11.761080741882324
    5. 'read' → logprob: -13.261080741882324
    6. '.Read' → logprob: -13.636080741882324
    7. '.buffer' → logprob: -14.636080741882324
    8. ' .' → logprob: -15.136080741882324
    9. ' readline' → logprob: -15.886080741882324
    10. '.re' → logprob: -17.13608169555664

Token 16: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00470613781362772
    2. '()
' → logprob: -5.879705905914307
    3. '(' → logprob: -7.004705905914307
    4. '().' → logprob: -7.129705905914307
    5. '(
' → logprob: -9.504706382751465
    6. '()\' → logprob: -10.379706382751465
    7. ' ()' → logprob: -10.504706382751465
    8. '()

' → logprob: -11.004706382751465
    9. ')' → logprob: -11.504706382751465
    10. '
' → logprob: -11.629706382751465

Token 17: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13686154782772064
    2. '   ' → logprob: -2.136861562728882
    3. '(' → logprob: -4.886861324310303
    4. '()
' → logprob: -7.136861324310303
    5. '    
' → logprob: -8.136861801147461
    6. 'data' → logprob: -8.136861801147461
    7. ' ()' → logprob: -8.761861801147461
    8. '())' → logprob: -9.386861801147461
    9. ')' → logprob: -9.511861801147461
    10. '()

' → logprob: -9.886861801147461

Token 18: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18645891547203064
    2. '(' → logprob: -1.936458945274353
    3. 'n' (adapté à ' n') → logprob: -4.686459064483643
    4. '   ' → logprob: -4.936459064483643
    5. 'max' → logprob: -5.436459064483643
    6. 'data' → logprob: -6.561459064483643
    7. ' ()' → logprob: -7.686459064483643
    8. '(n' → logprob: -7.936459064483643
    9. 'for' → logprob: -7.936459064483643
    10. ')' → logprob: -8.061458587646484

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011716793291270733
    2. ' ' → logprob: -5.011716842651367
    3. '=' → logprob: -5.886716842651367
    4. ',' → logprob: -6.386716842651367
    5. ' ,' → logprob: -7.761716842651367
    6. '  ' → logprob: -10.636716842651367
    7. '=int' → logprob: -10.761716842651367
    8. ')' → logprob: -10.886716842651367
    9. ' =
' → logprob: -11.011716842651367
    10. ' )' → logprob: -12.386716842651367

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03806019574403763
    2. 'int' → logprob: -3.288060188293457
    3. ' ' → logprob: -10.913060188293457
    4. '  ' → logprob: -16.163061141967773
    5. '	int' → logprob: -16.288061141967773
    6. '=int' → logprob: -16.288061141967773
    7. '10' → logprob: -16.663061141967773
    8. '   ' → logprob: -17.163061141967773
    9. ' ' → logprob: -17.538061141967773
    10. '<int' → logprob: -17.538061141967773

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3872087597846985
    2. '(input' → logprob: -1.1372087001800537
    3. '(sys' → logprob: -8.887208938598633
    4. '()' → logprob: -9.512208938598633
    5. 'input' → logprob: -9.637208938598633
    6. ' (' → logprob: -10.887208938598633
    7. '('' → logprob: -11.137208938598633
    8. '(
' → logprob: -11.887208938598633
    9. '(in' → logprob: -11.887208938598633
    10. '(n' → logprob: -12.137208938598633

Token 22: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03815452381968498
    2. '()' → logprob: -3.2881546020507812
    3. '().' → logprob: -9.413154602050781
    4. ' ())' → logprob: -11.663154602050781
    5. '())
' → logprob: -11.913154602050781
    6. '()))' → logprob: -12.038154602050781
    7. ')' → logprob: -12.038154602050781
    8. '(' → logprob: -13.538154602050781
    9. '();)' → logprob: -14.163154602050781
    10. '())

' → logprob: -14.663154602050781

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14517834782600403
    2. ')' → logprob: -2.3951783180236816
    3. 'heap' → logprob: -3.7701783180236816
    4. 'data' → logprob: -6.020178318023682
    5. '    
' → logprob: -6.145178318023682
    6. ' ' → logprob: -6.270178318023682
    7. 'items' → logprob: -6.395178318023682
    8. 'result' → logprob: -6.520178318023682
    9. ' heap' → logprob: -6.645178318023682
    10. '    ' → logprob: -7.145178318023682

Token 24: ' intervals' (ID: 49900)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.148260235786438
    2. ' numbers' → logprob: -1.773260235786438
    3. 'data' → logprob: -2.5232601165771484
    4. 'arr' → logprob: -2.6482601165771484
    5. ' data' → logprob: -3.0232601165771484
    6. ' arr' → logprob: -3.1482601165771484
    7. 'numbers' → logprob: -3.2732601165771484
    8. 'cards' → logprob: -3.5232601165771484
    9. 'nums' → logprob: -3.5232601165771484
    10. ' nums' → logprob: -3.6482601165771484

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007197908591479063
    2. '=' → logprob: -5.007197856903076
    3. ' ' → logprob: -8.257198333740234
    4. '=[]' → logprob: -10.132198333740234
    5. '.' → logprob: -10.257198333740234
    6. '_' → logprob: -10.632198333740234
    7. '[' → logprob: -10.757198333740234
    8. '[:]' → logprob: -10.757198333740234
    9. '   ' → logprob: -10.882198333740234
    10. ')' → logprob: -11.632198333740234

Token 26: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20529749989509583
    2. ' []' → logprob: -1.7052974700927734
    3. '[' → logprob: -5.580297470092773
    4. ' [' → logprob: -9.455297470092773
    5. '[]}' → logprob: -11.830297470092773
    6. '[]
' → logprob: -12.205297470092773
    7. ' ' → logprob: -12.455297470092773
    8. '[],' → logprob: -13.455297470092773
    9. '[:]' → logprob: -13.455297470092773
    10. '[int' → logprob: -13.705297470092773

Token 27: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.25768786668777466
    2. 'list' → logprob: -1.5076878070831299
    3. ' tuple' → logprob: -5.257688045501709
    4. ' list' → logprob: -7.757688045501709
    5. '(tuple' → logprob: -9.63268756866455
    6. '   ' → logprob: -10.50768756866455
    7. ']' → logprob: -12.25768756866455
    8. 'input' → logprob: -12.50768756866455
    9. '(list' → logprob: -13.00768756866455
    10. '[]' → logprob: -13.63268756866455

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007956892368383706
    2. '(int' → logprob: -8.000795364379883
    3. '(input' → logprob: -8.125795364379883
    4. '(' → logprob: -8.750795364379883
    5. 'map' → logprob: -12.375795364379883
    6. '(sorted' → logprob: -14.875795364379883
    7. '()' → logprob: -15.000795364379883
    8. ' (' → logprob: -15.500795364379883
    9. 'input' → logprob: -15.750795364379883
    10. '(
' → logprob: -15.875795364379883

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002703953068703413
    2. 'int' → logprob: -9.12527084350586
    3. '(' → logprob: -9.50027084350586
    4. '<int' → logprob: -10.25027084350586
    5. ',int' → logprob: -11.12527084350586
    6. '(str' → logprob: -11.37527084350586
    7. '(input' → logprob: -11.37527084350586
    8. '[int' → logprob: -12.87527084350586
    9. ']int' → logprob: -13.00027084350586
    10. '=int' → logprob: -13.37527084350586

Token 30: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.591913640499115
    2. '(input' → logprob: -1.0919137001037598
    3. ',' → logprob: -2.2169137001037598
    4. '(' → logprob: -6.46691370010376
    5. 'input' → logprob: -7.96691370010376
    6. ')' → logprob: -9.216913223266602
    7. ' ,' → logprob: -9.216913223266602
    8. ' input' → logprob: -10.216913223266602
    9. ' (' → logprob: -11.341913223266602
    10. '),' → logprob: -11.341913223266602

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020543403923511505
    2. ' input' → logprob: -3.895543336868286
    3. '(input' → logprob: -14.895543098449707
    4. ',input' → logprob: -14.895543098449707
    5. '	input' → logprob: -15.520543098449707
    6. ' ' → logprob: -15.770543098449707
    7. ')' → logprob: -16.020544052124023
    8. '=input' → logprob: -16.145544052124023
    9. '   ' → logprob: -16.270544052124023
    10. '<input' → logprob: -16.395544052124023

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.650518920039758e-06
    2. '()' → logprob: -12.875003814697266
    3. '.readline' → logprob: -14.750003814697266
    4. '()))' → logprob: -14.875003814697266
    5. '()
' → logprob: -16.375003814697266
    6. ' ().' → logprob: -16.625003814697266
    7. ')' → logprob: -16.750003814697266
    8. '(' → logprob: -17.625003814697266
    9. ').' → logprob: -17.750003814697266
    10. '.split' → logprob: -17.875003814697266

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011306817643344402
    2. 'strip' → logprob: -4.5113067626953125
    3. 'rstrip' → logprob: -8.261306762695312
    4. ' split' → logprob: -14.761306762695312
    5. '(split' → logprob: -16.011306762695312
    6. ' ' → logprob: -16.261306762695312
    7. '   ' → logprob: -17.261306762695312
    8. 'read' → logprob: -17.386306762695312
    9. '```' → logprob: -18.011306762695312
    10. ' strip' → logprob: -18.511306762695312

Token 34: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6941574215888977
    2. '()))' → logprob: -0.6941574215888977
    3. '())' → logprob: -7.944157600402832
    4. '()' → logprob: -8.069157600402832
    5. ')' → logprob: -8.819157600402832
    6. '(' → logprob: -8.819157600402832
    7. ')))' → logprob: -10.819157600402832
    8. '()))
' → logprob: -11.444157600402832
    9. ' ))' → logprob: -12.319157600402832
    10. '())))' → logprob: -12.444157600402832

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04371718317270279
    2. ' for' → logprob: -3.4187171459198
    3. 'for' → logprob: -4.918717384338379
    4. '   ' → logprob: -6.418717384338379
    5. ')]' → logprob: -7.293717384338379
    6. ' )' → logprob: -8.668717384338379
    7. ']' → logprob: -9.668717384338379
    8. '),' → logprob: -9.918717384338379
    9. ' ' → logprob: -9.918717384338379
    10. '	for' → logprob: -11.543717384338379

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7152647972106934
    2. ' range' → logprob: -0.7152647972106934
    3. 'range' → logprob: -4.215264797210693
    4. ' _' → logprob: -5.090264797210693
    5. '_range' → logprob: -7.090264797210693
    6. ' ' → logprob: -9.840265274047852
    7. ' in' → logprob: -10.465265274047852
    8. '(range' → logprob: -11.090265274047852
    9. '	range' → logprob: -11.715265274047852
    10. ' xrange' → logprob: -11.965265274047852

Token 37: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9180694818496704
    2. ' in' → logprob: -0.9180694818496704
    3. 'range' → logprob: -1.6680694818496704
    4. ' range' → logprob: -4.543069362640381
    5. 'n' → logprob: -6.543069362640381
    6. '(range' → logprob: -8.293069839477539
    7. '_' → logprob: -8.793069839477539
    8. 'ange' → logprob: -8.793069839477539
    9. '(' → logprob: -10.168069839477539
    10. '	range' → logprob: -10.918069839477539

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003181159496307373
    2. ' range' → logprob: -5.753180980682373
    3. ' ' → logprob: -13.753181457519531
    4. '(range' → logprob: -14.003181457519531
    5. '   ' → logprob: -14.378181457519531
    6. '  ' → logprob: -14.628181457519531
    7. '	range' → logprob: -15.003181457519531
    8. ')' → logprob: -16.37818145751953
    9. '    ' → logprob: -17.12818145751953
    10. 'rang' → logprob: -17.25318145751953

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020616286201402545
    2. '(' → logprob: -8.500205993652344
    3. 'n' → logprob: -13.000205993652344
    4. ' n' → logprob: -15.375205993652344
    5. ')n' → logprob: -16.250205993652344
    6. ' (' → logprob: -16.875205993652344
    7. ')' → logprob: -17.375205993652344
    8. '(
' → logprob: -18.125205993652344
    9. ',n' → logprob: -19.750205993652344
    10. '	n' → logprob: -20.000205993652344

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002541178371757269
    2. ')' → logprob: -6.0025410652160645
    3. ')])' → logprob: -10.377541542053223
    4. ']' → logprob: -10.627541542053223
    5. '))' → logprob: -12.627541542053223
    6. '])]' → logprob: -13.377541542053223
    7. ' )' → logprob: -13.877541542053223
    8. '   ' → logprob: -13.877541542053223
    9. ')]
' → logprob: -14.127541542053223
    10. '])' → logprob: -14.502541542053223

Token 41: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4224611520767212
    2. '    
' → logprob: -2.0474610328674316
    3. '
' → logprob: -2.2974610328674316
    4. 'interval' → logprob: -2.4224610328674316
    5. ' intervals' → logprob: -4.422461032867432
    6. '```' → logprob: -4.922461032867432
    7. 'heap' → logprob: -6.047461032867432
    8. '<|end|>' → logprob: -6.797461032867432
    9. ')' → logprob: -7.172461032867432
    10. '#' → logprob: -8.17246150970459

Token 42: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07774925231933594
    2. ' intervals' → logprob: -3.202749252319336
    3. '   ' → logprob: -3.452749252319336
    4. 'heap' → logprob: -6.827749252319336
    5. '    
' → logprob: -7.702749252319336
    6. '```' → logprob: -7.952749252319336
    7. '#' → logprob: -8.702749252319336
    8. 'inter' → logprob: -9.327749252319336
    9. 'sorted' → logprob: -9.577749252319336
    10. '(interval' → logprob: -9.702749252319336

Token 43: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.000740538293030113
    2. '#' (adapté à ' #') → logprob: -7.6257405281066895
    3. ' intervals' → logprob: -8.875741004943848
    4. 'heap' → logprob: -9.375741004943848
    5. '```' → logprob: -11.875741004943848
    6. 'sorted' → logprob: -12.125741004943848
    7. '   ' → logprob: -12.125741004943848
    8. '
' → logprob: -13.125741004943848
    9. 'sort' → logprob: -13.250741004943848
    10. '(interval' → logprob: -13.625741004943848

Token 44: ' Policy' (ID: 15282)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6966618299484253
    2. ' intervals' → logprob: -0.6966618299484253
    3. '#' → logprob: -6.196661949157715
    4. '```' → logprob: -8.071661949157715
    5. ' #' → logprob: -8.446661949157715
    6. 'sort' → logprob: -8.696661949157715
    7. 'heap' → logprob: -8.946661949157715
    8. ' sorted' → logprob: -9.446661949157715
    9. 'inter' → logprob: -9.571661949157715
    10. '   ' → logprob: -9.571661949157715

Token 45: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.617465853691101
    2. ':' → logprob: -1.867465853691101
    3. '_' → logprob: -1.867465853691101
    4. '=' → logprob: -2.1174659729003906
    5. 'interval' → logprob: -2.6174659729003906
    6. 'heap' → logprob: -2.7424659729003906
    7. ' =' → logprob: -2.9924659729003906
    8. ')' → logprob: -3.2424659729003906
    9. 's' → logprob: -3.3674659729003906
    10. ' intervals' → logprob: -3.4924659729003906

Token 46: '2' (ID: 17)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6531607508659363
    2. ' intervals' → logprob: -0.9031607508659363
    3. ' based' → logprob: -3.528160810470581
    4. 'based' → logprob: -3.778160810470581
    5. 'heap' → logprob: -5.153160572052002
    6. 'q' → logprob: -5.903160572052002
    7. 's' → logprob: -6.278160572052002
    8. ' heap' → logprob: -6.528160572052002
    9. 'queue' → logprob: -6.653160572052002
    10. '(interval' → logprob: -6.903160572052002

Token 47: ':' (ID: 25)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.42002972960472107
    2. ' intervals' → logprob: -1.2950297594070435
    3. '(interval' → logprob: -3.545029640197754
    4. '_inter' → logprob: -4.420029640197754
    5. '.sort' → logprob: -5.295029640197754
    6. '<|end|>' → logprob: -5.420029640197754
    7. ' =' → logprob: -5.795029640197754
    8. ':' → logprob: -5.920029640197754
    9. '```' → logprob: -6.170029640197754
    10. '_sorted' → logprob: -6.420029640197754

Token 48: ' assign' (ID: 14975)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.08835887908935547
    2. 'interval' → logprob: -2.5883588790893555
    3. ' sorted' → logprob: -5.0883588790893555
    4. 'sorted' → logprob: -6.3383588790893555
    5. 'heap' → logprob: -8.088358879089355
    6. ' heap' → logprob: -8.463358879089355
    7. '(interval' → logprob: -9.025858879089355
    8. ' interval' → logprob: -9.088358879089355
    9. '```' → logprob: -9.400858879089355
    10. 'sort' → logprob: -9.525858879089355

Token 49: ' seats' (ID: 24992)
  Prédit: ' rooms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rooms' → logprob: -0.455875039100647
    2. '<|end|>' → logprob: -1.830875039100647
    3. ' intervals' → logprob: -2.5808749198913574
    4. '<|end|>' → logprob: -3.4558749198913574
    5. 'rooms' → logprob: -3.7058749198913574
    6. '_rooms' → logprob: -4.080874919891357
    7. ' classrooms' → logprob: -4.580874919891357
    8. '(interval' → logprob: -4.705874919891357
    9. ' to' → logprob: -5.080874919891357
    10. ' room' → logprob: -5.830874919891357

Token 50: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5155346989631653
    2. '=' → logprob: -2.5155346393585205
    3. '(interval' → logprob: -2.5155346393585205
    4. ' intervals' → logprob: -2.7655346393585205
    5. ')' → logprob: -2.8905346393585205
    6. '   ' → logprob: -3.2655346393585205
    7. 'interval' → logprob: -3.6405346393585205
    8. '.sort' → logprob: -4.6405348777771
    9. '()' → logprob: -5.0155348777771
    10. '(' → logprob: -5.2655348777771

Token 51: ' all' (ID: 722)
  Prédit: ' sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorting' → logprob: -0.39675453305244446
    2. 'sorting' → logprob: -1.271754503250122
    3. 'sort' → logprob: -4.271754741668701
    4. ' the' → logprob: -5.271754741668701
    5. ' checking' → logprob: -5.396754741668701
    6. ' sort' → logprob: -5.771754741668701
    7. 'pop' → logprob: -6.146754741668701
    8. 'sorted' → logprob: -6.396754741668701
    9. ' intervals' → logprob: -6.521754741668701
    10. 'the' → logprob: -6.646754741668701

Token 52: ' reservations' (ID: 51148)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.23548898100852966
    2. ' intervals' → logprob: -1.610489010810852
    3. '(interval' → logprob: -5.9854888916015625
    4. 'events' → logprob: -6.4854888916015625
    5. 'sorted' → logprob: -6.8604888916015625
    6. 'sorting' → logprob: -6.9854888916015625
    7. 'requests' → logprob: -7.7354888916015625
    8. '```' → logprob: -7.9854888916015625
    9. 's' → logprob: -8.110488891601562
    10. ',' → logprob: -8.235488891601562

Token 53: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3407447040081024
    2. 'interval' → logprob: -1.8407447338104248
    3. ' intervals' → logprob: -2.715744733810425
    4. '.' → logprob: -3.840744733810425
    5. ')' → logprob: -4.215744495391846
    6. '    
' → logprob: -4.965744495391846
    7. ',' → logprob: -5.340744495391846
    8. '```' → logprob: -5.715744495391846
    9. '<|end|>' → logprob: -5.840744495391846
    10. '(interval' → logprob: -6.090744495391846

Token 54: ' minimum' (ID: 11085)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.5467686653137207
    2. 'interval' → logprob: -0.9217686653137207
    3. 'sorted' → logprob: -4.546768665313721
    4. ' sorted' → logprob: -4.671768665313721
    5. '```' → logprob: -7.171768665313721
    6. 'sort' → logprob: -7.546768665313721
    7. '   ' → logprob: -7.796768665313721
    8. '(interval' → logprob: -7.921768665313721
    9. 'heap' → logprob: -8.734268188476562
    10. ' sort' → logprob: -8.859268188476562

Token 55: ' number' (ID: 2086)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5677581429481506
    2. '_heap' → logprob: -1.0677580833435059
    3. '_' → logprob: -3.442758083343506
    4. ' heap' → logprob: -3.442758083343506
    5. '_end' → logprob: -5.442758083343506
    6. ' =' → logprob: -5.817758083343506
    7. '_se' → logprob: -6.067758083343506
    8. '(heap' → logprob: -6.192758083343506
    9. '=' → logprob: -6.567758083343506
    10. '(' → logprob: -6.692758083343506

Token 56: ' required' (ID: 3759)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3684326410293579
    2. '_' → logprob: -2.3684325218200684
    3. ']' → logprob: -3.6184325218200684
    4. '=' → logprob: -3.7434325218200684
    5. ' ' → logprob: -3.8684325218200684
    6. '   ' → logprob: -3.9934325218200684
    7. 's' → logprob: -4.118432521820068
    8. '<|end|>' → logprob: -4.243432521820068
    9. ' =' → logprob: -4.493432521820068
    10. 'interval' → logprob: -4.493432521820068

Token 57: ' is' (ID: 382)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03451845794916153
    2. ' intervals' → logprob: -4.159518241882324
    3. 'heap' → logprob: -5.284518241882324
    4. ')' → logprob: -5.534518241882324
    5. '
' → logprob: -5.909518241882324
    6. '```' → logprob: -7.159518241882324
    7. '(interval' → logprob: -7.159518241882324
    8. '    
' → logprob: -7.534518241882324
    9. 'inter' → logprob: -7.534518241882324
    10. ',' → logprob: -7.659518241882324

Token 58: '
' (ID: 198)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7511701583862305
    2. ' max' → logprob: -1.6261701583862305
    3. 'max' → logprob: -2.1261701583862305
    4. ' ' → logprob: -2.5011701583862305
    5. 'the' → logprob: -3.5011701583862305
    6. ' len' → logprob: -3.7511701583862305
    7. 'len' → logprob: -3.7511701583862305
    8. '1' → logprob: -4.1261701583862305
    9. '0' → logprob: -4.2511701583862305
    10. ' maximum' → logprob: -4.3761701583862305

Token 59: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1571319103240967
    2. ' the' → logprob: -1.2821319103240967
    3. ' ' → logprob: -1.6571319103240967
    4. 'max' → logprob: -2.2821319103240967
    5. '   ' → logprob: -3.2821319103240967
    6. ' a' → logprob: -4.157132148742676
    7. '1' → logprob: -4.282132148742676
    8. '0' → logprob: -4.282132148742676
    9. 'the' → logprob: -4.407132148742676
    10. ' maximum' → logprob: -5.032132148742676

Token 60: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8937155604362488
    2. ' max' → logprob: -1.2687156200408936
    3. 'max' → logprob: -1.6437156200408936
    4. '0' → logprob: -2.3937156200408936
    5. 'len' → logprob: -5.2687153816223145
    6. ' n' → logprob: -5.3937153816223145
    7. ' len' → logprob: -5.3937153816223145
    8. '1' → logprob: -5.7687153816223145
    9. ' intervals' → logprob: -6.7687153816223145
    10. '   ' → logprob: -6.8937153816223145

Token 61: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9562371969223022
    2. ' ' → logprob: -1.0812371969223022
    3. 'max' → logprob: -2.206237316131592
    4. '0' → logprob: -2.206237316131592
    5. ' the' → logprob: -3.581237316131592
    6. ' n' → logprob: -5.331237316131592
    7. ' len' → logprob: -5.456237316131592
    8. ' maximum' → logprob: -5.581237316131592
    9. ' a' → logprob: -5.831237316131592
    10. 'the' → logprob: -5.956237316131592

Token 62: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.1278993934392929
    2. ' length' → logprob: -3.252899408340454
    3. ' number' → logprob: -3.377899408340454
    4. ' minimum' → logprob: -4.252899169921875
    5. 'maximum' → logprob: -4.252899169921875
    6. ' max' → logprob: -5.127899169921875
    7. 'max' → logprob: -5.752899169921875
    8. ' size' → logprob: -6.002899169921875
    9. 'minimum' → logprob: -6.377899169921875
    10. ' maximal' → logprob: -6.877899169921875

Token 63: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7842839956283569
    2. ' number' → logprob: -2.1592841148376465
    3. '<|end|>' → logprob: -2.5342841148376465
    4. ' of' → logprob: -2.7842841148376465
    5. '(' → logprob: -2.9092841148376465
    6. '_' → logprob: -3.2842841148376465
    7. 'number' → logprob: -3.4092841148376465
    8. ' (' → logprob: -4.0342841148376465
    9. 'heap' → logprob: -4.0342841148376465
    10. '  ' → logprob: -4.1592841148376465

Token 64: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10495816171169281
    2. ' ' → logprob: -2.9799580574035645
    3. 'of' → logprob: -3.3549580574035645
    4. '(' → logprob: -4.8549580574035645
    5. '<|end|>' → logprob: -5.8549580574035645
    6. '  ' → logprob: -6.7299580574035645
    7. '```' → logprob: -7.8549580574035645
    8. ')' → logprob: -7.8549580574035645
    9. '[' → logprob: -8.604958534240723
    10. '"' → logprob: -8.729958534240723

Token 65: ' overlapping' (ID: 90457)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6179541349411011
    2. ' overlapping' → logprob: -1.117954134941101
    3. ' concurrent' → logprob: -3.1179542541503906
    4. 'interval' → logprob: -3.6179542541503906
    5. ' intervals' → logprob: -3.9929542541503906
    6. ' simultaneous' → logprob: -4.117954254150391
    7. 'con' → logprob: -4.367954254150391
    8. ' overlaps' → logprob: -5.617954254150391
    9. 'sim' → logprob: -5.742954254150391
    10. ' ' → logprob: -6.867954254150391

Token 66: ' intervals' (ID: 49900)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3956975936889648
    2. '_' → logprob: -1.5206975936889648
    3. '_inter' → logprob: -2.145697593688965
    4. 'interval' → logprob: -2.270697593688965
    5. ' intervals' → logprob: -2.395697593688965
    6. ' _' → logprob: -2.520697593688965
    7. 's' → logprob: -3.145697593688965
    8. ' ```' → logprob: -3.645697593688965
    9. ' =' → logprob: -4.145697593688965
    10. 'inter' → logprob: -4.895697593688965

Token 67: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.355161190032959
    2. ' ' → logprob: -1.480161190032959
    3. 'interval' → logprob: -1.980161190032959
    4. '   ' → logprob: -2.605161190032959
    5. ' intervals' → logprob: -2.605161190032959
    6. 'max' → logprob: -3.105161190032959
    7. 'def' → logprob: -3.605161190032959
    8. ']' → logprob: -4.355161190032959
    9. 'events' → logprob: -4.355161190032959
    10. 'n' → logprob: -4.605161190032959

Token 68: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.1866997927427292
    2. ' any' → logprob: -1.8116997480392456
    3. 'a' → logprob: -5.186699867248535
    4. ' a' → logprob: -7.561699867248535
    5. ' ' → logprob: -7.936699867248535
    6. 'one' → logprob: -8.436699867248535
    7. 'once' → logprob: -9.811699867248535
    8. 'the' → logprob: -9.936699867248535
    9. ' the' → logprob: -10.061699867248535
    10. 'some' → logprob: -10.811699867248535

Token 69: ' point' (ID: 2438)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.971578061580658
    2. 'time' → logprob: -1.2215781211853027
    3. ' given' → logprob: -1.7215781211853027
    4. ' point' → logprob: -2.2215781211853027
    5. 'point' → logprob: -3.4715781211853027
    6. 'given' → logprob: -5.096578121185303
    7. ' one' → logprob: -7.346578121185303
    8. ' moment' → logprob: -7.471578121185303
    9. 'moment' → logprob: -8.471577644348145
    10. ' ' → logprob: -8.471577644348145

Token 70: ' (' (ID: 350)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.0783263444900513
    2. 'interval' → logprob: -1.3283263444900513
    3. '   ' → logprob: -2.3283262252807617
    4. ')' → logprob: -2.3283262252807617
    5. 'events' → logprob: -2.5783262252807617
    6. 'max' → logprob: -3.9533262252807617
    7. 'n' → logprob: -4.453326225280762
    8. '    
' → logprob: -4.578326225280762
    9. '```' → logprob: -4.953326225280762
    10. '
' → logprob: -5.078326225280762

Token 71: 'interval' (ID: 37558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0801672413945198
    2. ' )' → logprob: -2.580167293548584
    3. ' in' → logprob: -7.955167293548584
    4. '   ' → logprob: -8.830166816711426
    5. ' ' → logprob: -9.330166816711426
    6. 'in' → logprob: -9.580166816711426
    7. '):' → logprob: -9.705166816711426
    8. ').' → logprob: -9.705166816711426
    9. 'interval' → logprob: -9.705166816711426
    10. 'len' → logprob: -10.205166816711426

Token 72: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02828124351799488
    2. '[' → logprob: -3.9032812118530273
    3. ')' → logprob: -5.403281211853027
    4. ' s' → logprob: -7.028281211853027
    5. '   ' → logprob: -7.903281211853027
    6. ')s' → logprob: -8.403281211853027
    7. '_' → logprob: -8.653281211853027
    8. ' ' → logprob: -8.653281211853027
    9. ' )' → logprob: -8.778281211853027
    10. ' in' → logprob: -8.903281211853027

Token 73: ' coloring' (ID: 50205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07539134472608566
    2. ' coloring' → logprob: -3.2003912925720215
    3. ' )' → logprob: -4.4503912925720215
    4. '   ' → logprob: -5.4503912925720215
    5. '-' → logprob: -6.5753912925720215
    6. 'color' → logprob: -6.7003912925720215
    7. '```' → logprob: -6.7003912925720215
    8. 'cl' → logprob: -6.7003912925720215
    9. ''s' → logprob: -7.0753912925720215
    10. '")' → logprob: -7.2003912925720215

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006160548073239625
    2. ' )' → logprob: -8.250616073608398
    3. '   ' → logprob: -9.250616073608398
    4. '):' → logprob: -9.375616073608398
    5. ' ' → logprob: -10.375616073608398
    6. '#' → logprob: -10.375616073608398
    7. 'def' → logprob: -11.250616073608398
    8. '_' → logprob: -11.625616073608398
    9. ')`' → logprob: -11.750616073608398
    10. ')
' → logprob: -11.875616073608398

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12390490621328354
    2. '    
' → logprob: -3.1239049434661865
    3. 'interval' → logprob: -4.123904705047607
    4. 'events' → logprob: -4.373904705047607
    5. ' intervals' → logprob: -4.623904705047607
    6. '
' → logprob: -5.248904705047607
    7. 'max' → logprob: -5.248904705047607
    8. 'def' → logprob: -5.748904705047607
    9. ' max' → logprob: -6.248904705047607
    10. '    ' → logprob: -6.248904705047607

Token 76: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.11724929511547089
    2. ' intervals' → logprob: -2.3672492504119873
    3. '   ' → logprob: -4.867249488830566
    4. 'events' → logprob: -4.992249488830566
    5. '    
' → logprob: -7.117249488830566
    6. ' events' → logprob: -8.617249488830566
    7. 'sorted' → logprob: -9.117249488830566
    8. 'inter' → logprob: -9.242249488830566
    9. 'reserv' → logprob: -9.242249488830566
    10. '```' → logprob: -9.242249488830566

Token 77: ' We' (ID: 1416)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.09341790527105331
    2. ' intervals' → logprob: -2.7184178829193115
    3. 'events' → logprob: -4.093418121337891
    4. '   ' → logprob: -5.718418121337891
    5. 'end' → logprob: -6.843418121337891
    6. ' events' → logprob: -7.468418121337891
    7. 'points' → logprob: -8.21841812133789
    8. 'ends' → logprob: -8.59341812133789
    9. 'over' → logprob: -8.71841812133789
    10. 'heap' → logprob: -9.34341812133789

Token 78: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0882198810577393
    2. ' need' → logprob: -1.8382198810577393
    3. ' can' → logprob: -1.9632198810577393
    4. ' =' → logprob: -2.7132198810577393
    5. 'def' → logprob: -2.7132198810577393
    6. ' intervals' → logprob: -2.9632198810577393
    7. ' heap' → logprob: -3.5882198810577393
    8. 'heap' → logprob: -3.9632198810577393
    9. ' use' → logprob: -4.46321964263916
    10. 'need' → logprob: -4.46321964263916

Token 79: ' find' (ID: 1646)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7757716178894043
    2. ' use' → logprob: -1.4007716178894043
    3. ' sort' → logprob: -1.6507716178894043
    4. 'use' → logprob: -2.6507716178894043
    5. 'simulate' → logprob: -4.025771617889404
    6. 'process' → logprob: -6.275771617889404
    7. ' process' → logprob: -6.400771617889404
    8. ' simulate' → logprob: -6.650771617889404
    9. 'solve' → logprob: -6.900771617889404
    10. 'maint' → logprob: -7.650771617889404

Token 80: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19651222229003906
    2. 'the' → logprob: -1.946512222290039
    3. ' a' → logprob: -4.696512222290039
    4. ' this' → logprob: -4.946512222290039
    5. 'a' → logprob: -5.571512222290039
    6. ' out' → logprob: -5.946512222290039
    7. ' intervals' → logprob: -6.446512222290039
    8. ' an' → logprob: -6.571512222290039
    9. 'events' → logprob: -6.696512222290039
    10. 'this' → logprob: -7.071512222290039

Token 81: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.05751122906804085
    2. 'by' → logprob: -3.682511329650879
    3. '   ' → logprob: -4.307511329650879
    4. ' the' → logprob: -5.057511329650879
    5. ' to' → logprob: -6.182511329650879
    6. ' in' → logprob: -6.307511329650879
    7. ' at' → logprob: -6.432511329650879
    8. ' out' → logprob: -6.682511329650879
    9. 'the' → logprob: -7.682511329650879
    10. 'in' → logprob: -8.057511329650879

Token 82: ' sorting' (ID: 51375)
  Prédit: ' sorting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorting' → logprob: -0.17373718321323395
    2. 'sorting' → logprob: -2.4237372875213623
    3. 'events' → logprob: -4.673737049102783
    4. ' using' → logprob: -4.923737049102783
    5. ' events' → logprob: -5.173737049102783
    6. ' maintaining' → logprob: -5.298737049102783
    7. ' creating' → logprob: -5.548737049102783
    8. ' checking' → logprob: -5.548737049102783
    9. ' tracking' → logprob: -5.673737049102783
    10. ' sim' → logprob: -5.673737049102783

Token 83: ' start' (ID: 1604)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.3335477411746979
    2. 'interval' → logprob: -1.4585477113723755
    3. ' intervals' → logprob: -3.083547830581665
    4. 'by' → logprob: -6.208547592163086
    5. '(' → logprob: -6.708547592163086
    6. 'the' → logprob: -7.708547592163086
    7. ' the' → logprob: -7.708547592163086
    8. ' by' → logprob: -7.833547592163086
    9. '(events' → logprob: -8.458547592163086
    10. 'events' → logprob: -8.958547592163086

Token 84: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7179762721061707
    2. 'times' → logprob: -2.0929763317108154
    3. ',' → logprob: -2.3429763317108154
    4. '_times' → logprob: -2.4679763317108154
    5. '_points' → logprob: -2.9679763317108154
    6. 'points' → logprob: -3.2179763317108154
    7. ' and' → logprob: -3.3429763317108154
    8. 'and' → logprob: -3.9679763317108154
    9. '(' → logprob: -4.217976093292236
    10. '()' → logprob: -4.842976093292236

Token 85: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.043080151081085205
    2. 'end' → logprob: -3.1680800914764404
    3. '_end' → logprob: -10.41808032989502
    4. '[end' → logprob: -10.91808032989502
    5. '<|end|>' → logprob: -11.41808032989502
    6. ' finish' → logprob: -12.54308032989502
    7. ' endpoints' → logprob: -12.79308032989502
    8. '	end' → logprob: -13.04308032989502
    9. ',end' → logprob: -13.16808032989502
    10. '=end' → logprob: -13.29308032989502

Token 86: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0138518810272217
    2. '_times' → logprob: -1.6388518810272217
    3. 's' → logprob: -1.7638518810272217
    4. 'points' → logprob: -2.5138518810272217
    5. 'times' → logprob: -3.0138518810272217
    6. ' points' → logprob: -3.0138518810272217
    7. '_' → logprob: -3.1388518810272217
    8. ' times' → logprob: -4.013852119445801
    9. ' =' → logprob: -5.013852119445801
    10. ')' → logprob: -5.138852119445801

Token 87: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1219552755355835
    2. 'points' → logprob: -1.4969552755355835
    3. ')' → logprob: -1.9969552755355835
    4. 's' → logprob: -2.371955394744873
    5. 'start' → logprob: -2.746955394744873
    6. ',' → logprob: -3.371955394744873
    7. ' points' → logprob: -3.996955394744873
    8. 'def' → logprob: -4.371955394744873
    9. ']' → logprob: -4.621955394744873
    10. '_points' → logprob: -4.746955394744873

Token 88: ' sweeping' (ID: 78027)
  Prédit: ' iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -1.0184426307678223
    2. ' counting' → logprob: -1.6434426307678223
    3. ' using' → logprob: -1.7684426307678223
    4. ' travers' → logprob: -2.0184426307678223
    5. ' merging' → logprob: -2.6434426307678223
    6. ' scanning' → logprob: -4.518442630767822
    7. 'count' → logprob: -4.643442630767822
    8. 's' → logprob: -4.768442630767822
    9. ' sweeping' → logprob: -4.768442630767822
    10. 'using' → logprob: -4.893442630767822

Token 89: ' through' (ID: 1819)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9653350710868835
    2. '(' → logprob: -1.4653351306915283
    3. ')' → logprob: -2.4653351306915283
    4. ',' → logprob: -2.7153351306915283
    5. 's' → logprob: -2.9653351306915283
    6. '_' → logprob: -3.2153351306915283
    7. 'points' → logprob: -3.7153351306915283
    8. '()' → logprob: -3.8403351306915283
    9. ' (' → logprob: -4.590334892272949
    10. '(interval' → logprob: -4.590334892272949

Token 90: ':
' (ID: 734)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6501303911209106
    2. '   ' → logprob: -1.5251303911209106
    3. ' points' → logprob: -2.525130271911621
    4. 'events' → logprob: -3.525130271911621
    5. 'interval' → logprob: -3.900130271911621
    6. '    ' → logprob: -4.025130271911621
    7. 'start' → logprob: -4.025130271911621
    8. 's' → logprob: -4.525130271911621
    9. '```' → logprob: -4.525130271911621
    10. 'times' → logprob: -4.775130271911621

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5126931667327881
    2. 'starts' → logprob: -2.012693166732788
    3. ' starts' → logprob: -2.137693166732788
    4. 'start' → logprob: -3.012693166732788
    5. 'points' → logprob: -3.262693166732788
    6. ' points' → logprob: -3.512693166732788
    7. '    ' → logprob: -4.512693405151367
    8. ' start' → logprob: -4.887693405151367
    9. '    
' → logprob: -6.012693405151367
    10. 's' → logprob: -6.137693405151367

Token 92: ' events' (ID: 6124)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.2847330570220947
    2. 'starts' → logprob: -1.2847330570220947
    3. ' starts' → logprob: -1.9097330570220947
    4. ' points' → logprob: -2.0347330570220947
    5. 'start' → logprob: -2.5347330570220947
    6. '   ' → logprob: -2.6597330570220947
    7. ' start' → logprob: -5.159732818603516
    8. 'times' → logprob: -5.409732818603516
    9. 'events' (adapté à ' events') → logprob: -5.534732818603516
    10. ' times' → logprob: -7.034732818603516

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809806704521179
    2. '=' → logprob: -3.288098096847534
    3. ' ' → logprob: -10.288098335266113
    4. '<|end|>' → logprob: -11.538098335266113
    5. '=[]' → logprob: -12.288098335266113
    6. ',' → logprob: -13.663098335266113
    7. ')' → logprob: -13.788098335266113
    8. '   ' → logprob: -13.913098335266113
    9. '  ' → logprob: -14.163098335266113
    10. ':' → logprob: -14.288098335266113

Token 94: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04904920607805252
    2. ' []' → logprob: -3.049049139022827
    3. 'sorted' → logprob: -8.174049377441406
    4. '[' → logprob: -9.299049377441406
    5. ' sorted' → logprob: -10.174049377441406
    6. '[]
' → logprob: -10.799049377441406
    7. '[]}' → logprob: -11.424049377441406
    8. '[(' → logprob: -12.049049377441406
    9. '[]

' → logprob: -12.549049377441406
    10. ' ' → logprob: -12.549049377441406

Token 95: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17850534617900848
    2. ' for' → logprob: -1.928505301475525
    3. '   ' → logprob: -4.0535054206848145
    4. '<|end|>' → logprob: -7.8035054206848145
    5. ' ' → logprob: -8.428504943847656
    6. '    
' → logprob: -10.303504943847656
    7. '    ' → logprob: -10.553504943847656
    8. ' 
' → logprob: -10.928504943847656
    9. '<|end|>' → logprob: -11.553504943847656
    10. '	for' → logprob: -11.928504943847656

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02324792370200157
    2. ' for' → logprob: -3.7732479572296143
    3. '   ' → logprob: -13.273247718811035
    4. '
' → logprob: -15.273247718811035
    5. ' 
' → logprob: -15.273247718811035
    6. '    
' → logprob: -15.898247718811035
    7. ' (' → logprob: -16.64824867248535
    8. '(' → logprob: -17.77324867248535
    9. '	for' → logprob: -18.27324867248535
    10. ' ' → logprob: -19.02324867248535

Token 97: ' a' (ID: 261)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6533005237579346
    2. 'start' → logprob: -0.7783005237579346
    3. 's' → logprob: -4.6533002853393555
    4. ' s' → logprob: -5.2783002853393555
    5. 'interval' → logprob: -5.7783002853393555
    6. ' interval' → logprob: -7.2783002853393555
    7. '(start' → logprob: -7.2783002853393555
    8. ' (' → logprob: -7.5283002853393555
    9. 'l' → logprob: -8.278300285339355
    10. ' l' → logprob: -8.403300285339355

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025996763724833727
    2. ',b' → logprob: -7.502599716186523
    3. ',_' → logprob: -7.627599716186523
    4. ' in' → logprob: -7.627599716186523
    5. ' ,' → logprob: -7.752599716186523
    6. '_,' → logprob: -8.877599716186523
    7. ',start' → logprob: -8.877599716186523
    8. ',a' → logprob: -9.127599716186523
    9. ',i' → logprob: -10.127599716186523
    10. 'start' → logprob: -10.127599716186523

Token 99: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002475777640938759
    2. ' b' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.75247573852539
    4. 'd' → logprob: -17.50247573852539
    5. '<|end|>' → logprob: -17.50247573852539
    6. '	b' → logprob: -18.37747573852539
    7. 's' → logprob: -18.87747573852539
    8. '   ' → logprob: -19.37747573852539
    9. '<|end|>' → logprob: -20.00247573852539
    10. '_b' → logprob: -20.12747573852539

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014177493751049042
    2. 'in' → logprob: -4.264177322387695
    3. ' ' → logprob: -12.264177322387695
    4. '   ' → logprob: -12.514177322387695
    5. ',' → logprob: -12.639177322387695
    6. '	in' → logprob: -14.014177322387695
    7. '    ' → logprob: -14.764177322387695
    8. '_in' → logprob: -15.264177322387695
    9. 'In' → logprob: -15.264177322387695
    10. '  ' → logprob: -15.639177322387695

Token 101: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.005235648714005947
    2. ' intervals' → logprob: -5.25523567199707
    3. '(interval' → logprob: -13.63023567199707
    4. '   ' → logprob: -15.13023567199707
    5. ' ' → logprob: -15.63023567199707
    6. 'ranges' → logprob: -17.00523567199707
    7. 'events' → logprob: -17.50523567199707
    8. '  ' → logprob: -17.75523567199707
    9. '    ' → logprob: -18.25523567199707
    10. 'int' → logprob: -18.38023567199707

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00635082321241498
    2. ':
' → logprob: -5.131350994110107
    3. '   ' → logprob: -7.881350994110107
    4. '):
' → logprob: -11.13135051727295
    5. '):' → logprob: -11.38135051727295
    6. ' :' → logprob: -12.00635051727295
    7. ',' → logprob: -12.50635051727295
    8. '=' → logprob: -13.13135051727295
    9. '.append' → logprob: -13.50635051727295
    10. '():
' → logprob: -14.00635051727295

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023962346836924553
    2. '   ' → logprob: -3.7739622592926025
    3. ' events' → logprob: -8.523962020874023
    4. ',' → logprob: -9.148962020874023
    5. '(events' → logprob: -9.148962020874023
    6. '[' → logprob: -9.773962020874023
    7. 'events' → logprob: -9.898962020874023
    8. '    
' → logprob: -9.898962020874023
    9. '        
' → logprob: -10.148962020874023
    10. ':' → logprob: -10.898962020874023

Token 104: ' events' (ID: 6124)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8034482002258301
    2. '   ' → logprob: -0.9284482002258301
    3. 'events' (adapté à ' events') → logprob: -2.42844820022583
    4. ' events' → logprob: -2.67844820022583
    5. '(events' → logprob: -8.553447723388672
    6. '.events' → logprob: -12.178447723388672
    7. '_events' → logprob: -12.678447723388672
    8. '```' → logprob: -12.928447723388672
    9. 'Events' → logprob: -13.803447723388672
    10. '    ' → logprob: -14.053447723388672

Token 105: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017322985222563148
    2. '.' → logprob: -6.376732349395752
    3. 'append' → logprob: -11.501731872558594
    4. '.app' → logprob: -11.751731872558594
    5. '.extend' → logprob: -12.626731872558594
    6. '.ap' → logprob: -12.876731872558594
    7. ').' → logprob: -12.876731872558594
    8. ' .' → logprob: -13.501731872558594
    9. '.Append' → logprob: -14.376731872558594
    10. '].' → logprob: -14.501731872558594

Token 106: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00026574634830467403
    2. '(' → logprob: -8.250266075134277
    3. '(a' → logprob: -12.750266075134277
    4. '(('' → logprob: -13.375266075134277
    5. '   ' → logprob: -17.62526512145996
    6. ' ' → logprob: -18.25026512145996
    7. '(("' → logprob: -18.62526512145996
    8. '([' → logprob: -19.37526512145996
    9. ' (' → logprob: -19.87526512145996
    10. ' ((' → logprob: -20.00026512145996

Token 107: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.036524842376821e-05
    2. ' a' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.250040054321289
    4. ')a' → logprob: -18.50004005432129
    5. '(a' → logprob: -19.12504005432129
    6. ')' → logprob: -19.25004005432129
    7. '	a' → logprob: -19.87504005432129
    8. ',a' → logprob: -20.00004005432129
    9. '_a' → logprob: -20.87504005432129
    10. ',' → logprob: -21.25004005432129

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033879990223795176
    2. ' ,' → logprob: -8.000338554382324
    3. ',+' → logprob: -13.625338554382324
    4. ',true' → logprob: -15.000338554382324
    5. ' ' → logprob: -15.125338554382324
    6. '1' → logprob: -15.375338554382324
    7. '+' → logprob: -15.500338554382324
    8. ' +' → logprob: -15.750338554382324
    9. '   ' → logprob: -16.00033950805664
    10. '```' → logprob: -16.00033950805664

Token 109: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023527415469288826
    2. ' ' → logprob: -3.7735273838043213
    3. '0' → logprob: -9.273527145385742
    4. '+' → logprob: -9.523527145385742
    5. 'True' → logprob: -10.148527145385742
    6. ' True' → logprob: -10.523527145385742
    7. ' +' → logprob: -11.523527145385742
    8. ''' → logprob: -11.773527145385742
    9. ' '' → logprob: -11.773527145385742
    10. '-' → logprob: -11.898527145385742

Token 110: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01455057505518198
    2. 's' → logprob: -4.264550685882568
    3. 'S' → logprob: -8.26455020904541
    4. '+' → logprob: -9.51455020904541
    5. '1' → logprob: -10.76455020904541
    6. 'a' → logprob: -11.76455020904541
    7. 'arrival' → logprob: -11.88955020904541
    8. ' start' → logprob: -12.01455020904541
    9. '_start' → logprob: -12.51455020904541
    10. 'L' → logprob: -13.63955020904541

Token 111: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.016236238181591034
    2. ''))
' → logprob: -4.266236305236816
    3. '))' → logprob: -6.266236305236816
    4. ')' → logprob: -9.891236305236816
    5. '')' → logprob: -9.891236305236816
    6. ''))
' → logprob: -11.016236305236816
    7. ''' → logprob: -11.141236305236816
    8. '))
' → logprob: -11.516236305236816
    9. ''))

' → logprob: -11.516236305236816
    10. '',' → logprob: -11.516236305236816

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10225719958543777
    2. ')' → logprob: -2.852257251739502
    3. '<|end|>' → logprob: -3.977257251739502
    4. ',' → logprob: -4.477257251739502
    5. ')
' → logprob: -5.602257251739502
    6. '   ' → logprob: -6.102257251739502
    7. '
' → logprob: -7.102257251739502
    8. '(events' → logprob: -7.602257251739502
    9. ' (' → logprob: -7.977257251739502
    10. '  
' → logprob: -8.477256774902344

Token 113: ' events' (ID: 6124)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07439911365509033
    2. '(events' → logprob: -2.824398994445801
    3. 'events' (adapté à ' events') → logprob: -5.449398994445801
    4. '(b' → logprob: -5.449398994445801
    5. '       ' → logprob: -6.074398994445801
    6. ' events' → logprob: -6.949398994445801
    7. '(a' → logprob: -7.699398994445801
    8. '   ' → logprob: -10.4493989944458
    9. '(' → logprob: -11.8243989944458
    10. '(e' → logprob: -13.3243989944458

Token 114: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013590441085398197
    2. '.' → logprob: -6.626358985900879
    3. ').' → logprob: -10.751358985900879
    4. ' .' → logprob: -11.501358985900879
    5. '.push' → logprob: -14.751358985900879
    6. '.Append' → logprob: -15.126358985900879
    7. 'append' → logprob: -15.376358985900879
    8. '.extend' → logprob: -15.501358985900879
    9. '.add' → logprob: -16.001359939575195
    10. '.setdefault' → logprob: -16.626359939575195

Token 115: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. ' ((' → logprob: -15.75
    4. '   ' → logprob: -17.75
    5. '(
' → logprob: -18.125
    6. '(b' → logprob: -18.5
    7. ' ' → logprob: -18.5
    8. ' (' → logprob: -19.625
    9. '(('' → logprob: -20.25
    10. ',' → logprob: -20.375

Token 116: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00027492138906382024
    2. ' b' → logprob: -8.250274658203125
    3. '(b' → logprob: -11.375274658203125
    4. '   ' → logprob: -13.625274658203125
    5. ' (' → logprob: -14.250274658203125
    6. '(' → logprob: -16.000274658203125
    7. ')b' → logprob: -16.625274658203125
    8. ')' → logprob: -16.750274658203125
    9. ' ' → logprob: -17.500274658203125
    10. '	b' → logprob: -18.000274658203125

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024834630312398076
    2. ' ,' → logprob: -8.375247955322266
    3. '+' → logprob: -11.250247955322266
    4. ' +' → logprob: -13.000247955322266
    5. ',
' → logprob: -15.250247955322266
    6. '),' → logprob: -15.500247955322266
    7. ' ' → logprob: -15.500247955322266
    8. '   ' → logprob: -15.500247955322266
    9. '<|end|>' → logprob: -15.500247955322266
    10. '',' → logprob: -15.625247955322266

Token 118: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.281771183013916
    2. ''end' → logprob: -1.656771183013916
    3. ''' → logprob: -2.906771183013916
    4. ' ' → logprob: -9.406770706176758
    5. ''s' → logprob: -10.406770706176758
    6. '"' → logprob: -12.156770706176758
    7. ')' → logprob: -12.406770706176758
    8. 'end' → logprob: -12.531770706176758
    9. '   ' → logprob: -12.531770706176758
    10. ''ex' → logprob: -13.156770706176758

Token 119: 'end' (ID: 419)
  Prédit: ''end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''end' → logprob: -0.3133590519428253
    2. 'end' → logprob: -1.313359022140503
    3. ''' → logprob: -9.438359260559082
    4. ' end' → logprob: -11.063359260559082
    5. '’end' → logprob: -14.313359260559082
    6. '',' → logprob: -14.313359260559082
    7. ' '' → logprob: -15.313359260559082
    8. ''s' → logprob: -15.688359260559082
    9. '','' → logprob: -16.063358306884766
    10. '	end' → logprob: -16.563358306884766

Token 120: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.0005681642796844244
    2. '))' → logprob: -7.750568389892578
    3. '')' → logprob: -9.875568389892578
    4. ')' → logprob: -10.000568389892578
    5. ''))
' → logprob: -10.250568389892578
    6. '')))' → logprob: -13.125568389892578
    7. ''' → logprob: -13.500568389892578
    8. ''))

' → logprob: -14.000568389892578
    9. '"))' → logprob: -14.500568389892578
    10. ''));' → logprob: -15.000568389892578

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004632926546037197
    2. 'events' → logprob: -5.879632949829102
    3. '    
' → logprob: -7.254632949829102
    4. '
' → logprob: -7.504632949829102
    5. ' events' → logprob: -7.754632949829102
    6. ')' → logprob: -9.254632949829102
    7. ')
' → logprob: -11.379632949829102
    8. '(events' → logprob: -11.879632949829102
    9. '```' → logprob: -12.004632949829102
    10. '.sort' → logprob: -12.754632949829102

Token 122: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' (adapté à ' events') → logprob: -0.22379548847675323
    2. ' events' → logprob: -1.7237955331802368
    3. '   ' → logprob: -3.9737954139709473
    4. '
' → logprob: -5.723795413970947
    5. '(events' → logprob: -10.098795890808105
    6. '    
' → logprob: -11.723795890808105
    7. '```' → logprob: -12.348795890808105
    8. '_events' → logprob: -12.348795890808105
    9. '.events' → logprob: -12.598795890808105
    10. ' 
' → logprob: -14.473795890808105

Token 123: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. '.sorted' → logprob: -15.375431060791016
    4. ' .' → logprob: -15.750431060791016
    5. '.s' → logprob: -15.875431060791016
    6. 'sort' → logprob: -16.500431060791016
    7. ').' → logprob: -17.000431060791016
    8. '.Sort' → logprob: -17.250431060791016
    9. '.reverse' → logprob: -17.625431060791016
    10. ')' → logprob: -17.750431060791016

Token 124: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006732660811394453
    2. '(key' → logprob: -5.00673246383667
    3. '(' → logprob: -11.381732940673828
    4. '(reverse' → logprob: -13.256732940673828
    5. 'key' → logprob: -13.506732940673828
    6. '()
' → logprob: -14.131732940673828
    7. '(lambda' → logprob: -14.506732940673828
    8. '(events' → logprob: -15.256732940673828
    9. ' ()' → logprob: -15.381732940673828
    10. '();' → logprob: -15.381732940673828

Token 125: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0004309076175559312
    2. '=' → logprob: -7.750431060791016
    3. 'lambda' → logprob: -15.375431060791016
    4. ' =' → logprob: -16.875431060791016
    5. '=
' → logprob: -19.750431060791016
    6. ' lambda' → logprob: -20.375431060791016
    7. '=item' → logprob: -20.875431060791016
    8. '=len' → logprob: -20.875431060791016
    9. '=str' → logprob: -21.500431060791016
    10. '=None' → logprob: -22.250431060791016

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3869122266769409
    2. ' x' → logprob: -1.136912226676941
    3. 'e' → logprob: -10.51191234588623
    4. 'event' → logprob: -11.51191234588623
    5. ' e' → logprob: -13.13691234588623
    6. ' event' → logprob: -13.51191234588623
    7. 'lambda' → logprob: -15.63691234588623
    8. ' ' → logprob: -15.76191234588623
    9. '   ' → logprob: -15.88691234588623
    10. 'item' → logprob: -17.136911392211914

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.968312951968983e-06
    2. ':x' → logprob: -11.875009536743164
    3. ':(' → logprob: -13.125009536743164
    4. 'x' → logprob: -14.625009536743164
    5. ' :' → logprob: -15.375009536743164
    6. '(' → logprob: -15.500009536743164
    7. '(x' → logprob: -17.000009536743164
    8. '[' → logprob: -17.625009536743164
    9. 'e' → logprob: -18.000009536743164
    10. ' (' → logprob: -18.625009536743164

Token 128: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07117284089326859
    2. '(' → logprob: -2.8211729526519775
    3. ' (' → logprob: -4.696172714233398
    4. '(a' → logprob: -11.071172714233398
    5. 'x' → logprob: -12.071172714233398
    6. '(i' → logprob: -13.321172714233398
    7. '(e' → logprob: -13.821172714233398
    8. '(ord' → logprob: -14.196172714233398
    9. '(str' → logprob: -14.571172714233398
    10. '(event' → logprob: -14.696172714233398

Token 129: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00026336227892898023
    2. ' x' → logprob: -8.250263214111328
    3. '(x' → logprob: -13.250263214111328
    4. '0' → logprob: -15.250263214111328
    5. ' (' → logprob: -17.625263214111328
    6. '(' → logprob: -18.500263214111328
    7. '   ' → logprob: -19.500263214111328
    8. '{x' → logprob: -19.500263214111328
    9. '	x' → logprob: -20.250263214111328
    10. ')x' → logprob: -20.625263214111328

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9266199160483666e-05
    2. '0' → logprob: -11.000019073486328
    3. 'x' → logprob: -13.250019073486328
    4. '(' → logprob: -15.250019073486328
    5. ':' → logprob: -15.375019073486328
    6. ' ' → logprob: -16.500019073486328
    7. '1' → logprob: -16.625019073486328
    8. ',' → logprob: -17.250019073486328
    9. ')' → logprob: -17.375019073486328
    10. '[
' → logprob: -17.375019073486328

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008888294687494636
    2. '1' → logprob: -7.375888824462891
    3. 'x' → logprob: -8.62588882446289
    4. ' ' → logprob: -9.75088882446289
    5. '[' → logprob: -10.75088882446289
    6. ' x' → logprob: -13.62588882446289
    7. '   ' → logprob: -14.50088882446289
    8. '(' → logprob: -14.62588882446289
    9. 'not' → logprob: -16.31338882446289
    10. ',' → logprob: -16.62588882446289

Token 132: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ',x' → logprob: -11.625015258789062
    3. ' ,' → logprob: -12.125015258789062
    4. '[' → logprob: -14.875015258789062
    5. ',
' → logprob: -15.750015258789062
    6. 'x' → logprob: -15.750015258789062
    7. '0' → logprob: -16.750015258789062
    8. '),' → logprob: -16.750015258789062
    9. ','' → logprob: -16.875015258789062
    10. '',' → logprob: -17.500015258789062

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15366674959659576
    2. ' ' → logprob: -2.0286667346954346
    3. 'x' → logprob: -5.153666973114014
    4. ' x' → logprob: -5.903666973114014
    5. '1' → logprob: -6.028666973114014
    6. '   ' → logprob: -12.653666496276855
    7. '-' → logprob: -13.153666496276855
    8. ''x' → logprob: -13.278666496276855
    9. '(x' → logprob: -13.653666496276855
    10. '  ' → logprob: -14.028666496276855

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0051248883828520775
    2. 'x' → logprob: -5.630125045776367
    3. '1' → logprob: -6.755125045776367
    4. ' ' → logprob: -8.255125045776367
    5. ' x' → logprob: -10.380125045776367
    6. ''x' → logprob: -10.380125045776367
    7. ''' → logprob: -10.755125045776367
    8. '{'' → logprob: -11.755125045776367
    9. '''' → logprob: -12.880125045776367
    10. '-' → logprob: -13.255125045776367

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759760141372681
    2. ' if' → logprob: -0.8259760141372681
    3. '0' → logprob: -11.200976371765137
    4. ')' → logprob: -11.450976371765137
    5. 'x' → logprob: -12.825976371765137
    6. '1' → logprob: -13.075976371765137
    7. '   ' → logprob: -13.825976371765137
    8. 'b' → logprob: -13.950976371765137
    9. '

' → logprob: -13.950976371765137
    10. '```' → logprob: -14.450976371765137

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269282102584839
    2. ' x' → logprob: -2.1269283294677734
    3. '	x' → logprob: -16.376928329467773
    4. ')x' → logprob: -16.376928329467773
    5. '(x' → logprob: -17.126928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '  ' → logprob: -19.501928329467773
    9. '{x' → logprob: -19.501928329467773
    10. ')' → logprob: -19.751928329467773

Token 137: '[' (ID: 58)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43115293979644775
    2. '[' → logprob: -1.0561529397964478
    3. ' x' → logprob: -7.306152820587158
    4. '==' → logprob: -7.431152820587158
    5. '1' → logprob: -8.306153297424316
    6. '<|end|>' → logprob: -8.681153297424316
    7. ' ==' → logprob: -9.181153297424316
    8. ' ' → logprob: -9.806153297424316
    9. '.' → logprob: -9.806153297424316
    10. '<|end|>' → logprob: -9.931153297424316

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08508419990539551
    2. '[' → logprob: -3.0850841999053955
    3. ''s' → logprob: -4.085083961486816
    4. 'start' → logprob: -4.335083961486816
    5. ''' → logprob: -5.960083961486816
    6. '0' → logprob: -6.835083961486816
    7. 'x' → logprob: -7.835083961486816
    8. '['' → logprob: -7.835083961486816
    9. ''x' → logprob: -7.835083961486816
    10. '[start' → logprob: -8.085083961486816

Token 139: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5553683042526245
    2. '=='' → logprob: -1.3053683042526245
    3. ' ==' → logprob: -1.9303683042526245
    4. ']' → logprob: -5.430368423461914
    5. ']=='' → logprob: -5.805368423461914
    6. ']==' → logprob: -7.055368423461914
    7. ''' → logprob: -7.430368423461914
    8. '[' → logprob: -7.805368423461914
    9. ')' → logprob: -8.305368423461914
    10. ' =='' → logprob: -8.305368423461914

Token 140: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.018915843218564987
    2. 'end' → logprob: -4.01891565322876
    3. ''end' → logprob: -7.89391565322876
    4. ' start' → logprob: -8.893916130065918
    5. ''' → logprob: -8.893916130065918
    6. ''s' → logprob: -9.268916130065918
    7. 's' → logprob: -11.768916130065918
    8. ' end' → logprob: -12.768916130065918
    9. 'e' → logprob: -13.018916130065918
    10. 'star' → logprob: -13.143916130065918

Token 141: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08897338807582855
    2. 'else' → logprob: -2.4639732837677
    3. ')' → logprob: -10.463973045349121
    4. '	else' → logprob: -12.838973045349121
    5. ' ' → logprob: -13.838973045349121
    6. '))' → logprob: -15.088973045349121
    7. '0' → logprob: -15.463973045349121
    8. ' )' → logprob: -15.463973045349121
    9. '),' → logprob: -15.963973045349121
    10. '1' → logprob: -16.088973999023438

Token 142: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38688820600509644
    2. 'else' → logprob: -1.1368882656097412
    3. ')' → logprob: -11.26188850402832
    4. '	else' → logprob: -13.13688850402832
    5. '0' → logprob: -14.26188850402832
    6. ' ' → logprob: -14.76188850402832
    7. '```' → logprob: -15.26188850402832
    8. '1' → logprob: -15.63688850402832
    9. ' )' → logprob: -15.88688850402832
    10. '))' → logprob: -16.26188850402832

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132723271846771
    2. ' ' → logprob: -1.3132723569869995
    3. '0' → logprob: -11.938272476196289
    4. '   ' → logprob: -13.438272476196289
    5. ' -' → logprob: -13.938272476196289
    6. '  ' → logprob: -14.063272476196289
    7. '-' → logprob: -14.688272476196289
    8. ' ' → logprob: -16.25077247619629
    9. ''' → logprob: -16.31327247619629
    10. ')' → logprob: -16.93827247619629

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009287334396503866
    2. ' ' → logprob: -7.00092887878418
    3. '0' → logprob: -11.25092887878418
    4. '-' → logprob: -13.00092887878418
    5. ' -' → logprob: -14.25092887878418
    6. ''' → logprob: -14.87592887878418
    7. '   ' → logprob: -15.06342887878418
    8. ')' → logprob: -16.18842887878418
    9. '  ' → logprob: -16.37592887878418
    10. '2' → logprob: -16.43842887878418

Token 145: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004695937503129244
    2. '))
' → logprob: -5.379695892333984
    3. '))

' → logprob: -9.754695892333984
    4. ' ))' → logprob: -11.754695892333984
    5. ')' → logprob: -12.254695892333984
    6. '))
' → logprob: -13.379695892333984
    7. ')))' → logprob: -13.629695892333984
    8. '   ' → logprob: -14.129695892333984
    9. '))


' → logprob: -14.879695892333984
    10. '));' → logprob: -15.254695892333984

Token 146: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03205426037311554
    2. '    
' → logprob: -4.782054424285889
    3. ' count' → logprob: -4.782054424285889
    4. 'count' → logprob: -4.782054424285889
    5. ' active' → logprob: -6.532054424285889
    6. '
' → logprob: -6.532054424285889
    7. ' current' → logprob: -7.157054424285889
    8. 'active' → logprob: -7.407054424285889
    9. ' counter' → logprob: -7.407054424285889
    10. 'current' → logprob: -7.782054424285889

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08246568590402603
    2. 'max' → logprob: -3.707465648651123
    3. 'current' → logprob: -3.957465648651123
    4. 'count' → logprob: -4.332465648651123
    5. 'active' → logprob: -5.207465648651123
    6. ' current' → logprob: -5.457465648651123
    7. 'se' → logprob: -6.207465648651123
    8. ' max' → logprob: -6.457465648651123
    9. 'rooms' → logprob: -6.457465648651123
    10. ' active' → logprob: -6.832465648651123

Token 148: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.623641848564148
    2. 'max' → logprob: -1.623641848564148
    3. 'count' → logprob: -2.2486419677734375
    4. '   ' → logprob: -2.6236419677734375
    5. ' current' → logprob: -3.7486419677734375
    6. 'ongo' → logprob: -4.1236419677734375
    7. 'cnt' → logprob: -4.3736419677734375
    8. 'active' → logprob: -4.9986419677734375
    9. 'rooms' → logprob: -5.2486419677734375
    10. ' max' → logprob: -5.4986419677734375

Token 149: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1362553834915161
    2. '_overlap' → logprob: -1.5112553834915161
    3. '_se' → logprob: -1.6362553834915161
    4. '_' → logprob: -1.7612553834915161
    5. '_rooms' → logprob: -2.8862552642822266
    6. '_active' → logprob: -4.511255264282227
    7. '_over' → logprob: -4.761255264282227
    8. ' =' → logprob: -4.886255264282227
    9. '=' → logprob: -5.261255264282227
    10. '_max' → logprob: -6.636255264282227

Token 150: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231249332427979
    2. '0' → logprob: -0.8981249332427979
    3. '  ' → logprob: -14.273124694824219
    4. '<|end|>' → logprob: -15.398124694824219
    5. '   ' → logprob: -15.710624694824219
    6. '```' → logprob: -15.773124694824219
    7. '=' → logprob: -16.08562469482422
    8. '1' → logprob: -16.77312469482422
    9. ' ' → logprob: -17.02312469482422
    10. 's' → logprob: -17.58562469482422

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '1' → logprob: -18.500261306762695
    4. '```' → logprob: -18.625261306762695
    5. '000' → logprob: -18.750261306762695
    6. '   ' → logprob: -18.875261306762695
    7. '۰' → logprob: -19.000261306762695
    8. '  ' → logprob: -19.250261306762695
    9. 'current' → logprob: -19.375261306762695
    10. '<|end|>' → logprob: -19.750261306762695

Token 152: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.63093101978302
    2. '
' → logprob: -1.00593101978302
    3. '   ' → logprob: -2.6309309005737305
    4. ' max' → logprob: -4.0059309005737305
    5. '    
' → logprob: -4.7559309005737305
    6. 'result' → logprob: -6.6309309005737305
    7. 'maximum' → logprob: -6.7559309005737305
    8. ' maximum' → logprob: -8.75593090057373
    9. 'for' → logprob: -9.25593090057373
    10. ' for' → logprob: -9.50593090057373

Token 153: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0666709616780281
    2. ' max' → logprob: -3.3166708946228027
    3. '   ' → logprob: -4.066670894622803
    4. '
' → logprob: -5.066670894622803
    5. 'result' → logprob: -6.066670894622803
    6. 'maximum' → logprob: -6.816670894622803
    7. '    
' → logprob: -7.816670894622803
    8. 'maxlength' → logprob: -8.441671371459961
    9. 'for' → logprob: -8.691671371459961
    10. ' maximum' → logprob: -8.941671371459961

Token 154: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0008975276723504066
    2. 'maximum' → logprob: -7.375897407531738
    3. ' max' → logprob: -8.625897407531738
    4. '   ' → logprob: -10.250897407531738
    5. 'answer' → logprob: -10.500897407531738
    6. 'ans' → logprob: -11.000897407531738
    7. 'result' → logprob: -12.000897407531738
    8. 'res' → logprob: -13.125897407531738
    9. '    
' → logprob: -13.375897407531738
    10. ' maximum' → logprob: -13.875897407531738

Token 155: '_overlap' (ID: 179163)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.014521914534270763
    2. '_' → logprob: -4.764522075653076
    3. '_count' → logprob: -6.014522075653076
    4. '_overlap' → logprob: -6.139522075653076
    5. 'current' → logprob: -7.889522075653076
    6. '_rooms' → logprob: -8.014521598815918
    7. '_con' → logprob: -8.889521598815918
    8. '_se' → logprob: -9.514521598815918
    9. '(current' → logprob: -10.014521598815918
    10. '_over' → logprob: -10.014521598815918

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740876853466034
    2. '=' → logprob: -0.9740877151489258
    3. ' ' → logprob: -12.099087715148926
    4. '   ' → logprob: -12.474087715148926
    5. '=max' → logprob: -14.474087715148926
    6. '  ' → logprob: -14.974087715148926
    7. '=current' → logprob: -15.724087715148926
    8. ',' → logprob: -16.72408676147461
    9. ')' → logprob: -16.97408676147461
    10. 's' → logprob: -16.97408676147461

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236837547272444
    2. ' ' → logprob: -5.255236625671387
    3. '   ' → logprob: -12.755236625671387
    4. '  ' → logprob: -17.755237579345703
    5. 'max' → logprob: -18.442737579345703
    6. '=' → logprob: -18.442737579345703
    7. 'current' → logprob: -18.692737579345703
    8. ' ' → logprob: -19.005237579345703
    9. '1' → logprob: -19.067737579345703
    10. '(' → logprob: -19.880237579345703

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.12502670288086
    4. 'max' → logprob: -17.37502670288086
    5. 'current' → logprob: -17.62502670288086
    6. '۰' → logprob: -20.12502670288086
    7. '000' → logprob: -20.56252670288086
    8. '1' → logprob: -20.56252670288086
    9. '  ' → logprob: -20.62502670288086
    10. '```' → logprob: -20.75002670288086

Token 159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7277958989143372
    2. '   ' → logprob: -1.1027958393096924
    3. ' for' → logprob: -2.2277958393096924
    4. 'for' → logprob: -2.6027958393096924
    5. '    
' → logprob: -5.8527960777282715
    6. '  
' → logprob: -8.477795600891113
    7. '\n' → logprob: -9.852795600891113
    8. ' 
' → logprob: -10.102795600891113
    9. '   
' → logprob: -10.602795600891113
    10. '
' → logprob: -10.977795600891113

Token 160: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2864636480808258
    2. ' for' → logprob: -1.5364636182785034
    3. '   ' → logprob: -3.411463737487793
    4. '
' → logprob: -7.161463737487793
    5. '    
' → logprob: -8.786463737487793
    6. '  
' → logprob: -11.786463737487793
    7. ' 
' → logprob: -12.286463737487793
    8. '	for' → logprob: -12.286463737487793
    9. '\n' → logprob: -13.161463737487793
    10. '   
' → logprob: -13.911463737487793

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.5716304410016164e-05
    2. ' for' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.125035285949707
    4. '
' → logprob: -18.250036239624023
    5. '```' → logprob: -19.750036239624023
    6. '	for' → logprob: -20.000036239624023
    7. '    
' → logprob: -20.625036239624023
    8. 'For' → logprob: -22.500036239624023
    9. ' ' → logprob: -23.500036239624023
    10. ' 
' → logprob: -23.750036239624023

Token 162: ' _,' (ID: 18042)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.49182119965553284
    2. '_,' → logprob: -0.9918211698532104
    3. ' time' → logprob: -4.4918212890625
    4. 'event' → logprob: -5.4918212890625
    5. ' _,' → logprob: -6.8668212890625
    6. '_time' → logprob: -7.4918212890625
    7. 'point' → logprob: -8.4918212890625
    8. 'e' → logprob: -8.6168212890625
    9. 'pos' → logprob: -8.8668212890625
    10. ' event' → logprob: -10.1168212890625

Token 163: ' typ' (ID: 5378)
  Prédit: 'etype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'etype' → logprob: -0.6191575527191162
    2. 'event' → logprob: -0.8691575527191162
    3. 'typ' → logprob: -3.869157552719116
    4. 'e' → logprob: -4.119157791137695
    5. 'tp' → logprob: -6.619157791137695
    6. 'et' → logprob: -6.619157791137695
    7. 'ev' → logprob: -7.119157791137695
    8. 't' → logprob: -7.369157791137695
    9. 'evt' → logprob: -7.619157791137695
    10. 'type' → logprob: -7.869157791137695

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26992183923721313
    2. 'in' → logprob: -1.6449217796325684
    3. 'e' → logprob: -3.1449217796325684
    4. 'a' → logprob: -8.769922256469727
    5. 'y' → logprob: -10.144922256469727
    6. ',' → logprob: -10.269922256469727
    7. 'o' → logprob: -10.394922256469727
    8. 'ed' → logprob: -10.644922256469727
    9. 'ine' → logprob: -11.519922256469727
    10. 'en' → logprob: -11.519922256469727

Token 165: ' events' (ID: 6124)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.003177952254191041
    2. ' events' → logprob: -5.753178119659424
    3. '(events' → logprob: -15.503177642822266
    4. '_events' → logprob: -18.253177642822266
    5. '.events' → logprob: -18.503177642822266
    6. '
' → logprob: -20.128177642822266
    7. ' ' → logprob: -20.878177642822266
    8. '   ' → logprob: -21.128177642822266
    9. 'vents' → logprob: -21.503177642822266
    10. 'Events' → logprob: -21.753177642822266

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16089540719985962
    2. ':
' → logprob: -1.9108953475952148
    3. '):
' → logprob: -7.660895347595215
    4. '):' → logprob: -9.910895347595215
    5. '=' → logprob: -10.285895347595215
    6. '   ' → logprob: -10.410895347595215
    7. '==' → logprob: -10.535895347595215
    8. ',' → logprob: -10.660895347595215
    9. ':

' → logprob: -11.410895347595215
    10. ' in' → logprob: -12.285895347595215

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005891331238672137
    2. '   ' → logprob: -8.625589370727539
    3. ' if' → logprob: -8.750589370727539
    4. '<|end|>' → logprob: -9.375589370727539
    5. '        
' → logprob: -9.750589370727539
    6. '    ' → logprob: -10.375589370727539
    7. '    
' → logprob: -11.125589370727539
    8. ',' → logprob: -11.250589370727539
    9. '
' → logprob: -11.500589370727539
    10. ':' → logprob: -11.875589370727539

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3342660367488861
    2. 'if' (adapté à ' if') → logprob: -1.8342660665512085
    3. '       ' → logprob: -2.084265947341919
    4. '   ' → logprob: -11.95926570892334
    5. '	if' → logprob: -13.95926570892334
    6. '    ' → logprob: -16.209266662597656
    7. ' ' → logprob: -16.334266662597656
    8. 'If' → logprob: -16.584266662597656
    9. '           ' → logprob: -17.459266662597656
    10. '      ' → logprob: -17.459266662597656

Token 169: ' typ' (ID: 5378)
  Prédit: 'typ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'typ' → logprob: -0.5759397745132446
    2. ' typ' → logprob: -0.8259397745132446
    3. '_typ' → logprob: -15.325940132141113
    4. '.typ' → logprob: -16.825939178466797
    5. 'Typ' → logprob: -17.200939178466797
    6. ' ' → logprob: -17.700939178466797
    7. 'ty' → logprob: -19.575939178466797
    8. '   ' → logprob: -20.325939178466797
    9. 'type' → logprob: -20.450939178466797
    10. 'typen' → logprob: -20.700939178466797

Token 170: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.203215554356575
    2. ' ==' → logprob: -1.7032155990600586
    3. '=='' → logprob: -6.328215599060059
    4. '=="' → logprob: -11.828215599060059
    5. '==
' → logprob: -12.328215599060059
    6. '=' → logprob: -13.078215599060059
    7. ' =='' → logprob: -14.203215599060059
    8. ')' → logprob: -14.828215599060059
    9. '===' → logprob: -15.453215599060059
    10. ')==' → logprob: -15.828215599060059

Token 171: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018182717263698578
    2. ' '' → logprob: -4.018182754516602
    3. ''s' → logprob: -11.143182754516602
    4. '"' → logprob: -11.643182754516602
    5. 'start' → logprob: -12.018182754516602
    6. ' ' → logprob: -12.893182754516602
    7. '   ' → logprob: -15.393182754516602
    8. ' start' → logprob: -15.393182754516602
    9. ':start' → logprob: -15.768182754516602
    10. ''end' → logprob: -16.3931827545166

Token 172: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.128163257315464e-07
    2. ' start' → logprob: -15.875
    3. 'end' → logprob: -16.625
    4. 'star' → logprob: -19.25
    5. 's' → logprob: -20.0
    6. ''' → logprob: -21.0
    7. ''s' → logprob: -21.375
    8. 'sta' → logprob: -22.0
    9. '	start' → logprob: -22.0
    10. '_start' → logprob: -22.125

Token 173: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5470420718193054
    2. ''):
' → logprob: -2.29704213142395
    3. '':' → logprob: -2.42204213142395
    4. ':' → logprob: -2.54704213142395
    5. '):
' → logprob: -2.67204213142395
    6. ':
' → logprob: -2.67204213142395
    7. '):' → logprob: -4.547041893005371
    8. '       ' → logprob: -6.422041893005371
    9. ''):' → logprob: -6.672041893005371
    10. ')' → logprob: -7.047041893005371

Token 174: '           ' (ID: 352)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5091823935508728
    2. '       ' → logprob: -1.7591824531555176
    3. 'current' → logprob: -2.0091824531555176
    4. '           ' → logprob: -2.3841824531555176
    5. '
' → logprob: -8.38418197631836
    6. '   ' → logprob: -9.13418197631836
    7. '```' → logprob: -9.88418197631836
    8. '	current' → logprob: -10.38418197631836
    9. '(current' → logprob: -10.75918197631836
    10. '        
' → logprob: -11.00918197631836

Token 175: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.313273549079895
    2. 'current' (adapté à ' current') → logprob: -1.313273549079895
    3. '   ' → logprob: -12.063273429870605
    4. '           ' → logprob: -12.313273429870605
    5. '       ' → logprob: -13.813273429870605
    6. '               ' → logprob: -15.188273429870605
    7. '	current' → logprob: -15.688273429870605
    8. '
' → logprob: -17.313274383544922
    9. '_current' → logprob: -17.938274383544922
    10. '.current' → logprob: -18.063274383544922

Token 176: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931672692298889
    2. '+=' → logprob: -0.6931672692298889
    3. ']+=' → logprob: -11.693167686462402
    4. '+' → logprob: -12.068167686462402
    5. '   ' → logprob: -12.068167686462402
    6. '+="' → logprob: -16.818166732788086
    7. '=' → logprob: -17.318166732788086
    8. '    ' → logprob: -17.443166732788086
    9. ' +' → logprob: -17.818166732788086
    10. '+='' → logprob: -17.943166732788086

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -18.625261306762695
    4. '   ' → logprob: -19.250261306762695
    5. '<|end|>' → logprob: -21.250261306762695
    6. '0' → logprob: -22.500261306762695
    7. '  ' → logprob: -22.625261306762695
    8. ' ' → logprob: -23.312761306762695
    9. '۱' → logprob: -23.437761306762695
    10. '2' → logprob: -23.500261306762695

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -22.375001907348633
    6. '2' → logprob: -22.750001907348633
    7. '１' → logprob: -23.125001907348633
    8. '۱' → logprob: -23.125001907348633
    9. '
' → logprob: -23.312501907348633
    10. '-' → logprob: -23.375001907348633

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25171416997909546
    2. '       ' → logprob: -2.1267142295837402
    3. '           ' → logprob: -3.0017142295837402
    4. '<|end|>' → logprob: -3.5017142295837402
    5. '   ' → logprob: -4.25171422958374
    6. 'max' → logprob: -5.75171422958374
    7. ' max' → logprob: -6.12671422958374
    8. '    
' → logprob: -6.62671422958374
    9. '(max' → logprob: -8.001713752746582
    10. ',' → logprob: -8.126713752746582

Token 180: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25838789343833923
    2. '           ' → logprob: -2.383387804031372
    3. '       ' → logprob: -2.383387804031372
    4. '   ' → logprob: -3.383387804031372
    5. ' max' → logprob: -5.508388042449951
    6. 'max' → logprob: -5.883388042449951
    7. ' else' → logprob: -7.383388042449951
    8. 'else' → logprob: -7.508388042449951
    9. '    
' → logprob: -7.883388042449951
    10. '
' → logprob: -8.508387565612793

Token 181: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05396827310323715
    2. ' max' → logprob: -3.0539681911468506
    3. 'if' (adapté à ' if') → logprob: -5.55396842956543
    4. ' if' → logprob: -6.80396842956543
    5. '           ' → logprob: -7.92896842956543
    6. '   ' → logprob: -11.05396842956543
    7. '       ' → logprob: -12.55396842956543
    8. '
' → logprob: -13.42896842956543
    9. ' ' → logprob: -13.55396842956543
    10. '	max' → logprob: -13.80396842956543

Token 182: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.023257127031683922
    2. 'current' → logprob: -3.77325701713562
    3. ' max' → logprob: -11.5232572555542
    4. 'max' → logprob: -13.5232572555542
    5. '	current' → logprob: -15.8982572555542
    6. ' ' → logprob: -16.523256301879883
    7. '(current' → logprob: -16.898256301879883
    8. ' ' → logprob: -17.898256301879883
    9. '   ' → logprob: -18.648256301879883
    10. '_current' → logprob: -19.273256301879883

Token 183: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3132653534412384
    2. ' >' → logprob: -1.313265323638916
    3. ' ' → logprob: -13.313265800476074
    4. '   ' → logprob: -14.313265800476074
    5. '">' → logprob: -15.063265800476074
    6. ' ' → logprob: -15.063265800476074
    7. '<|end|>' → logprob: -15.813265800476074
    8. ')>' → logprob: -16.563264846801758
    9. '  ' → logprob: -16.563264846801758
    10. '>

' → logprob: -16.688264846801758

Token 184: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2014133334159851
    2. ' max' → logprob: -1.7014133930206299
    3. '	max' → logprob: -18.076414108276367
    4. '(max' → logprob: -18.951414108276367
    5. '=max' → logprob: -19.326414108276367
    6. '_max' → logprob: -19.326414108276367
    7. '           ' → logprob: -20.076414108276367
    8. '[max' → logprob: -20.576414108276367
    9. '
' → logprob: -21.701414108276367
    10. '.max' → logprob: -21.951414108276367

Token 185: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -5.512236498361744e-07
    2. 'over' → logprob: -15.375000953674316
    3. '_' → logprob: -16.0
    4. '```' → logprob: -17.375
    5. ' overlap' → logprob: -17.875
    6. 'max' → logprob: -17.875
    7. '   ' → logprob: -18.125
    8. '_max' → logprob: -18.5
    9. 'Overlap' → logprob: -18.875
    10. '\' → logprob: -19.25

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09135455638170242
    2. ':
' → logprob: -2.4663546085357666
    3. '):
' → logprob: -7.3413543701171875
    4. '               ' → logprob: -7.4663543701171875
    5. '):' → logprob: -7.8413543701171875
    6. '<|end|>' → logprob: -7.9663543701171875
    7. ')' → logprob: -8.716354370117188
    8. '           ' → logprob: -8.966354370117188
    9. '       ' → logprob: -10.216354370117188
    10. 'max' → logprob: -10.466354370117188

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08918438106775284
    2. ' max' → logprob: -2.589184284210205
    3. 'max' → logprob: -4.589184284210205
    4. '           ' → logprob: -10.089184761047363
    5. '(max' → logprob: -11.214184761047363
    6. '                   ' → logprob: -11.964184761047363
    7. '[max' → logprob: -12.464184761047363
    8. '=max' → logprob: -12.839184761047363
    9. '	max' → logprob: -12.964184761047363
    10. '_max' → logprob: -13.214184761047363

Token 188: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.025145666673779488
    2. 'max' (adapté à ' max') → logprob: -3.7751457691192627
    3. '                   ' → logprob: -6.400145530700684
    4. '               ' → logprob: -8.400145530700684
    5. '           ' → logprob: -12.525145530700684
    6. '                       ' → logprob: -12.650145530700684
    7. '
' → logprob: -13.900145530700684
    8. '                ' → logprob: -14.150145530700684
    9. '_max' → logprob: -14.150145530700684
    10. '	max' → logprob: -14.275145530700684

Token 189: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.500005722045898
    3. 'over' → logprob: -14.000005722045898
    4. '\' → logprob: -15.625005722045898
    5. 'max' → logprob: -15.750005722045898
    6. '_over' → logprob: -15.750005722045898
    7. '```' → logprob: -16.1250057220459
    8. ' _' → logprob: -16.1250057220459
    9. '
' → logprob: -16.3750057220459
    10. '           ' → logprob: -16.5000057220459

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401917457581
    2. '=' → logprob: -0.8259401917457581
    3. '                ' → logprob: -15.825940132141113
    4. '=max' → logprob: -15.825940132141113
    5. '=current' → logprob: -16.07594108581543
    6. ' ' → logprob: -16.32594108581543
    7. '               ' → logprob: -16.57594108581543
    8. '<|end|>' → logprob: -16.70094108581543
    9. '＝' → logprob: -16.82594108581543
    10. '                   ' → logprob: -16.95094108581543

Token 191: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.07888989895582199
    2. 'current' → logprob: -2.578889846801758
    3. '               ' → logprob: -16.953889846801758
    4. '(current' → logprob: -17.578889846801758
    5. '$current' → logprob: -18.078889846801758
    6. '	current' → logprob: -18.328889846801758
    7. '[current' → logprob: -18.953889846801758
    8. '_current' → logprob: -19.953889846801758
    9. '=current' → logprob: -19.953889846801758
    10. ',current' → logprob: -20.203889846801758

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019385118503123522
    2. '
' → logprob: -7.126938343048096
    3. '<|end|>' → logprob: -7.251938343048096
    4. 'else' → logprob: -8.751938819885254
    5. ' else' → logprob: -9.001938819885254
    6. '<|end|>' → logprob: -9.751938819885254
    7. '\n' → logprob: -10.751938819885254
    8. '        
' → logprob: -11.251938819885254
    9. '   ' → logprob: -11.376938819885254
    10. 'elif' → logprob: -11.751938819885254

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007447104435414076
    2. ' else' → logprob: -7.875744819641113
    3. 'else' → logprob: -8.000744819641113
    4. 'elif' → logprob: -11.375744819641113
    5. '   ' → logprob: -11.625744819641113
    6. ' elif' → logprob: -12.625744819641113
    7. '
' → logprob: -13.250744819641113
    8. '```' → logprob: -13.500744819641113
    9. '<|end|>' → logprob: -14.250744819641113
    10. ')' → logprob: -14.250744819641113

Token 194: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5281729102134705
    2. 'else' (adapté à ' else') → logprob: -1.2781729698181152
    3. ' else' → logprob: -2.0281729698181152
    4. '   ' → logprob: -9.278172492980957
    5. 'elif' → logprob: -9.403172492980957
    6. ' elif' → logprob: -10.903172492980957
    7. '```' → logprob: -13.528172492980957
    8. '	else' → logprob: -13.778172492980957
    9. '
' → logprob: -15.903172492980957
    10. ' ' → logprob: -16.278173446655273

Token 195: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6488654017448425
    2. ':
' → logprob: -1.2738654613494873
    3. ':' → logprob: -1.6488654613494873
    4. '       ' → logprob: -6.023865222930908
    5. 'current' → logprob: -6.648865222930908
    6. '   ' → logprob: -7.148865222930908
    7. ' current' → logprob: -7.148865222930908
    8. '               ' → logprob: -11.023865699768066
    9. '          ' → logprob: -11.898865699768066
    10. '         ' → logprob: -12.648865699768066

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011159120127558708
    2. 'current' → logprob: -5.2611589431762695
    3. ' current' → logprob: -5.7611589431762695
    4. '       ' → logprob: -6.0111589431762695
    5. '   ' → logprob: -8.26115894317627
    6. '
' → logprob: -10.88615894317627
    7. ':
' → logprob: -11.01115894317627
    8. '               ' → logprob: -12.26115894317627
    9. ':' → logprob: -12.51115894317627
    10. '	       ' → logprob: -13.01115894317627

Token 197: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.006715728435665369
    2. ' current' → logprob: -5.006715774536133
    3. '           ' → logprob: -14.756715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '       ' → logprob: -19.006715774536133
    6. '	current' → logprob: -20.131715774536133
    7. '.current' → logprob: -22.631715774536133
    8. '(current' → logprob: -22.756715774536133
    9. '               ' → logprob: -23.131715774536133
    10. 'Current' → logprob: -23.256715774536133

Token 198: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6957796216011047
    2. '-=' → logprob: -0.6957796216011047
    3. '-' → logprob: -5.945779800415039
    4. '   ' → logprob: -12.195779800415039
    5. ' -' → logprob: -12.695779800415039
    6. '+=' → logprob: -13.320779800415039
    7. '           ' → logprob: -13.445779800415039
    8. '=' → logprob: -14.945779800415039
    9. ' +=' → logprob: -15.820779800415039
    10. '    ' → logprob: -16.07077980041504

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.504077911376953
    4. '```' → logprob: -18.879077911376953
    5. '0' → logprob: -19.754077911376953
    6. '<|end|>' → logprob: -20.004077911376953
    7. ' ' → logprob: -20.879077911376953
    8. '           ' → logprob: -21.879077911376953
    9. '=' → logprob: -21.879077911376953
    10. '１' → logprob: -22.004077911376953

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.0
    4. '<|end|>' → logprob: -20.5
    5. '   ' → logprob: -20.75
    6. '0' → logprob: -22.0
    7. '-' → logprob: -22.625
    8. '１' → logprob: -22.9375
    9. '१' → logprob: -23.125
    10. '۱' → logprob: -23.1875

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06842387467622757
    2. '   ' → logprob: -2.9434239864349365
    3. '    
' → logprob: -4.443423748016357
    4. '<|end|>' → logprob: -7.318423748016357
    5. 'print' → logprob: -7.818423748016357
    6. '

' → logprob: -8.568424224853516
    7. '
    
' → logprob: -9.193424224853516
    8. '  
' → logprob: -9.318424224853516
    9. '```' → logprob: -9.693424224853516
    10. '
' → logprob: -9.943424224853516

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07429730892181396
    2. '
' → logprob: -3.0742974281311035
    3. '    
' → logprob: -4.3242974281311035
    4. 'print' → logprob: -4.4492974281311035
    5. '```' → logprob: -8.824296951293945
    6. 'if' → logprob: -8.949296951293945
    7. '<|end|>' → logprob: -9.824296951293945
    8. 'return' → logprob: -10.074296951293945
    9. '        
' → logprob: -10.699296951293945
    10. '  
' → logprob: -11.074296951293945

Token 203: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29596903920173645
    2. 'print' → logprob: -1.545969009399414
    3. '
' → logprob: -3.545969009399414
    4. '    
' → logprob: -4.920969009399414
    5. '```' → logprob: -5.045969009399414
    6. ' print' → logprob: -7.670969009399414
    7. 'return' → logprob: -10.795969009399414
    8. '``' → logprob: -12.420969009399414
    9. '  
' → logprob: -12.545969009399414
    10. ' 
' → logprob: -12.795969009399414

Token 204: '2' (ID: 17)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.9252482056617737
    2. ' =' → logprob: -1.175248146057129
    3. 'e' → logprob: -1.425248146057129
    4. '=' → logprob: -3.925248146057129
    5. 't' → logprob: -4.425248146057129
    6. 'eat' → logprob: -4.925248146057129
    7. 'paces' → logprob: -5.675248146057129
    8. 'et' → logprob: -5.800248146057129
    9. 'eq' → logprob: -6.175248146057129
    10. 'y' → logprob: -7.050248146057129

Token 205: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.289478063583374
    2. ' =' → logprob: -1.664478063583374
    3. 'eq' → logprob: -3.664478063583374
    4. 'eat' → logprob: -4.289478302001953
    5. '2' → logprob: -4.789478302001953
    6. '=' → logprob: -4.789478302001953
    7. '_' → logprob: -6.289478302001953
    8. '_e' → logprob: -8.164478302001953
    9. 'se' → logprob: -8.164478302001953
    10. 'max' → logprob: -8.289478302001953

Token 206: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1269284337759018
    2. 'max' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. ' s' → logprob: -16.626928329467773
    5. 's' → logprob: -16.876928329467773
    6. '(max' → logprob: -17.126928329467773
    7. ' str' → logprob: -17.251928329467773
    8. '   ' → logprob: -17.251928329467773
    9. 'str' → logprob: -17.501928329467773
    10. '	max' → logprob: -18.126928329467773

Token 207: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.0001146291324403137
    2. 'over' → logprob: -9.125114440917969
    3. 'max' → logprob: -13.250114440917969
    4. '(max' → logprob: -13.750114440917969
    5. '(over' → logprob: -13.750114440917969
    6. 's' → logprob: -14.500114440917969
    7. '_over' → logprob: -14.750114440917969
    8. '_' → logprob: -15.000114440917969
    9. 'Overlap' → logprob: -15.875114440917969
    10. '```' → logprob: -16.25011444091797

Token 208: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6154713034629822
    2. '    
' → logprob: -1.365471363067627
    3. '   ' → logprob: -1.615471363067627
    4. '<|end|>' → logprob: -5.365471363067627
    5. '
    
' → logprob: -8.740470886230469
    6. 'print' → logprob: -8.865470886230469
    7. '<|end|>' → logprob: -8.990470886230469
    8. '    
    
' → logprob: -9.365470886230469
    9. '```' → logprob: -9.615470886230469
    10. '    ' → logprob: -9.865470886230469

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14478886127471924
    2. '    
' → logprob: -2.6447887420654297
    3. '
' → logprob: -2.7697887420654297
    4. 's' → logprob: -7.26978874206543
    5. '```' → logprob: -9.51978874206543
    6. 'n' → logprob: -9.64478874206543
    7. '#' → logprob: -9.89478874206543
    8. ' s' → logprob: -10.14478874206543
    9. 'print' → logprob: -10.26978874206543
    10. '        
' → logprob: -10.26978874206543

Token 210: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1682022362947464
    2. 'heap' → logprob: -2.0432021617889404
    3. 'pq' → logprob: -4.6682024002075195
    4. 'interval' → logprob: -5.2932024002075195
    5. '   ' → logprob: -5.7932024002075195
    6. 'se' → logprob: -5.9182024002075195
    7. '
' → logprob: -6.9182024002075195
    8. 's' → logprob: -7.1682024002075195
    9. 'import' → logprob: -7.2932024002075195
    10. 'min' → logprob: -7.5432024002075195

Token 211: ' Policy' (ID: 15282)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20104153454303741
    2. 's' → logprob: -2.0760414600372314
    3. ' s' → logprob: -4.0760416984558105
    4. ' #' → logprob: -4.0760416984558105
    5. 'heap' → logprob: -4.7010416984558105
    6. ' seats' → logprob: -5.9510416984558105
    7. 'interval' → logprob: -6.4510416984558105
    8. '   ' → logprob: -6.4510416984558105
    9. 'min' → logprob: -6.9510416984558105
    10. ' intervals' → logprob: -6.9510416984558105

Token 212: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012209402630105615
    2. '#' → logprob: -7.501220703125
    3. ' -' → logprob: -8.626220703125
    4. '2' → logprob: -8.876220703125
    5. '3' → logprob: -9.126220703125
    6. '1' → logprob: -9.126220703125
    7. ' #' → logprob: -9.501220703125
    8. ' ' → logprob: -10.626220703125
    9. '_' → logprob: -11.251220703125
    10. '=' → logprob: -11.501220703125

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023302311077713966
    2. '3' → logprob: -3.7733023166656494
    3. '2' → logprob: -10.77330207824707
    4. ' ' → logprob: -10.77330207824707
    5. '#' → logprob: -11.89830207824707
    6. 'def' → logprob: -12.52330207824707
    7. 's' → logprob: -13.64830207824707
    8. '0' → logprob: -13.89830207824707
    9. '-' → logprob: -14.39830207824707
    10. 'policy' → logprob: -14.83580207824707

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005607007071375847
    2. '   ' → logprob: -6.0056071281433105
    3. ' =' → logprob: -6.2556071281433105
    4. ' :' → logprob: -7.5056071281433105
    5. '#' → logprob: -8.755606651306152
    6. ':
' → logprob: -8.755606651306152
    7. ',' → logprob: -9.130606651306152
    8. 'heap' → logprob: -9.630606651306152
    9. '=' → logprob: -9.755606651306152
    10. ' intervals' → logprob: -10.880606651306152

Token 215: ' passengers' (ID: 37252)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2726786434650421
    2. ' intervals' → logprob: -1.8976786136627197
    3. '#' → logprob: -2.5226786136627197
    4. 'heap' → logprob: -5.647678852081299
    5. ' #' → logprob: -6.772678852081299
    6. 'import' → logprob: -6.772678852081299
    7. 'events' → logprob: -7.147678852081299
    8. ' heap' → logprob: -7.897678852081299
    9. '
' → logprob: -8.02267837524414
    10. 'end' → logprob: -9.27267837524414

Token 216: ' choose' (ID: 5655)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.03944459930062294
    2. ' =' → logprob: -3.4144446849823
    3. 'sort' → logprob: -5.914444446563721
    4. '=' → logprob: -6.164444446563721
    5. ' sort' → logprob: -7.914444446563721
    6. 'sorted' → logprob: -8.414444923400879
    7. '_sorted' → logprob: -9.164444923400879
    8. ' sorted' → logprob: -10.164444923400879
    9. 'interval' → logprob: -10.289444923400879
    10. ' intervals' → logprob: -10.289444923400879

Token 217: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.38496795296669006
    2. ' intervals' → logprob: -2.1349680423736572
    3. 'se' → logprob: -3.0099680423736572
    4. ' earliest' → logprob: -3.2599680423736572
    5. ' the' → logprob: -3.5099680423736572
    6. ' to' → logprob: -4.009967803955078
    7. 'interval' → logprob: -4.134967803955078
    8. 'the' → logprob: -4.384967803955078
    9. ' based' → logprob: -5.134967803955078
    10. ' their' → logprob: -5.259967803955078

Token 218: ' arbitr' (ID: 31157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6951578855514526
    2. 'interval' → logprob: -2.070158004760742
    3. ' intervals' → logprob: -2.445158004760742
    4. ' by' → logprob: -2.695158004760742
    5. '=' → logprob: -2.945158004760742
    6. ' based' → logprob: -3.195158004760742
    7. 'based' → logprob: -3.195158004760742
    8. 'by' → logprob: -4.070158004760742
    9. 'sorted' → logprob: -4.070158004760742
    10. '   ' → logprob: -4.320158004760742

Token 219: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.0033124617766588926
    2. 'arly' → logprob: -6.253312587738037
    3. 'ary' → logprob: -6.628312587738037
    4. 'ar' → logprob: -10.128312110900879
    5. '```' → logprob: -11.878312110900879
    6. '   ' → logprob: -12.753312110900879
    7. 'ari' → logprob: -13.253312110900879
    8. '#' → logprob: -13.753312110900879
    9. 'aly' → logprob: -14.253312110900879
    10. 'ately' → logprob: -14.378312110900879

Token 220: ',' (ID: 11)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8775547742843628
    2. '   ' → logprob: -1.2525547742843628
    3. '#' → logprob: -2.2525548934936523
    4. 'se' → logprob: -3.2525548934936523
    5. 'interval' → logprob: -3.7525548934936523
    6. '    
' → logprob: -3.7525548934936523
    7. '
' → logprob: -4.002554893493652
    8. ' heap' → logprob: -4.502554893493652
    9. ' intervals' → logprob: -4.627554893493652
    10. ',' → logprob: -4.877554893493652

Token 221: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5260449051856995
    2. 'heap' → logprob: -1.7760448455810547
    3. 'se' → logprob: -2.2760448455810547
    4. 'pq' → logprob: -3.5260448455810547
    5. ' seats' → logprob: -3.6510448455810547
    6. '   ' → logprob: -4.276044845581055
    7. ' heap' → logprob: -4.276044845581055
    8. ' #' → logprob: -4.526044845581055
    9. 'seat' → logprob: -4.901044845581055
    10. 's' → logprob: -5.276044845581055

Token 222: ' possible' (ID: 4149)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.45227426290512085
    2. 'interval' → logprob: -1.2022743225097656
    3. 'over' → logprob: -4.327274322509766
    4. ' seats' → logprob: -4.952274322509766
    5. 'se' → logprob: -5.202274322509766
    6. 'pass' → logprob: -5.327274322509766
    7. 'reserved' → logprob: -5.452274322509766
    8. 's' → logprob: -5.577274322509766
    9. ' n' → logprob: -5.952274322509766
    10. ' s' → logprob: -6.077274322509766

Token 223: ' orders' (ID: 12528)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.1294718980789185
    2. 'se' → logprob: -1.2544718980789185
    3. ' intervals' → logprob: -2.754471778869629
    4. '   ' → logprob: -3.379471778869629
    5. ' seats' → logprob: -3.379471778869629
    6. 'over' → logprob: -3.504471778869629
    7. '#' → logprob: -3.504471778869629
    8. 's' → logprob: -3.504471778869629
    9. 'reserv' → logprob: -3.754471778869629
    10. 'assign' → logprob: -3.879471778869629

Token 224: ' considered' (ID: 9474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4344942271709442
    2. '
' → logprob: -1.6844942569732666
    3. '#' → logprob: -2.8094942569732666
    4. '    
' → logprob: -3.1844942569732666
    5. ':' → logprob: -4.5594940185546875
    6. ',' → logprob: -4.6844940185546875
    7. 'heap' → logprob: -4.6844940185546875
    8. ':
' → logprob: -4.9344940185546875
    9. 'import' → logprob: -4.9344940185546875
    10. 'def' → logprob: -5.3094940185546875

Token 225: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6489676833152771
    2. '   ' → logprob: -1.1489677429199219
    3. 'se' → logprob: -2.773967742919922
    4. 'import' → logprob: -4.398967742919922
    5. '#' → logprob: -4.398967742919922
    6. 'seat' → logprob: -4.648967742919922
    7. 'available' → logprob: -4.898967742919922
    8. 'interval' → logprob: -4.898967742919922
    9. ' heap' → logprob: -5.023967742919922
    10. '
' → logprob: -5.148967742919922

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.552323043346405
    2. 'heap' → logprob: -1.3023231029510498
    3. 'se' → logprob: -2.80232310295105
    4. '#' → logprob: -3.42732310295105
    5. 'interval' → logprob: -3.92732310295105
    6. 'seat' → logprob: -4.677322864532471
    7. 'available' → logprob: -5.427322864532471
    8. '    
' → logprob: -5.677322864532471
    9. 'occupied' → logprob: -5.802322864532471
    10. 'import' → logprob: -6.052322864532471

Token 227: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7475796937942505
    2. 'interval' → logprob: -0.9975796937942505
    3. '#' (adapté à ' #') → logprob: -2.622579574584961
    4. 'se' → logprob: -3.372579574584961
    5. 'seat' → logprob: -4.497579574584961
    6. 'pq' → logprob: -5.247579574584961
    7. 'import' → logprob: -5.622579574584961
    8. ' intervals' → logprob: -5.997579574584961
    9. 'def' → logprob: -5.997579574584961
    10. 'end' → logprob: -6.122579574584961

Token 228: ' As' (ID: 1877)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.34872424602508545
    2. '#' → logprob: -1.8487242460250854
    3. 'heap' → logprob: -2.598724365234375
    4. 'se' → logprob: -4.348724365234375
    5. ' intervals' → logprob: -4.723724365234375
    6. 'seat' → logprob: -4.973724365234375
    7. 'import' → logprob: -5.223724365234375
    8. 'end' → logprob: -5.848724365234375
    9. 'dp' → logprob: -5.848724365234375
    10. 'pq' → logprob: -5.973724365234375

Token 229: ' per' (ID: 777)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.870715320110321
    2. ' the' → logprob: -1.9957153797149658
    3. ' explained' → logprob: -2.495715379714966
    4. ' described' → logprob: -2.995715379714966
    5. ' per' → logprob: -3.495715379714966
    6. ' a' → logprob: -3.495715379714966
    7. ' all' → logprob: -3.745715379714966
    8. 'the' → logprob: -3.870715379714966
    9. ' code' → logprob: -3.995715379714966
    10. 's' → logprob: -4.120715141296387

Token 230: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5230602025985718
    2. 'interval' → logprob: -1.5230602025985718
    3. ' the' → logprob: -2.7730603218078613
    4. ' problem' → logprob: -3.6480603218078613
    5. ' interval' → logprob: -3.8980603218078613
    6. 'problem' → logprob: -4.273060321807861
    7. ' your' → logprob: -4.398060321807861
    8. '```' → logprob: -4.898060321807861
    9. ' code' → logprob: -5.148060321807861
    10. 'your' → logprob: -5.398060321807861

Token 231: ''s' (ID: 885)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statement' → logprob: -0.5492660999298096
    2. 'description' → logprob: -1.7992660999298096
    3. ' statement' → logprob: -2.1742660999298096
    4. ',' → logprob: -2.5492660999298096
    5. ':' → logprob: -3.7992660999298096
    6. ' description' → logprob: -4.0492658615112305
    7. 'context' → logprob: -4.4242658615112305
    8. 'constraints' → logprob: -6.1742658615112305
    9. 's' → logprob: -6.2992658615112305
    10. ''s' → logprob: -6.6742658615112305

Token 232: ' explanation' (ID: 30547)
  Prédit: 'description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'description' → logprob: -0.6913836002349854
    2. ' description' → logprob: -1.0663836002349854
    3. 'statement' → logprob: -3.1913836002349854
    4. ' statement' → logprob: -3.3163836002349854
    5. 'comment' → logprob: -3.5663836002349854
    6. 'comments' → logprob: -4.066383361816406
    7. ' comments' → logprob: -4.941383361816406
    8. '#' → logprob: -5.066383361816406
    9. 'text' → logprob: -5.191383361816406
    10. ' comment' → logprob: -5.941383361816406

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49343904852867126
    2. '   ' → logprob: -0.9934390783309937
    3. '#' → logprob: -5.368439197540283
    4. ':' → logprob: -5.618439197540283
    5. 'heap' → logprob: -5.993439197540283
    6. ' ,' → logprob: -6.118439197540283
    7. '
' → logprob: -6.243439197540283
    8. 'import' → logprob: -6.493439197540283
    9. ',
' → logprob: -6.993439197540283
    10. '    
' → logprob: -7.493439197540283

Token 234: ' s' (ID: 265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2569953203201294
    2. 's' → logprob: -1.8819953203201294
    3. ' s' → logprob: -2.13199520111084
    4. 'print' → logprob: -2.13199520111084
    5. 'dp' → logprob: -2.63199520111084
    6. 'import' → logprob: -3.38199520111084
    7. ' print' → logprob: -3.38199520111084
    8. ' #' → logprob: -4.00699520111084
    9. ' answer' → logprob: -4.00699520111084
    10. ' seats' → logprob: -4.25699520111084

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15712736546993256
    2. '2' → logprob: -2.5321273803710938
    3. ' =' → logprob: -3.0321273803710938
    4. '=' → logprob: -4.282127380371094
    5. '3' → logprob: -5.907127380371094
    6. '=s' → logprob: -8.157127380371094
    7. 'import' → logprob: -8.782127380371094
    8. '#' → logprob: -9.657127380371094
    9. 's' → logprob: -10.032127380371094
    10. 'o' → logprob: -10.157127380371094

Token 236: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04869762435555458
    2. '=' → logprob: -3.0486977100372314
    3. ',' → logprob: -9.923697471618652
    4. 's' → logprob: -10.798697471618652
    5. '=int' → logprob: -11.673697471618652
    6. ' is' → logprob: -11.798697471618652
    7. '=s' → logprob: -12.548697471618652
    8. '=max' → logprob: -12.673697471618652
    9. ' can' → logprob: -13.173697471618652
    10. ')' → logprob: -13.298697471618652

Token 237: ' given' (ID: 4335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44036275148391724
    2. 's' → logprob: -1.3153626918792725
    3. 'max' → logprob: -3.0653626918792725
    4. ' n' → logprob: -3.8153626918792725
    5. 'len' → logprob: -5.190362930297852
    6. '1' → logprob: -5.315362930297852
    7. ' max' → logprob: -5.565362930297852
    8. ' s' → logprob: -5.815362930297852
    9. 'min' → logprob: -6.940362930297852
    10. '0' → logprob: -8.065362930297852

Token 238: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438738644123077
    2. ' =' → logprob: -3.449387311935425
    3. '=' → logprob: -4.074387550354004
    4. '    
' → logprob: -4.949387550354004
    5. ',' → logprob: -5.324387550354004
    6. 's' → logprob: -5.574387550354004
    7. '
' → logprob: -5.949387550354004
    8. ' s' → logprob: -6.574387550354004
    9. '#' → logprob: -7.324387550354004
    10. ' ' → logprob: -7.449387550354004

Token 239: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5375741124153137
    2. 'max' → logprob: -1.287574052810669
    3. 's' → logprob: -2.037574052810669
    4. 'len' → logprob: -6.162574291229248
    5. 'min' → logprob: -6.162574291229248
    6. '1' → logprob: -6.412574291229248
    7. '0' → logprob: -6.537574291229248
    8. 'heap' → logprob: -7.412574291229248
    9. ' max' → logprob: -7.537574291229248
    10. ' n' → logprob: -7.537574291229248

Token 240: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6096588969230652
    2. 'n' → logprob: -1.60965895652771
    3. 's' → logprob: -3.48465895652771
    4. 'minimum' → logprob: -3.48465895652771
    5. 'maximum' → logprob: -3.48465895652771
    6. 'len' → logprob: -3.60965895652771
    7. ' n' → logprob: -3.73465895652771
    8. 'interval' → logprob: -3.98465895652771
    9. ' intervals' → logprob: -4.359658718109131
    10. ' max' → logprob: -4.359658718109131

Token 241: ' size' (ID: 2349)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.0009006261825562
    2. 'b' → logprob: -2.1259007453918457
    3. 'over' → logprob: -2.2509007453918457
    4. 'heap' → logprob: -2.7509007453918457
    5. 'distance' → logprob: -3.2509007453918457
    6. 's' → logprob: -3.3759007453918457
    7. 'gap' → logprob: -3.7509007453918457
    8. 'end' → logprob: -3.8759007453918457
    9. 'number' → logprob: -3.8759007453918457
    10. ' of' → logprob: -4.000900745391846

Token 242: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9092323780059814
    2. '(interval' → logprob: -1.6592323780059814
    3. 'of' → logprob: -1.9092323780059814
    4. 'interval' → logprob: -2.0342323780059814
    5. '(max' → logprob: -4.034232139587402
    6. ' intervals' → logprob: -4.159232139587402
    7. 'max' → logprob: -4.284232139587402
    8. 's' → logprob: -4.409232139587402
    9. 'heap' → logprob: -4.659232139587402
    10. '(heap' → logprob: -5.034232139587402

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4258626699447632
    2. 'the' → logprob: -1.9258626699447632
    3. 'heap' → logprob: -2.1758627891540527
    4. 'an' → logprob: -3.6758627891540527
    5. ' a' → logprob: -3.9258627891540527
    6. 'interval' → logprob: -4.300862789154053
    7. ' the' → logprob: -4.550862789154053
    8. '[' → logprob: -5.550862789154053
    9. ' an' → logprob: -5.800862789154053
    10. 'any' → logprob: -5.925862789154053

Token 244: ' clique' (ID: 60301)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20862120389938354
    2. 'stack' → logprob: -1.8336212635040283
    3. 'max' → logprob: -4.708621025085449
    4. 'set' → logprob: -5.083621025085449
    5. 'cl' → logprob: -5.583621025085449
    6. 'chain' → logprob: -5.958621025085449
    7. '[' → logprob: -6.333621025085449
    8. 'interval' → logprob: -6.333621025085449
    9. ' heap' → logprob: -7.708621025085449
    10. 'min' → logprob: -8.20862102508545

Token 245: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013127753511071205
    2. '    
' → logprob: -5.01312780380249
    3. ',' → logprob: -6.26312780380249
    4. '<|end|>' → logprob: -7.01312780380249
    5. '
' → logprob: -7.26312780380249
    6. 'def' → logprob: -7.38812780380249
    7. ' =' → logprob: -7.38812780380249
    8. 'import' → logprob: -8.138127326965332
    9. ')' → logprob: -8.513127326965332
    10. '.' → logprob: -8.513127326965332

Token 246: ' the' (ID: 290)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6697295308113098
    2. 'interval' → logprob: -1.169729471206665
    3. ' the' → logprob: -1.919729471206665
    4. 'the' → logprob: -3.544729471206665
    5. '(interval' → logprob: -7.669729709625244
    6. ' interval' → logprob: -7.919729709625244
    7. ' an' → logprob: -8.044729232788086
    8. '```' → logprob: -8.044729232788086
    9. ' a' → logprob: -8.669729232788086
    10. '   ' → logprob: -8.794729232788086

Token 247: '
' (ID: 198)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04152859002351761
    2. ' intervals' → logprob: -3.6665287017822266
    3. ' interval' → logprob: -4.666528701782227
    4. 'graph' → logprob: -6.541528701782227
    5. 'intersection' → logprob: -6.791528701782227
    6. ' graph' → logprob: -6.916528701782227
    7. '```' → logprob: -7.166528701782227
    8. '   ' → logprob: -8.541528701782227
    9. 'over' → logprob: -8.666528701782227
    10. ' overlap' → logprob: -8.791528701782227

Token 248: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4064655005931854
    2. ' intervals' → logprob: -1.1564655303955078
    3. '#' → logprob: -5.156465530395508
    4. '   ' → logprob: -5.406465530395508
    5. 'heap' → logprob: -5.656465530395508
    6. ' interval' → logprob: -6.156465530395508
    7. 'graph' → logprob: -6.781465530395508
    8. ' heap' → logprob: -7.406465530395508
    9. ' #' → logprob: -7.906465530395508
    10. ' graph' → logprob: -8.281465530395508

Token 249: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04269665107131004
    2. ' intervals' → logprob: -3.292696714401245
    3. '#' (adapté à ' #') → logprob: -6.042696475982666
    4. 'graph' → logprob: -7.042696475982666
    5. ' interval' → logprob: -7.167696475982666
    6. '   ' → logprob: -8.542696952819824
    7. 'input' → logprob: -9.542696952819824
    8. ' graph' → logprob: -9.542696952819824
    9. '```' → logprob: -9.792696952819824
    10. ' #' → logprob: -10.417696952819824

Token 250: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.053386881947517395
    2. ' intervals' → logprob: -3.178386926651001
    3. '#' → logprob: -5.928386688232422
    4. 'heap' → logprob: -6.053386688232422
    5. 'import' → logprob: -6.428386688232422
    6. '```' → logprob: -6.803386688232422
    7. 'graph' → logprob: -6.928386688232422
    8. '[' → logprob: -8.053386688232422
    9. 'code' → logprob: -8.428386688232422
    10. '   ' → logprob: -8.428386688232422

Token 251: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6276498436927795
    2. 'graph' → logprob: -1.0026497840881348
    3. ' graph' → logprob: -2.5026497840881348
    4. ' intervals' → logprob: -5.127649784088135
    5. '_graph' → logprob: -5.877649784088135
    6. 'interval' → logprob: -6.252649784088135
    7. 'graphs' → logprob: -6.502649784088135
    8. ' list' → logprob: -6.502649784088135
    9. '   ' → logprob: -7.627649784088135
    10. 'list' → logprob: -7.752649784088135

Token 252: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1652863770723343
    2. '
' → logprob: -3.2902863025665283
    3. '    
' → logprob: -3.9152863025665283
    4. '#' → logprob: -4.290286540985107
    5. 'heap' → logprob: -4.415286540985107
    6. 'max' → logprob: -4.540286540985107
    7. 'ends' → logprob: -4.540286540985107
    8. 'import' → logprob: -4.665286540985107
    9. 'starts' → logprob: -4.665286540985107
    10. 'def' → logprob: -5.415286540985107

Token 253: ' cannot' (ID: 6284)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9312757253646851
    2. ' can' → logprob: -1.931275725364685
    3. ' includes' → logprob: -2.1812758445739746
    4. ' continues' → logprob: -3.0562758445739746
    5. ' overlaps' → logprob: -3.1812758445739746
    6. '#' → logprob: -3.5562758445739746
    7. 'includes' → logprob: -3.5562758445739746
    8. 'is' → logprob: -3.8062758445739746
    9. ' intervals' → logprob: -4.056275844573975
    10. ' contains' → logprob: -4.306275844573975

Token 254: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.003188524628058076
    2. 'be' → logprob: -6.003188610076904
    3. ' always' → logprob: -9.128188133239746
    4. '#' → logprob: -9.253188133239746
    5. 'always' → logprob: -10.003188133239746
    6. '   ' → logprob: -10.190688133239746
    7. '<|end|>' → logprob: -10.565688133239746
    8. 'expand' → logprob: -10.628188133239746
    9. ' all' → logprob: -10.753188133239746
    10. '_be' → logprob: -11.128188133239746

Token 255: ' avoided' (ID: 55911)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -1.3716844320297241
    2. ' covered' → logprob: -1.9966844320297241
    3. 'colored' → logprob: -1.9966844320297241
    4. ' colored' → logprob: -2.1216845512390137
    5. ' extended' → logprob: -2.3716845512390137
    6. 'extended' → logprob: -2.7466845512390137
    7. ' properly' → logprob: -2.8716845512390137
    8. 'merged' → logprob: -4.121684551239014
    9. 'proper' → logprob: -4.246684551239014
    10. '#' → logprob: -4.496684551239014

Token 256: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3488853871822357
    2. '#' → logprob: -2.3488852977752686
    3. '
' → logprob: -2.7238852977752686
    4. '    
' → logprob: -2.9738852977752686
    5. 'def' → logprob: -3.9738852977752686
    6. 'max' → logprob: -4.348885536193848
    7. 'heap' → logprob: -4.848885536193848
    8. 'from' → logprob: -5.098885536193848
    9. 'import' → logprob: -5.848885536193848
    10. ' #' → logprob: -5.973885536193848

Token 257: ' any' (ID: 1062)
  Prédit: ' rearr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -1.3415718078613281
    2. ' any' → logprob: -1.4665718078613281
    3. ' scheduling' → logprob: -2.716571807861328
    4. ' intervals' → logprob: -2.716571807861328
    5. ' removing' → logprob: -2.841571807861328
    6. ' the' → logprob: -3.091571807861328
    7. ' sorting' → logprob: -3.091571807861328
    8. ' merging' → logprob: -3.341571807861328
    9. ' re' → logprob: -3.591571807861328
    10. ' heap' → logprob: -3.966571807861328

Token 258: ' booking' (ID: 18600)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -2.2850866317749023
    2. 'interval' → logprob: -2.2850866317749023
    3. 'pass' → logprob: -2.4100866317749023
    4. '   ' → logprob: -2.5350866317749023
    5. ' sequence' → logprob: -3.1600866317749023
    6. '#' → logprob: -3.2850866317749023
    7. ' order' → logprob: -3.5350866317749023
    8. ' seat' → logprob: -3.5350866317749023
    9. ' passenger' → logprob: -3.5350866317749023
    10. ' intervals' → logprob: -3.7850866317749023

Token 259: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8013218641281128
    2. '#' → logprob: -0.9263218641281128
    3. '
' → logprob: -3.0513219833374023
    4. '    
' → logprob: -3.3013219833374023
    5. 'def' → logprob: -3.8013219833374023
    6. 'from' → logprob: -4.176321983337402
    7. 'interval' → logprob: -5.301321983337402
    8. 'import' → logprob: -5.551321983337402
    9. 'heap' → logprob: -5.551321983337402
    10. 'max' → logprob: -6.051321983337402

Token 260: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13875706493854523
    2. '    
' → logprob: -2.6387569904327393
    3. '#' → logprob: -3.6387569904327393
    4. '
' → logprob: -3.7637569904327393
    5. 'def' → logprob: -6.513757228851318
    6. 'from' → logprob: -6.638757228851318
    7. 'import' → logprob: -6.888757228851318
    8. 'heap' → logprob: -7.013757228851318
    9. ',' → logprob: -7.388757228851318
    10. 'max' → logprob: -7.763757228851318

Token 261: ' seat' (ID: 15512)
  Prédit: ' scheduling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scheduling' → logprob: -1.6836403608322144
    2. 's' → logprob: -1.9336403608322144
    3. 'se' → logprob: -2.558640480041504
    4. 'interval' → logprob: -2.933640480041504
    5. 'reservation' → logprob: -2.933640480041504
    6. ' rearr' → logprob: -3.183640480041504
    7. ' seating' → logprob: -3.308640480041504
    8. ' any' → logprob: -3.558640480041504
    9. ' reservation' → logprob: -3.808640480041504
    10. 'assignment' → logprob: -3.933640480041504

Token 262: ' choice' (ID: 7158)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5214411020278931
    2. ' =' → logprob: -1.646441102027893
    3. '_' → logprob: -2.7714409828186035
    4. 'def' → logprob: -3.7714409828186035
    5. 's' → logprob: -3.8964409828186035
    6. '    
' → logprob: -4.1464409828186035
    7. '#' → logprob: -4.2714409828186035
    8. ',' → logprob: -4.6464409828186035
    9. ' #' → logprob: -4.8964409828186035
    10. ' _' → logprob: -5.0214409828186035

Token 263: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17976075410842896
    2. '    
' → logprob: -2.429760694503784
    3. '
' → logprob: -2.804760694503784
    4. '<|end|>' → logprob: -4.429760932922363
    5. '#' → logprob: -6.054760932922363
    6. 'def' → logprob: -7.679760932922363
    7. 'import' → logprob: -8.804760932922363
    8. ',' → logprob: -8.804760932922363
    9. '<|end|>' → logprob: -9.054760932922363
    10. '.' → logprob: -9.179760932922363

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15190930664539337
    2. '    
' → logprob: -2.776909351348877
    3. '#' → logprob: -3.401909351348877
    4. '
' → logprob: -4.026909351348877
    5. 'max' → logprob: -4.401909351348877
    6. 'heap' → logprob: -5.901909351348877
    7. 'def' → logprob: -6.276909351348877
    8. 'from' → logprob: -6.401909351348877
    9. '  
' → logprob: -7.151909351348877
    10. 'import' → logprob: -7.276909351348877

Token 265: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2059600353240967
    2. '
' → logprob: -1.2059600353240967
    3. '   ' → logprob: -1.5809600353240967
    4. 'heap' → logprob: -3.3309600353240967
    5. '    
' → logprob: -3.5809600353240967
    6. 'def' → logprob: -3.5809600353240967
    7. 'from' → logprob: -3.7059600353240967
    8. 'import' → logprob: -4.080960273742676
    9. 'interval' → logprob: -4.455960273742676
    10. 'max' → logprob: -4.580960273742676

Token 266: ' In' (ID: 730)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.290611982345581
    2. 'interval' → logprob: -1.415611982345581
    3. '#' → logprob: -1.790611982345581
    4. 'import' → logprob: -2.290611982345581
    5. 'ends' → logprob: -2.915611982345581
    6. 'from' → logprob: -3.415611982345581
    7. 'end' → logprob: -3.915611982345581
    8. 'points' → logprob: -4.04061222076416
    9. 'max' → logprob: -4.54061222076416
    10. 'starts' → logprob: -4.66561222076416

Token 267: ' other' (ID: 1273)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5157418251037598
    2. ' intervals' → logprob: -1.7657418251037598
    3. 'def' → logprob: -1.8907418251037598
    4. 'import' → logprob: -2.2657418251037598
    5. 'interval' → logprob: -2.5157418251037598
    6. 'heap' → logprob: -2.8907418251037598
    7. ' the' → logprob: -3.6407418251037598
    8. 's' → logprob: -3.6407418251037598
    9. ' code' → logprob: -3.8907418251037598
    10. ' heap' → logprob: -4.51574182510376

Token 268: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.07960660755634308
    2. ' words' → logprob: -3.579606533050537
    3. 'def' → logprob: -4.079606533050537
    4. 'lines' → logprob: -4.329606533050537
    5. 'code' → logprob: -4.704606533050537
    6. 'parts' → logprob: -5.454606533050537
    7. '#' → logprob: -5.579606533050537
    8. ' lines' → logprob: -7.954606533050537
    9. '
' → logprob: -8.454607009887695
    10. ' code' → logprob: -8.579607009887695

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11330375075340271
    2. '   ' → logprob: -2.3633036613464355
    3. ':' → logprob: -4.4883036613464355
    4. ' s' → logprob: -7.7383036613464355
    5. 's' → logprob: -7.8633036613464355
    6. ':
' → logprob: -8.113304138183594
    7. '#' → logprob: -8.363304138183594
    8. 'def' → logprob: -8.988304138183594
    9. 'the' → logprob: -9.363304138183594
    10. '    
' → logprob: -9.863304138183594

Token 270: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5288917422294617
    2. ' s' → logprob: -1.0288918018341064
    3. 'max' → logprob: -4.528891563415527
    4. '#' → logprob: -4.778891563415527
    5. ' the' → logprob: -4.778891563415527
    6. ' max' → logprob: -5.153891563415527
    7. 'the' → logprob: -5.403891563415527
    8. ' for' → logprob: -6.028891563415527
    9. 'import' → logprob: -6.278891563415527
    10. 'from' → logprob: -6.528891563415527

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00375875155441463
    2. '2' → logprob: -6.753758907318115
    3. '=' → logprob: -7.003758907318115
    4. '_' → logprob: -7.128758907318115
    5. ' =' → logprob: -7.253758907318115
    6. '   ' → logprob: -10.253758430480957
    7. ' ' → logprob: -10.628758430480957
    8. '#' → logprob: -11.378758430480957
    9. 's' → logprob: -11.628758430480957
    10. '_=' → logprob: -12.316258430480957

Token 272: ' corresponds' (ID: 66938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28210416436195374
    2. '=' → logprob: -1.4071041345596313
    3. '   ' → logprob: -8.1571044921875
    4. ' is' → logprob: -8.7821044921875
    5. ',' → logprob: -9.6571044921875
    6. ' +=' → logprob: -9.6571044921875
    7. '=max' → logprob: -9.6571044921875
    8. '>=' → logprob: -9.9071044921875
    9. 's' → logprob: -10.6571044921875
    10. '≥' → logprob: -10.6571044921875

Token 273: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.008658185601234436
    2. 'to' → logprob: -4.758658409118652
    3. '   ' → logprob: -11.008658409118652
    4. '_to' → logprob: -11.258658409118652
    5. '<|end|>' → logprob: -11.758658409118652
    6. ' =' → logprob: -13.508658409118652
    7. '=' → logprob: -13.758658409118652
    8. '  ' → logprob: -14.258658409118652
    9. '<|end|>' → logprob: -14.258658409118652
    10. ' closely' → logprob: -14.883658409118652

Token 274: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.29325070977211
    2. 'the' → logprob: -1.7932506799697876
    3. 's' → logprob: -3.043250799179077
    4. 'n' → logprob: -4.043250560760498
    5. ' the' → logprob: -4.543250560760498
    6. ' max' → logprob: -4.668250560760498
    7. ' n' → logprob: -7.043250560760498
    8. 'len' → logprob: -7.168250560760498
    9. ' s' → logprob: -7.543250560760498
    10. 'a' → logprob: -9.168251037597656

Token 275: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2712521255016327
    2. 'maximum' → logprob: -1.646252155303955
    3. 'minimum' → logprob: -4.396252155303955
    4. 's' → logprob: -4.771252155303955
    5. 'length' → logprob: -4.896252155303955
    6. ' maximum' → logprob: -5.396252155303955
    7. ' max' → logprob: -5.521252155303955
    8. 'number' → logprob: -6.146252155303955
    9. 'size' → logprob: -6.646252155303955
    10. 'same' → logprob: -7.146252155303955

Token 276: ' number' (ID: 2086)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.01306564174592495
    2. '(' → logprob: -5.513065814971924
    3. ' overlap' → logprob: -5.888065814971924
    4. 'over' → logprob: -7.013065814971924
    5. '_end' → logprob: -7.513065814971924
    6. '   ' → logprob: -7.763065814971924
    7. 'current' → logprob: -7.763065814971924
    8. '_' → logprob: -8.013065338134766
    9. '(current' → logprob: -8.138065338134766
    10. '(a' → logprob: -8.138065338134766

Token 277: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.551210343837738
    2. ' of' → logprob: -1.5512104034423828
    3. '_of' → logprob: -1.6762104034423828
    4. '   ' → logprob: -4.551210403442383
    5. '_inter' → logprob: -5.051210403442383
    6. '[' → logprob: -6.176210403442383
    7. '_' → logprob: -6.676210403442383
    8. 'interval' → logprob: -7.051210403442383
    9. ' intervals' → logprob: -7.426210403442383
    10. '       ' → logprob: -8.176210403442383

Token 278: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4654984176158905
    2. ' intervals' → logprob: -1.590498447418213
    3. 'over' → logprob: -1.840498447418213
    4. ' overlapping' → logprob: -5.590498447418213
    5. '   ' → logprob: -6.590498447418213
    6. '(interval' → logprob: -7.215498447418213
    7. '```' → logprob: -7.465498447418213
    8. 'pass' → logprob: -7.840498447418213
    9. 'events' → logprob: -7.965498447418213
    10. 'cont' → logprob: -8.215497970581055

Token 279: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.3568018078804016
    2. ' that' → logprob: -1.6068017482757568
    3. 'over' → logprob: -2.981801748275757
    4. '   ' → logprob: -3.856801748275757
    5. 'starting' → logprob: -4.981801986694336
    6. 'con' → logprob: -5.356801986694336
    7. ' overlapping' → logprob: -5.356801986694336
    8. 'inter' → logprob: -5.606801986694336
    9. 'sharing' → logprob: -6.231801986694336
    10. 'with' → logprob: -6.731801986694336

Token 280: ' mutually' (ID: 95508)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.4802911877632141
    2. 'over' → logprob: -1.2302911281585693
    3. ' all' → logprob: -3.2302911281585693
    4. ' start' → logprob: -4.480291366577148
    5. 'start' → logprob: -4.730291366577148
    6. ' are' → logprob: -4.730291366577148
    7. ' have' → logprob: -5.605291366577148
    8. ' pair' → logprob: -5.980291366577148
    9. 'inter' → logprob: -6.105291366577148
    10. '_overlap' → logprob: -6.230291366577148

Token 281: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.3903867304325104
    2. ' overlap' → logprob: -1.390386700630188
    3. 'inter' → logprob: -2.6403868198394775
    4. '_overlap' → logprob: -6.140386581420898
    5. ' intersect' → logprob: -7.640386581420898
    6. 'start' → logprob: -9.890386581420898
    7. '(over' → logprob: -9.890386581420898
    8. 'Overlap' → logprob: -10.765386581420898
    9. 'conf' → logprob: -11.140386581420898
    10. '
' → logprob: -11.265386581420898

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5499356389045715
    2. ' at' → logprob: -0.9249356389045715
    3. 'at' → logprob: -4.549935817718506
    4. ',' → logprob: -4.674935817718506
    5. '.' → logprob: -5.799935817718506
    6. 'def' → logprob: -7.174935817718506
    7. ' in' → logprob: -7.799935817718506
    8. 'in' → logprob: -8.424935340881348
    9. ')' → logprob: -8.424935340881348
    10. 'import' → logprob: -8.674935340881348

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07522837817668915
    2. ' at' → logprob: -2.950228452682495
    3. ',' → logprob: -5.075228214263916
    4. '.' → logprob: -5.450228214263916
    5. '       ' → logprob: -5.950228214263916
    6. ')' → logprob: -6.575228214263916
    7. 'def' → logprob: -7.200228214263916
    8. '    ' → logprob: -7.325228214263916
    9. '[' → logprob: -7.700228214263916
    10. 'at' → logprob: -7.825228214263916

Token 284: ' #' (ID: 1069)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6143935322761536
    2. '   ' → logprob: -0.8643935322761536
    3. '.' → logprob: -4.114393711090088
    4. ',' → logprob: -5.489393711090088
    5. ')' → logprob: -6.239393711090088
    6. 'at' → logprob: -6.364393711090088
    7. ' or' → logprob: -6.364393711090088
    8. ':' → logprob: -6.614393711090088
    9. 'def' → logprob: -6.739393711090088
    10. ' in' → logprob: -6.739393711090088

Token 285: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.16757333278656006
    2. '   ' → logprob: -2.0425734519958496
    3. 'at' → logprob: -4.04257345199585
    4. ' in' → logprob: -6.54257345199585
    5. ',' → logprob: -7.04257345199585
    6. '.' → logprob: -7.04257345199585
    7. 'def' → logprob: -7.41757345199585
    8. ' for' → logprob: -7.79257345199585
    9. ' during' → logprob: -8.042572975158691
    10. ' =' → logprob: -8.167572975158691

Token 286: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -1.3439630270004272
    2. ' any' → logprob: -1.5939630270004272
    3. 'any' → logprob: -1.5939630270004272
    4. ' some' → logprob: -1.7189630270004272
    5. 'least' → logprob: -3.093963146209717
    6. ' a' → logprob: -3.593963146209717
    7. ' the' → logprob: -3.718963146209717
    8. 'a' → logprob: -3.843963146209717
    9. 'the' → logprob: -4.093963146209717
    10. ' least' → logprob: -4.343963146209717

Token 287: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.1464717984199524
    2. 'point' → logprob: -2.0214717388153076
    3. ' time' → logprob: -5.896471977233887
    4. 'time' → logprob: -7.021471977233887
    5. '_point' → logprob: -9.896471977233887
    6. 'token' → logprob: -10.521471977233887
    7. '   ' → logprob: -10.896471977233887
    8. ' token' → logprob: -11.271471977233887
    9. ' moment' → logprob: -11.396471977233887
    10. ' points' → logprob: -12.146471977233887

Token 288: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038403328508138657
    2. ',' → logprob: -6.128840446472168
    3. '    
' → logprob: -7.128840446472168
    4. '.' → logprob: -7.503840446472168
    5. ':' → logprob: -8.753840446472168
    6. ' =' → logprob: -10.753840446472168
    7. 'def' → logprob: -11.003840446472168
    8. ')' → logprob: -11.253840446472168
    9. ',
' → logprob: -11.253840446472168
    10. 'import' → logprob: -11.628840446472168

Token 289: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6848065257072449
    2. ' )' → logprob: -0.8098065257072449
    3. '   ' → logprob: -4.9348063468933105
    4. ' the' → logprob: -5.0598063468933105
    5. ' in' → logprob: -5.3098063468933105
    6. 'def' → logprob: -6.0598063468933105
    7. '):' → logprob: -6.3098063468933105
    8. '#' → logprob: -6.3098063468933105
    9. ' a' → logprob: -6.4348063468933105
    10. '):
' → logprob: -6.4348063468933105

Token 290: ' size' (ID: 2349)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.6742604374885559
    2. ' code' → logprob: -2.049260377883911
    3. ' next' → logprob: -2.299260377883911
    4. 'max' → logprob: -2.924260377883911
    5. ' max' → logprob: -3.174260377883911
    6. ')' → logprob: -3.799260377883911
    7. 'same' → logprob: -4.04926061630249
    8. ' maximum' → logprob: -4.42426061630249
    9. 'def' → logprob: -4.67426061630249
    10. 'n' → logprob: -4.67426061630249

Token 291: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6103378534317017
    2. '=' → logprob: -1.7353378534317017
    3. ' of' → logprob: -1.7353378534317017
    4. ' =' → logprob: -3.110337734222412
    5. ')' → logprob: -3.485337734222412
    6. 'of' → logprob: -4.235337734222412
    7. '_' → logprob: -6.360337734222412
    8. ' ' → logprob: -6.485337734222412
    9. '-' → logprob: -6.610337734222412
    10. ',' → logprob: -6.860337734222412

Token 292: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5596408843994141
    2. ' a' → logprob: -1.184640884399414
    3. 'a' → logprob: -2.934640884399414
    4. 'the' → logprob: -3.434640884399414
    5. ' intervals' → logprob: -4.434640884399414
    6. ' an' → logprob: -4.684640884399414
    7. 'max' → logprob: -5.434640884399414
    8. ' any' → logprob: -5.809640884399414
    9. ' max' → logprob: -5.934640884399414
    10. ' current' → logprob: -6.684640884399414

Token 293: ' maximum' (ID: 10562)
  Prédit: ' clique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clique' → logprob: -0.6972208023071289
    2. 'cl' → logprob: -1.822220802307129
    3. 'max' → logprob: -1.822220802307129
    4. ' maximal' → logprob: -2.947220802307129
    5. ' max' → logprob: -3.072220802307129
    6. 'largest' → logprob: -4.197220802307129
    7. ' maximum' → logprob: -4.322220802307129
    8. '[max' → logprob: -4.322220802307129
    9. 'maximum' → logprob: -4.697220802307129
    10. ' cl' → logprob: -5.322220802307129

Token 294: ' clique' (ID: 60301)
  Prédit: ' clique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clique' → logprob: -0.3190862536430359
    2. 'cl' → logprob: -1.3190863132476807
    3. '```' → logprob: -6.319086074829102
    4. '_cl' → logprob: -6.819086074829102
    5. ' overlap' → logprob: -7.069086074829102
    6. 'over' → logprob: -7.944086074829102
    7. '_overlap' → logprob: -8.069086074829102
    8. '   ' → logprob: -8.194086074829102
    9. ' cl' → logprob: -8.569086074829102
    10. ')' → logprob: -8.944086074829102

Token 295: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08555904030799866
    2. '   ' → logprob: -2.710559129714966
    3. ')
' → logprob: -5.710558891296387
    4. '):' → logprob: -5.710558891296387
    5. ' )' → logprob: -5.960558891296387
    6. ' at' → logprob: -6.085558891296387
    7. ').' → logprob: -6.460558891296387
    8. '):
' → logprob: -6.710558891296387
    9. ' in' → logprob: -7.335558891296387
    10. '),' → logprob: -9.085558891296387

Token 296: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4582308530807495
    2. 'the' → logprob: -1.9582308530807495
    3. ' intervals' → logprob: -1.9582308530807495
    4. 'interval' → logprob: -2.833230972290039
    5. ' an' → logprob: -3.833230972290039
    6. ')' → logprob: -6.583230972290039
    7. ' events' → logprob: -7.458230972290039
    8. 'events' → logprob: -7.458230972290039
    9. 'an' → logprob: -7.708230972290039
    10. '   ' → logprob: -7.833230972290039

Token 297: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.326810747385025
    2. ' interval' → logprob: -1.3268107175827026
    3. ' intervals' → logprob: -5.326810836791992
    4. ' graph' → logprob: -5.576810836791992
    5. '   ' → logprob: -6.201810836791992
    6. ' code' → logprob: -6.951810836791992
    7. 'graph' → logprob: -7.326810836791992
    8. 'def' → logprob: -8.326810836791992
    9. 'code' → logprob: -8.451810836791992
    10. '```' → logprob: -8.826810836791992

Token 298: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3135088384151459
    2. 'graph' → logprob: -1.3135088682174683
    3. ')' → logprob: -9.438508987426758
    4. '_graph' → logprob: -9.563508987426758
    5. '   ' → logprob: -10.313508987426758
    6. '(graph' → logprob: -10.688508987426758
    7. '
' → logprob: -11.938508987426758
    8. 'interval' → logprob: -12.063508987426758
    9. ' ' → logprob: -12.313508987426758
    10. ',' → logprob: -12.438508987426758

Token 299: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6014345288276672
    2. '   ' → logprob: -0.8514345288276672
    3. '):' → logprob: -4.601434707641602
    4. ').' → logprob: -4.851434707641602
    5. ')
' → logprob: -5.226434707641602
    6. '):
' → logprob: -7.226434707641602
    7. ' )' → logprob: -7.851434707641602
    8. 'def' → logprob: -8.351434707641602
    9. '.' → logprob: -8.476434707641602
    10. '#' → logprob: -9.101434707641602

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02068178914487362
    2. '    
' → logprob: -4.770681858062744
    3. 'print' → logprob: -5.020681858062744
    4. '
' → logprob: -6.270681858062744
    5. 'max' → logprob: -6.270681858062744
    6. 's' → logprob: -7.645681858062744
    7. 'return' → logprob: -7.770681858062744
    8. '#' → logprob: -8.270681381225586
    9. '```' → logprob: -9.395681381225586
    10. 'def' → logprob: -9.770681381225586

Token 301: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6390901803970337
    2. 'heap' → logprob: -2.139090061187744
    3. 'max' → logprob: -2.889090061187744
    4. '#' → logprob: -2.889090061187744
    5. 'current' → logprob: -3.764090061187744
    6. 'start' → logprob: -3.889090061187744
    7. 'def' → logprob: -3.889090061187744
    8. 's' → logprob: -4.014090061187744
    9. '    
' → logprob: -4.014090061187744
    10. '
' → logprob: -4.139090061187744

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022257300093770027
    2. '    
' → logprob: -4.022257328033447
    3. '
' → logprob: -6.147257328033447
    4. '#' → logprob: -6.397257328033447
    5. 'def' → logprob: -9.397256851196289
    6. '        
' → logprob: -10.522256851196289
    7. '    ' → logprob: -10.647256851196289
    8. ' #' → logprob: -10.772256851196289
    9. 'import' → logprob: -10.772256851196289
    10. '    
    
' → logprob: -10.897256851196289

Token 303: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3429426848888397
    2. '#' (adapté à ' #') → logprob: -1.717942714691162
    3. ' #' → logprob: -3.842942714691162
    4. 'max' → logprob: -4.092942714691162
    5. '
' → logprob: -4.467942714691162
    6. ' max' → logprob: -4.842942714691162
    7. 's' → logprob: -5.092942714691162
    8. 'def' → logprob: -5.592942714691162
    9. 'start' → logprob: -5.717942714691162
    10. ' s' → logprob: -5.967942714691162

Token 304: ' For' (ID: 2214)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7465448975563049
    2. '#' → logprob: -0.9965448975563049
    3. 'max' → logprob: -4.12154483795166
    4. 'active' → logprob: -4.49654483795166
    5. 'seat' → logprob: -4.62154483795166
    6. 'left' → logprob: -4.74654483795166
    7. 'import' → logprob: -4.74654483795166
    8. '   ' → logprob: -4.87154483795166
    9. 'starts' → logprob: -4.99654483795166
    10. 'interval' → logprob: -4.99654483795166

Token 305: ' intervals' (ID: 49900)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5067389011383057
    2. 'i' → logprob: -1.8817389011383057
    3. ' i' → logprob: -2.2567389011383057
    4. ' s' → logprob: -2.3817389011383057
    5. 's' → logprob: -2.6317389011383057
    6. '_' → logprob: -3.0067389011383057
    7. ' a' → logprob: -3.1317389011383057
    8. 'start' → logprob: -3.5067389011383057
    9. 'interval' → logprob: -3.6317389011383057
    10. ' _' → logprob: -3.7567389011383057

Token 306: ' [' (ID: 723)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9272432327270508
    2. '.sort' → logprob: -1.3022432327270508
    3. 'in' → logprob: -2.052243232727051
    4. ',' → logprob: -2.927243232727051
    5. '=' → logprob: -3.052243232727051
    6. 'sorted' → logprob: -3.177243232727051
    7. ':' → logprob: -4.802243232727051
    8. ' =' → logprob: -4.927243232727051
    9. ' sorted' → logprob: -4.927243232727051
    10. ':
' → logprob: -5.177243232727051

Token 307: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16471175849437714
    2. '0' → logprob: -3.1647117137908936
    3. ',' → logprob: -3.4147117137908936
    4. 'i' → logprob: -3.7897117137908936
    5. ')' → logprob: -4.039711952209473
    6. '   ' → logprob: -5.164711952209473
    7. '_,' → logprob: -5.539711952209473
    8. '[' → logprob: -5.789711952209473
    9. 'start' → logprob: -5.789711952209473
    10. 'x' → logprob: -5.914711952209473

Token 308: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046204205602407455
    2. ',b' → logprob: -3.171204090118408
    3. '[' → logprob: -6.046204090118408
    4. ' ,' → logprob: -8.046204566955566
    5. ',a' → logprob: -8.671204566955566
    6. '   ' → logprob: -9.671204566955566
    7. 'i' → logprob: -10.046204566955566
    8. 'a' → logprob: -10.296204566955566
    9. ',
' → logprob: -10.421204566955566
    10. 'b' → logprob: -10.546204566955566

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003130067139863968
    2. ' ,' → logprob: -6.628129959106445
    3. ',b' → logprob: -6.878129959106445
    4. ',i' → logprob: -8.128129959106445
    5. ',a' → logprob: -8.378129959106445
    6. '   ' → logprob: -10.128129959106445
    7. ',
' → logprob: -10.253129959106445
    8. '],' → logprob: -10.378129959106445
    9. 'a' → logprob: -10.378129959106445
    10. 'i' → logprob: -10.378129959106445

Token 310: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020591869950294495
    2. ' b' → logprob: -3.895591974258423
    3. 'a' → logprob: -10.395591735839844
    4. ',' → logprob: -12.145591735839844
    5. '   ' → logprob: -12.395591735839844
    6. ' ' → logprob: -12.520591735839844
    7. ')' → logprob: -13.645591735839844
    8. ' a' → logprob: -13.645591735839844
    9. '  ' → logprob: -14.395591735839844
    10. ',b' → logprob: -14.770591735839844

Token 311: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19653187692165375
    2. ')' → logprob: -3.3215317726135254
    3. ')]' → logprob: -3.3215317726135254
    4. ']' → logprob: -3.3215317726135254
    5. 'i' → logprob: -3.6965317726135254
    6. ',' → logprob: -4.321531772613525
    7. '   ' → logprob: -4.696531772613525
    8. ']_' → logprob: -4.946531772613525
    9. ')_' → logprob: -5.696531772613525
    10. '])' → logprob: -6.321531772613525

Token 312: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8278065323829651
    2. '],' → logprob: -1.3278064727783203
    3. ')' → logprob: -1.8278064727783203
    4. '),' → logprob: -2.4528064727783203
    5. '):' → logprob: -4.32780647277832
    6. '   ' → logprob: -4.95280647277832
    7. ')]' → logprob: -5.07780647277832
    8. '):
' → logprob: -5.20280647277832
    9. ']:' → logprob: -5.45280647277832
    10. '+' → logprob: -5.45280647277832

Token 313: ' the' (ID: 290)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9040013551712036
    2. 'points' → logprob: -1.2790013551712036
    3. ' points' → logprob: -2.779001235961914
    4. 'end' → logprob: -2.904001235961914
    5. 'events' → logprob: -3.029001235961914
    6. '   ' → logprob: -3.154001235961914
    7. ' intervals' → logprob: -3.154001235961914
    8. ' endpoints' → logprob: -3.654001235961914
    9. '#' → logprob: -5.154001235961914
    10. 'ends' → logprob: -5.654001235961914

Token 314: ' max' (ID: 2999)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3037519156932831
    2. 'interval' → logprob: -2.4287519454956055
    3. 'events' → logprob: -2.6787519454956055
    4. '#' → logprob: -3.5537519454956055
    5. ' points' → logprob: -4.4287519454956055
    6. 'end' → logprob: -4.4287519454956055
    7. 'starts' → logprob: -4.5537519454956055
    8. 'start' → logprob: -4.9287519454956055
    9. ' endpoints' → logprob: -5.3037519454956055
    10. '   ' → logprob: -5.4287519454956055

Token 315: ' clique' (ID: 60301)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.13887961208820343
    2. '_' → logprob: -2.7638795375823975
    3. '   ' → logprob: -4.138879776000977
    4. ' =' → logprob: -4.888879776000977
    5. 'heap' → logprob: -5.138879776000977
    6. 'current' → logprob: -5.388879776000977
    7. 'points' → logprob: -5.638879776000977
    8. 'over' → logprob: -5.763879776000977
    9. '_heap' → logprob: -5.763879776000977
    10. '_end' → logprob: -5.763879776000977

Token 316: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.7390488982200623
    2. ' size' → logprob: -1.114048957824707
    3. '_size' → logprob: -2.364048957824707
    4. ' =' → logprob: -2.489048957824707
    5. '=' → logprob: -4.739048957824707
    6. ' is' → logprob: -5.864048957824707
    7. '   ' → logprob: -5.989048957824707
    8. ':' → logprob: -7.114048957824707
    9. ')' → logprob: -7.739048957824707
    10. 's' → logprob: -8.114048957824707

Token 317: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6349009871482849
    2. ' =' → logprob: -1.2599010467529297
    3. '   ' → logprob: -1.7599010467529297
    4. ' can' → logprob: -5.13490104675293
    5. '=' → logprob: -5.25990104675293
    6. 'is' → logprob: -6.38490104675293
    7. '    
' → logprob: -8.13490104675293
    8. 'can' → logprob: -8.25990104675293
    9. '#' → logprob: -8.88490104675293
    10. ',' → logprob: -9.38490104675293

Token 318: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7176093459129333
    2. 'max' → logprob: -1.0926094055175781
    3. '   ' → logprob: -2.717609405517578
    4. ' max' → logprob: -3.217609405517578
    5. 's' → logprob: -3.717609405517578
    6. ' ' → logprob: -4.592609405517578
    7. 'current' → logprob: -4.592609405517578
    8. 'n' → logprob: -4.717609405517578
    9. ' current' → logprob: -5.342609405517578
    10. 'the' → logprob: -5.592609405517578

Token 319: ' maximum' (ID: 10562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9587032198905945
    2. 'max' → logprob: -0.9587032198905945
    3. ' max' → logprob: -2.2087032794952393
    4. ' ' → logprob: -3.8337032794952393
    5. ' same' → logprob: -4.08370304107666
    6. ' maximum' → logprob: -4.08370304107666
    7. ' current' → logprob: -4.45870304107666
    8. 'maximum' → logprob: -4.58370304107666
    9. 'current' → logprob: -4.70870304107666
    10. ' next' → logprob: -4.95870304107666

Token 320: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.38109004497528076
    2. '   ' → logprob: -1.3810900449752808
    3. ' current' → logprob: -3.2560901641845703
    4. 'number' → logprob: -4.50609016418457
    5. 'over' → logprob: -5.38109016418457
    6. ' number' → logprob: -5.50609016418457
    7. 'token' → logprob: -7.00609016418457
    8. 'count' → logprob: -7.25609016418457
    9. '(current' → logprob: -7.38109016418457
    10. ' of' → logprob: -7.50609016418457

Token 321: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.16012205183506012
    2. ' of' → logprob: -2.0351221561431885
    3. '   ' → logprob: -4.285121917724609
    4. '_of' → logprob: -6.285121917724609
    5. '       ' → logprob: -7.785121917724609
    6. 'interval' → logprob: -8.28512191772461
    7. ' intervals' → logprob: -9.03512191772461
    8. ' ' → logprob: -9.16012191772461
    9. 'for' → logprob: -9.41012191772461
    10. 'current' → logprob: -9.66012191772461

Token 322: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.0058599710464478
    2. ' intervals' → logprob: -1.0058599710464478
    3. 'over' → logprob: -2.255859851837158
    4. 'current' → logprob: -2.255859851837158
    5. ' current' → logprob: -3.505859851837158
    6. ' overlapping' → logprob: -4.505859851837158
    7. 'start' → logprob: -5.380859851837158
    8. '   ' → logprob: -5.630859851837158
    9. 'events' → logprob: -6.005859851837158
    10. 'active' → logprob: -7.005859851837158

Token 323: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9815744757652283
    2. 'over' → logprob: -1.481574535369873
    3. ' that' → logprob: -1.606574535369873
    4. 'that' → logprob: -2.106574535369873
    5. 'active' → logprob: -3.231574535369873
    6. ' overlapping' → logprob: -4.856574535369873
    7. 'ongo' → logprob: -5.356574535369873
    8. 'open' → logprob: -5.481574535369873
    9. 'inter' → logprob: -5.606574535369873
    10. 'import' → logprob: -5.981574535369873

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04823562502861023
    2. ' that' → logprob: -3.9232356548309326
    3. 'that' → logprob: -3.9232356548309326
    4. 'starting' → logprob: -6.2982354164123535
    5. 'active' → logprob: -6.6732354164123535
    6. 'over' → logprob: -6.7982354164123535
    7. 'ongo' → logprob: -7.1732354164123535
    8. 'currently' → logprob: -7.9232354164123535
    9. 'present' → logprob: -8.048235893249512
    10. ' overlapping' → logprob: -8.423235893249512

Token 325: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2427961826324463
    2. 'active' → logprob: -2.7427961826324463
    3. 'that' → logprob: -2.7427961826324463
    4. 'over' → logprob: -2.9927961826324463
    5. ' that' → logprob: -4.617795944213867
    6. 'currently' → logprob: -4.742795944213867
    7. 'ongo' → logprob: -5.242795944213867
    8. 'starting' → logprob: -5.617795944213867
    9. 'current' → logprob: -6.367795944213867
    10. 'cover' → logprob: -7.117795944213867

Token 326: ' covering' (ID: 24878)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6661113500595093
    2. ' that' → logprob: -1.9161113500595093
    3. 'active' → logprob: -2.166111469268799
    4. '   ' → logprob: -2.291111469268799
    5. 'that' → logprob: -3.041111469268799
    6. ' overlapping' → logprob: -3.166111469268799
    7. 'open' → logprob: -4.291111469268799
    8. 'ongo' → logprob: -5.041111469268799
    9. ' active' → logprob: -5.916111469268799
    10. 'import' → logprob: -6.041111469268799

Token 327: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5430902242660522
    2. ' the' → logprob: -2.043090343475342
    3. 'the' → logprob: -2.168090343475342
    4. 'a' → logprob: -2.293090343475342
    5. ' any' → logprob: -2.918090343475342
    6. 'any' → logprob: -4.168090343475342
    7. ' some' → logprob: -6.668090343475342
    8. 'some' → logprob: -7.168090343475342
    9. '   ' → logprob: -7.418090343475342
    10. ' ' → logprob: -7.418090343475342

Token 328: ' interior' (ID: 13878)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4454162120819092
    2. 'interval' → logprob: -2.445416212081909
    3. 'instant' → logprob: -2.695416212081909
    4. 'y' → logprob: -2.945416212081909
    5. 'time' → logprob: -3.570416212081909
    6. ' interval' → logprob: -4.195416450500488
    7. ' point' → logprob: -4.195416450500488
    8. 'exact' → logprob: -4.320416450500488
    9. 'event' → logprob: -4.570416450500488
    10. 'over' → logprob: -4.570416450500488

Token 329: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.4305747151374817
    2. 'point' → logprob: -1.055574655532837
    3. '   ' → logprob: -6.680574893951416
    4. '_point' → logprob: -8.180574417114258
    5. '+' → logprob: -9.680574417114258
    6. ' of' → logprob: -9.930574417114258
    7. 'time' → logprob: -10.305574417114258
    8. '[' → logprob: -10.680574417114258
    9. 'points' → logprob: -10.930574417114258
    10. '```' → logprob: -11.180574417114258

Token 330: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09454735368490219
    2. '    
' → logprob: -2.5945472717285156
    3. '
' → logprob: -4.344547271728516
    4. ' =' → logprob: -7.219547271728516
    5. ',' → logprob: -8.344547271728516
    6. '.' → logprob: -8.469547271728516
    7. '.
' → logprob: -8.844547271728516
    8. ' (' → logprob: -8.969547271728516
    9. '   
' → logprob: -8.969547271728516
    10. '=' → logprob: -9.594547271728516

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029372958466410637
    2. '
' → logprob: -4.2793731689453125
    3. '    
' → logprob: -4.2793731689453125
    4. 'current' → logprob: -7.6543731689453125
    5. 'heap' → logprob: -8.529373168945312
    6. 'events' → logprob: -9.154373168945312
    7. ' current' → logprob: -9.529373168945312
    8. '#' → logprob: -10.154373168945312
    9. 'start' → logprob: -10.279373168945312
    10. 'interval' → logprob: -10.404373168945312

Token 332: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12228644639253616
    2. 'heap' → logprob: -3.247286558151245
    3. 'interval' → logprob: -3.372286558151245
    4. 'starts' → logprob: -4.247286319732666
    5. 'events' → logprob: -5.247286319732666
    6. '    
' → logprob: -5.497286319732666
    7. 'active' → logprob: -6.122286319732666
    8. 'end' → logprob: -6.247286319732666
    9. 'current' → logprob: -6.247286319732666
    10. 'points' → logprob: -6.247286319732666

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004263469949364662
    2. '    
' → logprob: -5.879263401031494
    3. '
' → logprob: -6.629263401031494
    4. 'import' → logprob: -9.754263877868652
    5. '#' → logprob: -11.004263877868652
    6. 'heap' → logprob: -11.379263877868652
    7. 'current' → logprob: -11.629263877868652
    8. '        
' → logprob: -12.254263877868652
    9. '```' → logprob: -12.379263877868652
    10. 'start' → logprob: -12.504263877868652

Token 334: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1547718644142151
    2. 'interval' → logprob: -3.2797718048095703
    3. 'starts' → logprob: -3.4047718048095703
    4. '#' (adapté à ' #') → logprob: -3.5297718048095703
    5. 'points' → logprob: -4.77977180480957
    6. 'events' → logprob: -4.77977180480957
    7. 'heap' → logprob: -5.02977180480957
    8. 'start' → logprob: -5.15477180480957
    9. 'end' → logprob: -6.02977180480957
    10. '
' → logprob: -6.15477180480957

Token 335: ' This' (ID: 1328)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5532522201538086
    2. '#' → logprob: -1.4282522201538086
    3. 'starts' → logprob: -3.1782522201538086
    4. 'points' → logprob: -4.053252220153809
    5. 'interval' → logprob: -4.178252220153809
    6. 'active' → logprob: -4.178252220153809
    7. 'import' → logprob: -4.303252220153809
    8. 'events' → logprob: -4.428252220153809
    9. 'ends' → logprob: -4.428252220153809
    10. 'pq' → logprob: -4.553252220153809

Token 336: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.45885926485061646
    2. ' is' → logprob: -1.5838592052459717
    3. ' code' → logprob: -2.7088592052459717
    4. '#' → logprob: -4.333859443664551
    5. ' approach' → logprob: -4.333859443664551
    6. 'can' → logprob: -4.458859443664551
    7. 'def' → logprob: -4.583859443664551
    8. ' def' → logprob: -4.958859443664551
    9. ' part' → logprob: -5.208859443664551
    10. ' #' → logprob: -5.458859443664551

Token 337: ' the' (ID: 290)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -1.5930532217025757
    2. '   ' → logprob: -1.7180532217025757
    3. ' the' → logprob: -1.7180532217025757
    4. ' equivalent' → logprob: -1.9680532217025757
    5. 'the' → logprob: -3.0930533409118652
    6. ' essentially' → logprob: -3.3430533409118652
    7. ' also' → logprob: -3.3430533409118652
    8. ' already' → logprob: -3.5930533409118652
    9. 'exact' → logprob: -3.7180533409118652
    10. ' identical' → logprob: -3.8430533409118652

Token 338: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.3765016198158264
    2. ' same' → logprob: -1.8765015602111816
    3. 'next' → logprob: -2.3765015602111816
    4. ' next' → logprob: -4.126501560211182
    5. 'point' → logprob: -4.626501560211182
    6. 'classic' → logprob: -4.876501560211182
    7. 'max' → logprob: -5.376501560211182
    8. 'standard' → logprob: -5.376501560211182
    9. 'exact' → logprob: -5.626501560211182
    10. 'minimum' → logprob: -6.251501560211182

Token 339: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09957494586706161
    2. 'as' → logprob: -2.5995750427246094
    3. ' logic' → logprob: -4.849575042724609
    4. ' code' → logprob: -4.974575042724609
    5. ' approach' → logprob: -5.974575042724609
    6. ' algorithm' → logprob: -7.474575042724609
    7. '
' → logprob: -7.974575042724609
    8. '#' → logprob: -8.09957504272461
    9. ' process' → logprob: -8.22457504272461
    10. ' for' → logprob: -8.22457504272461

Token 340: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.307884156703949
    2. ' max' → logprob: -1.9328842163085938
    3. ' current' → logprob: -3.3078842163085938
    4. 'current' → logprob: -3.4328842163085938
    5. 's' → logprob: -4.057884216308594
    6. '   ' → logprob: -4.057884216308594
    7. ' s' → logprob: -4.682884216308594
    8. ' the' → logprob: -5.932884216308594
    9. 'the' → logprob: -6.682884216308594
    10. 'events' → logprob: -6.807884216308594

Token 341: ' number' (ID: 2086)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.07986076176166534
    2. 'current' → logprob: -3.7048606872558594
    3. ' current' → logprob: -3.8298606872558594
    4. ' overlap' → logprob: -4.704860687255859
    5. '(current' → logprob: -5.079860687255859
    6. 'over' → logprob: -5.079860687255859
    7. '   ' → logprob: -5.079860687255859
    8. '(' → logprob: -7.579860687255859
    9. '(
' → logprob: -7.704860687255859
    10. '_' → logprob: -7.954860687255859

Token 342: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.47337377071380615
    2. ' of' → logprob: -1.5983737707138062
    3. '_of' → logprob: -2.0983738899230957
    4. '   ' → logprob: -3.2233738899230957
    5. ' ' → logprob: -5.348373889923096
    6. 'current' → logprob: -6.098373889923096
    7. 'events' → logprob: -6.848373889923096
    8. '_overlap' → logprob: -6.848373889923096
    9. 'over' → logprob: -6.973373889923096
    10. 's' → logprob: -7.723373889923096

Token 343: ' overlapping' (ID: 90457)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.0613926649093628
    2. 'current' → logprob: -1.6863926649093628
    3. ' intervals' → logprob: -2.0613927841186523
    4. 'interval' → logprob: -2.1863927841186523
    5. ' current' → logprob: -2.6863927841186523
    6. ' overlapping' → logprob: -3.0613927841186523
    7. 'events' → logprob: -3.3113927841186523
    8. 'start' → logprob: -3.4363927841186523
    9. 'active' → logprob: -4.061392784118652
    10. ' active' → logprob: -5.186392784118652

Token 344: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.09035886079072952
    2. 'interval' → logprob: -2.4653589725494385
    3. 's' → logprob: -8.59035873413086
    4. ' interval' → logprob: -8.84035873413086
    5. '(interval' → logprob: -8.84035873413086
    6. ' events' → logprob: -8.96535873413086
    7. 'events' → logprob: -9.09035873413086
    8. '   ' → logprob: -9.21535873413086
    9. 'start' → logprob: -9.46535873413086
    10. '_inter' → logprob: -9.59035873413086

Token 345: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18657247722148895
    2. ' at' → logprob: -2.561572551727295
    3. ',' → logprob: -3.561572551727295
    4. '.' → logprob: -4.061572551727295
    5. '    
' → logprob: -4.311572551727295
    6. ' (' → logprob: -4.686572551727295
    7. 'at' → logprob: -4.686572551727295
    8. '
' → logprob: -5.936572551727295
    9. ':' → logprob: -6.436572551727295
    10. '(' → logprob: -6.561572551727295

Token 346: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4995604157447815
    2. ' any' → logprob: -0.9995604157447815
    3. 'a' → logprob: -4.874560356140137
    4. ' a' → logprob: -5.249560356140137
    5. 'start' → logprob: -5.499560356140137
    6. 'some' → logprob: -5.999560356140137
    7. ' the' → logprob: -6.374560356140137
    8. 'the' → logprob: -6.499560356140137
    9. ' some' → logprob: -7.374560356140137
    10. 'points' → logprob: -8.499560356140137

Token 347: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2870003283023834
    2. ' point' → logprob: -2.2870004177093506
    3. 'time' → logprob: -2.4120004177093506
    4. '   ' → logprob: -3.2870004177093506
    5. ' time' → logprob: -5.0370001792907715
    6. 'token' → logprob: -5.2870001792907715
    7. ' given' → logprob: -5.9120001792907715
    8. 'given' → logprob: -6.5370001792907715
    9. ' moment' → logprob: -6.9120001792907715
    10. 'start' → logprob: -7.0370001792907715

Token 348: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010962335392832756
    2. ',' → logprob: -5.13596248626709
    3. '    
' → logprob: -6.26096248626709
    4. '.' → logprob: -6.38596248626709
    5. '#' → logprob: -7.63596248626709
    6. ' (' → logprob: -8.01096248626709
    7. '
' → logprob: -8.76096248626709
    8. '(' → logprob: -9.38596248626709
    9. 'def' → logprob: -10.38596248626709
    10. ':' → logprob: -10.38596248626709

Token 349: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4789196252822876
    2. ' so' → logprob: -1.2289196252822876
    3. '#' → logprob: -3.228919506072998
    4. ' but' → logprob: -3.853919506072998
    5. '    
' → logprob: -5.228919506072998
    6. ' which' → logprob: -5.353919506072998
    7. 'so' → logprob: -5.603919506072998
    8. ' and' → logprob: -5.853919506072998
    9. 'but' → logprob: -6.353919506072998
    10. ' hence' → logprob: -6.478919506072998

Token 350: ' at' (ID: 540)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6391263008117676
    2. '   ' → logprob: -1.1391263008117676
    3. 's' → logprob: -1.8891263008117676
    4. 'print' → logprob: -7.639126300811768
    5. ' print' → logprob: -7.889126300811768
    6. '
' → logprob: -10.13912582397461
    7. '```' → logprob: -10.88912582397461
    8. '    ' → logprob: -12.01412582397461
    9. '    
' → logprob: -12.26412582397461
    10. '	s' → logprob: -13.01412582397461

Token 351: ' first' (ID: 1577)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.4134308397769928
    2. 'the' → logprob: -2.16343092918396
    3. 's' → logprob: -2.41343092918396
    4. 'most' → logprob: -3.53843092918396
    5. ' least' → logprob: -3.91343092918396
    6. '#' → logprob: -4.038430690765381
    7. '   ' → logprob: -4.163430690765381
    8. 'return' → logprob: -5.038430690765381
    9. 'this' → logprob: -5.163430690765381
    10. ' s' → logprob: -5.163430690765381

Token 352: ' glance' (ID: 51734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1399692296981812
    2. 'current' → logprob: -1.1399692296981812
    3. '=' → logprob: -2.5149693489074707
    4. ' current' → logprob: -2.7649693489074707
    5. 's' → logprob: -3.2649693489074707
    6. 'tokens' → logprob: -3.2649693489074707
    7. ' s' → logprob: -3.5149693489074707
    8. ' =' → logprob: -3.6399693489074707
    9. '   ' → logprob: -3.8899693489074707
    10. '_' → logprob: -4.639969348907471

Token 353: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.414876252412796
    2. ',' → logprob: -1.4148762226104736
    3. 's' → logprob: -2.5398762226104736
    4. ' s' → logprob: -4.164876461029053
    5. 'current' → logprob: -7.789876461029053
    6. '#' → logprob: -8.039875984191895
    7. '    
' → logprob: -8.414875984191895
    8. ' it' → logprob: -8.914875984191895
    9. ' ,' → logprob: -9.039875984191895
    10. '
' → logprob: -9.289875984191895

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31704872846603394
    2. ' s' → logprob: -1.6920487880706787
    3. ' current' → logprob: -2.9420487880706787
    4. 's' → logprob: -4.3170485496521
    5. '    ' → logprob: -5.3170485496521
    6. ' the' → logprob: -5.5670485496521
    7. 'current' → logprob: -5.8170485496521
    8. ' continue' → logprob: -6.1920485496521
    9. ',' → logprob: -6.9420485496521
    10. ' ' → logprob: -7.1920485496521

Token 355: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47625598311424255
    2. ' s' → logprob: -1.726256012916565
    3. '#' (adapté à ' #') → logprob: -2.2262558937072754
    4. 's' → logprob: -2.8512558937072754
    5. ' #' → logprob: -4.226255893707275
    6. ' the' → logprob: -4.976255893707275
    7. 'the' → logprob: -5.476255893707275
    8. ' current' → logprob: -5.851255893707275
    9. 'current' → logprob: -6.226255893707275
    10. ' it' → logprob: -6.476255893707275

Token 356: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0339069738984108
    2. 's' → logprob: -3.408906936645508
    3. '   ' → logprob: -9.033906936645508
    4. '#' → logprob: -9.908906936645508
    5. ' the' → logprob: -10.158906936645508
    6. ' #' → logprob: -11.283906936645508
    7. 'the' → logprob: -11.533906936645508
    8. ' it' → logprob: -12.408906936645508
    9. ' we' → logprob: -12.908906936645508
    10. ' continue' → logprob: -12.908906936645508

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028265081346035004
    2. '2' → logprob: -7.127826690673828
    3. ' =' → logprob: -7.252826690673828
    4. '_' → logprob: -7.752826690673828
    5. ' ' → logprob: -8.127826690673828
    6. '=' → logprob: -8.377826690673828
    7. '   ' → logprob: -8.627826690673828
    8. 's' → logprob: -10.127826690673828
    9. ',' → logprob: -10.377826690673828
    10. '  ' → logprob: -11.002826690673828

Token 358: ' might' (ID: 3572)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22555971145629883
    2. '=' → logprob: -1.6005597114562988
    3. '   ' → logprob: -10.47555923461914
    4. ',' → logprob: -10.47555923461914
    5. 's' → logprob: -10.85055923461914
    6. ' is' → logprob: -11.60055923461914
    7. ' ' → logprob: -11.97555923461914
    8. ' +=' → logprob: -12.10055923461914
    9. ' may' → logprob: -12.35055923461914
    10. ' should' → logprob: -12.35055923461914

Token 359: ' look' (ID: 1631)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07079409062862396
    2. ' =' → logprob: -2.695794105529785
    3. ' be' → logprob: -7.320794105529785
    4. 'be' → logprob: -10.320794105529785
    5. 's' → logprob: -10.570794105529785
    6. '   ' → logprob: -10.820794105529785
    7. ' also' → logprob: -10.820794105529785
    8. '==' → logprob: -10.945794105529785
    9. 'also' → logprob: -11.070794105529785
    10. 'equal' → logprob: -11.570794105529785

Token 360: ' equal' (ID: 12629)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9406486749649048
    2. ' =' → logprob: -1.3156486749649048
    3. ' like' → logprob: -1.9406486749649048
    4. ' the' → logprob: -2.0656485557556152
    5. 'like' → logprob: -3.3156485557556152
    6. 'the' → logprob: -3.9406485557556152
    7. 'equal' → logprob: -5.565648555755615
    8. ' equal' → logprob: -5.690648555755615
    9. ' identical' → logprob: -5.940648555755615
    10. '   ' → logprob: -6.065648555755615

Token 361: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03783169016242027
    2. ' to' → logprob: -4.787831783294678
    3. ',' → logprob: -4.912831783294678
    4. '    
' → logprob: -5.162831783294678
    5. 's' → logprob: -5.787831783294678
    6. ' at' → logprob: -5.912831783294678
    7. '    ' → logprob: -6.787831783294678
    8. 'like' → logprob: -6.912831783294678
    9. ' but' → logprob: -7.037831783294678
    10. '=' → logprob: -7.037831783294678

Token 362: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009497050195932388
    2. 's' → logprob: -5.134497165679932
    3. ' max' → logprob: -6.134497165679932
    4. ' current' → logprob: -6.634497165679932
    5. 'max' → logprob: -10.009496688842773
    6. 'current' → logprob: -10.634496688842773
    7. ' ' → logprob: -11.509496688842773
    8. ' ' → logprob: -14.509496688842773
    9. ' the' → logprob: -14.634496688842773
    10. '   ' → logprob: -15.884496688842773

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. '_' → logprob: -12.375011444091797
    3. '1' → logprob: -12.500011444091797
    4. ' ' → logprob: -14.125011444091797
    5. '```' → logprob: -14.125011444091797
    6. 's' → logprob: -15.437511444091797
    7. ',' → logprob: -15.562511444091797
    8. '   ' → logprob: -15.625011444091797
    9. '}' → logprob: -15.750011444091797
    10. '₂' → logprob: -15.812511444091797

Token 364: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45795145630836487
    2. '    
' → logprob: -1.3329514265060425
    3. '
' → logprob: -2.332951545715332
    4. ' but' → logprob: -5.832951545715332
    5. '#' → logprob: -6.832951545715332
    6. ',' → logprob: -6.957951545715332
    7. '    
    
' → logprob: -8.082951545715332
    8. 'but' → logprob: -8.332951545715332
    9. ',
' → logprob: -8.457951545715332
    10. '
    
' → logprob: -8.832951545715332

Token 365: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3420219123363495
    2. '    
' → logprob: -1.7170219421386719
    3. '
' → logprob: -2.217021942138672
    4. '#' → logprob: -7.842021942138672
    5. '```' → logprob: -9.217021942138672
    6. '        
' → logprob: -9.467021942138672
    7. 's' → logprob: -9.467021942138672
    8. '    
    
' → logprob: -9.717021942138672
    9. '   
' → logprob: -9.967021942138672
    10. 'heap' → logprob: -9.967021942138672

Token 366: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18528006970882416
    2. '    
' → logprob: -3.0602800846099854
    3. ' #' → logprob: -3.3102800846099854
    4. '#' → logprob: -3.4352800846099854
    5. ' s' → logprob: -4.560279846191406
    6. ' there' → logprob: -4.560279846191406
    7. ' the' → logprob: -4.810279846191406
    8. ' for' → logprob: -5.310279846191406
    9. '
' → logprob: -5.435279846191406
    10. ' we' → logprob: -5.685279846191406

Token 367: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.6546022295951843
    2. '#' → logprob: -2.154602289199829
    3. ' code' → logprob: -2.279602289199829
    4. 'problem' → logprob: -2.779602289199829
    5. ' next' → logprob: -3.279602289199829
    6. ' difference' → logprob: -3.529602289199829
    7. ' rest' → logprob: -4.27960205078125
    8. ' question' → logprob: -4.52960205078125
    9. ' reason' → logprob: -4.77960205078125
    10. ' #' → logprob: -4.77960205078125

Token 368: ' clar' (ID: 16702)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.9533156156539917
    2. ' is' → logprob: -2.0783157348632812
    3. ' might' → logprob: -2.2033157348632812
    4. ''s' → logprob: -3.0783157348632812
    5. ' may' → logprob: -3.2033157348632812
    6. ' wants' → logprob: -3.3283157348632812
    7. ' states' → logprob: -3.4533157348632812
    8. '#' → logprob: -3.5783157348632812
    9. '   ' → logprob: -4.203315734863281
    10. 'contin' → logprob: -4.328315734863281

Token 369: 'ifies' (ID: 18573)
  Prédit: 'ifies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifies' → logprob: -0.017075657844543457
    2. 'ified' → logprob: -4.642075538635254
    3. 'ify' → logprob: -5.267075538635254
    4. 'if' → logprob: -6.517075538635254
    5. 'ar' → logprob: -8.892075538635254
    6. 'ification' → logprob: -9.017075538635254
    7. '```' → logprob: -9.017075538635254
    8. 'ifes' → logprob: -9.392075538635254
    9. '#' → logprob: -10.142075538635254
    10. 'ifi' → logprob: -10.642075538635254

Token 370: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.03874002397060394
    2. '   ' → logprob: -3.9137399196624756
    3. 'that' → logprob: -4.788740158081055
    4. ',' → logprob: -5.538740158081055
    5. ' s' → logprob: -5.913740158081055
    6. ' the' → logprob: -7.288740158081055
    7. ':' → logprob: -7.538740158081055
    8. '    ' → logprob: -8.538740158081055
    9. ' for' → logprob: -8.538740158081055
    10. '#' → logprob: -8.788740158081055

Token 371: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1621310710906982
    2. '   ' → logprob: -1.2871310710906982
    3. 'the' → logprob: -2.2871310710906982
    4. ' s' → logprob: -2.5371310710906982
    5. ' the' → logprob: -2.7871310710906982
    6. 'there' → logprob: -3.0371310710906982
    7. 's' → logprob: -3.4121310710906982
    8. ' there' → logprob: -4.162131309509277
    9. 'we' → logprob: -4.412131309509277
    10. 'for' → logprob: -4.537131309509277

Token 372: ' passengers' (ID: 37252)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -2.195582151412964
    2. ' intervals' → logprob: -2.320582151412964
    3. '#' → logprob: -2.570582151412964
    4. 's' → logprob: -2.695582151412964
    5. ' problem' → logprob: -2.820582151412964
    6. ' next' → logprob: -2.945582151412964
    7. 'difference' → logprob: -2.945582151412964
    8. 'interval' → logprob: -3.195582151412964
    9. ' difference' → logprob: -3.195582151412964
    10. 'problem' → logprob: -3.195582151412964

Token 373: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2505842447280884
    2. ' may' → logprob: -1.7505842447280884
    3. '   ' → logprob: -1.8755842447280884
    4. ' might' → logprob: -2.000584125518799
    5. ' choose' → logprob: -3.000584125518799
    6. 'may' → logprob: -3.125584125518799
    7. 'choose' → logprob: -3.500584125518799
    8. 'can' → logprob: -3.500584125518799
    9. 'might' → logprob: -4.000584125518799
    10. '#' → logprob: -4.250584125518799

Token 374: ' have' (ID: 679)
  Prédit: ' choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choose' → logprob: -0.5467666983604431
    2. 'choose' → logprob: -1.171766757965088
    3. '   ' → logprob: -3.671766757965088
    4. 'arr' → logprob: -4.796766757965088
    5. ' overlap' → logprob: -5.046766757965088
    6. ' rearr' → logprob: -5.046766757965088
    7. ' reorder' → logprob: -5.171766757965088
    8. ' start' → logprob: -5.421766757965088
    9. ' always' → logprob: -5.421766757965088
    10. 'start' → logprob: -5.671766757965088

Token 375: ' seat' (ID: 15512)
  Prédit: ' arbitrary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arbitrary' → logprob: -0.7398961782455444
    2. ' intervals' → logprob: -2.114896297454834
    3. 'over' → logprob: -2.489896297454834
    4. ' overlapping' → logprob: -2.864896297454834
    5. ' different' → logprob: -3.364896297454834
    6. ' the' → logprob: -3.489896297454834
    7. 'ar' → logprob: -3.989896297454834
    8. '   ' → logprob: -3.989896297454834
    9. 'different' → logprob: -4.114896297454834
    10. ' conflicts' → logprob: -4.114896297454834

Token 376: '
' (ID: 198)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.21411696076393127
    2. 'choices' → logprob: -1.9641169309616089
    3. '   ' → logprob: -3.4641170501708984
    4. ' conflicts' → logprob: -5.089117050170898
    5. ' assignments' → logprob: -5.214117050170898
    6. 's' → logprob: -5.589117050170898
    7. ' preferences' → logprob: -6.839117050170898
    8. ' choice' → logprob: -7.464117050170898
    9. '_choices' → logprob: -7.464117050170898
    10. 'choice' → logprob: -7.714117050170898

Token 377: '   ' (ID: 271)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.3348980247974396
    2. '   ' → logprob: -1.4598979949951172
    3. ' assignments' → logprob: -3.709897994995117
    4. 'choices' → logprob: -4.584897994995117
    5. 's' → logprob: -4.959897994995117
    6. ' preferences' → logprob: -5.334897994995117
    7. '_choices' → logprob: -6.959897994995117
    8. ' ' → logprob: -7.459897994995117
    9. ' assignment' → logprob: -7.709897994995117
    10. '  ' → logprob: -8.209897994995117

Token 378: ' #' (ID: 1069)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.09974617511034012
    2. 'choices' → logprob: -3.0997462272644043
    3. '   ' → logprob: -3.4747462272644043
    4. ' assignments' → logprob: -4.599746227264404
    5. 's' → logprob: -5.474746227264404
    6. ' ' → logprob: -6.724746227264404
    7. '_choices' → logprob: -7.099746227264404
    8. ' choice' → logprob: -7.724746227264404
    9. ' assignment' → logprob: -7.974746227264404
    10. ' preferences' → logprob: -8.349745750427246

Token 379: ' preferences' (ID: 26473)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.21500566601753235
    2. 'choices' → logprob: -1.84000563621521
    3. '   ' → logprob: -4.090005874633789
    4. ' preferences' → logprob: -5.215005874633789
    5. ' choice' → logprob: -5.715005874633789
    6. 'choice' → logprob: -5.965005874633789
    7. ' assignments' → logprob: -6.340005874633789
    8. 'preferences' → logprob: -6.590005874633789
    9. 's' → logprob: -7.340005874633789
    10. ' conflicts' → logprob: -7.590005874633789

Token 380: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07687725126743317
    2. '    
' → logprob: -3.3268773555755615
    3. '<|end|>' → logprob: -4.076877117156982
    4. '
' → logprob: -4.326877117156982
    5. ',' → logprob: -6.076877117156982
    6. '#' → logprob: -6.451877117156982
    7. '<|end|>' → logprob: -7.326877117156982
    8. '.' → logprob: -7.451877117156982
    9. ' and' → logprob: -7.576877117156982
    10. 'def' → logprob: -7.701877117156982

Token 381: ' any' (ID: 1062)
  Prédit: ' arbitrary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbitrary' → logprob: -0.9172766804695129
    2. ' the' → logprob: -2.417276620864868
    3. ' ways' → logprob: -2.417276620864868
    4. ' such' → logprob: -2.667276620864868
    5. ' any' → logprob: -3.417276620864868
    6. ' different' → logprob: -3.417276620864868
    7. ' various' → logprob: -3.542276620864868
    8. 'the' → logprob: -3.667276620864868
    9. ' some' → logprob: -3.792276620864868
    10. ' a' → logprob: -3.792276620864868

Token 382: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.446147084236145
    2. 'order' → logprob: -1.071147084236145
    3. ' way' → logprob: -4.8211469650268555
    4. 'way' → logprob: -5.9461469650268555
    5. ' ordering' → logprob: -6.5711469650268555
    6. ' possible' → logprob: -6.9461469650268555
    7. 'possible' → logprob: -6.9461469650268555
    8. 'ordering' → logprob: -6.9461469650268555
    9. '   ' → logprob: -7.8211469650268555
    10. '#' → logprob: -8.446146965026855

Token 383: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018407799303531647
    2. ' and' → logprob: -5.268407821655273
    3. '    
' → logprob: -5.518407821655273
    4. ',' → logprob: -5.768407821655273
    5. '<|end|>' → logprob: -6.018407821655273
    6. '
' → logprob: -7.143407821655273
    7. '#' → logprob: -7.518407821655273
    8. ' but' → logprob: -7.768407821655273
    9. '.' → logprob: -7.893407821655273
    10. '<|end|>' → logprob: -8.643407821655273

Token 384: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7866348624229431
    2. ' the' → logprob: -1.411634922027588
    3. ' that' → logprob: -2.411634922027588
    4. '#' → logprob: -3.536634922027588
    5. ' we' → logprob: -3.911634922027588
    6. '
' → logprob: -3.911634922027588
    7. ' may' → logprob: -4.036634922027588
    8. 'the' → logprob: -4.161634922027588
    9. '    
' → logprob: -4.536634922027588
    10. ' there' → logprob: -4.536634922027588

Token 385: ' worst' (ID: 20486)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5137935280799866
    2. ' problem' → logprob: -2.263793468475342
    3. ' intervals' → logprob: -2.513793468475342
    4. ' algorithm' → logprob: -3.638793468475342
    5. ' result' → logprob: -3.888793468475342
    6. '#' → logprob: -3.888793468475342
    7. ' next' → logprob: -4.138793468475342
    8. ' way' → logprob: -4.638793468475342
    9. ' heap' → logprob: -4.763793468475342
    10. ' current' → logprob: -4.763793468475342

Token 386: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5980331301689148
    2. '-case' → logprob: -1.7230331897735596
    3. 'case' → logprob: -1.9730331897735596
    4. ' case' → logprob: -2.0980331897735596
    5. ' possible' → logprob: -5.4730329513549805
    6. ' overlap' → logprob: -6.7230329513549805
    7. '    ' → logprob: -7.2230329513549805
    8. ' ' → logprob: -7.4730329513549805
    9. ' overlaps' → logprob: -7.5980329513549805
    10. '  ' → logprob: -7.5980329513549805

Token 387: ' needs' (ID: 4414)
  Prédit: ' scenario'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scenario' → logprob: -0.37206336855888367
    2. ' overlap' → logprob: -2.497063398361206
    3. ' can' → logprob: -3.372063398361206
    4. '   ' → logprob: -3.497063398361206
    5. ' for' → logprob: -3.997063398361206
    6. ' is' → logprob: -4.122063159942627
    7. ' could' → logprob: -4.247063159942627
    8. ' current' → logprob: -4.247063159942627
    9. ' number' → logprob: -4.497063159942627
    10. ' might' → logprob: -4.497063159942627

Token 388: ' accounting' (ID: 28185)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02726278081536293
    2. 'to' → logprob: -4.1522626876831055
    3. '   ' → logprob: -4.5272626876831055
    4. '    ' → logprob: -9.777262687683105
    5. '       ' → logprob: -10.277262687683105
    6. '           ' → logprob: -10.277262687683105
    7. '```' → logprob: -10.402262687683105
    8. ' be' → logprob: -10.527262687683105
    9. '_to' → logprob: -10.652262687683105
    10. ' only' → logprob: -10.902262687683105

Token 389: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05589228868484497
    2. '    
' → logprob: -3.0558922290802
    3. '
' → logprob: -5.305892467498779
    4. '#' → logprob: -6.680892467498779
    5. ',' → logprob: -8.680891990661621
    6. 'heap' → logprob: -8.680891990661621
    7. 'import' → logprob: -9.305891990661621
    8. ')' → logprob: -9.305891990661621
    9. '<|end|>' → logprob: -9.430891990661621
    10. '        
' → logprob: -9.680891990661621

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03315132111310959
    2. '    
' → logprob: -3.658151388168335
    3. '
' → logprob: -6.283151149749756
    4. 'heap' → logprob: -6.533151149749756
    5. '#' → logprob: -6.783151149749756
    6. 'import' → logprob: -7.408151149749756
    7. 'current' → logprob: -8.408151626586914
    8. 'available' → logprob: -8.408151626586914
    9. '```' → logprob: -8.908151626586914
    10. ' heap' → logprob: -9.158151626586914

Token 391: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22167517244815826
    2. '    
' → logprob: -1.971675157546997
    3. '
' → logprob: -2.846675157546997
    4. '#' → logprob: -7.346675395965576
    5. 'import' → logprob: -8.846674919128418
    6. 'heap' → logprob: -8.846674919128418
    7. '        
' → logprob: -8.971674919128418
    8. '   
' → logprob: -9.471674919128418
    9. ' 
' → logprob: -9.471674919128418
    10. ' heap' → logprob: -9.971674919128418

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021203041076660156
    2. '    
' → logprob: -4.39620304107666
    3. '
' → logprob: -5.14620304107666
    4. '#' → logprob: -7.39620304107666
    5. 'import' → logprob: -7.52120304107666
    6. '```' → logprob: -8.02120304107666
    7. ' heap' → logprob: -8.02120304107666
    8. 'heap' → logprob: -8.77120304107666
    9. ' current' → logprob: -9.02120304107666
    10. '    ' → logprob: -9.02120304107666

Token 393: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26370352506637573
    2. '#' (adapté à ' #') → logprob: -2.3887035846710205
    3. 'heap' → logprob: -2.6387035846710205
    4. ' heap' → logprob: -4.138703346252441
    5. 'import' → logprob: -4.638703346252441
    6. '
' → logprob: -4.888703346252441
    7. ' #' → logprob: -5.388703346252441
    8. '    
' → logprob: -5.888703346252441
    9. 'seat' → logprob: -5.888703346252441
    10. 'from' → logprob: -5.888703346252441

Token 394: ' According' (ID: 16344)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08470256626605988
    2. '#' → logprob: -3.709702491760254
    3. ' heap' → logprob: -3.709702491760254
    4. 'pq' → logprob: -5.209702491760254
    5. 'seat' → logprob: -5.209702491760254
    6. 'import' → logprob: -5.334702491760254
    7. 'se' → logprob: -5.834702491760254
    8. '   ' → logprob: -6.209702491760254
    9. 'active' → logprob: -6.959702491760254
    10. ' #' → logprob: -7.084702491760254

Token 395: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5303638577461243
    2. 'to' → logprob: -0.9053638577461243
    3. '   ' → logprob: -5.905364036560059
    4. '_to' → logprob: -5.905364036560059
    5. '=' → logprob: -7.530364036560059
    6. ':' → logprob: -8.030364036560059
    7. '#' → logprob: -8.280364036560059
    8. 'def' → logprob: -8.405364036560059
    9. ' =' → logprob: -8.905364036560059
    10. 'import' → logprob: -9.280364036560059

Token 396: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5144791007041931
    2. 'the' → logprob: -1.014479160308838
    3. ' your' → logprob: -5.264479160308838
    4. ' heap' → logprob: -5.389479160308838
    5. ' a' → logprob: -5.639479160308838
    6. ' some' → logprob: -5.764479160308838
    7. ' this' → logprob: -6.264479160308838
    8. ' problem' → logprob: -6.264479160308838
    9. 'heap' → logprob: -6.389479160308838
    10. 'interval' → logprob: -6.514479160308838

Token 397: ' editorial' (ID: 37857)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.7816603779792786
    2. 'comments' → logprob: -1.4066603183746338
    3. ' problem' → logprob: -2.281660318374634
    4. 'comment' → logprob: -2.656660318374634
    5. ' comments' → logprob: -3.531660318374634
    6. 'code' → logprob: -3.531660318374634
    7. '#' → logprob: -4.531660556793213
    8. 'heap' → logprob: -4.656660556793213
    9. ' code' → logprob: -4.781660556793213
    10. 'previous' → logprob: -4.781660556793213

Token 398: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27599263191223145
    2. ':' → logprob: -1.7759926319122314
    3. ':
' → logprob: -3.0259926319122314
    4. '   ' → logprob: -4.775992393493652
    5. ',
' → logprob: -5.400992393493652
    6. ' ,' → logprob: -5.525992393493652
    7. '#' → logprob: -6.275992393493652
    8. ' and' → logprob: -7.150992393493652
    9. ' for' → logprob: -7.400992393493652
    10. '
' → logprob: -7.525992393493652

Token 399: ' the' (ID: 290)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.8650818467140198
    2. '#' → logprob: -1.990081787109375
    3. 'problem' → logprob: -2.115081787109375
    4. 'the' → logprob: -2.615081787109375
    5. ' code' → logprob: -2.865081787109375
    6. 'comments' → logprob: -3.365081787109375
    7. ' comments' → logprob: -3.490081787109375
    8. 'code' → logprob: -3.865081787109375
    9. ' the' → logprob: -3.990081787109375
    10. ' previous' → logprob: -4.365081787109375

Token 400: ' sample' (ID: 10176)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5931015014648438
    2. ' problem' → logprob: -1.5931015014648438
    3. ' code' → logprob: -1.5931015014648438
    4. ' comments' → logprob: -1.5931015014648438
    5. 'comments' → logprob: -2.8431015014648438
    6. 'problem' → logprob: -3.3431015014648438
    7. 'code' → logprob: -4.093101501464844
    8. ' #' → logprob: -4.218101501464844
    9. ' comment' → logprob: -4.468101501464844
    10. ' rest' → logprob: -4.718101501464844

Token 401: ' explanation' (ID: 30547)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.028881102800369263
    2. ' input' → logprob: -4.653881072998047
    3. '_code' → logprob: -5.028881072998047
    4. 'code' → logprob: -5.778881072998047
    5. ':' → logprob: -6.028881072998047
    6. ' solution' → logprob: -6.903881072998047
    7. '[' → logprob: -7.153881072998047
    8. ' implementation' → logprob: -7.278881072998047
    9. ' intervals' → logprob: -7.653881072998047
    10. ' inputs' → logprob: -7.903881072998047

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3290352523326874
    2. '   ' → logprob: -1.3290352821350098
    3. ':' → logprob: -4.70403528213501
    4. ',
' → logprob: -5.57903528213501
    5. 'import' → logprob: -7.07903528213501
    6. '    
' → logprob: -7.82903528213501
    7. ':
' → logprob: -7.82903528213501
    8. '#' → logprob: -8.079034805297852
    9. ' ,' → logprob: -8.579034805297852
    10. '
' → logprob: -8.954034805297852

Token 403: ' s' (ID: 265)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.0537112951278687
    2. '#' → logprob: -2.178711414337158
    3. 'heap' → logprob: -2.178711414337158
    4. '   ' → logprob: -2.303711414337158
    5. ' seat' → logprob: -2.928711414337158
    6. ' seats' → logprob: -2.928711414337158
    7. ' s' → logprob: -3.053711414337158
    8. ' #' → logprob: -3.303711414337158
    9. ' free' → logprob: -3.928711414337158
    10. 'import' → logprob: -4.553711414337158

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006508959457278252
    2. ' =' → logprob: -5.631508827209473
    3. '2' → logprob: -6.506508827209473
    4. '=' → logprob: -7.256508827209473
    5. ' ' → logprob: -8.256508827209473
    6. '_' → logprob: -9.006508827209473
    7. '   ' → logprob: -9.256508827209473
    8. '#' → logprob: -10.006508827209473
    9. 's' → logprob: -10.506508827209473
    10. '
' → logprob: -10.881508827209473

Token 405: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00181928975507617
    2. '=' → logprob: -6.376819133758545
    3. '   ' → logprob: -9.501819610595703
    4. ',' → logprob: -11.126819610595703
    5. ' is' → logprob: -12.001819610595703
    6. ' =
' → logprob: -12.126819610595703
    7. ' +=' → logprob: -12.376819610595703
    8. ' ' → logprob: -12.626819610595703
    9. ' can' → logprob: -13.126819610595703
    10. '=max' → logprob: -13.501819610595703

Token 406: ' be' (ID: 413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4704396426677704
    2. '=' → logprob: -1.2204396724700928
    3. ' be' → logprob: -2.7204396724700928
    4. '=max' → logprob: -5.470439434051514
    5. 'be' → logprob: -5.595439434051514
    6. '   ' → logprob: -6.345439434051514
    7. '+=' → logprob: -7.220439434051514
    8. ' +=' → logprob: -7.470439434051514
    9. '=
' → logprob: -7.720439434051514
    10. 'def' → logprob: -8.095439910888672

Token 407: ' computed' (ID: 46716)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4004777669906616
    2. 's' → logprob: -1.7754777669906616
    3. ' calculated' → logprob: -2.150477886199951
    4. 'n' → logprob: -2.525477886199951
    5. ' max' → logprob: -2.650477886199951
    6. ' s' → logprob: -2.900477886199951
    7. 'found' → logprob: -3.150477886199951
    8. 'cal' → logprob: -3.150477886199951
    9. ' computed' → logprob: -3.275477886199951
    10. 'computed' → logprob: -3.275477886199951

Token 408: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18344345688819885
    2. ' by' → logprob: -2.308443546295166
    3. ' =' → logprob: -3.308443546295166
    4. ' using' → logprob: -4.308443546295166
    5. ' as' → logprob: -4.683443546295166
    6. '=' → logprob: -5.683443546295166
    7. 'using' → logprob: -6.308443546295166
    8. 'by' → logprob: -6.433443546295166
    9. '    
' → logprob: -7.433443546295166
    10. '    ' → logprob: -7.933443546295166

Token 409: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5435460209846497
    2. '0' → logprob: -1.0435459613800049
    3. ' ' → logprob: -3.668545961380005
    4. 'n' → logprob: -3.918545961380005
    5. ' n' → logprob: -5.043546199798584
    6. '1' → logprob: -5.543546199798584
    7. 'max' → logprob: -5.543546199798584
    8. ' max' → logprob: -6.168546199798584
    9. '[]' → logprob: -6.793546199798584
    10. 'len' → logprob: -6.918546199798584

Token 410: ' maximum' (ID: 10562)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.895577073097229
    2. 'same' → logprob: -1.895577073097229
    3. 'length' → logprob: -2.1455769538879395
    4. 'maximum' → logprob: -3.0205769538879395
    5. 'max' → logprob: -3.6455769538879395
    6. ' minimum' → logprob: -3.8955769538879395
    7. 'heap' → logprob: -3.8955769538879395
    8. '#' → logprob: -3.8955769538879395
    9. 'len' → logprob: -4.0205769538879395
    10. 'min' → logprob: -4.0205769538879395

Token 411: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0724303722381592
    2. ' number' → logprob: -1.3224303722381592
    3. ' current' → logprob: -1.8224303722381592
    4. 'current' → logprob: -2.572430372238159
    5. '_overlap' → logprob: -3.322430372238159
    6. ' overlap' → logprob: -3.947430372238159
    7. ' of' → logprob: -4.197430610656738
    8. 'number' → logprob: -4.697430610656738
    9. 'over' → logprob: -4.697430610656738
    10. 'heap' → logprob: -4.697430610656738

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006094100419431925
    2. ' of' → logprob: -5.506093978881836
    3. '    ' → logprob: -8.131093978881836
    4. 'of' → logprob: -8.256093978881836
    5. 'import' → logprob: -8.381093978881836
    6. '(' → logprob: -8.756093978881836
    7. 'heap' → logprob: -8.881093978881836
    8. '+' → logprob: -9.006093978881836
    9. '    
' → logprob: -9.256093978881836
    10. '=' → logprob: -9.506093978881836

Token 413: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026685383170843124
    2. 'current' → logprob: -4.7766852378845215
    3. 'heap' → logprob: -5.1516852378845215
    4. 'over' → logprob: -6.4016852378845215
    5. ' of' → logprob: -6.5266852378845215
    6. 'count' → logprob: -6.6516852378845215
    7. 'size' → logprob: -6.9016852378845215
    8. 'end' → logprob: -7.1516852378845215
    9. 'of' → logprob: -7.2766852378845215
    10. '_' → logprob: -7.9016852378845215

Token 414: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.1849278211593628
    2. ' current' → logprob: -1.8099278211593628
    3. ' number' → logprob: -2.0599279403686523
    4. 'heap' → logprob: -2.0599279403686523
    5. 'number' → logprob: -3.0599279403686523
    6. 'over' → logprob: -3.1849279403686523
    7. ' overlap' → logprob: -3.1849279403686523
    8. 'len' → logprob: -3.9349279403686523
    9. 'size' → logprob: -4.059927940368652
    10. ' heap' → logprob: -4.059927940368652

Token 415: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.491744726896286
    2. 'of' → logprob: -0.9917447566986084
    3. '_of' → logprob: -4.491744518280029
    4. '   ' → logprob: -5.491744518280029
    5. '(len' → logprob: -7.616744518280029
    6. 'len' → logprob: -7.991744518280029
    7. '(' → logprob: -8.616744995117188
    8. '(
' → logprob: -8.616744995117188
    9. ' ' → logprob: -8.741744995117188
    10. '(max' → logprob: -9.116744995117188

Token 416: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.519403874874115
    2. ' intervals' → logprob: -1.7694039344787598
    3. 'over' → logprob: -2.8944039344787598
    4. 'pass' → logprob: -3.1444039344787598
    5. 'current' → logprob: -3.5194039344787598
    6. 'con' → logprob: -4.14440393447876
    7. 'end' → logprob: -4.26940393447876
    8. '   ' → logprob: -4.26940393447876
    9. 'active' → logprob: -4.51940393447876
    10. 'start' → logprob: -4.89440393447876

Token 417: ' whose' (ID: 12119)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09039381891489029
    2. ' that' → logprob: -3.2153937816619873
    3. 'that' → logprob: -3.7153937816619873
    4. 'starting' → logprob: -5.340394020080566
    5. 'ending' → logprob: -5.465394020080566
    6. 'with' → logprob: -5.715394020080566
    7. 'over' → logprob: -5.965394020080566
    8. 'active' → logprob: -6.715394020080566
    9. ' overlapping' → logprob: -7.090394020080566
    10. 'currently' → logprob: -7.340394020080566

Token 418: ' intervals' (ID: 49900)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16933396458625793
    2. ' start' → logprob: -1.9193339347839355
    3. 'a' → logprob: -5.2943339347839355
    4. 'end' → logprob: -6.4193339347839355
    5. 'b' → logprob: -7.1693339347839355
    6. ' intervals' → logprob: -7.4193339347839355
    7. ' a' → logprob: -7.7943339347839355
    8. ' end' → logprob: -8.794334411621094
    9. 'interval' → logprob: -9.044334411621094
    10. 'starts' → logprob: -9.294334411621094

Token 419: ' are' (ID: 553)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7787351608276367
    2. '[' → logprob: -1.4037351608276367
    3. 'inter' → logprob: -2.6537351608276367
    4. 'over' → logprob: -2.7787351608276367
    5. ' start' → logprob: -3.1537351608276367
    6. '   ' → logprob: -3.4037351608276367
    7. ' overlap' → logprob: -3.4037351608276367
    8. ' pair' → logprob: -4.653735160827637
    9. '```' → logprob: -5.028735160827637
    10. '[start' → logprob: -5.403735160827637

Token 420: ' pair' (ID: 10610)
  Prédit: 'nested'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nested' → logprob: -0.33307674527168274
    2. ' nested' → logprob: -1.5830767154693604
    3. '[' → logprob: -4.3330769538879395
    4. 'starting' → logprob: -4.5830769538879395
    5. 'start' → logprob: -4.8330769538879395
    6. 'strict' → logprob: -5.2080769538879395
    7. 'not' → logprob: -5.3330769538879395
    8. 'pair' → logprob: -5.3330769538879395
    9. ' overlapping' → logprob: -5.5830769538879395
    10. 'com' → logprob: -5.7080769538879395

Token 421: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.048107486218214035
    2. '   ' → logprob: -3.548107385635376
    3. '(' → logprob: -4.798107624053955
    4. '           ' → logprob: -5.548107624053955
    5. '       ' → logprob: -6.298107624053955
    6. '```' → logprob: -7.173107624053955
    7. 'w' → logprob: -7.548107624053955
    8. '(
' → logprob: -7.548107624053955
    9. 'over' → logprob: -7.923107624053955
    10. '[' → logprob: -8.048107147216797

Token 422: ' intersect' (ID: 64353)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.12133248150348663
    2. ' overlapping' → logprob: -2.2463324069976807
    3. 'inter' → logprob: -4.99633264541626
    4. '[' → logprob: -7.37133264541626
    5. 'dis' → logprob: -8.371332168579102
    6. '   ' → logprob: -8.496332168579102
    7. '1' → logprob: -9.246332168579102
    8. ' dis' → logprob: -9.371332168579102
    9. ' intersect' → logprob: -9.871332168579102
    10. 'distinct' → logprob: -9.996332168579102

Token 423: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.009783241897821426
    2. '           ' → logprob: -6.0097832679748535
    3. '   ' → logprob: -6.5097832679748535
    4. '       ' → logprob: -6.8847832679748535
    5. 's' → logprob: -7.2597832679748535
    6. '(
' → logprob: -7.5097832679748535
    7. '(' → logprob: -7.8847832679748535
    8. ')
' → logprob: -8.009782791137695
    9. ')' → logprob: -8.384782791137695
    10. '()
' → logprob: -8.384782791137695

Token 424: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10604021698236465
    2. '    
' → logprob: -3.2310402393341064
    3. '
' → logprob: -3.6060402393341064
    4. '.' → logprob: -5.106040000915527
    5. 'def' → logprob: -5.106040000915527
    6. '#' → logprob: -5.606040000915527
    7. ' =' → logprob: -5.606040000915527
    8. ',' → logprob: -5.856040000915527
    9. '.
' → logprob: -6.481040000915527
    10. 'import' → logprob: -6.856040000915527

Token 425: ' with' (ID: 483)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011773698031902313
    2. '   ' → logprob: -5.636773586273193
    3. ' and' → logprob: -6.636773586273193
    4. ' is' → logprob: -7.136773586273193
    5. 'not' → logprob: -7.136773586273193
    6. ' are' → logprob: -7.386773586273193
    7. '    ' → logprob: -7.761773586273193
    8. ':' → logprob: -7.761773586273193
    9. ' does' → logprob: -7.886773586273193
    10. ' with' → logprob: -8.136774063110352

Token 426: ' overlapping' (ID: 90457)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.8208049535751343
    2. ' no' → logprob: -2.570805072784424
    3. ' endpoints' → logprob: -2.945805072784424
    4. 'start' → logprob: -3.070805072784424
    5. ' a' → logprob: -3.195805072784424
    6. 'in' → logprob: -3.445805072784424
    7. ' different' → logprob: -3.570805072784424
    8. 'a' → logprob: -3.695805072784424
    9. 'end' → logprob: -3.820805072784424
    10. ' intervals' → logprob: -3.945805072784424

Token 427: ' travel' (ID: 6410)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.1540967226028442
    2. ' endpoints' → logprob: -1.4040967226028442
    3. 'points' → logprob: -3.0290966033935547
    4. 'length' → logprob: -3.1540966033935547
    5. 'start' → logprob: -3.1540966033935547
    6. ' intervals' → logprob: -3.2790966033935547
    7. 'starts' → logprob: -3.6540966033935547
    8. '   ' → logprob: -3.6540966033935547
    9. '_end' → logprob: -3.7790966033935547
    10. ' points' → logprob: -3.7790966033935547

Token 428: ' sections' (ID: 21436)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6061391234397888
    2. '   ' → logprob: -1.7311391830444336
    3. 'points' → logprob: -2.1061391830444336
    4. ' points' → logprob: -3.4811391830444336
    5. ')' → logprob: -3.9811391830444336
    6. 'segments' → logprob: -4.231139183044434
    7. 'times' → logprob: -4.481139183044434
    8. '_points' → logprob: -4.606139183044434
    9. '_' → logprob: -4.981139183044434
    10. ',' → logprob: -5.106139183044434

Token 429: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030486267060041428
    2. '    
' → logprob: -5.030486106872559
    3. '.' → logprob: -5.155486106872559
    4. '
' → logprob: -5.280486106872559
    5. 'def' → logprob: -6.030486106872559
    6. ',' → logprob: -6.155486106872559
    7. ' =' → logprob: -6.905486106872559
    8. '.
' → logprob: -7.155486106872559
    9. ':
' → logprob: -7.280486106872559
    10. ')' → logprob: -7.280486106872559

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011458270251750946
    2. '#' → logprob: -5.761458396911621
    3. '    ' → logprob: -7.011458396911621
    4. ' which' → logprob: -7.136458396911621
    5. ' so' → logprob: -7.386458396911621
    6. ')' → logprob: -7.386458396911621
    7. ' =' → logprob: -7.511458396911621
    8. '       ' → logprob: -7.636458396911621
    9. ' not' → logprob: -7.636458396911621
    10. ',' → logprob: -8.011458396911621

Token 431: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04461924731731415
    2. '#' (adapté à ' #') → logprob: -4.419619083404541
    3. ' which' → logprob: -4.544619083404541
    4. ' so' → logprob: -4.794619083404541
    5. ' but' → logprob: -6.044619083404541
    6. 'which' → logprob: -6.044619083404541
    7. ' and' → logprob: -6.169619083404541
    8. 'so' → logprob: -7.294619083404541
    9. '    
' → logprob: -7.294619083404541
    10. '    ' → logprob: -7.669619083404541

Token 432: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11351639032363892
    2. '#' → logprob: -2.863516330718994
    3. ' so' → logprob: -4.238516330718994
    4. ' which' → logprob: -4.238516330718994
    5. '       ' → logprob: -4.988516330718994
    6. 'which' → logprob: -5.988516330718994
    7. ' and' → logprob: -6.113516330718994
    8. ' not' → logprob: -6.488516330718994
    9. ' but' → logprob: -6.863516330718994
    10. ' #' → logprob: -7.238516330718994

Token 433: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7377840876579285
    2. ' is' → logprob: -1.1127841472625732
    3. 'can' → logprob: -2.9877841472625732
    4. 'is' → logprob: -3.2377841472625732
    5. 'means' → logprob: -4.362783908843994
    6. ' means' → logprob: -4.612783908843994
    7. ' might' → logprob: -4.612783908843994
    8. '#' → logprob: -4.737783908843994
    9. ' =' → logprob: -4.737783908843994
    10. ' requires' → logprob: -5.112783908843994

Token 434: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4779645800590515
    2. ' be' → logprob: -0.9779645800590515
    3. 'not' → logprob: -6.852964401245117
    4. 'also' → logprob: -7.477964401245117
    5. 'continue' → logprob: -7.602964401245117
    6. '#' → logprob: -7.727964401245117
    7. ' also' → logprob: -8.102964401245117
    8. '   ' → logprob: -9.102964401245117
    9. ' not' → logprob: -9.227964401245117
    10. ' still' → logprob: -9.227964401245117

Token 435: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.27255183458328247
    2. ' found' → logprob: -1.8975517749786377
    3. '```' → logprob: -4.397552013397217
    4. 'done' → logprob: -4.522552013397217
    5. 'computed' → logprob: -4.647552013397217
    6. 'determ' → logprob: -4.647552013397217
    7. 'covered' → logprob: -4.897552013397217
    8. ' determined' → logprob: -5.897552013397217
    9. 'n' → logprob: -6.022552013397217
    10. 'checked' → logprob: -6.022552013397217

Token 436: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.24378597736358643
    2. '   ' → logprob: -1.7437859773635864
    3. ' using' → logprob: -3.493785858154297
    4. 'by' → logprob: -5.618785858154297
    5. ' =' → logprob: -6.118785858154297
    6. 'using' → logprob: -6.493785858154297
    7. ' as' → logprob: -6.993785858154297
    8. 'def' → logprob: -7.118785858154297
    9. ',' → logprob: -7.618785858154297
    10. ' with' → logprob: -7.868785858154297

Token 437: ' checking' (ID: 19141)
  Prédit: 'sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorting' → logprob: -0.9189909100532532
    2. ' sorting' → logprob: -1.0439908504486084
    3. 'using' → logprob: -2.0439908504486084
    4. ' using' → logprob: -3.0439908504486084
    5. 'import' → logprob: -3.4189908504486084
    6. 'heap' → logprob: -5.5439910888671875
    7. ' first' → logprob: -5.6689910888671875
    8. 'first' → logprob: -5.6689910888671875
    9. 'continu' → logprob: -5.7939910888671875
    10. 'maint' → logprob: -6.0439910888671875

Token 438: ' the' (ID: 290)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7315558195114136
    2. 'end' → logprob: -1.7315558195114136
    3. ' the' → logprob: -2.981555938720703
    4. '   ' → logprob: -2.981555938720703
    5. ' intervals' → logprob: -3.106555938720703
    6. 'ends' → logprob: -3.231555938720703
    7. 'active' → logprob: -3.356555938720703
    8. 'the' → logprob: -3.356555938720703
    9. 'starts' → logprob: -4.606555938720703
    10. 'points' → logprob: -4.606555938720703

Token 439: ' size' (ID: 2349)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.631798505783081
    2. 'interval' → logprob: -1.006798505783081
    3. 'heap' → logprob: -3.506798505783081
    4. 'end' → logprob: -3.756798505783081
    5. ' endpoints' → logprob: -4.63179874420166
    6. 'n' → logprob: -4.75679874420166
    7. ' heap' → logprob: -5.50679874420166
    8. 'start' → logprob: -5.75679874420166
    9. ' ends' → logprob: -5.88179874420166
    10. 'ends' → logprob: -6.13179874420166

Token 440: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43090203404426575
    2. ' =' → logprob: -1.9309020042419434
    3. '=' → logprob: -2.5559020042419434
    4. ' of' → logprob: -2.6809020042419434
    5. 'of' → logprob: -4.305902004241943
    6. '    ' → logprob: -5.430902004241943
    7. ' intervals' → logprob: -5.555902004241943
    8. '[' → logprob: -5.680902004241943
    9. '_' → logprob: -5.805902004241943
    10. 's' → logprob: -5.930902004241943

Token 441: ' "' (ID: 392)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.7949697375297546
    2. 'interval' → logprob: -0.9199697375297546
    3. 'heap' → logprob: -3.1699697971343994
    4. ' a' → logprob: -3.5449697971343994
    5. ' the' → logprob: -3.6699697971343994
    6. 'the' → logprob: -3.9199697971343994
    7. '[]' → logprob: -4.16996955871582
    8. 'a' → logprob: -4.79496955871582
    9. '[]
' → logprob: -6.29496955871582
    10. '[' → logprob: -6.29496955871582

Token 442: 'the' (ID: 3086)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.13537950813770294
    2. 'heap' → logprob: -2.3853795528411865
    3. ' intervals' → logprob: -4.260379314422607
    4. '[]' → logprob: -4.385379314422607
    5. '[' → logprob: -6.135379314422607
    6. 'the' → logprob: -6.510379314422607
    7. '```' → logprob: -7.385379314422607
    8. '[]
' → logprob: -7.510379314422607
    9. 'a' → logprob: -7.635379314422607
    10. ' heap' → logprob: -8.135379791259766

Token 443: ' maximum' (ID: 10562)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.828629195690155
    2. ' heap' → logprob: -1.5786292552947998
    3. 'largest' → logprob: -2.5786292552948
    4. ' intervals' → logprob: -2.7036292552948
    5. ' largest' → logprob: -2.9536292552948
    6. 'max' → logprob: -2.9536292552948
    7. 'interval' → logprob: -3.9536292552948
    8. ' longest' → logprob: -4.078629016876221
    9. ' max' → logprob: -4.328629016876221
    10. ' maximum' → logprob: -4.828629016876221

Token 444: ' number' (ID: 2086)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.1149061843752861
    2. ' clique' → logprob: -2.489906072616577
    3. '_cl' → logprob: -4.739906311035156
    4. 'heap' → logprob: -4.989906311035156
    5. '```' → logprob: -5.239906311035156
    6. 'size' → logprob: -7.864906311035156
    7. '
' → logprob: -7.864906311035156
    8. '_heap' → logprob: -7.989906311035156
    9. '  
' → logprob: -8.114906311035156
    10. 's' → logprob: -8.114906311035156

Token 445: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8596868515014648
    2. ' of' → logprob: -0.9846868515014648
    3. 'cl' → logprob: -2.859686851501465
    4. 'heap' → logprob: -3.359686851501465
    5. '   ' → logprob: -3.484686851501465
    6. '       ' → logprob: -4.484686851501465
    7. '_of' → logprob: -4.609686851501465
    8. '[' → logprob: -4.609686851501465
    9. 's' → logprob: -5.484686851501465
    10. 'interval' → logprob: -5.484686851501465

Token 446: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.026183128356933594
    2. 'interval' → logprob: -3.9011831283569336
    3. ' overlapping' → logprob: -6.151183128356934
    4. 'over' → logprob: -6.276183128356934
    5. ' passengers' → logprob: -8.526183128356934
    6. 'inter' → logprob: -9.026183128356934
    7. ' tokens' → logprob: -9.276183128356934
    8. ' endpoints' → logprob: -9.276183128356934
    9. ' active' → logprob: -9.526183128356934
    10. ' mutually' → logprob: -9.651183128356934

Token 447: ' overlapping' (ID: 90457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1180928945541382
    2. ' that' → logprob: -1.1180928945541382
    3. 'that' → logprob: -1.2430928945541382
    4. 'with' → logprob: -4.493093013763428
    5. '[' → logprob: -4.993093013763428
    6. 'inter' → logprob: -4.993093013763428
    7. 'over' → logprob: -5.118093013763428
    8. 'ending' → logprob: -5.243093013763428
    9. ')' → logprob: -5.493093013763428
    10. 'cont' → logprob: -6.743093013763428

Token 448: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.13792234659194946
    2. 'at' → logprob: -2.1379222869873047
    3. '   ' → logprob: -5.387922286987305
    4. '
' → logprob: -6.512922286987305
    5. 'with' → logprob: -7.387922286987305
    6. ' with' → logprob: -7.512922286987305
    7. ',' → logprob: -7.637922286987305
    8. '```' → logprob: -7.762922286987305
    9. 'in' → logprob: -8.012922286987305
    10. '<|end|>' → logprob: -8.262922286987305

Token 449: ' a' (ID: 261)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.2849756479263306
    2. 'any' → logprob: -1.6599756479263306
    3. ' a' → logprob: -2.034975528717041
    4. 'some' → logprob: -2.034975528717041
    5. 'a' → logprob: -2.284975528717041
    6. ' some' → logprob: -2.659975528717041
    7. ' the' → logprob: -3.534975528717041
    8. 'the' → logprob: -3.909975528717041
    9. 'least' → logprob: -3.909975528717041
    10. ' least' → logprob: -4.284975528717041

Token 450: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5370745062828064
    2. ' point' → logprob: -1.0370745658874512
    3. 'single' → logprob: -4.162074565887451
    4. ' single' → logprob: -4.662074565887451
    5. '
' → logprob: -4.787074565887451
    6. ' given' → logprob: -4.787074565887451
    7. 'space' → logprob: -5.287074565887451
    8. 'given' → logprob: -5.912074565887451
    9. 'time' → logprob: -6.037074565887451
    10. 'start' → logprob: -6.537074565887451

Token 451: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.787873387336731
    2. '"' → logprob: -1.162873387336731
    3. ' +' → logprob: -2.4128732681274414
    4. '+' → logprob: -3.1628732681274414
    5. ' "' → logprob: -3.4128732681274414
    6. ')' → logprob: -4.037873268127441
    7. '"
' → logprob: -4.787873268127441
    8. ')"' → logprob: -4.787873268127441
    9. '")' → logprob: -5.412873268127441
    10. ' in' → logprob: -5.412873268127441

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18053093552589417
    2. '"' → logprob: -3.1805310249328613
    3. ')' → logprob: -3.4305310249328613
    4. '")' → logprob: -3.4305310249328613
    5. ' in' → logprob: -3.5555310249328613
    6. 'in' → logprob: -5.430531024932861
    7. ' "' → logprob: -5.930531024932861
    8. ' or' → logprob: -5.930531024932861
    9. ')"' → logprob: -6.055531024932861
    10. ',' → logprob: -6.305531024932861

Token 453: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9300630688667297
    2. '   ' → logprob: -1.055063009262085
    3. '"' → logprob: -2.555063009262085
    4. ' +' → logprob: -2.680063009262085
    5. ')' → logprob: -3.555063009262085
    6. ' or' → logprob: -3.680063009262085
    7. 'in' → logprob: -5.055063247680664
    8. 'or' → logprob: -5.180063247680664
    9. ')+' → logprob: -5.430063247680664
    10. ' in' → logprob: -5.680063247680664

Token 454: ' but' (ID: 889)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6349144577980042
    2. ' in' → logprob: -2.3849143981933594
    3. '+' → logprob: -2.6349143981933594
    4. '")' → logprob: -3.0099143981933594
    5. ' +' → logprob: -3.0099143981933594
    6. ')' → logprob: -3.2599143981933594
    7. 'in' → logprob: -3.3849143981933594
    8. '   ' → logprob: -3.6349143981933594
    9. ' plus' → logprob: -3.6349143981933594
    10. ' or' → logprob: -3.7599143981933594

Token 455: ' excluding' (ID: 76651)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1392616629600525
    2. ' with' → logprob: -2.7642617225646973
    3. ' that' → logprob: -4.014261722564697
    4. ' also' → logprob: -4.764261722564697
    5. ' ending' → logprob: -4.764261722564697
    6. ' considering' → logprob: -5.014261722564697
    7. '   ' → logprob: -5.514261722564697
    8. 'not' → logprob: -5.639261722564697
    9. ' only' → logprob: -6.014261722564697
    10. ' using' → logprob: -6.389261722564697

Token 456: ' some' (ID: 1236)
  Prédit: ' endpoints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.657185971736908
    2. ' intervals' → logprob: -1.5321860313415527
    3. 'interval' → logprob: -1.6571860313415527
    4. 'end' → logprob: -3.2821860313415527
    5. ' the' → logprob: -4.782186031341553
    6. 'the' → logprob: -5.282186031341553
    7. 'points' → logprob: -5.532186031341553
    8. ' end' → logprob: -5.782186031341553
    9. 'exact' → logprob: -6.032186031341553
    10. ')' → logprob: -6.282186031341553

Token 457: ' subtle' (ID: 39682)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.7281626462936401
    2. ' endpoints' → logprob: -1.1031626462936401
    3. 'interval' → logprob: -3.4781627655029297
    4. ')' → logprob: -3.7281627655029297
    5. ' points' → logprob: -3.8531627655029297
    6. 'end' → logprob: -4.47816276550293
    7. ' that' → logprob: -4.60316276550293
    8. 'points' → logprob: -4.60316276550293
    9. ' of' → logprob: -4.60316276550293
    10. ' )' → logprob: -4.60316276550293

Token 458: ' conditions' (ID: 6409)
  Prédit: ' cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.5197713971138
    2. ' details' → logprob: -2.0197713375091553
    3. 'cases' → logprob: -2.0197713375091553
    4. ' detail' → logprob: -3.0197713375091553
    5. ' corner' → logprob: -3.8947713375091553
    6. ' edge' → logprob: -4.019771575927734
    7. 'details' → logprob: -4.644771575927734
    8. ' intervals' → logprob: -4.894771575927734
    9. ' case' → logprob: -5.144771575927734
    10. 'case' → logprob: -5.519771575927734

Token 459: '".
' (ID: 26880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8327656984329224
    2. ')' → logprob: -1.8327656984329224
    3. '"' → logprob: -2.082765579223633
    4. ':' → logprob: -3.207765579223633
    5. '<|end|>' → logprob: -3.207765579223633
    6. '")' → logprob: -3.457765579223633
    7. '```' → logprob: -3.832765579223633
    8. ',' → logprob: -3.832765579223633
    9. '.' → logprob: -3.957765579223633
    10. '_' → logprob: -4.582765579223633

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11410588026046753
    2. '#' → logprob: -3.9891059398651123
    3. 'max' → logprob: -3.9891059398651123
    4. 'heap' → logprob: -3.9891059398651123
    5. '    
' → logprob: -4.114105701446533
    6. 'from' → logprob: -5.739105701446533
    7. '
' → logprob: -5.864105701446533
    8. 'count' → logprob: -6.114105701446533
    9. 'current' → logprob: -6.114105701446533
    10. ' heap' → logprob: -6.239105701446533

Token 461: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3020581305027008
    2. 'heap' → logprob: -1.8020581007003784
    3. 'interval' → logprob: -4.052058219909668
    4. '
' → logprob: -4.177058219909668
    5. ' heap' → logprob: -4.177058219909668
    6. ' intervals' → logprob: -4.802058219909668
    7. '#' → logprob: -5.177058219909668
    8. 'import' → logprob: -5.177058219909668
    9. '    
' → logprob: -5.427058219909668
    10. ' ends' → logprob: -5.427058219909668

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01813625358045101
    2. 'heap' → logprob: -5.143136024475098
    3. '#' → logprob: -5.643136024475098
    4. '    
' → logprob: -6.143136024475098
    5. 'import' → logprob: -6.643136024475098
    6. '
' → logprob: -7.518136024475098
    7. 'seat' → logprob: -7.518136024475098
    8. 'max' → logprob: -7.643136024475098
    9. ' heap' → logprob: -7.768136024475098
    10. 'active' → logprob: -7.893136024475098

Token 463: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9864269495010376
    2. '   ' → logprob: -1.9864269495010376
    3. 'active' → logprob: -2.236426830291748
    4. '#' (adapté à ' #') → logprob: -2.486426830291748
    5. 'max' → logprob: -2.486426830291748
    6. 'end' → logprob: -3.236426830291748
    7. 'points' → logprob: -3.486426830291748
    8. 'ends' → logprob: -4.361426830291748
    9. 'interval' → logprob: -4.361426830291748
    10. 'import' → logprob: -4.361426830291748

Token 464: ' However' (ID: 5551)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.32956305146217346
    2. 'interval' → logprob: -2.8295631408691406
    3. 'end' → logprob: -3.2045631408691406
    4. 'pq' → logprob: -3.4545631408691406
    5. '#' → logprob: -3.5795631408691406
    6. 'active' → logprob: -3.8295631408691406
    7. 'points' → logprob: -4.204563140869141
    8. 'ends' → logprob: -4.329563140869141
    9. 'import' → logprob: -4.329563140869141
    10. ' heap' → logprob: -4.579563140869141

Token 465: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2509846091270447
    2. ',' → logprob: -1.6259846687316895
    3. '<|end|>' → logprob: -5.2509846687316895
    4. '<|end|>' → logprob: -6.0009846687316895
    5. ' for' → logprob: -6.1259846687316895
    6. 'def' → logprob: -6.1259846687316895
    7. '#' → logprob: -6.1259846687316895
    8. '.' → logprob: -6.2509846687316895
    9. 's' → logprob: -6.7509846687316895
    10. ':' → logprob: -7.0009846687316895

Token 466: ' the' (ID: 290)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.42756387591362
    2. '#' → logprob: -2.0525639057159424
    3. ' heap' → logprob: -2.0525639057159424
    4. 'import' → logprob: -3.6775639057159424
    5. ' seats' → logprob: -4.177563667297363
    6. ' #' → logprob: -4.427563667297363
    7. 'interval' → logprob: -4.552563667297363
    8. '   ' → logprob: -5.552563667297363
    9. ' intervals' → logprob: -5.552563667297363
    10. 'seat' → logprob: -5.552563667297363

Token 467: ' problem' (ID: 4792)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6269480586051941
    2. '#' → logprob: -1.5019481182098389
    3. 'import' → logprob: -2.251948118209839
    4. ' heap' → logprob: -3.251948118209839
    5. 'def' → logprob: -4.62694787979126
    6. '   ' → logprob: -4.62694787979126
    7. '
' → logprob: -4.75194787979126
    8. 'se' → logprob: -4.87694787979126
    9. ' #' → logprob: -5.00194787979126
    10. 'interval' → logprob: -5.00194787979126

Token 468: ' itself' (ID: 8807)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4169813394546509
    2. ' seems' → logprob: -2.1669812202453613
    3. ' continues' → logprob: -2.2919812202453613
    4. '#' → logprob: -2.2919812202453613
    5. 'def' → logprob: -2.5419812202453613
    6. ' remains' → logprob: -3.0419812202453613
    7. ')' → logprob: -3.2919812202453613
    8. 'is' → logprob: -3.4169812202453613
    9. '   ' → logprob: -3.5419812202453613
    10. '    
' → logprob: -3.5419812202453613

Token 469: ' is' (ID: 382)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1408253908157349
    2. ':' → logprob: -1.7658253908157349
    3. ' continues' → logprob: -1.7658253908157349
    4. '   ' → logprob: -3.0158252716064453
    5. '```' → logprob: -3.2658252716064453
    6. '...' → logprob: -3.6408252716064453
    7. 'def' → logprob: -3.7658252716064453
    8. '
' → logprob: -3.8908252716064453
    9. 'contin' → logprob: -3.8908252716064453
    10. ' is' → logprob: -3.8908252716064453

Token 470: ' known' (ID: 5542)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1716808080673218
    2. ' not' → logprob: -1.4216808080673218
    3. ' incomplete' → logprob: -1.6716808080673218
    4. '#' → logprob: -2.9216809272766113
    5. 'def' → logprob: -3.2966809272766113
    6. '   ' → logprob: -3.5466809272766113
    7. ' still' → logprob: -4.421680927276611
    8. ' unfinished' → logprob: -4.421680927276611
    9. 'a' → logprob: -4.671680927276611
    10. '
' → logprob: -4.796680927276611

Token 471: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5592780113220215
    2. ' to' → logprob: -1.9342780113220215
    3. 'for' → logprob: -2.4342780113220215
    4. '```' → logprob: -2.4342780113220215
    5. 'to' → logprob: -3.0592780113220215
    6. '   ' → logprob: -3.9342780113220215
    7. ' for' → logprob: -4.4342780113220215
    8. '#' → logprob: -4.8092780113220215
    9. 'from' → logprob: -5.1842780113220215
    10. 'not' → logprob: -5.1842780113220215

Token 472: ' have' (ID: 679)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.2869917154312134
    2. ' be' → logprob: -1.5369917154312134
    3. ' have' → logprob: -2.286991596221924
    4. 'import' → logprob: -2.286991596221924
    5. ' continue' → logprob: -2.536991596221924
    6. 'continue' → logprob: -3.661991596221924
    7. ' solve' → logprob: -3.786991596221924
    8. ' not' → logprob: -4.161991596221924
    9. ' import' → logprob: -4.286991596221924
    10. 'have' → logprob: -4.286991596221924

Token 473: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14861561357975006
    2. 'an' → logprob: -2.523615598678589
    3. ' a' → logprob: -3.648615598678589
    4. 'some' → logprob: -4.648615837097168
    5. ' an' → logprob: -5.023615837097168
    6. 'been' → logprob: -6.023615837097168
    7. 'additional' → logprob: -6.398615837097168
    8. ' been' → logprob: -6.398615837097168
    9. 'more' → logprob: -6.398615837097168
    10. 'complex' → logprob: -6.648615837097168

Token 474: ' solution' (ID: 7578)
  Prédit: ' well'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.31581294536590576
    2. 'def' → logprob: -2.6908130645751953
    3. 'well' → logprob: -3.5658130645751953
    4. 'known' → logprob: -3.9408130645751953
    5. ' known' → logprob: -4.315813064575195
    6. 'n' → logprob: -4.440813064575195
    7. 'standard' → logprob: -4.565813064575195
    8. ' standard' → logprob: -4.690813064575195
    9. 'hard' → logprob: -4.690813064575195
    10. 'maximum' → logprob: -4.815813064575195

Token 475: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4283646047115326
    2. ':' → logprob: -1.928364634513855
    3. ':
' → logprob: -3.1783645153045654
    4. 'def' → logprob: -3.1783645153045654
    5. ' that' → logprob: -3.1783645153045654
    6. '```' → logprob: -3.8033645153045654
    7. '
' → logprob: -4.9283647537231445
    8. 'import' → logprob: -4.9283647537231445
    9. ',' → logprob: -4.9283647537231445
    10. '#' → logprob: -5.0533647537231445

Token 476: ':
' (ID: 734)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.33468717336654663
    2. 'heap' → logprob: -1.5846872329711914
    3. 'import' → logprob: -3.5846872329711914
    4. '   ' → logprob: -4.334687232971191
    5. '#' → logprob: -4.459687232971191
    6. 'end' → logprob: -5.334687232971191
    7. ' intervals' → logprob: -5.459687232971191
    8. '```' → logprob: -5.834687232971191
    9. 'active' → logprob: -5.959687232971191
    10. '
' → logprob: -6.334687232971191

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21601757407188416
    2. 'heap' → logprob: -1.9660176038742065
    3. ' heap' → logprob: -3.966017484664917
    4. 'import' → logprob: -4.716017723083496
    5. 'interval' → logprob: -5.091017723083496
    6. ' seats' → logprob: -5.591017723083496
    7. ' intervals' → logprob: -5.966017723083496
    8. 'seat' → logprob: -5.966017723083496
    9. 'pq' → logprob: -6.466017723083496
    10. ' seat' → logprob: -6.466017723083496

Token 478: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1532520204782486
    2. '#' (adapté à ' #') → logprob: -2.653252124786377
    3. ' #' → logprob: -4.278252124786377
    4. 'heap' → logprob: -4.403252124786377
    5. 'import' → logprob: -5.028252124786377
    6. ' s' → logprob: -5.153252124786377
    7. '    
' → logprob: -5.278252124786377
    8. 's' → logprob: -5.528252124786377
    9. 'from' → logprob: -5.653252124786377
    10. ' heap' → logprob: -5.903252124786377

Token 479: ' -' (ID: 533)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5101761817932129
    2. 'heap' → logprob: -1.385176181793213
    3. 'import' → logprob: -3.135176181793213
    4. '   ' → logprob: -3.635176181793213
    5. ' intervals' → logprob: -3.635176181793213
    6. 'pq' → logprob: -4.635176181793213
    7. 'seat' → logprob: -5.010176181793213
    8. ' heap' → logprob: -5.260176181793213
    9. '#' → logprob: -5.260176181793213
    10. 'se' → logprob: -5.760176181793213

Token 480: ' s' (ID: 265)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5835787653923035
    2. 'import' → logprob: -1.7085788249969482
    3. 'interval' → logprob: -2.8335788249969482
    4. ' heap' → logprob: -2.9585788249969482
    5. '   ' → logprob: -3.3335788249969482
    6. ' intervals' → logprob: -3.7085788249969482
    7. ' seats' → logprob: -3.8335788249969482
    8. '#' → logprob: -4.458578586578369
    9. 'se' → logprob: -4.958578586578369
    10. '
' → logprob: -5.208578586578369

Token 481: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029654791578650475
    2. '2' → logprob: -4.4046549797058105
    3. ' =' → logprob: -4.5296549797058105
    4. '_' → logprob: -5.4046549797058105
    5. '   ' → logprob: -7.0296549797058105
    6. '=' → logprob: -8.279654502868652
    7. 'ize' → logprob: -9.279654502868652
    8. '```' → logprob: -9.654654502868652
    9. ',' → logprob: -9.904654502868652
    10. '#' → logprob: -10.029654502868652

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04431253671646118
    2. '=' → logprob: -3.1693124771118164
    3. ' is' → logprob: -7.419312477111816
    4. ' can' → logprob: -8.919312477111816
    5. '=max' → logprob: -8.919312477111816
    6. ',' → logprob: -9.044312477111816
    7. '   ' → logprob: -9.919312477111816
    8. ')' → logprob: -10.044312477111816
    9. '```' → logprob: -10.544312477111816
    10. ' ' → logprob: -10.919312477111816

Token 483: ' chrom' (ID: 33474)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11783652752637863
    2. 's' → logprob: -2.3678364753723145
    3. 'len' → logprob: -4.3678364753723145
    4. ' max' → logprob: -6.2428364753723145
    5. 'n' → logprob: -6.6178364753723145
    6. 'current' → logprob: -6.9928364753723145
    7. 'min' → logprob: -8.117836952209473
    8. '   ' → logprob: -9.617836952209473
    9. ' s' → logprob: -9.742836952209473
    10. 'heap' → logprob: -10.117836952209473

Token 484: 'atic' (ID: 2351)
  Prédit: 'atic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atic' → logprob: -6.992775888647884e-05
    2. 'acity' → logprob: -10.375069618225098
    3. '   ' → logprob: -11.250069618225098
    4. '=' → logprob: -12.250069618225098
    5. '_size' → logprob: -12.375069618225098
    6. 'size' → logprob: -13.000069618225098
    7. '(s' → logprob: -13.250069618225098
    8. '#' → logprob: -13.375069618225098
    9. '```' → logprob: -13.500069618225098
    10. 'osome' → logprob: -13.625069618225098

Token 485: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7548603415489197
    2. '_number' → logprob: -1.0048604011535645
    3. ' =' → logprob: -2.8798604011535645
    4. '=' → logprob: -3.7548604011535645
    5. ' _' → logprob: -4.0048604011535645
    6. '_num' → logprob: -4.2548604011535645
    7. '_size' → logprob: -4.6298604011535645
    8. ' ' → logprob: -5.3798604011535645
    9. ' number' → logprob: -5.3798604011535645
    10. 'number' → logprob: -5.3798604011535645

Token 486: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1898055076599121
    2. '
' → logprob: -1.814805507659912
    3. '    
' → logprob: -5.439805507659912
    4. 'def' → logprob: -6.689805507659912
    5. 'import' → logprob: -7.064805507659912
    6. ',' → logprob: -7.439805507659912
    7. '#' → logprob: -7.689805507659912
    8. ' =' → logprob: -7.814805507659912
    9. 's' → logprob: -7.939805507659912
    10. ')' → logprob: -8.18980598449707

Token 487: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3550856411457062
    2. 'the' → logprob: -1.2300856113433838
    3. ' interval' → logprob: -5.605085849761963
    4. 'interval' → logprob: -5.980085849761963
    5. ' an' → logprob: -8.480085372924805
    6. ' intervals' → logprob: -8.980085372924805
    7. '(interval' → logprob: -10.480085372924805
    8. 'an' → logprob: -11.230085372924805
    9. 'G' → logprob: -11.605085372924805
    10. '```' → logprob: -12.480085372924805

Token 488: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.38875314593315125
    2. ' interval' → logprob: -1.1387531757354736
    3. ' graph' → logprob: -6.5137529373168945
    4. 'graph' → logprob: -8.013752937316895
    5. ' intervals' → logprob: -11.013752937316895
    6. '(interval' → logprob: -11.263752937316895
    7. '_interval' → logprob: -11.888752937316895
    8. '```' → logprob: -11.888752937316895
    9. '
' → logprob: -12.513752937316895
    10. '`' → logprob: -12.763752937316895

Token 489: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.47416582703590393
    2. ' graph' → logprob: -0.9741657972335815
    3. '_graph' → logprob: -10.099165916442871
    4. ' graphs' → logprob: -11.224165916442871
    5. '(graph' → logprob: -11.349165916442871
    6. 'graphs' → logprob: -11.724165916442871
    7. 's' → logprob: -12.099165916442871
    8. '	graph' → logprob: -12.849165916442871
    9. '   ' → logprob: -13.099165916442871
    10. '
' → logprob: -14.349165916442871

Token 490: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07571320980787277
    2. '
' → logprob: -3.3257131576538086
    3. '    
' → logprob: -3.7007131576538086
    4. ')' → logprob: -5.575713157653809
    5. ',
' → logprob: -6.575713157653809
    6. 'heap' → logprob: -6.575713157653809
    7. ',' → logprob: -6.825713157653809
    8. 'import' → logprob: -6.825713157653809
    9. ')
' → logprob: -6.950713157653809
    10. '\n' → logprob: -7.825713157653809

Token 491: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07021485269069672
    2. ' len' → logprob: -3.5702147483825684
    3. 'max' → logprob: -3.8202147483825684
    4. ' s' → logprob: -4.820214748382568
    5. 'len' → logprob: -5.445214748382568
    6. ' current' → logprob: -5.570214748382568
    7. ' maximum' → logprob: -7.945214748382568
    8. ' the' → logprob: -8.070215225219727
    9. 's' → logprob: -8.070215225219727
    10. '   ' → logprob: -8.320215225219727

Token 492: ' number' (ID: 2086)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.05500493943691254
    2. ' number' → logprob: -4.055005073547363
    3. '(current' → logprob: -4.805005073547363
    4. 'current' → logprob: -4.930005073547363
    5. ' overlap' → logprob: -5.180005073547363
    6. '(' → logprob: -5.555005073547363
    7. ' current' → logprob: -5.930005073547363
    8. 'number' → logprob: -6.180005073547363
    9. '   ' → logprob: -6.805005073547363
    10. '(events' → logprob: -7.055005073547363

Token 493: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7272771000862122
    2. '_of' → logprob: -1.3522770404815674
    3. ' of' → logprob: -1.7272770404815674
    4. '=' → logprob: -3.8522770404815674
    5. '   ' → logprob: -4.1022772789001465
    6. '_inter' → logprob: -4.3522772789001465
    7. '_' → logprob: -4.7272772789001465
    8. 's' → logprob: -5.2272772789001465
    9. '(
' → logprob: -6.1022772789001465
    10. '(interval' → logprob: -6.7272772789001465

Token 494: ' overlapping' (ID: 90457)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.2118844985961914
    2. ' overlapping' → logprob: -1.7118844985961914
    3. 'cl' → logprob: -5.836884498596191
    4. ' intervals' → logprob: -6.336884498596191
    5. '   ' → logprob: -6.961884498596191
    6. 'interval' → logprob: -6.961884498596191
    7. ' overlaps' → logprob: -7.586884498596191
    8. 'current' → logprob: -7.711884498596191
    9. ' overlap' → logprob: -7.836884498596191
    10. ' over' → logprob: -7.961884498596191

Token 495: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.0589419603347778
    2. '_inter' → logprob: -1.1839419603347778
    3. '_' → logprob: -2.3089418411254883
    4. 'interval' → logprob: -2.3089418411254883
    5. '   ' → logprob: -2.6839418411254883
    6. 's' → logprob: -4.058941841125488
    7. ' _' → logprob: -4.683941841125488
    8. '_points' → logprob: -5.058941841125488
    9. '_tokens' → logprob: -5.183941841125488
    10. '(interval' → logprob: -5.433941841125488

Token 496: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11724473536014557
    2. '
' → logprob: -2.3672447204589844
    3. '    
' → logprob: -4.242244720458984
    4. '#' → logprob: -7.617244720458984
    5. '<|end|>' → logprob: -7.867244720458984
    6. ')' → logprob: -8.242244720458984
    7. '```' → logprob: -8.617244720458984
    8. ')
' → logprob: -8.617244720458984
    9. ',' → logprob: -8.742244720458984
    10. 'import' → logprob: -8.742244720458984

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021507132798433304
    2. ')' → logprob: -4.896507263183594
    3. '    
' → logprob: -5.021507263183594
    4. '#' → logprob: -6.396507263183594
    5. '
' → logprob: -6.646507263183594
    6. 'import' → logprob: -6.896507263183594
    7. ')
' → logprob: -7.146507263183594
    8. 'def' → logprob: -7.271507263183594
    9. '<|end|>' → logprob: -7.771507263183594
    10. 'heap' → logprob: -8.146507263183594

Token 498: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008767252787947655
    2. '    
' → logprob: -5.008767127990723
    3. '
' → logprob: -7.258767127990723
    4. ')' → logprob: -7.883767127990723
    5. '<|end|>' → logprob: -8.133767127990723
    6. '#' (adapté à ' #') → logprob: -8.383767127990723
    7. ',' → logprob: -9.758767127990723
    8. 'import' → logprob: -9.883767127990723
    9. ')
' → logprob: -10.008767127990723
    10. '```' → logprob: -10.258767127990723

Token 499: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012223301455378532
    2. '    
' → logprob: -5.012223243713379
    3. '
' → logprob: -5.887223243713379
    4. '#' → logprob: -6.762223243713379
    5. ')' → logprob: -7.887223243713379
    6. '<|end|>' → logprob: -8.137223243713379
    7. 'import' → logprob: -8.387223243713379
    8. ')
' → logprob: -9.137223243713379
    9. '```' → logprob: -9.137223243713379
    10. 'def' → logprob: -9.887223243713379

Token 500: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4515032768249512
    2. 'import' → logprob: -1.7015032768249512
    3. 'heap' → logprob: -1.7015032768249512
    4. '#' → logprob: -2.201503276824951
    5. 's' → logprob: -2.576503276824951
    6. 'pq' → logprob: -2.951503276824951
    7. ' heap' → logprob: -3.451503276824951
    8. ' s' → logprob: -3.826503276824951
    9. 'from' → logprob: -3.951503276824951
    10. 'max' → logprob: -3.951503276824951

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. ' =' → logprob: -11.25003719329834
    3. '=' → logprob: -12.12503719329834
    4. '2' → logprob: -12.12503719329834
    5. '   ' → logprob: -12.37503719329834
    6. ' ' → logprob: -13.25003719329834
    7. '_' → logprob: -13.50003719329834
    8. ',' → logprob: -13.62503719329834
    9. '[' → logprob: -13.75003719329834
    10. '#' → logprob: -14.12503719329834

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04868093132972717
    2. '=' → logprob: -3.0486810207366943
    3. ',' → logprob: -10.048681259155273
    4. '   ' → logprob: -11.298681259155273
    5. ' =
' → logprob: -11.673681259155273
    6. ' ' → logprob: -12.048681259155273
    7. '=max' → logprob: -12.423681259155273
    8. '```' → logprob: -12.548681259155273
    9. ' is' → logprob: -12.673681259155273
    10. 's' → logprob: -13.298681259155273

Token 503: ' clique' (ID: 60301)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10613188147544861
    2. 's' → logprob: -3.1061317920684814
    3. '0' → logprob: -3.3561317920684814
    4. ' max' → logprob: -4.6061320304870605
    5. 'min' → logprob: -5.3561320304870605
    6. '1' → logprob: -5.7311320304870605
    7. 'len' → logprob: -6.7311320304870605
    8. 'n' → logprob: -6.9811320304870605
    9. 'heap' → logprob: -7.6061320304870605
    10. ' ' → logprob: -8.856131553649902

Token 504: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8449055552482605
    2. ' =' → logprob: -1.0949056148529053
    3. '_size' → logprob: -1.9699056148529053
    4. 's' → logprob: -3.8449056148529053
    5. 'size' → logprob: -3.8449056148529053
    6. ' _' → logprob: -4.219905376434326
    7. '_sizes' → logprob: -4.719905376434326
    8. ' size' → logprob: -5.594905376434326
    9. '_
' → logprob: -5.594905376434326
    10. '   ' → logprob: -5.719905376434326

Token 505: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07808580249547958
    2. '    
' → logprob: -3.4530858993530273
    3. '
' → logprob: -3.8280858993530273
    4. 'heap' → logprob: -4.953085899353027
    5. ' =' → logprob: -5.328085899353027
    6. 'import' → logprob: -6.203085899353027
    7. '#' → logprob: -6.328085899353027
    8. ')' → logprob: -7.078085899353027
    9. 'def' → logprob: -7.203085899353027
    10. 'current' → logprob: -7.328085899353027

Token 506: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7446186542510986
    2. ' =' → logprob: -1.1196186542510986
    3. ')' → logprob: -2.1196186542510986
    4. 'max' → logprob: -4.3696184158325195
    5. '=' → logprob: -4.4946184158325195
    6. ' ' → logprob: -4.6196184158325195
    7. '    ' → logprob: -5.2446184158325195
    8. '#' → logprob: -5.3696184158325195
    9. ' n' → logprob: -5.6196184158325195
    10. ' max' → logprob: -5.7446184158325195

Token 507: ' coinc' (ID: 31733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23998886346817017
    2. '=' → logprob: -1.6149888038635254
    3. ' is' → logprob: -4.364988803863525
    4. ' can' → logprob: -7.489988803863525
    5. 'is' → logprob: -8.114989280700684
    6. '   ' → logprob: -8.489989280700684
    7. ' equals' → logprob: -9.114989280700684
    8. 's' → logprob: -9.239989280700684
    9. ' may' → logprob: -9.864989280700684
    10. '#' → logprob: -9.864989280700684

Token 508: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.00032712158281356096
    2. 'des' → logprob: -9.250327110290527
    3. 's' → logprob: -9.500327110290527
    4. 'eds' → logprob: -9.750327110290527
    5. 'es' → logprob: -10.125327110290527
    6. 'ids' → logprob: -11.250327110290527
    7. 'edes' → logprob: -11.500327110290527
    8. 'ident' → logprob: -11.625327110290527
    9. 'odes' → logprob: -11.875327110290527
    10. 'ided' → logprob: -12.375327110290527

Token 509: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.07978250831365585
    2. 'with' → logprob: -3.079782485961914
    3. '   ' → logprob: -3.704782485961914
    4. ' =' → logprob: -6.079782485961914
    5. '=' → logprob: -6.579782485961914
    6. '<|end|>' → logprob: -7.204782485961914
    7. '    ' → logprob: -7.579782485961914
    8. '_' → logprob: -8.329782485961914
    9. '_with' → logprob: -8.829782485961914
    10. '<|end|>' → logprob: -8.829782485961914

Token 510: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7893499135971069
    2. 'max' → logprob: -1.164349913597107
    3. ' s' → logprob: -2.0393500328063965
    4. ' max' → logprob: -2.4143500328063965
    5. 'the' → logprob: -5.4143500328063965
    6. ' the' → logprob: -5.5393500328063965
    7. '   ' → logprob: -5.5393500328063965
    8. ' current' → logprob: -6.9143500328063965
    9. 'current' → logprob: -7.2893500328063965
    10. 'events' → logprob: -10.039349555969238

Token 511: ' size' (ID: 2349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3235392570495605
    2. 'max' → logprob: -1.5735392570495605
    3. ' maximum' → logprob: -1.6985392570495605
    4. ' current' → logprob: -2.0735392570495605
    5. ' s' → logprob: -2.9485392570495605
    6. 'maximum' → logprob: -3.0735392570495605
    7. ' same' → logprob: -3.1985392570495605
    8. ' number' → logprob: -3.6985392570495605
    9. 'current' → logprob: -4.0735392570495605
    10. 's' → logprob: -4.9485392570495605

Token 512: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1497170776128769
    2. '
' → logprob: -3.024717092514038
    3. ' =' → logprob: -3.149717092514038
    4. '    
' → logprob: -4.524716854095459
    5. '_' → logprob: -4.899716854095459
    6. ')' → logprob: -5.399716854095459
    7. 'def' → logprob: -5.399716854095459
    8. '=' → logprob: -6.024716854095459
    9. 'import' → logprob: -6.149716854095459
    10. '(s' → logprob: -6.274716854095459

Token 513: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9059950113296509
    2. 'the' → logprob: -1.4059950113296509
    3. ' intervals' → logprob: -1.9059950113296509
    4. ' current' → logprob: -2.9059948921203613
    5. 'max' → logprob: -3.0309948921203613
    6. 'current' → logprob: -3.5309948921203613
    7. ' a' → logprob: -4.030994892120361
    8. 'a' → logprob: -4.280994892120361
    9. 'heap' → logprob: -4.280994892120361
    10. ' max' → logprob: -4.905994892120361

Token 514: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.5829381346702576
    2. ' next' → logprob: -2.2079381942749023
    3. 'maximum' → logprob: -2.2079381942749023
    4. 'next' → logprob: -2.5829381942749023
    5. 'max' → logprob: -2.5829381942749023
    6. ' largest' → logprob: -3.3329381942749023
    7. ' maximum' → logprob: -4.582938194274902
    8. 'heap' → logprob: -4.957938194274902
    9. 'minimum' → logprob: -5.582938194274902
    10. ' longest' → logprob: -6.207938194274902

Token 515: ' set' (ID: 920)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.9976477026939392
    2. 'interval' → logprob: -1.497647762298584
    3. ' clique' → logprob: -2.372647762298584
    4. 'cl' → logprob: -2.497647762298584
    5. ' overlapping' → logprob: -2.747647762298584
    6. '
' → logprob: -3.622647762298584
    7. '```' → logprob: -3.622647762298584
    8. ' interval' → logprob: -3.872647762298584
    9. ' overlap' → logprob: -4.372647762298584
    10. 'intersection' → logprob: -4.497647762298584

Token 516: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8981775641441345
    2. '_' → logprob: -1.6481776237487793
    3. ')' → logprob: -2.0231776237487793
    4. '[' → logprob: -3.0231776237487793
    5. ' of' → logprob: -3.0231776237487793
    6. 'of' → logprob: -3.3981776237487793
    7. ',' → logprob: -3.6481776237487793
    8. '(' → logprob: -3.8981776237487793
    9. '(
' → logprob: -3.8981776237487793
    10. ']' → logprob: -4.523177623748779

Token 517: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.028446471318602562
    2. 'interval' → logprob: -3.6534464359283447
    3. '   ' → logprob: -6.903446674346924
    4. ' mutually' → logprob: -7.528446674346924
    5. ' pair' → logprob: -7.903446674346924
    6. ' overlapping' → logprob: -9.778446197509766
    7. 'inter' → logprob: -10.028446197509766
    8. 'over' → logprob: -10.653446197509766
    9. ' interval' → logprob: -10.903446197509766
    10. 'mut' → logprob: -10.903446197509766

Token 518: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026146426796913147
    2. '
' → logprob: -5.401146411895752
    3. ' =' → logprob: -5.401146411895752
    4. ')' → logprob: -5.526146411895752
    5. ',' → logprob: -6.026146411895752
    6. '    
' → logprob: -6.151146411895752
    7. '=' → logprob: -6.776146411895752
    8. 'import' → logprob: -6.901146411895752
    9. '#' → logprob: -7.276146411895752
    10. '.' → logprob: -7.651146411895752

Token 519: ' pair' (ID: 10610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4108135998249054
    2. 'over' → logprob: -2.535813570022583
    3. ' pair' → logprob: -3.035813570022583
    4. 'are' → logprob: -3.535813570022583
    5. ' are' → logprob: -3.535813570022583
    6. ' overlap' → logprob: -3.535813570022583
    7. '
' → logprob: -3.660813570022583
    8. '#' → logprob: -4.035813808441162
    9. 'inter' → logprob: -4.035813808441162
    10. 'pair' → logprob: -4.410813808441162

Token 520: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.01566336676478386
    2. '           ' → logprob: -4.765663146972656
    3. '   ' → logprob: -5.640663146972656
    4. 'wis' → logprob: -6.015663146972656
    5. '       ' → logprob: -7.765663146972656
    6. 'w' → logprob: -8.515663146972656
    7. '               ' → logprob: -8.890663146972656
    8. ',' → logprob: -9.390663146972656
    9. '```' → logprob: -10.265663146972656
    10. '          ' → logprob: -10.640663146972656

Token 521: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.715330183506012
    2. 'over' → logprob: -0.965330183506012
    3. 'inter' → logprob: -2.215330123901367
    4. ' intersect' → logprob: -3.965330123901367
    5. '_overlap' → logprob: -7.715330123901367
    6. ' over' → logprob: -7.840330123901367
    7. '_inter' → logprob: -7.840330123901367
    8. ' overlapping' → logprob: -7.965330123901367
    9. '   ' → logprob: -9.090330123901367
    10. ' overlaps' → logprob: -9.715330123901367

Token 522: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13922888040542603
    2. '    
' → logprob: -2.7642288208007812
    3. 'heap' → logprob: -4.139228820800781
    4. '
' → logprob: -4.139228820800781
    5. '#' → logprob: -4.639228820800781
    6. 'interval' → logprob: -4.764228820800781
    7. 'starts' → logprob: -5.889228820800781
    8. 'import' → logprob: -6.014228820800781
    9. 'start' → logprob: -6.264228820800781
    10. 'def' → logprob: -6.389228820800781

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03910372406244278
    2. '#' → logprob: -4.0391035079956055
    3. ')' → logprob: -4.4141035079956055
    4. '<|end|>' → logprob: -6.5391035079956055
    5. '    
' → logprob: -7.0391035079956055
    6. ' =' → logprob: -7.2891035079956055
    7. ' #' → logprob: -7.4141035079956055
    8. ' not' → logprob: -7.6641035079956055
    9. ' which' → logprob: -7.6641035079956055
    10. '.' → logprob: -7.6641035079956055

Token 524: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11910391598939896
    2. '#' (adapté à ' #') → logprob: -2.3691039085388184
    3. ')' → logprob: -5.119103908538818
    4. ' which' → logprob: -5.619103908538818
    5. '       ' → logprob: -5.994103908538818
    6. ' #' → logprob: -6.869103908538818
    7. '    
' → logprob: -7.369103908538818
    8. ' and' → logprob: -7.494103908538818
    9. 'which' → logprob: -7.619103908538818
    10. ' but' → logprob: -7.619103908538818

Token 525: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04541797190904617
    2. '#' → logprob: -3.4204180240631104
    3. ' which' → logprob: -5.670417785644531
    4. '       ' → logprob: -6.670417785644531
    5. ' and' → logprob: -6.920417785644531
    6. ')' → logprob: -7.170417785644531
    7. ' #' → logprob: -7.295417785644531
    8. '<|end|>' → logprob: -7.295417785644531
    9. 'which' → logprob: -7.795417785644531
    10. ' not' → logprob: -7.920417785644531

Token 526: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6918309330940247
    2. '#' → logprob: -0.8168309330940247
    3. ' which' → logprob: -3.44183087348938
    4. 'which' → logprob: -4.441831111907959
    5. ' #' → logprob: -5.941831111907959
    6. ' and' → logprob: -6.441831111907959
    7. 'import' → logprob: -6.691831111907959
    8. ' so' → logprob: -6.691831111907959
    9. '
' → logprob: -7.191831111907959
    10. '    ' → logprob: -7.316831111907959

Token 527: ' due' (ID: 5192)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.707460343837738
    2. ' not' → logprob: -1.0824604034423828
    3. ' #' → logprob: -3.332460403442383
    4. ' is' → logprob: -3.332460403442383
    5. ' can' → logprob: -3.957460403442383
    6. ' s' → logprob: -4.207460403442383
    7. ' the' → logprob: -4.957460403442383
    8. '#' → logprob: -5.207460403442383
    9. ' may' → logprob: -5.207460403442383
    10. ' continues' → logprob: -5.332460403442383

Token 528: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.25227075815200806
    2. ' to' → logprob: -1.5022706985473633
    3. '#' → logprob: -9.502270698547363
    4. '_to' → logprob: -9.502270698547363
    5. '  ' → logprob: -10.127270698547363
    6. '
' → logprob: -10.127270698547363
    7. '```' → logprob: -10.627270698547363
    8. '...' → logprob: -11.252270698547363
    9. 'import' → logprob: -11.252270698547363
    10. '=' → logprob: -11.627270698547363

Token 529: ' passenger' (ID: 39039)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.42560917139053345
    2. ' intervals' → logprob: -2.1756091117858887
    3. ' how' → logprob: -2.6756091117858887
    4. 'the' → logprob: -3.1756091117858887
    5. ' not' → logprob: -3.3006091117858887
    6. ' len' → logprob: -4.050609111785889
    7. 'interval' → logprob: -4.550609111785889
    8. ' heap' → logprob: -4.675609111785889
    9. ' all' → logprob: -4.800609111785889
    10. '   ' → logprob: -4.925609111785889

Token 530: ' seat' (ID: 15512)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.16816848516464233
    2. 'preferences' → logprob: -2.418168544769287
    3. 's' → logprob: -3.168168544769287
    4. '   ' → logprob: -4.293168544769287
    5. '_preferences' → logprob: -5.793168544769287
    6. '#' → logprob: -6.543168544769287
    7. ' choices' → logprob: -6.793168544769287
    8. ''s' → logprob: -7.043168544769287
    9. 'interval' → logprob: -7.793168544769287
    10. 'choices' → logprob: -7.793168544769287

Token 531: ' choice' (ID: 7158)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.25069454312324524
    2. 'preferences' → logprob: -2.500694513320923
    3. '_preferences' → logprob: -2.875694513320923
    4. '   ' → logprob: -3.250694513320923
    5. '_' → logprob: -4.000694751739502
    6. ' choices' → logprob: -4.750694751739502
    7. '_choices' → logprob: -5.500694751739502
    8. 's' → logprob: -6.250694751739502
    9. ' _' → logprob: -6.375694751739502
    10. ' assignments' → logprob: -6.375694751739502

Token 532: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5033575296401978
    2. 's' → logprob: -1.6283575296401978
    3. ' and' → logprob: -3.253357410430908
    4. '   ' → logprob: -3.628357410430908
    5. ')' → logprob: -4.253357410430908
    6. ' =' → logprob: -4.378357410430908
    7. ':' → logprob: -4.378357410430908
    8. ',
' → logprob: -4.628357410430908
    9. '):' → logprob: -4.878357410430908
    10. '[' → logprob: -5.378357410430908

Token 533: ' unknown' (ID: 17927)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8097827434539795
    2. ' #' → logprob: -1.4347827434539795
    3. ' the' → logprob: -2.8097827434539795
    4. ' interval' → logprob: -3.3097827434539795
    5. ' reservation' → logprob: -3.8097827434539795
    6. ' ordering' → logprob: -3.8097827434539795
    7. ' scheduling' → logprob: -3.9347827434539795
    8. ' order' → logprob: -4.059782981872559
    9. ' booking' → logprob: -4.434782981872559
    10. ' arrival' → logprob: -4.559782981872559

Token 534: ' order' (ID: 2569)
  Prédit: ' preferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preferences' → logprob: -0.6702831983566284
    2. '#' → logprob: -2.920283317565918
    3. ' order' → logprob: -3.045283317565918
    4. 'preferences' → logprob: -3.170283317565918
    5. 's' → logprob: -3.295283317565918
    6. ' behavior' → logprob: -3.420283317565918
    7. '   ' → logprob: -3.545283317565918
    8. ' assignment' → logprob: -3.920283317565918
    9. ' intervals' → logprob: -4.295283317565918
    10. ' endpoints' → logprob: -4.420283317565918

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4317317605018616
    2. ':' → logprob: -1.6817317008972168
    3. '):' → logprob: -3.056731700897217
    4. 's' → logprob: -3.431731700897217
    5. '   ' → logprob: -3.431731700897217
    6. ')' → logprob: -4.556731700897217
    7. '=' → logprob: -4.806731700897217
    8. ',
' → logprob: -5.181731700897217
    9. 'import' → logprob: -5.431731700897217
    10. ':
' → logprob: -5.431731700897217

Token 536: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29518184065818787
    2. '#' → logprob: -2.6701817512512207
    3. ' s' → logprob: -3.2951817512512207
    4. ' the' → logprob: -3.2951817512512207
    5. ' heap' → logprob: -3.4201817512512207
    6. ' #' → logprob: -3.7951817512512207
    7. 'heap' → logprob: -3.7951817512512207
    8. ' we' → logprob: -5.170181751251221
    9. ' current' → logprob: -5.295181751251221
    10. '    ' → logprob: -5.920181751251221

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006664811633527279
    2. '_' → logprob: -5.756664752960205
    3. ' =' → logprob: -6.631664752960205
    4. ')' → logprob: -7.256664752960205
    5. '=' → logprob: -7.881664752960205
    6. ' is' → logprob: -8.631665229797363
    7. ' s' → logprob: -9.006665229797363
    8. 'ize' → logprob: -9.131665229797363
    9. ' can' → logprob: -9.131665229797363
    10. '   ' → logprob: -9.506665229797363

Token 538: ' equals' (ID: 29702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17360150814056396
    2. '=' → logprob: -2.2986016273498535
    3. '   ' → logprob: -3.2986016273498535
    4. ' +=' → logprob: -4.7986016273498535
    5. ' can' → logprob: -5.2986016273498535
    6. 'import' → logprob: -6.6736016273498535
    7. ' is' → logprob: -6.6736016273498535
    8. ')' → logprob: -6.7986016273498535
    9. '+=' → logprob: -7.4236016273498535
    10. ',' → logprob: -7.5486016273498535

Token 539: ' the' (ID: 290)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.935234785079956
    2. ' max' → logprob: -1.185234785079956
    3. 's' → logprob: -1.810234785079956
    4. 'max' → logprob: -2.435234785079956
    5. ' current' → logprob: -3.435234785079956
    6. ' the' → logprob: -4.685235023498535
    7. '   ' → logprob: -5.310235023498535
    8. 'current' → logprob: -6.185235023498535
    9. 'the' → logprob: -7.060235023498535
    10. ' len' → logprob: -7.685235023498535

Token 540: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28937968611717224
    2. ' max' → logprob: -1.5393797159194946
    3. 'n' → logprob: -4.789379596710205
    4. ' current' → logprob: -4.789379596710205
    5. ' n' → logprob: -5.164379596710205
    6. 'current' → logprob: -5.414379596710205
    7. 's' → logprob: -5.414379596710205
    8. ' s' → logprob: -6.539379596710205
    9. 'len' → logprob: -6.914379596710205
    10. ' maximum' → logprob: -7.289379596710205

Token 541: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.365695595741272
    2. 'number' → logprob: -2.3656954765319824
    3. '_overlap' → logprob: -2.3656954765319824
    4. '   ' → logprob: -3.4906954765319824
    5. 'current' → logprob: -4.115695476531982
    6. 'over' → logprob: -4.365695476531982
    7. '_end' → logprob: -4.490695476531982
    8. ' current' → logprob: -4.990695476531982
    9. ' overlapping' → logprob: -5.115695476531982
    10. ' of' → logprob: -5.490695476531982

Token 542: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5517871379852295
    2. 'of' → logprob: -2.4267871379852295
    3. ' of' → logprob: -2.5517871379852295
    4. '   ' → logprob: -2.5517871379852295
    5. ')' → logprob: -2.8017871379852295
    6. '(' → logprob: -3.1767871379852295
    7. '[' → logprob: -3.4267871379852295
    8. '_of' → logprob: -4.426787376403809
    9. '<|end|>' → logprob: -5.676787376403809
    10. '=' → logprob: -5.801787376403809

Token 543: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.39761173725128174
    2. 'interval' → logprob: -1.3976117372512817
    3. 'current' → logprob: -4.022611618041992
    4. 'over' → logprob: -4.022611618041992
    5. ' current' → logprob: -4.522611618041992
    6. '   ' → logprob: -4.647611618041992
    7. ')' → logprob: -5.272611618041992
    8. '```' → logprob: -5.897611618041992
    9. 'heap' → logprob: -6.147611618041992
    10. '[' → logprob: -6.272611618041992

Token 544: ' overlapping' (ID: 90457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2644379734992981
    2. '
' → logprob: -2.6394379138946533
    3. ' that' → logprob: -3.1394379138946533
    4. 'that' → logprob: -3.1394379138946533
    5. ' overlapping' → logprob: -4.389438152313232
    6. 'with' → logprob: -4.514438152313232
    7. ')' → logprob: -4.889438152313232
    8. 'over' → logprob: -5.264438152313232
    9. '```' → logprob: -5.389438152313232
    10. '+' → logprob: -5.514438152313232

Token 545: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3245849609375
    2. ')' → logprob: -2.1995849609375
    3. ' +' → logprob: -2.5745849609375
    4. '+' → logprob: -3.1995849609375
    5. ' at' → logprob: -3.8245849609375
    6. '    
' → logprob: -5.6995849609375
    7. '
' → logprob: -6.1995849609375
    8. '(' → logprob: -6.1995849609375
    9. ' )' → logprob: -6.3245849609375
    10. ',' → logprob: -6.5745849609375

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5566507577896118
    2. ' +' → logprob: -1.5566507577896118
    3. '+' → logprob: -2.5566506385803223
    4. ' at' → logprob: -2.6816506385803223
    5. 'at' → logprob: -2.9316506385803223
    6. ')' → logprob: -4.806650638580322
    7. '    ' → logprob: -6.056650638580322
    8. ' )' → logprob: -6.556650638580322
    9. ' ' → logprob: -7.056650638580322
    10. '  ' → logprob: -7.181650638580322

Token 547: ' #' (ID: 1069)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.1406034231185913
    2. ' at' → logprob: -1.3906034231185913
    3. '   ' → logprob: -1.5156034231185913
    4. ' +' → logprob: -2.390603542327881
    5. '+' → logprob: -2.515603542327881
    6. ')' → logprob: -4.140603542327881
    7. '+
' → logprob: -5.765603542327881
    8. '<|end|>' → logprob: -6.140603542327881
    9. '    ' → logprob: -6.265603542327881
    10. ' ' → logprob: -6.390603542327881

Token 548: '  ' (ID: 256)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.151130199432373
    2. '   ' → logprob: -1.276130199432373
    3. ' at' → logprob: -1.776130199432373
    4. '+' → logprob: -2.276130199432373
    5. ' +' → logprob: -2.526130199432373
    6. '```' → logprob: -4.401130199432373
    7. '_' → logprob: -4.526130199432373
    8. ')' → logprob: -5.401130199432373
    9. '    ' → logprob: -5.776130199432373
    10. '
' → logprob: -6.151130199432373

Token 549: ' at' (ID: 540)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2156039476394653
    2. ' +' → logprob: -1.3406039476394653
    3. 'at' (adapté à ' at') → logprob: -1.4656039476394653
    4. ' at' → logprob: -2.340603828430176
    5. '   ' → logprob: -2.340603828430176
    6. ')' → logprob: -4.840603828430176
    7. '+
' → logprob: -6.215603828430176
    8. '
' → logprob: -6.840603828430176
    9. ' +
' → logprob: -7.340603828430176
    10. '    ' → logprob: -7.340603828430176

Token 550: ' the' (ID: 290)
  Prédit: ' some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' some' → logprob: -0.8997107148170471
    2. 'some' → logprob: -1.5247106552124023
    3. ' a' → logprob: -1.8997106552124023
    4. ' any' → logprob: -2.5247106552124023
    5. 'a' → logprob: -2.7747106552124023
    6. 'any' → logprob: -3.0247106552124023
    7. ' the' → logprob: -3.8997106552124023
    8. 'the' → logprob: -4.899710655212402
    9. ' an' → logprob: -5.524710655212402
    10. 'least' → logprob: -7.399710655212402

Token 551: ' same' (ID: 2684)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.2804737091064453
    2. 'start' → logprob: -2.0304737091064453
    3. 'same' → logprob: -2.1554737091064453
    4. ' ' → logprob: -2.7804737091064453
    5. 'token' → logprob: -2.7804737091064453
    6. ' same' → logprob: -2.7804737091064453
    7. '0' → logprob: -2.9054737091064453
    8. 'current' → logprob: -3.1554737091064453
    9. '   ' → logprob: -3.2804737091064453
    10. ' point' → logprob: -3.2804737091064453

Token 552: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.57846599817276
    2. 'point' → logprob: -1.3284659385681152
    3. ' time' → logprob: -2.0784659385681152
    4. ' point' → logprob: -3.5784659385681152
    5. '   ' → logprob: -4.828465938568115
    6. 'token' → logprob: -5.578465938568115
    7. '_time' → logprob: -5.828465938568115
    8. '_point' → logprob: -5.828465938568115
    9. 'space' → logprob: -7.328465938568115
    10. '
' → logprob: -7.703465938568115

Token 553: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11482913047075272
    2. 'heap' → logprob: -2.7398290634155273
    3. '    
' → logprob: -4.239829063415527
    4. '#' → logprob: -4.864829063415527
    5. 'def' → logprob: -5.614829063415527
    6. 'interval' → logprob: -5.614829063415527
    7. 'import' → logprob: -5.989829063415527
    8. 'available' → logprob: -6.364829063415527
    9. 'starts' → logprob: -6.739829063415527
    10. ')' → logprob: -6.864829063415527

Token 554: ' any' (ID: 1062)
  Prédit: ' some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' some' → logprob: -1.0662389993667603
    2. 'some' → logprob: -1.6912389993667603
    3. ' any' → logprob: -1.8162389993667603
    4. ' a' → logprob: -2.0662388801574707
    5. ' the' → logprob: -2.8162388801574707
    6. 'any' → logprob: -3.0662388801574707
    7. 'a' → logprob: -3.5662388801574707
    8. ' least' → logprob: -4.191238880157471
    9. 'least' → logprob: -4.441238880157471
    10. 'the' → logprob: -4.566238880157471

Token 555: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5395026206970215
    2. ' point' → logprob: -1.0395026206970215
    3. 'time' → logprob: -3.9145026206970215
    4. ' moment' → logprob: -4.1645026206970215
    5. '   ' → logprob: -4.4145026206970215
    6. ' time' → logprob: -5.2895026206970215
    7. 'token' → logprob: -5.4145026206970215
    8. 'moment' → logprob: -6.0395026206970215
    9. ' token' → logprob: -6.4145026206970215
    10. ' given' → logprob: -6.9145026206970215

Token 556: ' AND' (ID: 6178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054402124136686325
    2. '    
' → logprob: -3.5544021129608154
    3. '
' → logprob: -5.3044023513793945
    4. 'import' → logprob: -5.4294023513793945
    5. 'heap' → logprob: -5.4294023513793945
    6. '#' → logprob: -5.5544023513793945
    7. 'def' → logprob: -6.6794023513793945
    8. 'interval' → logprob: -7.1794023513793945
    9. ')' → logprob: -7.3044023513793945
    10. ')
' → logprob: -7.6794023513793945

Token 557: ' maximum' (ID: 10562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0849740505218506
    2. ' the' → logprob: -1.5849740505218506
    3. ' not' → logprob: -1.5849740505218506
    4. ' current' → logprob: -2.7099740505218506
    5. '           ' → logprob: -2.9599740505218506
    6. ' at' → logprob: -3.8349740505218506
    7. ' s' → logprob: -3.9599740505218506
    8. ' a' → logprob: -3.9599740505218506
    9. 'current' → logprob: -4.58497428894043
    10. ' that' → logprob: -4.83497428894043

Token 558: ' number' (ID: 2086)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.8791928291320801
    2. '(
' → logprob: -2.00419282913208
    3. '   ' → logprob: -2.12919282913208
    4. 'current' → logprob: -2.50419282913208
    5. '_end' → logprob: -3.00419282913208
    6. '(' → logprob: -3.87919282913208
    7. '_gap' → logprob: -3.87919282913208
    8. ' number' → logprob: -4.12919282913208
    9. '_' → logprob: -4.25419282913208
    10. 'heap' → logprob: -4.50419282913208

Token 559: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4428810179233551
    2. '   ' → logprob: -1.5678809881210327
    3. ' of' → logprob: -2.4428811073303223
    4. 'over' → logprob: -4.317881107330322
    5. '=' → logprob: -4.942881107330322
    6. '_of' → logprob: -5.067881107330322
    7. 'from' → logprob: -5.067881107330322
    8. '(interval' → logprob: -5.817881107330322
    9. '(
' → logprob: -6.067881107330322
    10. 'interval' → logprob: -6.192881107330322

Token 560: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.26539260149002075
    2. ' intervals' → logprob: -2.265392541885376
    3. 'events' → logprob: -2.890392541885376
    4. 'end' → logprob: -3.890392541885376
    5. 'over' → logprob: -3.890392541885376
    6. 'current' → logprob: -4.765392780303955
    7. 'start' → logprob: -4.890392780303955
    8. 'sim' → logprob: -6.140392780303955
    9. 'con' → logprob: -6.890392780303955
    10. 'b' → logprob: -6.890392780303955

Token 561: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23103435337543488
    2. 'that' → logprob: -2.481034278869629
    3. ' that' → logprob: -2.981034278869629
    4. 'ending' → logprob: -3.606034278869629
    5. 'with' → logprob: -3.981034278869629
    6. 'starting' → logprob: -4.606034278869629
    7. 'over' → logprob: -5.481034278869629
    8. ' with' → logprob: -6.606034278869629
    9. ' ending' → logprob: -6.856034278869629
    10. ' overlapping' → logprob: -7.106034278869629

Token 562: ' a' (ID: 261)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.6582845449447632
    2. ' overlapping' → logprob: -1.6582845449447632
    3. ' the' → logprob: -1.7832845449447632
    4. 'the' → logprob: -2.2832846641540527
    5. 'end' → logprob: -3.2832846641540527
    6. 'a' → logprob: -3.2832846641540527
    7. ' a' → logprob: -3.4082846641540527
    8. 'over' → logprob: -3.5332846641540527
    9. '
' → logprob: -3.5332846641540527
    10. ' start' → logprob: -4.158284664154053

Token 563: ' chain' (ID: 13464)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.332563191652298
    2. ' common' → logprob: -1.8325631618499756
    3. 'start' → logprob: -3.0825631618499756
    4. 'shared' → logprob: -3.4575631618499756
    5. '
' → logprob: -3.9575631618499756
    6. ' shared' → logprob: -4.207563400268555
    7. ' start' → logprob: -6.207563400268555
    8. 'current' → logprob: -6.582563400268555
    9. 'different' → logprob: -6.582563400268555
    10. 'same' → logprob: -7.332563400268555

Token 564: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2561647295951843
    2. ' =' → logprob: -3.131164789199829
    3. '
' → logprob: -3.631164789199829
    4. '_' → logprob: -4.38116455078125
    5. 'import' → logprob: -4.38116455078125
    6. ' +' → logprob: -4.38116455078125
    7. ')' → logprob: -4.50616455078125
    8. '    
' → logprob: -4.63116455078125
    9. 's' → logprob: -4.88116455078125
    10. '[
' → logprob: -4.88116455078125

Token 565: ' partial' (ID: 13664)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.08822967112064362
    2. 'inter' → logprob: -2.8382296562194824
    3. ' overlapping' → logprob: -4.838229656219482
    4. ' overlaps' → logprob: -5.088229656219482
    5. ' intersections' → logprob: -5.463229656219482
    6. ' overlap' → logprob: -6.213229656219482
    7. 'intersection' → logprob: -6.838229656219482
    8. 'start' → logprob: -7.338229656219482
    9. 'interval' → logprob: -7.338229656219482
    10. '
' → logprob: -7.463229656219482

Token 566: ' overlaps' (ID: 173439)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.3559410274028778
    2. ' overlaps' → logprob: -1.7309410572052002
    3. ' overlap' → logprob: -3.2309410572052
    4. '   ' → logprob: -3.7309410572052
    5. '_overlap' → logprob: -3.9809410572052
    6. ' overlapping' → logprob: -4.105940818786621
    7. 'inter' → logprob: -5.605940818786621
    8. ' ' → logprob: -5.605940818786621
    9. ' intersections' → logprob: -5.605940818786621
    10. '_inter' → logprob: -6.605940818786621

Token 567: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037141021341085434
    2. '    
' → logprob: -3.9121410846710205
    3. 'heap' → logprob: -5.662140846252441
    4. ']' → logprob: -5.787140846252441
    5. '
' → logprob: -6.287140846252441
    6. 'def' → logprob: -6.287140846252441
    7. 'import' → logprob: -6.537140846252441
    8. '#' → logprob: -6.537140846252441
    9. ')' → logprob: -7.287140846252441
    10. '.' → logprob: -7.412140846252441

Token 568: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023315709084272385
    2. '    
' → logprob: -4.398315906524658
    3. 'import' → logprob: -5.898315906524658
    4. '
' → logprob: -6.648315906524658
    5. 'heap' → logprob: -6.773315906524658
    6. '#' → logprob: -6.898315906524658
    7. ' intervals' → logprob: -6.898315906524658
    8. 'interval' → logprob: -7.398315906524658
    9. 'def' → logprob: -7.523315906524658
    10. '    ' → logprob: -7.648315906524658

Token 569: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04568517953157425
    2. 'f' → logprob: -3.670685291290283
    3. 'm' → logprob: -4.795685291290283
    4. 's' → logprob: -5.545685291290283
    5. '=' → logprob: -5.920685291290283
    6. 't' → logprob: -6.420685291290283
    7. 'nt' → logprob: -7.420685291290283
    8. '   ' → logprob: -7.545685291290283
    9. 'nd' → logprob: -8.170684814453125
    10. 'ndef' → logprob: -8.295684814453125

Token 570: '.,
' (ID: 86468)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3985927999019623
    2. ',' → logprob: -2.273592710494995
    3. ' =' → logprob: -3.398592710494995
    4. '           ' → logprob: -4.023592948913574
    5. '=' → logprob: -4.148592948913574
    6. '
' → logprob: -4.273592948913574
    7. ' ' → logprob: -4.398592948913574
    8. '1' → logprob: -4.523592948913574
    9. '       ' → logprob: -4.523592948913574
    10. ' current' → logprob: -4.648592948913574

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018463507294654846
    2. ' intervals' → logprob: -5.768463611602783
    3. ' the' → logprob: -6.143463611602783
    4. ' current' → logprob: -6.643463611602783
    5. '       ' → logprob: -6.643463611602783
    6. ' n' → logprob: -6.643463611602783
    7. '    ' → logprob: -6.643463611602783
    8. 'max' → logprob: -6.768463611602783
    9. ' s' → logprob: -7.268463611602783
    10. '1' → logprob: -7.518463611602783

Token 572: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08072502166032791
    2. ' current' → logprob: -4.330725193023682
    3. ' intervals' → logprob: -4.455725193023682
    4. '[]' → logprob: -4.580725193023682
    5. ' []' → logprob: -4.705725193023682
    6. ' n' → logprob: -5.205725193023682
    7. ' heap' → logprob: -5.205725193023682
    8. 'current' → logprob: -5.580725193023682
    9. 'heap' → logprob: -5.580725193023682
    10. ' max' → logprob: -6.205725193023682

Token 573: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04187526926398277
    2. ' intervals' → logprob: -4.16687536239624
    3. '#' → logprob: -5.04187536239624
    4. 'heap' → logprob: -5.66687536239624
    5. 'import' → logprob: -5.79187536239624
    6. ' heap' → logprob: -5.91687536239624
    7. '    
' → logprob: -6.66687536239624
    8. '[]' → logprob: -6.79187536239624
    9. '    ' → logprob: -6.91687536239624
    10. 'interval' → logprob: -7.04187536239624

Token 574: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7186211347579956
    2. ' max' → logprob: -1.8436211347579956
    3. ' current' → logprob: -2.093621253967285
    4. 'max' → logprob: -2.343621253967285
    5. 'current' → logprob: -3.218621253967285
    6. ' intervals' → logprob: -3.343621253967285
    7. 'heap' → logprob: -4.343621253967285
    8. ' s' → logprob: -4.718621253967285
    9. ' n' → logprob: -4.968621253967285
    10. ' heap' → logprob: -5.093621253967285

Token 575: ' minimal' (ID: 19957)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.3380165100097656
    2. ' intervals' → logprob: -1.5880165100097656
    3. 'heap' → logprob: -1.8380165100097656
    4. '#' → logprob: -2.2130165100097656
    5. '   ' → logprob: -2.4630165100097656
    6. 'import' → logprob: -2.7130165100097656
    7. 'max' → logprob: -4.088016510009766
    8. 'def' → logprob: -4.213016510009766
    9. '
' → logprob: -4.463016510009766
    10. 'from' → logprob: -4.838016510009766

Token 576: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.09566166251897812
    2. ' s' → logprob: -4.595661640167236
    3. 'number' → logprob: -4.720661640167236
    4. ' seat' → logprob: -4.720661640167236
    5. ' required' → logprob: -4.970661640167236
    6. 's' → logprob: -5.845661640167236
    7. ' seats' → logprob: -5.845661640167236
    8. '_' → logprob: -5.970661640167236
    9. ' max' → logprob: -6.345661640167236
    10. ' distance' → logprob: -6.345661640167236

Token 577: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1635355949401855
    2. '   ' → logprob: -1.2885355949401855
    3. ' =' → logprob: -2.0385355949401855
    4. 'of' → logprob: -2.1635355949401855
    5. '=' → logprob: -3.7885355949401855
    6. '_of' → logprob: -4.0385355949401855
    7. '
' → logprob: -4.4135355949401855
    8. '_' → logprob: -4.5385355949401855
    9. 'def' → logprob: -4.5385355949401855
    10. 's' → logprob: -4.7885355949401855

Token 578: ' colors' (ID: 10803)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6001996397972107
    2. 'heap' → logprob: -1.9751996994018555
    3. ' seats' → logprob: -1.9751996994018555
    4. 'he' → logprob: -2.9751996994018555
    5. 'end' → logprob: -3.6001996994018555
    6. 'rooms' → logprob: -3.6001996994018555
    7. ' heap' → logprob: -4.7251996994018555
    8. 'interval' → logprob: -4.8501996994018555
    9. ' intervals' → logprob: -5.7251996994018555
    10. 'resources' → logprob: -5.9751996994018555

Token 579: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2532394826412201
    2. 'heap' → logprob: -2.753239393234253
    3. 'interval' → logprob: -3.628239393234253
    4. ']' → logprob: -3.878239393234253
    5. 'import' → logprob: -4.128239631652832
    6. '#' → logprob: -4.253239631652832
    7. '    
' → logprob: -4.253239631652832
    8. ' intervals' → logprob: -4.378239631652832
    9. ')' → logprob: -4.753239631652832
    10. ' =' → logprob: -5.128239631652832

Token 580: ' a' (ID: 261)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -1.424476146697998
    2. ' the' → logprob: -1.549476146697998
    3. 'the' → logprob: -1.799476146697998
    4. 'interval' → logprob: -2.049476146697998
    5. 'a' → logprob: -2.549476146697998
    6. ' a' → logprob: -2.799476146697998
    7. 'an' → logprob: -3.049476146697998
    8. ' intervals' → logprob: -3.424476146697998
    9. ' interval' → logprob: -5.049476146697998
    10. ' which' → logprob: -5.049476146697998

Token 581: ' worst' (ID: 20486)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8046700358390808
    2. 'line' → logprob: -2.1796700954437256
    3. 'chain' → logprob: -2.4296700954437256
    4. 'interval' → logprob: -2.5546700954437256
    5. ' chain' → logprob: -2.6796700954437256
    6. 'heap' → logprob: -2.8046700954437256
    7. 'max' → logprob: -4.3046698570251465
    8. '   ' → logprob: -4.5546698570251465
    9. 'se' → logprob: -4.5546698570251465
    10. ' greedy' → logprob: -4.5546698570251465

Token 582: ' reservation' (ID: 34650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28665733337402344
    2. 'case' → logprob: -2.1616573333740234
    3. '-case' → logprob: -2.5366573333740234
    4. ' case' → logprob: -3.0366573333740234
    5. '	case' → logprob: -6.536657333374023
    6. ' possible' → logprob: -7.036657333374023
    7. ')' → logprob: -7.411657333374023
    8. '-' → logprob: -7.786657333374023
    9. '  ' → logprob: -8.161657333374023
    10. '```' → logprob: -8.161657333374023

Token 583: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18452712893486023
    2. '
' → logprob: -3.5595271587371826
    3. 'def' → logprob: -3.6845271587371826
    4. '#' → logprob: -3.9345271587371826
    5. ')
' → logprob: -4.1845269203186035
    6. ' =' → logprob: -4.9345269203186035
    7. '```' → logprob: -4.9345269203186035
    8. '    
' → logprob: -5.0595269203186035
    9. ']' → logprob: -5.1845269203186035
    10. ')' → logprob: -5.3095269203186035

Token 584: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056184105575084686
    2. '    
' → logprob: -3.9311840534210205
    3. 'import' → logprob: -4.1811842918396
    4. 'heap' → logprob: -4.5561842918396
    5. 'interval' → logprob: -6.3061842918396
    6. '#' → logprob: -6.3061842918396
    7. ')' → logprob: -7.4311842918396
    8. 'end' → logprob: -7.5561842918396
    9. 'from' → logprob: -7.5561842918396
    10. 'def' → logprob: -8.056183815002441

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03889115899801254
    2. '    
' → logprob: -3.788891077041626
    3. '
' → logprob: -4.288891315460205
    4. '#' → logprob: -7.663891315460205
    5. 'import' → logprob: -7.913891315460205
    6. 'heap' → logprob: -8.663890838623047
    7. '```' → logprob: -8.913890838623047
    8. 'interval' → logprob: -9.038890838623047
    9. 'from' → logprob: -9.038890838623047
    10. 'def' → logprob: -10.163890838623047

Token 586: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01944817043840885
    2. 'heap' → logprob: -5.144448280334473
    3. '    
' → logprob: -5.269448280334473
    4. 'import' → logprob: -6.644448280334473
    5. '#' → logprob: -6.769448280334473
    6. 'interval' → logprob: -7.019448280334473
    7. 'starts' → logprob: -7.269448280334473
    8. 'occupied' → logprob: -7.394448280334473
    9. 'from' → logprob: -7.519448280334473
    10. '
' → logprob: -7.519448280334473

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007266086060553789
    2. '    
' → logprob: -6.007266044616699
    3. 'heap' → logprob: -6.507266044616699
    4. '#' → logprob: -7.007266044616699
    5. 'active' → logprob: -7.507266044616699
    6. 'import' → logprob: -7.507266044616699
    7. 'ends' → logprob: -8.1322660446167
    8. '
' → logprob: -8.2572660446167
    9. 'end' → logprob: -8.6322660446167
    10. 'from' → logprob: -9.5072660446167

Token 588: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.710831344127655
    2. '   ' → logprob: -1.5858314037322998
    3. 'end' → logprob: -2.5858314037323
    4. 'interval' → logprob: -3.0858314037323
    5. 'ends' → logprob: -3.2108314037323
    6. 'active' → logprob: -3.2108314037323
    7. '#' (adapté à ' #') → logprob: -3.4608314037323
    8. 'import' → logprob: -4.085831165313721
    9. 'points' → logprob: -4.210831165313721
    10. 'starts' → logprob: -4.585831165313721

Token 589: ' The' (ID: 623)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07784409821033478
    2. 'pq' → logprob: -3.8278441429138184
    3. 'interval' → logprob: -4.077844142913818
    4. '#' → logprob: -4.827844142913818
    5. 'import' → logprob: -4.827844142913818
    6. 'ends' → logprob: -5.327844142913818
    7. 'end' → logprob: -5.702844142913818
    8. 'starts' → logprob: -6.077844142913818
    9. 'active' → logprob: -6.327844142913818
    10. '   ' → logprob: -6.452844142913818

Token 590: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5853694081306458
    2. 'def' → logprob: -2.210369348526001
    3. 'import' → logprob: -2.710369348526001
    4. 'heap' → logprob: -2.960369348526001
    5. '   ' → logprob: -3.460369348526001
    6. '
' → logprob: -3.710369348526001
    7. ' code' → logprob: -3.710369348526001
    8. ' #' → logprob: -3.835369348526001
    9. 'from' → logprob: -3.835369348526001
    10. 'remaining' → logprob: -4.08536958694458

Token 591: ''s' (ID: 885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5354056358337402
    2. '   ' → logprob: -1.2854056358337402
    3. '
' → logprob: -3.2854056358337402
    4. 'def' → logprob: -3.7854056358337402
    5. '    
' → logprob: -4.03540563583374
    6. 'from' → logprob: -4.78540563583374
    7. ' is' → logprob: -4.91040563583374
    8. ' continues' → logprob: -4.91040563583374
    9. ':' → logprob: -5.16040563583374
    10. 'contin' → logprob: -5.28540563583374

Token 592: ' sample' (ID: 10176)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9377372860908508
    2. 'interval' → logprob: -1.812737226486206
    3. '
' → logprob: -2.187737226486206
    4. 'def' → logprob: -2.437737226486206
    5. ' intervals' → logprob: -2.812737226486206
    6. 'heap' → logprob: -3.562737226486206
    7. 'next' → logprob: -3.687737226486206
    8. 'import' → logprob: -3.687737226486206
    9. 'from' → logprob: -3.812737226486206
    10. ' next' → logprob: -4.312737464904785

Token 593: ' inputs' (ID: 21963)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.6235969066619873
    2. '#' → logprob: -1.7485969066619873
    3. ' continues' → logprob: -1.9985969066619873
    4. 'interval' → logprob: -2.7485969066619873
    5. '<|end|>' → logprob: -2.8735969066619873
    6. 'input' → logprob: -2.8735969066619873
    7. '   ' → logprob: -2.9985969066619873
    8. ' code' → logprob: -3.2485969066619873
    9. 'def' → logprob: -3.3735969066619873
    10. '...' → logprob: -3.6235969066619873

Token 594: ' also' (ID: 1217)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1159863471984863
    2. '   ' → logprob: -2.4909863471984863
    3. '<|end|>' → logprob: -2.6159863471984863
    4. '=' → logprob: -2.7409863471984863
    5. '...' → logprob: -2.7409863471984863
    6. ',' → logprob: -2.8659863471984863
    7. '#' → logprob: -2.9909863471984863
    8. ' =' → logprob: -3.1159863471984863
    9. '[' → logprob: -3.1159863471984863
    10. ':
' → logprob: -3.4909863471984863

Token 595: ' suggest' (ID: 6108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.100803256034851
    2. '
' → logprob: -1.600803256034851
    3. 'suggest' → logprob: -1.725803256034851
    4. 'ind' → logprob: -3.1008033752441406
    5. ' suggests' → logprob: -3.2258033752441406
    6. 'continue' → logprob: -3.6008033752441406
    7. 'def' → logprob: -3.6008033752441406
    8. '   ' → logprob: -3.6008033752441406
    9. '```' → logprob: -3.9758033752441406
    10. '<|end|>' → logprob: -4.100803375244141

Token 596: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46995803713798523
    2. 'that' → logprob: -1.5949580669403076
    3. ' that' → logprob: -2.2199580669403076
    4. '#' → logprob: -3.9699580669403076
    5. 'def' → logprob: -4.0949578285217285
    6. '    
' → logprob: -5.2199578285217285
    7. 'the' → logprob: -5.5949578285217285
    8. ' s' → logprob: -5.9699578285217285
    9. '```' → logprob: -5.9699578285217285
    10. 'max' → logprob: -6.0949578285217285

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20635615289211273
    2. ' =' → logprob: -2.4563560485839844
    3. '2' → logprob: -2.7063560485839844
    4. 'ize' → logprob: -4.081356048583984
    5. '_' → logprob: -4.706356048583984
    6. '=' → logprob: -5.456356048583984
    7. 'for' → logprob: -7.831356048583984
    8. 's' → logprob: -7.956356048583984
    9. '   ' → logprob: -7.956356048583984
    10. 'e' → logprob: -8.206356048583984

Token 598: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1358916312456131
    2. '   ' → logprob: -2.8858916759490967
    3. ',' → logprob: -3.5108916759490967
    4. '=' → logprob: -3.8858916759490967
    5. ')' → logprob: -5.260891437530518
    6. 'def' → logprob: -6.010891437530518
    7. 'import' → logprob: -6.510891437530518
    8. ' can' → logprob: -6.635891437530518
    9. ' =
' → logprob: -6.635891437530518
    10. 's' → logprob: -7.010891437530518

Token 599: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.21605311334133148
    2. ' =' → logprob: -2.341053009033203
    3. 'be' → logprob: -2.841053009033203
    4. '=' → logprob: -3.466053009033203
    5. ' also' → logprob: -6.716053009033203
    6. '   ' → logprob: -6.966053009033203
    7. '=max' → logprob: -6.966053009033203
    8. '+=' → logprob: -7.216053009033203
    9. ' +=' → logprob: -7.216053009033203
    10. 'not' → logprob: -7.466053009033203

Token 600: ' found' (ID: 2491)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0734987258911133
    2. ' max' → logprob: -1.5734987258911133
    3. 'n' → logprob: -1.9484987258911133
    4. 's' → logprob: -2.6984987258911133
    5. ' n' → logprob: -2.8234987258911133
    6. '```' → logprob: -2.9484987258911133
    7. ' s' → logprob: -3.6984987258911133
    8. ' larger' → logprob: -4.198498725891113
    9. 'larg' → logprob: -4.198498725891113
    10. 'greater' → logprob: -4.448498725891113

Token 601: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5600784420967102
    2. ' by' → logprob: -1.1850783824920654
    3. 'by' → logprob: -2.1850783824920654
    4. ' =' → logprob: -5.5600786209106445
    5. '=' → logprob: -6.3100786209106445
    6. ' as' → logprob: -6.9350786209106445
    7. 'from' → logprob: -7.1850786209106445
    8. '    
' → logprob: -7.3100786209106445
    9. ',' → logprob: -7.5600786209106445
    10. '    ' → logprob: -8.185078620910645

Token 602: ':
' (ID: 734)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.4534107446670532
    2. 'sorting' → logprob: -1.5784107446670532
    3. ' using' → logprob: -3.7034106254577637
    4. 'import' → logprob: -3.8284106254577637
    5. 'heap' → logprob: -3.9534106254577637
    6. ' sorting' → logprob: -3.9534106254577637
    7. 'finding' → logprob: -3.9534106254577637
    8. 's' → logprob: -4.453410625457764
    9. 'maint' → logprob: -5.328410625457764
    10. 'checking' → logprob: -5.828410625457764

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011313649825751781
    2. '    
' → logprob: -6.136313438415527
    3. 'max' → logprob: -6.886313438415527
    4. 'interval' → logprob: -7.261313438415527
    5. 'heap' → logprob: -7.386313438415527
    6. ' intervals' → logprob: -7.511313438415527
    7. '[]' → logprob: -7.511313438415527
    8. 'current' → logprob: -7.761313438415527
    9. 'from' → logprob: -7.761313438415527
    10. 'import' → logprob: -7.886313438415527

Token 604: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7654060125350952
    2. 'interval' → logprob: -0.8904060125350952
    3. '#' (adapté à ' #') → logprob: -3.5154061317443848
    4. 'heap' → logprob: -3.6404061317443848
    5. ' intervals' → logprob: -4.015406131744385
    6. 'end' → logprob: -4.265406131744385
    7. 'import' → logprob: -5.015406131744385
    8. 'starts' → logprob: -5.265406131744385
    9. 'active' → logprob: -5.390406131744385
    10. 'ends' → logprob: -5.515406131744385

Token 605: ' Sorting' (ID: 152134)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8371376395225525
    2. 'heap' → logprob: -1.4621376991271973
    3. '   ' → logprob: -1.8371376991271973
    4. 'import' → logprob: -3.2121376991271973
    5. ' intervals' → logprob: -3.3371376991271973
    6. '#' → logprob: -3.5871376991271973
    7. 'from' → logprob: -4.337137699127197
    8. 'end' → logprob: -4.837137699127197
    9. '    
' → logprob: -4.962137699127197
    10. ' heap' → logprob: -5.087137699127197

Token 606: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.17410434782505035
    2. ' intervals' → logprob: -1.9241043329238892
    3. '(interval' → logprob: -4.4241042137146
    4. 'by' → logprob: -7.2991042137146
    5. ' by' → logprob: -7.5491042137146
    6. ' =' → logprob: -8.674104690551758
    7. '   ' → logprob: -9.049104690551758
    8. '=' → logprob: -9.549104690551758
    9. 'end' → logprob: -9.674104690551758
    10. 'events' → logprob: -10.299104690551758

Token 607: ' by' (ID: 656)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.2802540063858032
    2. '=' → logprob: -2.5302538871765137
    3. ' =' → logprob: -3.0302538871765137
    4. ',' → logprob: -3.2802538871765137
    5. 'by' → logprob: -3.5302538871765137
    6. 'interval' → logprob: -4.030253887176514
    7. '   ' → logprob: -4.530253887176514
    8. '(interval' → logprob: -4.780253887176514
    9. ' by' → logprob: -6.030253887176514
    10. 'sort' → logprob: -6.280253887176514

Token 608: ' start' (ID: 1604)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4669557213783264
    2. 'start' → logprob: -1.7169556617736816
    3. 'a' → logprob: -2.0919556617736816
    4. 'key' → logprob: -3.8419556617736816
    5. ' lambda' → logprob: -4.091955661773682
    6. 'b' → logprob: -4.216955661773682
    7. 'x' → logprob: -4.966955661773682
    8. 'end' → logprob: -5.591955661773682
    9. ' key' → logprob: -6.716955661773682
    10. ' start' → logprob: -6.716955661773682

Token 609: ' then' (ID: 1815)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.24821020662784576
    2. ' time' → logprob: -2.4982101917266846
    3. ',' → logprob: -2.6232101917266846
    4. '_time' → logprob: -3.7482101917266846
    5. '   ' → logprob: -4.248210430145264
    6. ' =' → logprob: -5.123210430145264
    7. 'point' → logprob: -5.248210430145264
    8. 'times' → logprob: -5.248210430145264
    9. ' times' → logprob: -5.873210430145264
    10. 'points' → logprob: -5.873210430145264

Token 610: ' tracking' (ID: 20254)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2847021222114563
    2. ' end' → logprob: -1.4097020626068115
    3. '   ' → logprob: -6.909702301025391
    4. ' =' → logprob: -7.159702301025391
    5. '_end' → logprob: -7.534702301025391
    6. 'b' → logprob: -8.15970230102539
    7. '=end' → logprob: -8.28470230102539
    8. '=lambda' → logprob: -8.78470230102539
    9. '=' → logprob: -9.40970230102539
    10. 'interval' → logprob: -9.53470230102539

Token 611: ' interval' (ID: 17116)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.26000574231147766
    2. ' end' → logprob: -2.5100057125091553
    3. 'heap' → logprob: -3.7600057125091553
    4. 'current' → logprob: -4.135005950927734
    5. 'ends' → logprob: -4.260005950927734
    6. 'the' → logprob: -4.385005950927734
    7. 'their' → logprob: -4.385005950927734
    8. ' the' → logprob: -4.385005950927734
    9. '   ' → logprob: -4.510005950927734
    10. ' their' → logprob: -5.010005950927734

Token 612: ' ends' (ID: 17095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10706520825624466
    2. '   ' → logprob: -3.357065200805664
    3. 'end' → logprob: -3.482065200805664
    4. '_end' → logprob: -4.232065200805664
    5. '_' → logprob: -5.232065200805664
    6. ' end' → logprob: -5.607065200805664
    7. ',' → logprob: -5.732065200805664
    8. '[' → logprob: -6.107065200805664
    9. 'ends' → logprob: -6.107065200805664
    10. 'points' → logprob: -6.732065200805664

Token 613: ' in' (ID: 306)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4386310577392578
    2. '   ' → logprob: -1.1886310577392578
    3. ' intervals' → logprob: -3.188631057739258
    4. '    
' → logprob: -6.063631057739258
    5. '(interval' → logprob: -6.813631057739258
    6. '```' → logprob: -7.188631057739258
    7. '
' → logprob: -7.188631057739258
    8. ',' → logprob: -7.313631057739258
    9. ' =' → logprob: -7.438631057739258
    10. ')
' → logprob: -7.438631057739258

Token 614: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054997604340314865
    2. ' a' → logprob: -2.929997682571411
    3. 'heap' → logprob: -9.304997444152832
    4. 's' → logprob: -10.929997444152832
    5. 'import' → logprob: -13.304997444152832
    6. 'min' → logprob: -13.929997444152832
    7. ' heap' → logprob: -13.929997444152832
    8. '[]' → logprob: -14.429997444152832
    9. ')' → logprob: -14.804997444152832
    10. 'ascending' → logprob: -15.429997444152832

Token 615: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2587042450904846
    2. 'heap' → logprob: -1.5087041854858398
    3. 'list' → logprob: -6.25870418548584
    4. ' min' → logprob: -6.25870418548584
    5. ' heap' → logprob: -6.75870418548584
    6. '[]' → logprob: -7.25870418548584
    7. '[min' → logprob: -7.63370418548584
    8. '=[]' → logprob: -8.50870418548584
    9. 'priority' → logprob: -9.25870418548584
    10. '_min' → logprob: -9.63370418548584

Token 616: '-' (ID: 12)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06587237864732742
    2. '_' → logprob: -3.9408724308013916
    3. ' heap' → logprob: -4.1908721923828125
    4. '_heap' → logprob: -4.5658721923828125
    5. '-' → logprob: -4.9408721923828125
    6. 's' → logprob: -5.4408721923828125
    7. 'q' → logprob: -6.6908721923828125
    8. ')' → logprob: -6.9408721923828125
    9. 'end' → logprob: -7.0658721923828125
    10. 'size' → logprob: -7.0658721923828125

Token 617: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -3.416665640543215e-05
    2. 'end' → logprob: -11.12503433227539
    3. ' heap' → logprob: -11.37503433227539
    4. 'queue' → logprob: -12.87503433227539
    5. 'size' → logprob: -13.25003433227539
    6. 'priority' → logprob: -13.87503433227539
    7. 'he' → logprob: -14.12503433227539
    8. 'q' → logprob: -14.50003433227539
    9. 'h' → logprob: -15.12503433227539
    10. 'hq' → logprob: -15.12503433227539

Token 618: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03482784703373909
    2. ' =' → logprob: -4.534827709197998
    3. 'heap' → logprob: -5.284827709197998
    4. '    
' → logprob: -5.659827709197998
    5. ' intervals' → logprob: -5.784827709197998
    6. 'q' → logprob: -6.034827709197998
    7. '
' → logprob: -6.284827709197998
    8. ' heap' → logprob: -6.409827709197998
    9. 'interval' → logprob: -7.034827709197998
    10. '_heap' → logprob: -7.534827709197998

Token 619: ' counting' (ID: 43276)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5004027485847473
    2. ' while' → logprob: -1.7504026889801025
    3. 'while' → logprob: -2.6254026889801025
    4. '       ' → logprob: -3.3754026889801025
    5. 'heap' → logprob: -3.5004026889801025
    6. ' heap' → logprob: -3.8754026889801025
    7. ' for' → logprob: -4.500402927398682
    8. 'import' → logprob: -4.625402927398682
    9. 'for' → logprob: -4.750402927398682
    10. 'pop' → logprob: -5.250402927398682

Token 620: ' intervals' (ID: 49900)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3599211573600769
    2. ' intervals' → logprob: -1.6099212169647217
    3. 'interval' → logprob: -3.3599212169647217
    4. ' =' → logprob: -3.6099212169647217
    5. '(interval' → logprob: -4.609920978546143
    6. ' by' → logprob: -5.109920978546143
    7. 'heap' → logprob: -5.734920978546143
    8. '=' → logprob: -6.234920978546143
    9. '
' → logprob: -6.484920978546143
    10. 'end' → logprob: -6.484920978546143

Token 621: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08122744411230087
    2. ' =' → logprob: -3.2062275409698486
    3. '    
' → logprob: -5.0812273025512695
    4. '
' → logprob: -5.0812273025512695
    5. '.sort' → logprob: -5.7062273025512695
    6. ' intervals' → logprob: -6.0812273025512695
    7. ',' → logprob: -6.2062273025512695
    8. '(interval' → logprob: -6.2062273025512695
    9. '=' → logprob: -6.7062273025512695
    10. '(' → logprob: -6.9562273025512695

Token 622: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.7792546153068542
    2. '   ' → logprob: -1.904254674911499
    3. 'over' → logprob: -1.904254674911499
    4. 'end' → logprob: -2.654254674911499
    5. 'start' → logprob: -3.029254674911499
    6. 'continue' → logprob: -3.279254674911499
    7. ' continue' → logprob: -4.02925443649292
    8. '#' → logprob: -4.52925443649292
    9. ' that' → logprob: -5.15425443649292
    10. ' are' → logprob: -5.52925443649292

Token 623: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06406354904174805
    2. ' =' → logprob: -3.564063549041748
    3. ' by' → logprob: -5.189063549041748
    4. '
' → logprob: -5.314063549041748
    5. ',' → logprob: -5.939063549041748
    6. '    
' → logprob: -6.189063549041748
    7. ' with' → logprob: -6.564063549041748
    8. 's' → logprob: -6.689063549041748
    9. ' (' → logprob: -6.814063549041748
    10. '_' → logprob: -7.064063549041748

Token 624: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5623028874397278
    2. '   ' → logprob: -1.062302827835083
    3. ' intervals' → logprob: -2.562302827835083
    4. 'heap' → logprob: -5.687303066253662
    5. 'end' → logprob: -7.437303066253662
    6. '    
' → logprob: -7.562303066253662
    7. ' ends' → logprob: -7.562303066253662
    8. 'import' → logprob: -7.812303066253662
    9. '```' → logprob: -7.812303066253662
    10. ' heap' → logprob: -8.187302589416504

Token 625: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030933689326047897
    2. 'interval' → logprob: -4.405933856964111
    3. ' intervals' → logprob: -4.905933856964111
    4. 'heap' → logprob: -5.405933856964111
    5. '    
' → logprob: -5.780933856964111
    6. ' heap' → logprob: -6.655933856964111
    7. '
' → logprob: -6.780933856964111
    8. ' ends' → logprob: -8.905933380126953
    9. 'import' → logprob: -8.905933380126953
    10. '```' → logprob: -9.280933380126953

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06349112838506699
    2. 'interval' → logprob: -3.313491106033325
    3. 'heap' → logprob: -4.063491344451904
    4. ' intervals' → logprob: -6.063491344451904
    5. ' ends' → logprob: -6.188491344451904
    6. ' heap' → logprob: -6.688491344451904
    7. 'end' → logprob: -6.938491344451904
    8. 'ends' → logprob: -7.438491344451904
    9. 'import' → logprob: -8.313490867614746
    10. '    
' → logprob: -9.063490867614746

Token 627: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9123790264129639
    2. 'heap' → logprob: -1.2873790264129639
    3. '   ' → logprob: -1.4123790264129639
    4. 'ends' → logprob: -3.537379026412964
    5. 'import' → logprob: -3.787379026412964
    6. 'end' → logprob: -4.162379264831543
    7. ' ends' → logprob: -6.162379264831543
    8. 'pq' → logprob: -6.287379264831543
    9. ' heap' → logprob: -6.412379264831543
    10. '#' (adapté à ' #') → logprob: -6.412379264831543

Token 628: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35554957389831543
    2. 'interval' → logprob: -1.3555495738983154
    3. 'heap' → logprob: -3.3555495738983154
    4. 'end' → logprob: -5.9805498123168945
    5. 'ends' → logprob: -6.4805498123168945
    6. 'import' → logprob: -6.7305498123168945
    7. '#' → logprob: -8.355549812316895
    8. 'pq' → logprob: -8.355549812316895
    9. 'active' → logprob: -8.730549812316895
    10. ' intervals' → logprob: -8.730549812316895

Token 629: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30948227643966675
    2. 'heap' → logprob: -2.3094823360443115
    3. 'import' → logprob: -2.6844823360443115
    4. 'interval' → logprob: -3.6844823360443115
    5. ' intervals' → logprob: -4.309482097625732
    6. ',' → logprob: -4.434482097625732
    7. '#' → logprob: -4.809482097625732
    8. ' heap' → logprob: -5.184482097625732
    9. ':' → logprob: -5.184482097625732
    10. 'q' → logprob: -5.559482097625732

Token 630: ' from' (ID: 591)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.25524383783340454
    2. 'import' → logprob: -2.7552437782287598
    3. ' heap' → logprob: -3.0052437782287598
    4. 'ends' → logprob: -3.3802437782287598
    5. 'interval' → logprob: -3.6302437782287598
    6. 'end' → logprob: -3.7552437782287598
    7. 'min' → logprob: -4.75524377822876
    8. '#' → logprob: -5.00524377822876
    9. ' ends' → logprob: -5.88024377822876
    10. '   ' → logprob: -6.00524377822876

Token 631: ' discussion' (ID: 14266)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6110343337059021
    2. ' heap' → logprob: -1.6110343933105469
    3. ' here' → logprob: -2.861034393310547
    4. ' the' → logprob: -3.236034393310547
    5. 'the' → logprob: -3.486034393310547
    6. 'collections' → logprob: -3.611034393310547
    7. 'import' → logprob: -3.736034393310547
    8. ' intervals' → logprob: -3.861034393310547
    9. 'interval' → logprob: -3.861034393310547
    10. 'here' → logprob: -5.361034393310547

Token 632: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0042747259140015
    2. ' =' → logprob: -1.7542747259140015
    3. ':' → logprob: -1.8792747259140015
    4. '#' → logprob: -2.629274845123291
    5. ',' → logprob: -2.754274845123291
    6. ':
' → logprob: -3.254274845123291
    7. 'import' → logprob: -3.629274845123291
    8. ' and' → logprob: -3.629274845123291
    9. '=' → logprob: -4.004274845123291
    10. ' in' → logprob: -4.879274845123291

Token 633: ' similar' (ID: 6771)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.011551022529602
    2. ' the' → logprob: -1.511551022529602
    3. ' intervals' → logprob: -2.1365509033203125
    4. 'interval' → logprob: -2.3865509033203125
    5. '   ' → logprob: -3.1365509033203125
    6. 'def' → logprob: -3.3865509033203125
    7. 'heap' → logprob: -3.6365509033203125
    8. 'import' → logprob: -3.7615509033203125
    9. '[' → logprob: -4.5115509033203125
    10. '[]' → logprob: -5.1365509033203125

Token 634: ' problems' (ID: 6840)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.793600857257843
    2. 'heap' → logprob: -1.6686007976531982
    3. '   ' → logprob: -2.1686007976531982
    4. 'interval' → logprob: -2.4186007976531982
    5. ' heap' → logprob: -2.7936007976531982
    6. 'import' → logprob: -4.293601036071777
    7. '#' → logprob: -4.668601036071777
    8. 'q' → logprob: -4.668601036071777
    9. '       ' → logprob: -5.043601036071777
    10. '_heap' → logprob: -5.043601036071777

Token 635: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7225533723831177
    2. ',' → logprob: -1.2225533723831177
    3. ':' → logprob: -2.472553253173828
    4. ':
' → logprob: -3.222553253173828
    5. ' and' → logprob: -4.097553253173828
    6. 'import' → logprob: -4.472553253173828
    7. ' =' → logprob: -5.097553253173828
    8. ',
' → logprob: -5.222553253173828
    9. '_heap' → logprob: -5.222553253173828
    10. '#' → logprob: -5.472553253173828

Token 636: ' to' (ID: 316)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2057289481163025
    2. ' heap' → logprob: -2.3307290077209473
    3. 'ends' → logprob: -3.2057290077209473
    4. ' ends' → logprob: -4.205729007720947
    5. 'import' → logprob: -4.330729007720947
    6. 'end' → logprob: -5.080729007720947
    7. '   ' → logprob: -5.205729007720947
    8. 'interval' → logprob: -5.955729007720947
    9. 'min' → logprob: -6.080729007720947
    10. 'seat' → logprob: -7.205729007720947

Token 637: ' get' (ID: 717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4000623226165771
    2. 'find' → logprob: -1.5250623226165771
    3. ' find' → logprob: -1.6500623226165771
    4. 'heap' → logprob: -2.025062322616577
    5. '#' → logprob: -3.900062322616577
    6. 'import' → logprob: -4.025062561035156
    7. ' heap' → logprob: -4.400062561035156
    8. '
' → logprob: -4.400062561035156
    9. 'maint' → logprob: -4.400062561035156
    10. '       ' → logprob: -4.525062561035156

Token 638: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8615210652351379
    2. 'the' → logprob: -1.1115210056304932
    3. ' the' → logprob: -2.111521005630493
    4. 's' → logprob: -3.111521005630493
    5. 'max' → logprob: -3.986521005630493
    6. '       ' → logprob: -4.486521244049072
    7. 'heap' → logprob: -4.986521244049072
    8. ' s' → logprob: -5.111521244049072
    9. 'len' → logprob: -5.111521244049072
    10. 'interval' → logprob: -5.361521244049072

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30453377962112427
    2. '2' → logprob: -1.6795337200164795
    3. '_' → logprob: -3.5545337200164795
    4. '   ' → logprob: -4.179533958435059
    5. ']' → logprob: -4.929533958435059
    6. 'ize' → logprob: -5.304533958435059
    7. '[' → logprob: -5.554533958435059
    8. '[]' → logprob: -6.304533958435059
    9. '-' → logprob: -6.804533958435059
    10. 'uffix' → logprob: -6.804533958435059

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0758502408862114
    2. ':' → logprob: -3.575850248336792
    3. ' =' → logprob: -3.825850248336792
    4. '_' → logprob: -5.075850009918213
    5. '_,' → logprob: -5.325850009918213
    6. '   ' → logprob: -5.575850009918213
    7. '=' → logprob: -5.700850009918213
    8. ' we' → logprob: -6.825850009918213
    9. ' ,' → logprob: -7.450850009918213
    10. 's' → logprob: -7.825850009918213

Token 641: ' we' (ID: 581)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2606595754623413
    2. ' heap' → logprob: -2.510659694671631
    3. 'interval' → logprob: -2.760659694671631
    4. 'ends' → logprob: -3.135659694671631
    5. 'import' → logprob: -4.510659694671631
    6. 'end' → logprob: -4.635659694671631
    7. ' ends' → logprob: -5.010659694671631
    8. '   ' → logprob: -5.260659694671631
    9. ' intervals' → logprob: -5.385659694671631
    10. '#' → logprob: -6.885659694671631

Token 642: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4293671250343323
    2. '   ' → logprob: -1.9293670654296875
    3. ' =' → logprob: -2.5543670654296875
    4. ' need' → logprob: -2.6793670654296875
    5. 'import' → logprob: -4.5543670654296875
    6. '=' → logprob: -4.6793670654296875
    7. ' should' → logprob: -4.6793670654296875
    8. 'can' → logprob: -4.6793670654296875
    9. 'need' → logprob: -4.6793670654296875
    10. ' continue' → logprob: -6.5543670654296875

Token 643: ':
' (ID: 734)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.3275347650051117
    2. '   ' → logprob: -2.3275346755981445
    3. 'maint' → logprob: -2.8275346755981445
    4. ' maintain' → logprob: -3.3275346755981445
    5. 'import' → logprob: -3.9525346755981445
    6. 'use' → logprob: -4.0775346755981445
    7. ' keep' → logprob: -4.2025346755981445
    8. ' track' → logprob: -5.0775346755981445
    9. ' import' → logprob: -5.2025346755981445
    10. ' sort' → logprob: -5.4525346755981445

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006543543189764023
    2. ' intervals' → logprob: -5.7565436363220215
    3. 'interval' → logprob: -6.0065436363220215
    4. 'heap' → logprob: -8.256543159484863
    5. ' heap' → logprob: -8.631543159484863
    6. 'import' → logprob: -9.006543159484863
    7. '    ' → logprob: -9.506543159484863
    8. '    
' → logprob: -10.131543159484863
    9. ' sorted' → logprob: -10.256543159484863
    10. ' sort' → logprob: -10.506543159484863

Token 645: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0799647718667984
    2. 'interval' → logprob: -2.9549648761749268
    3. ' intervals' → logprob: -3.7049648761749268
    4. '
' → logprob: -9.954964637756348
    5. 'import' → logprob: -10.704964637756348
    6. 'heap' → logprob: -10.954964637756348
    7. '    
' → logprob: -11.204964637756348
    8. 'sort' → logprob: -11.204964637756348
    9. '```' → logprob: -11.329964637756348
    10. '#' (adapté à ' #') → logprob: -11.954964637756348

Token 646: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6698073744773865
    2. 'interval' → logprob: -1.2948074340820312
    3. ' intervals' → logprob: -2.2948074340820312
    4. 'import' → logprob: -3.0448074340820312
    5. 'heap' → logprob: -3.5448074340820312
    6. ' heap' → logprob: -4.919807434082031
    7. ' sort' → logprob: -5.169807434082031
    8. 'sort' → logprob: -5.169807434082031
    9. ' import' → logprob: -5.669807434082031
    10. 'end' → logprob: -5.919807434082031

Token 647: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3500581681728363
    2. 'the' → logprob: -1.8500581979751587
    3. '   ' → logprob: -2.725058078765869
    4. ' intervals' → logprob: -3.475058078765869
    5. ' active' → logprob: -5.225058078765869
    6. ' =' → logprob: -5.225058078765869
    7. ' overlapping' → logprob: -5.475058078765869
    8. ' current' → logprob: -5.600058078765869
    9. 'over' → logprob: -5.725058078765869
    10. 'current' → logprob: -6.475058078765869

Token 648: ' maximum' (ID: 10562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.5744683742523193
    2. 'len' → logprob: -2.1994683742523193
    3. 'number' → logprob: -2.6994683742523193
    4. ' smallest' → logprob: -2.6994683742523193
    5. ' intervals' → logprob: -2.6994683742523193
    6. 'heap' → logprob: -2.8244683742523193
    7. 'minimum' → logprob: -3.0744683742523193
    8. ' heap' → logprob: -3.4494683742523193
    9. ' minimum' → logprob: -3.5744683742523193
    10. 'length' → logprob: -3.5744683742523193

Token 649: ' number' (ID: 2086)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.251962423324585
    2. 'over' → logprob: -1.751962423324585
    3. 'size' → logprob: -1.876962423324585
    4. '_overlap' → logprob: -2.751962423324585
    5. 'number' → logprob: -3.001962423324585
    6. ' number' → logprob: -3.126962423324585
    7. 'import' → logprob: -3.251962423324585
    8. 'end' → logprob: -3.626962423324585
    9. '   ' → logprob: -3.876962423324585
    10. '-' → logprob: -4.251962661743164

Token 650: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5014256238937378
    2. ' of' → logprob: -1.6264256238937378
    3. '_of' → logprob: -2.2514257431030273
    4. '   ' → logprob: -2.5014257431030273
    5. '_overlap' → logprob: -5.501425743103027
    6. '=' → logprob: -6.501425743103027
    7. ' =' → logprob: -6.626425743103027
    8. '_' → logprob: -7.626425743103027
    9. ' overlapping' → logprob: -7.876425743103027
    10. 's' → logprob: -7.876425743103027

Token 651: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.26450759172439575
    2. ' intervals' → logprob: -2.139507532119751
    3. 'active' → logprob: -3.264507532119751
    4. 'over' → logprob: -3.264507532119751
    5. 'end' → logprob: -4.63950777053833
    6. 'heap' → logprob: -4.88950777053833
    7. ' active' → logprob: -5.38950777053833
    8. 'sim' → logprob: -5.63950777053833
    9. '   ' → logprob: -6.01450777053833
    10. 'con' → logprob: -6.88950777053833

Token 652: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3737235963344574
    2. ' that' → logprob: -2.6237235069274902
    3. 'that' → logprob: -2.6237235069274902
    4. 'sim' → logprob: -2.6237235069274902
    5. 'over' → logprob: -3.4987235069274902
    6. 'with' → logprob: -3.8737235069274902
    7. 'ending' → logprob: -5.24872350692749
    8. ' overlapping' → logprob: -5.24872350692749
    9. 'currently' → logprob: -5.74872350692749
    10. 'in' → logprob: -5.87372350692749

Token 653: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.7327874898910522
    2. '   ' → logprob: -1.7327874898910522
    3. 'over' → logprob: -1.7327874898910522
    4. 'start' → logprob: -2.857787609100342
    5. 'end' → logprob: -3.982787609100342
    6. 'continue' → logprob: -4.357787609100342
    7. '#' → logprob: -4.857787609100342
    8. 'import' → logprob: -4.857787609100342
    9. '_overlap' → logprob: -5.107787609100342
    10. ' that' → logprob: -5.232787609100342

Token 654: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7447901964187622
    2. ' =' → logprob: -1.7447901964187622
    3. ' at' → logprob: -2.3697900772094727
    4. 'at' → logprob: -2.3697900772094727
    5. 'with' → logprob: -3.3697900772094727
    6. '_' → logprob: -3.4947900772094727
    7. '_at' → logprob: -4.244790077209473
    8. 'import' → logprob: -4.369790077209473
    9. 'while' → logprob: -4.494790077209473
    10. 'and' → logprob: -5.494790077209473

Token 655: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9548869729042053
    2. 'some' → logprob: -1.2048869132995605
    3. 'least' → logprob: -2.4548869132995605
    4. ' any' → logprob: -2.7048869132995605
    5. 'a' → logprob: -2.9548869132995605
    6. ' some' → logprob: -3.3298869132995605
    7. 'the' → logprob: -3.4548869132995605
    8. ' least' → logprob: -4.2048869132995605
    9. ' the' → logprob: -4.5798869132995605
    10. ' a' → logprob: -4.7048869132995605

Token 656: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.850376546382904
    2. 'time' → logprob: -1.1003766059875488
    3. ' point' → logprob: -2.225376605987549
    4. ' time' → logprob: -2.600376605987549
    5. 'token' → logprob: -3.725376605987549
    6. ' given' → logprob: -5.475376605987549
    7. '   ' → logprob: -5.850376605987549
    8. ' token' → logprob: -5.975376605987549
    9. 'given' → logprob: -5.975376605987549
    10. ' ' → logprob: -6.100376605987549

Token 657: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12156961113214493
    2. ' =' → logprob: -3.4965696334838867
    3. '
' → logprob: -3.7465696334838867
    4. 'import' → logprob: -3.9965696334838867
    5. 'heap' → logprob: -4.246569633483887
    6. '    
' → logprob: -5.871569633483887
    7. 'def' → logprob: -5.996569633483887
    8. '=' → logprob: -6.246569633483887
    9. '_heap' → logprob: -6.246569633483887
    10. 'current' → logprob: -6.496569633483887

Token 658: 'as' (ID: 288)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5462582111358643
    2. ')' → logprob: -1.5462582111358643
    3. ' or' → logprob: -3.7962582111358643
    4. ' and' → logprob: -3.9212582111358643
    5. '#' → logprob: -4.171257972717285
    6. 'and' → logprob: -4.546257972717285
    7. ',' → logprob: -4.796257972717285
    8. ' )' → logprob: -4.921257972717285
    9. ' but' → logprob: -4.921257972717285
    10. '),' → logprob: -4.921257972717285

Token 659: ' with' (ID: 483)
  Prédit: ' least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.6055862903594971
    2. 'least' → logprob: -1.230586290359497
    3. '   ' → logprob: -2.480586290359497
    4. ')' → logprob: -3.355586290359497
    5. '    ' → logprob: -4.480586051940918
    6. '_' → logprob: -5.230586051940918
    7. '       ' → logprob: -5.730586051940918
    8. ' current' → logprob: -6.105586051940918
    9. ' s' → logprob: -6.355586051940918
    10. 'not' → logprob: -6.480586051940918

Token 660: ' s' (ID: 265)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8436404466629028
    2. 'the' → logprob: -2.2186403274536133
    3. ' intervals' → logprob: -2.5936403274536133
    4. 'any' → logprob: -2.7186403274536133
    5. 'a' → logprob: -2.9686403274536133
    6. 'start' → logprob: -3.0936403274536133
    7. 'heap' → logprob: -3.0936403274536133
    8. 'each' → logprob: -3.3436403274536133
    9. 'events' → logprob: -3.7186403274536133
    10. 'all' → logprob: -3.7186403274536133

Token 661: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0205268282443285
    2. '_' → logprob: -4.645526885986328
    3. '1' → logprob: -5.520526885986328
    4. ')' → logprob: -5.520526885986328
    5. '   ' → logprob: -7.520526885986328
    6. '-' → logprob: -7.770526885986328
    7. '=' → logprob: -8.520526885986328
    8. '[' → logprob: -8.520526885986328
    9. 'q' → logprob: -8.520526885986328
    10. '#' → logprob: -8.895526885986328

Token 662: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4770222306251526
    2. '   ' → logprob: -1.6020221710205078
    3. ' or' → logprob: -2.227022171020508
    4. ' )' → logprob: -3.727022171020508
    5. ' +' → logprob: -4.477022171020508
    6. ' and' → logprob: -4.727022171020508
    7. '
' → logprob: -4.977022171020508
    8. ')
' → logprob: -5.852022171020508
    9. '       ' → logprob: -5.977022171020508
    10. '),' → logprob: -6.352022171020508

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041140373796224594
    2. '#' → logprob: -3.29114031791687
    3. ' #' → logprob: -6.916140556335449
    4. ' and' → logprob: -7.541140556335449
    5. '       ' → logprob: -7.791140556335449
    6. ' but' → logprob: -7.916140556335449
    7. 'import' → logprob: -8.79114055633545
    8. '    ' → logprob: -9.16614055633545
    9. ')' → logprob: -9.41614055633545
    10. 'and' → logprob: -9.54114055633545

Token 664: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05813509225845337
    2. '#' (adapté à ' #') → logprob: -3.0581350326538086
    3. 'import' → logprob: -5.433135032653809
    4. ' and' → logprob: -6.683135032653809
    5. 'heap' → logprob: -7.308135032653809
    6. '
' → logprob: -7.683135032653809
    7. ')' → logprob: -7.683135032653809
    8. ' #' → logprob: -7.683135032653809
    9. '    
' → logprob: -7.933135032653809
    10. ' but' → logprob: -8.558135032653809

Token 665: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05760575458407402
    2. '#' → logprob: -3.432605743408203
    3. 'heap' → logprob: -4.682605743408203
    4. 'import' → logprob: -5.557605743408203
    5. ' #' → logprob: -5.807605743408203
    6. ' heap' → logprob: -6.307605743408203
    7. '       ' → logprob: -6.932605743408203
    8. ' but' → logprob: -7.057605743408203
    9. ' and' → logprob: -7.057605743408203
    10. '    ' → logprob: -7.307605743408203

Token 666: ' also' (ID: 1217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0668046697974205
    2. '    ' → logprob: -4.691804885864258
    3. 'current' → logprob: -4.691804885864258
    4. '#' → logprob: -4.941804885864258
    5. ' current' → logprob: -4.941804885864258
    6. 'heap' → logprob: -5.191804885864258
    7. '       ' → logprob: -5.316804885864258
    8. 'import' → logprob: -5.566804885864258
    9. ' heap' → logprob: -5.816804885864258
    10. ' s' → logprob: -6.066804885864258

Token 667: ' consider' (ID: 3331)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13908065855503082
    2. '       ' → logprob: -2.639080762863159
    3. ' continue' → logprob: -4.63908052444458
    4. '#' → logprob: -4.88908052444458
    5. 'consider' → logprob: -5.13908052444458
    6. 'continue' → logprob: -5.38908052444458
    7. 'heap' → logprob: -5.63908052444458
    8. ' consider' → logprob: -5.63908052444458
    9. 'import' → logprob: -6.01408052444458
    10. '
' → logprob: -6.01408052444458

Token 668: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7739850878715515
    2. ' the' → logprob: -0.8989850878715515
    3. ' intervals' → logprob: -2.7739851474761963
    4. 'the' → logprob: -3.0239851474761963
    5. 'interval' → logprob: -5.398984909057617
    6. '       ' → logprob: -5.398984909057617
    7. ' a' → logprob: -6.523984909057617
    8. 'heap' → logprob: -6.648984909057617
    9. ' heap' → logprob: -6.898984909057617
    10. ' their' → logprob: -7.273984909057617

Token 669: ' largest' (ID: 10574)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.2738803625106812
    2. ' ends' → logprob: -1.5238803625106812
    3. 'heap' → logprob: -1.7738803625106812
    4. 'interval' → logprob: -2.2738804817199707
    5. ' heap' → logprob: -2.5238804817199707
    6. 'ends' → logprob: -2.8988804817199707
    7. '   ' → logprob: -3.7738804817199707
    8. '#' → logprob: -4.273880481719971
    9. 'import' → logprob: -4.398880481719971
    10. 'end' → logprob: -5.148880481719971

Token 670: ' size' (ID: 2349)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.1877572536468506
    2. 'end' → logprob: -1.8127572536468506
    3. ' overlap' → logprob: -2.5627572536468506
    4. ' heap' → logprob: -3.0627572536468506
    5. 'interval' → logprob: -3.1877572536468506
    6. ' number' → logprob: -3.1877572536468506
    7. '   ' → logprob: -3.3127572536468506
    8. 'over' → logprob: -3.4377572536468506
    9. ' end' → logprob: -3.5627572536468506
    10. ' possible' → logprob: -3.6877572536468506

Token 671: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7770606875419617
    2. ' of' → logprob: -1.0270607471466064
    3. 'of' → logprob: -1.9020607471466064
    4. ',' → logprob: -4.402060508728027
    5. '(' → logprob: -6.152060508728027
    6. 'heap' → logprob: -6.152060508728027
    7. 'import' → logprob: -6.277060508728027
    8. '(
' → logprob: -6.527060508728027
    9. ' ' → logprob: -6.777060508728027
    10. 's' → logprob: -6.777060508728027

Token 672: ' a' (ID: 261)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6173326969146729
    2. 'a' → logprob: -2.117332696914673
    3. 'the' → logprob: -2.117332696914673
    4. 'interval' → logprob: -2.492332696914673
    5. ' intervals' → logprob: -2.617332696914673
    6. ' the' → logprob: -3.992332696914673
    7. ' a' → logprob: -4.367332458496094
    8. ' heap' → logprob: -4.992332458496094
    9. 'active' → logprob: -5.492332458496094
    10. 'current' → logprob: -5.617332458496094

Token 673: ' set' (ID: 920)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2326783388853073
    2. 'max' → logprob: -2.3576784133911133
    3. ' heap' → logprob: -2.8576784133911133
    4. 'min' → logprob: -3.7326784133911133
    5. 'import' → logprob: -5.107678413391113
    6. ' max' → logprob: -5.357678413391113
    7. ' min' → logprob: -5.857678413391113
    8. 'interval' → logprob: -5.982678413391113
    9. 'active' → logprob: -5.982678413391113
    10. 'current' → logprob: -6.232678413391113

Token 674: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8627215027809143
    2. '   ' → logprob: -1.4877214431762695
    3. ' of' → logprob: -1.6127214431762695
    4. 'of' → logprob: -2.8627214431762695
    5. ' _' → logprob: -3.6127214431762695
    6. '(' → logprob: -4.1127214431762695
    7. ' that' → logprob: -4.2377214431762695
    8. ',' → logprob: -4.9877214431762695
    9. '    ' → logprob: -5.4877214431762695
    10. '_of' → logprob: -5.6127214431762695

Token 675: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.12034454196691513
    2. ' intervals' → logprob: -2.370344638824463
    3. 'over' → logprob: -5.120344638824463
    4. 'end' → logprob: -5.495344638824463
    5. '   ' → logprob: -5.745344638824463
    6. 'active' → logprob: -6.245344638824463
    7. 'heap' → logprob: -6.495344638824463
    8. '(interval' → logprob: -7.245344638824463
    9. '```' → logprob: -7.870344638824463
    10. 'ends' → logprob: -8.245344161987305

Token 676: ' where' (ID: 1919)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6536280512809753
    2. '   ' → logprob: -1.7786281108856201
    3. ' =' → logprob: -2.52862811088562
    4. ' that' → logprob: -2.90362811088562
    5. 'that' → logprob: -3.65362811088562
    6. ',' → logprob: -3.77862811088562
    7. '=' → logprob: -4.153627872467041
    8. 'with' → logprob: -4.403627872467041
    9. 'def' → logprob: -4.528627872467041
    10. '[' → logprob: -4.903627872467041

Token 677: ' each' (ID: 2454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3897526264190674
    2. 'ends' → logprob: -1.3897526264190674
    3. ' ends' → logprob: -2.0147526264190674
    4. 'end' → logprob: -2.2647526264190674
    5. ' the' → logprob: -3.0147526264190674
    6. 'interval' → logprob: -3.1397526264190674
    7. ' intervals' → logprob: -3.2647526264190674
    8. ' all' → logprob: -3.7647526264190674
    9. 'the' → logprob: -4.264752388000488
    10. ' their' → logprob: -4.389752388000488

Token 678: ' pair' (ID: 10610)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.42532479763031
    2. ' interval' → logprob: -1.67532479763031
    3. '   ' → logprob: -1.92532479763031
    4. ' ' → logprob: -2.5503249168395996
    5. ' _' → logprob: -2.9253249168395996
    6. '_' → logprob: -3.0503249168395996
    7. ')' → logprob: -3.3003249168395996
    8. 'end' → logprob: -3.6753249168395996
    9. '_end' → logprob: -3.6753249168395996
    10. ' end' → logprob: -3.8003249168395996

Token 679: ' overlaps' (ID: 173439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36521661281585693
    2. ' overlaps' → logprob: -2.4902167320251465
    3. '_inter' → logprob: -3.6152167320251465
    4. ')' → logprob: -3.7402167320251465
    5. ' is' → logprob: -3.7402167320251465
    6. '```' → logprob: -3.8652167320251465
    7. ' that' → logprob: -3.9902167320251465
    8. ' of' → logprob: -4.1152167320251465
    9. 'over' → logprob: -4.6152167320251465
    10. ' _' → logprob: -4.7402167320251465

Token 680: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07813619077205658
    2. '
' → logprob: -4.078135967254639
    3. ' =' → logprob: -4.578135967254639
    4. '    
' → logprob: -5.203135967254639
    5. 'import' → logprob: -5.203135967254639
    6. ')
' → logprob: -5.453135967254639
    7. 'def' → logprob: -5.703135967254639
    8. ' intervals' → logprob: -5.703135967254639
    9. ']
' → logprob: -5.828135967254639
    10. 'heap' → logprob: -5.953135967254639

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042559914290905
    2. 'heap' → logprob: -4.54256010055542
    3. '    
' → logprob: -4.66756010055542
    4. '
' → logprob: -5.41756010055542
    5. 'interval' → logprob: -5.79256010055542
    6. 'import' → logprob: -6.16756010055542
    7. 'def' → logprob: -6.16756010055542
    8. ' ends' → logprob: -6.54256010055542
    9. ' heap' → logprob: -6.79256010055542
    10. '#' → logprob: -7.16756010055542

Token 682: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019378716126084328
    2. '
' → logprob: -4.769378662109375
    3. '    
' → logprob: -5.019378662109375
    4. 'heap' → logprob: -6.394378662109375
    5. 'import' → logprob: -6.769378662109375
    6. 'interval' → logprob: -8.644378662109375
    7. '```' → logprob: -8.769378662109375
    8. ' heap' → logprob: -9.019378662109375
    9. 'def' → logprob: -9.019378662109375
    10. 'end' → logprob: -9.394378662109375

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16455279290676117
    2. 'heap' → logprob: -3.039552688598633
    3. 'import' → logprob: -3.414552688598633
    4. 'ends' → logprob: -3.664552688598633
    5. ' ends' → logprob: -3.789552688598633
    6. '
' → logprob: -5.164552688598633
    7. 'interval' → logprob: -5.539552688598633
    8. 'end' → logprob: -6.039552688598633
    9. '#' → logprob: -6.164552688598633
    10. 'from' → logprob: -6.164552688598633

Token 684: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8448875546455383
    2. 'interval' → logprob: -1.4698874950408936
    3. 'ends' → logprob: -1.5948874950408936
    4. 'heap' → logprob: -2.3448874950408936
    5. 'end' → logprob: -4.094887733459473
    6. '#' (adapté à ' #') → logprob: -4.844887733459473
    7. 'active' → logprob: -4.969887733459473
    8. ' ends' → logprob: -5.469887733459473
    9. 'import' → logprob: -5.969887733459473
    10. 'max' → logprob: -7.094887733459473

Token 685: ' For' (ID: 2214)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7980426549911499
    2. 'ends' → logprob: -1.04804265499115
    3. 'heap' → logprob: -2.1730427742004395
    4. 'active' → logprob: -3.9230427742004395
    5. 'import' → logprob: -4.0480427742004395
    6. 'end' → logprob: -4.0480427742004395
    7. '   ' → logprob: -4.2980427742004395
    8. '#' → logprob: -5.0480427742004395
    9. 'max' → logprob: -5.9230427742004395
    10. 'starts' → logprob: -6.0480427742004395

Token 686: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8469893336296082
    2. 'i' → logprob: -2.096989393234253
    3. 'heap' → logprob: -2.096989393234253
    4. 'end' → logprob: -2.346989393234253
    5. 'a' → logprob: -3.096989393234253
    6. ' interval' → logprob: -3.846989393234253
    7. '#' → logprob: -4.096989154815674
    8. 'start' → logprob: -4.221989154815674
    9. ' heap' → logprob: -4.346989154815674
    10. 'starts' → logprob: -4.471989154815674

Token 687: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5407590866088867
    2. '.sort' → logprob: -1.4157590866088867
    3. '_sorted' → logprob: -2.9157590866088867
    4. '_' → logprob: -3.1657590866088867
    5. '=' → logprob: -3.4157590866088867
    6. '   ' → logprob: -4.540759086608887
    7. ',' → logprob: -5.040759086608887
    8. 'with' → logprob: -5.290759086608887
    9. 's' → logprob: -5.915759086608887
    10. 'sorted' → logprob: -6.165759086608887

Token 688: ' the' (ID: 290)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7124882340431213
    2. 'ends' → logprob: -1.7124881744384766
    3. '   ' → logprob: -2.0874881744384766
    4. 'heap' → logprob: -2.3374881744384766
    5. ' ends' → logprob: -3.4624881744384766
    6. 'import' → logprob: -3.5874881744384766
    7. 'end' → logprob: -3.9624881744384766
    8. ' intervals' → logprob: -4.337488174438477
    9. '#' → logprob: -4.837488174438477
    10. ' heap' → logprob: -5.962488174438477

Token 689: ' maximum' (ID: 10562)
  Prédit: ' ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ends' → logprob: -1.038971185684204
    2. '   ' → logprob: -1.663971185684204
    3. '#' → logprob: -2.163971185684204
    4. 'heap' → logprob: -2.663971185684204
    5. 'ends' → logprob: -3.038971185684204
    6. 'import' → logprob: -3.163971185684204
    7. 'interval' → logprob: -3.663971185684204
    8. 'def' → logprob: -3.663971185684204
    9. ' intervals' → logprob: -3.663971185684204
    10. '       ' → logprob: -4.163970947265625

Token 690: ' clique' (ID: 60301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47439712285995483
    2. '   ' → logprob: -2.2243971824645996
    3. '_size' → logprob: -2.9743971824645996
    4. '_heap' → logprob: -2.9743971824645996
    5. 'heap' → logprob: -3.3493971824645996
    6. 'size' → logprob: -3.3493971824645996
    7. ' _' → logprob: -4.5993971824646
    8. '_overlap' → logprob: -4.5993971824646
    9. 's' → logprob: -4.8493971824646
    10. '_end' → logprob: -4.8493971824646

Token 691: ' size' (ID: 2349)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.2080402672290802
    2. '_' → logprob: -2.208040237426758
    3. 'size' → logprob: -3.208040237426758
    4. ' size' → logprob: -4.208040237426758
    5. ' _' → logprob: -5.083040237426758
    6. '   ' → logprob: -5.333040237426758
    7. ' =' → logprob: -6.083040237426758
    8. ')' → logprob: -6.333040237426758
    9. '[' → logprob: -6.333040237426758
    10. 's' → logprob: -6.583040237426758

Token 692: ' equals' (ID: 29702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2645791471004486
    2. '   ' → logprob: -1.889579176902771
    3. '=' → logprob: -4.0145792961120605
    4. '_' → logprob: -4.1395792961120605
    5. ' is' → logprob: -4.6395792961120605
    6. '_size' → logprob: -5.5145792961120605
    7. 's' → logprob: -5.6395792961120605
    8. ':' → logprob: -5.6395792961120605
    9. ',' → logprob: -5.7645792961120605
    10. '[' → logprob: -5.7645792961120605

Token 693: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6715046167373657
    2. ' max' → logprob: -2.171504497528076
    3. 'max' → logprob: -2.546504497528076
    4. '   ' → logprob: -2.671504497528076
    5. 'the' → logprob: -2.671504497528076
    6. ' n' → logprob: -3.171504497528076
    7. ' len' → logprob: -3.421504497528076
    8. 'len' → logprob: -3.546504497528076
    9. ' intervals' → logprob: -4.171504497528076
    10. 'n' → logprob: -4.296504497528076

Token 694: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6247539520263672
    2. 'maximum' → logprob: -1.6247539520263672
    3. ' max' → logprob: -2.499753952026367
    4. ' maximum' → logprob: -2.624753952026367
    5. 'len' → logprob: -3.749753952026367
    6. 'length' → logprob: -3.999753952026367
    7. 'number' → logprob: -4.499753952026367
    8. 'end' → logprob: -4.874753952026367
    9. ' end' → logprob: -5.249753952026367
    10. ' number' → logprob: -5.374753952026367

Token 695: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.34237802028656
    2. '_' → logprob: -1.84237802028656
    3. ' number' → logprob: -1.84237802028656
    4. 'size' → logprob: -2.5923781394958496
    5. '_overlap' → logprob: -2.7173781394958496
    6. 'number' → logprob: -2.8423781394958496
    7. '_end' → logprob: -2.9673781394958496
    8. '_size' → logprob: -3.2173781394958496
    9. ' size' → logprob: -4.09237813949585
    10. 'end' → logprob: -4.21737813949585

Token 696: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1810965538024902
    2. 'of' → logprob: -1.3060965538024902
    3. ' of' → logprob: -1.9310965538024902
    4. '_' → logprob: -2.5560965538024902
    5. '   ' → logprob: -2.6810965538024902
    6. '[' → logprob: -3.6810965538024902
    7. '[
' → logprob: -3.8060965538024902
    8. '       ' → logprob: -4.43109655380249
    9. ')' → logprob: -4.55609655380249
    10. '(
' → logprob: -4.68109655380249

Token 697: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.4714852571487427
    2. 'interval' → logprob: -1.2214852571487427
    3. 'over' → logprob: -2.596485137939453
    4. ' overlapping' → logprob: -5.596485137939453
    5. 'inter' → logprob: -6.846485137939453
    6. '   ' → logprob: -7.471485137939453
    7. '(interval' → logprob: -8.096485137939453
    8. 'end' → logprob: -8.846485137939453
    9. 'mut' → logprob: -9.471485137939453
    10. '```' → logprob: -9.846485137939453

Token 698: ' overlapping' (ID: 90457)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.0443609952926636
    2. '   ' → logprob: -1.1693609952926636
    3. 'that' → logprob: -1.4193609952926636
    4. ' overlapping' → logprob: -3.294361114501953
    5. 'over' → logprob: -3.669361114501953
    6. '
' → logprob: -4.919361114501953
    7. '```' → logprob: -5.044361114501953
    8. ')' → logprob: -5.419361114501953
    9. '_that' → logprob: -5.919361114501953
    10. 'with' → logprob: -6.419361114501953

Token 699: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8041320443153381
    2. 'at' → logprob: -1.3041319847106934
    3. ' at' → logprob: -2.0541319847106934
    4. '_at' → logprob: -2.0541319847106934
    5. '_' → logprob: -5.429131984710693
    6. ')' → logprob: -5.554131984710693
    7. '```' → logprob: -5.679131984710693
    8. '[' → logprob: -5.679131984710693
    9. '
' → logprob: -6.679131984710693
    10. ' _' → logprob: -7.429131984710693

Token 700: ' some' (ID: 1236)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6489664912223816
    2. 'some' → logprob: -1.7739665508270264
    3. ' any' → logprob: -1.8989665508270264
    4. 'a' → logprob: -2.6489665508270264
    5. ' some' → logprob: -2.8989665508270264
    6. ' a' → logprob: -3.6489665508270264
    7. 'the' → logprob: -5.898966312408447
    8. ' the' → logprob: -6.023966312408447
    9. 'least' → logprob: -8.273966789245605
    10. 'once' → logprob: -8.648966789245605

Token 701: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.6699555516242981
    2. 'point' → logprob: -0.9199555516242981
    3. 'token' → logprob: -3.9199554920196533
    4. ' token' → logprob: -4.419955730438232
    5. '_' → logprob: -4.544955730438232
    6. '_point' → logprob: -4.544955730438232
    7. '   ' → logprob: -4.669955730438232
    8. ' _' → logprob: -5.544955730438232
    9. '
' → logprob: -5.669955730438232
    10. '_token' → logprob: -6.044955730438232

Token 702: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017745288088917732
    2. '
' → logprob: -5.392745494842529
    3. '    
' → logprob: -5.642745494842529
    4. ')' → logprob: -6.267745494842529
    5. ',' → logprob: -6.642745494842529
    6. ':' → logprob: -7.142745494842529
    7. '.' → logprob: -7.517745494842529
    8. 's' → logprob: -7.642745494842529
    9. 'def' → logprob: -7.767745494842529
    10. ')
' → logprob: -7.892745494842529

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027681592851877213
    2. ')' → logprob: -4.277681827545166
    3. ']' → logprob: -6.152681827545166
    4. '    
' → logprob: -6.152681827545166
    5. '.' → logprob: -6.402681827545166
    6. '#' → logprob: -6.652681827545166
    7. 'def' → logprob: -7.277681827545166
    8. ' and' → logprob: -7.277681827545166
    9. ')
' → logprob: -7.652681827545166
    10. ' but' → logprob: -7.777681827545166

Token 704: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09663555771112442
    2. '#' (adapté à ' #') → logprob: -2.596635580062866
    3. ' but' → logprob: -5.596635341644287
    4. ' and' → logprob: -5.846635341644287
    5. ' which' → logprob: -6.346635341644287
    6. '    
' → logprob: -6.721635341644287
    7. 'def' → logprob: -6.971635341644287
    8. 'import' → logprob: -7.096635341644287
    9. ' #' → logprob: -7.096635341644287
    10. '
' → logprob: -7.221635341644287

Token 705: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5931068658828735
    2. '#' → logprob: -0.8431068658828735
    3. ' #' → logprob: -5.593106746673584
    4. ' and' → logprob: -5.843106746673584
    5. ')' → logprob: -6.093106746673584
    6. 'import' → logprob: -6.718106746673584
    7. ' but' → logprob: -6.718106746673584
    8. 'and' → logprob: -7.093106746673584
    9. ' which' → logprob: -7.343106746673584
    10. 'def' → logprob: -7.468106746673584

Token 706: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.154235601425171
    2. ' =' → logprob: -1.404235601425171
    3. ' is' → logprob: -1.779235601425171
    4. ' continues' → logprob: -2.529235601425171
    5. ' +=' → logprob: -3.404235601425171
    6. '   ' → logprob: -3.779235601425171
    7. '=' → logprob: -3.779235601425171
    8. '#' → logprob: -4.02923583984375
    9. '_' → logprob: -4.77923583984375
    10. ' can' → logprob: -4.77923583984375

Token 707: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2258479595184326
    2. ' current' → logprob: -1.3508479595184326
    3. 'max' → logprob: -1.7258479595184326
    4. '   ' → logprob: -2.2258479595184326
    5. 'current' → logprob: -2.3508479595184326
    6. ' s' → logprob: -3.2258479595184326
    7. 's' → logprob: -4.600848197937012
    8. ' n' → logprob: -5.225848197937012
    9. 'n' → logprob: -6.100848197937012
    10. ' len' → logprob: -6.475848197937012

Token 708: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -1.4319168329238892
    2. 'max' → logprob: -1.4319168329238892
    3. ' max' → logprob: -1.5569168329238892
    4. ' maximum' → logprob: -2.1819167137145996
    5. 'maximum' → logprob: -2.5569167137145996
    6. 'same' → logprob: -2.9319167137145996
    7. ' current' → logprob: -4.1819167137146
    8. ' next' → logprob: -4.1819167137146
    9. '#' → logprob: -4.9319167137146
    10. 'minimum' → logprob: -5.0569167137146

Token 709: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5819268822669983
    2. ')' → logprob: -1.5819268226623535
    3. ':' → logprob: -2.7069268226623535
    4. 'def' → logprob: -3.4569268226623535
    5. '<|end|>' → logprob: -3.5819268226623535
    6. ']' → logprob: -3.9569268226623535
    7. 'import' → logprob: -4.2069268226623535
    8. '<|end|>' → logprob: -4.3319268226623535
    9. '#' → logprob: -5.0819268226623535
    10. 'for' → logprob: -5.2069268226623535

Token 710: ' s' (ID: 265)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21704988181591034
    2. 'current' → logprob: -2.3420498371124268
    3. 's' → logprob: -2.7170498371124268
    4. ' max' → logprob: -4.342050075531006
    5. 'the' → logprob: -4.967050075531006
    6. ' current' → logprob: -5.217050075531006
    7. 'len' → logprob: -5.467050075531006
    8. '   ' → logprob: -6.467050075531006
    9. ' s' → logprob: -7.217050075531006
    10. ' the' → logprob: -7.967050075531006

Token 711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2538195550441742
    2. '1' → logprob: -1.5038195848464966
    3. '_' → logprob: -6.378819465637207
    4. ' ' → logprob: -10.253819465637207
    5. 'ize' → logprob: -10.378819465637207
    6. '   ' → logprob: -10.378819465637207
    7. ')' → logprob: -11.191319465637207
    8. ']' → logprob: -11.816319465637207
    9. '₂' → logprob: -11.878819465637207
    10. '[' → logprob: -12.003819465637207

Token 712: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6782200932502747
    2. '
' → logprob: -1.3032200336456299
    3. ')' → logprob: -2.17822003364563
    4. '    
' → logprob: -2.67822003364563
    5. '<|end|>' → logprob: -4.928220272064209
    6. ')
' → logprob: -5.178220272064209
    7. ',' → logprob: -5.303220272064209
    8. ']' → logprob: -5.303220272064209
    9. 'def' → logprob: -5.803220272064209
    10. '#' → logprob: -6.303220272064209

Token 713: ' usual' (ID: 19261)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.34527865052223206
    2. ' this' → logprob: -1.3452786207199097
    3. 'the' → logprob: -3.970278739929199
    4. ' the' → logprob: -5.845278739929199
    5. ' code' → logprob: -5.970278739929199
    6. 'code' → logprob: -6.220278739929199
    7. 'interval' → logprob: -6.970278739929199
    8. 'general' → logprob: -7.345278739929199
    9. ' general' → logprob: -7.845278739929199
    10. 'terms' → logprob: -8.2202787399292

Token 714: ' interval' (ID: 17116)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5110037326812744
    2. '   ' → logprob: -2.0110037326812744
    3. '()' → logprob: -2.2610037326812744
    4. 'def' → logprob: -3.3860037326812744
    5. '_' → logprob: -4.011003494262695
    6. '()
' → logprob: -4.136003494262695
    7. ':' → logprob: -4.511003494262695
    8. ')
' → logprob: -4.636003494262695
    9. '(
' → logprob: -4.761003494262695
    10. '#' → logprob: -4.761003494262695

Token 715: ' graph' (ID: 7465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8370624780654907
    2. 's' → logprob: -1.0870624780654907
    3. '_graph' → logprob: -1.8370624780654907
    4. 'graph' → logprob: -3.712062358856201
    5. ')' → logprob: -4.712062358856201
    6. ' graph' → logprob: -5.337062358856201
    7. '_size' → logprob: -5.587062358856201
    8. '[' → logprob: -5.962062358856201
    9. ']' → logprob: -5.962062358856201
    10. '_
' → logprob: -6.087062358856201

Token 716: ' coloring' (ID: 50205)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.520836591720581
    2. ')' → logprob: -2.270836591720581
    3. 's' → logprob: -2.395836591720581
    4. ':' → logprob: -2.395836591720581
    5. 'q' → logprob: -2.645836591720581
    6. '[' → logprob: -3.020836591720581
    7. ' =' → logprob: -3.020836591720581
    8. ')
' → logprob: -3.270836591720581
    9. ':
' → logprob: -3.395836591720581
    10. '#' → logprob: -3.395836591720581

Token 717: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14726987481117249
    2. ')' → logprob: -3.3972699642181396
    3. '    
' → logprob: -3.6472699642181396
    4. '
' → logprob: -3.7722699642181396
    5. 'def' → logprob: -4.1472697257995605
    6. '<|end|>' → logprob: -4.6472697257995605
    7. '#' → logprob: -5.0222697257995605
    8. ']' → logprob: -5.6472697257995605
    9. ')
' → logprob: -6.2722697257995605
    10. ',' → logprob: -6.2722697257995605

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04838499054312706
    2. '    
' → logprob: -3.92338490486145
    3. '
' → logprob: -4.423385143280029
    4. 'import' → logprob: -4.798385143280029
    5. 'heap' → logprob: -5.298385143280029
    6. 'from' → logprob: -7.548385143280029
    7. ')' → logprob: -8.173384666442871
    8. '#' → logprob: -8.173384666442871
    9. 'end' → logprob: -8.548384666442871
    10. 'max' → logprob: -9.173384666442871

Token 719: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01789143681526184
    2. '
' → logprob: -5.1428914070129395
    3. '    
' → logprob: -5.5178914070129395
    4. ')' → logprob: -6.1428914070129395
    5. '<|end|>' → logprob: -6.1428914070129395
    6. 'heap' → logprob: -6.8928914070129395
    7. '#' → logprob: -7.2678914070129395
    8. 'def' → logprob: -7.3928914070129395
    9. 'import' → logprob: -8.142891883850098
    10. '```' → logprob: -8.517891883850098

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009937996976077557
    2. '    
' → logprob: -5.384937763214111
    3. 'heap' → logprob: -6.259937763214111
    4. 'import' → logprob: -6.384937763214111
    5. '#' → logprob: -7.259937763214111
    6. '
' → logprob: -7.759937763214111
    7. 's' → logprob: -9.50993824005127
    8. 'max' → logprob: -9.63493824005127
    9. '```' → logprob: -9.88493824005127
    10. 'def' → logprob: -9.88493824005127

Token 721: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0413370206952095
    2. '   ' → logprob: -3.541337013244629
    3. '#' (adapté à ' #') → logprob: -5.666337013244629
    4. 'ends' → logprob: -6.041337013244629
    5. ' intervals' → logprob: -6.166337013244629
    6. 'heap' → logprob: -6.791337013244629
    7. 'if' → logprob: -7.041337013244629
    8. 'starts' → logprob: -7.666337013244629
    9. 'import' → logprob: -8.166337013244629
    10. 'end' → logprob: -9.041337013244629

Token 722: ' The' (ID: 623)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.024782203137874603
    2. '#' → logprob: -4.149782180786133
    3. 'heap' → logprob: -6.149782180786133
    4. 'import' → logprob: -6.274782180786133
    5. '   ' → logprob: -6.524782180786133
    6. 'ends' → logprob: -6.649782180786133
    7. 'end' → logprob: -6.774782180786133
    8. ' intervals' → logprob: -8.774782180786133
    9. 'from' → logprob: -9.149782180786133
    10. 'max' → logprob: -9.274782180786133

Token 723: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4829771816730499
    2. 'interval' → logprob: -1.9829771518707275
    3. ' intervals' → logprob: -2.1079771518707275
    4. ' ends' → logprob: -3.4829771518707275
    5. 'import' → logprob: -3.9829771518707275
    6. '   ' → logprob: -3.9829771518707275
    7. ' #' → logprob: -4.482977390289307
    8. 'from' → logprob: -4.857977390289307
    9. 'heap' → logprob: -4.857977390289307
    10. '
' → logprob: -5.357977390289307

Token 724: ' says' (ID: 5003)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0254603624343872
    2. ':' → logprob: -1.7754603624343872
    3. '.sort' → logprob: -1.9004603624343872
    4. ' continues' → logprob: -2.7754602432250977
    5. '_' → logprob: -3.5254602432250977
    6. '#' → logprob: -3.5254602432250977
    7. '```' → logprob: -3.5254602432250977
    8. ' =' → logprob: -4.150460243225098
    9. '_sorted' → logprob: -4.150460243225098
    10. ')' → logprob: -4.150460243225098

Token 725: ' s' (ID: 265)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.0171679258346558
    2. ' intervals' → logprob: -1.1421679258346558
    3. '   ' → logprob: -2.1421680450439453
    4. '#' → logprob: -2.2671680450439453
    5. ' to' → logprob: -4.142168045043945
    6. 'heap' → logprob: -4.517168045043945
    7. ':' → logprob: -4.517168045043945
    8. ' that' → logprob: -4.517168045043945
    9. '
' → logprob: -5.142168045043945
    10. ' for' → logprob: -5.392168045043945

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023590294644236565
    2. '_' → logprob: -3.898590326309204
    3. '2' → logprob: -6.648590087890625
    4. '[' → logprob: -7.773590087890625
    5. '#' → logprob: -8.273590087890625
    6. ''' → logprob: -8.523590087890625
    7. ')' → logprob: -8.523590087890625
    8. '=' → logprob: -9.023590087890625
    9. ' =' → logprob: -9.273590087890625
    10. '['' → logprob: -10.148590087890625

Token 727: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25699785351753235
    2. '   ' → logprob: -2.75699782371521
    3. '_inter' → logprob: -3.00699782371521
    4. '.sort' → logprob: -3.63199782371521
    5. '_' → logprob: -3.88199782371521
    6. 's' → logprob: -4.131998062133789
    7. '_sorted' → logprob: -4.256998062133789
    8. '=' → logprob: -4.506998062133789
    9. ':' → logprob: -5.756998062133789
    10. ' is' → logprob: -6.381998062133789

Token 728: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2531278729438782
    2. 's' → logprob: -2.1281278133392334
    3. ' max' → logprob: -2.5031278133392334
    4. 'max' → logprob: -4.5031280517578125
    5. ' current' → logprob: -5.7531280517578125
    6. ' ' → logprob: -6.0031280517578125
    7. '0' → logprob: -6.7531280517578125
    8. '1' → logprob: -6.7531280517578125
    9. ' len' → logprob: -7.1281280517578125
    10. ' n' → logprob: -7.2531280517578125

Token 729: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13671693205833435
    2. '2' → logprob: -2.511716842651367
    3. '_' → logprob: -3.886716842651367
    4. ' =' → logprob: -3.886716842651367
    5. ']' → logprob: -6.511716842651367
    6. ')' → logprob: -6.761716842651367
    7. '=' → logprob: -7.011716842651367
    8. ',' → logprob: -8.011716842651367
    9. '[' → logprob: -8.511716842651367
    10. 'ize' → logprob: -8.886716842651367

Token 730: '.
' (ID: 558)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.02392987161874771
    2. '   ' → logprob: -4.148930072784424
    3. ' intervals' → logprob: -5.398930072784424
    4. '
' → logprob: -6.148930072784424
    5. '    
' → logprob: -7.648930072784424
    6. '#' → logprob: -8.523929595947266
    7. '```' → logprob: -8.898929595947266
    8. 'heap' → logprob: -9.023929595947266
    9. 'import' → logprob: -9.148929595947266
    10. 'def' → logprob: -10.398929595947266

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045046672224998474
    2. '
' → logprob: -3.92004656791687
    3. '    
' → logprob: -4.045046806335449
    4. 'interval' → logprob: -6.795046806335449
    5. '```' → logprob: -6.920046806335449
    6. '#' → logprob: -7.170046806335449
    7. 'heap' → logprob: -7.420046806335449
    8. 'sorted' → logprob: -7.420046806335449
    9. 'import' → logprob: -7.545046806335449
    10. ' intervals' → logprob: -7.795046806335449

Token 732: ' #
' (ID: 21888)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.48517748713493347
    2. '   ' → logprob: -0.9851775169372559
    3. ' intervals' → logprob: -4.985177516937256
    4. '    
' → logprob: -6.610177516937256
    5. '
' → logprob: -7.235177516937256
    6. 'heap' → logprob: -7.610177516937256
    7. 'starts' → logprob: -7.610177516937256
    8. 'import' → logprob: -8.360177040100098
    9. '#' → logprob: -8.610177040100098
    10. 'end' → logprob: -8.985177040100098

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16497832536697388
    2. 'interval' → logprob: -2.164978265762329
    3. ' intervals' → logprob: -3.914978265762329
    4. 'heap' → logprob: -4.664978504180908
    5. 'import' → logprob: -5.914978504180908
    6. '
' → logprob: -6.164978504180908
    7. ' heap' → logprob: -6.914978504180908
    8. '    
' → logprob: -7.414978504180908
    9. '```' → logprob: -8.28997802734375
    10. '#' → logprob: -8.41497802734375

Token 734: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.18707773089408875
    2. '   ' → logprob: -1.8120777606964111
    3. '#' (adapté à ' #') → logprob: -5.812077522277832
    4. ' intervals' → logprob: -6.437077522277832
    5. 'heap' → logprob: -7.062077522277832
    6. 'import' → logprob: -7.562077522277832
    7. 'sorted' → logprob: -7.812077522277832
    8. '    
' → logprob: -8.937077522277832
    9. 'active' → logprob: -9.062077522277832
    10. '
' → logprob: -9.062077522277832

Token 735: ' The' (ID: 623)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.008652745746076107
    2. '#' → logprob: -6.133652687072754
    3. 'heap' → logprob: -6.258652687072754
    4. ' intervals' → logprob: -6.508652687072754
    5. '   ' → logprob: -6.633652687072754
    6. 'import' → logprob: -6.883652687072754
    7. 'end' → logprob: -8.508652687072754
    8. 'ends' → logprob: -9.133652687072754
    9. 'sorted' → logprob: -9.133652687072754
    10. 'starts' → logprob: -10.133652687072754

Token 736: ' difference' (ID: 9809)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1373741626739502
    2. ' intervals' → logprob: -3.01237416267395
    3. '#' → logprob: -3.38737416267395
    4. 'import' → logprob: -3.63737416267395
    5. 'heap' → logprob: -4.387373924255371
    6. 'def' → logprob: -7.512373924255371
    7. '   ' → logprob: -7.637373924255371
    8. ' ends' → logprob: -7.637373924255371
    9. 'max' → logprob: -7.637373924255371
    10. 'end' → logprob: -7.637373924255371

Token 737: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08141482621431351
    2. '_' → logprob: -3.2064149379730225
    3. '=' → logprob: -4.456414699554443
    4. '   ' → logprob: -5.081414699554443
    5. 's' → logprob: -5.456414699554443
    6. ' is' → logprob: -5.581414699554443
    7. ' in' → logprob: -6.456414699554443
    8. ':' → logprob: -6.706414699554443
    9. ' ' → logprob: -6.706414699554443
    10. ' _' → logprob: -6.706414699554443

Token 738: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1518220454454422
    2. 'that' → logprob: -2.026822090148926
    3. ' in' → logprob: -5.276822090148926
    4. '   ' → logprob: -6.651822090148926
    5. ' the' → logprob: -6.901822090148926
    6. 'in' → logprob: -7.526822090148926
    7. '    
' → logprob: -8.151822090148926
    8. 'the' → logprob: -9.026822090148926
    9. '```' → logprob: -9.276822090148926
    10. ' we' → logprob: -9.276822090148926

Token 739: ' under' (ID: 1641)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.30949270725250244
    2. ' the' → logprob: -2.184492588043213
    3. ' s' → logprob: -3.059492588043213
    4. ' we' → logprob: -3.684492588043213
    5. '#' → logprob: -3.934492588043213
    6. 'interval' → logprob: -4.309492588043213
    7. 'the' → logprob: -4.934492588043213
    8. 's' → logprob: -5.059492588043213
    9. ' #' → logprob: -5.184492588043213
    10. 'import' → logprob: -5.434492588043213

Token 740: ' policy' (ID: 7562)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8874804973602295
    2. 'the' → logprob: -1.1374804973602295
    3. ' arbitrary' → logprob: -2.8874804973602295
    4. ' all' → logprob: -3.3874804973602295
    5. 'all' → logprob: -3.5124804973602295
    6. 'some' → logprob: -3.7624804973602295
    7. ' seats' → logprob: -3.8874804973602295
    8. ' some' → logprob: -4.387480735778809
    9. ' worst' → logprob: -4.637480735778809
    10. 'certain' → logprob: -4.637480735778809

Token 741: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4735439121723175
    2. ' -' → logprob: -1.5985438823699951
    3. '_' → logprob: -2.848543882369995
    4. '1' → logprob: -2.973543882369995
    5. ' =' → logprob: -4.098544120788574
    6. ' #' → logprob: -4.223544120788574
    7. '   ' → logprob: -4.348544120788574
    8. '#' → logprob: -4.973544120788574
    9. '2' → logprob: -5.598544120788574
    10. ' s' → logprob: -5.723544120788574

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03305767849087715
    2. ' ' → logprob: -3.908057689666748
    3. '-' → logprob: -4.658057689666748
    4. '2' → logprob: -6.908057689666748
    5. '#' → logprob: -7.283057689666748
    6. ' #' → logprob: -8.03305721282959
    7. ' -' → logprob: -8.28305721282959
    8. '_' → logprob: -8.65805721282959
    9. ' s' → logprob: -9.03305721282959
    10. ' the' → logprob: -9.15805721282959

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3454578220844269
    2. ':' → logprob: -1.5954577922821045
    3. '   ' → logprob: -2.4704577922821045
    4. ' ,' → logprob: -6.595458030700684
    5. ':
' → logprob: -7.345458030700684
    6. '    ' → logprob: -7.970458030700684
    7. '       ' → logprob: -8.095458030700684
    8. ' and' → logprob: -8.220458030700684
    9. '<|end|>' → logprob: -8.345458030700684
    10. ' for' → logprob: -8.345458030700684

Token 744: ' an' (ID: 448)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.54887855052948
    2. 'import' → logprob: -2.6738786697387695
    3. ' seats' → logprob: -2.9238786697387695
    4. '#' → logprob: -2.9238786697387695
    5. ' we' → logprob: -3.2988786697387695
    6. ' #' → logprob: -3.5488786697387695
    7. 'interval' → logprob: -3.5488786697387695
    8. ' the' → logprob: -3.5488786697387695
    9. '   ' → logprob: -3.6738786697387695
    10. ' heap' → logprob: -3.7988786697387695

Token 745: ' advers' (ID: 33091)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6476141810417175
    2. ' additional' → logprob: -2.3976142406463623
    3. ' =' → logprob: -3.2726142406463623
    4. '#' → logprob: -3.3976142406463623
    5. ' approach' → logprob: -3.3976142406463623
    6. 'other' → logprob: -3.6476142406463623
    7. '   ' → logprob: -3.7726142406463623
    8. ' intervals' → logprob: -3.8976142406463623
    9. 'additional' → logprob: -4.022614002227783
    10. ' #' → logprob: -4.147614002227783

Token 746: 'arial' (ID: 41417)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6541822552680969
    2. ' -' → logprob: -1.7791821956634521
    3. ')' → logprob: -2.404182195663452
    4. '   ' → logprob: -2.654182195663452
    5. '_' → logprob: -3.154182195663452
    6. ' ' → logprob: -3.529182195663452
    7. '=' → logprob: -4.779182434082031
    8. '#' → logprob: -4.904182434082031
    9. '+' → logprob: -5.154182434082031
    10. ',' → logprob: -5.154182434082031

Token 747: ' reservation' (ID: 34650)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.4240162670612335
    2. ' order' → logprob: -2.049016237258911
    3. ' ordering' → logprob: -2.549016237258911
    4. ' seat' → logprob: -3.549016237258911
    5. ' reservation' → logprob: -3.799016237258911
    6. ' seating' → logprob: -4.04901647567749
    7. ' scenario' → logprob: -4.04901647567749
    8. ' choice' → logprob: -4.92401647567749
    9. 'order' → logprob: -5.17401647567749
    10. ' booking' → logprob: -5.42401647567749

Token 748: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.21663671731948853
    2. 'order' → logprob: -2.0916366577148438
    3. '_' → logprob: -4.091636657714844
    4. '   ' → logprob: -4.591636657714844
    5. '_order' → logprob: -4.841636657714844
    6. ' system' → logprob: -4.966636657714844
    7. ' ' → logprob: -5.341636657714844
    8. ' orders' → logprob: -5.841636657714844
    9. 'orders' → logprob: -5.966636657714844
    10. '_choices' → logprob: -5.966636657714844

Token 749: ' can' (ID: 665)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24344569444656372
    2. '   ' → logprob: -2.118445634841919
    3. 'and' → logprob: -2.868445634841919
    4. ',' → logprob: -4.368445873260498
    5. '<|end|>' → logprob: -5.118445873260498
    6. ' is' → logprob: -5.493445873260498
    7. ' continues' → logprob: -5.493445873260498
    8. ' can' → logprob: -6.618445873260498
    9. ')' → logprob: -6.618445873260498
    10. ' might' → logprob: -6.993445873260498

Token 750: ' force' (ID: 9578)
  Prédit: ' cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cause' → logprob: -0.7025452256202698
    2. ' force' → logprob: -1.702545166015625
    3. 'cause' → logprob: -1.952545166015625
    4. 'force' → logprob: -2.327545166015625
    5. ' lead' → logprob: -3.077545166015625
    6. 'make' → logprob: -4.077545166015625
    7. ' create' → logprob: -5.327545166015625
    8. ' make' → logprob: -5.327545166015625
    9. 'lead' → logprob: -6.452545166015625
    10. 'create' → logprob: -6.577545166015625

Token 751: ' more' (ID: 945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1401088386774063
    2. ' the' → logprob: -3.015108823776245
    3. ' us' → logprob: -3.390108823776245
    4. 'the' → logprob: -3.515108823776245
    5. 'us' → logprob: -6.015109062194824
    6. ' seats' → logprob: -6.265109062194824
    7. ' a' → logprob: -6.265109062194824
    8. 'a' → logprob: -6.390109062194824
    9. ' them' → logprob: -6.640109062194824
    10. 's' → logprob: -6.640109062194824

Token 752: ' required' (ID: 3759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6763352155685425
    2. ' seats' → logprob: -0.9263352155685425
    3. 'se' → logprob: -4.426335334777832
    4. '    ' → logprob: -4.676335334777832
    5. ' intervals' → logprob: -4.801335334777832
    6. ' heap' → logprob: -5.176335334777832
    7. ' spaces' → logprob: -5.301335334777832
    8. '  ' → logprob: -5.551335334777832
    9. '_se' → logprob: -5.551335334777832
    10. 's' → logprob: -5.676335334777832

Token 753: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.11842303723096848
    2. '   ' → logprob: -2.4934229850769043
    3. 'se' → logprob: -4.743422985076904
    4. '_se' → logprob: -5.243422985076904
    5. ' spaces' → logprob: -5.493422985076904
    6. '_' → logprob: -6.243422985076904
    7. ' _' → logprob: -6.493422985076904
    8. ' space' → logprob: -6.618422985076904
    9. 'spaces' → logprob: -6.618422985076904
    10. '    ' → logprob: -7.118422985076904

Token 754: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01257510669529438
    2. '.' → logprob: -5.887575149536133
    3. '    
' → logprob: -6.012575149536133
    4. ',' → logprob: -6.262575149536133
    5. ':' → logprob: -6.637575149536133
    6. ' =' → logprob: -6.887575149536133
    7. '
' → logprob: -7.137575149536133
    8. 'import' → logprob: -7.387575149536133
    9. ')' → logprob: -8.137575149536133
    10. '```' → logprob: -8.637575149536133

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01058531180024147
    2. '    
' → logprob: -5.760585308074951
    3. 'import' → logprob: -5.885585308074951
    4. 'interval' → logprob: -6.510585308074951
    5. 'heap' → logprob: -6.760585308074951
    6. '
' → logprob: -7.135585308074951
    7. ' intervals' → logprob: -7.885585308074951
    8. ' heap' → logprob: -9.01058578491211
    9. '#' → logprob: -9.13558578491211
    10. 'end' → logprob: -9.51058578491211

Token 756: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024528883397579193
    2. 'interval' → logprob: -5.024528980255127
    3. '    
' → logprob: -5.524528980255127
    4. ' intervals' → logprob: -5.524528980255127
    5. 'import' → logprob: -5.649528980255127
    6. 'heap' → logprob: -6.149528980255127
    7. ' heap' → logprob: -7.149528980255127
    8. ' sorted' → logprob: -7.774528980255127
    9. '#' → logprob: -8.024528503417969
    10. '
' → logprob: -8.149528503417969

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008126335218548775
    2. 'interval' → logprob: -5.383126258850098
    3. ' intervals' → logprob: -6.383126258850098
    4. '    
' → logprob: -7.633126258850098
    5. 'import' → logprob: -7.633126258850098
    6. 'heap' → logprob: -8.383126258850098
    7. '#' → logprob: -8.633126258850098
    8. '```' → logprob: -9.633126258850098
    9. '
' → logprob: -9.758126258850098
    10. ' sorted' → logprob: -9.883126258850098

Token 758: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20167295634746552
    2. 'interval' → logprob: -1.826672911643982
    3. ' intervals' → logprob: -4.2016730308532715
    4. 'import' → logprob: -6.3266730308532715
    5. 'heap' → logprob: -6.3266730308532715
    6. '#' (adapté à ' #') → logprob: -6.3266730308532715
    7. '    
' → logprob: -8.076672554016113
    8. ' heap' → logprob: -8.701672554016113
    9. 'sorted' → logprob: -8.826672554016113
    10. '```' → logprob: -9.326672554016113

Token 759: ' From' (ID: 7217)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.05302099138498306
    2. '   ' → logprob: -3.42802095413208
    3. ' intervals' → logprob: -5.17802095413208
    4. 'heap' → logprob: -5.17802095413208
    5. '#' → logprob: -5.30302095413208
    6. 'import' → logprob: -6.55302095413208
    7. 'end' → logprob: -7.55302095413208
    8. 'ends' → logprob: -8.678021430969238
    9. 'sorted' → logprob: -8.803021430969238
    10. 'active' → logprob: -9.178021430969238

Token 760: ' known' (ID: 5542)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9463449716567993
    2. ' heap' → logprob: -1.5713449716567993
    3. ' here' → logprob: -2.3213448524475098
    4. 'collections' → logprob: -2.3213448524475098
    5. ' intervals' → logprob: -3.1963448524475098
    6. 'interval' → logprob: -3.1963448524475098
    7. 'import' → logprob: -3.3213448524475098
    8. ' collections' → logprob: -3.9463448524475098
    9. 'the' → logprob: -4.07134485244751
    10. 'here' → logprob: -4.32134485244751

Token 761: ' solutions' (ID: 9368)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.7921602129936218
    2. 'interval' → logprob: -1.5421602725982666
    3. 'import' → logprob: -2.1671602725982666
    4. '   ' → logprob: -2.5421602725982666
    5. ' heap' → logprob: -3.2921602725982666
    6. 'heap' → logprob: -4.0421600341796875
    7. '#' → logprob: -4.2921600341796875
    8. ' import' → logprob: -4.4171600341796875
    9. '       ' → logprob: -4.7921600341796875
    10. ' interval' → logprob: -5.2921600341796875

Token 762: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4546632468700409
    2. ',' → logprob: -1.9546632766723633
    3. ':' → logprob: -1.9546632766723633
    4. 'import' → logprob: -3.0796632766723633
    5. ':
' → logprob: -4.454663276672363
    6. '    
' → logprob: -5.829663276672363
    7. ',
' → logprob: -6.079663276672363
    8. ' =' → logprob: -6.454663276672363
    9. '
' → logprob: -6.454663276672363
    10. '```' → logprob: -6.704663276672363

Token 763: ' s' (ID: 265)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03636722266674042
    2. '   ' → logprob: -3.786367177963257
    3. ' intervals' → logprob: -5.161367416381836
    4. 'import' → logprob: -6.161367416381836
    5. 'heap' → logprob: -6.286367416381836
    6. '#' → logprob: -6.661367416381836
    7. 'end' → logprob: -6.911367416381836
    8. '```' → logprob: -8.536367416381836
    9. 'ends' → logprob: -8.661367416381836
    10. '
' → logprob: -8.786367416381836

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07019640505313873
    2. '2' → logprob: -3.5701963901519775
    3. ' =' → logprob: -4.195196628570557
    4. '_' → logprob: -4.445196628570557
    5. 'e' → logprob: -5.570196628570557
    6. 't' → logprob: -6.195196628570557
    7. '=' → logprob: -6.695196628570557
    8. 'et' → logprob: -7.070196628570557
    9. 'ize' → logprob: -7.195196628570557
    10. '   ' → logprob: -7.570196628570557

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10709679871797562
    2. '=' → logprob: -2.4820969104766846
    3. '   ' → logprob: -5.1070966720581055
    4. 'import' → logprob: -5.8570966720581055
    5. ',' → logprob: -5.9820966720581055
    6. ' +=' → logprob: -6.3570966720581055
    7. '_inter' → logprob: -6.4820966720581055
    8. '```' → logprob: -7.7320966720581055
    9. ')' → logprob: -7.9820966720581055
    10. 's' → logprob: -8.232096672058105

Token 766: ' maximum' (ID: 10562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3572358191013336
    2. 'n' → logprob: -1.8572357892990112
    3. 'max' → logprob: -2.607235908508301
    4. 'len' → logprob: -2.857235908508301
    5. '1' → logprob: -4.732235908508301
    6. 's' → logprob: -6.357235908508301
    7. 'interval' → logprob: -6.607235908508301
    8. 'heap' → logprob: -7.857235908508301
    9. ' ' → logprob: -8.3572359085083
    10. 'min' → logprob: -8.8572359085083

Token 767: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5735524892807007
    2. '_overlap' → logprob: -1.6985524892807007
    3. '_end' → logprob: -2.1985526084899902
    4. '(' → logprob: -2.5735526084899902
    5. 'heap' → logprob: -2.5735526084899902
    6. 'end' → logprob: -2.9485526084899902
    7. 'current' → logprob: -3.0735526084899902
    8. '_heap' → logprob: -3.3235526084899902
    9. '-' → logprob: -3.6985526084899902
    10. ',' → logprob: -3.8235526084899902

Token 768: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2470229864120483
    2. ' of' → logprob: -1.3720229864120483
    3. '_of' → logprob: -1.4970229864120483
    4. '   ' → logprob: -2.622023105621338
    5. '_' → logprob: -3.372023105621338
    6. '_heap' → logprob: -3.497023105621338
    7. 'heap' → logprob: -4.497023105621338
    8. '(heap' → logprob: -4.497023105621338
    9. ')' → logprob: -4.747023105621338
    10. '       ' → logprob: -5.122023105621338

Token 769: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.341762661933899
    2. 'over' → logprob: -1.841762661933899
    3. 'heap' → logprob: -2.0917625427246094
    4. ' intervals' → logprob: -2.2167625427246094
    5. 'end' → logprob: -2.4667625427246094
    6. 'current' → logprob: -2.8417625427246094
    7. 'active' → logprob: -3.2167625427246094
    8. 'sim' → logprob: -3.8417625427246094
    9. 'con' → logprob: -3.9667625427246094
    10. ' simultaneous' → logprob: -4.091762542724609

Token 770: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.8408445715904236
    2. '   ' → logprob: -1.3408446311950684
    3. ' =' → logprob: -2.3408446311950684
    4. 'over' → logprob: -2.3408446311950684
    5. ' that' → logprob: -3.7158446311950684
    6. '=' → logprob: -3.8408446311950684
    7. '
' → logprob: -4.590844631195068
    8. ')' → logprob: -4.590844631195068
    9. ' overlapping' → logprob: -4.840844631195068
    10. 'with' → logprob: -5.715844631195068

Token 771: ' intersect' (ID: 64353)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.629756510257721
    2. ' overlap' → logprob: -1.0047564506530762
    3. 'are' → logprob: -3.879756450653076
    4. 'pair' → logprob: -4.254756450653076
    5. ' pair' → logprob: -4.379756450653076
    6. ' are' → logprob: -4.629756450653076
    7. 'part' → logprob: -4.754756450653076
    8. 'have' → logprob: -4.754756450653076
    9. ' have' → logprob: -5.004756450653076
    10. 'inter' → logprob: -5.504756450653076

Token 772: ' pair' (ID: 10610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5959609746932983
    2. ' =' → logprob: -1.4709609746932983
    3. '
' → logprob: -3.095961093902588
    4. ')
' → logprob: -3.970961093902588
    5. 's' → logprob: -4.345961093902588
    6. '_' → logprob: -4.345961093902588
    7. '_
' → logprob: -4.345961093902588
    8. '    
' → logprob: -4.845961093902588
    9. ' =
' → logprob: -4.970961093902588
    10. '```' → logprob: -4.970961093902588

Token 773: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.20988188683986664
    2. '   ' → logprob: -2.7098817825317383
    3. 'w' → logprob: -3.2098817825317383
    4. '           ' → logprob: -3.3348817825317383
    5. '       ' → logprob: -4.084881782531738
    6. '_w' → logprob: -5.209881782531738
    7. 's' → logprob: -5.459881782531738
    8. '               ' → logprob: -6.334881782531738
    9. 'wis' → logprob: -6.334881782531738
    10. '.' → logprob: -6.459881782531738

Token 774: ' (' (ID: 350)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7870756983757019
    2. '   ' → logprob: -0.9120756983757019
    3. '
' → logprob: -3.1620757579803467
    4. ' intervals' → logprob: -3.4120757579803467
    5. '    
' → logprob: -3.6620757579803467
    6. '(interval' → logprob: -4.662075519561768
    7. ' =' → logprob: -4.912075519561768
    8. 'import' → logprob: -5.287075519561768
    9. ']' → logprob: -6.287075519561768
    10. ')
' → logprob: -6.412075519561768

Token 775: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7883931994438171
    2. ')
' → logprob: -1.288393259048462
    3. ' or' → logprob: -2.288393259048462
    4. '   ' → logprob: -2.788393259048462
    5. ' intervals' → logprob: -4.413393020629883
    6. ' at' → logprob: -4.538393020629883
    7. '#' → logprob: -4.788393020629883
    8. 'or' → logprob: -5.163393020629883
    9. 'interval' → logprob: -5.163393020629883
    10. '
' → logprob: -5.163393020629883

Token 776: ' clique' (ID: 60301)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.7391179203987122
    2. '_' → logprob: -1.2391178607940674
    3. '_heap' → logprob: -2.6141178607940674
    4. '   ' → logprob: -2.7391178607940674
    5. 'heap' → logprob: -4.1141180992126465
    6. ')' → logprob: -4.4891180992126465
    7. '_inter' → logprob: -4.9891180992126465
    8. '(' → logprob: -4.9891180992126465
    9. '_end' → logprob: -5.2391180992126465
    10. 'over' → logprob: -5.4891180992126465

Token 777: ' size' (ID: 2349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37897375226020813
    2. '_size' → logprob: -1.3789737224578857
    3. 'size' → logprob: -3.7539737224578857
    4. '_' → logprob: -4.878973960876465
    5. 's' → logprob: -4.878973960876465
    6. ' )' → logprob: -5.128973960876465
    7. '   ' → logprob: -5.128973960876465
    8. ' size' → logprob: -5.628973960876465
    9. ')_' → logprob: -6.253973960876465
    10. '[' → logprob: -6.503973960876465

Token 778: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18628814816474915
    2. '   ' → logprob: -2.0612881183624268
    3. ')
' → logprob: -4.186288356781006
    4. ' or' → logprob: -5.436288356781006
    5. ',' → logprob: -5.686288356781006
    6. ' )' → logprob: -5.686288356781006
    7. '#' → logprob: -6.186288356781006
    8. ' =' → logprob: -6.311288356781006
    9. 'import' → logprob: -6.686288356781006
    10. ' and' → logprob: -6.811288356781006

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09768698364496231
    2. ')' → logprob: -3.597687005996704
    3. '#' → logprob: -3.722687005996704
    4. '...' → logprob: -5.222686767578125
    5. ''' → logprob: -5.972686767578125
    6. '       ' → logprob: -6.222686767578125
    7. ' and' → logprob: -6.222686767578125
    8. '    ' → logprob: -6.347686767578125
    9. ' #' → logprob: -6.347686767578125
    10. '    
' → logprob: -6.347686767578125

Token 780: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015499046072363853
    2. '#' (adapté à ' #') → logprob: -5.390499114990234
    3. ')' → logprob: -6.140499114990234
    4. 'import' → logprob: -7.015499114990234
    5. ' and' → logprob: -7.015499114990234
    6. '
' → logprob: -7.265499114990234
    7. 's' → logprob: -7.515499114990234
    8. ']' → logprob: -7.515499114990234
    9. '    
' → logprob: -7.515499114990234
    10. 'max' → logprob: -7.640499114990234

Token 781: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06131390854716301
    2. '#' → logprob: -4.686314105987549
    3. 'max' → logprob: -4.811314105987549
    4. ' which' → logprob: -4.936314105987549
    5. '       ' → logprob: -5.186314105987549
    6. ')' → logprob: -5.311314105987549
    7. ' and' → logprob: -5.936314105987549
    8. ' but' → logprob: -6.061314105987549
    9. ' max' → logprob: -6.061314105987549
    10. ' not' → logprob: -6.186314105987549

Token 782: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6411307454109192
    2. '1' → logprob: -0.7661307454109192
    3. '_' → logprob: -4.8911309242248535
    4. ' =' → logprob: -7.6411309242248535
    5. ')' → logprob: -8.641130447387695
    6. '```' → logprob: -9.266130447387695
    7. '=' → logprob: -10.141130447387695
    8. 'ize' → logprob: -10.391130447387695
    9. '   ' → logprob: -10.891130447387695
    10. ',' → logprob: -11.391130447387695

Token 783: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038865357637405396
    2. '=' → logprob: -3.288865327835083
    3. ',' → logprob: -8.163865089416504
    4. '   ' → logprob: -8.663865089416504
    5. ')' → logprob: -9.038865089416504
    6. ' +=' → logprob: -9.663865089416504
    7. 'import' → logprob: -10.038865089416504
    8. ' ' → logprob: -10.663865089416504
    9. ' =
' → logprob: -10.788865089416504
    10. 's' → logprob: -11.413865089416504

Token 784: ' chrom' (ID: 33474)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7027273178100586
    2. ' max' → logprob: -1.2027273178100586
    3. 's' → logprob: -3.2027273178100586
    4. 'min' → logprob: -3.2027273178100586
    5. ' s' → logprob: -3.4527273178100586
    6. 'len' → logprob: -3.4527273178100586
    7. ' len' → logprob: -3.8277273178100586
    8. ' min' → logprob: -3.8277273178100586
    9. ' n' → logprob: -5.202727317810059
    10. 'n' → logprob: -5.452727317810059

Token 785: 'atic' (ID: 2351)
  Prédit: 'atic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atic' → logprob: -0.023526247590780258
    2. '   ' → logprob: -4.273526191711426
    3. 'romatic' → logprob: -5.023526191711426
    4. '#' → logprob: -6.773526191711426
    5. '_size' → logprob: -7.523526191711426
    6. '  ' → logprob: -7.773526191711426
    7. 'matic' → logprob: -8.523526191711426
    8. '}' → logprob: -10.023526191711426
    9. '1' → logprob: -10.148526191711426
    10. 'omatic' → logprob: -10.273526191711426

Token 786: ' number' (ID: 2086)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.2352709025144577
    2. ' number' → logprob: -1.8602708578109741
    3. ' _' → logprob: -3.7352709770202637
    4. 'number' → logprob: -4.360270977020264
    5. ')' → logprob: -5.110270977020264
    6. '   ' → logprob: -5.610270977020264
    7. '_size' → logprob: -6.110270977020264
    8. '_' → logprob: -6.735270977020264
    9. ' ' → logprob: -6.985270977020264
    10. 'import' → logprob: -7.235270977020264

Token 787: ' =' (ID: 314)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07641815394163132
    2. '   ' → logprob: -3.451418161392212
    3. ' intervals' → logprob: -4.576417922973633
    4. 'import' → logprob: -4.701417922973633
    5. 'heap' → logprob: -4.701417922973633
    6. '#' → logprob: -5.951417922973633
    7. '    
' → logprob: -6.451417922973633
    8. '
' → logprob: -6.451417922973633
    9. ' =' → logprob: -6.826417922973633
    10. ']' → logprob: -7.076417922973633

Token 788: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16435417532920837
    2. 'max' → logprob: -1.9143542051315308
    3. ' current' → logprob: -6.03935432434082
    4. ' s' → logprob: -7.28935432434082
    5. ' maximum' → logprob: -7.66435432434082
    6. 'current' → logprob: -8.78935432434082
    7. 's' → logprob: -8.78935432434082
    8. ' min' → logprob: -9.28935432434082
    9. ' len' → logprob: -9.53935432434082
    10. 'maximum' → logprob: -10.03935432434082

Token 789: ' number' (ID: 2086)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.2532567083835602
    2. ' number' → logprob: -1.7532566785812378
    3. 'number' → logprob: -3.3782567977905273
    4. 'over' → logprob: -6.128256797790527
    5. ' overlap' → logprob: -6.253256797790527
    6. 'current' → logprob: -6.628256797790527
    7. '_interval' → logprob: -6.628256797790527
    8. '(' → logprob: -6.878256797790527
    9. '_number' → logprob: -7.128256797790527
    10. '   ' → logprob: -7.128256797790527

Token 790: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.6271566152572632
    2. ' of' → logprob: -1.6271566152572632
    3. ')' → logprob: -2.5021567344665527
    4. '   ' → logprob: -2.8771567344665527
    5. '_of' → logprob: -2.8771567344665527
    6. '_' → logprob: -4.002156734466553
    7. '#' → logprob: -4.752156734466553
    8. '[' → logprob: -5.127156734466553
    9. '_tokens' → logprob: -5.127156734466553
    10. '_heap' → logprob: -5.377156734466553

Token 791: ' intervals' (ID: 49900)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.649465799331665
    2. ' overlapping' → logprob: -0.774465799331665
    3. ' intervals' → logprob: -4.649465560913086
    4. 'interval' → logprob: -6.274465560913086
    5. ' simultaneous' → logprob: -6.649465560913086
    6. ' overlaps' → logprob: -7.149465560913086
    7. 'current' → logprob: -7.524465560913086
    8. ' current' → logprob: -7.524465560913086
    9. ' over' → logprob: -7.899465560913086
    10. ' overlap' → logprob: -8.274465560913086

Token 792: ' overlapping' (ID: 90457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.861629068851471
    2. '
' → logprob: -1.9866290092468262
    3. 'import' → logprob: -2.111629009246826
    4. ' =' → logprob: -2.611629009246826
    5. ']' → logprob: -2.736629009246826
    6. ')' → logprob: -3.236629009246826
    7. 'sorted' → logprob: -3.986629009246826
    8. '    
' → logprob: -4.486629009246826
    9. ',' → logprob: -4.611629009246826
    10. '=' → logprob: -4.986629009246826

Token 793: ' any' (ID: 1062)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2709309756755829
    2. '   ' → logprob: -2.1459310054779053
    3. ' intervals' → logprob: -2.7709310054779053
    4. '    
' → logprob: -4.270930767059326
    5. '
' → logprob: -4.395930767059326
    6. ' =' → logprob: -4.395930767059326
    7. '(interval' → logprob: -5.270930767059326
    8. 'import' → logprob: -6.145930767059326
    9. ',' → logprob: -6.520930767059326
    10. 'sorted' → logprob: -6.520930767059326

Token 794: ' station' (ID: 11538)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' point' → logprob: -1.3210351467132568
    2. 'point' → logprob: -1.6960351467132568
    3. 'time' → logprob: -1.8210351467132568
    4. '   ' → logprob: -2.196035146713257
    5. ' time' → logprob: -2.321035146713257
    6. '_time' → logprob: -2.571035146713257
    7. '_point' → logprob: -3.571035146713257
    8. ' at' → logprob: -4.071035385131836
    9. '_' → logprob: -4.821035385131836
    10. ' ' → logprob: -5.071035385131836

Token 795: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21838538348674774
    2. 'interval' → logprob: -2.2183854579925537
    3. '    
' → logprob: -3.0933854579925537
    4. '
' → logprob: -4.468385219573975
    5. 'heap' → logprob: -4.968385219573975
    6. ' intervals' → logprob: -5.218385219573975
    7. 'import' → logprob: -5.468385219573975
    8. ')' → logprob: -5.843385219573975
    9. ']' → logprob: -6.593385219573975
    10. '#' → logprob: -6.718385219573975

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0643879696726799
    2. 'import' → logprob: -4.189387798309326
    3. ']' → logprob: -4.564387798309326
    4. 'heap' → logprob: -4.564387798309326
    5. ')' → logprob: -4.814387798309326
    6. '    
' → logprob: -5.439387798309326
    7. '
' → logprob: -6.314387798309326
    8. 'def' → logprob: -6.439387798309326
    9. ' heap' → logprob: -6.564387798309326
    10. '    ' → logprob: -6.939387798309326

Token 797: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13902278244495392
    2. '#' → logprob: -2.5140228271484375
    3. ')' → logprob: -3.5140228271484375
    4. '    
' → logprob: -5.0140228271484375
    5. '
' → logprob: -5.3890228271484375
    6. ']' → logprob: -6.3890228271484375
    7. 'import' → logprob: -6.3890228271484375
    8. ')
' → logprob: -7.1390228271484375
    9. 'def' → logprob: -7.3890228271484375
    10. ' and' → logprob: -7.5140228271484375

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13718388974666595
    2. '
' → logprob: -2.262183904647827
    3. '    
' → logprob: -3.887183904647827
    4. 'import' → logprob: -6.262183666229248
    5. '#' → logprob: -7.012183666229248
    6. 'def' → logprob: -8.137184143066406
    7. 'heap' → logprob: -8.512184143066406
    8. '```' → logprob: -10.637184143066406
    9. 'from' → logprob: -10.887184143066406
    10. '        
' → logprob: -10.887184143066406

Token 799: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0815960094332695
    2. '   ' → logprob: -3.2065958976745605
    3. 'heap' → logprob: -4.3315958976745605
    4. 'ends' → logprob: -4.5815958976745605
    5. '#' (adapté à ' #') → logprob: -5.4565958976745605
    6. 'import' → logprob: -5.8315958976745605
    7. 'end' → logprob: -6.0815958976745605
    8. ' intervals' → logprob: -6.2065958976745605
    9. 'starts' → logprob: -6.4565958976745605
    10. ' ends' → logprob: -7.5815958976745605

Token 800: ' But' (ID: 3072)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.05256279185414314
    2. 'heap' → logprob: -3.802562713623047
    3. 'import' → logprob: -4.677562713623047
    4. 'ends' → logprob: -4.802562713623047
    5. '#' → logprob: -5.677562713623047
    6. '   ' → logprob: -5.927562713623047
    7. 'starts' → logprob: -6.302562713623047
    8. 'end' → logprob: -6.427562713623047
    9. 'active' → logprob: -7.427562713623047
    10. ' intervals' → logprob: -8.552562713623047

Token 801: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1067814826965332
    2. 'interval' → logprob: -1.2317814826965332
    3. 'heap' → logprob: -1.7317814826965332
    4. '
' → logprob: -2.856781482696533
    5. '   ' → logprob: -2.981781482696533
    6. 'import' → logprob: -3.106781482696533
    7. ' intervals' → logprob: -4.106781482696533
    8. 'def' → logprob: -5.356781482696533
    9. 's' → logprob: -5.606781482696533
    10. 'max' → logprob: -5.606781482696533

Token 802: ' problem' (ID: 4792)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5710675716400146
    2. '#' → logprob: -1.3210675716400146
    3. 'heap' → logprob: -2.6960675716400146
    4. 'import' → logprob: -3.1960675716400146
    5. ' intervals' → logprob: -3.8210675716400146
    6. 'max' → logprob: -4.946067810058594
    7. '
' → logprob: -5.321067810058594
    8. '   ' → logprob: -5.321067810058594
    9. 'def' → logprob: -5.571067810058594
    10. 'starts' → logprob: -5.821067810058594

Token 803: ' states' (ID: 9407)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -1.5027309656143188
    2. ' =' → logprob: -1.7527309656143188
    3. '   ' → logprob: -2.6277308464050293
    4. ')' → logprob: -2.7527308464050293
    5. '_' → logprob: -2.7527308464050293
    6. '
' → logprob: -3.1277308464050293
    7. ':' → logprob: -3.1277308464050293
    8. 'def' → logprob: -3.1277308464050293
    9. '=' → logprob: -3.2527308464050293
    10. ' is' → logprob: -3.3777308464050293

Token 804: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49120086431503296
    2. ' intervals' → logprob: -2.3662009239196777
    3. 'interval' → logprob: -2.4912009239196777
    4. '#' → logprob: -2.6162009239196777
    5. ':' → logprob: -2.9912009239196777
    6. 'def' → logprob: -3.9912009239196777
    7. ' to' → logprob: -4.491200923919678
    8. '
' → logprob: -4.616200923919678
    9. ':
' → logprob: -4.741200923919678
    10. ' that' → logprob: -4.866200923919678

Token 805: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31710219383239746
    2. '1' → logprob: -2.1921021938323975
    3. ' =' → logprob: -3.1921021938323975
    4. '2' → logprob: -3.6921021938323975
    5. '_' → logprob: -3.9421021938323975
    6. ')' → logprob: -3.9421021938323975
    7. '#' → logprob: -4.442102432250977
    8. ''' → logprob: -4.567102432250977
    9. '   ' → logprob: -5.442102432250977
    10. ':' → logprob: -5.817102432250977

Token 806: ' considers' (ID: 57259)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23472343385219574
    2. '   ' → logprob: -2.3597233295440674
    3. '=' → logprob: -3.2347233295440674
    4. ' +=' → logprob: -3.7347233295440674
    5. 'def' → logprob: -5.3597235679626465
    6. 'import' → logprob: -5.4847235679626465
    7. 'interval' → logprob: -5.4847235679626465
    8. '#' → logprob: -5.6097235679626465
    9. '
' → logprob: -5.6097235679626465
    10. '_inter' → logprob: -5.7347235679626465

Token 807: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7196990251541138
    2. ' intervals' → logprob: -1.4696990251541138
    3. '   ' → logprob: -1.8446990251541138
    4. 'the' → logprob: -3.219698905944824
    5. 'interval' → logprob: -4.469698905944824
    6. ' seats' → logprob: -4.844698905944824
    7. 'len' → logprob: -5.844698905944824
    8. 'possible' → logprob: -5.844698905944824
    9. 'max' → logprob: -5.969698905944824
    10. ' possible' → logprob: -5.969698905944824

Token 808: ' reservation' (ID: 34650)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.4068901836872101
    2. 'interval' → logprob: -1.5318901538848877
    3. '   ' → logprob: -2.2818901538848877
    4. '(interval' → logprob: -6.281890392303467
    5. ' =' → logprob: -6.656890392303467
    6. ' possible' → logprob: -6.781890392303467
    7. 'possible' → logprob: -6.781890392303467
    8. '_inter' → logprob: -7.156890392303467
    9. '       ' → logprob: -7.156890392303467
    10. '
' → logprob: -7.281890392303467

Token 809: ' orders' (ID: 12528)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.732433557510376
    2. '   ' → logprob: -1.232433557510376
    3. 'orders' → logprob: -2.607433557510376
    4. '_orders' → logprob: -3.607433557510376
    5. '_order' → logprob: -4.107433319091797
    6. ' intervals' → logprob: -4.357433319091797
    7. ' orders' → logprob: -4.607433319091797
    8. 'interval' → logprob: -4.732433319091797
    9. '_choices' → logprob: -4.857433319091797
    10. '_inter' → logprob: -4.982433319091797

Token 810: ',' (ID: 11)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2175779491662979
    2. '   ' → logprob: -1.9675779342651367
    3. ' intervals' → logprob: -3.8425779342651367
    4. 'heap' → logprob: -4.467577934265137
    5. '#' → logprob: -5.717577934265137
    6. '    
' → logprob: -5.967577934265137
    7. 'import' → logprob: -6.342577934265137
    8. '```' → logprob: -6.342577934265137
    9. ' =' → logprob: -6.467577934265137
    10. ')
' → logprob: -6.592577934265137

Token 811: ' passengers' (ID: 37252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0804612934589386
    2. ')' → logprob: -4.205461502075195
    3. ' and' → logprob: -4.205461502075195
    4. 'heap' → logprob: -4.705461502075195
    5. 'interval' → logprob: -5.830461502075195
    6. 'max' → logprob: -5.830461502075195
    7. ' intervals' → logprob: -6.080461502075195
    8. '    ' → logprob: -6.205461502075195
    9. ' s' → logprob: -6.205461502075195
    10. ',' → logprob: -6.205461502075195

Token 812: ' pick' (ID: 5230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.223854660987854
    2. ' can' → logprob: -2.8488545417785645
    3. ' =' → logprob: -3.2238545417785645
    4. 'can' → logprob: -4.3488545417785645
    5. ',' → logprob: -4.7238545417785645
    6. ')' → logprob: -4.9738545417785645
    7. 'choose' → logprob: -4.9738545417785645
    8. ' are' → logprob: -5.2238545417785645
    9. ' choose' → logprob: -5.2238545417785645
    10. '_choices' → logprob: -5.5988545417785645

Token 813: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.6114272475242615
    2. ' arbitrary' → logprob: -0.9864272475242615
    3. 'se' → logprob: -3.6114273071289062
    4. '   ' → logprob: -3.7364273071289062
    5. 'ar' → logprob: -4.736427307128906
    6. ' arbitr' → logprob: -4.861427307128906
    7. ' up' → logprob: -5.861427307128906
    8. ' their' → logprob: -6.361427307128906
    9. ' intervals' → logprob: -6.361427307128906
    10. '_' → logprob: -6.361427307128906

Token 814: ' arbitr' (ID: 31157)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.15529170632362366
    2. '   ' → logprob: -2.280291795730591
    3. 'heap' → logprob: -5.030291557312012
    4. ' intervals' → logprob: -5.030291557312012
    5. '    
' → logprob: -5.155291557312012
    6. '```' → logprob: -5.530291557312012
    7. ' =' → logprob: -5.780291557312012
    8. '#' → logprob: -6.405291557312012
    9. ']' → logprob: -6.405291557312012
    10. 'import' → logprob: -6.530291557312012

Token 815: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.0015035520773380995
    2. 'ary' → logprob: -6.8765034675598145
    3. '```' → logprob: -8.626503944396973
    4. 'arly' → logprob: -9.001503944396973
    5. 'itr' → logprob: -10.251503944396973
    6. 'r' → logprob: -10.251503944396973
    7. '#' → logprob: -10.876503944396973
    8. '   ' → logprob: -11.126503944396973
    9. '...' → logprob: -11.376503944396973
    10. '[' → logprob: -12.251503944396973

Token 816: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14684714376926422
    2. ',' → logprob: -2.7718472480773926
    3. ' and' → logprob: -3.6468472480773926
    4. '.' → logprob: -4.646847248077393
    5. ')' → logprob: -4.771847248077393
    6. '    
' → logprob: -4.896847248077393
    7. 'import' → logprob: -5.396847248077393
    8. ']' → logprob: -5.521847248077393
    9. '
' → logprob: -5.646847248077393
    10. ',
' → logprob: -6.646847248077393

Token 817: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02822306379675865
    2. ' and' → logprob: -4.528223037719727
    3. '#' → logprob: -5.153223037719727
    4. ')' → logprob: -5.778223037719727
    5. '       ' → logprob: -5.903223037719727
    6. '    
' → logprob: -6.778223037719727
    7. 'and' → logprob: -6.903223037719727
    8. '
' → logprob: -7.528223037719727
    9. ' which' → logprob: -7.903223037719727
    10. ',' → logprob: -8.153223037719727

Token 818: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09009004384279251
    2. '#' (adapté à ' #') → logprob: -2.840090036392212
    3. ' and' → logprob: -4.090090274810791
    4. '    
' → logprob: -6.215090274810791
    5. '       ' → logprob: -6.715090274810791
    6. ')' → logprob: -6.715090274810791
    7. 'and' → logprob: -7.090090274810791
    8. '    ' → logprob: -7.590090274810791
    9. ' which' → logprob: -7.590090274810791
    10. 'import' → logprob: -7.590090274810791

Token 819: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38574355840682983
    2. 'heap' → logprob: -1.8857436180114746
    3. '#' → logprob: -3.1357436180114746
    4. 'interval' → logprob: -3.5107436180114746
    5. 'current' → logprob: -3.8857436180114746
    6. 'import' → logprob: -4.010743618011475
    7. 'max' → logprob: -4.010743618011475
    8. ' heap' → logprob: -5.135743618011475
    9. ')' → logprob: -5.260743618011475
    10. ' current' → logprob: -6.135743618011475

Token 820: ' s' (ID: 265)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.49976032972335815
    2. '#' → logprob: -1.999760389328003
    3. '
' → logprob: -2.624760389328003
    4. '   ' → logprob: -2.874760389328003
    5. 'import' → logprob: -3.374760389328003
    6. 'max' → logprob: -3.499760389328003
    7. 'interval' → logprob: -3.749760389328003
    8. ' heap' → logprob: -4.749760150909424
    9. 'se' → logprob: -4.874760150909424
    10. 'return' → logprob: -5.499760150909424

Token 821: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2920558452606201
    2. '#' → logprob: -2.04205584526062
    3. '_' → logprob: -3.29205584526062
    4. '   ' → logprob: -3.54205584526062
    5. 'ys' → logprob: -3.91705584526062
    6. '2' → logprob: -3.91705584526062
    7. 'def' → logprob: -5.792056083679199
    8. 'ystem' → logprob: -6.042056083679199
    9. '       ' → logprob: -6.542056083679199
    10. '```' → logprob: -6.542056083679199

Token 822: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.458046019077301
    2. ' +=' → logprob: -1.4580459594726562
    3. '=' → logprob: -2.2080459594726562
    4. '+=' → logprob: -4.708045959472656
    5. ')' → logprob: -5.458045959472656
    6. '   ' → logprob: -5.708045959472656
    7. '
' → logprob: -6.333045959472656
    8. ' =
' → logprob: -7.583045959472656
    9. ' is' → logprob: -7.583045959472656
    10. ' ==' → logprob: -7.833045959472656

Token 823: ' assignment' (ID: 24618)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9452973008155823
    2. 'max' → logprob: -1.4452972412109375
    3. ' current' → logprob: -1.6952972412109375
    4. ' s' → logprob: -3.0702972412109375
    5. '   ' → logprob: -3.3202972412109375
    6. ' len' → logprob: -3.4452972412109375
    7. 'current' → logprob: -3.5702972412109375
    8. ' n' → logprob: -4.3202972412109375
    9. 'len' → logprob: -4.3202972412109375
    10. 'n' → logprob: -5.3202972412109375

Token 824: ' after' (ID: 1934)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.2237346172332764
    2. ' =' → logprob: -1.5987346172332764
    3. ']' → logprob: -2.4737346172332764
    4. '   ' → logprob: -2.5987346172332764
    5. ' intervals' → logprob: -2.8487346172332764
    6. '=' → logprob: -3.0987346172332764
    7. '#' → logprob: -3.2237346172332764
    8. 'heap' → logprob: -3.4737346172332764
    9. ']
' → logprob: -3.4737346172332764
    10. ')
' → logprob: -4.5987348556518555

Token 825: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07888306677341461
    2. 'the' → logprob: -3.703883171081543
    3. ' all' → logprob: -4.578883171081543
    4. '   ' → logprob: -5.203883171081543
    5. 'reading' → logprob: -5.203883171081543
    6. 'def' → logprob: -5.703883171081543
    7. 'assign' → logprob: -5.703883171081543
    8. ' reading' → logprob: -5.953883171081543
    9. 'booking' → logprob: -6.078883171081543
    10. 'return' → logprob: -6.453883171081543

Token 826: ' reservations' (ID: 51148)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7053850293159485
    2. '   ' → logprob: -1.4553849697113037
    3. ' intervals' → logprob: -2.2053849697113037
    4. 'reserv' → logprob: -2.3303849697113037
    5. 'reserved' → logprob: -3.7053849697113037
    6. '```' → logprob: -4.455385208129883
    7. ':' → logprob: -5.080385208129883
    8. 'def' → logprob: -5.580385208129883
    9. 'reservation' → logprob: -5.580385208129883
    10. 'res' → logprob: -5.955385208129883

Token 827: ' complete' (ID: 5533)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.39896851778030396
    2. '   ' → logprob: -1.2739684581756592
    3. ' intervals' → logprob: -4.023968696594238
    4. '    
' → logprob: -4.148968696594238
    5. '
' → logprob: -5.023968696594238
    6. 'import' → logprob: -5.773968696594238
    7. 'heap' → logprob: -6.148968696594238
    8. '#' → logprob: -6.773968696594238
    9. '```' → logprob: -7.023968696594238
    10. '        
' → logprob: -8.273968696594238

Token 828: '.
' (ID: 558)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.23267559707164764
    2. '   ' → logprob: -1.857675552368164
    3. ' intervals' → logprob: -4.107675552368164
    4. 'import' → logprob: -4.607675552368164
    5. '
' → logprob: -4.732675552368164
    6. '    
' → logprob: -5.232675552368164
    7. '```' → logprob: -5.732675552368164
    8. 'heap' → logprob: -6.357675552368164
    9. '#' → logprob: -6.357675552368164
    10. 'def' → logprob: -7.607675552368164

Token 829: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17682892084121704
    2. 'interval' → logprob: -1.9268288612365723
    3. '
' → logprob: -5.176828861236572
    4. '    
' → logprob: -5.426828861236572
    5. ' intervals' → logprob: -5.801828861236572
    6. 'heap' → logprob: -6.801828861236572
    7. 'import' → logprob: -7.301828861236572
    8. '```' → logprob: -7.551828861236572
    9. 'starts' → logprob: -8.17682933807373
    10. '#' → logprob: -9.17682933807373

Token 830: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14592121541500092
    2. 'interval' → logprob: -2.145921230316162
    3. '
' → logprob: -4.395921230316162
    4. '    
' → logprob: -5.270921230316162
    5. ' intervals' → logprob: -7.645921230316162
    6. '```' → logprob: -8.020920753479004
    7. 'heap' → logprob: -8.645920753479004
    8. 'sorted' → logprob: -9.145920753479004
    9. 'import' → logprob: -9.520920753479004
    10. '#' → logprob: -9.645920753479004

Token 831: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.19161182641983032
    2. '   ' → logprob: -1.8166117668151855
    3. ' intervals' → logprob: -5.9416117668151855
    4. '
' → logprob: -5.9416117668151855
    5. 'import' → logprob: -6.1916117668151855
    6. '#' → logprob: -6.6916117668151855
    7. 'heap' → logprob: -7.0666117668151855
    8. '    
' → logprob: -7.4416117668151855
    9. 'starts' → logprob: -7.5666117668151855
    10. 'sorted' → logprob: -8.066612243652344

Token 832: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.19077016413211823
    2. '   ' → logprob: -1.815770149230957
    3. '#' (adapté à ' #') → logprob: -5.190770149230957
    4. ' intervals' → logprob: -6.190770149230957
    5. 'heap' → logprob: -7.065770149230957
    6. '
' → logprob: -7.440770149230957
    7. 'import' → logprob: -7.690770149230957
    8. 'starts' → logprob: -7.940770149230957
    9. '    
' → logprob: -8.065770149230957
    10. 'sorted' → logprob: -8.065770149230957

Token 833: ' Under' (ID: 13911)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0275795366615057
    2. '   ' → logprob: -4.027579307556152
    3. '#' → logprob: -5.652579307556152
    4. ' intervals' → logprob: -6.152579307556152
    5. 'heap' → logprob: -6.402579307556152
    6. '
' → logprob: -7.402579307556152
    7. 'starts' → logprob: -7.902579307556152
    8. 'import' → logprob: -8.402579307556152
    9. 'sorted' → logprob: -8.402579307556152
    10. 'end' → logprob: -8.652579307556152

Token 834: ' policy' (ID: 7562)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5945807695388794
    2. 'interval' → logprob: -1.8445807695388794
    3. '   ' → logprob: -2.84458065032959
    4. 's' → logprob: -3.34458065032959
    5. '#' → logprob: -3.46958065032959
    6. 'policy' → logprob: -3.46958065032959
    7. 'Policy' → logprob: -3.59458065032959
    8. ' the' → logprob: -3.96958065032959
    9. 'def' → logprob: -4.09458065032959
    10. 'all' → logprob: -4.34458065032959

Token 835: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00574344489723444
    2. '   ' → logprob: -5.505743503570557
    3. ' -' → logprob: -6.880743503570557
    4. ' =' → logprob: -8.255743026733398
    5. '_' → logprob: -9.130743026733398
    6. '=' → logprob: -9.380743026733398
    7. '1' → logprob: -9.505743026733398
    8. ':' → logprob: -9.755743026733398
    9. '#' → logprob: -10.505743026733398
    10. 'def' → logprob: -11.880743026733398

Token 836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011699870228767395
    2. '-' → logprob: -6.8761701583862305
    3. ' ' → logprob: -9.62617015838623
    4. '#' → logprob: -10.12617015838623
    5. '2' → logprob: -10.75117015838623
    6. ' -' → logprob: -12.25117015838623
    7. ' #' → logprob: -13.37617015838623
    8. 'def' → logprob: -13.62617015838623
    9. '   ' → logprob: -14.50117015838623
    10. '
' → logprob: -14.87617015838623

Token 837: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6212273836135864
    2. 'interval' → logprob: -1.1212273836135864
    3. ',' → logprob: -3.246227264404297
    4. ' intervals' → logprob: -3.371227264404297
    5. ':' → logprob: -3.621227264404297
    6. ':
' → logprob: -3.871227264404297
    7. '(interval' → logprob: -5.371227264404297
    8. '    
' → logprob: -6.121227264404297
    9. 'inter' → logprob: -6.246227264404297
    10. '_inter' → logprob: -6.496227264404297

Token 838: ' the' (ID: 290)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03487471118569374
    2. ' intervals' → logprob: -4.03487491607666
    3. '   ' → logprob: -5.03487491607666
    4. 'heap' → logprob: -5.53487491607666
    5. '
' → logprob: -6.15987491607666
    6. 'import' → logprob: -6.28487491607666
    7. 'end' → logprob: -7.53487491607666
    8. '#' → logprob: -7.53487491607666
    9. 'ends' → logprob: -7.65987491607666
    10. ' ends' → logprob: -9.15987491607666

Token 839: ' worst' (ID: 20486)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.13714969158172607
    2. ' intervals' → logprob: -2.2621498107910156
    3. 'import' → logprob: -5.012149810791016
    4. '#' → logprob: -5.262149810791016
    5. '   ' → logprob: -5.387149810791016
    6. 'heap' → logprob: -5.762149810791016
    7. '
' → logprob: -7.262149810791016
    8. 'def' → logprob: -8.262149810791016
    9. 'occupied' → logprob: -8.262149810791016
    10. 'n' → logprob: -8.387149810791016

Token 840: '-case' (ID: 83130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0481245219707489
    2. 'case' → logprob: -3.9231245517730713
    3. '    ' → logprob: -5.048124313354492
    4. ':' → logprob: -5.173124313354492
    5. '-case' → logprob: -5.548124313354492
    6. ' case' → logprob: -5.923124313354492
    7. '_' → logprob: -6.423124313354492
    8. ' =' → logprob: -6.548124313354492
    9. '_case' → logprob: -6.673124313354492
    10. '  ' → logprob: -7.423124313354492

Token 841: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.193868026137352
    2. ' intervals' → logprob: -3.3188679218292236
    3. '_' → logprob: -3.4438679218292236
    4. '_inter' → logprob: -4.068868160247803
    5. 'interval' → logprob: -4.193868160247803
    6. '_interval' → logprob: -4.943868160247803
    7. ' =' → logprob: -5.068868160247803
    8. '    
' → logprob: -5.068868160247803
    9. ' _' → logprob: -5.318868160247803
    10. ':' → logprob: -5.943868160247803

Token 842: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06344816088676453
    2. ' to' → logprob: -3.063448190689087
    3. ' intervals' → logprob: -4.438447952270508
    4. 'to' → logprob: -7.313447952270508
    5. 'interval' → logprob: -7.563447952270508
    6. ' that' → logprob: -7.688447952270508
    7. '    
' → logprob: -8.313447952270508
    8. '    ' → logprob: -8.688447952270508
    9. '```' → logprob: -8.813447952270508
    10. ' for' → logprob: -9.313447952270508

Token 843: ' for' (ID: 395)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6123186945915222
    2. '   ' → logprob: -1.362318754196167
    3. 'heap' → logprob: -2.237318754196167
    4. ' intervals' → logprob: -3.362318754196167
    5. 'import' → logprob: -3.987318754196167
    6. 'ends' → logprob: -4.862318515777588
    7. ' heap' → logprob: -5.112318515777588
    8. 'end' → logprob: -5.237318515777588
    9. 'active' → logprob: -5.237318515777588
    10. 'starts' → logprob: -5.612318515777588

Token 844: ' certain' (ID: 4454)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4946099817752838
    2. ' intervals' → logprob: -1.7446099519729614
    3. '_' → logprob: -2.744610071182251
    4. 'i' → logprob: -3.244610071182251
    5. 'a' → logprob: -3.369610071182251
    6. ' interval' → logprob: -4.369609832763672
    7. '   ' → logprob: -4.869609832763672
    8. ' i' → logprob: -4.994609832763672
    9. ' _' → logprob: -5.494609832763672
    10. 'start' → logprob: -5.744609832763672

Token 845: ' reservation' (ID: 34650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39740586280822754
    2. 'interval' → logprob: -2.0224058628082275
    3. ' intervals' → logprob: -2.1474058628082275
    4. '       ' → logprob: -4.772405624389648
    5. 'a' → logprob: -4.897405624389648
    6. 'pass' → logprob: -5.022405624389648
    7. 'order' → logprob: -5.147405624389648
    8. ' order' → logprob: -5.397405624389648
    9. '#' → logprob: -5.647405624389648
    10. '```' → logprob: -5.647405624389648

Token 846: ' order' (ID: 2569)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0167146921157837
    2. '   ' → logprob: -1.2667146921157837
    3. '_' → logprob: -2.266714572906494
    4. '_orders' → logprob: -2.641714572906494
    5. ' orders' → logprob: -3.016714572906494
    6. '_order' → logprob: -3.641714572906494
    7. ' order' → logprob: -3.891714572906494
    8. 'orders' → logprob: -4.016714572906494
    9. ' _' → logprob: -4.891714572906494
    10. 'order' → logprob: -5.391714572906494

Token 847: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45824459195137024
    2. ',' → logprob: -1.3332445621490479
    3. 's' → logprob: -3.333244562149048
    4. ':' → logprob: -4.083244800567627
    5. ' and' → logprob: -4.583244800567627
    6. '```' → logprob: -4.583244800567627
    7. '_' → logprob: -4.958244800567627
    8. '       ' → logprob: -5.833244800567627
    9. '_tokens' → logprob: -6.083244800567627
    10. '[' → logprob: -6.208244800567627

Token 848: ' seat' (ID: 15512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8714540600776672
    2. 'interval' → logprob: -2.2464540004730225
    3. '#' → logprob: -2.8714540004730225
    4. '       ' → logprob: -3.2464540004730225
    5. 'seat' → logprob: -3.2464540004730225
    6. 'max' → logprob: -3.2464540004730225
    7. 'se' → logprob: -3.3714540004730225
    8. ' seats' → logprob: -3.6214540004730225
    9. '```' → logprob: -3.6214540004730225
    10. ' seat' → logprob: -4.371454238891602

Token 849: ' choices' (ID: 14494)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2821253538131714
    2. ' choices' → logprob: -2.907125473022461
    3. '_choices' → logprob: -3.157125473022461
    4. 's' → logprob: -3.282125473022461
    5. '_' → logprob: -3.532125473022461
    6. ' _' → logprob: -4.032125473022461
    7. '    ' → logprob: -4.407125473022461
    8. ' ' → logprob: -4.657125473022461
    9. '  ' → logprob: -4.907125473022461
    10. 'choices' → logprob: -5.032125473022461

Token 850: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5090364813804626
    2. ',' → logprob: -1.1340365409851074
    3. ':' → logprob: -2.7590365409851074
    4. '):' → logprob: -5.509036540985107
    5. '       ' → logprob: -5.759036540985107
    6. ':
' → logprob: -6.884036540985107
    7. ')' → logprob: -7.009036540985107
    8. '):
' → logprob: -7.759036540985107
    9. ' is' → logprob: -7.884036540985107
    10. '```' → logprob: -7.884036540985107

Token 851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11325754225254059
    2. ',' → logprob: -2.738257646560669
    3. ':' → logprob: -3.363257646560669
    4. '       ' → logprob: -5.98825740814209
    5. '```' → logprob: -6.23825740814209
    6. ':
' → logprob: -6.86325740814209
    7. '):' → logprob: -7.98825740814209
    8. ' and' → logprob: -8.61325740814209
    9. '=' → logprob: -8.86325740814209
    10. 'def' → logprob: -8.86325740814209

Token 852: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08453486859798431
    2. '       ' → logprob: -3.0845348834991455
    3. ',' → logprob: -4.209534645080566
    4. ':' → logprob: -4.334534645080566
    5. '           ' → logprob: -5.834534645080566
    6. ' =' → logprob: -6.959534645080566
    7. ' is' → logprob: -7.459534645080566
    8. '=' → logprob: -7.834534645080566
    9. ':
' → logprob: -7.959534645080566
    10. '    ' → logprob: -7.959534645080566

Token 853: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052143871784210205
    2. ' =' → logprob: -3.9271438121795654
    3. '=' → logprob: -4.6771440505981445
    4. '       ' → logprob: -5.3021440505981445
    5. ':' → logprob: -6.0521440505981445
    6. 'import' → logprob: -6.3021440505981445
    7. '           ' → logprob: -6.3021440505981445
    8. '```' → logprob: -6.4271440505981445
    9. ',' → logprob: -6.6771440505981445
    10. 's' → logprob: -6.8021440505981445

Token 854: ' number' (ID: 2086)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3119651079177856
    2. ' max' → logprob: -1.9369651079177856
    3. 'heap' → logprob: -2.311964988708496
    4. ' intervals' → logprob: -2.311964988708496
    5. ' current' → logprob: -2.561964988708496
    6. 'current' → logprob: -2.561964988708496
    7. ' heap' → logprob: -2.936964988708496
    8. '   ' → logprob: -2.936964988708496
    9. ' worst' → logprob: -3.686964988708496
    10. 'interval' → logprob: -4.311964988708496

Token 855: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6535530090332031
    2. '=' → logprob: -1.9035530090332031
    3. ' =' → logprob: -2.028553009033203
    4. '   ' → logprob: -2.153553009033203
    5. ' ' → logprob: -4.278553009033203
    6. 's' → logprob: -4.403553009033203
    7. '#' → logprob: -4.528553009033203
    8. ')' → logprob: -5.153553009033203
    9. ' of' → logprob: -5.278553009033203
    10. ' _' → logprob: -5.528553009033203

Token 856: ' required' (ID: 3759)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6778769493103027
    2. '_' → logprob: -2.3028769493103027
    3. ' seats' → logprob: -2.5528769493103027
    4. ' _' → logprob: -2.5528769493103027
    5. ' required' → logprob: -2.8028769493103027
    6. ' passengers' → logprob: -3.0528769493103027
    7. '_required' → logprob: -4.052876949310303
    8. '   ' → logprob: -4.302876949310303
    9. 'interval' → logprob: -4.302876949310303
    10. ' needed' → logprob: -4.427876949310303

Token 857: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -1.202687382698059
    2. '_' → logprob: -1.577687382698059
    3. ' intervals' → logprob: -1.827687382698059
    4. '   ' → logprob: -2.0776872634887695
    5. '_se' → logprob: -2.5776872634887695
    6. '_inter' → logprob: -2.5776872634887695
    7. ' _' → logprob: -4.2026872634887695
    8. ' ' → logprob: -4.8276872634887695
    9. 'se' → logprob: -4.9526872634887695
    10. 'interval' → logprob: -5.5776872634887695

Token 858: ' matches' (ID: 15248)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236411690711975
    2. '   ' → logprob: -1.1486411094665527
    3. '=' → logprob: -3.3986411094665527
    4. ' +=' → logprob: -3.5236411094665527
    5. ' is' → logprob: -4.773641109466553
    6. '```' → logprob: -4.773641109466553
    7. '_needed' → logprob: -6.398641109466553
    8. ' required' → logprob: -6.773641109466553
    9. '    ' → logprob: -6.898641109466553
    10. '_required' → logprob: -6.898641109466553

Token 859: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3908466398715973
    2. ' the' → logprob: -2.0158467292785645
    3. 'the' → logprob: -3.2658467292785645
    4. 'len' → logprob: -3.3908467292785645
    5. ' len' → logprob: -3.6408467292785645
    6. '```' → logprob: -3.8908467292785645
    7. ' intervals' → logprob: -3.8908467292785645
    8. 'max' → logprob: -4.3908467292785645
    9. ' n' → logprob: -5.1408467292785645
    10. 'n' → logprob: -5.3908467292785645

Token 860: ' maximum' (ID: 10562)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8322238326072693
    2. ' current' → logprob: -1.582223892211914
    3. ' maximum' → logprob: -2.207223892211914
    4. ' worst' → logprob: -2.332223892211914
    5. 'max' → logprob: -3.332223892211914
    6. ''' → logprob: -4.207223892211914
    7. ' '' → logprob: -4.207223892211914
    8. '"' → logprob: -4.582223892211914
    9. ' n' → logprob: -4.957223892211914
    10. ' space' → logprob: -5.082223892211914

Token 861: ' number' (ID: 2086)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9592752456665039
    2. '   ' → logprob: -1.334275245666504
    3. 'heap' → logprob: -2.584275245666504
    4. 'end' → logprob: -2.584275245666504
    5. '_' → logprob: -3.209275245666504
    6. '_end' → logprob: -3.334275245666504
    7. '_interval' → logprob: -4.084275245666504
    8. ' =' → logprob: -4.459275245666504
    9. '_heap' → logprob: -4.709275245666504
    10. '(interval' → logprob: -4.709275245666504

Token 862: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.017186164855957
    2. ' =' → logprob: -1.017186164855957
    3. '_heap' → logprob: -2.392186164855957
    4. '_' → logprob: -2.892186164855957
    5. '_inter' → logprob: -3.517186164855957
    6. '=' → logprob: -3.767186164855957
    7. 'heap' → logprob: -4.017186164855957
    8. '       ' → logprob: -5.392186164855957
    9. 's' → logprob: -5.517186164855957
    10. ')' → logprob: -5.517186164855957

Token 863: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.09357685595750809
    2. 'interval' → logprob: -2.4685769081115723
    3. '   ' → logprob: -7.093576908111572
    4. ' simultaneous' → logprob: -7.343576908111572
    5. '```' → logprob: -7.468576908111572
    6. ' current' → logprob: -7.468576908111572
    7. 'over' → logprob: -7.718576908111572
    8. ' active' → logprob: -8.093576431274414
    9. ' overlapping' → logprob: -8.343576431274414
    10. ' heap' → logprob: -8.843576431274414

Token 864: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22880461812019348
    2. ' =' → logprob: -2.728804588317871
    3. '=' → logprob: -3.603804588317871
    4. ')' → logprob: -4.228804588317871
    5. '       ' → logprob: -4.728804588317871
    6. '```' → logprob: -4.728804588317871
    7. '
' → logprob: -4.978804588317871
    8. ' +' → logprob: -5.103804588317871
    9. ' that' → logprob: -5.353804588317871
    10. '+' → logprob: -5.353804588317871

Token 865: ' intersect' (ID: 64353)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6895241141319275
    2. ' overlap' → logprob: -0.9395241141319275
    3. 'inter' → logprob: -3.6895241737365723
    4. '   ' → logprob: -3.9395241737365723
    5. '```' → logprob: -4.314524173736572
    6. 'continue' → logprob: -4.939524173736572
    7. ' continue' → logprob: -5.064524173736572
    8. '_overlap' → logprob: -5.439524173736572
    9. 'start' → logprob: -5.814524173736572
    10. ')' → logprob: -6.064524173736572

Token 866: ' pair' (ID: 10610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5469487905502319
    2. '_' → logprob: -1.796948790550232
    3. '_heap' → logprob: -3.1719489097595215
    4. ' at' → logprob: -3.2969489097595215
    5. ' =' → logprob: -3.9219489097595215
    6. '       ' → logprob: -4.0469489097595215
    7. '[' → logprob: -4.2969489097595215
    8. 'heap' → logprob: -4.4219489097595215
    9. 's' → logprob: -4.4219489097595215
    10. '(heap' → logprob: -4.5469489097595215

Token 867: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.05738697201013565
    2. '       ' → logprob: -3.682386875152588
    3. ')' → logprob: -4.182386875152588
    4. '   ' → logprob: -4.807386875152588
    5. '           ' → logprob: -5.682386875152588
    6. '```' → logprob: -7.057386875152588
    7. '))' → logprob: -7.557386875152588
    8. '               ' → logprob: -7.807386875152588
    9. '(' → logprob: -8.432387351989746
    10. '(
' → logprob: -8.432387351989746

Token 868: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11418872326612473
    2. ' =' → logprob: -2.8641886711120605
    3. '
' → logprob: -4.7391886711120605
    4. ',' → logprob: -4.9891886711120605
    5. ']' → logprob: -5.3641886711120605
    6. '=' → logprob: -5.4891886711120605
    7. 'import' → logprob: -5.9891886711120605
    8. '    
' → logprob: -5.9891886711120605
    9. 'def' → logprob: -6.3641886711120605
    10. ' intervals' → logprob: -6.4891886711120605

Token 869: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071568419225513935
    2. '    
' → logprob: -5.882156848907471
    3. '
' → logprob: -6.507156848907471
    4. ' and' → logprob: -7.757156848907471
    5. 'heap' → logprob: -8.382156372070312
    6. 'import' → logprob: -8.507156372070312
    7. ')' → logprob: -8.632156372070312
    8. ']' → logprob: -8.882156372070312
    9. ' intervals' → logprob: -9.007156372070312
    10. '    ' → logprob: -9.007156372070312

Token 870: '.e' (ID: 2560)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5281121730804443
    2. '#' → logprob: -1.4031121730804443
    3. 'n' → logprob: -3.4031121730804443
    4. '=
' → logprob: -3.5281121730804443
    5. '   ' → logprob: -3.7781121730804443
    6. 's' → logprob: -4.153112411499023
    7. '       ' → logprob: -5.028112411499023
    8. '#
' → logprob: -5.028112411499023
    9. ' =' → logprob: -5.153112411499023
    10. '+' → logprob: -5.653112411499023

Token 871: '.,
' (ID: 86468)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2670043706893921
    2. '           ' → logprob: -3.1420044898986816
    3. '   ' → logprob: -3.1420044898986816
    4. ' =' → logprob: -3.2670044898986816
    5. ':
' → logprob: -3.7670044898986816
    6. ':' → logprob: -4.142004489898682
    7. '       ' → logprob: -4.142004489898682
    8. '=
' → logprob: -4.267004489898682
    9. 's' → logprob: -5.017004489898682
    10. '          ' → logprob: -5.642004489898682

Token 872: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2652197778224945
    2. ''' → logprob: -2.7652196884155273
    3. ' heap' → logprob: -3.3902196884155273
    4. ')' → logprob: -3.5152196884155273
    5. 'heap' → logprob: -3.6402196884155273
    6. ' '' → logprob: -3.7652196884155273
    7. ' max' → logprob: -4.640219688415527
    8. '[' → logprob: -5.140219688415527
    9. '    ' → logprob: -5.390219688415527
    10. ' a' → logprob: -5.640219688415527

Token 873: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016039647161960602
    2. 'heap' → logprob: -5.016039848327637
    3. 'max' → logprob: -5.891039848327637
    4. ')' → logprob: -6.766039848327637
    5. 'interval' → logprob: -6.891039848327637
    6. 'import' → logprob: -6.891039848327637
    7. '#' (adapté à ' #') → logprob: -7.266039848327637
    8. '       ' → logprob: -7.641039848327637
    9. ']' → logprob: -8.016039848327637
    10. 's' → logprob: -8.391039848327637

Token 874: ' the' (ID: 290)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.2324925661087036
    2. 'import' → logprob: -1.3574925661087036
    3. 'ends' → logprob: -1.3574925661087036
    4. 'max' → logprob: -2.232492446899414
    5. '   ' → logprob: -3.357492446899414
    6. 'end' → logprob: -3.982492446899414
    7. 'interval' → logprob: -4.482492446899414
    8. 'min' → logprob: -4.732492446899414
    9. '#' → logprob: -5.982492446899414
    10. 'current' → logprob: -6.107492446899414

Token 875: ' size' (ID: 2349)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.523669958114624
    2. 'interval' → logprob: -2.273669958114624
    3. '   ' → logprob: -2.648669958114624
    4. 'import' → logprob: -2.648669958114624
    5. 'max' → logprob: -2.648669958114624
    6. ' ends' → logprob: -4.023670196533203
    7. ' heap' → logprob: -4.273670196533203
    8. ' intervals' → logprob: -4.648670196533203
    9. '#' → logprob: -4.773670196533203
    10. '       ' → logprob: -5.523670196533203

Token 876: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5104113817214966
    2. '=' → logprob: -2.010411262512207
    3. ' of' → logprob: -2.260411262512207
    4. ' =' → logprob: -2.385411262512207
    5. '_' → logprob: -3.635411262512207
    6. 'of' → logprob: -3.760411262512207
    7. ')' → logprob: -5.260411262512207
    8. '    ' → logprob: -5.635411262512207
    9. '[' → logprob: -5.885411262512207
    10. '(' → logprob: -6.385411262512207

Token 877: ' a' (ID: 261)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5457828044891357
    2. ' intervals' → logprob: -1.1707828044891357
    3. 'heap' → logprob: -2.5457828044891357
    4. ' the' → logprob: -4.920783042907715
    5. 'the' → logprob: -4.920783042907715
    6. '   ' → logprob: -5.045783042907715
    7. 'a' → logprob: -6.170783042907715
    8. ' heap' → logprob: -6.170783042907715
    9. 'max' → logprob: -6.670783042907715
    10. 'current' → logprob: -6.795783042907715

Token 878: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26656824350357056
    2. 'cl' → logprob: -2.641568183898926
    3. 'maximum' → logprob: -2.641568183898926
    4. 'largest' → logprob: -3.766568183898926
    5. '#' → logprob: -4.516568183898926
    6. 'chain' → logprob: -4.766568183898926
    7. '_max' → logprob: -4.891568183898926
    8. ' max' → logprob: -5.266568183898926
    9. 'heap' → logprob: -5.516568183898926
    10. '   ' → logprob: -5.766568183898926

Token 879: ' *' (ID: 425)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.1605920046567917
    2. '_cl' → logprob: -3.0355920791625977
    3. '
' → logprob: -3.1605920791625977
    4. ' clique' → logprob: -3.9105920791625977
    5. '   ' → logprob: -4.785592079162598
    6. '``' → logprob: -5.535592079162598
    7. '#' → logprob: -5.660592079162598
    8. ' ' → logprob: -5.785592079162598
    9. '(
' → logprob: -5.785592079162598
    10. '```' → logprob: -5.785592079162598

Token 880: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.007740193046629429
    2. ' clique' → logprob: -6.007740020751953
    3. '```' → logprob: -6.257740020751953
    4. '
' → logprob: -7.132740020751953
    5. '_cl' → logprob: -7.132740020751953
    6. '``' → logprob: -7.632740020751953
    7. '#' → logprob: -8.132740020751953
    8. ' ' → logprob: -8.257740020751953
    9. '   ' → logprob: -8.257740020751953
    10. ')' → logprob: -9.257740020751953

Token 881: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.00024120506714098155
    2. '```' → logprob: -8.87524127960205
    3. '#' → logprob: -10.00024127960205
    4. '``' → logprob: -11.37524127960205
    5. 'i' → logprob: -11.37524127960205
    6. 'iques' → logprob: -12.25024127960205
    7. 'IQUE' → logprob: -12.50024127960205
    8. 'iqu' → logprob: -12.62524127960205
    9. '   ' → logprob: -12.75024127960205
    10. 'iquer' → logprob: -12.75024127960205

Token 882: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35401013493537903
    2. '_size' → logprob: -2.2290101051330566
    3. '   ' → logprob: -2.9790101051330566
    4. '_' → logprob: -3.7290101051330566
    5. 'size' → logprob: -3.8540101051330566
    6. '*' → logprob: -4.104010105133057
    7. 's' → logprob: -4.354010105133057
    8. ')
' → logprob: -4.854010105133057
    9. '*
' → logprob: -5.229010105133057
    10. ' size' → logprob: -5.354010105133057

Token 883: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48566147685050964
    2. ' =' → logprob: -1.235661506652832
    3. '
' → logprob: -4.110661506652832
    4. 's' → logprob: -4.860661506652832
    5. 'heap' → logprob: -5.110661506652832
    6. '_' → logprob: -5.235661506652832
    7. '    
' → logprob: -5.360661506652832
    8. ')
' → logprob: -5.485661506652832
    9. '_heap' → logprob: -5.610661506652832
    10. '=' → logprob: -5.610661506652832

Token 884: ' the' (ID: 290)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.26407790184020996
    2. 'interval' → logprob: -1.51407790184021
    3. '   ' → logprob: -5.014078140258789
    4. 'inter' → logprob: -6.639078140258789
    5. ' the' → logprob: -6.889078140258789
    6. ' pair' → logprob: -7.014078140258789
    7. 'over' → logprob: -7.764078140258789
    8. '_inter' → logprob: -8.014078140258789
    9. 'the' → logprob: -8.139078140258789
    10. 'pair' → logprob: -8.264078140258789

Token 885: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.10220026224851608
    2. ' intervals' → logprob: -2.6022002696990967
    3. ' interval' → logprob: -4.102200031280518
    4. '#' → logprob: -5.977200031280518
    5. ' #' → logprob: -6.852200031280518
    6. ' graph' → logprob: -6.977200031280518
    7. 'graph' → logprob: -7.102200031280518
    8. '   ' → logprob: -8.602200508117676
    9. 'inter' → logprob: -8.727200508117676
    10. '```' → logprob: -8.727200508117676

Token 886: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24307258427143097
    2. 'graph' → logprob: -2.618072509765625
    3. '_graph' → logprob: -2.993072509765625
    4. '   ' → logprob: -3.118072509765625
    5. '_' → logprob: -4.618072509765625
    6. ' graph' → logprob: -5.243072509765625
    7. ')' → logprob: -5.368072509765625
    8. '       ' → logprob: -5.493072509765625
    9. '_inter' → logprob: -5.493072509765625
    10. '[
' → logprob: -6.118072509765625

Token 887: '.
' (ID: 558)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2144159972667694
    2. '   ' → logprob: -1.9644160270690918
    3. ' intervals' → logprob: -3.464416027069092
    4. '
' → logprob: -5.339416027069092
    5. ' =' → logprob: -5.839416027069092
    6. '```' → logprob: -5.964416027069092
    7. '#' → logprob: -6.714416027069092
    8. '    
' → logprob: -6.714416027069092
    9. 'heap' → logprob: -6.839416027069092
    10. ',' → logprob: -6.964416027069092

Token 888: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11179252713918686
    2. 'interval' → logprob: -2.48679256439209
    3. '    
' → logprob: -4.61179256439209
    4. '
' → logprob: -5.36179256439209
    5. '```' → logprob: -5.98679256439209
    6. ' intervals' → logprob: -6.23679256439209
    7. 'import' → logprob: -6.48679256439209
    8. 'heap' → logprob: -7.36179256439209
    9. '#' → logprob: -7.86179256439209
    10. 'from' → logprob: -8.36179256439209

Token 889: ' #
' (ID: 21888)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4975535273551941
    2. '   ' → logprob: -0.9975535273551941
    3. 'heap' → logprob: -4.49755334854126
    4. '```' → logprob: -5.74755334854126
    5. ' intervals' → logprob: -5.87255334854126
    6. '
' → logprob: -6.37255334854126
    7. 'import' → logprob: -6.62255334854126
    8. '    
' → logprob: -6.62255334854126
    9. '(interval' → logprob: -8.622553825378418
    10. '#' → logprob: -8.622553825378418

Token 890: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16631704568862915
    2. 'interval' → logprob: -1.9163169860839844
    3. 'heap' → logprob: -6.291316986083984
    4. '
' → logprob: -6.541316986083984
    5. '```' → logprob: -7.291316986083984
    6. 'import' → logprob: -7.541316986083984
    7. '    
' → logprob: -7.666316986083984
    8. 'end' → logprob: -8.166316986083984
    9. 'ends' → logprob: -8.291316986083984
    10. ' intervals' → logprob: -8.916316986083984

Token 891: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.539638102054596
    2. '   ' → logprob: -0.914638102054596
    3. '#' (adapté à ' #') → logprob: -5.289638042449951
    4. 'import' → logprob: -5.414638042449951
    5. '
' → logprob: -5.789638042449951
    6. ' intervals' → logprob: -7.039638042449951
    7. 'from' → logprob: -7.164638042449951
    8. 'starts' → logprob: -7.539638042449951
    9. '    
' → logprob: -7.789638042449951
    10. 'heap' → logprob: -8.16463851928711

Token 892: ' They' (ID: 3164)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.01399719063192606
    2. '   ' → logprob: -4.7639970779418945
    3. '#' → logprob: -6.0139970779418945
    4. 'import' → logprob: -6.6389970779418945
    5. 'ends' → logprob: -7.8889970779418945
    6. 'starts' → logprob: -8.263997077941895
    7. 'end' → logprob: -8.388997077941895
    8. 'from' → logprob: -8.763997077941895
    9. 'heap' → logprob: -8.888997077941895
    10. '
' → logprob: -8.888997077941895

Token 893: ' define' (ID: 13174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19538182020187378
    2. '=' → logprob: -2.5703818798065186
    3. '#' → logprob: -3.4453818798065186
    4. '_' → logprob: -3.6953818798065186
    5. 's' → logprob: -4.3203816413879395
    6. '_size' → logprob: -5.0703816413879395
    7. '[' → logprob: -5.3203816413879395
    8. '```' → logprob: -6.4453816413879395
    9. '[
' → logprob: -6.5703816413879395
    10. 'def' → logprob: -6.6953816413879395

Token 894: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4824107885360718
    2. 's' → logprob: -1.9824107885360718
    3. 'max' → logprob: -2.1074109077453613
    4. '
' → logprob: -4.107410907745361
    5. 'def' → logprob: -4.232410907745361
    6. 'interval' → logprob: -4.232410907745361
    7. ' s' → logprob: -4.482410907745361
    8. '#' → logprob: -4.607410907745361
    9. '```' → logprob: -4.732410907745361
    10. 'the' → logprob: -4.732410907745361

Token 895: 'over' (ID: 2898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7866512537002563
    2. 'interval' → logprob: -1.5366512537002563
    3. 'max' → logprob: -2.411651134490967
    4. ' intervals' → logprob: -2.661651134490967
    5. 'def' → logprob: -3.786651134490967
    6. '#' → logprob: -3.911651134490967
    7. '```' → logprob: -4.411651134490967
    8. '")' → logprob: -4.911651134490967
    9. ')' → logprob: -4.911651134490967
    10. '"' → logprob: -4.911651134490967

Token 896: 'lapping' (ID: 152588)
  Prédit: 'lapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lapping' → logprob: -0.2984614074230194
    2. 'laps' → logprob: -1.6734614372253418
    3. 'lap' → logprob: -2.673461437225342
    4. 'l' → logprob: -7.298461437225342
    5. 'all' → logprob: -8.298460960388184
    6. '#' → logprob: -9.048460960388184
    7. 'apping' → logprob: -9.048460960388184
    8. 'f' → logprob: -9.548460960388184
    9. 'fl' → logprob: -10.173460960388184
    10. 'ap' → logprob: -10.548460960388184

Token 897: ' sections' (ID: 21436)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.032452698796987534
    2. 's' → logprob: -4.657452583312988
    3. '_count' → logprob: -4.907452583312988
    4. '_' → logprob: -5.032452583312988
    5. '_size' → logprob: -6.282452583312988
    6. '_set' → logprob: -6.407452583312988
    7. '_pairs' → logprob: -7.032452583312988
    8. '_ranges' → logprob: -7.032452583312988
    9. '_sizes' → logprob: -7.282452583312988
    10. '_sets' → logprob: -7.532452583312988

Token 898: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1787546873092651
    2. ' =' → logprob: -1.1787546873092651
    3. '"' → logprob: -1.5537546873092651
    4. 'that' → logprob: -3.8037548065185547
    5. ' that' → logprob: -4.053754806518555
    6. '=' → logprob: -4.303754806518555
    7. '```' → logprob: -4.428754806518555
    8. 's' → logprob: -4.428754806518555
    9. '_' → logprob: -4.803754806518555
    10. '",' → logprob: -4.803754806518555

Token 899: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6297468543052673
    2. '   ' → logprob: -1.004746913909912
    3. '=' → logprob: -3.629746913909912
    4. ',' → logprob: -4.879746913909912
    5. '[' → logprob: -4.879746913909912
    6. '_' → logprob: -5.004746913909912
    7. 's' → logprob: -5.129746913909912
    8. ':' → logprob: -5.254746913909912
    9. '```' → logprob: -6.004746913909912
    10. ' in' → logprob: -6.129746913909912

Token 900: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6569510698318481
    2. ' intervals' → logprob: -0.7819510698318481
    3. 'adj' → logprob: -5.031950950622559
    4. 'the' → logprob: -5.531950950622559
    5. 'two' → logprob: -5.906950950622559
    6. '   ' → logprob: -6.281950950622559
    7. ' two' → logprob: -6.281950950622559
    8. ' the' → logprob: -6.781950950622559
    9. 'a' → logprob: -7.406950950622559
    10. ' consecutive' → logprob: -7.656950950622559

Token 901: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19240090250968933
    2. ' =' → logprob: -2.9424009323120117
    3. '=' → logprob: -3.8174009323120117
    4. ')' → logprob: -4.442400932312012
    5. '```' → logprob: -4.692400932312012
    6. ',' → logprob: -4.817400932312012
    7. '[' → logprob: -4.942400932312012
    8. ':' → logprob: -4.942400932312012
    9. 'for' → logprob: -5.317400932312012
    10. '[
' → logprob: -5.692400932312012

Token 902: ' having' (ID: 4566)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21685583889484406
    2. ' intervals' → logprob: -2.841855764389038
    3. '    ' → logprob: -3.341855764389038
    4. ' a' → logprob: -4.091856002807617
    5. ' the' → logprob: -4.466856002807617
    6. ''' → logprob: -4.591856002807617
    7. 'the' → logprob: -5.091856002807617
    8. ' '' → logprob: -5.216856002807617
    9. 'def' → logprob: -5.216856002807617
    10. ' (' → logprob: -5.216856002807617

Token 903: ' intersection' (ID: 42002)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3771574795246124
    2. ' a' → logprob: -1.75215744972229
    3. ' an' → logprob: -2.87715744972229
    4. ' non' → logprob: -3.50215744972229
    5. 'a' → logprob: -4.377157688140869
    6. ' seats' → logprob: -5.252157688140869
    7. ' length' → logprob: -5.877157688140869
    8. 'at' → logprob: -5.877157688140869
    9. 'non' → logprob: -5.877157688140869
    10. ' endpoints' → logprob: -6.002157688140869

Token 904: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8330574035644531
    2. 's' → logprob: -1.2080574035644531
    3. ' =' → logprob: -2.833057403564453
    4. '_count' → logprob: -2.958057403564453
    5. '_size' → logprob: -3.083057403564453
    6. '   ' → logprob: -3.208057403564453
    7. '_points' → logprob: -4.708057403564453
    8. '=' → logprob: -4.958057403564453
    9. '.' → logprob: -5.083057403564453
    10. ',' → logprob: -5.208057403564453

Token 905: ' their' (ID: 1043)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.310228705406189
    2. ' travel' → logprob: -1.810228705406189
    3. ' the' → logprob: -2.4352288246154785
    4. ' seats' → logprob: -2.6852288246154785
    5. 'the' → logprob: -2.8102288246154785
    6. ' their' → logprob: -2.9352288246154785
    7. ' intervals' → logprob: -3.1852288246154785
    8. '   ' → logprob: -3.5602288246154785
    9. 'interval' → logprob: -3.8102288246154785
    10. ' stations' → logprob: -3.8102288246154785

Token 906: ' travel' (ID: 6410)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.8192673921585083
    2. ' travel' → logprob: -1.8192673921585083
    3. 'interval' → logprob: -2.1942672729492188
    4. ' start' → logprob: -2.3192672729492188
    5. 'travel' → logprob: -2.5692672729492188
    6. ' intervals' → logprob: -2.6942672729492188
    7. '   ' → logprob: -2.8192672729492188
    8. '[start' → logprob: -3.5692672729492188
    9. 'ranges' → logprob: -3.8192672729492188
    10. '[' → logprob: -3.8192672729492188

Token 907: ' sections' (ID: 21436)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22905001044273376
    2. '_' → logprob: -2.9790499210357666
    3. 'points' → logprob: -3.1040499210357666
    4. '_points' → logprob: -3.7290499210357666
    5. 'segments' → logprob: -4.229050159454346
    6. 'sections' → logprob: -4.354050159454346
    7. '_start' → logprob: -4.854050159454346
    8. 'ranges' → logprob: -5.479050159454346
    9. '_inter' → logprob: -5.604050159454346
    10. 's' → logprob: -5.604050159454346

Token 908: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26934948563575745
    2. ' =' → logprob: -2.3943495750427246
    3. '
' → logprob: -4.019349575042725
    4. ',' → logprob: -4.519349575042725
    5. '=' → logprob: -4.519349575042725
    6. ' intervals' → logprob: -4.644349575042725
    7. '```' → logprob: -4.769349575042725
    8. '#' → logprob: -4.894349575042725
    9. ':
' → logprob: -5.019349575042725
    10. 'interval' → logprob: -5.019349575042725

Token 909: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6479645371437073
    2. '   ' → logprob: -0.7729645371437073
    3. 'starts' → logprob: -5.3979644775390625
    4. 'ends' → logprob: -5.8979644775390625
    5. ' intervals' → logprob: -6.2729644775390625
    6. 'import' → logprob: -6.7729644775390625
    7. '#' → logprob: -7.0229644775390625
    8. 'end' → logprob: -7.1479644775390625
    9. 'heap' → logprob: -7.3979644775390625
    10. ' ends' → logprob: -7.5229644775390625

Token 910: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.096694216132164
    2. 'interval' → logprob: -2.471694231033325
    3. '
' → logprob: -5.846693992614746
    4. 'import' → logprob: -7.096693992614746
    5. 'starts' → logprob: -7.221693992614746
    6. 'heap' → logprob: -7.471693992614746
    7. 'from' → logprob: -7.596693992614746
    8. ' intervals' → logprob: -7.596693992614746
    9. 'end' → logprob: -7.721693992614746
    10. 'ends' → logprob: -7.971693992614746

Token 911: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04300582408905029
    2. 'interval' → logprob: -3.41800594329834
    3. '```' → logprob: -6.16800594329834
    4. 'import' → logprob: -6.41800594329834
    5. '
' → logprob: -6.41800594329834
    6. 'heap' → logprob: -6.66800594329834
    7. 'from' → logprob: -7.41800594329834
    8. 'end' → logprob: -7.66800594329834
    9. '#' → logprob: -7.91800594329834
    10. '    
' → logprob: -7.91800594329834

Token 912: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35338425636291504
    2. 'interval' → logprob: -1.228384256362915
    3. 'heap' → logprob: -6.603384017944336
    4. 'import' → logprob: -7.353384017944336
    5. 'end' → logprob: -7.478384017944336
    6. '#' (adapté à ' #') → logprob: -7.478384017944336
    7. 'starts' → logprob: -7.603384017944336
    8. ' intervals' → logprob: -7.978384017944336
    9. 'ends' → logprob: -8.103384017944336
    10. '    
' → logprob: -8.853384017944336

Token 913: ' Hence' (ID: 47682)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.021959152072668076
    2. '   ' → logprob: -4.52195930480957
    3. 'ends' → logprob: -5.52195930480957
    4. '#' → logprob: -6.02195930480957
    5. 'heap' → logprob: -6.52195930480957
    6. 'starts' → logprob: -6.77195930480957
    7. 'end' → logprob: -7.14695930480957
    8. 'import' → logprob: -8.52195930480957
    9. 'max' → logprob: -8.52195930480957
    10. 'sorted' → logprob: -8.89695930480957

Token 914: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5466810464859009
    2. 'interval' → logprob: -1.1716810464859009
    3. 'ends' → logprob: -2.9216809272766113
    4. 'import' → logprob: -3.7966809272766113
    5. 'heap' → logprob: -4.546680927276611
    6. ' ends' → logprob: -4.796680927276611
    7. 'starts' → logprob: -5.046680927276611
    8. 'end' → logprob: -5.921680927276611
    9. '#' → logprob: -6.046680927276611
    10. ' intervals' → logprob: -6.421680927276611

Token 915: ' s' (ID: 265)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6408352851867676
    2. 'ends' → logprob: -1.5158352851867676
    3. 'heap' → logprob: -2.0158352851867676
    4. '   ' → logprob: -3.1408352851867676
    5. ' ends' → logprob: -3.5158352851867676
    6. 'end' → logprob: -3.7658352851867676
    7. 'import' → logprob: -4.265835285186768
    8. '#' → logprob: -5.640835285186768
    9. ' intervals' → logprob: -6.015835285186768
    10. ' heap' → logprob: -6.390835285186768

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02457413077354431
    2. ' =' → logprob: -4.024574279785156
    3. '_' → logprob: -5.774574279785156
    4. '   ' → logprob: -6.774574279785156
    5. '_inter' → logprob: -7.024574279785156
    6. '=' → logprob: -8.149574279785156
    7. 'ize' → logprob: -8.149574279785156
    8. '2' → logprob: -8.899574279785156
    9. 's' → logprob: -10.024574279785156
    10. 'for' → logprob: -10.024574279785156

Token 917: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10559281706809998
    2. '=' → logprob: -3.105592727661133
    3. '   ' → logprob: -3.105592727661133
    4. '_inter' → logprob: -5.605592727661133
    5. ' +=' → logprob: -5.730592727661133
    6. '```' → logprob: -6.980592727661133
    7. ' intervals' → logprob: -8.230592727661133
    8. '_' → logprob: -8.230592727661133
    9. '_heap' → logprob: -8.355592727661133
    10. 'heap' → logprob: -8.480592727661133

Token 918: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6753926277160645
    2. 'n' → logprob: -1.0503926277160645
    3. '   ' → logprob: -2.5503926277160645
    4. 'max' → logprob: -2.8003926277160645
    5. ' n' → logprob: -6.8003926277160645
    6. 'len' → logprob: -7.9253926277160645
    7. ' ' → logprob: -8.300392150878906
    8. ' max' → logprob: -8.800392150878906
    9. '1' → logprob: -9.050392150878906
    10. ' =' → logprob: -9.050392150878906

Token 919: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21140128374099731
    2. 'len' → logprob: -2.7114012241363525
    3. ' max' → logprob: -3.3364012241363525
    4. '0' → logprob: -3.8364012241363525
    5. 'n' → logprob: -4.211401462554932
    6. 'import' → logprob: -4.836401462554932
    7. 'same' → logprob: -5.211401462554932
    8. ' same' → logprob: -5.336401462554932
    9. 'largest' → logprob: -5.461401462554932
    10. '[]' → logprob: -5.586401462554932

Token 920: ' size' (ID: 2349)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5265035033226013
    2. 'size' → logprob: -2.401503562927246
    3. '_' → logprob: -3.151503562927246
    4. '_size' → logprob: -3.151503562927246
    5. 'over' → logprob: -3.276503562927246
    6. '_number' → logprob: -3.651503562927246
    7. '_end' → logprob: -3.901503562927246
    8. '   ' → logprob: -3.901503562927246
    9. 'heap' → logprob: -4.026503562927246
    10. '_overlap' → logprob: -4.026503562927246

Token 921: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.802556574344635
    2. '   ' → logprob: -1.8025565147399902
    3. 'of' → logprob: -2.3025565147399902
    4. '_of' → logprob: -2.4275565147399902
    5. ' of' → logprob: -2.5525565147399902
    6. '=' → logprob: -3.0525565147399902
    7. '```' → logprob: -3.6775565147399902
    8. ' =' → logprob: -3.8025565147399902
    9. '_heap' → logprob: -5.30255651473999
    10. ' +' → logprob: -5.80255651473999

Token 922: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36768531799316406
    2. 'interval' → logprob: -2.242685317993164
    3. ' intervals' → logprob: -2.242685317993164
    4. ' a' → logprob: -2.992685317993164
    5. 'the' → logprob: -3.617685317993164
    6. ' the' → logprob: -5.367685317993164
    7. '   ' → logprob: -5.492685317993164
    8. '```' → logprob: -5.867685317993164
    9. 'an' → logprob: -6.117685317993164
    10. 'heap' → logprob: -6.867685317993164

Token 923: ' set' (ID: 920)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6731522083282471
    2. 'cl' → logprob: -1.923152208328247
    3. 'max' → logprob: -2.173152208328247
    4. 'heap' → logprob: -2.423152208328247
    5. ' chain' → logprob: -3.048152208328247
    6. 'subset' → logprob: -3.673152208328247
    7. ' clique' → logprob: -4.298151969909668
    8. 'set' → logprob: -4.298151969909668
    9. 'stack' → logprob: -4.423151969909668
    10. '   ' → logprob: -5.298151969909668

Token 924: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5092282891273499
    2. '   ' → logprob: -1.759228229522705
    3. ' of' → logprob: -2.634228229522705
    4. 'of' → logprob: -2.884228229522705
    5. '_of' → logprob: -3.884228229522705
    6. '[' → logprob: -4.134228229522705
    7. '[
' → logprob: -4.134228229522705
    8. '_inter' → logprob: -5.134228229522705
    9. ' _' → logprob: -5.384228229522705
    10. ' that' → logprob: -5.509228229522705

Token 925: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.28556469082832336
    2. ' intervals' → logprob: -1.410564661026001
    3. '   ' → logprob: -5.53556489944458
    4. 'over' → logprob: -8.785564422607422
    5. '```' → logprob: -9.035564422607422
    6. '(interval' → logprob: -9.535564422607422
    7. 'inter' → logprob: -10.785564422607422
    8. '[' → logprob: -11.160564422607422
    9. ' mutually' → logprob: -11.535564422607422
    10. '
' → logprob: -11.660564422607422

Token 926: ' pair' (ID: 10610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34412798285484314
    2. ' that' → logprob: -1.9691280126571655
    3. 'that' → logprob: -2.719127893447876
    4. '[
' → logprob: -3.719127893447876
    5. '```' → logprob: -4.344128131866455
    6. ' overlapping' → logprob: -4.594128131866455
    7. 'with' → logprob: -5.344128131866455
    8. '_that' → logprob: -5.344128131866455
    9. '[' → logprob: -5.594128131866455
    10. ')' → logprob: -5.844128131866455

Token 927: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.02139453776180744
    2. '   ' → logprob: -4.021394729614258
    3. '           ' → logprob: -6.771394729614258
    4. '       ' → logprob: -7.146394729614258
    5. 'w' → logprob: -7.896394729614258
    6. '[
' → logprob: -8.896394729614258
    7. ')' → logprob: -9.271394729614258
    8. '```' → logprob: -9.521394729614258
    9. '          ' → logprob: -9.646394729614258
    10. '               ' → logprob: -9.646394729614258

Token 928: ' overlapping' (ID: 90457)
  Prédit: ' overlapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlapping' → logprob: -0.2878851592540741
    2. '   ' → logprob: -2.2878851890563965
    3. 'over' → logprob: -2.2878851890563965
    4. '_inter' → logprob: -4.4128851890563965
    5. ' that' → logprob: -4.9128851890563965
    6. ' intersect' → logprob: -5.0378851890563965
    7. 'inter' → logprob: -5.1628851890563965
    8. '_over' → logprob: -5.2878851890563965
    9. 'that' → logprob: -5.5378851890563965
    10. '_' → logprob: -6.7878851890563965

Token 929: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760759711265564
    2. ' at' → logprob: -1.0760760307312012
    3. ',
' → logprob: -4.701076030731201
    4. ',' → logprob: -4.701076030731201
    5. ' with' → logprob: -4.826076030731201
    6. ' =' → logprob: -4.826076030731201
    7. ' that' → logprob: -5.076076030731201
    8. 's' → logprob: -5.451076030731201
    9. '(
' → logprob: -5.451076030731201
    10. ' in' → logprob: -5.576076030731201

Token 930: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3406779170036316
    2. '#' → logprob: -2.2156779766082764
    3. '    
' → logprob: -3.2156779766082764
    4. ' i' → logprob: -3.7156779766082764
    5. '
' → logprob: -3.9656779766082764
    6. ' which' → logprob: -4.340677738189697
    7. ' not' → logprob: -4.590677738189697
    8. ' so' → logprob: -4.715677738189697
    9. ' #' → logprob: -4.715677738189697
    10. ' 
' → logprob: -4.840677738189697

Token 931: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37229102849960327
    2. ' is' → logprob: -2.747291088104248
    3. '=' → logprob: -3.122291088104248
    4. '```' → logprob: -3.247291088104248
    5. ' continues' → logprob: -3.497291088104248
    6. ' +=' → logprob: -3.622291088104248
    7. '   ' → logprob: -3.872291088104248
    8. '_' → logprob: -3.997291088104248
    9. ' can' → logprob: -4.747291088104248
    10. ' =
' → logprob: -4.747291088104248

Token 932: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22772857546806335
    2. ' max' → logprob: -2.4777286052703857
    3. 'max' → logprob: -3.3527286052703857
    4. ' #' → logprob: -4.227728366851807
    5. ' len' → logprob: -4.602728366851807
    6. '#' → logprob: -4.602728366851807
    7. '1' → logprob: -4.852728366851807
    8. '```' → logprob: -4.977728366851807
    9. ' not' → logprob: -5.227728366851807
    10. '    ' → logprob: -5.227728366851807

Token 933: ' maximum' (ID: 10562)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4230473041534424
    2. ' maximum' → logprob: -1.4230473041534424
    3. 'max' → logprob: -1.7980473041534424
    4. '#' → logprob: -2.5480473041534424
    5. 'maximum' → logprob: -2.9230473041534424
    6. ' maximal' → logprob: -3.2980473041534424
    7. '#
' → logprob: -3.5480473041534424
    8. ' #' → logprob: -3.9230473041534424
    9. ' #
' → logprob: -3.9230473041534424
    10. ' same' → logprob: -4.548047065734863

Token 934: ' clique' (ID: 60301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6477000713348389
    2. ' _' → logprob: -1.7727000713348389
    3. '_size' → logprob: -2.147700071334839
    4. '_overlap' → logprob: -3.022700071334839
    5. ' number' → logprob: -3.397700071334839
    6. '   ' → logprob: -3.772700071334839
    7. '_number' → logprob: -4.147700309753418
    8. '_count' → logprob: -4.522700309753418
    9. 'number' → logprob: -4.897700309753418
    10. '
' → logprob: -5.147700309753418

Token 935: ' size' (ID: 2349)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.9857132434844971
    2. '   ' → logprob: -1.110713243484497
    3. '_' → logprob: -2.235713243484497
    4. 'size' → logprob: -2.610713243484497
    5. ' size' → logprob: -3.360713243484497
    6. ' =' → logprob: -3.860713243484497
    7. ')' → logprob: -4.610713005065918
    8. '[' → logprob: -4.735713005065918
    9. ' _' → logprob: -5.485713005065918
    10. '[
' → logprob: -5.485713005065918

Token 936: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03230636566877365
    2. ' =' → logprob: -3.907306432723999
    3. ',' → logprob: -6.28230619430542
    4. '=' → logprob: -6.53230619430542
    5. '
' → logprob: -6.65730619430542
    6. ':' → logprob: -7.28230619430542
    7. 'import' → logprob: -7.53230619430542
    8. ')' → logprob: -7.65730619430542
    9. ':
' → logprob: -7.65730619430542
    10. '```' → logprob: -7.65730619430542

Token 937: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.099398173391819
    2. 'interval' → logprob: -2.599398136138916
    3. 'heap' → logprob: -5.349398136138916
    4. '
' → logprob: -5.599398136138916
    5. 'import' → logprob: -5.724398136138916
    6. '    
' → logprob: -5.849398136138916
    7. 'starts' → logprob: -6.599398136138916
    8. 'end' → logprob: -6.724398136138916
    9. 'sorted' → logprob: -7.599398136138916
    10. 'ends' → logprob: -7.724398136138916

Token 938: ' #
' (ID: 21888)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.09306497871875763
    2. '   ' → logprob: -2.468065023422241
    3. '
' → logprob: -6.343064785003662
    4. 'starts' → logprob: -7.468064785003662
    5. 'heap' → logprob: -7.843064785003662
    6. 'import' → logprob: -8.21806526184082
    7. ' intervals' → logprob: -8.21806526184082
    8. '    
' → logprob: -8.34306526184082
    9. '#' → logprob: -8.34306526184082
    10. '```' → logprob: -9.34306526184082

Token 939: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18594522774219513
    2. 'interval' → logprob: -1.8109452724456787
    3. '
' → logprob: -6.1859450340271
    4. 'import' → logprob: -7.0609450340271
    5. '    
' → logprob: -7.0609450340271
    6. '#' → logprob: -7.1859450340271
    7. 'from' → logprob: -7.4359450340271
    8. '```' → logprob: -7.6859450340271
    9. ' intervals' → logprob: -8.060945510864258
    10. 'sorted' → logprob: -9.560945510864258

Token 940: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.10664977878332138
    2. '   ' → logprob: -2.481649875640869
    3. '#' (adapté à ' #') → logprob: -5.106649875640869
    4. 'ends' → logprob: -5.356649875640869
    5. 'starts' → logprob: -5.606649875640869
    6. 'end' → logprob: -6.981649875640869
    7. 'import' → logprob: -7.356649875640869
    8. 'heap' → logprob: -7.606649875640869
    9. ' intervals' → logprob: -8.606649398803711
    10. '
' → logprob: -8.606649398803711

Token 941: ' Since' (ID: 12265)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.024440823122859
    2. '   ' → logprob: -4.399440765380859
    3. 'ends' → logprob: -5.399440765380859
    4. 'starts' → logprob: -6.399440765380859
    5. 'heap' → logprob: -6.399440765380859
    6. '#' → logprob: -6.524440765380859
    7. 'end' → logprob: -6.899440765380859
    8. 'import' → logprob: -7.149440765380859
    9. '
' → logprob: -8.89944076538086
    10. 'sorted' → logprob: -9.14944076538086

Token 942: ' all' (ID: 722)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2074095904827118
    2. ' intervals' → logprob: -1.9574096202850342
    3. '   ' → logprob: -3.582409620285034
    4. 'import' → logprob: -5.582409381866455
    5. 's' → logprob: -5.707409381866455
    6. 'n' → logprob: -5.707409381866455
    7. '#' → logprob: -6.207409381866455
    8. ' n' → logprob: -6.582409381866455
    9. 'heap' → logprob: -6.832409381866455
    10. 'the' → logprob: -7.457409381866455

Token 943: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6869866847991943
    2. 'interval' → logprob: -0.8119866847991943
    3. '   ' → logprob: -3.4369866847991943
    4. '#' → logprob: -5.311986923217773
    5. '(interval' → logprob: -5.686986923217773
    6. '_inter' → logprob: -5.686986923217773
    7. '_' → logprob: -6.686986923217773
    8. ' =' → logprob: -7.436986923217773
    9. '[' → logprob: -7.561986923217773
    10. 'the' → logprob: -7.686986923217773

Token 944: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5562586784362793
    2. ' overlap' → logprob: -2.0562586784362793
    3. 'are' → logprob: -2.4312586784362793
    4. ' that' → logprob: -2.4312586784362793
    5. ' are' → logprob: -2.5562586784362793
    6. 'end' → logprob: -2.5562586784362793
    7. 'over' → logprob: -2.9312586784362793
    8. ' end' → logprob: -3.1812586784362793
    9. '[' → logprob: -3.1812586784362793
    10. 'that' → logprob: -3.3062586784362793

Token 945: ' half' (ID: 6375)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.227770209312439
    2. '[' → logprob: -1.852770209312439
    3. 'sorted' → logprob: -2.1027703285217285
    4. 'closed' → logprob: -2.4777703285217285
    5. '   ' → logprob: -2.4777703285217285
    6. '[start' → logprob: -2.9777703285217285
    7. ' [' → logprob: -3.2277703285217285
    8. ' guaranteed' → logprob: -3.7277703285217285
    9. ' closed' → logprob: -3.8527703285217285
    10. 'already' → logprob: -4.3527703285217285

Token 946: '-open' (ID: 48885)
  Prédit: '-open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-open' → logprob: -0.07695451378822327
    2. '-' → logprob: -2.8269546031951904
    3. '_open' → logprob: -4.826954364776611
    4. 'open' → logprob: -5.451954364776611
    5. '_' → logprob: -7.076954364776611
    6. '[' → logprob: -7.951954364776611
    7. '       ' → logprob: -8.32695484161377
    8. '   ' → logprob: -8.32695484161377
    9. ')' → logprob: -8.70195484161377
    10. ']' → logprob: -9.32695484161377

Token 947: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21296295523643494
    2. '```' → logprob: -3.5879628658294678
    3. ' intervals' → logprob: -3.7129628658294678
    4. '_' → logprob: -3.7129628658294678
    5. ',' → logprob: -3.8379628658294678
    6. ')' → logprob: -4.087963104248047
    7. ')
' → logprob: -4.837963104248047
    8. ']' → logprob: -4.962963104248047
    9. 'interval' → logprob: -4.962963104248047
    10. '_inter' → logprob: -5.087963104248047

Token 948: ' practice' (ID: 8248)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5684980154037476
    2. ')' → logprob: -2.193498134613037
    3. 'the' → logprob: -2.693498134613037
    4. ' [' → logprob: -3.568498134613037
    5. '   ' → logprob: -3.818498134613037
    6. 'time' → logprob: -3.943498134613037
    7. ' ' → logprob: -3.943498134613037
    8. '[start' → logprob: -4.068498134613037
    9. '[b' → logprob: -4.193498134613037
    10. 'range' → logprob: -4.193498134613037

Token 949: '?' (ID: 30)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5193814039230347
    2. '[' → logprob: -2.144381523132324
    3. ',' → logprob: -2.644381523132324
    4. ':' → logprob: -3.019381523132324
    5. ')' → logprob: -4.144381523132324
    6. '_' → logprob: -4.144381523132324
    7. '```' → logprob: -4.519381523132324
    8. ' intervals' → logprob: -4.769381523132324
    9. '):' → logprob: -4.894381523132324
    10. '[
' → logprob: -4.894381523132324

Token 950: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19621765613555908
    2. '[' → logprob: -3.1962175369262695
    3. '#' → logprob: -3.5712175369262695
    4. ')' → logprob: -3.6962175369262695
    5. '[
' → logprob: -4.1962175369262695
    6. ']' → logprob: -4.8212175369262695
    7. '```' → logprob: -4.8212175369262695
    8. 'def' → logprob: -5.1962175369262695
    9. '    
' → logprob: -5.5712175369262695
    10. '
' → logprob: -5.6962175369262695

Token 951: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.156218409538269
    2. ' intervals' → logprob: -1.656218409538269
    3. '_' → logprob: -1.781218409538269
    4. ' next' → logprob: -1.906218409538269
    5. ' maximum' → logprob: -4.031218528747559
    6. ' max' → logprob: -4.031218528747559
    7. ' current' → logprob: -4.156218528747559
    8. 'max' → logprob: -4.406218528747559
    9. '[' → logprob: -4.781218528747559
    10. 'interval' → logprob: -4.906218528747559

Token 952: ' doesn't' (ID: 8740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0370079278945923
    2. '#' → logprob: -2.0370078086853027
    3. 'def' → logprob: -2.6620078086853027
    4. '```' → logprob: -2.6620078086853027
    5. ' continues' → logprob: -2.7870078086853027
    6. ')' → logprob: -2.9120078086853027
    7. '[' → logprob: -3.5370078086853027
    8. '_' → logprob: -3.6620078086853027
    9. '
' → logprob: -3.9120078086853027
    10. ':' → logprob: -3.9120078086853027

Token 953: ' says' (ID: 5003)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.051269292831421
    2. 'continue' → logprob: -1.176269292831421
    3. '```' → logprob: -2.551269292831421
    4. 'end' → logprob: -3.301269292831421
    5. 'consider' → logprob: -3.301269292831421
    6. '   ' → logprob: -3.301269292831421
    7. ' continue' → logprob: -3.801269292831421
    8. 'have' → logprob: -4.05126953125
    9. 'equal' → logprob: -4.67626953125
    10. 'return' → logprob: -4.67626953125

Token 954: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6142868399620056
    2. '```' → logprob: -1.8642868995666504
    3. 'def' → logprob: -3.1142868995666504
    4. '_' → logprob: -3.2392868995666504
    5. ''' → logprob: -3.3642868995666504
    6. ')' → logprob: -3.6142868995666504
    7. '[' → logprob: -4.23928689956665
    8. ' =' → logprob: -4.23928689956665
    9. '...' → logprob: -4.73928689956665
    10. ',' → logprob: -4.98928689956665

Token 955: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2865319550037384
    2. '#' → logprob: -1.911531925201416
    3. '```' → logprob: -3.661531925201416
    4. ' but' → logprob: -4.286531925201416
    5. ' so' → logprob: -4.411531925201416
    6. '_' → logprob: -5.286531925201416
    7. 'interval' → logprob: -5.286531925201416
    8. ' intervals' → logprob: -5.286531925201416
    9. '    
' → logprob: -5.661531925201416
    10. ' #' → logprob: -5.786531925201416

Token 956: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35980135202407837
    2. '#' → logprob: -2.3598012924194336
    3. 'interval' → logprob: -2.8598012924194336
    4. ' intervals' → logprob: -2.8598012924194336
    5. '```' → logprob: -3.8598012924194336
    6. ' the' → logprob: -4.234801292419434
    7. 'the' → logprob: -4.359801292419434
    8. ' s' → logprob: -4.734801292419434
    9. 's' → logprob: -4.859801292419434
    10. ' for' → logprob: -4.984801292419434

Token 957: ' treat' (ID: 4665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6630434989929199
    2. '
' → logprob: -1.53804349899292
    3. ' can' → logprob: -2.91304349899292
    4. ' assume' → logprob: -3.03804349899292
    5. 'continue' → logprob: -3.28804349899292
    6. '#' → logprob: -3.53804349899292
    7. ' need' → logprob: -3.78804349899292
    8. '```' → logprob: -4.28804349899292
    9. ' =' → logprob: -4.41304349899292
    10. ' have' → logprob: -5.28804349899292

Token 958: ' from' (ID: 591)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.28114062547683716
    2. ' the' → logprob: -2.9061405658721924
    3. '```' → logprob: -3.0311405658721924
    4. '   ' → logprob: -3.1561405658721924
    5. ' them' → logprob: -3.2811405658721924
    6. '_' → logprob: -4.0311408042907715
    7. 'interval' → logprob: -4.1561408042907715
    8. 'the' → logprob: -4.2811408042907715
    9. ''' → logprob: -6.0311408042907715
    10. 'them' → logprob: -6.1561408042907715

Token 959: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.080575942993164
    2. ' here' → logprob: -2.205575942993164
    3. ' the' → logprob: -2.330575942993164
    4. '0' → logprob: -2.705575942993164
    5. '   ' → logprob: -2.705575942993164
    6. 'the' → logprob: -2.830575942993164
    7. '_' → logprob: -2.955575942993164
    8. ')' → logprob: -3.955575942993164
    9. 'here' → logprob: -3.955575942993164
    10. ' ' → logprob: -4.080575942993164

Token 960: '_i' (ID: 10853)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9690371155738831
    2. '[' → logprob: -2.3440370559692383
    3. ' space' → logprob: -2.5940370559692383
    4. '_' → logprob: -2.8440370559692383
    5. 'def' → logprob: -3.0940370559692383
    6. ''' → logprob: -3.4690370559692383
    7. '[start' → logprob: -3.7190370559692383
    8. ' ' → logprob: -3.8440370559692383
    9. 'to' → logprob: -3.9690370559692383
    10. 'space' → logprob: -3.9690370559692383

Token 961: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026693863794207573
    2. ' ,' → logprob: -4.276693820953369
    3. '+' → logprob: -5.151693820953369
    4. ' to' → logprob: -6.026693820953369
    5. ',
' → logprob: -7.276693820953369
    6. '[' → logprob: -7.651693820953369
    7. '   ' → logprob: -7.776693820953369
    8. 'to' → logprob: -8.026694297790527
    9. ' +' → logprob: -8.151694297790527
    10. ' ' → logprob: -8.276694297790527

Token 962: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1815113127231598
    2. 'b' → logprob: -1.8065112829208374
    3. ' a' → logprob: -7.806511402130127
    4. ' ' → logprob: -8.056510925292969
    5. 'a' → logprob: -8.181510925292969
    6. '1' → logprob: -8.681510925292969
    7. '   ' → logprob: -8.806510925292969
    8. '    ' → logprob: -8.931510925292969
    9. ' (' → logprob: -9.681510925292969
    10. '```' → logprob: -10.056510925292969

Token 963: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39110541343688965
    2. '_i' → logprob: -1.3911054134368896
    3. ')' → logprob: -2.8911054134368896
    4. '_)' → logprob: -5.266105651855469
    5. 'i' → logprob: -6.016105651855469
    6. ']' → logprob: -6.141105651855469
    7. ')_' → logprob: -6.516105651855469
    8. '_]' → logprob: -6.641105651855469
    9. '])' → logprob: -6.891105651855469
    10. '+' → logprob: -6.891105651855469

Token 964: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1850706338882446
    2. ')' → logprob: -1.6850706338882446
    3. ' =' → logprob: -1.9350706338882446
    4. '```' → logprob: -2.935070514678955
    5. '_' → logprob: -3.435070514678955
    6. '
' → logprob: -3.435070514678955
    7. ')
' → logprob: -3.685070514678955
    8. ' intervals' → logprob: -4.060070514678955
    9. '):
' → logprob: -4.060070514678955
    10. '):' → logprob: -4.060070514678955

Token 965: ' [' (ID: 723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3438973426818848
    2. '   ' → logprob: -1.3438973426818848
    3. ' a' → logprob: -2.0938973426818848
    4. ' ' → logprob: -2.5938973426818848
    5. '0' → logprob: -3.2188973426818848
    6. '    ' → logprob: -3.2188973426818848
    7. '```' → logprob: -3.7188973426818848
    8. ' [' → logprob: -3.8438973426818848
    9. ' intervals' → logprob: -3.9688973426818848
    10. ' inclusive' → logprob: -4.093897342681885

Token 966: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05173541605472565
    2. ',' → logprob: -3.3017354011535645
    3. ')' → logprob: -4.8017354011535645
    4. ' a' → logprob: -6.1767354011535645
    5. '   ' → logprob: -6.4267354011535645
    6. ' ,' → logprob: -7.6767354011535645
    7. ' (' → logprob: -8.176735877990723
    8. ',a' → logprob: -8.551735877990723
    9. '(a' → logprob: -8.926735877990723
    10. '),' → logprob: -9.426735877990723

Token 967: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.3490193486213684
    2. ',' → logprob: -1.3490192890167236
    3. '_,' → logprob: -3.5990192890167236
    4. '   ' → logprob: -5.974019527435303
    5. ',_' → logprob: -6.724019527435303
    6. '_a' → logprob: -7.349019527435303
    7. ' ,' → logprob: -7.474019527435303
    8. '```' → logprob: -7.974019527435303
    9. 'i' → logprob: -8.099019050598145
    10. '_' → logprob: -8.099019050598145

Token 968: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004674099385738373
    2. ' ,' → logprob: -6.379673957824707
    3. ',b' → logprob: -7.004673957824707
    4. '_,' → logprob: -7.129673957824707
    5. '   ' → logprob: -7.879673957824707
    6. ',a' → logprob: -8.504673957824707
    7. ',
' → logprob: -8.754673957824707
    8. '```' → logprob: -9.254673957824707
    9. '
' → logprob: -9.504673957824707
    10. ',n' → logprob: -9.754673957824707

Token 969: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030928023159503937
    2. ' b' → logprob: -3.655928134918213
    3. ',' → logprob: -5.905928134918213
    4. '   ' → logprob: -6.905928134918213
    5. ',b' → logprob: -7.405928134918213
    6. '1' → logprob: -9.530927658081055
    7. '    ' → logprob: -9.655927658081055
    8. '0' → logprob: -10.155927658081055
    9. ' ' → logprob: -11.280927658081055
    10. 'a' → logprob: -11.530927658081055

Token 970: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04577992483973503
    2. ')_' → logprob: -4.420779705047607
    3. ')' → logprob: -4.545779705047607
    4. ',' → logprob: -4.795779705047607
    5. '_' → logprob: -5.045779705047607
    6. '_)' → logprob: -6.170779705047607
    7. '   ' → logprob: -6.295779705047607
    8. 'i' → logprob: -6.545779705047607
    9. ']_' → logprob: -7.795779705047607
    10. '_,' → logprob: -8.045780181884766

Token 971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2817041873931885
    2. ']' → logprob: -1.6567041873931885
    3. ')]' → logprob: -3.6567041873931885
    4. '])' → logprob: -4.406703948974609
    5. '   ' → logprob: -5.906703948974609
    6. ')
' → logprob: -5.906703948974609
    7. '+' → logprob: -6.406703948974609
    8. ')`' → logprob: -6.406703948974609
    9. ')])' → logprob: -6.406703948974609
    10. '))' → logprob: -7.156703948974609

Token 972: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.32717186212539673
    2. '   ' → logprob: -1.327171802520752
    3. '
' → logprob: -4.827171802520752
    4. ' intervals' → logprob: -5.952171802520752
    5. '```' → logprob: -6.702171802520752
    6. 'import' → logprob: -7.452171802520752
    7. '    
' → logprob: -7.952171802520752
    8. '``' → logprob: -8.70217227935791
    9. 'starts' → logprob: -9.20217227935791
    10. '(interval' → logprob: -9.20217227935791

Token 973: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7159578204154968
    2. 'interval' → logprob: -0.7159578204154968
    3. '
' → logprob: -4.2159576416015625
    4. 'import' → logprob: -6.5909576416015625
    5. ' intervals' → logprob: -6.7159576416015625
    6. 'heap' → logprob: -7.0909576416015625
    7. '    
' → logprob: -7.0909576416015625
    8. 'starts' → logprob: -7.0909576416015625
    9. '```' → logprob: -7.5909576416015625
    10. '#' → logprob: -7.9659576416015625

Token 974: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03681911155581474
    2. '   ' → logprob: -3.4118192195892334
    3. '
' → logprob: -7.286818981170654
    4. '```' → logprob: -7.411818981170654
    5. ' intervals' → logprob: -7.536818981170654
    6. '#' → logprob: -7.786818981170654
    7. 'import' → logprob: -8.411819458007812
    8. 'heap' → logprob: -8.411819458007812
    9. 'sorted' → logprob: -9.286819458007812
    10. '    
' → logprob: -9.536819458007812

Token 975: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6817476749420166
    2. '   ' → logprob: -0.8067476749420166
    3. 'ends' → logprob: -4.1817474365234375
    4. '#' (adapté à ' #') → logprob: -4.8067474365234375
    5. 'import' → logprob: -5.0567474365234375
    6. 'starts' → logprob: -5.1817474365234375
    7. '
' → logprob: -5.3067474365234375
    8. 'heap' → logprob: -5.5567474365234375
    9. 'end' → logprob: -6.5567474365234375
    10. '    
' → logprob: -7.4317474365234375

Token 976: ' Implement' (ID: 32889)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.024211732670664787
    2. '   ' → logprob: -3.7742116451263428
    3. '
' → logprob: -8.399211883544922
    4. '#' → logprob: -8.774211883544922
    5. 'import' → logprob: -8.774211883544922
    6. 'heap' → logprob: -8.899211883544922
    7. ' intervals' → logprob: -9.649211883544922
    8. '    
' → logprob: -10.274211883544922
    9. 'sorted' → logprob: -10.274211883544922
    10. '```' → logprob: -10.274211883544922

Token 977: 'ing' (ID: 289)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.011072938330471516
    2. '```' → logprob: -5.386073112487793
    3. '
' → logprob: -5.886073112487793
    4. '   ' → logprob: -6.386073112487793
    5. ' intervals' → logprob: -7.011073112487793
    6. 'import' → logprob: -8.136073112487793
    7. '``' → logprob: -8.261073112487793
    8. 'heap' → logprob: -9.011073112487793
    9. 'def' → logprob: -9.261073112487793
    10. '#' → logprob: -9.636073112487793

Token 978: ' the' (ID: 290)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.9262215495109558
    2. '   ' → logprob: -1.0512216091156006
    3. 'interval' → logprob: -1.5512216091156006
    4. '
' → logprob: -3.6762216091156006
    5. '```' → logprob: -5.5512213706970215
    6. 'import' → logprob: -5.6762213706970215
    7. 'def' → logprob: -6.0512213706970215
    8. 'heap' → logprob: -6.1762213706970215
    9. '    
' → logprob: -6.9262213706970215
    10. 'sorted' → logprob: -7.1762213706970215

Token 979: ' clique' (ID: 60301)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5252795815467834
    2. ' intervals' → logprob: -1.2752795219421387
    3. 'following' → logprob: -3.0252795219421387
    4. 'code' → logprob: -3.2752795219421387
    5. ' following' → logprob: -4.275279521942139
    6. ' code' → logprob: -4.650279521942139
    7. 'heap' → logprob: -5.150279521942139
    8. 'def' → logprob: -6.025279521942139
    9. 'rest' → logprob: -6.150279521942139
    10. 'same' → logprob: -6.400279521942139

Token 980: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.33107873797416687
    2. ' size' → logprob: -2.2060787677764893
    3. 's' → logprob: -3.0810787677764893
    4. '_size' → logprob: -3.2060787677764893
    5. '
' → logprob: -3.9560787677764893
    6. 'sizes' → logprob: -3.9560787677764893
    7. '   ' → logprob: -4.08107852935791
    8. '_sizes' → logprob: -5.33107852935791
    9. 'max' → logprob: -5.95607852935791
    10. '       ' → logprob: -5.95607852935791

Token 981: ':
' (ID: 734)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.5984345078468323
    2. 'interval' → logprob: -1.0984344482421875
    3. '   ' → logprob: -3.2234344482421875
    4. ' =' → logprob: -3.2234344482421875
    5. '
' → logprob: -4.4734344482421875
    6. ' by' → logprob: -5.0984344482421875
    7. '(interval' → logprob: -5.5984344482421875
    8. ':
' → logprob: -5.9734344482421875
    9. 's' → logprob: -6.0984344482421875
    10. 'import' → logprob: -6.4734344482421875

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19160111248493195
    2. 'interval' → logprob: -1.9416011571884155
    3. ' intervals' → logprob: -3.566601037979126
    4. '```' → logprob: -6.566601276397705
    5. '
' → logprob: -7.316601276397705
    6. '    
' → logprob: -8.441600799560547
    7. '``' → logprob: -9.441600799560547
    8. 'import' → logprob: -9.441600799560547
    9. 'heap' → logprob: -9.816600799560547
    10. 'sorted' → logprob: -10.566600799560547

Token 983: ' #
' (ID: 21888)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3594897985458374
    2. '   ' → logprob: -1.2344897985458374
    3. ' intervals' → logprob: -4.609489917755127
    4. 'import' → logprob: -7.984489917755127
    5. '
' → logprob: -8.109489440917969
    6. 'end' → logprob: -9.484489440917969
    7. '```' → logprob: -9.609489440917969
    8. 'heap' → logprob: -9.859489440917969
    9. 'ends' → logprob: -10.359489440917969
    10. '    
' → logprob: -10.484489440917969

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10123149305582047
    2. 'interval' → logprob: -2.351231575012207
    3. ' intervals' → logprob: -7.476231575012207
    4. '```' → logprob: -8.101231575012207
    5. '
' → logprob: -9.351231575012207
    6. 'import' → logprob: -10.976231575012207
    7. '    
' → logprob: -11.351231575012207
    8. 'def' → logprob: -11.476231575012207
    9. '``' → logprob: -11.601231575012207
    10. 'sorted' → logprob: -12.101231575012207

Token 985: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4765198826789856
    2. '   ' → logprob: -0.9765198826789856
    3. ' intervals' → logprob: -6.22652006149292
    4. '
' → logprob: -8.226519584655762
    5. '```' → logprob: -9.476519584655762
    6. 'import' → logprob: -10.476519584655762
    7. 'sorted' → logprob: -10.726519584655762
    8. '    
' → logprob: -10.726519584655762
    9. '``' → logprob: -11.101519584655762
    10. '#' (adapté à ' #') → logprob: -11.351519584655762

Token 986: ' We' (ID: 1416)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0013135707704350352
    2. '   ' → logprob: -7.87631368637085
    3. ' intervals' → logprob: -8.126313209533691
    4. 'heap' → logprob: -8.501313209533691
    5. '#' → logprob: -8.751313209533691
    6. '
' → logprob: -9.251313209533691
    7. 'import' → logprob: -9.501313209533691
    8. 'def' → logprob: -10.876313209533691
    9. 'sorted' → logprob: -10.876313209533691
    10. 'from' → logprob: -11.126313209533691

Token 987: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4891194105148315
    2. ' can' → logprob: -1.8641194105148315
    3. '#' → logprob: -2.114119529724121
    4. ' =' → logprob: -2.489119529724121
    5. '.append' → logprob: -2.489119529724121
    6. 'import' → logprob: -2.864119529724121
    7. '.sort' → logprob: -3.239119529724121
    8. ' need' → logprob: -3.614119529724121
    9. '
' → logprob: -3.614119529724121
    10. 'continue' → logprob: -3.739119529724121

Token 988: ' find' (ID: 1646)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.24806882441043854
    2. 'use' → logprob: -2.1230688095092773
    3. 'process' → logprob: -3.7480688095092773
    4. '   ' → logprob: -3.7480688095092773
    5. 'implement' → logprob: -4.623068809509277
    6. 'maint' → logprob: -4.873068809509277
    7. ' sort' → logprob: -5.123068809509277
    8. 'iterate' → logprob: -5.623068809509277
    9. '```' → logprob: -5.623068809509277
    10. 'import' → logprob: -5.748068809509277

Token 989: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3536486625671387
    2. '   ' → logprob: -1.9786486625671387
    3. 'interval' → logprob: -1.9786486625671387
    4. 'a' → logprob: -2.2286486625671387
    5. ' the' → logprob: -2.4786486625671387
    6. 'max' → logprob: -2.9786486625671387
    7. ' intervals' → logprob: -2.9786486625671387
    8. 'ends' → logprob: -3.3536486625671387
    9. 's' → logprob: -3.6036486625671387
    10. 'end' → logprob: -4.353648662567139

Token 990: ' maximum' (ID: 10562)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.26796939969062805
    2. ' intervals' → logprob: -2.6429693698883057
    3. 'ends' → logprob: -3.0179693698883057
    4. 'heap' → logprob: -3.6429693698883057
    5. 'max' → logprob: -4.017969608306885
    6. 'import' → logprob: -4.267969608306885
    7. ' ends' → logprob: -4.642969608306885
    8. '#' → logprob: -4.892969608306885
    9. 'next' → logprob: -4.892969608306885
    10. 'end' → logprob: -5.017969608306885

Token 991: ' clique' (ID: 60301)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -1.3207167387008667
    2. 'end' → logprob: -1.4457167387008667
    3. 'heap' → logprob: -1.9457167387008667
    4. '   ' → logprob: -2.1957168579101562
    5. 'size' → logprob: -2.3207168579101562
    6. ' ends' → logprob: -3.1957168579101562
    7. '_' → logprob: -3.6957168579101562
    8. 'over' → logprob: -4.445716857910156
    9. '_end' → logprob: -4.820716857910156
    10. ' size' → logprob: -5.070716857910156

Token 992: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4557131826877594
    2. ' size' → logprob: -1.205713152885437
    3. '_size' → logprob: -2.9557132720947266
    4. '   ' → logprob: -4.455713272094727
    5. ' =' → logprob: -6.205713272094727
    6. '=' → logprob: -7.580713272094727
    7. '_' → logprob: -9.330713272094727
    8. '#' → logprob: -10.080713272094727
    9. '    
' → logprob: -10.330713272094727
    10. '  ' → logprob: -10.705713272094727

Token 993: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7919049263000488
    2. ' by' → logprob: -1.4169049263000488
    3. ' =' → logprob: -2.166904926300049
    4. 'interval' → logprob: -2.541904926300049
    5. ' intervals' → logprob: -2.791904926300049
    6. 'by' → logprob: -4.041904926300049
    7. '=' → logprob: -5.041904926300049
    8. '
' → logprob: -5.041904926300049
    9. 'import' → logprob: -5.916904926300049
    10. '```' → logprob: -6.166904926300049

Token 994: ' sorting' (ID: 51375)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6952109932899475
    2. 'sorting' → logprob: -0.8202109932899475
    3. ' sorting' → logprob: -3.6952109336853027
    4. ' intervals' → logprob: -4.070210933685303
    5. '   ' → logprob: -4.320210933685303
    6. 'import' → logprob: -6.445210933685303
    7. '```' → logprob: -6.945210933685303
    8. 'heap' → logprob: -7.570210933685303
    9. 'events' → logprob: -7.695210933685303
    10. 'def' → logprob: -7.945210933685303

Token 995: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.007466420065611601
    2. '(interval' → logprob: -5.0074663162231445
    3. ' intervals' → logprob: -7.2574663162231445
    4. 'by' → logprob: -10.382466316223145
    5. '   ' → logprob: -11.257466316223145
    6. '```' → logprob: -13.757466316223145
    7. ' by' → logprob: -14.382466316223145
    8. 'Intervals' → logprob: -16.50746726989746
    9. 'the' → logprob: -16.63246726989746
    10. 'end' → logprob: -16.88246726989746

Token 996: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.019146375358104706
    2. ' by' → logprob: -4.51914644241333
    3. '   ' → logprob: -5.89414644241333
    4. ',' → logprob: -6.26914644241333
    5. '(interval' → logprob: -6.89414644241333
    6. '```' → logprob: -7.01914644241333
    7. '=' → logprob: -7.64414644241333
    8. 'interval' → logprob: -7.64414644241333
    9. ' =' → logprob: -8.894145965576172
    10. 'def' → logprob: -9.769145965576172

Token 997: ' their' (ID: 1043)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05375410616397858
    2. ' start' → logprob: -3.5537540912628174
    3. 'end' → logprob: -4.0537543296813965
    4. 'b' → logprob: -6.0537543296813965
    5. 'a' → logprob: -6.1787543296813965
    6. '   ' → logprob: -7.0537543296813965
    7. ' end' → logprob: -7.9287543296813965
    8. 'their' → logprob: -8.303753852844238
    9. ' their' → logprob: -8.553753852844238
    10. ' a' → logprob: -9.428753852844238

Token 998: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.27668076753616333
    2. 'end' → logprob: -1.7766807079315186
    3. ' start' → logprob: -2.7766807079315186
    4. ' end' → logprob: -4.776680946350098
    5. 'b' → logprob: -6.401680946350098
    6. '   ' → logprob: -9.401680946350098
    7. 'begin' → logprob: -10.276680946350098
    8. '```' → logprob: -10.776680946350098
    9. ' b' → logprob: -11.026680946350098
    10. '_start' → logprob: -11.651680946350098

Token 999: ',' (ID: 11)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.18845632672309875
    2. '_time' → logprob: -2.1884562969207764
    3. ' time' → logprob: -3.8134562969207764
    4. 'times' → logprob: -4.4384565353393555
    5. '
' → logprob: -5.5634565353393555
    6. ',' → logprob: -5.6884565353393555
    7. '```' → logprob: -5.6884565353393555
    8. 'point' → logprob: -5.6884565353393555
    9. '_times' → logprob: -5.6884565353393555
    10. ' times' → logprob: -5.9384565353393555

Token 1000: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44100481271743774
    2. ' then' → logprob: -1.941004753112793
    3. 'end' → logprob: -2.941004753112793
    4. 'interval' → logprob: -2.941004753112793
    5. 'then' → logprob: -3.191004753112793
    6. ' intervals' → logprob: -4.191004753112793
    7. '#' → logprob: -4.316004753112793
    8. 'and' → logprob: -4.566004753112793
    9. ' and' → logprob: -4.816004753112793
    10. 'b' → logprob: -5.191004753112793

Token 1001: ' maintaining' (ID: 26513)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.22397883236408234
    2. 'using' → logprob: -2.0989787578582764
    3. '   ' → logprob: -3.3489787578582764
    4. 'import' → logprob: -4.2239789962768555
    5. 'p' → logprob: -4.7239789962768555
    6. ' using' → logprob: -5.2239789962768555
    7. 'tracking' → logprob: -5.3489789962768555
    8. 'keeping' → logprob: -5.5989789962768555
    9. ' maintaining' → logprob: -5.8489789962768555
    10. '```' → logprob: -7.3489789962768555

Token 1002: ' their' (ID: 1043)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.058893103152513504
    2. ' a' → logprob: -2.9338932037353516
    3. '   ' → logprob: -5.683893203735352
    4. 'import' → logprob: -7.558893203735352
    5. '       ' → logprob: -10.308893203735352
    6. 'end' → logprob: -10.933893203735352
    7. '```' → logprob: -11.808893203735352
    8. 'an' → logprob: -11.933893203735352
    9. ' an' → logprob: -12.433893203735352
    10. '           ' → logprob: -13.183893203735352

Token 1003: ' min' (ID: 1349)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.5065190196037292
    2. ' ends' → logprob: -1.506519079208374
    3. 'end' → logprob: -1.881519079208374
    4. 'heap' → logprob: -4.381518840789795
    5. '   ' → logprob: -5.506518840789795
    6. ' end' → logprob: -6.006518840789795
    7. 'min' → logprob: -6.131518840789795
    8. ' heap' → logprob: -6.756518840789795
    9. '       ' → logprob: -8.131519317626953
    10. ' min' → logprob: -8.881519317626953

Token 1004: ' end' (ID: 1268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8232815861701965
    2. '_end' → logprob: -1.3232815265655518
    3. '_' → logprob: -2.4482815265655518
    4. 'end' → logprob: -2.5732815265655518
    5. 'heap' → logprob: -2.8232815265655518
    6. '_heap' → logprob: -2.8232815265655518
    7. '-' → logprob: -5.323281764984131
    8. '       ' → logprob: -5.573281764984131
    9. ' end' → logprob: -6.573281764984131
    10. ' heap' → logprob: -7.073281764984131

Token 1005: ' in' (ID: 306)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.21694490313529968
    2. 'heap' → logprob: -2.841944932937622
    3. 'in' → logprob: -3.091944932937622
    4. ' time' → logprob: -3.716944932937622
    5. ' in' → logprob: -3.841944932937622
    6. 'point' → logprob: -4.091944694519043
    7. '   ' → logprob: -4.966944694519043
    8. '```' → logprob: -5.091944694519043
    9. '_time' → logprob: -5.216944694519043
    10. 'times' → logprob: -6.091944694519043

Token 1006: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03896133229136467
    2. ' a' → logprob: -3.288961410522461
    3. '   ' → logprob: -7.913961410522461
    4. 'import' → logprob: -7.913961410522461
    5. 'heap' → logprob: -8.663961410522461
    6. '```' → logprob: -11.788961410522461
    7. 'the' → logprob: -12.788961410522461
    8. ' heap' → logprob: -13.538961410522461
    9. 's' → logprob: -13.913961410522461
    10. ' the' → logprob: -14.413961410522461

Token 1007: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.030332235619425774
    2. 'min' → logprob: -3.530332326889038
    3. ' heap' → logprob: -8.280332565307617
    4. 'import' → logprob: -8.280332565307617
    5. 'list' → logprob: -10.405332565307617
    6. 'priority' → logprob: -10.905332565307617
    7. '```' → logprob: -11.905332565307617
    8. ' min' → logprob: -12.655332565307617
    9. '   ' → logprob: -12.780332565307617
    10. '[min' → logprob: -12.905332565307617

Token 1008: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0128402709960938
    2. 'q' → logprob: -1.3878402709960938
    3. '   ' → logprob: -1.7628402709960938
    4. ',' → logprob: -2.6378402709960938
    5. 'heap' → logprob: -3.8878402709960938
    6. ' (' → logprob: -4.137840270996094
    7. ' and' → logprob: -4.387840270996094
    8. 's' → logprob: -4.387840270996094
    9. 'while' → logprob: -5.012840270996094
    10. '=' → logprob: -5.137840270996094

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07478102296590805
    2. ' intervals' → logprob: -3.4497809410095215
    3. '```' → logprob: -4.6997809410095215
    4. 'interval' → logprob: -4.8247809410095215
    5. 'heap' → logprob: -5.0747809410095215
    6. '[]' → logprob: -5.6997809410095215
    7. '[]
' → logprob: -5.8247809410095215
    8. ' =' → logprob: -6.5747809410095215
    9. '``' → logprob: -7.0747809410095215
    10. ' heap' → logprob: -7.0747809410095215

Token 1010: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1947743147611618
    2. '[]
' → logprob: -2.8197743892669678
    3. 'heap' → logprob: -2.9447743892669678
    4. '[]' → logprob: -3.6947743892669678
    5. ' intervals' → logprob: -5.194774150848389
    6. ' []
' → logprob: -5.444774150848389
    7. '```' → logprob: -5.569774150848389
    8. ' =' → logprob: -5.694774150848389
    9. ' heap' → logprob: -5.819774150848389
    10. '       ' → logprob: -5.944774150848389

Token 1011: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3273417055606842
    2. 'interval' → logprob: -1.3273416757583618
    3. ' intervals' → logprob: -5.077341556549072
    4. 'heap' → logprob: -5.827341556549072
    5. 'import' → logprob: -5.827341556549072
    6. '```' → logprob: -6.702341556549072
    7. '``' → logprob: -8.32734203338623
    8. 'end' → logprob: -9.20234203338623
    9. '
' → logprob: -9.32734203338623
    10. ' heap' → logprob: -10.20234203338623

Token 1012: ' number' (ID: 2086)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5970540046691895
    2. 'interval' → logprob: -1.3470540046691895
    3. '   ' → logprob: -1.9720540046691895
    4. 'end' → logprob: -4.0970540046691895
    5. 'import' → logprob: -4.5970540046691895
    6. ' heap' → logprob: -5.0970540046691895
    7. ' intervals' → logprob: -5.0970540046691895
    8. '       ' → logprob: -5.8470540046691895
    9. '#' → logprob: -6.0970540046691895
    10. 'min' → logprob: -6.3470540046691895

Token 1013: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5840827226638794
    2. ' of' → logprob: -0.9590827226638794
    3. '   ' → logprob: -3.33408260345459
    4. ' =' → logprob: -5.20908260345459
    5. '_of' → logprob: -5.20908260345459
    6. '=' → logprob: -5.58408260345459
    7. 'heap' → logprob: -6.70908260345459
    8. '       ' → logprob: -6.95908260345459
    9. 's' → logprob: -6.95908260345459
    10. 'for' → logprob: -7.20908260345459

Token 1014: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.26259106397628784
    2. 'active' → logprob: -2.3875911235809326
    3. 'heap' → logprob: -3.2625911235809326
    4. 'end' → logprob: -3.5125911235809326
    5. ' intervals' → logprob: -3.5125911235809326
    6. ' active' → logprob: -4.7625908851623535
    7. '   ' → logprob: -5.0125908851623535
    8. 'import' → logprob: -5.5125908851623535
    9. 'while' → logprob: -5.8875908851623535
    10. 'current' → logprob: -6.1375908851623535

Token 1015: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8966120481491089
    2. 'that' → logprob: -1.8966120481491089
    3. '```' → logprob: -2.1466121673583984
    4. 'over' → logprob: -2.2716121673583984
    5. '   ' → logprob: -2.3966121673583984
    6. 'currently' → logprob: -3.0216121673583984
    7. 'active' → logprob: -3.5216121673583984
    8. 'with' → logprob: -4.646612167358398
    9. ' overlapping' → logprob: -5.396612167358398
    10. ' that' → logprob: -5.521612167358398

Token 1016: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12033206969499588
    2. ' the' → logprob: -2.4953320026397705
    3. 'heap' → logprob: -3.6203320026397705
    4. 'a' → logprob: -6.37033224105835
    5. 'use' → logprob: -7.37033224105835
    6. 'min' → logprob: -7.37033224105835
    7. '```' → logprob: -8.370331764221191
    8. ' a' → logprob: -8.495331764221191
    9. ' heap' → logprob: -8.620331764221191
    10. '
' → logprob: -9.120331764221191

Token 1017: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.05785162001848221
    2. 'min' → logprob: -2.932851552963257
    3. ' heap' → logprob: -6.307851791381836
    4. 'max' → logprob: -7.432851791381836
    5. ' min' → logprob: -9.057851791381836
    6. 'current' → logprob: -9.057851791381836
    7. 'active' → logprob: -9.182851791381836
    8. '   ' → logprob: -9.807851791381836
    9. 'priority' → logprob: -10.182851791381836
    10. '
' → logprob: -10.932851791381836

Token 1018: ' when' (ID: 1261)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0852469205856323
    2. '   ' → logprob: -1.2102469205856323
    3. '```' → logprob: -2.085247039794922
    4. '+=' → logprob: -2.585247039794922
    5. '
' → logprob: -3.835247039794922
    6. ' at' → logprob: -3.960247039794922
    7. ' that' → logprob: -4.210247039794922
    8. 'that' → logprob: -4.460247039794922
    9. '       ' → logprob: -4.460247039794922
    10. ' continues' → logprob: -5.085247039794922

Token 1019: ' removing' (ID: 28559)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1899082511663437
    2. ' intervals' → logprob: -1.8149082660675049
    3. '   ' → logprob: -5.689908027648926
    4. 'processing' → logprob: -6.064908027648926
    5. 'adding' → logprob: -6.814908027648926
    6. 'we' → logprob: -6.939908027648926
    7. ' interval' → logprob: -7.689908027648926
    8. ' processing' → logprob: -8.064908027648926
    9. 'heap' → logprob: -8.064908027648926
    10. 'the' → logprob: -8.439908027648926

Token 1020: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.2969604730606079
    2. 'interval' → logprob: -1.546960473060608
    3. 'the' → logprob: -3.9219603538513184
    4. '   ' → logprob: -5.046960353851318
    5. ' the' → logprob: -5.046960353851318
    6. ' an' → logprob: -6.046960353851318
    7. '       ' → logprob: -6.796960353851318
    8. ' interval' → logprob: -6.921960353851318
    9. 'an' → logprob: -7.046960353851318
    10. 'end' → logprob: -7.171960353851318

Token 1021: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9043712615966797
    2. 'with' → logprob: -2.0293712615966797
    3. 'while' → logprob: -2.2793712615966797
    4. ' <=' → logprob: -2.2793712615966797
    5. ' that' → logprob: -2.2793712615966797
    6. ' with' → logprob: -2.4043712615966797
    7. 'that' → logprob: -2.4043712615966797
    8. ' while' → logprob: -2.7793712615966797
    9. '       ' → logprob: -3.7793712615966797
    10. '```' → logprob: -3.7793712615966797

Token 1022: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.08967947959899902
    2. 'end' → logprob: -2.964679479598999
    3. 'do' → logprob: -4.589679718017578
    4. ' start' → logprob: -4.714679718017578
    5. 'have' → logprob: -5.089679718017578
    6. 'are' → logprob: -5.589679718017578
    7. ' end' → logprob: -6.714679718017578
    8. 'don't' → logprob: -7.214679718017578
    9. ' have' → logprob: -7.464679718017578
    10. '>' → logprob: -7.714679718017578

Token 1023: ' before' (ID: 2254)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7504627704620361
    2. '>' → logprob: -1.0004627704620361
    3. ' <=' → logprob: -2.500462770462036
    4. 'before' → logprob: -3.000462770462036
    5. ' >' → logprob: -4.500462532043457
    6. ' before' → logprob: -5.250462532043457
    7. 'after' → logprob: -5.375462532043457
    8. '```' → logprob: -6.125462532043457
    9. 'while' → logprob: -6.625462532043457
    10. 'at' → logprob: -7.375462532043457

Token 1024: ' current' (ID: 2208)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9509490728378296
    2. 'the' → logprob: -1.5759490728378296
    3. ' the' → logprob: -1.9509490728378296
    4. '   ' → logprob: -2.700949192047119
    5. 'a' → logprob: -2.700949192047119
    6. 'current' → logprob: -3.200949192047119
    7. '       ' → logprob: -3.450949192047119
    8. 'start' → logprob: -4.450949192047119
    9. ' current' → logprob: -4.450949192047119
    10. ' interval' → logprob: -4.575949192047119

Token 1025: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.4800331592559814
    2. 'interval' → logprob: -1.8550331592559814
    3. '   ' → logprob: -1.9800331592559814
    4. 'a' → logprob: -1.9800331592559814
    5. ' start' → logprob: -2.1050331592559814
    6. ' interval' → logprob: -2.4800331592559814
    7. '_start' → logprob: -3.3550331592559814
    8. '       ' → logprob: -3.4800331592559814
    9. '[' → logprob: -4.480032920837402
    10. ' (' → logprob: -4.855032920837402

Token 1026: ' gives' (ID: 8967)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9030359983444214
    2. 'while' → logprob: -1.7780359983444214
    3. ' while' → logprob: -2.528036117553711
    4. ':
' → logprob: -2.903036117553711
    5. ' =' → logprob: -2.903036117553711
    6. '
' → logprob: -3.403036117553711
    7. '```' → logprob: -3.528036117553711
    8. ':' → logprob: -3.653036117553711
    9. 'def' → logprob: -3.778036117553711
    10. ' is' → logprob: -3.903036117553711

Token 1027: ' us' (ID: 765)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0148587226867676
    2. 'the' → logprob: -1.1398587226867676
    3. '```' → logprob: -2.0148587226867676
    4. ' the' → logprob: -2.5148587226867676
    5. '       ' → logprob: -3.3898587226867676
    6. 'us' → logprob: -4.514858722686768
    7. ' us' → logprob: -4.514858722686768
    8. 'len' → logprob: -4.764858722686768
    9. 'you' → logprob: -4.889858722686768
    10. ' you' → logprob: -4.889858722686768

Token 1028: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23794221878051758
    2. 'the' → logprob: -1.8629422187805176
    3. '   ' → logprob: -3.6129422187805176
    4. ' current' → logprob: -4.487942218780518
    5. '       ' → logprob: -5.487942218780518
    6. '```' → logprob: -5.737942218780518
    7. 'current' → logprob: -5.987942218780518
    8. 'len' → logprob: -6.362942218780518
    9. '    ' → logprob: -6.862942218780518
    10. ' len' → logprob: -7.112942218780518

Token 1029: ' clique' (ID: 60301)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.4120784401893616
    2. 'max' → logprob: -1.9120783805847168
    3. 'size' → logprob: -2.787078380584717
    4. 'current' → logprob: -3.162078380584717
    5. ' maximum' → logprob: -3.662078380584717
    6. 'number' → logprob: -3.912078380584717
    7. 'count' → logprob: -4.537078380584717
    8. '   ' → logprob: -5.537078380584717
    9. ' current' → logprob: -5.537078380584717
    10. ' max' → logprob: -5.537078380584717

Token 1030: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2686801552772522
    2. ' size' → logprob: -1.6436800956726074
    3. '   ' → logprob: -3.7686800956726074
    4. '_size' → logprob: -4.143680095672607
    5. '       ' → logprob: -7.393680095672607
    6. '
' → logprob: -7.643680095672607
    7. ' ' → logprob: -8.143680572509766
    8. ' =' → logprob: -8.393680572509766
    9. 's' → logprob: -8.643680572509766
    10. 'max' → logprob: -8.893680572509766

Token 1031: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5123324990272522
    2. 'interval' → logprob: -1.2623324394226074
    3. 'heap' → logprob: -3.0123324394226074
    4. ' =' → logprob: -3.3873324394226074
    5. 'import' → logprob: -4.762332439422607
    6. '
' → logprob: -5.012332439422607
    7. ' intervals' → logprob: -5.012332439422607
    8. '```' → logprob: -5.387332439422607
    9. '=' → logprob: -6.012332439422607
    10. ',' → logprob: -7.137332439422607

Token 1032: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07178037613630295
    2. 'interval' → logprob: -3.1967804431915283
    3. '
' → logprob: -4.196780204772949
    4. 'heap' → logprob: -4.946780204772949
    5. '```' → logprob: -5.446780204772949
    6. '    
' → logprob: -6.946780204772949
    7. ' intervals' → logprob: -7.946780204772949
    8. '``' → logprob: -8.07178020477295
    9. 'import' → logprob: -9.32178020477295
    10. '`' → logprob: -10.44678020477295

Token 1033: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1285921037197113
    2. '   ' → logprob: -2.253592014312744
    3. 'heap' → logprob: -5.378592014312744
    4. '
' → logprob: -5.378592014312744
    5. '```' → logprob: -5.503592014312744
    6. ' intervals' → logprob: -6.753592014312744
    7. '``' → logprob: -7.753592014312744
    8. '    
' → logprob: -8.253592491149902
    9. 'import' → logprob: -8.503592491149902
    10. 'sorted' → logprob: -9.878592491149902

Token 1034: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0038874808233231306
    2. '   ' → logprob: -5.62888765335083
    3. '```' → logprob: -9.128887176513672
    4. ' intervals' → logprob: -9.753887176513672
    5. 'heap' → logprob: -10.253887176513672
    6. '
' → logprob: -10.378887176513672
    7. 'import' → logprob: -10.753887176513672
    8. '``' → logprob: -11.128887176513672
    9. '    
' → logprob: -11.128887176513672
    10. 'sorted' → logprob: -13.878887176513672

Token 1035: ' Sort' (ID: 25945)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0012501158053055406
    2. '   ' → logprob: -7.501250267028809
    3. 'heap' → logprob: -7.501250267028809
    4. '
' → logprob: -10.251250267028809
    5. ' intervals' → logprob: -10.251250267028809
    6. '```' → logprob: -10.251250267028809
    7. 'import' → logprob: -10.876250267028809
    8. '    
' → logprob: -12.001250267028809
    9. '``' → logprob: -12.126250267028809
    10. 'sorted' → logprob: -12.751250267028809

Token 1036: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.018211519345641136
    2. '(interval' → logprob: -4.018211364746094
    3. 'by' → logprob: -10.393211364746094
    4. ' intervals' → logprob: -10.518211364746094
    5. '   ' → logprob: -12.768211364746094
    6. 'Intervals' → logprob: -15.518211364746094
    7. '_by' → logprob: -15.643211364746094
    8. '```' → logprob: -15.643211364746094
    9. ' =' → logprob: -15.893211364746094
    10. '=' → logprob: -16.018211364746094

Token 1037: ' by' (ID: 656)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04317902401089668
    2. '(interval' → logprob: -4.043179035186768
    3. 'by' → logprob: -4.418179035186768
    4. '=' → logprob: -5.293179035186768
    5. 'sorted' → logprob: -5.668179035186768
    6. ' =' → logprob: -6.418179035186768
    7. 'key' → logprob: -7.043179035186768
    8. '   ' → logprob: -7.293179035186768
    9. '.sort' → logprob: -7.918179035186768
    10. ' intervals' → logprob: -8.41817855834961

Token 1038: ' start' (ID: 1604)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.44181644916534424
    2. 'start' → logprob: -1.5668164491653442
    3. 'a' → logprob: -2.4418163299560547
    4. 'key' → logprob: -3.0668163299560547
    5. 'interval' → logprob: -5.191816329956055
    6. ' lambda' → logprob: -5.691816329956055
    7. 'x' → logprob: -6.316816329956055
    8. '=lambda' → logprob: -6.441816329956055
    9. ' key' → logprob: -6.816816329956055
    10. '   ' → logprob: -7.066816329956055

Token 1039: ' time' (ID: 1058)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0007323168683797121
    2. ' intervals' → logprob: -8.000732421875
    3. '   ' → logprob: -8.250732421875
    4. '(interval' → logprob: -9.000732421875
    5. ' =' → logprob: -12.500732421875
    6. '=' → logprob: -13.125732421875
    7. '```' → logprob: -13.125732421875
    8. 'sorted' → logprob: -13.625732421875
    9. '
' → logprob: -14.000732421875
    10. ',' → logprob: -14.625732421875

Token 1040: ' ascending' (ID: 75564)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0002942287246696651
    2. '   ' → logprob: -8.87529468536377
    3. ' intervals' → logprob: -8.87529468536377
    4. '(interval' → logprob: -11.87529468536377
    5. '```' → logprob: -12.25029468536377
    6. 'sorted' → logprob: -14.25029468536377
    7. ' =' → logprob: -14.37529468536377
    8. ',' → logprob: -14.37529468536377
    9. '
' → logprob: -15.25029468536377
    10. '    
' → logprob: -15.37529468536377

Token 1041: ',' (ID: 11)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0013170238817110658
    2. '   ' → logprob: -6.876317024230957
    3. ' intervals' → logprob: -8.251317024230957
    4. '(interval' → logprob: -11.626317024230957
    5. '```' → logprob: -11.876317024230957
    6. 'sorted' → logprob: -12.876317024230957
    7. ',' → logprob: -13.001317024230957
    8. '    
' → logprob: -14.001317024230957
    9. ' =' → logprob: -14.876317024230957
    10. '
' → logprob: -15.126317024230957

Token 1042: ' if' (ID: 538)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0005246769287623465
    2. '   ' → logprob: -8.250524520874023
    3. ' intervals' → logprob: -8.250524520874023
    4. '```' → logprob: -13.500524520874023
    5. '(interval' → logprob: -15.000524520874023
    6. '
' → logprob: -15.500524520874023
    7. 'sorted' → logprob: -15.625524520874023
    8. '`' → logprob: -16.000524520874023
    9. 'Intervals' → logprob: -17.125524520874023
    10. '    
' → logprob: -17.375524520874023

Token 1043: ' tie' (ID: 22244)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9262714982032776
    2. ' not' → logprob: -1.1762714385986328
    3. 'interval' → logprob: -2.051271438598633
    4. 'len' → logprob: -3.551271438598633
    5. ' intervals' → logprob: -3.551271438598633
    6. 's' → logprob: -3.801271438598633
    7. 'b' → logprob: -4.051271438598633
    8. 'key' → logprob: -4.426271438598633
    9. 'a' → logprob: -4.426271438598633
    10. '   ' → logprob: -4.676271438598633

Token 1044: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35660111904144287
    2. ' intervals' → logprob: -2.3566012382507324
    3. '=True' → logprob: -3.3566012382507324
    4. 'interval' → logprob: -3.3566012382507324
    5. ' =' → logprob: -3.6066012382507324
    6. ',' → logprob: -3.6066012382507324
    7. '=lambda' → logprob: -3.6066012382507324
    8. '   ' → logprob: -4.106601238250732
    9. ':
' → logprob: -4.606601238250732
    10. '```' → logprob: -4.731601238250732

Token 1045: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.15457271039485931
    2. 'b' → logprob: -2.2795727252960205
    3. ' end' → logprob: -3.6545727252960205
    4. 'lambda' → logprob: -4.779572486877441
    5. ' b' → logprob: -5.779572486877441
    6. 'interval' → logprob: -6.654572486877441
    7. '   ' → logprob: -6.904572486877441
    8. ' lambda' → logprob: -7.279572486877441
    9. 'start' → logprob: -7.904572486877441
    10. 'a' → logprob: -10.529572486877441

Token 1046: ' ascending' (ID: 75564)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2710082530975342
    2. '_time' → logprob: -2.021008253097534
    3. ',' → logprob: -3.146008253097534
    4. ' =' → logprob: -3.646008253097534
    5. '=' → logprob: -4.396008491516113
    6. 'interval' → logprob: -4.771008491516113
    7. '   ' → logprob: -5.271008491516113
    8. ' time' → logprob: -6.146008491516113
    9. '=lambda' → logprob: -6.271008491516113
    10. '(interval' → logprob: -6.271008491516113

Token 1047: '
' (ID: 198)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00019376569252926856
    2. ' intervals' → logprob: -9.00019359588623
    3. '   ' → logprob: -9.62519359588623
    4. '(interval' → logprob: -12.87519359588623
    5. '```' → logprob: -13.87519359588623
    6. '
' → logprob: -15.00019359588623
    7. '    
' → logprob: -16.125194549560547
    8. ',' → logprob: -16.250194549560547
    9. 'Intervals' → logprob: -16.625194549560547
    10. 'sorted' → logprob: -16.875194549560547

Token 1048: '   ' (ID: 271)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.014507349580526352
    2. '   ' → logprob: -4.639507293701172
    3. ' intervals' → logprob: -5.389507293701172
    4. '```' → logprob: -8.764507293701172
    5. '(interval' → logprob: -11.764507293701172
    6. 'sorted' → logprob: -12.889507293701172
    7. '`' → logprob: -12.889507293701172
    8. '
' → logprob: -13.389507293701172
    9. ',' → logprob: -13.389507293701172
    10. '``' → logprob: -13.639507293701172

Token 1049: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0006751431501470506
    2. '   ' → logprob: -8.000675201416016
    3. ' intervals' → logprob: -8.000675201416016
    4. '```' → logprob: -12.500675201416016
    5. '(interval' → logprob: -15.125675201416016
    6. 'sorted' → logprob: -15.875675201416016
    7. '`' → logprob: -16.250675201416016
    8. '
' → logprob: -16.625675201416016
    9. '``' → logprob: -16.750675201416016
    10. '       ' → logprob: -16.875675201416016

Token 1050: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00015229015843942761
    2. '=' → logprob: -9.000152587890625
    3. '   ' → logprob: -11.500152587890625
    4. ' =' → logprob: -11.875152587890625
    5. 'sorted' → logprob: -12.125152587890625
    6. 'sort' → logprob: -12.375152587890625
    7. '.' → logprob: -14.000152587890625
    8. '_sorted' → logprob: -14.000152587890625
    9. '.sorted' → logprob: -16.000152587890625
    10. '```' → logprob: -16.500152587890625

Token 1051: '()
' (ID: 1234)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0067961327731609344
    2. '()' → logprob: -5.006796360015869
    3. 'key' → logprob: -10.131795883178711
    4. '()
' → logprob: -10.131795883178711
    5. '(' → logprob: -14.506795883178711
    6. '(reverse' → logprob: -15.006795883178711
    7. ',key' → logprob: -15.506795883178711
    8. '   ' → logprob: -17.00679588317871
    9. '(),' → logprob: -17.25679588317871
    10. ' key' → logprob: -17.25679588317871

Token 1052: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.47224968671798706
    2. 'import' → logprob: -1.2222497463226318
    3. 'ends' → logprob: -3.097249746322632
    4. 'min' → logprob: -3.972249746322632
    5. 'end' → logprob: -4.097249507904053
    6. '   ' → logprob: -7.722249507904053
    7. 'from' → logprob: -8.597249984741211
    8. 'active' → logprob: -8.847249984741211
    9. '```' → logprob: -9.097249984741211
    10. ' heap' → logprob: -9.472249984741211

Token 1053: ' min' (ID: 1349)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16965465247631073
    2. 'heap' → logprob: -1.9196546077728271
    3. 'min' (adapté à ' min') → logprob: -5.294654846191406
    4. 'end' → logprob: -6.169654846191406
    5. 'ends' → logprob: -6.169654846191406
    6. 'from' → logprob: -9.669654846191406
    7. '   ' → logprob: -10.544654846191406
    8. 'hp' → logprob: -10.669654846191406
    9. 'pq' → logprob: -10.919654846191406
    10. 'h' → logprob: -11.169654846191406

Token 1054: '_heap' (ID: 88741)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.9609572887420654
    2. 'heap' → logprob: -1.5859572887420654
    3. '_heap' → logprob: -1.8359572887420654
    4. '_' → logprob: -1.9609572887420654
    5. 'end' → logprob: -2.2109572887420654
    6. 'ends' → logprob: -6.3359575271606445
    7. '-' → logprob: -7.5859575271606445
    8. 'e' → logprob: -8.085957527160645
    9. 'import' → logprob: -9.335957527160645
    10. ' heap' → logprob: -9.460957527160645

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017701366916298866
    2. ' =' → logprob: -4.267701148986816
    3. '=[]' → logprob: -5.767701148986816
    4. '   ' → logprob: -8.142701148986816
    5. '.append' → logprob: -10.517701148986816
    6. '.push' → logprob: -10.767701148986816
    7. '.' → logprob: -11.142701148986816
    8. '=[]
' → logprob: -11.267701148986816
    9. ')' → logprob: -11.767701148986816
    10. 'import' → logprob: -12.142701148986816

Token 1056: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -7.815280696377158e-05
    2. '[]
' → logprob: -9.500078201293945
    3. '[]>' → logprob: -14.125078201293945
    4. '[]

' → logprob: -14.125078201293945
    5. '=[]' → logprob: -14.500078201293945
    6. '[]}' → logprob: -14.500078201293945
    7. ' []' → logprob: -14.875078201293945
    8. '([]' → logprob: -15.625078201293945
    9. '[])' → logprob: -15.750078201293945
    10. '[],' → logprob: -16.250078201293945

Token 1057: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6512914299964905
    2. 'max' → logprob: -1.5262913703918457
    3. 'import' → logprob: -2.1512913703918457
    4. ' for' → logprob: -3.0262913703918457
    5. 'result' → logprob: -3.1512913703918457
    6. '   ' → logprob: -4.276291370391846
    7. 'from' → logprob: -4.401291370391846
    8. 's' → logprob: -5.276291370391846
    9. 'count' → logprob: -5.401291370391846
    10. '```' → logprob: -5.776291370391846

Token 1058: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.594637930393219
    2. 'max' (adapté à ' max') → logprob: -0.969637930393219
    3. 's' → logprob: -3.344637870788574
    4. 'result' → logprob: -4.719637870788574
    5. 'answer' → logprob: -4.719637870788574
    6. 'import' → logprob: -4.844637870788574
    7. 'res' → logprob: -5.469637870788574
    8. 'ans' → logprob: -6.094637870788574
    9. 'cl' → logprob: -7.344637870788574
    10. 'from' → logprob: -7.844637870788574

Token 1059: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.027969568967819214
    2. '_overlap' → logprob: -4.4029693603515625
    3. '_size' → logprob: -4.5279693603515625
    4. '_heap' → logprob: -5.6529693603515625
    5. '_count' → logprob: -7.5279693603515625
    6. '_len' → logprob: -8.402969360351562
    7. '_' → logprob: -9.152969360351562
    8. 'cl' → logprob: -10.277969360351562
    9. '_over' → logprob: -10.777969360351562
    10. '_cnt' → logprob: -11.152969360351562

Token 1060: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.1276591569185257
    2. 'ip' → logprob: -2.8776590824127197
    3. 'e' → logprob: -3.7526590824127197
    4. 'size' → logprob: -5.127659320831299
    5. 'oop' → logprob: -5.127659320831299
    6. '_size' → logprob: -5.252659320831299
    7. 'ass' → logprob: -5.377659320831299
    8. 'ose' → logprob: -5.877659320831299
    9. 'ock' → logprob: -6.252659320831299
    10. 'max' → logprob: -6.627659320831299

Token 1061: ' =' (ID: 314)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.8934069275856018
    2. '=' → logprob: -1.143406867980957
    3. ' =' → logprob: -1.393406867980957
    4. 'size' → logprob: -3.768406867980957
    5. 'Size' → logprob: -8.143406867980957
    6. ' size' → logprob: -8.268406867980957
    7. '_SIZE' → logprob: -10.018406867980957
    8. '_' → logprob: -10.643406867980957
    9. '   ' → logprob: -11.393406867980957
    10. 'SIZE' → logprob: -11.518406867980957

Token 1062: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003818140830844641
    2. ' ' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.375381469726562
    4. '1' → logprob: -16.250381469726562
    5. '=' → logprob: -18.375381469726562
    6. '  ' → logprob: -18.500381469726562
    7. ' =' → logprob: -18.625381469726562
    8. '```' → logprob: -18.625381469726562
    9. '    ' → logprob: -19.437881469726562
    10. ' ' → logprob: -19.625381469726562

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.5
    3. ' ' → logprob: -19.125
    4. '
' → logprob: -21.25
    5. '=' → logprob: -22.0
    6. '   ' → logprob: -22.0
    7. '```' → logprob: -22.25
    8. ' =' → logprob: -23.5
    9. '۰' → logprob: -23.625
    10. 'import' → logprob: -23.75

Token 1064: '
    
' (ID: 15698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015252856246661395
    2. 'import' → logprob: -9.500152587890625
    3. ' for' → logprob: -10.000152587890625
    4. '   ' → logprob: -10.875152587890625
    5. '```' → logprob: -11.750152587890625
    6. 'from' → logprob: -12.375152587890625
    7. '
' → logprob: -14.250152587890625
    8. '    
' → logprob: -14.625152587890625
    9. '	for' → logprob: -16.875152587890625
    10. '``' → logprob: -17.125152587890625

Token 1065: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.97155623533763e-05
    2. '   ' → logprob: -9.750089645385742
    3. 'import' → logprob: -10.500089645385742
    4. '```' → logprob: -13.250089645385742
    5. ' for' → logprob: -13.625089645385742
    6. 'from' → logprob: -14.000089645385742
    7. '	for' → logprob: -17.750089645385742
    8. '
' → logprob: -17.875089645385742
    9. '``' → logprob: -18.875089645385742
    10. '    
' → logprob: -19.375089645385742

Token 1066: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2471589798224159e-05
    2. '   ' → logprob: -11.750012397766113
    3. 'import' → logprob: -12.500012397766113
    4. ' for' → logprob: -14.250012397766113
    5. 'from' → logprob: -16.00001335144043
    6. '```' → logprob: -17.25001335144043
    7. '	for' → logprob: -19.62501335144043
    8. '``' → logprob: -22.12501335144043
    9. '
' → logprob: -23.12501335144043
    10. '    
' → logprob: -23.25001335144043

Token 1067: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3742534816265106
    2. ' a' → logprob: -1.374253511428833
    3. 'start' → logprob: -3.374253511428833
    4. '_,' → logprob: -4.374253273010254
    5. ' start' → logprob: -4.749253273010254
    6. ' _,' → logprob: -5.749253273010254
    7. 'interval' → logprob: -8.874253273010254
    8. 's' → logprob: -9.624253273010254
    9. '_start' → logprob: -9.874253273010254
    10. '_' → logprob: -10.249253273010254

Token 1068: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005846308544278145
    2. 'in' → logprob: -5.5058465003967285
    3. '   ' → logprob: -7.5058465003967285
    4. ',a' → logprob: -8.00584602355957
    5. ' ,' → logprob: -8.00584602355957
    6. ' in' → logprob: -8.50584602355957
    7. '_,' → logprob: -9.13084602355957
    8. ',in' → logprob: -9.88084602355957
    9. ',
' → logprob: -10.25584602355957
    10. '[' → logprob: -10.50584602355957

Token 1069: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.25002670288086
    4. '```' → logprob: -23.50002670288086
    5. '    
' → logprob: -23.62502670288086
    6. '    ' → logprob: -23.87502670288086
    7. ' ' → logprob: -24.00002670288086
    8. '(b' → logprob: -24.62502670288086
    9. ')b' → logprob: -24.87502670288086
    10. '	b' → logprob: -24.87502670288086

Token 1070: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8994776606559753
    2. '   ' → logprob: -1.2744777202606201
    3. ':' → logprob: -1.5244777202606201
    4. 'in' → logprob: -2.89947772026062
    5. ',' → logprob: -3.89947772026062
    6. ':
' → logprob: -4.649477481842041
    7. '       ' → logprob: -5.149477481842041
    8. '):' → logprob: -6.399477481842041
    9. '<|end|>' → logprob: -7.024477481842041
    10. '):
' → logprob: -7.149477481842041

Token 1071: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.25193697214126587
    2. 'interval' → logprob: -1.501936912536621
    3. '(interval' → logprob: -12.001936912536621
    4. ':' → logprob: -15.001936912536621
    5. ' interval' → logprob: -15.001936912536621
    6. 'Intervals' → logprob: -15.626936912536621
    7. 'a' → logprob: -16.001937866210938
    8. '_INTERVAL' → logprob: -16.126937866210938
    9. 'ranges' → logprob: -16.126937866210938
    10. '_interval' → logprob: -16.126937866210938

Token 1072: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035166848450899124
    2. ':
' → logprob: -3.5351667404174805
    3. '   ' → logprob: -5.4101667404174805
    4. '       ' → logprob: -7.5351667404174805
    5. '):
' → logprob: -9.16016674041748
    6. ',' → logprob: -9.28516674041748
    7. '):' → logprob: -9.41016674041748
    8. '[' → logprob: -11.03516674041748
    9. '<|end|>' → logprob: -11.03516674041748
    10. ')' → logprob: -11.16016674041748

Token 1073: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012935701524838805
    2. ' while' → logprob: -6.876293659210205
    3. 'while' → logprob: -8.751293182373047
    4. '   ' → logprob: -9.501293182373047
    5. '```' → logprob: -11.001293182373047
    6. '<|end|>' → logprob: -12.376293182373047
    7. 'import' → logprob: -12.501293182373047
    8. '	while' → logprob: -13.626293182373047
    9. 'While' → logprob: -14.126293182373047
    10. '	   ' → logprob: -15.501293182373047

Token 1074: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.025819923728704453
    2. ' while' → logprob: -3.775820016860962
    3. '   ' → logprob: -6.025819778442383
    4. 'import' → logprob: -9.025819778442383
    5. '       ' → logprob: -10.400819778442383
    6. '	while' → logprob: -12.900819778442383
    7. '
' → logprob: -13.025819778442383
    8. ' import' → logprob: -16.275819778442383
    9. '#' (adapté à ' #') → logprob: -16.275819778442383
    10. 'While' → logprob: -16.775819778442383

Token 1075: ' Remove' (ID: 18141)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.754368223482743e-05
    2. ' while' → logprob: -9.750067710876465
    3. 'import' → logprob: -12.000067710876465
    4. '   ' → logprob: -13.250067710876465
    5. '       ' → logprob: -13.625067710876465
    6. '
' → logprob: -16.87506675720215
    7. '	while' → logprob: -17.25006675720215
    8. 'While' → logprob: -18.00006675720215
    9. '#' → logprob: -18.50006675720215
    10. 'heap' → logprob: -18.75006675720215

Token 1076: ' intervals' (ID: 49900)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06388988345861435
    2. ' while' → logprob: -3.063889980316162
    3. 'min' → logprob: -4.563889980316162
    4. 'end' → logprob: -5.813889980316162
    5. '   ' → logprob: -7.063889980316162
    6. '       ' → logprob: -8.438889503479004
    7. 'While' → logprob: -8.688889503479004
    8. ' min' → logprob: -8.813889503479004
    9. 'items' → logprob: -10.063889503479004
    10. '(end' → logprob: -10.063889503479004

Token 1077: ' ending' (ID: 22013)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18405896425247192
    2. ' while' → logprob: -1.8090589046478271
    3. 'from' → logprob: -5.684059143066406
    4. 'that' → logprob: -8.184059143066406
    5. ' from' → logprob: -8.309059143066406
    6. ' that' → logprob: -8.309059143066406
    7. '       ' → logprob: -9.559059143066406
    8. '   ' → logprob: -10.809059143066406
    9. '	while' → logprob: -11.059059143066406
    10. '
' → logprob: -12.059059143066406

Token 1078: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.5223265290260315
    2. 'before' → logprob: -1.0223264694213867
    3. '<=' → logprob: -3.6473264694213867
    4. ' <=' → logprob: -3.8973264694213867
    5. ' <' → logprob: -8.397326469421387
    6. 'while' → logprob: -8.522326469421387
    7. '_before' → logprob: -9.272326469421387
    8. ' while' → logprob: -9.397326469421387
    9. '<' → logprob: -10.022326469421387
    10. '   ' → logprob: -10.272326469421387

Token 1079: ' or' (ID: 503)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00523612555116415
    2. ' a' → logprob: -5.2552361488342285
    3. '   ' → logprob: -13.25523567199707
    4. '       ' → logprob: -14.88023567199707
    5. '	a' → logprob: -16.50523567199707
    6. '    ' → logprob: -16.75523567199707
    7. 'b' → logprob: -18.25523567199707
    8. '           ' → logprob: -19.13023567199707
    9. '(a' → logprob: -19.63023567199707
    10. '#a' → logprob: -19.88023567199707

Token 1080: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24000929296016693
    2. 'a' → logprob: -1.6150093078613281
    3. '<=' → logprob: -4.490009307861328
    4. ' a' → logprob: -6.115009307861328
    5. '=a' → logprob: -7.490009307861328
    6. 'le' → logprob: -7.740009307861328
    7. ' =' → logprob: -10.990009307861328
    8. ' <=' → logprob: -11.240009307861328
    9. '=<' → logprob: -11.365009307861328
    10. '≤' → logprob: -12.240009307861328

Token 1081: ' current' (ID: 2208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4741065204143524
    2. ' a' → logprob: -0.9741065502166748
    3. '   ' → logprob: -10.474106788635254
    4. '    ' → logprob: -14.349106788635254
    5. '	a' → logprob: -14.849106788635254
    6. '       ' → logprob: -15.724106788635254
    7. 'b' → logprob: -16.599105834960938
    8. ' the' → logprob: -16.849105834960938
    9. '  ' → logprob: -17.474105834960938
    10. '(a' → logprob: -17.599105834960938

Token 1082: ' start' (ID: 1604)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16050569713115692
    2. 'a' → logprob: -1.9105056524276733
    3. '       ' → logprob: -9.535505294799805
    4. '   ' → logprob: -10.035505294799805
    5. '    ' → logprob: -10.035505294799805
    6. '_a' → logprob: -10.410505294799805
    7. ' b' → logprob: -10.785505294799805
    8. 'b' → logprob: -11.410505294799805
    9. 'space' → logprob: -11.410505294799805
    10. ' ' → logprob: -11.785505294799805

Token 1083: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22699610888957977
    2. 'while' → logprob: -2.2269961833953857
    3. '       ' → logprob: -2.3519961833953857
    4. '	while' → logprob: -10.726996421813965
    5. 'While' → logprob: -11.351996421813965
    6. '   ' → logprob: -11.976996421813965
    7. '           ' → logprob: -13.351996421813965
    8. ',' → logprob: -13.726996421813965
    9. '        
' → logprob: -14.726996421813965
    10. ' ' → logprob: -14.726996421813965

Token 1084: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6072224974632263
    2. '       ' → logprob: -0.8572224974632263
    3. 'while' → logprob: -3.482222557067871
    4. '           ' → logprob: -11.607222557067871
    5. '        
' → logprob: -11.857222557067871
    6. ',' → logprob: -11.857222557067871
    7. '	while' → logprob: -11.857222557067871
    8. '```' → logprob: -11.857222557067871
    9. '   ' → logprob: -11.982222557067871
    10. ')' → logprob: -12.232222557067871

Token 1085: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.38691896200180054
    2. 'while' (adapté à ' while') → logprob: -1.1369190216064453
    3. '       ' → logprob: -10.511919021606445
    4. '   ' → logprob: -11.511919021606445
    5. '	while' → logprob: -11.761919021606445
    6. 'While' → logprob: -13.386919021606445
    7. '```' → logprob: -13.761919021606445
    8. '
' → logprob: -15.386919021606445
    9. 'import' → logprob: -16.761919021606445
    10. '        
' → logprob: -17.636919021606445

Token 1086: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. ' min' → logprob: -14.750000953674316
    3. 'len' → logprob: -15.750000953674316
    4. '   ' → logprob: -20.0
    5. '	min' → logprob: -20.625
    6. '(min' → logprob: -20.75
    7. '[min' → logprob: -22.25
    8. '
' → logprob: -23.5
    9. 'minimal' → logprob: -24.5
    10. '=min' → logprob: -24.75

Token 1087: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.000718626833986491
    2. 'heap' → logprob: -7.250718593597412
    3. '(heap' → logprob: -13.12571907043457
    4. 'min' → logprob: -13.25071907043457
    5. '   ' → logprob: -14.12571907043457
    6. '```' → logprob: -14.12571907043457
    7. ')' → logprob: -14.62571907043457
    8. '       ' → logprob: -14.87571907043457
    9. '.heap' → logprob: -15.00071907043457
    10. '(min' → logprob: -15.37571907043457

Token 1088: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759826302528381
    2. 'and' → logprob: -0.8259826302528381
    3. '   ' → logprob: -11.450983047485352
    4. '	and' → logprob: -12.075983047485352
    5. '          ' → logprob: -12.200983047485352
    6. '[' → logprob: -12.450983047485352
    7. '      ' → logprob: -12.950983047485352
    8. '        ' → logprob: -13.075983047485352
    9. '       ' → logprob: -13.200983047485352
    10. '```' → logprob: -13.200983047485352

Token 1089: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.15310683415737e-05
    2. ' min' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.87502098083496
    4. '	min' → logprob: -21.12502098083496
    5. '(min' → logprob: -21.12502098083496
    6. '[min' → logprob: -21.37502098083496
    7. 'heap' → logprob: -22.37502098083496
    8. '
' → logprob: -23.00002098083496
    9. 'm' → logprob: -23.00002098083496
    10. '-min' → logprob: -23.25002098083496

Token 1090: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -3.6312321753939614e-05
    2. 'heap' → logprob: -10.875036239624023
    3. 'a' → logprob: -11.500036239624023
    4. '(a' → logprob: -13.125036239624023
    5. '[' → logprob: -13.250036239624023
    6. '[a' → logprob: -14.250036239624023
    7. '(heap' → logprob: -14.375036239624023
    8. '-' → logprob: -14.875036239624023
    9. 'Heap' → logprob: -15.000036239624023
    10. '.heap' → logprob: -15.125036239624023

Token 1091: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. 'and' → logprob: -12.875003814697266
    3. '0' → logprob: -15.250003814697266
    4. 'q' → logprob: -15.375003814697266
    5. 'min' → logprob: -15.375003814697266
    6. 'heap' → logprob: -15.750003814697266
    7. '_heap' → logprob: -16.250003814697266
    8. '```' → logprob: -16.625003814697266
    9. 'he' → logprob: -17.375003814697266
    10. ' and' → logprob: -17.625003814697266

Token 1092: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011868956498801708
    2. 'min' → logprob: -6.876186847686768
    3. '[' → logprob: -8.876187324523926
    4. ' ' → logprob: -11.626187324523926
    5. ' min' → logprob: -12.626187324523926
    6. '(' → logprob: -14.751187324523926
    7. '```' → logprob: -14.876187324523926
    8. 'a' → logprob: -15.626187324523926
    9. '   ' → logprob: -15.876187324523926
    10. '#' → logprob: -16.06368637084961

Token 1093: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3150125741958618
    2. '<=' → logprob: -1.3150125741958618
    3. ' <' → logprob: -6.565012454986572
    4. '<' → logprob: -8.81501293182373
    5. ')<=' → logprob: -9.69001293182373
    6. '```' → logprob: -10.19001293182373
    7. ']<=' → logprob: -10.56501293182373
    8. ' ' → logprob: -10.94001293182373
    9. '[' → logprob: -10.94001293182373
    10. ')' → logprob: -11.44001293182373

Token 1094: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03809335455298424
    2. ' <=' → logprob: -3.288093328475952
    3. '[' → logprob: -10.788093566894531
    4. '<' → logprob: -11.413093566894531
    5. ')<=' → logprob: -11.413093566894531
    6. ']<=' → logprob: -12.413093566894531
    7. '```' → logprob: -13.663093566894531
    8. ')' → logprob: -14.038093566894531
    9. ' <' → logprob: -14.038093566894531
    10. '≤' → logprob: -14.538093566894531

Token 1095: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233763717114925
    2. ' a' → logprob: -5.2552337646484375
    3. '	a' → logprob: -18.755233764648438
    4. '   ' → logprob: -19.630233764648438
    5. '_a' → logprob: -21.880233764648438
    6. '(a' → logprob: -22.505233764648438
    7. ' ' → logprob: -22.880233764648438
    8. '[a' → logprob: -23.130233764648438
    9. '  ' → logprob: -23.880233764648438
    10. ')a' → logprob: -23.880233764648438

Token 1096: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32559582591056824
    2. ':' → logprob: -1.9505958557128906
    3. 'heap' → logprob: -3.2005958557128906
    4. '       ' → logprob: -3.3255958557128906
    5. ' heap' → logprob: -4.200595855712891
    6. '.heap' → logprob: -4.450595855712891
    7. '(heap' → logprob: -4.450595855712891
    8. '   ' → logprob: -4.700595855712891
    9. '):
' → logprob: -5.575595855712891
    10. ',' → logprob: -5.950595855712891

Token 1097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6417391300201416
    2. ' heap' → logprob: -1.3917391300201416
    3. 'heap' → logprob: -1.6417391300201416
    4. '(heap' → logprob: -3.7667391300201416
    5. '.heap' → logprob: -5.8917388916015625
    6. '```' → logprob: -6.0167388916015625
    7. '       ' → logprob: -6.3917388916015625
    8. 'import' → logprob: -7.8917388916015625
    9. '   ' → logprob: -8.016738891601562
    10. '_heap' → logprob: -8.266738891601562

Token 1098: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00017123986617662013
    2. 'import' → logprob: -9.000171661376953
    3. ' heap' → logprob: -10.000171661376953
    4. '   ' → logprob: -13.500171661376953
    5. '
' → logprob: -14.375171661376953
    6. '(heap' → logprob: -15.125171661376953
    7. '           ' → logprob: -15.750171661376953
    8. '```' → logprob: -16.625171661376953
    9. '.heap' → logprob: -16.750171661376953
    10. 'he' → logprob: -17.250171661376953

Token 1099: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00017708084487821907
    2. '.he' → logprob: -9.625177383422852
    3. 'he' → logprob: -9.875177383422852
    4. 'pop' → logprob: -10.625177383422852
    5. 'replace' → logprob: -10.750177383422852
    6. 'app' → logprob: -11.375177383422852
    7. 'op' → logprob: -13.875177383422852
    8. 'heap' → logprob: -15.625177383422852
    9. 'hq' → logprob: -15.750177383422852
    10. '   ' → logprob: -15.875177383422852

Token 1100: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0015427150065079331
    2. 'he' → logprob: -6.876542568206787
    3. '.heap' → logprob: -8.251543045043945
    4. 'q' → logprob: -9.251543045043945
    5. ' he' → logprob: -9.876543045043945
    6. 'pop' → logprob: -10.501543045043945
    7. 'heap' → logprob: -10.626543045043945
    8. 'app' → logprob: -11.126543045043945
    9. '```' → logprob: -11.501543045043945
    10. '.' → logprob: -12.001543045043945

Token 1101: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.1054253011243418e-05
    2. 'pp' → logprob: -10.875020980834961
    3. 'ap' → logprob: -13.625020980834961
    4. 'pop' → logprob: -14.875020980834961
    5. '```' → logprob: -15.375020980834961
    6. 'p' → logprob: -15.875020980834961
    7. 'replace' → logprob: -17.00002098083496
    8. 'op' → logprob: -17.25002098083496
    9. 'q' → logprob: -17.25002098083496
    10. '``' → logprob: -17.50002098083496

Token 1102: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0029263533651828766
    2. 'app' → logprob: -6.127926349639893
    3. 'pop' → logprob: -7.502926349639893
    4. 'pp' → logprob: -8.87792682647705
    5. 'p' → logprob: -10.12792682647705
    6. 'ush' → logprob: -12.00292682647705
    7. 'ap' → logprob: -13.37792682647705
    8. 'opleft' → logprob: -15.00292682647705
    9. '```' → logprob: -15.12792682647705
    10. 'opf' → logprob: -15.25292682647705

Token 1103: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00012356207298580557
    2. 'min' → logprob: -9.000123977661133
    3. ' min' → logprob: -16.625123977661133
    4. '[min' → logprob: -17.000123977661133
    5. '(' → logprob: -17.875123977661133
    6. ',min' → logprob: -19.375123977661133
    7. '=min' → logprob: -20.000123977661133
    8. '	min' → logprob: -20.500123977661133
    9. '_min' → logprob: -21.000123977661133
    10. '(
' → logprob: -21.500123977661133

Token 1104: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -2.7252845029579476e-05
    2. 'min' → logprob: -11.250027656555176
    3. 'heap' → logprob: -11.500027656555176
    4. 'q' → logprob: -13.625027656555176
    5. '```' → logprob: -13.625027656555176
    6. '(min' → logprob: -14.500027656555176
    7. '_queue' → logprob: -14.625027656555176
    8. '.heap' → logprob: -16.37502670288086
    9. '(heap' → logprob: -16.50002670288086
    10. 'Heap' → logprob: -17.00002670288086

Token 1105: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05839003622531891
    2. ')' → logprob: -2.9333901405334473
    3. ')
' → logprob: -5.683390140533447
    4. '<|end|>' → logprob: -10.808389663696289
    5. ' )' → logprob: -11.058389663696289
    6. '[' → logprob: -11.058389663696289
    7. '        
' → logprob: -11.183389663696289
    8. '
' → logprob: -11.933389663696289
    9. ')\' → logprob: -12.308389663696289
    10. '):
' → logprob: -12.308389663696289

Token 1106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.157039049663581e-05
    2. 'heap' → logprob: -10.500051498413086
    3. '```' → logprob: -11.875051498413086
    4. '   ' → logprob: -12.000051498413086
    5. ' heap' → logprob: -12.000051498413086
    6. '(heap' → logprob: -13.375051498413086
    7. '        
' → logprob: -13.625051498413086
    8. '           ' → logprob: -14.375051498413086
    9. '<|end|>' → logprob: -15.000051498413086
    10. ' ' → logprob: -15.750051498413086

Token 1107: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.018171364441514015
    2. '       ' → logprob: -4.518171310424805
    3. ' heap' → logprob: -5.018171310424805
    4. '   ' → logprob: -7.643171310424805
    5. '(heap' → logprob: -13.518171310424805
    6. '_heap' → logprob: -14.768171310424805
    7. '.heap' → logprob: -15.268171310424805
    8. ' ' → logprob: -15.643171310424805
    9. 'he' → logprob: -15.643171310424805
    10. '```' → logprob: -16.643171310424805

Token 1108: ' Add' (ID: 4063)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.9361264946837764e-07
    2. ' heap' → logprob: -16.75
    3. '   ' → logprob: -17.25
    4. 'he' → logprob: -19.5
    5. '       ' → logprob: -24.625
    6. '(heap' → logprob: -24.75
    7. '_heap' → logprob: -24.75
    8. '```' → logprob: -25.125
    9. '.heap' → logprob: -25.375
    10. 'Heap' → logprob: -25.75

Token 1109: ' current' (ID: 2208)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010769657790660858
    2. '(b' → logprob: -4.885769844055176
    3. ' b' → logprob: -6.010769844055176
    4. '   ' → logprob: -7.260769844055176
    5. '	b' → logprob: -13.385769844055176
    6. ' (' → logprob: -13.760769844055176
    7. '       ' → logprob: -14.385769844055176
    8. 'heap' → logprob: -15.635769844055176
    9. '.b' → logprob: -16.38576889038086
    10. '  ' → logprob: -16.38576889038086

Token 1110: ' interval' (ID: 17116)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07640523463487625
    2. 'b' → logprob: -3.0764052867889404
    3. ' (' → logprob: -4.076405048370361
    4. ' b' → logprob: -5.701405048370361
    5. '(' → logprob: -6.076405048370361
    6. '   ' → logprob: -6.076405048370361
    7. 'interval' → logprob: -6.701405048370361
    8. 'min' → logprob: -7.951405048370361
    9. '(end' → logprob: -8.45140552520752
    10. 'end' → logprob: -8.45140552520752

Token 1111: ''s' (ID: 885)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.221212238073349
    2. '(heap' → logprob: -2.346212148666382
    3. '   ' → logprob: -2.971212148666382
    4. 'heap' → logprob: -3.096212148666382
    5. 'he' → logprob: -6.346212387084961
    6. 'b' → logprob: -6.471212387084961
    7. ' heap' → logprob: -6.596212387084961
    8. '       ' → logprob: -8.346212387084961
    9. ' he' → logprob: -8.346212387084961
    10. ' (' → logprob: -8.346212387084961

Token 1112: ' end' (ID: 1268)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2086791694164276
    2. ' b' → logprob: -1.70867919921875
    3. ' end' → logprob: -5.45867919921875
    4. 'end' → logprob: -5.83367919921875
    5. '   ' → logprob: -9.95867919921875
    6. ' ' → logprob: -13.33367919921875
    7. '    ' → logprob: -13.83367919921875
    8. '```' → logprob: -13.83367919921875
    9. '_end' → logprob: -14.70867919921875
    10. '  ' → logprob: -14.83367919921875

Token 1113: '
' (ID: 198)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.7643477916717529
    2. '(heap' → logprob: -1.389347791671753
    3. 'heap' → logprob: -1.639347791671753
    4. '   ' → logprob: -2.889347791671753
    5. 'b' → logprob: -4.139348030090332
    6. ' heap' → logprob: -5.389348030090332
    7. ',' → logprob: -5.514348030090332
    8. '       ' → logprob: -6.014348030090332
    9. ')' → logprob: -6.389348030090332
    10. '(end' → logprob: -6.639348030090332

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31961843371391296
    2. '(heap' → logprob: -2.0696184635162354
    3. 'heap' → logprob: -2.4446184635162354
    4. '   ' → logprob: -3.1946184635162354
    5. '(b' → logprob: -5.069618225097656
    6. ' heap' → logprob: -5.694618225097656
    7. 'b' → logprob: -5.694618225097656
    8. ',' → logprob: -5.694618225097656
    9. '.' → logprob: -6.694618225097656
    10. ')' → logprob: -7.569618225097656

Token 1115: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.7120533811976202e-05
    2. ' heap' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.500017166137695
    4. 'he' → logprob: -15.125017166137695
    5. '       ' → logprob: -17.500017166137695
    6. '```' → logprob: -18.750017166137695
    7. '(heap' → logprob: -19.125017166137695
    8. '.heap' → logprob: -19.375017166137695
    9. '  ' → logprob: -21.875017166137695
    10. 'b' → logprob: -22.000017166137695

Token 1116: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007391115068458021
    2. '.he' → logprob: -7.250739097595215
    3. 'he' → logprob: -11.125739097595215
    4. 'push' → logprob: -12.500739097595215
    5. 'app' → logprob: -12.500739097595215
    6. '.heap' → logprob: -12.875739097595215
    7. '   ' → logprob: -13.375739097595215
    8. '.push' → logprob: -14.000739097595215
    9. 'heap' → logprob: -14.500739097595215
    10. '```' → logprob: -15.000739097595215

Token 1117: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004860141780227423
    2. 'he' → logprob: -5.504859924316406
    3. 'q' → logprob: -7.379859924316406
    4. '.heap' → logprob: -9.504859924316406
    5. 'push' → logprob: -10.254859924316406
    6. 'heap' → logprob: -11.129859924316406
    7. 'app' → logprob: -11.129859924316406
    8. '.push' → logprob: -11.879859924316406
    9. '```' → logprob: -12.379859924316406
    10. 'ush' → logprob: -12.754859924316406

Token 1118: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.4391956685576588e-05
    2. 'ap' → logprob: -11.875024795532227
    3. 'pp' → logprob: -11.875024795532227
    4. 'push' → logprob: -12.250024795532227
    5. 'append' → logprob: -13.375024795532227
    6. 'he' → logprob: -13.500024795532227
    7. 'appen' → logprob: -14.250024795532227
    8. 'p' → logprob: -14.500024795532227
    9. '[' → logprob: -14.875024795532227
    10. '```' → logprob: -15.125024795532227

Token 1119: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.006253453902900219
    2. 'push' → logprob: -5.631253242492676
    3. 'app' → logprob: -6.006253242492676
    4. 'pp' → logprob: -9.131253242492676
    5. 'p' → logprob: -10.006253242492676
    6. 'end' → logprob: -10.631253242492676
    7. 'op' → logprob: -12.881253242492676
    8. 'q' → logprob: -13.631253242492676
    9. 'nd' → logprob: -13.756253242492676
    10. 'ap' → logprob: -13.756253242492676

Token 1120: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -8.061054359131958e-06
    2. 'min' → logprob: -11.750007629394531
    3. ' min' → logprob: -15.750007629394531
    4. '[min' → logprob: -18.12500762939453
    5. '(' → logprob: -18.25000762939453
    6. ',min' → logprob: -18.25000762939453
    7. '(max' → logprob: -19.75000762939453
    8. '=min' → logprob: -20.12500762939453
    9. '	min' → logprob: -20.50000762939453
    10. '_min' → logprob: -21.12500762939453

Token 1121: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.0031018999870866537
    2. 'min' → logprob: -6.753101825714111
    3. '(min' → logprob: -6.753101825714111
    4. 'heap' → logprob: -7.253101825714111
    5. 'interval' → logprob: -11.25310230255127
    6. '(heap' → logprob: -11.87810230255127
    7. '```' → logprob: -11.87810230255127
    8. 'b' → logprob: -12.12810230255127
    9. '(b' → logprob: -12.62810230255127
    10. ' min' → logprob: -13.00310230255127

Token 1122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06522470712661743
    2. ',b' → logprob: -2.9402246475219727
    3. '(b' → logprob: -4.690224647521973
    4. 'b' → logprob: -7.690224647521973
    5. ' ,' → logprob: -8.065224647521973
    6. ' b' → logprob: -8.690224647521973
    7. '   ' → logprob: -9.440224647521973
    8. ')' → logprob: -9.815224647521973
    9. ')b' → logprob: -11.690224647521973
    10. '	b' → logprob: -12.440224647521973

Token 1123: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196925416588783
    2. ' b' → logprob: -2.81196928024292
    3. '   ' → logprob: -13.561968803405762
    4. '	b' → logprob: -15.436968803405762
    5. '    ' → logprob: -16.811969757080078
    6. ')b' → logprob: -17.811969757080078
    7. '       ' → logprob: -18.561969757080078
    8. '(b' → logprob: -19.311969757080078
    9. 'B' → logprob: -19.436969757080078
    10. ' ' → logprob: -19.561969757080078

Token 1124: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05683695897459984
    2. '
' → logprob: -3.4318368434906006
    3. '   ' → logprob: -3.8068368434906006
    4. ' if' → logprob: -8.55683708190918
    5. 'if' → logprob: -9.30683708190918
    6. '        
' → logprob: -9.30683708190918
    7. 'max' → logprob: -9.68183708190918
    8. ',' → logprob: -9.80683708190918
    9. '<|end|>' → logprob: -10.05683708190918
    10. ')' → logprob: -10.80683708190918

Token 1125: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007473636418581009
    2. ' if' → logprob: -5.257473468780518
    3. 'max' → logprob: -7.132473468780518
    4. '
' → logprob: -7.132473468780518
    5. ' max' → logprob: -7.632473468780518
    6. 'if' → logprob: -9.132473945617676
    7. '       ' → logprob: -10.132473945617676
    8. '	max' → logprob: -12.757473945617676
    9. '    
' → logprob: -13.507473945617676
    10. ' ' → logprob: -14.007473945617676

Token 1126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24971657991409302
    2. 'max' → logprob: -1.7497165203094482
    3. ' if' → logprob: -3.2497165203094482
    4. '   ' → logprob: -4.999716758728027
    5. '       ' → logprob: -6.624716758728027
    6. ' max' → logprob: -8.124716758728027
    7. '```' → logprob: -12.624716758728027
    8. ' ' → logprob: -13.874716758728027
    9. '           ' → logprob: -14.124716758728027
    10. '	if' → logprob: -14.624716758728027

Token 1127: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0797571912407875
    2. 'len' → logprob: -2.5797572135925293
    3. ' max' → logprob: -7.204757213592529
    4. 'max' → logprob: -9.079756736755371
    5. '(len' → logprob: -11.579756736755371
    6. '   ' → logprob: -14.454756736755371
    7. ' ' → logprob: -16.704757690429688
    8. '	len' → logprob: -17.204757690429688
    9. '[len' → logprob: -17.954757690429688
    10. 's' → logprob: -17.954757690429688

Token 1128: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00012082771718269214
    2. '(' → logprob: -9.250121116638184
    3. 'min' → logprob: -10.750121116638184
    4. ' (' → logprob: -13.250121116638184
    5. '(max' → logprob: -14.125121116638184
    6. '(
' → logprob: -14.500121116638184
    7. ' min' → logprob: -15.500121116638184
    8. ')' → logprob: -17.250120162963867
    9. '=min' → logprob: -17.250120162963867
    10. '[min' → logprob: -17.500120162963867

Token 1129: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.014460227452218533
    2. '(min' → logprob: -4.26446008682251
    3. 'min' → logprob: -8.514460563659668
    4. 'heap' → logprob: -9.764460563659668
    5. 'cl' → logprob: -11.389460563659668
    6. '_cl' → logprob: -12.264460563659668
    7. 'q' → logprob: -12.389460563659668
    8. '[min' → logprob: -12.389460563659668
    9. '```' → logprob: -13.014460563659668
    10. ' min' → logprob: -13.014460563659668

Token 1130: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00869529228657484
    2. ' >' → logprob: -4.758695125579834
    3. ')' → logprob: -10.008695602416992
    4. ')>' → logprob: -10.258695602416992
    5. '()>' → logprob: -15.508695602416992
    6. '>

' → logprob: -16.258695602416992
    7. '>)' → logprob: -16.258695602416992
    8. ' ' → logprob: -17.008695602416992
    9. '<|end|>' → logprob: -17.133695602416992
    10. '   ' → logprob: -17.383695602416992

Token 1131: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519918978214264
    2. ' >' → logprob: -1.501991868019104
    3. '<|end|>' → logprob: -10.376992225646973
    4. '   ' → logprob: -12.001992225646973
    5. ')' → logprob: -12.501992225646973
    6. ' ' → logprob: -12.501992225646973
    7. ' >
' → logprob: -12.876992225646973
    8. ')>' → logprob: -13.001992225646973
    9. '<|end|>' → logprob: -13.251992225646973
    10. '       ' → logprob: -13.376992225646973

Token 1132: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02975071594119072
    2. ' max' → logprob: -3.5297508239746094
    3. '	max' → logprob: -16.40475082397461
    4. '=max' → logprob: -16.52975082397461
    5. '[max' → logprob: -16.90475082397461
    6. '(max' → logprob: -17.65475082397461
    7. '
' → logprob: -17.90475082397461
    8. '_max' → logprob: -18.02975082397461
    9. '   ' → logprob: -18.90475082397461
    10. ':max' → logprob: -20.27975082397461

Token 1133: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -1.735893965815194e-05
    2. 'cl' → logprob: -11.625017166137695
    3. 'max' → logprob: -12.625017166137695
    4. '\' → logprob: -13.500017166137695
    5. '(max' → logprob: -14.125017166137695
    6. '
' → logprob: -14.500017166137695
    7. 'Clique' → logprob: -14.625017166137695
    8. '_overlap' → logprob: -14.750017166137695
    9. '   ' → logprob: -15.000017166137695
    10. '_cli' → logprob: -15.000017166137695

Token 1134: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.0002445317804813385
    2. 'que' → logprob: -9.000244140625
    3. 'i' → logprob: -10.000244140625
    4. 'iques' → logprob: -10.625244140625
    5. 'iq' → logprob: -11.000244140625
    6. 'aque' → logprob: -11.375244140625
    7. 'iqu' → logprob: -11.750244140625
    8. 'oque' → logprob: -12.750244140625
    9. 'iquer' → logprob: -12.750244140625
    10. '```' → logprob: -13.750244140625

Token 1135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023750578984618187
    2. '):' → logprob: -6.62737512588501
    3. '<|end|>' → logprob: -8.377374649047852
    4. 'max' → logprob: -8.752374649047852
    5. ':
' → logprob: -8.752374649047852
    6. '=' → logprob: -8.752374649047852
    7. '=max' → logprob: -9.252374649047852
    8. ':max' → logprob: -9.377374649047852
    9. ')' → logprob: -10.252374649047852
    10. '<|end|>' → logprob: -10.377374649047852

Token 1136: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.860935389995575
    2. ' max' → logprob: -1.1109354496002197
    3. '           ' → logprob: -1.4859354496002197
    4. 'max' → logprob: -3.8609354496002197
    5. '(max' → logprob: -7.985935211181641
    6. '[max' → logprob: -9.61093521118164
    7. '	max' → logprob: -9.73593521118164
    8. '=max' → logprob: -9.98593521118164
    9. '```' → logprob: -10.36093521118164
    10. ',max' → logprob: -10.61093521118164

Token 1137: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.001503790495917201
    2. ' max' → logprob: -6.501503944396973
    3. '           ' → logprob: -13.626503944396973
    4. '(max' → logprob: -16.251502990722656
    5. '_max' → logprob: -16.751502990722656
    6. '```' → logprob: -17.001502990722656
    7. 'maxlength' → logprob: -17.126502990722656
    8. 'len' → logprob: -17.126502990722656
    9. '[max' → logprob: -17.376502990722656
    10. '	max' → logprob: -17.626502990722656

Token 1138: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -9.088346359931165e-07
    2. 'cl' → logprob: -14.375000953674316
    3. '\' → logprob: -16.125
    4. '_cli' → logprob: -16.625
    5. '	cl' → logprob: -18.0
    6. '_c' → logprob: -18.0
    7. 'Clique' → logprob: -18.125
    8. '   ' → logprob: -18.625
    9. '_qu' → logprob: -19.125
    10. '_clip' → logprob: -19.25

Token 1139: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.0005203855689615011
    2. 'que' → logprob: -7.8755202293396
    3. 'iques' → logprob: -10.125520706176758
    4. 'iq' → logprob: -10.125520706176758
    5. 'iqu' → logprob: -10.500520706176758
    6. '_cl' → logprob: -11.625520706176758
    7. 'aque' → logprob: -11.750520706176758
    8. 'q' → logprob: -12.750520706176758
    9. 'i' → logprob: -12.875520706176758
    10. 'iquer' → logprob: -13.375520706176758

Token 1140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014178908430039883
    2. ' =' → logprob: -4.26417875289917
    3. '+=' → logprob: -11.764179229736328
    4. '=
' → logprob: -12.389179229736328
    5. '<|end|>' → logprob: -13.264179229736328
    6. '=max' → logprob: -14.764179229736328
    7. '＝' → logprob: -15.389179229736328
    8. ' +=' → logprob: -15.639179229736328
    9. '_=' → logprob: -15.889179229736328
    10. '.=' → logprob: -16.139179229736328

Token 1141: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014133334159851
    2. ' len' → logprob: -1.7014133930206299
    3. '	len' → logprob: -18.076414108276367
    4. '(len' → logprob: -18.201414108276367
    5. '[len' → logprob: -18.326414108276367
    6. '   ' → logprob: -21.826414108276367
    7. '=len' → logprob: -21.951414108276367
    8. 'Len' → logprob: -22.201414108276367
    9. '_len' → logprob: -22.576414108276367
    10. ',len' → logprob: -22.951414108276367

Token 1142: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -3.2020991056924686e-05
    2. 'min' → logprob: -10.750032424926758
    3. '(' → logprob: -11.500032424926758
    4. '[min' → logprob: -15.000032424926758
    5. '(max' → logprob: -17.625032424926758
    6. ' min' → logprob: -17.750032424926758
    7. '=min' → logprob: -18.875032424926758
    8. ',min' → logprob: -19.000032424926758
    9. '(
' → logprob: -19.375032424926758
    10. ' (' → logprob: -19.500032424926758

Token 1143: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.0046324534341692924
    2. '(min' → logprob: -5.504632472991943
    3. 'min' → logprob: -7.754632472991943
    4. 'heap' → logprob: -9.254631996154785
    5. 'q' → logprob: -11.254631996154785
    6. ' min' → logprob: -12.129631996154785
    7. '[min' → logprob: -12.504631996154785
    8. '_queue' → logprob: -13.629631996154785
    9. '```' → logprob: -13.879631996154785
    10. '_min' → logprob: -14.004631996154785

Token 1144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004231666214764118
    2. '<|end|>' → logprob: -5.5042314529418945
    3. '<|end|>' → logprob: -9.754231452941895
    4. ')
' → logprob: -10.379231452941895
    5. '       ' → logprob: -10.504231452941895
    6. ' )' → logprob: -11.629231452941895
    7. '   ' → logprob: -11.754231452941895
    8. '}' → logprob: -11.879231452941895
    9. ']' → logprob: -12.379231452941895
    10. ')return' → logprob: -13.629231452941895

Token 1145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33268943428993225
    2. '   ' → logprob: -1.7076894044876099
    3. '    
' → logprob: -2.3326895236968994
    4. '  
' → logprob: -6.33268928527832
    5. '```' → logprob: -6.83268928527832
    6. ')
' → logprob: -7.83268928527832
    7. '   
' → logprob: -7.95768928527832
    8. ' 
' → logprob: -8.20768928527832
    9. ')' → logprob: -8.20768928527832
    10. '

' → logprob: -8.95768928527832

Token 1146: ' s' (ID: 265)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26554134488105774
    2. '   ' → logprob: -1.5155413150787354
    3. 'print' → logprob: -4.6405415534973145
    4. '```' → logprob: -5.8905415534973145
    5. '    
' → logprob: -6.8905415534973145
    6. ' print' → logprob: -10.015541076660156
    7. 's' (adapté à ' s') → logprob: -11.265541076660156
    8. '
' → logprob: -11.640541076660156
    9. '\n' → logprob: -11.765541076660156
    10. '``' → logprob: -12.515541076660156

Token 1147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004626768175512552
    2. '_' → logprob: -5.379626750946045
    3. 's' → logprob: -13.129627227783203
    4. '=' → logprob: -14.129627227783203
    5. ' ' → logprob: -14.129627227783203
    6. ' _' → logprob: -15.004627227783203
    7. ' =' → logprob: -15.004627227783203
    8. '.' → logprob: -15.004627227783203
    9. '2' → logprob: -15.129627227783203
    10. ')' → logprob: -15.129627227783203

Token 1148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23091919720172882
    2. ' =' → logprob: -1.6059192419052124
    3. ',' → logprob: -5.355919361114502
    4. '   ' → logprob: -7.730919361114502
    5. ' +=' → logprob: -8.480918884277344
    6. ')' → logprob: -10.230918884277344
    7. '+=' → logprob: -11.355918884277344
    8. ' =
' → logprob: -11.355918884277344
    9. '    ' → logprob: -11.855918884277344
    10. '  ' → logprob: -11.980918884277344

Token 1149: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020667314529419
    2. ' max' → logprob: -2.3502066135406494
    3. '(max' → logprob: -19.22520637512207
    4. '   ' → logprob: -19.72520637512207
    5. '	max' → logprob: -19.85020637512207
    6. '=max' → logprob: -20.72520637512207
    7. '[max' → logprob: -21.22520637512207
    8. ' ' → logprob: -21.97520637512207
    9. '_max' → logprob: -22.60020637512207
    10. ',max' → logprob: -22.60020637512207

Token 1150: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -5.438573680294212e-06
    2. '(max' → logprob: -12.500005722045898
    3. 'max' → logprob: -14.500005722045898
    4. 'cl' → logprob: -14.500005722045898
    5. '(min' → logprob: -15.750005722045898
    6. '_cli' → logprob: -15.875005722045898
    7. '\' → logprob: -16.1250057220459
    8. 's' → logprob: -16.3750057220459
    9. 'Clique' → logprob: -17.2500057220459
    10. '(cl' → logprob: -17.3750057220459

Token 1151: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.008012812584638596
    2. 'que' → logprob: -4.883012771606445
    3. 'iq' → logprob: -8.508012771606445
    4. 'i' → logprob: -10.383012771606445
    5. 'iques' → logprob: -10.383012771606445
    6. 'ick' → logprob: -10.508012771606445
    7. 'iqu' → logprob: -10.633012771606445
    8. 'e' → logprob: -10.633012771606445
    9. 'q' → logprob: -11.008012771606445
    10. 'aque' → logprob: -11.133012771606445

Token 1152: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01779482327401638
    2. '   ' → logprob: -4.267794609069824
    3. '    
' → logprob: -5.892794609069824
    4. 'print' → logprob: -7.142794609069824
    5. '```' → logprob: -9.892794609069824
    6. '

' → logprob: -11.642794609069824
    7. '  
' → logprob: -11.767794609069824
    8. '
' → logprob: -12.767794609069824
    9. ' print' → logprob: -13.517794609069824
    10. '\n' → logprob: -14.392794609069824

Token 1153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11233349144458771
    2. '
' → logprob: -2.8623335361480713
    3. '    
' → logprob: -3.1123335361480713
    4. 'print' → logprob: -5.862333297729492
    5. '```' → logprob: -6.362333297729492
    6. '  
' → logprob: -10.112333297729492
    7. '        
' → logprob: -12.612333297729492
    8. '``' → logprob: -12.737333297729492
    9. '   
' → logprob: -13.362333297729492
    10. '    
    
' → logprob: -14.362333297729492

Token 1154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018169255927205086
    2. '   ' → logprob: -4.018169403076172
    3. '```' → logprob: -11.268169403076172
    4. ' print' → logprob: -12.268169403076172
    5. '
' → logprob: -13.268169403076172
    6. '    
' → logprob: -15.893169403076172
    7. '``' → logprob: -17.143169403076172
    8. 'return' → logprob: -17.393169403076172
    9. '	print' → logprob: -19.268169403076172
    10. '`' → logprob: -20.768169403076172

Token 1155: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00045712877181358635
    2. '(f' → logprob: -7.750457286834717
    3. 's' → logprob: -10.625456809997559
    4. '(' → logprob: -13.250456809997559
    5. 'f' → logprob: -15.375456809997559
    6. '((' → logprob: -16.875457763671875
    7. '(min' → logprob: -17.250457763671875
    8. '(max' → logprob: -17.625457763671875
    9. '   ' → logprob: -18.625457763671875
    10. ' (' → logprob: -19.375457763671875

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.500017166137695
    3. '2' → logprob: -12.375017166137695
    4. '_' → logprob: -13.625017166137695
    5. ')' → logprob: -14.375017166137695
    6. '"' → logprob: -15.625017166137695
    7. ' ' → logprob: -15.875017166137695
    8. '```' → logprob: -16.375017166137695
    9. '()' → logprob: -16.500017166137695
    10. '[' → logprob: -17.000017166137695

Token 1157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015002528380136937
    2. ',s' → logprob: -8.875149726867676
    3. ' ,' → logprob: -11.625149726867676
    4. ',end' → logprob: -14.625149726867676
    5. '   ' → logprob: -15.250149726867676
    6. ')' → logprob: -15.375149726867676
    7. 's' → logprob: -15.625149726867676
    8. ',
' → logprob: -16.500150680541992
    9. ' s' → logprob: -16.625150680541992
    10. ',b' → logprob: -17.375150680541992

Token 1158: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024758970830589533
    2. ' s' → logprob: -6.002475738525391
    3. ''' → logprob: -16.25247573852539
    4. '   ' → logprob: -17.75247573852539
    5. ''s' → logprob: -18.12747573852539
    6. '"' → logprob: -18.25247573852539
    7. ',' → logprob: -18.62747573852539
    8. ' ' → logprob: -19.00247573852539
    9. '(s' → logprob: -19.12747573852539
    10. ')' → logprob: -19.37747573852539

Token 1159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. 's' → logprob: -14.875000953674316
    4. '```' → logprob: -16.875001907348633
    5. '"' → logprob: -17.000001907348633
    6. ''' → logprob: -17.500001907348633
    7. '_' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '`' → logprob: -18.125001907348633
    10. '
' → logprob: -18.375001907348633

Token 1160: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. '()' → logprob: -11.000032424926758
    3. '())' → logprob: -11.375032424926758
    4. ' )' → logprob: -13.750032424926758
    5. ')
' → logprob: -13.875032424926758
    6. '')' → logprob: -14.250032424926758
    7. ',' → logprob: -14.500032424926758
    8. '")' → logprob: -14.625032424926758
    9. '),' → logprob: -16.375032424926758
    10. '   ' → logprob: -16.500032424926758

Token 1161: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1162: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3485301733016968
    2. '__' → logprob: -1.2235301733016968
    3. 'name' → logprob: -10.723529815673828
    4. '_' → logprob: -10.848529815673828
    5. '___' → logprob: -11.098529815673828
    6. '_name' → logprob: -11.348529815673828
    7. 'if' → logprob: -12.223529815673828
    8. 'Name' → logprob: -12.973529815673828
    9. ' ' → logprob: -13.098529815673828
    10. ''' → logprob: -13.473529815673828

Token 1163: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5425728559494019
    2. '__' → logprob: -0.9175728559494019
    3. '==' → logprob: -4.042572975158691
    4. ' __' → logprob: -7.167572975158691
    5. '=="' → logprob: -7.667572975158691
    6. 'name' → logprob: -8.167572975158691
    7. '```' → logprob: -10.042572975158691
    8. '.__' → logprob: -10.667572975158691
    9. '_' → logprob: -10.792572975158691
    10. '=='' → logprob: -11.042572975158691

Token 1164: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.052377623040229e-05
    2. '==' → logprob: -9.750070571899414
    3. '=="' → logprob: -12.000070571899414
    4. ' ==' → logprob: -12.875070571899414
    5. '__.__' → logprob: -12.875070571899414
    6. '____' → logprob: -15.500070571899414
    7. '=='' → logprob: -15.625070571899414
    8. '___' → logprob: -15.750070571899414
    9. '__
' → logprob: -16.375070571899414
    10. '__.' → logprob: -16.500070571899414

Token 1165: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19356699287891388
    2. '==' → logprob: -1.9435670375823975
    3. '=="' → logprob: -3.6935670375823975
    4. ' ==' → logprob: -5.068566799163818
    5. '=='' → logprob: -6.568566799163818
    6. '__.__' → logprob: -9.943567276000977
    7. '()==' → logprob: -9.943567276000977
    8. '```' → logprob: -10.568567276000977
    9. '==
' → logprob: -11.193567276000977
    10. '__":
' → logprob: -11.443567276000977

Token 1166: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07892415672540665
    2. ''' → logprob: -2.5789241790771484
    3. '__' → logprob: -10.328924179077148
    4. ' "__' → logprob: -13.578924179077148
    5. '"user' → logprob: -16.57892417907715
    6. '   ' → logprob: -16.57892417907715
    7. ' '__' → logprob: -16.82892417907715
    8. '`' → logprob: -17.20392417907715
    9. '("__' → logprob: -17.20392417907715
    10. '('__' → logprob: -17.70392417907715

Token 1167: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03812342509627342
    2. '__' → logprob: -3.288123369216919
    3. ''' → logprob: -10.03812313079834
    4. 'name' → logprob: -10.28812313079834
    5. '"' → logprob: -13.03812313079834
    6. '_main' → logprob: -13.91312313079834
    7. ' main' → logprob: -14.41312313079834
    8. '__':
' → logprob: -15.66312313079834
    9. ' '__' → logprob: -15.66312313079834
    10. ''name' → logprob: -16.663124084472656

Token 1168: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.4376961290836334
    2. '():
' → logprob: -1.312696099281311
    3. '__":
' → logprob: -2.9376962184906006
    4. '__' → logprob: -3.5626962184906006
    5. ':
' → logprob: -6.3126959800720215
    6. '   ' → logprob: -7.3126959800720215
    7. ':' → logprob: -7.8126959800720215
    8. '()' → logprob: -8.18769645690918
    9. '('__' → logprob: -8.43769645690918
    10. '__()
' → logprob: -8.93769645690918

Token 1169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001531885820440948
    2. 'main' → logprob: -6.501532077789307
    3. '	main' → logprob: -10.501531600952148
    4. ' main' → logprob: -13.876531600952148
    5. '```' → logprob: -14.251531600952148
    6. '(main' → logprob: -15.751531600952148
    7. '   ' → logprob: -15.751531600952148
    8. '    
' → logprob: -16.25153160095215
    9. '_main' → logprob: -16.87653160095215
    10. 'import' → logprob: -18.37653160095215

Token 1170: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -21.0
    5. '_main' → logprob: -23.625
    6. '(main' → logprob: -24.625
    7. '.main' → logprob: -24.875
    8. 'import' → logprob: -26.75
    9. '```' → logprob: -26.875
    10. 'Main' → logprob: -27.0

Token 1171: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1169
Tokens correctement prédits (1ère position, stricte): 300
Tokens correctement prédits (1ère position, avec adaptation): 315
Tokens correctement prédits (top 10): 728
Précision stricte (1ère position): 25.66%
Précision adaptée (1ère position): 26.95%
Précision (top 10): 62.28%
================================================================================
