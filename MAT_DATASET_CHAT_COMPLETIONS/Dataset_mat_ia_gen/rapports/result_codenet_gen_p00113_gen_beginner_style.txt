================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        line = input()
        if line == '':
            break
        p, q = map(int, line.split())
        remainder = p % q
        decimals = []
        seen = {}
        pos = 0
        repeating_start = -1
        while remainder != 0:
            if remainder in seen:
                repeating_start = seen[remainder]
                break
            seen[remainder] = pos
            remainder *= 10
            decimals.append(str(remainder // q))
            remainder %= q
            pos += 1
        if remainder == 0:
            print(''.join(decimals))
        else:
            non_repeating = decimals[:repeating_start]
            repeating = decimals[repeating_start:]
            print(''.join(decimals))
            # Prepare the second line with spaces and ^ under repeating part
            line2 = ''
            length = len(decimals)
            for i in range(length):
                if i >= repeating_start:
                    line2 += '^'
                else:
                    line2 += ' '
            print(line2)
    except EOFError:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9806610941886902
    2. ' ' → logprob: -1.605661153793335
    3. '    ' → logprob: -1.855661153793335
    4. '\' → logprob: -2.355661153793335
    5. '    
' → logprob: -3.355661153793335
    6. '\n' → logprob: -3.480661153793335
    7. '```' → logprob: -3.605661153793335
    8. '<|end|>' → logprob: -4.230660915374756
    9. ' 
' → logprob: -4.355660915374756
    10. '     
' → logprob: -5.230660915374756

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034928982495330274
    2. ' :' → logprob: -8.125349044799805
    3. '):' → logprob: -11.000349044799805
    4. '   ' → logprob: -11.500349044799805
    5. ':
' → logprob: -11.500349044799805
    6. '       ' → logprob: -12.125349044799805
    7. '    ' → logprob: -13.125349044799805
    8. '():' → logprob: -13.250349044799805
    9. '':' → logprob: -13.625349044799805
    10. '":' → logprob: -14.500349044799805

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024322629906237125
    2. '   ' → logprob: -6.127432346343994
    3. ':' → logprob: -9.627431869506836
    4. '    ' → logprob: -9.877431869506836
    5. ' :' → logprob: -10.252431869506836
    6. ' ' → logprob: -10.752431869506836
    7. '<|end|>' → logprob: -10.877431869506836
    8. '```' → logprob: -11.627431869506836
    9. ':
' → logprob: -12.002431869506836
    10. '     ' → logprob: -12.127431869506836

Token 7: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5167471170425415
    2. '   ' → logprob: -1.5167471170425415
    3. '       ' → logprob: -2.266746997833252
    4. 'input' → logprob: -3.891746997833252
    5. 'print' → logprob: -4.016746997833252
    6. 'response' → logprob: -5.141746997833252
    7. '(' → logprob: -5.391746997833252
    8. ':' → logprob: -5.641746997833252
    9. 'int' → logprob: -5.766746997833252
    10. 'except' → logprob: -5.891746997833252

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8200920820236206
    2. ' =' → logprob: -0.9450920820236206
    3. '.' → logprob: -2.57009220123291
    4. ')' → logprob: -3.82009220123291
    5. '       ' → logprob: -3.94509220123291
    6. ':' → logprob: -4.32009220123291
    7. '[' → logprob: -4.57009220123291
    8. '[:]' → logprob: -4.57009220123291
    9. '.readline' → logprob: -5.19509220123291
    10. '        ' → logprob: -6.57009220123291

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6932532787322998
    2. ' input' → logprob: -0.6932532787322998
    3. 'file' → logprob: -10.443253517150879
    4. ' f' → logprob: -10.568253517150879
    5. ' file' → logprob: -10.943253517150879
    6. 'sys' → logprob: -12.443253517150879
    7. ' raw' → logprob: -12.568253517150879
    8. 'f' → logprob: -12.693253517150879
    9. 'raw' → logprob: -12.943253517150879
    10. ' next' → logprob: -13.193253517150879

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006675116717815399
    2. '()' → logprob: -5.1316752433776855
    3. '('' → logprob: -7.5066752433776855
    4. ')' → logprob: -10.006674766540527
    5. '("("' → logprob: -10.131674766540527
    6. '(
' → logprob: -10.506674766540527
    7. ''' → logprob: -10.881674766540527
    8. '("")' → logprob: -11.506674766540527
    9. '```' → logprob: -11.631674766540527
    10. ' ' → logprob: -12.006674766540527

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22094248235225677
    2. ')' → logprob: -2.720942497253418
    3. '   ' → logprob: -3.345942497253418
    4. ' ' → logprob: -3.970942497253418
    5. ' if' → logprob: -3.970942497253418
    6. '    ' → logprob: -4.595942497253418
    7. '<|end|>' → logprob: -4.720942497253418
    8. '\n' → logprob: -4.845942497253418
    9. '        ' → logprob: -5.345942497253418
    10. '           ' → logprob: -5.970942497253418

Token 12: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08062363415956497
    2. ' if' → logprob: -2.8306236267089844
    3. '.strip' → logprob: -4.955623626708984
    4. '.' → logprob: -5.705623626708984
    5. 'if' (adapté à ' if') → logprob: -6.205623626708984
    6. '   ' → logprob: -6.705623626708984
    7. '           ' → logprob: -6.830623626708984
    8. '=' → logprob: -7.330623626708984
    9. ' ' → logprob: -7.580623626708984
    10. ')' → logprob: -7.955623626708984

Token 13: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7366209030151367
    2. ' line' → logprob: -0.7366209030151367
    3. ' ' → logprob: -3.2366209030151367
    4. ' len' → logprob: -5.986620903015137
    5. 'line' → logprob: -7.986620903015137
    6. 'not' → logprob: -8.361620903015137
    7. ' lines' → logprob: -9.611620903015137
    8. '  ' → logprob: -10.361620903015137
    9. ' isinstance' → logprob: -10.736620903015137
    10. ' ' → logprob: -11.111620903015137

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06216385215520859
    2. '.startswith' → logprob: -3.812163829803467
    3. ' .' → logprob: -4.437163829803467
    4. '.strip' → logprob: -4.437163829803467
    5. '.' → logprob: -4.687163829803467
    6. ' ' → logprob: -6.187163829803467
    7. '==' → logprob: -6.437163829803467
    8. '.endswith' → logprob: -7.812163829803467
    9. ' !=' → logprob: -8.187164306640625
    10. '    ' → logprob: -8.687164306640625

Token 15: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2523626387119293
    2. '""' → logprob: -2.3773627281188965
    3. ''' → logprob: -2.5023627281188965
    4. ' ""' → logprob: -4.0023627281188965
    5. '''' → logprob: -4.2523627281188965
    6. ' "' → logprob: -4.8773627281188965
    7. ' ''' → logprob: -5.2523627281188965
    8. ' '' → logprob: -6.1273627281188965
    9. ' ' → logprob: -7.7523627281188965
    10. '"":' → logprob: -8.502362251281738

Token 16: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034186843782663345
    2. '       ' → logprob: -4.409186840057373
    3. ' break' → logprob: -4.534186840057373
    4. ':' → logprob: -4.659186840057373
    5. ' continue' → logprob: -8.159187316894531
    6. '   ' → logprob: -8.284187316894531
    7. 'break' → logprob: -9.159187316894531
    8. ':
' → logprob: -9.534187316894531
    9. '          ' → logprob: -9.534187316894531
    10. '	break' → logprob: -9.659187316894531

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.669093668460846
    2. '           ' → logprob: -0.919093668460846
    3. '       ' → logprob: -2.919093608856201
    4. 'break' (adapté à ' break') → logprob: -3.419093608856201
    5. '   ' → logprob: -7.294093608856201
    6. '	break' → logprob: -7.794093608856201
    7. '```' → logprob: -8.04409408569336
    8. ' ' → logprob: -8.29409408569336
    9. '_break' → logprob: -8.54409408569336
    10. '               ' → logprob: -8.79409408569336

Token 18: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.938173234462738
    2. '<|end|>' → logprob: -1.3131732940673828
    3. '\n' → logprob: -2.438173294067383
    4. '
' → logprob: -2.688173294067383
    5. ')' → logprob: -2.688173294067383
    6. '   ' → logprob: -3.563173294067383
    7. '\' → logprob: -3.813173294067383
    8. ':' → logprob: -3.938173294067383
    9. '<|end|>' → logprob: -4.313173294067383
    10. '    
' → logprob: -5.438173294067383

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08354155719280243
    2. '\n' → logprob: -3.2085416316986084
    3. '   ' → logprob: -3.9585416316986084
    4. '\' → logprob: -4.708541393280029
    5. ' except' → logprob: -6.083541393280029
    6. '
' → logprob: -6.333541393280029
    7. ':' → logprob: -6.458541393280029
    8. 'except' → logprob: -6.458541393280029
    9. '           ' → logprob: -7.083541393280029
    10. '\r' → logprob: -7.083541393280029

Token 20: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08655548095703125
    2. '           ' → logprob: -2.7115554809570312
    3. 'print' → logprob: -4.711555480957031
    4. '   ' → logprob: -5.961555480957031
    5. ' print' → logprob: -7.086555480957031
    6. '\' → logprob: -7.586555480957031
    7. 'except' → logprob: -7.586555480957031
    8. ' except' → logprob: -7.836555480957031
    9. '\n' → logprob: -7.961555480957031
    10. ')' → logprob: -7.961555480957031

Token 21: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003542926860973239
    2. 'rin' → logprob: -8.375354766845703
    3. ' r' → logprob: -10.375354766845703
    4. '   ' → logprob: -11.000354766845703
    5. 'ri' → logprob: -11.250354766845703
    6. 'arse' → logprob: -11.625354766845703
    7. 'ass' → logprob: -11.625354766845703
    8. 'rocess' → logprob: -11.625354766845703
    9. 'ar' → logprob: -12.125354766845703
    10. ' =' → logprob: -12.500354766845703

Token 22: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4236542284488678
    2. 'q' → logprob: -1.1736541986465454
    3. 's' → logprob: -5.298654079437256
    4. ' ' → logprob: -5.423654079437256
    5. ' p' → logprob: -6.298654079437256
    6. 'w' → logprob: -6.298654079437256
    7. ' =' → logprob: -6.673654079437256
    8. ' w' → logprob: -6.673654079437256
    9. ' s' → logprob: -6.673654079437256
    10. 'int' → logprob: -6.798654079437256

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045916877686977386
    2. '=' → logprob: -3.170916795730591
    3. ',' → logprob: -5.92091703414917
    4. ' ' → logprob: -8.920916557312012
    5. ' ,' → logprob: -9.920916557312012
    6. ')' → logprob: -10.170916557312012
    7. '   ' → logprob: -13.170916557312012
    8. '<|end|>' → logprob: -13.170916557312012
    9. '  ' → logprob: -13.670916557312012
    10. ' =
' → logprob: -14.045916557312012

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07284005731344223
    2. ' line' → logprob: -3.0728399753570557
    3. 'map' → logprob: -3.8228399753570557
    4. 'line' → logprob: -6.697840213775635
    5. ' list' → logprob: -7.822840213775635
    6. ' p' → logprob: -8.447839736938477
    7. ' [' → logprob: -9.322839736938477
    8. ' ' → logprob: -10.072839736938477
    9. '[' → logprob: -10.322839736938477
    10. 'list' → logprob: -10.447839736938477

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20695096254348755
    2. '(' → logprob: -1.8319509029388428
    3. '(str' → logprob: -3.7069509029388428
    4. '(input' → logprob: -7.081951141357422
    5. '(lambda' → logprob: -7.206951141357422
    6. 'int' → logprob: -7.831951141357422
    7. 'str' → logprob: -9.081951141357422
    8. '(list' → logprob: -10.081951141357422
    9. '[int' → logprob: -10.331951141357422
    10. '(
' → logprob: -10.456951141357422

Token 26: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.010854094289243221
    2. '(' → logprob: -5.260854244232178
    3. ',' → logprob: -6.135854244232178
    4. ')' → logprob: -6.260854244232178
    5. ',line' → logprob: -7.010854244232178
    6. '(input' → logprob: -8.01085376739502
    7. ' line' → logprob: -8.88585376739502
    8. 'line' → logprob: -10.38585376739502
    9. ' (' → logprob: -10.51085376739502
    10. '(p' → logprob: -11.01085376739502

Token 27: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3492451012134552
    2. 'line' → logprob: -1.2242450714111328
    3. ')' → logprob: -8.224245071411133
    4. 'input' → logprob: -8.224245071411133
    5. ' input' → logprob: -8.474245071411133
    6. '(line' → logprob: -10.224245071411133
    7. '	line' → logprob: -12.349245071411133
    8. '[line' → logprob: -12.474245071411133
    9. ' )' → logprob: -12.974245071411133
    10. '#line' → logprob: -13.224245071411133

Token 28: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0870543047785759
    2. '.strip' → logprob: -2.8370542526245117
    3. '.' → logprob: -4.337054252624512
    4. '().' → logprob: -4.462054252624512
    5. '.rstrip' → logprob: -9.462054252624512
    6. ').' → logprob: -10.462054252624512
    7. ')' → logprob: -10.712054252624512
    8. '.readline' → logprob: -11.212054252624512
    9. ' .' → logprob: -11.337054252624512
    10. 'split' → logprob: -12.587054252624512

Token 29: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1460435837507248
    2. '())' → logprob: -2.021043539047241
    3. '()' → logprob: -6.14604377746582
    4. ')' → logprob: -7.52104377746582
    5. '(','' → logprob: -7.77104377746582
    6. '(' → logprob: -8.64604377746582
    7. '()))' → logprob: -11.14604377746582
    8. '("' → logprob: -11.14604377746582
    9. '())
' → logprob: -11.14604377746582
    10. '(',' → logprob: -11.52104377746582

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5070738196372986
    2. ':' → logprob: -1.8820738792419434
    3. ')' → logprob: -2.0070738792419434
    4. '<|end|>' → logprob: -2.6320738792419434
    5. ',' → logprob: -4.632073879241943
    6. ':
' → logprob: -5.007073879241943
    7. '\n' → logprob: -5.132073879241943
    8. '
' → logprob: -5.507073879241943
    9. '        
' → logprob: -6.257073879241943
    10. '#' → logprob: -6.632073879241943

Token 31: ' remainder' (ID: 47056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22408735752105713
    2. ' if' → logprob: -2.4740872383117676
    3. 'if' → logprob: -3.8490872383117676
    4. 's' → logprob: -4.224087238311768
    5. 'result' → logprob: -4.224087238311768
    6. '   ' → logprob: -4.474087238311768
    7. 'n' → logprob: -4.599087238311768
    8. ' ' → logprob: -4.849087238311768
    9. '        ' → logprob: -5.974087238311768
    10. ' result' → logprob: -6.099087238311768

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07972098886966705
    2. '=' → logprob: -3.329720973968506
    3. 's' → logprob: -3.329720973968506
    4. ' ' → logprob: -5.704720973968506
    5. '_' → logprob: -6.829720973968506
    6. '  ' → logprob: -8.329721450805664
    7. ',' → logprob: -9.079721450805664
    8. ')' → logprob: -9.204721450805664
    9. '1' → logprob: -10.454721450805664
    10. '(' → logprob: -10.954721450805664

Token 33: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.031365033239126205
    2. 'p' → logprob: -3.531364917755127
    3. ' q' → logprob: -6.656364917755127
    4. 'q' → logprob: -8.531365394592285
    5. ' ' → logprob: -9.281365394592285
    6. ' (' → logprob: -10.781365394592285
    7. '(p' → logprob: -12.218865394592285
    8. '0' → logprob: -13.906365394592285
    9. ')' → logprob: -13.968865394592285
    10. '(' → logprob: -14.031365394592285

Token 34: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08901166170835495
    2. '%' → logprob: -2.4640116691589355
    3. ' ' → logprob: -9.589011192321777
    4. ' ' → logprob: -14.339011192321777
    5. '-' → logprob: -14.589011192321777
    6. ')' → logprob: -15.276511192321777
    7. '%i' → logprob: -15.276511192321777
    8. ' %
' → logprob: -15.464011192321777
    9. '%n' → logprob: -15.651511192321777
    10. ' %

' → logprob: -15.714011192321777

Token 35: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10027546435594559
    2. ' q' → logprob: -2.3502755165100098
    3. ' ' → logprob: -10.100275039672852
    4. '10' → logprob: -12.225275039672852
    5. '	q' → logprob: -12.350275039672852
    6. '100' → logprob: -12.975275039672852
    7. '2' → logprob: -13.100275039672852
    8. '7' → logprob: -13.225275039672852
    9. '   ' → logprob: -13.850275039672852
    10. '  ' → logprob: -13.975275039672852

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' decimals' (ID: 102128)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5708447098731995
    2. '       ' → logprob: -1.5708446502685547
    3. 'if' → logprob: -1.8208446502685547
    4. ' if' → logprob: -2.9458446502685547
    5. ' print' → logprob: -4.570844650268555
    6. 'result' → logprob: -7.070844650268555
    7. '        ' → logprob: -8.320844650268555
    8. '   ' → logprob: -8.445844650268555
    9. 'count' → logprob: -8.695844650268555
    10. 'answer' → logprob: -9.195844650268555

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012572279199957848
    2. '=' → logprob: -4.387572288513184
    3. ' ' → logprob: -10.887572288513184
    4. '_' → logprob: -11.387572288513184
    5. ',' → logprob: -11.512572288513184
    6. '=[]' → logprob: -12.387572288513184
    7. ' +=' → logprob: -12.887572288513184
    8. 's' → logprob: -13.137572288513184
    9. '_count' → logprob: -13.512572288513184
    10. '   ' → logprob: -13.512572288513184

Token 40: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6287993788719177
    2. ' []' → logprob: -0.8787993788719177
    3. '[' → logprob: -4.0037994384765625
    4. '""' → logprob: -4.6287994384765625
    5. '''' → logprob: -5.1287994384765625
    6. '[p' → logprob: -5.1287994384765625
    7. ' [' → logprob: -5.6287994384765625
    8. ''' → logprob: -6.0037994384765625
    9. '"' → logprob: -6.6287994384765625
    10. ''p' → logprob: -6.6287994384765625

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18723087012767792
    2. '   ' → logprob: -2.3122308254241943
    3. ' while' → logprob: -3.3122308254241943
    4. 'while' → logprob: -4.187231063842773
    5. '.' → logprob: -5.312231063842773
    6. '<|end|>' → logprob: -5.562231063842773
    7. ':' → logprob: -5.687231063842773
    8. ' ' → logprob: -5.937231063842773
    9. '    ' → logprob: -6.812231063842773
    10. ',' → logprob: -7.187231063842773

Token 42: ' seen' (ID: 6177)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.5723637342453003
    2. '       ' → logprob: -2.19736385345459
    3. 'seen' (adapté à ' seen') → logprob: -2.32236385345459
    4. '.' → logprob: -2.44736385345459
    5. 'while' → logprob: -2.57236385345459
    6. 'num' → logprob: -2.82236385345459
    7. '    ' → logprob: -3.32236385345459
    8. 'visited' → logprob: -3.44736385345459
    9. '        ' → logprob: -3.57236385345459
    10. 'rema' → logprob: -3.57236385345459

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041078366339206696
    2. ' =' → logprob: -3.2910783290863037
    3. '={}' → logprob: -6.166078567504883
    4. '<|end|>' → logprob: -7.416078567504883
    5. '[' → logprob: -9.291078567504883
    6. '=set' → logprob: -9.416078567504883
    7. '=[]' → logprob: -10.291078567504883
    8. '.setdefault' → logprob: -10.416078567504883
    9. '={' → logprob: -11.291078567504883
    10. '<|end|>' → logprob: -11.541078567504883

Token 44: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.018386615440249443
    2. ' {}' → logprob: -4.0183868408203125
    3. '{' → logprob: -8.518386840820312
    4. 'set' → logprob: -11.143386840820312
    5. '{}
' → logprob: -12.018386840820312
    6. 'dict' → logprob: -12.268386840820312
    7. ' {' → logprob: -12.768386840820312
    8. ' ' → logprob: -13.268386840820312
    9. ' set' → logprob: -13.518386840820312
    10. '{}

' → logprob: -13.643386840820312

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01686927117407322
    2. ' while' → logprob: -5.141869068145752
    3. ' ' → logprob: -5.516869068145752
    4. '<|end|>' → logprob: -6.391869068145752
    5. '        ' → logprob: -6.891869068145752
    6. '   ' → logprob: -7.141869068145752
    7. '        
' → logprob: -7.266869068145752
    8. 'while' → logprob: -7.766869068145752
    9. ' 
' → logprob: -7.891869068145752
    10. ' for' → logprob: -8.14186954498291

Token 46: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6362634301185608
    2. ' while' → logprob: -1.636263370513916
    3. ' ' → logprob: -3.136263370513916
    4. '        ' → logprob: -3.136263370513916
    5. 'while' → logprob: -3.136263370513916
    6. 'index' → logprob: -3.511263370513916
    7. ' index' → logprob: -3.761263370513916
    8. ' i' → logprob: -4.011263370513916
    9. 'position' → logprob: -4.511263370513916
    10. 'i' → logprob: -4.886263370513916

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01343819871544838
    2. 'ition' → logprob: -4.6384382247924805
    3. ' =' → logprob: -5.6384382247924805
    4. 'itions' → logprob: -9.63843822479248
    5. 's' → logprob: -11.01343822479248
    6. 'i' → logprob: -11.63843822479248
    7. 'ion' → logprob: -11.76343822479248
    8. 'itive' → logprob: -12.63843822479248
    9. 'ITION' → logprob: -12.63843822479248
    10. 'tion' → logprob: -13.13843822479248

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17979860305786133
    2. ' ' → logprob: -1.8047986030578613
    3. ' len' → logprob: -10.054798126220703
    4. 'len' → logprob: -11.554798126220703
    5. '   ' → logprob: -14.179798126220703
    6. '1' → logprob: -15.867298126220703
    7. '  ' → logprob: -15.929798126220703
    8. '۰' → logprob: -16.554798126220703
    9. '    ' → logprob: -16.804798126220703
    10. '       ' → logprob: -17.054798126220703

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.62503719329834
    3. 'len' → logprob: -11.25003719329834
    4. '1' → logprob: -15.75003719329834
    5. ' len' → logprob: -17.750038146972656
    6. '۰' → logprob: -17.875038146972656
    7. '-' → logprob: -19.000038146972656
    8. '```' → logprob: -19.125038146972656
    9. '2' → logprob: -19.625038146972656
    10. '(len' → logprob: -19.625038146972656

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.501651406288147
    2. '<|end|>' → logprob: -1.001651406288147
    3. ' while' → logprob: -4.876651287078857
    4. ' ' → logprob: -5.001651287078857
    5. '   ' → logprob: -5.376651287078857
    6. '<|end|>' → logprob: -5.501651287078857
    7. ' 
' → logprob: -7.001651287078857
    8. '        
' → logprob: -7.376651287078857
    9. 'while' → logprob: -7.751651287078857
    10. '	while' → logprob: -8.126651763916016

Token 52: ' repeating' (ID: 74481)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9670664072036743
    2. ' ' → logprob: -1.9670664072036743
    3. ' while' → logprob: -1.9670664072036743
    4. '       ' → logprob: -2.0920662879943848
    5. '<|end|>' → logprob: -2.2170662879943848
    6. '   ' → logprob: -2.9670662879943848
    7. 'w' → logprob: -4.092066287994385
    8. ' 
' → logprob: -5.092066287994385
    9. '```' → logprob: -5.342066287994385
    10. '#' → logprob: -5.842066287994385

Token 53: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.019451212137937546
    2. ' =' → logprob: -4.894451141357422
    3. '_index' → logprob: -5.144451141357422
    4. '=' → logprob: -5.644451141357422
    5. '_pos' → logprob: -6.769451141357422
    6. '_idx' → logprob: -7.644451141357422
    7. 'start' → logprob: -8.019451141357422
    8. 'Start' → logprob: -9.019451141357422
    9. '_part' → logprob: -9.019451141357422
    10. '_' → logprob: -10.019451141357422

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804585337638855
    2. ' =' → logprob: -3.288045883178711
    3. '_' → logprob: -13.538045883178711
    4. '_index' → logprob: -13.788045883178711
    5. '_idx' → logprob: -14.038045883178711
    6. 's' → logprob: -15.413045883178711
    7. '=None' → logprob: -15.663045883178711
    8. '=index' → logprob: -15.663045883178711
    9. '=

' → logprob: -15.663045883178711
    10. '_=' → logprob: -16.16304588317871

Token 55: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.592893660068512
    2. 'None' → logprob: -0.842893660068512
    3. ' None' → logprob: -4.217893600463867
    4. ' -' → logprob: -6.342893600463867
    5. '0' → logprob: -8.092893600463867
    6. ' ' → logprob: -11.967893600463867
    7. '-none' → logprob: -12.342893600463867
    8. '_None' → logprob: -12.467893600463867
    9. 'none' → logprob: -13.967893600463867
    10. '<|end|>' → logprob: -15.092893600463867

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.875003814697266
    3. '-' → logprob: -14.000003814697266
    4. 'pos' → logprob: -14.937503814697266
    5. '۱' → logprob: -15.250003814697266
    6. 're' → logprob: -15.750003814697266
    7. '2' → logprob: -15.937503814697266
    8. ' -' → logprob: -16.062503814697266
    9. '१' → logprob: -16.312503814697266
    10. '১' → logprob: -16.500003814697266

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6947174668312073
    2. '<|end|>' → logprob: -1.3197174072265625
    3. '
' → logprob: -1.5697174072265625
    4. '   ' → logprob: -4.6947174072265625
    5. '\n' → logprob: -5.6947174072265625
    6. '<|end|>' → logprob: -5.8197174072265625
    7. '        
' → logprob: -5.9447174072265625
    8. ' 
' → logprob: -6.0697174072265625
    9. ' ' → logprob: -6.6947174072265625
    10. '    
' → logprob: -7.0697174072265625

Token 59: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3667854964733124
    2. ' while' → logprob: -1.4917855262756348
    3. '       ' → logprob: -3.1167855262756348
    4. '   ' → logprob: -3.3667855262756348
    5. '	while' → logprob: -6.116785526275635
    6. '    
' → logprob: -8.741785049438477
    7. ' ' → logprob: -8.991785049438477
    8. '    ' → logprob: -8.991785049438477
    9. '        
' → logprob: -9.241785049438477
    10. 'w' → logprob: -9.366785049438477

Token 60: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.05802103132009506
    2. ' p' → logprob: -3.308021068572998
    3. 're' → logprob: -4.183021068572998
    4. 'p' → logprob: -6.308021068572998
    5. ' True' → logprob: -6.558021068572998
    6. 'True' → logprob: -7.808021068572998
    7. ' not' → logprob: -8.80802059173584
    8. ' q' → logprob: -8.80802059173584
    9. '(re' → logprob: -8.93302059173584
    10. ' ' → logprob: -8.93302059173584

Token 61: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9897609353065491
    2. '!=' → logprob: -1.1147608757019043
    3. ' not' → logprob: -1.2397608757019043
    4. ' and' → logprob: -5.364760875701904
    5. 'not' → logprob: -5.989760875701904
    6. 'and' → logprob: -6.114760875701904
    7. '*' → logprob: -7.614760875701904
    8. ' *' → logprob: -7.989760875701904
    9. '>' → logprob: -8.614761352539062
    10. ':' → logprob: -8.989761352539062

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -16.88092803955078
    4. '۰' → logprob: -18.88092803955078
    5. '```' → logprob: -19.38092803955078
    6. ' ' → logprob: -19.50592803955078
    7. '00' → logprob: -19.63092803955078
    8. '000' → logprob: -19.63092803955078
    9. ' ' → logprob: -19.75592803955078
    10. '  ' → logprob: -19.88092803955078

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.875158309936523
    4. '۰' → logprob: -18.375158309936523
    5. '000' → logprob: -19.000158309936523
    6. '00' → logprob: -19.500158309936523
    7. '０' → logprob: -20.125158309936523
    8. '٠' → logprob: -20.125158309936523
    9. '       ' → logprob: -20.187658309936523
    10. '    ' → logprob: -20.312658309936523

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010815176647156477
    2. ':
' → logprob: -6.876081466674805
    3. '<|end|>' → logprob: -11.126081466674805
    4. ' :' → logprob: -11.251081466674805
    5. ' and' → logprob: -11.376081466674805
    6. ',' → logprob: -13.126081466674805
    7. '):' → logprob: -13.251081466674805
    8. '<|end|>' → logprob: -13.251081466674805
    9. ':

' → logprob: -14.001081466674805
    10. ':**' → logprob: -14.001081466674805

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33278688788414
    2. ' ' → logprob: -2.332786798477173
    3. '<|end|>' → logprob: -2.832786798477173
    4. ' 
' → logprob: -3.707786798477173
    5. '       ' → logprob: -3.832786798477173
    6. '            
' → logprob: -3.957786798477173
    7. '<|end|>' → logprob: -4.207787036895752
    8. '        ' → logprob: -4.832787036895752
    9. '        
' → logprob: -5.082787036895752
    10. '   ' → logprob: -5.332787036895752

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4726082384586334
    2. '           ' → logprob: -1.097608208656311
    3. ' remainder' → logprob: -3.4726083278656006
    4. 'if' (adapté à ' if') → logprob: -4.7226080894470215
    5. '   ' → logprob: -6.4726080894470215
    6. 're' → logprob: -7.9726080894470215
    7. '```' → logprob: -7.9726080894470215
    8. '       ' → logprob: -8.59760856628418
    9. '    ' → logprob: -8.72260856628418
    10. ' ' → logprob: -9.34760856628418

Token 67: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.2261258065700531
    2. 're' → logprob: -1.6011258363723755
    3. '(re' → logprob: -7.726125717163086
    4. ' (' → logprob: -8.476125717163086
    5. ' ' → logprob: -10.476125717163086
    6. ' re' → logprob: -11.601125717163086
    7. '(' → logprob: -11.726125717163086
    8. '	re' → logprob: -12.226125717163086
    9. 'rema' → logprob: -12.601125717163086
    10. 'rem' → logprob: -12.851125717163086

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005265425890684128
    2. 'in' → logprob: -5.255265235900879
    3. ' ' → logprob: -10.505265235900879
    4. '<|end|>' → logprob: -14.130265235900879
    5. '<|end|>' → logprob: -14.130265235900879
    6. 'n' → logprob: -14.505265235900879
    7. ')' → logprob: -14.755265235900879
    8. '	in' → logprob: -14.880265235900879
    9. 's' → logprob: -15.255265235900879
    10. ' i' → logprob: -16.005266189575195

Token 69: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.632602334022522
    2. 'seen' → logprob: -0.757602334022522
    3. ' ' → logprob: -13.38260269165039
    4. 's' → logprob: -14.75760269165039
    5. '   ' → logprob: -14.88260269165039
    6. '_seen' → logprob: -15.00760269165039
    7. '
' → logprob: -15.75760269165039
    8. 'se' → logprob: -15.88260269165039
    9. ' ' → logprob: -16.25760269165039
    10. '  ' → logprob: -16.82010269165039

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027222526259720325
    2. ':
' → logprob: -6.002722263336182
    3. ' :' → logprob: -8.377721786499023
    4. '):' → logprob: -11.502721786499023
    5. ':

' → logprob: -12.877721786499023
    6. '>:' → logprob: -13.752721786499023
    7. ' :
' → logprob: -14.002721786499023
    8. '):
' → logprob: -14.627721786499023
    9. ':return' → logprob: -15.252721786499023
    10. ':
' → logprob: -15.627721786499023

Token 71: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0381312295794487
    2. '           ' → logprob: -3.6631312370300293
    3. ':
' → logprob: -4.788131237030029
    4. '
' → logprob: -6.788131237030029
    5. ':' → logprob: -7.288131237030029
    6. ' ' → logprob: -8.663130760192871
    7. '):
' → logprob: -8.788130760192871
    8. '```' → logprob: -8.788130760192871
    9. '[' → logprob: -9.163130760192871
    10. 're' → logprob: -9.538130760192871

Token 72: ' repeating' (ID: 74481)
  Prédit: ' repeating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeating' → logprob: -0.3838464617729187
    2. '               ' → logprob: -1.2588465213775635
    3. '                   ' → logprob: -4.383846282958984
    4. 're' → logprob: -4.633846282958984
    5. '                ' → logprob: -5.508846282958984
    6. '           ' → logprob: -6.258846282958984
    7. ' repeated' → logprob: -6.258846282958984
    8. ' seen' → logprob: -6.258846282958984
    9. ' ' → logprob: -7.383846282958984
    10. 'seen' → logprob: -8.133846282958984

Token 73: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.750003814697266
    3. 'Start' → logprob: -14.000003814697266
    4. '_START' → logprob: -14.250003814697266
    5. 'start' → logprob: -14.875003814697266
    6. '_Start' → logprob: -15.375003814697266
    7. ' _' → logprob: -15.875003814697266
    8. '_end' → logprob: -15.875003814697266
    9. '```' → logprob: -16.500003814697266
    10. '_star' → logprob: -16.500003814697266

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326231360435486
    2. '=' → logprob: -1.3132623434066772
    3. '＝' → logprob: -15.438261985778809
    4. ' ' → logprob: -15.688261985778809
    5. ',' → logprob: -16.063262939453125
    6. '=index' → logprob: -17.313262939453125
    7. '=}' → logprob: -17.313262939453125
    8. '=int' → logprob: -17.813262939453125
    9. '=

' → logprob: -18.063262939453125
    10. ')' → logprob: -18.063262939453125

Token 75: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.38687217235565186
    2. 'seen' → logprob: -1.1368721723556519
    3. 'se' → logprob: -14.761872291564941
    4. '_seen' → logprob: -15.636872291564941
    5. '```' → logprob: -16.136871337890625
    6. ' found' → logprob: -16.386871337890625
    7. 's' → logprob: -16.636871337890625
    8. '   ' → logprob: -16.761871337890625
    9. ' ' → logprob: -16.761871337890625
    10. '
' → logprob: -17.011871337890625

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. 're' → logprob: -13.875001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '[token' → logprob: -16.625001907348633
    8. '[
' → logprob: -16.625001907348633
    9. '       ' → logprob: -16.875001907348633
    10. '[current' → logprob: -17.250001907348633

Token 77: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -5.88418151892256e-05
    2. ' remainder' → logprob: -10.125059127807617
    3. '[' → logprob: -12.125059127807617
    4. 'rema' → logprob: -12.500059127807617
    5. 'rest' → logprob: -13.250059127807617
    6. 'rem' → logprob: -13.375059127807617
    7. ' ' → logprob: -13.500059127807617
    8. ']' → logprob: -13.500059127807617
    9. '   ' → logprob: -14.375059127807617
    10. '	re' → logprob: -14.375059127807617

Token 78: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.00043674863991327584
    2. 'ma' → logprob: -7.750436782836914
    3. 'm' → logprob: -12.500436782836914
    4. 'main' → logprob: -13.500436782836914
    5. 'st' → logprob: -14.250436782836914
    6. 'mai' → logprob: -15.875436782836914
    7. ' ma' → logprob: -18.000436782836914
    8. 'ма' → logprob: -18.000436782836914
    9. 'maid' → logprob: -18.625436782836914
    10. '_ma' → logprob: -19.125436782836914

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009039574069902301
    2. ')]' → logprob: -7.125904083251953
    3. ' ]' → logprob: -10.250904083251953
    4. ')' → logprob: -10.500904083251953
    5. ']
' → logprob: -10.500904083251953
    6. '           ' → logprob: -12.000904083251953
    7. '`]' → logprob: -14.250904083251953
    8. ']+' → logprob: -14.750904083251953
    9. '()]' → logprob: -15.000904083251953
    10. ']

' → logprob: -15.375904083251953

Token 80: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003503626212477684
    2. '           ' → logprob: -8.125349998474121
    3. '                   ' → logprob: -11.125349998474121
    4. '<|end|>' → logprob: -11.375349998474121
    5. '              ' → logprob: -12.000349998474121
    6. '			' → logprob: -12.500349998474121
    7. ':' → logprob: -12.500349998474121
    8. '                ' → logprob: -12.875349998474121
    9. ')' → logprob: -12.875349998474121
    10. '	           ' → logprob: -13.375349998474121

Token 81: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008022417314350605
    2. '           ' → logprob: -8.875802040100098
    3. '	break' → logprob: -9.125802040100098
    4. ' break' → logprob: -9.250802040100098
    5. 'break' (adapté à ' break') → logprob: -9.250802040100098
    6. '                   ' → logprob: -9.625802040100098
    7. '              ' → logprob: -9.750802040100098
    8. ' ' → logprob: -9.750802040100098
    9. '<|end|>' → logprob: -9.750802040100098
    10. '			' → logprob: -10.250802040100098

Token 82: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003050200641155243
    2. '            
' → logprob: -6.128050327301025
    3. '       ' → logprob: -7.878050327301025
    4. '\n' → logprob: -9.128049850463867
    5. ' 
' → logprob: -9.503049850463867
    6. '   ' → logprob: -9.628049850463867
    7. '    
' → logprob: -9.878049850463867
    8. 'n' → logprob: -10.753049850463867
    9. ')' → logprob: -10.878049850463867
    10. '
' → logprob: -11.003049850463867

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001623291289433837
    2. '            
' → logprob: -7.376623153686523
    3. '       ' → logprob: -7.751623153686523
    4. '\n' → logprob: -8.626623153686523
    5. '
' → logprob: -9.501623153686523
    6. '    
' → logprob: -9.501623153686523
    7. '   ' → logprob: -9.501623153686523
    8. ')' → logprob: -10.126623153686523
    9. 'newline' → logprob: -11.001623153686523
    10. ' 
' → logprob: -11.126623153686523

Token 84: ' seen' (ID: 6177)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44009262323379517
    2. '           ' → logprob: -1.1900925636291504
    3. '            
' → logprob: -4.19009256362915
    4. '        
' → logprob: -4.94009256362915
    5. ' seen' → logprob: -4.94009256362915
    6. ' 
' → logprob: -5.06509256362915
    7. '    
' → logprob: -5.56509256362915
    8. '   ' → logprob: -5.56509256362915
    9. ' ' → logprob: -6.44009256362915
    10. '               ' → logprob: -6.81509256362915

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '[line' → logprob: -14.00000286102295
    3. '\[' → logprob: -15.37500286102295
    4. '[in' → logprob: -15.62500286102295
    5. ']' → logprob: -15.75000286102295
    6. '=' → logprob: -15.87500286102295
    7. '[current' → logprob: -16.125001907348633
    8. '[...]' → logprob: -16.250001907348633
    9. '```' → logprob: -16.375001907348633
    10. '[p' → logprob: -16.375001907348633

Token 86: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.023657474666833878
    2. '[' → logprob: -3.7736575603485107
    3. ']' → logprob: -7.898657321929932
    4. 'rem' → logprob: -10.77365779876709
    5. ')' → logprob: -11.64865779876709
    6. 'rema' → logprob: -12.39865779876709
    7. 'rest' → logprob: -13.77365779876709
    8. 'r' → logprob: -13.77365779876709
    9. '][' → logprob: -13.89865779876709
    10. ' remainder' → logprob: -14.14865779876709

Token 87: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0025734021328389645
    2. 'ma' → logprob: -6.002573490142822
    3. ']' → logprob: -10.002573013305664
    4. 'm' → logprob: -10.377573013305664
    5. 'inder' → logprob: -11.752573013305664
    6. '```' → logprob: -12.627573013305664
    7. 'st' → logprob: -13.002573013305664
    8. 'ema' → logprob: -13.127573013305664
    9. 's' → logprob: -13.877573013305664
    10. '][' → logprob: -14.127573013305664

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010616567305987701
    2. ' ]' → logprob: -9.750105857849121
    3. ']=' → logprob: -10.625105857849121
    4. ' =' → logprob: -11.000105857849121
    5. '=' → logprob: -12.000105857849121
    6. ')' → logprob: -14.750105857849121
    7. ')]' → logprob: -16.250106811523438
    8. ' ' → logprob: -16.500106811523438
    9. ',' → logprob: -16.750106811523438
    10. '']' → logprob: -16.875106811523438

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ' ' → logprob: -14.785224914550781
    4. ',' → logprob: -15.285224914550781
    5. ')' → logprob: -16.78522491455078
    6. ']' → logprob: -16.91022491455078
    7. '＝' → logprob: -18.03522491455078
    8. ']=' → logprob: -18.16022491455078
    9. '<|end|>' → logprob: -18.41022491455078
    10. ' =
' → logprob: -18.53522491455078

Token 90: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0031777136027812958
    2. ' pos' → logprob: -5.753177642822266
    3. '	pos' → logprob: -18.253177642822266
    4. ' ' → logprob: -20.253177642822266
    5. 'len' → logprob: -22.253177642822266
    6. ' ' → logprob: -22.378177642822266
    7. 'position' → logprob: -22.628177642822266
    8. '   ' → logprob: -23.003177642822266
    9. '[pos' → logprob: -23.003177642822266
    10. '_pos' → logprob: -23.378177642822266

Token 91: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24428996443748474
    2. '    
' → logprob: -3.1192898750305176
    3. '       ' → logprob: -3.2442898750305176
    4. '            
' → logprob: -3.2442898750305176
    5. '   ' → logprob: -3.4942898750305176
    6. '
' → logprob: -4.369289875030518
    7. '  
' → logprob: -4.494289875030518
    8. '<|end|>' → logprob: -4.494289875030518
    9. ' 
' → logprob: -5.244289875030518
    10. '<|end|>' → logprob: -5.494289875030518

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016134196892380714
    2. '       ' → logprob: -5.266134262084961
    3. '   ' → logprob: -5.391134262084961
    4. '            
' → logprob: -6.266134262084961
    5. '    
' → logprob: -6.516134262084961
    6. ' remainder' → logprob: -6.516134262084961
    7. ' 
' → logprob: -8.766134262084961
    8. 're' → logprob: -8.891134262084961
    9. '        
' → logprob: -8.891134262084961
    10. '```' → logprob: -8.891134262084961

Token 93: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.12854808568954468
    2. ' remainder' → logprob: -2.1285481452941895
    3. '           ' → logprob: -6.5035481452941895
    4. '   ' → logprob: -9.378547668457031
    5. ' ' → logprob: -11.503547668457031
    6. '       ' → logprob: -11.878547668457031
    7. '  ' → logprob: -12.128547668457031
    8. 'rem' → logprob: -12.378547668457031
    9. '	re' → logprob: -12.378547668457031
    10. '```' → logprob: -13.128547668457031

Token 94: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.011592607945203781
    2. '*=' → logprob: -5.011592388153076
    3. '*' → logprob: -5.761592388153076
    4. ' *' → logprob: -6.636592388153076
    5. ' <<=' → logprob: -8.511592864990234
    6. ' =' → logprob: -9.761592864990234
    7. '```' → logprob: -9.886592864990234
    8. '<|end|>' → logprob: -10.261592864990234
    9. '=' → logprob: -10.761592864990234
    10. ' ' → logprob: -11.386592864990234

Token 95: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '1' → logprob: -15.250004768371582
    4. '```' → logprob: -18.0000057220459
    5. '１０' → logprob: -18.6250057220459
    6. '100' → logprob: -18.7500057220459
    7. '۱۰' → logprob: -19.6250057220459
    8. '   ' → logprob: -19.6250057220459
    9. '
' → logprob: -20.1250057220459
    10. 'a' → logprob: -20.3750057220459

Token 96: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '１０' → logprob: -19.375
    6. '   ' → logprob: -19.625
    7. '
' → logprob: -20.125
    8. '

' → logprob: -20.5
    9. '100' → logprob: -20.625
    10. '`' → logprob: -20.75

Token 97: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05988578125834465
    2. '<|end|>' → logprob: -3.1848857402801514
    3. '       ' → logprob: -4.4348859786987305
    4. ')' → logprob: -6.5598859786987305
    5. '          ' → logprob: -6.9348859786987305
    6. '<|end|>' → logprob: -7.5598859786987305
    7. '   ' → logprob: -7.8098859786987305
    8. ',' → logprob: -8.43488597869873
    9. '[' → logprob: -8.80988597869873
    10. '```' → logprob: -8.80988597869873

Token 99: ' decimals' (ID: 102128)
  Prédit: ' decimals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decimals' → logprob: -0.3912247121334076
    2. '           ' → logprob: -1.26622474193573
    3. 'dec' → logprob: -3.8912246227264404
    4. 'digits' → logprob: -5.0162248611450195
    5. ' digits' → logprob: -5.1412248611450195
    6. '       ' → logprob: -5.5162248611450195
    7. ' digit' → logprob: -6.3912248611450195
    8. 'd' → logprob: -6.8912248611450195
    9. 'digit' → logprob: -7.3912248611450195
    10. '   ' → logprob: -8.26622486114502

Token 100: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0041496302001178265
    2. '.' → logprob: -5.504149436950684
    3. 'append' → logprob: -10.129149436950684
    4. '<|end|>' → logprob: -11.254149436950684
    5. ',' → logprob: -12.504149436950684
    6. '_append' → logprob: -12.629149436950684
    7. ')' → logprob: -13.254149436950684
    8. '.Append' → logprob: -13.254149436950684
    9. '<|end|>' → logprob: -13.379149436950684
    10. '.extend' → logprob: -13.629149436950684

Token 101: '(str' (ID: 7946)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.006934524513781071
    2. '(str' → logprob: -5.006934642791748
    3. '(' → logprob: -8.63193416595459
    4. 're' → logprob: -10.38193416595459
    5. 'str' → logprob: -11.88193416595459
    6. '(rem' → logprob: -13.25693416595459
    7. ' (' → logprob: -14.63193416595459
    8. '((' → logprob: -15.13193416595459
    9. '(r' → logprob: -16.006935119628906
    10. ' remainder' → logprob: -16.256935119628906

Token 102: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.750012397766113
    3. 're' → logprob: -12.625012397766113
    4. ' (' → logprob: -14.750012397766113
    5. ')' → logprob: -15.625012397766113
    6. '((' → logprob: -16.000011444091797
    7. '(rem' → logprob: -16.125011444091797
    8. '(rest' → logprob: -17.500011444091797
    9. '	re' → logprob: -17.750011444091797
    10. ' remainder' → logprob: -18.375011444091797

Token 103: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.00038264848990365863
    2. 'ma' → logprob: -7.875382423400879
    3. 'main' → logprob: -13.750382423400879
    4. 'm' → logprob: -13.875382423400879
    5. ' ma' → logprob: -16.000383377075195
    6. '_ma' → logprob: -16.375383377075195
    7. '(ma' → logprob: -16.875383377075195
    8. '[' → logprob: -17.125383377075195
    9. 'maid' → logprob: -17.250383377075195
    10. 'mai' → logprob: -17.500383377075195

Token 104: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.14278346300125122
    2. '//' → logprob: -2.0177834033966064
    3. ' ' → logprob: -10.017783164978027
    4. ' ' → logprob: -10.267783164978027
    5. ')' → logprob: -10.892783164978027
    6. '   ' → logprob: -12.267783164978027
    7. ')//' → logprob: -13.517783164978027
    8. '  ' → logprob: -13.767783164978027
    9. '%' → logprob: -14.517783164978027
    10. ' //
' → logprob: -14.892783164978027

Token 105: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002613358374219388
    2. ' q' → logprob: -8.250261306762695
    3. '	q' → logprob: -18.000261306762695
    4. '$q' → logprob: -20.500261306762695
    5. ')' → logprob: -20.750261306762695
    6. 'qml' → logprob: -21.125261306762695
    7. '*q' → logprob: -21.375261306762695
    8. '   ' → logprob: -21.500261306762695
    9. '_q' → logprob: -21.500261306762695
    10. ''q' → logprob: -21.875261306762695

Token 106: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0027510228101164103
    2. ')' → logprob: -6.252750873565674
    3. '))
' → logprob: -7.127750873565674
    4. '           ' → logprob: -11.127751350402832
    5. ')
' → logprob: -13.377751350402832
    6. ' ))' → logprob: -13.377751350402832
    7. ')))' → logprob: -14.127751350402832
    8. '))

' → logprob: -15.377751350402832
    9. '       ' → logprob: -15.502751350402832
    10. '               ' → logprob: -15.877751350402832

Token 107: '           ' (ID: 352)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.4136125147342682
    2. '           ' → logprob: -1.1636124849319458
    3. 're' → logprob: -3.6636126041412354
    4. '            
' → logprob: -7.538612365722656
    5. ' 
' → logprob: -10.288612365722656
    6. '   ' → logprob: -10.288612365722656
    7. '       ' → logprob: -10.538612365722656
    8. '            ' → logprob: -11.038612365722656
    9. 'rest' → logprob: -11.163612365722656
    10. '          ' → logprob: -11.663612365722656

Token 108: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0028213970363140106
    2. ' remainder' → logprob: -5.877821445465088
    3. '           ' → logprob: -11.25282096862793
    4. 'rem' → logprob: -13.87782096862793
    5. 'rema' → logprob: -14.00282096862793
    6. '   ' → logprob: -14.50282096862793
    7. 'rest' → logprob: -15.00282096862793
    8. '```' → logprob: -15.50282096862793
    9. '       ' → logprob: -15.75282096862793
    10. '	re' → logprob: -16.37782096862793

Token 109: ' %=' (ID: 117035)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01246785931289196
    2. '%=' → logprob: -4.762467861175537
    3. ' =' → logprob: -5.762467861175537
    4. ' %=' → logprob: -7.262467861175537
    5. '%' → logprob: -13.762467384338379
    6. '＝' → logprob: -16.762468338012695
    7. '.=' → logprob: -17.387468338012695
    8. '=}' → logprob: -17.637468338012695
    9. '=%' → logprob: -17.887468338012695
    10. ')' → logprob: -18.262468338012695

Token 110: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0024756586644798517
    2. ' q' → logprob: -6.002475738525391
    3. '	q' → logprob: -18.25247573852539
    4. ' ' → logprob: -19.12747573852539
    5. '   ' → logprob: -19.50247573852539
    6. '           ' → logprob: -19.87747573852539
    7. '$q' → logprob: -20.62747573852539
    8. '       ' → logprob: -20.87747573852539
    9. '*q' → logprob: -21.00247573852539
    10. ''q' → logprob: -21.12747573852539

Token 111: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036781092640012503
    2. '
' → logprob: -5.753678321838379
    3. '       ' → logprob: -8.628678321838379
    4. '   ' → logprob: -9.003678321838379
    5. '            
' → logprob: -9.753678321838379
    6. '    
' → logprob: -10.503678321838379
    7. '```' → logprob: -10.628678321838379
    8. '               ' → logprob: -11.003678321838379
    9. '  
' → logprob: -11.128678321838379
    10. '        
' → logprob: -11.878678321838379

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000760553521104157
    2. '       ' → logprob: -7.500760555267334
    3. '   ' → logprob: -9.000760078430176
    4. '		' → logprob: -11.000760078430176
    5. '	       ' → logprob: -11.250760078430176
    6. '	   ' → logprob: -11.375760078430176
    7. '```' → logprob: -11.500760078430176
    8. '            
' → logprob: -11.750760078430176
    9. '               ' → logprob: -12.000760078430176
    10. '	' → logprob: -12.750760078430176

Token 113: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.20331071317195892
    2. '           ' → logprob: -1.7033107280731201
    3. '   ' → logprob: -6.953310489654541
    4. ' pos' → logprob: -7.078310489654541
    5. '       ' → logprob: -9.4533109664917
    6. '
' → logprob: -11.5783109664917
    7. '               ' → logprob: -12.7033109664917
    8. '```' → logprob: -13.3283109664917
    9. ' ' → logprob: -13.4533109664917
    10. '	pos' → logprob: -13.9533109664917

Token 114: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008147139102220535
    2. '+' → logprob: -5.508147239685059
    3. ' +=' → logprob: -5.508147239685059
    4. '=' → logprob: -12.258147239685059
    5. '++' → logprob: -13.258147239685059
    6. '+="' → logprob: -16.258146286010742
    7. '+='' → logprob: -16.508146286010742
    8. '+++' → logprob: -17.133146286010742
    9. ']+=' → logprob: -17.383146286010742
    10. '+=(' → logprob: -18.508146286010742

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '```' → logprob: -19.62501335144043
    5. '１' → logprob: -20.62501335144043
    6. '۱' → logprob: -20.93751335144043
    7. ' ' → logprob: -21.12501335144043
    8. '  ' → logprob: -21.81251335144043
    9. '`' → logprob: -21.87501335144043
    10. '0' → logprob: -21.93751335144043

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.062501907348633
    5. '１' → logprob: -20.375001907348633
    6. '۱' → logprob: -20.750001907348633
    7. '१' → logprob: -21.437501907348633
    8. '0' → logprob: -21.500001907348633
    9. '`' → logprob: -21.812501907348633
    10. '১' → logprob: -21.937501907348633

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04192202538251877
    2. ')' → logprob: -3.916922092437744
    3. '
' → logprob: -4.541922092437744
    4. '   ' → logprob: -4.916922092437744
    5. '<|end|>' → logprob: -6.541922092437744
    6. '\n' → logprob: -7.916922092437744
    7. '        
' → logprob: -8.041921615600586
    8. '        ' → logprob: -8.541921615600586
    9. ')
' → logprob: -8.916921615600586
    10. '    
' → logprob: -9.291921615600586

Token 119: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8206955194473267
    2. ')' → logprob: -0.9456955194473267
    3. '   ' → logprob: -2.445695400238037
    4. '<|end|>' → logprob: -2.820695400238037
    5. '#' → logprob: -4.570695400238037
    6. 'if' (adapté à ' if') → logprob: -5.820695400238037
    7. '
' → logprob: -6.070695400238037
    8. ' if' → logprob: -6.070695400238037
    9. ']' → logprob: -6.820695400238037
    10. 'print' → logprob: -7.070695400238037

Token 120: ' remainder' (ID: 47056)
  Prédit: ' repeating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeating' → logprob: -0.1680566370487213
    2. 're' → logprob: -1.918056607246399
    3. ' remainder' → logprob: -5.168056488037109
    4. ' p' → logprob: -6.918056488037109
    5. ' len' → logprob: -7.293056488037109
    6. ' not' → logprob: -9.04305648803711
    7. 'len' → logprob: -9.41805648803711
    8. 'p' → logprob: -9.79305648803711
    9. ' decimals' → logprob: -10.16805648803711
    10. 'not' → logprob: -10.54305648803711

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35078248381614685
    2. '==' → logprob: -1.2257825136184692
    3. ' !=' → logprob: -6.47578239440918
    4. '!=' → logprob: -7.47578239440918
    5. ' ' → logprob: -8.85078239440918
    6. '>' → logprob: -10.10078239440918
    7. '==-' → logprob: -11.85078239440918
    8. '=' → logprob: -11.85078239440918
    9. ' >' → logprob: -11.97578239440918
    10. ')' → logprob: -12.60078239440918

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1797478049993515
    2. ' ' → logprob: -1.8047478199005127
    3. '   ' → logprob: -13.679747581481934
    4. ' ' → logprob: -14.054747581481934
    5. '  ' → logprob: -14.367247581481934
    6. '    ' → logprob: -16.36724853515625
    7. '```' → logprob: -16.36724853515625
    8. '۰' → logprob: -16.86724853515625
    9. '     ' → logprob: -17.30474853515625
    10. '       ' → logprob: -17.42974853515625

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015046248445287347
    2. ' ' → logprob: -6.501504421234131
    3. '   ' → logprob: -14.064004898071289
    4. '  ' → logprob: -14.876504898071289
    5. 're' → logprob: -16.18900489807129
    6. '```' → logprob: -16.31400489807129
    7. '    ' → logprob: -16.68900489807129
    8. '۰' → logprob: -16.68900489807129
    9. '1' → logprob: -17.00150489807129
    10. ' ' → logprob: -17.00150489807129

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805491328239441
    2. ':
' → logprob: -3.288054943084717
    3. '           ' → logprob: -11.788054466247559
    4. ':

' → logprob: -12.913054466247559
    5. '       ' → logprob: -13.413054466247559
    6. ',' → logprob: -15.038054466247559
    7. ' and' → logprob: -15.163054466247559
    8. ':
' → logprob: -15.288054466247559
    9. '):' → logprob: -15.413054466247559
    10. '):
' → logprob: -15.663054466247559

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008336787112057209
    2. 'print' → logprob: -5.008337020874023
    3. ' print' → logprob: -7.133337020874023
    4. '       ' → logprob: -7.383337020874023
    5. '            
' → logprob: -10.008337020874023
    6. 'result' → logprob: -10.758337020874023
    7. ',' → logprob: -11.133337020874023
    8. '#' → logprob: -11.508337020874023
    9. '```' → logprob: -11.508337020874023
    10. 'decimal' → logprob: -11.633337020874023

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013483130373060703
    2. ' print' → logprob: -4.763483047485352
    3. '           ' → logprob: -6.263483047485352
    4. 'if' → logprob: -6.388483047485352
    5. '       ' → logprob: -7.263483047485352
    6. 'result' → logprob: -8.013483047485352
    7. ' if' → logprob: -9.388483047485352
    8. '   ' → logprob: -9.638483047485352
    9. 'output' → logprob: -9.763483047485352
    10. 'decimal' → logprob: -11.138483047485352

Token 127: '('' (ID: 706)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3100091218948364
    2. '(p' → logprob: -2.060009002685547
    3. '("' → logprob: -2.310009002685547
    4. '(' → logprob: -3.810009002685547
    5. '(str' → logprob: -4.560009002685547
    6. '('' → logprob: -5.435009002685547
    7. '("."' → logprob: -7.060009002685547
    8. '('.' → logprob: -8.310009002685547
    9. '(".' → logprob: -8.310009002685547
    10. '("{}' → logprob: -8.435009002685547

Token 128: ''.' (ID: 6120)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19073106348514557
    2. '{}.' → logprob: -2.3157310485839844
    3. '{' → logprob: -3.4407310485839844
    4. '{}' → logprob: -3.6907310485839844
    5. 'f' → logprob: -5.440731048583984
    6. 'p' → logprob: -5.565731048583984
    7. '.' → logprob: -5.815731048583984
    8. ''.' → logprob: -6.065731048583984
    9. ''' → logprob: -6.815731048583984
    10. '%.' → logprob: -6.940731048583984

Token 129: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.955703818472102e-05
    2. ''.' → logprob: -9.750059127807617
    3. ' join' → logprob: -15.125059127807617
    4. '.' → logprob: -15.375059127807617
    5. '''.' → logprob: -15.500059127807617
    6. '.join' → logprob: -16.000059127807617
    7. '(join' → logprob: -16.125059127807617
    8. '0' → logprob: -16.625059127807617
    9. '".' → logprob: -17.125059127807617
    10. 'jo' → logprob: -17.875059127807617

Token 130: '(dec' (ID: 77281)
  Prédit: '(dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dec' → logprob: -0.25420308113098145
    2. 'dec' → logprob: -1.7542030811309814
    3. '(['' → logprob: -3.0042030811309814
    4. '([' → logprob: -7.379202842712402
    5. '(decimal' → logprob: -8.129202842712402
    6. ')' → logprob: -8.504202842712402
    7. '(' → logprob: -8.754202842712402
    8. '(map' → logprob: -8.754202842712402
    9. '['' → logprob: -9.754202842712402
    10. '('' → logprob: -9.754202842712402

Token 131: 'imals' (ID: 54879)
  Prédit: 'imals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imals' → logprob: -0.009173572063446045
    2. 'als' → logprob: -4.759173393249512
    3. 'mals' → logprob: -7.509173393249512
    4. 'inals' → logprob: -12.134173393249512
    5. 'imal' → logprob: -13.384173393249512
    6. 'ials' → logprob: -13.759173393249512
    7. 'vals' → logprob: -14.134173393249512
    8. '[' → logprob: -14.259173393249512
    9. '```' → logprob: -14.259173393249512
    10. 'icals' → logprob: -15.759173393249512

Token 132: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029902637004852295
    2. '))' → logprob: -3.529902696609497
    3. ')
' → logprob: -9.279902458190918
    4. ' )' → logprob: -10.029902458190918
    5. '))
' → logprob: -11.529902458190918
    6. ')))' → logprob: -12.529902458190918
    7. ')}' → logprob: -14.904902458190918
    8. ' ))' → logprob: -15.029902458190918
    9. '})' → logprob: -15.779902458190918
    10. ')

' → logprob: -16.154903411865234

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04493863135576248
    2. 'else' → logprob: -3.169938564300537
    3. ' else' → logprob: -6.294938564300537
    4. '   ' → logprob: -10.294939041137695
    5. 'elif' → logprob: -10.669939041137695
    6. '<|end|>' → logprob: -11.294939041137695
    7. ')' → logprob: -11.419939041137695
    8. '           ' → logprob: -13.169939041137695
    9. '	else' → logprob: -13.169939041137695
    10. '      ' → logprob: -13.169939041137695

Token 134: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5086613893508911
    2. 'else' (adapté à ' else') → logprob: -1.0086613893508911
    3. ' else' → logprob: -3.3836612701416016
    4. '   ' → logprob: -10.008661270141602
    5. 'elif' → logprob: -11.133661270141602
    6. '	else' → logprob: -12.008661270141602
    7. '      ' → logprob: -13.883661270141602
    8. '<|end|>' → logprob: -14.133661270141602
    9. '```' → logprob: -14.383661270141602
    10. ' elif' → logprob: -14.633661270141602

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006844787858426571
    2. ':
' → logprob: -5.006844997406006
    3. ' :' → logprob: -9.256844520568848
    4. '           ' → logprob: -11.131844520568848
    5. '       ' → logprob: -12.256844520568848
    6. ' :
' → logprob: -12.756844520568848
    7. '        ' → logprob: -12.881844520568848
    8. ':
' → logprob: -12.881844520568848
    9. '<|end|>' → logprob: -13.381844520568848
    10. 'print' → logprob: -14.006844520568848

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4854952096939087
    2. ' print' → logprob: -1.6104952096939087
    3. 'print' → logprob: -1.7354952096939087
    4. '       ' → logprob: -5.610495090484619
    5. '   ' → logprob: -6.235495090484619
    6. '        ' → logprob: -6.860495090484619
    7. ' ' → logprob: -7.360495090484619
    8. '  ' → logprob: -8.860495567321777
    9. 'result' → logprob: -8.860495567321777
    10. '          ' → logprob: -8.860495567321777

Token 137: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010709032416343689
    2. 'result' → logprob: -5.135708808898926
    3. 'non' (adapté à ' non') → logprob: -5.760708808898926
    4. ' print' → logprob: -7.260708808898926
    5. '       ' → logprob: -7.885708808898926
    6. '           ' → logprob: -8.885708808898926
    7. 'output' → logprob: -9.135708808898926
    8. 'rep' → logprob: -10.135708808898926
    9. 'res' → logprob: -10.260708808898926
    10. 'integer' → logprob: -10.510708808898926

Token 138: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.23936843872070312
    2. '_repeat' → logprob: -1.7393684387207031
    3. 're' → logprob: -3.364368438720703
    4. 'repeat' → logprob: -6.489368438720703
    5. '_' → logprob: -7.489368438720703
    6. '_rep' → logprob: -7.989368438720703
    7. '_rec' → logprob: -9.739368438720703
    8. ' repeating' → logprob: -9.864368438720703
    9. '_repr' → logprob: -10.114368438720703
    10. 'rep' → logprob: -11.239368438720703

Token 139: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.0026338035240769386
    2. 'p' → logprob: -6.502633571624756
    3. 'peat' → logprob: -7.002633571624756
    4. 'pe' → logprob: -8.877634048461914
    5. 'peated' → logprob: -9.502634048461914
    6. '_' → logprob: -13.502634048461914
    7. 'ating' → logprob: -13.752634048461914
    8. 'pt' → logprob: -14.252634048461914
    9. '[' → logprob: -14.252634048461914
    10. 'c' → logprob: -14.627634048461914

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00045009577297605574
    2. ' =' → logprob: -7.875450134277344
    3. '_part' → logprob: -9.625450134277344
    4. '=

' → logprob: -14.000450134277344
    5. 'part' → logprob: -14.125450134277344
    6. '=int' → logprob: -14.375450134277344
    7. '=_' → logprob: -14.875450134277344
    8. 'Part' → logprob: -15.625450134277344
    9. '_=' → logprob: -15.625450134277344
    10. '＝' → logprob: -15.750450134277344

Token 141: ' decimals' (ID: 102128)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0031970853451639414
    2. ' ''.' → logprob: -5.753197193145752
    3. 'dec' → logprob: -11.628196716308594
    4. ''' → logprob: -12.253196716308594
    5. '''' → logprob: -12.878196716308594
    6. '"' → logprob: -13.878196716308594
    7. ''d' → logprob: -14.878196716308594
    8. 'str' → logprob: -15.003196716308594
    9. ' decimals' → logprob: -15.128196716308594
    10. ' ' → logprob: -15.253196716308594

Token 142: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00010032468708232045
    2. '[' → logprob: -9.250100135803223
    3. '[:]' → logprob: -13.250100135803223
    4. '[:-' → logprob: -13.625100135803223
    5. ' [:' → logprob: -14.375100135803223
    6. ':' → logprob: -14.375100135803223
    7. '[
' → logprob: -17.12510108947754
    8. '][:' → logprob: -17.12510108947754
    9. '0' → logprob: -18.87510108947754
    10. ' ' → logprob: -19.25010108947754

Token 143: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -4.961759259458631e-06
    2. ' repeating' → logprob: -12.250004768371582
    3. 'repeat' → logprob: -16.2500057220459
    4. 'rep' → logprob: -17.2500057220459
    5. '   ' → logprob: -18.2500057220459
    6. ' ' → logprob: -19.7500057220459
    7. '       ' → logprob: -20.7500057220459
    8. '  ' → logprob: -20.7500057220459
    9. '
' → logprob: -20.8750057220459
    10. 'rec' → logprob: -21.1250057220459

Token 144: 'peating' (ID: 189297)
  Prédit: 'peating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peating' → logprob: -0.0025005098432302475
    2. 'p' → logprob: -6.502500534057617
    3. 'ating' → logprob: -7.502500534057617
    4. 'pe' → logprob: -7.752500534057617
    5. 'peat' → logprob: -12.252500534057617
    6. '[' → logprob: -13.252500534057617
    7. 'peated' → logprob: -13.252500534057617
    8. 'playing' → logprob: -13.752500534057617
    9. '
' → logprob: -14.002500534057617
    10. '```' → logprob: -14.377500534057617

Token 145: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.935296834039036e-06
    2. 'start' → logprob: -12.87500286102295
    3. 'Start' → logprob: -15.50000286102295
    4. '_START' → logprob: -17.000003814697266
    5. '_' → logprob: -18.750003814697266
    6. '_Start' → logprob: -18.875003814697266
    7. '_end' → logprob: -19.500003814697266
    8. ']' → logprob: -19.500003814697266
    9. '[' → logprob: -19.750003814697266
    10. '[start' → logprob: -20.250003814697266

Token 146: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4741295278072357
    2. ']
' → logprob: -0.9741295576095581
    3. ' ]' → logprob: -10.474129676818848
    4. ']
' → logprob: -11.974129676818848
    5. ' ]
' → logprob: -12.099129676818848
    6. ']

' → logprob: -12.224129676818848
    7. ')
' → logprob: -13.474129676818848
    8. ')' → logprob: -13.599129676818848
    9. ']+' → logprob: -13.724129676818848
    10. '])
' → logprob: -13.849129676818848

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09055487811565399
    2. 're' → logprob: -2.59055495262146
    3. ' repeating' → logprob: -4.965554714202881
    4. 'repeat' → logprob: -5.715554714202881
    5. '(re' → logprob: -8.340555191040039
    6. '(' → logprob: -8.465555191040039
    7. '[' → logprob: -9.090555191040039
    8. '       ' → logprob: -9.215555191040039
    9. '               ' → logprob: -9.215555191040039
    10. 'print' → logprob: -9.590555191040039

Token 148: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0025426088832318783
    2. ''' → logprob: -7.377542495727539
    3. 'repeat' → logprob: -7.377542495727539
    4. ' repeating' → logprob: -7.377542495727539
    5. 'print' → logprob: -7.502542495727539
    6. ' '('' → logprob: -9.252542495727539
    7. 'result' → logprob: -12.877542495727539
    8. ''(' → logprob: -13.127542495727539
    9. 'rep' → logprob: -13.252542495727539
    10. ''re' → logprob: -13.502542495727539

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013284528395161033
    2. ' =' → logprob: -6.626328468322754
    3. '_part' → logprob: -13.251328468322754
    4. '_segment' → logprob: -15.501328468322754
    5. '_sequence' → logprob: -15.876328468322754
    6. '_=' → logprob: -15.876328468322754
    7. '_' → logprob: -16.626327514648438
    8. '_section' → logprob: -16.876327514648438
    9. '＝' → logprob: -17.876327514648438
    10. '_block' → logprob: -17.876327514648438

Token 150: ' decimals' (ID: 102128)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.006853784900158644
    2. ' decimals' → logprob: -5.0068535804748535
    3. '''.' → logprob: -9.006854057312012
    4. 'decimal' → logprob: -11.881854057312012
    5. ' ''.' → logprob: -12.631854057312012
    6. 'digits' → logprob: -13.381854057312012
    7. 'Decimals' → logprob: -13.506854057312012
    8. '(dec' → logprob: -14.006854057312012
    9. ' ' → logprob: -14.506854057312012
    10. '.dec' → logprob: -14.756854057312012

Token 151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.25
    3. '   ' → logprob: -17.75
    4. '```' → logprob: -18.25
    5. 'from' → logprob: -18.5
    6. '#' → logprob: -18.75
    7. 're' → logprob: -19.0
    8. ' ' → logprob: -19.125
    9. '[:]' → logprob: -19.125
    10. '[from' → logprob: -19.25

Token 152: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. ' repeating' → logprob: -17.875
    4. 'rep' → logprob: -19.75
    5. ' ' → logprob: -20.125
    6. '(re' → logprob: -20.375
    7. '=re' → logprob: -20.75
    8. 'repeat' → logprob: -20.75
    9. ''re' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 153: 'peating' (ID: 189297)
  Prédit: 'ating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.585932195186615
    2. 'peating' → logprob: -0.835932195186615
    3. '[' → logprob: -5.71093225479126
    4. 'p' → logprob: -5.96093225479126
    5. '_' → logprob: -6.33593225479126
    6. 'pe' → logprob: -7.96093225479126
    7. 'ting' → logprob: -8.460931777954102
    8. 'at' → logprob: -8.460931777954102
    9. 'atting' → logprob: -8.460931777954102
    10. 'pt' → logprob: -8.585931777954102

Token 154: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.1928003813372925e-05
    2. '[start' → logprob: -11.000051498413086
    3. '[' → logprob: -11.125051498413086
    4. 'start' → logprob: -11.250051498413086
    5. '_]' → logprob: -12.375051498413086
    6. '_' → logprob: -13.875051498413086
    7. '_START' → logprob: -14.125051498413086
    8. 'Start' → logprob: -14.750051498413086
    9. ']' → logprob: -15.125051498413086
    10. '_star' → logprob: -15.500051498413086

Token 155: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00020020268857479095
    2. ']' → logprob: -8.750200271606445
    3. ':' → logprob: -10.500200271606445
    4. ' :]' → logprob: -11.375200271606445
    5. ':]
' → logprob: -13.250200271606445
    6. ':]

' → logprob: -15.000200271606445
    7. ':],' → logprob: -15.500200271606445
    8. '[' → logprob: -15.750200271606445
    9. ':].' → logprob: -15.875200271606445
    10. ':)' → logprob: -16.750200271606445

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5001298189163208
    2. 'print' → logprob: -1.0001298189163208
    3. '       ' → logprob: -3.8751296997070312
    4. ' print' → logprob: -5.500129699707031
    5. '   ' → logprob: -7.750129699707031
    6. '
' → logprob: -8.375129699707031
    7. '	print' → logprob: -10.250129699707031
    8. '               ' → logprob: -10.375129699707031
    9. '```' → logprob: -10.875129699707031
    10. '(' → logprob: -11.125129699707031

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013727048644796014
    2. ' print' → logprob: -9.375137329101562
    3. '           ' → logprob: -9.875137329101562
    4. '       ' → logprob: -15.000137329101562
    5. 'result' → logprob: -15.000137329101562
    6. 'output' → logprob: -15.250137329101562
    7. '   ' → logprob: -17.875137329101562
    8. 'printf' → logprob: -19.000137329101562
    9. '            
' → logprob: -19.250137329101562
    10. 'answer' → logprob: -19.375137329101562

Token 158: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2983565330505371
    2. '(f' → logprob: -2.298356533050537
    3. '(non' → logprob: -2.298356533050537
    4. '(' → logprob: -3.423356533050537
    5. '(str' → logprob: -4.423356533050537
    6. '(p' → logprob: -4.673356533050537
    7. '("("' → logprob: -6.548356533050537
    8. '("' → logprob: -7.048356533050537
    9. '(n' → logprob: -8.548357009887695
    10. '('{}' → logprob: -8.673357009887695

Token 159: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.08787140995264053
    2. ''' → logprob: -3.0878713130950928
    3. '"' → logprob: -3.7128713130950928
    4. ''.' → logprob: -4.837871551513672
    5. ' ''.' → logprob: -5.962871551513672
    6. '''' → logprob: -6.712871551513672
    7. '0' → logprob: -7.212871551513672
    8. '{}' → logprob: -7.962871551513672
    9. 'f' → logprob: -8.462871551513672
    10. 'str' → logprob: -8.462871551513672

Token 160: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.002134675160050392
    2. '''.' → logprob: -6.252134799957275
    3. ''' → logprob: -9.502134323120117
    4. 'non' → logprob: -9.627134323120117
    5. 'format' → logprob: -11.002134323120117
    6. '('' → logprob: -11.752134323120117
    7. ''.' → logprob: -11.877134323120117
    8. ' ''.' → logprob: -11.877134323120117
    9. '"' → logprob: -12.127134323120117
    10. 'print' → logprob: -12.377134323120117

Token 161: '(dec' (ID: 77281)
  Prédit: '(non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(non' → logprob: -7.73183855926618e-05
    2. 'non' → logprob: -9.500077247619629
    3. '(' → logprob: -13.875077247619629
    4. '(n' → logprob: -14.625077247619629
    5. ')' → logprob: -15.375077247619629
    6. ' non' → logprob: -15.500077247619629
    7. '(decimal' → logprob: -15.625077247619629
    8. ' (' → logprob: -16.750078201293945
    9. '   ' → logprob: -17.125078201293945
    10. '```' → logprob: -17.125078201293945

Token 162: 'imals' (ID: 54879)
  Prédit: 'imals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imals' → logprob: -0.747552752494812
    2. 'oding' → logprob: -1.747552752494812
    3. 'non' → logprob: -1.747552752494812
    4. '_re' → logprob: -3.1225528717041016
    5. 'ating' → logprob: -3.2475528717041016
    6. 'uting' → logprob: -3.4975528717041016
    7. '(non' → logprob: -4.372552871704102
    8. 're' → logprob: -4.372552871704102
    9. '_non' → logprob: -4.497552871704102
    10. 'oting' → logprob: -5.372552871704102

Token 163: '))
' (ID: 2210)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.02491709589958191
    2. '[:-' → logprob: -4.524917125701904
    3. ')' → logprob: -4.774917125701904
    4. '))' → logprob: -6.024917125701904
    5. '[' → logprob: -6.149917125701904
    6. ')+' → logprob: -7.649917125701904
    7. '),' → logprob: -9.524916648864746
    8. ',' → logprob: -9.524916648864746
    9. ')+'' → logprob: -9.649916648864746
    10. ')+"' → logprob: -10.524916648864746

Token 164: '           ' (ID: 352)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.04883783310651779
    2. '[:' → logprob: -3.423837900161743
    3. '+' → logprob: -4.923837661743164
    4. ')' → logprob: -5.798837661743164
    5. '[' → logprob: -5.923837661743164
    6. '.replace' → logprob: -6.673837661743164
    7. ' +' → logprob: -8.423837661743164
    8. '(' → logprob: -8.548837661743164
    9. '.rstrip' → logprob: -8.673837661743164
    10. '[::-' → logprob: -9.923837661743164

Token 165: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38604292273521423
    2. ')' → logprob: -1.8860429525375366
    3. '<|end|>' → logprob: -3.511042833328247
    4. '()' → logprob: -3.636042833328247
    5. 'print' → logprob: -3.761042833328247
    6. '('' → logprob: -3.761042833328247
    7. ''' → logprob: -4.886043071746826
    8. '[' → logprob: -4.886043071746826
    9. '+' → logprob: -5.011043071746826
    10. '           ' → logprob: -5.011043071746826

Token 166: ' Prepare' (ID: 49102)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.573656439781189
    2. ' print' → logprob: -1.573656439781189
    3. '#' → logprob: -2.6986565589904785
    4. '           ' → logprob: -2.8236565589904785
    5. ' #' → logprob: -3.6986565589904785
    6. '       ' → logprob: -3.6986565589904785
    7. ' for' → logprob: -4.4486565589904785
    8. ' continue' → logprob: -5.1986565589904785
    9. 'for' → logprob: -5.4486565589904785
    10. ' break' → logprob: -5.5736565589904785

Token 167: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45510220527648926
    2. 'to' → logprob: -1.9551022052764893
    3. '(' → logprob: -2.9551022052764893
    4. 'output' → logprob: -3.0801022052764893
    5. 'non' → logprob: -3.0801022052764893
    6. 'print' → logprob: -4.08010196685791
    7. '()' → logprob: -4.33010196685791
    8. ' for' → logprob: -4.58010196685791
    9. 'result' → logprob: -4.70510196685791
    10. 'repeat' → logprob: -4.83010196685791

Token 168: ' second' (ID: 3099)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.6077119708061218
    2. 'non' → logprob: -1.8577120304107666
    3. 'print' → logprob: -2.2327120304107666
    4. 'result' → logprob: -2.3577120304107666
    5. 'fraction' → logprob: -3.3577120304107666
    6. ' output' → logprob: -3.7327120304107666
    7. 'repeat' → logprob: -4.9827117919921875
    8. 'formatted' → logprob: -5.3577117919921875
    9. ' non' → logprob: -5.4827117919921875
    10. 'decimal' → logprob: -5.4827117919921875

Token 169: ' line' (ID: 2543)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04008271545171738
    2. 'line' → logprob: -3.4150826930999756
    3. ' print' → logprob: -5.290082931518555
    4. ' line' → logprob: -7.040082931518555
    5. 'output' → logprob: -8.540082931518555
    6. 'token' → logprob: -9.415082931518555
    7. 'space' → logprob: -10.290082931518555
    8. ' ' → logprob: -10.540082931518555
    9. 'while' → logprob: -10.540082931518555
    10. 'part' → logprob: -10.665082931518555

Token 170: ' with' (ID: 483)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0042398544028401375
    2. 'if' → logprob: -5.629240036010742
    3. '           ' → logprob: -8.129240036010742
    4. ' print' → logprob: -8.754240036010742
    5. 'for' → logprob: -9.379240036010742
    6. ' if' → logprob: -10.379240036010742
    7. '       ' → logprob: -11.004240036010742
    8. '   ' → logprob: -11.504240036010742
    9. '(' → logprob: -11.754240036010742
    10. ''' → logprob: -11.754240036010742

Token 171: ' spaces' (ID: 18608)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025697103701531887
    2. '     ' → logprob: -6.877569675445557
    3. '"' → logprob: -7.877569675445557
    4. '      ' → logprob: -8.127570152282715
    5. '    ' → logprob: -8.252570152282715
    6. '         ' → logprob: -9.002570152282715
    7. '        ' → logprob: -9.002570152282715
    8. ' ' → logprob: -9.877570152282715
    9. '       ' → logprob: -9.877570152282715
    10. ''s' → logprob: -10.002570152282715

Token 172: ' and' (ID: 326)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2844611406326294
    2. ''' → logprob: -1.7844611406326294
    3. '           ' → logprob: -2.65946102142334
    4. '   ' → logprob: -5.78446102142334
    5. '       ' → logprob: -6.15946102142334
    6. '"' → logprob: -6.65946102142334
    7. 'for' → logprob: -6.78446102142334
    8. '    ' → logprob: -7.65946102142334
    9. ' print' → logprob: -7.65946102142334
    10. '            ' → logprob: -8.65946102142334

Token 173: ' ^' (ID: 7602)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.2551857531070709
    2. 'caret' → logprob: -2.380185842514038
    3. '^' → logprob: -3.005185842514038
    4. 'car' → logprob: -3.630185842514038
    5. 'print' → logprob: -4.630185604095459
    6. ''' → logprob: -4.630185604095459
    7. 'parent' → logprob: -5.005185604095459
    8. 'care' → logprob: -5.130185604095459
    9. ' ' → logprob: -5.255185604095459
    10. '         ' → logprob: -5.880185604095459

Token 174: ' under' (ID: 1641)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09446406364440918
    2. '           ' → logprob: -3.344464063644409
    3. '   ' → logprob: -4.344464302062988
    4. '    ' → logprob: -4.344464302062988
    5. ''' → logprob: -5.219464302062988
    6. '       ' → logprob: -5.344464302062988
    7. '     
' → logprob: -5.594464302062988
    8. ' print' → logprob: -5.969464302062988
    9. '     ' → logprob: -6.094464302062988
    10. ' ' → logprob: -6.344464302062988

Token 175: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4477151036262512
    2. 'non' → logprob: -1.4477150440216064
    3. ''' → logprob: -2.3227150440216064
    4. '''.' → logprob: -4.5727152824401855
    5. 'dec' → logprob: -5.8227152824401855
    6. ' non' → logprob: -6.1977152824401855
    7. 'repeat' → logprob: -6.5727152824401855
    8. '           ' → logprob: -6.6977152824401855
    9. 'decimal' → logprob: -6.8227152824401855
    10. ' repeating' → logprob: -6.8227152824401855

Token 176: ' part' (ID: 997)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04118899628520012
    2. '           ' → logprob: -3.541188955307007
    3. '    ' → logprob: -5.666189193725586
    4. ''' → logprob: -6.541189193725586
    5. '   ' → logprob: -6.666189193725586
    6. '            ' → logprob: -6.666189193725586
    7. '       ' → logprob: -7.041189193725586
    8. ' ' → logprob: -7.416189193725586
    9. ' print' → logprob: -7.416189193725586
    10. '     
' → logprob: -8.166189193725586

Token 177: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032614883966743946
    2. '           ' → logprob: -6.378261566162109
    3. ''' → logprob: -7.503261566162109
    4. ' print' → logprob: -8.00326156616211
    5. '   ' → logprob: -8.37826156616211
    6. '    ' → logprob: -8.62826156616211
    7. '       ' → logprob: -9.37826156616211
    8. '            ' → logprob: -10.12826156616211
    9. 'spaces' → logprob: -11.00326156616211
    10. '         ' → logprob: -11.12826156616211

Token 178: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007148159202188253
    2. '   ' → logprob: -8.500715255737305
    3. '           ' → logprob: -8.500715255737305
    4. ' print' → logprob: -8.625715255737305
    5. '    ' → logprob: -9.625715255737305
    6. ''' → logprob: -11.000715255737305
    7. '       ' → logprob: -11.125715255737305
    8. '        ' → logprob: -12.250715255737305
    9. '            ' → logprob: -12.375715255737305
    10. 'spaces' → logprob: -12.375715255737305

Token 179: ' line' (ID: 2543)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005196703714318573
    2. ' print' → logprob: -8.625519752502441
    3. ''' → logprob: -9.125519752502441
    4. '           ' → logprob: -9.125519752502441
    5. 'spaces' → logprob: -9.750519752502441
    6. 'line' (adapté à ' line') → logprob: -10.750519752502441
    7. '   ' → logprob: -11.250519752502441
    8. 'if' → logprob: -11.750519752502441
    9. '       ' → logprob: -12.000519752502441
    10. 'space' → logprob: -12.250519752502441

Token 180: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00993646215647459
    2. ' =' → logprob: -4.634936332702637
    3. '_' → logprob: -9.634936332702637
    4. '='' → logprob: -9.884936332702637
    5. 'print' → logprob: -11.509936332702637
    6. '_=' → logprob: -11.634936332702637
    7. 's' → logprob: -11.884936332702637
    8. '_spaces' → logprob: -12.384936332702637
    9. '+=' → logprob: -12.509936332702637
    10. '=line' → logprob: -12.509936332702637

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894167304039001
    2. '=' → logprob: -2.578941583633423
    3. '=line' → logprob: -9.953941345214844
    4. ' ='' → logprob: -13.078941345214844
    5. '='' → logprob: -13.578941345214844
    6. ' ' → logprob: -15.203941345214844
    7. 'line' → logprob: -15.953941345214844
    8. '=''' → logprob: -16.078941345214844
    9. '   ' → logprob: -16.453941345214844
    10. ')' → logprob: -16.703941345214844

Token 182: ' ''
' (ID: 25366)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031444430351257324
    2. '"' → logprob: -6.128144264221191
    3. ' '' → logprob: -7.003144264221191
    4. '''' → logprob: -10.628144264221191
    5. ' ' → logprob: -12.253144264221191
    6. ''s' → logprob: -12.253144264221191
    7. '   ' → logprob: -12.378144264221191
    8. '    ' → logprob: -12.753144264221191
    9. '('' → logprob: -13.003144264221191
    10. '['' → logprob: -13.378144264221191

Token 183: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5449497103691101
    2. ' for' → logprob: -0.9199497103691101
    3. '           ' → logprob: -4.169949531555176
    4. '<|end|>' → logprob: -5.419949531555176
    5. '   ' → logprob: -7.044949531555176
    6. '       ' → logprob: -8.044949531555176
    7. 'line' → logprob: -8.669949531555176
    8. 'spaces' → logprob: -10.044949531555176
    9. ')' → logprob: -10.419949531555176
    10. '            
' → logprob: -10.544949531555176

Token 184: ' length' (ID: 5517)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2546829879283905
    2. 'for' → logprob: -1.504683017730713
    3. ''' → logprob: -6.879683017730713
    4. ' line' → logprob: -7.129683017730713
    5. ' for' → logprob: -7.629683017730713
    6. '           ' → logprob: -8.004682540893555
    7. 'print' → logprob: -10.754682540893555
    8. '(line' → logprob: -11.379682540893555
    9. '   ' → logprob: -11.504682540893555
    10. '#line' → logprob: -11.504682540893555

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11385367810726166
    2. ' =' → logprob: -2.238853693008423
    3. '=len' → logprob: -7.363853454589844
    4. '=line' → logprob: -8.488853454589844
    5. '_non' → logprob: -9.363853454589844
    6. 'non' → logprob: -9.863853454589844
    7. '<|end|>' → logprob: -11.488853454589844
    8. 'len' → logprob: -11.988853454589844
    9. ' non' → logprob: -12.238853454589844
    10. '(line' → logprob: -12.238853454589844

Token 186: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003702924121171236
    2. 'p' → logprob: -5.7537031173706055
    3. ' len' → logprob: -8.503703117370605
    4. '0' → logprob: -9.128703117370605
    5. '(len' → logprob: -9.628703117370605
    6. 're' → logprob: -9.628703117370605
    7. 'sum' → logprob: -10.503703117370605
    8. '1' → logprob: -11.003703117370605
    9. '7' → logprob: -12.378703117370605
    10. '           ' → logprob: -12.628703117370605

Token 187: '(dec' (ID: 77281)
  Prédit: '(non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(non' → logprob: -0.05649824067950249
    2. '('' → logprob: -3.4314982891082764
    3. '(dec' → logprob: -4.181498050689697
    4. '(line' → logprob: -5.931498050689697
    5. '(str' → logprob: -6.556498050689697
    6. '(p' → logprob: -6.681498050689697
    7. 'non' → logprob: -6.931498050689697
    8. '(decimal' → logprob: -7.806498050689697
    9. '(n' → logprob: -8.306498527526855
    10. 'dec' → logprob: -9.431498527526855

Token 188: 'imals' (ID: 54879)
  Prédit: 'imals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imals' → logprob: -0.0030256023164838552
    2. 'mals' → logprob: -6.753025531768799
    3. 'als' → logprob: -7.003025531768799
    4. 'non' → logprob: -7.753025531768799
    5. 'imal' → logprob: -8.253026008605957
    6. 'mal' → logprob: -9.128026008605957
    7. 'line' → logprob: -10.378026008605957
    8. 'al' → logprob: -10.503026008605957
    9. '(non' → logprob: -11.253026008605957
    10. '```' → logprob: -11.253026008605957

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001993109006434679
    2. ')
' → logprob: -6.251993179321289
    3. ' )' → logprob: -10.626993179321289
    4. '<|end|>' → logprob: -11.251993179321289
    5. '[' → logprob: -11.876993179321289
    6. ')

' → logprob: -12.626993179321289
    7. ' ' → logprob: -13.126993179321289
    8. '[line' → logprob: -13.376993179321289
    9. 'for' → logprob: -13.501993179321289
    10. '   ' → logprob: -13.626993179321289

Token 190: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7597562670707703
    2. ' for' → logprob: -1.259756326675415
    3. '<|end|>' → logprob: -1.509756326675415
    4. ' ' → logprob: -4.634756088256836
    5. '
' → logprob: -5.134756088256836
    6. ' 
' → logprob: -5.384756088256836
    7. '<|end|>' → logprob: -5.884756088256836
    8. '           ' → logprob: -6.384756088256836
    9. 'line' → logprob: -7.634756088256836
    10. '            
' → logprob: -7.884756088256836

Token 191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030057087540626526
    2. ' for' → logprob: -4.030056953430176
    3. 'line' → logprob: -4.530056953430176
    4. '           ' → logprob: -7.280056953430176
    5. 'print' → logprob: -9.405056953430176
    6. ' line' → logprob: -9.405056953430176
    7. 'length' → logprob: -9.655056953430176
    8. 'i' → logprob: -11.030056953430176
    9. 'space' → logprob: -11.530056953430176
    10. '            
' → logprob: -11.530056953430176

Token 192: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006748766638338566
    2. ' i' → logprob: -5.256748676300049
    3. '_' → logprob: -6.506748676300049
    4. ' _' → logprob: -11.256749153137207
    5. '_i' → logprob: -12.131749153137207
    6. ' ' → logprob: -13.256749153137207
    7. ' ' → logprob: -16.00674819946289
    8. '	i' → logprob: -16.25674819946289
    9. 'idx' → logprob: -17.00674819946289
    10. 'x' → logprob: -17.38174819946289

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029785899445414543
    2. 'in' → logprob: -3.5297858715057373
    3. ' ' → logprob: -10.404786109924316
    4. ' i' → logprob: -14.279786109924316
    5. 'i' → logprob: -14.404786109924316
    6. 'range' → logprob: -14.404786109924316
    7. 'n' → logprob: -14.779786109924316
    8. ',' → logprob: -14.779786109924316
    9. '	in' → logprob: -14.904786109924316
    10. '<|end|>' → logprob: -15.029786109924316

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016045277938246727
    2. ' range' → logprob: -4.141045093536377
    3. ' ' → logprob: -12.266045570373535
    4. 'non' → logprob: -12.391045570373535
    5. 'line' → logprob: -14.516045570373535
    6. '(range' → logprob: -15.016045570373535
    7. '   ' → logprob: -15.141045570373535
    8. ' non' → logprob: -15.266045570373535
    9. '  ' → logprob: -15.516045570373535
    10. '	range' → logprob: -16.14104461669922

Token 195: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4765312969684601
    2. '(length' → logprob: -0.9765312671661377
    3. '(' → logprob: -6.976531505584717
    4. ' length' → logprob: -7.226531505584717
    5. 'len' → logprob: -7.976531505584717
    6. '(len' → logprob: -8.226531028747559
    7. '(re' → logprob: -9.226531028747559
    8. 're' → logprob: -10.351531028747559
    9. ' (' → logprob: -11.476531028747559
    10. '   ' → logprob: -12.351531028747559

Token 196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47546449303627014
    2. '):' → logprob: -0.9754644632339478
    3. '+' → logprob: -7.350464344024658
    4. ')' → logprob: -7.600464344024658
    5. ':' → logprob: -9.225464820861816
    6. ' ):
' → logprob: -10.225464820861816
    7. '):

' → logprob: -10.725464820861816
    8. '):
' → logprob: -10.725464820861816
    9. '       ' → logprob: -11.225464820861816
    10. ' ):' → logprob: -11.475464820861816

Token 197: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033033572137355804
    2. ' if' → logprob: -3.658033609390259
    3. '       ' → logprob: -5.90803337097168
    4. '<|end|>' → logprob: -6.28303337097168
    5. '           ' → logprob: -7.78303337097168
    6. '   ' → logprob: -7.90803337097168
    7. ' ' → logprob: -8.15803337097168
    8. ' ' → logprob: -8.28303337097168
    9. 'if' → logprob: -8.65803337097168
    10. '	       ' → logprob: -9.15803337097168

Token 198: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2055237740278244
    2. 'if' (adapté à ' if') → logprob: -1.7055237293243408
    3. '               ' → logprob: -5.83052396774292
    4. ' line' → logprob: -7.20552396774292
    5. 'line' → logprob: -8.205523490905762
    6. '           ' → logprob: -9.205523490905762
    7. '	if' → logprob: -10.705523490905762
    8. '   ' → logprob: -12.205523490905762
    9. '<|end|>' → logprob: -12.205523490905762
    10. '	line' → logprob: -12.705523490905762

Token 199: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007157695363275707
    2. ' i' → logprob: -7.625715732574463
    3. 'non' → logprob: -9.250716209411621
    4. '   ' → logprob: -9.625716209411621
    5. 're' → logprob: -10.125716209411621
    6. '           ' → logprob: -11.375716209411621
    7. ' ' → logprob: -12.500716209411621
    8. '  ' → logprob: -13.000716209411621
    9. '               ' → logprob: -13.625716209411621
    10. ' non' → logprob: -13.625716209411621

Token 200: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3932046890258789
    2. '<' → logprob: -1.143204689025879
    3. ' >=' → logprob: -5.518204689025879
    4. ' <' → logprob: -6.518204689025879
    5. '==' → logprob: -8.268204689025879
    6. '<int' → logprob: -9.018204689025879
    7. '<i' → logprob: -10.018204689025879
    8. '<|end|>' → logprob: -10.018204689025879
    9. ']>=' → logprob: -10.268204689025879
    10. '<data' → logprob: -10.393204689025879

Token 201: ' repeating' (ID: 74481)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0005231272662058473
    2. 'len' → logprob: -8.125523567199707
    3. ' repeating' → logprob: -8.500523567199707
    4. 'repeat' → logprob: -12.125523567199707
    5. '           ' → logprob: -12.375523567199707
    6. '   ' → logprob: -12.750523567199707
    7. '       ' → logprob: -13.375523567199707
    8. 'non' → logprob: -13.375523567199707
    9. ' len' → logprob: -13.500523567199707
    10. '0' → logprob: -13.625523567199707

Token 202: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -3.607391408877447e-05
    2. 'start' → logprob: -10.250036239624023
    3. '_START' → logprob: -14.750036239624023
    4. 'Start' → logprob: -16.125036239624023
    5. '_' → logprob: -16.750036239624023
    6. '[start' → logprob: -17.625036239624023
    7. 's' → logprob: -18.125036239624023
    8. '```' → logprob: -18.125036239624023
    9. '_Start' → logprob: -18.625036239624023
    10. '[' → logprob: -18.625036239624023

Token 203: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5753150582313538
    2. ':
' → logprob: -1.200314998626709
    3. '               ' → logprob: -3.075314998626709
    4. ':' → logprob: -3.450314998626709
    5. 'and' → logprob: -3.450314998626709
    6. '           ' → logprob: -4.200314998626709
    7. '):
' → logprob: -5.825314998626709
    8. ' else' → logprob: -5.825314998626709
    9. '                   ' → logprob: -6.075314998626709
    10. '   ' → logprob: -7.575314998626709

Token 204: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37382152676582336
    2. '                   ' → logprob: -1.373821496963501
    3. ' line' → logprob: -2.998821496963501
    4. 'line' → logprob: -5.37382173538208
    5. '           ' → logprob: -6.62382173538208
    6. ' and' → logprob: -7.99882173538208
    7. ',' → logprob: -8.123821258544922
    8. '                       ' → logprob: -8.373821258544922
    9. '   ' → logprob: -8.498821258544922
    10. ')' → logprob: -8.498821258544922

Token 205: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.18226295709609985
    2. ' line' → logprob: -1.807262897491455
    3. '               ' → logprob: -6.432262897491455
    4. '   ' → logprob: -8.057263374328613
    5. '                   ' → logprob: -8.432263374328613
    6. '	line' → logprob: -8.432263374328613
    7. '           ' → logprob: -9.182263374328613
    8. '#line' → logprob: -10.432263374328613
    9. '       ' → logprob: -12.182263374328613
    10. ' ' → logprob: -12.307263374328613

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. '+=' → logprob: -11.25001335144043
    3. ' +=' → logprob: -14.87501335144043
    4. '+' → logprob: -15.25001335144043
    5. '+='' → logprob: -16.00001335144043
    6. '+="' → logprob: -17.37501335144043
    7. '₂' → logprob: -18.25001335144043
    8. ' ' → logprob: -18.50001335144043
    9. '```' → logprob: -18.62501335144043
    10. '   ' → logprob: -19.37501335144043

Token 207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1623234897851944
    2. ' +=' → logprob: -1.9123234748840332
    3. '+='' → logprob: -6.537323474884033
    4. '+' → logprob: -7.412323474884033
    5. '=' → logprob: -11.037323951721191
    6. '+="' → logprob: -11.162323951721191
    7. ' +' → logprob: -11.537323951721191
    8. ']+=' → logprob: -13.037323951721191
    9. ' =' → logprob: -14.412323951721191
    10. '   ' → logprob: -14.412323951721191

Token 208: ' '^' (ID: 117788)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.0018046533223241568
    2. ''' → logprob: -6.376804828643799
    3. '^' → logprob: -9.37680435180664
    4. ' '^' → logprob: -11.62680435180664
    5. '"' → logprob: -11.87680435180664
    6. ' ' → logprob: -13.62680435180664
    7. '   ' → logprob: -15.25180435180664
    8. '  ' → logprob: -15.87680435180664
    9. ''*' → logprob: -16.37680435180664
    10. ' '' → logprob: -16.62680435180664

Token 209: ''
' (ID: 2207)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.37559476494789124
    2. '               ' → logprob: -1.7505947351455688
    3. '
' → logprob: -2.2505948543548584
    4. ' else' → logprob: -3.7505948543548584
    5. '')
' → logprob: -6.000594615936279
    6. '<|end|>' → logprob: -6.000594615936279
    7. ')
' → logprob: -6.125594615936279
    8. ' 
' → logprob: -7.250594615936279
    9. '           ' → logprob: -7.500594615936279
    10. '')' → logprob: -7.625594615936279

Token 210: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004735564813017845
    2. 'else' → logprob: -5.879735469818115
    3. ' else' → logprob: -6.254735469818115
    4. '           ' → logprob: -12.879735946655273
    5. '```' → logprob: -13.629735946655273
    6. '   ' → logprob: -14.004735946655273
    7. '       ' → logprob: -14.129735946655273
    8. '              ' → logprob: -14.504735946655273
    9. 'elif' → logprob: -15.129735946655273
    10. '                
' → logprob: -15.254735946655273

Token 211: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06868401914834976
    2. '               ' → logprob: -3.1936841011047363
    3. ' else' → logprob: -3.8186841011047363
    4. '           ' → logprob: -5.693684101104736
    5. '   ' → logprob: -11.443683624267578
    6. 'elif' → logprob: -11.443683624267578
    7. '       ' → logprob: -12.068683624267578
    8. '	else' → logprob: -12.818683624267578
    9. '              ' → logprob: -14.318683624267578
    10. '             ' → logprob: -14.318683624267578

Token 212: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8201192617416382
    2. ' line' → logprob: -0.8201192617416382
    3. '           ' → logprob: -3.3201193809509277
    4. 'line' → logprob: -3.4451193809509277
    5. '                   ' → logprob: -3.5701193809509277
    6. ' ' → logprob: -4.820119380950928
    7. ':
' → logprob: -6.570119380950928
    8. '                ' → logprob: -6.570119380950928
    9. '   ' → logprob: -6.695119380950928
    10. ' else' → logprob: -6.695119380950928

Token 213: '                   ' (ID: 699)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8663730621337891
    2. ' line' → logprob: -1.116373062133789
    3. '               ' → logprob: -1.491373062133789
    4. '                   ' → logprob: -4.116373062133789
    5. '           ' → logprob: -4.741373062133789
    6. '                ' → logprob: -7.366373062133789
    7. '   ' → logprob: -8.616373062133789
    8. '                
' → logprob: -8.741373062133789
    9. '            ' → logprob: -9.116373062133789
    10. '                    
' → logprob: -9.241373062133789

Token 214: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3517807722091675
    2. 'line' (adapté à ' line') → logprob: -1.2267807722091675
    3. ''' → logprob: -6.101780891418457
    4. ' '' → logprob: -8.226780891418457
    5. ' ' → logprob: -8.351780891418457
    6. 'space' → logprob: -8.726780891418457
    7. ' ' → logprob: -9.351780891418457
    8. ' )' → logprob: -9.601780891418457
    9. ' 
' → logprob: -9.726780891418457
    10. '#line' → logprob: -10.226780891418457

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001261845463886857
    2. ' +=' → logprob: -9.125125885009766
    3. '+=' → logprob: -11.000125885009766
    4. '+='' → logprob: -15.625125885009766
    5. ' ' → logprob: -16.125125885009766
    6. '+' → logprob: -16.125125885009766
    7. '   ' → logprob: -18.000125885009766
    8. '  ' → logprob: -18.125125885009766
    9. ' +' → logprob: -18.500125885009766
    10. '+="' → logprob: -18.500125885009766

Token 216: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4746105968952179
    2. ' +=' → logprob: -0.9746105670928955
    3. '+='' → logprob: -7.599610805511475
    4. '+' → logprob: -10.599610328674316
    5. '+="' → logprob: -12.224610328674316
    6. '=' → logprob: -13.599610328674316
    7. ' +' → logprob: -13.849610328674316
    8. ']+=' → logprob: -14.974610328674316
    9. '+=(' → logprob: -15.974610328674316
    10. 'line' → logprob: -16.474611282348633

Token 217: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.1888679839321412e-05
    2. ' '' → logprob: -10.750021934509277
    3. '"' → logprob: -14.875021934509277
    4. ' ' → logprob: -16.50002098083496
    5. ''s' → logprob: -18.50002098083496
    6. 'space' → logprob: -19.00002098083496
    7. '`' → logprob: -19.25002098083496
    8. '<|end|>' → logprob: -19.37502098083496
    9. '  ' → logprob: -19.75002098083496
    10. '('' → logprob: -20.12502098083496

Token 218: ' '
' (ID: 17733)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2368524670600891
    2. ' '' → logprob: -1.7368524074554443
    3. ' ' → logprob: -3.3618524074554443
    4. '<|end|>' → logprob: -9.361852645874023
    5. ''s' → logprob: -10.986852645874023
    6. ' "' → logprob: -11.111852645874023
    7. ' )' → logprob: -11.861852645874023
    8. ' space' → logprob: -12.611852645874023
    9. ' ' → logprob: -12.736852645874023
    10. '"' → logprob: -12.736852645874023

Token 219: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4354248642921448
    2. 'print' → logprob: -1.1854248046875
    3. '           ' → logprob: -3.1854248046875
    4. '
' → logprob: -5.3104248046875
    5. ' print' → logprob: -7.3104248046875
    6. '<|end|>' → logprob: -8.4354248046875
    7. '   ' → logprob: -9.3104248046875
    8. '        
' → logprob: -10.9354248046875
    9. '               ' → logprob: -10.9354248046875
    10. '            
' → logprob: -11.3104248046875

Token 220: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0035420977510511875
    2. '       ' → logprob: -5.878541946411133
    3. ' print' → logprob: -7.628541946411133
    4. '
' → logprob: -8.628541946411133
    5. '           ' → logprob: -10.128541946411133
    6. '<|end|>' → logprob: -11.628541946411133
    7. ')' → logprob: -11.753541946411133
    8. '   ' → logprob: -12.253541946411133
    9. '```' → logprob: -13.003541946411133
    10. 'if' → logprob: -13.378541946411133

Token 221: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0006111674592830241
    2. '(' → logprob: -8.500611305236816
    3. '()' → logprob: -8.500611305236816
    4. '('' → logprob: -8.625611305236816
    5. 'line' → logprob: -10.875611305236816
    6. '(
' → logprob: -13.000611305236816
    7. ' (' → logprob: -13.375611305236816
    8. '()
' → logprob: -15.125611305236816
    9. '(lines' → logprob: -15.250611305236816
    10. '('',' → logprob: -15.375611305236816

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.250000953674316
    3. ')' → logprob: -14.500000953674316
    4. '₂' → logprob: -16.625001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '２' → logprob: -18.312501907348633
    7. '۲' → logprob: -18.687501907348633
    8. '```' → logprob: -18.750001907348633
    9. '[' → logprob: -19.125001907348633
    10. '_line' → logprob: -19.250001907348633

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -14.250001907348633
    3. '')' → logprob: -14.750001907348633
    4. ' )' → logprob: -14.875001907348633
    5. '`)' → logprob: -15.250001907348633
    6. '))' → logprob: -15.375001907348633
    7. ')`' → logprob: -15.625001907348633
    8. '")' → logprob: -16.125001907348633
    9. ')}}' → logprob: -17.625001907348633
    10. ')")' → logprob: -17.750001907348633

Token 224: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.07271081209182739
    2. ' except' → logprob: -2.6977107524871826
    3. '<|end|>' → logprob: -6.072710990905762
    4. '	except' → logprob: -8.072710990905762
    5. '   ' → logprob: -10.072710990905762
    6. '```' → logprob: -10.447710990905762
    7. 'Exception' → logprob: -11.072710990905762
    8. '<|end|>' → logprob: -11.322710990905762
    9. '    
' → logprob: -11.447710990905762
    10. 'Except' → logprob: -11.447710990905762

Token 226: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.0025749478954821825
    2. 'EOF' → logprob: -6.002574920654297
    3. ' Keyboard' → logprob: -9.752574920654297
    4. ' Exception' → logprob: -10.627574920654297
    5. ' ' → logprob: -11.252574920654297
    6. ' ' → logprob: -13.502574920654297
    7. ' (' → logprob: -14.002574920654297
    8. 'Keyboard' → logprob: -14.377574920654297
    9. 'Exception' → logprob: -15.377574920654297
    10. ' eof' → logprob: -15.627574920654297

Token 227: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -18.625
    3. 'error' → logprob: -19.375
    4. ' Error' → logprob: -19.5
    5. '   ' → logprob: -19.875
    6. 'E' → logprob: -20.125
    7. 'EOF' → logprob: -20.375
    8. '	Error' → logprob: -20.375
    9. 'Erro' → logprob: -20.625
    10. '
' → logprob: -20.75

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007478971499949694
    2. ':
' → logprob: -5.257479190826416
    3. '       ' → logprob: -6.132479190826416
    4. '():' → logprob: -10.257478713989258
    5. '   ' → logprob: -10.757478713989258
    6. '():
' → logprob: -11.882478713989258
    7. '<|end|>' → logprob: -13.007478713989258
    8. '           ' → logprob: -13.632478713989258
    9. '	   ' → logprob: -14.257478713989258
    10. ',' → logprob: -14.632478713989258

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.074907287256792e-05
    2. '   ' → logprob: -10.12506103515625
    3. ':' → logprob: -11.12506103515625
    4. '           ' → logprob: -12.87506103515625
    5. ' break' → logprob: -13.87506103515625
    6. ':
' → logprob: -14.37506103515625
    7. 'break' → logprob: -14.75006103515625
    8. '    ' → logprob: -15.12506103515625
    9. '	break' → logprob: -15.25006103515625
    10. '      ' → logprob: -15.62506103515625

Token 230: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10075510293245316
    2. '       ' → logprob: -2.600755214691162
    3. ' break' → logprob: -3.850755214691162
    4. '   ' → logprob: -8.350754737854004
    5. '	break' → logprob: -8.975754737854004
    6. '           ' → logprob: -14.100754737854004
    7. '_break' → logprob: -15.475754737854004
    8. '        
' → logprob: -15.725754737854004
    9. ' ' → logprob: -15.975754737854004
    10. 'Break' → logprob: -16.35075569152832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 228
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 108
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 42.98%
Précision adaptée (1ère position): 47.37%
Précision (top 10): 83.33%
================================================================================
