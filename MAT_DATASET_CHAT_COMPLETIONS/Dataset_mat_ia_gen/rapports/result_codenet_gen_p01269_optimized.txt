================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    N, M, L = map(int, input().split())
    if N == 0 and M == 0 and L == 0:
        break
    graph = [[] for _ in range(N+1)]
    for _ in range(M):
        A, B, D, E = map(int, input().split())
        graph[A].append((B, D, E))
        graph[B].append((A, D, E))

    # dist[node][budget_used] = minimum total attackers encountered to reach node with budget_used of guards hiring cost.
    INF = 10**9
    dist = [[INF]*(L+1) for _ in range(N+1)]
    dist[1][0] = 0
    hq = [(0, 1, 0)]  # (attackers, node, budget_used)
    while hq:
        att, node, cost = heapq.heappop(hq)
        if dist[node][cost] < att:
            continue
        if node == N:
            print(att)
            break
        for nxt, d, e in graph[node]:
            # guard hired if d <= budget available (L-cost)
            # if hire guard: must have enough budget to pay d
            if cost + d <= L:
                ncost = cost + d
                natt = att
                if dist[nxt][ncost] > natt:
                    dist[nxt][ncost] = natt
                    heapq.heappush(hq, (natt, nxt, ncost))
            # not hire guard:
            ncost = cost
            natt = att + e
            if dist[nxt][ncost] > natt:
                dist[nxt][ncost] = natt
                heapq.heappush(hq, (natt, nxt, ncost))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.500823974609375
    2. '
' → logprob: -1.500823974609375
    3. '\n' → logprob: -2.500823974609375
    4. '\' → logprob: -3.375823974609375
    5. '

' → logprob: -3.625823974609375
    6. '<|end|>' → logprob: -5.000823974609375
    7. '' → logprob: -5.375823974609375
    8. 'import' → logprob: -5.500823974609375
    9. '.
' → logprob: -5.875823974609375
    10. '.

' → logprob: -6.125823974609375

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6963363289833069
    2. 'def' → logprob: -1.696336269378662
    3. '
' → logprob: -2.321336269378662
    4. '\' → logprob: -3.196336269378662
    5. '```' → logprob: -3.321336269378662
    6. 'class' → logprob: -3.571336269378662
    7. '\n' → logprob: -3.821336269378662
    8. 'from' → logprob: -4.071336269378662
    9. 'import' → logprob: -4.196336269378662
    10. '' → logprob: -4.321336269378662

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03835977613925934
    2. '.' → logprob: -3.2883598804473877
    3. ')' → logprob: -8.913359642028809
    4. '```' → logprob: -10.288359642028809
    5. '(.)' → logprob: -10.788359642028809
    6. '=' → logprob: -10.788359642028809
    7. '[' → logprob: -11.163359642028809
    8. '()' → logprob: -11.163359642028809
    9. ''' → logprob: -11.413359642028809
    10. '(
' → logprob: -11.538359642028809

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.13301323354244232
    2. ' sys' → logprob: -2.1330132484436035
    3. 'input' → logprob: -5.1330132484436035
    4. ' input' → logprob: -8.883012771606445
    5. '	sys' → logprob: -11.133012771606445
    6. 'lambda' → logprob: -11.633012771606445
    7. '=sys' → logprob: -12.633012771606445
    8. '(sys' → logprob: -14.258012771606445
    9. ' lambda' → logprob: -14.258012771606445
    10. '```' → logprob: -14.258012771606445

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10470236092805862
    2. '.' → logprob: -2.3547024726867676
    3. '.stdout' → logprob: -6.479702472686768
    4. '.readline' → logprob: -7.104702472686768
    5. ' .' → logprob: -7.104702472686768
    6. '.input' → logprob: -7.604702472686768
    7. '.argv' → logprob: -8.35470199584961
    8. '.path' → logprob: -8.97970199584961
    9. '.std' → logprob: -9.22970199584961
    10. '.import' → logprob: -9.47970199584961

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006864440161734819
    2. '.read' → logprob: -5.381864547729492
    3. '.' → logprob: -6.131864547729492
    4. '.readlines' → logprob: -10.006864547729492
    5. 'read' → logprob: -11.506864547729492
    6. '.buffer' → logprob: -11.631864547729492
    7. '```' → logprob: -13.131864547729492
    8. '.Read' → logprob: -13.881864547729492
    9. '<|end|>' → logprob: -15.006864547729492
    10. ' .' → logprob: -15.131864547729492

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.59145188331604
    2. '()' → logprob: -0.84145188331604
    3. '(
' → logprob: -4.591451644897461
    4. '()
' → logprob: -5.966451644897461
    5. 'def' → logprob: -7.466451644897461
    6. '()

' → logprob: -7.466451644897461
    7. '
' → logprob: -7.966451644897461
    8. '(

' → logprob: -8.216451644897461
    9. ')' → logprob: -8.591451644897461
    10. '(n' → logprob: -8.966451644897461

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3136137127876282
    2. 'def' → logprob: -1.3136136531829834
    3. 'class' → logprob: -8.438613891601562
    4. 'N' → logprob: -9.438613891601562
    5. 'd' → logprob: -11.188613891601562
    6. '\' → logprob: -11.563613891601562
    7. 'for' → logprob: -12.313613891601562
    8. 'from' → logprob: -12.313613891601562
    9. 't' → logprob: -12.438613891601562
    10. 'data' → logprob: -12.563613891601562

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03248731419444084
    2. ' True' → logprob: -3.532487392425537
    3. '  ' → logprob: -7.032487392425537
    4. ' (' → logprob: -7.532487392425537
    5. ' not' → logprob: -7.532487392425537
    6. ' )' → logprob: -8.032486915588379
    7. '<|end|>' → logprob: -9.407486915588379
    8. '(' → logprob: -9.657486915588379
    9. '    ' → logprob: -9.657486915588379
    10. ' space' → logprob: -10.157486915588379

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000742803153116256
    2. '():' → logprob: -7.3757429122924805
    3. ' :' → logprob: -9.62574291229248
    4. ':**' → logprob: -10.62574291229248
    5. ':
' → logprob: -12.50074291229248
    6. '(:' → logprob: -12.50074291229248
    7. '   ' → logprob: -12.50074291229248
    8. ':return' → logprob: -12.62574291229248
    9. '):' → logprob: -13.00074291229248
    10. ':def' → logprob: -14.12574291229248

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01219185534864664
    2. '    
' → logprob: -4.7621917724609375
    3. 'n' → logprob: -6.7621917724609375
    4. ' ' → logprob: -7.1371917724609375
    5. ' 
' → logprob: -7.6371917724609375
    6. ' )' → logprob: -8.387191772460938
    7. 'a' → logprob: -8.762191772460938
    8. '    ' → logprob: -8.887191772460938
    9. ' line' → logprob: -9.012191772460938
    10. ' n' → logprob: -9.637191772460938

Token 17: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5237990021705627
    2. ' n' → logprob: -1.773798942565918
    3. ' line' → logprob: -2.898798942565918
    4. 'num' → logprob: -3.273798942565918
    5. 'data' → logprob: -3.648798942565918
    6. '   ' → logprob: -3.773798942565918
    7. 'line' → logprob: -3.898798942565918
    8. 'x' → logprob: -3.898798942565918
    9. ' num' → logprob: -4.523798942565918
    10. 'cmd' → logprob: -4.523798942565918

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03150850906968117
    2. '=' → logprob: -4.406508445739746
    3. ' ==' → logprob: -4.781508445739746
    4. ' ' → logprob: -5.031508445739746
    5. ' >' → logprob: -5.781508445739746
    6. ' <=' → logprob: -8.156508445739746
    7. '>' → logprob: -9.531508445739746
    8. ' ,' → logprob: -9.656508445739746
    9. ' <' → logprob: -9.781508445739746
    10. ')' → logprob: -9.906508445739746

Token 19: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6587578058242798
    2. 'M' → logprob: -0.9087578058242798
    3. ' K' → logprob: -3.4087576866149902
    4. 'K' → logprob: -3.7837576866149902
    5. ' ' → logprob: -5.03375768661499
    6. 'm' → logprob: -5.53375768661499
    7. 'space' → logprob: -5.65875768661499
    8. '  ' → logprob: -6.15875768661499
    9. ' =' → logprob: -6.78375768661499
    10. '    ' → logprob: -7.40875768661499

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693630158901215
    2. '=' → logprob: -2.126936197280884
    3. ' ' → logprob: -12.501935958862305
    4. ',' → logprob: -12.876935958862305
    5. ')' → logprob: -13.751935958862305
    6. '=input' → logprob: -15.126935958862305
    7. '    ' → logprob: -15.501935958862305
    8. '   ' → logprob: -16.126935958862305
    9. '=line' → logprob: -16.751935958862305
    10. ' =",' → logprob: -17.251935958862305

Token 21: ' L' (ID: 451)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.03325521945953369
    2. 'K' → logprob: -3.783255100250244
    3. ' P' → logprob: -5.783255100250244
    4. ' Q' → logprob: -6.158255100250244
    5. ' L' → logprob: -7.158255100250244
    6. ' ' → logprob: -7.283255100250244
    7. ' T' → logprob: -7.658255100250244
    8. ' S' → logprob: -7.908255100250244
    9. ' X' → logprob: -7.908255100250244
    10. ' W' → logprob: -8.408255577087402

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327024102211
    2. '=' → logprob: -1.3132702112197876
    3. ' ' → logprob: -12.313270568847656
    4. ',' → logprob: -13.063270568847656
    5. ')' → logprob: -14.063270568847656
    6. '=input' → logprob: -14.688270568847656
    7. '    ' → logprob: -15.188270568847656
    8. '=line' → logprob: -16.688270568847656
    9. '   ' → logprob: -16.938270568847656
    10. '```' → logprob: -17.063270568847656

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029930178076028824
    2. 'map' → logprob: -3.5299301147460938
    3. ' input' → logprob: -8.779930114746094
    4. 'input' → logprob: -11.279930114746094
    5. ' list' → logprob: -12.404930114746094
    6. ' [' → logprob: -13.029930114746094
    7. '[' → logprob: -13.404930114746094
    8. ' ' → logprob: -13.404930114746094
    9. '(map' → logprob: -13.404930114746094
    10. '	map' → logprob: -13.904930114746094

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3945003151893616
    2. '(int' → logprob: -1.3945002555847168
    3. '(str' → logprob: -3.394500255584717
    4. '(lambda' → logprob: -3.644500255584717
    5. '(input' → logprob: -4.019500255584717
    6. '(eval' → logprob: -9.269500732421875
    7. '(list' → logprob: -9.519500732421875
    8. '(tuple' → logprob: -10.019500732421875
    9. '(len' → logprob: -10.769500732421875
    10. '(
' → logprob: -11.019500732421875

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6933795213699341
    2. '(input' → logprob: -1.443379521369934
    3. ',input' → logprob: -1.568379521369934
    4. ')' → logprob: -3.4433794021606445
    5. 'input' → logprob: -3.9433794021606445
    6. '(' → logprob: -5.8183794021606445
    7. '=input' → logprob: -7.6933794021606445
    8. '(sys' → logprob: -8.693379402160645
    9. ' input' → logprob: -9.068379402160645
    10. '),' → logprob: -9.068379402160645

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1603112518787384
    2. ' input' → logprob: -1.910311222076416
    3. ')' → logprob: -9.410311698913574
    4. '(input' → logprob: -13.660311698913574
    5. ' sys' → logprob: -13.910311698913574
    6. 'sys' → logprob: -14.035311698913574
    7. ',input' → logprob: -14.285311698913574
    8. ' )' → logprob: -14.535311698913574
    9. '=input' → logprob: -14.660311698913574
    10. ' ' → logprob: -15.285311698913574

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014537633978761733
    2. '()' → logprob: -8.875144958496094
    3. ' ().' → logprob: -12.625144958496094
    4. '())' → logprob: -13.500144958496094
    5. '(' → logprob: -15.250144958496094
    6. '()
' → logprob: -16.000144958496094
    7. '()))' → logprob: -16.125144958496094
    8. ')' → logprob: -16.250144958496094
    9. '().'' → logprob: -17.125144958496094
    10. '('').' → logprob: -17.500144958496094

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06227407976984978
    2. 'strip' → logprob: -2.8122739791870117
    3. 'rstrip' → logprob: -8.187273979187012
    4. ')' → logprob: -10.562273979187012
    5. '(split' → logprob: -13.937273979187012
    6. ' split' → logprob: -14.187273979187012
    7. ' strip' → logprob: -15.687273979187012
    8. '())' → logprob: -15.937273979187012
    9. 'read' → logprob: -16.187274932861328
    10. '()' → logprob: -16.562274932861328

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. '))' → logprob: -10.625031471252441
    3. '()' → logprob: -13.125031471252441
    4. ')
' → logprob: -13.250031471252441
    5. '(' → logprob: -13.500031471252441
    6. '())' → logprob: -14.375031471252441
    7. '`)' → logprob: -15.250031471252441
    8. ')`' → logprob: -15.500031471252441
    9. ')))' → logprob: -15.750031471252441
    10. ' )' → logprob: -15.750031471252441

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7981013655662537
    2. ' if' → logprob: -1.2981014251708984
    3. ' ' → logprob: -2.1731014251708984
    4. 'if' → logprob: -2.2981014251708984
    5. ' 
' → logprob: -3.9231014251708984
    6. '    
' → logprob: -4.673101425170898
    7. '
' → logprob: -5.048101425170898
    8. '  ' → logprob: -5.173101425170898
    9. '	if' → logprob: -5.423101425170898
    10. ')' → logprob: -5.548101425170898

Token 31: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1746036261320114
    2. ' not' → logprob: -1.9246035814285278
    3. 'N' → logprob: -4.299603462219238
    4. 'not' → logprob: -7.549603462219238
    5. ' ' → logprob: -8.674603462219238
    6. '	N' → logprob: -13.049603462219238
    7. ' ' → logprob: -14.049603462219238
    8. ' (' → logprob: -14.549603462219238
    9. ')' → logprob: -14.924603462219238
    10. 'n' → logprob: -15.299603462219238

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012552979402244091
    2. '==' → logprob: -4.3875532150268555
    3. '=' → logprob: -10.512553215026855
    4. ')' → logprob: -12.262553215026855
    5. ' =' → logprob: -12.262553215026855
    6. ' <=' → logprob: -13.387553215026855
    7. ' ' → logprob: -13.387553215026855
    8. ' <' → logprob: -13.387553215026855
    9. ' ' → logprob: -14.012553215026855
    10. '0' → logprob: -15.137553215026855

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -8.875141143798828
    3. '```' → logprob: -14.625141143798828
    4. '   ' → logprob: -16.187641143798828
    5. '۰' → logprob: -16.312641143798828
    6. 'M' → logprob: -16.437641143798828
    7. '  ' → logprob: -16.562641143798828
    8. 'EOF' → logprob: -16.812641143798828
    9. ')' → logprob: -17.250141143798828
    10. '    ' → logprob: -17.687641143798828

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '۰' → logprob: -17.187679290771484
    4. '  ' → logprob: -17.562679290771484
    5. '-' → logprob: -17.625179290771484
    6. '```' → logprob: -17.687679290771484
    7. '０' → logprob: -18.250179290771484
    8. '   ' → logprob: -18.562679290771484
    9. '

' → logprob: -18.562679290771484
    10. '    ' → logprob: -18.937679290771484

Token 36: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03150978311896324
    2. ' and' → logprob: -3.5315098762512207
    3. 'and' → logprob: -6.781509876251221
    4. ',' → logprob: -7.531509876251221
    5. ' or' → logprob: -10.656509399414062
    6. ':
' → logprob: -10.781509399414062
    7. ' :' → logprob: -11.281509399414062
    8. '<|end|>' → logprob: -11.281509399414062
    9. ' ' → logprob: -12.156509399414062
    10. ')' → logprob: -12.781509399414062

Token 37: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.006414559204131365
    2. ' ' → logprob: -5.631414413452148
    3. 'M' → logprob: -5.881414413452148
    4. '<|end|>' → logprob: -12.131414413452148
    5. ' ' → logprob: -12.381414413452148
    6. '    ' → logprob: -12.381414413452148
    7. '  ' → logprob: -12.756414413452148
    8. '   ' → logprob: -13.881414413452148
    9. ' 
' → logprob: -14.631414413452148
    10. '<|end|>' → logprob: -14.756414413452148

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02060074731707573
    2. '==' → logprob: -3.8956007957458496
    3. '<|end|>' → logprob: -10.520600318908691
    4. ' ' → logprob: -10.645600318908691
    5. ' =' → logprob: -13.645600318908691
    6. '=' → logprob: -13.895600318908691
    7. '0' → logprob: -13.895600318908691
    8. ' ' → logprob: -14.020600318908691
    9. ' ===' → logprob: -14.145600318908691
    10. '  ' → logprob: -14.270600318908691

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043000686913728714
    2. ' ' → logprob: -3.1680006980895996
    3. ' and' → logprob: -14.418000221252441
    4. ' ' → logprob: -14.543000221252441
    5. 'and' → logprob: -15.793000221252441
    6. ' L' → logprob: -16.168001174926758
    7. '  ' → logprob: -16.418001174926758
    8. '```' → logprob: -16.668001174926758
    9. '   ' → logprob: -16.918001174926758
    10. '۰' → logprob: -17.418001174926758

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -18.250158309936523
    4. '  ' → logprob: -19.062658309936523
    5. '```' → logprob: -19.312658309936523
    6. '<|end|>' → logprob: -19.437658309936523
    7. '０' → logprob: -20.000158309936523
    8. '০' → logprob: -20.062658309936523
    9. '०' → logprob: -20.187658309936523
    10. '   ' → logprob: -20.437658309936523

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006737153977155685
    2. 'and' → logprob: -5.006737232208252
    3. ' ' → logprob: -11.381736755371094
    4. '<|end|>' → logprob: -12.256736755371094
    5. '	and' → logprob: -13.006736755371094
    6. '<|end|>' → logprob: -14.131736755371094
    7. ':' → logprob: -14.256736755371094
    8. ' ' → logprob: -14.381736755371094
    9. '```' → logprob: -15.006736755371094
    10. '   ' → logprob: -15.006736755371094

Token 42: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4492841958999634
    2. 'L' → logprob: -1.0742841958999634
    3. '0' → logprob: -3.949284076690674
    4. ' ' → logprob: -6.824284076690674
    5. '   ' → logprob: -11.699284553527832
    6. ' ' → logprob: -12.324284553527832
    7. '  ' → logprob: -12.824284553527832
    8. '```' → logprob: -14.324284553527832
    9. '    ' → logprob: -14.949284553527832
    10. '	L' → logprob: -14.949284553527832

Token 43: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12712621688842773
    2. '==' → logprob: -2.1271262168884277
    3. ':' → logprob: -9.877126693725586
    4. '=' → logprob: -10.002126693725586
    5. '<|end|>' → logprob: -10.502126693725586
    6. ' ' → logprob: -11.377126693725586
    7. ')' → logprob: -11.377126693725586
    8. '  ' → logprob: -11.502126693725586
    9. ')==' → logprob: -11.627126693725586
    10. '0' → logprob: -12.127126693725586

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004622018430382013
    2. ' ' → logprob: -5.379621982574463
    3. '   ' → logprob: -13.754622459411621
    4. '  ' → logprob: -14.254622459411621
    5. '```' → logprob: -18.567121505737305
    6. ' ' → logprob: -18.754621505737305
    7. '۰' → logprob: -19.004621505737305
    8. ')' → logprob: -19.129621505737305
    9. '	' → logprob: -19.129621505737305
    10. '    ' → logprob: -19.254621505737305

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -17.375003814697266
    4. '-' → logprob: -18.187503814697266
    5. '০' → logprob: -18.312503814697266
    6. '०' → logprob: -18.937503814697266
    7. '  ' → logprob: -19.062503814697266
    8. '   ' → logprob: -19.250003814697266
    9. '０' → logprob: -20.062503814697266
    10. '٠' → logprob: -20.062503814697266

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.088138227118179e-05
    2. ':
' → logprob: -10.250070571899414
    3. '   ' → logprob: -10.875070571899414
    4. ' :' → logprob: -11.125070571899414
    5. ':return' → logprob: -13.625070571899414
    6. '       ' → logprob: -15.250070571899414
    7. '):' → logprob: -15.750070571899414
    8. ' break' → logprob: -16.500070571899414
    9. '	break' → logprob: -16.625070571899414
    10. '  ' → logprob: -17.250070571899414

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14288102090358734
    2. '   ' → logprob: -2.017880916595459
    3. ' break' → logprob: -9.392881393432617
    4. '	break' → logprob: -9.642881393432617
    5. '\n' → logprob: -11.142881393432617
    6. '     ' → logprob: -11.767881393432617
    7. '    ' → logprob: -11.767881393432617
    8. 'break' → logprob: -11.767881393432617
    9. '	' → logprob: -12.642881393432617
    10. '      ' → logprob: -12.767881393432617

Token 48: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3209073841571808
    2. 'break' (adapté à ' break') → logprob: -1.3209073543548584
    3. '   ' → logprob: -5.0709075927734375
    4. '       ' → logprob: -6.8209075927734375
    5. '	break' → logprob: -8.320907592773438
    6. '_break' → logprob: -13.320907592773438
    7. '```' → logprob: -13.695907592773438
    8. 'b' → logprob: -13.820907592773438
    9. '-break' → logprob: -14.320907592773438
    10. '           ' → logprob: -14.945907592773438

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29209864139556885
    2. '   ' → logprob: -2.0420985221862793
    3. '    
' → logprob: -2.7920985221862793
    4. '```' → logprob: -3.9170985221862793
    5. '\n' → logprob: -4.792098522186279
    6. ':' → logprob: -5.042098522186279
    7. '' → logprob: -5.792098522186279
    8. '   
' → logprob: -5.792098522186279
    9. 'n' → logprob: -5.792098522186279
    10. '  
' → logprob: -6.042098522186279

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6089537739753723
    2. 'graph' → logprob: -1.9839537143707275
    3. '    
' → logprob: -2.8589537143707275
    4. 'edges' → logprob: -2.9839537143707275
    5. 'roads' → logprob: -3.6089537143707275
    6. 'dist' → logprob: -3.9839537143707275
    7. '
' → logprob: -4.108953952789307
    8. 'distance' → logprob: -4.108953952789307
    9. 'heap' → logprob: -4.358953952789307
    10. '```' → logprob: -4.733953952789307

Token 51: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -1.042199730873108
    2. 'dist' → logprob: -1.542199730873108
    3. 'roads' → logprob: -2.4171996116638184
    4. '   ' → logprob: -2.7921996116638184
    5. 'edges' → logprob: -2.9171996116638184
    6. 'distance' → logprob: -3.7921996116638184
    7. 'nodes' → logprob: -4.042199611663818
    8. '    
' → logprob: -4.417199611663818
    9. 'road' → logprob: -4.667199611663818
    10. 'dp' → logprob: -4.917199611663818

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019945392850786448
    2. '=' → logprob: -6.251994609832764
    3. '[' → logprob: -9.751994132995605
    4. ' ' → logprob: -13.126994132995605
    5. '[]' → logprob: -13.626994132995605
    6. ',' → logprob: -13.751994132995605
    7. ' =[' → logprob: -14.001994132995605
    8. '[:]' → logprob: -14.501994132995605
    9. ' =
' → logprob: -15.001994132995605
    10. ')' → logprob: -15.376994132995605

Token 53: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.8824313879013062
    2. '[' → logprob: -1.6324313879013062
    3. '{}' → logprob: -1.6324313879013062
    4. '{' → logprob: -2.3824315071105957
    5. ' {' → logprob: -3.3824315071105957
    6. ' [' → logprob: -3.8824315071105957
    7. ' {}' → logprob: -3.8824315071105957
    8. '[]' → logprob: -3.8824315071105957
    9. ' []' → logprob: -5.632431507110596
    10. ' defaultdict' → logprob: -6.257431507110596

Token 54: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1372051239013672
    2. ' for' → logprob: -1.3872051239013672
    3. '(N' → logprob: -1.7622051239013672
    4. '(' → logprob: -1.7622051239013672
    5. ']' → logprob: -2.512205123901367
    6. ')' → logprob: -5.762205123901367
    7. ',' → logprob: -7.762205123901367
    8. ' (' → logprob: -7.762205123901367
    9. '()' → logprob: -7.887205123901367
    10. '(M' → logprob: -8.637205123901367

Token 55: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7446855902671814
    2. ' _' → logprob: -0.8696855902671814
    3. ' range' → logprob: -2.744685649871826
    4. ' ' → logprob: -3.369685649871826
    5. ' in' → logprob: -6.244685649871826
    6. ' i' → logprob: -6.244685649871826
    7. '(' → logprob: -6.244685649871826
    8. 'range' → logprob: -6.744685649871826
    9. '(range' → logprob: -8.369685173034668
    10. '_range' → logprob: -9.744685173034668

Token 56: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6453550457954407
    2. ' in' → logprob: -1.145354986190796
    3. 'range' → logprob: -1.895354986190796
    4. '(range' → logprob: -5.270355224609375
    5. ' range' → logprob: -6.395355224609375
    6. 'ange' → logprob: -9.020355224609375
    7. ' ' → logprob: -9.645355224609375
    8. '_' → logprob: -10.270355224609375
    9. '(' → logprob: -10.270355224609375
    10. 'x' → logprob: -10.770355224609375

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16025672852993011
    2. ' range' → logprob: -1.9102567434310913
    3. '(range' → logprob: -10.410256385803223
    4. '	range' → logprob: -13.285256385803223
    5. ' ' → logprob: -15.535256385803223
    6. 'rang' → logprob: -16.03525733947754
    7. ' xrange' → logprob: -16.03525733947754
    8. ' in' → logprob: -16.28525733947754
    9. '   ' → logprob: -16.41025733947754
    10. 'in' → logprob: -16.78525733947754

Token 58: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.754368223482743e-05
    2. '(' → logprob: -9.625067710876465
    3. '(n' → logprob: -14.250067710876465
    4. 'N' → logprob: -14.875067710876465
    5. ' (' → logprob: -15.000067710876465
    6. '((' → logprob: -16.50006675720215
    7. '(M' → logprob: -18.00006675720215
    8. '(
' → logprob: -18.25006675720215
    9. ')(' → logprob: -18.25006675720215
    10. ')' → logprob: -18.62506675720215

Token 59: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.513339445111342e-05
    2. ' )' → logprob: -10.625044822692871
    3. ')' → logprob: -11.375044822692871
    4. '+' → logprob: -12.000044822692871
    5. ')]
' → logprob: -13.250044822692871
    6. ']' → logprob: -14.625044822692871
    7. ')],' → logprob: -16.125045776367188
    8. '   ' → logprob: -16.250045776367188
    9. ')]

' → logprob: -16.250045776367188
    10. ' ' → logprob: -16.250045776367188

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001652796781854704
    2. ' ' → logprob: -8.750164985656738
    3. '2' → logprob: -12.375164985656738
    4. '3' → logprob: -14.750164985656738
    5. '   ' → logprob: -15.000164985656738
    6. '0' → logprob: -15.000164985656738
    7. '  ' → logprob: -15.312664985656738
    8. '```' → logprob: -15.500164985656738
    9. '7' → logprob: -15.625164985656738
    10. ')' → logprob: -15.875164985656738

Token 61: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001079014502465725
    2. ']' → logprob: -7.126079082489014
    3. ')' → logprob: -8.251078605651855
    4. ' )' → logprob: -12.126078605651855
    5. ' ]' → logprob: -12.751078605651855
    6. '   ' → logprob: -12.751078605651855
    7. '])' → logprob: -14.126078605651855
    8. ' ' → logprob: -15.251078605651855
    9. ')],' → logprob: -15.251078605651855
    10. '])]' → logprob: -15.376078605651855

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8578320145606995
    2. '<|end|>' → logprob: -1.8578319549560547
    3. ' for' → logprob: -1.9828319549560547
    4. ' 
' → logprob: -2.3578319549560547
    5. '
' → logprob: -2.6078319549560547
    6. 'for' → logprob: -2.9828319549560547
    7. '    
' → logprob: -3.2328319549560547
    8. '  
' → logprob: -4.482831954956055
    9. ' ' → logprob: -5.357831954956055
    10. '   
' → logprob: -6.732831954956055

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08309032768011093
    2. ' for' → logprob: -2.583090305328369
    3. '   ' → logprob: -6.333090305328369
    4. ' ' → logprob: -6.458090305328369
    5. '	for' → logprob: -8.458090782165527
    6. ' 
' → logprob: -8.458090782165527
    7. '    ' → logprob: -8.708090782165527
    8. '  ' → logprob: -9.833090782165527
    9. '    
' → logprob: -9.833090782165527
    10. '' → logprob: -10.583090782165527

Token 64: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04869251325726509
    2. '_' → logprob: -3.048692464828491
    3. ' ' → logprob: -9.29869270324707
    4. ' i' → logprob: -11.54869270324707
    5. '  ' → logprob: -14.17369270324707
    6. ' ‌' → logprob: -14.29869270324707
    7. ' ' → logprob: -14.42369270324707
    8. ' in' → logprob: -14.42369270324707
    9. ' ▁' → logprob: -14.42369270324707
    10. ' __' → logprob: -15.29869270324707

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04575829207897186
    2. 'in' → logprob: -3.1707582473754883
    3. 'range' → logprob: -6.170758247375488
    4. ' ' → logprob: -8.170758247375488
    5. '_' → logprob: -8.795758247375488
    6. 'n' → logprob: -9.045758247375488
    7. '```' → logprob: -11.295758247375488
    8. 'ach' → logprob: -11.420758247375488
    9. 's' → logprob: -12.045758247375488
    10. 'm' → logprob: -12.045758247375488

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602262556552887
    2. ' range' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.785225868225098
    4. '	range' → logprob: -14.785225868225098
    5. '(range' → logprob: -15.535225868225098
    6. 'rang' → logprob: -15.785225868225098
    7. '  ' → logprob: -16.035226821899414
    8. 'ange' → logprob: -16.035226821899414
    9. 'r' → logprob: -16.785226821899414
    10. ')' → logprob: -17.160226821899414

Token 67: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0006795499939471483
    2. ' (' → logprob: -8.000679969787598
    3. '(' → logprob: -8.375679969787598
    4. ' M' → logprob: -9.125679969787598
    5. 'M' → logprob: -12.375679969787598
    6. '   ' → logprob: -15.500679969787598
    7. ' ' → logprob: -15.750679969787598
    8. '(m' → logprob: -16.25067901611328
    9. ',' → logprob: -17.50067901611328
    10. '	M' → logprob: -17.62567901611328

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020167864859104156
    2. ' ):' → logprob: -6.502017021179199
    3. ')' → logprob: -7.877017021179199
    4. '):
' → logprob: -9.6270170211792
    5. ':' → logprob: -10.0020170211792
    6. ',' → logprob: -11.6270170211792
    7. '   ' → logprob: -11.7520170211792
    8. ' )' → logprob: -12.6270170211792
    9. '():' → logprob: -13.6270170211792
    10. ']:' → logprob: -14.8770170211792

Token 69: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7658490538597107
    2. '   ' → logprob: -1.1408491134643555
    3. '       ' → logprob: -2.2658491134643555
    4. '    ' → logprob: -2.6408491134643555
    5. ' 
' → logprob: -4.5158491134643555
    6. '  ' → logprob: -4.8908491134643555
    7. ',' → logprob: -5.3908491134643555
    8. '<|end|>' → logprob: -5.5158491134643555
    9. '    
' → logprob: -5.6408491134643555
    10. '        
' → logprob: -6.0158491134643555

Token 70: ' A' (ID: 355)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6934816837310791
    2. 'a' → logprob: -0.9434816837310791
    3. ' u' → logprob: -2.568481683731079
    4. ' a' → logprob: -3.568481683731079
    5. 's' → logprob: -5.9434814453125
    6. 'A' (adapté à ' A') → logprob: -6.5684814453125
    7. 'U' → logprob: -7.3184814453125
    8. ' s' → logprob: -7.8184814453125
    9. 'x' → logprob: -8.3184814453125
    10. ' U' → logprob: -8.4434814453125

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005979158449918032
    2. ' ,' → logprob: -5.130979061126709
    3. ',B' → logprob: -10.130979537963867
    4. ' B' → logprob: -12.130979537963867
    5. '<|end|>' → logprob: -13.630979537963867
    6. ' ' → logprob: -13.755979537963867
    7. ',b' → logprob: -13.755979537963867
    8. 'B' → logprob: -14.505979537963867
    9. '‌,' → logprob: -14.755979537963867
    10. ',
' → logprob: -15.755979537963867

Token 72: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.633061945438385
    2. ' B' → logprob: -0.758061945438385
    3. ' ' → logprob: -7.75806188583374
    4. '  ' → logprob: -10.883062362670898
    5. 'space' → logprob: -11.883062362670898
    6. '<|end|>' → logprob: -12.633062362670898
    7. 'C' → logprob: -13.508062362670898
    8. 'b' → logprob: -13.633062362670898
    9. 'D' → logprob: -13.758062362670898
    10. '_' → logprob: -14.383062362670898

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011268154717981815
    2. '=' → logprob: -4.636268138885498
    3. ' =' → logprob: -7.136268138885498
    4. ' ,' → logprob: -7.261268138885498
    5. ')' → logprob: -12.636268615722656
    6. ' ' → logprob: -12.636268615722656
    7. '<|end|>' → logprob: -12.886268615722656
    8. '   ' → logprob: -13.511268615722656
    9. '  ' → logprob: -14.136268615722656
    10. '    ' → logprob: -14.511268615722656

Token 74: ' D' (ID: 415)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1004566177725792
    2. ' C' → logprob: -2.475456714630127
    3. 'W' → logprob: -5.475456714630127
    4. 'D' → logprob: -5.850456714630127
    5. 'w' → logprob: -6.600456714630127
    6. 'T' → logprob: -6.600456714630127
    7. ' W' → logprob: -7.850456714630127
    8. ' D' → logprob: -8.350456237792969
    9. ' ' → logprob: -8.350456237792969
    10. ' T' → logprob: -8.850456237792969

Token 75: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691484928131104
    2. ' =' → logprob: -1.136914849281311
    3. ' ' → logprob: -10.63691520690918
    4. ',' → logprob: -11.01191520690918
    5. '=int' → logprob: -13.51191520690918
    6. ')' → logprob: -14.63691520690918
    7. '   ' → logprob: -15.26191520690918
    8. '  ' → logprob: -15.26191520690918
    9. '=input' → logprob: -15.76191520690918
    10. '=}' → logprob: -16.01191520690918

Token 76: ' E' (ID: 457)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6284894347190857
    2. 'T' → logprob: -1.1284894943237305
    3. 'H' → logprob: -2.8784894943237305
    4. 'G' → logprob: -3.6284894943237305
    5. 'E' → logprob: -3.6284894943237305
    6. ' C' → logprob: -4.6284894943237305
    7. 'W' → logprob: -5.3784894943237305
    8. ' T' → logprob: -5.6284894943237305
    9. 'F' → logprob: -6.1909894943237305
    10. 'S' → logprob: -6.4409894943237305

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932271122932434
    2. ' =' → logprob: -0.6932271122932434
    3. ',' → logprob: -9.94322681427002
    4. ' ' → logprob: -10.81822681427002
    5. ')' → logprob: -12.06822681427002
    6. '   ' → logprob: -13.81822681427002
    7. '  ' → logprob: -14.19322681427002
    8. '=int' → logprob: -14.19322681427002
    9. ')=' → logprob: -14.81822681427002
    10. 'd' → logprob: -15.19322681427002

Token 78: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.020543988794088364
    2. 'map' → logprob: -3.8955440521240234
    3. '	map' → logprob: -13.520544052124023
    4. ' ' → logprob: -15.145544052124023
    5. ' ' → logprob: -15.770544052124023
    6. ' input' → logprob: -16.645544052124023
    7. ' list' → logprob: -16.770544052124023
    8. 'm' → logprob: -16.895544052124023
    9. '(map' → logprob: -17.020544052124023
    10. '   ' → logprob: -17.020544052124023

Token 79: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010756803676486015
    2. '(' → logprob: -6.876075744628906
    3. '<int' → logprob: -11.126075744628906
    4. '[int' → logprob: -11.876075744628906
    5. ' (' → logprob: -12.001075744628906
    6. '<|end|>' → logprob: -12.501075744628906
    7. '=int' → logprob: -12.626075744628906
    8. '(str' → logprob: -13.376075744628906
    9. '(lambda' → logprob: -13.501075744628906
    10. ']int' → logprob: -13.626075744628906

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07164045423269272
    2. ',input' → logprob: -2.6966404914855957
    3. '(' → logprob: -6.946640491485596
    4. '(input' → logprob: -7.571640491485596
    5. ' ,' → logprob: -8.946640014648438
    6. ',int' → logprob: -10.321640014648438
    7. ')' → logprob: -10.446640014648438
    8. 'input' → logprob: -11.446640014648438
    9. '```' → logprob: -11.946640014648438
    10. '=input' → logprob: -12.446640014648438

Token 81: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407880425453186
    2. ' input' → logprob: -0.9740787744522095
    3. '=input' → logprob: -14.849079132080078
    4. '(input' → logprob: -14.849079132080078
    5. '	input' → logprob: -15.099079132080078
    6. ',input' → logprob: -15.474079132080078
    7. '_input' → logprob: -15.849079132080078
    8. ')' → logprob: -15.849079132080078
    9. '[input' → logprob: -16.224079132080078
    10. '<input' → logprob: -16.474079132080078

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.125006675720215
    3. ' ().' → logprob: -14.250006675720215
    4. '.' → logprob: -15.750006675720215
    5. ')' → logprob: -15.750006675720215
    6. '.split' → logprob: -17.2500057220459
    7. '(' → logprob: -17.7500057220459
    8. '.readline' → logprob: -18.3750057220459
    9. '>().' → logprob: -19.2500057220459
    10. '   ' → logprob: -19.2500057220459

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -16.125
    3. ')' → logprob: -16.75
    4. 'strip' → logprob: -16.875
    5. '(split' → logprob: -17.5
    6. 'spl' → logprob: -18.25
    7. 'plit' → logprob: -18.875
    8. 'rstrip' → logprob: -19.125
    9. '.split' → logprob: -20.625
    10. '())' → logprob: -21.125

Token 84: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006465486716479063
    2. '())' → logprob: -5.256465435028076
    3. '()' → logprob: -6.756465435028076
    4. ' )' → logprob: -10.631465911865234
    5. ')
' → logprob: -11.006465911865234
    6. '))' → logprob: -11.256465911865234
    7. '(' → logprob: -12.256465911865234
    8. '   ' → logprob: -13.256465911865234
    9. ')`' → logprob: -13.256465911865234
    10. '())
' → logprob: -13.756465911865234

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8754268884658813
    2. '
' → logprob: -1.5004268884658813
    3. '   ' → logprob: -1.6254268884658813
    4. '<|end|>' → logprob: -2.500426769256592
    5. ')' → logprob: -3.625426769256592
    6. '    
' → logprob: -3.875426769256592
    7. '        
' → logprob: -4.500426769256592
    8. 'graph' → logprob: -5.500426769256592
    9. ' 
' → logprob: -5.750426769256592
    10. '	graph' → logprob: -5.875426769256592

Token 86: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.33747097849845886
    2. ' graph' → logprob: -1.3374710083007812
    3. '   ' → logprob: -4.212471008300781
    4. '	graph' → logprob: -4.837471008300781
    5. '       ' → logprob: -8.087471008300781
    6. '
' → logprob: -8.087471008300781
    7. '(graph' → logprob: -8.462471008300781
    8. '_graph' → logprob: -10.212471008300781
    9. '```' → logprob: -10.212471008300781
    10. ')' → logprob: -10.462471008300781

Token 87: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -7.44574936106801e-05
    2. '[' → logprob: -9.87507438659668
    3. '[B' → logprob: -11.00007438659668
    4. 'A' → logprob: -13.25007438659668
    5. ' [' → logprob: -13.87507438659668
    6. ')[' → logprob: -13.87507438659668
    7. '[a' → logprob: -14.00007438659668
    8. '```' → logprob: -14.50007438659668
    9. '	A' → logprob: -15.25007438659668
    10. ' A' → logprob: -15.75007438659668

Token 88: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.009472966194152832
    2. ').' → logprob: -4.759472846984863
    3. '.' → logprob: -7.509472846984863
    4. '.append' → logprob: -8.384472846984863
    5. '   ' → logprob: -10.509472846984863
    6. '[' → logprob: -10.759472846984863
    7. ']' → logprob: -10.884472846984863
    8. ' ].' → logprob: -12.259472846984863
    9. ')' → logprob: -12.759472846984863
    10. '}.' → logprob: -12.884472846984863

Token 89: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.650518920039758e-06
    2. '.append' → logprob: -13.500003814697266
    3. 'app' → logprob: -13.625003814697266
    4. ' append' → logprob: -14.250003814697266
    5. 'appen' → logprob: -15.250003814697266
    6. ' ' → logprob: -15.875003814697266
    7. '_append' → logprob: -17.000003814697266
    8. 'Append' → logprob: -17.750003814697266
    9. 'push' → logprob: -18.000003814697266
    10. 'appe' → logprob: -18.250003814697266

Token 90: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019888286478817463
    2. '(B' → logprob: -6.626988887786865
    3. '(' → logprob: -7.376988887786865
    4. '([' → logprob: -10.251988410949707
    5. '(A' → logprob: -13.626988410949707
    6. ' (' → logprob: -15.376988410949707
    7. ' ((' → logprob: -15.626988410949707
    8. '   ' → logprob: -15.751988410949707
    9. '```' → logprob: -16.751989364624023
    10. '[(' → logprob: -17.126989364624023

Token 91: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005929505452513695
    2. ' B' → logprob: -5.130929470062256
    3. ' ' → logprob: -15.505929946899414
    4. '(B' → logprob: -15.755929946899414
    5. '	B' → logprob: -16.005929946899414
    6. '   ' → logprob: -16.255929946899414
    7. '<|end|>' → logprob: -16.255929946899414
    8. ')' → logprob: -16.880929946899414
    9. '(' → logprob: -17.130929946899414
    10. ',' → logprob: -17.755929946899414

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000805341056548059
    2. ' ,' → logprob: -7.125805377960205
    3. ',D' → logprob: -14.875804901123047
    4. ',
' → logprob: -15.625804901123047
    5. '‌,' → logprob: -15.750804901123047
    6. ' ' → logprob: -16.625804901123047
    7. '<|end|>' → logprob: -17.125804901123047
    8. ',

' → logprob: -17.250804901123047
    9. ',d' → logprob: -17.250804901123047
    10. '```' → logprob: -17.750804901123047

Token 93: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.026360448449850082
    2. ' D' → logprob: -3.651360511779785
    3. ' ' → logprob: -10.401360511779785
    4. ')' → logprob: -12.151360511779785
    5. 'E' → logprob: -12.276360511779785
    6. ',' → logprob: -12.651360511779785
    7. '<|end|>' → logprob: -13.026360511779785
    8. ',D' → logprob: -13.151360511779785
    9. '    ' → logprob: -13.713860511779785
    10. ' 
' → logprob: -13.838860511779785

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008058178937062621
    2. ' ,' → logprob: -7.125805854797363
    3. ')' → logprob: -14.625805854797363
    4. '<|end|>' → logprob: -15.250805854797363
    5. ' ' → logprob: -16.000804901123047
    6. '‌,' → logprob: -16.250804901123047
    7. ',D' → logprob: -16.250804901123047
    8. ' )' → logprob: -16.625804901123047
    9. ',E' → logprob: -17.000804901123047
    10. ',
' → logprob: -17.125804901123047

Token 95: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.04301174357533455
    2. ' E' → logprob: -3.1680116653442383
    3. ' ' → logprob: -11.793011665344238
    4. ')' → logprob: -13.793011665344238
    5. '	E' → logprob: -14.168011665344238
    6. ',E' → logprob: -14.480511665344238
    7. '>E' → logprob: -14.668011665344238
    8. '   ' → logprob: -15.105511665344238
    9. '1' → logprob: -15.230511665344238
    10. ' 
' → logprob: -15.293011665344238

Token 96: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010229245526716113
    2. ')' → logprob: -7.001022815704346
    3. '))
' → logprob: -9.876023292541504
    4. ' ))' → logprob: -10.001023292541504
    5. ',' → logprob: -11.376023292541504
    6. ')))' → logprob: -13.876023292541504
    7. '),' → logprob: -14.251023292541504
    8. ' )' → logprob: -14.876023292541504
    9. '))

' → logprob: -15.126023292541504
    10. '));' → logprob: -15.376023292541504

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012426535598933697
    2. '<|end|>' → logprob: -4.762426376342773
    3. '	' → logprob: -6.137426376342773
    4. '   ' → logprob: -7.637426376342773
    5. ')' → logprob: -8.137426376342773
    6. '<|end|>' → logprob: -8.387426376342773
    7. '
' → logprob: -8.887426376342773
    8. '    ' → logprob: -9.262426376342773
    9. ' ' → logprob: -9.512426376342773
    10. '      ' → logprob: -9.512426376342773

Token 98: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.08027439564466476
    2. ' graph' → logprob: -2.5802743434906006
    3. '	graph' → logprob: -6.70527458190918
    4. '       ' → logprob: -9.20527458190918
    5. '   ' → logprob: -10.20527458190918
    6. '(graph' → logprob: -11.33027458190918
    7. '.graph' → logprob: -13.08027458190918
    8. 'Graph' → logprob: -13.45527458190918
    9. ' ' → logprob: -13.83027458190918
    10. '    ' → logprob: -14.08027458190918

Token 99: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -5.967624019831419e-05
    2. '[' → logprob: -9.875060081481934
    3. '[A' → logprob: -12.625060081481934
    4. '[b' → logprob: -13.250060081481934
    5. '```' → logprob: -13.875060081481934
    6. ' [' → logprob: -14.500060081481934
    7. 'B' → logprob: -14.625060081481934
    8. '[
' → logprob: -15.625060081481934
    9. '=B' → logprob: -16.500059127807617
    10. '[D' → logprob: -16.562559127807617

Token 100: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0848589614033699
    2. '.append' → logprob: -3.3348588943481445
    3. '.' → logprob: -3.5848588943481445
    4. '].' → logprob: -4.0848588943481445
    5. '}.' → logprob: -8.084858894348145
    6. ',' → logprob: -8.334858894348145
    7. ')' → logprob: -8.334858894348145
    8. '   ' → logprob: -9.209858894348145
    9. '       ' → logprob: -9.459858894348145
    10. ' ).' → logprob: -9.709858894348145

Token 101: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.625000953674316
    3. 'appen' → logprob: -14.875000953674316
    4. '.append' → logprob: -15.000000953674316
    5. 'app' → logprob: -16.875001907348633
    6. '	append' → logprob: -17.250001907348633
    7. '_append' → logprob: -19.250001907348633
    8. 'Append' → logprob: -20.000001907348633
    9. 'prepend' → logprob: -20.000001907348633
    10. '```' → logprob: -20.375001907348633

Token 102: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005593468667939305
    2. '(A' → logprob: -8.37555980682373
    3. '(' → logprob: -8.50055980682373
    4. ' (' → logprob: -9.12555980682373
    5. '(B' → logprob: -11.62555980682373
    6. ' ((' → logprob: -12.00055980682373
    7. '<|end|>' → logprob: -14.25055980682373
    8. ' ' → logprob: -14.75055980682373
    9. '(
' → logprob: -15.12555980682373
    10. '[(' → logprob: -17.875558853149414

Token 103: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004457535687834024
    2. ' (' → logprob: -5.504457473754883
    3. 'A' → logprob: -8.004457473754883
    4. '(' → logprob: -10.754457473754883
    5. ' A' → logprob: -10.754457473754883
    6. ')' → logprob: -14.629457473754883
    7. ' ' → logprob: -14.879457473754883
    8. '(B' → logprob: -15.129457473754883
    9. '[A' → logprob: -15.504457473754883
    10. ',' → logprob: -15.754457473754883

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001503313542343676
    2. ' ,' → logprob: -6.5015034675598145
    3. ',(' → logprob: -15.126502990722656
    4. '),' → logprob: -15.751502990722656
    5. '`,' → logprob: -15.751502990722656
    6. '(' → logprob: -16.001502990722656
    7. '‌,' → logprob: -16.376502990722656
    8. ',
' → logprob: -16.751502990722656
    9. ' (' → logprob: -17.626502990722656
    10. '   ' → logprob: -17.751502990722656

Token 105: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.20144258439540863
    2. ' D' → logprob: -1.7014425992965698
    3. ' ' → logprob: -11.32644271850586
    4. ' (' → logprob: -12.57644271850586
    5. '(D' → logprob: -12.70144271850586
    6. '(' → logprob: -12.82644271850586
    7. ',' → logprob: -13.20144271850586
    8. ')' → logprob: -13.45144271850586
    9. '<|end|>' → logprob: -13.57644271850586
    10. '	D' → logprob: -14.45144271850586

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001238004770129919
    2. ' ,' → logprob: -9.000123977661133
    3. ')' → logprob: -16.750123977661133
    4. '‌,' → logprob: -16.750123977661133
    5. ',
' → logprob: -17.000123977661133
    6. '<|end|>' → logprob: -17.375123977661133
    7. '`,' → logprob: -17.500123977661133
    8. '   ' → logprob: -17.500123977661133
    9. ' ' → logprob: -17.750123977661133
    10. '),' → logprob: -17.750123977661133

Token 107: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.34847742319107056
    2. 'E' → logprob: -1.2234773635864258
    3. ' ' → logprob: -10.723477363586426
    4. '   ' → logprob: -12.723477363586426
    5. ',' → logprob: -13.348477363586426
    6. '	E' → logprob: -13.473477363586426
    7. '  ' → logprob: -13.973477363586426
    8. ' ' → logprob: -14.098477363586426
    9. ',E' → logprob: -14.098477363586426
    10. ')' → logprob: -14.348477363586426

Token 108: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061983373016119
    2. '))' → logprob: -2.811983346939087
    3. ')
' → logprob: -11.936983108520508
    4. ' )' → logprob: -12.061983108520508
    5. '))
' → logprob: -13.811983108520508
    6. ')))' → logprob: -13.936983108520508
    7. ')}' → logprob: -14.436983108520508
    8. '       ' → logprob: -15.186983108520508
    9. ' ))' → logprob: -15.186983108520508
    10. '   ' → logprob: -15.436983108520508

Token 109: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11311830580234528
    2. 'distance' → logprob: -2.8631184101104736
    3. '
' → logprob: -3.9881184101104736
    4. '   ' → logprob: -4.1131181716918945
    5. 'dp' → logprob: -4.7381181716918945
    6. '    
' → logprob: -6.3631181716918945
    7. 'import' → logprob: -6.7381181716918945
    8. 'def' → logprob: -6.9881181716918945
    9. ' dist' → logprob: -7.4881181716918945
    10. 'cost' → logprob: -7.6131181716918945

Token 110: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21579068899154663
    2. 'dp' → logprob: -2.7157907485961914
    3. 'distance' → logprob: -2.8407907485961914
    4. 'INF' → logprob: -3.3407907485961914
    5. 'def' → logprob: -4.090790748596191
    6. 'import' → logprob: -5.840790748596191
    7. 'cost' → logprob: -5.965790748596191
    8. 'max' → logprob: -6.215790748596191
    9. 'pq' → logprob: -6.965790748596191
    10. 'start' → logprob: -6.965790748596191

Token 111: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.382170170545578
    2. ' dist' → logprob: -2.2571702003479004
    3. 'distance' → logprob: -2.5071702003479004
    4. 'def' → logprob: -3.3821702003479004
    5. 'dp' → logprob: -3.5071702003479004
    6. 'import' → logprob: -3.5071702003479004
    7. '#' → logprob: -4.7571702003479
    8. ' distance' → logprob: -5.2571702003479
    9. 'INF' → logprob: -5.7571702003479
    10. 'for' → logprob: -6.2571702003479

Token 112: '[node' (ID: 67268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05512339994311333
    2. '=' → logprob: -3.1801233291625977
    3. 'ance' → logprob: -4.680123329162598
    4. '1' → logprob: -6.930123329162598
    5. 'ances' → logprob: -7.305123329162598
    6. '[' → logprob: -7.805123329162598
    7. '=[' → logprob: -8.930123329162598
    8. '```' → logprob: -9.430123329162598
    9. ' =[' → logprob: -9.555123329162598
    10. ',' → logprob: -9.805123329162598

Token 113: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03789113834500313
    2. '][' → logprob: -3.662891149520874
    3. 's' → logprob: -5.412890911102295
    4. ',' → logprob: -5.537890911102295
    5. ']=' → logprob: -6.662890911102295
    6. '1' → logprob: -7.662890911102295
    7. ' ]' → logprob: -7.912890911102295
    8. ' =' → logprob: -8.537891387939453
    9. '[' → logprob: -9.037891387939453
    10. '=' → logprob: -9.287891387939453

Token 114: 'budget' (ID: 93338)
  Prédit: 'energy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'energy' → logprob: -0.47594037652015686
    2. 'e' → logprob: -2.600940465927124
    3. 'time' → logprob: -2.725940465927124
    4. 'cost' → logprob: -2.850940465927124
    5. 'fuel' → logprob: -3.475940465927124
    6. 'battery' → logprob: -3.475940465927124
    7. 'used' → logprob: -3.725940465927124
    8. '0' → logprob: -4.475940227508545
    9. 'distance' → logprob: -4.850940227508545
    10. 'fat' → logprob: -5.100940227508545

Token 115: '_used' (ID: 67016)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004653457552194595
    2. ' ]' → logprob: -5.754653453826904
    3. '][' → logprob: -6.629653453826904
    4. ']=' → logprob: -9.004653930664062
    5. ' ][' → logprob: -11.129653930664062
    6. '=' → logprob: -12.629653930664062
    7. ']:' → logprob: -13.254653930664062
    8. '][]' → logprob: -13.379653930664062
    9. ' =' → logprob: -13.754653930664062
    10. '])' → logprob: -13.879653930664062

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008612803183495998
    2. ' ]' → logprob: -5.258612632751465
    3. '][' → logprob: -5.758612632751465
    4. ']=' → logprob: -9.258612632751465
    5. ' ][' → logprob: -9.383612632751465
    6. ' =' → logprob: -11.633612632751465
    7. '=' → logprob: -11.633612632751465
    8. '   ' → logprob: -12.133612632751465
    9. '][]' → logprob: -12.758612632751465
    10. ' ' → logprob: -12.883612632751465

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026486076414585114
    2. '=' → logprob: -3.6514861583709717
    3. '   ' → logprob: -8.77648639678955
    4. ']' → logprob: -12.02648639678955
    5. '[' → logprob: -12.27648639678955
    6. ' =
' → logprob: -12.27648639678955
    7. ')' → logprob: -12.27648639678955
    8. ' ' → logprob: -13.02648639678955
    9. ',' → logprob: -13.27648639678955
    10. '=[]' → logprob: -13.65148639678955

Token 118: ' minimum' (ID: 11085)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3091282844543457
    2. '0' → logprob: -1.5591282844543457
    3. ' (' → logprob: -1.6841282844543457
    4. 'float' → logprob: -2.0591282844543457
    5. '(float' → logprob: -2.4341282844543457
    6. '[' → logprob: -3.0591282844543457
    7. ' float' → logprob: -3.6841282844543457
    8. '(L' → logprob: -4.934128284454346
    9. 'inf' → logprob: -4.934128284454346
    10. ' ' → logprob: -5.059128284454346

Token 119: ' total' (ID: 3609)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6710054874420166
    2. ' distance' → logprob: -1.6710054874420166
    3. 'time' → logprob: -2.4210054874420166
    4. ' time' → logprob: -2.5460054874420166
    5. ' cost' → logprob: -3.0460054874420166
    6. 'cost' → logprob: -3.0460054874420166
    7. '_distance' → logprob: -4.6710052490234375
    8. ' fatigue' → logprob: -4.6710052490234375
    9. ' energy' → logprob: -5.0460052490234375
    10. '_time' → logprob: -5.9210052490234375

Token 120: ' attackers' (ID: 133445)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.07710329443216324
    2. 'energy' → logprob: -3.70210337638855
    3. ' distance' → logprob: -3.95210337638855
    4. 'time' → logprob: -4.702103137969971
    5. 'cost' → logprob: -5.202103137969971
    6. 'D' → logprob: -5.577103137969971
    7. 'delay' → logprob: -6.452103137969971
    8. 'em' → logprob: -6.702103137969971
    9. 'dist' → logprob: -6.702103137969971
    10. ' energy' → logprob: -6.827103137969971

Token 121: ' encountered' (ID: 41065)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5018748044967651
    2. '   ' → logprob: -1.5018748044967651
    3. ' =' → logprob: -2.2518749237060547
    4. '=' → logprob: -3.5018749237060547
    5. '_dist' → logprob: -5.001874923706055
    6. ']' → logprob: -5.126874923706055
    7. '[' → logprob: -5.126874923706055
    8. ' dist' → logprob: -5.501874923706055
    9. '    
' → logprob: -5.751874923706055
    10. '
' → logprob: -5.876874923706055

Token 122: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.564950168132782
    2. 'dist' → logprob: -1.1899502277374268
    3. ' =' → logprob: -3.0649502277374268
    4. '
' → logprob: -3.3149502277374268
    5. ']' → logprob: -4.314949989318848
    6. '=' → logprob: -4.689949989318848
    7. '[' → logprob: -5.189949989318848
    8. ' dist' → logprob: -5.814949989318848
    9. 'dp' → logprob: -6.189949989318848
    10. '    
' → logprob: -6.439949989318848

Token 123: ' reach' (ID: 7627)
  Prédit: ' reach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.2559349834918976
    2. ' continue' → logprob: -3.005934953689575
    3. 'reach' → logprob: -3.380934953689575
    4. 'continue' → logprob: -3.630934953689575
    5. ']' → logprob: -4.005935192108154
    6. '   ' → logprob: -4.005935192108154
    7. ' ' → logprob: -4.130935192108154
    8. ' achieve' → logprob: -4.130935192108154
    9. '    ' → logprob: -5.255935192108154
    10. ')' → logprob: -5.755935192108154

Token 124: ' node' (ID: 4596)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.04493783414363861
    2. 'node' → logprob: -4.044937610626221
    3. '(node' → logprob: -4.294937610626221
    4. ' node' → logprob: -5.169937610626221
    5. 'dist' → logprob: -5.919937610626221
    6. ']' → logprob: -6.044937610626221
    7. '   ' → logprob: -7.419937610626221
    8. '][' → logprob: -8.419938087463379
    9. ' ]' → logprob: -8.419938087463379
    10. ')' → logprob: -8.419938087463379

Token 125: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6511728167533875
    2. '   ' → logprob: -0.7761728167533875
    3. ' dist' → logprob: -5.026172637939453
    4. '
' → logprob: -5.276172637939453
    5. '_dist' → logprob: -6.276172637939453
    6. '	dist' → logprob: -6.276172637939453
    7. '[' → logprob: -7.651172637939453
    8. '    
' → logprob: -7.651172637939453
    9. ']' → logprob: -7.776172637939453
    10. ' ' → logprob: -8.276172637939453

Token 126: ' budget' (ID: 9946)
  Prédit: ' budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' budget' → logprob: -0.6341529488563538
    2. 'budget' → logprob: -0.7591529488563538
    3. ' used' → logprob: -7.884152889251709
    4. ' L' → logprob: -8.134153366088867
    5. '_budget' → logprob: -8.634153366088867
    6. 'used' → logprob: -8.759153366088867
    7. ' current' → logprob: -9.384153366088867
    8. ' a' → logprob: -9.384153366088867
    9. ' the' → logprob: -10.259153366088867
    10. ' ' → logprob: -10.509153366088867

Token 127: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.03388427197933197
    2. ' =' → logprob: -4.283884048461914
    3. '_' → logprob: -5.408884048461914
    4. '[' → logprob: -5.658884048461914
    5. '=' → logprob: -5.783884048461914
    6. ' used' → logprob: -5.908884048461914
    7. '   ' → logprob: -6.158884048461914
    8. 'used' → logprob: -6.283884048461914
    9. ')' → logprob: -8.158884048461914
    10. ' _' → logprob: -8.408884048461914

Token 128: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6919294595718384
    2. 'dist' → logprob: -0.8169294595718384
    3. '
' → logprob: -2.941929340362549
    4. '    
' → logprob: -6.441929340362549
    5. '	dist' → logprob: -6.816929340362549
    6. '_dist' → logprob: -6.941929340362549
    7. ' dist' → logprob: -7.066929340362549
    8. '  
' → logprob: -9.941929817199707
    9. ' 
' → logprob: -10.191929817199707
    10. '   
' → logprob: -10.316929817199707

Token 129: ' guards' (ID: 59641)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.782874345779419
    2. 'bomb' → logprob: -2.157874345779419
    3. ' L' → logprob: -2.532874345779419
    4. 'budget' → logprob: -3.032874345779419
    5. ' explosives' → logprob: -3.032874345779419
    6. ' bombs' → logprob: -3.657874345779419
    7. 'l' → logprob: -4.03287410736084
    8. 'time' → logprob: -4.28287410736084
    9. ' bomb' → logprob: -4.40787410736084
    10. 'cost' → logprob: -4.40787410736084

Token 130: ' hiring' (ID: 29907)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2269905060529709
    2. '
' → logprob: -2.3519904613494873
    3. 'dist' → logprob: -2.3519904613494873
    4. '    
' → logprob: -5.476990699768066
    5. '_dist' → logprob: -5.851990699768066
    6. ' dist' → logprob: -5.976990699768066
    7. '	dist' → logprob: -6.101990699768066
    8. ' 
' → logprob: -8.726990699768066
    9. '  
' → logprob: -8.851990699768066
    10. '   
' → logprob: -9.226990699768066

Token 131: ' cost' (ID: 3097)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9191450476646423
    2. '   ' → logprob: -1.169145107269287
    3. 'dist' → logprob: -1.294145107269287
    4. '    
' → logprob: -5.294145107269287
    5. ' dist' → logprob: -5.544145107269287
    6. '_dist' → logprob: -5.794145107269287
    7. '	dist' → logprob: -6.294145107269287
    8. '  
' → logprob: -6.919145107269287
    9. ' 
' → logprob: -7.919145107269287
    10. '   
' → logprob: -8.544144630432129

Token 132: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3980802893638611
    2. '
' → logprob: -1.3980803489685059
    3. 'dist' → logprob: -2.648080348968506
    4. '    
' → logprob: -5.023080348968506
    5. ' dist' → logprob: -6.898080348968506
    6. '	dist' → logprob: -6.898080348968506
    7. '_dist' → logprob: -7.273080348968506
    8. '  
' → logprob: -8.023079872131348
    9. '   
' → logprob: -8.648079872131348
    10. ' 
' → logprob: -9.148079872131348

Token 133: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07722799479961395
    2. '   ' → logprob: -2.70222806930542
    3. ' dist' → logprob: -4.95222806930542
    4. '	dist' → logprob: -8.827227592468262
    5. 'distance' → logprob: -11.327227592468262
    6. '    
' → logprob: -11.577227592468262
    7. '
' → logprob: -11.827227592468262
    8. '_dist' → logprob: -12.202227592468262
    9. 'd' → logprob: -13.077227592468262
    10. 'Dist' → logprob: -13.202227592468262

Token 134: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004967942950315773
    2. ' dist' → logprob: -7.625496864318848
    3. '   ' → logprob: -11.750496864318848
    4. '	dist' → logprob: -15.000496864318848
    5. 'import' → logprob: -16.25049591064453
    6. 'distance' → logprob: -16.62549591064453
    7. 'dp' → logprob: -16.75049591064453
    8. 'INF' (adapté à ' INF') → logprob: -17.12549591064453
    9. '
' → logprob: -17.12549591064453
    10. '    
' → logprob: -17.25049591064453

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519403100013733
    2. '=' → logprob: -1.5019402503967285
    3. ')' → logprob: -12.126940727233887
    4. '=int' → logprob: -13.001940727233887
    5. ',' → logprob: -13.251940727233887
    6. ' ' → logprob: -14.751940727233887
    7. ']' → logprob: -15.376940727233887
    8. ' ' → logprob: -15.626940727233887
    9. '=float' → logprob: -15.626940727233887
    10. ' =
' → logprob: -15.751940727233887

Token 136: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7997216582298279
    2. 'float' → logprob: -0.7997216582298279
    3. 'int' → logprob: -2.2997217178344727
    4. ' float' → logprob: -7.799721717834473
    5. '100' → logprob: -9.049721717834473
    6. '1' → logprob: -9.049721717834473
    7. '987' → logprob: -9.549721717834473
    8. 'sys' → logprob: -10.299721717834473
    9. ' ' → logprob: -10.424721717834473
    10. ' int' → logprob: -10.924721717834473

Token 137: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.49902960658073425
    2. 'float' → logprob: -1.2490296363830566
    3. 'int' → logprob: -2.2490296363830566
    4. '1' → logprob: -8.249029159545898
    5. '987' → logprob: -8.749029159545898
    6. 'sys' → logprob: -9.249029159545898
    7. '100' → logprob: -9.624029159545898
    8. ' float' → logprob: -11.874029159545898
    9. '123' → logprob: -12.999029159545898
    10. '999' → logprob: -13.624029159545898

Token 138: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0025385632179677486
    2. '10' → logprob: -6.127538681030273
    3. '15' → logprob: -8.877538681030273
    4. '12' → logprob: -9.127538681030273
    5. '18' → logprob: -9.252538681030273
    6. '7' → logprob: -12.877538681030273
    7. '8' → logprob: -13.377538681030273
    8. '13' → logprob: -13.752538681030273
    9. '14' → logprob: -13.877538681030273
    10. '09' → logprob: -14.002538681030273

Token 139: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0021150470711290836
    2. '15' → logprob: -6.377115249633789
    3. '18' → logprob: -8.377115249633789
    4. '10' → logprob: -8.877115249633789
    5. '12' → logprob: -10.752115249633789
    6. '7' → logprob: -11.252115249633789
    7. '14' → logprob: -12.752115249633789
    8. '8' → logprob: -12.877115249633789
    9. '16' → logprob: -13.627115249633789
    10. '13' → logprob: -13.877115249633789

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3605557680130005
    2. 'dist' → logprob: -1.2355557680130005
    3. '    
' → logprob: -5.235555648803711
    4. '   ' → logprob: -5.360555648803711
    5. 'distance' → logprob: -7.860555648803711
    6. ' dist' → logprob: -7.985555648803711
    7. '	dist' → logprob: -8.235555648803711
    8. '
' → logprob: -8.485555648803711
    9. '  
' → logprob: -8.610555648803711
    10. '_dist' → logprob: -8.610555648803711

Token 141: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35378319025039673
    2. '
' → logprob: -1.353783130645752
    3. '   ' → logprob: -3.353783130645752
    4. '    
' → logprob: -5.853783130645752
    5. ' dist' → logprob: -7.228783130645752
    6. '	dist' → logprob: -7.603783130645752
    7. '_dist' → logprob: -9.10378360748291
    8. '
' → logprob: -9.22878360748291
    9. 'dp' → logprob: -9.22878360748291
    10. 'distance' → logprob: -9.47878360748291

Token 142: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -2.2200749754119897e-06
    2. ' dist' → logprob: -13.125001907348633
    3. 'dp' → logprob: -15.750001907348633
    4. 'distance' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'Dist' → logprob: -18.625001907348633
    7. '
' → logprob: -19.125001907348633
    8. '	dist' → logprob: -19.375001907348633
    9. '    
' → logprob: -20.250001907348633
    10. '_dist' → logprob: -20.375001907348633

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869349956512451
    2. '=' → logprob: -1.1369349956512451
    3. '[' → logprob: -10.761935234069824
    4. '=[' → logprob: -10.886935234069824
    5. '=[[' → logprob: -11.386935234069824
    6. ')' → logprob: -12.386935234069824
    7. ']' → logprob: -13.011935234069824
    8. ' =[' → logprob: -13.386935234069824
    9. '<|end|>' → logprob: -13.511935234069824
    10. ',' → logprob: -14.761935234069824

Token 144: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.011150751262903214
    2. ' [[' → logprob: -4.51115083694458
    3. '[' → logprob: -9.261150360107422
    4. ' [' → logprob: -11.761150360107422
    5. '[
' → logprob: -17.136150360107422
    6. '[['' → logprob: -17.136150360107422
    7. '([[' → logprob: -17.761150360107422
    8. ' [[[' → logprob: -18.261150360107422
    9. '   ' → logprob: -18.761150360107422
    10. '[(' → logprob: -19.511150360107422

Token 145: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -6.704273118884885e-07
    2. ' INF' → logprob: -14.500000953674316
    3. '_INF' → logprob: -17.125
    4. 'IN' → logprob: -17.75
    5. '   ' → logprob: -18.25
    6. '-INF' → logprob: -19.0
    7. 'inf' → logprob: -19.25
    8. '10' → logprob: -20.125
    9. '
' → logprob: -20.25
    10. 'Inf' → logprob: -20.25

Token 146: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.133894681930542
    2. ' for' → logprob: -2.133894681930542
    3. 'for' → logprob: -6.133894920349121
    4. ']*(' → logprob: -6.133894920349121
    5. ']*' → logprob: -6.633894920349121
    6. ' ]' → logprob: -7.133894920349121
    7. ')' → logprob: -7.883894920349121
    8. ',' → logprob: -9.883894920349121
    9. ']+' → logprob: -10.633894920349121
    10. ')]' → logprob: -10.758894920349121

Token 147: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005041152238845825
    2. '(L' → logprob: -5.880041122436523
    3. '101' → logprob: -7.005041122436523
    4. ' L' → logprob: -7.755041122436523
    5. '100' → logprob: -7.755041122436523
    6. '501' → logprob: -8.505041122436523
    7. '301' → logprob: -10.255041122436523
    8. '250' → logprob: -10.505041122436523
    9. '201' → logprob: -10.630041122436523
    10. '401' → logprob: -10.630041122436523

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002805110299959779
    2. ' +' → logprob: -5.877805233001709
    3. '+
' → logprob: -16.502805709838867
    4. ')' → logprob: -16.627805709838867
    5. '+)' → logprob: -17.752805709838867
    6. ')+' → logprob: -18.502805709838867
    7. '＋' → logprob: -18.752805709838867
    8. ' +
' → logprob: -19.252805709838867
    9. ' ' → logprob: -19.252805709838867
    10. '+l' → logprob: -19.377805709838867

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.500030517578125
    3. ')' → logprob: -14.000030517578125
    4. '+' → logprob: -14.250030517578125
    5. '   ' → logprob: -14.812530517578125
    6. '```' → logprob: -15.000030517578125
    7. '
' → logprob: -15.687530517578125
    8. '2' → logprob: -16.312530517578125
    9. '۱' → logprob: -16.687530517578125
    10. '１' → logprob: -16.750030517578125

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3596853831550106e-05
    2. ' )' → logprob: -9.875053405761719
    3. ')]' → logprob: -14.250053405761719
    4. ')
' → logprob: -14.750053405761719
    5. '   ' → logprob: -14.750053405761719
    6. ']' → logprob: -15.625053405761719
    7. ' for' → logprob: -15.750053405761719
    8. '))' → logprob: -16.37505340576172
    9. 'for' → logprob: -17.00005340576172
    10. '),' → logprob: -17.12505340576172

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023321297019720078
    2. 'for' → logprob: -3.7733213901519775
    3. ')' → logprob: -9.898321151733398
    4. ']' → logprob: -10.898321151733398
    5. '	for' → logprob: -12.773321151733398
    6. ' ' → logprob: -13.023321151733398
    7. '   ' → logprob: -13.398321151733398
    8. ' ]' → logprob: -15.398321151733398
    9. ' )' → logprob: -16.7733211517334
    10. ' ' → logprob: -17.0233211517334

Token 152: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0004486653197091073
    2. '_' → logprob: -7.750448703765869
    3. ' in' → logprob: -11.125448226928711
    4. ' range' → logprob: -13.375448226928711
    5. ' ' → logprob: -14.000448226928711
    6. ' i' → logprob: -14.125448226928711
    7. ' node' → logprob: -15.875448226928711
    8. '_node' → logprob: -17.00044822692871
    9. '_range' → logprob: -18.25044822692871
    10. '_in' → logprob: -18.50044822692871

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8418680429458618
    2. 'range' → logprob: -1.0918680429458618
    3. 'in' → logprob: -1.8418680429458618
    4. ' range' → logprob: -2.5918679237365723
    5. '_' → logprob: -9.71686840057373
    6. 'i' → logprob: -10.96686840057373
    7. '(range' → logprob: -11.34186840057373
    8. '_range' → logprob: -11.71686840057373
    9. ' _' → logprob: -12.96686840057373
    10. ' ' → logprob: -13.09186840057373

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759463310241699
    2. ' range' → logprob: -0.8259463310241699
    3. '(range' → logprob: -11.950946807861328
    4. '	range' → logprob: -15.325946807861328
    5. '   ' → logprob: -16.450946807861328
    6. ' ' → logprob: -17.450946807861328
    7. '
' → logprob: -18.325946807861328
    8. '[' → logprob: -18.450946807861328
    9. ' xrange' → logprob: -18.700946807861328
    10. '.range' → logprob: -18.825946807861328

Token 155: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.9795445849886164e-05
    2. ' (' → logprob: -10.750060081481934
    3. 'N' → logprob: -11.125060081481934
    4. '(n' → logprob: -11.375060081481934
    5. '(' → logprob: -11.500060081481934
    6. '   ' → logprob: -14.375060081481934
    7. '((' → logprob: -15.250060081481934
    8. ' N' → logprob: -15.625060081481934
    9. ')' → logprob: -15.750060081481934
    10. '(range' → logprob: -15.750060081481934

Token 156: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013500562636181712
    2. ' +' → logprob: -9.00013542175293
    3. '+
' → logprob: -12.00013542175293
    4. ')+' → logprob: -13.62513542175293
    5. ')' → logprob: -13.75013542175293
    6. '+)' → logprob: -14.12513542175293
    7. '<|end|>' → logprob: -14.12513542175293
    8. '1' → logprob: -14.50013542175293
    9. ')]' → logprob: -15.37513542175293
    10. '＋' → logprob: -15.50013542175293

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.375003814697266
    3. ' ' → logprob: -14.250003814697266
    4. ')' → logprob: -14.375003814697266
    5. '2' → logprob: -15.500003814697266
    6. '<|end|>' → logprob: -15.875003814697266
    7. '```' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. '(' → logprob: -17.875003814697266
    10. '[' → logprob: -18.437503814697266

Token 158: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003644376527518034
    2. ')' → logprob: -5.6286444664001465
    3. ']' → logprob: -10.628643989562988
    4. ' )' → logprob: -11.378643989562988
    5. '   ' → logprob: -11.878643989562988
    6. ')])' → logprob: -14.628643989562988
    7. '])' → logprob: -15.253643989562988
    8. ')]
' → logprob: -15.503643989562988
    9. '))' → logprob: -15.628643989562988
    10. ')],' → logprob: -15.878643989562988

Token 159: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0034037132281810045
    2. '   ' → logprob: -6.378403663635254
    3. ' dist' → logprob: -7.253403663635254
    4. '	dist' → logprob: -7.878403663635254
    5. '    
' → logprob: -8.003403663635254
    6. '
' → logprob: -8.253403663635254
    7. '_dist' → logprob: -11.878403663635254
    8. 'Dist' → logprob: -12.628403663635254
    9. '(dist' → logprob: -12.753403663635254
    10. '  
' → logprob: -13.003403663635254

Token 160: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.3902033970225602e-05
    2. ' dist' → logprob: -11.750014305114746
    3. '   ' → logprob: -12.125014305114746
    4. 'import' → logprob: -14.875014305114746
    5. '	dist' → logprob: -15.750014305114746
    6. '```' → logprob: -17.12501335144043
    7. '    
' → logprob: -17.87501335144043
    8. '
' → logprob: -18.12501335144043
    9. '_dist' → logprob: -18.25001335144043
    10. 'from' → logprob: -18.62501335144043

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.125000953674316
    3. '[start' → logprob: -15.500000953674316
    4. '[
' → logprob: -16.375001907348633
    5. '\[' → logprob: -16.750001907348633
    6. ' [' → logprob: -16.875001907348633
    7. '```' → logprob: -17.125001907348633
    8. '][' → logprob: -17.625001907348633
    9. ')[' → logprob: -17.875001907348633
    10. '[s' → logprob: -18.000001907348633

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009814819786697626
    2. '][' → logprob: -7.500981330871582
    3. '0' → logprob: -7.875981330871582
    4. '[' → logprob: -10.250981330871582
    5. ']' → logprob: -11.500981330871582
    6. ')[' → logprob: -14.500981330871582
    7. ' ' → logprob: -14.500981330871582
    8. '(' → logprob: -14.625981330871582
    9. '   ' → logprob: -14.625981330871582
    10. ')' → logprob: -15.250981330871582

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001409401185810566
    2. '[' → logprob: -6.626409530639648
    3. '0' → logprob: -9.876409530639648
    4. ']' → logprob: -10.626409530639648
    5. ' ][' → logprob: -12.001409530639648
    6. '   ' → logprob: -14.876409530639648
    7. ',' → logprob: -15.501409530639648
    8. ''][' → logprob: -15.501409530639648
    9. '```' → logprob: -15.626409530639648
    10. '"][' → logprob: -15.626409530639648

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -17.75
    4. '000' → logprob: -18.4375
    5. '<|end|>' → logprob: -18.75
    6. '   ' → logprob: -18.75
    7. '```' → logprob: -19.125
    8. '1' → logprob: -19.3125
    9. '০' → logprob: -19.5625
    10. '00' → logprob: -19.625

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.584861744660884e-05
    2. ']=' → logprob: -10.625045776367188
    3. ' ]' → logprob: -10.750045776367188
    4. '=' → logprob: -17.250045776367188
    5. ')' → logprob: -19.375045776367188
    6. ']
' → logprob: -19.625045776367188
    7. ' =' → logprob: -19.875045776367188
    8. '`]' → logprob: -20.125045776367188
    9. '']' → logprob: -20.875045776367188
    10. '0' → logprob: -21.125045776367188

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -16.76104736328125
    4. '=int' → logprob: -18.01104736328125
    5. '=}' → logprob: -18.26104736328125
    6. '=
' → logprob: -18.51104736328125
    7. ']=' → logprob: -18.51104736328125
    8. '=

' → logprob: -18.88604736328125
    9. ')=' → logprob: -19.01104736328125
    10. '=True' → logprob: -19.13604736328125

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '০' → logprob: -17.812503814697266
    6. '1' → logprob: -18.125003814697266
    7. '<|end|>' → logprob: -18.312503814697266
    8. '```' → logprob: -18.375003814697266
    9. '०' → logprob: -19.000003814697266
    10. '000' → logprob: -19.187503814697266

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۰' → logprob: -16.875001907348633
    4. '1' → logprob: -17.562501907348633
    5. '০' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.187501907348633
    7. '000' → logprob: -18.625001907348633
    8. '```' → logprob: -18.750001907348633
    9. '(' → logprob: -18.812501907348633
    10. '00' → logprob: -18.875001907348633

Token 169: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037544332444667816
    2. 'pq' → logprob: -3.5375442504882812
    3. 'import' → logprob: -5.287544250488281
    4. 'heap' → logprob: -6.287544250488281
    5. 'queue' → logprob: -8.037544250488281
    6. 'hq' → logprob: -8.287544250488281
    7. '
' → logprob: -9.162544250488281
    8. 'priority' → logprob: -9.787544250488281
    9. '    
' → logprob: -9.912544250488281
    10. ' pq' → logprob: -10.662544250488281

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019568586722016335
    2. 'import' → logprob: -4.76956844329834
    3. 'pq' → logprob: -4.76956844329834
    4. 'heap' → logprob: -6.14456844329834
    5. 'queue' → logprob: -9.26956844329834
    6. '    
' → logprob: -9.51956844329834
    7. 'hq' → logprob: -10.14456844329834
    8. '
' → logprob: -10.64456844329834
    9. 'priority' → logprob: -11.14456844329834
    10. '```' → logprob: -11.76956844329834

Token 171: ' h' (ID: 312)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.8442546129226685
    2. 'heap' → logprob: -1.0942546129226685
    3. 'hq' → logprob: -1.8442546129226685
    4. 'queue' → logprob: -2.844254493713379
    5. 'q' → logprob: -4.594254493713379
    6. 'import' → logprob: -4.844254493713379
    7. '   ' → logprob: -7.469254493713379
    8. 'h' (adapté à ' h') → logprob: -8.219254493713379
    9. 'que' → logprob: -9.344254493713379
    10. '    
' → logprob: -9.719254493713379

Token 172: 'q' (ID: 80)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30087849497795105
    2. 'e' → logprob: -1.9258785247802734
    3. 'q' → logprob: -2.8008785247802734
    4. '=' → logprob: -3.0508785247802734
    5. '=[]' → logprob: -5.675878524780273
    6. ',' → logprob: -6.925878524780273
    7. 'p' → logprob: -7.175878524780273
    8. '   ' → logprob: -7.925878524780273
    9. ' ' → logprob: -8.550878524780273
    10. '=[]
' → logprob: -9.425878524780273

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135409653186798
    2. '=' → logprob: -1.3135409355163574
    3. '=[]' → logprob: -8.188541412353516
    4. 'q' → logprob: -15.313541412353516
    5. ' ' → logprob: -15.438541412353516
    6. '=[]
' → logprob: -15.563541412353516
    7. '.append' → logprob: -15.938541412353516
    8. '=[' → logprob: -15.938541412353516
    9. '.' → logprob: -16.063541412353516
    10. '＝' → logprob: -16.188541412353516

Token 174: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.002550931181758642
    2. ' [(' → logprob: -6.002551078796387
    3. '[]' → logprob: -9.502551078796387
    4. '[]
' → logprob: -14.752551078796387
    5. ' []' → logprob: -15.627551078796387
    6. '[' → logprob: -17.25255012512207
    7. '[((' → logprob: -17.25255012512207
    8. '([(' → logprob: -17.62755012512207
    9. '[],' → logprob: -19.62755012512207
    10. '[[' → logprob: -19.75255012512207

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.37501335144043
    4. '   ' → logprob: -16.00001335144043
    5. ')' → logprob: -17.12501335144043
    6. 'dist' → logprob: -17.50001335144043
    7. '```' → logprob: -18.00001335144043
    8. ',' → logprob: -18.56251335144043
    9. ' (' → logprob: -18.62501335144043
    10. '[' → logprob: -19.06251335144043

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.375032424926758
    3. '0' → logprob: -14.625032424926758
    4. ',
' → logprob: -15.000032424926758
    5. ' ' → logprob: -17.125032424926758
    6. '   ' → logprob: -17.125032424926758
    7. ')' → logprob: -17.375032424926758
    8. '```' → logprob: -17.500032424926758
    9. '
' → logprob: -18.125032424926758
    10. ',int' → logprob: -18.625032424926758

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11338378489017487
    2. '0' → logprob: -2.2383837699890137
    3. ' ' → logprob: -7.488383769989014
    4. '   ' → logprob: -15.050884246826172
    5. ',' → logprob: -15.300884246826172
    6. '  ' → logprob: -15.363384246826172
    7. '[' → logprob: -15.863384246826172
    8. '<|end|>' → logprob: -16.113384246826172
    9. ')' → logprob: -16.238384246826172
    10. '```' → logprob: -16.550884246826172

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630668506026268
    2. '0' → logprob: -3.651306629180908
    3. ' ' → logprob: -12.026307106018066
    4. ',' → logprob: -16.33880615234375
    5. '   ' → logprob: -16.40130615234375
    6. '```' → logprob: -16.52630615234375
    7. ')' → logprob: -16.96380615234375
    8. 'start' → logprob: -17.15130615234375
    9. '100' → logprob: -17.58880615234375
    10. '2' → logprob: -18.08880615234375

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -10.750040054321289
    3. '0' → logprob: -10.875040054321289
    4. ' ' → logprob: -17.00004005432129
    5. '   ' → logprob: -17.00004005432129
    6. ',
' → logprob: -18.62504005432129
    7. '```' → logprob: -20.25004005432129
    8. ')' → logprob: -20.37504005432129
    9. '  ' → logprob: -20.87504005432129
    10. '00' → logprob: -21.37504005432129

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.875009536743164
    4. '<|end|>' → logprob: -20.875009536743164
    5. '۰' → logprob: -21.000009536743164
    6. ')' → logprob: -21.250009536743164
    7. '  ' → logprob: -21.375009536743164
    8. '00' → logprob: -21.875009536743164
    9. '000' → logprob: -22.125009536743164
    10. '    ' → logprob: -22.125009536743164

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -18.625003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '<|end|>' → logprob: -19.750003814697266
    6. '00' → logprob: -20.250003814697266
    7. ')' → logprob: -20.437503814697266
    8. '000' → logprob: -20.437503814697266
    9. '```' → logprob: -20.687503814697266
    10. '০' → logprob: -20.812503814697266

Token 182: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012530720792710781
    2. ')' → logprob: -4.38753080368042
    3. ']' → logprob: -11.637530326843262
    4. ')]
' → logprob: -12.137530326843262
    5. ' )' → logprob: -12.762530326843262
    6. '   ' → logprob: -13.762530326843262
    7. ',' → logprob: -14.262530326843262
    8. ')]

' → logprob: -14.762530326843262
    9. '))' → logprob: -15.012530326843262
    10. ')
' → logprob: -15.012530326843262

Token 183: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15827210247516632
    2. 'while' → logprob: -2.9082720279693604
    3. ')' → logprob: -3.1582720279693604
    4. '
' → logprob: -3.4082720279693604
    5. ' while' → logprob: -4.6582722663879395
    6. '    
' → logprob: -6.0332722663879395
    7. '  
' → logprob: -7.4082722663879395
    8. '\n' → logprob: -7.5332722663879395
    9. '	while' → logprob: -7.5332722663879395
    10. '  ' → logprob: -7.9082722663879395

Token 184: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19396139681339264
    2. '   ' → logprob: -2.3189613819122314
    3. ')' → logprob: -2.9439613819122314
    4. ' while' → logprob: -4.4439616203308105
    5. '
' → logprob: -4.5689616203308105
    6. 'heap' → logprob: -6.8189616203308105
    7. '    
' → logprob: -7.1939616203308105
    8. ')
' → logprob: -7.8189616203308105
    9. ',' → logprob: -8.818961143493652
    10. '	while' → logprob: -9.318961143493652

Token 185: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9320048689842224
    2. '(total' → logprob: -1.5570049285888672
    3. 'attack' → logprob: -1.6820049285888672
    4. 'att' → logprob: -2.557004928588867
    5. '(att' → logprob: -3.432004928588867
    6. '(heap' → logprob: -3.807004928588867
    7. '(cost' → logprob: -3.807004928588867
    8. '(dist' → logprob: -4.557004928588867
    9. '#' → logprob: -4.682004928588867
    10. 'heap' → logprob: -4.682004928588867

Token 186: 'attack' (ID: 43104)
  Prédit: 'attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.06215723976492882
    2. '0' → logprob: -3.437157154083252
    3. 'total' → logprob: -4.187157154083252
    4. 'att' → logprob: -4.812157154083252
    5. 'dist' → logprob: -5.937157154083252
    6. 'cost' → logprob: -6.312157154083252
    7. 'enc' → logprob: -9.93715763092041
    8. 'num' → logprob: -10.18715763092041
    9. 'distance' → logprob: -10.18715763092041
    10. 'current' → logprob: -10.31215763092041

Token 187: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0010567454155534506
    2. ',' → logprob: -7.876056671142578
    3. 'er' → logprob: -8.001056671142578
    4. 's' → logprob: -8.251056671142578
    5. '_count' → logprob: -10.626056671142578
    6. 'count' → logprob: -11.626056671142578
    7. 'ed' → logprob: -11.751056671142578
    8. 'rs' → logprob: -11.876056671142578
    9. ' ers' → logprob: -12.626056671142578
    10. '```' → logprob: -12.751056671142578

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03661388158798218
    2. '_enc' → logprob: -3.411613941192627
    3. ' encountered' → logprob: -6.536613941192627
    4. 'enc' → logprob: -7.786613941192627
    5. ')' → logprob: -8.036613464355469
    6. '_count' → logprob: -8.161613464355469
    7. ' ,' → logprob: -8.286613464355469
    8. 'count' → logprob: -9.536613464355469
    9. '_cost' → logprob: -10.411613464355469
    10. '_cnt' → logprob: -10.911613464355469

Token 189: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0349123515188694
    2. ' node' → logprob: -3.409912347793579
    3. 'current' → logprob: -7.034912586212158
    4. '1' → logprob: -8.409912109375
    5. ' current' → logprob: -8.784912109375
    6. ')' → logprob: -13.034912109375
    7. ' ' → logprob: -13.284912109375
    8. '0' → logprob: -13.409912109375
    9. '```' → logprob: -14.534912109375
    10. '[node' → logprob: -14.659912109375

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.756989700486884e-05
    2. ' ,' → logprob: -9.50008773803711
    3. ')' → logprob: -11.50008773803711
    4. ',
' → logprob: -13.75008773803711
    5. '<|end|>' → logprob: -14.87508773803711
    6. '```' → logprob: -15.62508773803711
    7. ',)' → logprob: -16.06258773803711
    8. 's' → logprob: -16.18758773803711
    9. ',b' → logprob: -16.75008773803711
    10. '   ' → logprob: -16.87508773803711

Token 191: ' budget' (ID: 9946)
  Prédit: 'budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'budget' → logprob: -0.19872073829174042
    2. 'guards' → logprob: -2.448720693588257
    3. 'cost' → logprob: -2.823720693588257
    4. ' budget' → logprob: -3.698720693588257
    5. ' cost' → logprob: -5.698720932006836
    6. 'guard' → logprob: -6.073720932006836
    7. 'used' → logprob: -6.323720932006836
    8. ' guards' → logprob: -6.823720932006836
    9. 'gu' → logprob: -8.323720932006836
    10. 'bud' → logprob: -8.698720932006836

Token 192: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.04162853583693504
    2. ')' → logprob: -3.29162859916687
    3. 'used' → logprob: -5.666628360748291
    4. ' used' → logprob: -10.16662883758545
    5. ')_' → logprob: -10.54162883758545
    6. '_usage' → logprob: -11.54162883758545
    7. ' )' → logprob: -11.79162883758545
    8. '_' → logprob: -11.79162883758545
    9. 'Used' → logprob: -12.04162883758545
    10. '_USED' → logprob: -12.16662883758545

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -14.00000286102295
    3. ')]' → logprob: -14.37500286102295
    4. ')
' → logprob: -14.50000286102295
    5. '))' → logprob: -15.12500286102295
    6. ']' → logprob: -15.50000286102295
    7. '   ' → logprob: -17.125001907348633
    8. '),' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.000001907348633
    10. ')
' → logprob: -18.000001907348633

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4691511392593384
    2. 'while' → logprob: -1.4691511392593384
    3. ')' → logprob: -2.094151020050049
    4. ' while' → logprob: -4.344151020050049
    5. '	while' → logprob: -5.844151020050049
    6. '
' → logprob: -6.344151020050049
    7. ',' → logprob: -6.844151020050049
    8. '<|end|>' → logprob: -7.594151020050049
    9. '```' → logprob: -7.719151020050049
    10. '    
' → logprob: -8.094151496887207

Token 195: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005363248288631439
    2. '   ' → logprob: -5.255363464355469
    3. ' while' → logprob: -9.005363464355469
    4. '	while' → logprob: -12.505363464355469
    5. '    
' → logprob: -13.380363464355469
    6. '
' → logprob: -14.130363464355469
    7. 'heap' → logprob: -14.630363464355469
    8. 'While' → logprob: -15.630363464355469
    9. ')' → logprob: -16.75536346435547
    10. '  ' → logprob: -17.63036346435547

Token 196: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.38701239228248596
    2. ' h' → logprob: -1.1370123624801636
    3. '	h' → logprob: -9.637012481689453
    4. '(h' → logprob: -9.887012481689453
    5. '   ' → logprob: -11.012012481689453
    6. 'h' → logprob: -12.512012481689453
    7. ' ' → logprob: -13.512012481689453
    8. '[h' → logprob: -13.887012481689453
    9. '<h' → logprob: -14.512012481689453
    10. ' ' → logprob: -14.637012481689453

Token 197: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.7697225252486533e-06
    2. 'Q' → logprob: -14.375003814697266
    3. '[' → logprob: -14.625003814697266
    4. '
' → logprob: -15.312503814697266
    5. ' q' → logprob: -15.375003814697266
    6. '	q' → logprob: -15.687503814697266
    7. '   ' → logprob: -15.750003814697266
    8. 'qs' → logprob: -15.937503814697266
    9. '(q' → logprob: -16.125003814697266
    10. 'qh' → logprob: -16.125003814697266

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49086153507232666
    2. ':
' → logprob: -0.9908615350723267
    3. ' and' → logprob: -4.615861415863037
    4. 'and' → logprob: -5.365861415863037
    5. '):
' → logprob: -6.865861415863037
    6. '):' → logprob: -8.115861892700195
    7. '[' → logprob: -8.240861892700195
    8. ',' → logprob: -8.615861892700195
    9. '   ' → logprob: -9.240861892700195
    10. ':
' → logprob: -9.740861892700195

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22631824016571045
    2. ',' → logprob: -1.6013182401657104
    3. ' ,' → logprob: -8.476318359375
    4. '   ' → logprob: -8.851318359375
    5. ',
' → logprob: -8.976318359375
    6. '0' → logprob: -9.351318359375
    7. ')' → logprob: -10.101318359375
    8. '     ' → logprob: -10.226318359375
    9. '):
' → logprob: -10.476318359375
    10. '        
' → logprob: -10.601318359375

Token 200: ' att' (ID: 1927)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.019284477457404137
    2. 'att' (adapté à ' att') → logprob: -4.644284248352051
    3. 'a' → logprob: -5.144284248352051
    4. '   ' → logprob: -6.144284248352051
    5. 'atk' → logprob: -6.894284248352051
    6. ' attackers' → logprob: -9.01928424835205
    7. ' attack' → logprob: -9.39428424835205
    8. '    
' → logprob: -9.89428424835205
    9. 'cur' → logprob: -10.14428424835205
    10. 'curr' → logprob: -10.39428424835205

Token 201: ',' (ID: 11)
  Prédit: 'ackers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ackers' → logprob: -0.00952810700982809
    2. ',' → logprob: -5.009528160095215
    3. 'acks' → logprob: -6.759528160095215
    4. 'ack' → logprob: -7.134528160095215
    5. 'acker' → logprob: -7.259528160095215
    6. 'acked' → logprob: -9.009528160095215
    7. '       ' → logprob: -11.259528160095215
    8. 'acking' → logprob: -12.509528160095215
    9. '   ' → logprob: -12.634528160095215
    10. ' ,' → logprob: -13.634528160095215

Token 202: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.22900310158729553
    2. 'u' → logprob: -1.7290030717849731
    3. ' node' → logprob: -3.7290031909942627
    4. ' u' → logprob: -5.979002952575684
    5. 'cur' → logprob: -8.229002952575684
    6. 'v' → logprob: -8.229002952575684
    7. 'now' → logprob: -10.229002952575684
    8. '   ' → logprob: -10.729002952575684
    9. 'curr' → logprob: -10.729002952575684
    10. 'pos' → logprob: -11.104002952575684

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2471589798224159e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',node' → logprob: -15.625012397766113
    4. '   ' → logprob: -15.750012397766113
    5. ',
' → logprob: -15.875012397766113
    6. '=' → logprob: -16.37501335144043
    7. '_,' → logprob: -16.50001335144043
    8. ',user' → logprob: -17.00001335144043
    9. ',n' → logprob: -17.12501335144043
    10. ')' → logprob: -17.37501335144043

Token 204: ' cost' (ID: 3097)
  Prédit: 'budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'budget' → logprob: -0.3715430200099945
    2. 'cost' → logprob: -1.371543049812317
    3. 'bud' → logprob: -3.4965429306030273
    4. 'b' → logprob: -4.746542930603027
    5. 'used' → logprob: -4.871542930603027
    6. ' budget' → logprob: -5.246542930603027
    7. ' cost' → logprob: -6.246542930603027
    8. 'bg' → logprob: -7.621542930603027
    9. 'bu' → logprob: -7.871542930603027
    10. 'guard' → logprob: -8.121542930603027

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694060802459717
    2. ' =' → logprob: -2.1269407272338867
    3. ')' → logprob: -11.501940727233887
    4. ')=' → logprob: -13.626940727233887
    5. '   ' → logprob: -14.126940727233887
    6. ']' → logprob: -15.751940727233887
    7. ']=' → logprob: -16.37693977355957
    8. ',' → logprob: -16.62693977355957
    9. '＝' → logprob: -16.87693977355957
    10. ' ' → logprob: -17.00193977355957

Token 206: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5759624242782593
    2. 'heap' → logprob: -0.8259624242782593
    3. 'he' → logprob: -11.20096206665039
    4. ' he' → logprob: -12.70096206665039
    5. 'import' → logprob: -13.07596206665039
    6. '(heap' → logprob: -13.07596206665039
    7. '   ' → logprob: -14.45096206665039
    8. ' ' → logprob: -14.45096206665039
    9. '_heap' → logprob: -14.70096206665039
    10. '.heap' → logprob: -14.70096206665039

Token 207: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. 'p' → logprob: -15.125000953674316
    3. 'h' → logprob: -16.25
    4. '```' → logprob: -16.25
    5. '[' → logprob: -16.625
    6. '
' → logprob: -16.75
    7. 'app' → logprob: -17.0
    8. ')' → logprob: -17.25
    9. '	q' → logprob: -17.5
    10. '   ' → logprob: -17.875

Token 208: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.0484450437361374e-05
    2. '.' → logprob: -10.375040054321289
    3. '.heap' → logprob: -12.000040054321289
    4. 'q' → logprob: -13.375040054321289
    5. ' he' → logprob: -14.500040054321289
    6. 'he' → logprob: -14.500040054321289
    7. '.q' → logprob: -15.750040054321289
    8. ' .' → logprob: -15.750040054321289
    9. '   ' → logprob: -17.00004005432129
    10. '```' → logprob: -17.25004005432129

Token 209: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.2664456789934775e-06
    2. 'ap' → logprob: -13.750000953674316
    3. 'pp' → logprob: -16.000001907348633
    4. ' app' → logprob: -18.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. 'appe' → logprob: -19.375001907348633
    7. '(app' → logprob: -19.500001907348633
    8. '[' → logprob: -19.625001907348633
    9. 'a' → logprob: -19.875001907348633
    10. 'appen' → logprob: -20.125001907348633

Token 210: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7416277527809143
    2. 'ush' → logprob: -0.9916277527809143
    3. 'le' → logprob: -1.9916276931762695
    4. 'uf' → logprob: -5.6166276931762695
    5. 'q' → logprob: -5.7416276931762695
    6. 'p' → logprob: -5.9916276931762695
    7. 'ap' → logprob: -6.4916276931762695
    8. 'ort' → logprob: -6.9916276931762695
    9. 'app' → logprob: -7.3666276931762695
    10. 'nd' → logprob: -7.4916276931762695

Token 211: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.625005722045898
    3. 'h' → logprob: -13.750005722045898
    4. '(q' → logprob: -14.500005722045898
    5. ',h' → logprob: -15.250005722045898
    6. '(heap' → logprob: -16.1250057220459
    7. ' (' → logprob: -16.3750057220459
    8. ' h' → logprob: -16.6250057220459
    9. ')' → logprob: -17.8750057220459
    10. '```' → logprob: -18.1250057220459

Token 212: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.41866585687967e-06
    2. ')' → logprob: -11.750008583068848
    3. '[' → logprob: -16.12500762939453
    4. 'c' → logprob: -16.87500762939453
    5. 'Q' → logprob: -17.00000762939453
    6. 'p' → logprob: -17.12500762939453
    7. ',' → logprob: -17.12500762939453
    8. 'qh' → logprob: -17.25000762939453
    9. '])' → logprob: -17.75000762939453
    10. 'queue' → logprob: -17.75000762939453

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001930301426909864
    2. ')
' → logprob: -6.251930236816406
    3. ')
' → logprob: -13.751930236816406
    4. ')

' → logprob: -15.501930236816406
    5. ' )' → logprob: -15.501930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '       ' → logprob: -16.501930236816406
    8. '),' → logprob: -17.876930236816406
    9. ')`' → logprob: -18.126930236816406
    10. ').' → logprob: -18.626930236816406

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002963792532682419
    2. '<|end|>' → logprob: -6.377964019775391
    3. '        
' → logprob: -7.877964019775391
    4. 'if' → logprob: -8.25296401977539
    5. ')' → logprob: -8.37796401977539
    6. '
' → logprob: -8.50296401977539
    7. ' if' → logprob: -9.25296401977539
    8. '   ' → logprob: -10.50296401977539
    9. '  
' → logprob: -11.25296401977539
    10. ' 
' → logprob: -11.37796401977539

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028244847431778908
    2. '       ' → logprob: -3.778244733810425
    3. ' if' → logprob: -5.528244972229004
    4. '   ' → logprob: -7.028244972229004
    5. '
' → logprob: -9.028244972229004
    6. '        
' → logprob: -12.153244972229004
    7. '    
' → logprob: -14.028244972229004
    8. '	if' → logprob: -14.403244972229004
    9. ' 
' → logprob: -15.778244972229004
    10. '    ' → logprob: -15.903244972229004

Token 216: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.031191732734441757
    2. ' dist' → logprob: -3.656191825866699
    3. 'att' → logprob: -5.406191825866699
    4. 'node' → logprob: -8.1561918258667
    5. ' att' → logprob: -10.1561918258667
    6. '   ' → logprob: -10.6561918258667
    7. '	dist' → logprob: -10.7811918258667
    8. ' node' → logprob: -11.2811918258667
    9. ' ' → logprob: -13.0311918258667
    10. '  ' → logprob: -14.0311918258667

Token 217: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. 'node' → logprob: -16.125
    4. '][' → logprob: -16.125
    5. '```' → logprob: -18.625
    6. '=node' → logprob: -18.75
    7. '(node' → logprob: -18.875
    8. '[token' → logprob: -19.0
    9. '	node' → logprob: -19.0
    10. '[user' → logprob: -19.0

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0046860878355801105
    2. '[c' → logprob: -5.379685878753662
    3. '[' → logprob: -10.12968635559082
    4. ']' → logprob: -10.75468635559082
    5. ' ][' → logprob: -13.12968635559082
    6. ')[' → logprob: -14.62968635559082
    7. 'cost' → logprob: -14.75468635559082
    8. '"][' → logprob: -15.12968635559082
    9. '   ' → logprob: -15.37968635559082
    10. '[cur' → logprob: -15.50468635559082

Token 219: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.7610454708337784e-05
    2. ' cost' → logprob: -10.500027656555176
    3. '(cost' → logprob: -18.62502670288086
    4. '_cost' → logprob: -21.12502670288086
    5. '.cost' → logprob: -22.37502670288086
    6. '-cost' → logprob: -22.50002670288086
    7. 'Cost' → logprob: -22.62502670288086
    8. 'cos' → logprob: -22.75002670288086
    9. '   ' → logprob: -23.12502670288086
    10. '
' → logprob: -24.00002670288086

Token 220: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5674152970314026
    2. ']' → logprob: -1.0674152374267578
    3. ']<' → logprob: -2.442415237426758
    4. ']!=' → logprob: -6.442415237426758
    5. ' <' → logprob: -8.442415237426758
    6. '!=' → logprob: -9.067415237426758
    7. '<n' → logprob: -10.567415237426758
    8. '<m' → logprob: -10.567415237426758
    9. '<int' → logprob: -10.817415237426758
    10. '<c' → logprob: -10.817415237426758

Token 221: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0014792676083743572
    2. ' <' → logprob: -6.626479148864746
    3. '<int' → logprob: -10.251479148864746
    4. '<n' → logprob: -10.751479148864746
    5. '<c' → logprob: -10.751479148864746
    6. '<v' → logprob: -11.376479148864746
    7. '<i' → logprob: -11.626479148864746
    8. '<m' → logprob: -11.876479148864746
    9. '<len' → logprob: -11.876479148864746
    10. '<ll' → logprob: -12.001479148864746

Token 222: ' att' (ID: 1927)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.0007099286303855479
    2. ' att' → logprob: -7.2507100105285645
    3. '_att' → logprob: -18.125709533691406
    4. ' ' → logprob: -19.000709533691406
    5. '(att' → logprob: -19.000709533691406
    6. '   ' → logprob: -19.625709533691406
    7. 'Att' → logprob: -20.250709533691406
    8. '.att' → logprob: -20.875709533691406
    9. 'atten' → logprob: -21.000709533691406
    10. '  ' → logprob: -21.125709533691406

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026389241218566895
    2. ':
' → logprob: -3.6513891220092773
    3. 'continue' → logprob: -10.026389122009277
    4. '       ' → logprob: -10.901389122009277
    5. ' continue' → logprob: -11.276389122009277
    6. '):' → logprob: -12.276389122009277
    7. ':
' → logprob: -13.026389122009277
    8. '):
' → logprob: -13.276389122009277
    9. '	continue' → logprob: -13.401389122009277
    10. '_continue' → logprob: -14.151389122009277

Token 224: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046848930418491364
    2. '           ' → logprob: -3.671849012374878
    3. ' continue' → logprob: -4.296848773956299
    4. 'continue' → logprob: -5.046848773956299
    5. '	continue' → logprob: -8.296849250793457
    6. '   ' → logprob: -10.921849250793457
    7. '
' → logprob: -11.671849250793457
    8. '_continue' → logprob: -11.796849250793457
    9. '	' → logprob: -12.546849250793457
    10. ' continues' → logprob: -12.796849250793457

Token 225: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.15682058036327362
    2. ' continue' → logprob: -2.40682053565979
    3. '       ' → logprob: -2.90682053565979
    4. '	continue' → logprob: -8.156820297241211
    5. '           ' → logprob: -9.531820297241211
    6. '   ' → logprob: -10.531820297241211
    7. '_continue' → logprob: -12.281820297241211
    8. 'contin' → logprob: -13.656820297241211
    9. 'continu' → logprob: -16.03182029724121
    10. '               ' → logprob: -16.65682029724121

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016766376211307943
    2. '   ' → logprob: -9.500167846679688
    3. '        
' → logprob: -10.500167846679688
    4. ' for' → logprob: -10.625167846679688
    5. 'for' → logprob: -11.250167846679688
    6. ')' → logprob: -11.500167846679688
    7. '<|end|>' → logprob: -12.250167846679688
    8. '	' → logprob: -12.625167846679688
    9. '      ' → logprob: -13.375167846679688
    10. '           ' → logprob: -13.500167846679688

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047988566802814603
    2. '   ' → logprob: -8.250479698181152
    3. ' for' → logprob: -8.625479698181152
    4. 'for' → logprob: -10.500479698181152
    5. '        
' → logprob: -12.625479698181152
    6. '<|end|>' → logprob: -12.875479698181152
    7. '      ' → logprob: -13.750479698181152
    8. '           ' → logprob: -14.000479698181152
    9. '	   ' → logprob: -14.500479698181152
    10. ')' → logprob: -14.625479698181152

Token 228: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4099593162536621
    2. '       ' → logprob: -1.159959316253662
    3. 'for' → logprob: -4.409959316253662
    4. ' if' → logprob: -5.034959316253662
    5. '   ' → logprob: -5.784959316253662
    6. ' for' → logprob: -7.034959316253662
    7. '        
' → logprob: -8.65995979309082
    8. '    
' → logprob: -11.28495979309082
    9. '	if' → logprob: -11.78495979309082
    10. '
' → logprob: -12.15995979309082

Token 229: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.06197149679064751
    2. ' node' → logprob: -2.811971426010132
    3. '   ' → logprob: -13.186971664428711
    4. '	node' → logprob: -14.311971664428711
    5. 'dist' → logprob: -14.561971664428711
    6. ' ' → logprob: -15.186971664428711
    7. '(node' → logprob: -15.311971664428711
    8. '[node' → logprob: -15.686971664428711
    9. '  ' → logprob: -17.12447166442871
    10. ',node' → logprob: -17.37447166442871

Token 230: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16024962067604065
    2. '==' → logprob: -1.9102495908737183
    3. ']==' → logprob: -11.535249710083008
    4. '=' → logprob: -12.160249710083008
    5. ')==' → logprob: -12.535249710083008
    6. ')' → logprob: -12.660249710083008
    7. ' ' → logprob: -14.160249710083008
    8. ']' → logprob: -14.285249710083008
    9. ' ' → logprob: -14.410249710083008
    10. '<|end|>' → logprob: -14.910249710083008

Token 231: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006715728435665369
    2. ' N' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.631715774536133
    4. ' ' → logprob: -15.881715774536133
    5. '    ' → logprob: -17.881715774536133
    6. 'n' → logprob: -18.756715774536133
    7. ' ' → logprob: -19.131715774536133
    8. '  ' → logprob: -19.131715774536133
    9. '	N' → logprob: -19.256715774536133
    10. '<|end|>' → logprob: -21.381715774536133

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09275384247303009
    2. ' and' → logprob: -2.7177538871765137
    3. ':
' → logprob: -3.8427538871765137
    4. 'and' → logprob: -6.967753887176514
    5. '   ' → logprob: -8.967753410339355
    6. '       ' → logprob: -10.717753410339355
    7. ' :' → logprob: -11.092753410339355
    8. ':return' → logprob: -11.967753410339355
    9. ':
' → logprob: -13.092753410339355
    10. ' :
' → logprob: -13.592753410339355

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015867470065131783
    2. 'print' → logprob: -6.7515869140625
    3. '       ' → logprob: -7.8765869140625
    4. ' print' → logprob: -11.0015869140625
    5. '   ' → logprob: -11.7515869140625
    6. '
' → logprob: -12.2515869140625
    7. '               ' → logprob: -12.5015869140625
    8. 'break' → logprob: -13.7515869140625
    9. '            
' → logprob: -13.8765869140625
    10. '        
' → logprob: -14.2515869140625

Token 234: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019977507181465626
    2. '       ' → logprob: -6.251997947692871
    3. ' print' → logprob: -10.001997947692871
    4. '   ' → logprob: -10.876997947692871
    5. '           ' → logprob: -12.251997947692871
    6. '	print' → logprob: -16.626996994018555
    7. '```' → logprob: -16.626996994018555
    8. 'break' → logprob: -17.001996994018555
    9. '
' → logprob: -18.626996994018555
    10. '        
' → logprob: -19.001996994018555

Token 235: '(att' (ID: 104754)
  Prédit: '(att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(att' → logprob: -0.03805629536509514
    2. 'att' → logprob: -3.2880563735961914
    3. ' att' → logprob: -11.413056373596191
    4. '(' → logprob: -12.663056373596191
    5. '(dist' → logprob: -14.538056373596191
    6. '(
' → logprob: -16.663055419921875
    7. '_att' → logprob: -17.538055419921875
    8. 'dist' → logprob: -18.163055419921875
    9. '(acc' → logprob: -18.163055419921875
    10. ' (' → logprob: -18.413055419921875

Token 236: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005241106729954481
    2. ')' → logprob: -5.2552409172058105
    3. ')
' → logprob: -12.630241394042969
    4. '           ' → logprob: -13.255241394042969
    5. '       ' → logprob: -13.380241394042969
    6. ' )
' → logprob: -15.130241394042969
    7. '   ' → logprob: -15.380241394042969
    8. ')`
' → logprob: -16.63024139404297
    9. '               ' → logprob: -17.00524139404297
    10. ')

' → logprob: -17.38024139404297

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023727134976070374
    2. '       ' → logprob: -8.375237464904785
    3. '		' → logprob: -12.375237464904785
    4. '   ' → logprob: -13.375237464904785
    5. '               ' → logprob: -14.875237464904785
    6. '          ' → logprob: -16.00023651123047
    7. '
' → logprob: -16.37523651123047
    8. '	       ' → logprob: -16.50023651123047
    9. '	   ' → logprob: -16.62523651123047
    10. '        
' → logprob: -17.25023651123047

Token 238: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0669085904955864
    2. '           ' → logprob: -2.816908597946167
    3. ' break' → logprob: -5.316908359527588
    4. '       ' → logprob: -10.941908836364746
    5. '	break' → logprob: -13.066908836364746
    6. '   ' → logprob: -13.941908836364746
    7. '               ' → logprob: -16.19190788269043
    8. '		' → logprob: -17.56690788269043
    9. 'continue' → logprob: -17.69190788269043
    10. '```' → logprob: -17.81690788269043

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007104054093360901
    2. '   ' → logprob: -7.375710487365723
    3. 'for' → logprob: -9.500710487365723
    4. ' for' → logprob: -12.375710487365723
    5. '        
' → logprob: -13.625710487365723
    6. '     ' → logprob: -14.125710487365723
    7. '           ' → logprob: -14.625710487365723
    8. '	   ' → logprob: -15.125710487365723
    9. '      ' → logprob: -15.125710487365723
    10. 'else' → logprob: -15.250710487365723

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005408542230725288
    2. '   ' → logprob: -5.255408763885498
    3. 'for' → logprob: -8.75540828704834
    4. ' for' → logprob: -12.00540828704834
    5. '        
' → logprob: -12.75540828704834
    6. '	   ' → logprob: -13.63040828704834
    7. '           ' → logprob: -13.75540828704834
    8. '    
' → logprob: -14.00540828704834
    9. '```' → logprob: -14.00540828704834
    10. '     ' → logprob: -14.13040828704834

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00026169343618676066
    2. '       ' → logprob: -8.750261306762695
    3. ' for' → logprob: -9.250261306762695
    4. '   ' → logprob: -11.875261306762695
    5. '	for' → logprob: -16.375261306762695
    6. '        
' → logprob: -17.125261306762695
    7. 'else' → logprob: -18.375261306762695
    8. '    
' → logprob: -19.750261306762695
    9. ' ' → logprob: -21.125261306762695
    10. '```' → logprob: -21.750261306762695

Token 242: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.24993924796581268
    2. ' nxt' → logprob: -1.999939203262329
    3. 'to' → logprob: -3.249939203262329
    4. 'neighbor' → logprob: -3.624939203262329
    5. 'n' → logprob: -4.874939441680908
    6. '(next' → logprob: -4.999939441680908
    7. ' next' → logprob: -6.124939441680908
    8. 'v' → logprob: -6.124939441680908
    9. '(n' → logprob: -8.24993896484375
    10. '   ' → logprob: -8.37493896484375

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002113977912813425
    2. ',n' → logprob: -7.1271138191223145
    3. ',node' → logprob: -7.3771138191223145
    4. ' ,' → logprob: -7.5021138191223145
    5. 'n' → logprob: -10.002114295959473
    6. ',next' → logprob: -10.127114295959473
    7. 'node' → logprob: -10.877114295959473
    8. ' in' → logprob: -11.627114295959473
    9. '_,' → logprob: -12.502114295959473
    10. 'in' → logprob: -12.627114295959473

Token 244: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06154261529445648
    2. 'D' → logprob: -2.936542510986328
    3. 'dist' → logprob: -5.561542510986328
    4. 'distance' → logprob: -6.686542510986328
    5. 'length' → logprob: -7.061542510986328
    6. ' d' → logprob: -8.186542510986328
    7. 'cost' → logprob: -9.436542510986328
    8. 'dd' → logprob: -9.811542510986328
    9. '   ' → logprob: -10.061542510986328
    10. 'nd' → logprob: -10.186542510986328

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024898070842027664
    2. ' ,' → logprob: -6.002490043640137
    3. ',e' → logprob: -12.252490043640137
    4. ',d' → logprob: -12.377490043640137
    5. '_,' → logprob: -13.127490043640137
    6. ',E' → logprob: -14.002490043640137
    7. ' in' → logprob: -14.627490043640137
    8. 'e' → logprob: -15.127490043640137
    9. 'd' → logprob: -15.127490043640137
    10. 's' → logprob: -15.877490043640137

Token 246: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00020592445798683912
    2. ' e' → logprob: -8.500205993652344
    3. 'c' → logprob: -13.500205993652344
    4. 'E' → logprob: -14.875205993652344
    5. ' ' → logprob: -15.500205993652344
    6. '	e' → logprob: -15.875205993652344
    7. 'ee' → logprob: -16.125205993652344
    8. '   ' → logprob: -16.750205993652344
    9. 'p' → logprob: -17.500205993652344
    10. '    
' → logprob: -17.875205993652344

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013265528250485659
    2. 'in' → logprob: -6.626326560974121
    3. ' ' → logprob: -14.626326560974121
    4. '   ' → logprob: -17.001325607299805
    5. '  ' → logprob: -17.376325607299805
    6. 's' → logprob: -17.501325607299805
    7. ',' → logprob: -17.626325607299805
    8. '	in' → logprob: -17.876325607299805
    9. 'n' → logprob: -18.001325607299805
    10. 'inthe' → logprob: -18.126325607299805

Token 248: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0009118211455643177
    2. ' graph' → logprob: -7.000911712646484
    3. '	graph' → logprob: -15.500911712646484
    4. '(graph' → logprob: -16.125911712646484
    5. '_graph' → logprob: -18.375911712646484
    6. '.graph' → logprob: -18.750911712646484
    7. ' ' → logprob: -19.625911712646484
    8. '
' → logprob: -20.000911712646484
    9. 'graphql' → logprob: -20.250911712646484
    10. '```' → logprob: -20.250911712646484

Token 249: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.704273118884885e-07
    2. 'node' → logprob: -15.000000953674316
    3. '(node' → logprob: -15.875000953674316
    4. '[' → logprob: -16.625
    5. ' [' → logprob: -18.75
    6. '[n' → logprob: -18.875
    7. '[
' → logprob: -19.625
    8. ' node' → logprob: -19.875
    9. '[N' → logprob: -19.875
    10. ',node' → logprob: -19.875

Token 250: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8180685639381409
    2. ']:' → logprob: -0.8180685639381409
    3. '):
' → logprob: -2.693068504333496
    4. ']:
' → logprob: -3.443068504333496
    5. ':' → logprob: -4.193068504333496
    6. '   ' → logprob: -6.943068504333496
    7. '       ' → logprob: -7.068068504333496
    8. ':
' → logprob: -8.443068504333496
    9. ']' → logprob: -8.693068504333496
    10. ' ):' → logprob: -9.068068504333496

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013298108242452145
    2. '       ' → logprob: -4.888298034667969
    3. '
' → logprob: -5.513298034667969
    4. '            
' → logprob: -7.388298034667969
    5. '               ' → logprob: -8.263298034667969
    6. '        
' → logprob: -8.638298034667969
    7. ' if' → logprob: -9.013298034667969
    8. ' 
' → logprob: -9.138298034667969
    9. ' new' → logprob: -9.888298034667969
    10. ',' → logprob: -10.013298034667969

Token 252: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.35126638412475586
    2. ' new' → logprob: -2.101266384124756
    3. 'if' → logprob: -2.601266384124756
    4. 'n' → logprob: -3.476266384124756
    5. 'next' → logprob: -3.601266384124756
    6. 'nc' → logprob: -3.726266384124756
    7. ' if' → logprob: -4.601266384124756
    8. ' next' → logprob: -5.351266384124756
    9. '   ' → logprob: -6.851266384124756
    10. ' n' → logprob: -7.351266384124756

Token 253: ' guard' (ID: 11774)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3589400053024292
    2. 'n' → logprob: -1.9839400053024292
    3. 'if' → logprob: -2.2339401245117188
    4. 'next' → logprob: -3.7339401245117188
    5. 'nc' → logprob: -4.108940124511719
    6. ' new' → logprob: -4.358940124511719
    7. ' if' → logprob: -6.358940124511719
    8. ' n' → logprob: -7.483940124511719
    9. '   ' → logprob: -7.483940124511719
    10. ' next' → logprob: -7.483940124511719

Token 254: ' hired' (ID: 37883)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.04082433879375458
    2. 'cost' → logprob: -3.7908244132995605
    3. '_needed' → logprob: -5.5408244132995605
    4. ' =' → logprob: -5.9158244132995605
    5. '_required' → logprob: -5.9158244132995605
    6. ' cost' → logprob: -6.1658244132995605
    7. '_h' → logprob: -6.4158244132995605
    8. '_budget' → logprob: -6.7908244132995605
    9. '_price' → logprob: -8.290823936462402
    10. 'h' → logprob: -8.415823936462402

Token 255: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31991931796073914
    2. '=' → logprob: -2.4449193477630615
    3. ' =' → logprob: -3.0699193477630615
    4. ' and' → logprob: -3.5699193477630615
    5. ' if' → logprob: -3.6949193477630615
    6. ':' → logprob: -3.8199193477630615
    7. ',' → logprob: -3.9449193477630615
    8. '               ' → logprob: -4.444919109344482
    9. '<|end|>' → logprob: -5.069919109344482
    10. 'and' → logprob: -5.444919109344482

Token 256: ' d' (ID: 272)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.356624573469162
    2. 'cost' → logprob: -1.2316246032714844
    3. ' e' → logprob: -5.606624603271484
    4. 'e' → logprob: -5.606624603271484
    5. 'd' → logprob: -8.106624603271484
    6. ' d' → logprob: -8.231624603271484
    7. '(cost' → logprob: -8.856624603271484
    8. 'c' → logprob: -10.981624603271484
    9. '_cost' → logprob: -11.856624603271484
    10. '           ' → logprob: -12.106624603271484

Token 257: ' <=' (ID: 5017)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8766964673995972
    2. ' +' → logprob: -1.8766964673995972
    3. '<=' → logprob: -2.0016965866088867
    4. '>' → logprob: -2.0016965866088867
    5. ' >' → logprob: -2.6266965866088867
    6. ' <=' → logprob: -2.6266965866088867
    7. '*' → logprob: -5.626696586608887
    8. '<' → logprob: -6.126696586608887
    9. '==' → logprob: -6.251696586608887
    10. '>=' → logprob: -6.251696586608887

Token 258: ' budget' (ID: 9946)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011815877631306648
    2. ' L' → logprob: -4.636816024780273
    3. 'cost' → logprob: -6.761816024780273
    4. 'e' → logprob: -7.261816024780273
    5. ' cost' → logprob: -9.511816024780273
    6. 'd' → logprob: -9.886816024780273
    7. ' e' → logprob: -10.636816024780273
    8. 'l' → logprob: -11.261816024780273
    9. '0' → logprob: -12.011816024780273
    10. ' ' → logprob: -12.261816024780273

Token 259: ' available' (ID: 2839)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012208930216729641
    2. 'and' → logprob: -4.512208938598633
    3. '           ' → logprob: -7.637208938598633
    4. '               ' → logprob: -7.887208938598633
    5. '            ' → logprob: -9.387208938598633
    6. ':' → logprob: -10.012208938598633
    7. ':
' → logprob: -10.262208938598633
    8. '=' → logprob: -11.137208938598633
    9. ' <=' → logprob: -11.137208938598633
    10. '<=' → logprob: -11.387208938598633

Token 260: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003554812166839838
    2. 'and' → logprob: -5.753554821014404
    3. '           ' → logprob: -8.503554344177246
    4. '            ' → logprob: -9.253554344177246
    5. '               ' → logprob: -10.003554344177246
    6. ':' → logprob: -11.753554344177246
    7. ':
' → logprob: -11.878554344177246
    8. '=' → logprob: -11.878554344177246
    9. '                ' → logprob: -13.128554344177246
    10. '                   ' → logprob: -13.628554344177246

Token 261: 'L' (ID: 43)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6614372730255127
    2. 'L' → logprob: -2.2864372730255127
    3. ' cost' → logprob: -2.4114372730255127
    4. ' L' → logprob: -2.4114372730255127
    5. 'and' → logprob: -2.7864372730255127
    6. 'cost' → logprob: -2.7864372730255127
    7. ')' → logprob: -2.9114372730255127
    8. 'd' → logprob: -5.286437034606934
    9. ' d' → logprob: -5.286437034606934
    10. 'e' → logprob: -5.286437034606934

Token 262: '-cost' (ID: 50429)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5122359395027161
    2. '-' → logprob: -1.7622358798980713
    3. ' -' → logprob: -1.8872358798980713
    4. 'and' → logprob: -2.8872358798980713
    5. ')' → logprob: -4.38723611831665
    6. '-cost' → logprob: -4.76223611831665
    7. '),' → logprob: -8.512235641479492
    8. ' ' → logprob: -8.637235641479492
    9. '):' → logprob: -9.012235641479492
    10. ' )' → logprob: -9.137235641479492

Token 263: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4539273977279663
    2. ')' → logprob: -1.2039273977279663
    3. 'and' → logprob: -3.453927516937256
    4. '):' → logprob: -3.703927516937256
    5. '),' → logprob: -5.703927516937256
    6. ' )' → logprob: -5.953927516937256
    7. '):
' → logprob: -6.203927516937256
    8. '           ' → logprob: -9.078927040100098
    9. ' ):' → logprob: -9.203927040100098
    10. '-' → logprob: -9.578927040100098

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3110584020614624
    2. ' and' → logprob: -1.5610584020614624
    3. ' 
' → logprob: -4.311058521270752
    4. '               ' → logprob: -4.561058521270752
    5. '            
' → logprob: -4.936058521270752
    6. '<|end|>' → logprob: -5.061058521270752
    7. ',' → logprob: -5.311058521270752
    8. ' if' → logprob: -6.061058521270752
    9. ')' → logprob: -6.186058521270752
    10. '            ' → logprob: -6.311058521270752

Token 265: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8624463677406311
    2. ' if' → logprob: -0.8624463677406311
    3. 'new' → logprob: -2.8624463081359863
    4. '           ' → logprob: -3.1124463081359863
    5. ' new' → logprob: -3.7374463081359863
    6. 'next' → logprob: -4.112446308135986
    7. ' next' → logprob: -4.987446308135986
    8. 'n' → logprob: -5.862446308135986
    9. 'for' → logprob: -7.362446308135986
    10. 'cost' → logprob: -7.362446308135986

Token 266: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44113636016845703
    2. ' if' → logprob: -1.941136360168457
    3. 'new' → logprob: -2.191136360168457
    4. ' new' → logprob: -3.191136360168457
    5. 'next' → logprob: -3.441136360168457
    6. ' next' → logprob: -4.691136360168457
    7. 'n' → logprob: -4.941136360168457
    8. '           ' → logprob: -5.816136360168457
    9. 'for' → logprob: -5.941136360168457
    10. 'cost' → logprob: -6.566136360168457

Token 267: ' hire' (ID: 19439)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6359831094741821
    2. ' cost' → logprob: -1.6359831094741821
    3. 'd' → logprob: -1.7609831094741821
    4. 'cost' → logprob: -2.7609829902648926
    5. ' e' → logprob: -3.5109829902648926
    6. 'e' → logprob: -4.635982990264893
    7. ' L' → logprob: -8.01098346710205
    8. '(cost' → logprob: -8.63598346710205
    9. 'L' → logprob: -8.76098346710205
    10. '   ' → logprob: -9.01098346710205

Token 268: ' guard' (ID: 11774)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3656701445579529
    2. 'd' → logprob: -1.3656702041625977
    3. ' e' → logprob: -3.3656702041625977
    4. 'e' → logprob: -4.240670204162598
    5. ' cost' → logprob: -7.365670204162598
    6. 'cost' → logprob: -7.990670204162598
    7. '(d' → logprob: -8.490670204162598
    8. ' L' → logprob: -8.740670204162598
    9. ' (' → logprob: -8.865670204162598
    10. ' ' → logprob: -8.990670204162598

Token 269: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0684826597571373
    2. ':' → logprob: -3.9434826374053955
    3. 'and' → logprob: -3.9434826374053955
    4. '=' → logprob: -4.818482875823975
    5. ':
' → logprob: -5.693482875823975
    6. '           ' → logprob: -5.943482875823975
    7. 'd' → logprob: -6.193482875823975
    8. ' =' → logprob: -6.193482875823975
    9. ',' → logprob: -6.318482875823975
    10. '               ' → logprob: -6.443482875823975

Token 270: ' must' (ID: 2804)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10575123131275177
    2. 'if' → logprob: -3.1057512760162354
    3. ' new' → logprob: -3.8557512760162354
    4. '           ' → logprob: -3.9807512760162354
    5. '               ' → logprob: -4.855751037597656
    6. 'new' → logprob: -5.980751037597656
    7. ' for' → logprob: -6.605751037597656
    8. ' next' → logprob: -6.730751037597656
    9. '```' → logprob: -6.855751037597656
    10. 'for' → logprob: -7.605751037597656

Token 271: ' have' (ID: 679)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0615863800048828
    2. 'continue' → logprob: -1.3115863800048828
    3. 'pay' → logprob: -1.4365863800048828
    4. 'e' → logprob: -3.311586380004883
    5. '<=' → logprob: -3.561586380004883
    6. ' continue' → logprob: -3.811586380004883
    7. ' pay' → logprob: -4.686586380004883
    8. 'cost' → logprob: -4.811586380004883
    9. ' hire' → logprob: -5.436586380004883
    10. 'hire' → logprob: -5.436586380004883

Token 272: ' enough' (ID: 4951)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.701037585735321
    2. 'e' → logprob: -1.3260376453399658
    3. ' cost' → logprob: -2.326037645339966
    4. 'd' → logprob: -2.576037645339966
    5. ' e' → logprob: -3.701037645339966
    6. 'L' → logprob: -4.076037406921387
    7. ' d' → logprob: -4.076037406921387
    8. ' L' → logprob: -5.326037406921387
    9. '(cost' → logprob: -7.326037406921387
    10. '   ' → logprob: -9.326037406921387

Token 273: ' budget' (ID: 9946)
  Prédit: 'budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'budget' → logprob: -0.5362340807914734
    2. 'L' → logprob: -1.9112341403961182
    3. ' budget' → logprob: -2.161234140396118
    4. ' L' → logprob: -2.661234140396118
    5. 'cost' → logprob: -3.036234140396118
    6. ' cost' → logprob: -4.411233901977539
    7. 'space' → logprob: -4.786233901977539
    8. ' space' → logprob: -5.536233901977539
    9. ' if' → logprob: -5.786233901977539
    10. 'if' → logprob: -5.911233901977539

Token 274: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03713814541697502
    2. 'and' → logprob: -3.9121382236480713
    3. '           ' → logprob: -4.537137985229492
    4. ' if' → logprob: -6.537137985229492
    5. '               ' → logprob: -6.787137985229492
    6. '=' → logprob: -7.412137985229492
    7. '            ' → logprob: -7.662137985229492
    8. ',' → logprob: -7.787137985229492
    9. ' for' → logprob: -8.037137985229492
    10. '   ' → logprob: -8.537137985229492

Token 275: ' pay' (ID: 2777)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0417811870574951
    2. 'hire' → logprob: -1.5417811870574951
    3. 'pay' → logprob: -1.9167811870574951
    4. ' hire' → logprob: -1.9167811870574951
    5. 'd' → logprob: -2.291781187057495
    6. 'cost' → logprob: -4.291781425476074
    7. ' pay' → logprob: -4.666781425476074
    8. ' d' → logprob: -5.541781425476074
    9. ' e' → logprob: -6.541781425476074
    10. 'cover' → logprob: -6.541781425476074

Token 276: ' d' (ID: 272)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11058421432971954
    2. 'and' → logprob: -2.985584259033203
    3. 'if' → logprob: -3.485584259033203
    4. ' if' → logprob: -3.985584259033203
    5. '           ' → logprob: -6.985584259033203
    6. ' for' → logprob: -7.235584259033203
    7. 'd' → logprob: -7.360584259033203
    8. ',' → logprob: -7.485584259033203
    9. 'for' → logprob: -7.610584259033203
    10. ' d' → logprob: -7.985584259033203

Token 277: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20928022265434265
    2. '           ' → logprob: -1.834280252456665
    3. 'and' → logprob: -4.584280014038086
    4. ':' → logprob: -5.709280014038086
    5. '               ' → logprob: -6.084280014038086
    6. '       ' → logprob: -6.084280014038086
    7. ',' → logprob: -6.209280014038086
    8. ' if' → logprob: -6.209280014038086
    9. '   ' → logprob: -6.334280014038086
    10. ')' → logprob: -6.584280014038086

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45948800444602966
    2. '       ' → logprob: -2.3344879150390625
    3. ',' → logprob: -2.8344879150390625
    4. ' and' → logprob: -3.2094879150390625
    5. ' if' → logprob: -3.5844879150390625
    6. ':' → logprob: -3.7094879150390625
    7. '               ' → logprob: -3.7094879150390625
    8. '   ' → logprob: -3.8344879150390625
    9. '<|end|>' → logprob: -4.4594879150390625
    10. ')' → logprob: -4.7094879150390625

Token 279: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5736311078071594
    2. '<|end|>' → logprob: -1.5736310482025146
    3. '       ' → logprob: -2.6986310482025146
    4. ' if' → logprob: -2.9486310482025146
    5. ' 
' → logprob: -3.3236310482025146
    6. '               ' → logprob: -4.198631286621094
    7. '   ' → logprob: -4.948631286621094
    8. ' ' → logprob: -5.073631286621094
    9. ',' → logprob: -5.323631286621094
    10. '            
' → logprob: -5.448631286621094

Token 280: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3444910943508148
    2. ' cost' → logprob: -1.4694911241531372
    3. 'd' → logprob: -3.3444910049438477
    4. ' d' → logprob: -4.094491004943848
    5. 'e' → logprob: -5.344491004943848
    6. 'L' → logprob: -6.344491004943848
    7. ' L' → logprob: -6.594491004943848
    8. ' e' → logprob: -6.719491004943848
    9. '(cost' → logprob: -8.719491004943848
    10. '   ' → logprob: -9.219491004943848

Token 281: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1429436355829239
    2. '+' → logprob: -2.0179436206817627
    3. '+d' → logprob: -8.267943382263184
    4. ' <=' → logprob: -12.767943382263184
    5. ' +
' → logprob: -13.142943382263184
    6. '<=' → logprob: -13.392943382263184
    7. '+D' → logprob: -13.517943382263184
    8. '+
' → logprob: -14.142943382263184
    9. '＋' → logprob: -14.767943382263184
    10. ' ' → logprob: -14.767943382263184

Token 282: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006054293364286423
    2. ' d' → logprob: -5.131054401397705
    3. 'e' → logprob: -9.256053924560547
    4. ' ' → logprob: -11.756053924560547
    5. '   ' → logprob: -12.131053924560547
    6. '	d' → logprob: -12.131053924560547
    7. ' e' → logprob: -12.756053924560547
    8. '_d' → logprob: -13.568553924560547
    9. 'D' → logprob: -13.756053924560547
    10. ')d' → logprob: -13.943553924560547

Token 283: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018162231892347336
    2. '<=' → logprob: -4.018162250518799
    3. ' >' → logprob: -11.51816177368164
    4. '>' → logprob: -13.51816177368164
    5. ' ' → logprob: -15.26816177368164
    6. ')' → logprob: -15.39316177368164
    7. ')<=' → logprob: -15.39316177368164
    8. ']<=' → logprob: -16.39316177368164
    9. ' ≤' → logprob: -16.51816177368164
    10. '```' → logprob: -17.51816177368164

Token 284: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.020542822778224945
    2. ' L' → logprob: -3.895542860031128
    3. '   ' → logprob: -15.145543098449707
    4. ' ' → logprob: -15.395543098449707
    5. '	L' → logprob: -15.395543098449707
    6. '>L' → logprob: -16.27054214477539
    7. ' ' → logprob: -16.77054214477539
    8. '
' → logprob: -17.77054214477539
    9. '(L' → logprob: -17.95804214477539
    10. '```' → logprob: -18.33304214477539

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31856611371040344
    2. ':' → logprob: -1.693566083908081
    3. ' and' → logprob: -2.443566083908081
    4. '           ' → logprob: -6.69356632232666
    5. '               ' → logprob: -7.81856632232666
    6. 'and' → logprob: -8.94356632232666
    7. '):
' → logprob: -9.19356632232666
    8. ',' → logprob: -9.31856632232666
    9. ':
' → logprob: -10.19356632232666
    10. ' :
' → logprob: -10.31856632232666

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032629151828587055
    2. '           ' → logprob: -6.003262996673584
    3. '                
' → logprob: -8.378262519836426
    4. ',' → logprob: -8.628262519836426
    5. '<|end|>' → logprob: -9.753262519836426
    6. ' new' → logprob: -10.003262519836426
    7. ':' → logprob: -10.253262519836426
    8. '                   ' → logprob: -10.503262519836426
    9. ')' → logprob: -10.628262519836426
    10. '              ' → logprob: -10.628262519836426

Token 287: ' n' (ID: 297)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9271256327629089
    2. ' new' → logprob: -1.0521256923675537
    3. 'if' → logprob: -2.8021256923675537
    4. ' if' → logprob: -2.8021256923675537
    5. ' next' → logprob: -3.0521256923675537
    6. 'next' → logprob: -3.0521256923675537
    7. 'n' (adapté à ' n') → logprob: -4.177125453948975
    8. '               ' → logprob: -4.677125453948975
    9. ' nd' → logprob: -5.052125453948975
    10. '           ' → logprob: -6.302125453948975

Token 288: 'cost' (ID: 33457)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.2543669044971466
    2. '_att' → logprob: -1.7543668746948242
    3. 'ew' → logprob: -4.254366874694824
    4. 'dist' → logprob: -4.379366874694824
    5. 'cost' → logprob: -4.629366874694824
    6. 'ext' → logprob: -5.004366874694824
    7. '_dist' → logprob: -5.504366874694824
    8. '_cost' → logprob: -6.379366874694824
    9. 'xt' → logprob: -7.504366874694824
    10. 'w' → logprob: -7.754366874694824

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021141171455383
    2. '=' → logprob: -2.3502113819122314
    3. ',' → logprob: -12.725211143493652
    4. ')' → logprob: -14.225211143493652
    5. ' =
' → logprob: -14.975211143493652
    6. ']' → logprob: -15.600211143493652
    7. '=
' → logprob: -15.850211143493652
    8. '           ' → logprob: -16.10021209716797
    9. ' ' → logprob: -16.22521209716797
    10. '＝' → logprob: -16.47521209716797

Token 290: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4740789234638214
    2. 'cost' → logprob: -0.974078893661499
    3. '(cost' → logprob: -13.724079132080078
    4. '   ' → logprob: -15.349079132080078
    5. '_cost' → logprob: -15.474079132080078
    6. 'Cost' → logprob: -15.474079132080078
    7. '               ' → logprob: -16.474079132080078
    8. ' ' → logprob: -16.849079132080078
    9. '.cost' → logprob: -17.474079132080078
    10. ' kost' → logprob: -17.599079132080078

Token 291: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269378662109375
    2. '+' → logprob: -2.1269378662109375
    3. '+d' → logprob: -11.876937866210938
    4. '+n' → logprob: -14.251937866210938
    5. '+
' → logprob: -14.751937866210938
    6. '+c' → logprob: -15.001937866210938
    7. ' ' → logprob: -15.126937866210938
    8. '+k' → logprob: -15.626937866210938
    9. ' +
' → logprob: -15.751937866210938
    10. '+r' → logprob: -15.751937866210938

Token 292: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002036595979006961
    2. ' d' → logprob: -8.500204086303711
    3. '	d' → logprob: -16.37520408630371
    4. '
' → logprob: -17.12520408630371
    5. '   ' → logprob: -17.50020408630371
    6. ' ' → logprob: -17.75020408630371
    7. ')d' → logprob: -18.87520408630371
    8. '           ' → logprob: -19.37520408630371
    9. '[d' → logprob: -19.50020408630371
    10. '_d' → logprob: -19.50020408630371

Token 293: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12761655449867249
    2. '
' → logprob: -2.2526166439056396
    3. 'n' → logprob: -4.8776164054870605
    4. ',' → logprob: -6.1276164054870605
    5. '                
' → logprob: -6.1276164054870605
    6. '
' → logprob: -6.7526164054870605
    7. '                   ' → logprob: -8.127616882324219
    8. ',n' → logprob: -8.252616882324219
    9. '           ' → logprob: -8.877616882324219
    10. ')' → logprob: -9.002616882324219

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058295365422964096
    2. 'n' → logprob: -3.058295249938965
    3. '                
' → logprob: -5.058295249938965
    4. '
' → logprob: -7.558295249938965
    5. '                   ' → logprob: -7.558295249938965
    6. ',' → logprob: -8.058295249938965
    7. ',n' → logprob: -8.183295249938965
    8. '           ' → logprob: -8.558295249938965
    9. '#' → logprob: -9.058295249938965
    10. 'nt' → logprob: -9.058295249938965

Token 295: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002135748043656349
    2. 'nitt' → logprob: -7.377135753631592
    3. 'nt' → logprob: -7.502135753631592
    4. '
' → logprob: -8.127135276794434
    5. 'nant' → logprob: -8.377135276794434
    6. '#' → logprob: -9.252135276794434
    7. '   ' → logprob: -10.002135276794434
    8. '	n' → logprob: -10.627135276794434
    9. ' natt' → logprob: -10.627135276794434
    10. 'nat' → logprob: -10.877135276794434

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5164279937744141
    2. ' =' → logprob: -1.016427993774414
    3. '+' → logprob: -3.266427993774414
    4. ',' → logprob: -6.391427993774414
    5. ' +' → logprob: -6.516427993774414
    6. 'acks' → logprob: -10.266427993774414
    7. ' ' → logprob: -10.516427993774414
    8. 'ack' → logprob: -10.516427993774414
    9. '+=' → logprob: -10.516427993774414
    10. ' +=' → logprob: -11.516427993774414

Token 297: ' att' (ID: 1927)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.0011888028820976615
    2. ' att' → logprob: -6.7511887550354
    3. '0' → logprob: -11.751189231872559
    4. '   ' → logprob: -12.251189231872559
    5. ' ' → logprob: -13.376189231872559
    6. 'max' → logprob: -13.876189231872559
    7. 'acc' → logprob: -14.126189231872559
    8. '(att' → logprob: -14.626189231872559
    9. 'attack' → logprob: -15.251189231872559
    10. 'min' → logprob: -15.438689231872559

Token 298: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004749099258333445
    2. '
' → logprob: -6.754749298095703
    3. '           ' → logprob: -6.754749298095703
    4. '<|end|>' → logprob: -7.254749298095703
    5. ')' → logprob: -7.629749298095703
    6. ' if' → logprob: -7.879749298095703
    7. '                
' → logprob: -8.254749298095703
    8. ',
' → logprob: -8.879749298095703
    9. ',' → logprob: -9.004749298095703
    10. ')
' → logprob: -10.004749298095703

Token 300: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2697410583496094
    2. 'if' (adapté à ' if') → logprob: -2.0197410583496094
    3. ' if' → logprob: -2.2697410583496094
    4. '           ' → logprob: -7.894741058349609
    5. '              ' → logprob: -12.14474105834961
    6. '                
' → logprob: -12.51974105834961
    7. '       ' → logprob: -13.51974105834961
    8. ',' → logprob: -13.76974105834961
    9. ' ' → logprob: -14.01974105834961
    10. '#' → logprob: -14.14474105834961

Token 301: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15799111127853394
    2. ' dist' → logprob: -2.4079911708831787
    3. 'n' → logprob: -3.1579911708831787
    4. 'e' → logprob: -4.9079909324646
    5. ' n' → logprob: -6.0329909324646
    6. ' e' → logprob: -6.7829909324646
    7. 'd' → logprob: -7.5329909324646
    8. '(n' → logprob: -8.157991409301758
    9. '   ' → logprob: -8.282991409301758
    10. 'not' → logprob: -8.407991409301758

Token 302: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07890543341636658
    2. '[node' → logprob: -2.5789053440093994
    3. '[next' → logprob: -11.32890510559082
    4. '][' → logprob: -13.32890510559082
    5. 'n' → logprob: -14.20390510559082
    6. ')[' → logprob: -14.57890510559082
    7. '[' → logprob: -14.95390510559082
    8. ' [' → logprob: -15.95390510559082
    9. '```' → logprob: -16.57890510559082
    10. 'node' → logprob: -16.57890510559082

Token 303: 'xt' (ID: 711)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.10884907841682434
    2. 'xt' → logprob: -2.483849048614502
    3. '[node' → logprob: -4.483849048614502
    4. 'ext' → logprob: -4.983849048614502
    5. 'x' → logprob: -7.108849048614502
    6. '][' → logprob: -8.48384952545166
    7. 'node' → logprob: -8.60884952545166
    8. '[' → logprob: -9.10884952545166
    9. '[n' → logprob: -9.23384952545166
    10. '```' → logprob: -9.85884952545166

Token 304: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.055193230509757996
    2. '[n' → logprob: -2.9301931858062744
    3. '[' → logprob: -8.305192947387695
    4. ']' → logprob: -11.055192947387695
    5. ']][' → logprob: -11.805192947387695
    6. '"][' → logprob: -11.805192947387695
    7. ')[' → logprob: -12.180192947387695
    8. '           ' → logprob: -12.180192947387695
    9. ''][' → logprob: -12.680192947387695
    10. ' ][' → logprob: -12.930192947387695

Token 305: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -2.696889623621246e-06
    2. 'n' → logprob: -13.62500286102295
    3. ' nc' → logprob: -13.62500286102295
    4. ' n' → logprob: -16.625001907348633
    5. 'cost' → logprob: -16.875001907348633
    6. '_nc' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'noc' → logprob: -18.125001907348633
    9. '[n' → logprob: -18.125001907348633
    10. '.nc' → logprob: -18.750001907348633

Token 306: 'ost' (ID: 564)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.31335580348968506
    2. 'ost' → logprob: -1.313355803489685
    3. '_cost' → logprob: -10.063355445861816
    4. ' cost' → logprob: -10.438355445861816
    5. 'Cost' → logprob: -11.938355445861816
    6. 'oc' → logprob: -12.563355445861816
    7. 'st' → logprob: -12.813355445861816
    8. 'c' → logprob: -12.938355445861816
    9. 'os' → logprob: -12.938355445861816
    10. 'ot' → logprob: -14.188355445861816

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07939544320106506
    2. ']>' → logprob: -2.7043955326080322
    3. '>' → logprob: -4.704395294189453
    4. ' ]' → logprob: -8.329395294189453
    5. ' >' → logprob: -9.329395294189453
    6. '[' → logprob: -11.204395294189453
    7. ']<=' → logprob: -11.454395294189453
    8. '>]' → logprob: -13.704395294189453
    9. ']==' → logprob: -14.329395294189453
    10. '][' → logprob: -14.454395294189453

Token 308: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00862119346857071
    2. ' >' → logprob: -4.7586212158203125
    3. ']>' → logprob: -12.508621215820312
    4. '">' → logprob: -14.008621215820312
    5. ']' → logprob: -14.133621215820312
    6. '[' → logprob: -15.133621215820312
    7. '＞' → logprob: -15.383621215820312
    8. '<=' → logprob: -15.508621215820312
    9. ' ' → logprob: -15.633621215820312
    10. '>`' → logprob: -16.508621215820312

Token 309: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10574136674404144
    2. 'att' → logprob: -2.730741262435913
    3. ' natt' → logprob: -3.355741262435913
    4. 'nitt' → logprob: -9.105741500854492
    5. ' n' → logprob: -9.980741500854492
    6. '(n' → logprob: -10.855741500854492
    7. ' att' → logprob: -10.980741500854492
    8. '	n' → logprob: -11.105741500854492
    9. '(att' → logprob: -11.730741500854492
    10. ' napp' → logprob: -11.730741500854492

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2829572558403015
    2. ':
' → logprob: -1.4079573154449463
    3. '):
' → logprob: -7.157957077026367
    4. '):' → logprob: -7.782957077026367
    5. '=' → logprob: -8.657957077026367
    6. '           ' → logprob: -9.032957077026367
    7. ']:' → logprob: -10.032957077026367
    8. ']:
' → logprob: -10.032957077026367
    9. '               ' → logprob: -10.407957077026367
    10. ')' → logprob: -10.407957077026367

Token 311: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010250021703541279
    2. ':
' → logprob: -5.385250091552734
    3. ':' → logprob: -6.385250091552734
    4. '               ' → logprob: -6.510250091552734
    5. '                       ' → logprob: -6.885250091552734
    6. '                           ' → logprob: -7.760250091552734
    7. '):
' → logprob: -8.385250091552734
    8. '<|end|>' → logprob: -8.760250091552734
    9. '           ' → logprob: -9.385250091552734
    10. ',' → logprob: -9.635250091552734

Token 312: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.07984095066785812
    2. ' dist' → logprob: -2.579840898513794
    3. '                   ' → logprob: -7.079841136932373
    4. '                       ' → logprob: -9.204840660095215
    5. '	dist' → logprob: -12.829840660095215
    6. '               ' → logprob: -13.329840660095215
    7. '                    ' → logprob: -13.704840660095215
    8. '```' → logprob: -13.954840660095215
    9. '_dist' → logprob: -14.954840660095215
    10. '                           ' → logprob: -15.079840660095215

Token 313: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7432603272027336e-06
    2. '[node' → logprob: -13.875001907348633
    3. '][' → logprob: -15.500001907348633
    4. '[' → logprob: -15.625001907348633
    5. '```' → logprob: -15.750001907348633
    6. '[next' → logprob: -16.125001907348633
    7. 'n' → logprob: -17.875001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '[x' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.000001907348633

Token 314: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.04346475005149841
    2. 'x' → logprob: -3.1684646606445312
    3. '[n' → logprob: -8.168464660644531
    4. '][' → logprob: -9.418464660644531
    5. '```' → logprob: -10.668464660644531
    6. '[x' → logprob: -10.793464660644531
    7. 'st' → logprob: -11.418464660644531
    8. '   ' → logprob: -11.793464660644531
    9. 'tx' → logprob: -11.918464660644531
    10. '       ' → logprob: -12.168464660644531

Token 315: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03368661552667618
    2. '[n' → logprob: -3.408686637878418
    3. ' ][' → logprob: -11.533686637878418
    4. 'n' → logprob: -12.033686637878418
    5. ']' → logprob: -12.658686637878418
    6. '"][' → logprob: -12.783686637878418
    7. ']][' → logprob: -12.908686637878418
    8. '           ' → logprob: -13.033686637878418
    9. '(n' → logprob: -13.158686637878418
    10. '   ' → logprob: -13.283686637878418

Token 316: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.04890027642250061
    2. 'n' → logprob: -3.0489003658294678
    3. 'nx' → logprob: -8.923900604248047
    4. '[n' → logprob: -9.673900604248047
    5. ' nxt' → logprob: -10.423900604248047
    6. ' nc' → logprob: -10.673900604248047
    7. 'cost' → logprob: -11.173900604248047
    8. '   ' → logprob: -11.298900604248047
    9. '(n' → logprob: -11.798900604248047
    10. 'x' → logprob: -12.548900604248047

Token 317: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.006258427165448666
    2. 'cost' → logprob: -5.256258487701416
    3. 'st' → logprob: -7.006258487701416
    4. '[' → logprob: -9.881258010864258
    5. ']' → logprob: -11.256258010864258
    6. '[n' → logprob: -11.381258010864258
    7. 'c' → logprob: -11.756258010864258
    8. ' cost' → logprob: -12.881258010864258
    9. 'ост' → logprob: -13.131258010864258
    10. '   ' → logprob: -13.131258010864258

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8098195791244507
    2. '=' → logprob: -1.3098195791244507
    3. ']=' → logprob: -1.3098195791244507
    4. ' =' → logprob: -4.18481969833374
    5. ' ]' → logprob: -9.559819221496582
    6. ']:' → logprob: -11.434819221496582
    7. ')=' → logprob: -12.309819221496582
    8. '']=' → logprob: -13.309819221496582
    9. ')' → logprob: -13.559819221496582
    10. ']+=' → logprob: -13.559819221496582

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313263863325119
    2. ' =' → logprob: -1.3132638931274414
    3. '[' → logprob: -14.188263893127441
    4. ']' → logprob: -14.438263893127441
    5. ']=' → logprob: -14.688263893127441
    6. '=
' → logprob: -16.188262939453125
    7. '＝' → logprob: -16.438262939453125
    8. ',' → logprob: -16.688262939453125
    9. '=n' → logprob: -16.813262939453125
    10. '>' → logprob: -17.063262939453125

Token 320: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014209349639713764
    2. ' natt' → logprob: -4.264209270477295
    3. 'att' → logprob: -10.389209747314453
    4. 'nitt' → logprob: -11.889209747314453
    5. 'nacht' → logprob: -12.639209747314453
    6. 'nat' → logprob: -13.139209747314453
    7. 'nast' → logprob: -13.889209747314453
    8. '	n' → logprob: -14.264209747314453
    9. 'nt' → logprob: -14.639209747314453
    10. 'night' → logprob: -15.139209747314453

Token 321: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.52788148727268e-05
    2. 'heap' → logprob: -10.000064849853516
    3. '               ' → logprob: -12.000064849853516
    4. ',' → logprob: -12.625064849853516
    5. '           ' → logprob: -13.000064849853516
    6. '				' → logprob: -13.375064849853516
    7. '                  ' → logprob: -13.625064849853516
    8. ' heap' → logprob: -13.875064849853516
    9. '                    
' → logprob: -14.000064849853516
    10. '                       ' → logprob: -14.125064849853516

Token 322: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028737038373947144
    2. 'heap' → logprob: -5.87787389755249
    3. ' heap' → logprob: -10.252873420715332
    4. '               ' → logprob: -10.627873420715332
    5. '           ' → logprob: -12.377873420715332
    6. '                       ' → logprob: -13.252873420715332
    7. '                  ' → logprob: -13.752873420715332
    8. '```' → logprob: -14.127873420715332
    9. '				' → logprob: -14.377873420715332
    10. '   ' → logprob: -15.377873420715332

Token 323: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0019505366217345
    2. ' heap' → logprob: -6.251950740814209
    3. '                   ' → logprob: -10.75195026397705
    4. '                       ' → logprob: -14.75195026397705
    5. 'he' → logprob: -16.376951217651367
    6. '               ' → logprob: -17.626951217651367
    7. '   ' → logprob: -17.876951217651367
    8. '                           ' → logprob: -18.751951217651367
    9. '           ' → logprob: -18.876951217651367
    10. '```' → logprob: -19.001951217651367

Token 324: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2200749754119897e-06
    2. 'p' → logprob: -13.125001907348633
    3. 'app' → logprob: -16.375001907348633
    4. 'h' → logprob: -16.875001907348633
    5. '```' → logprob: -18.500001907348633
    6. 'push' → logprob: -18.750001907348633
    7. '[' → logprob: -18.750001907348633
    8. 'f' → logprob: -19.125001907348633
    9. 'hq' → logprob: -19.125001907348633
    10. 'qx' → logprob: -19.250001907348633

Token 325: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.5094070477061905e-05
    2. '.heap' → logprob: -12.000015258789062
    3. 'he' → logprob: -12.500015258789062
    4. 'q' → logprob: -12.500015258789062
    5. '.push' → logprob: -14.125015258789062
    6. '.h' → logprob: -15.875015258789062
    7. 'ush' → logprob: -16.250015258789062
    8. 'push' → logprob: -16.250015258789062
    9. ' he' → logprob: -16.375015258789062
    10. 'heap' → logprob: -16.750015258789062

Token 326: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.236549335066229e-05
    2. 'pp' → logprob: -10.750021934509277
    3. 'ap' → logprob: -14.375021934509277
    4. 'p' → logprob: -15.750021934509277
    5. 'push' → logprob: -16.250022888183594
    6. 'q' → logprob: -17.625022888183594
    7. 'op' → logprob: -18.875022888183594
    8. '[' → logprob: -18.875022888183594
    9. 'appen' → logprob: -19.000022888183594
    10. '```' → logprob: -19.625022888183594

Token 327: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.021599894389510155
    2. 'app' → logprob: -4.271599769592285
    3. 'op' → logprob: -5.771599769592285
    4. 'p' → logprob: -5.896599769592285
    5. 'push' → logprob: -7.021599769592285
    6. 'pp' → logprob: -7.396599769592285
    7. 'q' → logprob: -10.771599769592285
    8. 'ap' → logprob: -12.021599769592285
    9. 'he' → logprob: -12.021599769592285
    10. '.he' → logprob: -13.396599769592285

Token 328: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. '(n' → logprob: -17.625
    4. 'h' → logprob: -17.75
    5. ' (' → logprob: -18.25
    6. ',h' → logprob: -19.0
    7. '```' → logprob: -19.75
    8. '	h' → logprob: -19.75
    9. '(
' → logprob: -19.875
    10. '((' → logprob: -20.25

Token 329: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.876193169271573e-05
    2. '(h' → logprob: -9.375088691711426
    3. 'hq' → logprob: -13.000088691711426
    4. 'qh' → logprob: -13.750088691711426
    5. 'c' → logprob: -15.125088691711426
    6. '(q' → logprob: -16.250089645385742
    7. 'h' → logprob: -17.250089645385742
    8. 'qs' → logprob: -17.375089645385742
    9. 'sq' → logprob: -17.500089645385742
    10. 'cq' → logprob: -17.500089645385742

Token 330: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.008964705280959606
    2. '((' → logprob: -5.258964538574219
    3. '(' → logprob: -5.633964538574219
    4. ',' → logprob: -10.133964538574219
    5. ')' → logprob: -10.258964538574219
    6. '(n' → logprob: -10.508964538574219
    7. ',(' → logprob: -11.133964538574219
    8. '(q' → logprob: -11.258964538574219
    9. ' (' → logprob: -11.508964538574219
    10. ')(' → logprob: -13.008964538574219

Token 331: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08405614644289017
    2. '(n' → logprob: -2.5840561389923096
    3. ' (' → logprob: -5.584056377410889
    4. '(att' → logprob: -6.584056377410889
    5. '   ' → logprob: -11.45905590057373
    6. ' ' → logprob: -13.45905590057373
    7. '((' → logprob: -15.08405590057373
    8. '(nt' → logprob: -15.20905590057373
    9. '(at' → logprob: -15.33405590057373
    10. ')' → logprob: -15.70905590057373

Token 332: 'n' (ID: 77)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.38725540041923523
    2. 'n' → logprob: -1.1372554302215576
    3. '0' → logprob: -8.637255668640137
    4. '(att' → logprob: -9.387255668640137
    5. '(n' → logprob: -9.512255668640137
    6. ' natt' → logprob: -10.387255668640137
    7. '(' → logprob: -13.012255668640137
    8. '   ' → logprob: -13.012255668640137
    9. '                                   ' → logprob: -13.512255668640137
    10. 'nitt' → logprob: -13.512255668640137

Token 333: 'att' (ID: 2002)
  Prédit: 'att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.00015002528380136937
    2. 'n' → logprob: -9.375149726867676
    3. 'at' → logprob: -9.875149726867676
    4. 'cost' → logprob: -12.750149726867676
    5. '(att' → logprob: -12.875149726867676
    6. 'a' → logprob: -13.125149726867676
    7. ',' → logprob: -13.625149726867676
    8. '```' → logprob: -14.250149726867676
    9. '_att' → logprob: -14.625149726867676
    10. 'c' → logprob: -14.875149726867676

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021402664424385875
    2. ',n' → logprob: -8.500213623046875
    3. ' ,' → logprob: -11.500213623046875
    4. ',
' → logprob: -15.500213623046875
    5. ',node' → logprob: -15.750213623046875
    6. '),' → logprob: -18.500213623046875
    7. ',next' → logprob: -18.875213623046875
    8. '‌,' → logprob: -19.000213623046875
    9. 'n' → logprob: -19.125213623046875
    10. ',

' → logprob: -19.250213623046875

Token 335: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16023053228855133
    2. ' nxt' → logprob: -1.9102305173873901
    3. ' n' → logprob: -13.03523063659668
    4. '	n' → logprob: -14.03523063659668
    5. 'nx' → logprob: -14.28523063659668
    6. '   ' → logprob: -14.53523063659668
    7. '       ' → logprob: -14.91023063659668
    8. '[n' → logprob: -15.28523063659668
    9. ' ' → logprob: -15.66023063659668
    10. ' ntx' → logprob: -15.91023063659668

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',n' → logprob: -14.250011444091797
    4. ',
' → logprob: -16.625011444091797
    5. '),' → logprob: -17.000011444091797
    6. '```' → logprob: -18.625011444091797
    7. ',c' → logprob: -18.750011444091797
    8. '`,' → logprob: -19.250011444091797
    9. 'nc' → logprob: -19.375011444091797
    10. ',

' → logprob: -19.500011444091797

Token 337: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0006365468143485487
    2. ' nc' → logprob: -7.375636577606201
    3. 'n' → logprob: -12.250636100769043
    4. ' n' → logprob: -12.250636100769043
    5. '_nc' → logprob: -15.250636100769043
    6. 'NC' → logprob: -16.37563705444336
    7. '.nc' → logprob: -16.62563705444336
    8. ' ' → logprob: -18.00063705444336
    9. '   ' → logprob: -18.12563705444336
    10. '	n' → logprob: -19.00063705444336

Token 338: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.6240566083070007e-06
    2. 'ost' → logprob: -13.750001907348633
    3. ' cost' → logprob: -15.000001907348633
    4. '_cost' → logprob: -16.000001907348633
    5. '-cost' → logprob: -17.625001907348633
    6. 'Cost' → logprob: -17.625001907348633
    7. 'c' → logprob: -18.875001907348633
    8. 'oc' → logprob: -19.000001907348633
    9. '.cost' → logprob: -19.125001907348633
    10. '(cost' → logprob: -19.125001907348633

Token 339: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00038658222183585167
    2. '))
' → logprob: -7.875386714935303
    3. ')' → logprob: -12.250386238098145
    4. ' ))' → logprob: -13.875386238098145
    5. ')))' → logprob: -14.750386238098145
    6. '   ' → logprob: -16.25038719177246
    7. '))

' → logprob: -16.37538719177246
    8. '       ' → logprob: -16.62538719177246
    9. '           ' → logprob: -17.37538719177246
    10. '               ' → logprob: -17.62538719177246

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001500579179264605
    2. 'else' → logprob: -6.751500606536865
    3. '```' → logprob: -8.751500129699707
    4. ' else' → logprob: -8.876500129699707
    5. '          ' → logprob: -11.626500129699707
    6. '               ' → logprob: -12.001500129699707
    7. 'elif' → logprob: -12.126500129699707
    8. '       ' → logprob: -12.501500129699707
    9. '            
' → logprob: -12.751500129699707
    10. ' elif' → logprob: -13.376500129699707

Token 341: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.27532798051834106
    2. '           ' → logprob: -1.7753279209136963
    3. ' else' → logprob: -2.6503279209136963
    4. 'n' → logprob: -8.150327682495117
    5. '       ' → logprob: -9.400327682495117
    6. 'if' → logprob: -9.775327682495117
    7. 'elif' → logprob: -10.025327682495117
    8. ' n' → logprob: -10.275327682495117
    9. '               ' → logprob: -10.525327682495117
    10. '```' → logprob: -10.775327682495117

Token 342: ' not' (ID: 625)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22786109149456024
    2. 'if' → logprob: -2.352861166000366
    3. 'nc' → logprob: -2.477861166000366
    4. '#' → logprob: -4.102860927581787
    5. 'else' → logprob: -5.477860927581787
    6. ' n' → logprob: -7.227860927581787
    7. ' if' → logprob: -7.352860927581787
    8. 'noc' → logprob: -7.727860927581787
    9. 'cost' → logprob: -8.352861404418945
    10. 'elif' → logprob: -8.352861404418945

Token 343: ' hire' (ID: 19439)
  Prédit: ' hiring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hiring' → logprob: -0.7215747237205505
    2. ' hire' → logprob: -1.3465747833251953
    3. 'hire' → logprob: -1.5965747833251953
    4. 'cost' → logprob: -4.346574783325195
    5. 'Hiring' → logprob: -4.471574783325195
    6. ' cost' → logprob: -4.721574783325195
    7. ' hired' → logprob: -4.721574783325195
    8. '(cost' → logprob: -5.596574783325195
    9. ' (' → logprob: -7.096574783325195
    10. ' Hiring' → logprob: -7.221574783325195

Token 344: ' guard' (ID: 11774)
  Prédit: ' guard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guard' → logprob: -0.3541022539138794
    2. 'guard' → logprob: -1.2291022539138794
    3. '           ' → logprob: -5.85410213470459
    4. 'guards' → logprob: -6.97910213470459
    5. '               ' → logprob: -7.47910213470459
    6. '_guard' → logprob: -8.10410213470459
    7. '   ' → logprob: -8.72910213470459
    8. ' a' → logprob: -8.72910213470459
    9. '       ' → logprob: -8.85410213470459
    10. ' guards' → logprob: -9.10410213470459

Token 345: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03395237773656845
    2. ' if' → logprob: -3.783952474594116
    3. ',' → logprob: -5.158952236175537
    4. '               ' → logprob: -6.658952236175537
    5. '            
' → logprob: -6.908952236175537
    6. '            ' → logprob: -7.533952236175537
    7. ' ,' → logprob: -7.783952236175537
    8. ' else' → logprob: -8.533952713012695
    9. 'if' → logprob: -8.908952713012695
    10. ' n' → logprob: -8.908952713012695

Token 346: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3015871047973633
    2. '           ' → logprob: -1.8015871047973633
    3. ' n' → logprob: -3.0515871047973633
    4. '               ' → logprob: -3.1765871047973633
    5. '            ' → logprob: -6.176587104797363
    6. ' natt' → logprob: -6.176587104797363
    7. '          ' → logprob: -8.176587104797363
    8. '                   ' → logprob: -8.301587104797363
    9. '             ' → logprob: -8.301587104797363
    10. '_n' → logprob: -8.676587104797363

Token 347: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008031953475438058
    2. 'nc' → logprob: -8.000802993774414
    3. '           ' → logprob: -8.500802993774414
    4. '               ' → logprob: -8.875802993774414
    5. 'if' → logprob: -10.500802993774414
    6. ' natt' → logprob: -10.875802993774414
    7. '   ' → logprob: -11.000802993774414
    8. ' n' → logprob: -11.250802993774414
    9. 'nn' → logprob: -11.250802993774414
    10. 'nitt' → logprob: -11.875802993774414

Token 348: 'cost' (ID: 33457)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.18009334802627563
    2. 'cost' → logprob: -1.8050932884216309
    3. 'oc' → logprob: -9.180093765258789
    4. 'n' → logprob: -9.430093765258789
    5. 'at' → logprob: -10.305093765258789
    6. 'o' → logprob: -10.305093765258789
    7. '_cost' → logprob: -10.930093765258789
    8. 'noc' → logprob: -11.055093765258789
    9. 'c' → logprob: -11.180093765258789
    10. 'ott' → logprob: -11.430093765258789

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03372373431921005
    2. ' =' → logprob: -3.408723831176758
    3. ',' → logprob: -10.283723831176758
    4. '=
' → logprob: -10.783723831176758
    5. '+' → logprob: -11.533723831176758
    6. ')' → logprob: -12.408723831176758
    7. ' +' → logprob: -12.908723831176758
    8. '    ' → logprob: -13.908723831176758
    9. 'cost' → logprob: -13.908723831176758
    10. ' ' → logprob: -14.158723831176758

Token 350: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -9.615255839889869e-05
    2. ' cost' → logprob: -9.250096321105957
    3. '   ' → logprob: -20.00009536743164
    4. '(cost' → logprob: -21.62509536743164
    5. 'code' → logprob: -22.00009536743164
    6. 'c' → logprob: -22.00009536743164
    7. ' ' → logprob: -22.12509536743164
    8. '_cost' → logprob: -23.50009536743164
    9. '    ' → logprob: -23.75009536743164
    10. 'cos' → logprob: -24.00009536743164

Token 351: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11909691989421844
    2. '+n' → logprob: -2.7440969944000244
    3. ' +' → logprob: -3.6190969944000244
    4. '           ' → logprob: -4.369096755981445
    5. '               ' → logprob: -6.494096755981445
    6. '          ' → logprob: -6.494096755981445
    7. '       ' → logprob: -7.119096755981445
    8. 'n' → logprob: -7.244096755981445
    9. '         ' → logprob: -7.494096755981445
    10. '   ' → logprob: -7.494096755981445

Token 352: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02085833251476288
    2. '           ' → logprob: -3.8958582878112793
    3. '+n' → logprob: -8.770858764648438
    4. '       ' → logprob: -10.270858764648438
    5. '               ' → logprob: -10.520858764648438
    6. '   ' → logprob: -11.020858764648438
    7. 'nitt' → logprob: -11.145858764648438
    8. ',n' → logprob: -11.770858764648438
    9. '          ' → logprob: -12.145858764648438
    10. '```' → logprob: -12.145858764648438

Token 353: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2127087504486553e-05
    2. 'nitt' → logprob: -11.125021934509277
    3. ' natt' → logprob: -12.375021934509277
    4. 'nacht' → logprob: -13.875021934509277
    5. '	n' → logprob: -14.125021934509277
    6. ' ' → logprob: -15.000021934509277
    7. '```' → logprob: -15.375021934509277
    8. '           ' → logprob: -15.625021934509277
    9. '+n' → logprob: -15.875021934509277
    10. '   ' → logprob: -16.125022888183594

Token 354: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.695793628692627
    2. ' +' → logprob: -0.695793628692627
    3. '=' → logprob: -6.320793628692627
    4. ' =' → logprob: -7.695793628692627
    5. '+=' → logprob: -8.570793151855469
    6. ' +=' → logprob: -8.570793151855469
    7. ' +
' → logprob: -13.070793151855469
    8. '   ' → logprob: -13.070793151855469
    9. '+
' → logprob: -13.195793151855469
    10. '＋' → logprob: -13.695793151855469

Token 355: ' att' (ID: 1927)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -5.200166469876422e-06
    2. ' att' → logprob: -12.250004768371582
    3. '   ' → logprob: -14.750004768371582
    4. ' ' → logprob: -17.6250057220459
    5. '  ' → logprob: -18.6250057220459
    6. '(att' → logprob: -18.6250057220459
    7. 'acc' → logprob: -18.7500057220459
    8. '    ' → logprob: -19.8750057220459
    9. '           ' → logprob: -20.5000057220459
    10. '
' → logprob: -20.8750057220459

Token 356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06201877072453499
    2. ' +' → logprob: -2.812018871307373
    3. '+n' → logprob: -10.187018394470215
    4. '+
' → logprob: -12.062018394470215
    5. '+d' → logprob: -12.562018394470215
    6. '+D' → logprob: -13.312018394470215
    7. '           ' → logprob: -14.312018394470215
    8. '+r' → logprob: -15.062018394470215
    9. '＋' → logprob: -15.437018394470215
    10. '   ' → logprob: -15.687018394470215

Token 357: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00012511172099038959
    2. ' e' → logprob: -9.00012493133545
    3. 'E' → logprob: -13.50012493133545
    4. '   ' → logprob: -16.125125885009766
    5. ' ' → logprob: -17.625125885009766
    6. '           ' → logprob: -17.625125885009766
    7. '(e' → logprob: -17.750125885009766
    8. '1' → logprob: -18.125125885009766
    9. '_e' → logprob: -18.125125885009766
    10. '       ' → logprob: -18.625125885009766

Token 358: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5118645429611206
    2. '           ' → logprob: -1.0118645429611206
    3. ' 
' → logprob: -3.88686466217041
    4. '<|end|>' → logprob: -4.63686466217041
    5. '            
' → logprob: -6.01186466217041
    6. ' if' → logprob: -6.51186466217041
    7. '  
' → logprob: -7.26186466217041
    8. '<|end|>' → logprob: -8.13686466217041
    9. 'if' → logprob: -8.26186466217041
    10. '            ' → logprob: -8.38686466217041

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006860889960080385
    2. ' if' → logprob: -5.131860733032227
    3. 'if' → logprob: -7.131860733032227
    4. '       ' → logprob: -9.881860733032227
    5. '            
' → logprob: -10.881860733032227
    6. '          ' → logprob: -11.256860733032227
    7. '<|end|>' → logprob: -11.381860733032227
    8. '   ' → logprob: -11.506860733032227
    9. '```' → logprob: -11.756860733032227
    10. '               ' → logprob: -12.256860733032227

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019328447058796883
    2. ' if' → logprob: -4.269328594207764
    3. '           ' → logprob: -5.269328594207764
    4. '       ' → logprob: -12.769328117370605
    5. '```' → logprob: -13.894328117370605
    6. '   ' → logprob: -14.519328117370605
    7. '               ' → logprob: -15.894328117370605
    8. '	if' → logprob: -16.269329071044922
    9. '          ' → logprob: -16.894329071044922
    10. '            
' → logprob: -17.269329071044922

Token 361: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22544905543327332
    2. ' dist' → logprob: -1.6004490852355957
    3. 'n' → logprob: -11.225448608398438
    4. '	dist' → logprob: -11.600448608398438
    5. '(dist' → logprob: -12.350448608398438
    6. '           ' → logprob: -12.850448608398438
    7. '   ' → logprob: -13.100448608398438
    8. 'nc' → logprob: -14.100448608398438
    9. ' n' → logprob: -14.350448608398438
    10. '               ' → logprob: -14.600448608398438

Token 362: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.438573680294212e-06
    2. '[node' → logprob: -12.250005722045898
    3. 'n' → logprob: -14.500005722045898
    4. '[next' → logprob: -16.0000057220459
    5. '[' → logprob: -17.5000057220459
    6. '<n' → logprob: -18.3750057220459
    7. ' [' → logprob: -18.7500057220459
    8. '﻿' → logprob: -19.0000057220459
    9. '(n' → logprob: -19.5000057220459
    10. '[[' → logprob: -19.6250057220459

Token 363: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0005237233126536012
    2. 'x' → logprob: -7.750523567199707
    3. 'n' → logprob: -10.000523567199707
    4. 't' → logprob: -10.250523567199707
    5. '[n' → logprob: -12.000523567199707
    6. '```' → logprob: -12.750523567199707
    7. 'ext' → logprob: -13.875523567199707
    8. ' nxt' → logprob: -14.000523567199707
    9. '[next' → logprob: -14.750523567199707
    10. '[' → logprob: -15.125523567199707

Token 364: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0005090686026960611
    2. '][' → logprob: -8.375509262084961
    3. '[c' → logprob: -8.625509262084961
    4. '[' → logprob: -9.500509262084961
    5. '[node' → logprob: -11.500509262084961
    6. '           ' → logprob: -12.375509262084961
    7. 'nc' → logprob: -12.500509262084961
    8. '```' → logprob: -13.750509262084961
    9. '          ' → logprob: -13.875509262084961
    10. ' [' → logprob: -14.625509262084961

Token 365: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -2.2961512513575144e-05
    2. 'cost' → logprob: -10.875022888183594
    3. 'n' → logprob: -12.875022888183594
    4. ' nc' → logprob: -13.500022888183594
    5. '[n' → logprob: -17.250022888183594
    6. 'noc' → logprob: -18.500022888183594
    7. '_nc' → logprob: -19.250022888183594
    8. ' n' → logprob: -19.875022888183594
    9. '.nc' → logprob: -19.875022888183594
    10. '
' → logprob: -19.875022888183594

Token 366: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.10756172984838486
    2. 'cost' → logprob: -2.6075618267059326
    3. 'st' → logprob: -3.6075618267059326
    4. '[' → logprob: -7.9825615882873535
    5. '[n' → logprob: -8.607562065124512
    6. ']' → logprob: -9.982562065124512
    7. 'c' → logprob: -10.107562065124512
    8. '   ' → logprob: -10.107562065124512
    9. 'oc' → logprob: -10.232562065124512
    10. 'nst' → logprob: -10.357562065124512

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7467678189277649
    2. '>' → logprob: -1.1217677593231201
    3. ' >' → logprob: -1.6217677593231201
    4. ']>' → logprob: -5.996767997741699
    5. '[' → logprob: -8.3717679977417
    6. ')' → logprob: -9.4967679977417
    7. ' ]' → logprob: -10.4967679977417
    8. '   ' → logprob: -11.1217679977417
    9. ' ' → logprob: -12.2467679977417
    10. '[n' → logprob: -13.1217679977417

Token 368: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31326720118522644
    2. '>' → logprob: -1.3132672309875488
    3. '[' → logprob: -12.81326675415039
    4. '   ' → logprob: -14.06326675415039
    5. ' ' → logprob: -14.31326675415039
    6. ')' → logprob: -15.56326675415039
    7. '">' → logprob: -15.68826675415039
    8. ']' → logprob: -16.06326675415039
    9. '[n' → logprob: -16.18826675415039
    10. ']>' → logprob: -16.56326675415039

Token 369: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002988776541315019
    2. ' natt' → logprob: -8.125298500061035
    3. 'nitt' → logprob: -13.125298500061035
    4. 'att' → logprob: -15.375298500061035
    5. 'nacht' → logprob: -15.375298500061035
    6. '	n' → logprob: -16.00029945373535
    7. '(n' → logprob: -17.00029945373535
    8. '   ' → logprob: -17.12529945373535
    9. '           ' → logprob: -17.62529945373535
    10. 'nast' → logprob: -17.62529945373535

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0185087937861681
    2. ':
' → logprob: -4.0185089111328125
    3. '):' → logprob: -8.393508911132812
    4. '):
' → logprob: -10.018508911132812
    5. '               ' → logprob: -10.768508911132812
    6. ')' → logprob: -10.893508911132812
    7. '<|end|>' → logprob: -11.643508911132812
    8. ':

' → logprob: -11.893508911132812
    9. '           ' → logprob: -12.018508911132812
    10. '[' → logprob: -12.143508911132812

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020106058567762375
    2. 'dist' → logprob: -4.395105838775635
    3. ' dist' → logprob: -4.895105838775635
    4. '```' → logprob: -10.020106315612793
    5. '                   ' → logprob: -11.270106315612793
    6. '[' → logprob: -11.770106315612793
    7. '   ' → logprob: -12.520106315612793
    8. '           ' → logprob: -13.395106315612793
    9. '(dist' → logprob: -13.395106315612793
    10. '              ' → logprob: -13.395106315612793

Token 372: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.16026932001113892
    2. ' dist' → logprob: -1.9102692604064941
    3. '               ' → logprob: -10.160269737243652
    4. '                   ' → logprob: -12.035269737243652
    5. '	dist' → logprob: -15.160269737243652
    6. '```' → logprob: -15.785269737243652
    7. '_dist' → logprob: -16.910268783569336
    8. '           ' → logprob: -17.035268783569336
    9. '.dist' → logprob: -17.785268783569336
    10. '(dist' → logprob: -17.910268783569336

Token 373: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.8889261304575484e-06
    2. '[node' → logprob: -13.250003814697266
    3. 'n' → logprob: -13.750003814697266
    4. '[next' → logprob: -14.375003814697266
    5. '```' → logprob: -15.375003814697266
    6. '[' → logprob: -16.125003814697266
    7. '	n' → logprob: -17.250003814697266
    8. '<n' → logprob: -17.625003814697266
    9. ',n' → logprob: -18.000003814697266
    10. '[x' → logprob: -18.375003814697266

Token 374: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5943182706832886
    2. '[n' → logprob: -0.8443182706832886
    3. 'xt' → logprob: -4.844318389892578
    4. 'x' → logprob: -4.969318389892578
    5. 'nx' → logprob: -6.344318389892578
    6. 'xn' → logprob: -7.844318389892578
    7. '[x' → logprob: -8.094318389892578
    8. '[next' → logprob: -8.219318389892578
    9. '```' → logprob: -8.344318389892578
    10. ' nxt' → logprob: -10.094318389892578

Token 375: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00018780550453811884
    2. '][' → logprob: -8.625187873840332
    3. '[next' → logprob: -12.625187873840332
    4. '[' → logprob: -13.750187873840332
    5. '[node' → logprob: -13.875187873840332
    6. '   ' → logprob: -14.500187873840332
    7. 'n' → logprob: -14.750187873840332
    8. '[[' → logprob: -14.875187873840332
    9. '
' → logprob: -15.125187873840332
    10. '```' → logprob: -15.250187873840332

Token 376: 'nc' (ID: 24825)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005241937469691038
    2. 'nc' → logprob: -5.255241870880127
    3. '[n' → logprob: -12.755242347717285
    4. 'att' → logprob: -13.130242347717285
    5. '(n' → logprob: -13.630242347717285
    6. '
' → logprob: -14.755242347717285
    7. '   ' → logprob: -14.755242347717285
    8. 'nst' → logprob: -15.630242347717285
    9. 'nt' → logprob: -16.25524139404297
    10. 'noc' → logprob: -16.25524139404297

Token 377: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.46836915612220764
    2. 'cost' → logprob: -1.5933691263198853
    3. 'xt' → logprob: -2.468369245529175
    4. 'st' → logprob: -2.468369245529175
    5. 'c' → logprob: -7.218369007110596
    6. '[' → logprob: -9.343369483947754
    7. 'ct' → logprob: -9.343369483947754
    8. 'oc' → logprob: -9.593369483947754
    9. 'ext' → logprob: -9.593369483947754
    10. 'ot' → logprob: -9.843369483947754

Token 378: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007158142048865557
    2. ' =' → logprob: -5.007158279418945
    3. ']' → logprob: -7.882158279418945
    4. ']=' → logprob: -9.882158279418945
    5. ')' → logprob: -12.507158279418945
    6. '[n' → logprob: -12.757158279418945
    7. '=n' → logprob: -12.757158279418945
    8. '[' → logprob: -13.757158279418945
    9. '               ' → logprob: -13.882158279418945
    10. '=
' → logprob: -14.007158279418945

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01429925300180912
    2. ' =' → logprob: -4.264299392700195
    3. '[n' → logprob: -9.139299392700195
    4. '=n' → logprob: -10.639299392700195
    5. '               ' → logprob: -13.889299392700195
    6. ']=' → logprob: -13.889299392700195
    7. '                   ' → logprob: -14.264299392700195
    8. '=
' → logprob: -14.389299392700195
    9. '[' → logprob: -14.764299392700195
    10. '=

' → logprob: -15.514299392700195

Token 380: ' natt' (ID: 140097)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04859906807541847
    2. ' natt' → logprob: -3.0485990047454834
    3. 'nitt' → logprob: -11.923599243164062
    4. 'nacht' → logprob: -13.423599243164062
    5. '	n' → logprob: -13.548599243164062
    6. ' napp' → logprob: -14.048599243164062
    7. 'att' → logprob: -14.673599243164062
    8. ' n' → logprob: -15.423599243164062
    9. '(n' → logprob: -15.548599243164062
    10. 'nast' → logprob: -15.798599243164062

Token 381: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0863112211227417
    2. 'heap' → logprob: -2.5863113403320312
    3. '                   ' → logprob: -5.086311340332031
    4. '```' → logprob: -7.211311340332031
    5. ' heap' → logprob: -8.336311340332031
    6. '                ' → logprob: -9.961311340332031
    7. '           ' → logprob: -10.086311340332031
    8. '(heap' → logprob: -10.086311340332031
    9. '   ' → logprob: -10.461311340332031
    10. '              ' → logprob: -10.836311340332031

Token 382: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03987688943743706
    2. 'heap' → logprob: -3.789876937866211
    3. '                   ' → logprob: -4.289876937866211
    4. '```' → logprob: -6.039876937866211
    5. ' heap' → logprob: -9.289876937866211
    6. '                ' → logprob: -9.789876937866211
    7. '(heap' → logprob: -9.789876937866211
    8. '           ' → logprob: -10.039876937866211
    9. '                       ' → logprob: -10.414876937866211
    10. '                
' → logprob: -10.414876937866211

Token 383: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -15.0
    3. '```' → logprob: -19.75
    4. 'he' → logprob: -20.5
    5. '.heap' → logprob: -22.0
    6. '(heap' → logprob: -22.125
    7. '               ' → logprob: -22.25
    8. '           ' → logprob: -23.0
    9. '   ' → logprob: -23.125
    10. 'heat' → logprob: -23.125

Token 384: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.861651490908116e-05
    2. '.he' → logprob: -9.625068664550781
    3. 'p' → logprob: -13.500068664550781
    4. 'h' → logprob: -15.250068664550781
    5. 'ush' → logprob: -15.625068664550781
    6. '.heap' → logprob: -15.625068664550781
    7. 'app' → logprob: -15.875068664550781
    8. 'he' → logprob: -16.12506866455078
    9. '       ' → logprob: -16.87506866455078
    10. '   ' → logprob: -17.12506866455078

Token 385: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.12858885526657104
    2. 'ush' → logprob: -2.128588914871216
    3. 'he' → logprob: -6.878588676452637
    4. 'app' → logprob: -8.128588676452637
    5. 'q' → logprob: -8.878588676452637
    6. 'p' → logprob: -9.503588676452637
    7. 'push' → logprob: -10.628588676452637
    8. '.push' → logprob: -10.628588676452637
    9. '.heap' → logprob: -10.878588676452637
    10. '_he' → logprob: -11.378588676452637

Token 386: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001720742875477299
    2. 'pp' → logprob: -9.000171661376953
    3. 'ap' → logprob: -10.000171661376953
    4. 'p' → logprob: -13.000171661376953
    5. 'push' → logprob: -14.875171661376953
    6. 'q' → logprob: -14.875171661376953
    7. 'e' → logprob: -16.375171661376953
    8. 'ush' → logprob: -16.375171661376953
    9. 'a' → logprob: -16.625171661376953
    10. '```' → logprob: -17.500171661376953

Token 387: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.827200897736475e-05
    2. 'op' → logprob: -10.250078201293945
    3. 'q' → logprob: -11.125078201293945
    4. 'push' → logprob: -11.500078201293945
    5. 'p' → logprob: -11.625078201293945
    6. 'app' → logprob: -11.875078201293945
    7. 'pp' → logprob: -13.875078201293945
    8. 'sh' → logprob: -14.500078201293945
    9. 'h' → logprob: -14.750078201293945
    10. 'uh' → logprob: -16.250078201293945

Token 388: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. 'h' → logprob: -17.125
    4. '(q' → logprob: -18.5
    5. '(n' → logprob: -19.25
    6. '(
' → logprob: -19.375
    7. '```' → logprob: -20.5
    8. ',h' → logprob: -20.875
    9. '	h' → logprob: -20.875
    10. '(heap' → logprob: -21.25

Token 389: 'q' (ID: 80)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4984203279018402
    2. 'q' → logprob: -0.9984203577041626
    3. 'h' → logprob: -3.873420238494873
    4. 'hq' → logprob: -5.748420238494873
    5. '[h' → logprob: -11.123420715332031
    6. 'qs' → logprob: -11.373420715332031
    7. 'graph' → logprob: -11.498420715332031
    8. ',h' → logprob: -12.123420715332031
    9. 'qh' → logprob: -12.123420715332031
    10. 'ql' → logprob: -12.248420715332031

Token 390: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00028159678913652897
    2. 'h' → logprob: -9.00028133392334
    3. ',h' → logprob: -9.00028133392334
    4. ',' → logprob: -10.50028133392334
    5. ')' → logprob: -12.62528133392334
    6. 'hq' → logprob: -12.75028133392334
    7. '```' → logprob: -15.12528133392334
    8. ' h' → logprob: -15.50028133392334
    9. '	h' → logprob: -15.62528133392334
    10. '[h' → logprob: -15.75028133392334

Token 391: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.08099374175071716
    2. '(n' → logprob: -2.58099365234375
    3. 'hq' → logprob: -6.20599365234375
    4. ' (' → logprob: -9.83099365234375
    5. 'h' → logprob: -10.70599365234375
    6. 'att' → logprob: -12.70599365234375
    7. '(' → logprob: -12.70599365234375
    8. ' h' → logprob: -14.58099365234375
    9. '   ' → logprob: -15.08099365234375
    10. 'n' → logprob: -15.20599365234375

Token 392: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.644463479053229e-05
    2. ' natt' → logprob: -10.625046730041504
    3. '(n' → logprob: -11.125046730041504
    4. 'nitt' → logprob: -12.500046730041504
    5. 'att' → logprob: -12.750046730041504
    6. 'nacht' → logprob: -15.250046730041504
    7. '[n' → logprob: -15.375046730041504
    8. '	n' → logprob: -16.250045776367188
    9. ')n' → logprob: -16.875045776367188
    10. 'nast' → logprob: -17.125045776367188

Token 393: 'att' (ID: 2002)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004635184071958065
    2. 'att' → logprob: -5.379635334014893
    3. '(n' → logprob: -11.754634857177734
    4. 't' → logprob: -13.504634857177734
    5. ' natt' → logprob: -13.754634857177734
    6. 'nitt' → logprob: -14.004634857177734
    7. '[n' → logprob: -14.254634857177734
    8. 'at' → logprob: -14.379634857177734
    9. '(att' → logprob: -14.754634857177734
    10. '   ' → logprob: -15.129634857177734

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00673360750079155
    2. ',h' → logprob: -5.006733417510986
    3. ' ,' → logprob: -11.881733894348145
    4. 'hq' → logprob: -12.381733894348145
    5. '(h' → logprob: -12.506733894348145
    6. ',n' → logprob: -12.881733894348145
    7. ',
' → logprob: -15.006733894348145
    8. ',q' → logprob: -16.506732940673828
    9. ',(' → logprob: -16.631732940673828
    10. ',[' → logprob: -16.631732940673828

Token 395: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009142052149400115
    2. ' nxt' → logprob: -7.000914096832275
    3. 'nx' → logprob: -12.875914573669434
    4. '	n' → logprob: -16.875913619995117
    5. ' n' → logprob: -17.500913619995117
    6. '[n' → logprob: -17.625913619995117
    7. '(n' → logprob: -17.750913619995117
    8. 'nth' → logprob: -17.875913619995117
    9. 'nj' → logprob: -18.250913619995117
    10. ' ' → logprob: -18.375913619995117

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008401192026212811
    2. ',n' → logprob: -7.125840187072754
    3. ' ,' → logprob: -10.875840187072754
    4. 'n' → logprob: -11.125840187072754
    5. ' nxt' → logprob: -14.000840187072754
    6. '(n' → logprob: -14.125840187072754
    7. ' n' → logprob: -15.500840187072754
    8. '[n' → logprob: -16.125839233398438
    9. ',node' → logprob: -17.500839233398438
    10. ')' → logprob: -17.500839233398438

Token 397: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024793429765850306
    2. ' nxt' → logprob: -6.002479553222656
    3. 'nx' → logprob: -13.252479553222656
    4. ' n' → logprob: -13.502479553222656
    5. '	n' → logprob: -16.127479553222656
    6. '[n' → logprob: -16.252479553222656
    7. ' ' → logprob: -16.502479553222656
    8. '(n' → logprob: -17.252479553222656
    9. ' nq' → logprob: -17.627479553222656
    10. '   ' → logprob: -17.752479553222656

Token 398: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -3.7146746763028204e-05
    2. 'c' → logprob: -11.37503719329834
    3. 'nc' → logprob: -12.00003719329834
    4. ' cost' → logprob: -12.12503719329834
    5. 'xt' → logprob: -12.37503719329834
    6. 'cot' → logprob: -13.00003719329834
    7. 'oc' → logprob: -13.37503719329834
    8. '_cost' → logprob: -13.87503719329834
    9. 'xc' → logprob: -13.87503719329834
    10. 'x' → logprob: -14.37503719329834

Token 399: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002619318547658622
    2. ')' → logprob: -8.500262260437012
    3. '))
' → logprob: -9.750262260437012
    4. ')))' → logprob: -15.875262260437012
    5. ')
' → logprob: -17.250261306762695
    6. ' ))' → logprob: -17.500261306762695
    7. '   ' → logprob: -18.500261306762695
    8. '))

' → logprob: -18.750261306762695
    9. '       ' → logprob: -19.000261306762695
    10. '));' → logprob: -19.125261306762695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 397
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 198
Tokens correctement prédits (top 10): 342
Précision stricte (1ère position): 45.09%
Précision adaptée (1ère position): 49.87%
Précision (top 10): 86.15%
================================================================================
