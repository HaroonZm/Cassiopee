================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
p=list(map(int,input().split()))
dp=[float('inf')]*(4)
dp[0]=0
for i in range(n):
  ndp=[float('inf')]*4
  for j in range(4):
    if dp[j]==float('inf'): continue
    # Option 1: flip pancake i alone if at ends (i=0 or i=n-1)
    if i==0 or i==n-1:
      for f in range(4):
        cost=abs(f-p[i])
        ndp[f]=min(ndp[f],dp[j]+cost)
    # Option 2: flip pancake i together with i+1 if possible
    if i<n-1:
      for f1 in range(4):
        for f2 in range(4):
          cost=abs(f1-p[i])+abs(f2-p[i+1])
          # skip invalid states to control dp size: to keep dp by pancake index only, we handle it stepwise
          # but as pancakes flipped together, handle only if i even or i odd
          # the problem is that flipping two pancakes at once affects two pancakes,
          # so we need to do transition by pairs, thus we process pairs in i iteration
          pass
  if i<n-1:
    # Process pairs
    ndp=[float('inf')]*4
    for j in range(4):
      if dp[j]==float('inf'): continue
      for f1 in range(4):
        for f2 in range(4):
          cost=abs(f1-p[i])+abs(f2-p[i+1])
          ndp2=[float('inf')]*4
          ndp2[f2]=dp[j]+cost
          ndp=f2>=0 and ndp or ndp
          ndp[f2]=min(ndp[f2],dp[j]+cost)
      for f in range(4):
        ndp[f]=min(ndp[f],dp[j]+abs(f-p[i]))
    dp=ndp
else:
  # for last pancake if unprocessed alone
  pass
print(sum(p))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0858265608549118
    2. ')' → logprob: -2.5858266353607178
    3. '()' → logprob: -5.085826396942139
    4. '())' → logprob: -8.335826873779297
    5. '(
' → logprob: -8.460826873779297
    6. '(

' → logprob: -9.835826873779297
    7. '```' → logprob: -10.460826873779297
    8. '<|end|>' → logprob: -11.085826873779297
    9. ''' → logprob: -11.210826873779297
    10. '))' → logprob: -11.335826873779297

Token 4: 'p' (ID: 79)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.308822751045227
    2. '+' → logprob: -1.683822751045227
    3. '*' → logprob: -2.0588226318359375
    4. 'for' → logprob: -2.3088226318359375
    5. 'i' → logprob: -2.6838226318359375
    6. '#' → logprob: -2.8088226318359375
    7. '\n' → logprob: -3.3088226318359375
    8. 's' → logprob: -3.4338226318359375
    9. '%' → logprob: -3.4338226318359375
    10. ''' → logprob: -4.0588226318359375

Token 5: '=list' (ID: 93413)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2328444868326187
    2. '+' → logprob: -2.732844591140747
    3. '=' → logprob: -2.732844591140747
    4. '**' → logprob: -4.357844352722168
    5. 'i' → logprob: -4.607844352722168
    6. '%' → logprob: -4.732844352722168
    7. '[' → logprob: -4.982844352722168
    8. '*' → logprob: -5.107844352722168
    9. '(' → logprob: -5.232844352722168
    10. ')' → logprob: -5.357844352722168

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007910476415418088
    2. '(p' → logprob: -7.500791072845459
    3. '(range' → logprob: -8.8757905960083
    4. '((' → logprob: -11.3757905960083
    5. '[(' → logprob: -11.3757905960083
    6. '[' → logprob: -11.7507905960083
    7. '```' → logprob: -11.8757905960083
    8. ' (' → logprob: -12.0007905960083
    9. '(
' → logprob: -12.1257905960083
    10. '(input' → logprob: -12.2507905960083

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1810092180967331
    2. '(' → logprob: -1.9310091733932495
    3. '(lambda' → logprob: -5.056009292602539
    4. '(input' → logprob: -5.181009292602539
    5. ')' → logprob: -5.806009292602539
    6. '[int' → logprob: -6.556009292602539
    7. '(str' → logprob: -6.806009292602539
    8. '<int' → logprob: -7.306009292602539
    9. 'int' → logprob: -7.431009292602539
    10. '<|end|>' → logprob: -7.806009292602539

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002438331488519907
    2. '(' → logprob: -6.377438545227051
    3. ',input' → logprob: -8.37743854522705
    4. '))' → logprob: -8.62743854522705
    5. ')' → logprob: -9.00243854522705
    6. '=input' → logprob: -10.00243854522705
    7. 'input' → logprob: -10.00243854522705
    8. '[input' → logprob: -10.37743854522705
    9. '(user' → logprob: -10.87743854522705
    10. '<input' → logprob: -11.62743854522705

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6180909276008606
    2. '())' → logprob: -1.4930908679962158
    3. '()))' → logprob: -1.4930908679962158
    4. '().' → logprob: -5.118091106414795
    5. '()));' → logprob: -6.493091106414795
    6. '()>' → logprob: -6.743091106414795
    7. '(' → logprob: -7.118091106414795
    8. '()-' → logprob: -7.743091106414795
    9. '())))' → logprob: -8.118090629577637
    10. ')' → logprob: -8.618090629577637

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004386558721307665
    2. 'strip' → logprob: -7.750438690185547
    3. 'rstrip' → logprob: -12.250438690185547
    4. ' split' → logprob: -12.750438690185547
    5. '(split' → logprob: -15.625438690185547
    6. 'spl' → logprob: -16.500438690185547
    7. ')' → logprob: -16.750438690185547
    8. 's' → logprob: -17.375438690185547
    9. '.split' → logprob: -18.250438690185547
    10. 'sp' → logprob: -18.375438690185547

Token 11: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1288755089044571
    2. '))' → logprob: -2.628875494003296
    3. '())' → logprob: -3.253875494003296
    4. ')' → logprob: -5.378875732421875
    5. '()' → logprob: -5.503875732421875
    6. '(' → logprob: -6.753875732421875
    7. '('' → logprob: -9.628875732421875
    8. '())))' → logprob: -9.753875732421875
    9. ')))' → logprob: -10.503875732421875
    10. '()));' → logprob: -10.628875732421875

Token 12: 'dp' (ID: 19037)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1945602893829346
    2. 'c' → logprob: -1.3195602893829346
    3. 'a' → logprob: -2.0695602893829346
    4. 'd' → logprob: -2.6945602893829346
    5. 'p' → logprob: -2.8195602893829346
    6. 'q' → logprob: -2.9445602893829346
    7. 'm' → logprob: -3.4445602893829346
    8. 'for' → logprob: -3.4445602893829346
    9. 'r' → logprob: -3.9445602893829346
    10. 'x' → logprob: -4.8195600509643555

Token 13: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030191836412996054
    2. '=' → logprob: -6.003019332885742
    3. '\[' → logprob: -8.003019332885742
    4. '=[' → logprob: -9.753019332885742
    5. ' =' → logprob: -9.878019332885742
    6. '[]' → logprob: -11.003019332885742
    7. '```' → logprob: -11.003019332885742
    8. '_' → logprob: -11.253019332885742
    9. '[:]' → logprob: -11.503019332885742
    10. '[i' → logprob: -11.628019332885742

Token 14: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002945132553577423
    2. '[' → logprob: -6.1279449462890625
    3. 'float' → logprob: -8.002944946289062
    4. '1' → logprob: -8.627944946289062
    5. '-' → logprob: -9.002944946289062
    6. 'False' → logprob: -9.377944946289062
    7. '[int' → logprob: -11.877944946289062
    8. '[-' → logprob: -12.002944946289062
    9. '10' → logprob: -12.377944946289062
    10. '[p' → logprob: -12.502944946289062

Token 15: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0031204370316118
    2. '(' → logprob: -6.128120422363281
    3. '('-' → logprob: -7.003120422363281
    4. '('+' → logprob: -11.753120422363281
    5. 'inf' → logprob: -12.003120422363281
    6. '("' → logprob: -12.878120422363281
    7. ''s' → logprob: -13.628120422363281
    8. '(in' → logprob: -13.628120422363281
    9. '('='' → logprob: -13.878120422363281
    10. ''' → logprob: -14.003120422363281

Token 16: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.004184417426586151
    2. '-inf' → logprob: -6.004184246063232
    3. ''in' → logprob: -6.504184246063232
    4. ''' → logprob: -9.12918472290039
    5. '-i' → logprob: -9.62918472290039
    6. ''i' → logprob: -11.25418472290039
    7. ''-' → logprob: -12.50418472290039
    8. 'INF' → logprob: -12.50418472290039
    9. '-' → logprob: -12.75418472290039
    10. '"' → logprob: -13.00418472290039

Token 17: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7527760863304138
    2. ')' → logprob: -0.8777760863304138
    3. ')])' → logprob: -2.8777761459350586
    4. '')]' → logprob: -3.1277761459350586
    5. '')' → logprob: -4.627776145935059
    6. ']' → logprob: -6.252776145935059
    7. '),' → logprob: -7.752776145935059
    8. ' )' → logprob: -7.752776145935059
    9. '']' → logprob: -8.377776145935059
    10. ',' → logprob: -9.127776145935059

Token 18: ']*(' (ID: 92627)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5656954646110535
    2. ']' → logprob: -0.9406954646110535
    3. ')' → logprob: -3.8156955242156982
    4. ']*' → logprob: -4.565695285797119
    5. ',' → logprob: -5.065695285797119
    6. ' for' → logprob: -6.190695285797119
    7. 'for' → logprob: -8.565695762634277
    8. ']+' → logprob: -8.565695762634277
    9. ']*(' → logprob: -8.815695762634277
    10. ',)' → logprob: -9.440695762634277

Token 19: '4' (ID: 19)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004754751571454108
    2. '100' → logprob: -8.750475883483887
    3. '(n' → logprob: -8.875475883483887
    4. ' n' → logprob: -9.625475883483887
    5. 'len' → logprob: -10.000475883483887
    6. '101' → logprob: -11.125475883483887
    7. 'p' → logprob: -11.625475883483887
    8. ')' → logprob: -11.875475883483887
    9. ')n' → logprob: -12.000475883483887
    10. '1' → logprob: -12.000475883483887

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034723745193332434
    2. '+' → logprob: -6.128472328186035
    3. ' )' → logprob: -7.503472328186035
    4. '5' → logprob: -7.878472328186035
    5. '0' → logprob: -8.378472328186035
    6. '+)' → logprob: -10.503472328186035
    7. ' +' → logprob: -10.503472328186035
    8. '))' → logprob: -10.753472328186035
    9. ')+' → logprob: -11.253472328186035
    10. ')n' → logprob: -12.253472328186035

Token 21: 'dp' (ID: 19037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4369983375072479
    2. 'dp' → logprob: -1.8119983673095703
    3. '+' → logprob: -2.8119983673095703
    4. '
' → logprob: -2.9369983673095703
    5. 'for' → logprob: -3.8119983673095703
    6. ')' → logprob: -4.31199836730957
    7. '(dp' → logprob: -4.43699836730957
    8. ' for' → logprob: -4.68699836730957
    9. ' dp' → logprob: -5.31199836730957
    10. '+
' → logprob: -5.81199836730957

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05275946855545044
    2. '<|end|>' → logprob: -3.3027594089508057
    3. ')' → logprob: -4.927759647369385
    4. '[
' → logprob: -6.302759647369385
    5. '<|end|>' → logprob: -6.427759647369385
    6. '[:]' → logprob: -7.302759647369385
    7. '```' → logprob: -7.302759647369385
    8. '
' → logprob: -7.927759647369385
    9. ']' → logprob: -8.177759170532227
    10. '[]' → logprob: -8.302759170532227

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001510335598140955
    2. '1' → logprob: -7.626510143280029
    3. '3' → logprob: -7.626510143280029
    4. 'p' → logprob: -8.001510620117188
    5. '-' → logprob: -9.751510620117188
    6. ' ' → logprob: -9.876510620117188
    7. '2' → logprob: -10.126510620117188
    8. 'n' → logprob: -10.251510620117188
    9. ']' → logprob: -12.439010620117188
    10. ' -' → logprob: -13.189010620117188

Token 24: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045247431844472885
    2. ']=' → logprob: -3.1702473163604736
    3. ' ]' → logprob: -6.670247554779053
    4. ']+=' → logprob: -7.795247554779053
    5. ')' → logprob: -8.545247077941895
    6. ']==' → logprob: -8.795247077941895
    7. ')]' → logprob: -9.545247077941895
    8. '])' → logprob: -10.170247077941895
    9. ']+' → logprob: -10.420247077941895
    10. '=' → logprob: -10.670247077941895

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -10.875020027160645
    3. 'p' → logprob: -14.750020027160645
    4. '1' → logprob: -15.000020027160645
    5. '-' → logprob: -15.625020027160645
    6. 'n' → logprob: -16.875019073486328
    7. '00' → logprob: -17.625019073486328
    8. '100' → logprob: -18.125019073486328
    9. 'float' → logprob: -18.375019073486328
    10. '[' → logprob: -18.437519073486328

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5984214544296265
    2. '<|end|>' → logprob: -1.3484214544296265
    3. '\n' → logprob: -2.223421573638916
    4. 'for' → logprob: -3.348421573638916
    5. ' for' → logprob: -3.598421573638916
    6. '+' → logprob: -5.598421573638916
    7. '<|end|>' → logprob: -5.723421573638916
    8. ' 
' → logprob: -5.848421573638916
    9. ' ' → logprob: -5.973421573638916
    10. '
' → logprob: -6.723421573638916

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.432479590177536
    2. ' for' → logprob: -1.0574796199798584
    3. '\n' → logprob: -6.307479381561279
    4. '
' → logprob: -6.807479381561279
    5. '<|end|>' → logprob: -7.432479381561279
    6. '```' → logprob: -9.057479858398438
    7. 'n' → logprob: -10.432479858398438
    8. '<|end|>' → logprob: -10.807479858398438
    9. '\' → logprob: -11.307479858398438
    10. 'newline' → logprob: -11.557479858398438

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01434284821152687
    2. 'i' → logprob: -4.389342784881592
    3. ' p' → logprob: -6.889342784881592
    4. ' x' → logprob: -7.889342784881592
    5. ' ' → logprob: -8.63934326171875
    6. ' _' → logprob: -9.51434326171875
    7. '_' → logprob: -9.76434326171875
    8. 'p' → logprob: -10.13934326171875
    9. 'x' → logprob: -10.51434326171875
    10. ' v' → logprob: -11.26434326171875

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07932628691196442
    2. 'in' → logprob: -2.5793263912200928
    3. '+' → logprob: -8.454326629638672
    4. ' ' → logprob: -8.704326629638672
    5. '	in' → logprob: -10.579326629638672
    6. '1' → logprob: -11.829326629638672
    7. 'range' → logprob: -12.454326629638672
    8. ')' → logprob: -12.454326629638672
    9. ',' → logprob: -13.079326629638672
    10. '```' → logprob: -13.204326629638672

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20154617726802826
    2. 'range' → logprob: -1.7015461921691895
    3. ' p' → logprob: -9.201545715332031
    4. 'p' → logprob: -10.701545715332031
    5. ' ' → logprob: -12.326545715332031
    6. '	range' → logprob: -13.326545715332031
    7. 'n' → logprob: -13.951545715332031
    8. '(range' → logprob: -13.951545715332031
    9. ' xrange' → logprob: -15.076545715332031
    10. '   ' → logprob: -15.576545715332031

Token 31: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01567193679511547
    2. '(n' → logprob: -4.390671730041504
    3. '(len' → logprob: -5.765671730041504
    4. ' (' → logprob: -10.765671730041504
    5. '(range' → logprob: -14.390671730041504
    6. '(p' → logprob: -14.515671730041504
    7. '(i' → logprob: -14.890671730041504
    8. '((' → logprob: -14.890671730041504
    9. ' ' → logprob: -15.140671730041504
    10. '(
' → logprob: -15.890671730041504

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003680005669593811
    2. '+' → logprob: -6.503680229187012
    3. '):
' → logprob: -7.003680229187012
    4. '-' → logprob: -7.003680229187012
    5. ')' → logprob: -8.128680229187012
    6. ' ):' → logprob: -10.003680229187012
    7. ':' → logprob: -12.753680229187012
    8. '):
' → logprob: -13.003680229187012
    9. ' ' → logprob: -13.503680229187012
    10. ',' → logprob: -13.503680229187012

Token 33: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9342635869979858
    2. ' dp' → logprob: -1.4342635869979858
    3. ' ' → logprob: -1.6842635869979858
    4. ' for' → logprob: -2.4342637062072754
    5. '<|end|>' → logprob: -3.8092637062072754
    6. '    ' → logprob: -4.059263706207275
    7. 'dp' → logprob: -4.434263706207275
    8. '	dp' → logprob: -4.559263706207275
    9. '\t' → logprob: -5.434263706207275
    10. '```' → logprob: -5.559263706207275

Token 34: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1938505321741104
    2. ' for' → logprob: -1.9438505172729492
    3. 'dp' → logprob: -3.443850517272949
    4. ' dp' → logprob: -7.568850517272949
    5. ' ' → logprob: -8.69385051727295
    6. '[' → logprob: -8.81885051727295
    7. '   ' → logprob: -9.06885051727295
    8. 'new' → logprob: -10.19385051727295
    9. '	for' → logprob: -10.56885051727295
    10. 'p' → logprob: -10.94385051727295

Token 35: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008572661899961531
    2. '=' → logprob: -7.625857353210449
    3. ' =' → logprob: -8.25085735321045
    4. '=p' → logprob: -10.37585735321045
    5. '[' → logprob: -10.62585735321045
    6. '=[' → logprob: -10.62585735321045
    7. ' p' → logprob: -11.75085735321045
    8. ' =[' → logprob: -12.25085735321045
    9. '=[]' → logprob: -13.12585735321045
    10. '[p' → logprob: -13.25085735321045

Token 36: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5695067048072815
    2. '=' → logprob: -1.0695066452026367
    3. '=[' → logprob: -2.8195066452026367
    4. '[' → logprob: -3.9445066452026367
    5. ' =[' → logprob: -4.444506645202637
    6. '=[]' → logprob: -9.194506645202637
    7. ' ' → logprob: -9.819506645202637
    8. ' [' → logprob: -9.944506645202637
    9. '=['' → logprob: -10.944506645202637
    10. '[:]' → logprob: -11.069506645202637

Token 37: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0008826419361867011
    2. '0' → logprob: -7.125882625579834
    3. ' float' → logprob: -10.125883102416992
    4. 'inf' → logprob: -11.125883102416992
    5. ']' → logprob: -11.875883102416992
    6. ')' → logprob: -12.500883102416992
    7. '[' → logprob: -12.625883102416992
    8. 'dp' → logprob: -13.250883102416992
    9. '```' → logprob: -13.250883102416992
    10. ',float' → logprob: -14.125883102416992

Token 38: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00020497082732617855
    2. '(' → logprob: -8.500205039978027
    3. '(in' → logprob: -14.250205039978027
    4. ' ('' → logprob: -14.625205039978027
    5. ''s' → logprob: -15.625205039978027
    6. '("' → logprob: -15.750205039978027
    7. ''in' → logprob: -17.12520408630371
    8. '(\'' → logprob: -17.62520408630371
    9. '(`' → logprob: -17.75020408630371
    10. ''' → logprob: -17.75020408630371

Token 39: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.4140441635390744e-05
    2. ''in' → logprob: -11.250014305114746
    3. ''' → logprob: -14.500014305114746
    4. ')' → logprob: -15.625014305114746
    5. ' inf' → logprob: -15.875014305114746
    6. '')' → logprob: -16.62501335144043
    7. 'in' → logprob: -17.00001335144043
    8. '.inf' → logprob: -17.62501335144043
    9. '+' → logprob: -17.87501335144043
    10. ''s' → logprob: -18.00001335144043

Token 40: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16348932683467865
    2. ')]' → logprob: -2.03848934173584
    3. '')' → logprob: -4.53848934173584
    4. '')]' → logprob: -4.78848934173584
    5. '']' → logprob: -7.53848934173584
    6. ' ' → logprob: -8.03848934173584
    7. ')])' → logprob: -8.66348934173584
    8. ']' → logprob: -8.91348934173584
    9. '()' → logprob: -9.03848934173584
    10. '('' → logprob: -9.41348934173584

Token 41: ']*' (ID: 18579)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.8012850284576416
    2. ')' → logprob: -0.9262850284576416
    3. ')*(' → logprob: -2.6762850284576416
    4. ']*(' → logprob: -3.0512850284576416
    5. ')*' → logprob: -3.5512850284576416
    6. ']' → logprob: -5.4262847900390625
    7. ']*' → logprob: -5.5512847900390625
    8. ' ' → logprob: -6.3012847900390625
    9. '*' → logprob: -9.676284790039062
    10. '```' → logprob: -9.926284790039062

Token 42: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.001940057729370892
    2. '(' → logprob: -6.2519402503967285
    3. ' ' → logprob: -11.50193977355957
    4. '```' → logprob: -14.12693977355957
    5. ' (' → logprob: -15.75193977355957
    6. '5' → logprob: -16.00193977355957
    7. '3' → logprob: -16.81443977355957
    8. '４' → logprob: -16.93943977355957
    9. '`' → logprob: -17.06443977355957
    10. '{' → logprob: -17.06443977355957

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5678079128265381
    2. ' for' → logprob: -1.067807912826538
    3. 'for' → logprob: -2.942807912826538
    4. '<|end|>' → logprob: -3.567807912826538
    5. '	for' → logprob: -5.067808151245117
    6. '  ' → logprob: -7.317808151245117
    7. ' 
' → logprob: -8.192808151245117
    8. '  
' → logprob: -8.317808151245117
    9. ' ' → logprob: -8.692808151245117
    10. '[' → logprob: -8.817808151245117

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052068281918764114
    2. ' for' → logprob: -3.0520682334899902
    3. ' ' → logprob: -5.67706823348999
    4. '	for' → logprob: -10.052068710327148
    5. '```' → logprob: -12.427068710327148
    6. '   ' → logprob: -12.552068710327148
    7. '  ' → logprob: -15.302068710327148
    8. 'dp' → logprob: -16.42706871032715
    9. '`' → logprob: -16.92706871032715
    10. '``' → logprob: -17.42706871032715

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04868127033114433
    2. 'j' → logprob: -3.0486812591552734
    3. ' ' → logprob: -10.173681259155273
    4. ' s' → logprob: -10.423681259155273
    5. ' k' → logprob: -12.048681259155273
    6. ' x' → logprob: -12.548681259155273
    7. ' mask' → logprob: -12.923681259155273
    8. ' v' → logprob: -13.173681259155273
    9. 'k' → logprob: -13.548681259155273
    10. 's' → logprob: -13.673681259155273

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03454241529107094
    2. 'in' → logprob: -3.4095423221588135
    3. ' ' → logprob: -7.034542560577393
    4. '  ' → logprob: -12.159542083740234
    5. '	in' → logprob: -12.909542083740234
    6. '<|end|>' → logprob: -13.409542083740234
    7. '+' → logprob: -13.534542083740234
    8. 'range' → logprob: -13.784542083740234
    9. 'j' → logprob: -14.284542083740234
    10. ' j' → logprob: -14.909542083740234

Token 48: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024774393532425165
    2. ' range' → logprob: -6.002477645874023
    3. '4' → logprob: -13.877477645874023
    4. ' ' → logprob: -14.377477645874023
    5. '(range' → logprob: -15.127477645874023
    6. '(' → logprob: -16.877477645874023
    7. '	range' → logprob: -19.002477645874023
    8. '[' → logprob: -19.502477645874023
    9. '```' → logprob: -19.502477645874023
    10. 'ran' → logprob: -19.752477645874023

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008071291376836598
    2. '4' → logprob: -7.125807285308838
    3. ' (' → logprob: -13.87580680847168
    4. ' ' → logprob: -14.50080680847168
    5. '(len' → logprob: -15.00080680847168
    6. '(
' → logprob: -15.12580680847168
    7. '(j' → logprob: -15.62580680847168
    8. ')' → logprob: -15.87580680847168
    9. '```' → logprob: -16.25080680847168
    10. '(min' → logprob: -16.62580680847168

Token 50: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00015062130114529282
    2. ' ' → logprob: -9.500150680541992
    3. '3' → logprob: -9.625150680541992
    4. '0' → logprob: -12.500150680541992
    5. '1' → logprob: -13.000150680541992
    6. 'j' → logprob: -13.250150680541992
    7. '5' → logprob: -15.000150680541992
    8. '(' → logprob: -15.250150680541992
    9. 'i' → logprob: -15.250150680541992
    10. '2' → logprob: -15.375150680541992

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011440464295446873
    2. '):
' → logprob: -4.511440277099609
    3. ')' → logprob: -8.01144027709961
    4. ' ):' → logprob: -10.63644027709961
    5. ' ' → logprob: -10.76144027709961
    6. ':' → logprob: -12.38644027709961
    7. '):
' → logprob: -12.51144027709961
    8. '+' → logprob: -12.63644027709961
    9. '):

' → logprob: -13.38644027709961
    10. 'if' → logprob: -14.26144027709961

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22490514814853668
    2. ' for' → logprob: -2.099905252456665
    3. 'if' (adapté à ' if') → logprob: -3.099905252456665
    4. ' ' → logprob: -3.974905252456665
    5. 'for' → logprob: -4.599905014038086
    6. '       ' → logprob: -6.474905014038086
    7. '   ' → logprob: -6.599905014038086
    8. '    ' → logprob: -7.224905014038086
    9. '     ' → logprob: -7.349905014038086
    10. '  ' → logprob: -7.974905014038086

Token 54: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5972931385040283
    2. ' j' → logprob: -1.5972931385040283
    3. 'dp' → logprob: -1.9722931385040283
    4. 'j' → logprob: -2.8472931385040283
    5. ' p' → logprob: -3.2222931385040283
    6. 'p' → logprob: -4.847292900085449
    7. ' ' → logprob: -6.347292900085449
    8. '(dp' → logprob: -8.97229290008545
    9. '	dp' → logprob: -9.22229290008545
    10. ' i' → logprob: -9.59729290008545

Token 55: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.176947600673884e-05
    2. 'j' → logprob: -11.125021934509277
    3. '[' → logprob: -12.000021934509277
    4. '[
' → logprob: -14.625021934509277
    5. '```' → logprob: -16.25002098083496
    6. '
' → logprob: -16.37502098083496
    7. ' [' → logprob: -16.37502098083496
    8. '[i' → logprob: -17.12502098083496
    9. '[js' → logprob: -18.00002098083496
    10. '	j' → logprob: -18.50002098083496

Token 56: ']==' (ID: 34128)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1770043969154358
    2. '<' → logprob: -2.427004337310791
    3. '==' → logprob: -3.552004337310791
    4. ']!=' → logprob: -4.052004337310791
    5. ']' → logprob: -4.802004337310791
    6. ')' → logprob: -4.802004337310791
    7. ' !=' → logprob: -4.927004337310791
    8. ')!=' → logprob: -6.677004337310791
    9. ']==' → logprob: -7.177004337310791
    10. ' ]' → logprob: -7.927004337310791

Token 57: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0003317705122753978
    2. ' float' → logprob: -8.12533187866211
    3. '0' → logprob: -10.62533187866211
    4. '	float' → logprob: -12.62533187866211
    5. '=float' → logprob: -12.75033187866211
    6. '<float' → logprob: -13.00033187866211
    7. ' ' → logprob: -14.00033187866211
    8. ',float' → logprob: -14.37533187866211
    9. 'inf' → logprob: -14.75033187866211
    10. '(float' → logprob: -15.00033187866211

Token 58: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.8828707804204896e-05
    2. '(' → logprob: -10.500048637390137
    3. ''in' → logprob: -11.500048637390137
    4. ' ('' → logprob: -12.500048637390137
    5. ''s' → logprob: -12.750048637390137
    6. '(in' → logprob: -13.125048637390137
    7. ' ' → logprob: -14.125048637390137
    8. ''' → logprob: -14.250048637390137
    9. '("' → logprob: -15.000048637390137
    10. 'inf' → logprob: -15.375048637390137

Token 59: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. ' inf' → logprob: -14.875
    3. ' ' → logprob: -18.75
    4. '')' → logprob: -19.0
    5. ')' → logprob: -19.75
    6. ''' → logprob: -20.125
    7. '

' → logprob: -20.25
    8. '```' → logprob: -20.625
    9. 'in' → logprob: -21.125
    10. '0' → logprob: -21.5

Token 60: ''):' (ID: 83830)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5099467635154724
    2. ')' → logprob: -1.3849468231201172
    3. ''):' → logprob: -2.009946823120117
    4. '):
' → logprob: -4.884946823120117
    5. ''):
' → logprob: -5.509946823120117
    6. '')' → logprob: -6.134946823120117
    7. ' ' → logprob: -7.384946823120117
    8. '   ' → logprob: -8.759946823120117
    9. ' ):' → logprob: -8.884946823120117
    10. '"):' → logprob: -9.009946823120117

Token 61: ' continue' (ID: 4901)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.1949368566274643
    2. ' continue' → logprob: -2.444936752319336
    3. 'continue' → logprob: -2.569936752319336
    4. '       ' → logprob: -5.194936752319336
    5. '	continue' → logprob: -5.569936752319336
    6. '   ' → logprob: -5.569936752319336
    7. ' ' → logprob: -8.819936752319336
    8. '    ' → logprob: -9.194936752319336
    9. '	' → logprob: -9.194936752319336
    10. '```' → logprob: -9.694936752319336

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0247117280960083
    2. '  
' → logprob: -1.0247117280960083
    3. '   ' → logprob: -2.2747116088867188
    4. '    
' → logprob: -2.7747116088867188
    5. '\n' → logprob: -3.5247116088867188
    6. ' ' → logprob: -3.7747116088867188
    7. ' 
' → logprob: -3.7747116088867188
    8. '   
' → logprob: -3.7747116088867188
    9. '  ' → logprob: -5.024711608886719
    10. '<|end|>' → logprob: -5.399711608886719

Token 63: '   ' (ID: 271)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -1.1557964086532593
    2. '
' → logprob: -1.4057964086532593
    3. ' 
' → logprob: -1.9057964086532593
    4. '   ' → logprob: -2.155796527862549
    5. '    
' → logprob: -2.405796527862549
    6. ' ' → logprob: -3.405796527862549
    7. '   
' → logprob: -3.655796527862549
    8. '  ' → logprob: -4.905796527862549
    9. '<|end|>' → logprob: -5.155796527862549
    10. '\n' → logprob: -5.655796527862549

Token 64: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1213262528181076
    2. 'for' → logprob: -2.996326208114624
    3. ' if' → logprob: -3.371326208114624
    4. '   ' → logprob: -3.996326208114624
    5. 'if' → logprob: -5.746326446533203
    6. ' nd' → logprob: -5.996326446533203
    7. '    
' → logprob: -6.496326446533203
    8. ' ' → logprob: -6.746326446533203
    9. 'nd' → logprob: -7.121326446533203
    10. '  ' → logprob: -7.246326446533203

Token 65: ' Option' (ID: 17796)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30171504616737366
    2. 'for' → logprob: -1.6767150163650513
    3. ' if' → logprob: -3.176715135574341
    4. 'if' → logprob: -4.301714897155762
    5. ' nd' → logprob: -5.176714897155762
    6. ' ' → logprob: -5.426714897155762
    7. '   ' → logprob: -5.426714897155762
    8. 'nd' → logprob: -5.801714897155762
    9. 'dp' → logprob: -8.676714897155762
    10. '  ' → logprob: -9.176714897155762

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08911657333374023
    2. '1' → logprob: -2.5891165733337402
    3. '0' → logprob: -5.96411657333374
    4. ' =' → logprob: -6.71411657333374
    5. '  ' → logprob: -6.71411657333374
    6. '=' → logprob: -6.83911657333374
    7. 's' → logprob: -6.96411657333374
    8. '    ' → logprob: -7.21411657333374
    9. 'A' → logprob: -7.58911657333374
    10. '[' → logprob: -7.71411657333374

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4775160253047943
    2. ' ' → logprob: -1.3525160551071167
    3. '=' → logprob: -2.852515935897827
    4. '0' → logprob: -2.977515935897827
    5. 'A' → logprob: -5.727516174316406
    6. ' =' → logprob: -6.102516174316406
    7. 'for' → logprob: -6.102516174316406
    8. '[' → logprob: -6.852516174316406
    9. ' for' → logprob: -7.227516174316406
    10. ' A' → logprob: -7.852516174316406

Token 68: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4192744791507721
    2. ':' → logprob: -1.9192744493484497
    3. '<|end|>' → logprob: -2.7942745685577393
    4. '    
' → logprob: -3.0442745685577393
    5. '  
' → logprob: -3.6692745685577393
    6. '     
' → logprob: -3.9192745685577393
    7. '   
' → logprob: -4.66927433013916
    8. '   ' → logprob: -5.04427433013916
    9. '    ' → logprob: -5.54427433013916
    10. ' ' → logprob: -5.79427433013916

Token 69: ' flip' (ID: 29130)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.07786846905946732
    2. 'nd' → logprob: -3.2028684616088867
    3. ' dp' → logprob: -3.9528684616088867
    4. ' not' → logprob: -5.452868461608887
    5. ' #' → logprob: -5.577868461608887
    6. '#' → logprob: -6.577868461608887
    7. ' no' → logprob: -6.827868461608887
    8. ' ' → logprob: -6.952868461608887
    9. ' skip' → logprob: -7.327868461608887
    10. 'dp' → logprob: -7.327868461608887

Token 70: ' pancake' (ID: 158477)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.781944751739502
    2. ' ' → logprob: -2.031944751739502
    3. ' p' → logprob: -2.031944751739502
    4. 'dp' → logprob: -2.281944751739502
    5. ' j' → logprob: -3.281944751739502
    6. '[' → logprob: -3.406944751739502
    7. 'p' → logprob: -3.531944751739502
    8. ' the' → logprob: -4.781944751739502
    9. ')' → logprob: -4.906944751739502
    10. '(dp' → logprob: -5.156944751739502

Token 71: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.648041307926178
    2. '[' → logprob: -1.8980412483215332
    3. '   ' → logprob: -2.773041248321533
    4. 's' → logprob: -2.773041248321533
    5. ' dp' → logprob: -2.898041248321533
    6. '0' → logprob: -3.398041248321533
    7. 'dp' → logprob: -3.523041248321533
    8. '[j' → logprob: -3.773041248321533
    9. ' if' → logprob: -4.523041248321533
    10. ' for' → logprob: -5.398041248321533

Token 72: ' alone' (ID: 11238)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6567457318305969
    2. ' ' → logprob: -2.156745672225952
    3. '
' → logprob: -2.281745672225952
    4. '  
' → logprob: -3.281745672225952
    5. ' if' → logprob: -3.406745672225952
    6. '<|end|>' → logprob: -3.406745672225952
    7. ' ,' → logprob: -3.531745672225952
    8. '    
' → logprob: -3.781745672225952
    9. '   ' → logprob: -3.906745672225952
    10. '     
' → logprob: -4.531745910644531

Token 73: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8692183494567871
    2. '
' → logprob: -1.244218349456787
    3. '  
' → logprob: -2.244218349456787
    4. '    
' → logprob: -2.869218349456787
    5. ' nd' → logprob: -3.494218349456787
    6. ' ' → logprob: -4.119218349456787
    7. 'nd' → logprob: -4.244218349456787
    8. '\n' → logprob: -4.369218349456787
    9. '  ' → logprob: -4.619218349456787
    10. '   
' → logprob: -4.619218349456787

Token 74: ' at' (ID: 540)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3125120997428894
    2. 'p' → logprob: -1.9375121593475342
    3. ' j' → logprob: -2.437512159347534
    4. ' p' → logprob: -4.187511920928955
    5. '(p' → logprob: -4.937511920928955
    6. '(j' → logprob: -5.187511920928955
    7. ' (' → logprob: -5.312511920928955
    8. 'i' → logprob: -6.437511920928955
    9. ' ' → logprob: -6.937511920928955
    10. ' i' → logprob: -7.687511920928955

Token 75: ' ends' (ID: 17095)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.9906219244003296
    2. ' j' → logprob: -1.4906219244003296
    3. ' least' → logprob: -1.7406219244003296
    4. 'j' → logprob: -2.490622043609619
    5. 'i' → logprob: -3.240622043609619
    6. ' ' → logprob: -3.365622043609619
    7. ' i' → logprob: -3.615622043609619
    8. 'most' → logprob: -4.615622043609619
    9. 'p' → logprob: -5.365622043609619
    10. '```' → logprob: -5.615622043609619

Token 76: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6813068389892578
    2. ' and' → logprob: -1.4313068389892578
    3. ' or' → logprob: -1.8063068389892578
    4. ':' → logprob: -4.306306838989258
    5. ',' → logprob: -4.431306838989258
    6. '   ' → logprob: -4.431306838989258
    7. '  
' → logprob: -4.806306838989258
    8. ' if' → logprob: -4.931306838989258
    9. '<|end|>' → logprob: -4.931306838989258
    10. '  ' → logprob: -5.431306838989258

Token 77: 'i' (ID: 72)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0169999599456787
    2. 'j' → logprob: -1.1419999599456787
    3. ' i' → logprob: -1.8919999599456787
    4. 'i' → logprob: -2.1419999599456787
    5. ' (' → logprob: -4.017000198364258
    6. ')' → logprob: -4.517000198364258
    7. ' ' → logprob: -5.142000198364258
    8. '(i' → logprob: -5.517000198364258
    9. ' and' → logprob: -5.642000198364258
    10. '0' → logprob: -6.642000198364258

Token 78: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08181639015674591
    2. ' ==' → logprob: -3.0818164348602295
    3. ' in' → logprob: -4.08181619644165
    4. '>=' → logprob: -5.83181619644165
    5. '<=' → logprob: -5.83181619644165
    6. 'in' → logprob: -6.08181619644165
    7. '+' → logprob: -6.70681619644165
    8. ' ' → logprob: -6.83181619644165
    9. '<' → logprob: -7.08181619644165
    10. '>' → logprob: -7.20681619644165

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005107814911752939
    2. ' ' → logprob: -5.880107879638672
    3. 'n' → logprob: -6.130107879638672
    4. ' n' → logprob: -9.380107879638672
    5. 'j' → logprob: -11.380107879638672
    6. ')' → logprob: -11.630107879638672
    7. ' or' → logprob: -12.505107879638672
    8. '1' → logprob: -13.067607879638672
    9. '<n' → logprob: -13.630107879638672
    10. '==' → logprob: -13.755107879638672

Token 80: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.035159364342689514
    2. ' and' → logprob: -4.160159587860107
    3. ' ' → logprob: -4.535159587860107
    4. 'or' → logprob: -4.910159587860107
    5. ')' → logprob: -7.785159587860107
    6. 'and' → logprob: -7.910159587860107
    7. ' )' → logprob: -10.53515911102295
    8. '0' → logprob: -11.28515911102295
    9. ' o' → logprob: -12.16015911102295
    10. ' if' → logprob: -12.78515911102295

Token 81: ' i' (ID: 575)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6562005877494812
    2. 'n' → logprob: -1.031200647354126
    3. 'i' → logprob: -2.531200647354126
    4. ' i' → logprob: -3.156200647354126
    5. ' ' → logprob: -6.281200408935547
    6. '0' → logprob: -7.906200408935547
    7. 'j' → logprob: -9.656200408935547
    8. ')' → logprob: -10.531200408935547
    9. '(n' → logprob: -11.156200408935547
    10. ' (' → logprob: -11.156200408935547

Token 82: '=n' (ID: 47985)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09440548717975616
    2. ' ==' → logprob: -2.96940541267395
    3. '0' → logprob: -3.96940541267395
    4. ' ' → logprob: -4.594405651092529
    5. ' in' → logprob: -5.344405651092529
    6. ')' → logprob: -6.219405651092529
    7. ' or' → logprob: -7.094405651092529
    8. 'in' → logprob: -8.094405174255371
    9. '=' → logprob: -8.219405174255371
    10. ')==' → logprob: -8.469405174255371

Token 83: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015417927876114845
    2. ' -' → logprob: -4.26541805267334
    3. '1' → logprob: -7.26541805267334
    4. ' ' → logprob: -7.76541805267334
    5. ')' → logprob: -9.39041805267334
    6. ' or' → logprob: -11.51541805267334
    7. ' )' → logprob: -12.14041805267334
    8. ')-' → logprob: -12.14041805267334
    9. '-i' → logprob: -12.39041805267334
    10. '```' → logprob: -12.51541805267334

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047952806926332414
    2. ' ' → logprob: -7.750479698181152
    3. ')' → logprob: -10.750479698181152
    4. '2' → logprob: -11.000479698181152
    5. '-' → logprob: -12.500479698181152
    6. '```' → logprob: -13.875479698181152
    7. 'i' → logprob: -14.437979698181152
    8. '<|end|>' → logprob: -14.687979698181152
    9. '   ' → logprob: -14.937979698181152
    10. '3' → logprob: -15.000479698181152

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2509790360927582
    2. ' and' → logprob: -1.8759790658950806
    3. '):' → logprob: -3.000978946685791
    4. 'and' → logprob: -4.875978946685791
    5. ' or' → logprob: -5.000978946685791
    6. ' ' → logprob: -6.250978946685791
    7. ' )' → logprob: -6.375978946685791
    8. '):
' → logprob: -8.12597942352295
    9. '),' → logprob: -8.12597942352295
    10. ',' → logprob: -9.50097942352295

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20517729222774506
    2. ' ' → logprob: -2.7051773071289062
    3. '<|end|>' → logprob: -3.0801773071289062
    4. '\n' → logprob: -3.7051773071289062
    5. '  
' → logprob: -3.8301773071289062
    6. '
' → logprob: -4.955177307128906
    7. '  ' → logprob: -5.705177307128906
    8. '    ' → logprob: -5.830177307128906
    9. '    
' → logprob: -5.955177307128906
    10. '     ' → logprob: -6.330177307128906

Token 87: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5085541605949402
    2. '   ' → logprob: -1.758554220199585
    3. '<|end|>' → logprob: -1.758554220199585
    4. '    ' → logprob: -4.258553981781006
    5. ' if' → logprob: -4.258553981781006
    6. 'if' (adapté à ' if') → logprob: -5.133553981781006
    7. '  ' → logprob: -5.258553981781006
    8. ' 
' → logprob: -5.633553981781006
    9. '<|end|>' → logprob: -6.258553981781006
    10. '\n' → logprob: -6.383553981781006

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05534686520695686
    2. 'i' → logprob: -2.930346965789795
    3. ' (' → logprob: -8.305346488952637
    4. '(i' → logprob: -8.680346488952637
    5. ' ' → logprob: -10.555346488952637
    6. '(' → logprob: -11.430346488952637
    7. ' ' → logprob: -12.555346488952637
    8. ' j' → logprob: -13.555346488952637
    9. '	i' → logprob: -13.555346488952637
    10. 'j' → logprob: -13.805346488952637

Token 89: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10805470496416092
    2. ' ==' → logprob: -2.3580546379089355
    3. '0' → logprob: -5.6080546379089355
    4. ' ' → logprob: -5.8580546379089355
    5. ' in' → logprob: -6.7330546379089355
    6. 'in' → logprob: -10.108055114746094
    7. '<' → logprob: -11.233055114746094
    8. '=' → logprob: -11.858055114746094
    9. '==
' → logprob: -11.858055114746094
    10. '```' → logprob: -12.358055114746094

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036025596782565117
    2. ' ' → logprob: -5.628602504730225
    3. 'n' → logprob: -13.378602981567383
    4. ' n' → logprob: -15.003602981567383
    5. '<|end|>' → logprob: -15.378602981567383
    6. ' ' → logprob: -16.378602981567383
    7. '۰' → logprob: -16.628602981567383
    8. ' or' → logprob: -17.691102981567383
    9. '  ' → logprob: -17.691102981567383
    10. '...' → logprob: -17.878602981567383

Token 91: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01743500679731369
    2. 'or' → logprob: -4.767435073852539
    3. ' and' → logprob: -5.017435073852539
    4. ' ' → logprob: -6.642435073852539
    5. 'and' → logprob: -7.142435073852539
    6. ':' → logprob: -9.767435073852539
    7. '  ' → logprob: -13.392435073852539
    8. ')' → logprob: -13.392435073852539
    9. '	or' → logprob: -13.517435073852539
    10. ' :' → logprob: -13.892435073852539

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20148234069347382
    2. 'i' → logprob: -1.7014822959899902
    3. ' ' → logprob: -9.951482772827148
    4. '   ' → logprob: -11.701482772827148
    5. '	i' → logprob: -12.576482772827148
    6. ' ' → logprob: -12.826482772827148
    7. ' (' → logprob: -13.326482772827148
    8. '  ' → logprob: -13.451482772827148
    9. '    ' → logprob: -13.826482772827148
    10. '(i' → logprob: -14.451482772827148

Token 93: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005479318089783192
    2. ' ==' → logprob: -5.255479335784912
    3. '==
' → logprob: -9.880478858947754
    4. '=n' → logprob: -10.005478858947754
    5. '==(' → logprob: -10.005478858947754
    6. 'n' → logprob: -10.130478858947754
    7. '<n' → logprob: -10.505478858947754
    8. ' ' → logprob: -12.005478858947754
    9. '>=' → logprob: -12.005478858947754
    10. ' n' → logprob: -12.505478858947754

Token 94: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005296485032886267
    2. ' n' → logprob: -5.38029670715332
    3. ' ' → logprob: -7.38029670715332
    4. '0' → logprob: -11.25529670715332
    5. '   ' → logprob: -11.50529670715332
    6. '1' → logprob: -11.75529670715332
    7. '4' → logprob: -12.00529670715332
    8. '(n' → logprob: -12.38029670715332
    9. '{' → logprob: -13.00529670715332
    10. '	n' → logprob: -13.75529670715332

Token 95: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004230475169606507
    2. ' -' → logprob: -7.875422954559326
    3. '1' → logprob: -10.500423431396484
    4. ' ' → logprob: -11.125423431396484
    5. '   ' → logprob: -15.500423431396484
    6. '  ' → logprob: -15.750423431396484
    7. '−' → logprob: -16.500423431396484
    8. '<|end|>' → logprob: -16.750423431396484
    9. '–' → logprob: -17.000423431396484
    10. '()-' → logprob: -17.250423431396484

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001217813478433527
    2. ' ' → logprob: -9.1251220703125
    3. '2' → logprob: -11.7501220703125
    4. 'i' → logprob: -12.6251220703125
    5. '-' → logprob: -14.5001220703125
    6. '<|end|>' → logprob: -15.1251220703125
    7. '```' → logprob: -15.5001220703125
    8. 'n' → logprob: -15.6251220703125
    9. '   ' → logprob: -16.0001220703125
    10. '<|end|>' → logprob: -17.0001220703125

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054587606340646744
    2. ' and' → logprob: -3.0545876026153564
    3. ':
' → logprob: -5.3045878410339355
    4. '):' → logprob: -8.054587364196777
    5. 'and' → logprob: -8.179587364196777
    6. ' or' → logprob: -9.179587364196777
    7. ' ' → logprob: -9.554587364196777
    8. ')' → logprob: -9.554587364196777
    9. ' :' → logprob: -9.679587364196777
    10. '):
' → logprob: -10.304587364196777

Token 98: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.00955184642225504
    2. '    ' → logprob: -4.884552001953125
    3. ' nd' → logprob: -6.634552001953125
    4. '       ' → logprob: -8.759552001953125
    5. ' ' → logprob: -9.009552001953125
    6. '   ' → logprob: -9.134552001953125
    7. '<|end|>' → logprob: -9.634552001953125
    8. '      
' → logprob: -9.884552001953125
    9. '      ' → logprob: -10.509552001953125
    10. '     
' → logprob: -11.384552001953125

Token 99: ' for' (ID: 395)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.10202547162771225
    2. 'nd' → logprob: -2.4770255088806152
    3. ' if' → logprob: -5.227025508880615
    4. '     ' → logprob: -5.477025508880615
    5. 'if' → logprob: -6.727025508880615
    6. '       ' → logprob: -6.977025508880615
    7. '   ' → logprob: -7.227025508880615
    8. ' ' → logprob: -8.352025032043457
    9. '    ' → logprob: -9.602025032043457
    10. '  ' → logprob: -9.852025032043457

Token 100: ' f' (ID: 285)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35725945234298706
    2. ' k' → logprob: -1.7322595119476318
    3. 'nj' → logprob: -2.857259511947632
    4. ' nj' → logprob: -3.357259511947632
    5. 'x' → logprob: -3.982259511947632
    6. ' x' → logprob: -5.232259273529053
    7. 'b' → logprob: -6.982259273529053
    8. ' flip' → logprob: -7.357259273529053
    9. 'd' → logprob: -7.482259273529053
    10. ' b' → logprob: -7.732259273529053

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018392004072666168
    2. 'in' → logprob: -4.018392086029053
    3. ' ' → logprob: -8.518391609191895
    4. 'range' → logprob: -10.893391609191895
    5. 'or' → logprob: -12.393391609191895
    6. '  ' → logprob: -12.643391609191895
    7. '   ' → logprob: -13.018391609191895
    8. 'l' → logprob: -13.268391609191895
    9. '	in' → logprob: -13.268391609191895
    10. 'f' → logprob: -13.643391609191895

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47013357281684875
    2. ' range' → logprob: -1.0951335430145264
    3. '[' → logprob: -3.2201335430145264
    4. '(' → logprob: -7.8451337814331055
    5. ' [' → logprob: -8.720133781433105
    6. '0' → logprob: -10.345133781433105
    7. '(range' → logprob: -11.220133781433105
    8. ' ' → logprob: -11.720133781433105
    9. '1' → logprob: -11.970133781433105
    10. '[-' → logprob: -11.970133781433105

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002523341914638877
    2. '2' → logprob: -6.002523422241211
    3. ' ' → logprob: -11.002523422241211
    4. '1' → logprob: -11.877523422241211
    5. '3' → logprob: -12.127523422241211
    6. '4' → logprob: -12.377523422241211
    7. '(j' → logprob: -12.377523422241211
    8. ' (' → logprob: -12.752523422241211
    9. '(i' → logprob: -12.877523422241211
    10. '(-' → logprob: -13.752523422241211

Token 104: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005455143749713898
    2. '1' → logprob: -5.505455017089844
    3. '3' → logprob: -7.380455017089844
    4. '4' → logprob: -7.630455017089844
    5. ' ' → logprob: -8.630455017089844
    6. '0' → logprob: -10.255455017089844
    7. '5' → logprob: -10.880455017089844
    8. '(' → logprob: -11.130455017089844
    9. '-' → logprob: -12.380455017089844
    10. 'j' → logprob: -12.630455017089844

Token 105: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2845844626426697
    2. '):' → logprob: -1.4095845222473145
    3. ' ):
' → logprob: -6.6595845222473145
    4. '):
' → logprob: -6.9095845222473145
    5. ' ):' → logprob: -7.5345845222473145
    6. '+' → logprob: -7.7845845222473145
    7. ' ' → logprob: -9.409584045410156
    8. ')' → logprob: -9.409584045410156
    9. '):

' → logprob: -11.034584045410156
    10. '   ' → logprob: -12.659584045410156

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7455836534500122
    2. '<|end|>' → logprob: -0.7455836534500122
    3. ' ' → logprob: -3.3705835342407227
    4. '<|end|>' → logprob: -4.745583534240723
    5. ' if' → logprob: -6.245583534240723
    6. '      ' → logprob: -6.370583534240723
    7. '[' → logprob: -7.120583534240723
    8. '     ' → logprob: -7.370583534240723
    9. ':' → logprob: -7.745583534240723
    10. '         ' → logprob: -8.120583534240723

Token 107: ' cost' (ID: 3097)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5265581607818604
    2. '         ' → logprob: -1.9015581607818604
    3. '<|end|>' → logprob: -1.9015581607818604
    4. 'if' → logprob: -3.0265581607818604
    5. ' ' → logprob: -3.4015581607818604
    6. '           ' → logprob: -3.9015581607818604
    7. '          ' → logprob: -5.151557922363281
    8. '<|end|>' → logprob: -6.901557922363281
    9. '        ' → logprob: -7.776557922363281
    10. '             ' → logprob: -7.901557922363281

Token 108: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762929320335388
    2. '=' → logprob: -0.8262929320335388
    3. ' ' → logprob: -9.326292991638184
    4. '=min' → logprob: -9.451292991638184
    5. '=max' → logprob: -9.701292991638184
    6. '=f' → logprob: -10.076292991638184
    7. '=
' → logprob: -11.326292991638184
    8. '=

' → logprob: -11.576292991638184
    9. ' +=' → logprob: -11.951292991638184
    10. '=sum' → logprob: -11.951292991638184

Token 109: 'abs' (ID: 6071)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0355767160654068
    2. ' dp' → logprob: -3.535576820373535
    3. 'p' → logprob: -5.785576820373535
    4. 'abs' → logprob: -6.660576820373535
    5. '0' → logprob: -7.160576820373535
    6. ' ' → logprob: -8.660576820373535
    7. ' p' → logprob: -8.785576820373535
    8. '(dp' → logprob: -9.160576820373535
    9. 'cost' → logprob: -9.535576820373535
    10. ' abs' → logprob: -10.160576820373535

Token 110: '(f' (ID: 1526)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.14059743285179138
    2. '(j' → logprob: -2.640597343444824
    3. '(f' → logprob: -3.515597343444824
    4. '(dp' → logprob: -3.890597343444824
    5. 'p' → logprob: -5.890597343444824
    6. 'dp' → logprob: -6.140597343444824
    7. '(' → logprob: -6.140597343444824
    8. 'f' → logprob: -6.890597343444824
    9. 'j' → logprob: -7.265597343444824
    10. '((' → logprob: -7.765597343444824

Token 111: '-p' (ID: 3161)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9402403831481934
    2. '-j' → logprob: -0.9402403831481934
    3. '-' → logprob: -1.5652403831481934
    4. '-p' → logprob: -5.065240383148193
    5. '-d' → logprob: -5.815240383148193
    6. ' ' → logprob: -8.440240859985352
    7. '[j' → logprob: -8.690240859985352
    8. '[' → logprob: -10.315240859985352
    9. '-
' → logprob: -10.440240859985352
    10. 'j' → logprob: -10.565240859985352

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005506357178092003
    2. '[j' → logprob: -5.25550651550293
    3. 'i' → logprob: -8.38050651550293
    4. '[' → logprob: -11.00550651550293
    5. 'j' → logprob: -11.63050651550293
    6. ')' → logprob: -12.00550651550293
    7. '[f' → logprob: -12.50550651550293
    8. '{i' → logprob: -14.25550651550293
    9. ' [' → logprob: -14.25550651550293
    10. 'f' → logprob: -14.38050651550293

Token 113: '])
' (ID: 5169)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7391303181648254
    2. '])' → logprob: -0.8641303181648254
    3. '[j' → logprob: -2.3641302585601807
    4. '[f' → logprob: -5.61413049697876
    5. '[' → logprob: -6.23913049697876
    6. ']' → logprob: -7.48913049697876
    7. '][' → logprob: -7.61413049697876
    8. 'j' → logprob: -9.614130020141602
    9. '])*' → logprob: -9.614130020141602
    10. '])+' → logprob: -9.989130020141602

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6412504315376282
    2. '+' → logprob: -1.6412503719329834
    3. '<|end|>' → logprob: -1.7662503719329834
    4. ' +' → logprob: -2.8912503719329834
    5. ')' → logprob: -4.1412506103515625
    6. '
' → logprob: -4.1412506103515625
    7. '<|end|>' → logprob: -4.1412506103515625
    8. ')+' → logprob: -6.5162506103515625
    9. ')
' → logprob: -7.1412506103515625
    10. ' if' → logprob: -7.7662506103515625

Token 115: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.2765449285507202
    2. ' nd' → logprob: -1.6515449285507202
    3. 'if' → logprob: -3.7765450477600098
    4. '       ' → logprob: -4.15154504776001
    5. ' if' → logprob: -4.65154504776001
    6. 'new' → logprob: -7.02654504776001
    7. ' new' → logprob: -8.401544570922852
    8. 'for' → logprob: -8.901544570922852
    9. '(nd' → logprob: -9.401544570922852
    10. ' for' → logprob: -9.651544570922852

Token 116: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0014653427060693502
    2. 'dp' → logprob: -6.751465320587158
    3. 'pf' → logprob: -8.876465797424316
    4. 'f' → logprob: -9.626465797424316
    5. '[f' → logprob: -9.751465797424316
    6. '[p' → logprob: -10.876465797424316
    7. ' ' → logprob: -12.251465797424316
    8. '[' → logprob: -12.501465797424316
    9. ' p' → logprob: -14.126465797424316
    10. '```' → logprob: -14.626465797424316

Token 117: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.03504081442952156
    2. '[j' → logprob: -3.410040855407715
    3. '[' → logprob: -6.660040855407715
    4. '][' → logprob: -10.910040855407715
    5. '[i' → logprob: -11.160040855407715
    6. '[
' → logprob: -11.285040855407715
    7. ' [' → logprob: -11.410040855407715
    8. ')[' → logprob: -11.785040855407715
    9. '```' → logprob: -12.285040855407715
    10. 'f' → logprob: -12.535040855407715

Token 118: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.02942204289138317
    2. ']' → logprob: -4.029421806335449
    3. ']+=' → logprob: -4.779421806335449
    4. ')=' → logprob: -6.404421806335449
    5. ')' → logprob: -8.27942180633545
    6. ']+' → logprob: -8.52942180633545
    7. '[' → logprob: -8.90442180633545
    8. ' ]' → logprob: -8.90442180633545
    9. ']=(' → logprob: -9.02942180633545
    10. '=' → logprob: -9.40442180633545

Token 119: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011050650849938393
    2. ' min' → logprob: -4.511050701141357
    3. '	min' → logprob: -13.8860502243042
    4. '[min' → logprob: -13.8860502243042
    5. '   ' → logprob: -14.7610502243042
    6. ' ' → logprob: -14.8860502243042
    7. '(min' → logprob: -15.7610502243042
    8. '```' → logprob: -16.386051177978516
    9. '=min' → logprob: -17.136051177978516
    10. 'max' → logprob: -17.636051177978516

Token 120: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.0002880337997339666
    2. '(' → logprob: -8.250288009643555
    3. '(
' → logprob: -11.250288009643555
    4. '(n' → logprob: -11.625288009643555
    5. ' (' → logprob: -12.750288009643555
    6. '(dp' → logprob: -13.500288009643555
    7. '(

' → logprob: -14.875288009643555
    8. '(nb' → logprob: -17.375288009643555
    9. ' nd' → logprob: -17.500288009643555
    10. '```' → logprob: -17.500288009643555

Token 121: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3902033970225602e-05
    2. 'dp' → logprob: -11.250014305114746
    3. '(dp' → logprob: -15.125014305114746
    4. '[' → logprob: -15.875014305114746
    5. 'f' → logprob: -16.00001335144043
    6. 'pd' → logprob: -16.62501335144043
    7. 'xp' → logprob: -17.00001335144043
    8. '
' → logprob: -17.50001335144043
    9. '(' → logprob: -17.62501335144043
    10. 'sp' → logprob: -17.62501335144043

Token 122: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0015012944350019097
    2. '[j' → logprob: -6.626501083374023
    3. '[' → logprob: -9.001501083374023
    4. 'f' → logprob: -11.126501083374023
    5. '[i' → logprob: -11.501501083374023
    6. '[n' → logprob: -11.501501083374023
    7. '[
' → logprob: -12.501501083374023
    8. ' [' → logprob: -12.876501083374023
    9. '
' → logprob: -13.126501083374023
    10. ' ' → logprob: -13.751501083374023

Token 123: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0725720226764679
    2. '],' → logprob: -2.9475719928741455
    3. ' ,' → logprob: -5.072572231292725
    4. ',
' → logprob: -5.072572231292725
    5. '+' → logprob: -6.322572231292725
    6. ']+' → logprob: -7.322572231292725
    7. ',j' → logprob: -7.447572231292725
    8. ',c' → logprob: -7.572572231292725
    9. '),' → logprob: -8.322571754455566
    10. ' ],' → logprob: -8.822571754455566

Token 124: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007666840683668852
    2. ' dp' → logprob: -4.882667064666748
    3. '     ' → logprob: -10.63266658782959
    4. '         ' → logprob: -12.00766658782959
    5. '       ' → logprob: -12.00766658782959
    6. '   ' → logprob: -12.13266658782959
    7. '           ' → logprob: -12.38266658782959
    8. ' ' → logprob: -12.38266658782959
    9. '	dp' → logprob: -13.25766658782959
    10. '             ' → logprob: -13.38266658782959

Token 125: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.91732100979425e-05
    2. '[' → logprob: -10.750039100646973
    3. 'j' → logprob: -11.000039100646973
    4. '[js' → logprob: -15.125039100646973
    5. '[
' → logprob: -15.250039100646973
    6. ' j' → logprob: -16.25004005432129
    7. ')[' → logprob: -16.37504005432129
    8. '][' → logprob: -16.50004005432129
    9. ' [' → logprob: -16.50004005432129
    10. '[i' → logprob: -17.00004005432129

Token 126: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2554791271686554
    2. ' +' → logprob: -1.505479097366333
    3. ']+' → logprob: -5.880479335784912
    4. ')+' → logprob: -8.380478858947754
    5. '+c' → logprob: -8.755478858947754
    6. ']' → logprob: -9.505478858947754
    7. '])' → logprob: -9.755478858947754
    8. '+j' → logprob: -9.755478858947754
    9. ')' → logprob: -9.880478858947754
    10. '+
' → logprob: -10.505478858947754

Token 127: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004317420825827867
    2. ' cost' → logprob: -7.750431537628174
    3. ')' → logprob: -14.625432014465332
    4. '(cost' → logprob: -15.375432014465332
    5. ' ' → logprob: -16.000431060791016
    6. '
' → logprob: -16.250431060791016
    7. '1' → logprob: -16.875431060791016
    8. '```' → logprob: -17.500431060791016
    9. 'cos' → logprob: -17.875431060791016
    10. '   ' → logprob: -18.000431060791016

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012113067787140608
    2. ')
' → logprob: -6.876211166381836
    3. ' )' → logprob: -8.876211166381836
    4. '       ' → logprob: -10.626211166381836
    5. '   ' → logprob: -12.251211166381836
    6. '     ' → logprob: -13.376211166381836
    7. '')' → logprob: -13.876211166381836
    8. ' ' → logprob: -14.126211166381836
    9. '))' → logprob: -14.126211166381836
    10. '         ' → logprob: -14.251211166381836

Token 129: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7525848746299744
    2. ' else' → logprob: -1.2525849342346191
    3. ' ' → logprob: -1.8775849342346191
    4. '   ' → logprob: -2.502584934234619
    5. 'elif' → logprob: -5.252584934234619
    6. ' elif' → logprob: -6.752584934234619
    7. '```' → logprob: -6.877584934234619
    8. '<|end|>' → logprob: -7.627584934234619
    9. '  ' → logprob: -9.252584457397461
    10. '     ' → logprob: -10.002584457397461

Token 131: ' Option' (ID: 17796)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14879807829856873
    2. 'elif' → logprob: -2.6487979888916016
    3. ' else' → logprob: -2.7737979888916016
    4. ' elif' → logprob: -5.773797988891602
    5. 'if' → logprob: -6.648797988891602
    6. ' ' → logprob: -7.773797988891602
    7. ' if' → logprob: -8.773797988891602
    8. '```' → logprob: -9.648797988891602
    9. '   ' → logprob: -11.398797988891602
    10. '
' → logprob: -11.648797988891602

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23973309993743896
    2. 'elif' → logprob: -2.4897332191467285
    3. 'else' → logprob: -2.8647332191467285
    4. '1' → logprob: -3.3647332191467285
    5. '2' → logprob: -3.3647332191467285
    6. ' elif' → logprob: -6.2397332191467285
    7. '   ' → logprob: -6.7397332191467285
    8. ' else' → logprob: -7.2397332191467285
    9. ':' → logprob: -9.48973274230957
    10. '```' → logprob: -10.11473274230957

Token 133: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02183365449309349
    2. '2' → logprob: -4.271833419799805
    3. ' ' → logprob: -4.896833419799805
    4. 'elif' → logprob: -9.146833419799805
    5. '```' → logprob: -10.771833419799805
    6. '0' → logprob: -11.146833419799805
    7. '3' → logprob: -11.646833419799805
    8. '
' → logprob: -12.146833419799805
    9. '   ' → logprob: -12.271833419799805
    10. 'else' → logprob: -12.396833419799805

Token 134: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14196844398975372
    2. ' if' → logprob: -2.8919684886932373
    3. '   ' → logprob: -3.6419684886932373
    4. 'elif' → logprob: -3.8919684886932373
    5. ' elif' → logprob: -3.8919684886932373
    6. ' ' → logprob: -5.266968250274658
    7. ' and' → logprob: -6.641968250274658
    8. 'if' → logprob: -7.016968250274658
    9. ':
' → logprob: -7.016968250274658
    10. ' for' → logprob: -8.016968727111816

Token 135: ' flip' (ID: 29130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07069800794124603
    2. ' if' → logprob: -2.8206980228424072
    3. 'for' → logprob: -4.945697784423828
    4. ' for' → logprob: -6.820697784423828
    5. ' ' → logprob: -9.570697784423828
    6. 'dp' → logprob: -9.570697784423828
    7. ' continue' → logprob: -9.695697784423828
    8. 'continue' → logprob: -9.695697784423828
    9. ' dp' → logprob: -10.320697784423828
    10. 'nd' → logprob: -10.445697784423828

Token 136: ' pancake' (ID: 158477)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9051002264022827
    2. ' ' → logprob: -1.6551002264022827
    3. 'p' → logprob: -2.1551003456115723
    4. 'j' → logprob: -2.1551003456115723
    5. ' p' → logprob: -2.9051003456115723
    6. ' dp' → logprob: -3.5301003456115723
    7. 'dp' → logprob: -3.9051003456115723
    8. '(p' → logprob: -4.530100345611572
    9. ' i' → logprob: -4.655100345611572
    10. 'i' → logprob: -5.155100345611572

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24111643433570862
    2. 'i' → logprob: -2.366116523742676
    3. ' j' → logprob: -3.241116523742676
    4. ' ' → logprob: -3.241116523742676
    5. '[i' → logprob: -4.241116523742676
    6. 's' → logprob: -5.116116523742676
    7. ' alone' → logprob: -5.491116523742676
    8. ' next' → logprob: -5.741116523742676
    9. ' not' → logprob: -5.866116523742676
    10. ' together' → logprob: -6.116116523742676

Token 138: ' together' (ID: 4717)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4408054053783417
    2. ' and' → logprob: -1.940805435180664
    3. ' ' → logprob: -2.315805435180664
    4. 'alone' → logprob: -3.315805435180664
    5. ' alone' → logprob: -3.940805435180664
    6. 'with' → logprob: -4.190805435180664
    7. ',' → logprob: -4.315805435180664
    8. ' together' → logprob: -4.815805435180664
    9. '+' → logprob: -4.940805435180664
    10. ' with' → logprob: -5.440805435180664

Token 139: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.5309003591537476
    2. ' with' → logprob: -0.9059003591537476
    3. ' ' → logprob: -5.780900478363037
    4. 'and' → logprob: -6.530900478363037
    5. ' if' → logprob: -6.780900478363037
    6. ' and' → logprob: -7.280900478363037
    7. 'if' → logprob: -7.280900478363037
    8. ',' → logprob: -8.405900001525879
    9. '   ' → logprob: -8.655900001525879
    10. '=' → logprob: -9.405900001525879

Token 140: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7496986985206604
    2. 'i' → logprob: -1.9996986389160156
    3. ' p' → logprob: -2.1246986389160156
    4. ' i' → logprob: -2.4996986389160156
    5. ' (' → logprob: -2.4996986389160156
    6. ' j' → logprob: -3.6246986389160156
    7. 'j' → logprob: -3.6246986389160156
    8. '(i' → logprob: -4.124698638916016
    9. ' the' → logprob: -4.999698638916016
    10. ' ' → logprob: -5.249698638916016

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009411195642314851
    2. '-' → logprob: -7.500941276550293
    3. ' +' → logprob: -8.000941276550293
    4. '1' → logprob: -10.625941276550293
    5. ' ' → logprob: -11.500941276550293
    6. '+j' → logprob: -11.500941276550293
    7. '+
' → logprob: -12.625941276550293
    8. '>' → logprob: -13.625941276550293
    9. ' -' → logprob: -14.125941276550293
    10. '```' → logprob: -14.625941276550293

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -16.250085830688477
    4. '+' → logprob: -17.000085830688477
    5. '<|end|>' → logprob: -17.500085830688477
    6. '
' → logprob: -18.000085830688477
    7. '0' → logprob: -18.750085830688477
    8. '`' → logprob: -19.000085830688477
    9. '2' → logprob: -19.000085830688477
    10. '{' → logprob: -19.625085830688477

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.018496979027986526
    2. 'if' → logprob: -4.268496990203857
    3. ' and' → logprob: -6.018496990203857
    4. ' ' → logprob: -6.643496990203857
    5. 'and' → logprob: -8.1434965133667
    6. '   ' → logprob: -8.2684965133667
    7. ',' → logprob: -10.6434965133667
    8. ':' → logprob: -12.1434965133667
    9. ' (' → logprob: -13.1434965133667
    10. '```' → logprob: -13.2684965133667

Token 144: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38703563809394836
    2. ' i' → logprob: -1.137035608291626
    3. 'j' → logprob: -9.637035369873047
    4. ' ' → logprob: -10.137035369873047
    5. ' j' → logprob: -10.512035369873047
    6. '(i' → logprob: -10.637035369873047
    7. '0' → logprob: -12.887035369873047
    8. ' (' → logprob: -13.137035369873047
    9. ' ' → logprob: -13.887035369873047
    10. '	i' → logprob: -14.012035369873047

Token 145: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5714321732521057
    2. '   ' → logprob: -1.071432113647461
    3. ' and' → logprob: -2.696432113647461
    4. 'if' → logprob: -3.821432113647461
    5. 'and' → logprob: -5.821432113647461
    6. ' ' → logprob: -8.571432113647461
    7. ',' → logprob: -9.446432113647461
    8. '<|end|>' → logprob: -9.696432113647461
    9. '```' → logprob: -10.696432113647461
    10. ' or' → logprob: -10.696432113647461

Token 146: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4593268632888794
    2. '   ' → logprob: -1.0843268632888794
    3. 'if' → logprob: -3.58432674407959
    4. ' and' → logprob: -6.83432674407959
    5. ' ' → logprob: -7.33432674407959
    6. '<|end|>' → logprob: -8.58432674407959
    7. '```' → logprob: -9.20932674407959
    8. '    ' → logprob: -9.33432674407959
    9. 'and' → logprob: -9.58432674407959
    10. '  ' → logprob: -9.58432674407959

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10419851541519165
    2. ' if' → logprob: -2.354198455810547
    3. '   ' → logprob: -5.604198455810547
    4. 'elif' → logprob: -8.354198455810547
    5. ' ' → logprob: -9.729198455810547
    6. ' elif' → logprob: -13.104198455810547
    7. '  ' → logprob: -13.104198455810547
    8. 'and' → logprob: -13.854198455810547
    9. ' and' → logprob: -14.854198455810547
    10. '    ' → logprob: -15.104198455810547

Token 148: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009776279330253601
    2. 'i' → logprob: -4.6347761154174805
    3. ' ' → logprob: -10.88477611541748
    4. '(i' → logprob: -14.50977611541748
    5. ' ' → logprob: -14.88477611541748
    6. '	i' → logprob: -15.25977611541748
    7. '   ' → logprob: -16.259777069091797
    8. '<i' → logprob: -16.259777069091797
    9. ' (' → logprob: -16.509777069091797
    10. '  ' → logprob: -17.134777069091797

Token 149: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.17932891845703125
    2. ' <' → logprob: -2.1793289184570312
    3. '<' → logprob: -3.3043289184570312
    4. '+' → logprob: -4.554328918457031
    5. '<len' → logprob: -5.679328918457031
    6. '<num' → logprob: -8.929328918457031
    7. '<int' → logprob: -9.804328918457031
    8. '<=' → logprob: -9.804328918457031
    9. '<size' → logprob: -10.054328918457031
    10. ' ' → logprob: -10.304328918457031

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005090686026960611
    2. ' -' → logprob: -7.625509262084961
    3. '1' → logprob: -10.875509262084961
    4. ' ' → logprob: -14.250509262084961
    5. '()-' → logprob: -14.375509262084961
    6. '−' → logprob: -15.000509262084961
    7. 'and' → logprob: -15.750509262084961
    8. '```' → logprob: -16.00050926208496
    9. ' and' → logprob: -17.00050926208496
    10. '
' → logprob: -17.25050926208496

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5358694731257856e-05
    2. ' ' → logprob: -10.500035285949707
    3. '2' → logprob: -11.875035285949707
    4. '-' → logprob: -14.750035285949707
    5. 'n' → logprob: -15.000035285949707
    6. '```' → logprob: -16.750036239624023
    7. '
' → logprob: -17.500036239624023
    8. '!' → logprob: -18.000036239624023
    9. '   ' → logprob: -18.062536239624023
    10. 'int' → logprob: -18.312536239624023

Token 152: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0027493613306432962
    2. 'and' → logprob: -6.127749443054199
    3. ' ' → logprob: -8.3777494430542
    4. ':
' → logprob: -8.6277494430542
    5. ':' → logprob: -8.8777494430542
    6. '     ' → logprob: -12.1277494430542
    7. '   ' → logprob: -12.7527494430542
    8. '	and' → logprob: -13.5027494430542
    9. '    ' → logprob: -13.6277494430542
    10. ',' → logprob: -13.8777494430542

Token 153: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.2873513400554657
    2. ' for' → logprob: -1.662351369857788
    3. ' and' → logprob: -3.537351369857788
    4. ' ' → logprob: -4.537351131439209
    5. ' if' → logprob: -4.662351131439209
    6. '       ' → logprob: -4.912351131439209
    7. 'for' → logprob: -6.787351131439209
    8. '<|end|>' → logprob: -7.037351131439209
    9. '   ' → logprob: -7.537351131439209
    10. '    ' → logprob: -8.037351608276367

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01110135205090046
    2. 'cost' → logprob: -5.136101245880127
    3. ' for' → logprob: -5.636101245880127
    4. ' ' → logprob: -7.386101245880127
    5. 'if' → logprob: -7.386101245880127
    6. 'f' → logprob: -9.136101722717285
    7. '   ' → logprob: -9.636101722717285
    8. ' cost' → logprob: -9.761101722717285
    9. '     ' → logprob: -10.136101722717285
    10. 'nd' → logprob: -10.886101722717285

Token 155: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1883680373430252
    2. ' f' → logprob: -1.8133680820465088
    3. 'k' → logprob: -6.06336784362793
    4. 'g' → logprob: -6.43836784362793
    5. 'ff' → logprob: -6.56336784362793
    6. ' ff' → logprob: -7.56336784362793
    7. 'a' → logprob: -7.68836784362793
    8. ' k' → logprob: -7.68836784362793
    9. ' g' → logprob: -8.06336784362793
    10. ' nf' → logprob: -8.18836784362793

Token 156: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002037129830569029
    2. 'in' → logprob: -6.252037048339844
    3. '1' → logprob: -10.252037048339844
    4. ' ' → logprob: -10.252037048339844
    5. 'range' → logprob: -10.502037048339844
    6. '0' → logprob: -12.627037048339844
    7. 'f' → logprob: -13.752037048339844
    8. '[' → logprob: -13.877037048339844
    9. '2' → logprob: -14.002037048339844
    10. '```' → logprob: -14.252037048339844

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028203281108289957
    2. 'in' → logprob: -5.8778204917907715
    3. ' ' → logprob: -11.877820014953613
    4. 'range' → logprob: -11.877820014953613
    5. ',' → logprob: -15.002820014953613
    6. 'f' → logprob: -15.127820014953613
    7. '[' → logprob: -15.752820014953613
    8. '=' → logprob: -16.00282096862793
    9. '<|end|>' → logprob: -16.25282096862793
    10. '  ' → logprob: -16.50282096862793

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001174747827462852
    2. ' range' → logprob: -6.7511749267578125
    3. '4' → logprob: -13.376174926757812
    4. '[' → logprob: -13.626174926757812
    5. '(' → logprob: -13.751174926757812
    6. '2' → logprob: -14.751174926757812
    7. '(range' → logprob: -15.376174926757812
    8. ' ' → logprob: -17.001174926757812
    9. '   ' → logprob: -18.001174926757812
    10. '
' → logprob: -18.376174926757812

Token 159: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08898253738880157
    2. '4' → logprob: -2.463982582092285
    3. ' ' → logprob: -11.338982582092285
    4. '3' → logprob: -11.838982582092285
    5. '(f' → logprob: -12.213982582092285
    6. '2' → logprob: -12.338982582092285
    7. '1' → logprob: -12.338982582092285
    8. ' (' → logprob: -12.713982582092285
    9. 'f' → logprob: -13.338982582092285
    10. '
' → logprob: -13.838982582092285

Token 160: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4849443838757e-06
    2. '2' → logprob: -12.875004768371582
    3. '1' → logprob: -13.875004768371582
    4. ' ' → logprob: -14.375004768371582
    5. 'f' → logprob: -16.000003814697266
    6. '(' → logprob: -16.375003814697266
    7. '```' → logprob: -16.687503814697266
    8. '
' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '0' → logprob: -17.875003814697266

Token 161: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.000549814198166132
    2. '):' → logprob: -7.625549793243408
    3. ' ' → logprob: -10.875550270080566
    4. ',f' → logprob: -10.875550270080566
    5. ',' → logprob: -11.625550270080566
    6. 'f' → logprob: -13.125550270080566
    7. ':
' → logprob: -13.125550270080566
    8. ')' → logprob: -13.250550270080566
    9. ' ):
' → logprob: -13.250550270080566
    10. '):

' → logprob: -13.375550270080566

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050040505826473236
    2. '<|end|>' → logprob: -3.4250404834747314
    3. ' for' → logprob: -4.3000407218933105
    4. ' ' → logprob: -6.1750407218933105
    5. '<|end|>' → logprob: -8.550040245056152
    6. 'for' → logprob: -9.050040245056152
    7. ',' → logprob: -9.925040245056152
    8. ':' → logprob: -10.425040245056152
    9. ' and' → logprob: -10.675040245056152
    10. ' f' → logprob: -10.675040245056152

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1403384506702423
    2. 'for' (adapté à ' for') → logprob: -2.39033842086792
    3. ' cost' → logprob: -3.89033842086792
    4. 'cost' → logprob: -4.64033842086792
    5. '       ' → logprob: -5.26533842086792
    6. '         ' → logprob: -6.14033842086792
    7. ' ' → logprob: -6.76533842086792
    8. '<|end|>' → logprob: -8.265338897705078
    9. ' if' → logprob: -8.765338897705078
    10. '	for' → logprob: -9.640338897705078

Token 164: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5708185434341431
    2. ' f' → logprob: -0.9458185434341431
    3. '4' → logprob: -3.1958184242248535
    4. ' ' → logprob: -5.1958184242248535
    5. ' range' → logprob: -10.070818901062012
    6. 'range' → logprob: -10.820818901062012
    7. '2' → logprob: -11.070818901062012
    8. '(f' → logprob: -11.820818901062012
    9. '(' → logprob: -12.070818901062012
    10. '   ' → logprob: -12.195818901062012

Token 165: '2' (ID: 17)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.44114604592323303
    2. 'in' → logprob: -1.4411460161209106
    3. ' in' → logprob: -2.3161461353302
    4. ' range' → logprob: -4.441145896911621
    5. '4' → logprob: -5.191145896911621
    6. '1' → logprob: -6.441145896911621
    7. '2' → logprob: -7.066145896911621
    8. '(' → logprob: -7.191145896911621
    9. 'f' → logprob: -7.691145896911621
    10. '(range' → logprob: -8.441145896911621

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023253632709383965
    2. 'in' → logprob: -3.7732536792755127
    3. 'range' → logprob: -11.898253440856934
    4. ' ' → logprob: -14.023253440856934
    5. ' range' → logprob: -14.648253440856934
    6. '<|end|>' → logprob: -15.648253440856934
    7. '(' → logprob: -17.89825439453125
    8. '(range' → logprob: -18.27325439453125
    9. '[' → logprob: -19.52325439453125
    10. 'inthe' → logprob: -19.52325439453125

Token 167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020890454470645636
    2. ' range' → logprob: -8.500208854675293
    3. '(range' → logprob: -12.750208854675293
    4. '(' → logprob: -13.000208854675293
    5. '4' → logprob: -15.250208854675293
    6. ' ' → logprob: -20.62520980834961
    7. '	range' → logprob: -20.87520980834961
    8. 'for' → logprob: -21.87520980834961
    9. '
' → logprob: -22.00020980834961
    10. '_range' → logprob: -22.00020980834961

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4060561776859686e-05
    2. '(f' → logprob: -10.125043869018555
    3. 'range' → logprob: -13.000043869018555
    4. '((' → logprob: -13.750043869018555
    5. '4' → logprob: -15.375043869018555
    6. '(range' → logprob: -15.750043869018555
    7. '(i' → logprob: -16.125043869018555
    8. ' (' → logprob: -16.875043869018555
    9. ' ' → logprob: -18.000043869018555
    10. '(
' → logprob: -18.625043869018555

Token 169: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.796184723294573e-06
    2. '2' → logprob: -13.375005722045898
    3. ' ' → logprob: -13.375005722045898
    4. 'f' → logprob: -14.000005722045898
    5. '1' → logprob: -15.125005722045898
    6. '(' → logprob: -15.187505722045898
    7. '3' → logprob: -15.187505722045898
    8. '```' → logprob: -16.1250057220459
    9. '0' → logprob: -16.1875057220459
    10. '5' → logprob: -16.1875057220459

Token 170: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11295817047357559
    2. '):' → logprob: -2.2379581928253174
    3. ':' → logprob: -9.487957954406738
    4. '):
' → logprob: -10.487957954406738
    5. '):

' → logprob: -11.237957954406738
    6. ':
' → logprob: -11.612957954406738
    7. ')' → logprob: -12.612957954406738
    8. '():
' → logprob: -13.362957954406738
    9. ''):
' → logprob: -13.987957954406738
    10. '       ' → logprob: -14.237957954406738

Token 171: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.00026062061078846455
    2. '             ' → logprob: -10.000260353088379
    3. '           ' → logprob: -10.250260353088379
    4. '```' → logprob: -10.375260353088379
    5. '          ' → logprob: -10.500260353088379
    6. 'cost' → logprob: -10.500260353088379
    7. '<|end|>' → logprob: -11.375260353088379
    8. ' ' → logprob: -11.375260353088379
    9. ':' → logprob: -11.500260353088379
    10. '        ' → logprob: -11.625260353088379

Token 172: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.009375886991620064
    2. ' cost' → logprob: -5.259376049041748
    3. 'if' → logprob: -5.759376049041748
    4. '           ' → logprob: -7.634376049041748
    5. ' if' → logprob: -8.50937557220459
    6. '         ' → logprob: -8.75937557220459
    7. '             ' → logprob: -9.75937557220459
    8. '          ' → logprob: -10.38437557220459
    9. ' ' → logprob: -10.63437557220459
    10. '               ' → logprob: -11.88437557220459

Token 173: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002656271681189537
    2. ' =' → logprob: -8.250266075134277
    3. '=max' → logprob: -12.625266075134277
    4. '=int' → logprob: -15.000266075134277
    5. '=

' → logprob: -15.875266075134277
    6. '=sum' → logprob: -15.875266075134277
    7. '=min' → logprob: -16.00026512145996
    8. '=
' → logprob: -16.25026512145996
    9. '=(' → logprob: -16.37526512145996
    10. '=len' → logprob: -16.50026512145996

Token 174: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00017684244085103273
    2. ' abs' → logprob: -8.750176429748535
    3. '(abs' → logprob: -11.625176429748535
    4. 'cost' → logprob: -12.000176429748535
    5. 'dp' → logprob: -13.500176429748535
    6. '         ' → logprob: -13.625176429748535
    7. 'max' → logprob: -14.875176429748535
    8. ' ' → logprob: -16.00017738342285
    9. '(' → logprob: -17.12517738342285
    10. '           ' → logprob: -17.62517738342285

Token 175: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.453737710718997e-05
    2. '(p' → logprob: -10.125044822692871
    3. '(' → logprob: -13.000044822692871
    4. 'f' → logprob: -13.250044822692871
    5. 'p' → logprob: -15.875044822692871
    6. '(j' → logprob: -16.500043869018555
    7. '((' → logprob: -16.875043869018555
    8. '(fp' → logprob: -17.000043869018555
    9. ' (' → logprob: -18.125043869018555
    10. '[f' → logprob: -18.250043869018555

Token 176: '1' (ID: 16)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.42154860496520996
    2. 'f' → logprob: -1.92154860496521
    3. '1' → logprob: -2.29654860496521
    4. '(f' → logprob: -2.67154860496521
    5. '2' → logprob: -4.421548843383789
    6. '[p' → logprob: -5.046548843383789
    7. '[i' → logprob: -5.921548843383789
    8. 'p' → logprob: -6.171548843383789
    9. '-f' → logprob: -6.546548843383789
    10. '-p' → logprob: -7.046548843383789

Token 177: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.0031218640506267548
    2. ' -' → logprob: -6.003121852874756
    3. '-' → logprob: -7.378121852874756
    4. '[p' → logprob: -11.503122329711914
    5. '[' → logprob: -12.003122329711914
    6. '-f' → logprob: -13.378122329711914
    7. ' ' → logprob: -13.753122329711914
    8. 'p' → logprob: -14.128122329711914
    9. ')' → logprob: -14.253122329711914
    10. ')-' → logprob: -15.378122329711914

Token 178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017529279284644872
    2. 'i' → logprob: -8.750175476074219
    3. '[' → logprob: -11.250175476074219
    4. '2' → logprob: -13.875175476074219
    5. '(i' → logprob: -14.000175476074219
    6. ')' → logprob: -14.125175476074219
    7. '{i' → logprob: -15.000175476074219
    8. ' i' → logprob: -15.625175476074219
    9. '```' → logprob: -15.875175476074219
    10. '[
' → logprob: -15.875175476074219

Token 179: '])+' (ID: 119485)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016964320093393326
    2. '])+' → logprob: -4.141964435577393
    3. '[i' → logprob: -7.266964435577393
    4. '])-' → logprob: -8.766963958740234
    5. '])
' → logprob: -10.766963958740234
    6. '[' → logprob: -11.266963958740234
    7. '])*' → logprob: -11.516963958740234
    8. ']+' → logprob: -11.766963958740234
    9. ''])' → logprob: -12.016963958740234
    10. ')' → logprob: -12.016963958740234

Token 180: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -2.7729658540920354e-05
    2. ' abs' → logprob: -10.500027656555176
    3. '(abs' → logprob: -16.375028610229492
    4. '```' → logprob: -19.250028610229492
    5. ' ' → logprob: -20.125028610229492
    6. '
' → logprob: -20.375028610229492
    7. '.abs' → logprob: -21.000028610229492
    8. '   ' → logprob: -21.875028610229492
    9. '           ' → logprob: -22.375028610229492
    10. '       ' → logprob: -22.500028610229492

Token 181: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. '[f' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -17.625001907348633
    5. ' (' → logprob: -17.750001907348633
    6. 'f' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '```' → logprob: -19.625001907348633
    9. '(p' → logprob: -20.375001907348633
    10. '((' → logprob: -20.625001907348633

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.524122953414917
    2. 'f' → logprob: -0.899122953414917
    3. '[f' → logprob: -7.024123191833496
    4. 's' → logprob: -9.524123191833496
    5. ' f' → logprob: -11.274123191833496
    6. '[i' → logprob: -12.149123191833496
    7. '[' → logprob: -12.399123191833496
    8. '(f' → logprob: -13.024123191833496
    9. ' ' → logprob: -13.274123191833496
    10. 'i' → logprob: -13.274123191833496

Token 183: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.0008232106338255107
    2. ' -' → logprob: -7.125823020935059
    3. '[' → logprob: -12.000823020935059
    4. 'p' → logprob: -12.250823020935059
    5. ' ' → logprob: -12.375823020935059
    6. '-' → logprob: -13.250823020935059
    7. '[p' → logprob: -14.000823020935059
    8. '[i' → logprob: -15.125823020935059
    9. '```' → logprob: -16.250823974609375
    10. '[-' → logprob: -16.250823974609375

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002507762983441353
    2. 'i' → logprob: -6.00250768661499
    3. '(i' → logprob: -11.752508163452148
    4. '```' → logprob: -11.877508163452148
    5. ' i' → logprob: -12.627508163452148
    6. '[' → logprob: -12.627508163452148
    7. '{i' → logprob: -12.877508163452148
    8. '[
' → logprob: -13.377508163452148
    9. ' ' → logprob: -13.877508163452148
    10. '+i' → logprob: -14.002508163452148

Token 185: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.2987729102605954e-05
    2. '+i' → logprob: -10.875042915344238
    3. '])' → logprob: -11.500042915344238
    4. ' +' → logprob: -11.500042915344238
    5. ']+' → logprob: -13.750042915344238
    6. '[i' → logprob: -14.000042915344238
    7. ' ' → logprob: -14.625042915344238
    8. '1' → logprob: -15.000042915344238
    9. '[' → logprob: -15.250042915344238
    10. '+
' → logprob: -15.500042915344238

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '+' → logprob: -16.625001907348633
    4. '```' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.500001907348633
    6. 'i' → logprob: -20.125001907348633
    7. '2' → logprob: -20.500001907348633
    8. '
' → logprob: -20.500001907348633
    9. '``' → logprob: -20.500001907348633
    10. '１' → logprob: -20.625001907348633

Token 187: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002039391314610839
    2. ')' → logprob: -6.377039432525635
    3. '])
' → logprob: -8.252038955688477
    4. '])+' → logprob: -10.252038955688477
    5. '])*' → logprob: -11.877038955688477
    6. ''])' → logprob: -12.002038955688477
    7. ')])' → logprob: -12.127038955688477
    8. '))' → logprob: -12.502038955688477
    9. ']' → logprob: -12.877038955688477
    10. ' ' → logprob: -13.127038955688477

Token 188: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.0007741317385807633
    2. '
' → logprob: -8.500774383544922
    3. ' if' → logprob: -8.500774383544922
    4. 'nd' → logprob: -8.875774383544922
    5. 'if' → logprob: -9.500774383544922
    6. ' nd' → logprob: -10.000774383544922
    7. '          
' → logprob: -10.625774383544922
    8. '           ' → logprob: -10.750774383544922
    9. '<|end|>' → logprob: -11.500774383544922
    10. '          ' → logprob: -11.625774383544922

Token 189: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4052819609642029
    2. 'nd' → logprob: -1.1552820205688477
    3. ' if' → logprob: -4.405282020568848
    4. ' nd' → logprob: -5.780282020568848
    5. '         ' → logprob: -6.530282020568848
    6. '           ' → logprob: -7.030282020568848
    7. ' ' → logprob: -8.030282020568848
    8. '       ' → logprob: -10.280282020568848
    9. '             ' → logprob: -10.280282020568848
    10. '     ' → logprob: -10.530282020568848

Token 190: ' skip' (ID: 16677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01917608082294464
    2. 'nd' → logprob: -4.519176006317139
    3. ' if' → logprob: -5.019176006317139
    4. 'for' → logprob: -6.769176006317139
    5. ' nd' → logprob: -8.894176483154297
    6. '           ' → logprob: -10.019176483154297
    7. 'abs' → logprob: -11.019176483154297
    8. '         ' → logprob: -11.269176483154297
    9. 'dp' → logprob: -11.269176483154297
    10. '```' → logprob: -11.394176483154297

Token 191: ' invalid' (ID: 15796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2594155967235565
    2. ' if' → logprob: -1.509415626525879
    3. '         ' → logprob: -5.009415626525879
    4. ' ' → logprob: -7.884415626525879
    5. '          ' → logprob: -8.759415626525879
    6. '           ' → logprob: -9.259415626525879
    7. 'continue' → logprob: -9.759415626525879
    8. '   ' → logprob: -10.884415626525879
    9. '             ' → logprob: -10.884415626525879
    10. '     ' → logprob: -11.259415626525879

Token 192: ' states' (ID: 9407)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.114554263651371
    2. 'states' → logprob: -2.7395541667938232
    3. 'cases' → logprob: -4.864554405212402
    4. 'f' → logprob: -4.864554405212402
    5. 'flip' → logprob: -5.239554405212402
    6. ' if' → logprob: -5.364554405212402
    7. 'trans' → logprob: -5.364554405212402
    8. 'config' → logprob: -5.489554405212402
    9. ' states' → logprob: -6.239554405212402
    10. '(f' → logprob: -6.364554405212402

Token 193: ' to' (ID: 316)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.17949451506137848
    2. ' if' → logprob: -2.304494619369507
    3. 'if' → logprob: -2.804494619369507
    4. '           ' → logprob: -6.554494380950928
    5. 'and' → logprob: -6.929494380950928
    6. '          ' → logprob: -7.679494380950928
    7. ' and' → logprob: -7.679494380950928
    8. ' ' → logprob: -8.804494857788086
    9. '             ' → logprob: -8.804494857788086
    10. '<|end|>' → logprob: -9.304494857788086

Token 194: ' control' (ID: 3580)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10726676136255264
    2. ' continue' → logprob: -3.357266664505005
    3. '         ' → logprob: -3.482266664505005
    4. 'avoid' → logprob: -4.857266902923584
    5. ' ' → logprob: -5.107266902923584
    6. 'prevent' → logprob: -5.732266902923584
    7. ' avoid' → logprob: -5.732266902923584
    8. 'if' → logprob: -6.357266902923584
    9. '     ' → logprob: -6.482266902923584
    10. '       ' → logprob: -6.982266902923584

Token 195: ' dp' (ID: 21546)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.117619276046753
    2. ' cost' → logprob: -1.242619276046753
    3. ' the' → logprob: -2.367619276046753
    4. 'if' → logprob: -3.117619276046753
    5. ' complexity' → logprob: -3.242619276046753
    6. ' if' → logprob: -3.242619276046753
    7. 'the' → logprob: -3.367619276046753
    8. 'dp' → logprob: -3.992619276046753
    9. '         ' → logprob: -4.367619514465332
    10. ' ' → logprob: -4.367619514465332

Token 196: ' size' (ID: 2349)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7397776246070862
    2. '         ' → logprob: -1.1147775650024414
    3. 'if' → logprob: -2.2397775650024414
    4. '           ' → logprob: -3.9897775650024414
    5. '       ' → logprob: -4.114777565002441
    6. '[' → logprob: -4.239777565002441
    7. '     ' → logprob: -4.614777565002441
    8. '          ' → logprob: -5.114777565002441
    9. '             ' → logprob: -5.114777565002441
    10. '<|end|>' → logprob: -5.364777565002441

Token 197: ':' (ID: 25)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.011475590988993645
    2. '<|end|>' → logprob: -5.511475563049316
    3. ' if' → logprob: -5.761475563049316
    4. 'if' → logprob: -6.011475563049316
    5. '             ' → logprob: -8.011475563049316
    6. '           ' → logprob: -8.011475563049316
    7. '          
' → logprob: -8.136475563049316
    8. '          ' → logprob: -8.636475563049316
    9. '     ' → logprob: -9.136475563049316
    10. ' ' → logprob: -9.136475563049316

Token 198: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3065791726112366
    2. '         ' → logprob: -1.8065791130065918
    3. ' if' → logprob: -2.306579113006592
    4. '           ' → logprob: -9.05657958984375
    5. ' ' → logprob: -10.05657958984375
    6. '             ' → logprob: -10.93157958984375
    7. '          ' → logprob: -11.55657958984375
    8. '```' → logprob: -11.55657958984375
    9. 'continue' → logprob: -11.68157958984375
    10. '                 ' → logprob: -12.55657958984375

Token 199: ' keep' (ID: 3357)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8087921738624573
    2. ' continue' → logprob: -2.3087921142578125
    3. 'o' → logprob: -2.4337921142578125
    4. 'avoid' → logprob: -3.0587921142578125
    5. ' avoid' → logprob: -3.5587921142578125
    6. 'ensure' → logprob: -3.6837921142578125
    7. 'if' → logprob: -3.9337921142578125
    8. 'dp' → logprob: -4.0587921142578125
    9. 'id' → logprob: -4.1837921142578125
    10. ' ensure' → logprob: -4.1837921142578125

Token 200: ' dp' (ID: 21546)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31971198320388794
    2. 'f' → logprob: -2.444711923599243
    3. 'j' → logprob: -2.694711923599243
    4. ' abs' → logprob: -3.069711923599243
    5. 'dp' → logprob: -3.819711923599243
    6. '(f' → logprob: -4.569712162017822
    7. '(j' → logprob: -5.069712162017822
    8. '(abs' → logprob: -5.194712162017822
    9. ' j' → logprob: -5.569712162017822
    10. 'if' → logprob: -5.819712162017822

Token 201: ' by' (ID: 656)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12395092099905014
    2. '[f' → logprob: -2.998950958251953
    3. '[' → logprob: -3.873950958251953
    4. 'indices' → logprob: -5.248950958251953
    5. ' states' → logprob: -5.498950958251953
    6. 'states' → logprob: -5.498950958251953
    7. 'size' → logprob: -5.748950958251953
    8. 'valid' → logprob: -5.748950958251953
    9. '[min' → logprob: -5.873950958251953
    10. ' only' → logprob: -5.998950958251953

Token 202: ' pancake' (ID: 158477)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6195353865623474
    2. 'max' → logprob: -1.6195354461669922
    3. 'f' → logprob: -2.994535446166992
    4. 'j' → logprob: -3.244535446166992
    5. ' abs' → logprob: -3.244535446166992
    6. '1' → logprob: -3.619535446166992
    7. '2' → logprob: -3.869535446166992
    8. '4' → logprob: -4.369535446166992
    9. ' max' → logprob: -4.619535446166992
    10. 'only' → logprob: -5.244535446166992

Token 203: ' index' (ID: 3472)
  Prédit: ' orientations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -1.0938740968704224
    2. ' orientation' → logprob: -1.9688740968704224
    3. 'orientation' → logprob: -2.218873977661133
    4. ' states' → logprob: -2.343873977661133
    5. 's' → logprob: -2.843873977661133
    6. 'states' → logprob: -3.093873977661133
    7. '[i' → logprob: -3.093873977661133
    8. ' ' → logprob: -3.093873977661133
    9. 'i' → logprob: -3.343873977661133
    10. 'f' → logprob: -4.843873977661133

Token 204: ' only' (ID: 1606)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.012733900919556618
    2. ' and' → logprob: -5.3877339363098145
    3. 'and' → logprob: -5.3877339363098145
    4. 'if' → logprob: -6.6377339363098145
    5. ' if' → logprob: -6.6377339363098145
    6. ',' → logprob: -7.7627339363098145
    7. '<|end|>' → logprob: -8.887733459472656
    8. '          ' → logprob: -9.512733459472656
    9. ' ' → logprob: -9.762733459472656
    10. '           ' → logprob: -10.137733459472656

Token 205: ',' (ID: 11)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.0056115081533789635
    2. 'if' → logprob: -5.255611419677734
    3. ' if' → logprob: -8.005611419677734
    4. '           ' → logprob: -11.130611419677734
    5. '```' → logprob: -11.755611419677734
    6. ' ' → logprob: -12.505611419677734
    7. '<|end|>' → logprob: -12.630611419677734
    8. 'and' → logprob: -12.880611419677734
    9. '          
' → logprob: -13.005611419677734
    10. '             ' → logprob: -13.130611419677734

Token 206: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3158828318119049
    2. '         ' → logprob: -1.4408828020095825
    3. ' if' → logprob: -3.440882921218872
    4. '           ' → logprob: -6.565882682800293
    5. '             ' → logprob: -7.940882682800293
    6. 'continue' → logprob: -9.565882682800293
    7. '                 ' → logprob: -9.690882682800293
    8. ' ' → logprob: -10.440882682800293
    9. '          ' → logprob: -10.690882682800293
    10. '       ' → logprob: -10.815882682800293

Token 207: ' handle' (ID: 5318)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.9100067019462585
    2. 'continue' → logprob: -1.0350067615509033
    3. ' continue' → logprob: -1.9100067615509033
    4. 'if' → logprob: -3.7850067615509033
    5. '#' → logprob: -3.9100067615509033
    6. ' need' → logprob: -4.160006523132324
    7. '           ' → logprob: -4.535006523132324
    8. 'need' → logprob: -5.285006523132324
    9. ' must' → logprob: -5.410006523132324
    10. ' if' → logprob: -5.410006523132324

Token 208: ' it' (ID: 480)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27388036251068115
    2. '         ' → logprob: -2.0238804817199707
    3. ' if' → logprob: -2.6488804817199707
    4. '           ' → logprob: -4.398880481719971
    5. 'continue' → logprob: -4.898880481719971
    6. 'only' → logprob: -6.273880481719971
    7. '             ' → logprob: -6.273880481719971
    8. ' ' → logprob: -6.648880481719971
    9. '```' → logprob: -6.648880481719971
    10. ' only' → logprob: -6.773880481719971

Token 209: ' step' (ID: 5983)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.5198094844818115
    2. 'if' → logprob: -1.0198094844818115
    3. ' if' → logprob: -3.3948094844818115
    4. '           ' → logprob: -5.644809722900391
    5. '```' → logprob: -6.769809722900391
    6. '             ' → logprob: -7.144809722900391
    7. 'and' → logprob: -7.269809722900391
    8. '       ' → logprob: -7.519809722900391
    9. 'only' → logprob: -7.519809722900391
    10. ' ' → logprob: -7.644809722900391

Token 210: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.44049227237701416
    2. 'by' → logprob: -1.4404922723770142
    3. '     ' → logprob: -3.1904921531677246
    4. ' by' → logprob: -4.315492153167725
    5. '       ' → logprob: -4.565492153167725
    6. ' ' → logprob: -4.690492153167725
    7. '+' → logprob: -5.065492153167725
    8. '           ' → logprob: -5.315492153167725
    9. '         ' → logprob: -5.315492153167725
    10. '```' → logprob: -5.440492153167725

Token 211: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.00497603602707386
    2. 'if' → logprob: -5.629976272583008
    3. ' if' → logprob: -6.754976272583008
    4. '           ' → logprob: -10.004976272583008
    5. 'and' → logprob: -10.129976272583008
    6. ' and' → logprob: -10.254976272583008
    7. '             ' → logprob: -10.754976272583008
    8. '```' → logprob: -11.129976272583008
    9. '<|end|>' → logprob: -11.254976272583008
    10. ',' → logprob: -11.254976272583008

Token 212: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.03086595982313156
    2. 'if' → logprob: -3.5308659076690674
    3. ' if' → logprob: -7.0308661460876465
    4. '           ' → logprob: -9.030865669250488
    5. '```' → logprob: -10.530865669250488
    6. '<|end|>' → logprob: -10.780865669250488
    7. '             ' → logprob: -10.905865669250488
    8. '       ' → logprob: -11.405865669250488
    9. '          ' → logprob: -11.655865669250488
    10. ' ' → logprob: -12.405865669250488

Token 213: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002193563850596547
    2. '         ' → logprob: -6.752193450927734
    3. ' if' → logprob: -7.252193450927734
    4. '           ' → logprob: -8.377193450927734
    5. 'nd' → logprob: -10.627193450927734
    6. '             ' → logprob: -11.127193450927734
    7. ' ' → logprob: -11.752193450927734
    8. 'continue' → logprob: -11.752193450927734
    9. '                 ' → logprob: -11.877193450927734
    10. '       ' → logprob: -12.627193450927734

Token 214: ' but' (ID: 889)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022147594019770622
    2. 'nd' → logprob: -4.0221476554870605
    3. '         ' → logprob: -5.8971476554870605
    4. ' if' → logprob: -7.3971476554870605
    5. '           ' → logprob: -8.397147178649902
    6. 'continue' → logprob: -9.022147178649902
    7. 'for' → logprob: -9.897147178649902
    8. '             ' → logprob: -10.147147178649902
    9. '#' → logprob: -10.522147178649902
    10. '                 ' → logprob: -10.647147178649902

Token 215: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17924152314662933
    2. 'f' → logprob: -3.179241418838501
    3. 'abs' → logprob: -3.179241418838501
    4. 'dp' → logprob: -3.679241418838501
    5. ' if' → logprob: -4.17924165725708
    6. '(f' → logprob: -4.92924165725708
    7. 'continue' → logprob: -4.92924165725708
    8. 'cost' → logprob: -5.17924165725708
    9. '(dp' → logprob: -5.67924165725708
    10. 'j' → logprob: -5.92924165725708

Token 216: ' pancakes' (ID: 107762)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5465710163116455
    2. ' f' → logprob: -1.7965710163116455
    3. ' j' → logprob: -1.7965710163116455
    4. ' i' → logprob: -2.0465710163116455
    5. 'j' → logprob: -2.2965710163116455
    6. 'i' → logprob: -2.7965710163116455
    7. 'dp' → logprob: -3.6715710163116455
    8. ' p' → logprob: -3.9215710163116455
    9. ' abs' → logprob: -3.9215710163116455
    10. 'abs' → logprob: -4.171570777893066

Token 217: ' flipped' (ID: 96664)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.3713613748550415
    2. ' and' → logprob: -1.9963613748550415
    3. '[i' → logprob: -1.9963613748550415
    4. 'continue' → logprob: -1.9963613748550415
    5. '         ' → logprob: -2.496361255645752
    6. '==' → logprob: -3.121361255645752
    7. ' are' → logprob: -3.746361255645752
    8. ' continue' → logprob: -3.746361255645752
    9. '!=' → logprob: -3.871361255645752
    10. '[' → logprob: -3.996361255645752

Token 218: ' together' (ID: 4717)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06544413417577744
    2. ' together' → logprob: -3.440444231033325
    3. 'ind' → logprob: -3.940444231033325
    4. 'alone' → logprob: -5.690443992614746
    5. 'se' → logprob: -6.565443992614746
    6. '[i' → logprob: -7.190443992614746
    7. 'sim' → logprob: -7.565443992614746
    8. ' ' → logprob: -7.565443992614746
    9. 'tw' → logprob: -7.690443992614746
    10. 'in' → logprob: -7.690443992614746

Token 219: ',' (ID: 11)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.9298194050788879
    2. ' and' → logprob: -1.4298193454742432
    3. '           ' → logprob: -1.9298193454742432
    4. 'and' → logprob: -2.554819345474243
    5. ',' → logprob: -2.679819345474243
    6. ' if' → logprob: -3.054819345474243
    7. ':' → logprob: -4.304819583892822
    8. 'if' → logprob: -4.929819583892822
    9. '             ' → logprob: -5.804819583892822
    10. ':
' → logprob: -6.929819583892822

Token 220: ' handle' (ID: 5318)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1605638861656189
    2. ' if' → logprob: -2.4105639457702637
    3. 'nd' → logprob: -4.160563945770264
    4. 'continue' → logprob: -4.410563945770264
    5. '         ' → logprob: -4.535563945770264
    6. '           ' → logprob: -4.910563945770264
    7. ' ' → logprob: -5.285563945770264
    8. '             ' → logprob: -6.660563945770264
    9. ' nd' → logprob: -6.910563945770264
    10. ' continue' → logprob: -7.160563945770264

Token 221: ' only' (ID: 1606)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6602137684822083
    2. 'if' → logprob: -1.0352137088775635
    3. '         ' → logprob: -2.6602137088775635
    4. ' only' → logprob: -4.035213947296143
    5. '           ' → logprob: -4.285213947296143
    6. '             ' → logprob: -5.535213947296143
    7. 'continue' → logprob: -5.660213947296143
    8. ' the' → logprob: -5.785213947296143
    9. ' ' → logprob: -6.410213947296143
    10. 'only' → logprob: -6.535213947296143

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2093057483434677
    2. 'f' → logprob: -2.709305763244629
    3. 'j' → logprob: -3.084305763244629
    4. 'i' → logprob: -3.959305763244629
    5. ' if' → logprob: -4.209305763244629
    6. '         ' → logprob: -4.459305763244629
    7. 'next' → logprob: -4.959305763244629
    8. '     ' → logprob: -5.959305763244629
    9. 'dp' → logprob: -6.084305763244629
    10. '(i' → logprob: -6.209305763244629

Token 223: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2869895100593567
    2. 'f' → logprob: -2.161989450454712
    3. ' j' → logprob: -2.786989450454712
    4. 'i' → logprob: -3.161989450454712
    5. ' f' → logprob: -4.536989688873291
    6. ' i' → logprob: -5.036989688873291
    7. '(j' → logprob: -5.661989688873291
    8. '(f' → logprob: -5.911989688873291
    9. ' (' → logprob: -6.286989688873291
    10. 'abs' → logprob: -6.286989688873291

Token 224: ' even' (ID: 1952)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4569113850593567
    2. '<n' → logprob: -1.206911325454712
    3. '<=' → logprob: -3.956911325454712
    4. '==' → logprob: -4.331911563873291
    5. '<' → logprob: -4.456911563873291
    6. '!=' → logprob: -4.831911563873291
    7. ' <' → logprob: -4.831911563873291
    8. '%' → logprob: -6.206911563873291
    9. ' +' → logprob: -6.331911563873291
    10. ' <=' → logprob: -7.081911563873291

Token 225: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061769574880599976
    2. 'and' → logprob: -3.811769485473633
    3. '     ' → logprob: -4.561769485473633
    4. '   ' → logprob: -4.811769485473633
    5. '         ' → logprob: -4.811769485473633
    6. ' if' → logprob: -5.436769485473633
    7. ' ' → logprob: -5.811769485473633
    8. '       ' → logprob: -6.936769485473633
    9. '==' → logprob: -7.436769485473633
    10. '```' → logprob: -7.436769485473633

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2782028019428253
    2. '(i' → logprob: -2.153202772140503
    3. ' i' → logprob: -2.528202772140503
    4. 'j' → logprob: -3.528202772140503
    5. ' (' → logprob: -5.028203010559082
    6. '(j' → logprob: -5.403203010559082
    7. ' j' → logprob: -5.778203010559082
    8. '(' → logprob: -7.153203010559082
    9. 'False' → logprob: -7.403203010559082
    10. '(f' → logprob: -8.278203010559082

Token 227: ' odd' (ID: 14210)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2912251651287079
    2. ' ' → logprob: -2.5412251949310303
    3. '0' → logprob: -2.9162251949310303
    4. 'i' → logprob: -3.0412251949310303
    5. '1' → logprob: -3.9162251949310303
    6. ' %' → logprob: -4.041224956512451
    7. ' i' → logprob: -4.166224956512451
    8. '==' → logprob: -4.916224956512451
    9. '(i' → logprob: -5.791224956512451
    10. 'n' → logprob: -6.041224956512451

Token 228: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.011445419862866402
    2. '           ' → logprob: -5.51144552230835
    3. '     ' → logprob: -5.88644552230835
    4. ' if' → logprob: -6.01144552230835
    5. 'if' → logprob: -6.76144552230835
    6. '       ' → logprob: -7.76144552230835
    7. '```' → logprob: -8.511445045471191
    8. '   ' → logprob: -9.136445045471191
    9. '             ' → logprob: -9.761445045471191
    10. '
' → logprob: -9.886445045471191

Token 229: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.0006203425000421703
    2. ' if' → logprob: -8.750619888305664
    3. '           ' → logprob: -9.000619888305664
    4. 'if' → logprob: -9.000619888305664
    5. '     ' → logprob: -9.375619888305664
    6. '       ' → logprob: -9.750619888305664
    7. ' ' → logprob: -10.125619888305664
    8. '   ' → logprob: -11.125619888305664
    9. '<|end|>' → logprob: -11.750619888305664
    10. '```' → logprob: -13.000619888305664

Token 230: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005320800933986902
    2. ' if' → logprob: -5.255321025848389
    3. '         ' → logprob: -9.88032054901123
    4. '           ' → logprob: -10.75532054901123
    5. ' ' → logprob: -12.50532054901123
    6. '```' → logprob: -12.50532054901123
    7. 'continue' → logprob: -12.50532054901123
    8. '     ' → logprob: -14.13032054901123
    9. '             ' → logprob: -14.13032054901123
    10. '       ' → logprob: -14.63032054901123

Token 231: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20619776844978333
    2. ' if' → logprob: -1.706197738647461
    3. '         ' → logprob: -5.831197738647461
    4. '           ' → logprob: -6.581197738647461
    5. 'continue' → logprob: -8.206197738647461
    6. '```' → logprob: -9.581197738647461
    7. '             ' → logprob: -10.206197738647461
    8. ' continue' → logprob: -10.581197738647461
    9. ' ' → logprob: -11.206197738647461
    10. '          ' → logprob: -11.706197738647461

Token 232: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14180396497249603
    2. ' if' → logprob: -2.2668039798736572
    3. ' code' → logprob: -4.516803741455078
    4. 're' → logprob: -5.266803741455078
    5. 'continue' → logprob: -5.641803741455078
    6. ' condition' → logprob: -6.516803741455078
    7. ' next' → logprob: -6.641803741455078
    8. ' continue' → logprob: -6.891803741455078
    9. 'code' → logprob: -7.016803741455078
    10. ' following' → logprob: -7.891803741455078

Token 233: ' is' (ID: 382)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.9147070646286011
    2. ' is' → logprob: -1.289707064628601
    3. ' ' → logprob: -2.9147071838378906
    4. ' if' → logprob: -2.9147071838378906
    5. 'is' → logprob: -3.4147071838378906
    6. '==' → logprob: -3.7897071838378906
    7. 'continue' → logprob: -3.7897071838378906
    8. '         ' → logprob: -3.9147071838378906
    9. 'contin' → logprob: -4.414707183837891
    10. ':' → logprob: -4.914707183837891

Token 234: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.04060172662138939
    2. ' the' → logprob: -4.79060173034668
    3. ' how' → logprob: -4.91560173034668
    4. ' to' → logprob: -5.29060173034668
    5. 'that' → logprob: -5.41560173034668
    6. ' we' → logprob: -6.29060173034668
    7. ' at' → logprob: -6.29060173034668
    8. ' incomplete' → logprob: -6.29060173034668
    9. ' when' → logprob: -6.54060173034668
    10. ' in' → logprob: -6.66560173034668

Token 235: ' flipping' (ID: 110780)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7409436106681824
    2. '(i' → logprob: -1.4909436702728271
    3. ' (' → logprob: -1.9909436702728271
    4. ' i' → logprob: -2.490943670272827
    5. '(f' → logprob: -4.240943431854248
    6. 'f' → logprob: -4.365943431854248
    7. 'j' → logprob: -4.365943431854248
    8. '(j' → logprob: -5.115943431854248
    9. 'False' → logprob: -5.490943431854248
    10. 'True' → logprob: -5.865943431854248

Token 236: ' two' (ID: 1920)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -1.6532227993011475
    2. 'i' → logprob: -1.7782227993011475
    3. ' both' → logprob: -1.9032227993011475
    4. ' together' → logprob: -1.9032227993011475
    5. 'two' → logprob: -2.2782227993011475
    6. ' two' → logprob: -2.2782227993011475
    7. 't' → logprob: -3.0282227993011475
    8. 'p' → logprob: -3.2782227993011475
    9. ' i' → logprob: -4.028223037719727
    10. ' ' → logprob: -4.278223037719727

Token 237: ' pancakes' (ID: 107762)
  Prédit: ' pancakes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pancakes' → logprob: -0.08393141627311707
    2. ' together' → logprob: -3.4589314460754395
    3. 'p' → logprob: -3.7089314460754395
    4. ' adjacent' → logprob: -3.9589314460754395
    5. 'adj' → logprob: -6.5839314460754395
    6. 't' → logprob: -6.8339314460754395
    7. ' at' → logprob: -7.9589314460754395
    8. ' consecutive' → logprob: -7.9589314460754395
    9. 'pan' → logprob: -7.9589314460754395
    10. 'i' → logprob: -8.083930969238281

Token 238: ' at' (ID: 540)
  Prédit: ' together'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' together' → logprob: -0.8615315556526184
    2. ' at' → logprob: -2.2365314960479736
    3. '         ' → logprob: -2.3615314960479736
    4. ' if' → logprob: -2.7365314960479736
    5. ' can' → logprob: -3.2365314960479736
    6. ' simultaneously' → logprob: -3.4865314960479736
    7. ' continues' → logprob: -3.4865314960479736
    8. 't' → logprob: -3.8615314960479736
    9. 'if' → logprob: -3.9865314960479736
    10. ' is' → logprob: -4.486531734466553

Token 239: ' once' (ID: 4730)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6560894846916199
    2. 'a' → logprob: -1.2810895442962646
    3. 'once' → logprob: -2.7810895442962646
    4. ' a' → logprob: -3.4060895442962646
    5. 'the' → logprob: -4.1560893058776855
    6. 'even' → logprob: -4.2810893058776855
    7. 'one' → logprob: -4.6560893058776855
    8. 'odd' → logprob: -4.6560893058776855
    9. 'positions' → logprob: -4.7810893058776855
    10. ' i' → logprob: -4.9060893058776855

Token 240: ' affects' (ID: 33780)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.02842538431286812
    2. ' if' → logprob: -4.528425216674805
    3. '<|end|>' → logprob: -4.903425216674805
    4. ' and' → logprob: -5.528425216674805
    5. ' is' → logprob: -6.778425216674805
    6. '<|end|>' → logprob: -7.028425216674805
    7. ',' → logprob: -7.278425216674805
    8. '          ' → logprob: -7.403425216674805
    9. '           ' → logprob: -7.403425216674805
    10. 'and' → logprob: -8.153425216674805

Token 241: ' two' (ID: 1920)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9459535479545593
    2. ' dp' → logprob: -1.695953607559204
    3. 'the' → logprob: -2.195953607559204
    4. ' the' → logprob: -2.695953607559204
    5. 'both' → logprob: -2.695953607559204
    6. ' both' → logprob: -2.945953607559204
    7. 'two' → logprob: -4.195953369140625
    8. ' only' → logprob: -4.320953369140625
    9. 'next' → logprob: -4.320953369140625
    10. ' two' → logprob: -4.570953369140625

Token 242: ' pancakes' (ID: 107762)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4430354833602905
    2. ' pancakes' → logprob: -2.81803560256958
    3. ' states' → logprob: -2.94303560256958
    4. 'i' → logprob: -3.06803560256958
    5. 'dp' → logprob: -3.56803560256958
    6. 'states' → logprob: -3.69303560256958
    7. 'indices' → logprob: -3.94303560256958
    8. 'positions' → logprob: -3.94303560256958
    9. 'if' → logprob: -3.94303560256958
    10. '[i' → logprob: -4.44303560256958

Token 243: ',
' (ID: 412)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.05056174471974373
    2. '           ' → logprob: -3.4255616664886475
    3. '<|end|>' → logprob: -5.175561904907227
    4. '             ' → logprob: -5.425561904907227
    5. ' ' → logprob: -6.800561904907227
    6. '          ' → logprob: -7.175561904907227
    7. ' if' → logprob: -7.175561904907227
    8. '     ' → logprob: -7.425561904907227
    9. '<|end|>' → logprob: -7.550561904907227
    10. '       ' → logprob: -7.550561904907227

Token 244: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.8567099571228027
    2. '           ' → logprob: -1.7317099571228027
    3. ' continue' → logprob: -1.8567099571228027
    4. 'continue' → logprob: -2.1067099571228027
    5. ' and' → logprob: -3.6067099571228027
    6. '             ' → logprob: -3.8567099571228027
    7. '<|end|>' → logprob: -3.8567099571228027
    8. ' but' → logprob: -4.356709957122803
    9. ')' → logprob: -5.106709957122803
    10. 'and' → logprob: -5.356709957122803

Token 245: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6759576797485352
    2. '         ' → logprob: -1.1759576797485352
    3. ' if' → logprob: -2.175957679748535
    4. ' continue' → logprob: -4.050957679748535
    5. 'continue' → logprob: -4.425957679748535
    6. 'if' → logprob: -4.550957679748535
    7. '             ' → logprob: -4.550957679748535
    8. '       ' → logprob: -5.425957679748535
    9. '     ' → logprob: -5.800957679748535
    10. ' ' → logprob: -6.175957679748535

Token 246: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8026137948036194
    2. 'continue' → logprob: -1.9276137351989746
    3. '         ' → logprob: -2.0526137351989746
    4. ' continue' → logprob: -2.0526137351989746
    5. 'if' → logprob: -2.5526137351989746
    6. '#' → logprob: -3.0526137351989746
    7. '           ' → logprob: -4.052613735198975
    8. ' #' → logprob: -6.052613735198975
    9. '             ' → logprob: -7.302613735198975
    10. ' ' → logprob: -7.677613735198975

Token 247: ' we' (ID: 581)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7372690439224243
    2. ' continue' → logprob: -1.3622690439224243
    3. '         ' → logprob: -2.3622689247131348
    4. 'if' → logprob: -3.1122689247131348
    5. ' if' → logprob: -3.2372689247131348
    6. ' ' → logprob: -3.4872689247131348
    7. '     ' → logprob: -3.9872689247131348
    8. '       ' → logprob: -4.362268924713135
    9. '   ' → logprob: -4.987268924713135
    10. '           ' → logprob: -5.237268924713135

Token 248: ' need' (ID: 1309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7660947442054749
    2. ' continue' → logprob: -1.26609468460083
    3. ' need' → logprob: -2.01609468460083
    4. '     ' → logprob: -3.26609468460083
    5. '         ' → logprob: -3.51609468460083
    6. 'need' → logprob: -4.14109468460083
    7. '       ' → logprob: -4.39109468460083
    8. ' must' → logprob: -5.01609468460083
    9. ' ' → logprob: -5.64109468460083
    10. ' should' → logprob: -5.89109468460083

Token 249: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07015005499124527
    2. 'to' → logprob: -3.195150136947632
    3. '         ' → logprob: -4.695149898529053
    4. '     ' → logprob: -4.695149898529053
    5. '       ' → logprob: -6.070149898529053
    6. ' continue' → logprob: -6.570149898529053
    7. 'continue' → logprob: -6.820149898529053
    8. '           ' → logprob: -6.820149898529053
    9. '   ' → logprob: -6.945149898529053
    10. ' ' → logprob: -7.070149898529053

Token 250: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1561003476381302
    2. ' continue' → logprob: -3.156100273132324
    3. 'if' → logprob: -4.031100273132324
    4. 'i' → logprob: -4.156100273132324
    5. 'break' → logprob: -4.156100273132324
    6. 'skip' → logprob: -4.281100273132324
    7. 'pass' → logprob: -4.281100273132324
    8. ' break' → logprob: -5.031100273132324
    9. ' ' → logprob: -5.406100273132324
    10. ' i' → logprob: -5.656100273132324

Token 251: ' transition' (ID: 14463)
  Prédit: ' careful'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' careful' → logprob: -1.0275850296020508
    2. ' something' → logprob: -1.9025850296020508
    3. 'dp' → logprob: -2.152585029602051
    4. 'i' → logprob: -2.152585029602051
    5. ' dp' → logprob: -2.777585029602051
    6. 'something' → logprob: -3.527585029602051
    7. 'continue' → logprob: -3.652585029602051
    8. ' it' → logprob: -3.652585029602051
    9. ' a' → logprob: -3.777585029602051
    10. ' i' → logprob: -3.777585029602051

Token 252: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.454892098903656
    2. '         ' → logprob: -1.4548921585083008
    3. '           ' → logprob: -2.579892158508301
    4. ' only' → logprob: -3.079892158508301
    5. ' from' → logprob: -6.579892158508301
    6. '     ' → logprob: -6.829892158508301
    7. 'if' → logprob: -6.954892158508301
    8. ' for' → logprob: -7.079892158508301
    9. '             ' → logprob: -7.079892158508301
    10. ' ' → logprob: -7.454892158508301

Token 253: ' pairs' (ID: 24702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18400949239730835
    2. ' ' → logprob: -2.309009552001953
    3. 'two' → logprob: -4.309009552001953
    4. ' i' → logprob: -4.434009552001953
    5. '2' → logprob: -4.684009552001953
    6. 'increment' → logprob: -4.934009552001953
    7. ' steps' → logprob: -5.059009552001953
    8. 'steps' → logprob: -5.059009552001953
    9. ' two' → logprob: -5.434009552001953
    10. '1' → logprob: -6.184009552001953

Token 254: ',' (ID: 11)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.09013862907886505
    2. '           ' → logprob: -2.5901386737823486
    3. 'if' → logprob: -5.0901384353637695
    4. ' if' → logprob: -5.4651384353637695
    5. '             ' → logprob: -8.46513843536377
    6. ' ' → logprob: -8.96513843536377
    7. '       ' → logprob: -9.09013843536377
    8. '<|end|>' → logprob: -9.46513843536377
    9. '          ' → logprob: -9.71513843536377
    10. '     ' → logprob: -9.96513843536377

Token 255: ' thus' (ID: 13972)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -1.1202062368392944
    2. '           ' → logprob: -1.4952062368392944
    3. ' if' → logprob: -2.120206356048584
    4. '   ' → logprob: -2.495206356048584
    5. ' ' → logprob: -2.745206356048584
    6. '     ' → logprob: -2.745206356048584
    7. '       ' → logprob: -3.620206356048584
    8. 'if' → logprob: -3.620206356048584
    9. ' continue' → logprob: -3.870206356048584
    10. 'continue' → logprob: -3.995206356048584

Token 256: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40064623951911926
    2. 'continue' → logprob: -2.275646209716797
    3. '         ' → logprob: -2.775646209716797
    4. '       ' → logprob: -2.900646209716797
    5. ' if' → logprob: -3.525646209716797
    6. '     ' → logprob: -3.775646209716797
    7. '           ' → logprob: -4.150646209716797
    8. ' ' → logprob: -4.150646209716797
    9. '   ' → logprob: -4.275646209716797
    10. 'break' → logprob: -5.025646209716797

Token 257: ' process' (ID: 2273)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3237007856369019
    2. ' ' → logprob: -1.6987007856369019
    3. '     ' → logprob: -1.9487007856369019
    4. 'break' → logprob: -2.1987009048461914
    5. '       ' → logprob: -2.9487009048461914
    6. '   ' → logprob: -2.9487009048461914
    7. '         ' → logprob: -3.3237009048461914
    8. '           ' → logprob: -3.3237009048461914
    9. 'i' → logprob: -3.3237009048461914
    10. ' break' → logprob: -3.8237009048461914

Token 258: ' pairs' (ID: 24702)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.7856772541999817
    2. '     ' → logprob: -1.535677194595337
    3. 'if' → logprob: -2.285677194595337
    4. '   ' → logprob: -3.035677194595337
    5. '       ' → logprob: -3.160677194595337
    6. 'i' → logprob: -3.660677194595337
    7. 'break' → logprob: -3.660677194595337
    8. 'continue' → logprob: -4.160677433013916
    9. ' ' → logprob: -4.285677433013916
    10. 'only' → logprob: -4.410677433013916

Token 259: ' in' (ID: 306)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.09768460690975189
    2. '           ' → logprob: -2.847684621810913
    3. ' if' → logprob: -3.722684621810913
    4. 'if' → logprob: -5.347684383392334
    5. ' and' → logprob: -6.472684383392334
    6. ' ' → logprob: -6.722684383392334
    7. '       ' → logprob: -7.347684383392334
    8. 'and' → logprob: -7.472684383392334
    9. '             ' → logprob: -7.597684383392334
    10. '<|end|>' → logprob: -7.597684383392334

Token 260: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.376865416765213
    2. ' range' → logprob: -2.0018653869628906
    3. ' steps' → logprob: -2.7518653869628906
    4. 'pairs' → logprob: -3.0018653869628906
    5. 'steps' → logprob: -3.2518653869628906
    6. ' pairs' → logprob: -4.001865386962891
    7. 'i' → logprob: -5.876865386962891
    8. 'the' → logprob: -6.751865386962891
    9. 'step' → logprob: -6.751865386962891
    10. ' the' → logprob: -7.376865386962891

Token 261: ' iteration' (ID: 43155)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.42499881982803345
    2. ' +=' → logprob: -2.0499987602233887
    3. '+' → logprob: -2.5499987602233887
    4. '%' → logprob: -2.6749987602233887
    5. ' ' → logprob: -3.1749987602233887
    6. '==' → logprob: -4.674998760223389
    7. 'if' → logprob: -5.549998760223389
    8. ' %' → logprob: -5.799998760223389
    9. '=' → logprob: -5.924998760223389
    10. '   ' → logprob: -5.924998760223389

Token 262: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.007422168273478746
    2. '           ' → logprob: -5.882421970367432
    3. 'if' → logprob: -5.882421970367432
    4. ' if' → logprob: -6.507421970367432
    5. '       ' → logprob: -9.63242244720459
    6. '             ' → logprob: -9.88242244720459
    7. ' ' → logprob: -9.88242244720459
    8. '<|end|>' → logprob: -10.00742244720459
    9. '     ' → logprob: -10.25742244720459
    10. '          ' → logprob: -11.25742244720459

Token 263: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.24279552698135376
    2. 'if' → logprob: -1.867795467376709
    3. '           ' → logprob: -2.992795467376709
    4. ' if' → logprob: -4.617795467376709
    5. '       ' → logprob: -8.242795944213867
    6. '             ' → logprob: -8.367795944213867
    7. ' ' → logprob: -8.742795944213867
    8. '          ' → logprob: -8.992795944213867
    9. '     ' → logprob: -9.492795944213867
    10. '          
' → logprob: -9.867795944213867

Token 264: ' pass' (ID: 1853)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07425470650196075
    2. '           ' → logprob: -3.3242547512054443
    3. '         ' → logprob: -3.8242547512054443
    4. ' if' → logprob: -4.449254512786865
    5. '             ' → logprob: -7.199254512786865
    6. ' ' → logprob: -8.074254989624023
    7. '       ' → logprob: -8.324254989624023
    8. 'continue' → logprob: -8.824254989624023
    9. '     ' → logprob: -9.199254989624023
    10. '          ' → logprob: -9.199254989624023

Token 265: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.17553582787513733
    2. 'if' → logprob: -2.0505359172821045
    3. '           ' → logprob: -4.050535678863525
    4. ' if' → logprob: -5.050535678863525
    5. 'nd' → logprob: -5.925535678863525
    6. '             ' → logprob: -6.550535678863525
    7. 'continue' → logprob: -7.050535678863525
    8. '       ' → logprob: -7.425535678863525
    9. ' ' → logprob: -7.550535678863525
    10. '          ' → logprob: -7.675535678863525

Token 266: ' ' (ID: 220)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.5696597099304199
    2. 'if' → logprob: -0.9446597099304199
    3. ' if' → logprob: -3.94465970993042
    4. '           ' → logprob: -4.56965970993042
    5. 'continue' → logprob: -5.81965970993042
    6. '<|end|>' → logprob: -5.81965970993042
    7. '             ' → logprob: -5.94465970993042
    8. ' ' → logprob: -6.44465970993042
    9. '          ' → logprob: -6.81965970993042
    10. '+' → logprob: -7.44465970993042

Token 267: ' if' (ID: 538)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.29691770672798157
    2. 'if' → logprob: -1.7969176769256592
    3. '           ' → logprob: -2.671917676925659
    4. ' if' → logprob: -4.296917915344238
    5. '             ' → logprob: -5.796917915344238
    6. '               ' → logprob: -6.796917915344238
    7. '       ' → logprob: -7.046917915344238
    8. '                 ' → logprob: -7.296917915344238
    9. '                   ' → logprob: -7.671917915344238
    10. 'continue' → logprob: -7.921917915344238

Token 268: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6775721907615662
    2. 'i' → logprob: -0.9275721907615662
    3. ' n' → logprob: -3.427572250366211
    4. 'n' → logprob: -4.177572250366211
    5. ' nd' → logprob: -4.427572250366211
    6. ' dp' → logprob: -4.427572250366211
    7. 'dp' → logprob: -5.052572250366211
    8. ' not' → logprob: -5.427572250366211
    9. ' True' → logprob: -5.677572250366211
    10. ' ' → logprob: -6.427572250366211

Token 269: '<n' (ID: 33872)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24564824998378754
    2. '==' → logprob: -2.120648145675659
    3. '<n' → logprob: -2.745648145675659
    4. '!=' → logprob: -4.120648384094238
    5. '<' → logprob: -4.745648384094238
    6. '%' → logprob: -5.745648384094238
    7. '<len' → logprob: -6.245648384094238
    8. '+=' → logprob: -6.745648384094238
    9. ' ==' → logprob: -7.370648384094238
    10. ' +' → logprob: -7.745648384094238

Token 270: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.061054359131958e-06
    2. ' -' → logprob: -11.875007629394531
    3. '()-' → logprob: -14.750007629394531
    4. '1' → logprob: -15.000007629394531
    5. ':' → logprob: -16.25000762939453
    6. ')-' → logprob: -16.75000762939453
    7. '-
' → logprob: -17.00000762939453
    8. ' ' → logprob: -17.37500762939453
    9. 'else' → logprob: -18.25000762939453
    10. '-n' → logprob: -18.50000762939453

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05659322440624237
    2. '-' → logprob: -2.931593179702759
    3. '2' → logprob: -6.431593418121338
    4. ' ' → logprob: -9.43159294128418
    5. ' -' → logprob: -11.68159294128418
    6. '   ' → logprob: -12.68159294128418
    7. '```' → logprob: -12.80659294128418
    8. 'n' → logprob: -13.43159294128418
    9. ')' → logprob: -14.80659294128418
    10. '  ' → logprob: -14.93159294128418

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0396668910980225
    2. ' and' → logprob: -1.0396668910980225
    3. '   ' → logprob: -1.6646668910980225
    4. ' ' → logprob: -3.1646668910980225
    5. '     ' → logprob: -3.1646668910980225
    6. '       ' → logprob: -4.664667129516602
    7. '==' → logprob: -6.039667129516602
    8. 'and' → logprob: -6.164667129516602
    9. '         ' → logprob: -6.539667129516602
    10. ':
' → logprob: -6.664667129516602

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014753097668290138
    2. '     ' → logprob: -5.1397528648376465
    3. '       ' → logprob: -5.5147528648376465
    4. ' continue' → logprob: -6.0147528648376465
    5. 'continue' → logprob: -6.7647528648376465
    6. ' ' → logprob: -7.3897528648376465
    7. '         ' → logprob: -8.639753341674805
    8. '  ' → logprob: -9.014753341674805
    9. '           ' → logprob: -9.389753341674805
    10. '    ' → logprob: -10.014753341674805

Token 274: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9726175665855408
    2. '   ' → logprob: -1.3476176261901855
    3. '     ' → logprob: -1.8476176261901855
    4. 'for' → logprob: -2.5976176261901855
    5. ' ' → logprob: -2.7226176261901855
    6. ' continue' → logprob: -2.9726176261901855
    7. ' for' → logprob: -5.2226176261901855
    8. '       ' → logprob: -5.7226176261901855
    9. 'dp' → logprob: -6.7226176261901855
    10. 'i' → logprob: -7.3476176261901855

Token 275: ' Process' (ID: 12482)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15699145197868347
    2. ' ' → logprob: -3.156991481781006
    3. ' continue' → logprob: -3.156991481781006
    4. 'for' → logprob: -3.281991481781006
    5. '     ' → logprob: -4.656991481781006
    6. '   ' → logprob: -4.906991481781006
    7. 'i' → logprob: -6.531991481781006
    8. 'if' → logprob: -6.906991481781006
    9. ' for' → logprob: -7.156991481781006
    10. 'pass' → logprob: -7.156991481781006

Token 276: ' pairs' (ID: 24702)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.6924678683280945
    2. 'continue' → logprob: -1.5674679279327393
    3. '         ' → logprob: -2.6924679279327393
    4. ' ' → logprob: -3.1924679279327393
    5. ' continue' → logprob: -3.1924679279327393
    6. '       ' → logprob: -3.6924679279327393
    7. 'pairs' → logprob: -3.6924679279327393
    8. 'i' → logprob: -3.6924679279327393
    9. '   ' → logprob: -4.06746768951416
    10. ' pairs' → logprob: -4.06746768951416

Token 277: '
' (ID: 198)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.3528077006340027
    2. '         ' → logprob: -1.6028077602386475
    3. '   ' → logprob: -3.2278077602386475
    4. '       ' → logprob: -3.9778077602386475
    5. '           ' → logprob: -4.477807521820068
    6. ' ' → logprob: -4.477807521820068
    7. ' for' → logprob: -5.477807521820068
    8. 'for' → logprob: -5.852807521820068
    9. '<|end|>' → logprob: -5.852807521820068
    10. ' if' → logprob: -6.727807521820068

Token 278: '   ' (ID: 271)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.34061431884765625
    2. '   ' → logprob: -1.5906143188476562
    3. '         ' → logprob: -3.2156143188476562
    4. ' ' → logprob: -3.9656143188476562
    5. 'continue' → logprob: -4.715614318847656
    6. '       ' → logprob: -4.965614318847656
    7. 'for' → logprob: -5.215614318847656
    8. ' for' → logprob: -6.340614318847656
    9. '           ' → logprob: -6.965614318847656
    10. ' continue' → logprob: -7.090614318847656

Token 279: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5186729431152344
    2. '   ' → logprob: -1.6436729431152344
    3. '     ' → logprob: -2.0186729431152344
    4. ' ' → logprob: -3.3936729431152344
    5. ' for' → logprob: -3.5186729431152344
    6. 'continue' → logprob: -4.393672943115234
    7. ' continue' → logprob: -6.893672943115234
    8. '       ' → logprob: -6.893672943115234
    9. 'if' → logprob: -7.893672943115234
    10. '         ' → logprob: -8.393672943115234

Token 280: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000297685619443655
    2. '[' → logprob: -9.000297546386719
    3. ' ' → logprob: -10.500297546386719
    4. '=[' → logprob: -10.625297546386719
    5. '[i' → logprob: -10.750297546386719
    6. '=' → logprob: -11.250297546386719
    7. 'f' → logprob: -11.250297546386719
    8. '[f' → logprob: -11.250297546386719
    9. 'for' → logprob: -11.500297546386719
    10. 'P' → logprob: -11.625297546386719

Token 281: '=[' (ID: 13370)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.2933177649974823
    2. '[' → logprob: -2.1683177947998047
    3. '=f' → logprob: -2.6683177947998047
    4. '=' → logprob: -3.0433177947998047
    5. '[j' → logprob: -4.543317794799805
    6. '=[' → logprob: -5.293317794799805
    7. 'f' → logprob: -6.668317794799805
    8. ' =' → logprob: -7.168317794799805
    9. '<|end|>' → logprob: -7.418317794799805
    10. ']=' → logprob: -7.793317794799805

Token 282: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.05021205544471741
    2. '[' → logprob: -3.0502121448516846
    3. 'dp' → logprob: -6.8002119064331055
    4. ' [' → logprob: -8.675211906433105
    5. ' float' → logprob: -8.675211906433105
    6. '(float' → logprob: -9.925211906433105
    7. '[min' → logprob: -10.425211906433105
    8. 'min' → logprob: -10.675211906433105
    9. '<float' → logprob: -12.050211906433105
    10. '[f' → logprob: -12.175211906433105

Token 283: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00018244501552544534
    2. '(' → logprob: -8.625182151794434
    3. ' ('' → logprob: -13.375182151794434
    4. ''s' → logprob: -14.750182151794434
    5. '('-' → logprob: -15.000182151794434
    6. ' ' → logprob: -15.625182151794434
    7. '("' → logprob: -16.50018310546875
    8. ' (' → logprob: -16.87518310546875
    9. '(in' → logprob: -16.87518310546875
    10. ''in' → logprob: -17.62518310546875

Token 284: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.7432603272027336e-06
    2. ' inf' → logprob: -13.750001907348633
    3. ' ' → logprob: -16.000001907348633
    4. ''' → logprob: -16.000001907348633
    5. '')' → logprob: -16.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. ')' → logprob: -17.250001907348633
    8. ''s' → logprob: -17.250001907348633
    9. '
' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.875001907348633

Token 285: '')' (ID: 1542)
  Prédit: '')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.505768358707428
    2. '')' → logprob: -1.6307682991027832
    3. ')]' → logprob: -1.6307682991027832
    4. ')' → logprob: -5.630768299102783
    5. '']' → logprob: -6.880768299102783
    6. '())' → logprob: -8.630768775939941
    7. '()' → logprob: -8.755768775939941
    8. ''' → logprob: -8.880768775939941
    9. '('' → logprob: -9.005768775939941
    10. ']' → logprob: -10.255768775939941

Token 286: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0041742026805877686
    2. ']' → logprob: -6.12917423248291
    3. '*' → logprob: -7.00417423248291
    4. ']*(' → logprob: -7.62917423248291
    5. 'for' → logprob: -7.75417423248291
    6. ' ' → logprob: -9.75417423248291
    7. ']+' → logprob: -11.00417423248291
    8. ' ]' → logprob: -11.50417423248291
    9. ' for' → logprob: -11.50417423248291
    10. '   ' → logprob: -11.62917423248291

Token 287: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -11.125020027160645
    3. ' ' → logprob: -13.000020027160645
    4. '```' → logprob: -13.500020027160645
    5. 'dp' → logprob: -15.812520027160645
    6. '2' → logprob: -16.375019073486328
    7. '   ' → logprob: -16.500019073486328
    8. '`' → logprob: -16.562519073486328
    9. '1' → logprob: -16.750019073486328
    10. ' (' → logprob: -16.937519073486328

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19803018867969513
    2. 'for' → logprob: -2.9480302333831787
    3. '<|end|>' → logprob: -3.0730302333831787
    4. ' for' → logprob: -3.4480302333831787
    5. ' ' → logprob: -3.4480302333831787
    6. '         ' → logprob: -4.9480299949646
    7. '     ' → logprob: -5.0730299949646
    8. '
' → logprob: -6.5730299949646
    9. '       ' → logprob: -7.3230299949646
    10. 'continue' → logprob: -7.4480299949646

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046482354402542114
    2. 'for' → logprob: -3.7964823246002197
    3. '     ' → logprob: -4.796482563018799
    4. '         ' → logprob: -5.046482563018799
    5. ' ' → logprob: -5.171482563018799
    6. ' for' → logprob: -6.671482563018799
    7. '<|end|>' → logprob: -7.296482563018799
    8. '       ' → logprob: -7.796482563018799
    9. 'continue' → logprob: -8.92148208618164
    10. '           ' → logprob: -10.29648208618164

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006825128570199013
    2. ' ' → logprob: -5.881824970245361
    3. ' for' → logprob: -6.006824970245361
    4. 'continue' → logprob: -7.631824970245361
    5. '   ' → logprob: -7.881824970245361
    6. '     ' → logprob: -8.00682544708252
    7. '         ' → logprob: -8.50682544708252
    8. 'if' → logprob: -9.25682544708252
    9. '       ' → logprob: -10.63182544708252
    10. '           ' → logprob: -11.25682544708252

Token 291: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09317737072706223
    2. 'f' → logprob: -2.468177318572998
    3. ' j' → logprob: -5.843177318572998
    4. 'dp' → logprob: -7.218177318572998
    5. ' f' → logprob: -8.093177795410156
    6. 'prev' → logprob: -8.718177795410156
    7. 'p' → logprob: -10.968177795410156
    8. 'a' → logprob: -11.593177795410156
    9. 'old' → logprob: -11.593177795410156
    10. 'fj' → logprob: -11.843177795410156

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17979609966278076
    2. 'in' → logprob: -1.8047960996627808
    3. ' ' → logprob: -10.80479621887207
    4. 'range' → logprob: -11.42979621887207
    5. 'n' → logprob: -11.67979621887207
    6. '[' → logprob: -12.80479621887207
    7. '4' → logprob: -13.30479621887207
    8. '```' → logprob: -14.05479621887207
    9. 'import' → logprob: -14.17979621887207
    10. 'In' → logprob: -14.30479621887207

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.41866585687967e-06
    2. ' range' → logprob: -12.000008583068848
    3. '4' → logprob: -13.125008583068848
    4. '[' → logprob: -16.25000762939453
    5. '(' → logprob: -16.37500762939453
    6. '(range' → logprob: -16.75000762939453
    7. 'for' → logprob: -19.25000762939453
    8. '
' → logprob: -19.75000762939453
    9. '	range' → logprob: -20.62500762939453
    10. ' ' → logprob: -20.87500762939453

Token 294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14763443171977997
    2. 'range' → logprob: -2.147634506225586
    3. '4' → logprob: -3.897634506225586
    4. '(range' → logprob: -9.272634506225586
    5. 'in' → logprob: -10.022634506225586
    6. ' range' → logprob: -10.022634506225586
    7. '3' → logprob: -12.897634506225586
    8. '2' → logprob: -12.897634506225586
    9. '```' → logprob: -12.897634506225586
    10. '[' → logprob: -13.272634506225586

Token 295: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -13.375004768371582
    3. ')' → logprob: -14.125004768371582
    4. '1' → logprob: -14.375004768371582
    5. 'range' → logprob: -14.625004768371582
    6. '2' → logprob: -14.750004768371582
    7. '
' → logprob: -16.000003814697266
    8. 'for' → logprob: -16.437503814697266
    9. 'i' → logprob: -16.625003814697266
    10. 'float' → logprob: -16.687503814697266

Token 296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16080467402935028
    2. '):' → logprob: -1.9108046293258667
    3. ':' → logprob: -8.035804748535156
    4. ':
' → logprob: -9.535804748535156
    5. ']:
' → logprob: -9.785804748535156
    6. ')' → logprob: -10.035804748535156
    7. '):
' → logprob: -10.660804748535156
    8. ']:' → logprob: -10.910804748535156
    9. ' ' → logprob: -11.160804748535156
    10. '   ' → logprob: -11.785804748535156

Token 297: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.009704622440040112
    2. '       ' → logprob: -5.63470458984375
    3. ' for' → logprob: -6.50970458984375
    4. ' ' → logprob: -6.50970458984375
    5. ' if' → logprob: -6.88470458984375
    6. 'for' → logprob: -7.13470458984375
    7. 'if' → logprob: -7.50970458984375
    8. '   ' → logprob: -7.88470458984375
    9. '         ' → logprob: -8.75970458984375
    10. '    ' → logprob: -9.25970458984375

Token 298: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40175920724868774
    2. 'if' (adapté à ' if') → logprob: -1.276759147644043
    3. '       ' → logprob: -4.026759147644043
    4. '     ' → logprob: -4.026759147644043
    5. ' for' → logprob: -5.026759147644043
    6. ' ' → logprob: -5.151759147644043
    7. ' if' → logprob: -6.401759147644043
    8. '   ' → logprob: -6.776759147644043
    9. '         ' → logprob: -7.151759147644043
    10. '           ' → logprob: -9.401759147644043

Token 299: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013632946647703648
    2. ' dp' → logprob: -4.513632774353027
    3. 'nd' → logprob: -6.013632774353027
    4. ' nd' → logprob: -9.263632774353027
    5. ' ' → logprob: -10.638632774353027
    6. 'j' → logprob: -11.888632774353027
    7. '   ' → logprob: -13.263632774353027
    8. '	dp' → logprob: -13.263632774353027
    9. '  ' → logprob: -13.388632774353027
    10. ' j' → logprob: -13.638632774353027

Token 300: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.650518920039758e-06
    2. 'j' → logprob: -12.875003814697266
    3. '[' → logprob: -15.125003814697266
    4. '[i' → logprob: -15.375003814697266
    5. '```' → logprob: -15.625003814697266
    6. ' [' → logprob: -16.125003814697266
    7. '[
' → logprob: -16.250003814697266
    8. '\[' → logprob: -17.625003814697266
    9. '==' → logprob: -18.000003814697266
    10. '[[' → logprob: -18.125003814697266

Token 301: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.08976764231920242
    2. '==' → logprob: -2.4647676944732666
    3. ']!=' → logprob: -7.2147674560546875
    4. ']' → logprob: -10.214767456054688
    5. '']==' → logprob: -10.214767456054688
    6. '!=' → logprob: -11.839767456054688
    7. ' ==' → logprob: -12.089767456054688
    8. '```' → logprob: -13.339767456054688
    9. ')==' → logprob: -13.589767456054688
    10. ']=' → logprob: -13.839767456054688

Token 302: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.088346359931165e-07
    2. ' float' → logprob: -14.000000953674316
    3. '	float' → logprob: -17.5
    4. '0' → logprob: -17.625
    5. '=float' → logprob: -18.375
    6. ' ' → logprob: -18.625
    7. 'f' → logprob: -19.25
    8. '   ' → logprob: -19.625
    9. 'int' → logprob: -19.75
    10. '  ' → logprob: -19.875

Token 303: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004946735687553883
    2. ''in' → logprob: -5.629946708679199
    3. 'inf' → logprob: -6.754946708679199
    4. ''' → logprob: -9.3799467086792
    5. ''s' → logprob: -9.6299467086792
    6. '_inf' → logprob: -11.8799467086792
    7. '['' → logprob: -12.0049467086792
    8. ''i' → logprob: -12.8799467086792
    9. '-inf' → logprob: -13.5049467086792
    10. 'float' → logprob: -13.5049467086792

Token 304: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.000204851632588543
    2. 'float' → logprob: -8.500205039978027
    3. '0' → logprob: -14.625205039978027
    4. ' inf' → logprob: -14.625205039978027
    5. '3' → logprob: -15.625205039978027
    6. '4' → logprob: -16.25020408630371
    7. ' ' → logprob: -16.75020408630371
    8. ')' → logprob: -17.37520408630371
    9. ''in' → logprob: -17.62520408630371
    10. '5' → logprob: -17.75020408630371

Token 305: ''):' (ID: 83830)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07024095207452774
    2. ''):' → logprob: -2.6952409744262695
    3. ')' → logprob: -9.57024097442627
    4. '):
' → logprob: -9.69524097442627
    5. '"):' → logprob: -10.07024097442627
    6. ':' → logprob: -10.32024097442627
    7. ' ):' → logprob: -10.82024097442627
    8. ''):
' → logprob: -11.32024097442627
    9. '')' → logprob: -11.44524097442627
    10. '       ' → logprob: -11.57024097442627

Token 306: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2599012553691864
    2. ' continue' → logprob: -1.5099012851715088
    3. '       ' → logprob: -5.00990104675293
    4. '     ' → logprob: -6.88490104675293
    5. ' ' → logprob: -9.13490104675293
    6. '         ' → logprob: -10.38490104675293
    7. '	continue' → logprob: -10.50990104675293
    8. '      ' → logprob: -10.75990104675293
    9. '   ' → logprob: -11.13490104675293
    10. 'contin' → logprob: -11.88490104675293

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4193175733089447
    2. '     ' → logprob: -1.169317603111267
    3. 'for' → logprob: -4.169317722320557
    4. ' for' → logprob: -4.294317722320557
    5. '   ' → logprob: -6.169317722320557
    6. ' ' → logprob: -8.044317245483398
    7. '<|end|>' → logprob: -8.544317245483398
    8. '         ' → logprob: -9.544317245483398
    9. '           ' → logprob: -9.794317245483398
    10. '      ' → logprob: -10.169317245483398

Token 308: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.48297247290611267
    2. '       ' → logprob: -1.482972502708435
    3. 'for' → logprob: -2.1079723834991455
    4. ' for' → logprob: -3.6079723834991455
    5. '   ' → logprob: -5.232972621917725
    6. ' ' → logprob: -6.732972621917725
    7. '         ' → logprob: -7.232972621917725
    8. '           ' → logprob: -9.607972145080566
    9. 'if' → logprob: -9.607972145080566
    10. '      ' → logprob: -9.857972145080566

Token 309: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019775478169322014
    2. '       ' → logprob: -5.144775390625
    3. ' for' → logprob: -5.394775390625
    4. '     ' → logprob: -5.519775390625
    5. 'if' → logprob: -6.144775390625
    6. '         ' → logprob: -6.269775390625
    7. '   ' → logprob: -7.644775390625
    8. ' ' → logprob: -7.769775390625
    9. '           ' → logprob: -8.644775390625
    10. '      ' → logprob: -10.769775390625

Token 310: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001515100128017366
    2. ' f' → logprob: -6.501514911651611
    3. 'k' → logprob: -11.50151538848877
    4. ' ' → logprob: -14.37651538848877
    5. '   ' → logprob: -14.75151538848877
    6. '(f' → logprob: -15.50151538848877
    7. '	f' → logprob: -15.62651538848877
    8. 'fj' → logprob: -15.62651538848877
    9. 'x' → logprob: -15.87651538848877
    10. 'a' → logprob: -16.126514434814453

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007782964967191219
    2. ' in' → logprob: -7.3757781982421875
    3. '2' → logprob: -9.250778198242188
    4. 'in' → logprob: -10.500778198242188
    5. 'f' → logprob: -10.500778198242188
    6. '```' → logprob: -15.250778198242188
    7. ' ' → logprob: -16.250778198242188
    8. '0' → logprob: -16.375778198242188
    9. '_' → logprob: -17.000778198242188
    10. '[' → logprob: -17.375778198242188

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10025595128536224
    2. 'in' → logprob: -2.3502559661865234
    3. 'range' → logprob: -10.350255966186523
    4. ' ' → logprob: -11.725255966186523
    5. '```' → logprob: -12.725255966186523
    6. '[' → logprob: -14.100255966186523
    7. 'import' → logprob: -14.350255966186523
    8. '1' → logprob: -14.350255966186523
    9. 'f' → logprob: -14.350255966186523
    10. '   ' → logprob: -14.975255966186523

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '4' → logprob: -18.625003814697266
    4. '(range' → logprob: -19.500003814697266
    5. '
' → logprob: -23.250003814697266
    6. '(' → logprob: -24.250003814697266
    7. 'for' → logprob: -24.250003814697266
    8. '[' → logprob: -24.500003814697266
    9. '	range' → logprob: -24.625003814697266
    10. ' ' → logprob: -25.375003814697266

Token 314: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.553032628493384e-05
    2. '4' → logprob: -9.625075340270996
    3. 'range' → logprob: -11.625075340270996
    4. ' (' → logprob: -15.500075340270996
    5. ' ' → logprob: -16.375076293945312
    6. ' range' → logprob: -16.625076293945312
    7. 'for' → logprob: -17.625076293945312
    8. '```' → logprob: -18.000076293945312
    9. '[' → logprob: -18.250076293945312
    10. '(
' → logprob: -18.250076293945312

Token 315: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'range' → logprob: -16.375001907348633
    4. '(' → logprob: -18.375001907348633
    5. ')' → logprob: -18.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '0' → logprob: -19.750001907348633
    9. '۴' → logprob: -19.875001907348633
    10. '
' → logprob: -20.125001907348633

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1815958172082901
    2. '):
' → logprob: -1.806595802307129
    3. ':' → logprob: -6.556595802307129
    4. ')' → logprob: -8.556595802307129
    5. '       ' → logprob: -9.556595802307129
    6. ' ' → logprob: -9.931595802307129
    7. '):
' → logprob: -10.806595802307129
    8. '   ' → logprob: -10.931595802307129
    9. ':
' → logprob: -11.056595802307129
    10. '):

' → logprob: -11.181595802307129

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005047913640737534
    2. 'for' → logprob: -6.005047798156738
    3. ' for' → logprob: -6.005047798156738
    4. '         ' → logprob: -10.005047798156738
    5. '<|end|>' → logprob: -10.380047798156738
    6. ' ' → logprob: -11.755047798156738
    7. '     ' → logprob: -12.130047798156738
    8. '           ' → logprob: -12.505047798156738
    9. ' if' → logprob: -13.630047798156738
    10. '               ' → logprob: -13.755047798156738

Token 318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017450001090765
    2. ' for' → logprob: -4.767449855804443
    3. '       ' → logprob: -4.892449855804443
    4. '         ' → logprob: -6.892449855804443
    5. '           ' → logprob: -9.142450332641602
    6. ' ' → logprob: -9.392450332641602
    7. '   ' → logprob: -10.517450332641602
    8. 'if' → logprob: -11.017450332641602
    9. '     ' → logprob: -11.142450332641602
    10. 'cost' → logprob: -11.142450332641602

Token 319: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04858816787600517
    2. ' f' → logprob: -3.048588275909424
    3. '(f' → logprob: -14.173587799072266
    4. '	f' → logprob: -16.923587799072266
    5. '[f' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.423587799072266
    7. '   ' → logprob: -18.548587799072266
    8. ',f' → logprob: -19.048587799072266
    9. '4' → logprob: -19.423587799072266
    10. ',' → logprob: -19.548587799072266

Token 320: '2' (ID: 17)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22748742997646332
    2. '2' → logprob: -1.6024874448776245
    3. ' f' → logprob: -6.477487564086914
    4. '(f' → logprob: -8.352487564086914
    5. '(' → logprob: -8.477487564086914
    6. '4' → logprob: -9.852487564086914
    7. 's' → logprob: -11.852487564086914
    8. 'range' → logprob: -11.977487564086914
    9. '1' → logprob: -12.102487564086914
    10. ' (' → logprob: -12.727487564086914

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804275393486023
    2. 'in' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.538043022155762
    4. '[' → logprob: -14.788043022155762
    5. '```' → logprob: -15.413043022155762
    6. 'range' → logprob: -16.413042068481445
    7. '(' → logprob: -16.663042068481445
    8. '0' → logprob: -18.163042068481445
    9. '<|end|>' → logprob: -18.413042068481445
    10. 'In' → logprob: -18.538042068481445

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007712708320468664
    2. '(' → logprob: -7.5007710456848145
    3. ' range' → logprob: -8.750771522521973
    4. '(range' → logprob: -9.750771522521973
    5. '4' → logprob: -13.375771522521973
    6. 'in' → logprob: -16.125770568847656
    7. ' (' → logprob: -18.375770568847656
    8. '[' → logprob: -18.750770568847656
    9. '```' → logprob: -19.250770568847656
    10. ' ' → logprob: -20.000770568847656

Token 323: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012403888104017824
    2. 'range' → logprob: -9.000123977661133
    3. '(range' → logprob: -14.875123977661133
    4. ' range' → logprob: -15.500123977661133
    5. ' (' → logprob: -18.000123977661133
    6. 'in' → logprob: -18.375123977661133
    7. '4' → logprob: -18.500123977661133
    8. '```' → logprob: -19.500123977661133
    9. '(
' → logprob: -21.625123977661133
    10. '[' → logprob: -21.625123977661133

Token 324: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. ' ' → logprob: -16.000001907348633
    4. 'range' → logprob: -16.375001907348633
    5. '```' → logprob: -19.375001907348633
    6. ')' → logprob: -20.500001907348633
    7. ' range' → logprob: -21.125001907348633
    8. '
' → logprob: -21.125001907348633
    9. '   ' → logprob: -22.000001907348633
    10. '۴' → logprob: -22.375001907348633

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4882490634918213
    2. '):' → logprob: -0.9882490634918213
    3. ':' → logprob: -4.363248825073242
    4. ':
' → logprob: -7.863248825073242
    5. '):

' → logprob: -8.363248825073242
    6. '4' → logprob: -8.738248825073242
    7. '):
' → logprob: -8.738248825073242
    8. ')' → logprob: -8.863248825073242
    9. '[' → logprob: -9.238248825073242
    10. '```' → logprob: -10.363248825073242

Token 326: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.0033723425585776567
    2. 'cost' → logprob: -6.1283721923828125
    3. '           ' → logprob: -7.5033721923828125
    4. 'if' → logprob: -8.253372192382812
    5. ' if' → logprob: -8.503372192382812
    6. ' cost' → logprob: -9.753372192382812
    7. '       ' → logprob: -10.378372192382812
    8. '```' → logprob: -10.753372192382812
    9. '             ' → logprob: -10.878372192382812
    10. 'nd' → logprob: -11.253372192382812

Token 327: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.00954428780823946
    2. ' cost' → logprob: -5.259544372558594
    3. '           ' → logprob: -5.759544372558594
    4. 'if' → logprob: -7.259544372558594
    5. '         ' → logprob: -8.384544372558594
    6. '             ' → logprob: -9.509544372558594
    7. ' if' → logprob: -9.884544372558594
    8. ' ' → logprob: -10.384544372558594
    9. '          ' → logprob: -10.509544372558594
    10. '   ' → logprob: -11.509544372558594

Token 328: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005348432343453169
    2. ' =' → logprob: -5.255348205566406
    3. '=max' → logprob: -10.005348205566406
    4. '=min' → logprob: -10.505348205566406
    5. '=int' → logprob: -10.755348205566406
    6. '=float' → logprob: -12.505348205566406
    7. '=sum' → logprob: -12.755348205566406
    8. '=f' → logprob: -13.005348205566406
    9. '=(' → logprob: -13.380348205566406
    10. '=c' → logprob: -13.505348205566406

Token 329: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0018359452951699495
    2. 'dp' → logprob: -6.376835823059082
    3. ' abs' → logprob: -9.251835823059082
    4. 'nd' → logprob: -11.001835823059082
    5. '(abs' → logprob: -11.501835823059082
    6. 'cost' → logprob: -11.751835823059082
    7. ' ' → logprob: -13.751835823059082
    8. ' dp' → logprob: -14.001835823059082
    9. '(' → logprob: -15.626835823059082
    10. 'max' → logprob: -15.626835823059082

Token 330: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.320199877838604e-07
    2. 'f' → logprob: -15.875
    3. '(' → logprob: -16.25
    4. '(abs' → logprob: -16.625
    5. '[f' → logprob: -17.375
    6. 'abs' → logprob: -18.875
    7. '(fp' → logprob: -19.375
    8. '(p' → logprob: -19.625
    9. 'dp' → logprob: -20.0
    10. '(j' → logprob: -20.0

Token 331: '1' (ID: 16)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5371484160423279
    2. '[f' → logprob: -1.2871484756469727
    3. 'f' → logprob: -2.2871484756469727
    4. '1' → logprob: -3.2871484756469727
    5. 'p' → logprob: -8.037148475646973
    6. 's' → logprob: -8.787148475646973
    7. '-' → logprob: -10.037148475646973
    8. '-f' → logprob: -10.537148475646973
    9. '[' → logprob: -10.662148475646973
    10. ' f' → logprob: -11.162148475646973

Token 332: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.009763291105628014
    2. ' -' → logprob: -4.634763240814209
    3. '-' → logprob: -12.134763717651367
    4. ' ' → logprob: -13.884763717651367
    5. 'p' → logprob: -14.509763717651367
    6. '[' → logprob: -15.884763717651367
    7. ')-' → logprob: -16.259763717651367
    8. ')' → logprob: -16.884763717651367
    9. '```' → logprob: -17.509763717651367
    10. '-f' → logprob: -17.884763717651367

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -14.750000953674316
    4. '[j' → logprob: -15.625000953674316
    5. '{i' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.625001907348633
    7. ' [' → logprob: -18.750001907348633
    8. '(i' → logprob: -19.125001907348633
    9. '[
' → logprob: -19.250001907348633
    10. ' i' → logprob: -19.375001907348633

Token 334: '])+' (ID: 119485)
  Prédit: '])+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])+' → logprob: -0.47435131669044495
    2. '])' → logprob: -0.9743512868881226
    3. ']+' → logprob: -8.474350929260254
    4. '])-' → logprob: -10.974350929260254
    5. ')' → logprob: -11.224350929260254
    6. '[i' → logprob: -11.724350929260254
    7. ']' → logprob: -12.099350929260254
    8. '))+' → logprob: -12.474350929260254
    9. '1' → logprob: -12.849350929260254
    10. ' ])' → logprob: -12.849350929260254

Token 335: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.961759259458631e-06
    2. ' abs' → logprob: -12.250004768371582
    3. '(abs' → logprob: -16.6250057220459
    4. 'cost' → logprob: -20.0000057220459
    5. ' ' → logprob: -20.5000057220459
    6. '         ' → logprob: -20.8750057220459
    7. '.abs' → logprob: -21.0000057220459
    8. '     ' → logprob: -22.2500057220459
    9. '
' → logprob: -22.3750057220459
    10. '```' → logprob: -22.5000057220459

Token 336: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.5048530030981055e-06
    2. 'f' → logprob: -14.625001907348633
    3. 'abs' → logprob: -14.875001907348633
    4. '(' → logprob: -15.500001907348633
    5. ' (' → logprob: -15.625001907348633
    6. '(abs' → logprob: -15.625001907348633
    7. '[f' → logprob: -16.875001907348633
    8. '2' → logprob: -18.250001907348633
    9. '(
' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633

Token 337: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0529799610376358
    2. 'f' → logprob: -3.0529799461364746
    3. 's' → logprob: -6.302979946136475
    4. '[i' → logprob: -6.927979946136475
    5. 'p' → logprob: -7.427979946136475
    6. 'i' → logprob: -7.927979946136475
    7. '[f' → logprob: -8.427980422973633
    8. '(i' → logprob: -8.677980422973633
    9. '[' → logprob: -9.302980422973633
    10. '(f' → logprob: -9.802980422973633

Token 338: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.00013357517309486866
    2. ' -' → logprob: -9.000133514404297
    3. '[' → logprob: -11.875133514404297
    4. ' ' → logprob: -13.500133514404297
    5. 'p' → logprob: -14.125133514404297
    6. '-' → logprob: -14.500133514404297
    7. '[p' → logprob: -15.000133514404297
    8. '(p' → logprob: -16.750133514404297
    9. '<p' → logprob: -16.750133514404297
    10. '```' → logprob: -17.625133514404297

Token 339: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. 'i' → logprob: -11.750008583068848
    3. '+i' → logprob: -15.875008583068848
    4. 'p' → logprob: -16.000009536743164
    5. '[' → logprob: -16.375009536743164
    6. '{i' → logprob: -16.375009536743164
    7. '+' → logprob: -16.625009536743164
    8. '```' → logprob: -16.750009536743164
    9. '[j' → logprob: -17.000009536743164
    10. '(i' → logprob: -17.125009536743164

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.629921436891891e-05
    2. '1' → logprob: -10.87502670288086
    3. ' +' → logprob: -12.62502670288086
    4. '+i' → logprob: -13.37502670288086
    5. ']+' → logprob: -14.25002670288086
    6. ' ' → logprob: -14.50002670288086
    7. '])' → logprob: -14.75002670288086
    8. '2' → logprob: -15.37502670288086
    9. '```' → logprob: -15.87502670288086
    10. 'plus' → logprob: -16.12502670288086

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '+' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.000007629394531
    4. '```' → logprob: -16.25000762939453
    5. '
' → logprob: -16.62500762939453
    6. '   ' → logprob: -17.50000762939453
    7. '2' → logprob: -17.93750762939453
    8. '１' → logprob: -18.06250762939453
    9. '[' → logprob: -18.56250762939453
    10. '۱' → logprob: -18.68750762939453

Token 342: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01144400518387556
    2. '])
' → logprob: -4.886444091796875
    3. '])+' → logprob: -5.761444091796875
    4. ')' → logprob: -8.011444091796875
    5. '])
' → logprob: -8.636444091796875
    6. '])*' → logprob: -9.511444091796875
    7. ']' → logprob: -10.761444091796875
    8. ']+' → logprob: -11.011444091796875
    9. '])-' → logprob: -11.011444091796875
    10. '         ' → logprob: -11.386444091796875

Token 343: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.005091560538858175
    2. 'nd' → logprob: -5.505091667175293
    3. 'if' → logprob: -7.505091667175293
    4. ' if' → logprob: -8.880091667175293
    5. '           ' → logprob: -9.130091667175293
    6. ' nd' → logprob: -9.255091667175293
    7. '             ' → logprob: -10.380091667175293
    8. '```' → logprob: -10.380091667175293
    9. 'dp' → logprob: -11.130091667175293
    10. '
' → logprob: -12.130091667175293

Token 344: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.06521330773830414
    2. ' nd' → logprob: -3.315213203430176
    3. 'if' → logprob: -3.940213203430176
    4. '         ' → logprob: -5.440213203430176
    5. ' if' → logprob: -6.565213203430176
    6. '           ' → logprob: -6.940213203430176
    7. ' ' → logprob: -8.190213203430176
    8. '   ' → logprob: -9.815213203430176
    9. '             ' → logprob: -9.940213203430176
    10. '(nd' → logprob: -10.190213203430176

Token 345: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.630610641877865e-06
    2. 'dp' → logprob: -13.250006675720215
    3. '=' → logprob: -13.625006675720215
    4. ' ' → logprob: -14.375006675720215
    5. ' p' → logprob: -14.500006675720215
    6. 'pc' → logprob: -15.000006675720215
    7. '
' → logprob: -15.500006675720215
    8. '   ' → logprob: -15.500006675720215
    9. '```' → logprob: -16.0000057220459
    10. 'cost' → logprob: -16.0625057220459

Token 346: '2' (ID: 17)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -2.451116051815916e-05
    2. '[' → logprob: -11.125024795532227
    3. 'f' → logprob: -12.250024795532227
    4. ' [' → logprob: -13.375024795532227
    5. '=f' → logprob: -14.000024795532227
    6. '[min' → logprob: -14.625024795532227
    7. '[
' → logprob: -14.750024795532227
    8. '[j' → logprob: -14.875024795532227
    9. '
' → logprob: -15.000024795532227
    10. '```' → logprob: -15.875024795532227

Token 347: '=[' (ID: 13370)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.00034940900513902307
    2. '=f' → logprob: -8.625349044799805
    3. '=[' → logprob: -9.500349044799805
    4. '=' → logprob: -10.375349044799805
    5. '[' → logprob: -10.500349044799805
    6. 'f' → logprob: -10.625349044799805
    7. ' =' → logprob: -12.250349044799805
    8. ' [' → logprob: -13.625349044799805
    9. '[j' → logprob: -14.625349044799805
    10. ',f' → logprob: -14.625349044799805

Token 348: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.2200749754119897e-06
    2. ' float' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '  ' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.750001907348633
    6. '(float' → logprob: -17.250001907348633
    7. '[' → logprob: -17.250001907348633
    8. '	float' → logprob: -17.875001907348633
    9. 'min' → logprob: -17.875001907348633
    10. ',float' → logprob: -17.875001907348633

Token 349: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1279553291387856e-05
    2. ''in' → logprob: -11.750011444091797
    3. 'float' → logprob: -13.750011444091797
    4. '(float' → logprob: -13.875011444091797
    5. '(' → logprob: -14.250011444091797
    6. ''s' → logprob: -15.250011444091797
    7. ''' → logprob: -15.875011444091797
    8. '(in' → logprob: -15.875011444091797
    9. 'inf' → logprob: -16.375011444091797
    10. ' ('' → logprob: -17.875011444091797

Token 350: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.0126840758603066e-05
    2. 'float' → logprob: -10.375040054321289
    3. ''' → logprob: -12.125040054321289
    4. ''in' → logprob: -13.250040054321289
    5. '('' → logprob: -13.500040054321289
    6. ''s' → logprob: -16.12504005432129
    7. ''i' → logprob: -18.62504005432129
    8. ' inf' → logprob: -19.12504005432129
    9. ''d' → logprob: -19.25004005432129
    10. ''n' → logprob: -19.62504005432129

Token 351: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07978536933660507
    2. '()' → logprob: -3.3297853469848633
    3. '']' → logprob: -4.204785346984863
    4. ']*' → logprob: -4.579785346984863
    5. ')*' → logprob: -5.079785346984863
    6. '')' → logprob: -5.579785346984863
    7. ')' → logprob: -6.079785346984863
    8. ']' → logprob: -7.454785346984863
    9. '()]' → logprob: -7.454785346984863
    10. ']*(' → logprob: -7.579785346984863

Token 352: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -7.636475493200123e-05
    2. ']*(' → logprob: -10.000076293945312
    3. '*' → logprob: -10.625076293945312
    4. ']' → logprob: -12.625076293945312
    5. '```' → logprob: -14.000076293945312
    6. 'for' → logprob: -14.375076293945312
    7. '[' → logprob: -14.750076293945312
    8. '()*' → logprob: -15.000076293945312
    9. '(' → logprob: -15.125076293945312
    10. ',' → logprob: -15.375076293945312

Token 353: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.539801688631997e-05
    2. '16' → logprob: -10.750065803527832
    3. '2' → logprob: -11.125065803527832
    4. '(' → logprob: -11.500065803527832
    5. ' ' → logprob: -11.500065803527832
    6. '8' → logprob: -12.000065803527832
    7. '1' → logprob: -14.437565803527832
    8. '```' → logprob: -14.500065803527832
    9. '   ' → logprob: -14.625065803527832
    10. ' (' → logprob: -15.750065803527832

Token 354: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.048091012984514236
    2. 'for' → logprob: -3.173090934753418
    3. ' for' → logprob: -5.798090934753418
    4. 'nd' → logprob: -7.173090934753418
    5. 'dp' → logprob: -7.798090934753418
    6. 'cost' → logprob: -8.673090934753418
    7. '             ' → logprob: -9.173090934753418
    8. '                 ' → logprob: -9.423090934753418
    9. '           ' → logprob: -9.673090934753418
    10. '
' → logprob: -9.923090934753418

Token 355: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.002122426638379693
    2. 'nd' → logprob: -7.252122402191162
    3. 'if' → logprob: -7.377122402191162
    4. 'for' → logprob: -8.25212287902832
    5. '                 ' → logprob: -9.25212287902832
    6. '           ' → logprob: -9.50212287902832
    7. ' if' → logprob: -9.75212287902832
    8. ' for' → logprob: -10.00212287902832
    9. '             ' → logprob: -10.12712287902832
    10. '```' → logprob: -10.25212287902832

Token 356: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.09334646165370941
    2. '         ' → logprob: -2.843346357345581
    3. 'for' → logprob: -4.21834659576416
    4. 'dp' → logprob: -4.84334659576416
    5. 'if' → logprob: -5.09334659576416
    6. 'cost' → logprob: -6.59334659576416
    7. ' nd' → logprob: -8.21834659576416
    8. '           ' → logprob: -8.96834659576416
    9. ' ' → logprob: -9.09334659576416
    10. ' for' → logprob: -10.21834659576416

Token 357: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.584239938296378e-06
    2. 'for' → logprob: -12.125007629394531
    3. 'dp' → logprob: -14.125007629394531
    4. ' for' → logprob: -15.125007629394531
    5. ' ' → logprob: -15.125007629394531
    6. '
' → logprob: -15.250007629394531
    7. 'pr' → logprob: -15.875007629394531
    8. '```' → logprob: -16.50000762939453
    9. '[' → logprob: -17.00000762939453
    10. 'п' → logprob: -17.37500762939453

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35783305764198303
    2. '[f' → logprob: -1.2328330278396606
    3. '[' → logprob: -5.107832908630371
    4. '=' → logprob: -6.482832908630371
    5. '=f' → logprob: -6.982832908630371
    6. '=[' → logprob: -8.857832908630371
    7. '```' → logprob: -9.482832908630371
    8. ' =' → logprob: -9.482832908630371
    9. 'f' → logprob: -9.982832908630371
    10. '[j' → logprob: -9.982832908630371

Token 359: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0013648776803165674
    2. '[' → logprob: -7.126364707946777
    3. '[j' → logprob: -8.626364707946777
    4. '=f' → logprob: -8.876364707946777
    5. ' =' → logprob: -9.876364707946777
    6. 'f' → logprob: -9.876364707946777
    7. '=' → logprob: -10.126364707946777
    8. '=[' → logprob: -10.501364707946777
    9. '[p' → logprob: -11.376364707946777
    10. ' [' → logprob: -11.876364707946777

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016027313540689647
    2. '1' → logprob: -8.750160217285156
    3. '
' → logprob: -14.625160217285156
    4. '[' → logprob: -15.000160217285156
    5. 'or' → logprob: -15.125160217285156
    6. '```' → logprob: -15.687660217285156
    7. ']' → logprob: -15.937660217285156
    8. '₂' → logprob: -16.812660217285156
    9. 'irst' → logprob: -17.125160217285156
    10. '_' → logprob: -17.250160217285156

Token 361: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.000742207164876163
    2. ']' → logprob: -7.250742435455322
    3. ']+=' → logprob: -11.750741958618164
    4. '=' → logprob: -12.000741958618164
    5. ']=(' → logprob: -12.375741958618164
    6. ']=-' → logprob: -12.500741958618164
    7. 'f' → logprob: -12.875741958618164
    8. '=min' → logprob: -13.375741958618164
    9. ' ]' → logprob: -13.625741958618164
    10. ')=' → logprob: -14.375741958618164

Token 362: 'dp' (ID: 19037)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00031389365904033184
    2. 'dp' → logprob: -8.250313758850098
    3. ' min' → logprob: -9.875313758850098
    4. 'nd' → logprob: -15.000313758850098
    5. 'cost' → logprob: -15.000313758850098
    6. 'minimum' → logprob: -15.750313758850098
    7. '	min' → logprob: -16.000314712524414
    8. '   ' → logprob: -17.125314712524414
    9. '
' → logprob: -17.250314712524414
    10. '(min' → logprob: -17.625314712524414

Token 363: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.11852362751960754
    2. '[f' → logprob: -2.368523597717285
    3. '[' → logprob: -4.743523597717285
    4. 'j' → logprob: -5.118523597717285
    5. 'f' → logprob: -5.993523597717285
    6. '<|end|>' → logprob: -7.243523597717285
    7. '[s' → logprob: -9.993523597717285
    8. ' ' → logprob: -10.243523597717285
    9. ' [' → logprob: -10.868523597717285
    10. '[js' → logprob: -10.993523597717285

Token 364: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.36361774802207947
    2. '+' → logprob: -1.2386177778244019
    3. ']' → logprob: -4.488617897033691
    4. ' +' → logprob: -5.738617897033691
    5. '[' → logprob: -8.238617897033691
    6. '+c' → logprob: -9.113617897033691
    7. '[f' → logprob: -9.988617897033691
    8. ' ]' → logprob: -10.113617897033691
    9. '+]' → logprob: -10.113617897033691
    10. ')+' → logprob: -10.363617897033691

Token 365: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.676292231422849e-05
    2. ' cost' → logprob: -11.000017166137695
    3. '(cost' → logprob: -18.875017166137695
    4. 'abs' → logprob: -22.125017166137695
    5. '
' → logprob: -22.375017166137695
    6. 'code' → logprob: -22.500017166137695
    7. 'c' → logprob: -23.000017166137695
    8. '         ' → logprob: -23.375017166137695
    9. 'Cost' → logprob: -23.375017166137695
    10. ' ' → logprob: -23.625017166137695

Token 366: '
' (ID: 198)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.03641044348478317
    2. ' for' → logprob: -4.286410331726074
    3. ' ' → logprob: -5.161410331726074
    4. '
' → logprob: -5.411410331726074
    5. '<|end|>' → logprob: -5.536410331726074
    6. 'for' → logprob: -5.911410331726074
    7. ' if' → logprob: -6.911410331726074
    8. '     ' → logprob: -7.161410331726074
    9. '       ' → logprob: -7.536410331726074
    10. ')' → logprob: -7.786410331726074

Token 367: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.00915265642106533
    2. ' ' → logprob: -6.134152889251709
    3. ' for' → logprob: -6.134152889251709
    4. '<|end|>' → logprob: -7.009152889251709
    5. 'nd' → logprob: -7.259152889251709
    6. '           ' → logprob: -7.384152889251709
    7. 'for' → logprob: -7.384152889251709
    8. '          ' → logprob: -7.509152889251709
    9. ' nd' → logprob: -8.50915241241455
    10. '             ' → logprob: -8.63415241241455

Token 368: ' nd' (ID: 5914)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1241799592971802
    2. 'nd' (adapté à ' nd') → logprob: -1.4991799592971802
    3. 'for' → logprob: -1.6241799592971802
    4. 'dp' → logprob: -1.9991799592971802
    5. ' ' → logprob: -2.9991798400878906
    6. '         ' → logprob: -3.3741798400878906
    7. ' for' → logprob: -4.374179840087891
    8. ' if' → logprob: -4.749179840087891
    9. '   ' → logprob: -5.374179840087891
    10. ' nd' → logprob: -5.749179840087891

Token 369: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.375001907348633
    3. '=' → logprob: -15.250001907348633
    4. 'dp' → logprob: -15.625001907348633
    5. 'P' → logprob: -15.875001907348633
    6. ' p' → logprob: -16.000001907348633
    7. '[p' → logprob: -16.000001907348633
    8. '[
' → logprob: -16.250001907348633
    9. 'п' → logprob: -16.375001907348633
    10. ' ' → logprob: -16.375001907348633

Token 370: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7118961811065674
    2. '=f' → logprob: -0.7118961811065674
    3. '[f' → logprob: -4.086895942687988
    4. ' =' → logprob: -6.461895942687988
    5. '=[' → logprob: -9.586895942687988
    6. '=np' → logprob: -9.586895942687988
    7. '[:]' → logprob: -11.336895942687988
    8. '[:' → logprob: -11.461895942687988
    9. '[' → logprob: -11.586895942687988
    10. '=max' → logprob: -11.961895942687988

Token 371: '2' (ID: 17)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018069284036755562
    2. 'i' → logprob: -4.893069267272949
    3. '[i' → logprob: -5.518069267272949
    4. '[' → logprob: -5.643069267272949
    5. '[in' → logprob: -6.143069267272949
    6. '[
' → logprob: -7.643069267272949
    7. 'im' → logprob: -9.64306926727295
    8. '[min' → logprob: -9.89306926727295
    9. '[n' → logprob: -10.01806926727295
    10. '
' → logprob: -11.14306926727295

Token 372: '>=' (ID: 20974)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.995257556438446
    2. 'nd' → logprob: -1.1202576160430908
    3. 'n' → logprob: -2.245257616043091
    4. '[' → logprob: -2.870257616043091
    5. 'min' → logprob: -3.370257616043091
    6. 'in' → logprob: -3.495257616043091
    7. '[max' → logprob: -3.745257616043091
    8. '[n' → logprob: -4.620257377624512
    9. '[:]' → logprob: -4.745257377624512
    10. '[min' → logprob: -4.995257377624512

Token 373: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.33253756165504456
    2. '[min' → logprob: -2.3325376510620117
    3. '[' → logprob: -2.5825376510620117
    4. 'nd' → logprob: -2.5825376510620117
    5. 'f' → logprob: -4.832537651062012
    6. '[f' → logprob: -4.957537651062012
    7. 'range' → logprob: -5.832537651062012
    8. '0' → logprob: -6.207537651062012
    9. ' min' → logprob: -6.207537651062012
    10. '
' → logprob: -6.457537651062012

Token 374: ' and' (ID: 326)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2778697907924652
    2. '[min' → logprob: -1.9028698205947876
    3. '[f' → logprob: -3.402869701385498
    4. 'f' → logprob: -3.652869701385498
    5. 'nd' → logprob: -4.152869701385498
    6. '[' → logprob: -4.902869701385498
    7. 'if' → logprob: -6.152869701385498
    8. 'n' → logprob: -6.902869701385498
    9. ' min' → logprob: -7.277869701385498
    10. '=' → logprob: -7.277869701385498

Token 375: ' nd' (ID: 5914)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3492034077644348
    2. 'nd' → logprob: -1.34920334815979
    3. '[min' → logprob: -4.099203586578369
    4. ' [' → logprob: -4.599203586578369
    5. ' nd' → logprob: -6.224203586578369
    6. '[f' → logprob: -6.724203586578369
    7. '[max' → logprob: -6.724203586578369
    8. 'min' → logprob: -6.974203586578369
    9. '[n' → logprob: -7.224203586578369
    10. '[next' → logprob: -7.599203586578369

Token 376: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0016476840246468782
    2. '[' → logprob: -7.126647472381592
    3. 'f' → logprob: -7.751647472381592
    4. '[f' → logprob: -8.87664794921875
    5. '[p' → logprob: -9.87664794921875
    6. '[
' → logprob: -10.50164794921875
    7. 'dp' → logprob: -10.50164794921875
    8. 'x' → logprob: -10.75164794921875
    9. '[n' → logprob: -11.25164794921875
    10. 'w' → logprob: -11.75164794921875

Token 377: ' or' (ID: 503)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.48750799894332886
    2. '[:' → logprob: -1.9875080585479736
    3. 'f' → logprob: -2.7375080585479736
    4. 'and' → logprob: -3.4875080585479736
    5. '[:]' → logprob: -3.6125080585479736
    6. 'if' → logprob: -3.7375080585479736
    7. '<|end|>' → logprob: -4.2375078201293945
    8. '=' → logprob: -4.4875078201293945
    9. '
' → logprob: -4.6125078201293945
    10. '```' → logprob: -4.7375078201293945

Token 378: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5366812348365784
    2. '[' → logprob: -1.0366811752319336
    3. '[min' → logprob: -3.6616811752319336
    4. 'min' → logprob: -3.9116811752319336
    5. '[max' → logprob: -5.661681175231934
    6. '[n' → logprob: -5.911681175231934
    7. ' nd' → logprob: -6.411681175231934
    8. ' [' → logprob: -6.661681175231934
    9. 'max' → logprob: -6.911681175231934
    10. 'dp' → logprob: -7.411681175231934

Token 379: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0037943734787404537
    2. '[' → logprob: -6.378794193267822
    3. 'dp' → logprob: -6.753794193267822
    4. 'f' → logprob: -7.253794193267822
    5. '[f' → logprob: -10.37879467010498
    6. 'w' → logprob: -11.25379467010498
    7. '[p' → logprob: -11.25379467010498
    8. 'pd' → logprob: -11.37879467010498
    9. ']' → logprob: -11.62879467010498
    10. 'd' → logprob: -11.87879467010498

Token 380: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34138789772987366
    2. '[f' → logprob: -2.466387987136841
    3. 'min' → logprob: -2.966387987136841
    4. '[min' → logprob: -2.966387987136841
    5. '[' → logprob: -3.841387987136841
    6. '=f' → logprob: -4.216387748718262
    7. '=min' → logprob: -4.716387748718262
    8. '=[' → logprob: -4.841387748718262
    9. 'f' → logprob: -4.966387748718262
    10. ' =' → logprob: -5.216387748718262

Token 381: '         ' (ID: 983)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9310802817344666
    2. 'for' → logprob: -1.0560803413391113
    3. '         ' → logprob: -1.8060803413391113
    4. ' if' → logprob: -3.1810803413391113
    5. ' for' → logprob: -3.8060803413391113
    6. '```' → logprob: -3.9310803413391113
    7. '           ' → logprob: -5.681080341339111
    8. ' ' → logprob: -6.306080341339111
    9. '             ' → logprob: -6.931080341339111
    10. '       ' → logprob: -7.431080341339111

Token 382: ' nd' (ID: 5914)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7017652988433838
    2. 'min' → logprob: -1.0767652988433838
    3. 'for' → logprob: -2.076765298843384
    4. 'nd' (adapté à ' nd') → logprob: -4.201765060424805
    5. '         ' → logprob: -5.201765060424805
    6. ' if' → logprob: -5.326765060424805
    7. '[min' → logprob: -5.826765060424805
    8. ' min' → logprob: -6.326765060424805
    9. 'dp' → logprob: -6.326765060424805
    10. 'None' → logprob: -6.576765060424805

Token 383: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.259079363080673e-05
    2. 'f' → logprob: -12.750012397766113
    3. '[f' → logprob: -12.875012397766113
    4. '[p' → logprob: -13.375012397766113
    5. 'pf' → logprob: -13.500012397766113
    6. '[' → logprob: -14.125012397766113
    7. '
' → logprob: -14.125012397766113
    8. '[
' → logprob: -14.625012397766113
    9. 'dp' → logprob: -14.750012397766113
    10. '=' → logprob: -14.875012397766113

Token 384: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.022712016478180885
    2. '=' → logprob: -4.272712230682373
    3. '[' → logprob: -5.272712230682373
    4. '=f' → logprob: -6.272712230682373
    5. '[min' → logprob: -7.272712230682373
    6. 'f' → logprob: -7.522712230682373
    7. '[max' → logprob: -9.147711753845215
    8. '=max' → logprob: -11.022711753845215
    9. '[j' → logprob: -11.147711753845215
    10. '=[' → logprob: -11.522711753845215

Token 385: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.472211968386546e-05
    2. '1' → logprob: -10.125094413757324
    3. 'f' → logprob: -10.750094413757324
    4. '[f' → logprob: -10.750094413757324
    5. '[' → logprob: -11.750094413757324
    6. ']' → logprob: -14.000094413757324
    7. ' f' → logprob: -14.875094413757324
    8. '(f' → logprob: -14.875094413757324
    9. '_' → logprob: -15.000094413757324
    10. '```' → logprob: -15.250094413757324

Token 386: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0013214307837188244
    2. '=' → logprob: -7.126321315765381
    3. ']' → logprob: -7.626321315765381
    4. ']+=' → logprob: -11.376321792602539
    5. '=min' → logprob: -12.126321792602539
    6. ')=' → logprob: -12.501321792602539
    7. '[min' → logprob: -13.251321792602539
    8. '']=' → logprob: -13.501321792602539
    9. '         ' → logprob: -13.501321792602539
    10. '[' → logprob: -14.501321792602539

Token 387: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.4121114822482923e-06
    2. ' min' → logprob: -12.625003814697266
    3. 'max' → logprob: -19.125003814697266
    4. '	min' → logprob: -20.625003814697266
    5. 'mini' → logprob: -20.750003814697266
    6. '(min' → logprob: -21.000003814697266
    7. '```' → logprob: -21.500003814697266
    8. '
' → logprob: -21.625003814697266
    9. 'minimum' → logprob: -21.750003814697266
    10. 'nd' → logprob: -21.750003814697266

Token 388: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.00011415231710998341
    2. 'nd' → logprob: -9.250114440917969
    3. '(dp' → logprob: -11.250114440917969
    4. '(n' → logprob: -12.375114440917969
    5. ' nd' → logprob: -14.625114440917969
    6. '(' → logprob: -16.25011444091797
    7. ' (' → logprob: -16.75011444091797
    8. '_nd' → logprob: -17.25011444091797
    9. '```' → logprob: -17.75011444091797
    10. '(
' → logprob: -17.87511444091797

Token 389: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013375049456954002
    2. 'dp' → logprob: -6.62633752822876
    3. '[' → logprob: -12.251337051391602
    4. '(dp' → logprob: -12.501337051391602
    5. '_dp' → logprob: -14.001337051391602
    6. 'd' → logprob: -14.001337051391602
    7. 'pd' → logprob: -15.126337051391602
    8. '[
' → logprob: -15.376337051391602
    9. ' dp' → logprob: -15.626337051391602
    10. '([' → logprob: -16.1263370513916

Token 390: '[f' (ID: 52330)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.008685367181897163
    2. '[' → logprob: -4.88368558883667
    3. '(dp' → logprob: -7.00868558883667
    4. 'nd' → logprob: -9.383685111999512
    5. '(n' → logprob: -10.008685111999512
    6. '(' → logprob: -11.258685111999512
    7. ' (' → logprob: -12.133685111999512
    8. ' nd' → logprob: -12.383685111999512
    9. '[n' → logprob: -12.758685111999512
    10. '(
' → logprob: -12.883685111999512

Token 391: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016113782301545143
    2. '[f' → logprob: -4.141113758087158
    3. '(f' → logprob: -11.016114234924316
    4. '[' → logprob: -11.266114234924316
    5. 'f' → logprob: -11.391114234924316
    6. ']' → logprob: -11.766114234924316
    7. '_' → logprob: -12.016114234924316
    8. '₂' → logprob: -12.141114234924316
    9. '``' → logprob: -12.766114234924316
    10. ')' → logprob: -13.266114234924316

Token 392: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005227696383371949
    2. ' ,' → logprob: -7.875522613525391
    3. '],' → logprob: -9.00052261352539
    4. 'dp' → logprob: -12.25052261352539
    5. '),' → logprob: -12.75052261352539
    6. ',float' → logprob: -12.87552261352539
    7. ',min' → logprob: -13.12552261352539
    8. ',n' → logprob: -13.37552261352539
    9. ',d' → logprob: -14.00052261352539
    10. ',
' → logprob: -14.00052261352539

Token 393: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011664145858958364
    2. ' dp' → logprob: -7.001166343688965
    3. 'nd' → logprob: -8.376166343688965
    4. ' ' → logprob: -12.001166343688965
    5. '     ' → logprob: -13.001166343688965
    6. '   ' → logprob: -13.126166343688965
    7. '  ' → logprob: -13.251166343688965
    8. '           ' → logprob: -13.501166343688965
    9. '	dp' → logprob: -13.501166343688965
    10. 'd' → logprob: -13.751166343688965

Token 394: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04008053243160248
    2. '[f' → logprob: -3.2900805473327637
    3. 'j' → logprob: -6.290080547332764
    4. '[' → logprob: -9.290080070495605
    5. '+j' → logprob: -10.665080070495605
    6. 'f' → logprob: -11.165080070495605
    7. '+' → logprob: -11.165080070495605
    8. '[p' → logprob: -11.790080070495605
    9. '```' → logprob: -12.040080070495605
    10. '[i' → logprob: -12.290080070495605

Token 395: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1767628937959671
    2. ']+' → logprob: -1.9267629384994507
    3. ' +' → logprob: -4.17676305770874
    4. ']' → logprob: -7.30176305770874
    5. '[' → logprob: -9.051762580871582
    6. ' ]' → logprob: -10.051762580871582
    7. '+c' → logprob: -10.051762580871582
    8. '+j' → logprob: -10.301762580871582
    9. ')+' → logprob: -10.426762580871582
    10. ' ' → logprob: -10.426762580871582

Token 396: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -3.8219583075260743e-05
    2. ' cost' → logprob: -10.250038146972656
    3. 'abs' → logprob: -12.875038146972656
    4. '(cost' → logprob: -16.750038146972656
    5. ' ' → logprob: -17.000038146972656
    6. '         ' → logprob: -17.000038146972656
    7. '
' → logprob: -17.125038146972656
    8. '     ' → logprob: -18.250038146972656
    9. '   ' → logprob: -18.500038146972656
    10. '  ' → logprob: -19.125038146972656

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025168338790535927
    2. '         ' → logprob: -4.025168418884277
    3. ')
' → logprob: -5.025168418884277
    4. '       ' → logprob: -8.775168418884277
    5. '```' → logprob: -9.650168418884277
    6. '             ' → logprob: -10.275168418884277
    7. '])' → logprob: -10.400168418884277
    8. '     ' → logprob: -10.650168418884277
    9. '           ' → logprob: -11.025168418884277
    10. '                 ' → logprob: -11.150168418884277

Token 398: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2661362290382385
    2. '<|end|>' → logprob: -3.1411361694335938
    3. ']' → logprob: -3.2661361694335938
    4. '  ' → logprob: -3.7661361694335938
    5. '         ' → logprob: -3.7661361694335938
    6. ')' → logprob: -4.016136169433594
    7. 'continue' → logprob: -4.016136169433594
    8. '     ' → logprob: -4.391136169433594
    9. '   ' → logprob: -4.641136169433594
    10. 'dp' → logprob: -4.766136169433594

Token 400: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07861103117465973
    2. ' f' → logprob: -2.828611135482788
    3. 'j' → logprob: -4.328610897064209
    4. ' j' → logprob: -6.203610897064209
    5. 'k' → logprob: -7.453610897064209
    6. 'nd' → logprob: -7.828610897064209
    7. ' nd' → logprob: -9.203611373901367
    8. 'g' → logprob: -10.078611373901367
    9. 'dp' → logprob: -10.453611373901367
    10. ' k' → logprob: -10.578611373901367

Token 401: ' in' (ID: 306)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4862280786037445
    2. 'j' → logprob: -1.861228108406067
    3. ' in' → logprob: -1.986228108406067
    4. 'in' → logprob: -2.7362279891967773
    5. ' f' → logprob: -4.361227989196777
    6. '[' → logprob: -5.736227989196777
    7. '2' → logprob: -5.861227989196777
    8. '[f' → logprob: -5.986227989196777
    9. '1' → logprob: -6.361227989196777
    10. ' j' → logprob: -6.861227989196777

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036181241739541292
    2. ' range' → logprob: -5.628618240356445
    3. 'nd' → logprob: -11.753618240356445
    4. '[' → logprob: -12.003618240356445
    5. '(' → logprob: -14.128618240356445
    6. '(range' → logprob: -14.253618240356445
    7. 'dp' → logprob: -14.628618240356445
    8. 'r' → logprob: -15.003618240356445
    9. 'rd' → logprob: -15.128618240356445
    10. 'rang' → logprob: -15.878618240356445

Token 403: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6656825866666622e-05
    2. '4' → logprob: -10.62502670288086
    3. 'range' → logprob: -14.00002670288086
    4. '(f' → logprob: -15.00002670288086
    5. ' (' → logprob: -15.25002670288086
    6. '(nd' → logprob: -15.25002670288086
    7. '[' → logprob: -15.75002670288086
    8. '(len' → logprob: -15.87502670288086
    9. '(range' → logprob: -16.37502670288086
    10. 'dp' → logprob: -16.62502670288086

Token 404: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -15.125001907348633
    4. '(' → logprob: -15.500001907348633
    5. '3' → logprob: -15.750001907348633
    6. '2' → logprob: -16.375001907348633
    7. '0' → logprob: -16.875001907348633
    8. 'range' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.750001907348633
    10. 'f' → logprob: -18.125001907348633

Token 405: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16248218715190887
    2. '):' → logprob: -1.9124821424484253
    3. ':' → logprob: -6.662482261657715
    4. ')' → logprob: -7.662482261657715
    5. ' ' → logprob: -8.787482261657715
    6. ':
' → logprob: -9.037482261657715
    7. '[' → logprob: -9.162482261657715
    8. '   ' → logprob: -9.787482261657715
    9. '4' → logprob: -11.162482261657715
    10. '(' → logprob: -11.912482261657715

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2168271541595459
    2. ' if' → logprob: -2.091827154159546
    3. 'if' → logprob: -3.716827154159546
    4. ' ' → logprob: -3.841827154159546
    5. 'dp' → logprob: -4.716827392578125
    6. '         ' → logprob: -5.091827392578125
    7. '     ' → logprob: -5.341827392578125
    8. ' dp' → logprob: -6.091827392578125
    9. '   ' → logprob: -6.466827392578125
    10. '<|end|>' → logprob: -7.091827392578125

Token 407: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.31941527128219604
    2. 'if' → logprob: -1.8194153308868408
    3. '     ' → logprob: -3.694415330886841
    4. 'dp' → logprob: -3.694415330886841
    5. '         ' → logprob: -4.069415092468262
    6. ' ' → logprob: -4.194415092468262
    7. ' if' → logprob: -4.819415092468262
    8. '       ' → logprob: -5.069415092468262
    9. ' nd' → logprob: -5.569415092468262
    10. '   ' → logprob: -5.694415092468262

Token 408: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. 'dp' → logprob: -17.875
    3. 'п' → logprob: -19.0
    4. '[' → logprob: -19.25
    5. ' ' → logprob: -19.25
    6. '
' → logprob: -19.5
    7. 'f' → logprob: -19.75
    8. '   ' → logprob: -19.875
    9. ' p' → logprob: -19.875
    10. 'pf' → logprob: -20.125

Token 409: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -6.511406809295295e-06
    2. 'f' → logprob: -12.500006675720215
    3. '[' → logprob: -14.000006675720215
    4. '[min' → logprob: -14.500006675720215
    5. '
' → logprob: -14.875006675720215
    6. '[j' → logprob: -15.000006675720215
    7. '=f' → logprob: -15.875006675720215
    8. '<f' → logprob: -15.875006675720215
    9. '[n' → logprob: -16.3750057220459
    10. '[i' → logprob: -16.7500057220459

Token 410: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0024643598590046167
    2. '=' → logprob: -6.252464294433594
    3. ')=' → logprob: -8.127464294433594
    4. '=min' → logprob: -8.752464294433594
    5. ']' → logprob: -9.877464294433594
    6. ']+=' → logprob: -11.252464294433594
    7. '[min' → logprob: -12.377464294433594
    8. '         ' → logprob: -12.877464294433594
    9. '=max' → logprob: -13.127464294433594
    10. '       ' → logprob: -13.252464294433594

Token 411: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.000275040598353371
    2. 'float' → logprob: -8.875274658203125
    3. 'nd' → logprob: -9.375274658203125
    4. ' min' → logprob: -10.250274658203125
    5. 'dp' → logprob: -11.875274658203125
    6. 'inf' → logprob: -12.000274658203125
    7. '	min' → logprob: -14.625274658203125
    8. 'max' → logprob: -15.125274658203125
    9. '=min' → logprob: -15.500274658203125
    10. '
' → logprob: -16.000274658203125

Token 412: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -2.7133641196996905e-05
    2. 'nd' → logprob: -11.25002670288086
    3. '(dp' → logprob: -11.50002670288086
    4. '(n' → logprob: -13.12502670288086
    5. '(' → logprob: -13.37502670288086
    6. '```' → logprob: -15.25002670288086
    7. '(
' → logprob: -16.12502670288086
    8. ' nd' → logprob: -16.75002670288086
    9. ' (' → logprob: -17.62502670288086
    10. '``' → logprob: -18.00002670288086

Token 413: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.339278580620885e-06
    2. 'dp' → logprob: -13.875001907348633
    3. '[' → logprob: -14.125001907348633
    4. '(dp' → logprob: -15.625001907348633
    5. '([' → logprob: -16.125001907348633
    6. '_dp' → logprob: -16.375001907348633
    7. '(nd' → logprob: -17.250001907348633
    8. '[f' → logprob: -17.500001907348633
    9. 'f' → logprob: -17.750001907348633
    10. '[
' → logprob: -17.750001907348633

Token 414: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -4.127333340875339e-06
    2. 'f' → logprob: -13.250003814697266
    3. '[' → logprob: -13.500003814697266
    4. '```' → logprob: -15.375003814697266
    5. '[
' → logprob: -15.750003814697266
    6. ',f' → logprob: -15.750003814697266
    7. '[j' → logprob: -16.125003814697266
    8. '(f' → logprob: -16.500003814697266
    9. '
' → logprob: -16.625003814697266
    10. '   ' → logprob: -17.625003814697266

Token 415: '],' (ID: 2155)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.17978516221046448
    2. '],' → logprob: -1.929785132408142
    3. 'f' → logprob: -4.429785251617432
    4. '])' → logprob: -5.554785251617432
    5. ']' → logprob: -6.554785251617432
    6. ',f' → logprob: -7.054785251617432
    7. ']+' → logprob: -8.304784774780273
    8. '[
' → logprob: -8.554784774780273
    9. '
' → logprob: -8.804784774780273
    10. '(f' → logprob: -9.179784774780273

Token 416: 'dp' (ID: 19037)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.04384201392531395
    2. 'dp' → logprob: -3.293842077255249
    3. ' nd' → logprob: -5.54384183883667
    4. 'float' → logprob: -6.41884183883667
    5. ' dp' → logprob: -8.668842315673828
    6. ' float' → logprob: -11.293842315673828
    7. ' ' → logprob: -11.668842315673828
    8. '   ' → logprob: -12.293842315673828
    9. 'inf' → logprob: -12.293842315673828
    10. '(nd' → logprob: -12.543842315673828

Token 417: '[j' (ID: 7895)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.00010211274639004841
    2. '[j' → logprob: -9.375102043151855
    3. '[' → logprob: -11.750102043151855
    4. '[i' → logprob: -13.125102043151855
    5. 'f' → logprob: -13.250102043151855
    6. ' [' → logprob: -13.250102043151855
    7. '[n' → logprob: -13.750102043151855
    8. '(f' → logprob: -14.750102043151855
    9. '
' → logprob: -15.125102043151855
    10. ' ' → logprob: -15.125102043151855

Token 418: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.11723233014345169
    2. '[f' → logprob: -2.742232322692871
    3. '])' → logprob: -3.367232322692871
    4. ']' → logprob: -4.492232322692871
    5. '+' → logprob: -8.117232322692871
    6. ')+' → logprob: -9.242232322692871
    7. '])+' → logprob: -10.242232322692871
    8. '])
' → logprob: -10.742232322692871
    9. '][' → logprob: -10.867232322692871
    10. ' ]' → logprob: -11.492232322692871

Token 419: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.28814271092414856
    2. '0' → logprob: -1.5381426811218262
    3. 'cost' → logprob: -3.413142681121826
    4. '(abs' → logprob: -7.163142681121826
    5. '1' → logprob: -7.413142681121826
    6. '(' → logprob: -7.788142681121826
    7. 'dp' → logprob: -8.288143157958984
    8. ' abs' → logprob: -8.538143157958984
    9. 'nd' → logprob: -9.163143157958984
    10. '(cost' → logprob: -9.538143157958984

Token 420: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07394188642501831
    2. '(f' → logprob: -2.948941946029663
    3. 'p' → logprob: -4.073941707611084
    4. '0' → logprob: -7.323941707611084
    5. '(p' → logprob: -7.448941707611084
    6. 'nd' → logprob: -8.573942184448242
    7. ' f' → logprob: -8.823942184448242
    8. '(' → logprob: -9.198942184448242
    9. '(nd' → logprob: -9.198942184448242
    10. '(i' → logprob: -11.323942184448242

Token 421: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.010380757041275501
    2. ' -' → logprob: -4.885380744934082
    3. '-' → logprob: -6.135380744934082
    4. '-f' → logprob: -7.510380744934082
    5. ' ' → logprob: -11.010380744934082
    6. '[' → logprob: -11.260380744934082
    7. ')' → logprob: -12.010380744934082
    8. 'p' → logprob: -12.510380744934082
    9. ')-' → logprob: -12.885380744934082
    10. '(p' → logprob: -13.010380744934082

Token 422: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012713817704934627
    2. '[j' → logprob: -9.625126838684082
    3. 'i' → logprob: -10.000126838684082
    4. '[f' → logprob: -11.250126838684082
    5. '[p' → logprob: -14.000126838684082
    6. '[' → logprob: -14.375126838684082
    7. '1' → logprob: -15.375126838684082
    8. 'f' → logprob: -15.375126838684082
    9. 'p' → logprob: -16.5001277923584
    10. '{i' → logprob: -16.6251277923584

Token 423: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.016355862841010094
    2. '])' → logprob: -4.141355991363525
    3. ']))
' → logprob: -8.891355514526367
    4. '+' → logprob: -9.891355514526367
    5. ')])' → logprob: -10.016355514526367
    6. ']' → logprob: -10.766355514526367
    7. '']))' → logprob: -11.016355514526367
    8. '))' → logprob: -11.266355514526367
    9. '])+' → logprob: -11.766355514526367
    10. '])]' → logprob: -11.891355514526367

Token 424: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18640509247779846
    2. ' ' → logprob: -2.5614051818847656
    3. '         ' → logprob: -3.4364051818847656
    4. 'continue' → logprob: -4.436405181884766
    5. 'pass' → logprob: -4.936405181884766
    6. 'if' → logprob: -5.186405181884766
    7. '     ' → logprob: -5.186405181884766
    8. ' dp' → logprob: -5.311405181884766
    9. '   ' → logprob: -5.561405181884766
    10. '```' → logprob: -5.561405181884766

Token 425: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07955332100391388
    2. ' ' → logprob: -2.8295533657073975
    3. ']' → logprob: -5.579553127288818
    4. 'return' → logprob: -6.079553127288818
    5. 'continue' → logprob: -6.454553127288818
    6. 'if' → logprob: -6.704553127288818
    7. '     ' → logprob: -6.704553127288818
    8. '         ' → logprob: -6.704553127288818
    9. 'pass' → logprob: -6.704553127288818
    10. '   ' → logprob: -6.954553127288818

Token 426: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009280181839130819
    2. ' =' → logprob: -7.000927925109863
    3. '=f' → logprob: -11.750927925109863
    4. '=n' → logprob: -12.625927925109863
    5. '=df' → logprob: -13.875927925109863
    6. '=end' → logprob: -14.125927925109863
    7. '=np' → logprob: -14.625927925109863
    8. '[:]' → logprob: -14.875927925109863
    9. '=min' → logprob: -15.250927925109863
    10. '=pd' → logprob: -15.250927925109863

Token 427: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00015920029545668513
    2. ' nd' → logprob: -8.75015926361084
    3. '[' → logprob: -14.75015926361084
    4. '(nd' → logprob: -15.75015926361084
    5. 'ng' → logprob: -17.000158309936523
    6. '_nd' → logprob: -17.500158309936523
    7. 'n' → logprob: -17.625158309936523
    8. ' ' → logprob: -18.000158309936523
    9. '```' → logprob: -18.000158309936523
    10. 'nds' → logprob: -18.250158309936523

Token 428: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. '[p' → logprob: -16.75
    3. 'dp' → logprob: -16.75
    4. '[' → logprob: -17.125
    5. '_p' → logprob: -20.25
    6. ' p' → logprob: -20.5
    7. '
' → logprob: -20.625
    8. 'P' → logprob: -20.625
    9. 'п' → logprob: -20.625
    10. '[
' → logprob: -21.125

Token 429: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19068975746631622
    2. ':' → logprob: -1.8156898021697998
    3. ' ' → logprob: -4.565689563751221
    4. '  
' → logprob: -8.315690040588379
    5. '
' → logprob: -9.315690040588379
    6. '  ' → logprob: -9.440690040588379
    7. '   ' → logprob: -10.440690040588379
    8. ' :
' → logprob: -11.815690040588379
    9. ' 
' → logprob: -12.065690040588379
    10. '```' → logprob: -12.190690040588379

Token 432: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02658950537443161
    2. ' dp' → logprob: -3.9015893936157227
    3. 'dp' → logprob: -5.776589393615723
    4. '   ' → logprob: -6.026589393615723
    5. ' for' → logprob: -8.401589393615723
    6. '```' → logprob: -9.026589393615723
    7. ' break' → logprob: -9.651589393615723
    8. 'for' → logprob: -10.651589393615723
    9. ' ' → logprob: -10.776589393615723
    10. '  
' → logprob: -11.401589393615723

Token 433: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24473151564598083
    2. ' ' → logprob: -1.9947315454483032
    3. 'for' → logprob: -2.6197314262390137
    4. 'break' → logprob: -5.244731426239014
    5. ' dp' → logprob: -6.869731426239014
    6. ' for' → logprob: -6.994731426239014
    7. 'pass' → logprob: -7.369731426239014
    8. 'print' → logprob: -8.869731903076172
    9. '   ' → logprob: -9.494731903076172
    10. ' break' → logprob: -9.619731903076172

Token 434: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.050457365810871124
    2. ' ' → logprob: -3.67545747756958
    3. 'for' → logprob: -3.92545747756958
    4. 'pass' → logprob: -6.55045747756958
    5. 'break' → logprob: -6.80045747756958
    6. ' dp' → logprob: -6.92545747756958
    7. ' for' → logprob: -7.80045747756958
    8. '#' → logprob: -9.800457000732422
    9. 'print' → logprob: -10.050457000732422
    10. 'continue' → logprob: -10.300457000732422

Token 435: ' last' (ID: 2174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2619478106498718
    2. ' i' → logprob: -1.7619478702545166
    3. 'j' → logprob: -4.1369476318359375
    4. ' j' → logprob: -4.2619476318359375
    5. 'dp' → logprob: -4.3869476318359375
    6. 'f' → logprob: -5.2619476318359375
    7. ' dp' → logprob: -5.3869476318359375
    8. ' f' → logprob: -6.0119476318359375
    9. ' ' → logprob: -7.0119476318359375
    10. 'n' → logprob: -7.1369476318359375

Token 436: ' pancake' (ID: 158477)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4522775411605835
    2. ' ' → logprob: -2.077277660369873
    3. 'i' → logprob: -2.327277660369873
    4. ' pancake' → logprob: -2.452277660369873
    5. ' i' → logprob: -3.077277660369873
    6. '  ' → logprob: -6.202277660369873
    7. '   ' → logprob: -6.452277660369873
    8. 'if' → logprob: -7.077277660369873
    9. 'pass' → logprob: -7.202277660369873
    10. ' if' → logprob: -7.327277660369873

Token 437: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7003775835037231
    2. ' ' → logprob: -1.4503775835037231
    3. 'for' → logprob: -1.7003775835037231
    4. '   ' → logprob: -2.5753774642944336
    5. 'f' → logprob: -5.075377464294434
    6. ' f' → logprob: -6.700377464294434
    7. 'dp' → logprob: -7.450377464294434
    8. '```' → logprob: -7.825377464294434
    9. ' if' → logprob: -8.450377464294434
    10. 'cost' → logprob: -8.575377464294434

Token 438: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4610092043876648
    2. 'i' → logprob: -1.0860092639923096
    3. ' n' → logprob: -3.9610092639923096
    4. ' i' → logprob: -4.5860090255737305
    5. 'True' → logprob: -6.7110090255737305
    6. 'dp' → logprob: -7.3360090255737305
    7. ' True' → logprob: -8.33600902557373
    8. ' ' → logprob: -8.46100902557373
    9. '1' → logprob: -9.33600902557373
    10. '0' → logprob: -10.08600902557373

Token 439: 'processed' (ID: 65374)
  Prédit: 'processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.07193025946617126
    2. 'handled' → logprob: -3.821930170059204
    3. ' ' → logprob: -4.071930408477783
    4. 'dp' → logprob: -4.071930408477783
    5. 'i' → logprob: -5.071930408477783
    6. ' processed' → logprob: -5.696930408477783
    7. 'used' → logprob: -6.071930408477783
    8. ' dp' → logprob: -7.821930408477783
    9. 'covered' → logprob: -8.571929931640625
    10. 'visited' → logprob: -8.946929931640625

Token 440: ' alone' (ID: 11238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7921663522720337
    2. ' for' → logprob: -0.9171663522720337
    3. 'for' → logprob: -2.167166233062744
    4. '   ' → logprob: -3.667166233062744
    5. ' if' → logprob: -5.792166233062744
    6. 'if' → logprob: -6.667166233062744
    7. 'dp' → logprob: -6.667166233062744
    8. 'f' → logprob: -7.542166233062744
    9. ' dp' → logprob: -7.542166233062744
    10. ' f' → logprob: -8.667166709899902

Token 441: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11644896119832993
    2. ' for' → logprob: -2.4914488792419434
    3. ' ' → logprob: -3.8664488792419434
    4. 'dp' → logprob: -5.741448879241943
    5. '   ' → logprob: -6.366448879241943
    6. 'f' → logprob: -7.116448879241943
    7. 'if' → logprob: -7.991448879241943
    8. 'cost' → logprob: -10.116449356079102
    9. ' dp' → logprob: -10.866449356079102
    10. '```' → logprob: -11.241449356079102

Token 442: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39710018038749695
    2. 'for' → logprob: -2.1471002101898193
    3. '   ' → logprob: -2.2721002101898193
    4. ' for' → logprob: -2.2721002101898193
    5. 'dp' → logprob: -6.02209997177124
    6. '```' → logprob: -6.39709997177124
    7. ' dp' → logprob: -7.89709997177124
    8. '``' → logprob: -9.147100448608398
    9. '  ' → logprob: -10.647100448608398
    10. '     ' → logprob: -10.772100448608398

Token 443: ' pass' (ID: 1853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013832485303282738
    2. 'dp' → logprob: -4.6388325691223145
    3. 'f' → logprob: -6.5138325691223145
    4. ' for' → logprob: -6.7638325691223145
    5. 'cost' → logprob: -7.1388325691223145
    6. ' ' → logprob: -7.7638325691223145
    7. 'if' → logprob: -9.138832092285156
    8. 'nd' → logprob: -10.138832092285156
    9. 'pass' → logprob: -10.763832092285156
    10. ' dp' → logprob: -11.513832092285156

Token 444: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21841903030872345
    2. ' ' → logprob: -1.968419075012207
    3. 'dp' → logprob: -3.218419075012207
    4. ' for' → logprob: -4.718419075012207
    5. '   ' → logprob: -4.968419075012207
    6. 'cost' → logprob: -8.343419075012207
    7. '```' → logprob: -8.593419075012207
    8. ' dp' → logprob: -8.843419075012207
    9. '``' → logprob: -10.468419075012207
    10. 'if' → logprob: -11.593419075012207

Token 445: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41758090257644653
    2. ' ' → logprob: -1.1675808429718018
    3. '   ' → logprob: -4.542581081390381
    4. ' for' → logprob: -4.542581081390381
    5. 'dp' → logprob: -4.792581081390381
    6. 'if' → logprob: -7.792581081390381
    7. 'continue' → logprob: -9.417580604553223
    8. '```' → logprob: -9.667580604553223
    9. ' dp' → logprob: -9.792580604553223
    10. '     ' → logprob: -11.417580604553223

Token 446: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.3767057955265045
    2. '(dp' → logprob: -1.6267057657241821
    3. '(min' → logprob: -2.3767058849334717
    4. '(max' → logprob: -4.126705646514893
    5. '(' → logprob: -5.126705646514893
    6. '(*' → logprob: -6.626705646514893
    7. 'sum' → logprob: -7.876705646514893
    8. '(len' → logprob: -8.37670612335205
    9. 'dp' → logprob: -8.75170612335205
    10. '()' → logprob: -9.12670612335205

Token 447: '(p' (ID: 2407)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.002671376569196582
    2. 'dp' → logprob: -6.752671241760254
    3. ')' → logprob: -7.627671241760254
    4. '([' → logprob: -7.877671241760254
    5. '(' → logprob: -8.127671241760254
    6. '(
' → logprob: -9.002671241760254
    7. '())' → logprob: -10.252671241760254
    8. '(abs' → logprob: -10.377671241760254
    9. '(p' → logprob: -10.877671241760254
    10. '(min' → logprob: -10.877671241760254

Token 448: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01100101601332426
    2. ')' → logprob: -5.011001110076904
    3. '[i' → logprob: -6.386001110076904
    4. '[' → logprob: -7.136001110076904
    5. '[j' → logprob: -7.886001110076904
    6. '))
' → logprob: -8.261000633239746
    7. '[p' → logprob: -8.261000633239746
    8. ')))' → logprob: -8.761000633239746
    9. ')+' → logprob: -9.011000633239746
    10. ')-' → logprob: -9.136000633239746


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 446
Tokens correctement prédits (1ère position, stricte): 205
Tokens correctement prédits (1ère position, avec adaptation): 217
Tokens correctement prédits (top 10): 332
Précision stricte (1ère position): 45.96%
Précision adaptée (1ère position): 48.65%
Précision (top 10): 74.44%
================================================================================
