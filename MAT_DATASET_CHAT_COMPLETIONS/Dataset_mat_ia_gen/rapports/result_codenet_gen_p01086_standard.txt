================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    target = [5,7,5,7,7]
    while True:
        n = int(input())
        if n == 0:
            break
        words = [input() for _ in range(n)]
        lens = [len(w) for w in words]
        for start in range(n):
            idx = start
            valid = True
            for t in target:
                s = 0
                while idx < n and s < t:
                    s += lens[idx]
                    idx +=1
                if s != t:
                    valid = False
                    break
            if valid:
                print(start+1)
                break
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2719064950942993
    2. '\n' → logprob: -1.6469064950942993
    3. '   ' → logprob: -3.8969063758850098
    4. '    
' → logprob: -4.89690637588501
    5. '    ' → logprob: -5.77190637588501
    6. ''' → logprob: -5.89690637588501
    7. '```' → logprob: -6.14690637588501
    8. '(' → logprob: -6.39690637588501
    9. ' 
' → logprob: -6.39690637588501
    10. '\r' → logprob: -6.89690637588501

Token 4: ' target' (ID: 3783)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4397522509098053
    2. '   ' → logprob: -1.689752221107483
    3. 'pass' → logprob: -2.4397523403167725
    4. 'return' → logprob: -3.8147523403167725
    5. '#' → logprob: -4.189752101898193
    6. 'p' → logprob: -4.439752101898193
    7. '    ' → logprob: -4.689752101898193
    8. 'a' → logprob: -5.064752101898193
    9. 'r' → logprob: -5.439752101898193
    10. 'n' → logprob: -6.064752101898193

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16128475964069366
    2. ' =' → logprob: -2.4112846851348877
    3. '=' → logprob: -3.5362846851348877
    4. '.' → logprob: -4.411284923553467
    5. '_target' → logprob: -5.036284923553467
    6. ')' → logprob: -5.911284923553467
    7. '_space' → logprob: -6.036284923553467
    8. 's' → logprob: -6.786284923553467
    9. ' ' → logprob: -7.161284923553467
    10. '_url' → logprob: -7.411284923553467

Token 6: ' [' (ID: 723)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5268028974533081
    2. '"' → logprob: -1.651802897453308
    3. ' ' → logprob: -1.776802897453308
    4. ' '' → logprob: -4.151803016662598
    5. ' None' → logprob: -5.276803016662598
    6. ''' → logprob: -5.401803016662598
    7. '42' → logprob: -5.401803016662598
    8. '10' → logprob: -5.526803016662598
    9. ' []' → logprob: -6.026803016662598
    10. '0' → logprob: -6.151803016662598

Token 7: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29976123571395874
    2. '0' → logprob: -1.4247612953186035
    3. ']' → logprob: -4.1747612953186035
    4. '']' → logprob: -7.0497612953186035
    5. ''' → logprob: -7.4247612953186035
    6. '"]' → logprob: -7.5497612953186035
    7. '"' → logprob: -8.174760818481445
    8. '42' → logprob: -8.299760818481445
    9. '   ' → logprob: -8.674760818481445
    10. '10' → logprob: -9.549760818481445

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008883291855454445
    2. ']' → logprob: -4.758883476257324
    3. ' ,' → logprob: -8.633883476257324
    4. ',
' → logprob: -10.383883476257324
    5. '0' → logprob: -10.508883476257324
    6. '6' → logprob: -11.758883476257324
    7. ' ]' → logprob: -12.008883476257324
    8. '7' → logprob: -12.633883476257324
    9. '   ' → logprob: -13.133883476257324
    10. '3' → logprob: -13.383883476257324

Token 9: '7' (ID: 22)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02045581117272377
    2. '3' → logprob: -5.270455837249756
    3. '10' → logprob: -5.270455837249756
    4. '6' → logprob: -6.020455837249756
    5. '1' → logprob: -6.395455837249756
    6. '2' → logprob: -6.520455837249756
    7. '4' → logprob: -6.770455837249756
    8. '0' → logprob: -7.020455837249756
    9. '7' → logprob: -7.770455837249756
    10. '9' → logprob: -7.895455837249756

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16025753319263458
    2. ']' → logprob: -1.9102575778961182
    3. ' ]' → logprob: -11.660257339477539
    4. ',
' → logprob: -11.785257339477539
    5. ' ,' → logprob: -11.910257339477539
    6. '0' → logprob: -13.285257339477539
    7. ')' → logprob: -13.785257339477539
    8. ' ' → logprob: -13.785257339477539
    9. '   ' → logprob: -13.910257339477539
    10. '']' → logprob: -14.035257339477539

Token 11: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5858867764472961
    2. '3' → logprob: -1.4608867168426514
    3. '4' → logprob: -3.2108867168426514
    4. ' ' → logprob: -3.3358867168426514
    5. '1' → logprob: -3.4608867168426514
    6. '10' → logprob: -3.4608867168426514
    7. '2' → logprob: -3.4608867168426514
    8. '8' → logprob: -3.5858867168426514
    9. ',' → logprob: -5.5858869552612305
    10. '6' → logprob: -5.8358869552612305

Token 12: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011142492294311523
    2. ',' → logprob: -4.511142730712891
    3. ' ]' → logprob: -10.38614273071289
    4. '']' → logprob: -10.51114273071289
    5. '   ' → logprob: -11.01114273071289
    6. '],' → logprob: -12.13614273071289
    7. ')' → logprob: -12.76114273071289
    8. '`]' → logprob: -12.76114273071289
    9. ',
' → logprob: -13.26114273071289
    10. '])' → logprob: -13.63614273071289

Token 13: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.27135103940963745
    2. '5' → logprob: -2.0213510990142822
    3. '1' → logprob: -3.6463510990142822
    4. '2' → logprob: -3.6463510990142822
    5. '4' → logprob: -4.021350860595703
    6. '7' → logprob: -4.271350860595703
    7. ' ' → logprob: -4.521350860595703
    8. '0' → logprob: -6.271350860595703
    9. ']' → logprob: -6.396350860595703
    10. '8' → logprob: -6.396350860595703

Token 14: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04864811152219772
    2. ',' → logprob: -3.0486481189727783
    3. '   ' → logprob: -10.9236478805542
    4. ' ]' → logprob: -11.1736478805542
    5. ',
' → logprob: -11.7986478805542
    6. ')' → logprob: -11.7986478805542
    7. '']' → logprob: -12.6736478805542
    8. '],' → logprob: -13.1736478805542
    9. ']
' → logprob: -13.4236478805542
    10. '`]' → logprob: -13.6736478805542

Token 15: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0811971127986908
    2. ' ' → logprob: -2.7061970233917236
    3. '4' → logprob: -4.956197261810303
    4. '3' → logprob: -6.581197261810303
    5. '1' → logprob: -7.331197261810303
    6. '2' → logprob: -7.831197261810303
    7. '0' → logprob: -7.831197261810303
    8. '6' → logprob: -7.956197261810303
    9. '9' → logprob: -8.081196784973145
    10. '8' → logprob: -8.831196784973145

Token 16: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02057715691626072
    2. ',' → logprob: -3.8955771923065186
    3. '   ' → logprob: -11.645577430725098
    4. ' ]' → logprob: -11.770577430725098
    5. ']
' → logprob: -12.520577430725098
    6. ')' → logprob: -12.645577430725098
    7. ',
' → logprob: -12.770577430725098
    8. '']' → logprob: -13.020577430725098
    9. ']

' → logprob: -13.895577430725098
    10. '],' → logprob: -14.145577430725098

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7220199704170227
    2. '.' → logprob: -1.472019910812378
    3. '[' → logprob: -2.347019910812378
    4. ',' → logprob: -2.722019910812378
    5. ' ' → logprob: -3.472019910812378
    6. '```' → logprob: -3.722019910812378
    7. '    
' → logprob: -4.472020149230957
    8. '
' → logprob: -4.597020149230957
    9. ',
' → logprob: -5.097020149230957
    10. '`' → logprob: -5.472020149230957

Token 18: ' while' (ID: 2049)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7020395398139954
    2. '[' → logprob: -1.3270394802093506
    3. ',' → logprob: -1.7020394802093506
    4. ' ' → logprob: -4.45203971862793
    5. '`' → logprob: -4.95203971862793
    6. '```' → logprob: -4.95203971862793
    7. '   ' → logprob: -5.32703971862793
    8. ']' → logprob: -5.82703971862793
    9. '#' → logprob: -5.95203971862793
    10. '_' → logprob: -6.20203971862793

Token 19: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5074606537818909
    2. ' ' → logprob: -1.132460594177246
    3. ' target' → logprob: -3.007460594177246
    4. ' not' → logprob: -4.132460594177246
    5. ' len' → logprob: -4.757460594177246
    6. '  ' → logprob: -6.757460594177246
    7. 'True' → logprob: -7.882460594177246
    8. 'target' → logprob: -9.507460594177246
    9. ' '' → logprob: -11.257460594177246
    10. ' a' → logprob: -11.507460594177246

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.049755782238208e-05
    2. '():' → logprob: -10.87505054473877
    3. '):' → logprob: -11.87505054473877
    4. ' :' → logprob: -12.00005054473877
    5. ':**' → logprob: -12.50005054473877
    6. ':
' → logprob: -12.75005054473877
    7. '   ' → logprob: -12.87505054473877
    8. '':'' → logprob: -13.50005054473877
    9. ':return' → logprob: -13.87505054473877
    10. '```' → logprob: -14.12505054473877

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3609355688095093
    2. '    ' → logprob: -1.4859355688095093
    3. '   ' → logprob: -3.360935688018799
    4. '```' → logprob: -3.985935688018799
    5. ' ' → logprob: -4.985935688018799
    6. '        
' → logprob: -5.610935688018799
    7. '[' → logprob: -6.110935688018799
    8. '     
' → logprob: -6.235935688018799
    9. '    
' → logprob: -6.360935688018799
    10. '     ' → logprob: -6.610935688018799

Token 22: ' n' (ID: 297)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.5240681171417236
    2. ' guess' → logprob: -1.8990681171417236
    3. 'user' → logprob: -2.0240681171417236
    4. '   ' → logprob: -3.1490681171417236
    5. 'guess' → logprob: -3.6490681171417236
    6. ' inp' → logprob: -3.8990681171417236
    7. 'input' → logprob: -5.1490678787231445
    8. 'inp' → logprob: -5.1490678787231445
    9. ' line' → logprob: -5.2740678787231445
    10. ' choice' → logprob: -5.6490678787231445

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06053575500845909
    2. '=' → logprob: -3.8105356693267822
    3. 'um' → logprob: -3.8105356693267822
    4. 'umber' → logprob: -5.060535907745361
    5. 'o' → logprob: -6.060535907745361
    6. ' ' → logprob: -6.435535907745361
    7. '   ' → logprob: -6.810535907745361
    8. 'u' → logprob: -6.810535907745361
    9. '_' → logprob: -7.435535907745361
    10. 'ext' → logprob: -7.810535907745361

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.039408840239048004
    2. 'int' → logprob: -3.7894089221954346
    3. ' input' → logprob: -4.1644086837768555
    4. 'input' → logprob: -8.039408683776855
    5. ' ' → logprob: -9.414408683776855
    6. ' len' → logprob: -9.539408683776855
    7. '   ' → logprob: -12.914408683776855
    8. '  ' → logprob: -12.914408683776855
    9. 'len' → logprob: -12.914408683776855
    10. '=int' → logprob: -13.289408683776855

Token 25: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.201443150639534
    2. '(input' → logprob: -1.7014431953430176
    3. 'input' → logprob: -10.95144271850586
    4. '('' → logprob: -12.20144271850586
    5. '(
' → logprob: -12.32644271850586
    6. '()' → logprob: -14.57644271850586
    7. ' (' → logprob: -14.82644271850586
    8. '(int' → logprob: -15.07644271850586
    9. '(in' → logprob: -15.07644271850586
    10. ' input' → logprob: -15.32644271850586

Token 26: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19780026376247406
    2. '()' → logprob: -2.0728001594543457
    3. '('' → logprob: -3.0728001594543457
    4. '("("' → logprob: -5.822800159454346
    5. '("")' → logprob: -6.822800159454346
    6. '())' → logprob: -6.947800159454346
    7. '("' → logprob: -7.072800159454346
    8. '(""))' → logprob: -7.197800159454346
    9. ')' → logprob: -8.822800636291504
    10. ' ' → logprob: -8.947800636291504

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44685330986976624
    2. ')' → logprob: -1.6968532800674438
    3. '<|end|>' → logprob: -2.5718533992767334
    4. ' ' → logprob: -2.8218533992767334
    5. '   ' → logprob: -4.821853160858154
    6. '    ' → logprob: -4.821853160858154
    7. '        ' → logprob: -5.071853160858154
    8. ' if' → logprob: -5.196853160858154
    9. ' )' → logprob: -6.196853160858154
    10. '  ' → logprob: -6.821853160858154

Token 28: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3708372712135315
    2. ' ' → logprob: -1.8708372116088867
    3. ' if' → logprob: -3.1208372116088867
    4. ')' → logprob: -3.1208372116088867
    5. '<|end|>' → logprob: -3.4958372116088867
    6. 'if' (adapté à ' if') → logprob: -4.870837211608887
    7. '        ' → logprob: -5.370837211608887
    8. '[' → logprob: -5.495837211608887
    9. '    ' → logprob: -5.870837211608887
    10. '```' → logprob: -5.995837211608887

Token 29: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.002336758654564619
    2. ' ' → logprob: -6.3773369789123535
    3. 'n' → logprob: -7.5023369789123535
    4. ' not' → logprob: -10.252336502075195
    5. ' len' → logprob: -10.377336502075195
    6. ' ' → logprob: -11.752336502075195
    7. ' target' → logprob: -13.377336502075195
    8. '(n' → logprob: -13.502336502075195
    9. ' (' → logprob: -13.627336502075195
    10. ')' → logprob: -14.377336502075195

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08524634689092636
    2. ' <' → logprob: -2.9602463245391846
    3. ' >' → logprob: -4.460246562957764
    4. '==' → logprob: -4.710246562957764
    5. ' >=' → logprob: -5.835246562957764
    6. ' ' → logprob: -6.085246562957764
    7. ' <=' → logprob: -6.085246562957764
    8. ' in' → logprob: -7.085246562957764
    9. '>' → logprob: -7.960246562957764
    10. '<' → logprob: -8.460246086120605

Token 31: ' ' (ID: 220)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.525377094745636
    2. ' ' → logprob: -1.1503770351409912
    3. 'target' → logprob: -2.400377035140991
    4. '0' → logprob: -6.90037727355957
    5. '"' → logprob: -9.27537727355957
    6. ''' → logprob: -9.90037727355957
    7. '5' → logprob: -10.02537727355957
    8. '  ' → logprob: -10.15037727355957
    9. '7' → logprob: -10.40037727355957
    10. ' '' → logprob: -10.90037727355957

Token 32: '0' (ID: 15)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1972087174654007
    2. ' target' → logprob: -1.8222087621688843
    3. '0' → logprob: -4.697208881378174
    4. ' ' → logprob: -5.197208881378174
    5. '5' → logprob: -6.197208881378174
    6. '7' → logprob: -8.322208404541016
    7. '  ' → logprob: -9.947208404541016
    8. '   ' → logprob: -9.947208404541016
    9. 'len' → logprob: -10.072208404541016
    10. ' len' → logprob: -10.072208404541016

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019626895664259791
    2. ':
' → logprob: -9.25019645690918
    3. ' :' → logprob: -9.75019645690918
    4. '       ' → logprob: -10.75019645690918
    5. ':return' → logprob: -11.37519645690918
    6. '   ' → logprob: -12.75019645690918
    7. '):' → logprob: -13.25019645690918
    8. '<|end|>' → logprob: -13.87519645690918
    9. '    ' → logprob: -14.12519645690918
    10. '.' → logprob: -15.37519645690918

Token 34: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04452929273247719
    2. ':' → logprob: -3.4195291996002197
    3. '       ' → logprob: -4.669529438018799
    4. '<|end|>' → logprob: -8.04452896118164
    5. ':
' → logprob: -8.16952896118164
    6. ' break' → logprob: -8.79452896118164
    7. '\n' → logprob: -9.04452896118164
    8. '   ' → logprob: -9.41952896118164
    9. '<|end|>' → logprob: -9.54452896118164
    10. '	       ' → logprob: -9.79452896118164

Token 35: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5959627032279968
    2. ' break' → logprob: -0.8459627032279968
    3. '           ' → logprob: -4.2209625244140625
    4. 'break' (adapté à ' break') → logprob: -5.8459625244140625
    5. '\n' → logprob: -7.5959625244140625
    6. '        ' → logprob: -7.8459625244140625
    7. '	break' → logprob: -7.8459625244140625
    8. '```' → logprob: -8.345962524414062
    9. '   ' → logprob: -8.720962524414062
    10. '_break' → logprob: -9.470962524414062

Token 36: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15367892384529114
    2. '       ' → logprob: -2.5286788940429688
    3. '\n' → logprob: -3.7786788940429688
    4. '<|end|>' → logprob: -4.528678894042969
    5. '\' → logprob: -4.778678894042969
    6. '
' → logprob: -5.403678894042969
    7. '   ' → logprob: -5.403678894042969
    8. ')' → logprob: -6.278678894042969
    9. '```' → logprob: -6.403678894042969
    10. ' ' → logprob: -6.528678894042969

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7341350317001343
    2. ':' → logprob: -1.3591350317001343
    3. '\' → logprob: -2.359135150909424
    4. '\n' → logprob: -2.484135150909424
    5. '<|end|>' → logprob: -3.609135150909424
    6. '
' → logprob: -4.234135150909424
    7. '```' → logprob: -4.609135150909424
    8. '   ' → logprob: -4.734135150909424
    9. '    ' → logprob: -5.484135150909424
    10. ' ' → logprob: -5.734135150909424

Token 38: ' words' (ID: 6391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16969943046569824
    2. ' ' → logprob: -2.9196994304656982
    3. '        ' → logprob: -4.044699668884277
    4. '    ' → logprob: -4.294699668884277
    5. '<|end|>' → logprob: -4.294699668884277
    6. ' if' → logprob: -4.669699668884277
    7. '```' → logprob: -4.669699668884277
    8. '   ' → logprob: -4.919699668884277
    9. '[' → logprob: -5.044699668884277
    10. '        
' → logprob: -5.544699668884277

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011752263642847538
    2. '=' → logprob: -4.511752128601074
    3. '.' → logprob: -8.761752128601074
    4. '[:]' → logprob: -9.136752128601074
    5. '.append' → logprob: -9.261752128601074
    6. '=[]' → logprob: -9.261752128601074
    7. '[' → logprob: -10.261752128601074
    8. 's' → logprob: -10.261752128601074
    9. '_count' → logprob: -10.386752128601074
    10. '_' → logprob: -10.511752128601074

Token 40: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7653524875640869
    2. ' input' → logprob: -0.8903524875640869
    3. 'input' → logprob: -2.890352487564087
    4. '[]' → logprob: -3.515352487564087
    5. ' list' → logprob: -3.765352487564087
    6. ' [' → logprob: -4.640352249145508
    7. '[input' → logprob: -6.140352249145508
    8. '[' → logprob: -6.640352249145508
    9. 'list' → logprob: -6.765352249145508
    10. ' ' → logprob: -6.890352249145508

Token 41: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12439651042222977
    2. ' input' → logprob: -2.249396562576294
    3. 'int' → logprob: -5.249396324157715
    4. 'str' → logprob: -5.999396324157715
    5. ']' → logprob: -7.124396324157715
    6. '   ' → logprob: -7.374396324157715
    7. ' str' → logprob: -7.749396324157715
    8. ' int' → logprob: -7.749396324157715
    9. ' ]' → logprob: -8.124396324157715
    10. '[]' → logprob: -8.499396324157715

Token 42: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024080125615000725
    2. '()]' → logprob: -3.7740800380706787
    3. '().' → logprob: -7.774080276489258
    4. '())' → logprob: -7.899080276489258
    5. ']()' → logprob: -11.524080276489258
    6. '()
' → logprob: -11.899080276489258
    7. '(' → logprob: -12.274080276489258
    8. '()

' → logprob: -12.524080276489258
    9. ' ()' → logprob: -12.774080276489258
    10. '()`' → logprob: -13.274080276489258

Token 43: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010929441079497337
    2. ')' → logprob: -5.760929584503174
    3. '()]' → logprob: -5.885929584503174
    4. ' for' → logprob: -6.260929584503174
    5. 'for' → logprob: -6.635929584503174
    6. ']' → logprob: -7.510929584503174
    7. '().' → logprob: -7.635929584503174
    8. ' ()' → logprob: -8.010929107666016
    9. '())' → logprob: -8.635929107666016
    10. ')]' → logprob: -9.760929107666016

Token 44: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.34054461121559143
    2. '_' → logprob: -1.465544581413269
    3. ' ' → logprob: -3.0905447006225586
    4. ' range' → logprob: -4.465544700622559
    5. '_range' → logprob: -7.965544700622559
    6. ' i' → logprob: -8.465544700622559
    7. 'range' → logprob: -9.590544700622559
    8. ' ' → logprob: -10.965544700622559
    9. ' ▁' → logprob: -11.715544700622559
    10. '	range' → logprob: -11.715544700622559

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3499685823917389
    2. ' range' → logprob: -1.5999685525894165
    3. 'range' → logprob: -2.474968671798706
    4. 'in' → logprob: -4.974968433380127
    5. ' ' → logprob: -6.099968433380127
    6. ' ran' → logprob: -10.849968910217285
    7. '  ' → logprob: -11.099968910217285
    8. ' xrange' → logprob: -11.724968910217285
    9. '	range' → logprob: -11.974968910217285
    10. 'n' → logprob: -12.474968910217285

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04300159960985184
    2. ' range' → logprob: -3.168001651763916
    3. ' ' → logprob: -14.293001174926758
    4. '	range' → logprob: -14.543001174926758
    5. '(range' → logprob: -14.793001174926758
    6. 'n' → logprob: -16.043001174926758
    7. 'rang' → logprob: -16.168001174926758
    8. '  ' → logprob: -16.168001174926758
    9. '[' → logprob: -16.293001174926758
    10. '   ' → logprob: -16.418001174926758

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002833649516105652
    2. '(' → logprob: -5.877833843231201
    3. ' (' → logprob: -10.502833366394043
    4. '(len' → logprob: -13.752833366394043
    5. ' n' → logprob: -15.752833366394043
    6. '(int' → logprob: -17.37783432006836
    7. '(
' → logprob: -17.37783432006836
    8. 'n' → logprob: -17.50283432006836
    9. ')' → logprob: -17.87783432006836
    10. '(nt' → logprob: -18.12783432006836

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.017927029868588e-05
    2. ')' → logprob: -10.250080108642578
    3. ']' → logprob: -10.875080108642578
    4. '       ' → logprob: -11.625080108642578
    5. ')]
' → logprob: -12.000080108642578
    6. '   ' → logprob: -12.250080108642578
    7. ' )' → logprob: -12.875080108642578
    8. '')]' → logprob: -13.875080108642578
    9. '")]' → logprob: -15.375080108642578
    10. '```' → logprob: -15.375080108642578

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06416662782430649
    2. '<|end|>' → logprob: -3.06416654586792
    3. '        
' → logprob: -5.56416654586792
    4. '   ' → logprob: -5.68916654586792
    5. '        ' → logprob: -5.68916654586792
    6. '    ' → logprob: -7.06416654586792
    7. ' ' → logprob: -7.31416654586792
    8. '
' → logprob: -7.31416654586792
    9. '```' → logprob: -7.56416654586792
    10. '      ' → logprob: -8.564167022705078

Token 50: ' lens' (ID: 27149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2047587633132935
    2. 's' → logprob: -1.4547587633132935
    3. '   ' → logprob: -2.454758644104004
    4. 't' → logprob: -3.204758644104004
    5. ' counts' → logprob: -3.329758644104004
    6. 'count' → logprob: -3.329758644104004
    7. ' s' → logprob: -3.454758644104004
    8. ' syll' → logprob: -3.954758644104004
    9. '    ' → logprob: -4.204758644104004
    10. '```' → logprob: -4.204758644104004

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18587644398212433
    2. 's' → logprob: -2.0608763694763184
    3. ' =' → logprob: -3.5608763694763184
    4. '_' → logprob: -5.310876369476318
    5. 'ens' → logprob: -5.810876369476318
    6. '=[]' → logprob: -6.060876369476318
    7. '(' → logprob: -6.935876369476318
    8. '_lengths' → logprob: -7.310876369476318
    9. '_words' → logprob: -7.435876369476318
    10. 'g' → logprob: -8.060876846313477

Token 52: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46150141954421997
    2. ' [' → logprob: -1.0865013599395752
    3. '[len' → logprob: -3.836501359939575
    4. '[list' → logprob: -5.086501598358154
    5. ' []' → logprob: -6.336501598358154
    6. '[]' → logprob: -6.711501598358154
    7. ' list' → logprob: -7.336501598358154
    8. '[int' → logprob: -8.711501121520996
    9. '[List' → logprob: -9.336501121520996
    10. '[length' → logprob: -9.586501121520996

Token 53: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0013329789508134127
    2. ' len' → logprob: -6.626332759857178
    3. '(len' → logprob: -12.126333236694336
    4. '[len' → logprob: -13.751333236694336
    5. 'sum' → logprob: -15.001333236694336
    6. '=len' → logprob: -17.251333236694336
    7. ' ' → logprob: -17.376333236694336
    8. ',len' → logprob: -17.376333236694336
    9. '	len' → logprob: -17.751333236694336
    10. '   ' → logprob: -17.751333236694336

Token 54: '(w' (ID: 7420)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.09423593431711197
    2. '(w' → logprob: -2.594235897064209
    3. '(' → logprob: -4.594235897064209
    4. '(words' → logprob: -5.344235897064209
    5. '(s' → logprob: -8.219236373901367
    6. '(x' → logprob: -10.719236373901367
    7. '(token' → logprob: -10.969236373901367
    8. '(i' → logprob: -11.594236373901367
    9. ' (' → logprob: -11.719236373901367
    10. '(a' → logprob: -12.969236373901367

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18038542568683624
    2. ')]' → logprob: -1.8053854703903198
    3. ')])' → logprob: -8.05538558959961
    4. ' )' → logprob: -9.30538558959961
    5. '[' → logprob: -9.55538558959961
    6. '())' → logprob: -9.93038558959961
    7. 's' → logprob: -11.30538558959961
    8. ')
' → logprob: -11.55538558959961
    9. ']' → logprob: -11.55538558959961
    10. '),' → logprob: -11.55538558959961

Token 56: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03146219253540039
    2. ' for' → logprob: -4.1564621925354
    3. '()' → logprob: -5.0314621925354
    4. ' )' → logprob: -5.4064621925354
    5. '.split' → logprob: -6.2814621925354
    6. '<|end|>' → logprob: -7.0314621925354
    7. 'for' → logprob: -7.6564621925354
    8. '())' → logprob: -8.281461715698242
    9. ']' → logprob: -8.656461715698242
    10. ' ' → logprob: -8.906461715698242

Token 57: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3995688259601593
    2. ' words' → logprob: -1.274568796157837
    3. 'w' → logprob: -3.024568796157837
    4. 'words' → logprob: -7.274569034576416
    5. ' ' → logprob: -8.149568557739258
    6. '(words' → logprob: -9.274568557739258
    7. '<|end|>' → logprob: -9.524568557739258
    8. ' word' → logprob: -10.024568557739258
    9. '_words' → logprob: -11.774568557739258
    10. ' palabras' → logprob: -12.024568557739258

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1879197508096695
    2. ' ' → logprob: -2.562919855117798
    3. ' w' → logprob: -2.812919855117798
    4. ' words' → logprob: -3.562919855117798
    5. 'w' → logprob: -5.937919616699219
    6. ' ]' → logprob: -6.812919616699219
    7. 'in' → logprob: -7.187919616699219
    8. ']' → logprob: -8.062919616699219
    9. ')' → logprob: -8.562919616699219
    10. 's' → logprob: -8.687919616699219

Token 59: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.054963648319244385
    2. 'words' → logprob: -2.9299635887145996
    3. '(words' → logprob: -10.304964065551758
    4. ' ' → logprob: -10.679964065551758
    5. 'w' → logprob: -11.304964065551758
    6. ' w' → logprob: -12.304964065551758
    7. '_words' → logprob: -13.429964065551758
    8. '  ' → logprob: -13.929964065551758
    9. '.words' → logprob: -13.929964065551758
    10. '   ' → logprob: -14.179964065551758

Token 60: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045957062393426895
    2. '       ' → logprob: -3.295957088470459
    3. ' ]' → logprob: -5.045957088470459
    4. ')' → logprob: -7.045957088470459
    5. ')]' → logprob: -8.9209566116333
    6. '
' → logprob: -9.2959566116333
    7. '        ' → logprob: -9.4209566116333
    8. '()]' → logprob: -9.6709566116333
    9. ']
' → logprob: -9.6709566116333
    10. '<|end|>' → logprob: -10.1709566116333

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03183535113930702
    2. ' if' → logprob: -4.156835556030273
    3. '<|end|>' → logprob: -4.781835556030273
    4. ' ' → logprob: -6.281835556030273
    5. '        
' → logprob: -6.281835556030273
    6. '        ' → logprob: -7.031835556030273
    7. '
' → logprob: -7.031835556030273
    8. '   ' → logprob: -7.656835556030273
    9. 'if' → logprob: -8.406835556030273
    10. '    ' → logprob: -9.156835556030273

Token 62: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2122177630662918
    2. 'if' → logprob: -1.9622178077697754
    3. ' for' → logprob: -4.837217807769775
    4. ' i' → logprob: -5.087217807769775
    5. ' result' → logprob: -5.337217807769775
    6. ' counts' → logprob: -5.587217807769775
    7. '       ' → logprob: -5.962217807769775
    8. 'result' → logprob: -5.962217807769775
    9. 'counts' → logprob: -6.087217807769775
    10. 's' → logprob: -6.337217807769775

Token 63: ' start' (ID: 1604)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.045101143419742584
    2. ' _' → logprob: -3.1701011657714844
    3. ' t' → logprob: -6.920101165771484
    4. '_' → logprob: -8.420101165771484
    5. ' ' → logprob: -8.420101165771484
    6. ' l' → logprob: -8.795101165771484
    7. ' target' → logprob: -9.420101165771484
    8. ' idx' → logprob: -9.420101165771484
    9. ' s' → logprob: -9.545101165771484
    10. 'i' → logprob: -9.920101165771484

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07925129681825638
    2. 'in' → logprob: -2.579251289367676
    3. ' ' → logprob: -9.079251289367676
    4. ',' → logprob: -9.454251289367676
    5. '_in' → logprob: -10.329251289367676
    6. '_' → logprob: -10.454251289367676
    7. '<|end|>' → logprob: -10.829251289367676
    8. ' ,' → logprob: -11.204251289367676
    9. '	in' → logprob: -11.204251289367676
    10. ' i' → logprob: -11.454251289367676

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00012809180771000683
    2. 'range' → logprob: -9.125127792358398
    3. ' ' → logprob: -11.750127792358398
    4. ' xrange' → logprob: -11.750127792358398
    5. '	range' → logprob: -13.625127792358398
    6. '(range' → logprob: -13.625127792358398
    7. '<|end|>' → logprob: -14.250127792358398
    8. ' ran' → logprob: -16.7501277923584
    9. ' r' → logprob: -16.8751277923584
    10. '_range' → logprob: -17.3751277923584

Token 66: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3893280327320099
    2. '(n' → logprob: -1.1393280029296875
    3. '(' → logprob: -6.0143280029296875
    4. 'len' → logprob: -12.014328002929688
    5. ' len' → logprob: -12.764328002929688
    6. ' (' → logprob: -14.264328002929688
    7. '(l' → logprob: -15.514328002929688
    8. 'n' → logprob: -15.764328002929688
    9. ' n' → logprob: -16.014328002929688
    10. '((' → logprob: -16.139328002929688

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01935240812599659
    2. '-' → logprob: -4.769352436065674
    3. ')' → logprob: -5.519352436065674
    4. '):
' → logprob: -5.894352436065674
    5. ' ):' → logprob: -6.644352436065674
    6. ' -' → logprob: -7.144352436065674
    7. ':' → logprob: -7.769352436065674
    8. '-n' → logprob: -7.769352436065674
    9. '+' → logprob: -7.894352436065674
    10. '   ' → logprob: -8.769351959228516

Token 68: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8021961450576782
    2. '       ' → logprob: -1.4271961450576782
    3. '<|end|>' → logprob: -1.8021961450576782
    4. '           ' → logprob: -2.3021960258483887
    5. '   ' → logprob: -4.302196025848389
    6. '    ' → logprob: -4.802196025848389
    7. ' :' → logprob: -5.052196025848389
    8. ' ' → logprob: -5.302196025848389
    9. '        ' → logprob: -5.802196025848389
    10. '<|end|>' → logprob: -5.927196025848389

Token 69: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09401187300682068
    2. ' for' → logprob: -3.2190117835998535
    3. ' if' → logprob: -3.9690117835998535
    4. '           ' → logprob: -4.4690117835998535
    5. 'for' → logprob: -5.3440117835998535
    6. '<|end|>' → logprob: -5.5940117835998535
    7. '    ' → logprob: -6.0940117835998535
    8. '            ' → logprob: -6.3440117835998535
    9. ' 
' → logprob: -6.4690117835998535
    10. '       ' → logprob: -6.7190117835998535

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047371819615364075
    2. '=' → logprob: -3.4223718643188477
    3. '<|end|>' → logprob: -4.922371864318848
    4. ' in' → logprob: -6.297371864318848
    5. ' ' → logprob: -6.672371864318848
    6. '+' → logprob: -7.047371864318848
    7. ' +' → logprob: -7.422371864318848
    8. ' +=' → logprob: -7.547371864318848
    9. ',' → logprob: -7.672371864318848
    10. '<|end|>' → logprob: -8.297371864318848

Token 71: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3984498977661133
    2. ' start' → logprob: -1.2734498977661133
    3. '0' → logprob: -3.1484498977661133
    4. ' ' → logprob: -5.148449897766113
    5. '[start' → logprob: -11.023449897766113
    6. '1' → logprob: -12.523449897766113
    7. '(start' → logprob: -12.648449897766113
    8. '   ' → logprob: -12.648449897766113
    9. '```' → logprob: -12.773449897766113
    10. '  ' → logprob: -12.898449897766113

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' valid' (ID: 4529)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7638894319534302
    2. ' match' → logprob: -1.8888894319534302
    3. ' count' → logprob: -2.0138893127441406
    4. '       ' → logprob: -2.8888893127441406
    5. ' found' → logprob: -2.8888893127441406
    6. ' counts' → logprob: -3.0138893127441406
    7. 'count' → logprob: -3.1388893127441406
    8. ' sequence' → logprob: -3.5138893127441406
    9. ' current' → logprob: -3.6388893127441406
    10. ' if' → logprob: -3.8888893127441406

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04069718345999718
    2. '=' → logprob: -3.2906970977783203
    3. ' ' → logprob: -6.91569709777832
    4. ':' → logprob: -7.29069709777832
    5. '=True' → logprob: -7.54069709777832
    6. ',' → logprob: -8.91569709777832
    7. '<|end|>' → logprob: -9.16569709777832
    8. '_' → logprob: -10.16569709777832
    9. 'and' → logprob: -10.29069709777832
    10. '=False' → logprob: -10.29069709777832

Token 76: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.014173506759107113
    2. 'True' → logprob: -4.26417350769043
    3. ' False' → logprob: -12.63917350769043
    4. ' ' → logprob: -13.01417350769043
    5. '(True' → logprob: -13.13917350769043
    6. 'False' → logprob: -14.38917350769043
    7. '0' → logprob: -14.38917350769043
    8. '   ' → logprob: -14.88917350769043
    9. '[]' → logprob: -15.26417350769043
    10. '=True' → logprob: -15.76417350769043

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49841198325157166
    2. 'for' (adapté à ' for') → logprob: -0.998412013053894
    3. '           ' → logprob: -5.123412132263184
    4. ' ' → logprob: -5.623412132263184
    5. ' while' → logprob: -5.623412132263184
    6. 'while' → logprob: -5.873412132263184
    7. 'count' → logprob: -6.248412132263184
    8. '   ' → logprob: -6.748412132263184
    9. ' if' → logprob: -6.873412132263184
    10. 'if' → logprob: -7.498412132263184

Token 80: ' t' (ID: 260)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4204390347003937
    2. 'i' → logprob: -1.4204390048980713
    3. ' t' → logprob: -3.0454390048980713
    4. 't' → logprob: -3.5454390048980713
    5. ' j' → logprob: -5.54543924331665
    6. ' range' → logprob: -5.67043924331665
    7. 'k' → logprob: -5.67043924331665
    8. 'range' → logprob: -5.79543924331665
    9. ' k' → logprob: -6.04543924331665
    10. 'j' → logprob: -6.17043924331665

Token 81: ' in' (ID: 306)
  Prédit: 'arget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arget' → logprob: -0.35363146662712097
    2. ',' → logprob: -2.3536314964294434
    3. '_idx' → logprob: -2.6036314964294434
    4. ' in' → logprob: -2.7286314964294434
    5. 'oken' → logprob: -3.1036314964294434
    6. '_index' → logprob: -4.853631496429443
    7. '_i' → logprob: -5.853631496429443
    8. 'ok' → logprob: -6.103631496429443
    9. 'idx' → logprob: -6.103631496429443
    10. 'i' → logprob: -7.353631496429443

Token 82: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5865765810012817
    2. ' target' → logprob: -1.2115765810012817
    3. ' range' → logprob: -2.586576461791992
    4. 'range' → logprob: -2.711576461791992
    5. 'arget' → logprob: -5.461576461791992
    6. '[target' → logprob: -10.961576461791992
    7. '	target' → logprob: -11.086576461791992
    8. ' ' → logprob: -11.086576461791992
    9. '(target' → logprob: -11.461576461791992
    10. 't' → logprob: -12.711576461791992

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003297440707683563
    2. ' :' → logprob: -8.500329971313477
    3. ':
' → logprob: -9.500329971313477
    4. '):' → logprob: -10.500329971313477
    5. '<|end|>' → logprob: -11.500329971313477
    6. '[' → logprob: -12.250329971313477
    7. ':**' → logprob: -14.000329971313477
    8. '=' → logprob: -14.125329971313477
    9. '[:' → logprob: -14.250329971313477
    10. '[:]' → logprob: -14.375329971313477

Token 84: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7789386510848999
    2. '==' → logprob: -2.4039387702941895
    3. '<=' → logprob: -2.6539387702941895
    4. 'elif' → logprob: -2.9039387702941895
    5. 'if' → logprob: -3.1539387702941895
    6. ' =' → logprob: -3.6539387702941895
    7. '+=' → logprob: -3.9039387702941895
    8. 'e' → logprob: -3.9039387702941895
    9. '<|end|>' → logprob: -3.9039387702941895
    10. ' <=' → logprob: -4.0289387702941895

Token 87: ' ' (ID: 220)
  Prédit: ' lens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lens' → logprob: -0.008946389891207218
    2. ' len' → logprob: -5.633946418762207
    3. 'lens' → logprob: -5.758946418762207
    4. ' idx' → logprob: -6.883946418762207
    5. ' ' → logprob: -7.883946418762207
    6. 'len' → logprob: -8.508946418762207
    7. ' "' → logprob: -8.883946418762207
    8. '"' → logprob: -9.383946418762207
    9. '0' → logprob: -10.383946418762207
    10. ' '' → logprob: -10.383946418762207

Token 88: '0' (ID: 15)
  Prédit: 'lens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lens' → logprob: -0.021274806931614876
    2. ' lens' → logprob: -4.271275043487549
    3. 'len' → logprob: -5.146275043487549
    4. 'idx' → logprob: -7.146275043487549
    5. ' idx' → logprob: -8.77127456665039
    6. 'l' → logprob: -9.39627456665039
    7. ' len' → logprob: -10.02127456665039
    8. '0' → logprob: -10.14627456665039
    9. ' ' → logprob: -10.27127456665039
    10. 'length' → logprob: -11.02127456665039

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5015950202941895
    2. ' while' → logprob: -1.0015950202941895
    3. '<|end|>' → logprob: -3.8765950202941895
    4. 's' → logprob: -5.5015950202941895
    5. ' s' → logprob: -6.8765950202941895
    6. 'While' → logprob: -7.8765950202941895
    7. '<|end|>' → logprob: -8.376594543457031
    8. '	while' → logprob: -8.376594543457031
    9. ' ' → logprob: -8.876594543457031
    10. '                ' → logprob: -9.126594543457031

Token 92: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3093593716621399
    2. 'idx' → logprob: -1.6843593120574951
    3. ' s' → logprob: -2.684359312057495
    4. 's' → logprob: -4.434359550476074
    5. ' True' → logprob: -9.184359550476074
    6. 'True' → logprob: -9.184359550476074
    7. ' ' → logprob: -9.934359550476074
    8. '	idx' → logprob: -10.059359550476074
    9. '(idx' → logprob: -10.559359550476074
    10. '<|end|>' → logprob: -11.309359550476074

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005926901008933783
    2. '<|end|>' → logprob: -5.880927085876465
    3. '<' → logprob: -6.005927085876465
    4. ' ' → logprob: -8.005927085876465
    5. '<n' → logprob: -8.505927085876465
    6. 's' → logprob: -10.380927085876465
    7. '<len' → logprob: -10.630927085876465
    8. 'n' → logprob: -11.130927085876465
    9. '<|end|>' → logprob: -11.755927085876465
    10. ' <",' → logprob: -12.318427085876465

Token 94: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25226926803588867
    2. 'n' → logprob: -1.5022692680358887
    3. ' start' → logprob: -9.377269744873047
    4. 'start' → logprob: -9.502269744873047
    5. 'len' → logprob: -9.877269744873047
    6. ' ' → logprob: -9.877269744873047
    7. ' len' → logprob: -10.252269744873047
    8. '<|end|>' → logprob: -10.377269744873047
    9. '	n' → logprob: -12.252269744873047
    10. '<|end|>' → logprob: -13.627269744873047

Token 95: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12698867917060852
    2. 'and' → logprob: -2.126988649368286
    3. ' ' → logprob: -10.001988410949707
    4. '   ' → logprob: -12.251988410949707
    5. '           ' → logprob: -12.876988410949707
    6. '<|end|>' → logprob: -13.376988410949707
    7. '    ' → logprob: -13.501988410949707
    8. '	and' → logprob: -13.626988410949707
    9. '  ' → logprob: -13.876988410949707
    10. '       ' → logprob: -14.376988410949707

Token 96: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06510709971189499
    2. 's' → logprob: -2.8151071071624756
    3. ' lens' → logprob: -5.9401068687438965
    4. ' ' → logprob: -8.815107345581055
    5. 'lens' → logprob: -8.940107345581055
    6. ' (' → logprob: -10.065107345581055
    7. '	s' → logprob: -10.190107345581055
    8. '(s' → logprob: -10.440107345581055
    9. 'l' → logprob: -11.252607345581055
    10. '   ' → logprob: -11.377607345581055

Token 97: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4291248321533203
    2. '<' → logprob: -1.0541248321533203
    3. '!=' → logprob: -9.05412483215332
    4. ' !=' → logprob: -9.42912483215332
    5. '<|end|>' → logprob: -9.55412483215332
    6. ' ' → logprob: -10.05412483215332
    7. '<s' → logprob: -10.92912483215332
    8. ' less' → logprob: -11.30412483215332
    9. 's' → logprob: -11.55412483215332
    10. '<len' → logprob: -12.05412483215332

Token 98: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4740956723690033
    2. ' t' → logprob: -0.9740957021713257
    3. ' ' → logprob: -11.599095344543457
    4. '	t' → logprob: -12.349095344543457
    5. '`t' → logprob: -13.099095344543457
    6. '<|end|>' → logprob: -13.349095344543457
    7. '<t' → logprob: -14.974095344543457
    8. '   ' → logprob: -15.349095344543457
    9. '>' → logprob: -16.099096298217773
    10. '<|end|>' → logprob: -16.099096298217773

Token 99: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8212880492210388
    2. ':' → logprob: -0.9462880492210388
    3. ' and' → logprob: -1.8212881088256836
    4. 'and' → logprob: -4.821288108825684
    5. 's' → logprob: -7.071288108825684
    6. '<|end|>' → logprob: -7.446288108825684
    7. ' :
' → logprob: -9.196288108825684
    8. ' s' → logprob: -9.321288108825684
    9. '   ' → logprob: -9.321288108825684
    10. ':

' → logprob: -9.446288108825684

Token 100: '                   ' (ID: 699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37576261162757874
    2. '+' → logprob: -2.000762701034546
    3. ' s' → logprob: -2.875762701034546
    4. ' and' → logprob: -3.125762701034546
    5. '<|end|>' → logprob: -4.125762462615967
    6. ' ' → logprob: -4.375762462615967
    7. '                   ' → logprob: -4.500762462615967
    8. ' +' → logprob: -4.750762462615967
    9. '               ' → logprob: -4.875762462615967
    10. ' +=' → logprob: -5.500762462615967

Token 101: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05687987431883812
    2. 's' (adapté à ' s') → logprob: -2.931879758834839
    3. ' ' → logprob: -6.681879997253418
    4. '<|end|>' → logprob: -7.931879997253418
    5. '                       ' → logprob: -8.931879997253418
    6. '                               ' → logprob: -9.931879997253418
    7. '                   ' → logprob: -10.181879997253418
    8. '                    ' → logprob: -10.556879997253418
    9. '                ' → logprob: -10.681879997253418
    10. '               ' → logprob: -10.931879997253418

Token 102: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0408397875726223
    2. '+=' → logprob: -3.415839672088623
    3. '+' → logprob: -5.290839672088623
    4. ' +' → logprob: -6.165839672088623
    5. ' ' → logprob: -11.290840148925781
    6. '<|end|>' → logprob: -11.290840148925781
    7. ']+=' → logprob: -13.790840148925781
    8. '+='' → logprob: -14.040840148925781
    9. ' =' → logprob: -14.415840148925781
    10. '    ' → logprob: -14.540840148925781

Token 103: ' lens' (ID: 27149)
  Prédit: ' lens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lens' → logprob: -0.4123184084892273
    2. 'lens' → logprob: -1.287318468093872
    3. 'len' → logprob: -3.037318468093872
    4. ' len' → logprob: -4.287318229675293
    5. 'l' → logprob: -9.662318229675293
    6. ' ' → logprob: -10.037318229675293
    7. '1' → logprob: -11.162318229675293
    8. ' lenses' → logprob: -11.162318229675293
    9. '   ' → logprob: -11.912318229675293
    10. 'length' → logprob: -12.349818229675293

Token 104: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.9650025428272784e-05
    2. '[' → logprob: -10.250040054321289
    3. '[index' → logprob: -14.000040054321289
    4. 'idx' → logprob: -14.250040054321289
    5. ' [' → logprob: -14.500040054321289
    6. '[token' → logprob: -14.625040054321289
    7. '[
' → logprob: -14.625040054321289
    8. '```' → logprob: -14.875040054321289
    9. '[id' → logprob: -15.875040054321289
    10. '][' → logprob: -16.62504005432129

Token 105: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11364217102527618
    2. ']
' → logprob: -2.2386422157287598
    3. ' ]' → logprob: -8.613641738891602
    4. '                   ' → logprob: -9.113641738891602
    5. '               ' → logprob: -9.113641738891602
    6. ']:
' → logprob: -9.488641738891602
    7. ']
' → logprob: -9.738641738891602
    8. '[idx' → logprob: -9.988641738891602
    9. '<|end|>' → logprob: -10.238641738891602
    10. ']

' → logprob: -10.363641738891602

Token 106: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006733965128660202
    2. '               ' → logprob: -5.2567338943481445
    3. '           ' → logprob: -7.5067338943481445
    4. '                    
' → logprob: -8.381733894348145
    5. 'idx' → logprob: -8.631733894348145
    6. '                  ' → logprob: -9.506733894348145
    7. '                       ' → logprob: -9.756733894348145
    8. '+' → logprob: -10.006733894348145
    9. '                    ' → logprob: -10.131733894348145
    10. '       ' → logprob: -10.381733894348145

Token 107: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.5400558114051819
    2. ' idx' → logprob: -0.9150558114051819
    3. '                   ' → logprob: -4.165055751800537
    4. ' if' → logprob: -8.040056228637695
    5. '               ' → logprob: -8.415056228637695
    6. 'if' → logprob: -8.915056228637695
    7. '           ' → logprob: -9.165056228637695
    8. '
' → logprob: -9.165056228637695
    9. '	idx' → logprob: -9.415056228637695
    10. '[idx' → logprob: -9.790056228637695

Token 108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28534969687461853
    2. '+=' → logprob: -1.410349726676941
    3. '+' → logprob: -5.5353498458862305
    4. '<|end|>' → logprob: -8.66034984588623
    5. '++' → logprob: -10.41034984588623
    6. ' +' → logprob: -10.66034984588623
    7. '<|end|>' → logprob: -12.28534984588623
    8. '```' → logprob: -12.66034984588623
    9. '    ' → logprob: -13.28534984588623
    10. '+='' → logprob: -13.66034984588623

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.62509536743164
    4. '```' → logprob: -16.75009536743164
    5. '<|end|>' → logprob: -18.12509536743164
    6. '                   ' → logprob: -19.25009536743164
    7. '  ' → logprob: -19.25009536743164
    8. '           ' → logprob: -19.50009536743164
    9. '１' → logprob: -20.00009536743164
    10. '۱' → logprob: -20.00009536743164

Token 110: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20656248927116394
    2. '
' → logprob: -2.4565625190734863
    3. '<|end|>' → logprob: -3.2065625190734863
    4. '           ' → logprob: -3.5815625190734863
    5. '       ' → logprob: -3.8315625190734863
    6. ' ' → logprob: -5.831562519073486
    7. '                   ' → logprob: -6.081562519073486
    8. ' if' → logprob: -6.706562519073486
    9. '<|end|>' → logprob: -6.831562519073486
    10. '                ' → logprob: -7.206562519073486

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09205161780118942
    2. '           ' → logprob: -2.4670515060424805
    3. '<|end|>' → logprob: -6.7170515060424805
    4. '       ' → logprob: -7.0920515060424805
    5. '
' → logprob: -7.7170515060424805
    6. '                   ' → logprob: -7.9670515060424805
    7. ' ' → logprob: -9.46705150604248
    8. '   ' → logprob: -9.84205150604248
    9. '<|end|>' → logprob: -10.59205150604248
    10. ' if' → logprob: -10.59205150604248

Token 112: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029635459184646606
    2. ' if' → logprob: -4.279635429382324
    3. '           ' → logprob: -4.404635429382324
    4. ' ' → logprob: -6.404635429382324
    5. '       ' → logprob: -7.904635429382324
    6. '                
' → logprob: -8.154635429382324
    7. 'if' (adapté à ' if') → logprob: -8.279635429382324
    8. '```' → logprob: -8.404635429382324
    9. '<|end|>' → logprob: -9.904635429382324
    10. ' 
' → logprob: -10.029635429382324

Token 113: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.004628296010196209
    2. 's' → logprob: -5.3796281814575195
    3. ' not' → logprob: -12.25462818145752
    4. ' ' → logprob: -12.87962818145752
    5. '(s' → logprob: -14.75462818145752
    6. '               ' → logprob: -16.629629135131836
    7. 'not' → logprob: -16.754629135131836
    8. ' ' → logprob: -16.879629135131836
    9. '	s' → logprob: -16.879629135131836
    10. '                   ' → logprob: -17.004629135131836

Token 114: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3270004093647003
    2. ' !=' → logprob: -1.702000379562378
    3. '>' → logprob: -2.702000379562378
    4. '<' → logprob: -4.077000617980957
    5. ' >' → logprob: -4.952000617980957
    6. '==' → logprob: -5.827000617980957
    7. ' <' → logprob: -6.202000617980957
    8. ' ==' → logprob: -7.827000617980957
    9. '=' → logprob: -9.452000617980957
    10. ' ' → logprob: -11.577000617980957

Token 115: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.05488431453704834
    2. 't' → logprob: -2.929884433746338
    3. ' ' → logprob: -13.30488395690918
    4. '`t' → logprob: -16.55488395690918
    5. '5' → logprob: -16.67988395690918
    6. 'target' → logprob: -16.80488395690918
    7. 's' → logprob: -17.17988395690918
    8. '	t' → logprob: -17.80488395690918
    9. '7' → logprob: -18.05488395690918
    10. '_t' → logprob: -18.17988395690918

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26352769136428833
    2. ':
' → logprob: -1.5135276317596436
    3. ' or' → logprob: -5.263527870178223
    4. '               ' → logprob: -5.638527870178223
    5. '           ' → logprob: -6.263527870178223
    6. '                   ' → logprob: -7.888527870178223
    7. ' and' → logprob: -7.888527870178223
    8. ':return' → logprob: -10.013527870178223
    9. '                       ' → logprob: -10.638527870178223
    10. ':

' → logprob: -11.013527870178223

Token 117: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0024292864836752415
    2. '               ' → logprob: -6.127429485321045
    3. '           ' → logprob: -9.127429008483887
    4. '                       ' → logprob: -9.502429008483887
    5. '                           ' → logprob: -10.752429008483887
    6. '
' → logprob: -11.502429008483887
    7. '                    
' → logprob: -11.752429008483887
    8. '   ' → logprob: -12.002429008483887
    9. '                  ' → logprob: -12.752429008483887
    10. ' valid' → logprob: -13.252429008483887

Token 118: ' valid' (ID: 4529)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5424726605415344
    2. ' valid' → logprob: -0.9174726605415344
    3. 'valid' (adapté à ' valid') → logprob: -4.417472839355469
    4. '               ' → logprob: -5.792472839355469
    5. '   ' → logprob: -6.917472839355469
    6. ' break' → logprob: -6.917472839355469
    7. '                       ' → logprob: -7.417472839355469
    8. '           ' → logprob: -7.917472839355469
    9. ' ' → logprob: -8.042472839355469
    10. '	valid' → logprob: -8.417472839355469

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030406946316361427
    2. '=' → logprob: -3.530406951904297
    3. '=False' → logprob: -7.655406951904297
    4. ' ' → logprob: -8.655406951904297
    5. ' ==' → logprob: -13.155406951904297
    6. '   ' → logprob: -13.280406951904297
    7. ')' → logprob: -14.030406951904297
    8. '  ' → logprob: -14.155406951904297
    9. '=True' → logprob: -14.405406951904297
    10. '==' → logprob: -14.530406951904297

Token 120: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. '(False' → logprob: -18.518150329589844
    4. '=False' → logprob: -19.768150329589844
    5. 'false' → logprob: -21.268150329589844
    6. '   ' → logprob: -22.268150329589844
    7. 'F' → logprob: -22.393150329589844
    8. '_false' → logprob: -22.393150329589844
    9. '.False' → logprob: -22.518150329589844
    10. 'True' → logprob: -22.768150329589844

Token 121: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0040481253527104855
    2. '               ' → logprob: -6.1290483474731445
    3. '                       ' → logprob: -7.2540483474731445
    4. '           ' → logprob: -7.8790483474731445
    5. '       ' → logprob: -8.379048347473145
    6. '<|end|>' → logprob: -8.504048347473145
    7. '                    
' → logprob: -9.379048347473145
    8. '
' → logprob: -10.004048347473145
    9. '                    ' → logprob: -10.254048347473145
    10. '   ' → logprob: -10.504048347473145

Token 122: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00027492138906382024
    2. '               ' → logprob: -9.125274658203125
    3. '           ' → logprob: -9.625274658203125
    4. '                       ' → logprob: -9.875274658203125
    5. '       ' → logprob: -11.125274658203125
    6. '                  ' → logprob: -12.000274658203125
    7. '   ' → logprob: -12.375274658203125
    8. '                    
' → logprob: -12.500274658203125
    9. '                    ' → logprob: -12.500274658203125
    10. '<|end|>' → logprob: -12.500274658203125

Token 123: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03154154121875763
    2. ' break' → logprob: -3.531541585922241
    3. '               ' → logprob: -6.531541347503662
    4. '                   ' → logprob: -8.28154182434082
    5. '           ' → logprob: -9.90654182434082
    6. '	break' → logprob: -10.65654182434082
    7. '                       ' → logprob: -13.03154182434082
    8. '
' → logprob: -13.65654182434082
    9. '   ' → logprob: -14.03154182434082
    10. '       ' → logprob: -14.03154182434082

Token 124: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02283913642168045
    2. '       ' → logprob: -3.897839069366455
    3. '               ' → logprob: -6.522839069366455
    4. '<|end|>' → logprob: -8.147839546203613
    5. '
' → logprob: -9.022839546203613
    6. '		' → logprob: -9.147839546203613
    7. '	       ' → logprob: -9.147839546203613
    8. '```' → logprob: -9.522839546203613
    9. 'else' → logprob: -10.897839546203613
    10. '	' → logprob: -10.897839546203613

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4296891689300537
    2. '           ' → logprob: -1.0546891689300537
    3. '<|end|>' → logprob: -7.804689407348633
    4. '               ' → logprob: -8.554689407348633
    5. '	       ' → logprob: -9.304689407348633
    6. ' if' → logprob: -9.929689407348633
    7. 'if' → logprob: -10.554689407348633
    8. '        ' → logprob: -10.679689407348633
    9. '        
' → logprob: -10.679689407348633
    10. '```' → logprob: -10.804689407348633

Token 126: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08120480179786682
    2. ' if' → logprob: -3.206204891204834
    3. 'if' (adapté à ' if') → logprob: -3.956204891204834
    4. '           ' → logprob: -4.081204891204834
    5. '<|end|>' → logprob: -7.456204891204834
    6. '   ' → logprob: -7.831204891204834
    7. '        ' → logprob: -9.206204414367676
    8. '    ' → logprob: -9.456204414367676
    9. ')' → logprob: -9.956204414367676
    10. '        
' → logprob: -10.081204414367676

Token 127: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -7.553032628493384e-05
    2. 'valid' → logprob: -9.500075340270996
    3. ' not' → logprob: -14.625075340270996
    4. '(valid' → logprob: -16.375076293945312
    5. '	valid' → logprob: -17.500076293945312
    6. '_valid' → logprob: -18.250076293945312
    7. 'Valid' → logprob: -20.750076293945312
    8. '.valid' → logprob: -21.125076293945312
    9. ' invalid' → logprob: -21.750076293945312
    10. ' ' → logprob: -22.250076293945312

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017233692342415452
    2. ':
' → logprob: -6.376723289489746
    3. ' and' → logprob: -11.251723289489746
    4. ':return' → logprob: -12.876723289489746
    5. '       ' → logprob: -13.251723289489746
    6. '           ' → logprob: -13.251723289489746
    7. ':

' → logprob: -14.251723289489746
    8. ',' → logprob: -15.251723289489746
    9. ' :' → logprob: -15.251723289489746
    10. '   ' → logprob: -15.751723289489746

Token 129: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.337525337934494
    2. '               ' → logprob: -1.7125253677368164
    3. '       ' → logprob: -2.8375253677368164
    4. ' print' → logprob: -3.5875253677368164
    5. 'print' → logprob: -3.9625253677368164
    6. '
' → logprob: -7.962525367736816
    7. ' return' → logprob: -8.712525367736816
    8. ':
' → logprob: -9.462525367736816
    9. '   ' → logprob: -9.837525367736816
    10. 'return' → logprob: -10.212525367736816

Token 130: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.42918094992637634
    2. ' print' → logprob: -1.0541809797286987
    3. '           ' → logprob: -8.679181098937988
    4. '   ' → logprob: -9.429181098937988
    5. '       ' → logprob: -9.804181098937988
    6. ' return' → logprob: -9.804181098937988
    7. '
' → logprob: -10.054181098937988
    8. 'return' → logprob: -10.179181098937988
    9. ' for' → logprob: -11.804181098937988
    10. '               ' → logprob: -11.929181098937988

Token 131: '(start' (ID: 20008)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7709929347038269
    2. '(start' → logprob: -1.2709929943084717
    3. '(words' → logprob: -1.6459929943084717
    4. '('' → logprob: -2.8959929943084717
    5. '(*' → logprob: -5.020992755889893
    6. '(' → logprob: -6.520992755889893
    7. '(sum' → logprob: -8.52099323272705
    8. '(len' → logprob: -9.39599323272705
    9. 'start' → logprob: -9.39599323272705
    10. '(True' → logprob: -9.64599323272705

Token 132: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018968674121424556
    2. '+' → logprob: -6.751896858215332
    3. ')
' → logprob: -7.501896858215332
    4. ' +' → logprob: -9.001896858215332
    5. ',' → logprob: -10.751896858215332
    6. ' )' → logprob: -10.751896858215332
    7. '+)' → logprob: -13.251896858215332
    8. ',end' → logprob: -13.626896858215332
    9. '")' → logprob: -14.251896858215332
    10. '*' → logprob: -14.376896858215332

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.500085830688477
    4. ')' → logprob: -18.000085830688477
    5. '<|end|>' → logprob: -18.250085830688477
    6. '0' → logprob: -18.625085830688477
    7. '```' → logprob: -18.750085830688477
    8. '2' → logprob: -19.375085830688477
    9. '`' → logprob: -19.562585830688477
    10. '+' → logprob: -19.687585830688477

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408896684646606
    2. ')
' → logprob: -0.9740889668464661
    3. ')
' → logprob: -11.849088668823242
    4. ' )' → logprob: -13.599088668823242
    5. ' )
' → logprob: -14.349088668823242
    6. ')`
' → logprob: -14.349088668823242
    7. ',' → logprob: -14.599088668823242
    8. ')

' → logprob: -14.599088668823242
    9. '               ' → logprob: -14.849088668823242
    10. '           ' → logprob: -15.349088668823242

Token 135: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5521842241287231
    2. '<|end|>' → logprob: -1.0521842241287231
    3. '       ' → logprob: -3.0521841049194336
    4. '               ' → logprob: -4.302184104919434
    5. '<|end|>' → logprob: -4.802184104919434
    6. '   ' → logprob: -5.927184104919434
    7. ' ' → logprob: -7.302184104919434
    8. '
' → logprob: -7.552184104919434
    9. '```' → logprob: -7.802184104919434
    10. '		' → logprob: -8.177184104919434

Token 136: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05005694553256035
    2. 'return' → logprob: -3.5500569343566895
    3. ' break' → logprob: -4.3000569343566895
    4. '               ' → logprob: -5.0500569343566895
    5. '           ' → logprob: -9.550057411193848
    6. ' return' → logprob: -9.925057411193848
    7. '       ' → logprob: -12.425057411193848
    8. '	break' → logprob: -14.925057411193848
    9. '   ' → logprob: -15.675057411193848
    10. '                   ' → logprob: -16.42505645751953

Token 137: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07891137897968292
    2. '__' → logprob: -2.578911304473877
    3. ' ' → logprob: -11.703911781311035
    4. 'name' → logprob: -11.953911781311035
    5. ' ' → logprob: -12.453911781311035
    6. '_name' → logprob: -13.578911781311035
    7. '_' → logprob: -13.953911781311035
    8. '___' → logprob: -15.703911781311035
    9. ''' → logprob: -15.953911781311035
    10. '  ' → logprob: -15.953911781311035

Token 140: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02832202799618244
    2. ' ==' → logprob: -4.028322219848633
    3. ' __' → logprob: -4.903322219848633
    4. '==' → logprob: -6.028322219848633
    5. '_' → logprob: -8.528322219848633
    6. '__.__' → logprob: -11.153322219848633
    7. '.__' → logprob: -11.403322219848633
    8. '[' → logprob: -12.153322219848633
    9. '=="' → logprob: -12.153322219848633
    10. 'name' → logprob: -12.653322219848633

Token 141: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '__.__' → logprob: -13.625001907348633
    3. '==' → logprob: -15.750001907348633
    4. '____' → logprob: -16.125001907348633
    5. '__
' → logprob: -16.500001907348633
    6. '__('' → logprob: -16.625001907348633
    7. '__("' → logprob: -16.625001907348633
    8. '___' → logprob: -16.750001907348633
    9. '__

' → logprob: -16.875001907348633
    10. '_' → logprob: -16.875001907348633

Token 142: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.017139529809355736
    2. '==' → logprob: -4.392139434814453
    3. ' ==' → logprob: -5.392139434814453
    4. '=="' → logprob: -10.392139434814453
    5. '_' → logprob: -11.517139434814453
    6. '=='' → logprob: -11.767139434814453
    7. '"' → logprob: -12.017139434814453
    8. '__.__' → logprob: -12.392139434814453
    9. '=' → logprob: -12.642139434814453
    10. ''' → logprob: -13.767139434814453

Token 143: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2014317512512207
    2. ''' → logprob: -1.7014317512512207
    3. ' "__' → logprob: -11.451431274414062
    4. '__' → logprob: -12.076431274414062
    5. ' '__' → logprob: -13.701431274414062
    6. ''"' → logprob: -14.701431274414062
    7. '"user' → logprob: -16.076431274414062
    8. '"name' → logprob: -16.576431274414062
    9. '"'' → logprob: -16.701431274414062
    10. ''name' → logprob: -16.826431274414062

Token 144: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06218569725751877
    2. 'name' → logprob: -3.062185764312744
    3. '__' → logprob: -4.437185764312744
    4. '"' → logprob: -6.812185764312744
    5. '```' → logprob: -8.312185287475586
    6. 'built' → logprob: -9.187185287475586
    7. 'python' → logprob: -10.437185287475586
    8. ''' → logprob: -10.437185287475586
    9. 'file' → logprob: -11.187185287475586
    10. '"name' → logprob: -11.187185287475586

Token 145: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006874741520732641
    2. '__' → logprob: -5.0068745613098145
    3. '__':
' → logprob: -8.756875038146973
    4. '__.' → logprob: -14.506875038146973
    5. '__:' → logprob: -15.006875038146973
    6. '__["' → logprob: -15.506875038146973
    7. '.' → logprob: -15.631875038146973
    8. '"' → logprob: -15.631875038146973
    9. '_' → logprob: -15.756875038146973
    10. '__.__' → logprob: -15.881875038146973

Token 146: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011891042813658714
    2. 'main' → logprob: -5.136890888214111
    3. '   ' → logprob: -5.261890888214111
    4. '	main' → logprob: -7.261890888214111
    5. '    
' → logprob: -11.38689136505127
    6. '_main' → logprob: -11.51189136505127
    7. '<|end|>' → logprob: -11.51189136505127
    8. ' 
' → logprob: -12.26189136505127
    9. ' ' → logprob: -12.26189136505127
    10. '(main' → logprob: -12.38689136505127

Token 147: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.1002107709646225
    2. ' main' → logprob: -2.350210666656494
    3. '	main' → logprob: -12.600211143493652
    4. '   ' → logprob: -14.475211143493652
    5. ' ' → logprob: -16.725210189819336
    6. '(main' → logprob: -16.975210189819336
    7. '_main' → logprob: -17.600210189819336
    8. '.main' → logprob: -17.850210189819336
    9. '  ' → logprob: -17.975210189819336
    10. ' 
' → logprob: -18.850210189819336

Token 148: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007807997753843665
    2. '(' → logprob: -7.7507805824279785
    3. '()
' → logprob: -8.000781059265137
    4. '()

' → logprob: -12.375781059265137
    5. '()`' → logprob: -12.875781059265137
    6. ' ()' → logprob: -13.500781059265137
    7. '();' → logprob: -13.625781059265137
    8. '(
' → logprob: -14.000781059265137
    9. '()\' → logprob: -14.000781059265137
    10. '()"' → logprob: -14.375781059265137


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 39.73%
Précision adaptée (1ère position): 43.84%
Précision (top 10): 84.25%
================================================================================
