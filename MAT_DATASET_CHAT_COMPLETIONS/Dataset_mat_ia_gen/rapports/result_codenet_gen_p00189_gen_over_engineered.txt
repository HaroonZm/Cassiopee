================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict
import heapq


class Town:
    def __init__(self, id_: int):
        self.id = id_

    def __repr__(self):
        return f"Town({self.id})"


class Road:
    def __init__(self, town1: Town, town2: Town, cost: int):
        self.town1 = town1
        self.town2 = town2
        self.cost = cost

    def connects(self, town_a: Town, town_b: Town) -> bool:
        return (self.town1.id == town_a.id and self.town2.id == town_b.id) or \
               (self.town1.id == town_b.id and self.town2.id == town_a.id)

    def __repr__(self):
        return f"Road({self.town1.id}, {self.town2.id}, cost={self.cost})"


class OfficeNetwork:
    def __init__(self):
        self.towns: Dict[int, Town] = {}
        self.roads: List[Road] = []

    def add_road(self, a: int, b: int, cost: int) -> None:
        if a not in self.towns:
            self.towns[a] = Town(a)
        if b not in self.towns:
            self.towns[b] = Town(b)
        road = Road(self.towns[a], self.towns[b], cost)
        self.roads.append(road)

    def get_town_ids(self) -> List[int]:
        return sorted(self.towns.keys())

    def shortest_paths_from(self, start_id: int) -> Dict[int, int]:
        # Dijkstra's algorithm for shortest paths
        dist = {tid: float('inf') for tid in self.towns}
        dist[start_id] = 0
        queue = [(0, start_id)]
        adjacency = self._build_adjacency()
        while queue:
            current_dist, current = heapq.heappop(queue)
            if current_dist > dist[current]:
                continue
            for neighbor, cost in adjacency[current]:
                ndist = current_dist + cost
                if ndist < dist[neighbor]:
                    dist[neighbor] = ndist
                    heapq.heappush(queue, (ndist, neighbor))
        return dist

    def _build_adjacency(self) -> Dict[int, List[Tuple[int, int]]]:
        adjacency: Dict[int, List[Tuple[int, int]]] = {tid: [] for tid in self.towns}
        for road in self.roads:
            adjacency[road.town1.id].append((road.town2.id, road.cost))
            adjacency[road.town2.id].append((road.town1.id, road.cost))
        return adjacency


class ConvenienceEvaluator:
    def __init__(self, network: OfficeNetwork):
        self.network = network

    def evaluate(self) -> Tuple[int, int]:
        min_town_id = -1
        min_sum = float('inf')
        for town_id in self.network.get_town_ids():
            dist_map = self.network.shortest_paths_from(town_id)
            total_cost = sum(dist_map.values())
            if total_cost < min_sum or (total_cost == min_sum and town_id < min_town_id):
                min_sum = total_cost
                min_town_id = town_id
        return min_town_id, min_sum


class InputParser:
    def __init__(self, input_lines: List[str]):
        self.lines = input_lines
        self.index = 0

    def next_int(self) -> int:
        while self.index < len(self.lines):
            line = self.lines[self.index].strip()
            self.index += 1
            if line:
                return int(line)
        return 0

    def next_road_data(self, n: int) -> List[Tuple[int,int,int]]:
        roads = []
        for _ in range(n):
            line = self.lines[self.index].strip()
            self.index += 1
            a_str,b_str,c_str = line.split()
            roads.append((int(a_str), int(b_str), int(c_str)))
        return roads


class SolutionController:
    def __init__(self, raw_input: str):
        self.raw_input = raw_input
        self.parser = InputParser(self.raw_input.splitlines())

    def process(self):
        while True:
            n = self.parser.next_int()
            if n == 0:
                break
            roads = self.parser.next_road_data(n)
            network = OfficeNetwork()
            for a, b, c in roads:
                network.add_road(a, b, c)
            evaluator = ConvenienceEvaluator(network)
            town_id, total_cost = evaluator.evaluate()
            print(town_id, total_cost)


def main():
    import sys
    raw = sys.stdin.read()
    controller = SolutionController(raw)
    controller.process()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.10354583710432053
    2. ' Any' → logprob: -2.478545904159546
    3. ' Optional' → logprob: -4.603545665740967
    4. 'Any' → logprob: -6.478545665740967
    5. ' Union' → logprob: -6.603545665740967
    6. 'List' → logprob: -6.978545665740967
    7. ' Generator' → logprob: -8.103546142578125
    8. ' ' → logprob: -8.978546142578125
    9. ' Tuple' → logprob: -9.853546142578125
    10. 'Optional' → logprob: -9.853546142578125

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2933938503265381
    2. '[' → logprob: -2.168393850326538
    3. 'def' → logprob: -2.918393850326538
    4. ',' → logprob: -3.293393850326538
    5. '\n' → logprob: -4.918394088745117
    6. 'import' → logprob: -4.918394088745117
    7. '\' → logprob: -4.918394088745117
    8. '\[' → logprob: -5.043394088745117
    9. '<|end|>' → logprob: -5.543394088745117
    10. ':' → logprob: -5.668394088745117

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7062650322914124
    2. 'Optional' → logprob: -0.7062650322914124
    3. 'Dict' → logprob: -5.331264972686768
    4. 'Tuple' → logprob: -5.581264972686768
    5. ' Dict' → logprob: -6.081264972686768
    6. ' Union' → logprob: -7.081264972686768
    7. ' Tuple' → logprob: -7.456264972686768
    8. 'Union' → logprob: -7.956264972686768
    9. 'Any' → logprob: -8.956265449523926
    10. 'Iterable' → logprob: -9.331265449523926

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4044966697692871
    2. ',' → logprob: -2.029496669769287
    3. '```' → logprob: -3.154496669769287
    4. '[' → logprob: -3.154496669769287
    5. ':' → logprob: -3.654496669769287
    6. '\n' → logprob: -3.779496669769287
    7. '(' → logprob: -3.779496669769287
    8. '\' → logprob: -4.029496669769287
    9. 'import' → logprob: -4.404496669769287
    10. 'a' → logprob: -5.529496669769287

Token 7: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.25703731179237366
    2. ' Dict' → logprob: -1.7570372819900513
    3. 'Optional' → logprob: -4.132037162780762
    4. 'Union' → logprob: -4.257037162780762
    5. 'Set' → logprob: -4.632037162780762
    6. ' Union' → logprob: -5.507037162780762
    7. 'Any' → logprob: -5.882037162780762
    8. 'Iterable' → logprob: -6.007037162780762
    9. ' Optional' → logprob: -6.132037162780762
    10. 'Callable' → logprob: -6.757037162780762

Token 8: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6060981154441833
    2. 'def' → logprob: -1.6060981750488281
    3. '(' → logprob: -2.481098175048828
    4. ':' → logprob: -2.731098175048828
    5. 'import' → logprob: -3.856098175048828
    6. '<|end|>' → logprob: -3.856098175048828
    7. '[' → logprob: -4.231098175048828
    8. '```' → logprob: -4.481098175048828
    9. 'a' → logprob: -4.856098175048828
    10. '.' → logprob: -5.356098175048828

Token 9: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0778940916061401
    2. '```' → logprob: -1.4528940916061401
    3. 'a' → logprob: -2.2028942108154297
    4. 'def' → logprob: -2.4528942108154297
    5. 'import' → logprob: -2.7028942108154297
    6. '`' → logprob: -3.4528942108154297
    7. '<|end|>' → logprob: -3.7028942108154297
    8. ':' → logprob: -3.9528942108154297
    9. '[' → logprob: -3.9528942108154297
    10. ' ' → logprob: -4.07789421081543

Token 10: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.06196432188153267
    2. ' sys' → logprob: -3.686964273452759
    3. ' typing' → logprob: -4.311964511871338
    4. ' re' → logprob: -4.686964511871338
    5. ' json' → logprob: -5.436964511871338
    6. ' numpy' → logprob: -6.061964511871338
    7. ' collections' → logprob: -6.186964511871338
    8. ' pandas' → logprob: -6.311964511871338
    9. ' requests' → logprob: -6.811964511871338
    10. ' math' → logprob: -8.43696403503418

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015052208909764886
    2. 'queue' → logprob: -6.501505374908447
    3. ' queue' → logprob: -14.626504898071289
    4. 'que' → logprob: -14.751504898071289
    5. 'u' → logprob: -14.876504898071289
    6. '```' → logprob: -14.876504898071289
    7. 'dict' → logprob: -15.001504898071289
    8. '<|end|>' → logprob: -15.501504898071289
    9. 't' → logprob: -15.876504898071289
    10. 'qu' → logprob: -16.12650489807129

Token 12: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7227725982666016
    2. '

' → logprob: -0.7227725982666016
    3. '\n' → logprob: -4.472772598266602
    4. '
' → logprob: -5.222772598266602
    5. 'def' → logprob: -5.222772598266602
    6. '```' → logprob: -5.847772598266602
    7. '\' → logprob: -5.972772598266602
    8. '(' → logprob: -7.972772598266602
    9. '<|end|>' → logprob: -8.472772598266602
    10. '(
' → logprob: -8.722772598266602

Token 13: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018255768343806267
    2. 'class' → logprob: -4.018255710601807
    3. 'de' → logprob: -9.268256187438965
    4. 'd' → logprob: -12.143256187438965
    5. '```' → logprob: -13.143256187438965
    6. '
' → logprob: -13.893256187438965
    7. 'clas' → logprob: -14.018256187438965
    8. 'from' → logprob: -14.018256187438965
    9. ' def' → logprob: -14.643256187438965
    10. '#' → logprob: -14.893256187438965

Token 14: ' Town' (ID: 17425)
  Prédit: ' Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Priority' → logprob: -0.04770192503929138
    2. ' ' → logprob: -3.172701835632324
    3. ' Heap' → logprob: -6.547701835632324
    4. ' A' → logprob: -6.547701835632324
    5. 'Priority' → logprob: -7.047701835632324
    6. ' Max' → logprob: -8.672701835632324
    7. ' Node' → logprob: -8.672701835632324
    8. ' Min' → logprob: -9.172701835632324
    9. ' Solution' → logprob: -9.547701835632324
    10. ' Binary' → logprob: -9.672701835632324

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001519325451226905
    2. '(' → logprob: -9.625151634216309
    3. ':
' → logprob: -10.375151634216309
    4. ':**' → logprob: -11.000151634216309
    5. '():' → logprob: -11.000151634216309
    6. '):' → logprob: -11.750151634216309
    7. '```' → logprob: -13.750151634216309
    8. '>:' → logprob: -13.875151634216309
    9. '(T' → logprob: -14.250151634216309
    10. ':

' → logprob: -14.625151634216309

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007456949912011623
    2. '   ' → logprob: -5.1324567794799805
    3. '<|end|>' → logprob: -7.7574567794799805
    4. '(' → logprob: -8.13245677947998
    5. ':
' → logprob: -8.25745677947998
    6. '```' → logprob: -8.38245677947998
    7. ' :' → logprob: -9.63245677947998
    8. '():' → logprob: -9.88245677947998
    9. ''s' → logprob: -9.88245677947998
    10. '  ' → logprob: -10.63245677947998

Token 17: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15755455195903778
    2. 'def' (adapté à ' def') → logprob: -2.5325546264648438
    3. ' def' → logprob: -2.9075546264648438
    4. ':' → logprob: -5.157554626464844
    5. '    ' → logprob: -5.907554626464844
    6. ' ' → logprob: -6.907554626464844
    7. '```' → logprob: -7.407554626464844
    8. 'class' → logprob: -7.782554626464844
    9. '(' → logprob: -8.532554626464844
    10. ' :' → logprob: -8.657554626464844

Token 18: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6548242568969727
    2. 'itialize' → logprob: -0.7798242568969727
    3. 'itial' → logprob: -4.654824256896973
    4. 'ialize' → logprob: -4.904824256896973
    5. 'italize' → logprob: -5.779824256896973
    6. ' ' → logprob: -7.654824256896973
    7. '__' → logprob: -7.779824256896973
    8. ' _' → logprob: -8.654824256896973
    9. 'itate' → logprob: -8.904824256896973
    10. ' init' → logprob: -9.154824256896973

Token 19: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.375
    3. 'inite' → logprob: -19.0
    4. 'in' → logprob: -19.625
    5. ' init' → logprob: -20.0
    6. 'int' → logprob: -20.5
    7. 'innit' → logprob: -20.75
    8. 'inti' → logprob: -21.625
    9. '_init' → logprob: -21.625
    10. '	init' → logprob: -22.0

Token 20: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014584995806217194
    2. '__' → logprob: -4.264585018157959
    3. '__(
' → logprob: -8.0145845413208
    4. '__((' → logprob: -10.0145845413208
    5. '__('' → logprob: -10.3895845413208
    6. '__(*' → logprob: -11.7645845413208
    7. '__("' → logprob: -13.0145845413208
    8. '(self' → logprob: -13.1395845413208
    9. '(' → logprob: -13.2645845413208
    10. '__(/*!' → logprob: -15.0145845413208

Token 21: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006283254479058087
    2. ' self' → logprob: -7.375628471374512
    3. ')' → logprob: -13.750628471374512
    4. '(self' → logprob: -15.750628471374512
    5. ',self' → logprob: -16.250627517700195
    6. '_self' → logprob: -16.250627517700195
    7. ',' → logprob: -16.375627517700195
    8. '	self' → logprob: -16.750627517700195
    9. ' ' → logprob: -16.750627517700195
    10. '0' → logprob: -17.250627517700195

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3326534628868103
    2. 'self' → logprob: -2.207653522491455
    3. ' ,' → logprob: -2.457653522491455
    4. ' self' → logprob: -3.332653522491455
    5. ' ' → logprob: -4.207653522491455
    6. ' )' → logprob: -4.332653522491455
    7. ')' → logprob: -4.832653522491455
    8. '_self' → logprob: -5.332653522491455
    9. '(self' → logprob: -5.707653522491455
    10. '_' → logprob: -5.957653522491455

Token 23: ' id' (ID: 1211)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.8778389096260071
    2. ' self' → logprob: -1.0028388500213623
    3. 'self' → logprob: -2.0028388500213623
    4. 'name' → logprob: -2.5028388500213623
    5. ' population' → logprob: -8.002839088439941
    6. 'population' → logprob: -8.627839088439941
    7. 'n' → logprob: -9.502839088439941
    8. ' n' → logprob: -11.002839088439941
    9. ' )' → logprob: -11.252839088439941
    10. 'coordinates' → logprob: -12.127839088439941

Token 24: '_:' (ID: 52270)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016517216339707375
    2. ',' → logprob: -5.016517162322998
    3. '):' → logprob: -5.266517162322998
    4. '_:' → logprob: -5.766517162322998
    5. ')' → logprob: -7.266517162322998
    6. ':int' → logprob: -7.391517162322998
    7. '=' → logprob: -9.641517639160156
    8. ' :' → logprob: -10.641517639160156
    9. '__:' → logprob: -11.141517639160156
    10. '_,' → logprob: -11.766517639160156

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10022154450416565
    2. 'int' → logprob: -2.350221633911133
    3. ' ' → logprob: -11.725221633911133
    4. ' in' → logprob: -13.475221633911133
    5. ' )' → logprob: -14.100221633911133
    6. ')' → logprob: -14.100221633911133
    7. '  ' → logprob: -14.225221633911133
    8. ':int' → logprob: -14.225221633911133
    9. ' i' → logprob: -14.350221633911133
    10. '   ' → logprob: -14.600221633911133

Token 26: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034940900513902307
    2. ')' → logprob: -8.625349044799805
    3. '):' → logprob: -8.750349044799805
    4. ' ,' → logprob: -11.625349044799805
    5. ',int' → logprob: -14.250349044799805
    6. ',
' → logprob: -14.375349044799805
    7. '<|end|>' → logprob: -14.875349044799805
    8. ',)' → logprob: -15.750349044799805
    9. '‌,' → logprob: -15.875349044799805
    10. '),' → logprob: -16.000349044799805

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6940939426422119
    2. '        ' → logprob: -1.819093942642212
    3. ' ' → logprob: -2.069093942642212
    4. ' id' → logprob: -2.944093942642212
    5. ' ' → logprob: -3.069093942642212
    6. ' self' → logprob: -3.694093942642212
    7. 'id' → logprob: -4.194093704223633
    8. ' town' → logprob: -4.444093704223633
    9. '    ' → logprob: -4.944093704223633
    10. ',' → logprob: -4.944093704223633

Token 28: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6947749853134155
    2. 'self' (adapté à ' self') → logprob: -0.6947749853134155
    3. '       ' → logprob: -6.444775104522705
    4. ' ' → logprob: -10.694774627685547
    5. ' ' → logprob: -12.069774627685547
    6. '   ' → logprob: -12.319774627685547
    7. '        ' → logprob: -13.444774627685547
    8. '	self' → logprob: -13.944774627685547
    9. 'id' → logprob: -14.694774627685547
    10. '    ' → logprob: -14.819774627685547

Token 29: '.id' (ID: 2858)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03972109779715538
    2. '.id' → logprob: -3.2897210121154785
    3. '._' → logprob: -6.9147210121154785
    4. ' .' → logprob: -7.9147210121154785
    5. '_id' → logprob: -9.164721488952637
    6. '.name' → logprob: -10.039721488952637
    7. 'id' → logprob: -10.789721488952637
    8. '_' → logprob: -10.789721488952637
    9. ')' → logprob: -11.039721488952637
    10. ').' → logprob: -11.289721488952637

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.558399319241289e-05
    2. '_
' → logprob: -11.875025749206543
    3. '_=' → logprob: -12.000025749206543
    4. '_)' → logprob: -12.125025749206543
    5. '_,' → logprob: -12.500025749206543
    6. '_]' → logprob: -13.625025749206543
    7. '_

' → logprob: -13.875025749206543
    8. '__' → logprob: -14.875025749206543
    9. '_:' → logprob: -15.125025749206543
    10. ' _' → logprob: -16.250024795532227

Token 31: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.12692904472351074
    2. ' id' → logprob: -2.1269290447235107
    3. '	id' → logprob: -14.62692928314209
    4. ' ' → logprob: -15.37692928314209
    5. '0' → logprob: -15.50192928314209
    6. '(id' → logprob: -17.001928329467773
    7. '=id' → logprob: -17.251928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '_id' → logprob: -17.751928329467773
    10. '$id' → logprob: -18.126928329467773

Token 32: '_

' (ID: 44557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003218587953597307
    2. '_
' → logprob: -5.753218650817871
    3. '<|end|>' → logprob: -11.003218650817871
    4. '_

' → logprob: -11.128218650817871
    5. '_
' → logprob: -12.253218650817871
    6. '_)' → logprob: -13.253218650817871
    7. '_\' → logprob: -14.128218650817871
    8. '
' → logprob: -14.878218650817871
    9. '_,' → logprob: -15.128218650817871
    10. '\' → logprob: -15.378218650817871

Token 33: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016819634474813938
    2. '<|end|>' → logprob: -6.876681804656982
    3. 'self' → logprob: -8.12668228149414
    4. '
' → logprob: -8.50168228149414
    5. ' self' → logprob: -9.87668228149414
    6. '<|end|>' → logprob: -10.62668228149414
    7. ',' → logprob: -10.75168228149414
    8. ' ' → logprob: -11.00168228149414
    9. '   ' → logprob: -11.62668228149414
    10. '        ' → logprob: -11.75168228149414

Token 34: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08244592696428299
    2. ' def' → logprob: -3.3324458599090576
    3. '__' → logprob: -4.582446098327637
    4. ' add' → logprob: -4.582446098327637
    5. ' ' → logprob: -4.957446098327637
    6. '_' → logprob: -5.082446098327637
    7. '_repr' → logprob: -5.582446098327637
    8. ' repr' → logprob: -6.832446098327637
    9. '_neighbors' → logprob: -7.207446098327637
    10. '_add' → logprob: -7.582446098327637

Token 36: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.2304835021495819
    2. 'eq' → logprob: -1.6054835319519043
    3. 'repr' → logprob: -5.480483531951904
    4. 'hash' → logprob: -7.355483531951904
    5. 'init' → logprob: -8.480483055114746
    6. 'str' → logprob: -10.355483055114746
    7. 'gt' → logprob: -12.230483055114746
    8. 'le' → logprob: -12.605483055114746
    9. ' lt' → logprob: -13.980483055114746
    10. 'cmp' → logprob: -14.105483055114746

Token 37: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20475833117961884
    2. '__' → logprob: -1.7047582864761353
    3. '__('' → logprob: -6.079758167266846
    4. '__(
' → logprob: -7.079758167266846
    5. '__("' → logprob: -9.454758644104004
    6. '__((' → logprob: -9.954758644104004
    7. '_' → logprob: -10.204758644104004
    8. '(' → logprob: -10.954758644104004
    9. '___' → logprob: -11.204758644104004
    10. '__(*' → logprob: -12.079758644104004

Token 38: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011760921915993094
    2. ')' → logprob: -9.125117301940918
    3. ' self' → logprob: -11.750117301940918
    4. '(self' → logprob: -15.250117301940918
    5. ' ' → logprob: -15.750117301940918
    6. '),' → logprob: -16.750118255615234
    7. ' )' → logprob: -17.000118255615234
    8. '<|end|>' → logprob: -17.125118255615234
    9. 'sel' → logprob: -17.250118255615234
    10. 's' → logprob: -17.250118255615234

Token 39: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22751334309577942
    2. '):' → logprob: -1.727513313293457
    3. 'self' → logprob: -3.977513313293457
    4. ',' → logprob: -5.227513313293457
    5. '):
' → logprob: -7.477513313293457
    6. 's' → logprob: -8.102513313293457
    7. '(self' → logprob: -8.352513313293457
    8. ' )' → logprob: -8.852513313293457
    9. ' ):' → logprob: -9.227513313293457
    10. '):

' → logprob: -10.102513313293457

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024901514872908592
    2. ' return' → logprob: -4.649901390075684
    3. 'return' → logprob: -5.274901390075684
    4. 'f' → logprob: -5.649901390075684
    5. ' f' → logprob: -5.774901390075684
    6. ''' → logprob: -6.774901390075684
    7. '   ' → logprob: -7.399901390075684
    8. '        ' → logprob: -7.649901390075684
    9. '    ' → logprob: -7.899901390075684
    10. '"' → logprob: -8.024901390075684

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4605272710323334
    2. ' return' → logprob: -1.2105273008346558
    3. ' f' → logprob: -3.210527181625366
    4. 'f' → logprob: -3.835527181625366
    5. '       ' → logprob: -4.710527420043945
    6. '   ' → logprob: -9.710527420043945
    7. '           ' → logprob: -11.710527420043945
    8. '        ' → logprob: -12.960527420043945
    9. '    ' → logprob: -12.960527420043945
    10. ''' → logprob: -12.960527420043945

Token 42: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1269347220659256
    2. 'f' → logprob: -2.126934766769409
    3. ' ' → logprob: -13.001935005187988
    4. ''' → logprob: -13.626935005187988
    5. '	f' → logprob: -13.876935005187988
    6. '"' → logprob: -14.001935005187988
    7. ' ' → logprob: -14.376935005187988
    8. ''f' → logprob: -14.376935005187988
    9. 'repr' → logprob: -16.751934051513672
    10. ' F' → logprob: -16.751934051513672

Token 43: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24643445014953613
    2. '"T' → logprob: -1.7464344501495361
    3. ''T' → logprob: -3.371434450149536
    4. '"<' → logprob: -5.621434211730957
    5. '"(' → logprob: -6.246434211730957
    6. 'f' → logprob: -6.246434211730957
    7. '"{' → logprob: -7.121434211730957
    8. ''' → logprob: -7.371434211730957
    9. ''"' → logprob: -8.371434211730957
    10. '"'' → logprob: -9.121434211730957

Token 44: 'Town' (ID: 78142)
  Prédit: 'Town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Town' → logprob: -5.180879816180095e-05
    2. '<T' → logprob: -10.875051498413086
    3. 'T' → logprob: -11.750051498413086
    4. ' Town' → logprob: -12.125051498413086
    5. '{' → logprob: -12.500051498413086
    6. '"' → logprob: -12.750051498413086
    7. 'Tow' → logprob: -12.750051498413086
    8. ''T' → logprob: -12.875051498413086
    9. 'To' → logprob: -13.250051498413086
    10. 'town' → logprob: -13.500051498413086

Token 45: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.20139901340007782
    2. '(id' → logprob: -1.9513989686965942
    3. '{' → logprob: -3.701399087905884
    4. '(' → logprob: -4.451398849487305
    5. '{id' → logprob: -5.576398849487305
    6. '("{' → logprob: -9.326398849487305
    7. '('{' → logprob: -9.826398849487305
    8. '#{' → logprob: -10.826398849487305
    9. '(ID' → logprob: -11.451398849487305
    10. '[{' → logprob: -11.701398849487305

Token 46: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.729906196298543e-06
    2. ' self' → logprob: -11.875009536743164
    3. '{' → logprob: -13.375009536743164
    4. 'sel' → logprob: -14.250009536743164
    5. 'id' → logprob: -16.125009536743164
    6. 'repr' → logprob: -16.375009536743164
    7. 'elf' → logprob: -16.375009536743164
    8. ' ' → logprob: -17.125009536743164
    9. '	self' → logprob: -17.500009536743164
    10. '   ' → logprob: -17.500009536743164

Token 47: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.00012797261297237128
    2. '.' → logprob: -9.000127792358398
    3. ').' → logprob: -13.250127792358398
    4. '}.' → logprob: -14.250127792358398
    5. ' .' → logprob: -14.500127792358398
    6. 'id' → logprob: -14.500127792358398
    7. ')' → logprob: -15.500127792358398
    8. ' ' → logprob: -15.750127792358398
    9. '.)' → logprob: -15.750127792358398
    10. '.t' → logprob: -16.8751277923584

Token 48: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -1.1756367712223437e-05
    2. '}")' → logprob: -12.000011444091797
    3. '}"' → logprob: -13.250011444091797
    4. ')"' → logprob: -13.875011444091797
    5. '"})' → logprob: -14.125011444091797
    6. '}' → logprob: -14.500011444091797
    7. ' })' → logprob: -14.750011444091797
    8. ')' → logprob: -14.750011444091797
    9. ')}' → logprob: -15.250011444091797
    10. '))' → logprob: -16.375011444091797

Token 49: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06320848315954208
    2. '")' → logprob: -3.68820858001709
    3. ')"' → logprob: -3.68820858001709
    4. ')' → logprob: -4.56320858001709
    5. '"""' → logprob: -8.18820858001709
    6. '```' → logprob: -8.68820858001709
    7. '\n' → logprob: -9.06320858001709
    8. '"}' → logprob: -9.68820858001709
    9. '}"' → logprob: -9.81320858001709
    10. '"
' → logprob: -9.81320858001709

Token 50: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.29082146286964417
    2. '
' → logprob: -1.4158214330673218
    3. 'def' → logprob: -5.040821552276611
    4. '

' → logprob: -6.040821552276611
    5. ' class' → logprob: -8.290821075439453
    6. '    
' → logprob: -9.040821075439453
    7. ':' → logprob: -9.415821075439453
    8. '   ' → logprob: -9.790821075439453
    9. '  
' → logprob: -9.915821075439453
    10. '```' → logprob: -9.915821075439453

Token 51: ' Road' (ID: 12497)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.13546311855316162
    2. ' Road' → logprob: -2.510463237762451
    3. 'Graph' → logprob: -4.260463237762451
    4. ' City' → logprob: -4.760463237762451
    5. ' Town' → logprob: -4.885463237762451
    6. ' D' → logprob: -5.260463237762451
    7. 'Road' → logprob: -6.385463237762451
    8. ' Delivery' → logprob: -7.010463237762451
    9. ' Solution' → logprob: -7.010463237762451
    10. ' Village' → logprob: -7.260463237762451

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006025957991369069
    2. '):' → logprob: -7.750602722167969
    3. '():' → logprob: -9.625602722167969
    4. ':
' → logprob: -9.750602722167969
    5. ':**' → logprob: -10.875602722167969
    6. '>:' → logprob: -11.875602722167969
    7. '(' → logprob: -11.875602722167969
    8. '<|end|>' → logprob: -13.250602722167969
    9. '```' → logprob: -13.625602722167969
    10. ' :' → logprob: -13.750602722167969

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.424380362033844
    2. ':' → logprob: -1.2993803024291992
    3. ':
' → logprob: -2.799380302429199
    4. '):' → logprob: -6.174380302429199
    5. '<|end|>' → logprob: -6.174380302429199
    6. '):
' → logprob: -6.424380302429199
    7. ' def' → logprob: -6.424380302429199
    8. 'def' → logprob: -6.424380302429199
    9. '(' → logprob: -6.799380302429199
    10. ')' → logprob: -7.174380302429199

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8811590075492859
    2. '   ' → logprob: -1.1311590671539307
    3. '__' → logprob: -2.5061590671539307
    4. ':' → logprob: -3.1311590671539307
    5. ' def' → logprob: -3.2561590671539307
    6. '```' → logprob: -3.2561590671539307
    7. 'class' → logprob: -4.131158828735352
    8. ' ' → logprob: -4.256158828735352
    9. ' __' → logprob: -4.381158828735352
    10. '  ' → logprob: -5.756158828735352

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001082471339032054
    2. '__' → logprob: -7.001082420349121
    3. ' init' → logprob: -9.376082420349121
    4. '_init' → logprob: -9.626082420349121
    5. 'init' → logprob: -11.376082420349121
    6. ' ' → logprob: -11.876082420349121
    7. ' ' → logprob: -14.751082420349121
    8. ' def' → logprob: -14.876082420349121
    9. '__(' → logprob: -15.001082420349121
    10. '```' → logprob: -15.501082420349121

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0016463837819173932
    2. 'def' → logprob: -7.001646518707275
    3. 'Road' → logprob: -8.001646041870117
    4. '__' → logprob: -8.251646041870117
    5. 'repr' → logprob: -10.251646041870117
    6. '```' → logprob: -10.251646041870117
    7. '(init' → logprob: -10.501646041870117
    8. 'road' → logprob: -11.251646041870117
    9. 'int' → logprob: -12.001646041870117
    10. ' init' → logprob: -12.001646041870117

Token 57: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016007736325263977
    2. '(self' → logprob: -4.266007900238037
    3. '__' → logprob: -6.516007900238037
    4. '__(
' → logprob: -8.391007423400879
    5. '(' → logprob: -9.391007423400879
    6. '__((' → logprob: -11.266007423400879
    7. 'self' → logprob: -11.391007423400879
    8. '_(' → logprob: -11.391007423400879
    9. ' (' → logprob: -11.641007423400879
    10. '__('' → logprob: -12.891007423400879

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031043673516251147
    2. ' self' → logprob: -8.125310897827148
    3. ',' → logprob: -11.625310897827148
    4. '(self' → logprob: -13.125310897827148
    5. ')' → logprob: -13.875310897827148
    6. ',self' → logprob: -14.625310897827148
    7. '
' → logprob: -15.000310897827148
    8. '	self' → logprob: -15.125310897827148
    9. 's' → logprob: -15.250310897827148
    10. 'source' → logprob: -15.375310897827148

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005520791164599359
    2. ' ,' → logprob: -7.625552177429199
    3. 'self' → logprob: -9.7505521774292
    4. ',id' → logprob: -12.6255521774292
    5. '_,' → logprob: -13.7505521774292
    6. ' self' → logprob: -14.5005521774292
    7. 'id' → logprob: -14.7505521774292
    8. '(self' → logprob: -16.375551223754883
    9. ',self' → logprob: -16.625551223754883
    10. '‌,' → logprob: -16.625551223754883

Token 60: ' town' (ID: 8234)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3957481384277344
    2. 'id' → logprob: -1.7707481384277344
    3. 'start' → logprob: -2.1457481384277344
    4. 'source' → logprob: -2.2707481384277344
    5. ' source' → logprob: -2.5207481384277344
    6. ' start' → logprob: -2.6457481384277344
    7. ' from' → logprob: -2.7707481384277344
    8. ' id' → logprob: -3.3957481384277344
    9. 'src' → logprob: -3.3957481384277344
    10. 'u' → logprob: -4.145748138427734

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14652256667613983
    2. '_a' → logprob: -2.0215225219726562
    3. '_' → logprob: -6.021522521972656
    4. 'a' → logprob: -7.146522521972656
    5. 'A' → logprob: -7.896522521972656
    6. 's' → logprob: -8.646522521972656
    7. '_from' → logprob: -10.271522521972656
    8. ',' → logprob: -11.396522521972656
    9. ':' → logprob: -11.771522521972656
    10. '_A' → logprob: -11.896522521972656

Token 62: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014721504412591457
    2. ':' → logprob: -4.889721393585205
    3. '_id' → logprob: -5.139721393585205
    4. ' ,' → logprob: -7.014721393585205
    5. '1' → logprob: -8.639721870422363
    6. '_,' → logprob: -9.139721870422363
    7. '_' → logprob: -11.014721870422363
    8. ' ' → logprob: -12.264721870422363
    9. 'id' → logprob: -12.389721870422363
    10. ',id' → logprob: -12.639721870422363

Token 63: ' Town' (ID: 17425)
  Prédit: ' Town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Town' → logprob: -0.2515208423137665
    2. ' int' → logprob: -1.7515208721160889
    3. 'Town' → logprob: -3.501520872116089
    4. 'int' → logprob: -4.00152063369751
    5. ' ' → logprob: -8.251521110534668
    6. ' ' → logprob: -10.376521110534668
    7. ' '' → logprob: -10.501521110534668
    8. ')' → logprob: -11.001521110534668
    9. ' Road' → logprob: -11.126521110534668
    10. '	int' → logprob: -11.751521110534668

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -10.625024795532227
    3. '‌,' → logprob: -15.625024795532227
    4. ',
' → logprob: -16.000024795532227
    5. ',

' → logprob: -17.500024795532227
    6. '_,' → logprob: -17.500024795532227
    7. '),' → logprob: -18.000024795532227
    8. ',t' → logprob: -18.125024795532227
    9. '1' → logprob: -18.625024795532227
    10. '`,' → logprob: -18.750024795532227

Token 65: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.00864080898463726
    2. 'town' → logprob: -4.758640766143799
    3. ' ' → logprob: -11.133641242980957
    4. ' road' → logprob: -12.633641242980957
    5. ' towns' → logprob: -13.258641242980957
    6. 'Town' → logprob: -13.258641242980957
    7. ' ' → logprob: -13.508641242980957
    8. '-town' → logprob: -14.258641242980957
    9. 't' → logprob: -14.633641242980957
    10. ' Town' → logprob: -14.883641242980957

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018577903392724693
    2. '1' → logprob: -8.6251859664917
    3. '_' → logprob: -13.2501859664917
    4. ' ' → logprob: -13.8751859664917
    5. '<|end|>' → logprob: -13.8751859664917
    6. '```' → logprob: -14.3751859664917
    7. ')' → logprob: -14.7501859664917
    8. ',' → logprob: -14.8751859664917
    9. 's' → logprob: -15.1251859664917
    10. '۲' → logprob: -15.8751859664917

Token 67: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3178783357143402
    2. ':' → logprob: -1.3178783655166626
    3. '):' → logprob: -5.817878246307373
    4. ')' → logprob: -6.817878246307373
    5. ' ,' → logprob: -8.192878723144531
    6. ' :' → logprob: -8.692878723144531
    7. ' ):' → logprob: -10.692878723144531
    8. '),' → logprob: -11.192878723144531
    9. ' ' → logprob: -12.192878723144531
    10. '=' → logprob: -12.317878723144531

Token 68: ' Town' (ID: 17425)
  Prédit: ' Town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Town' → logprob: -0.026392607018351555
    2. 'Town' → logprob: -3.651392698287964
    3. ' town' → logprob: -9.776392936706543
    4. ' Road' → logprob: -11.026392936706543
    5. 'town' → logprob: -12.401392936706543
    6. ')' → logprob: -12.401392936706543
    7. ' ' → logprob: -12.526392936706543
    8. 'Road' → logprob: -13.151392936706543
    9. ' ' → logprob: -13.526392936706543
    10. ' towns' → logprob: -14.401392936706543

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20230452716350555
    2. '):' → logprob: -1.702304482460022
    3. ')' → logprob: -7.202304363250732
    4. '):
' → logprob: -9.20230484008789
    5. ' ,' → logprob: -11.07730484008789
    6. '),' → logprob: -11.57730484008789
    7. ' ):' → logprob: -12.07730484008789
    8. '   ' → logprob: -12.07730484008789
    9. ',
' → logprob: -12.57730484008789
    10. ':' → logprob: -12.95230484008789

Token 70: ' cost' (ID: 3097)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.38311752676963806
    2. ' distance' → logprob: -1.8831175565719604
    3. ' weight' → logprob: -2.383117437362671
    4. ' cost' → logprob: -3.258117437362671
    5. 'distance' → logprob: -4.13311767578125
    6. 'length' → logprob: -4.38311767578125
    7. 'weight' → logprob: -5.50811767578125
    8. ' dist' → logprob: -7.25811767578125
    9. 'cost' → logprob: -7.38311767578125
    10. ' time' → logprob: -7.50811767578125

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020923245698213577
    2. '):' → logprob: -3.895923137664795
    3. ')' → logprob: -8.020923614501953
    4. '=' → logprob: -11.145923614501953
    5. ' ):' → logprob: -11.270923614501953
    6. ':int' → logprob: -11.645923614501953
    7. ' :' → logprob: -11.895923614501953
    8. ',' → logprob: -12.020923614501953
    9. '):
' → logprob: -12.895923614501953
    10. ' )' → logprob: -15.020923614501953

Token 72: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10021961480379105
    2. 'int' → logprob: -2.3502197265625
    3. ' float' → logprob: -11.9752197265625
    4. ':int' → logprob: -12.7252197265625
    5. ' ' → logprob: -13.3502197265625
    6. 'float' → logprob: -14.3502197265625
    7. ')' → logprob: -14.6002197265625
    8. '[int' → logprob: -15.2252197265625
    9. '   ' → logprob: -15.3502197265625
    10. ' )' → logprob: -15.4752197265625

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003886086633428931
    2. '):
' → logprob: -8.125388145446777
    3. ')' → logprob: -9.375388145446777
    4. '   ' → logprob: -12.875388145446777
    5. ',' → logprob: -13.375388145446777
    6. ':' → logprob: -13.500388145446777
    7. '):
' → logprob: -13.625388145446777
    8. ' ):' → logprob: -14.125388145446777
    9. '       ' → logprob: -16.000389099121094
    10. ' ' → logprob: -16.125389099121094

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020258675795048475
    2. 'self' → logprob: -9.625202178955078
    3. ' self' → logprob: -10.125202178955078
    4. '<|end|>' → logprob: -10.125202178955078
    5. ')' → logprob: -10.625202178955078
    6. ',' → logprob: -11.625202178955078
    7. '   ' → logprob: -11.750202178955078
    8. ':' → logprob: -12.875202178955078
    9. '):' → logprob: -12.875202178955078
    10. ' ' → logprob: -13.125202178955078

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04151510074734688
    2. ' self' → logprob: -3.2915151119232178
    3. '       ' → logprob: -5.666514873504639
    4. '   ' → logprob: -12.291515350341797
    5. '	self' → logprob: -13.666515350341797
    6. ' ' → logprob: -14.041515350341797
    7. '        ' → logprob: -14.416515350341797
    8. ' ' → logprob: -15.541515350341797
    9. '    ' → logprob: -16.416515350341797
    10. '     ' → logprob: -16.541515350341797

Token 76: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6328058242797852
    2. '.t' → logprob: -0.7578058242797852
    3. ' .' → logprob: -9.257805824279785
    4. '.cost' → logprob: -9.757805824279785
    5. '._' → logprob: -11.632805824279785
    6. ' ' → logprob: -11.882805824279785
    7. '=' → logprob: -12.507805824279785
    8. '	t' → logprob: -12.507805824279785
    9. 'town' → logprob: -12.507805824279785
    10. 'cost' → logprob: -12.757805824279785

Token 77: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0022372088860720396
    2. 'o' → logprob: -6.627237319946289
    3. 'ow' → logprob: -7.252237319946289
    4. '1' → logprob: -10.002237319946289
    5. '_' → logprob: -10.377237319946289
    6. 'owner' → logprob: -10.502237319946289
    7. '   ' → logprob: -10.752237319946289
    8. 'town' → logprob: -11.252237319946289
    9. ',' → logprob: -12.252237319946289
    10. 'owns' → logprob: -12.627237319946289

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. 's' → logprob: -12.625005722045898
    3. '2' → logprob: -13.750005722045898
    4. ' ' → logprob: -15.125005722045898
    5. '<|end|>' → logprob: -15.125005722045898
    6. '_' → logprob: -15.250005722045898
    7. '１' → logprob: -18.2500057220459
    8. '<|end|>' → logprob: -18.5625057220459
    9. '' → logprob: -18.8750057220459
    10. '```' → logprob: -18.8750057220459

Token 79: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15527966618537903
    2. ' ,' → logprob: -2.2802796363830566
    3. '.' → logprob: -4.280279636383057
    4. '<|end|>' → logprob: -4.405279636383057
    5. ' ' → logprob: -4.655279636383057
    6. ')' → logprob: -5.655279636383057
    7. '=' → logprob: -7.030279636383057
    8. ' =' → logprob: -7.155279636383057
    9. '<|end|>' → logprob: -8.405280113220215
    10. ' )' → logprob: -8.780280113220215

Token 80: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.0024861192796379328
    2. 'town' → logprob: -6.002486228942871
    3. ' ' → logprob: -12.127486228942871
    4. ' tow' → logprob: -13.377486228942871
    5. '	t' → logprob: -13.877486228942871
    6. 't' → logprob: -13.877486228942871
    7. ' t' → logprob: -14.252486228942871
    8. ' towns' → logprob: -14.877486228942871
    9. 'Town' → logprob: -15.877486228942871
    10. ' ' → logprob: -16.127485275268555

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22975419461727142
    2. '2' → logprob: -1.6047542095184326
    3. '.' → logprob: -5.7297539710998535
    4. '._' → logprob: -8.104754447937012
    5. 'town' → logprob: -8.854754447937012
    6. ',' → logprob: -9.104754447937012
    7. '<|end|>' → logprob: -9.354754447937012
    8. '_' → logprob: -9.479754447937012
    9. ' ' → logprob: -10.354754447937012
    10. 's' → logprob: -10.354754447937012

Token 82: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47341370582580566
    2. '<|end|>' → logprob: -1.0984137058258057
    3. ',' → logprob: -3.5984137058258057
    4. '
' → logprob: -4.848413467407227
    5. '<|end|>' → logprob: -6.223413467407227
    6. ' ' → logprob: -6.473413467407227
    7. '   ' → logprob: -6.473413467407227
    8. '.' → logprob: -7.473413467407227
    9. ',
' → logprob: -7.723413467407227
    10. '        
' → logprob: -7.723413467407227

Token 84: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5788613557815552
    2. ' self' → logprob: -1.4538613557815552
    3. ' town' → logprob: -1.8288613557815552
    4. 'town' → logprob: -3.2038612365722656
    5. '       ' → logprob: -6.703861236572266
    6. ' ' → logprob: -6.703861236572266
    7. ',' → logprob: -7.703861236572266
    8. 't' → logprob: -7.953861236572266
    9. '        ' → logprob: -8.328861236572266
    10. ' ,' → logprob: -8.703861236572266

Token 85: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3871821463108063
    2. '.t' → logprob: -1.1371821165084839
    3. '.
' → logprob: -8.262182235717773
    4. '2' → logprob: -10.762182235717773
    5. 't' → logprob: -11.262182235717773
    6. '1' → logprob: -12.012182235717773
    7. '.period' → logprob: -13.262182235717773
    8. '.

' → logprob: -13.512182235717773
    9. '.s' → logprob: -13.887182235717773
    10. '.
' → logprob: -14.262182235717773

Token 86: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.5797690749168396
    2. '2' → logprob: -0.8297690749168396
    3. '1' → logprob: -5.954769134521484
    4. 'ow' → logprob: -6.829769134521484
    5. 'o' → logprob: -10.329769134521484
    6. 'owner' → logprob: -10.829769134521484
    7. 'on' → logprob: -11.204769134521484
    8. '_' → logprob: -11.329769134521484
    9. '   ' → logprob: -12.079769134521484
    10. ' ' → logprob: -12.204769134521484

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '<|end|>' → logprob: -12.250007629394531
    3. ' ' → logprob: -14.437507629394531
    4. '.' → logprob: -14.875007629394531
    5. '```' → logprob: -15.562507629394531
    6. '۲' → logprob: -15.562507629394531
    7. '1' → logprob: -16.18750762939453
    8. '<|end|>' → logprob: -16.18750762939453
    9. '   ' → logprob: -16.25000762939453
    10. '
' → logprob: -16.43750762939453

Token 88: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.02660621888935566
    2. 'town' → logprob: -3.651606321334839
    3. ' ' → logprob: -9.401606559753418
    4. ' ' → logprob: -9.651606559753418
    5. '	t' → logprob: -9.651606559753418
    6. ' tow' → logprob: -10.276606559753418
    7. ' t' → logprob: -10.401606559753418
    8. ' towns' → logprob: -11.776606559753418
    9. 'Town' → logprob: -12.151606559753418
    10. 't' → logprob: -12.526606559753418

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.125000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '<|end|>' → logprob: -16.125001907348633
    5. '۲' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. ')' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '

' → logprob: -18.375001907348633
    10. 'town' → logprob: -18.625001907348633

Token 91: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020248008891940117
    2. '<|end|>' → logprob: -4.520247936248779
    3. '
' → logprob: -5.770247936248779
    4. ' ' → logprob: -6.270247936248779
    5. '   ' → logprob: -6.520247936248779
    6. ',' → logprob: -7.020247936248779
    7. ' 
' → logprob: -7.520247936248779
    8. '        
' → logprob: -7.645247936248779
    9. '    
' → logprob: -8.645248413085938
    10. '        ' → logprob: -9.145248413085938

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006964695639908314
    2. 'self' → logprob: -7.875696659088135
    3. ' self' → logprob: -8.750696182250977
    4. '
' → logprob: -9.375696182250977
    5. '<|end|>' → logprob: -10.625696182250977
    6. '   ' → logprob: -10.750696182250977
    7. '        
' → logprob: -11.500696182250977
    8. ',' → logprob: -11.750696182250977
    9. ' ' → logprob: -13.375696182250977
    10. ' 
' → logprob: -13.500696182250977

Token 93: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03552713245153427
    2. ' self' → logprob: -3.535527229309082
    3. '       ' → logprob: -5.160527229309082
    4. '   ' → logprob: -11.535527229309082
    5. '
' → logprob: -12.535527229309082
    6. ' ' → logprob: -13.160527229309082
    7. '	self' → logprob: -13.785527229309082
    8. 'cost' → logprob: -13.910527229309082
    9. 's' → logprob: -14.160527229309082
    10. '        ' → logprob: -14.285527229309082

Token 94: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.02638494223356247
    2. '.' → logprob: -3.6513848304748535
    3. 'cost' → logprob: -10.526385307312012
    4. ' .' → logprob: -10.776385307312012
    5. '.
' → logprob: -12.026385307312012
    6. '.c' → logprob: -12.151385307312012
    7. ' cost' → logprob: -12.401385307312012
    8. '._' → logprob: -12.401385307312012
    9. '.user' → logprob: -12.651385307312012
    10. '.code' → logprob: -13.401385307312012

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519448399543762
    2. '=' → logprob: -1.5019447803497314
    3. ' ' → logprob: -11.251944541931152
    4. '<|end|>' → logprob: -13.501944541931152
    5. ' =
' → logprob: -13.751944541931152
    6. '=
' → logprob: -16.25194549560547
    7. ')' → logprob: -16.75194549560547
    8. ' ' → logprob: -16.75194549560547
    9. '<|end|>' → logprob: -17.12694549560547
    10. ',' → logprob: -17.50194549560547

Token 96: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.008615042082965374
    2. 'cost' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.008615493774414
    4. '(cost' → logprob: -16.758615493774414
    5. ' ' → logprob: -17.883615493774414
    6. '_cost' → logprob: -18.383615493774414
    7. ' kost' → logprob: -19.258615493774414
    8. ' custo' → logprob: -19.758615493774414
    9. ' coste' → logprob: -20.133615493774414
    10. ' code' → logprob: -20.258615493774414

Token 97: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31684717535972595
    2. '   ' → logprob: -1.3168472051620483
    3. '<|end|>' → logprob: -5.941847324371338
    4. '    
' → logprob: -7.566847324371338
    5. '

' → logprob: -8.94184684753418
    6. '<|end|>' → logprob: -9.44184684753418
    7. 'def' → logprob: -9.56684684753418
    8. 'class' → logprob: -10.19184684753418
    9. ')' → logprob: -10.69184684753418
    10. '```' → logprob: -11.06684684753418

Token 99: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005937820533290505
    2. ' def' → logprob: -7.500593662261963
    3. '   ' → logprob: -10.125594139099121
    4. ' ' → logprob: -15.625594139099121
    5. '	def' → logprob: -15.750594139099121
    6. '    
' → logprob: -16.125593185424805
    7. 'de' → logprob: -16.500593185424805
    8. '```' → logprob: -17.000593185424805
    9. 'class' → logprob: -17.500593185424805
    10. '
' → logprob: -17.500593185424805

Token 100: ' connects' (ID: 47599)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.017505884170532227
    2. ' ' → logprob: -4.267505645751953
    3. ' def' → logprob: -6.517505645751953
    4. '__' → logprob: -7.392505645751953
    5. ' repr' → logprob: -7.642505645751953
    6. '_repr' → logprob: -8.392505645751953
    7. '_' → logprob: -8.642505645751953
    8. ' _' → logprob: -9.017505645751953
    9. 'repr' → logprob: -9.267505645751953
    10. ' get' → logprob: -10.892505645751953

Token 101: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018952103331685066
    2. '(' → logprob: -4.018951892852783
    3. 'self' → logprob: -7.893951892852783
    4. '(
' → logprob: -8.768952369689941
    5. '_to' → logprob: -8.768952369689941
    6. 's' → logprob: -10.018952369689941
    7. '_' → logprob: -10.518952369689941
    8. '_(' → logprob: -11.393952369689941
    9. ' (' → logprob: -11.768952369689941
    10. 'to' → logprob: -11.768952369689941

Token 102: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10029379278421402
    2. 'self' → logprob: -3.7252938747406006
    3. ',' → logprob: -4.2252936363220215
    4. ')' → logprob: -4.4752936363220215
    5. ' (' → logprob: -4.6002936363220215
    6. 's' → logprob: -4.7252936363220215
    7. ')(' → logprob: -4.9752936363220215
    8. '(' → logprob: -5.1002936363220215
    9. '<|end|>' → logprob: -5.1002936363220215
    10. '_' → logprob: -5.6002936363220215

Token 103: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.9965284466743469
    2. 'self' → logprob: -1.1215283870697021
    3. ' self' → logprob: -1.6215283870697021
    4. 'town' → logprob: -2.246528387069702
    5. ' other' → logprob: -7.121528625488281
    6. 'other' → logprob: -7.746528625488281
    7. 't' → logprob: -8.996528625488281
    8. ')' → logprob: -9.246528625488281
    9. '(self' → logprob: -10.621528625488281
    10. ',' → logprob: -10.684028625488281

Token 104: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22437988221645355
    2. '):' → logprob: -2.474379777908325
    3. ':' → logprob: -2.849379777908325
    4. ',' → logprob: -3.724379777908325
    5. ')' → logprob: -3.724379777908325
    6. 'self' → logprob: -4.849380016326904
    7. '):
' → logprob: -6.724380016326904
    8. '(self' → logprob: -6.849380016326904
    9. ' self' → logprob: -8.849379539489746
    10. '_' → logprob: -9.099379539489746

Token 105: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006125972140580416
    2. ' ,' → logprob: -5.6311259269714355
    3. ':' → logprob: -6.0061259269714355
    4. '):' → logprob: -10.131126403808594
    5. ')' → logprob: -11.506126403808594
    6. ' ):' → logprob: -12.881126403808594
    7. ' :' → logprob: -13.631126403808594
    8. '1' → logprob: -13.756126403808594
    9. ' )' → logprob: -13.881126403808594
    10. ' ' → logprob: -13.881126403808594

Token 106: ' Town' (ID: 17425)
  Prédit: ' Town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Town' → logprob: -0.5765452980995178
    2. 'Town' → logprob: -0.8265452980995178
    3. ' ' → logprob: -8.576545715332031
    4. ' town' → logprob: -8.701545715332031
    5. ')' → logprob: -8.701545715332031
    6. 'town' → logprob: -10.201545715332031
    7. ''T' → logprob: -11.951545715332031
    8. 'Road' → logprob: -12.076545715332031
    9. ' '' → logprob: -12.326545715332031
    10. 'int' → logprob: -12.701545715332031

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022070204431656748
    2. ' ,' → logprob: -8.87522029876709
    3. ')' → logprob: -9.50022029876709
    4. '):' → logprob: -12.12522029876709
    5. ' )' → logprob: -15.50022029876709
    6. ',)' → logprob: -16.000221252441406
    7. ',
' → logprob: -16.375221252441406
    8. ',t' → logprob: -16.500221252441406
    9. ' ):' → logprob: -17.250221252441406
    10. ' ' → logprob: -17.375221252441406

Token 108: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.25216254591941833
    2. 'town' → logprob: -1.5021625757217407
    3. '   ' → logprob: -9.50216293334961
    4. ' ' → logprob: -9.62716293334961
    5. ')' → logprob: -10.75216293334961
    6. ' towns' → logprob: -11.81466293334961
    7. '  ' → logprob: -11.81466293334961
    8. '    ' → logprob: -11.87716293334961
    9. 'Town' → logprob: -12.18966293334961
    10. '-town' → logprob: -12.18966293334961

Token 109: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0013304755557328463
    2. '_' → logprob: -7.001330375671387
    3. '_a' → logprob: -8.126330375671387
    4. ')' → logprob: -10.001330375671387
    5. ')_' → logprob: -11.251330375671387
    6. '1' → logprob: -11.376330375671387
    7. '=' → logprob: -12.001330375671387
    8. '_=' → logprob: -12.126330375671387
    9. 'b' → logprob: -12.251330375671387
    10. '):' → logprob: -12.251330375671387

Token 110: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11492999643087387
    2. ')' → logprob: -2.7399299144744873
    3. ':' → logprob: -3.3649299144744873
    4. '):
' → logprob: -5.239930152893066
    5. ' ):' → logprob: -5.614930152893066
    6. ' )' → logprob: -7.864930152893066
    7. ' ):
' → logprob: -10.864930152893066
    8. ' ' → logprob: -11.114930152893066
    9. '):

' → logprob: -11.489930152893066
    10. '   ' → logprob: -11.614930152893066

Token 111: ' Town' (ID: 17425)
  Prédit: ' Town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Town' → logprob: -0.38698437809944153
    2. 'Town' → logprob: -1.1369843482971191
    3. ' town' → logprob: -9.886984825134277
    4. 'town' → logprob: -10.511984825134277
    5. ')' → logprob: -10.636984825134277
    6. ' ' → logprob: -11.636984825134277
    7. ' )' → logprob: -14.511984825134277
    8. '):
' → logprob: -15.011984825134277
    9. '   ' → logprob: -15.386984825134277
    10. '-town' → logprob: -15.636984825134277

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018373049795627594
    2. '):' → logprob: -4.018373012542725
    3. '):
' → logprob: -9.143373489379883
    4. ' )' → logprob: -9.268373489379883
    5. ')->' → logprob: -10.893373489379883
    6. ' ):' → logprob: -13.268373489379883
    7. '   ' → logprob: -15.018373489379883
    8. '):
' → logprob: -15.268373489379883
    9. '):

' → logprob: -15.268373489379883
    10. ':' → logprob: -15.643373489379883

Token 113: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001019590417854488
    2. ')->' → logprob: -7.876019477844238
    3. '):' → logprob: -8.376019477844238
    4. '->' → logprob: -9.001019477844238
    5. ':' → logprob: -9.126019477844238
    6. ' ->' → logprob: -9.376019477844238
    7. '):
' → logprob: -9.376019477844238
    8. ' )' → logprob: -12.501019477844238
    9. '   ' → logprob: -13.501019477844238
    10. ',' → logprob: -14.376019477844238

Token 114: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4287221133708954
    2. 'bool' → logprob: -1.0537221431732178
    3. ' ' → logprob: -11.678722381591797
    4. ' ' → logprob: -12.303722381591797
    5. '	bool' → logprob: -12.428722381591797
    6. '   ' → logprob: -13.803722381591797
    7. '<bool' → logprob: -13.928722381591797
    8. '  ' → logprob: -14.303722381591797
    9. ' 
' → logprob: -14.803722381591797
    10. 'Bool' → logprob: -15.553722381591797

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005771008436568081
    2. ':
' → logprob: -7.750576972961426
    3. '):' → logprob: -9.125576972961426
    4. ':return' → logprob: -11.250576972961426
    5. ',' → logprob: -11.500576972961426
    6. ' :' → logprob: -12.250576972961426
    7. '():' → logprob: -12.875576972961426
    8. '<|end|>' → logprob: -13.000576972961426
    9. '):
' → logprob: -13.250576972961426
    10. '   ' → logprob: -14.000576972961426

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004484269011300057
    2. '   ' → logprob: -8.625448226928711
    3. ' return' → logprob: -8.625448226928711
    4. '
' → logprob: -10.000448226928711
    5. 'return' → logprob: -11.500448226928711
    6. '        
' → logprob: -11.625448226928711
    7. ':' → logprob: -12.125448226928711
    8. ')' → logprob: -12.375448226928711
    9. '<|end|>' → logprob: -13.125448226928711
    10. ' 
' → logprob: -13.375448226928711

Token 117: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008210165426135063
    2. '       ' → logprob: -5.008210182189941
    3. ' return' → logprob: -6.508210182189941
    4. '   ' → logprob: -13.258210182189941
    5. '
' → logprob: -14.508210182189941
    6. '(return' → logprob: -16.008209228515625
    7. '	return' → logprob: -16.258209228515625
    8. '{return' → logprob: -16.508209228515625
    9. '```' → logprob: -18.133209228515625
    10. 'eturn' → logprob: -18.633209228515625

Token 118: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07078665494918823
    2. '(t' → logprob: -3.070786714553833
    3. ' (' → logprob: -3.820786714553833
    4. '   ' → logprob: -11.070786476135254
    5. '((' → logprob: -11.445786476135254
    6. ' ' → logprob: -12.570786476135254
    7. '{' → logprob: -12.695786476135254
    8. 'self' → logprob: -12.820786476135254
    9. '(' → logprob: -13.570786476135254
    10. '       ' → logprob: -13.695786476135254

Token 119: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009180654771625996
    2. '(self' → logprob: -4.759180545806885
    3. ' self' → logprob: -8.009181022644043
    4. '(t' → logprob: -8.759181022644043
    5. '   ' → logprob: -10.134181022644043
    6. 'town' → logprob: -10.759181022644043
    7. ' (' → logprob: -12.384181022644043
    8. 't' → logprob: -12.384181022644043
    9. '	self' → logprob: -13.009181022644043
    10. '       ' → logprob: -13.384181022644043

Token 120: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.125019073486328
    3. ').' → logprob: -12.875019073486328
    4. ' .' → logprob: -14.000019073486328
    5. '`.' → logprob: -15.875019073486328
    6. '}.' → logprob: -16.375019073486328
    7. '

' → logprob: -16.500019073486328
    8. '
' → logprob: -17.250019073486328
    9. '	t' → logprob: -17.375019073486328
    10. '​.' → logprob: -17.375019073486328

Token 121: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00014084660506341606
    2. 'ow' → logprob: -9.375141143798828
    3. '.' → logprob: -11.625141143798828
    4. ' own' → logprob: -11.625141143798828
    5. '   ' → logprob: -11.750141143798828
    6. '_' → logprob: -11.750141143798828
    7. 'wn' → logprob: -12.875141143798828
    8. 'town' → logprob: -13.125141143798828
    9. 'on' → logprob: -13.250141143798828
    10. '1' → logprob: -13.500141143798828

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.937500953674316
    3. 's' → logprob: -16.125
    4. 'a' → logprob: -16.1875
    5. '_' → logprob: -16.25
    6. '   ' → logprob: -16.375
    7. '```' → logprob: -16.875
    8. '_a' → logprob: -17.375
    9. ')' → logprob: -17.625
    10. '2' → logprob: -17.75

Token 123: '.id' (ID: 2858)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763033628463745
    2. ' ==' → logprob: -0.8263033628463745
    3. ' is' → logprob: -8.201303482055664
    4. ' ' → logprob: -9.826303482055664
    5. '=' → logprob: -11.451303482055664
    6. ',' → logprob: -11.701303482055664
    7. '.id' → logprob: -12.701303482055664
    8. ')==' → logprob: -12.701303482055664
    9. '==
' → logprob: -12.826303482055664
    10. 'is' → logprob: -13.701303482055664

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06198561564087868
    2. '==' → logprob: -2.811985731124878
    3. ' ' → logprob: -11.686985969543457
    4. '=' → logprob: -12.311985969543457
    5. ',' → logprob: -12.936985969543457
    6. '==
' → logprob: -13.686985969543457
    7. ' ==
' → logprob: -14.311985969543457
    8. ' =' → logprob: -14.936985969543457
    9. ')==' → logprob: -16.18698501586914
    10. ')' → logprob: -16.31198501586914

Token 125: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.17977100610733032
    2. 'town' → logprob: -1.8047709465026855
    3. 't' → logprob: -11.429771423339844
    4. ' ' → logprob: -11.679771423339844
    5. '	t' → logprob: -12.304771423339844
    6. '-town' → logprob: -14.179771423339844
    7. 'Town' → logprob: -14.804771423339844
    8. '   ' → logprob: -15.304771423339844
    9. 'ton' → logprob: -15.929771423339844
    10. ')' → logprob: -15.929771423339844

Token 126: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.1008713702030946e-06
    2. 'a' → logprob: -13.500001907348633
    3. '1' → logprob: -15.250001907348633
    4. '_b' → logprob: -15.375001907348633
    5. '_' → logprob: -15.500001907348633
    6. '.a' → logprob: -18.250001907348633
    7. '_.' → logprob: -18.500001907348633
    8. 'A' → logprob: -18.625001907348633
    9. '._' → logprob: -18.625001907348633
    10. '_id' → logprob: -18.625001907348633

Token 127: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -12.000011444091797
    3. ' .' → logprob: -12.375011444091797
    4. ').' → logprob: -15.250011444091797
    5. 'id' → logprob: -15.750011444091797
    6. ' ' → logprob: -16.375011444091797
    7. '   ' → logprob: -16.375011444091797
    8. '
' → logprob: -16.875011444091797
    9. '`.' → logprob: -17.000011444091797
    10. '	id' → logprob: -17.750011444091797

Token 128: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889892905950546
    2. 'and' → logprob: -2.5788989067077637
    3. ' ' → logprob: -11.953899383544922
    4. ' or' → logprob: -13.203899383544922
    5. '    ' → logprob: -14.828899383544922
    6. '   ' → logprob: -15.828899383544922
    7. 'or' → logprob: -16.078899383544922
    8. '	and' → logprob: -16.203899383544922
    9. '        ' → logprob: -16.703899383544922
    10. ')' → logprob: -16.828899383544922

Token 129: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16026780009269714
    2. 'self' → logprob: -1.9102678298950195
    3. ' ' → logprob: -11.28526782989502
    4. '(self' → logprob: -12.16026782989502
    5. '
' → logprob: -12.28526782989502
    6. '        ' → logprob: -12.41026782989502
    7. '       ' → logprob: -12.41026782989502
    8. '           ' → logprob: -12.91026782989502
    9. ' ' → logprob: -13.16026782989502
    10. ')' → logprob: -13.28526782989502

Token 130: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.10048054903745651
    2. '.' → logprob: -2.350480556488037
    3. ' .' → logprob: -8.475480079650879
    4. ').' → logprob: -10.600480079650879
    5. '`.' → logprob: -11.850480079650879
    6. 'town' → logprob: -12.350480079650879
    7. ' ' → logprob: -12.350480079650879
    8. '​.' → logprob: -12.600480079650879
    9. '.
' → logprob: -12.725480079650879
    10. '
' → logprob: -12.850480079650879

Token 131: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.001435112557373941
    2. '.t' → logprob: -7.251435279846191
    3. 'ow' → logprob: -7.501435279846191
    4. '.' → logprob: -9.501435279846191
    5. 'town' → logprob: -10.251435279846191
    6. '_' → logprob: -11.376435279846191
    7. '_t' → logprob: -11.376435279846191
    8. 'wn' → logprob: -12.251435279846191
    9. '_.' → logprob: -12.501435279846191
    10. '.b' → logprob: -12.626435279846191

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014248794177547097
    2. '_b' → logprob: -6.626424789428711
    3. '.id' → logprob: -9.751424789428711
    4. '_.' → logprob: -11.751424789428711
    5. '.' → logprob: -12.001424789428711
    6. '._' → logprob: -12.126424789428711
    7. '.b' → logprob: -12.251424789428711
    8. '_' → logprob: -12.376424789428711
    9. '
' → logprob: -12.376424789428711
    10. '   ' → logprob: -13.876424789428711

Token 133: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -9.615255839889869e-05
    2. '.' → logprob: -9.375096321105957
    3. ' .' → logprob: -12.000096321105957
    4. ').' → logprob: -13.375096321105957
    5. '.ids' → logprob: -14.125096321105957
    6. 'id' → logprob: -14.375096321105957
    7. ' ' → logprob: -14.625096321105957
    8. '<|end|>' → logprob: -15.250096321105957
    9. '==' → logprob: -15.500096321105957
    10. '`.' → logprob: -15.625096321105957

Token 134: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06996066868305206
    2. '==' → logprob: -2.694960594177246
    3. ' ' → logprob: -11.569960594177246
    4. ')' → logprob: -11.694960594177246
    5. '==
' → logprob: -13.069960594177246
    6. ' ==
' → logprob: -13.069960594177246
    7. '=' → logprob: -13.819960594177246
    8. ')==' → logprob: -14.069960594177246
    9. ' ' → logprob: -15.444960594177246
    10. ' =' → logprob: -15.694960594177246

Token 135: ' town' (ID: 8234)
  Prédit: ' town'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' town' → logprob: -0.1797528862953186
    2. 'town' → logprob: -1.8047528266906738
    3. ' ' → logprob: -12.679753303527832
    4. '
' → logprob: -14.179753303527832
    5. '-town' → logprob: -14.304753303527832
    6. 'Town' → logprob: -14.429753303527832
    7. '	t' → logprob: -14.554753303527832
    8. ' towns' → logprob: -14.679753303527832
    9. '   ' → logprob: -15.179753303527832
    10. ' ' → logprob: -15.429753303527832

Token 136: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.650518920039758e-06
    2. 'b' → logprob: -13.250003814697266
    3. '_' → logprob: -14.625003814697266
    4. '_.' → logprob: -14.750003814697266
    5. '.b' → logprob: -15.500003814697266
    6. '_a' → logprob: -15.750003814697266
    7. '._' → logprob: -15.875003814697266
    8. '.' → logprob: -16.000003814697266
    9. '2' → logprob: -16.125003814697266
    10. '_
' → logprob: -17.125003814697266

Token 137: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -5.598092684522271e-05
    2. '.' → logprob: -10.000056266784668
    3. ' .' → logprob: -12.250056266784668
    4. ').' → logprob: -13.000056266784668
    5. 'id' → logprob: -13.375056266784668
    6. ' id' → logprob: -14.750056266784668
    7. ' ' → logprob: -15.250056266784668
    8. '
' → logprob: -15.625056266784668
    9. ')' → logprob: -15.750056266784668
    10. '}.' → logprob: -15.875056266784668

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032314250711351633
    2. ' )' → logprob: -5.753231525421143
    3. ' or' → logprob: -10.003231048583984
    4. 'or' → logprob: -12.753231048583984
    5. '       ' → logprob: -13.253231048583984
    6. '    ' → logprob: -13.253231048583984
    7. '        ' → logprob: -13.753231048583984
    8. '   ' → logprob: -14.753231048583984
    9. ' ' → logprob: -15.628231048583984
    10. ')
' → logprob: -16.003231048583984

Token 139: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009286141721531749
    2. 'or' → logprob: -7.0009284019470215
    3. ' ' → logprob: -11.75092887878418
    4. '    ' → logprob: -12.75092887878418
    5. '       ' → logprob: -12.87592887878418
    6. '	or' → logprob: -13.37592887878418
    7. '        ' → logprob: -13.62592887878418
    8. '   ' → logprob: -14.50092887878418
    9. '  ' → logprob: -15.62592887878418
    10. ' ' → logprob: -16.12592887878418

Token 140: ' \
' (ID: 6814)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008637616410851479
    2. '(self' → logprob: -4.758637428283691
    3. '       ' → logprob: -11.133637428283691
    4. '(' → logprob: -12.508637428283691
    5. ' self' → logprob: -13.633637428283691
    6. ' ' → logprob: -13.633637428283691
    7. 'self' → logprob: -14.258637428283691
    8. '    ' → logprob: -14.633637428283691
    9. '        ' → logprob: -14.883637428283691
    10. '   ' → logprob: -15.008637428283691

Token 141: '              ' (ID: 4442)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03817564249038696
    2. '(self' → logprob: -3.288175582885742
    3. '       ' → logprob: -9.413175582885742
    4. '(' → logprob: -10.413175582885742
    5. 'self' → logprob: -11.538175582885742
    6. ' self' → logprob: -12.663175582885742
    7. ' ' → logprob: -12.788175582885742
    8. '        ' → logprob: -13.663175582885742
    9. '(t' → logprob: -13.663175582885742
    10. '   ' → logprob: -13.788175582885742

Token 142: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04874326288700104
    2. '(self' → logprob: -3.04874324798584
    3. '              ' → logprob: -9.04874324798584
    4. ' self' → logprob: -11.92374324798584
    5. '       ' → logprob: -12.04874324798584
    6. '               ' → logprob: -12.17374324798584
    7. '(t' → logprob: -12.54874324798584
    8. ' ' → logprob: -12.67374324798584
    9. '          ' → logprob: -12.79874324798584
    10. 'self' → logprob: -12.79874324798584

Token 143: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008618593215942383
    2. ' self' → logprob: -4.758618354797363
    3. '(self' → logprob: -13.508618354797363
    4. '           ' → logprob: -14.133618354797363
    5. '               ' → logprob: -14.758618354797363
    6. '
' → logprob: -15.133618354797363
    7. ' ' → logprob: -15.508618354797363
    8. '	self' → logprob: -15.508618354797363
    9. '   ' → logprob: -15.758618354797363
    10. '              ' → logprob: -16.13361930847168

Token 144: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0013551177689805627
    2. '.' → logprob: -6.626355171203613
    3. ' .' → logprob: -11.126355171203613
    4. ').' → logprob: -11.876355171203613
    5. '`.' → logprob: -13.251355171203613
    6. '
' → logprob: -13.876355171203613
    7. ' ' → logprob: -13.876355171203613
    8. ''.' → logprob: -14.376355171203613
    9. '".' → logprob: -14.501355171203613
    10. '.
' → logprob: -15.126355171203613

Token 145: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.005566582549363375
    2. '.' → logprob: -5.505566596984863
    3. '.t' → logprob: -7.130566596984863
    4. 'self' → logprob: -8.005566596984863
    5. 'town' → logprob: -8.880566596984863
    6. 'ow' → logprob: -9.880566596984863
    7. 'wn' → logprob: -10.380566596984863
    8. '   ' → logprob: -11.130566596984863
    9. '.w' → logprob: -11.255566596984863
    10. '.owner' → logprob: -11.380566596984863

Token 146: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016213489696383476
    2. '1' → logprob: -4.141213417053223
    3. '.id' → logprob: -8.766213417053223
    4. '_.' → logprob: -12.266213417053223
    5. '
' → logprob: -12.766213417053223
    6. '_b' → logprob: -13.266213417053223
    7. '.' → logprob: -13.391213417053223
    8. ').' → logprob: -13.391213417053223
    9. '._' → logprob: -13.516213417053223
    10. '   ' → logprob: -13.766213417053223

Token 147: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.0003564383659977466
    2. '.' → logprob: -8.000356674194336
    3. ' .' → logprob: -11.500356674194336
    4. ').' → logprob: -12.250356674194336
    5. '.ids' → logprob: -13.250356674194336
    6. 'id' → logprob: -13.750356674194336
    7. '
' → logprob: -14.625356674194336
    8. ' ' → logprob: -14.625356674194336
    9. '}.' → logprob: -15.000356674194336
    10. '`.' → logprob: -15.250356674194336

Token 148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026503128930926323
    2. '==' → logprob: -3.651503086090088
    3. ' ' → logprob: -8.901503562927246
    4. ')' → logprob: -9.901503562927246
    5. '=' → logprob: -12.026503562927246
    6. ' ==
' → logprob: -12.526503562927246
    7. ')==' → logprob: -12.776503562927246
    8. ' =' → logprob: -13.526503562927246
    9. '==
' → logprob: -14.276503562927246
    10. ' )' → logprob: -14.651503562927246

Token 149: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.2811656594276428
    2. ' town' → logprob: -1.406165599822998
    3. ' ' → logprob: -11.906166076660156
    4. 't' → logprob: -13.406166076660156
    5. '   ' → logprob: -13.656166076660156
    6. 'b' → logprob: -13.781166076660156
    7. '  ' → logprob: -14.156166076660156
    8. 'Town' → logprob: -14.281166076660156
    9. 'tour' → logprob: -14.656166076660156
    10. '-town' → logprob: -14.656166076660156

Token 150: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001434690784662962
    2. 'b' → logprob: -9.000143051147461
    3. '_a' → logprob: -11.125143051147461
    4. '2' → logprob: -13.125143051147461
    5. 'a' → logprob: -14.250143051147461
    6. '.b' → logprob: -14.375143051147461
    7. '   ' → logprob: -14.750143051147461
    8. ' ' → logprob: -15.000143051147461
    9. '._' → logprob: -15.250143051147461
    10. '.' → logprob: -15.250143051147461

Token 151: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -7.266944157890975e-05
    2. '.' → logprob: -9.625072479248047
    3. ' .' → logprob: -12.375072479248047
    4. ').' → logprob: -14.250072479248047
    5. '.ids' → logprob: -14.375072479248047
    6. 'id' → logprob: -15.000072479248047
    7. ' ' → logprob: -16.250072479248047
    8. ' id' → logprob: -16.375072479248047
    9. '`.' → logprob: -16.500072479248047
    10. ''.' → logprob: -16.500072479248047

Token 152: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0022152038291096687
    2. 'and' → logprob: -6.127215385437012
    3. ' ' → logprob: -11.002215385437012
    4. ')' → logprob: -11.877215385437012
    5. '              ' → logprob: -13.502215385437012
    6. '               ' → logprob: -13.752215385437012
    7. ' a' → logprob: -14.127215385437012
    8. ' an' → logprob: -14.627215385437012
    9. '           ' → logprob: -14.627215385437012
    10. '   ' → logprob: -14.877215385437012

Token 153: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029757894575595856
    2. 'self' → logprob: -3.5297579765319824
    3. ' ' → logprob: -13.279757499694824
    4. ' ' → logprob: -13.404757499694824
    5. '               ' → logprob: -14.029757499694824
    6. '              ' → logprob: -14.279757499694824
    7. '(self' → logprob: -14.404757499694824
    8. '           ' → logprob: -14.779757499694824
    9. '	self' → logprob: -15.029757499694824
    10. '
' → logprob: -15.654757499694824

Token 154: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -5.097437315271236e-05
    2. '.' → logprob: -10.37505054473877
    3. '_t' → logprob: -11.75005054473877
    4. '2' → logprob: -11.75005054473877
    5. '
' → logprob: -14.12505054473877
    6. ' .' → logprob: -14.12505054473877
    7. '_.' → logprob: -14.87505054473877
    8. '       ' → logprob: -15.12505054473877
    9. '   ' → logprob: -15.37505054473877
    10. '._' → logprob: -15.37505054473877

Token 155: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.009897863492369652
    2. '.' → logprob: -5.509897708892822
    3. 'ow' → logprob: -6.009897708892822
    4. '_' → logprob: -6.759897708892822
    5. '_a' → logprob: -7.509897708892822
    6. 'self' → logprob: -8.25989818572998
    7. '1' → logprob: -8.50989818572998
    8. '.a' → logprob: -8.50989818572998
    9. 'wn' → logprob: -8.50989818572998
    10. '.t' → logprob: -8.75989818572998

Token 156: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03839339315891266
    2. '_a' → logprob: -3.288393497467041
    3. '.id' → logprob: -8.913393020629883
    4. '.a' → logprob: -9.413393020629883
    5. '2' → logprob: -9.788393020629883
    6. 'a' → logprob: -10.788393020629883
    7. '._' → logprob: -11.663393020629883
    8. '_.' → logprob: -11.788393020629883
    9. '
' → logprob: -11.913393020629883
    10. '   ' → logprob: -12.288393020629883

Token 157: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.000701707205735147
    2. '.' → logprob: -7.375701904296875
    3. ' .' → logprob: -9.625701904296875
    4. ').' → logprob: -13.000701904296875
    5. ' ' → logprob: -13.750701904296875
    6. '.t' → logprob: -14.000701904296875
    7. '   ' → logprob: -14.125701904296875
    8. '.ids' → logprob: -14.125701904296875
    9. '<|end|>' → logprob: -14.875701904296875
    10. '
' → logprob: -15.000701904296875

Token 158: ' ==' (ID: 951)
  Prédit: '.id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.0008422649116255343
    2. ' .' → logprob: -8.000842094421387
    3. '==' → logprob: -8.250842094421387
    4. ' ==' → logprob: -8.750842094421387
    5. '.' → logprob: -9.500842094421387
    6. ').' → logprob: -12.750842094421387
    7. '.code' → logprob: -13.125842094421387
    8. '.user' → logprob: -13.375842094421387
    9. '.ids' → logprob: -13.750842094421387
    10. '.a' → logprob: -13.875842094421387

Token 159: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.3869119882583618
    2. ' town' → logprob: -1.1369119882583618
    3. ' ' → logprob: -11.51191234588623
    4. 't' → logprob: -11.88691234588623
    5. '   ' → logprob: -12.51191234588623
    6. 'Town' → logprob: -12.76191234588623
    7. '-town' → logprob: -13.13691234588623
    8. 'a' → logprob: -13.38691234588623
    9. 'ton' → logprob: -13.51191234588623
    10. ' ' → logprob: -14.01191234588623

Token 160: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.5771450996398926
    2. '1' → logprob: -0.8271450996398926
    3. 'a' → logprob: -7.202145099639893
    4. '2' → logprob: -7.827145099639893
    5. '._' → logprob: -11.327144622802734
    6. '_' → logprob: -11.827144622802734
    7. '_b' → logprob: -12.264644622802734
    8. ')' → logprob: -12.327144622802734
    9. '```' → logprob: -12.889644622802734
    10. 'A' → logprob: -12.952144622802734

Token 161: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -1.9981420336989686e-05
    2. '.' → logprob: -11.250020027160645
    3. ' .' → logprob: -12.875020027160645
    4. ').' → logprob: -13.000020027160645
    5. ')' → logprob: -13.875020027160645
    6. 'id' → logprob: -14.750020027160645
    7. '
' → logprob: -16.125019073486328
    8. '.ids' → logprob: -16.250019073486328
    9. '.i' → logprob: -16.375019073486328
    10. ' id' → logprob: -16.500019073486328

Token 162: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025228000595234334
    2. ')
' → logprob: -9.000252723693848
    3. ' )' → logprob: -9.000252723693848
    4. '       ' → logprob: -13.500252723693848
    5. ')return' → logprob: -13.625252723693848
    6. ')

' → logprob: -13.750252723693848
    7. '   ' → logprob: -14.625252723693848
    8. '<|end|>' → logprob: -14.750252723693848
    9. '))' → logprob: -15.500252723693848
    10. ' ' → logprob: -15.750252723693848

Token 163: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22374974191188812
    2. '   ' → logprob: -1.9737497568130493
    3. '<|end|>' → logprob: -2.8487496376037598
    4. '    
' → logprob: -6.59874963760376
    5. 'class' → logprob: -7.09874963760376
    6. '<|end|>' → logprob: -7.59874963760376
    7. 'def' → logprob: -8.223750114440918
    8. '

' → logprob: -8.473750114440918
    9. '```' → logprob: -9.098750114440918
    10. ' 
' → logprob: -9.598750114440918

Token 164: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5168755054473877
    2. '   ' → logprob: -1.0168755054473877
    3. 'class' → logprob: -3.8918755054473877
    4. '
' → logprob: -4.141875267028809
    5. ' def' → logprob: -6.016875267028809
    6. ')' → logprob: -7.016875267028809
    7. '    
' → logprob: -7.641875267028809
    8. ' ' → logprob: -8.016875267028809
    9. ' 
' → logprob: -8.516875267028809
    10. '       ' → logprob: -8.641875267028809

Token 165: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29221153259277344
    2. ' __' → logprob: -1.4172115325927734
    3. 'other' → logprob: -5.417211532592773
    4. 'def' → logprob: -5.667211532592773
    5. ' other' → logprob: -7.417211532592773
    6. ' ' → logprob: -7.792211532592773
    7. ' def' → logprob: -7.792211532592773
    8. 'get' → logprob: -7.792211532592773
    9. '   ' → logprob: -7.917211532592773
    10. '___' → logprob: -8.417211532592773

Token 166: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.002321414416655898
    2. 'repr' → logprob: -6.252321243286133
    3. 'eq' → logprob: -7.877321243286133
    4. 'hash' → logprob: -11.877321243286133
    5. 'str' → logprob: -13.002321243286133
    6. ' lt' → logprob: -13.127321243286133
    7. 'gt' → logprob: -13.752321243286133
    8. '_lt' → logprob: -15.377321243286133
    9. 'cmp' → logprob: -15.877321243286133
    10. 'le' → logprob: -16.002321243286133

Token 167: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005849646404385567
    2. '__' → logprob: -7.500585079193115
    3. '__(
' → logprob: -10.500584602355957
    4. '__("' → logprob: -13.000584602355957
    5. '__('' → logprob: -13.500584602355957
    6. '(self' → logprob: -14.750584602355957
    7. '__((' → logprob: -15.000584602355957
    8. '__[' → logprob: -18.750585556030273
    9. '___' → logprob: -18.875585556030273
    10. '_(' → logprob: -18.875585556030273

Token 168: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045783669338561594
    2. 'f' → logprob: -8.500457763671875
    3. ' self' → logprob: -9.000457763671875
    4. ')' → logprob: -9.000457763671875
    5. '
' → logprob: -12.750457763671875
    6. '"' → logprob: -13.500457763671875
    7. '")' → logprob: -14.375457763671875
    8. ' f' → logprob: -14.625457763671875
    9. '):
' → logprob: -14.625457763671875
    10. '(self' → logprob: -14.875457763671875

Token 169: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8225517272949219
    2. ')' → logprob: -2.072551727294922
    3. '__(' → logprob: -2.322551727294922
    4. '):
' → logprob: -2.572551727294922
    5. '(self' → logprob: -2.572551727294922
    6. 'self' → logprob: -2.947551727294922
    7. '__' → logprob: -2.947551727294922
    8. '__("' → logprob: -3.947551727294922
    9. '):' → logprob: -4.322551727294922
    10. '       ' → logprob: -4.947551727294922

Token 170: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5762672424316406
    2. 'f' → logprob: -0.8262672424316406
    3. '       ' → logprob: -8.07626724243164
    4. ' ' → logprob: -12.70126724243164
    5. '   ' → logprob: -12.70126724243164
    6. '    ' → logprob: -12.95126724243164
    7. '      ' → logprob: -13.20126724243164
    8. '        ' → logprob: -13.45126724243164
    9. '	f' → logprob: -13.45126724243164
    10. '     ' → logprob: -13.95126724243164

Token 171: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0036227621603757143
    2. 'return' (adapté à ' return') → logprob: -6.003622531890869
    3. ' f' → logprob: -7.003622531890869
    4. '       ' → logprob: -8.503623008728027
    5. ' return' → logprob: -10.753623008728027
    6. '   ' → logprob: -11.753623008728027
    7. '           ' → logprob: -13.378623008728027
    8. ' ' → logprob: -14.128623008728027
    9. '     ' → logprob: -14.253623008728027
    10. '      ' → logprob: -14.253623008728027

Token 172: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.020542239770293236
    2. 'f' → logprob: -3.8955421447753906
    3. ' ' → logprob: -16.14554214477539
    4. '	f' → logprob: -16.77054214477539
    5. '"' → logprob: -16.89554214477539
    6. ' ' → logprob: -17.14554214477539
    7. '
' → logprob: -17.39554214477539
    8. 'F' → logprob: -17.52054214477539
    9. '(f' → logprob: -17.64554214477539
    10. '   ' → logprob: -17.77054214477539

Token 173: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04186725988984108
    2. 'f' → logprob: -3.416867256164551
    3. '("' → logprob: -5.041867256164551
    4. '(f' → logprob: -6.666867256164551
    5. '(' → logprob: -8.79186725616455
    6. '"T' → logprob: -9.41686725616455
    7. '"(' → logprob: -9.54186725616455
    8. '(R' → logprob: -10.04186725616455
    9. ''' → logprob: -10.54186725616455
    10. ' f' → logprob: -11.16686725616455

Token 174: 'Road' (ID: 58793)
  Prédit: 'Road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -1.0802738870552275e-05
    2. '"' → logprob: -12.62501049041748
    3. 'f' → logprob: -13.00001049041748
    4. ' Road' → logprob: -13.37501049041748
    5. ''' → logprob: -13.50001049041748
    6. 'road' → logprob: -13.62501049041748
    7. '`' → logprob: -15.37501049041748
    8. 'R' → logprob: -15.62501049041748
    9. '{' → logprob: -16.000011444091797
    10. '
' → logprob: -16.250011444091797

Token 175: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0006025957991369069
    2. '(T' → logprob: -7.750602722167969
    3. '(' → logprob: -8.750602722167969
    4. '(t' → logprob: -12.000602722167969
    5. '(({' → logprob: -12.125602722167969
    6. '(
' → logprob: -14.750602722167969
    7. '(R' → logprob: -14.875602722167969
    8. '{' → logprob: -15.250602722167969
    9. '({"' → logprob: -15.750602722167969
    10. '(self' → logprob: -15.750602722167969

Token 176: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000533136713784188
    2. '{' → logprob: -7.750533103942871
    3. ' self' → logprob: -9.750533103942871
    4. 'elf' → logprob: -11.500533103942871
    5. 'f' → logprob: -11.625533103942871
    6. 'sel' → logprob: -11.750533103942871
    7. '
' → logprob: -12.250533103942871
    8. '(self' → logprob: -12.750533103942871
    9. ' ' → logprob: -13.625533103942871
    10. 's' → logprob: -13.625533103942871

Token 177: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00013381359167397022
    2. '.' → logprob: -9.000133514404297
    3. ').' → logprob: -12.250133514404297
    4. ',' → logprob: -13.625133514404297
    5. ')' → logprob: -14.000133514404297
    6. '

' → logprob: -14.375133514404297
    7. ',t' → logprob: -14.375133514404297
    8. '.cost' → logprob: -14.375133514404297
    9. '1' → logprob: -15.000133514404297
    10. ' .' → logprob: -15.000133514404297

Token 178: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0003048378275707364
    2. '{' → logprob: -9.25030517578125
    3. 'self' → logprob: -9.62530517578125
    4. 'ow' → logprob: -9.87530517578125
    5. '(self' → logprob: -11.12530517578125
    6. '(' → logprob: -11.62530517578125
    7. ',' → logprob: -11.87530517578125
    8. ')' → logprob: -12.12530517578125
    9. '
' → logprob: -12.12530517578125
    10. 'wn' → logprob: -12.12530517578125

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'self' → logprob: -14.125000953674316
    3. 's' → logprob: -16.125001907348633
    4. '2' → logprob: -17.125001907348633
    5. '.' → logprob: -17.125001907348633
    6. 'a' → logprob: -18.500001907348633
    7. '.id' → logprob: -18.625001907348633
    8. '

' → logprob: -18.750001907348633
    9. ')' → logprob: -18.812501907348633
    10. '```' → logprob: -18.937501907348633

Token 180: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.1355234980583191
    2. '},' → logprob: -2.260523557662964
    3. ',' → logprob: -4.010523319244385
    4. '},{' → logprob: -5.635523319244385
    5. '.' → logprob: -7.635523319244385
    6. '}.' → logprob: -9.010523796081543
    7. '}' → logprob: -9.260523796081543
    8. ' ,' → logprob: -11.010523796081543
    9. ' ' → logprob: -11.885523796081543
    10. '

' → logprob: -12.885523796081543

Token 181: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02098103053867817
    2. '},' → logprob: -3.8959810733795166
    3. '},{' → logprob: -8.520980834960938
    4. ' ,' → logprob: -9.145980834960938
    5. ',
' → logprob: -9.145980834960938
    6. '),' → logprob: -12.020980834960938
    7. '}' → logprob: -12.645980834960938
    8. ',",' → logprob: -12.770980834960938
    9. ',f' → logprob: -12.895980834960938
    10. ' },' → logprob: -13.395980834960938

Token 182: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.593579113483429
    2. ' {' → logprob: -1.2185790538787842
    3. 'self' → logprob: -2.593579053878784
    4. '{' → logprob: -3.218579053878784
    5. ' ' → logprob: -3.718579053878784
    6. ' ' → logprob: -4.593579292297363
    7. ' f' → logprob: -6.843579292297363
    8. ',' → logprob: -7.468579292297363
    9. ' ,' → logprob: -7.718579292297363
    10. '<|end|>' → logprob: -7.843579292297363

Token 183: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002186307217925787
    2. ' self' → logprob: -6.127186298370361
    3. '	self' → logprob: -15.37718677520752
    4. '{' → logprob: -15.62718677520752
    5. ',self' → logprob: -15.75218677520752
    6. ' ' → logprob: -16.002185821533203
    7. '(self' → logprob: -16.502185821533203
    8. 'Self' → logprob: -16.627185821533203
    9. '
' → logprob: -16.752185821533203
    10. '       ' → logprob: -17.002185821533203

Token 184: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -5.1928003813372925e-05
    2. '.' → logprob: -9.875051498413086
    3. '}.' → logprob: -16.125051498413086
    4. '.cost' → logprob: -16.250051498413086
    5. '.T' → logprob: -17.000051498413086
    6. ' .' → logprob: -17.125051498413086
    7. '	t' → logprob: -17.250051498413086
    8. ',t' → logprob: -17.750051498413086
    9. '
' → logprob: -17.875051498413086
    10. 't' → logprob: -17.875051498413086

Token 185: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0508761964738369
    2. '.' → logprob: -3.6758761405944824
    3. '2' → logprob: -4.050876140594482
    4. '1' → logprob: -5.175876140594482
    5. '.id' → logprob: -7.300876140594482
    6. 'ow' → logprob: -8.42587661743164
    7. '.t' → logprob: -9.17587661743164
    8. 'wn' → logprob: -9.92587661743164
    9. '.owner' → logprob: -10.30087661743164
    10. 'o' → logprob: -10.80087661743164

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20923535525798798
    2. '1' → logprob: -1.7092353105545044
    3. '.id' → logprob: -4.959235191345215
    4. '.' → logprob: -7.209235191345215
    5. ')' → logprob: -11.959235191345215
    6. '}.' → logprob: -12.209235191345215
    7. '.t' → logprob: -12.334235191345215
    8. '}' → logprob: -12.584235191345215
    9. ' ' → logprob: -13.334235191345215
    10. ' .' → logprob: -13.584235191345215

Token 187: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.0032109846360981464
    2. '.' → logprob: -5.75321102142334
    3. '<|end|>' → logprob: -11.37821102142334
    4. '}.' → logprob: -11.87821102142334
    5. ',' → logprob: -12.00321102142334
    6. '}' → logprob: -12.75321102142334
    7. ' ' → logprob: -13.37821102142334
    8. ' .' → logprob: -14.00321102142334
    9. '},' → logprob: -14.62821102142334
    10. ').' → logprob: -14.87821102142334

Token 188: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.203409844194539e-05
    2. ' ,' → logprob: -10.375041961669922
    3. '},' → logprob: -12.000041961669922
    4. ')' → logprob: -13.125041961669922
    5. ',
' → logprob: -13.750041961669922
    6. '),' → logprob: -13.875041961669922
    7. '",' → logprob: -14.875041961669922
    8. '}' → logprob: -15.625041961669922
    9. '})' → logprob: -17.375041961669922
    10. '<|end|>' → logprob: -17.625041961669922

Token 189: ' cost' (ID: 3097)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.16660864651203156
    2. '{' → logprob: -2.7916085720062256
    3. 'self' → logprob: -3.5416085720062256
    4. ' self' → logprob: -3.6666085720062256
    5. ' ' → logprob: -3.7916085720062256
    6. ' f' → logprob: -4.416608810424805
    7. ' ' → logprob: -6.291608810424805
    8. ' 
' → logprob: -8.041608810424805
    9. '<|end|>' → logprob: -8.666608810424805
    10. ',' → logprob: -8.666608810424805

Token 190: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38870564103126526
    2. '={' → logprob: -1.1387056112289429
    3. '=self' → logprob: -6.388705730438232
    4. '=
' → logprob: -9.763705253601074
    5. '=}' → logprob: -9.888705253601074
    6. '{' → logprob: -10.638705253601074
    7. 'self' → logprob: -11.388705253601074
    8. '=

' → logprob: -12.388705253601074
    9. '=${' → logprob: -14.013705253601074
    10. '={
' → logprob: -14.013705253601074

Token 191: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0041020275093615055
    2. '{' → logprob: -5.5041022300720215
    3. ' self' → logprob: -10.754101753234863
    4. '{
' → logprob: -14.504101753234863
    5. 's' → logprob: -14.629101753234863
    6. '
' → logprob: -15.004101753234863
    7. '{s' → logprob: -15.379101753234863
    8. '	self' → logprob: -15.504101753234863
    9. ')' → logprob: -15.879101753234863
    10. 'sel' → logprob: -16.62910270690918

Token 192: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0013461847556754947
    2. '.' → logprob: -6.626346111297607
    3. ' .' → logprob: -12.001346588134766
    4. 'cost' → logprob: -12.251346588134766
    5. '.
' → logprob: -12.751346588134766
    6. '.c' → logprob: -12.876346588134766
    7. '.co' → logprob: -14.001346588134766
    8. '.cos' → logprob: -14.251346588134766
    9. ' cost' → logprob: -14.876346588134766
    10. '.code' → logprob: -14.876346588134766

Token 193: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018582290038466454
    2. ')"' → logprob: -4.018582344055176
    3. ')")' → logprob: -7.893582344055176
    4. ')">' → logprob: -10.893582344055176
    5. '")' → logprob: -11.143582344055176
    6. ' )' → logprob: -11.893582344055176
    7. ')`' → logprob: -12.143582344055176
    8. '}' → logprob: -12.393582344055176
    9. '})' → logprob: -12.518582344055176
    10. ')}' → logprob: -12.518582344055176

Token 194: '"


' (ID: 36470)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004806395620107651
    2. '
' → logprob: -5.8798065185546875
    3. '}' → logprob: -7.3798065185546875
    4. ')
' → logprob: -7.5048065185546875
    5. '")' → logprob: -8.754806518554688
    6. ' )' → logprob: -9.004806518554688
    7. '```' → logprob: -9.004806518554688
    8. '   ' → logprob: -9.129806518554688
    9. '<|end|>' → logprob: -9.754806518554688
    10. '
' → logprob: -10.129806518554688

Token 195: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000182921823579818
    2. 'def' → logprob: -9.25018310546875
    3. '
' → logprob: -9.37518310546875
    4. '

' → logprob: -14.12518310546875
    5. ' class' → logprob: -14.25018310546875
    6. 'from' → logprob: -16.12518310546875
    7. '```' → logprob: -16.12518310546875
    8. '"class' → logprob: -16.87518310546875
    9. '  
' → logprob: -16.87518310546875
    10. '    
' → logprob: -17.00018310546875

Token 196: ' Office' (ID: 11360)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.30769219994544983
    2. 'Road' → logprob: -2.057692289352417
    3. ' Graph' → logprob: -3.182692289352417
    4. 'Town' → logprob: -3.432692289352417
    5. 'Map' → logprob: -4.057692050933838
    6. ' Road' → logprob: -4.182692050933838
    7. 'Network' → logprob: -4.307692050933838
    8. 'City' → logprob: -5.182692050933838
    9. ' Town' → logprob: -5.557692050933838
    10. ' Network' → logprob: -6.057692050933838

Token 197: 'Network' (ID: 14022)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3144882619380951
    2. ':
' → logprob: -1.6894882917404175
    3. 'Network' → logprob: -2.564488172531128
    4. 'Graph' → logprob: -5.689488410949707
    5. 'Manager' → logprob: -6.189488410949707
    6. 'Planner' → logprob: -7.314488410949707
    7. 'Router' → logprob: -7.814488410949707
    8. '(Network' → logprob: -8.064488410949707
    9. '(T' → logprob: -8.564488410949707
    10. 'Optimizer' → logprob: -8.564488410949707

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805997222661972
    2. ':
' → logprob: -3.288059949874878
    3. ':

' → logprob: -12.288060188293457
    4. ' :' → logprob: -12.413060188293457
    5. '(' → logprob: -12.788060188293457
    6. '(object' → logprob: -13.663060188293457
    7. ':
' → logprob: -13.663060188293457
    8. '(List' → logprob: -13.788060188293457
    9. ' :
' → logprob: -14.038060188293457
    10. '():' → logprob: -14.288060188293457

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006012817844748497
    2. 'def' → logprob: -5.881012916564941
    3. ' def' → logprob: -6.006012916564941
    4. '    
' → logprob: -7.631012916564941
    5. '
' → logprob: -8.756012916564941
    6. '):
' → logprob: -10.506012916564941
    7. ' 
' → logprob: -11.381012916564941
    8. '  
' → logprob: -11.756012916564941
    9. '  ' → logprob: -11.881012916564941
    10. ':
' → logprob: -11.881012916564941

Token 200: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3927377760410309
    2. 'def' (adapté à ' def') → logprob: -1.1427377462387085
    3. '   ' → logprob: -5.142737865447998
    4. ' ' → logprob: -13.39273738861084
    5. '
' → logprob: -13.51773738861084
    6. 'class' → logprob: -13.76773738861084
    7. '	def' → logprob: -14.01773738861084
    8. '  ' → logprob: -14.39273738861084
    9. '    ' → logprob: -14.39273738861084
    10. ':def' → logprob: -14.51773738861084

Token 201: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.09780395776033401
    2. '_init' → logprob: -2.847804069519043
    3. ' init' → logprob: -3.972804069519043
    4. ' __' → logprob: -4.347804069519043
    5. '(init' → logprob: -6.597804069519043
    6. '__' → logprob: -6.972804069519043
    7. ' def' → logprob: -8.097804069519043
    8. 'def' → logprob: -8.347804069519043
    9. '```' → logprob: -8.472804069519043
    10. '   ' → logprob: -9.847804069519043

Token 202: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.016772447153925896
    2. 'nit' → logprob: -4.266772270202637
    3. 'it' → logprob: -6.016772270202637
    4. 'int' → logprob: -10.141772270202637
    5. '```' → logprob: -10.391772270202637
    6. 'class' → logprob: -10.391772270202637
    7. '   ' → logprob: -11.141772270202637
    8. 'def' → logprob: -11.766772270202637
    9. ' init' → logprob: -11.891772270202637
    10. 'in' → logprob: -12.391772270202637

Token 203: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02648734673857689
    2. '(self' → logprob: -3.651487350463867
    3. '__' → logprob: -9.526487350463867
    4. '__(
' → logprob: -10.401487350463867
    5. '(' → logprob: -10.526487350463867
    6. 'self' → logprob: -10.776487350463867
    7. '_(' → logprob: -10.901487350463867
    8. ' (' → logprob: -11.151487350463867
    9. ',' → logprob: -13.651487350463867
    10. ')(' → logprob: -14.776487350463867

Token 204: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043519894825294614
    2. ' self' → logprob: -8.125434875488281
    3. '
' → logprob: -9.125434875488281
    4. ')' → logprob: -11.250434875488281
    5. '   ' → logprob: -12.500434875488281
    6. ',' → logprob: -12.750434875488281
    7. 'elf' → logprob: -12.875434875488281
    8. '):
' → logprob: -13.000434875488281
    9. '       ' → logprob: -13.625434875488281
    10. '0' → logprob: -13.875434875488281

Token 205: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6302653551101685
    2. ',' → logprob: -0.8802653551101685
    3. '__,' → logprob: -4.255265235900879
    4. '__' → logprob: -4.630265235900879
    5. ' self' → logprob: -4.755265235900879
    6. '):
' → logprob: -5.130265235900879
    7. ' ,' → logprob: -5.630265235900879
    8. '__(' → logprob: -5.880265235900879
    9. '(self' → logprob: -6.380265235900879
    10. '
' → logprob: -6.880265235900879

Token 206: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.8126592193730175e-05
    2. ' self' → logprob: -10.0000581741333
    3. '       ' → logprob: -11.3750581741333
    4. '   ' → logprob: -14.0000581741333
    5. '
' → logprob: -15.8750581741333
    6. '0' → logprob: -16.625057220458984
    7. '	self' → logprob: -17.125057220458984
    8. ' ' → logprob: -17.500057220458984
    9. '```' → logprob: -17.750057220458984
    10. '(self' → logprob: -18.375057220458984

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008323782822117209
    2. ' self' → logprob: -7.125832557678223
    3. '       ' → logprob: -10.500832557678223
    4. '   ' → logprob: -15.875832557678223
    5. '
' → logprob: -16.375831604003906
    6. '	self' → logprob: -17.375831604003906
    7. '(self' → logprob: -17.750831604003906
    8. 'super' → logprob: -19.375831604003906
    9. '        
' → logprob: -19.500831604003906
    10. '           ' → logprob: -19.875831604003906

Token 208: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.017535405233502388
    2. '.ro' → logprob: -4.267535209655762
    3. '._' → logprob: -6.892535209655762
    4. '.' → logprob: -7.142535209655762
    5. ' .' → logprob: -7.142535209655762
    6. ' towns' → logprob: -8.392535209655762
    7. '_ro' → logprob: -8.892535209655762
    8. 'T' → logprob: -9.267535209655762
    9. '.nodes' → logprob: -9.517535209655762
    10. '_t' → logprob: -9.892535209655762

Token 209: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.00199251645244658
    2. 'own' → logprob: -6.501992702484131
    3. 'ows' → logprob: -8.501992225646973
    4. '_' → logprob: -8.501992225646973
    5. ' owns' → logprob: -10.876992225646973
    6. '_owned' → logprob: -12.126992225646973
    7. 'ow' → logprob: -12.251992225646973
    8. '

' → logprob: -12.501992225646973
    9. '{' → logprob: -12.626992225646973
    10. '#' → logprob: -12.626992225646973

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.225849449634552
    2. ' =' → logprob: -1.8508493900299072
    3. '=' → logprob: -3.1008493900299072
    4. ' :' → logprob: -10.350849151611328
    5. '=[]' → logprob: -11.600849151611328
    6. ')' → logprob: -12.600849151611328
    7. ' ' → logprob: -13.975849151611328
    8. 's' → logprob: -15.600849151611328
    9. ']' → logprob: -15.725849151611328
    10. ',' → logprob: -16.100849151611328

Token 211: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0023599520791321993
    2. 'List' → logprob: -6.252359867095947
    3. ' Dict' → logprob: -7.752359867095947
    4. ' List' → logprob: -13.877360343933105
    5. 'dict' → logprob: -15.252360343933105
    6. '   ' → logprob: -15.627360343933105
    7. 'Dic' → logprob: -16.12735939025879
    8. '.Dict' → logprob: -16.75235939025879
    9. '	List' → logprob: -17.62735939025879
    10. '_dict' → logprob: -17.75235939025879

Token 212: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.000003814697266
    3. '<int' → logprob: -14.875003814697266
    4. 'int' → logprob: -15.000003814697266
    5. '[str' → logprob: -15.500003814697266
    6. '[in' → logprob: -16.000003814697266
    7. '[Int' → logprob: -16.000003814697266
    8. ' =' → logprob: -16.500003814697266
    9. '[i' → logprob: -17.000003814697266
    10. '=int' → logprob: -17.250003814697266

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010640407708706334
    2. ' ,' → logprob: -9.500106811523438
    3. ',T' → logprob: -10.500106811523438
    4. 'T' → logprob: -13.375106811523438
    5. '   ' → logprob: -14.000106811523438
    6. '[' → logprob: -15.000106811523438
    7. ',
' → logprob: -15.750106811523438
    8. '[T' → logprob: -15.875106811523438
    9. '       ' → logprob: -15.875106811523438
    10. '```' → logprob: -15.875106811523438

Token 214: ' Town' (ID: 17425)
  Prédit: 'Town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Town' → logprob: -0.001170225441455841
    2. ' Town' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. 'town' → logprob: -17.626171112060547
    5. 'List' → logprob: -18.001171112060547
    6. 'T' → logprob: -18.126171112060547
    7. '	T' → logprob: -18.251171112060547
    8. ' ' → logprob: -19.376171112060547
    9. 'Tuple' → logprob: -20.126171112060547
    10. ' town' → logprob: -20.251171112060547

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1041145626222715e-05
    2. ' ]' → logprob: -12.000011444091797
    3. ']=' → logprob: -12.250011444091797
    4. ']
' → logprob: -17.000011444091797
    5. '[' → logprob: -17.375011444091797
    6. '   ' → logprob: -17.875011444091797
    7. ')' → logprob: -18.875011444091797
    8. ']]' → logprob: -19.500011444091797
    9. ',' → logprob: -19.625011444091797
    10. ']>' → logprob: -19.750011444091797

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741230010986328
    2. ' =' → logprob: -0.9741230010986328
    3. ']' → logprob: -10.349123001098633
    4. ' ' → logprob: -11.349123001098633
    5. ')' → logprob: -14.224123001098633
    6. ']=' → logprob: -14.974123001098633
    7. '   ' → logprob: -15.224123001098633
    8. '  ' → logprob: -15.599123001098633
    9. ',' → logprob: -15.974123001098633
    10. '    ' → logprob: -16.099123001098633

Token 217: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.9875325708417222e-05
    2. ' {}' → logprob: -11.000029563903809
    3. '{}
' → logprob: -11.750029563903809
    4. 'dict' → logprob: -12.250029563903809
    5. '{' → logprob: -15.500029563903809
    6. '{}

' → logprob: -15.500029563903809
    7. '{})' → logprob: -17.125030517578125
    8. ' dict' → logprob: -18.250030517578125
    9. '={}' → logprob: -19.250030517578125
    10. '{}\' → logprob: -19.375030517578125

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019838349893689156
    2. 'self' → logprob: -4.019838333129883
    3. '
' → logprob: -6.644838333129883
    4. ' self' → logprob: -8.144838333129883
    5. '   ' → logprob: -9.644838333129883
    6. '	self' → logprob: -10.894838333129883
    7. ' ' → logprob: -12.019838333129883
    8. '	' → logprob: -13.394838333129883
    9. '        
' → logprob: -13.894838333129883
    10. '      ' → logprob: -14.269838333129883

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015633042203262448
    2. ' self' → logprob: -6.50156307220459
    3. '       ' → logprob: -9.75156307220459
    4. '           ' → logprob: -14.00156307220459
    5. '
' → logprob: -14.75156307220459
    6. '   ' → logprob: -14.87656307220459
    7. '	self' → logprob: -15.25156307220459
    8. '[self' → logprob: -16.251564025878906
    9. 's' → logprob: -16.501564025878906
    10. ' ' → logprob: -16.626564025878906

Token 220: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.0024087082128971815
    2. ' .' → logprob: -6.627408504486084
    3. '.t' → logprob: -7.627408504486084
    4. '.' → logprob: -8.127408981323242
    5. '.edges' → logprob: -9.627408981323242
    6. '.r' → logprob: -9.627408981323242
    7. '_ro' → logprob: -9.752408981323242
    8. ' roads' → logprob: -10.377408981323242
    9. 'roads' → logprob: -10.752408981323242
    10. '.connections' → logprob: -11.002408981323242

Token 221: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -4.096126576769166e-05
    2. 'ad' → logprob: -10.625041007995605
    3. ' ads' → logprob: -11.500041007995605
    4. 'a' → logprob: -13.625041007995605
    5. '
' → logprob: -13.875041007995605
    6. '_ads' → logprob: -14.375041007995605
    7. 'ods' → logprob: -14.750041007995605
    8. '

' → logprob: -15.062541007995605
    9. 'Ads' → logprob: -15.375041007995605
    10. '   ' → logprob: -15.500041007995605

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001645644661039114
    2. ' =' → logprob: -9.125164985656738
    3. '=' → logprob: -10.125164985656738
    4. ' :' → logprob: -11.125164985656738
    5. '=[]' → logprob: -14.750164985656738
    6. '[' → logprob: -16.375164031982422
    7. ' ' → logprob: -16.500164031982422
    8. '   ' → logprob: -16.750164031982422
    9. ':list' → logprob: -17.250164031982422
    10. '_list' → logprob: -17.562664031982422

Token 223: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2331629991531372
    2. 'List' → logprob: -2.1081628799438477
    3. ' []' → logprob: -2.4831628799438477
    4. ' List' → logprob: -6.358162879943848
    5. 'Dict' → logprob: -7.108162879943848
    6. '{}' → logprob: -8.233162879943848
    7. '[List' → logprob: -9.483162879943848
    8. '[]}' → logprob: -9.733162879943848
    9. 'list' → logprob: -10.608162879943848
    10. '   ' → logprob: -10.858162879943848

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5332478142227046e-05
    2. '[
' → logprob: -11.500015258789062
    3. ':' → logprob: -13.750015258789062
    4. '[R' → logprob: -13.875015258789062
    5. '[]' → logprob: -14.750015258789062
    6. '[int' → logprob: -14.750015258789062
    7. '[:]' → logprob: -14.875015258789062
    8. ' ' → logprob: -15.125015258789062
    9. '   ' → logprob: -15.250015258789062
    10. ']' → logprob: -15.375015258789062

Token 225: 'Road' (ID: 58793)
  Prédit: 'Road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -1.1637164789135568e-05
    2. ' Road' → logprob: -11.625011444091797
    3. ')' → logprob: -13.625011444091797
    4. '   ' → logprob: -14.875011444091797
    5. '[' → logprob: -14.875011444091797
    6. 'Tuple' → logprob: -16.000011444091797
    7. ']' → logprob: -16.125011444091797
    8. ' ' → logprob: -16.500011444091797
    9. '  ' → logprob: -17.000011444091797
    10. 'R' → logprob: -17.000011444091797

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.534558552724775e-05
    2. ']=' → logprob: -10.750025749206543
    3. ' ]' → logprob: -13.250025749206543
    4. ')' → logprob: -13.750025749206543
    5. '=' → logprob: -14.125025749206543
    6. '[' → logprob: -16.375024795532227
    7. '][]' → logprob: -16.500024795532227
    8. '[]' → logprob: -17.625024795532227
    9. ',' → logprob: -18.125024795532227
    10. ' ' → logprob: -18.250024795532227

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410231828689575
    2. ' =' → logprob: -0.9741023182868958
    3. '=[]' → logprob: -10.974102020263672
    4. ' ' → logprob: -12.349102020263672
    5. '[]' → logprob: -13.224102020263672
    6. '   ' → logprob: -14.724102020263672
    7. '=[]
' → logprob: -14.849102020263672
    8. '	' → logprob: -15.099102020263672
    9. ']' → logprob: -15.349102020263672
    10. ')' → logprob: -15.474102020263672

Token 228: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012051118537783623
    2. ' []' → logprob: -6.751204967498779
    3. '[]
' → logprob: -10.376205444335938
    4. '[' → logprob: -13.376205444335938
    5. '[]}' → logprob: -13.501205444335938
    6. '[]

' → logprob: -15.251205444335938
    7. ' ' → logprob: -15.626205444335938
    8. '   ' → logprob: -16.001205444335938
    9. '[])' → logprob: -16.376205444335938
    10. '[]>' → logprob: -16.376205444335938

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057761043310165405
    2. '       ' → logprob: -3.4327609539031982
    3. 'def' → logprob: -4.557761192321777
    4. '
' → logprob: -5.182761192321777
    5. '    
' → logprob: -5.307761192321777
    6. '<|end|>' → logprob: -6.432761192321777
    7. '        
' → logprob: -7.807761192321777
    8. ' def' → logprob: -8.432761192321777
    9. '

' → logprob: -8.807761192321777
    10. '	def' → logprob: -9.557761192321777

Token 230: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000523842521943152
    2. ' def' → logprob: -7.625524044036865
    3. '   ' → logprob: -10.250523567199707
    4. 'de' → logprob: -15.750523567199707
    5. '
' → logprob: -15.875523567199707
    6. 'd' → logprob: -16.875524520874023
    7. ' ' → logprob: -17.500524520874023
    8. '

' → logprob: -17.750524520874023
    9. '	def' → logprob: -17.750524520874023
    10. '    
' → logprob: -18.000524520874023

Token 231: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0017766845412552357
    2. 'add' → logprob: -6.376776695251465
    3. '_add' → logprob: -9.876776695251465
    4. ' def' → logprob: -11.126776695251465
    5. ' ' → logprob: -13.126776695251465
    6. ' get' → logprob: -13.501776695251465
    7. 'def' → logprob: -13.501776695251465
    8. '	add' → logprob: -14.251776695251465
    9. ' create' → logprob: -14.376776695251465
    10. ' find' → logprob: -14.876776695251465

Token 232: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20144997537136078
    2. '_t' → logprob: -1.701449990272522
    3. ' _' → logprob: -10.70145034790039
    4. '_ro' → logprob: -12.07645034790039
    5. '_city' → logprob: -13.20145034790039
    6. '##_' → logprob: -13.70145034790039
    7. '__' → logprob: -13.82645034790039
    8. '_to' → logprob: -14.20145034790039
    9. '}_' → logprob: -14.57645034790039
    10. ')_' → logprob: -14.95145034790039

Token 233: 'road' (ID: 12086)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -7.52919222577475e-05
    2. 'road' → logprob: -9.625075340270996
    3. 'office' → logprob: -12.875075340270996
    4. 'to' → logprob: -13.250075340270996
    5. 'Town' → logprob: -13.500075340270996
    6. 'tow' → logprob: -14.000075340270996
    7. '-town' → logprob: -14.750075340270996
    8. 'own' → logprob: -15.125075340270996
    9. '```' → logprob: -15.375075340270996
    10. ' town' → logprob: -15.375075340270996

Token 234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -9.500076293945312
    3. 'self' → logprob: -14.500076293945312
    4. ' (' → logprob: -15.250076293945312
    5. '(s' → logprob: -15.750076293945312
    6. '(
' → logprob: -16.250076293945312
    7. '   ' → logprob: -18.500076293945312
    8. '(sel' → logprob: -18.750076293945312
    9. ' self' → logprob: -19.625076293945312
    10. '(se' → logprob: -19.875076293945312

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011374774621799588
    2. 'self' → logprob: -7.3761372566223145
    3. '(self' → logprob: -8.126137733459473
    4. ' ,' → logprob: -8.626137733459473
    5. '       ' → logprob: -10.751137733459473
    6. ',self' → logprob: -12.001137733459473
    7. ',
' → logprob: -13.251137733459473
    8. '   ' → logprob: -13.376137733459473
    9. ' self' → logprob: -13.626137733459473
    10. ' (' → logprob: -13.751137733459473

Token 236: ' a' (ID: 261)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.5874693393707275
    2. ' town' → logprob: -0.9624693393707275
    3. 'self' → logprob: -3.3374693393707275
    4. ' self' → logprob: -3.7124693393707275
    5. '   ' → logprob: -6.712469100952148
    6. 'road' → logprob: -8.212469100952148
    7. ' road' → logprob: -8.587469100952148
    8. 't' → logprob: -8.712469100952148
    9. ' ' → logprob: -9.212469100952148
    10. 'id' → logprob: -9.524969100952148

Token 237: ':' (ID: 25)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.11620500683784485
    2. ':' → logprob: -2.2412049770355225
    3. ',' → logprob: -5.991205215454102
    4. '_t' → logprob: -7.991205215454102
    5. '_:' → logprob: -8.741205215454102
    6. '_i' → logprob: -8.991205215454102
    7. 'id' → logprob: -9.741205215454102
    8. '_ids' → logprob: -10.241205215454102
    9. '_,' → logprob: -10.366205215454102
    10. ':int' → logprob: -10.991205215454102

Token 238: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005201740190386772
    2. ' int' → logprob: -5.380201816558838
    3. 'nt' → logprob: -8.00520133972168
    4. 'Town' → logprob: -8.63020133972168
    5. ' Town' → logprob: -11.13020133972168
    6. '   ' → logprob: -11.50520133972168
    7. '[int' → logprob: -11.75520133972168
    8. '	int' → logprob: -12.00520133972168
    9. 'nd' → logprob: -12.38020133972168
    10. ' ' → logprob: -12.50520133972168

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.782141569303349e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ',
' → logprob: -14.75009822845459
    4. '   ' → logprob: -14.87509822845459
    5. ',b' → logprob: -14.87509822845459
    6. '_,' → logprob: -15.87509822845459
    7. ',a' → logprob: -15.87509822845459
    8. '‌,' → logprob: -16.625097274780273
    9. 'a' → logprob: -16.875097274780273
    10. '       ' → logprob: -17.125097274780273

Token 240: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022473573684692
    2. ' b' → logprob: -1.9102246761322021
    3. '   ' → logprob: -14.660224914550781
    4. '    ' → logprob: -16.78522491455078
    5. ' ' → logprob: -16.91022491455078
    6. '	b' → logprob: -17.41022491455078
    7. '  ' → logprob: -18.03522491455078
    8. '       ' → logprob: -18.03522491455078
    9. ' б' → logprob: -18.78522491455078
    10. ',b' → logprob: -19.03522491455078

Token 241: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006665678229182959
    2. ' ,' → logprob: -7.625666618347168
    3. ':' → logprob: -8.750666618347168
    4. '<|end|>' → logprob: -12.125666618347168
    5. ',int' → logprob: -12.250666618347168
    6. ')' → logprob: -12.625666618347168
    7. ',
' → logprob: -13.125666618347168
    8. ':int' → logprob: -13.750666618347168
    9. '):' → logprob: -13.875666618347168
    10. '‌,' → logprob: -14.000666618347168

Token 242: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1602357029914856
    2. ' int' → logprob: -1.9102356433868408
    3. ')' → logprob: -12.535235404968262
    4. ':int' → logprob: -12.910235404968262
    5. ',' → logprob: -13.785235404968262
    6. ',int' → logprob: -14.035235404968262
    7. ' ' → logprob: -14.035235404968262
    8. '[int' → logprob: -14.035235404968262
    9. '(int' → logprob: -14.660235404968262
    10. '=int' → logprob: -14.785235404968262

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ' ,' → logprob: -8.75015926361084
    3. ',
' → logprob: -15.37515926361084
    4. ')' → logprob: -15.75015926361084
    5. '),' → logprob: -16.500158309936523
    6. '‌,' → logprob: -16.500158309936523
    7. ',int' → logprob: -16.875158309936523
    8. '`,' → logprob: -17.750158309936523
    9. '_,' → logprob: -18.625158309936523
    10. ' ' → logprob: -18.750158309936523

Token 244: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.23135873675346375
    2. ' cost' → logprob: -1.7313587665557861
    3. 'c' → logprob: -3.606358766555786
    4. ' c' → logprob: -6.106358528137207
    5. '   ' → logprob: -10.231358528137207
    6. ')' → logprob: -10.606358528137207
    7. '  ' → logprob: -11.231358528137207
    8. ' ' → logprob: -11.356358528137207
    9. 'int' → logprob: -12.231358528137207
    10. '    ' → logprob: -12.356358528137207

Token 245: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6967039108276367
    2. '):' → logprob: -0.6967039108276367
    3. ')' → logprob: -5.696703910827637
    4. ' ):' → logprob: -9.571703910827637
    5. '):
' → logprob: -9.696703910827637
    6. ':int' → logprob: -9.946703910827637
    7. '   ' → logprob: -12.321703910827637
    8. '=' → logprob: -12.446703910827637
    9. '}:' → logprob: -13.571703910827637
    10. '```' → logprob: -14.196703910827637

Token 246: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019361276645213366
    2. ' int' → logprob: -6.251935958862305
    3. ')' → logprob: -12.126935958862305
    4. ':int' → logprob: -13.501935958862305
    5. '):' → logprob: -15.376935958862305
    6. '   ' → logprob: -16.001935958862305
    7. '	int' → logprob: -16.251935958862305
    8. ' ' → logprob: -16.376935958862305
    9. '[int' → logprob: -16.376935958862305
    10. '):
' → logprob: -16.501935958862305

Token 247: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10646052658557892
    2. ')' → logprob: -2.6064605712890625
    3. '):
' → logprob: -3.6064605712890625
    4. '):
' → logprob: -10.106460571289062
    5. ' ):' → logprob: -13.356460571289062
    6. ')->' → logprob: -13.481460571289062
    7. '   ' → logprob: -13.856460571289062
    8. ':' → logprob: -14.356460571289062
    9. '):

' → logprob: -14.606460571289062
    10. ' )' → logprob: -15.356460571289062

Token 248: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07897604256868362
    2. ':
' → logprob: -2.5789761543273926
    3. '):
' → logprob: -9.578975677490234
    4. '):' → logprob: -11.203975677490234
    5. ':
' → logprob: -13.578975677490234
    6. '():
' → logprob: -14.703975677490234
    7. ' :
' → logprob: -14.828975677490234
    8. ' :' → logprob: -15.078975677490234
    9. ':

' → logprob: -15.203975677490234
    10. '       ' → logprob: -15.203975677490234

Token 249: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04858759790658951
    2. ' None' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.923587799072266
    4. ' ' → logprob: -16.673587799072266
    5. 'bool' → logprob: -17.298587799072266
    6. 'none' → logprob: -18.173587799072266
    7. '  ' → logprob: -19.048587799072266
    8. 'int' → logprob: -19.548587799072266
    9. '_None' → logprob: -19.798587799072266
    10. 'void' → logprob: -19.923587799072266

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01827765628695488
    2. ':
' → logprob: -4.018277645111084
    3. '):
' → logprob: -9.643278121948242
    4. '):' → logprob: -9.768278121948242
    5. ':
' → logprob: -13.018278121948242
    6. '       ' → logprob: -13.393278121948242
    7. ':

' → logprob: -14.518278121948242
    8. ':def' → logprob: -14.768278121948242
    9. ',' → logprob: -15.018278121948242
    10. '   ' → logprob: -15.393278121948242

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010446110740303993
    2. ' if' → logprob: -4.635446071624756
    3. 'if' → logprob: -8.010446548461914
    4. '   ' → logprob: -8.010446548461914
    5. '```' → logprob: -12.135446548461914
    6. ' towns' → logprob: -12.260446548461914
    7. ' town' → logprob: -13.010446548461914
    8. '        
' → logprob: -13.135446548461914
    9. '    ' → logprob: -13.260446548461914
    10. 'a' → logprob: -13.385446548461914

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06113428622484207
    2. ' if' → logprob: -3.3111343383789062
    3. '       ' → logprob: -3.8111343383789062
    4. 'town' → logprob: -7.811134338378906
    5. 'for' → logprob: -8.311134338378906
    6. ' town' → logprob: -10.811134338378906
    7. '   ' → logprob: -11.311134338378906
    8. '```' → logprob: -11.561134338378906
    9. 't' → logprob: -11.936134338378906
    10. ' for' → logprob: -12.686134338378906

Token 253: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38687169551849365
    2. ' a' → logprob: -1.1368716955184937
    3. '	a' → logprob: -14.636871337890625
    4. 'b' → logprob: -15.761871337890625
    5. '(a' → logprob: -17.136871337890625
    6. '   ' → logprob: -18.511871337890625
    7. ' b' → logprob: -18.761871337890625
    8. '_a' → logprob: -18.761871337890625
    9. '[a' → logprob: -18.886871337890625
    10. ' not' → logprob: -18.886871337890625

Token 254: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0031907858792692423
    2. 'not' → logprob: -5.753190994262695
    3. ')' → logprob: -11.878190994262695
    4. '==' → logprob: -12.378190994262695
    5. ' no' → logprob: -14.878190994262695
    6. ' ' → logprob: -14.878190994262695
    7. '	not' → logprob: -15.128190994262695
    8. ']' → logprob: -15.378190994262695
    9. ' ==' → logprob: -15.503190994262695
    10. '!=' → logprob: -16.253190994262695

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004717653151601553
    2. ' self' → logprob: -6.004717826843262
    3. 'self' → logprob: -6.379717826843262
    4. 'in' → logprob: -7.629717826843262
    5. '<|end|>' → logprob: -10.754717826843262
    6. ' not' → logprob: -11.129717826843262
    7. ' ' → logprob: -12.129717826843262
    8. '       ' → logprob: -12.754717826843262
    9. ')' → logprob: -12.879717826843262
    10. '(self' → logprob: -13.629717826843262

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234475247561932
    2. ' self' → logprob: -5.255234241485596
    3. '(self' → logprob: -14.505234718322754
    4. '[self' → logprob: -15.880234718322754
    5. '	self' → logprob: -16.880233764648438
    6. '=self' → logprob: -17.255233764648438
    7. '
' → logprob: -17.380233764648438
    8. 'elf' → logprob: -18.005233764648438
    9. ' ' → logprob: -18.130233764648438
    10. '       ' → logprob: -18.255233764648438

Token 257: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00017720005416776985
    2. '.' → logprob: -8.750177383422852
    3. ' .' → logprob: -11.000177383422852
    4. '       ' → logprob: -14.250177383422852
    5. '`.' → logprob: -15.375177383422852
    6. '.
' → logprob: -15.500177383422852
    7. ').' → logprob: -15.625177383422852
    8. ' towns' → logprob: -15.750177383422852
    9. '
' → logprob: -16.00017738342285
    10. '].' → logprob: -16.37517738342285

Token 258: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.004536804277449846
    2. 'own' → logprob: -5.5045366287231445
    3. 'ows' → logprob: -8.379536628723145
    4. 'town' → logprob: -9.754536628723145
    5. '_' → logprob: -10.504536628723145
    6. '{' → logprob: -11.004536628723145
    7. 'ow' → logprob: -11.129536628723145
    8. '#' → logprob: -11.254536628723145
    9. '```' → logprob: -11.754536628723145
    10. 'wn' → logprob: -11.879536628723145

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002206639386713505
    2. ':
' → logprob: -6.127206802368164
    3. '):' → logprob: -11.252206802368164
    4. ' :' → logprob: -12.252206802368164
    5. ' or' → logprob: -13.752206802368164
    6. ')' → logprob: -14.127206802368164
    7. ':
' → logprob: -15.252206802368164
    8. ']:' → logprob: -15.377206802368164
    9. '   ' → logprob: -15.502206802368164
    10. '):
' → logprob: -15.627206802368164

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3074389100074768
    2. ':' → logprob: -1.807438850402832
    3. ':
' → logprob: -2.307438850402832
    4. '       ' → logprob: -7.307438850402832
    5. ' self' → logprob: -9.432438850402832
    6. '               ' → logprob: -9.807438850402832
    7. '   ' → logprob: -10.057438850402832
    8. '.' → logprob: -10.057438850402832
    9. 'self' → logprob: -10.057438850402832
    10. ':self' → logprob: -10.807438850402832

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12695005536079407
    2. ' self' → logprob: -2.1269500255584717
    3. '           ' → logprob: -11.00195026397705
    4. '       ' → logprob: -12.50195026397705
    5. '	self' → logprob: -14.50195026397705
    6. '               ' → logprob: -14.87695026397705
    7. '(self' → logprob: -15.87695026397705
    8. '
' → logprob: -16.251949310302734
    9. '   ' → logprob: -16.251949310302734
    10. 'Self' → logprob: -16.751949310302734

Token 262: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -4.9424725148128346e-05
    2. '.' → logprob: -10.000049591064453
    3. ' .' → logprob: -13.125049591064453
    4. '       ' → logprob: -14.250049591064453
    5. '`.' → logprob: -15.500049591064453
    6. '   ' → logprob: -15.625049591064453
    7. ').' → logprob: -15.625049591064453
    8. 't' → logprob: -16.125049591064453
    9. '.s' → logprob: -16.375049591064453
    10. '```' → logprob: -16.500049591064453

Token 263: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.0012199865886941552
    2. 'own' → logprob: -7.251219749450684
    3. '_' → logprob: -8.251219749450684
    4. 'wn' → logprob: -9.751219749450684
    5. 'town' → logprob: -9.876219749450684
    6. 'ows' → logprob: -10.001219749450684
    7. '{' → logprob: -10.626219749450684
    8. '   ' → logprob: -11.751219749450684
    9. 'awns' → logprob: -11.876219749450684
    10. '#' → logprob: -12.251219749450684

Token 264: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.125000953674316
    3. 'a' → logprob: -15.000000953674316
    4. '
' → logprob: -17.125001907348633
    5. '[
' → logprob: -17.125001907348633
    6. ' [' → logprob: -17.125001907348633
    7. '

' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '```' → logprob: -18.750001907348633
    10. ' a' → logprob: -19.000001907348633

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.12127808178775e-05
    2. ']=' → logprob: -10.125051498413086
    3. ' ]' → logprob: -11.500051498413086
    4. '=' → logprob: -14.375051498413086
    5. ' =' → logprob: -15.250051498413086
    6. '"]' → logprob: -16.625051498413086
    7. ')' → logprob: -16.875051498413086
    8. '   ' → logprob: -17.500051498413086
    9. '']' → logprob: -17.625051498413086
    10. '`]' → logprob: -19.000051498413086

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021044313907623
    2. ' =' → logprob: -2.350210428237915
    3. ']' → logprob: -12.600210189819336
    4. ']=' → logprob: -14.725210189819336
    5. ')' → logprob: -17.475210189819336
    6. '=
' → logprob: -17.975210189819336
    7. '＝' → logprob: -18.600210189819336
    8. ')=' → logprob: -18.975210189819336
    9. '=T' → logprob: -19.850210189819336
    10. '```' → logprob: -19.975210189819336

Token 267: ' Town' (ID: 17425)
  Prédit: 'Town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Town' → logprob: -0.3132617771625519
    2. ' Town' → logprob: -1.3132617473602295
    3. 'T' → logprob: -17.688261032104492
    4. '	T' → logprob: -20.313261032104492
    5. 'town' → logprob: -21.188261032104492
    6. 'Tower' → logprob: -21.813261032104492
    7. ' town' → logprob: -22.063261032104492
    8. '   ' → logprob: -22.188261032104492
    9. ' Township' → logprob: -22.438261032104492
    10. 'Tow' → logprob: -22.563261032104492

Token 268: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.735893965815194e-05
    2. 'a' → logprob: -11.250017166137695
    3. '(' → logprob: -12.375017166137695
    4. '(
' → logprob: -17.375017166137695
    5. ' (' → logprob: -19.500017166137695
    6. '(id' → logprob: -20.125017166137695
    7. '(i' → logprob: -20.750017166137695
    8. '(A' → logprob: -20.875017166137695
    9. ' a' → logprob: -21.000017166137695
    10. '((' → logprob: -21.125017166137695

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891523092985153
    2. ')
' → logprob: -2.5789151191711426
    3. '       ' → logprob: -10.7039155960083
    4. ')
' → logprob: -13.4539155960083
    5. ' )' → logprob: -13.9539155960083
    6. ')

' → logprob: -15.2039155960083
    7. ' )
' → logprob: -15.3289155960083
    8. '   ' → logprob: -15.3289155960083
    9. ')`
' → logprob: -17.828914642333984
    10. '           ' → logprob: -17.953914642333984

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008226146455854177
    2. '<|end|>' → logprob: -7.2508225440979
    3. '        
' → logprob: -9.625823020935059
    4. ' if' → logprob: -11.625823020935059
    5. '   ' → logprob: -12.250823020935059
    6. '
' → logprob: -12.875823020935059
    7. '```' → logprob: -12.875823020935059
    8. '      ' → logprob: -12.875823020935059
    9. '  
' → logprob: -13.125823020935059
    10. '<|end|>' → logprob: -13.125823020935059

Token 271: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04738466441631317
    2. 'if' (adapté à ' if') → logprob: -3.547384738922119
    3. ' if' → logprob: -4.047384738922119
    4. 'If' → logprob: -12.672384262084961
    5. '   ' → logprob: -13.172384262084961
    6. '```' → logprob: -13.422384262084961
    7. '        
' → logprob: -13.797384262084961
    8. '	if' → logprob: -14.047384262084961
    9. 'self' → logprob: -14.172384262084961
    10. '           ' → logprob: -14.672384262084961

Token 272: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014133334159851
    2. 'b' → logprob: -1.7014133930206299
    3. '	b' → logprob: -17.076414108276367
    4. '   ' → logprob: -17.826414108276367
    5. ' ' → logprob: -18.201414108276367
    6. ' б' → logprob: -18.701414108276367
    7. ' ' → logprob: -18.701414108276367
    8. '_b' → logprob: -18.826414108276367
    9. '       ' → logprob: -20.201414108276367
    10. '    ' → logprob: -20.201414108276367

Token 273: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0019287518225610256
    2. 'not' → logprob: -6.251928806304932
    3. '	not' → logprob: -16.501928329467773
    4. ' no' → logprob: -18.626928329467773
    5. '   ' → logprob: -19.126928329467773
    6. ' ' → logprob: -19.876928329467773
    7. ')' → logprob: -20.126928329467773
    8. '
' → logprob: -20.376928329467773
    9. ':not' → logprob: -20.376928329467773
    10. '```' → logprob: -20.501928329467773

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025115320459008217
    2. 'self' → logprob: -3.9001152515411377
    3. 'in' → logprob: -6.025115489959717
    4. ' self' → logprob: -6.150115489959717
    5. '(self' → logprob: -12.275115013122559
    6. 'In' → logprob: -13.525115013122559
    7. '<|end|>' → logprob: -13.650115013122559
    8. 's' → logprob: -14.150115013122559
    9. '```' → logprob: -14.400115013122559
    10. '[self' → logprob: -14.400115013122559

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018156031146645546
    2. ' self' → logprob: -4.018156051635742
    3. '(self' → logprob: -12.893156051635742
    4. '[self' → logprob: -13.893156051635742
    5. '<|end|>' → logprob: -14.393156051635742
    6. '	self' → logprob: -14.518156051635742
    7. '       ' → logprob: -15.268156051635742
    8. '=self' → logprob: -15.643156051635742
    9. ' ' → logprob: -15.768156051635742
    10. 's' → logprob: -15.768156051635742

Token 276: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.62504768371582
    3. 't' → logprob: -11.62504768371582
    4. 'owns' → logprob: -12.75004768371582
    5. ' towns' → logprob: -13.12504768371582
    6. 'town' → logprob: -13.12504768371582
    7. ' .' → logprob: -13.12504768371582
    8. 'self' → logprob: -14.12504768371582
    9. '```' → logprob: -14.12504768371582
    10. 'T' → logprob: -14.37504768371582

Token 277: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.0010808025253936648
    2. 'own' → logprob: -7.5010809898376465
    3. 'ows' → logprob: -8.501080513000488
    4. 'wn' → logprob: -8.501080513000488
    5. '{' → logprob: -10.876080513000488
    6. '_' → logprob: -11.126080513000488
    7. 'ons' → logprob: -11.251080513000488
    8. 'town' → logprob: -11.626080513000488
    9. '#' → logprob: -12.001080513000488
    10. '[' → logprob: -12.126080513000488

Token 278: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3489881455898285
    2. ':' → logprob: -1.2239881753921509
    3. '[b' → logprob: -8.59898853302002
    4. '       ' → logprob: -9.47398853302002
    5. '{
' → logprob: -9.72398853302002
    6. '):
' → logprob: -9.84898853302002
    7. '           ' → logprob: -9.97398853302002
    8. '   ' → logprob: -10.59898853302002
    9. 'b' → logprob: -10.59898853302002
    10. ':b' → logprob: -10.97398853302002

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04213416576385498
    2. ':' → logprob: -3.6671342849731445
    3. '       ' → logprob: -4.6671342849731445
    4. ':
' → logprob: -5.7921342849731445
    5. 'self' → logprob: -7.2921342849731445
    6. ' =' → logprob: -7.4171342849731445
    7. '               ' → logprob: -7.6671342849731445
    8. '=' → logprob: -7.9171342849731445
    9. ' self' → logprob: -7.9171342849731445
    10. '          ' → logprob: -8.667134284973145

Token 280: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10021474957466125
    2. ' self' → logprob: -2.350214719772339
    3. '           ' → logprob: -12.225214958190918
    4. '       ' → logprob: -13.225214958190918
    5. '	self' → logprob: -13.850214958190918
    6. '(self' → logprob: -16.2252140045166
    7. '               ' → logprob: -16.2252140045166
    8. '   ' → logprob: -16.4752140045166
    9. 'b' → logprob: -17.1002140045166
    10. '[self' → logprob: -17.1002140045166

Token 281: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -12.250007629394531
    3. 't' → logprob: -14.375007629394531
    4. ' towns' → logprob: -14.375007629394531
    5. '.b' → logprob: -15.250007629394531
    6. 'T' → logprob: -15.250007629394531
    7. 'town' → logprob: -15.750007629394531
    8. '       ' → logprob: -15.750007629394531
    9. ' .' → logprob: -15.875007629394531
    10. '```' → logprob: -16.00000762939453

Token 282: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.0050836107693612576
    2. 'own' → logprob: -5.8800835609436035
    3. 'wn' → logprob: -6.7550835609436035
    4. 'ows' → logprob: -7.7550835609436035
    5. 'town' → logprob: -7.8800835609436035
    6. 'ons' → logprob: -9.380084037780762
    7. '_' → logprob: -10.630084037780762
    8. 'ow' → logprob: -10.880084037780762
    9. '{' → logprob: -11.005084037780762
    10. ' towns' → logprob: -11.005084037780762

Token 283: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.246537173457909e-06
    2. 'b' → logprob: -12.875003814697266
    3. '[' → logprob: -13.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. ' [' → logprob: -16.625003814697266
    6. '       ' → logprob: -17.375003814697266
    7. '[a' → logprob: -17.500003814697266
    8. '```' → logprob: -17.875003814697266
    9. '           ' → logprob: -18.125003814697266
    10. '
' → logprob: -18.625003814697266

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3544423381972592e-05
    2. ']=' → logprob: -11.37501335144043
    3. ' ]' → logprob: -13.25001335144043
    4. ')' → logprob: -16.75001335144043
    5. '"]' → logprob: -17.00001335144043
    6. '']' → logprob: -17.12501335144043
    7. '   ' → logprob: -17.25001335144043
    8. '`]' → logprob: -17.62501335144043
    9. '       ' → logprob: -18.25001335144043
    10. '=' → logprob: -18.50001335144043

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15113744139671326
    2. ' =' → logprob: -2.401137351989746
    3. ']' → logprob: -3.026137351989746
    4. ']=' → logprob: -6.776137351989746
    5. '   ' → logprob: -12.651137351989746
    6. '           ' → logprob: -13.401137351989746
    7. '       ' → logprob: -13.526137351989746
    8. ' ]' → logprob: -13.901137351989746
    9. '[' → logprob: -14.151137351989746
    10. '=b' → logprob: -14.151137351989746

Token 286: ' Town' (ID: 17425)
  Prédit: 'Town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Town' → logprob: -0.029751529917120934
    2. ' Town' → logprob: -3.5297515392303467
    3. 'T' → logprob: -14.404751777648926
    4. '	T' → logprob: -14.779751777648926
    5. 'To' → logprob: -17.40475082397461
    6. '   ' → logprob: -17.52975082397461
    7. '	' → logprob: -17.77975082397461
    8. 'town' → logprob: -17.90475082397461
    9. ' ' → logprob: -18.27975082397461
    10. 'Tour' → logprob: -18.40475082397461

Token 287: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00038229089113883674
    2. 'b' → logprob: -7.875382423400879
    3. ' b' → logprob: -13.875382423400879
    4. '(' → logprob: -14.000382423400879
    5. ' (' → logprob: -15.125382423400879
    6. '(
' → logprob: -15.875382423400879
    7. '(B' → logprob: -16.875381469726562
    8. ')b' → logprob: -18.000381469726562
    9. '	b' → logprob: -18.875381469726562
    10. 's' → logprob: -18.875381469726562

Token 288: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04903478920459747
    2. ')' → logprob: -3.049034833908081
    3. '       ' → logprob: -7.799034595489502
    4. ')
' → logprob: -10.54903507232666
    5. ' )
' → logprob: -12.04903507232666
    6. ')

' → logprob: -12.29903507232666
    7. ' )' → logprob: -15.29903507232666
    8. '   ' → logprob: -15.42403507232666
    9. '
' → logprob: -17.174034118652344
    10. ')`
' → logprob: -17.299034118652344

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007503056549467146
    2. '
' → logprob: -7.625750541687012
    3. ' self' → logprob: -8.625750541687012
    4. 'self' → logprob: -10.125750541687012
    5. '        
' → logprob: -11.625750541687012
    6. ' road' → logprob: -11.750750541687012
    7. '   ' → logprob: -12.375750541687012
    8. '           ' → logprob: -13.000750541687012
    9. '
' → logprob: -13.125750541687012
    10. 'road' → logprob: -13.375750541687012

Token 290: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' (adapté à ' road') → logprob: -0.18533316254615784
    2. 'self' → logprob: -2.435333251953125
    3. ' road' → logprob: -3.060333251953125
    4. ' self' → logprob: -4.310333251953125
    5. '       ' → logprob: -4.435333251953125
    6. 'new' → logprob: -5.060333251953125
    7. ' new' → logprob: -5.810333251953125
    8. 'r' → logprob: -10.560333251953125
    9. '
' → logprob: -11.060333251953125
    10. '   ' → logprob: -11.685333251953125

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. '=self' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.451414108276367
    5. 's' → logprob: -16.576414108276367
    6. '   ' → logprob: -17.701414108276367
    7. '.' → logprob: -17.701414108276367
    8. '	' → logprob: -18.076414108276367
    9. 'w' → logprob: -18.201414108276367
    10. '    ' → logprob: -18.326414108276367

Token 292: ' Road' (ID: 12497)
  Prédit: 'Road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -0.061967797577381134
    2. ' Road' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.436967849731445
    4. 'self' → logprob: -17.561967849731445
    5. '       ' → logprob: -18.936967849731445
    6. 'R' → logprob: -19.936967849731445
    7. ' ' → logprob: -20.311967849731445
    8. 'Rod' → logprob: -20.311967849731445
    9. '	R' → logprob: -20.561967849731445
    10. ' road' → logprob: -20.811967849731445

Token 293: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1875571544806007e-05
    2. 'self' → logprob: -11.500011444091797
    3. '(' → logprob: -13.375011444091797
    4. '(
' → logprob: -16.375011444091797
    5. '(T' → logprob: -17.500011444091797
    6. ' self' → logprob: -19.375011444091797
    7. '(t' → logprob: -19.500011444091797
    8. '=self' → logprob: -20.250011444091797
    9. '(this' → logprob: -20.500011444091797
    10. 'T' → logprob: -20.500011444091797

Token 294: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.625011444091797
    3. ' .' → logprob: -13.000011444091797
    4. 't' → logprob: -15.000011444091797
    5. ').' → logprob: -17.500011444091797
    6. ' towns' → logprob: -17.500011444091797
    7. 'self' → logprob: -17.625011444091797
    8. 's' → logprob: -17.750011444091797
    9. '.T' → logprob: -18.125011444091797
    10. '	t' → logprob: -18.125011444091797

Token 295: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.004691306967288256
    2. 'own' → logprob: -5.754691123962402
    3. 'ows' → logprob: -7.254691123962402
    4. 'wn' → logprob: -9.254691123962402
    5. '.' → logprob: -9.379691123962402
    6. 'ons' → logprob: -9.629691123962402
    7. '{' → logprob: -9.629691123962402
    8. '_' → logprob: -9.879691123962402
    9. '`' → logprob: -10.004691123962402
    10. 'ow' → logprob: -10.129691123962402

Token 296: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.253090865968261e-06
    2. 'a' → logprob: -11.625009536743164
    3. '[' → logprob: -15.625009536743164
    4. '(a' → logprob: -17.875009536743164
    5. ' a' → logprob: -18.250009536743164
    6. '   ' → logprob: -18.500009536743164
    7. ' [' → logprob: -19.125009536743164
    8. '```' → logprob: -19.375009536743164
    9. '[self' → logprob: -19.375009536743164
    10. '[A' → logprob: -19.625009536743164

Token 297: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -4.537180211627856e-05
    2. ']' → logprob: -10.500045776367188
    3. ' ],' → logprob: -11.625045776367188
    4. ',' → logprob: -11.750045776367188
    5. '],
' → logprob: -14.375045776367188
    6. '   ' → logprob: -16.125045776367188
    7. ' ' → logprob: -16.750045776367188
    8. '),' → logprob: -16.750045776367188
    9. ''],' → logprob: -17.000045776367188
    10. '       ' → logprob: -17.375045776367188

Token 298: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011047935113310814
    2. ' self' → logprob: -4.511047840118408
    3. '	self' → logprob: -16.63604736328125
    4. '
' → logprob: -17.63604736328125
    5. '       ' → logprob: -18.51104736328125
    6. ' 
' → logprob: -18.76104736328125
    7. '           ' → logprob: -18.88604736328125
    8. '(self' → logprob: -19.01104736328125
    9. '[self' → logprob: -19.01104736328125
    10. '
' → logprob: -19.51104736328125

Token 299: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.1851792335510254
    2. 't' → logprob: -1.8101792335510254
    3. 'town' → logprob: -5.560179233551025
    4. ' towns' → logprob: -6.935179233551025
    5. 'b' → logprob: -8.810178756713867
    6. '	t' → logprob: -9.310178756713867
    7. '```' → logprob: -9.935178756713867
    8. '.' → logprob: -9.935178756713867
    9. '.b' → logprob: -10.185178756713867
    10. 's' → logprob: -10.935178756713867

Token 300: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.003090132027864456
    2. 'own' → logprob: -6.503089904785156
    3. 'ows' → logprob: -7.753089904785156
    4. 'ons' → logprob: -8.128089904785156
    5. 'wn' → logprob: -8.878089904785156
    6. '_' → logprob: -9.128089904785156
    7. 'town' → logprob: -9.503089904785156
    8. '{' → logprob: -9.878089904785156
    9. ']' → logprob: -10.003089904785156
    10. '[' → logprob: -10.003089904785156

Token 301: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00103995599783957
    2. 'b' → logprob: -6.876039981842041
    3. '[a' → logprob: -13.126039505004883
    4. '[' → logprob: -13.751039505004883
    5. '
' → logprob: -13.876039505004883
    6. '```' → logprob: -14.626039505004883
    7. '[
' → logprob: -14.876039505004883
    8. 'a' → logprob: -15.001039505004883
    9. '[self' → logprob: -15.126039505004883
    10. '   ' → logprob: -15.251039505004883

Token 302: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ' ,' → logprob: -11.250031471252441
    3. '],' → logprob: -11.375031471252441
    4. '),' → logprob: -12.000031471252441
    5. '`,' → logprob: -16.875030517578125
    6. ')' → logprob: -16.875030517578125
    7. '   ' → logprob: -17.125030517578125
    8. '_,' → logprob: -17.500030517578125
    9. '},' → logprob: -17.500030517578125
    10. '‌,' → logprob: -17.750030517578125

Token 303: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5759413838386536
    2. 'cost' → logprob: -0.8259413838386536
    3. '
' → logprob: -14.20094108581543
    4. ' ' → logprob: -15.32594108581543
    5. '_cost' → logprob: -15.82594108581543
    6. '    ' → logprob: -15.95094108581543
    7. '(cost' → logprob: -15.95094108581543
    8. '   ' → logprob: -16.45094108581543
    9. ' 
' → logprob: -16.45094108581543
    10. ' kost' → logprob: -16.82594108581543

Token 304: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029769811779260635
    2. ')' → logprob: -3.5297698974609375
    3. ')
' → logprob: -10.904769897460938
    4. '       ' → logprob: -14.529769897460938
    5. ')

' → logprob: -14.779769897460938
    6. ' )
' → logprob: -15.779769897460938
    7. '   ' → logprob: -17.404769897460938
    8. ')`
' → logprob: -18.404769897460938
    9. ' )' → logprob: -19.904769897460938
    10. ' ' → logprob: -20.029769897460938

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029749644454568624
    2. 'self' → logprob: -6.002974987030029
    3. ' self' → logprob: -7.627974987030029
    4. '   ' → logprob: -11.752974510192871
    5. '
' → logprob: -13.002974510192871
    6. '	self' → logprob: -14.502974510192871
    7. '           ' → logprob: -14.627974510192871
    8. '	' → logprob: -14.877974510192871
    9. ',' → logprob: -15.627974510192871
    10. '```' → logprob: -15.752974510192871

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05499003827571869
    2. ' self' → logprob: -3.05499005317688
    3. '       ' → logprob: -5.054989814758301
    4. '	self' → logprob: -13.1799898147583
    5. '   ' → logprob: -13.8049898147583
    6. ' ' → logprob: -14.3049898147583
    7. '
' → logprob: -14.5549898147583
    8. ' ' → logprob: -15.4299898147583
    9. '        
' → logprob: -15.9299898147583
    10. '```' → logprob: -16.429990768432617

Token 307: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -3.9650025428272784e-05
    2. '.' → logprob: -10.375040054321289
    3. ' .' → logprob: -11.750040054321289
    4. '.s' → logprob: -16.62504005432129
    5. '_ro' → logprob: -16.87504005432129
    6. ').' → logprob: -16.87504005432129
    7. '.rooms' → logprob: -17.00004005432129
    8. 'roads' → logprob: -17.25004005432129
    9. '.rob' → logprob: -17.25004005432129
    10. '`.' → logprob: -17.62504005432129

Token 308: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -1.5048530030981055e-06
    2. ' ads' → logprob: -14.125001907348633
    3. 'a' → logprob: -15.000001907348633
    4. '
' → logprob: -15.625001907348633
    5. '.ads' → logprob: -16.750001907348633
    6. '_ads' → logprob: -17.000001907348633
    7. 'Ads' → logprob: -17.625001907348633
    8. '

' → logprob: -17.875001907348633
    9. 'ad' → logprob: -18.375001907348633
    10. 'ADS' → logprob: -18.375001907348633

Token 309: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.719917630311102e-05
    2. '.' → logprob: -9.500077247619629
    3. '.app' → logprob: -13.750077247619629
    4. '.ap' → logprob: -14.125077247619629
    5. '.push' → logprob: -15.250077247619629
    6. '.add' → logprob: -16.000076293945312
    7. ' .' → logprob: -16.750076293945312
    8. '.Append' → logprob: -17.125076293945312
    9. '.extend' → logprob: -17.375076293945312
    10. 'append' → logprob: -17.500076293945312

Token 310: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(
' → logprob: -16.375
    3. '(ro' → logprob: -18.25
    4. 'road' → logprob: -18.5
    5. '((' → logprob: -19.375
    6. ' (' → logprob: -20.125
    7. '(

' → logprob: -20.375
    8. '(r' → logprob: -22.25
    9. '()' → logprob: -22.625
    10. '(ray' → logprob: -23.375

Token 311: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -1.8624639324116288e-06
    2. ' road' → logprob: -13.250001907348633
    3. 'rod' → logprob: -19.500001907348633
    4. '   ' → logprob: -20.250001907348633
    5. 'roads' → logprob: -20.500001907348633
    6. 'Road' → logprob: -20.625001907348633
    7. 'roof' → logprob: -20.750001907348633
    8. ' ' → logprob: -20.875001907348633
    9. ')' → logprob: -20.875001907348633
    10. '
' → logprob: -21.000001907348633

Token 312: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00512014189735055
    2. '<|end|>' → logprob: -6.005120277404785
    3. ')
' → logprob: -6.130120277404785
    4. '
' → logprob: -7.880120277404785
    5. ' )' → logprob: -9.755120277404785
    6. '       ' → logprob: -11.630120277404785
    7. '<|end|>' → logprob: -12.130120277404785
    8. ')return' → logprob: -12.505120277404785
    9. ' ' → logprob: -13.380120277404785
    10. ')

' → logprob: -13.505120277404785

Token 313: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08413976430892944
    2. '   ' → logprob: -2.709139823913574
    3. '<|end|>' → logprob: -5.084139823913574
    4. '    
' → logprob: -5.209139823913574
    5. 'def' → logprob: -7.084139823913574
    6. '

' → logprob: -7.834139823913574
    7. '<|end|>' → logprob: -8.084139823913574
    8. '  
' → logprob: -8.209139823913574
    9. '```' → logprob: -8.334139823913574
    10. ' 
' → logprob: -9.209139823913574

Token 314: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002545339521020651
    2. ' def' → logprob: -6.502545356750488
    3. '   ' → logprob: -6.877545356750488
    4. '
' → logprob: -12.502545356750488
    5. 'self' → logprob: -12.877545356750488
    6. '    
' → logprob: -13.377545356750488
    7. ' ' → logprob: -13.752545356750488
    8. '	def' → logprob: -14.127545356750488
    9. 'class' → logprob: -14.627545356750488
    10. '```' → logprob: -15.252545356750488

Token 315: ' get' (ID: 717)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.7832880616188049
    2. ' build' → logprob: -1.1582880020141602
    3. ' find' → logprob: -1.9082880020141602
    4. ' get' → logprob: -3.28328800201416
    5. 'build' → logprob: -4.40828800201416
    6. ' minimum' → logprob: -4.65828800201416
    7. 'short' → logprob: -5.28328800201416
    8. ' minimal' → logprob: -5.53328800201416
    9. 'find' → logprob: -6.28328800201416
    10. 'd' → logprob: -6.53328800201416

Token 316: '_t' (ID: 838)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.3480889797210693
    2. '_short' → logprob: -1.3480889797210693
    3. '_adj' → logprob: -2.0980889797210693
    4. '_all' → logprob: -2.3480889797210693
    5. '_ad' → logprob: -2.4730889797210693
    6. '_neighbors' → logprob: -2.5980889797210693
    7. '_ro' → logprob: -3.2230889797210693
    8. '_' → logprob: -3.8480889797210693
    9. '_graph' → logprob: -4.473089218139648
    10. '_connected' → logprob: -5.098089218139648

Token 317: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.08120644092559814
    2. 'owns' → logprob: -2.5812063217163086
    3. 'ow' → logprob: -7.706206321716309
    4. 'o' → logprob: -8.643706321716309
    5. 'ime' → logprob: -9.206206321716309
    6. 'ows' → logprob: -9.331206321716309
    7. 'owners' → logprob: -9.331206321716309
    8. 'op' → logprob: -9.456206321716309
    9. 'he' → logprob: -9.518706321716309
    10. 'h' → logprob: -9.518706321716309

Token 318: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -1.0288468599319458
    2. '(self' → logprob: -1.1538468599319458
    3. '_neighbors' → logprob: -1.5288468599319458
    4. 's' → logprob: -2.6538467407226562
    5. '(' → logprob: -3.9038467407226562
    6. '_connections' → logprob: -4.528846740722656
    7. '_by' → logprob: -5.778846740722656
    8. '_ad' → logprob: -5.903846740722656
    9. '_list' → logprob: -7.153846740722656
    10. '_adj' → logprob: -7.403846740722656

Token 319: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001126026691053994
    2. '(' → logprob: -9.375112533569336
    3. 'self' → logprob: -10.625112533569336
    4. '   ' → logprob: -13.750112533569336
    5. ' (' → logprob: -14.125112533569336
    6. '(
' → logprob: -14.250112533569336
    7. '       ' → logprob: -15.000112533569336
    8. 'def' → logprob: -15.625112533569336
    9. ' ' → logprob: -15.875112533569336
    10. ' self' → logprob: -16.375112533569336

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3906729519367218
    2. 'self' → logprob: -1.1406729221343994
    3. '):' → logprob: -6.1406731605529785
    4. '(self' → logprob: -6.8906731605529785
    5. '):
' → logprob: -7.7656731605529785
    6. ' self' → logprob: -9.26567268371582
    7. ' ' → logprob: -10.51567268371582
    8. '       ' → logprob: -11.26567268371582
    9. ' )' → logprob: -11.26567268371582
    10. 's' → logprob: -11.39067268371582

Token 321: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.456358823925257e-05
    2. 'self' → logprob: -9.875064849853516
    3. '(' → logprob: -11.500064849853516
    4. '   ' → logprob: -13.625064849853516
    5. '       ' → logprob: -13.875064849853516
    6. ' (' → logprob: -15.500064849853516
    7. ')' → logprob: -16.000064849853516
    8. ' ' → logprob: -16.500064849853516
    9. '	self' → logprob: -16.500064849853516
    10. ' ->' → logprob: -16.625064849853516

Token 322: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.25215256214141846
    2. ' List' → logprob: -1.5021525621414185
    3. ' list' → logprob: -9.127152442932129
    4. 'list' → logprob: -9.127152442932129
    5. 'set' → logprob: -13.002152442932129
    6. ' set' → logprob: -13.502152442932129
    7. '   ' → logprob: -14.002152442932129
    8. 'self' → logprob: -14.627152442932129
    9. ' ' → logprob: -14.752152442932129
    10. '_list' → logprob: -15.502152442932129

Token 323: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -11.125041007995605
    3. 'int' → logprob: -11.500041007995605
    4. '[self' → logprob: -11.875041007995605
    5. '[Int' → logprob: -12.875041007995605
    6. '[in' → logprob: -13.000041007995605
    7. '(int' → logprob: -13.125041007995605
    8. '<int' → logprob: -14.250041007995605
    9. '()' → logprob: -14.250041007995605
    10. '[i' → logprob: -15.500041007995605

Token 324: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5433745384216309
    2. '):
' → logprob: -1.2933745384216309
    3. '():
' → logprob: -2.668374538421631
    4. 'self' → logprob: -3.543374538421631
    5. '):' → logprob: -3.793374538421631
    6. ']:
' → logprob: -4.543374538421631
    7. '():' → logprob: -5.043374538421631
    8. ')' → logprob: -6.043374538421631
    9. ']:' → logprob: -6.293374538421631
    10. ']' → logprob: -6.918374538421631

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005924708093516529
    2. 'return' → logprob: -8.125592231750488
    3. ' return' → logprob: -8.125592231750488
    4. '   ' → logprob: -14.875592231750488
    5. '[]' → logprob: -16.750593185424805
    6. '      ' → logprob: -17.125593185424805
    7. '[' → logprob: -17.375593185424805
    8. '	' → logprob: -18.375593185424805
    9. '     ' → logprob: -18.375593185424805
    10. '```' → logprob: -18.500593185424805

Token 326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20343804359436035
    2. '       ' → logprob: -1.7034380435943604
    3. ' return' → logprob: -6.203437805175781
    4. '   ' → logprob: -15.953437805175781
    5. '	return' → logprob: -16.45343780517578
    6. '```' → logprob: -17.70343780517578
    7. ' ' → logprob: -19.45343780517578
    8. '      ' → logprob: -19.45343780517578
    9. '           ' → logprob: -19.45343780517578
    10. '     ' → logprob: -19.95343780517578

Token 327: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4897533357143402
    2. 'list' → logprob: -0.9897533655166626
    3. ' sorted' → logprob: -4.739753246307373
    4. 'sorted' → logprob: -4.989753246307373
    5. '[list' → logprob: -12.114753723144531
    6. '   ' → logprob: -15.114753723144531
    7. '[' → logprob: -16.23975372314453
    8. '	list' → logprob: -17.23975372314453
    9. ' [' → logprob: -17.36475372314453
    10. '(list' → logprob: -17.48975372314453

Token 328: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021831797494087368
    2. '(list' → logprob: -8.750218391418457
    3. '(' → logprob: -9.750218391418457
    4. '([' → logprob: -13.875218391418457
    5. 'self' → logprob: -14.625218391418457
    6. '((' → logprob: -16.00021743774414
    7. '(
' → logprob: -16.87521743774414
    8. ' (' → logprob: -17.37521743774414
    9. 'list' → logprob: -18.25021743774414
    10. '[self' → logprob: -18.75021743774414

Token 329: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -2.3080716346157715e-05
    2. ' .' → logprob: -11.000022888183594
    3. '.' → logprob: -12.250022888183594
    4. 'self' → logprob: -14.125022888183594
    5. ').' → logprob: -14.625022888183594
    6. '
' → logprob: -17.000022888183594
    7. 't' → logprob: -17.000022888183594
    8. '`.' → logprob: -17.125022888183594
    9. '.ro' → logprob: -17.250022888183594
    10. '	t' → logprob: -17.375022888183594

Token 330: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.12996914982795715
    2. '.' → logprob: -2.6299691200256348
    3. '.t' → logprob: -3.2549691200256348
    4. 'own' → logprob: -4.629969120025635
    5. 'ows' → logprob: -7.004969120025635
    6. 'wn' → logprob: -9.379969596862793
    7. '{' → logprob: -9.379969596862793
    8. '._' → logprob: -10.254969596862793
    9. 'town' → logprob: -10.379969596862793
    10. '.s' → logprob: -10.504969596862793

Token 331: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.0003192578151356429
    2. ')' → logprob: -8.125319480895996
    3. '().' → logprob: -11.625319480895996
    4. '.' → logprob: -12.125319480895996
    5. ' .' → logprob: -12.375319480895996
    6. '.values' → logprob: -12.500319480895996
    7. '.Keys' → logprob: -15.250319480895996
    8. 'keys' → logprob: -15.750319480895996
    9. ').' → logprob: -15.875319480895996
    10. ' )' → logprob: -16.00031852722168

Token 332: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000647029432002455
    2. '()' → logprob: -7.500647068023682
    3. ')' → logprob: -9.375646591186523
    4. '())
' → logprob: -12.125646591186523
    5. ' ())' → logprob: -12.875646591186523
    6. '()
' → logprob: -14.625646591186523
    7. '()]' → logprob: -15.250646591186523
    8. '(),' → logprob: -15.375646591186523
    9. '()))' → logprob: -16.375646591186523
    10. '();)' → logprob: -16.750646591186523

Token 333: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7291686534881592
    2. 'def' → logprob: -0.7291686534881592
    3. '   ' → logprob: -3.604168653488159
    4. '    
' → logprob: -5.729168891906738
    5. ' def' → logprob: -6.479168891906738
    6. '

' → logprob: -6.729168891906738
    7. '  
' → logprob: -7.354168891906738
    8. '```' → logprob: -7.729168891906738
    9. '<|end|>' → logprob: -8.479168891906738
    10. ')' → logprob: -8.479168891906738

Token 334: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020056030189152807
    2. ' def' → logprob: -9.125200271606445
    3. '   ' → logprob: -9.500200271606445
    4. '
' → logprob: -11.125200271606445
    5. '    
' → logprob: -13.500200271606445
    6. '	def' → logprob: -15.375200271606445
    7. '  
' → logprob: -16.000200271606445
    8. '

' → logprob: -16.125200271606445
    9. 'class' → logprob: -16.875200271606445
    10. ' ' → logprob: -17.000200271606445

Token 335: ' shortest' (ID: 70564)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.32158395648002625
    2. ' get' → logprob: -2.3215839862823486
    3. 'build' → logprob: -2.3215839862823486
    4. ' find' → logprob: -3.0715839862823486
    5. ' shortest' → logprob: -4.6965837478637695
    6. 'get' → logprob: -5.1965837478637695
    7. 'find' → logprob: -6.1965837478637695
    8. ' compute' → logprob: -6.3215837478637695
    9. ' minimum' → logprob: -6.4465837478637695
    10. 'd' → logprob: -6.4465837478637695

Token 336: '_paths' (ID: 56992)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00412233080714941
    2. '_paths' → logprob: -5.504122257232666
    3. '_distance' → logprob: -10.754122734069824
    4. '_' → logprob: -11.379122734069824
    5. '_route' → logprob: -12.004122734069824
    6. '_dist' → logprob: -12.754122734069824
    7. '_ro' → logprob: -14.254122734069824
    8. 'path' → logprob: -14.754122734069824
    9. '_connection' → logprob: -15.129122734069824
    10. '_routes' → logprob: -15.879122734069824

Token 337: '_from' (ID: 12526)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03862452879548073
    2. '(' → logprob: -3.2886245250701904
    3. 'self' → logprob: -8.03862476348877
    4. ' (' → logprob: -9.03862476348877
    5. 'from' → logprob: -9.53862476348877
    6. '   ' → logprob: -10.03862476348877
    7. '(
' → logprob: -11.28862476348877
    8. '_from' → logprob: -12.66362476348877
    9. ' self' → logprob: -13.16362476348877
    10. '       ' → logprob: -13.16362476348877

Token 338: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002889874158427119
    2. 'self' → logprob: -8.750288963317871
    3. '(' → logprob: -9.000288963317871
    4. 'def' → logprob: -12.625288963317871
    5. ' self' → logprob: -13.875288963317871
    6. ' (' → logprob: -14.250288963317871
    7. '(
' → logprob: -14.625288963317871
    8. '   ' → logprob: -15.500288963317871
    9. '(s' → logprob: -15.875288963317871
    10. '_city' → logprob: -15.875288963317871

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11546914279460907
    2. '(self' → logprob: -2.490469217300415
    3. 'self' → logprob: -3.740469217300415
    4. ')' → logprob: -6.365468978881836
    5. ' (' → logprob: -8.740468978881836
    6. ' self' → logprob: -8.990468978881836
    7. ' ,' → logprob: -9.115468978881836
    8. '   ' → logprob: -9.115468978881836
    9. 'def' → logprob: -9.615468978881836
    10. ')(' → logprob: -9.865468978881836

Token 340: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4983091354370117
    2. 'start' → logprob: -2.1233091354370117
    3. ' start' → logprob: -2.1233091354370117
    4. ' self' → logprob: -2.3733091354370117
    5. 'source' → logprob: -3.2483091354370117
    6. ' source' → logprob: -3.9983091354370117
    7. '   ' → logprob: -6.998309135437012
    8. '       ' → logprob: -7.373309135437012
    9. 'src' → logprob: -7.373309135437012
    10. ')' → logprob: -7.873309135437012

Token 341: '_id' (ID: 1537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060926031321287155
    2. '):' → logprob: -3.8109259605407715
    3. 'self' → logprob: -4.4359259605407715
    4. '_:' → logprob: -4.9359259605407715
    5. ')' → logprob: -5.1859259605407715
    6. '_id' → logprob: -5.3109259605407715
    7. '(self' → logprob: -5.9359259605407715
    8. '_t' → logprob: -6.6859259605407715
    9. '   ' → logprob: -6.9359259605407715
    10. ',' → logprob: -6.9359259605407715

Token 342: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0350983701646328
    2. ')' → logprob: -3.5350983142852783
    3. '):' → logprob: -5.535098552703857
    4. 'self' → logprob: -6.910098552703857
    5. '):
' → logprob: -8.7850980758667
    6. ' :' → logprob: -9.9100980758667
    7. ':int' → logprob: -9.9100980758667
    8. ' )' → logprob: -10.2850980758667
    9. '(self' → logprob: -10.7850980758667
    10. ' ' → logprob: -10.7850980758667

Token 343: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5761149525642395
    2. ' int' → logprob: -0.8261149525642395
    3. ')' → logprob: -8.701114654541016
    4. ':int' → logprob: -12.951114654541016
    5. ' )' → logprob: -13.201114654541016
    6. ' ' → logprob: -13.826114654541016
    7. '(int' → logprob: -13.826114654541016
    8. '   ' → logprob: -13.951114654541016
    9. '[int' → logprob: -14.701114654541016
    10. '	int' → logprob: -15.451114654541016

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ' )' → logprob: -11.62501335144043
    3. '   ' → logprob: -12.87501335144043
    4. 'self' → logprob: -14.37501335144043
    5. ',' → logprob: -14.62501335144043
    6. '):' → logprob: -14.75001335144043
    7. '       ' → logprob: -15.25001335144043
    8. ' ' → logprob: -16.75001335144043
    9. '):
' → logprob: -16.75001335144043
    10. ':' → logprob: -18.12501335144043

Token 345: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37815359234809875
    2. '->' → logprob: -1.5031535625457764
    3. ' ->' → logprob: -2.5031535625457764
    4. '(self' → logprob: -5.0031538009643555
    5. '       ' → logprob: -6.8781538009643555
    6. ':' → logprob: -6.8781538009643555
    7. ')->' → logprob: -7.0031538009643555
    8. '   ' → logprob: -7.7531538009643555
    9. 'self' → logprob: -8.503153800964355
    10. ',' → logprob: -8.503153800964355

Token 346: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.001933397026732564
    2. ' Dict' → logprob: -6.251933574676514
    3. 'List' → logprob: -12.501933097839355
    4. 'dict' → logprob: -14.001933097839355
    5. 'Tuple' → logprob: -15.126933097839355
    6. '   ' → logprob: -17.251934051513672
    7. '_dict' → logprob: -18.126934051513672
    8. ' dict' → logprob: -18.376934051513672
    9. '.Dict' → logprob: -19.501934051513672
    10. ' ' → logprob: -20.001934051513672

Token 347: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.375
    3. '<int' → logprob: -17.375
    4. '[Int' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '[in' → logprob: -19.375
    7. '[' → logprob: -19.625
    8. '(int' → logprob: -19.625
    9. '[
' → logprob: -20.0
    10. '```' → logprob: -20.0

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001732663222355768
    2. ',int' → logprob: -8.750173568725586
    3. 'int' → logprob: -11.625173568725586
    4. ' ,' → logprob: -12.500173568725586
    5. ',float' → logprob: -14.000173568725586
    6. '[int' → logprob: -14.125173568725586
    7. ',
' → logprob: -16.000173568725586
    8. ':int' → logprob: -16.125173568725586
    9. ']int' → logprob: -16.500173568725586
    10. ',List' → logprob: -16.625173568725586

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000654654751997441
    2. 'Tuple' → logprob: -7.750654697418213
    3. ' int' → logprob: -8.500654220581055
    4. 'float' → logprob: -11.375654220581055
    5. 'List' → logprob: -13.000654220581055
    6. 'Optional' → logprob: -13.000654220581055
    7. '[int' → logprob: -13.250654220581055
    8. ' Tuple' → logprob: -13.750654220581055
    9. '	int' → logprob: -14.375654220581055
    10. 'Road' → logprob: -14.750654220581055

Token 350: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16496004164218903
    2. ']:
' → logprob: -1.9149600267410278
    3. '):' → logprob: -6.414959907531738
    4. '):
' → logprob: -6.664959907531738
    5. '}:' → logprob: -7.414959907531738
    6. ']:
' → logprob: -7.664959907531738
    7. ':' → logprob: -8.164959907531738
    8. ']' → logprob: -8.539959907531738
    9. '   ' → logprob: -9.164959907531738
    10. '       ' → logprob: -9.664959907531738

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009108719415962696
    2. 'dist' → logprob: -5.134108543395996
    3. ' distances' → logprob: -5.884108543395996
    4. '   ' → logprob: -8.259108543395996
    5. 'distance' → logprob: -9.259108543395996
    6. 'visited' → logprob: -11.259108543395996
    7. ' dist' → logprob: -11.259108543395996
    8. ' distance' → logprob: -12.509108543395996
    9. '```' → logprob: -13.009108543395996
    10. 'import' → logprob: -13.634108543395996

Token 352: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001217974815517664
    2. '       ' → logprob: -6.751217842102051
    3. 'import' → logprob: -11.12621784210205
    4. 'distance' → logprob: -11.37621784210205
    5. ' distances' → logprob: -11.62621784210205
    6. 'INF' → logprob: -11.75121784210205
    7. '   ' → logprob: -13.62621784210205
    8. '#' (adapté à ' #') → logprob: -14.37621784210205
    9. ' dist' → logprob: -14.37621784210205
    10. 'inf' → logprob: -14.37621784210205

Token 353: ' D' (ID: 415)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009357459843158722
    2. ' distances' → logprob: -5.259357452392578
    3. ' dist' → logprob: -6.134357452392578
    4. 'import' → logprob: -7.009357452392578
    5. '       ' → logprob: -7.509357452392578
    6. '   ' → logprob: -8.259357452392578
    7. ' import' → logprob: -9.259357452392578
    8. 'distance' → logprob: -9.634357452392578
    9. 'INF' → logprob: -10.009357452392578
    10. 'graph' → logprob: -11.509357452392578

Token 354: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.023500405251979828
    2. 'ist' → logprob: -4.148500442504883
    3. 'istance' → logprob: -5.898500442504883
    4. '   ' → logprob: -6.273500442504883
    5. 'ijk' → logprob: -6.523500442504883
    6. 'ists' → logprob: -7.023500442504883
    7. '       ' → logprob: -8.648500442504883
    8. 'j' → logprob: -9.648500442504883
    9. 'is' → logprob: -9.648500442504883
    10. 'ij' → logprob: -10.273500442504883

Token 355: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4760023057460785
    2. '(self' → logprob: -1.7260023355484009
    3. ''s' → logprob: -1.9760023355484009
    4. '   ' → logprob: -3.2260022163391113
    5. 'self' → logprob: -4.601002216339111
    6. 'def' → logprob: -5.351002216339111
    7. '(
' → logprob: -6.726002216339111
    8. '           ' → logprob: -6.976002216339111
    9. ' distances' → logprob: -7.101002216339111
    10. '        
' → logprob: -7.601002216339111

Token 356: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.09498725831508636
    2. 'algorithm' → logprob: -2.469987154006958
    3. '_algorithm' → logprob: -5.594987392425537
    4. 'Algorithm' → logprob: -6.969987392425537
    5. '
' → logprob: -7.469987392425537
    6. '   ' → logprob: -8.344986915588379
    7. 'def' → logprob: -8.719986915588379
    8. ' Algorithm' → logprob: -8.969986915588379
    9. 'import' → logprob: -9.094986915588379
    10. '       ' → logprob: -10.094986915588379

Token 357: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12791764736175537
    2. '       ' → logprob: -2.127917766571045
    3. '        
' → logprob: -7.627917766571045
    4. '
' → logprob: -8.252917289733887
    5. '```' → logprob: -9.752917289733887
    6. ':
' → logprob: -10.252917289733887
    7. ',' → logprob: -10.752917289733887
    8. '  
' → logprob: -10.752917289733887
    9. ':' → logprob: -11.377917289733887
    10. '    
' → logprob: -11.502917289733887

Token 358: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.3874625563621521
    2. 'short' → logprob: -1.1374626159667969
    3. 'finding' → logprob: -7.887462615966797
    4. 'single' → logprob: -9.637462615966797
    5. 'Shortest' → logprob: -9.887462615966797
    6. ' short' → logprob: -10.262462615966797
    7. ' finding' → logprob: -11.137462615966797
    8. 'comput' → logprob: -11.762462615966797
    9. ' single' → logprob: -11.762462615966797
    10. 'self' → logprob: -12.012462615966797

Token 359: ' paths' (ID: 23373)
  Prédit: ' paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.5448060631752014
    2. ' path' → logprob: -2.0448060035705566
    3. '_paths' → logprob: -2.2948060035705566
    4. 'paths' → logprob: -2.5448060035705566
    5. '_path' → logprob: -3.1698060035705566
    6. 'path' → logprob: -3.4198060035705566
    7. ' distances' → logprob: -3.5448060035705566
    8. 'dist' → logprob: -5.419806003570557
    9. '   ' → logprob: -6.419806003570557
    10. '_dist' → logprob: -7.794806003570557

Token 360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04710574820637703
    2. '
' → logprob: -3.5471057891845703
    3. ' distances' → logprob: -4.54710578918457
    4. 'dist' → logprob: -5.42210578918457
    5. 'distance' → logprob: -6.42210578918457
    6. '        
' → logprob: -8.29710578918457
    7. '```' → logprob: -8.67210578918457
    8. '   ' → logprob: -10.17210578918457
    9. '
' → logprob: -10.79710578918457
    10. ' distance' → logprob: -11.04710578918457

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02377982810139656
    2. ' distances' → logprob: -4.02377986907959
    3. 'dist' → logprob: -5.27377986907959
    4. 'distance' → logprob: -8.52377986907959
    5. '   ' → logprob: -9.02377986907959
    6. '        
' → logprob: -9.52377986907959
    7. ' dist' → logprob: -10.39877986907959
    8. '
' → logprob: -10.52377986907959
    9. ' distance' → logprob: -11.77377986907959
    10. '      ' → logprob: -12.14877986907959

Token 362: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.007122157607227564
    2. '       ' → logprob: -5.257122039794922
    3. ' distances' → logprob: -6.382122039794922
    4. ' dist' → logprob: -9.132122039794922
    5. 'import' → logprob: -9.757122039794922
    6. 'distance' → logprob: -11.007122039794922
    7. '   ' → logprob: -12.007122039794922
    8. ' import' → logprob: -13.132122039794922
    9. 'd' → logprob: -13.757122039794922
    10. 'graph' → logprob: -13.882122039794922

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027676256373524666
    2. 'ances' → logprob: -3.7776763439178467
    3. '=' → logprob: -6.277676105499268
    4. 'ance' → logprob: -6.527676105499268
    5. '   ' → logprob: -7.027676105499268
    6. ':' → logprob: -9.152676582336426
    7. ' ' → logprob: -9.777676582336426
    8. '       ' → logprob: -11.902676582336426
    9. '  ' → logprob: -11.902676582336426
    10. '[' → logprob: -13.027676582336426

Token 364: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.2127087504486553e-05
    2. ' {' → logprob: -10.750021934509277
    3. '{id' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.875021934509277
    5. '{i' → logprob: -16.750022888183594
    6. '{k' → logprob: -16.875022888183594
    7. '{name' → logprob: -17.375022888183594
    8. '{}' → logprob: -17.625022888183594
    9. '{x' → logprob: -17.625022888183594
    10. '{
' → logprob: -17.625022888183594

Token 365: 'tid' (ID: 24066)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.03678717091679573
    2. 'tid' → logprob: -3.536787271499634
    3. 'node' → logprob: -5.036787033081055
    4. 'key' → logprob: -8.411787033081055
    5. 'id' → logprob: -9.411787033081055
    6. 'nid' → logprob: -9.536787033081055
    7. 'k' → logprob: -9.911787033081055
    8. 'v' → logprob: -10.536787033081055
    9. ' town' → logprob: -10.661787033081055
    10. 't' → logprob: -10.911787033081055

Token 366: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011403311509639025
    2. ' :' → logprob: -9.125114440917969
    3. 'for' → logprob: -13.375114440917969
    4. '   ' → logprob: -13.750114440917969
    5. ' for' → logprob: -14.625114440917969
    6. '       ' → logprob: -15.375114440917969
    7. ' ' → logprob: -15.500114440917969
    8. ':self' → logprob: -15.625114440917969
    9. '=' → logprob: -15.875114440917969
    10. ':start' → logprob: -15.875114440917969

Token 367: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.9361264946837764e-07
    2. ' float' → logprob: -16.125
    3. '   ' → logprob: -17.875
    4. '(float' → logprob: -19.0
    5. 'int' → logprob: -20.25
    6. '	float' → logprob: -20.75
    7. '10' → logprob: -20.875
    8. '
' → logprob: -21.125
    9. '<float' → logprob: -21.125
    10. 'flo' → logprob: -21.125

Token 368: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.03521392197581e-05
    2. '("' → logprob: -10.500030517578125
    3. '(' → logprob: -13.375030517578125
    4. ''' → logprob: -14.500030517578125
    5. ''in' → logprob: -14.500030517578125
    6. '('+' → logprob: -17.500030517578125
    7. '   ' → logprob: -17.625030517578125
    8. '}' → logprob: -17.875030517578125
    9. '(in' → logprob: -18.000030517578125
    10. 'inf' → logprob: -18.000030517578125

Token 369: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. 'in' → logprob: -16.75
    3. ''' → logprob: -17.5
    4. 'info' → logprob: -18.75
    5. ''in' → logprob: -20.875
    6. ' inf' → logprob: -21.875
    7. '('' → logprob: -22.25
    8. '_inf' → logprob: -22.25
    9. 'Inf' → logprob: -23.5
    10. '')' → logprob: -23.625

Token 370: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34854960441589355
    2. '')' → logprob: -1.2235496044158936
    3. ' )' → logprob: -9.473549842834473
    4. '}' → logprob: -11.973549842834473
    5. '")' → logprob: -12.223549842834473
    6. '   ' → logprob: -12.348549842834473
    7. ' ')' → logprob: -12.473549842834473
    8. '       ' → logprob: -13.473549842834473
    9. ' ' → logprob: -13.973549842834473
    10. '}')' → logprob: -14.098549842834473

Token 371: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01695377007126808
    2. 'for' → logprob: -4.266953945159912
    3. ',' → logprob: -5.891953945159912
    4. ' ' → logprob: -11.266953468322754
    5. '   ' → logprob: -12.141953468322754
    6. '	for' → logprob: -13.016953468322754
    7. '}' → logprob: -13.266953468322754
    8. ')' → logprob: -13.516953468322754
    9. '    ' → logprob: -14.891953468322754
    10. ' ,' → logprob: -15.141953468322754

Token 372: ' tid' (ID: 8692)
  Prédit: 'tid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -0.003606959478929639
    2. ' tid' → logprob: -5.628606796264648
    3. '_tid' → logprob: -12.128606796264648
    4. 't' → logprob: -14.128606796264648
    5. '	t' → logprob: -15.378606796264648
    6. '
' → logprob: -16.00360679626465
    7. 'Tid' → logprob: -16.37860679626465
    8. 'ted' → logprob: -16.75360679626465
    9. 'ti' → logprob: -16.75360679626465
    10. '   ' → logprob: -17.75360679626465

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023317337036132812
    2. 'in' → logprob: -3.773317337036133
    3. ' ' → logprob: -10.898317337036133
    4. 't' → logprob: -11.023317337036133
    5. 'tid' → logprob: -11.523317337036133
    6. ',' → logprob: -12.398317337036133
    7. 'self' → logprob: -12.398317337036133
    8. 's' → logprob: -12.523317337036133
    9. 'i' → logprob: -13.023317337036133
    10. ' ' → logprob: -13.960817337036133

Token 374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031791406217962503
    2. ' self' → logprob: -5.75317907333374
    3. '(self' → logprob: -14.003179550170898
    4. '=self' → logprob: -15.378179550170898
    5. '	self' → logprob: -16.2531795501709
    6. '   ' → logprob: -16.3781795501709
    7. '[self' → logprob: -16.3781795501709
    8. '
' → logprob: -16.8781795501709
    9. 'dist' → logprob: -16.8781795501709
    10. ' ' → logprob: -17.5031795501709

Token 375: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -4.656383680412546e-05
    2. 't' → logprob: -10.750046730041504
    3. ' .' → logprob: -11.125046730041504
    4. '.' → logprob: -12.250046730041504
    5. ' towns' → logprob: -13.625046730041504
    6. '	t' → logprob: -14.000046730041504
    7. 'town' → logprob: -14.250046730041504
    8. ').' → logprob: -15.125046730041504
    9. 's' → logprob: -15.250046730041504
    10. '_t' → logprob: -15.375046730041504

Token 376: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.00357025396078825
    2. 'own' → logprob: -6.378570079803467
    3. 'ows' → logprob: -6.753570079803467
    4. '{' → logprob: -8.753570556640625
    5. 'town' → logprob: -9.628570556640625
    6. '.' → logprob: -10.128570556640625
    7. 'ons' → logprob: -10.128570556640625
    8. 'wn' → logprob: -10.503570556640625
    9. '[' → logprob: -10.503570556640625
    10. 'ow' → logprob: -10.691070556640625

Token 377: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0009018116979859769
    2. '.keys' → logprob: -7.250901699066162
    3. ' }' → logprob: -9.50090217590332
    4. '}
' → logprob: -9.50090217590332
    5. '.values' → logprob: -10.50090217590332
    6. '   ' → logprob: -12.12590217590332
    7. 'keys' → logprob: -12.25090217590332
    8. ' ' → logprob: -13.50090217590332
    9. '       ' → logprob: -14.62590217590332
    10. '.' → logprob: -14.87590217590332

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10951515287160873
    2. '
' → logprob: -2.4845151901245117
    3. 'dist' → logprob: -4.484515190124512
    4. '        
' → logprob: -5.609515190124512
    5. ' dist' → logprob: -6.109515190124512
    6. '   ' → logprob: -7.609515190124512
    7. ' 
' → logprob: -7.734515190124512
    8. '' → logprob: -7.984515190124512
    9. '[' → logprob: -8.234515190124512
    10. '    
' → logprob: -8.484515190124512

Token 379: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.25193139910697937
    2. ' dist' → logprob: -1.5019314289093018
    3. '       ' → logprob: -13.501931190490723
    4. '	dist' → logprob: -14.626931190490723
    5. '_dist' → logprob: -14.751931190490723
    6. 'Dist' → logprob: -17.50193214416504
    7. '.dist' → logprob: -17.75193214416504
    8. '```' → logprob: -18.00193214416504
    9. '(dist' → logprob: -18.50193214416504
    10. '        
' → logprob: -19.00193214416504

Token 380: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00017994173686020076
    2. '[' → logprob: -8.6251802444458
    3. '[end' → logprob: -15.6251802444458
    4. '```' → logprob: -16.375179290771484
    5. '[current' → logprob: -17.750179290771484
    6. 'start' → logprob: -18.000179290771484
    7. '[src' → logprob: -18.125179290771484
    8. '=start' → logprob: -18.125179290771484
    9. '[now' → logprob: -18.500179290771484
    10. '[s' → logprob: -18.625179290771484

Token 381: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.696889623621246e-06
    2. ' _' → logprob: -14.00000286102295
    3. '_' → logprob: -14.62500286102295
    4. '_ids' → logprob: -14.75000286102295
    5. '```' → logprob: -15.25000286102295
    6. 'id' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.125001907348633
    8. '_i' → logprob: -16.500001907348633
    9. ')' → logprob: -16.750001907348633
    10. ']' → logprob: -17.250001907348633

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.7729658540920354e-05
    2. ' ]' → logprob: -10.500027656555176
    3. ']=' → logprob: -15.750027656555176
    4. ')' → logprob: -20.125028610229492
    5. ']
' → logprob: -20.750028610229492
    6. '']' → logprob: -21.250028610229492
    7. '}' → logprob: -21.375028610229492
    8. '`]' → logprob: -21.500028610229492
    9. '"]' → logprob: -21.875028610229492
    10. '   ' → logprob: -22.125028610229492

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ')' → logprob: -16.578889846801758
    4. '[' → logprob: -17.328889846801758
    5. ']' → logprob: -17.453889846801758
    6. ',' → logprob: -18.203889846801758
    7. ' ' → logprob: -18.203889846801758
    8. ' ' → logprob: -18.703889846801758
    9. '   ' → logprob: -18.703889846801758
    10. '.=' → logprob: -18.953889846801758

Token 384: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -20.0
    4. '   ' → logprob: -20.5
    5. '00' → logprob: -22.0
    6. '```' → logprob: -22.25
    7. '
' → logprob: -22.625
    8. '０' → logprob: -22.875
    9. ' ' → logprob: -22.875
    10. '000' → logprob: -23.3125

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -20.75
    4. '
' → logprob: -22.5
    5. '０' → logprob: -23.5
    6. '00' → logprob: -23.625
    7. '   ' → logprob: -23.625
    8. '000' → logprob: -23.75
    9. '٠' → logprob: -23.875
    10. '```' → logprob: -23.875

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016992862219922245
    2. 'heap' → logprob: -9.75016975402832
    3. '   ' → logprob: -9.87516975402832
    4. '
' → logprob: -10.87516975402832
    5. 'priority' → logprob: -11.37516975402832
    6. 'queue' → logprob: -11.37516975402832
    7. 'pq' → logprob: -11.50016975402832
    8. '	' → logprob: -13.12516975402832
    9. '        
' → logprob: -13.62516975402832
    10. ' heap' → logprob: -13.62516975402832

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011475988430902362
    2. ' heap' → logprob: -7.751147747039795
    3. '   ' → logprob: -8.251147270202637
    4. 'heap' → logprob: -8.626147270202637
    5. 'pq' → logprob: -9.376147270202637
    6. ' queue' → logprob: -10.126147270202637
    7. ' priority' → logprob: -10.126147270202637
    8. '	' → logprob: -10.376147270202637
    9. 'priority' → logprob: -10.376147270202637
    10. 'queue' → logprob: -10.501147270202637

Token 388: ' queue' (ID: 13661)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.11328043788671494
    2. 'pq' → logprob: -2.3632805347442627
    3. 'queue' (adapté à ' queue') → logprob: -4.363280296325684
    4. 'hq' → logprob: -8.863280296325684
    5. ' heap' → logprob: -9.613280296325684
    6. 'priority' → logprob: -10.863280296325684
    7. '       ' → logprob: -10.988280296325684
    8. '   ' → logprob: -12.488280296325684
    9. ' pq' → logprob: -13.488280296325684
    10. '```' → logprob: -13.738280296325684

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015047440538182855
    2. '=' → logprob: -6.501504898071289
    3. ' ' → logprob: -13.876504898071289
    4. ':' → logprob: -14.376504898071289
    5. '=[]' → logprob: -15.001504898071289
    6. ' =
' → logprob: -15.251504898071289
    7. ' =[' → logprob: -16.00150489807129
    8. ',' → logprob: -16.37650489807129
    9. '   ' → logprob: -16.62650489807129
    10. '=[]
' → logprob: -17.37650489807129

Token 390: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00015860427811276168
    2. ' [(' → logprob: -8.750158309936523
    3. '[]' → logprob: -17.250158309936523
    4. '[]
' → logprob: -19.125158309936523
    5. '[((' → logprob: -19.500158309936523
    6. '[' → logprob: -19.500158309936523
    7. '[
' → logprob: -21.750158309936523
    8. '([(' → logprob: -22.125158309936523
    9. ' ' → logprob: -23.000158309936523
    10. '   ' → logprob: -24.000158309936523

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. 'dist' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.750001907348633
    5. ')' → logprob: -17.875001907348633
    6. '
' → logprob: -18.000001907348633
    7. 'start' → logprob: -19.125001907348633
    8. '       ' → logprob: -19.312501907348633
    9. '           ' → logprob: -19.375001907348633
    10. '۰' → logprob: -19.500001907348633

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010998018842656165
    2. ',start' → logprob: -9.250109672546387
    3. ' ,' → logprob: -11.500109672546387
    4. '<|end|>' → logprob: -13.375109672546387
    5. ')' → logprob: -14.250109672546387
    6. ',
' → logprob: -14.500109672546387
    7. 'start' → logprob: -16.250110626220703
    8. '[start' → logprob: -16.375110626220703
    9. ',user' → logprob: -16.375110626220703
    10. '‌,' → logprob: -16.500110626220703

Token 393: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009148012613877654
    2. ' start' → logprob: -7.000914573669434
    3. 'self' → logprob: -12.750914573669434
    4. '[start' → logprob: -15.250914573669434
    5. '	start' → logprob: -17.25091552734375
    6. '(start' → logprob: -17.25091552734375
    7. 'star' → logprob: -17.62591552734375
    8. ')' → logprob: -18.25091552734375
    9. '   ' → logprob: -18.25091552734375
    10. '_start' → logprob: -18.37591552734375

Token 394: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.2664456789934775e-06
    2. 'id' → logprob: -13.750000953674316
    3. '```' → logprob: -17.500001907348633
    4. 'Id' → logprob: -17.750001907348633
    5. 'start' → logprob: -17.875001907348633
    6. '_ids' → logprob: -18.000001907348633
    7. 't' → logprob: -18.375001907348633
    8. ')' → logprob: -18.625001907348633
    9. '_' → logprob: -18.750001907348633
    10. '_start' → logprob: -19.250001907348633

Token 395: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001549089647596702
    2. ')]
' → logprob: -9.000154495239258
    3. ')' → logprob: -10.500154495239258
    4. ' )' → logprob: -13.750154495239258
    5. '),' → logprob: -14.125154495239258
    6. ',' → logprob: -14.625154495239258
    7. ')]

' → logprob: -14.750154495239258
    8. '))' → logprob: -15.250154495239258
    9. ')]
' → logprob: -15.250154495239258
    10. ']' → logprob: -15.375154495239258

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.263324499130249
    2. ' while' → logprob: -2.013324499130249
    3. 'while' → logprob: -2.513324499130249
    4. '   ' → logprob: -4.763324737548828
    5. '
' → logprob: -5.888324737548828
    6. '	while' → logprob: -5.888324737548828
    7. ')' → logprob: -6.638324737548828
    8. ',' → logprob: -7.638324737548828
    9. '```' → logprob: -8.138324737548828
    10. '<|end|>' → logprob: -8.388324737548828

Token 397: ' adjacency' (ID: 177015)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15272405743598938
    2. '       ' → logprob: -2.277724027633667
    3. ' while' → logprob: -3.277724027633667
    4. '	while' → logprob: -7.152724266052246
    5. '   ' → logprob: -8.527724266052246
    6. '
' → logprob: -8.777724266052246
    7. 'heap' → logprob: -8.902724266052246
    8. '	' → logprob: -9.402724266052246
    9. '        
' → logprob: -10.777724266052246
    10. '```' → logprob: -11.652724266052246

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19870813190937042
    2. '_list' → logprob: -1.948708176612854
    3. '=' → logprob: -3.4487080574035645
    4. ':' → logprob: -5.3237080574035645
    5. '_' → logprob: -7.1987080574035645
    6. 's' → logprob: -9.073708534240723
    7. '_lists' → logprob: -9.573708534240723
    8. ' ' → logprob: -9.823708534240723
    9. 'List' → logprob: -10.198708534240723
    10. 'list' → logprob: -10.448708534240723

Token 399: ' self' (ID: 1051)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3138764500617981
    2. '{}' → logprob: -1.3138763904571533
    3. '{}
' → logprob: -7.813876628875732
    4. ' {' → logprob: -8.813876152038574
    5. '{}

' → logprob: -10.188876152038574
    6. ' {}' → logprob: -10.813876152038574
    7. 'default' → logprob: -12.813876152038574
    8. '{})' → logprob: -14.438876152038574
    9. ' defaultdict' → logprob: -14.938876152038574
    10. '{}\' → logprob: -15.563876152038574

Token 400: '._' (ID: 2697)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.3346342146396637
    2. '{' → logprob: -2.084634304046631
    3. '.default' → logprob: -2.334634304046631
    4. '=' → logprob: -4.084634304046631
    5. ':' → logprob: -4.584634304046631
    6. ' =' → logprob: -4.584634304046631
    7. ' defaultdict' → logprob: -4.959634304046631
    8. '.setdefault' → logprob: -5.209634304046631
    9. '{}' → logprob: -5.584634304046631
    10. ' {' → logprob: -5.709634304046631

Token 401: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0004240011621732265
    2. 'get' → logprob: -8.6254243850708
    3. 'create' → logprob: -8.8754243850708
    4. '_build' → logprob: -10.2504243850708
    5. 'generate' → logprob: -10.5004243850708
    6. 'adj' → logprob: -11.0004243850708
    7. 'compute' → logprob: -11.6254243850708
    8. 'construct' → logprob: -11.6254243850708
    9. '.build' → logprob: -13.3754243850708
    10. ' build' → logprob: -13.8754243850708

Token 402: '_ad' (ID: 23782)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3420475423336029
    2. '{' → logprob: -2.9670474529266357
    3. '_ad' → logprob: -2.9670474529266357
    4. '{
' → logprob: -2.9670474529266357
    5. '_' → logprob: -3.5920474529266357
    6. '_adj' → logprob: -3.5920474529266357
    7. '()' → logprob: -3.7170474529266357
    8. '_dict' → logprob: -4.592047691345215
    9. '_graph' → logprob: -4.717047691345215
    10. '()
' → logprob: -4.717047691345215

Token 403: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1269427090883255
    2. 'jac' → logprob: -2.1269426345825195
    3. 'acency' → logprob: -12.00194263458252
    4. 'jc' → logprob: -12.75194263458252
    5. 'ja' → logprob: -13.25194263458252
    6. 'jec' → logprob: -13.75194263458252
    7. 'js' → logprob: -14.12694263458252
    8. ' j' → logprob: -15.00194263458252
    9. 'd' → logprob: -15.25194263458252
    10. '
' → logprob: -15.62694263458252

Token 404: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0010429323883727193
    2. 'cy' → logprob: -7.12604284286499
    3. 'acency' → logprob: -8.876043319702148
    4. 'acy' → logprob: -9.876043319702148
    5. 'c' → logprob: -11.376043319702148
    6. 'y' → logprob: -11.626043319702148
    7. 'ENCY' → logprob: -12.501043319702148
    8. 'n' → logprob: -12.751043319702148
    9. '
' → logprob: -12.876043319702148
    10. 'eny' → logprob: -13.001043319702148

Token 405: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31678953766822815
    2. '_list' → logprob: -1.3167895078659058
    3. '()
' → logprob: -5.941789627075195
    4. 'list' → logprob: -7.566789627075195
    5. '_' → logprob: -9.316789627075195
    6. 'List' → logprob: -9.691789627075195
    7. '   ' → logprob: -9.816789627075195
    8. '()

' → logprob: -9.941789627075195
    9. '_map' → logprob: -10.066789627075195
    10. '_lists' → logprob: -10.941789627075195

Token 406: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5839022397994995
    2. '       ' → logprob: -0.9589022397994995
    3. '   ' → logprob: -3.583902359008789
    4. '        
' → logprob: -4.958902359008789
    5. '  
' → logprob: -5.208902359008789
    6. '    
' → logprob: -5.208902359008789
    7. ')' → logprob: -5.458902359008789
    8. ' 
' → logprob: -5.833902359008789
    9. 'while' → logprob: -7.083902359008789
    10. ' while' → logprob: -7.208902359008789

Token 407: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.26241475343704224
    2. '       ' → logprob: -1.7624146938323975
    3. ' while' → logprob: -2.8874146938323975
    4. '	while' → logprob: -6.012414932250977
    5. '
' → logprob: -7.637414932250977
    6. '   ' → logprob: -8.137414932250977
    7. '        
' → logprob: -8.637414932250977
    8. '    
' → logprob: -10.387414932250977
    9. ' 
' → logprob: -12.637414932250977
    10. '	' → logprob: -12.637414932250977

Token 408: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02978092059493065
    2. ' queue' → logprob: -3.529780864715576
    3. '   ' → logprob: -11.279781341552734
    4. '	queue' → logprob: -11.904781341552734
    5. '       ' → logprob: -12.279781341552734
    6. '(queue' → logprob: -12.779781341552734
    7. 'len' → logprob: -13.404781341552734
    8. '
' → logprob: -14.404781341552734
    9. '    ' → logprob: -14.654781341552734
    10. ' ' → logprob: -15.404781341552734

Token 409: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06288065761327744
    2. ':' → logprob: -2.812880754470825
    3. ' and' → logprob: -8.062880516052246
    4. ',' → logprob: -8.062880516052246
    5. '.pop' → logprob: -8.937880516052246
    6. '[' → logprob: -10.062880516052246
    7. 'pop' → logprob: -10.812880516052246
    8. '       ' → logprob: -10.937880516052246
    9. 'and' → logprob: -11.312880516052246
    10. '):
' → logprob: -11.437880516052246

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43279099464416504
    2. ',' → logprob: -1.057790994644165
    3. '       ' → logprob: -5.932790756225586
    4. ',
' → logprob: -7.682790756225586
    5. ' ,' → logprob: -8.057790756225586
    6. '```' → logprob: -8.057790756225586
    7. '
' → logprob: -9.182790756225586
    8. '	       ' → logprob: -10.182790756225586
    9. '_,' → logprob: -10.557790756225586
    10. 'cost' → logprob: -10.682790756225586

Token 411: ' current' (ID: 2208)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08654498308897018
    2. 'current' (adapté à ' current') → logprob: -2.836544990539551
    3. 'curr' → logprob: -4.086544990539551
    4. 'cur' → logprob: -5.836544990539551
    5. 'dist' → logprob: -5.961544990539551
    6. ' cost' → logprob: -6.586544990539551
    7. ' current' → logprob: -8.21154499053955
    8. '   ' → logprob: -9.58654499053955
    9. '       ' → logprob: -9.58654499053955
    10. ' curr' → logprob: -9.96154499053955

Token 412: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.27031785249710083
    2. '_dist' → logprob: -1.520317792892456
    3. '_distance' → logprob: -4.020318031311035
    4. '_' → logprob: -8.895318031311035
    5. 'dist' → logprob: -9.770318031311035
    6. 'cost' → logprob: -10.270318031311035
    7. '_,' → logprob: -11.145318031311035
    8. '
' → logprob: -11.645318031311035
    9. '_d' → logprob: -12.270318031311035
    10. '_time' → logprob: -12.520318031311035

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010735770774772391
    2. ' ,' → logprob: -9.250107765197754
    3. ',
' → logprob: -12.500107765197754
    4. '[' → logprob: -12.625107765197754
    5. '_,' → logprob: -14.000107765197754
    6. ',current' → logprob: -14.250107765197754
    7. '           ' → logprob: -15.375107765197754
    8. ',p' → logprob: -15.375107765197754
    9. ',value' → logprob: -15.375107765197754
    10. ',_' → logprob: -15.500107765197754

Token 414: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5801922678947449
    2. ' current' → logprob: -0.8301922678947449
    3. 'town' → logprob: -6.5801920890808105
    4. 'u' → logprob: -6.7051920890808105
    5. ' town' → logprob: -7.4551920890808105
    6. ' u' → logprob: -8.205192565917969
    7. 'node' → logprob: -8.580192565917969
    8. 'curr' → logprob: -8.705192565917969
    9. '   ' → logprob: -8.955192565917969
    10. ' node' → logprob: -9.330192565917969

Token 415: ' =' (ID: 314)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.12768517434597015
    2. '_' → logprob: -2.877685070037842
    3. '_t' → logprob: -2.877685070037842
    4. '_tid' → logprob: -5.627685070037842
    5. '_node' → logprob: -6.627685070037842
    6. ' _' → logprob: -7.877685070037842
    7. ' =' → logprob: -7.877685070037842
    8. '=' → logprob: -8.127685546875
    9. '_token' → logprob: -8.377685546875
    10. '   ' → logprob: -8.502685546875

Token 416: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0021926139015704393
    2. ' heap' → logprob: -6.127192497253418
    3. 'he' → logprob: -12.502192497253418
    4. '   ' → logprob: -13.252192497253418
    5. 'queue' → logprob: -14.127192497253418
    6. '
' → logprob: -14.627192497253418
    7. '(heap' → logprob: -14.877192497253418
    8. ' ' → logprob: -15.502192497253418
    9. ' he' → logprob: -16.252193450927734
    10. '.heap' → logprob: -16.752193450927734

Token 417: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. '
' → logprob: -15.750000953674316
    4. '```' → logprob: -16.125001907348633
    5. 'p' → logprob: -16.750001907348633
    6. 'queue' → logprob: -17.375001907348633
    7. '

' → logprob: -17.875001907348633
    8. '       ' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '.q' → logprob: -18.875001907348633

Token 418: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.988221684878226e-06
    2. 'q' → logprob: -13.125006675720215
    3. '.pop' → logprob: -13.125006675720215
    4. '.heap' → logprob: -13.375006675720215
    5. '.' → logprob: -14.250006675720215
    6. ' he' → logprob: -15.250006675720215
    7. '.q' → logprob: -15.500006675720215
    8. 'he' → logprob: -15.875006675720215
    9. ' .' → logprob: -16.75000762939453
    10. '   ' → logprob: -17.25000762939453

Token 419: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.12697356939315796
    2. 'pp' → logprob: -2.1269736289978027
    3. 'pop' → logprob: -10.126973152160645
    4. 'p' → logprob: -12.876973152160645
    5. '[' → logprob: -13.876973152160645
    6. 'op' → logprob: -14.126973152160645
    7. '```' → logprob: -15.376973152160645
    8. 'ap' → logprob: -15.501973152160645
    9. '...' → logprob: -16.00197410583496
    10. '``' → logprob: -16.25197410583496

Token 420: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.054928768426179886
    2. 'ush' → logprob: -3.054928779602051
    3. 'pop' → logprob: -5.679928779602051
    4. 'app' → logprob: -6.679928779602051
    5. 'pp' → logprob: -7.179928779602051
    6. 'p' → logprob: -7.554928779602051
    7. 'q' → logprob: -9.67992877960205
    8. '[' → logprob: -9.80492877960205
    9. 'le' → logprob: -9.80492877960205
    10. 'push' → logprob: -9.92992877960205

Token 421: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.0002707529056351632
    2. 'queue' → logprob: -8.25027084350586
    3. '(' → logprob: -11.62527084350586
    4. ' queue' → logprob: -15.00027084350586
    5. '(
' → logprob: -16.25027084350586
    6. '	queue' → logprob: -16.87527084350586
    7. '(heap' → logprob: -17.25027084350586
    8. ' (' → logprob: -18.62527084350586
    9. '.queue' → logprob: -19.87527084350586
    10. '```' → logprob: -20.25027084350586

Token 422: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4743080735206604
    2. ')' → logprob: -0.9743080735206604
    3. '           ' → logprob: -8.599308013916016
    4. ')
' → logprob: -10.224308013916016
    5. '       ' → logprob: -12.474308013916016
    6. ')

' → logprob: -13.224308013916016
    7. ' )
' → logprob: -13.599308013916016
    8. '               ' → logprob: -13.724308013916016
    9. '):
' → logprob: -13.724308013916016
    10. '   ' → logprob: -14.849308013916016

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08162929862737656
    2. '       ' → logprob: -2.5816292762756348
    3. '
' → logprob: -6.831629276275635
    4. '   ' → logprob: -7.206629276275635
    5. '            
' → logprob: -8.331629753112793
    6. '<|end|>' → logprob: -8.831629753112793
    7. ' if' → logprob: -8.956629753112793
    8. '        
' → logprob: -9.206629753112793
    9. 'if' → logprob: -9.706629753112793
    10. '    
' → logprob: -9.956629753112793

Token 424: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30681243538856506
    2. ' if' → logprob: -1.8068124055862427
    3. 'if' (adapté à ' if') → logprob: -2.3068125247955322
    4. '            
' → logprob: -8.181812286376953
    5. '       ' → logprob: -9.306812286376953
    6. '
' → logprob: -10.431812286376953
    7. ' 
' → logprob: -11.056812286376953
    8. '   ' → logprob: -11.306812286376953
    9. '               ' → logprob: -12.056812286376953
    10. '          ' → logprob: -12.306812286376953

Token 425: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.31342482566833496
    2. ' current' → logprob: -1.313424825668335
    3. 'dist' → logprob: -9.438425064086914
    4. '	current' → logprob: -10.063425064086914
    5. ' dist' → logprob: -10.938425064086914
    6. '   ' → logprob: -11.813425064086914
    7. ' ' → logprob: -12.063425064086914
    8. 'urrent' → logprob: -12.938425064086914
    9. '(current' → logprob: -13.188425064086914
    10. '$current' → logprob: -13.438425064086914

Token 426: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.001514504081569612
    2. 'dist' → logprob: -7.001514434814453
    3. '>' → logprob: -8.501514434814453
    4. 'Dist' → logprob: -9.626514434814453
    5. '_d' → logprob: -9.876514434814453
    6. ' >' → logprob: -10.001514434814453
    7. ' in' → logprob: -10.251514434814453
    8. '_' → logprob: -10.376514434814453
    9. ' ' → logprob: -11.126514434814453
    10. ' ==' → logprob: -11.376514434814453

Token 427: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1602255403995514
    2. ' >' → logprob: -1.910225510597229
    3. '">' → logprob: -15.035225868225098
    4. ' ' → logprob: -15.160225868225098
    5. ' ' → logprob: -15.660225868225098
    6. ' >
' → logprob: -15.785225868225098
    7. '>

' → logprob: -15.910225868225098
    8. '>`' → logprob: -16.53522491455078
    9. ' >
' → logprob: -16.66022491455078
    10. ' >

' → logprob: -16.78522491455078

Token 428: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00043126524542458355
    2. ' dist' → logprob: -7.750431060791016
    3. '	dist' → logprob: -14.625431060791016
    4. '_dist' → logprob: -16.875431060791016
    5. 'Dist' → logprob: -17.500431060791016
    6. '   ' → logprob: -18.125431060791016
    7. '(dist' → logprob: -18.500431060791016
    8. 'd' → logprob: -18.625431060791016
    9. '.dist' → logprob: -18.750431060791016
    10. ' ' → logprob: -18.750431060791016

Token 429: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -9.088346359931165e-07
    2. 'current' → logprob: -14.250000953674316
    3. '[' → logprob: -16.5
    4. '[cur' → logprob: -16.625
    5. '[curr' → logprob: -18.375
    6. '(current' → logprob: -19.375
    7. '[
' → logprob: -19.5
    8. ' current' → logprob: -19.875
    9. '	current' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 430: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1738433837890625
    2. ']:
' → logprob: -2.4238433837890625
    3. '):' → logprob: -3.1738433837890625
    4. '):
' → logprob: -3.6738433837890625
    5. ':' → logprob: -6.1738433837890625
    6. ':
' → logprob: -6.7988433837890625
    7. '}:' → logprob: -8.173843383789062
    8. 'continue' → logprob: -9.173843383789062
    9. ']' → logprob: -9.298843383789062
    10. ']:
' → logprob: -10.798843383789062

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008503671269863844
    2. 'continue' → logprob: -7.250850200653076
    3. ' continue' → logprob: -9.250850677490234
    4. '           ' → logprob: -10.125850677490234
    5. '_continue' → logprob: -13.500850677490234
    6. ':' → logprob: -13.625850677490234
    7. '                   ' → logprob: -14.250850677490234
    8. '              ' → logprob: -15.625850677490234
    9. '   ' → logprob: -15.875850677490234
    10. ':
' → logprob: -16.000850677490234

Token 432: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8300319910049438
    2. 'continue' (adapté à ' continue') → logprob: -0.8300319910049438
    3. '               ' → logprob: -2.0800318717956543
    4. '           ' → logprob: -5.830031871795654
    5. '_continue' → logprob: -10.205032348632812
    6. '                   ' → logprob: -11.580032348632812
    7. '	continue' → logprob: -11.830032348632812
    8. '   ' → logprob: -11.955032348632812
    9. 'continu' → logprob: -13.705032348632812
    10. 'contin' → logprob: -13.705032348632812

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03013087995350361
    2. '
' → logprob: -3.5301308631896973
    3. '            
' → logprob: -8.030131340026855
    4. '       ' → logprob: -11.405131340026855
    5. '  
' → logprob: -11.530131340026855
    6. '    
' → logprob: -11.530131340026855
    7. '        
' → logprob: -12.405131340026855
    8. '   ' → logprob: -12.405131340026855
    9. '          ' → logprob: -12.780131340026855
    10. '           
' → logprob: -12.905131340026855

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006118826568126678
    2. '       ' → logprob: -7.625611782073975
    3. '            
' → logprob: -9.750612258911133
    4. '   ' → logprob: -10.875612258911133
    5. '          ' → logprob: -11.875612258911133
    6. '
' → logprob: -12.125612258911133
    7. '<|end|>' → logprob: -12.125612258911133
    8. '        
' → logprob: -12.375612258911133
    9. ',' → logprob: -12.500612258911133
    10. '               ' → logprob: -12.625612258911133

Token 435: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17374801635742188
    2. 'for' (adapté à ' for') → logprob: -2.423748016357422
    3. ' for' → logprob: -3.298748016357422
    4. '       ' → logprob: -3.423748016357422
    5. '            
' → logprob: -6.923748016357422
    6. '
' → logprob: -9.048748016357422
    7. '        
' → logprob: -9.298748016357422
    8. '   ' → logprob: -9.423748016357422
    9. 'adj' → logprob: -10.298748016357422
    10. '    
' → logprob: -11.298748016357422

Token 436: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0003192578151356429
    2. ' neighbor' → logprob: -8.875319480895996
    3. '(ne' → logprob: -9.375319480895996
    4. 'nbr' → logprob: -10.375319480895996
    5. 'nei' → logprob: -10.500319480895996
    6. 'ne' → logprob: -10.625319480895996
    7. 'next' → logprob: -12.500319480895996
    8. '   ' → logprob: -12.875319480895996
    9. '(' → logprob: -13.125319480895996
    10. 'adj' → logprob: -13.625319480895996

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -12.25001049041748
    3. '_,' → logprob: -13.00001049041748
    4. ',_' → logprob: -13.87501049041748
    5. '_id' → logprob: -14.12501049041748
    6. '‌,' → logprob: -14.50001049041748
    7. ',
' → logprob: -14.50001049041748
    8. 's' → logprob: -16.500009536743164
    9. ' ' → logprob: -17.625009536743164
    10. ',

' → logprob: -17.625009536743164

Token 438: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.06473508477210999
    2. ' cost' → logprob: -2.939735174179077
    3. 'weight' → logprob: -4.689734935760498
    4. ' weight' → logprob: -7.939734935760498
    5. '           ' → logprob: -9.314735412597656
    6. 'road' → logprob: -10.314735412597656
    7. 'distance' → logprob: -10.314735412597656
    8. 'edge' → logprob: -10.564735412597656
    9. 'neighbor' → logprob: -10.814735412597656
    10. 'w' → logprob: -11.064735412597656

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007631589658558369
    2. 'in' → logprob: -4.882631778717041
    3. ' ' → logprob: -11.757631301879883
    4. '_in' → logprob: -12.007631301879883
    5. ')' → logprob: -12.507631301879883
    6. '	in' → logprob: -13.007631301879883
    7. ',' → logprob: -13.382631301879883
    8. '   ' → logprob: -13.757631301879883
    9. '  ' → logprob: -14.757631301879883
    10. 'cost' → logprob: -14.882631301879883

Token 440: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.42870932817459106
    2. ' adjacency' → logprob: -1.0537092685699463
    3. ' adj' → logprob: -12.553709030151367
    4. '   ' → logprob: -13.303709030151367
    5. ' adjacent' → logprob: -13.553709030151367
    6. ' ' → logprob: -14.553709030151367
    7. '
' → logprob: -14.803709030151367
    8. 'Adj' → logprob: -15.428709030151367
    9. 'enumer' → logprob: -15.428709030151367
    10. ' ' → logprob: -15.928709030151367

Token 441: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0005705483490601182
    2. '(current' → logprob: -7.625570774078369
    3. '.get' → logprob: -9.875570297241211
    4. '[' → logprob: -11.500570297241211
    5. '[(' → logprob: -11.500570297241211
    6. 'current' → logprob: -12.250570297241211
    7. 'in' → logprob: -13.750570297241211
    8. ',current' → logprob: -13.750570297241211
    9. '[in' → logprob: -13.875570297241211
    10. '[cur' → logprob: -14.500570297241211

Token 442: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16211794316768646
    2. ']:
' → logprob: -1.9121179580688477
    3. ']' → logprob: -6.662117958068848
    4. ':' → logprob: -8.912117958068848
    5. '):' → logprob: -9.162117958068848
    6. ']:
' → logprob: -9.287117958068848
    7. '):
' → logprob: -9.662117958068848
    8. '       ' → logprob: -9.787117958068848
    9. ']:

' → logprob: -10.287117958068848
    10. ' ]' → logprob: -10.287117958068848

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015008177142590284
    2. ',' → logprob: -7.126500606536865
    3. '           ' → logprob: -8.251501083374023
    4. ':' → logprob: -8.751501083374023
    5. ':
' → logprob: -8.876501083374023
    6. '):
' → logprob: -9.751501083374023
    7. '                
' → logprob: -10.876501083374023
    8. '                ' → logprob: -11.751501083374023
    9. ' :
' → logprob: -11.876501083374023
    10. '                   ' → logprob: -11.876501083374023

Token 444: ' nd' (ID: 5914)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.21810898184776306
    2. '               ' → logprob: -2.218108892440796
    3. 'new' → logprob: -2.468108892440796
    4. '           ' → logprob: -7.218109130859375
    5. '   ' → logprob: -7.468109130859375
    6. 'alt' → logprob: -8.218109130859375
    7. ' if' → logprob: -8.468109130859375
    8. ' alt' → logprob: -8.468109130859375
    9. 'distance' → logprob: -9.093109130859375
    10. ' nd' → logprob: -9.843109130859375

Token 445: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.24227303266525269
    2. ' =' → logprob: -2.1172730922698975
    3. 'istance' → logprob: -2.6172730922698975
    4. '=' → logprob: -3.9922730922698975
    5. 'cost' → logprob: -7.492272853851318
    6. '           ' → logprob: -7.492272853851318
    7. '       ' → logprob: -7.492272853851318
    8. '_cost' → logprob: -7.617272853851318
    9. '   ' → logprob: -7.867272853851318
    10. '               ' → logprob: -8.117273330688477

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313262403011322
    2. '=' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.188261985778809
    4. '   ' → logprob: -16.563262939453125
    5. '=current' → logprob: -16.688262939453125
    6. ')' → logprob: -17.063262939453125
    7. '  ' → logprob: -17.188262939453125
    8. ' =
' → logprob: -17.563262939453125
    9. '=
' → logprob: -17.688262939453125
    10. 's' → logprob: -17.688262939453125

Token 447: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2519338130950928
    2. 'current' → logprob: -1.5019338130950928
    3. ' dist' → logprob: -12.751934051513672
    4. 'dist' → logprob: -13.376934051513672
    5. '	current' → logprob: -16.126934051513672
    6. '               ' → logprob: -17.001934051513672
    7. '(current' → logprob: -17.501934051513672
    8. ' ' → logprob: -17.626934051513672
    9. 'cur' → logprob: -17.876934051513672
    10. '=current' → logprob: -17.876934051513672

Token 448: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0002986392646562308
    2. '_cost' → logprob: -8.125298500061035
    3. 'dist' → logprob: -13.250298500061035
    4. '_' → logprob: -15.250298500061035
    5. '+' → logprob: -15.375298500061035
    6. 'cost' → logprob: -16.37529945373535
    7. '_d' → logprob: -17.00029945373535
    8. '	dist' → logprob: -17.50029945373535
    9. '_DIST' → logprob: -17.50029945373535
    10. '```' → logprob: -17.87529945373535

Token 449: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.009757863357663155
    2. '+' → logprob: -4.634757995605469
    3. ' ' → logprob: -14.009757995605469
    4. '               ' → logprob: -15.009757995605469
    5. ' ' → logprob: -15.634757995605469
    6. '                ' → logprob: -15.884757995605469
    7. ' +
' → logprob: -16.25975799560547
    8. ' plus' → logprob: -16.38475799560547
    9. '+c' → logprob: -16.38475799560547
    10. '                   ' → logprob: -16.50975799560547

Token 450: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2014141082763672
    2. ' cost' → logprob: -1.7014141082763672
    3. '(cost' → logprob: -14.201414108276367
    4. ' ' → logprob: -17.076414108276367
    5. '_cost' → logprob: -17.701414108276367
    6. 'Cost' → logprob: -17.826414108276367
    7. '   ' → logprob: -17.826414108276367
    8. ' ' → logprob: -17.951414108276367
    9. '
' → logprob: -18.451414108276367
    10. ' kost' → logprob: -18.576414108276367

Token 451: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009346862207166851
    2. '           ' → logprob: -7.750934600830078
    3. '<|end|>' → logprob: -8.750934600830078
    4. '                
' → logprob: -9.125934600830078
    5. '
' → logprob: -9.500934600830078
    6. '                ' → logprob: -10.250934600830078
    7. '              ' → logprob: -10.250934600830078
    8. '                   ' → logprob: -10.375934600830078
    9. '       ' → logprob: -10.875934600830078
    10. ')' → logprob: -12.000934600830078

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.860340752406046e-05
    2. '<|end|>' → logprob: -11.0000581741333
    3. '                
' → logprob: -11.5000581741333
    4. '                ' → logprob: -11.5000581741333
    5. '              ' → logprob: -11.7500581741333
    6. '           ' → logprob: -12.2500581741333
    7. ' ' → logprob: -13.5000581741333
    8. '			' → logprob: -13.5000581741333
    9. '                   ' → logprob: -13.7500581741333
    10. '	           ' → logprob: -13.7500581741333

Token 453: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16373984515666962
    2. ' if' → logprob: -1.913739800453186
    3. 'if' (adapté à ' if') → logprob: -5.6637396812438965
    4. ' ' → logprob: -11.913740158081055
    5. '                ' → logprob: -12.163740158081055
    6. '                
' → logprob: -12.163740158081055
    7. '           ' → logprob: -12.288740158081055
    8. '                   ' → logprob: -12.413740158081055
    9. '
' → logprob: -12.788740158081055
    10. '	           ' → logprob: -13.163740158081055

Token 454: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0021259954664856195
    2. 'nd' → logprob: -6.252126216888428
    3. ' dist' → logprob: -8.62712574005127
    4. '(nd' → logprob: -11.62712574005127
    5. 'dist' → logprob: -12.12712574005127
    6. '   ' → logprob: -14.50212574005127
    7. ' ' → logprob: -14.87712574005127
    8. ' ndi' → logprob: -15.00212574005127
    9. '```' → logprob: -15.00212574005127
    10. '_nd' → logprob: -15.25212574005127

Token 455: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -8.637786231702194e-05
    2. 'dist' → logprob: -9.750086784362793
    3. '   ' → logprob: -11.750086784362793
    4. '[' → logprob: -12.250086784362793
    5. 'est' → logprob: -13.500086784362793
    6. '>' → logprob: -13.875086784362793
    7. '```' → logprob: -13.875086784362793
    8. ' dist' → logprob: -13.875086784362793
    9. '       ' → logprob: -14.000086784362793
    10. 'i' → logprob: -14.250086784362793

Token 456: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04859054833650589
    2. '<' → logprob: -3.048590660095215
    3. '<n' → logprob: -13.798590660095215
    4. '[' → logprob: -15.298590660095215
    5. ' ' → logprob: -15.298590660095215
    6. '<len' → logprob: -15.423590660095215
    7. '<int' → logprob: -15.423590660095215
    8. ' ' → logprob: -15.548590660095215
    9. '<ll' → logprob: -15.923590660095215
    10. '<th' → logprob: -16.0485897064209

Token 457: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020542822778224945
    2. ' dist' → logprob: -3.895542860031128
    3. '	dist' → logprob: -14.395543098449707
    4. '(dist' → logprob: -16.64554214477539
    5. '           ' → logprob: -16.89554214477539
    6. 'Dist' → logprob: -16.89554214477539
    7. '_dist' → logprob: -17.14554214477539
    8. '
' → logprob: -17.14554214477539
    9. '               ' → logprob: -17.14554214477539
    10. '   ' → logprob: -17.39554214477539

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[current' → logprob: -15.000000953674316
    3. '[next' → logprob: -16.5
    4. 'neighbor' → logprob: -16.875
    5. '[
' → logprob: -17.375
    6. ' [' → logprob: -17.5
    7. '[node' → logprob: -18.5
    8. '[n' → logprob: -18.875
    9. '```' → logprob: -19.125
    10. '   ' → logprob: -20.0

Token 459: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00676700659096241
    2. '[' → logprob: -5.0067667961120605
    3. ' neighbor' → logprob: -9.881767272949219
    4. 'ne' → logprob: -15.131767272949219
    5. '_neighbor' → logprob: -15.756767272949219
    6. '(ne' → logprob: -16.25676727294922
    7. 'neighbors' → logprob: -17.38176727294922
    8. 'Neighbor' → logprob: -17.63176727294922
    9. 'ighbor' → logprob: -18.25676727294922
    10. '{' → logprob: -18.25676727294922

Token 460: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.475396990776062
    2. ']:' → logprob: -0.975396990776062
    3. ']' → logprob: -6.850397109985352
    4. ':' → logprob: -9.225397109985352
    5. '):
' → logprob: -9.600397109985352
    6. ':
' → logprob: -9.725397109985352
    7. ']:
' → logprob: -11.100397109985352
    8. '):' → logprob: -11.725397109985352
    9. ']:

' → logprob: -12.225397109985352
    10. '']:
' → logprob: -13.850397109985352

Token 461: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.032093510031700134
    2. ':' → logprob: -4.282093524932861
    3. ':
' → logprob: -4.407093524932861
    4. '                       ' → logprob: -6.157093524932861
    5. '               ' → logprob: -6.407093524932861
    6. '):
' → logprob: -6.782093524932861
    7. '                           ' → logprob: -8.657093048095703
    8. '):' → logprob: -9.032093048095703
    9. ',' → logprob: -9.782093048095703
    10. ')' → logprob: -9.782093048095703

Token 462: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.015850061550736427
    2. 'dist' (adapté à ' dist') → logprob: -4.265850067138672
    3. '                   ' → logprob: -6.765850067138672
    4. '                    ' → logprob: -8.390850067138672
    5. '                       ' → logprob: -9.140850067138672
    6. ' ' → logprob: -10.140850067138672
    7. ' ' → logprob: -10.265850067138672
    8. ' 
' → logprob: -10.390850067138672
    9. '                    
' → logprob: -10.515850067138672
    10. '_dist' → logprob: -11.265850067138672

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '[
' → logprob: -15.000000953674316
    3. '[next' → logprob: -16.375
    4. ' [' → logprob: -16.625
    5. '```' → logprob: -16.625
    6. '                   ' → logprob: -16.875
    7. '                       ' → logprob: -17.75
    8. 's' → logprob: -17.875
    9. '=' → logprob: -17.875
    10. 'neighbor' → logprob: -18.0

Token 464: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -3.8889261304575484e-06
    2. ' neighbor' → logprob: -12.500003814697266
    3. '[' → logprob: -16.875003814697266
    4. 'ne' → logprob: -17.375003814697266
    5. 'ighbor' → logprob: -17.625003814697266
    6. '_neighbor' → logprob: -17.875003814697266
    7. '
' → logprob: -18.250003814697266
    8. 'neighbors' → logprob: -18.375003814697266
    9. ']' → logprob: -19.000003814697266
    10. '```' → logprob: -19.000003814697266

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011535553494468331
    2. ']=' → logprob: -7.001153469085693
    3. '=' → logprob: -8.876153945922852
    4. ' ]' → logprob: -9.251153945922852
    5. ' =' → logprob: -12.126153945922852
    6. ')' → logprob: -14.376153945922852
    7. 's' → logprob: -16.87615394592285
    8. '[' → logprob: -16.87615394592285
    9. '']' → logprob: -17.12615394592285
    10. '                   ' → logprob: -17.12615394592285

Token 466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759569406509399
    2. '=' → logprob: -0.8259569406509399
    3. ']' → logprob: -11.825957298278809
    4. ' =
' → logprob: -12.200957298278809
    5. ']=' → logprob: -13.075957298278809
    6. '=
' → logprob: -13.200957298278809
    7. ',' → logprob: -15.450957298278809
    8. ' ' → logprob: -15.575957298278809
    9. ')' → logprob: -15.575957298278809
    10. '[' → logprob: -15.825957298278809

Token 467: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.3868873119354248
    2. 'nd' → logprob: -1.1368873119354248
    3. '(nd' → logprob: -11.636887550354004
    4. '_nd' → logprob: -12.886887550354004
    5. '
' → logprob: -13.636887550354004
    6. 'n' → logprob: -14.636887550354004
    7. ' ' → logprob: -14.636887550354004
    8. 'nb' → logprob: -14.761887550354004
    9. '.nd' → logprob: -14.886887550354004
    10. 'nt' → logprob: -15.136887550354004

Token 468: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -14.625001907348633
    3. 'e' → logprob: -14.750001907348633
    4. '[' → logprob: -15.000001907348633
    5. 'is' → logprob: -15.750001907348633
    6. '
' → logprob: -16.000001907348633
    7. 'dist' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.625001907348633
    9. 'ист' → logprob: -16.625001907348633
    10. ' ist' → logprob: -16.875001907348633

Token 469: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.016616291366518e-05
    2. '               ' → logprob: -10.375070571899414
    3. '           ' → logprob: -11.125070571899414
    4. '				' → logprob: -12.125070571899414
    5. ',' → logprob: -12.375070571899414
    6. '                    ' → logprob: -12.625070571899414
    7. '                       ' → logprob: -13.125070571899414
    8. '                  ' → logprob: -13.125070571899414
    9. '                    
' → logprob: -13.250070571899414
    10. '       ' → logprob: -13.375070571899414

Token 470: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.3954463510308415e-05
    2. 'heap' → logprob: -10.875054359436035
    3. '               ' → logprob: -12.000054359436035
    4. '				' → logprob: -12.000054359436035
    5. ' heap' → logprob: -12.250054359436035
    6. '                    
' → logprob: -12.375054359436035
    7. '                    ' → logprob: -12.625054359436035
    8. ',' → logprob: -12.750054359436035
    9. '                       ' → logprob: -12.875054359436035
    10. '                  ' → logprob: -13.500054359436035

Token 471: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0004306692280806601
    2. ' heap' → logprob: -7.750430583953857
    3. '                   ' → logprob: -18.625431060791016
    4. 'he' → logprob: -20.750431060791016
    5. '               ' → logprob: -21.875431060791016
    6. '           ' → logprob: -21.875431060791016
    7. '                       ' → logprob: -22.375431060791016
    8. '(heap' → logprob: -22.750431060791016
    9. '.heap' → logprob: -23.000431060791016
    10. 'queue' → logprob: -23.000431060791016

Token 472: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1875571544806007e-05
    2. 'p' → logprob: -11.375011444091797
    3. 'push' → logprob: -16.500011444091797
    4. '.he' → logprob: -16.750011444091797
    5. '```' → logprob: -16.875011444091797
    6. '.push' → logprob: -17.125011444091797
    7. 'app' → logprob: -17.625011444091797
    8. 'f' → logprob: -17.750011444091797
    9. 'ush' → logprob: -18.250011444091797
    10. '[' → logprob: -18.375011444091797

Token 473: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.9504606825648807e-05
    2. '.heap' → logprob: -11.375019073486328
    3. 'he' → logprob: -12.500019073486328
    4. '.' → logprob: -13.375019073486328
    5. '.push' → logprob: -13.875019073486328
    6. 'q' → logprob: -14.250019073486328
    7. 'app' → logprob: -14.500019073486328
    8. ' he' → logprob: -15.375019073486328
    9. 'ush' → logprob: -16.750019073486328
    10. '```' → logprob: -16.875019073486328

Token 474: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.813969957875088e-05
    2. 'ap' → logprob: -10.125067710876465
    3. 'pp' → logprob: -10.500067710876465
    4. 'push' → logprob: -14.875067710876465
    5. 'p' → logprob: -16.87506866455078
    6. '```' → logprob: -17.62506866455078
    7. '[' → logprob: -18.00006866455078
    8. 'a' → logprob: -18.37506866455078
    9. 'q' → logprob: -18.50006866455078
    10. 'ush' → logprob: -18.62506866455078

Token 475: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.931863051955588e-05
    2. 'push' → logprob: -9.750059127807617
    3. 'app' → logprob: -14.875059127807617
    4. 'p' → logprob: -15.250059127807617
    5. 'sh' → logprob: -15.500059127807617
    6. 'u' → logprob: -16.500059127807617
    7. 'q' → logprob: -17.750059127807617
    8. 'ap' → logprob: -17.750059127807617
    9. 'e' → logprob: -18.000059127807617
    10. 'op' → logprob: -18.125059127807617

Token 476: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. '(heap' → logprob: -16.875
    4. ' (' → logprob: -17.625
    5. 'queue' → logprob: -17.875
    6. ' queue' → logprob: -18.5
    7. '	queue' → logprob: -18.875
    8. '(
' → logprob: -19.375
    9. '(query' → logprob: -21.0
    10. '(q' → logprob: -22.25

Token 477: ',' (ID: 11)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.06737977266311646
    2. ' (' → logprob: -3.5673797130584717
    3. '(' → logprob: -3.8173797130584717
    4. ',' → logprob: -4.317379951477051
    5. '((' → logprob: -7.817379951477051
    6. ',(' → logprob: -7.942379951477051
    7. ' ,' → logprob: -8.06737995147705
    8. ')' → logprob: -8.81737995147705
    9. '(heap' → logprob: -9.06737995147705
    10. '                       ' → logprob: -9.19237995147705

Token 478: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6387593746185303
    2. '(nd' → logprob: -1.1387593746185303
    3. '(' → logprob: -1.8887593746185303
    4. '(n' → logprob: -7.513759613037109
    5. '(nn' → logprob: -11.26375961303711
    6. '(nt' → logprob: -11.88875961303711
    7. '(ns' → logprob: -12.76375961303711
    8. '(nx' → logprob: -13.01375961303711
    9. ' ' → logprob: -13.51375961303711
    10. '(next' → logprob: -14.01375961303711

Token 479: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0008096250821836293
    2. ' nd' → logprob: -7.125809669494629
    3. '(nd' → logprob: -12.375809669494629
    4. '   ' → logprob: -15.000809669494629
    5. '                   ' → logprob: -16.000808715820312
    6. '               ' → logprob: -16.000808715820312
    7. '_nd' → logprob: -16.625808715820312
    8. '  ' → logprob: -17.500808715820312
    9. '           ' → logprob: -17.625808715820312
    10. 'ndl' → logprob: -17.625808715820312

Token 480: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00014334988372866064
    2. 'dist' → logprob: -8.875143051147461
    3. 'st' → logprob: -13.000143051147461
    4. '```' → logprob: -15.125143051147461
    5. 'd' → logprob: -16.12514305114746
    6. ' dist' → logprob: -16.25014305114746
    7. ')' → logprob: -16.50014305114746
    8. 'ind' → logprob: -16.62514305114746
    9. 'i' → logprob: -16.62514305114746
    10. ',' → logprob: -16.75014305114746

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ',
' → logprob: -11.375015258789062
    3. ' ,' → logprob: -12.875015258789062
    4. '<|end|>' → logprob: -14.625015258789062
    5. ')' → logprob: -15.250015258789062
    6. '),' → logprob: -15.500015258789062
    7. ',

' → logprob: -16.375015258789062
    8. '‌,' → logprob: -17.000015258789062
    9. ',n' → logprob: -17.875015258789062
    10. ',
' → logprob: -18.000015258789062

Token 482: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0067154900170862675
    2. ' neighbor' → logprob: -5.006715297698975
    3. '                   ' → logprob: -16.631715774536133
    4. 'ne' → logprob: -17.006715774536133
    5. 'neighbors' → logprob: -17.881715774536133
    6. '               ' → logprob: -18.256715774536133
    7. '_neighbor' → logprob: -18.631715774536133
    8. ' neighbour' → logprob: -18.631715774536133
    9. '   ' → logprob: -18.881715774536133
    10. ' ' → logprob: -19.131715774536133

Token 483: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004231667553540319
    2. ')' → logprob: -7.875422954559326
    3. '))
' → logprob: -10.125423431396484
    4. ' ))' → logprob: -13.250423431396484
    5. ')))' → logprob: -13.875423431396484
    6. ')
' → logprob: -15.750423431396484
    7. '));' → logprob: -17.500423431396484
    8. '))

' → logprob: -17.625423431396484
    9. '           ' → logprob: -17.625423431396484
    10. '       ' → logprob: -17.875423431396484

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00636326614767313
    2. '<|end|>' → logprob: -5.256363391876221
    3. ' return' → logprob: -8.131362915039062
    4. '        
' → logprob: -8.881362915039062
    5. 'return' → logprob: -8.881362915039062
    6. '        ' → logprob: -9.006362915039062
    7. ')' → logprob: -9.381362915039062
    8. '      ' → logprob: -9.506362915039062
    9. '   ' → logprob: -9.756362915039062
    10. '
' → logprob: -9.756362915039062

Token 485: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23272651433944702
    2. 'return' (adapté à ' return') → logprob: -1.7327265739440918
    3. ' return' → logprob: -3.482726573944092
    4. '   ' → logprob: -10.107726097106934
    5. '	return' → logprob: -10.107726097106934
    6. '
' → logprob: -11.107726097106934
    7. '	' → logprob: -13.107726097106934
    8. ' ' → logprob: -13.857726097106934
    9. ':return' → logprob: -13.857726097106934
    10. '        
' → logprob: -14.232726097106934

Token 486: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00861456897109747
    2. ' dist' → logprob: -4.758614540100098
    3. '{' → logprob: -17.758615493774414
    4. '	dist' → logprob: -18.383615493774414
    5. 'dict' → logprob: -19.008615493774414
    6. '(dist' → logprob: -19.883615493774414
    7. '_dist' → logprob: -21.133615493774414
    8. 'Dist' → logprob: -21.758615493774414
    9. '.dist' → logprob: -21.758615493774414
    10. ' ' → logprob: -23.008615493774414

Token 487: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7084493637084961
    2. '
' → logprob: -0.9584493637084961
    3. '    
' → logprob: -2.583449363708496
    4. 'def' → logprob: -3.083449363708496
    5. '  
' → logprob: -7.208449363708496
    6. '        
' → logprob: -7.583449363708496
    7. ' def' → logprob: -7.708449363708496
    8. '<|end|>' → logprob: -7.958449363708496
    9. '```' → logprob: -8.208449363708496
    10. '   
' → logprob: -8.708449363708496

Token 488: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3489086627960205
    2. '   ' → logprob: -1.3489086627960205
    3. '
' → logprob: -3.8489086627960205
    4. ' def' → logprob: -4.723908424377441
    5. '    
' → logprob: -5.473908424377441
    6. '        
' → logprob: -8.973908424377441
    7. '```' → logprob: -8.973908424377441
    8. ' ' → logprob: -9.223908424377441
    9. '  
' → logprob: -9.598908424377441
    10. '	def' → logprob: -9.973908424377441

Token 489: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00033999193692579865
    2. ' def' → logprob: -8.500340461730957
    3. '
' → logprob: -9.000340461730957
    4. '   ' → logprob: -11.375340461730957
    5. '    
' → logprob: -13.875340461730957
    6. '_def' → logprob: -15.125340461730957
    7. '

' → logprob: -15.500340461730957
    8. '  
' → logprob: -16.50033950805664
    9. '	def' → logprob: -17.12533950805664
    10. ' ' → logprob: -17.50033950805664

Token 490: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.0025404668413102627
    2. ' _' → logprob: -6.002540588378906
    3. '_' → logprob: -10.877540588378906
    4. '_find' → logprob: -11.002540588378906
    5. '_add' → logprob: -11.252540588378906
    6. '_b' → logprob: -12.127540588378906
    7. '_get' → logprob: -12.252540588378906
    8. '_connect' → logprob: -13.127540588378906
    9. 'build' → logprob: -14.002540588378906
    10. '_collect' → logprob: -14.752540588378906

Token 491: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -4.842555426876061e-06
    2. '_build' → logprob: -12.250004768371582
    3. ' build' → logprob: -19.2500057220459
    4. '	build' → logprob: -19.3750057220459
    5. '.build' → logprob: -19.6250057220459
    6. '(build' → logprob: -19.7500057220459
    7. '_' → logprob: -22.6250057220459
    8. '-build' → logprob: -23.1250057220459
    9. 'b' → logprob: -23.2500057220459
    10. '/build' → logprob: -23.5000057220459

Token 492: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.961759259458631e-06
    2. '_adj' → logprob: -12.375004768371582
    3. 'adj' → logprob: -14.750004768371582
    4. '_ro' → logprob: -15.625004768371582
    5. ' adjacency' → logprob: -17.2500057220459
    6. '_' → logprob: -17.7500057220459
    7. 'ad' → logprob: -17.8750057220459
    8. '_adapter' → logprob: -18.1250057220459
    9. '_build' → logprob: -19.1250057220459
    10. '_add' → logprob: -19.2500057220459

Token 493: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -7.123899558791891e-05
    2. 'j' → logprob: -9.62507152557373
    3. 'Jac' → logprob: -13.00007152557373
    4. 'acency' → logprob: -13.12507152557373
    5. '_j' → logprob: -14.37507152557373
    6. ' jac' → logprob: -15.37507152557373
    7. 'jc' → logprob: -17.000070571899414
    8. '
' → logprob: -18.250070571899414
    9. '_' → logprob: -18.375070571899414
    10. 'd' → logprob: -18.625070571899414

Token 494: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.007192104123532772
    2. 'acency' → logprob: -5.007192134857178
    3. 'acy' → logprob: -7.757192134857178
    4. 'ancy' → logprob: -11.25719165802002
    5. 'ac' → logprob: -11.75719165802002
    6. 'n' → logprob: -12.63219165802002
    7. 'cy' → logprob: -12.75719165802002
    8. 'eny' → logprob: -13.00719165802002
    9. 'c' → logprob: -13.25719165802002
    10. '_' → logprob: -13.25719165802002

Token 495: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012576145818457007
    2. '(' → logprob: -6.751257419586182
    3. 'self' → logprob: -9.75125789642334
    4. ' (' → logprob: -12.12625789642334
    5. '_map' → logprob: -12.25125789642334
    6. '()' → logprob: -12.37625789642334
    7. 's' → logprob: -12.50125789642334
    8. '_list' → logprob: -12.75125789642334
    9. '_(' → logprob: -13.00125789642334
    10. '(s' → logprob: -13.50125789642334

Token 496: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11496749520301819
    2. ')' → logprob: -2.2399675846099854
    3. 'self' → logprob: -6.364967346191406
    4. ')(' → logprob: -8.239967346191406
    5. '(' → logprob: -9.614967346191406
    6. '):' → logprob: -10.864967346191406
    7. '):
' → logprob: -11.239967346191406
    8. '   ' → logprob: -11.489967346191406
    9. 's' → logprob: -11.614967346191406
    10. ' ' → logprob: -12.114967346191406

Token 497: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.85366350505501e-05
    2. '(' → logprob: -9.50009822845459
    3. 'self' → logprob: -10.75009822845459
    4. ' (' → logprob: -13.87509822845459
    5. ' self' → logprob: -14.75009822845459
    6. '[self' → logprob: -15.37509822845459
    7. '(s' → logprob: -16.000099182128906
    8. '   ' → logprob: -16.125099182128906
    9. '(
' → logprob: -16.500099182128906
    10. '->' → logprob: -16.750099182128906

Token 498: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -2.15310683415737e-05
    2. ' Dict' → logprob: -10.750021934509277
    3. 'dict' → logprob: -16.87502098083496
    4. 'List' → logprob: -17.50002098083496
    5. '   ' → logprob: -19.62502098083496
    6. 'Default' → logprob: -21.37502098083496
    7. '.Dict' → logprob: -21.50002098083496
    8. '_dict' → logprob: -21.87502098083496
    9. 'default' → logprob: -22.25002098083496
    10. 'Dic' → logprob: -22.75002098083496

Token 499: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. '<int' → logprob: -16.75
    3. 'int' → logprob: -17.375
    4. '[Int' → logprob: -19.25
    5. '   ' → logprob: -20.875
    6. '[' → logprob: -21.125
    7. '(int' → logprob: -21.125
    8. '[
' → logprob: -22.0
    9. '[in' → logprob: -22.375
    10. '[i' → logprob: -22.875

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005710251862183213
    2. ',List' → logprob: -7.500571250915527
    3. '[List' → logprob: -11.500571250915527
    4. ' ,' → logprob: -11.875571250915527
    5. '   ' → logprob: -14.625571250915527
    6. '[' → logprob: -16.00057029724121
    7. ' ' → logprob: -16.12557029724121
    8. '       ' → logprob: -16.50057029724121
    9. 'List' → logprob: -16.50057029724121
    10. ',
' → logprob: -16.75057029724121

Token 501: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -2.15310683415737e-05
    2. ' List' → logprob: -10.750021934509277
    3. '[List' → logprob: -17.00002098083496
    4. 'list' → logprob: -17.25002098083496
    5. '	List' → logprob: -17.75002098083496
    6. '   ' → logprob: -18.62502098083496
    7. ' ' → logprob: -20.25002098083496
    8. '(List' → logprob: -21.37502098083496
    9. '       ' → logprob: -21.62502098083496
    10. '_list' → logprob: -21.75002098083496

Token 502: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[int' → logprob: -17.25
    3. '[
' → logprob: -17.75
    4. '[(' → logprob: -19.625
    5. '   ' → logprob: -20.25
    6. '[List' → logprob: -20.375
    7. '<Tuple' → logprob: -20.625
    8. ',' → logprob: -21.25
    9. 'Tuple' → logprob: -21.375
    10. '```' → logprob: -22.0

Token 503: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0010531729785725474
    2. '[' → logprob: -6.876053333282471
    3. ' Tuple' → logprob: -11.001052856445312
    4. '   ' → logprob: -13.001052856445312
    5. ' ' → logprob: -15.251052856445312
    6. ']' → logprob: -15.251052856445312
    7. '  ' → logprob: -15.626052856445312
    8. 'Tu' → logprob: -16.001052856445312
    9. '       ' → logprob: -16.126052856445312
    10. '    ' → logprob: -16.126052856445312

Token 504: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -14.625000953674316
    3. ',int' → logprob: -19.625
    4. '(int' → logprob: -20.375
    5. '[
' → logprob: -20.375
    6. '[' → logprob: -20.75
    7. '[Int' → logprob: -21.0
    8. '   ' → logprob: -21.25
    9. '	int' → logprob: -21.625
    10. '<int' → logprob: -22.0

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028592010494321585
    2. ',int' → logprob: -6.002859115600586
    3. '[int' → logprob: -7.877859115600586
    4. ' ,' → logprob: -12.502859115600586
    5. 'int' → logprob: -14.627859115600586
    6. ',
' → logprob: -15.627859115600586
    7. '   ' → logprob: -16.752859115600586
    8. '[' → logprob: -17.627859115600586
    9. ' ' → logprob: -17.752859115600586
    10. ',float' → logprob: -17.752859115600586

Token 506: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5928495486150496e-05
    2. ' int' → logprob: -11.125016212463379
    3. '[int' → logprob: -14.125016212463379
    4. '   ' → logprob: -15.875016212463379
    5. ']int' → logprob: -16.000015258789062
    6. '	int' → logprob: -17.125015258789062
    7. '
' → logprob: -17.375015258789062
    8. '<int' → logprob: -17.500015258789062
    9. ',int' → logprob: -18.000015258789062
    10. '(int' → logprob: -18.625015258789062

Token 507: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0016101972432807088
    2. ']]]' → logprob: -7.126610279083252
    3. ']]:
' → logprob: -7.126610279083252
    4. ')' → logprob: -14.126609802246094
    5. ']' → logprob: -14.626609802246094
    6. '[' → logprob: -15.251609802246094
    7. '>' → logprob: -15.626609802246094
    8. '```' → logprob: -15.876609802246094
    9. ')]' → logprob: -16.126609802246094
    10. ']]>

' → logprob: -16.376609802246094

Token 508: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15970391035079956
    2. ']:
' → logprob: -2.1597039699554443
    3. ':' → logprob: -4.034703731536865
    4. '):
' → logprob: -4.409703731536865
    5. '       ' → logprob: -7.159703731536865
    6. '():
' → logprob: -7.284703731536865
    7. ']:' → logprob: -7.784703731536865
    8. '   ' → logprob: -8.534704208374023
    9. ':
' → logprob: -8.534704208374023
    10. ']:
' → logprob: -10.409704208374023

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031580092036165297
    2. ':
' → logprob: -9.62531566619873
    3. '()' → logprob: -9.75031566619873
    4. ':' → logprob: -9.75031566619873
    5. '():
' → logprob: -10.37531566619873
    6. '{' → logprob: -10.62531566619873
    7. '):
' → logprob: -11.00031566619873
    8. '(self' → logprob: -11.25031566619873
    9. '   ' → logprob: -11.50031566619873
    10. ' =' → logprob: -12.25031566619873

Token 510: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.04883771762251854
    2. '       ' → logprob: -3.048837661743164
    3. ' adjacency' → logprob: -8.548837661743164
    4. '   ' → logprob: -9.798837661743164
    5. ' adj' → logprob: -13.923837661743164
    6. '           ' → logprob: -16.798837661743164
    7. '```' → logprob: -17.173837661743164
    8. 'Adj' → logprob: -17.298837661743164
    9. '     ' → logprob: -17.548837661743164
    10. '      ' → logprob: -17.798837661743164

Token 511: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5770271420478821
    2. '=' → logprob: -0.8270271420478821
    3. ':' → logprob: -6.827027320861816
    4. ' ' → logprob: -13.327027320861816
    5. '   ' → logprob: -13.827027320861816
    6. ' :' → logprob: -15.827027320861816
    7. '       ' → logprob: -15.827027320861816
    8. '{' → logprob: -17.3270263671875
    9. '={}
' → logprob: -17.3270263671875
    10. '={}' → logprob: -17.5770263671875

Token 512: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.008670826442539692
    2. ' Dict' → logprob: -4.758670806884766
    3. 'Default' → logprob: -9.883670806884766
    4. 'default' → logprob: -12.383670806884766
    5. 'dict' → logprob: -14.508670806884766
    6. '=' → logprob: -15.008670806884766
    7. '.Dict' → logprob: -17.133670806884766
    8. ' =' → logprob: -17.258670806884766
    9. ' Default' → logprob: -17.383670806884766
    10. '{' → logprob: -17.508670806884766

Token 513: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. '<int' → logprob: -16.125
    3. '[i' → logprob: -16.875
    4. '=int' → logprob: -17.375
    5. '[Int' → logprob: -17.375
    6. '[in' → logprob: -18.125
    7. 'int' → logprob: -19.0
    8. '[
' → logprob: -19.25
    9. '[' → logprob: -19.5
    10. '(int' → logprob: -19.875

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009692259482108057
    2. ',List' → logprob: -7.125969409942627
    3. '[int' → logprob: -9.500968933105469
    4. ',int' → logprob: -9.875968933105469
    5. '[List' → logprob: -10.875968933105469
    6. ' ,' → logprob: -11.625968933105469
    7. 'int' → logprob: -11.875968933105469
    8. '   ' → logprob: -13.500968933105469
    9. 'List' → logprob: -14.375968933105469
    10. '       ' → logprob: -14.500968933105469

Token 515: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010390079842181876
    2. ' List' → logprob: -9.250103950500488
    3. '[List' → logprob: -12.500103950500488
    4. 'list' → logprob: -12.625103950500488
    5. '	List' → logprob: -15.125103950500488
    6. '   ' → logprob: -15.250103950500488
    7. '
' → logprob: -16.625102996826172
    8. '<List' → logprob: -16.625102996826172
    9. '_list' → logprob: -17.000102996826172
    10. ' ' → logprob: -17.250102996826172

Token 516: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0010443627834320068
    2. '[' → logprob: -6.876044273376465
    3. '[(' → logprob: -12.376044273376465
    4. '[
' → logprob: -13.126044273376465
    5. ']' → logprob: -13.251044273376465
    6. 'int' → logprob: -13.626044273376465
    7. '[Int' → logprob: -14.126044273376465
    8. '<int' → logprob: -14.501044273376465
    9. '   ' → logprob: -15.251044273376465
    10. '[List' → logprob: -16.12604522705078

Token 517: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.028196288272738457
    2. '[int' → logprob: -3.778196334838867
    3. '[' → logprob: -5.528196334838867
    4. 'int' → logprob: -7.028196334838867
    5. ' Tuple' → logprob: -9.528196334838867
    6. 'tuple' → logprob: -13.528196334838867
    7. '(int' → logprob: -13.903196334838867
    8. ']' → logprob: -14.278196334838867
    9. '<Tuple' → logprob: -14.278196334838867
    10. '.Tuple' → logprob: -14.403196334838867

Token 518: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0921942703134846e-05
    2. 'int' → logprob: -11.50001049041748
    3. ',int' → logprob: -15.12501049041748
    4. '<int' → logprob: -16.125011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '(int' → logprob: -17.125011444091797
    7. ',' → logprob: -17.375011444091797
    8. ']]' → logprob: -17.375011444091797
    9. ']int' → logprob: -17.500011444091797
    10. '[' → logprob: -17.625011444091797

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06705395877361298
    2. ',int' → logprob: -2.817054033279419
    3. '[int' → logprob: -5.31705379486084
    4. 'int' → logprob: -8.81705379486084
    5. ' ,' → logprob: -11.06705379486084
    6. ',
' → logprob: -14.31705379486084
    7. '   ' → logprob: -15.31705379486084
    8. '(int' → logprob: -15.44205379486084
    9. ',Integer' → logprob: -15.44205379486084
    10. '
' → logprob: -15.56705379486084

Token 520: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00014239625306800008
    2. ' int' → logprob: -9.125142097473145
    3. '[int' → logprob: -11.375142097473145
    4. '   ' → logprob: -11.875142097473145
    5. ']]' → logprob: -12.500142097473145
    6. ']int' → logprob: -13.625142097473145
    7. ']]]' → logprob: -13.875142097473145
    8. '	int' → logprob: -13.875142097473145
    9. '```' → logprob: -14.125142097473145
    10. ']])' → logprob: -14.125142097473145

Token 521: ']]]' (ID: 198030)
  Prédit: ']]]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]]' → logprob: -0.20150446891784668
    2. ']]' → logprob: -1.7015044689178467
    3. ']]=' → logprob: -9.451504707336426
    4. ']' → logprob: -12.326504707336426
    5. '```' → logprob: -13.326504707336426
    6. '>' → logprob: -13.701504707336426
    7. '])]' → logprob: -13.951504707336426
    8. ']])' → logprob: -14.076504707336426
    9. '   ' → logprob: -14.201504707336426
    10. '[' → logprob: -14.576504707336426

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '       ' → logprob: -18.130233764648438
    4. '   ' → logprob: -19.380233764648438
    5. ' ' → logprob: -19.630233764648438
    6. '={}' → logprob: -20.380233764648438
    7. '=
' → logprob: -20.755233764648438
    8. '        ' → logprob: -22.255233764648438
    9. '={}
' → logprob: -22.255233764648438
    10. ')' → logprob: -22.380233764648438

Token 523: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.16376140713691711
    2. '{}' → logprob: -1.9137613773345947
    3. '{}
' → logprob: -5.663761615753174
    4. 'default' → logprob: -9.913761138916016
    5. ' {' → logprob: -12.288761138916016
    6. '{}

' → logprob: -12.788761138916016
    7. '{i' → logprob: -13.538761138916016
    8. '{})' → logprob: -13.913761138916016
    9. '{return' → logprob: -14.288761138916016
    10. ' {}' → logprob: -14.913761138916016

Token 524: 'tid' (ID: 24066)
  Prédit: 'tid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -0.011134004220366478
    2. 'town' → logprob: -4.511134147644043
    3. 't' → logprob: -10.511134147644043
    4. ' tid' → logprob: -10.886134147644043
    5. 'nid' → logprob: -11.136134147644043
    6. '   ' → logprob: -11.761134147644043
    7. 'id' → logprob: -12.636134147644043
    8. 'k' → logprob: -12.761134147644043
    9. ' town' → logprob: -13.011134147644043
    10. 'key' → logprob: -13.011134147644043

Token 525: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011439072113716975
    2. 'for' → logprob: -9.875114440917969
    3. ' :' → logprob: -9.875114440917969
    4. ' for' → logprob: -12.250114440917969
    5. '           ' → logprob: -13.250114440917969
    6. ':self' → logprob: -13.375114440917969
    7. ':t' → logprob: -14.125114440917969
    8. '       ' → logprob: -14.250114440917969
    9. '=' → logprob: -15.375114440917969
    10. '[' → logprob: -15.500114440917969

Token 526: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005543439765460789
    2. ' []' → logprob: -7.50055456161499
    3. '[]}' → logprob: -13.875554084777832
    4. '[]
' → logprob: -14.750554084777832
    5. '[]

' → logprob: -18.00055503845215
    6. '[' → logprob: -19.37555503845215
    7. '[])' → logprob: -19.50055503845215
    8. '[],' → logprob: -19.87555503845215
    9. ' ' → logprob: -20.25055503845215
    10. '[]>' → logprob: -20.62555503845215

Token 527: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693440914154053
    2. 'for' → logprob: -2.12693452835083
    3. '       ' → logprob: -12.626934051513672
    4. '           ' → logprob: -13.751934051513672
    5. '	for' → logprob: -14.251934051513672
    6. '   ' → logprob: -14.501934051513672
    7. '        ' → logprob: -15.126934051513672
    8. '         ' → logprob: -15.876934051513672
    9. '               ' → logprob: -16.251934051513672
    10. ' ' → logprob: -16.376934051513672

Token 528: ' tid' (ID: 8692)
  Prédit: 'tid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -0.02327902242541313
    2. ' tid' → logprob: -3.7732789516448975
    3. 'self' → logprob: -10.523279190063477
    4. '_tid' → logprob: -12.398279190063477
    5. 't' → logprob: -13.773279190063477
    6. ' self' → logprob: -14.148279190063477
    7. 'Tid' → logprob: -14.773279190063477
    8. '	t' → logprob: -16.398279190063477
    9. '   ' → logprob: -16.398279190063477
    10. '
' → logprob: -16.773279190063477

Token 529: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031808018684387207
    2. 'in' → logprob: -5.753180980682373
    3. 't' → logprob: -13.253180503845215
    4. 'tid' → logprob: -14.253180503845215
    5. 'self' → logprob: -14.878180503845215
    6. ' ' → logprob: -15.878180503845215
    7. ',' → logprob: -16.25318145751953
    8. 'id' → logprob: -17.25318145751953
    9. '
' → logprob: -17.62818145751953
    10. ' ' → logprob: -17.87818145751953

Token 530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.0126840758603066e-05
    2. ' self' → logprob: -10.125040054321289
    3. '(self' → logprob: -18.50004005432129
    4. 'range' → logprob: -18.50004005432129
    5. '   ' → logprob: -18.62504005432129
    6. '[self' → logprob: -19.12504005432129
    7. '	self' → logprob: -19.62504005432129
    8. '
' → logprob: -19.75004005432129
    9. '=self' → logprob: -19.75004005432129
    10. ' ' → logprob: -20.00004005432129

Token 531: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -9.253090865968261e-06
    2. 't' → logprob: -11.875009536743164
    3. ' .' → logprob: -13.750009536743164
    4. '.' → logprob: -14.250009536743164
    5. ' towns' → logprob: -15.250009536743164
    6. 'town' → logprob: -15.875009536743164
    7. '	t' → logprob: -16.875009536743164
    8. 's' → logprob: -17.125009536743164
    9. '```' → logprob: -17.375009536743164
    10. '
' → logprob: -17.625009536743164

Token 532: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.003742833388969302
    2. 'town' → logprob: -6.253742694854736
    3. 'own' → logprob: -6.878742694854736
    4. 'ows' → logprob: -7.878742694854736
    5. '.' → logprob: -9.503743171691895
    6. 'wn' → logprob: -9.628743171691895
    7. 'ons' → logprob: -9.753743171691895
    8. ' towns' → logprob: -10.503743171691895
    9. 't' → logprob: -11.003743171691895
    10. 'awns' → logprob: -11.003743171691895

Token 533: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.16094209253787994
    2. '}
' → logprob: -1.9109420776367188
    3. '.keys' → logprob: -7.285942077636719
    4. '.values' → logprob: -11.285942077636719
    5. '   ' → logprob: -12.035942077636719
    6. 'keys' → logprob: -12.785942077636719
    7. '       ' → logprob: -12.785942077636719
    8. '}

' → logprob: -12.910942077636719
    9. '}
' → logprob: -13.160942077636719
    10. ' }' → logprob: -13.535942077636719

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5222001671791077
    2. ' for' → logprob: -1.022200107574463
    3. 'for' → logprob: -3.272200107574463
    4. '
' → logprob: -5.772200107574463
    5. '   ' → logprob: -5.772200107574463
    6. '	for' → logprob: -6.897200107574463
    7. '        
' → logprob: -7.022200107574463
    8. '<|end|>' → logprob: -7.897200107574463
    9. '  
' → logprob: -8.772200584411621
    10. '    
' → logprob: -8.897200584411621

Token 535: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.088138227118179e-05
    2. '       ' → logprob: -10.250070571899414
    3. ' for' → logprob: -10.250070571899414
    4. '   ' → logprob: -16.625070571899414
    5. '	for' → logprob: -17.375070571899414
    6. '
' → logprob: -20.000070571899414
    7. '        
' → logprob: -21.375070571899414
    8. '```' → logprob: -21.375070571899414
    9. ' ' → logprob: -23.000070571899414
    10. 'For' → logprob: -23.000070571899414

Token 536: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.0011298557510599494
    2. ' road' → logprob: -6.876129627227783
    3. 'r' → logprob: -9.251130104064941
    4. '   ' → logprob: -14.876130104064941
    5. '```' → logprob: -15.501130104064941
    6. 'Road' → logprob: -15.626130104064941
    7. 'rod' → logprob: -16.001129150390625
    8. ' r' → logprob: -16.126129150390625
    9. ' ' → logprob: -17.001129150390625
    10. 'route' → logprob: -17.001129150390625

Token 537: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0430118627846241
    2. 'in' → logprob: -3.1680119037628174
    3. 'road' → logprob: -11.918011665344238
    4. '   ' → logprob: -13.668011665344238
    5. 'self' → logprob: -13.668011665344238
    6. ' ' → logprob: -14.168011665344238
    7. ' road' → logprob: -14.168011665344238
    8. 'import' → logprob: -14.418011665344238
    9. 'n' → logprob: -15.043011665344238
    10. '       ' → logprob: -15.543011665344238

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.750204086303711
    4. '[self' → logprob: -16.00020408630371
    5. '   ' → logprob: -17.12520408630371
    6. '	self' → logprob: -17.75020408630371
    7. '=self' → logprob: -18.12520408630371
    8. '
' → logprob: -18.12520408630371
    9. '       ' → logprob: -18.37520408630371
    10. '[' → logprob: -18.75020408630371

Token 539: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -2.081584716506768e-05
    2. '.' → logprob: -11.500020980834961
    3. 'roads' → logprob: -11.750020980834961
    4. '_ro' → logprob: -14.000020980834961
    5. ' .' → logprob: -14.750020980834961
    6. 'ro' → logprob: -14.750020980834961
    7. ' roads' → logprob: -15.250020980834961
    8. '._' → logprob: -15.500020980834961
    9. '.t' → logprob: -15.500020980834961
    10. '.
' → logprob: -16.00002098083496

Token 540: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -2.2200749754119897e-06
    2. ' ads' → logprob: -13.250001907348633
    3. '
' → logprob: -16.625001907348633
    4. 'a' → logprob: -16.750001907348633
    5. '.ads' → logprob: -16.750001907348633
    6. '_ads' → logprob: -17.250001907348633
    7. 'ods' → logprob: -17.625001907348633
    8. 'ad' → logprob: -17.750001907348633
    9. 'Ads' → logprob: -18.125001907348633
    10. 'ADS' → logprob: -18.750001907348633

Token 541: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10015523433685303
    2. ':' → logprob: -2.4751553535461426
    3. '           ' → logprob: -4.600155353546143
    4. '       ' → logprob: -6.975155353546143
    5. '):
' → logprob: -9.600154876708984
    6. ':
' → logprob: -10.475154876708984
    7. '[' → logprob: -10.725154876708984
    8. '   ' → logprob: -10.975154876708984
    9. ',' → logprob: -11.225154876708984
    10. '.append' → logprob: -12.100154876708984

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016321858391165733
    2. '       ' → logprob: -4.141321659088135
    3. ' adjacency' → logprob: -8.516322135925293
    4. '   ' → logprob: -10.016322135925293
    5. '
' → logprob: -11.016322135925293
    6. 'adj' → logprob: -11.891322135925293
    7. '               ' → logprob: -12.266322135925293
    8. '```' → logprob: -12.641322135925293
    9. '{
' → logprob: -12.891322135925293
    10. ',' → logprob: -13.016322135925293

Token 543: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0007230373448692262
    2. ' adjacency' → logprob: -7.250722885131836
    3. '           ' → logprob: -11.250722885131836
    4. '       ' → logprob: -16.625722885131836
    5. '   ' → logprob: -17.750722885131836
    6. ' adj' → logprob: -18.250722885131836
    7. '               ' → logprob: -18.500722885131836
    8. 'Adj' → logprob: -18.750722885131836
    9. ' adjacent' → logprob: -19.750722885131836
    10. '            
' → logprob: -20.375722885131836

Token 544: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'road' → logprob: -16.875
    3. '[assembly' → logprob: -18.25
    4. '[self' → logprob: -18.625
    5. '[r' → logprob: -18.875
    6. ' [' → logprob: -18.875
    7. '```' → logprob: -19.625
    8. '.setdefault' → logprob: -19.75
    9. '[row' → logprob: -19.75
    10. '   ' → logprob: -20.125

Token 545: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.009779464453458786
    2. '[' → logprob: -4.634779453277588
    3. ' road' → logprob: -11.009779930114746
    4. '{' → logprob: -12.884779930114746
    5. '   ' → logprob: -13.259779930114746
    6. '```' → logprob: -14.259779930114746
    7. 'roads' → logprob: -15.259779930114746
    8. 'Road' → logprob: -15.884779930114746
    9. '[
' → logprob: -16.00977897644043
    10. 'rod' → logprob: -16.00977897644043

Token 546: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -7.600714161526412e-05
    2. '.' → logprob: -9.500076293945312
    3. ' .' → logprob: -14.375076293945312
    4. '```' → logprob: -15.625076293945312
    5. '.ro' → logprob: -15.875076293945312
    6. ').' → logprob: -17.125076293945312
    7. '].' → logprob: -17.375076293945312
    8. '.to' → logprob: -17.750076293945312
    9. 't' → logprob: -17.750076293945312
    10. '.cost' → logprob: -17.750076293945312

Token 547: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00023774817236699164
    2. 'town' → logprob: -8.875237464904785
    3. '1' → logprob: -10.250237464904785
    4. 'owns' → logprob: -10.625237464904785
    5. '{' → logprob: -11.750237464904785
    6. 'wn' → logprob: -12.375237464904785
    7. 'ow' → logprob: -12.625237464904785
    8. '_' → logprob: -12.750237464904785
    9. 'awn' → logprob: -13.125237464904785
    10. '[' → logprob: -13.875237464904785

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.875
    3. ' ' → logprob: -17.375
    4. 's' → logprob: -18.625
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -18.875
    7. '2' → logprob: -19.0
    8. '[' → logprob: -19.75
    9. ' .' → logprob: -19.875
    10. '１' → logprob: -19.875

Token 549: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -6.392202976712724e-06
    2. '].' → logprob: -12.625006675720215
    3. ' .' → logprob: -13.250006675720215
    4. '.' → logprob: -14.000006675720215
    5. '1' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.6250057220459
    7. '.ids' → logprob: -16.6250057220459
    8. ').' → logprob: -17.2500057220459
    9. '```' → logprob: -17.2500057220459
    10. '.t' → logprob: -17.2500057220459

Token 550: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.1041145626222715e-05
    2. '.append' → logprob: -12.500011444091797
    3. ' ].' → logprob: -12.500011444091797
    4. ']' → logprob: -12.875011444091797
    5. '.' → logprob: -14.375011444091797
    6. ').' → logprob: -15.500011444091797
    7. '.app' → logprob: -16.625011444091797
    8. '   ' → logprob: -16.625011444091797
    9. ''].' → logprob: -17.250011444091797
    10. '[' → logprob: -17.250011444091797

Token 551: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. '.append' → logprob: -13.250001907348633
    3. ' append' → logprob: -16.000001907348633
    4. 'app' → logprob: -19.250001907348633
    5. '_append' → logprob: -19.625001907348633
    6. 'Append' → logprob: -20.125001907348633
    7. 'appen' → logprob: -20.500001907348633
    8. '	append' → logprob: -21.375001907348633
    9. 'appe' → logprob: -24.625001907348633
    10. 'ap' → logprob: -25.250001907348633

Token 552: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10021228343248367
    2. '(' → logprob: -2.350212335586548
    3. '(
' → logprob: -12.600212097167969
    4. ' (' → logprob: -13.100212097167969
    5. '   ' → logprob: -15.850212097167969
    6. ' ((' → logprob: -18.10021209716797
    7. '  ' → logprob: -18.60021209716797
    8. ' ' → logprob: -18.60021209716797
    9. '(room' → logprob: -18.60021209716797
    10. '(('' → logprob: -18.97521209716797

Token 553: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.00023059594968799502
    2. ' road' → logprob: -8.37523078918457
    3. 'rod' → logprob: -18.12523078918457
    4. '   ' → logprob: -18.50023078918457
    5. 'Road' → logprob: -18.75023078918457
    6. 'rock' → logprob: -19.00023078918457
    7. ' ' → logprob: -19.37523078918457
    8. 'ro' → logprob: -19.50023078918457
    9. 'roads' → logprob: -19.50023078918457
    10. 'rail' → logprob: -20.25023078918457

Token 554: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.8312570318812504e-05
    2. '.' → logprob: -11.000018119812012
    3. ' .' → logprob: -13.500018119812012
    4. 't' → logprob: -16.875019073486328
    5. ').' → logprob: -17.750019073486328
    6. '	t' → logprob: -18.375019073486328
    7. '   ' → logprob: -18.500019073486328
    8. '2' → logprob: -19.250019073486328
    9. ',t' → logprob: -19.375019073486328
    10. '
' → logprob: -19.375019073486328

Token 555: 'own' (ID: 940)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5264348387718201
    2. 'own' → logprob: -1.2764348983764648
    3. '.t' → logprob: -2.276434898376465
    4. '1' → logprob: -4.651434898376465
    5. 'town' → logprob: -4.776434898376465
    6. '.' → logprob: -5.276434898376465
    7. 'road' → logprob: -6.776434898376465
    8. 'wn' → logprob: -7.276434898376465
    9. 't' → logprob: -7.401434898376465
    10. 'o' → logprob: -7.901434898376465

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.250001907348633
    4. 'road' → logprob: -16.187501907348633
    5. '.id' → logprob: -16.250001907348633
    6. '```' → logprob: -16.250001907348633
    7. '
' → logprob: -17.062501907348633
    8. '.' → logprob: -17.250001907348633
    9. '۲' → logprob: -17.687501907348633
    10. 't' → logprob: -17.687501907348633

Token 557: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -5.676981345459353e-06
    2. ' .' → logprob: -12.875005722045898
    3. ',' → logprob: -13.125005722045898
    4. '.' → logprob: -14.500005722045898
    5. ' ' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.1250057220459
    7. ',id' → logprob: -16.6250057220459
    8. 'id' → logprob: -16.7500057220459
    9. '	id' → logprob: -17.3750057220459
    10. ').' → logprob: -17.3750057220459

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ',
' → logprob: -16.375036239624023
    4. '‌,' → logprob: -17.250036239624023
    5. '),' → logprob: -17.625036239624023
    6. '<|end|>' → logprob: -18.625036239624023
    7. '`,' → logprob: -18.750036239624023
    8. ',

' → logprob: -19.500036239624023
    9. ',),' → logprob: -20.375036239624023
    10. '```' → logprob: -20.625036239624023

Token 559: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.1128339096903801
    2. ' road' → logprob: -2.2378339767456055
    3. ' ' → logprob: -13.237833976745605
    4. 'Road' → logprob: -13.612833976745605
    5. ' ' → logprob: -13.612833976745605
    6. '   ' → logprob: -13.925333976745605
    7. 'rod' → logprob: -14.300333976745605
    8. 'roads' → logprob: -14.362833976745605
    9. 'ro' → logprob: -14.550333976745605
    10. '
' → logprob: -14.612833976745605

Token 560: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.00022284770966507494
    2. 'cost' → logprob: -8.500223159790039
    3. '.' → logprob: -11.375223159790039
    4. ' .' → logprob: -12.500223159790039
    5. ' cost' → logprob: -12.750223159790039
    6. 'Cost' → logprob: -15.375223159790039
    7. ').' → logprob: -15.625223159790039
    8. '_cost' → logprob: -15.625223159790039
    9. '.c' → logprob: -15.625223159790039
    10. '(cost' → logprob: -15.750223159790039

Token 561: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31382766366004944
    2. '))
' → logprob: -1.313827633857727
    3. ')' → logprob: -7.6888275146484375
    4. ' ))
' → logprob: -10.313827514648438
    5. ' ))' → logprob: -10.438827514648438
    6. ')
' → logprob: -10.938827514648438
    7. '))

' → logprob: -11.188827514648438
    8. '))
' → logprob: -12.313827514648438
    9. '       ' → logprob: -13.063827514648438
    10. '),' → logprob: -13.188827514648438

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037263904232531786
    2. '       ' → logprob: -8.000372886657715
    3. '   ' → logprob: -10.750372886657715
    4. 'adj' → logprob: -11.500372886657715
    5. '```' → logprob: -13.125372886657715
    6. ',' → logprob: -13.750372886657715
    7. '          ' → logprob: -14.375372886657715
    8. ' adjacency' → logprob: -14.625372886657715
    9. '
' → logprob: -14.875372886657715
    10. '               ' → logprob: -14.875372886657715

Token 563: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.014498415403068066
    2. ' adjacency' → logprob: -4.264498233795166
    3. '           ' → logprob: -8.014498710632324
    4. '       ' → logprob: -13.139498710632324
    5. ' adj' → logprob: -13.139498710632324
    6. '   ' → logprob: -15.389498710632324
    7. ' adjacent' → logprob: -17.264497756958008
    8. '               ' → logprob: -17.389497756958008
    9. 'Adj' → logprob: -18.139497756958008
    10. '          ' → logprob: -18.514497756958008

Token 564: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '   ' → logprob: -18.125
    3. '[
' → logprob: -19.375
    4. '       ' → logprob: -19.625
    5. ' [' → logprob: -19.625
    6. '           ' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '[[' → logprob: -21.0
    9. '
' → logprob: -21.25
    10. ')[' → logprob: -21.875

Token 565: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.00014239625306800008
    2. ' road' → logprob: -9.000142097473145
    3. '[' → logprob: -11.125142097473145
    4. 'rod' → logprob: -13.375142097473145
    5. ' ' → logprob: -14.750142097473145
    6. '   ' → logprob: -14.750142097473145
    7. 'ro' → logprob: -15.125142097473145
    8. 'roads' → logprob: -15.375142097473145
    9. 'r' → logprob: -15.625142097473145
    10. 'rail' → logprob: -15.875142097473145

Token 566: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0013197619700804353
    2. '.' → logprob: -6.751319885253906
    3. '[' → logprob: -9.001319885253906
    4. '[t' → logprob: -11.501319885253906
    5. ' .' → logprob: -11.501319885253906
    6. '1' → logprob: -13.626319885253906
    7. '.id' → logprob: -14.376319885253906
    8. '```' → logprob: -14.376319885253906
    9. '.ro' → logprob: -14.751319885253906
    10. 't' → logprob: -14.751319885253906

Token 567: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00033522743615321815
    2. 'wn' → logprob: -8.250335693359375
    3. 'on' → logprob: -10.625335693359375
    4. '.' → logprob: -10.750335693359375
    5. 'town' → logprob: -11.500335693359375
    6. 'ow' → logprob: -11.875335693359375
    7. '1' → logprob: -12.875335693359375
    8. 'awn' → logprob: -13.750335693359375
    9. 'owner' → logprob: -13.750335693359375
    10. 'won' → logprob: -13.875335693359375

Token 568: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005241937469691038
    2. '2' → logprob: -5.255241870880127
    3. '.' → logprob: -13.380242347717285
    4. ' ' → logprob: -13.380242347717285
    5. '.t' → logprob: -13.630242347717285
    6. '.id' → logprob: -14.255242347717285
    7. '   ' → logprob: -14.380242347717285
    8. '
' → logprob: -14.567742347717285
    9. '```' → logprob: -14.692742347717285
    10. 'town' → logprob: -15.255242347717285

Token 569: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -4.246537173457909e-06
    2. ' .' → logprob: -12.625003814697266
    3. '.' → logprob: -14.750003814697266
    4. ').' → logprob: -15.625003814697266
    5. '.ids' → logprob: -16.500003814697266
    6. '[' → logprob: -17.125003814697266
    7. '].' → logprob: -17.250003814697266
    8. ' ' → logprob: -17.750003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '}.' → logprob: -19.250003814697266

Token 570: '].' (ID: 1651)
  Prédit: '.id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.2533966898918152
    2. '].' → logprob: -1.50339674949646
    3. ').' → logprob: -6.628396511077881
    4. ' ].' → logprob: -10.003396987915039
    5. '.' → logprob: -10.253396987915039
    6. '.ids' → logprob: -10.753396987915039
    7. ']' → logprob: -10.878396987915039
    8. '}.' → logprob: -11.753396987915039
    9. ' .' → logprob: -12.503396987915039
    10. '.ad' → logprob: -13.503396987915039

Token 571: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.0219828002154827e-05
    2. '.append' → logprob: -11.125020027160645
    3. 'adj' → logprob: -12.250020027160645
    4. ' append' → logprob: -15.125020027160645
    5. '	append' → logprob: -15.750020027160645
    6. 'appen' → logprob: -15.875020027160645
    7. 'id' → logprob: -16.00002098083496
    8. 'add' → logprob: -17.25002098083496
    9. 'app' → logprob: -17.75002098083496
    10. '_append' → logprob: -18.12502098083496

Token 572: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '(
' → logprob: -16.75020408630371
    4. ' (' → logprob: -19.37520408630371
    5. ' ((' → logprob: -19.37520408630371
    6. '   ' → logprob: -19.75020408630371
    7. '([' → logprob: -21.12520408630371
    8. '       ' → logprob: -21.37520408630371
    9. '```' → logprob: -21.50020408630371
    10. ' ' → logprob: -21.62520408630371

Token 573: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.0010100651998072863
    2. '(' → logprob: -7.001009941101074
    3. ' road' → logprob: -9.251009941101074
    4. 'Road' → logprob: -14.001009941101074
    5. 'roads' → logprob: -14.751009941101074
    6. ' (' → logprob: -15.001009941101074
    7. 'rod' → logprob: -15.376009941101074
    8. 'ro' → logprob: -15.626009941101074
    9. '-road' → logprob: -15.626009941101074
    10. '[' → logprob: -16.25101089477539

Token 574: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.04943367838859558
    2. '.' → logprob: -3.049433708190918
    3. '[' → logprob: -7.424433708190918
    4. '(' → logprob: -9.299433708190918
    5. '.ro' → logprob: -10.174433708190918
    6. ')' → logprob: -10.299433708190918
    7. ',' → logprob: -10.424433708190918
    8. '1' → logprob: -11.299433708190918
    9. '```' → logprob: -11.799433708190918
    10. 'road' → logprob: -11.924433708190918

Token 575: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.7837308645248413
    2. '.t' → logprob: -0.7837308645248413
    3. '1' → logprob: -2.658730983734131
    4. 'town' → logprob: -4.408730983734131
    5. '.' → logprob: -6.158730983734131
    6. 'wn' → logprob: -6.408730983734131
    7. 'n' → logprob: -8.783730506896973
    8. 't' → logprob: -9.783730506896973
    9. 'owns' → logprob: -9.783730506896973
    10. '.n' → logprob: -9.908730506896973

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '.t' → logprob: -13.00000286102295
    3. '.id' → logprob: -15.50000286102295
    4. '2' → logprob: -15.75000286102295
    5. 'road' → logprob: -15.87500286102295
    6. 't' → logprob: -16.000003814697266
    7. '
' → logprob: -16.500003814697266
    8. '.' → logprob: -16.500003814697266
    9. 'town' → logprob: -16.500003814697266
    10. ' ' → logprob: -16.562503814697266

Token 577: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -7.44574936106801e-05
    2. '.' → logprob: -9.75007438659668
    3. ').' → logprob: -11.87507438659668
    4. ' .' → logprob: -12.00007438659668
    5. '.ids' → logprob: -14.37507438659668
    6. '<|end|>' → logprob: -14.50007438659668
    7. ' ' → logprob: -14.62507438659668
    8. '[' → logprob: -15.62507438659668
    9. ')' → logprob: -15.62507438659668
    10. ',' → logprob: -15.75007438659668

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020401719666551799
    2. ' ,' → logprob: -8.500204086303711
    3. ',
' → logprob: -14.875204086303711
    4. '),' → logprob: -15.875204086303711
    5. ')' → logprob: -17.62520408630371
    6. '‌,' → logprob: -18.00020408630371
    7. '`,' → logprob: -19.00020408630371
    8. '<|end|>' → logprob: -19.12520408630371
    9. ' ' → logprob: -19.37520408630371
    10. '[' → logprob: -19.50020408630371

Token 579: ' road' (ID: 8733)
  Prédit: ' road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' road' → logprob: -0.47414863109588623
    2. 'road' → logprob: -0.9741486310958862
    3. ' ' → logprob: -10.224148750305176
    4. ' ' → logprob: -10.974148750305176
    5. ',' → logprob: -12.599148750305176
    6. 'Road' → logprob: -12.974148750305176
    7. ')' → logprob: -13.599148750305176
    8. ' roads' → logprob: -13.849148750305176
    9. ' roadmap' → logprob: -13.911648750305176
    10. '```' → logprob: -13.974148750305176

Token 580: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0005790081340819597
    2. '.id' → logprob: -7.500578880310059
    3. 'cost' → logprob: -11.250578880310059
    4. ',' → logprob: -11.875578880310059
    5. '.' → logprob: -13.000578880310059
    6. '1' → logprob: -14.000578880310059
    7. '2' → logprob: -14.625578880310059
    8. ' cost' → logprob: -14.625578880310059
    9. '_cost' → logprob: -15.000578880310059
    10. ' .' → logprob: -15.000578880310059

Token 581: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.059460513293743134
    2. ')' → logprob: -3.059460401535034
    3. '))
' → logprob: -4.559460639953613
    4. ')
' → logprob: -8.059460639953613
    5. '       ' → logprob: -10.559460639953613
    6. ' ))' → logprob: -13.059460639953613
    7. ' )' → logprob: -14.059460639953613
    8. '   ' → logprob: -14.934460639953613
    9. '))

' → logprob: -15.059460639953613
    10. ')))' → logprob: -15.184460639953613

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021486106561496854
    2. 'return' → logprob: -9.000214576721191
    3. ' return' → logprob: -9.875214576721191
    4. '	return' → logprob: -11.125214576721191
    5. '	' → logprob: -11.250214576721191
    6. '   ' → logprob: -11.875214576721191
    7. '<|end|>' → logprob: -13.250214576721191
    8. '
' → logprob: -13.500214576721191
    9. '```' → logprob: -14.375214576721191
    10. ' ' → logprob: -14.625214576721191

Token 583: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003976412583142519
    2. ' return' → logprob: -6.128976345062256
    3. 'return' (adapté à ' return') → logprob: -6.378976345062256
    4. '	return' → logprob: -9.878976821899414
    5. '   ' → logprob: -10.753976821899414
    6. '
' → logprob: -11.628976821899414
    7. '	' → logprob: -12.128976821899414
    8. ' ' → logprob: -12.753976821899414
    9. '<|end|>' → logprob: -13.753976821899414
    10. ':return' → logprob: -14.753976821899414

Token 584: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03804183006286621
    2. ' adjacency' → logprob: -3.288041830062866
    3. ' adj' → logprob: -15.038042068481445
    4. 'Adj' → logprob: -16.788042068481445
    5. ' adjacent' → logprob: -16.788042068481445
    6. ' ' → logprob: -18.163042068481445
    7. '{' → logprob: -18.913042068481445
    8. ' ' → logprob: -19.038042068481445
    9. '_adj' → logprob: -19.663042068481445
    10. '   ' → logprob: -19.663042068481445

Token 585: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19627368450164795
    2. 'def' → logprob: -2.0712738037109375
    3. '<|end|>' → logprob: -3.4462738037109375
    4. 'class' → logprob: -4.1962738037109375
    5. '
' → logprob: -5.4462738037109375
    6. ' def' → logprob: -7.6962738037109375
    7. '```' → logprob: -8.821273803710938
    8. '<|end|>' → logprob: -8.946273803710938
    9. '    
' → logprob: -9.821273803710938
    10. '	def' → logprob: -10.071273803710938

Token 587: ' Convenience' (ID: 142321)
  Prédit: 'Office'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Office' → logprob: -1.0798615217208862
    2. 'Company' → logprob: -1.5798615217208862
    3. 'Network' → logprob: -2.329861640930176
    4. ' Office' → logprob: -2.829861640930176
    5. 'Solution' → logprob: -3.079861640930176
    6. 'Facility' → logprob: -3.704861640930176
    7. ' Network' → logprob: -3.829861640930176
    8. 'Delivery' → logprob: -3.829861640930176
    9. ' Company' → logprob: -4.079861640930176
    10. 'City' → logprob: -4.579861640930176

Token 588: 'Evaluator' (ID: 87172)
  Prédit: 'Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Score' → logprob: -1.0015678405761719
    2. 'Store' → logprob: -1.3765678405761719
    3. 'Calculator' → logprob: -1.5015678405761719
    4. 'Center' → logprob: -3.626567840576172
    5. 'Network' → logprob: -3.751567840576172
    6. 'Of' → logprob: -3.751567840576172
    7. ':' → logprob: -3.876567840576172
    8. 'Index' → logprob: -4.251567840576172
    9. 'Factor' → logprob: -4.501567840576172
    10. 'Office' → logprob: -4.876567840576172

Token 589: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029787633568048477
    2. ':
' → logprob: -3.529787540435791
    3. ' :' → logprob: -10.90478801727295
    4. '(' → logprob: -12.77978801727295
    5. ':

' → logprob: -12.90478801727295
    6. ':def' → logprob: -12.90478801727295
    7. '   ' → logprob: -13.02978801727295
    8. '(object' → logprob: -13.15478801727295
    9. ' :
' → logprob: -13.27978801727295
    10. '<|end|>' → logprob: -14.02978801727295

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006550289690494537
    2. ' def' → logprob: -5.381550312042236
    3. 'def' → logprob: -6.256550312042236
    4. '	def' → logprob: -12.006549835205078
    5. '    
' → logprob: -13.756549835205078
    6. '   ' → logprob: -14.006549835205078
    7. 'class' → logprob: -14.506549835205078
    8. '
' → logprob: -14.756549835205078
    9. '```' → logprob: -14.756549835205078
    10. ':' → logprob: -15.381549835205078

Token 591: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20321713387966156
    2. 'def' (adapté à ' def') → logprob: -1.7032171487808228
    3. '   ' → logprob: -6.328217029571533
    4. 'class' → logprob: -12.328217506408691
    5. '	def' → logprob: -12.703217506408691
    6. ' ' → logprob: -12.828217506408691
    7. '  ' → logprob: -12.953217506408691
    8. '    ' → logprob: -13.203217506408691
    9. '
' → logprob: -14.328217506408691
    10. ':def' → logprob: -14.703217506408691

Token 592: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18501676619052887
    2. 'init' → logprob: -2.3100168704986572
    3. '_init' → logprob: -3.1850168704986572
    4. ' init' → logprob: -4.185016632080078
    5. '__' → logprob: -4.935016632080078
    6. ' def' → logprob: -5.435016632080078
    7. 'def' → logprob: -6.810016632080078
    8. '```' → logprob: -8.060016632080078
    9. '(init' → logprob: -11.060016632080078
    10. ' ' → logprob: -11.185016632080078

Token 593: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'def' → logprob: -14.500000953674316
    3. ' init' → logprob: -17.375
    4. 'call' → logprob: -19.125
    5. '_init' → logprob: -20.125
    6. 'ini' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. 'int' → logprob: -20.375
    9. '(init' → logprob: -20.5
    10. 'new' → logprob: -20.75

Token 594: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0029645077884197235
    2. '(self' → logprob: -5.877964496612549
    3. '__' → logprob: -9.377964973449707
    4. '__(
' → logprob: -9.627964973449707
    5. '_(' → logprob: -12.752964973449707
    6. ' (' → logprob: -12.877964973449707
    7. '__((' → logprob: -13.377964973449707
    8. '(' → logprob: -14.127964973449707
    9. '<>(' → logprob: -15.002964973449707
    10. '__('' → logprob: -15.377964973449707

Token 595: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031496648443862796
    2. ' self' → logprob: -8.500314712524414
    3. ')' → logprob: -9.625314712524414
    4. '
' → logprob: -10.375314712524414
    5. '(self' → logprob: -11.750314712524414
    6. ',' → logprob: -12.500314712524414
    7. ')(' → logprob: -14.375314712524414
    8. '0' → logprob: -14.625314712524414
    9. '):
' → logprob: -15.125314712524414
    10. '<|end|>' → logprob: -15.250314712524414

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005393126513808966
    2. 'self' → logprob: -5.630393028259277
    3. '):
' → logprob: -7.255393028259277
    4. ' ,' → logprob: -7.380393028259277
    5. '):' → logprob: -8.255393028259277
    6. '(self' → logprob: -9.130393028259277
    7. ',
' → logprob: -10.505393028259277
    8. ' self' → logprob: -11.255393028259277
    9. ' (' → logprob: -11.380393028259277
    10. '       ' → logprob: -11.630393028259277

Token 597: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.4375559985637665
    2. ' network' → logprob: -1.6875560283660889
    3. 'office' → logprob: -2.437556028366089
    4. ' office' → logprob: -2.562556028366089
    5. ')' → logprob: -6.68755578994751
    6. 'self' → logprob: -7.18755578994751
    7. ' offices' → logprob: -7.56255578994751
    8. '   ' → logprob: -8.187556266784668
    9. 'off' → logprob: -8.312556266784668
    10. 'road' → logprob: -8.500056266784668

Token 598: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.868328920158092e-05
    2. '):' → logprob: -11.375028610229492
    3. '):
' → logprob: -11.625028610229492
    4. ' :' → logprob: -12.000028610229492
    5. ',' → logprob: -13.625028610229492
    6. '_:' → logprob: -15.125028610229492
    7. ' ):' → logprob: -16.000028610229492
    8. '   ' → logprob: -16.125028610229492
    9. ')' → logprob: -16.625028610229492
    10. '```' → logprob: -16.625028610229492

Token 599: ' Office' (ID: 11360)
  Prédit: 'Office'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Office' → logprob: -0.023246407508850098
    2. ' Office' → logprob: -3.7732462882995605
    3. ')' → logprob: -14.648246765136719
    4. '   ' → logprob: -16.02324676513672
    5. '.Office' → logprob: -16.52324676513672
    6. '
' → logprob: -16.77324676513672
    7. ' ' → logprob: -17.14824676513672
    8. 'office' → logprob: -17.39824676513672
    9. 'Optional' → logprob: -17.52324676513672
    10. 'Road' → logprob: -17.52324676513672

Token 600: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -1.9361264946837764e-07
    2. ' Network' → logprob: -16.5
    3. '_network' → logprob: -19.25
    4. 'network' → logprob: -20.375
    5. ' network' → logprob: -20.875
    6. 'etwork' → logprob: -20.875
    7. 'Networks' → logprob: -21.0
    8. '
' → logprob: -21.25
    9. '.Network' → logprob: -22.625
    10. 'Net' → logprob: -22.875

Token 601: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6215301752090454
    2. '):
' → logprob: -0.8715301752090454
    3. ',' → logprob: -3.121530055999756
    4. ')' → logprob: -7.871530055999756
    5. '):
' → logprob: -10.621530532836914
    6. '   ' → logprob: -10.746530532836914
    7. ' ):' → logprob: -10.871530532836914
    8. ' ):
' → logprob: -10.996530532836914
    9. ':' → logprob: -12.496530532836914
    10. ' ,' → logprob: -12.996530532836914

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029146509245038033
    2. 'self' → logprob: -3.654146432876587
    3. '   ' → logprob: -6.154146671295166
    4. ' self' → logprob: -7.779146671295166
    5. 'def' → logprob: -8.279146194458008
    6. '	self' → logprob: -11.029146194458008
    7. ',' → logprob: -11.154146194458008
    8. '(self' → logprob: -12.529146194458008
    9. '	' → logprob: -13.029146194458008
    10. ')' → logprob: -13.279146194458008

Token 603: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09566567093133926
    2. '       ' → logprob: -2.970665693283081
    3. ' self' → logprob: -3.220665693283081
    4. '	self' → logprob: -10.72066593170166
    5. '   ' → logprob: -12.47066593170166
    6. '
' → logprob: -12.47066593170166
    7. ' ' → logprob: -14.09566593170166
    8. '	' → logprob: -14.22066593170166
    9. '(self' → logprob: -14.22066593170166
    10. 's' → logprob: -14.72066593170166

Token 604: '.network' (ID: 35596)
  Prédit: '.network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.network' → logprob: -0.0008146316395141184
    2. '.' → logprob: -7.250814437866211
    3. 'network' → logprob: -9.875814437866211
    4. ' .' → logprob: -10.000814437866211
    5. '
' → logprob: -12.500814437866211
    6. ' network' → logprob: -13.750814437866211
    7. '.net' → logprob: -14.125814437866211
    8. '.n' → logprob: -14.125814437866211
    9. '   ' → logprob: -15.250814437866211
    10. '_network' → logprob: -15.625814437866211

Token 605: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812970280647278
    2. '=' → logprob: -1.406296968460083
    3. '   ' → logprob: -9.281296730041504
    4. ':' → logprob: -11.406296730041504
    5. ' ' → logprob: -11.531296730041504
    6. '.' → logprob: -11.906296730041504
    7. '.network' → logprob: -11.906296730041504
    8. ',' → logprob: -12.031296730041504
    9. ' =
' → logprob: -12.281296730041504
    10. '  ' → logprob: -13.031296730041504

Token 606: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.10020732134580612
    2. ' network' → logprob: -2.3502073287963867
    3. '(network' → logprob: -15.100207328796387
    4. '
' → logprob: -15.600207328796387
    5. 'net' → logprob: -15.850207328796387
    6. '.network' → logprob: -17.22520637512207
    7. '_network' → logprob: -17.85020637512207
    8. ' ' → logprob: -18.10020637512207
    9. '   ' → logprob: -18.10020637512207
    10. ' ' → logprob: -18.22520637512207

Token 607: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038674529641866684
    2. '<|end|>' → logprob: -3.4136745929718018
    3. '

' → logprob: -5.913674354553223
    4. '   ' → logprob: -7.163674354553223
    5. '<|end|>' → logprob: -7.788674354553223
    6. '    
' → logprob: -8.413674354553223
    7. ' 
' → logprob: -8.413674354553223
    8. ',' → logprob: -8.538674354553223
    9. '       ' → logprob: -9.038674354553223
    10. '  
' → logprob: -9.038674354553223

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18665654957294464
    2. 'def' → logprob: -2.5616564750671387
    3. '
' → logprob: -2.6866564750671387
    4. '       ' → logprob: -4.561656475067139
    5. ' def' → logprob: -4.686656475067139
    6. '<|end|>' → logprob: -5.561656475067139
    7. '

' → logprob: -7.686656475067139
    8. '    
' → logprob: -8.311656951904297
    9. '	def' → logprob: -8.561656951904297
    10. '        
' → logprob: -8.936656951904297

Token 609: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011021859245374799
    2. ' def' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.125110626220703
    4. '
' → logprob: -15.250110626220703
    5. 'from' → logprob: -15.750110626220703
    6. 'class' → logprob: -16.000110626220703
    7. '	def' → logprob: -18.375110626220703
    8. ' ' → logprob: -18.625110626220703
    9. '```' → logprob: -19.375110626220703
    10. 'de' → logprob: -19.375110626220703

Token 610: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.7649815678596497
    2. 'evaluate' → logprob: -1.2649815082550049
    3. ' best' → logprob: -2.264981508255005
    4. ' find' → logprob: -3.264981508255005
    5. ' compute' → logprob: -3.389981508255005
    6. ' calculate' → logprob: -4.139981746673584
    7. 'compute' → logprob: -4.389981746673584
    8. 'calculate' → logprob: -4.514981746673584
    9. 'best' → logprob: -4.639981746673584
    10. ' convenience' → logprob: -4.764981746673584

Token 611: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003619217313826084
    2. '(' → logprob: -8.000362396240234
    3. ' (' → logprob: -11.250362396240234
    4. '_con' → logprob: -11.750362396240234
    5. 'self' → logprob: -13.750362396240234
    6. '(s' → logprob: -14.000362396240234
    7. '()' → logprob: -14.000362396240234
    8. '(
' → logprob: -14.250362396240234
    9. '_all' → logprob: -15.000362396240234
    10. '_' → logprob: -15.250362396240234

Token 612: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03641193360090256
    2. ')' → logprob: -3.411412000656128
    3. ' ,' → logprob: -6.911411762237549
    4. '):' → logprob: -7.286411762237549
    5. '):
' → logprob: -7.411411762237549
    6. 'self' → logprob: -8.411412239074707
    7. ' )' → logprob: -8.661412239074707
    8. '   ' → logprob: -10.536412239074707
    9. '       ' → logprob: -10.911412239074707
    10. ' ):' → logprob: -11.786412239074707

Token 613: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006207128055393696
    2. '(' → logprob: -5.13120698928833
    3. ' (' → logprob: -9.006207466125488
    4. 'self' → logprob: -9.881207466125488
    5. '(
' → logprob: -10.006207466125488
    6. '   ' → logprob: -11.006207466125488
    7. ':' → logprob: -11.131207466125488
    8. '       ' → logprob: -11.881207466125488
    9. ' self' → logprob: -12.381207466125488
    10. '(s' → logprob: -12.881207466125488

Token 614: ' Tuple' (ID: 50841)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6183637976646423
    2. ' int' → logprob: -1.493363857269287
    3. 'Dict' → logprob: -2.243363857269287
    4. 'List' → logprob: -2.993363857269287
    5. ' Dict' → logprob: -3.243363857269287
    6. ' List' → logprob: -3.368363857269287
    7. 'None' → logprob: -6.243363857269287
    8. ' None' → logprob: -6.743363857269287
    9. 'Tuple' → logprob: -6.743363857269287
    10. ' Tuple' → logprob: -7.118363857269287

Token 615: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0003147280658595264
    2. '[' → logprob: -8.500314712524414
    3. '[List' → logprob: -9.125314712524414
    4. '[
' → logprob: -13.250314712524414
    5. '[Int' → logprob: -15.500314712524414
    6. '(int' → logprob: -16.000314712524414
    7. 'int' → logprob: -16.250314712524414
    8. '[str' → logprob: -16.250314712524414
    9. ',int' → logprob: -17.000314712524414
    10. '[np' → logprob: -17.750314712524414

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023607931507285684
    2. ',int' → logprob: -9.125236511230469
    3. ',float' → logprob: -10.125236511230469
    4. ' ,' → logprob: -10.250236511230469
    5. ',List' → logprob: -10.250236511230469
    6. 'int' → logprob: -12.125236511230469
    7. '[int' → logprob: -12.375236511230469
    8. ',
' → logprob: -12.750236511230469
    9. ',bool' → logprob: -13.625236511230469
    10. '[' → logprob: -14.000236511230469

Token 617: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.30517902970314026
    2. 'List' → logprob: -1.4301789999008179
    3. 'Dict' → logprob: -4.680179119110107
    4. ' int' → logprob: -5.180179119110107
    5. ' List' → logprob: -5.555179119110107
    6. 'float' → logprob: -5.555179119110107
    7. '[int' → logprob: -7.305179119110107
    8. '[List' → logprob: -9.55517864227295
    9. 'Town' → logprob: -9.68017864227295
    10. ' float' → logprob: -9.80517864227295

Token 618: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.125018119812012
    3. ',int' → logprob: -13.625018119812012
    4. ',List' → logprob: -14.375018119812012
    5. ',
' → logprob: -14.625018119812012
    6. '   ' → logprob: -14.875018119812012
    7. ']:' → logprob: -15.750018119812012
    8. ']:
' → logprob: -16.250017166137695
    9. 'int' → logprob: -17.500017166137695
    10. '‌,' → logprob: -17.625017166137695

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019938242621719837
    2. 'best' → logprob: -7.001993656158447
    3. ' best' → logprob: -7.501993656158447
    4. 'min' → logprob: -8.126994132995605
    5. ' min' → logprob: -9.501994132995605
    6. 'max' → logprob: -9.626994132995605
    7. ' max' → logprob: -11.126994132995605
    8. 'n' → logprob: -11.501994132995605
    9. '```' → logprob: -11.501994132995605
    10. 'all' → logprob: -11.876994132995605

Token 620: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.3297620415687561
    2. 'best' → logprob: -1.4547619819641113
    3. 'town' → logprob: -3.8297619819641113
    4. ' min' → logprob: -4.579761981964111
    5. ' best' → logprob: -5.204761981964111
    6. '       ' → logprob: -5.454761981964111
    7. 'max' → logprob: -6.204761981964111
    8. 'all' → logprob: -6.454761981964111
    9. 'minimal' → logprob: -7.579761981964111
    10. '   ' → logprob: -8.07976245880127

Token 621: '_t' (ID: 838)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1220166683197021
    2. '_distance' → logprob: -1.3720166683197021
    3. '_total' → logprob: -1.4970166683197021
    4. '_con' → logprob: -2.247016668319702
    5. '_avg' → logprob: -3.747016668319702
    6. '_average' → logprob: -4.122016906738281
    7. '_sum' → logprob: -4.872016906738281
    8. '_city' → logprob: -4.997016906738281
    9. '_score' → logprob: -5.122016906738281
    10. '_dist' → logprob: -5.372016906738281

Token 622: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.006200145464390516
    2. 'otal' → logprob: -7.006200313568115
    3. 'ime' → logprob: -7.006200313568115
    4. '_id' → logprob: -7.131200313568115
    5. ',' → logprob: -7.631200313568115
    6. 'id' → logprob: -8.131199836730957
    7. 'oken' → logprob: -8.131199836730957
    8. 'owns' → logprob: -8.256199836730957
    9. 'ow' → logprob: -8.381199836730957
    10. '_cost' → logprob: -8.568699836730957

Token 623: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.028303369879722595
    2. ' =' → logprob: -4.028303146362305
    3. ',' → logprob: -4.653303146362305
    4. '=' → logprob: -8.028303146362305
    5. 'id' → logprob: -8.653303146362305
    6. 's' → logprob: -11.028303146362305
    7. ' ,' → logprob: -11.153303146362305
    8. ':' → logprob: -11.528303146362305
    9. '_cost' → logprob: -12.153303146362305
    10. '_,' → logprob: -12.278303146362305

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12132984399795532
    2. ',' → logprob: -2.7463297843933105
    3. '=' → logprob: -2.9963297843933105
    4. ' ,' → logprob: -9.746330261230469
    5. ':' → logprob: -10.246330261230469
    6. ' ' → logprob: -11.621330261230469
    7. 's' → logprob: -11.746330261230469
    8. '   ' → logprob: -11.746330261230469
    9. '=None' → logprob: -12.996330261230469
    10. '  ' → logprob: -14.308830261230469

Token 625: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7775095701217651
    2. 'min' → logprob: -0.9025095701217651
    3. ' None' → logprob: -2.7775096893310547
    4. 'float' → logprob: -2.9025096893310547
    5. ' min' → logprob: -4.152509689331055
    6. '   ' → logprob: -6.652509689331055
    7. ' float' → logprob: -7.277509689331055
    8. '-' → logprob: -9.777509689331055
    9. '       ' → logprob: -11.402509689331055
    10. '0' → logprob: -11.527509689331055

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. 'float' → logprob: -15.625
    4. '2' → logprob: -16.75
    5. '-' → logprob: -17.125
    6. '   ' → logprob: -17.625
    7. '```' → logprob: -18.25
    8. ' -' → logprob: -19.375
    9. 'import' → logprob: -19.5
    10. '
' → logprob: -20.0625

Token 627: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5828182697296143
    2. '       ' → logprob: -1.2078182697296143
    3. ' min' → logprob: -2.0828182697296143
    4. ',' → logprob: -4.207818031311035
    5. '
' → logprob: -6.707818031311035
    6. '        
' → logprob: -6.832818031311035
    7. ',min' → logprob: -7.457818031311035
    8. 'minimum' → logprob: -9.207818031311035
    9. '       
' → logprob: -9.457818031311035
    10. 'minimal' → logprob: -9.832818031311035

Token 628: '       ' (ID: 309)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.47741463780403137
    2. '
' → logprob: -1.852414608001709
    3. 'min' → logprob: -2.352414608001709
    4. '       ' → logprob: -2.352414608001709
    5. ',' → logprob: -3.852414608001709
    6. '        
' → logprob: -5.102414608001709
    7. '        ' → logprob: -6.477414608001709
    8. ',min' → logprob: -6.977414608001709
    9. '	min' → logprob: -7.727414608001709
    10. ' minimum' → logprob: -7.977414608001709

Token 629: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0002149802603526041
    2. ' min' → logprob: -8.750214576721191
    3. 'best' → logprob: -11.000214576721191
    4. 'max' → logprob: -11.125214576721191
    5. 'minimal' → logprob: -11.500214576721191
    6. '   ' → logprob: -11.625214576721191
    7. 'minimum' → logprob: -13.000214576721191
    8. '       ' → logprob: -13.500214576721191
    9. '	min' → logprob: -14.750214576721191
    10. '```' → logprob: -14.875214576721191

Token 630: '_sum' (ID: 29859)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.08950456231832504
    2. '_distance' → logprob: -3.8395044803619385
    3. '_total' → logprob: -4.339504718780518
    4. '_value' → logprob: -4.339504718780518
    5. '_con' → logprob: -4.339504718780518
    6. '_average' → logprob: -4.589504718780518
    7. '_sum' → logprob: -4.839504718780518
    8. '_avg' → logprob: -5.339504718780518
    9. '_score' → logprob: -6.964504718780518
    10. '_dist' → logprob: -7.464504718780518

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17695307731628418
    2. '=' → logprob: -2.801953077316284
    3. '_cost' → logprob: -2.801953077316284
    4. '_' → logprob: -3.551953077316284
    5. '_distance' → logprob: -4.801953315734863
    6. '_dist' → logprob: -6.051953315734863
    7. ' ' → logprob: -7.051953315734863
    8. 'cost' → logprob: -7.926953315734863
    9. 'dist' → logprob: -8.676953315734863
    10. '   ' → logprob: -9.676953315734863

Token 632: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00015860427811276168
    2. ' float' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. '	float' → logprob: -17.625158309936523
    5. 'flo' → logprob: -18.625158309936523
    6. '<float' → logprob: -19.000158309936523
    7. ',float' → logprob: -19.750158309936523
    8. '=float' → logprob: -19.750158309936523
    9. 'fl' → logprob: -20.250158309936523
    10. '(float' → logprob: -20.500158309936523

Token 633: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1472419600977446e-06
    2. 'inf' → logprob: -14.625000953674316
    3. '("' → logprob: -14.875000953674316
    4. ''in' → logprob: -15.750000953674316
    5. '(' → logprob: -15.875000953674316
    6. ''s' → logprob: -18.000001907348633
    7. '(in' → logprob: -18.250001907348633
    8. '('-' → logprob: -18.375001907348633
    9. '_inf' → logprob: -18.750001907348633
    10. '('+' → logprob: -19.250001907348633

Token 634: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -18.0
    3. 'in' → logprob: -18.125
    4. 'info' → logprob: -19.75
    5. ''in' → logprob: -19.875
    6. ' inf' → logprob: -20.625
    7. '.inf' → logprob: -21.0
    8. '-inf' → logprob: -21.875
    9. 'max' → logprob: -22.75
    10. '_inf' → logprob: -22.875

Token 635: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.8221023678779602
    2. '')' → logprob: -1.0721023082733154
    3. ')' → logprob: -1.6971023082733154
    4. ')
' → logprob: -3.4471023082733154
    5. '       ' → logprob: -6.1971025466918945
    6. ')')
' → logprob: -7.3221025466918945
    7. '   ' → logprob: -8.572102546691895
    8. '')
' → logprob: -8.697102546691895
    9. ' ')
' → logprob: -10.697102546691895
    10. ')
' → logprob: -10.947102546691895

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020221394952386618
    2. 'for' → logprob: -6.7520222663879395
    3. ' for' → logprob: -7.8770222663879395
    4. '
' → logprob: -8.127021789550781
    5. '        
' → logprob: -8.877021789550781
    6. '   ' → logprob: -11.127021789550781
    7. 't' → logprob: -12.752021789550781
    8. ',' → logprob: -12.752021789550781
    9. '    
' → logprob: -13.127021789550781
    10. '	for' → logprob: -13.627021789550781

Token 637: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3454362154006958
    2. 'for' (adapté à ' for') → logprob: -1.3454362154006958
    3. ' for' → logprob: -3.5954360961914062
    4. 'all' → logprob: -5.720436096191406
    5. 'town' → logprob: -7.345436096191406
    6. ' all' → logprob: -9.345436096191406
    7. ' towns' → logprob: -10.220436096191406
    8. 't' → logprob: -10.220436096191406
    9. ' town' → logprob: -10.345436096191406
    10. '   ' → logprob: -11.095436096191406

Token 638: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.021641191095113754
    2. 'start' → logprob: -5.021641254425049
    3. ' town' → logprob: -5.146641254425049
    4. '   ' → logprob: -5.396641254425049
    5. 'tid' → logprob: -5.896641254425049
    6. 'candidate' → logprob: -6.896641254425049
    7. '       ' → logprob: -8.52164077758789
    8. ' start' → logprob: -9.02164077758789
    9. ' ' → logprob: -9.39664077758789
    10. 'center' → logprob: -9.77164077758789

Token 639: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.856408536899835e-05
    2. 'id' → logprob: -11.000028610229492
    3. ' in' → logprob: -11.875028610229492
    4. '_' → logprob: -12.875028610229492
    5. '   ' → logprob: -13.250028610229492
    6. '_ids' → logprob: -15.625028610229492
    7. ' _' → logprob: -16.750028610229492
    8. ' ' → logprob: -17.125028610229492
    9. '    
' → logprob: -17.500028610229492
    10. '    ' → logprob: -17.500028610229492

Token 640: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00222079548984766
    2. 'in' → logprob: -6.127220630645752
    3. '        ' → logprob: -11.00222110748291
    4. ',' → logprob: -11.62722110748291
    5. ' ' → logprob: -12.62722110748291
    6. '	in' → logprob: -12.87722110748291
    7. '       ' → logprob: -14.12722110748291
    8. ' i' → logprob: -14.25222110748291
    9. '		' → logprob: -14.37722110748291
    10. ' ,' → logprob: -15.12722110748291

Token 641: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693870067596436
    2. 'self' → logprob: -2.126938819885254
    3. '	self' → logprob: -12.251938819885254
    4. '       ' → logprob: -13.251938819885254
    5. '   ' → logprob: -13.376938819885254
    6. '(self' → logprob: -13.501938819885254
    7. '[self' → logprob: -15.251938819885254
    8. '           ' → logprob: -15.626938819885254
    9. '=self' → logprob: -16.001937866210938
    10. '    ' → logprob: -16.376937866210938

Token 642: '.network' (ID: 35596)
  Prédit: '.network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.network' → logprob: -0.00023858259373810142
    2. ' .' → logprob: -9.125238418579102
    3. 'network' → logprob: -9.250238418579102
    4. '.' → logprob: -10.375238418579102
    5. ' network' → logprob: -14.875238418579102
    6. '.net' → logprob: -15.000238418579102
    7. '.t' → logprob: -15.500238418579102
    8. '
' → logprob: -15.500238418579102
    9. 'etwork' → logprob: -15.875238418579102
    10. ' ' → logprob: -16.0002384185791

Token 643: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.023286012932658195
    2. '.t' → logprob: -3.7732861042022705
    3. '.' → logprob: -10.523285865783691
    4. ' .' → logprob: -11.898285865783691
    5. 'get' → logprob: -12.148285865783691
    6. '   ' → logprob: -14.773285865783691
    7. 't' → logprob: -15.148285865783691
    8. ' ' → logprob: -15.773285865783691
    9. '```' → logprob: -15.898285865783691
    10. ').' → logprob: -16.148286819458008

Token 644: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: 0.0
    2. '_' → logprob: -18.875
    3. '_all' → logprob: -20.375
    4. 't' → logprob: -20.75
    5. '_off' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. 'town' → logprob: -21.125
    8. '_turn' → logprob: -21.25
    9. '_T' → logprob: -21.375
    10. ' _' → logprob: -21.5

Token 645: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -2.4153549020411447e-05
    2. 'town' → logprob: -12.00002384185791
    3. 'wn' → logprob: -12.50002384185791
    4. ' own' → logprob: -12.75002384185791
    5. 'ow' → logprob: -13.25002384185791
    6. 'owns' → logprob: -13.62502384185791
    7. 'won' → logprob: -13.75002384185791
    8. 'Own' → logprob: -14.00002384185791
    9. 'OWN' → logprob: -14.12502384185791
    10. 'o' → logprob: -14.25002384185791

Token 646: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.00011486753646750003
    2. 's' → logprob: -9.125114440917969
    3. 'ids' → logprob: -12.125114440917969
    4. '
' → logprob: -16.37511444091797
    5. ' ids' → logprob: -16.62511444091797
    6. '(ids' → logprob: -16.62511444091797
    7. '_' → logprob: -16.87511444091797
    8. '_i' → logprob: -17.50011444091797
    9. 'es' → logprob: -17.62511444091797
    10. '__' → logprob: -17.87511444091797

Token 647: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.033590033650398254
    2. '():' → logprob: -4.158589839935303
    3. ':' → logprob: -4.408589839935303
    4. ':
' → logprob: -5.283589839935303
    5. '():
' → logprob: -9.658590316772461
    6. '()' → logprob: -9.783590316772461
    7. '       ' → logprob: -11.158590316772461
    8. '):
' → logprob: -11.283590316772461
    9. ' :
' → logprob: -12.658590316772461
    10. '():

' → logprob: -13.408590316772461

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001911432045744732
    2. '       ' → logprob: -9.625190734863281
    3. '            
' → logprob: -10.250190734863281
    4. '```' → logprob: -10.625190734863281
    5. ' distances' → logprob: -11.000190734863281
    6. '<|end|>' → logprob: -11.125190734863281
    7. '   ' → logprob: -11.750190734863281
    8. '          ' → logprob: -12.125190734863281
    9. ',' → logprob: -12.750190734863281
    10. '            ' → logprob: -13.000190734863281

Token 649: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.8094227313995361
    2. '           ' → logprob: -0.9344227313995361
    3. ' distances' → logprob: -2.184422731399536
    4. ' dist' → logprob: -3.309422731399536
    5. 'distance' → logprob: -4.434422492980957
    6. ' distance' → logprob: -7.809422492980957
    7. 'd' → logprob: -8.434422492980957
    8. '   ' → logprob: -8.559422492980957
    9. '	dist' → logprob: -9.434422492980957
    10. 'paths' → logprob: -10.309422492980957

Token 650: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8896236419677734
    2. '=' → logprob: -1.0146236419677734
    3. 's' → logprob: -1.6396236419677734
    4. 'ances' → logprob: -3.6396236419677734
    5. 'from' → logprob: -5.889623641967773
    6. '_from' → logprob: -6.014623641967773
    7. 'ance' → logprob: -7.264623641967773
    8. '       ' → logprob: -8.889623641967773
    9. '           ' → logprob: -9.014623641967773
    10. '   ' → logprob: -9.514623641967773

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020893067121506
    2. '=' → logprob: -2.3502089977264404
    3. ' ' → logprob: -14.22520923614502
    4. ':' → logprob: -14.72520923614502
    5. 's' → logprob: -14.85020923614502
    6. '   ' → logprob: -15.35020923614502
    7. '=self' → logprob: -15.97520923614502
    8. ')' → logprob: -16.350208282470703
    9. ' =
' → logprob: -16.725208282470703
    10. '           ' → logprob: -16.725208282470703

Token 652: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31338194012641907
    2. ' self' → logprob: -1.3133819103240967
    3. '           ' → logprob: -9.063382148742676
    4. '               ' → logprob: -12.938382148742676
    5. '(self' → logprob: -14.063382148742676
    6. '	self' → logprob: -14.313382148742676
    7. '[self' → logprob: -15.938382148742676
    8. '            ' → logprob: -16.06338119506836
    9. '=self' → logprob: -16.81338119506836
    10. ' ' → logprob: -16.93838119506836

Token 653: '.network' (ID: 35596)
  Prédit: '.network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.network' → logprob: -0.009072447195649147
    2. 'network' → logprob: -4.759072303771973
    3. '.short' → logprob: -7.884072303771973
    4. 'short' → logprob: -9.759072303771973
    5. 'etwork' → logprob: -12.384072303771973
    6. '.' → logprob: -12.509072303771973
    7. ' .' → logprob: -12.509072303771973
    8. '       ' → logprob: -12.884072303771973
    9. '           ' → logprob: -13.009072303771973
    10. ' network' → logprob: -13.134072303771973

Token 654: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -3.273621405242011e-05
    2. 'short' → logprob: -11.125032424926758
    3. '.shortcuts' → logprob: -12.000032424926758
    4. ' .' → logprob: -12.125032424926758
    5. '.sh' → logprob: -13.125032424926758
    6. '           ' → logprob: -13.500032424926758
    7. '.' → logprob: -13.750032424926758
    8. '.Short' → logprob: -14.250032424926758
    9. '_short' → logprob: -15.375032424926758
    10. '       ' → logprob: -15.500032424926758

Token 655: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -2.463036435074173e-05
    2. 'test' → logprob: -10.625024795532227
    3. 't' → logprob: -15.875024795532227
    4. '```' → logprob: -17.250024795532227
    5. '_paths' → logprob: -17.500024795532227
    6. 'ort' → logprob: -17.500024795532227
    7. 'dest' → logprob: -17.875024795532227
    8. 'rest' → logprob: -18.000024795532227
    9. '_path' → logprob: -18.375024795532227
    10. 'ests' → logprob: -18.500024795532227

Token 656: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -3.054500666621607e-06
    2. '_path' → logprob: -14.12500286102295
    3. 'paths' → logprob: -14.12500286102295
    4. '```' → logprob: -14.62500286102295
    5. '_dist' → logprob: -14.75000286102295
    6. '_' → logprob: -15.00000286102295
    7. 's' → logprob: -15.87500286102295
    8. '
' → logprob: -17.375003814697266
    9. '`' → logprob: -17.500003814697266
    10. '_routes' → logprob: -17.625003814697266

Token 657: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -5.512236498361744e-07
    2. 'from' → logprob: -14.625000953674316
    3. '__' → logprob: -18.125
    4. '_to' → logprob: -18.125
    5. '_for' → logprob: -18.5
    6. '\' → logprob: -19.75
    7. '```' → logprob: -19.75
    8. '_FROM' → logprob: -19.875
    9. '_' → logprob: -20.0
    10. 's' → logprob: -20.125

Token 658: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0007195804500952363
    2. '(' → logprob: -7.2507195472717285
    3. '(
' → logprob: -12.125720024108887
    4. 'town' → logprob: -13.125720024108887
    5. ' (' → logprob: -14.125720024108887
    6. ' town' → logprob: -14.375720024108887
    7. '	t' → logprob: -15.125720024108887
    8. 't' → logprob: -16.00071907043457
    9. '   ' → logprob: -16.25071907043457
    10. '(start' → logprob: -16.62571907043457

Token 659: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -8.041768160182983e-05
    2. 'town' → logprob: -9.750080108642578
    3. 'wn' → logprob: -11.875080108642578
    4. 'ow' → logprob: -12.125080108642578
    5. '   ' → logprob: -13.000080108642578
    6. '       ' → logprob: -13.875080108642578
    7. ' town' → logprob: -14.000080108642578
    8. 'owner' → logprob: -14.000080108642578
    9. '           ' → logprob: -14.250080108642578
    10. 'on' → logprob: -14.250080108642578

Token 660: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.650518920039758e-06
    2. 'id' → logprob: -12.625003814697266
    3. 'd' → logprob: -15.875003814697266
    4. 's' → logprob: -17.625003814697266
    5. 'Id' → logprob: -17.750003814697266
    6. ')' → logprob: -18.125003814697266
    7. '_ids' → logprob: -18.250003814697266
    8. 'own' → logprob: -18.500003814697266
    9. '   ' → logprob: -18.500003814697266
    10. '1' → logprob: -18.500003814697266

Token 661: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2627907395362854
    2. ')' → logprob: -1.5127906799316406
    3. '           ' → logprob: -4.637790679931641
    4. '())
' → logprob: -7.137790679931641
    5. ')
' → logprob: -9.38779067993164
    6. '       ' → logprob: -9.38779067993164
    7. '()' → logprob: -9.76279067993164
    8. '()
' → logprob: -10.13779067993164
    9. '())' → logprob: -10.26279067993164
    10. ' )
' → logprob: -11.26279067993164

Token 662: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002273723715916276
    2. '       ' → logprob: -7.2522735595703125
    3. '<|end|>' → logprob: -7.5022735595703125
    4. ' sum' → logprob: -7.6272735595703125
    5. '            
' → logprob: -9.002273559570312
    6. ' total' → logprob: -9.377273559570312
    7. '          ' → logprob: -10.002273559570312
    8. '               ' → logprob: -10.127273559570312
    9. 'sum' → logprob: -10.502273559570312
    10. ',' → logprob: -10.502273559570312

Token 663: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.4160376489162445
    2. 'sum' → logprob: -1.541037678718567
    3. '           ' → logprob: -2.4160375595092773
    4. ' total' → logprob: -3.9160375595092773
    5. 'current' → logprob: -5.041037559509277
    6. ' sum' → logprob: -5.541037559509277
    7. 'dist' → logprob: -5.666037559509277
    8. 'distance' → logprob: -6.916037559509277
    9. 's' → logprob: -7.541037559509277
    10. ' current' → logprob: -7.666037559509277

Token 664: '_cost' (ID: 36820)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5255587100982666
    2. '_sum' → logprob: -1.6505587100982666
    3. '=' → logprob: -2.1505587100982666
    4. '_cost' → logprob: -2.7755587100982666
    5. '_distance' → logprob: -3.6505587100982666
    6. '=sum' → logprob: -5.5255584716796875
    7. '_' → logprob: -5.6505584716796875
    8. '_dist' → logprob: -5.6505584716796875
    9. ' _' → logprob: -8.525558471679688
    10. '=_' → logprob: -8.900558471679688

Token 665: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01819266937673092
    2. '=' → logprob: -4.018192768096924
    3. '=sum' → logprob: -10.143192291259766
    4. ' ' → logprob: -13.393192291259766
    5. ' ' → logprob: -14.393192291259766
    6. '           ' → logprob: -14.643192291259766
    7. '            ' → logprob: -15.268192291259766
    8. ' +=' → logprob: -15.643192291259766
    9. '        ' → logprob: -16.268192291259766
    10. 'sum' → logprob: -16.393192291259766

Token 666: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1602327525615692
    2. 'sum' → logprob: -1.9102327823638916
    3. '0' → logprob: -11.910232543945312
    4. '	sum' → logprob: -14.160232543945312
    5. ' ' → logprob: -15.160232543945312
    6. ' ' → logprob: -15.285232543945312
    7. '=sum' → logprob: -15.660232543945312
    8. '(sum' → logprob: -15.785232543945312
    9. '   ' → logprob: -15.785232543945312
    10. '           ' → logprob: -15.785232543945312

Token 667: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.020045192912220955
    2. '(d' → logprob: -4.395045280456543
    3. '([' → logprob: -5.770045280456543
    4. '(cost' → logprob: -6.520045280456543
    5. '(' → logprob: -6.770045280456543
    6. 'dist' → logprob: -7.145045280456543
    7. '(distance' → logprob: -7.395045280456543
    8. '(
' → logprob: -8.520045280456543
    9. '(v' → logprob: -9.645045280456543
    10. '(value' → logprob: -10.520045280456543

Token 668: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.02458832785487175
    2. ' for' → logprob: -3.7745883464813232
    3. 'for' → logprob: -7.024588108062744
    4. '_' → logprob: -8.149588584899902
    5. '   ' → logprob: -10.524588584899902
    6. 'd' → logprob: -10.524588584899902
    7. ' ' → logprob: -10.774588584899902
    8. ' if' → logprob: -10.899588584899902
    9. 'map' → logprob: -11.024588584899902
    10. ' d' → logprob: -11.774588584899902

Token 669: '.values' (ID: 20422)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.37207484245300293
    2. '.values' → logprob: -1.372074842453003
    3. '(t' → logprob: -2.997074842453003
    4. '(' → logprob: -6.122075080871582
    5. '[t' → logprob: -6.747075080871582
    6. ')' → logprob: -7.122075080871582
    7. '(values' → logprob: -7.372075080871582
    8. '())' → logprob: -7.997075080871582
    9. '(k' → logprob: -8.122075080871582
    10. '()' → logprob: -8.247075080871582

Token 670: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.5774977207183838
    2. '())' → logprob: -0.8274977207183838
    3. '()' → logprob: -7.077497482299805
    4. ')' → logprob: -7.577497482299805
    5. ')
' → logprob: -8.827497482299805
    6. '()
' → logprob: -10.702497482299805
    7. ' ())
' → logprob: -11.577497482299805
    8. ' ())' → logprob: -12.077497482299805
    9. '())
' → logprob: -12.452497482299805
    10. '(' → logprob: -12.577497482299805

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.1093578804284334e-05
    2. '
' → logprob: -10.625051498413086
    3. '            
' → logprob: -11.000051498413086
    4. '          ' → logprob: -12.500051498413086
    5. ' if' → logprob: -13.375051498413086
    6. '<|end|>' → logprob: -14.000051498413086
    7. '           
' → logprob: -14.250051498413086
    8. '               ' → logprob: -14.625051498413086
    9. '            ' → logprob: -14.750051498413086
    10. '       ' → logprob: -14.875051498413086

Token 672: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03186836838722229
    2. 'if' (adapté à ' if') → logprob: -4.1568684577941895
    3. ' if' → logprob: -4.1568684577941895
    4. '          ' → logprob: -10.656867980957031
    5. '   ' → logprob: -11.531867980957031
    6. '       ' → logprob: -12.031867980957031
    7. ' ' → logprob: -12.406867980957031
    8. '         ' → logprob: -13.281867980957031
    9. '```' → logprob: -13.281867980957031
    10. '
' → logprob: -13.656867980957031

Token 673: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.42874374985694885
    2. 'total' → logprob: -1.0537437200546265
    3. '(total' → logprob: -10.803743362426758
    4. '	total' → logprob: -11.178743362426758
    5. ' ' → logprob: -12.678743362426758
    6. ' ' → logprob: -13.803743362426758
    7. '   ' → logprob: -14.053743362426758
    8. 'otal' → logprob: -14.428743362426758
    9. '$total' → logprob: -14.428743362426758
    10. '_total' → logprob: -14.928743362426758

Token 674: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.090760431718081e-05
    2. '           ' → logprob: -10.625090599060059
    3. 'cost' → logprob: -10.625090599060059
    4. '_sum' → logprob: -10.875090599060059
    5. 'Cost' → logprob: -12.250090599060059
    6. '_' → logprob: -12.625090599060059
    7. '_t' → logprob: -13.125090599060059
    8. ' cost' → logprob: -13.125090599060059
    9. '_COST' → logprob: -13.250090599060059
    10. ' <' → logprob: -13.250090599060059

Token 675: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04300205409526825
    2. '<' → logprob: -3.168002128601074
    3. ' ' → logprob: -14.043002128601074
    4. '[' → logprob: -14.793002128601074
    5. '           ' → logprob: -15.418002128601074
    6. '   ' → logprob: -15.418002128601074
    7. '<|end|>' → logprob: -15.793002128601074
    8. ' <
' → logprob: -16.043001174926758
    9. ',' → logprob: -16.293001174926758
    10. '<int' → logprob: -16.668001174926758

Token 676: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.16022534668445587
    2. 'min' → logprob: -1.9102253913879395
    3. '           ' → logprob: -14.285224914550781
    4. '            ' → logprob: -14.910224914550781
    5. '	min' → logprob: -15.660224914550781
    6. '_min' → logprob: -16.41022491455078
    7. 'm' → logprob: -17.91022491455078
    8. '               ' → logprob: -18.28522491455078
    9. '(min' → logprob: -18.28522491455078
    10. '=min' → logprob: -18.53522491455078

Token 677: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001593195047462359
    2. '_t' → logprob: -8.87515926361084
    3. '_' → logprob: -11.50015926361084
    4. '_min' → logprob: -12.37515926361084
    5. '_cost' → logprob: -13.37515926361084
    6. 'sum' → logprob: -13.75015926361084
    7. '_s' → logprob: -13.75015926361084
    8. '__' → logprob: -15.25015926361084
    9. ' _' → logprob: -15.50015926361084
    10. '\' → logprob: -15.50015926361084

Token 678: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7413277626037598
    2. ':
' → logprob: -0.7413277626037598
    3. '               ' → logprob: -3.1163277626037598
    4. ' and' → logprob: -6.74132776260376
    5. '           ' → logprob: -6.99132776260376
    6. ' or' → logprob: -8.491327285766602
    7. 'and' → logprob: -9.241327285766602
    8. '              ' → logprob: -9.241327285766602
    9. ',' → logprob: -9.866327285766602
    10. ' :
' → logprob: -9.991327285766602

Token 679: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.02354534901678562
    2. '(t' → logprob: -4.398545265197754
    3. '(total' → logprob: -5.148545265197754
    4. '(' → logprob: -5.398545265197754
    5. ' (' → logprob: -7.773545265197754
    6. '(
' → logprob: -8.648545265197754
    7. 'min' → logprob: -10.898545265197754
    8. '(best' → logprob: -12.148545265197754
    9. '(max' → logprob: -12.273545265197754
    10. '(abs' → logprob: -13.148545265197754

Token 680: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.011791023425757885
    2. '(total' → logprob: -4.761791229248047
    3. ' total' → logprob: -5.761791229248047
    4. ' (' → logprob: -11.386791229248047
    5. '(' → logprob: -12.511791229248047
    6. 'tot' → logprob: -12.886791229248047
    7. '   ' → logprob: -13.261791229248047
    8. '           ' → logprob: -13.386791229248047
    9. '	total' → logprob: -13.886791229248047
    10. '
' → logprob: -14.011791229248047

Token 681: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.01286853477358818
    2. '_sum' → logprob: -5.012868404388428
    3. '_t' → logprob: -5.137868404388428
    4. '_total' → logprob: -9.887868881225586
    5. 'cost' → logprob: -10.012868881225586
    6. '_' → logprob: -10.012868881225586
    7. 'sum' → logprob: -10.262868881225586
    8. 'Cost' → logprob: -10.637868881225586
    9. '```' → logprob: -11.887868881225586
    10. '
' → logprob: -12.200368881225586

Token 682: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5770775675773621
    2. '==' → logprob: -0.8270775675773621
    3. ',' → logprob: -7.077077388763428
    4. 'and' → logprob: -9.202077865600586
    5. ' <' → logprob: -9.702077865600586
    6. '=' → logprob: -9.827077865600586
    7. ' and' → logprob: -10.327077865600586
    8. '<' → logprob: -10.702077865600586
    9. ' ' → logprob: -12.827077865600586
    10. '==
' → logprob: -12.827077865600586

Token 683: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006715370807796717
    2. ' min' → logprob: -5.006715297698975
    3. '	min' → logprob: -17.381715774536133
    4. '_min' → logprob: -19.506715774536133
    5. '=min' → logprob: -19.631715774536133
    6. '[min' → logprob: -19.881715774536133
    7. '
' → logprob: -19.881715774536133
    8. '(min' → logprob: -19.881715774536133
    9. '   ' → logprob: -20.006715774536133
    10. ' ' → logprob: -20.381715774536133

Token 684: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003571535926312208
    2. '_t' → logprob: -8.375357627868652
    3. 'sum' → logprob: -9.500357627868652
    4. '_min' → logprob: -10.250357627868652
    5. 'min' → logprob: -12.250357627868652
    6. '_cost' → logprob: -12.375357627868652
    7. '_' → logprob: -13.125357627868652
    8. ')' → logprob: -14.125357627868652
    9. '
' → logprob: -14.250357627868652
    10. 'Sum' → logprob: -14.500357627868652

Token 685: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10023567825555801
    2. 'and' → logprob: -2.3502357006073
    3. '           ' → logprob: -11.100235939025879
    4. '            ' → logprob: -12.350235939025879
    5. '               ' → logprob: -12.975235939025879
    6. '          ' → logprob: -13.475235939025879
    7. '    ' → logprob: -13.850235939025879
    8. '       ' → logprob: -14.100235939025879
    9. '   ' → logprob: -14.225235939025879
    10. '        ' → logprob: -14.350235939025879

Token 686: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.12721271812915802
    2. ' town' → logprob: -2.1272127628326416
    3. '   ' → logprob: -8.877212524414062
    4. '           ' → logprob: -9.752212524414062
    5. ' ' → logprob: -11.377212524414062
    6. '               ' → logprob: -11.502212524414062
    7. '            ' → logprob: -11.877212524414062
    8. '  ' → logprob: -12.002212524414062
    9. '       ' → logprob: -12.252212524414062
    10. '```' → logprob: -12.252212524414062

Token 687: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.1472419600977446e-06
    2. 'id' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_t' → logprob: -16.625001907348633
    5. 't' → logprob: -16.875001907348633
    6. '_i' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'Id' → logprob: -17.750001907348633
    9. '_ids' → logprob: -17.812501907348633
    10. '```' → logprob: -17.937501907348633

Token 688: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2014276683330536
    2. '<' → logprob: -1.701427698135376
    3. ' ' → logprob: -11.576427459716797
    4. ' ' → logprob: -14.076427459716797
    5. ' <
' → logprob: -14.451427459716797
    6. ')' → logprob: -14.701427459716797
    7. '<
' → logprob: -14.826427459716797
    8. '<|end|>' → logprob: -15.076427459716797
    9. '```' → logprob: -15.326427459716797
    10. '<int' → logprob: -15.451427459716797

Token 689: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00015860427811276168
    2. ' min' → logprob: -8.750158309936523
    3. '           ' → logprob: -16.500158309936523
    4. '       ' → logprob: -19.000158309936523
    5. '_min' → logprob: -19.625158309936523
    6. '	min' → logprob: -20.000158309936523
    7. '
' → logprob: -20.250158309936523
    8. '   ' → logprob: -20.750158309936523
    9. '(min' → logprob: -21.625158309936523
    10. '               ' → logprob: -21.875158309936523

Token 690: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.015305552864447e-05
    2. '_sum' → logprob: -9.750060081481934
    3. '_min' → logprob: -14.750060081481934
    4. 'sum' → logprob: -14.875060081481934
    5. 'town' → logprob: -15.375060081481934
    6. '_id' → logprob: -15.500060081481934
    7. 'min' → logprob: -15.875060081481934
    8. 't' → logprob: -16.25006103515625
    9. ')' → logprob: -16.62506103515625
    10. '
' → logprob: -16.87506103515625

Token 691: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -9.05499910004437e-05
    2. 'town' → logprob: -9.625090599060059
    3. 'min' → logprob: -12.500090599060059
    4. 'ow' → logprob: -12.625090599060059
    5. '```' → logprob: -12.750090599060059
    6. '
' → logprob: -13.250090599060059
    7. 'on' → logprob: -13.375090599060059
    8. '   ' → logprob: -13.625090599060059
    9. 'won' → logprob: -14.000090599060059
    10. 'owner' → logprob: -14.125090599060059

Token 692: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.747814349073451e-05
    2. 'id' → logprob: -11.750017166137695
    3. 'own' → logprob: -12.375017166137695
    4. '_t' → logprob: -12.500017166137695
    5. '```' → logprob: -14.375017166137695
    6. 'town' → logprob: -14.750017166137695
    7. ')' → logprob: -16.625017166137695
    8. 'y' → logprob: -16.750017166137695
    9. 't' → logprob: -16.875017166137695
    10. 'Id' → logprob: -17.125017166137695

Token 693: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019471431151032448
    2. '):' → logprob: -4.019471645355225
    3. '           ' → logprob: -7.519471645355225
    4. '               ' → logprob: -8.394471168518066
    5. ':' → logprob: -8.769471168518066
    6. ')' → logprob: -9.019471168518066
    7. ' ):
' → logprob: -9.519471168518066
    8. '       ' → logprob: -9.644471168518066
    9. ' and' → logprob: -10.269471168518066
    10. '):
' → logprob: -10.394471168518066

Token 694: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.688212614681106e-05
    2. '           ' → logprob: -11.875017166137695
    3. '                   ' → logprob: -13.375017166137695
    4. '                       ' → logprob: -13.375017166137695
    5. '                
' → logprob: -13.500017166137695
    6. '```' → logprob: -13.500017166137695
    7. '              ' → logprob: -14.000017166137695
    8. '
' → logprob: -14.375017166137695
    9. '[' → logprob: -15.125017166137695
    10. ' min' → logprob: -15.250017166137695

Token 695: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1501680463552475
    2. 'min' (adapté à ' min') → logprob: -2.150167942047119
    3. '               ' → logprob: -3.775167942047119
    4. '	min' → logprob: -10.900168418884277
    5. '(min' → logprob: -11.900168418884277
    6. '           ' → logprob: -12.400168418884277
    7. '   ' → logprob: -13.025168418884277
    8. ' ' → logprob: -13.525168418884277
    9. '                   ' → logprob: -13.650168418884277
    10. '                ' → logprob: -13.650168418884277

Token 696: '_sum' (ID: 29859)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.005954752676188946
    2. '_sum' → logprob: -5.130954742431641
    3. '_' → logprob: -10.63095474243164
    4. '_s' → logprob: -14.25595474243164
    5. 'sum' → logprob: -15.00595474243164
    6. '_min' → logprob: -15.25595474243164
    7. '_cost' → logprob: -15.75595474243164
    8. '_id' → logprob: -16.13095474243164
    9. ' _' → logprob: -16.25595474243164
    10. '_
' → logprob: -16.25595474243164

Token 697: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11294380575418472
    2. '=' → logprob: -2.2379438877105713
    3. ',' → logprob: -9.237943649291992
    4. '               ' → logprob: -11.612943649291992
    5. '           ' → logprob: -11.987943649291992
    6. '                   ' → logprob: -12.737943649291992
    7. '   ' → logprob: -13.237943649291992
    8. '                ' → logprob: -13.737943649291992
    9. '            ' → logprob: -14.737943649291992
    10. ' ' → logprob: -14.862943649291992

Token 698: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4740835428237915
    2. ' total' → logprob: -0.9740835428237915
    3. '               ' → logprob: -12.09908390045166
    4. '(total' → logprob: -15.22408390045166
    5. '	total' → logprob: -15.34908390045166
    6. '_total' → logprob: -15.84908390045166
    7. '$total' → logprob: -15.97408390045166
    8. '                   ' → logprob: -15.97408390045166
    9. '           ' → logprob: -16.724082946777344
    10. ',total' → logprob: -17.474082946777344

Token 699: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.24664098024368286
    2. '_sum' → logprob: -2.121640920639038
    3. '_t' → logprob: -2.746640920639038
    4. 'sum' → logprob: -4.371641159057617
    5. 'town' → logprob: -4.621641159057617
    6. 'cost' → logprob: -5.121641159057617
    7. ' town' → logprob: -6.371641159057617
    8. 't' → logprob: -6.746641159057617
    9. '
' → logprob: -7.246641159057617
    10. '_total' → logprob: -7.621641159057617

Token 700: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1279553291387856e-05
    2. 'min' → logprob: -12.250011444091797
    3. ' min' → logprob: -12.250011444091797
    4. '           ' → logprob: -14.000011444091797
    5. '              ' → logprob: -14.375011444091797
    6. '                ' → logprob: -15.875011444091797
    7. ',' → logprob: -16.500011444091797
    8. ',min' → logprob: -16.875011444091797
    9. '```' → logprob: -17.000011444091797
    10. '                   ' → logprob: -17.375011444091797

Token 701: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1279553291387856e-05
    2. ' min' → logprob: -11.750011444091797
    3. 'min' → logprob: -13.000011444091797
    4. '              ' → logprob: -15.125011444091797
    5. '           ' → logprob: -15.250011444091797
    6. '			' → logprob: -16.000011444091797
    7. '                ' → logprob: -16.000011444091797
    8. '```' → logprob: -16.500011444091797
    9. '                   ' → logprob: -16.625011444091797
    10. '​' → logprob: -17.250011444091797

Token 702: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.008624739944934845
    2. ' min' → logprob: -4.75862455368042
    3. '               ' → logprob: -11.508625030517578
    4. '           ' → logprob: -16.008625030517578
    5. '	min' → logprob: -17.383625030517578
    6. '(min' → logprob: -18.133625030517578
    7. '[min' → logprob: -18.258625030517578
    8. '_min' → logprob: -18.383625030517578
    9. '.min' → logprob: -19.258625030517578
    10. ',min' → logprob: -19.758625030517578

Token 703: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9361264946837764e-07
    2. '_sum' → logprob: -16.375
    3. '_' → logprob: -17.5
    4. '\' → logprob: -18.25
    5. '_min' → logprob: -18.375
    6. '_city' → logprob: -18.75
    7. '```' → logprob: -19.0
    8. ' _' → logprob: -19.5
    9. '_s' → logprob: -19.75
    10. '_id' → logprob: -19.875

Token 704: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0004002832865808159
    2. 'town' → logprob: -7.875400066375732
    3. 'wn' → logprob: -11.87540054321289
    4. '_' → logprob: -12.12540054321289
    5. 'owner' → logprob: -13.37540054321289
    6. 'won' → logprob: -13.62540054321289
    7. 'ow' → logprob: -14.25040054321289
    8. ' town' → logprob: -14.37540054321289
    9. '_t' → logprob: -14.62540054321289
    10. '```' → logprob: -14.62540054321289

Token 705: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.3856492842023727e-06
    2. 'id' → logprob: -13.625000953674316
    3. 'd' → logprob: -16.750001907348633
    4. '_t' → logprob: -18.125001907348633
    5. 'y' → logprob: -18.250001907348633
    6. '=' → logprob: -18.250001907348633
    7. '_ids' → logprob: -19.125001907348633
    8. 'e' → logprob: -19.125001907348633
    9. 'Id' → logprob: -19.375001907348633
    10. '_i' → logprob: -19.375001907348633

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.943147659301758
    4. ' =
' → logprob: -17.068147659301758
    5. '=
' → logprob: -17.568147659301758
    6. ',' → logprob: -17.693147659301758
    7. '＝' → logprob: -17.943147659301758
    8. '<|end|>' → logprob: -18.068147659301758
    9. '=t' → logprob: -18.818147659301758
    10. 's' → logprob: -19.318147659301758

Token 707: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.2519814372062683
    2. ' town' → logprob: -1.501981496810913
    3. '   ' → logprob: -11.001981735229492
    4. '	t' → logprob: -12.376981735229492
    5. ' ' → logprob: -12.626981735229492
    6. '-town' → logprob: -12.626981735229492
    7. '           ' → logprob: -12.751981735229492
    8. ' ' → logprob: -12.751981735229492
    9. 'ton' → logprob: -13.126981735229492
    10. '
' → logprob: -13.376981735229492

Token 708: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.2664456789934775e-06
    2. 'd' → logprob: -14.125000953674316
    3. 'id' → logprob: -15.625000953674316
    4. ' _' → logprob: -15.875000953674316
    5. '_' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. '__' → logprob: -17.250001907348633
    8. 'w' → logprob: -17.875001907348633
    9. 'n' → logprob: -18.125001907348633
    10. 's' → logprob: -18.500001907348633

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018976546823978424
    2. '
' → logprob: -4.01897668838501
    3. 'return' → logprob: -7.51897668838501
    4. '        
' → logprob: -8.643976211547852
    5. ' return' → logprob: -9.518976211547852
    6. '    
' → logprob: -11.768976211547852
    7. '   ' → logprob: -12.143976211547852
    8. '	' → logprob: -12.643976211547852
    9. '      ' → logprob: -12.893976211547852
    10. '
' → logprob: -13.018976211547852

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.982165698194876e-05
    2. 'return' → logprob: -9.625080108642578
    3. ' return' → logprob: -11.875080108642578
    4. '
' → logprob: -12.375080108642578
    5. '   ' → logprob: -13.750080108642578
    6. '	' → logprob: -14.500080108642578
    7. '      ' → logprob: -15.125080108642578
    8. '```' → logprob: -15.250080108642578
    9. '	return' → logprob: -15.875080108642578
    10. '        
' → logprob: -16.375080108642578

Token 711: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06383084505796432
    2. 'return' (adapté à ' return') → logprob: -2.813830852508545
    3. ' return' → logprob: -6.813830852508545
    4. '
' → logprob: -7.313830852508545
    5. '   ' → logprob: -9.938830375671387
    6. '	return' → logprob: -10.938830375671387
    7. '	' → logprob: -11.313830375671387
    8. '        
' → logprob: -11.563830375671387
    9. '```' → logprob: -13.063830375671387
    10. '      ' → logprob: -13.438830375671387

Token 712: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10628732293844223
    2. ' min' → logprob: -2.3562872409820557
    3. '(min' → logprob: -5.106287479400635
    4. ' (' → logprob: -12.856287002563477
    5. '	min' → logprob: -14.106287002563477
    6. '[min' → logprob: -15.356287002563477
    7. '   ' → logprob: -16.856287002563477
    8. ',min' → logprob: -17.231287002563477
    9. '_min' → logprob: -17.856287002563477
    10. '.min' → logprob: -18.231287002563477

Token 713: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -5.512236498361744e-07
    2. '_sum' → logprob: -15.250000953674316
    3. '_min' → logprob: -16.5
    4. 'min' → logprob: -17.0
    5. 'town' → logprob: -17.25
    6. 'sum' → logprob: -17.5
    7. 't' → logprob: -18.0
    8. '(min' → logprob: -18.125
    9. '\' → logprob: -18.25
    10. '
' → logprob: -18.875

Token 714: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -6.704273118884885e-07
    2. 'town' → logprob: -15.500000953674316
    3. 'ow' → logprob: -15.625000953674316
    4. '_' → logprob: -16.375
    5. 'o' → logprob: -17.75
    6. '{' → logprob: -18.25
    7. 'owns' → logprob: -18.375
    8. '-own' → logprob: -18.375
    9. '
' → logprob: -18.5
    10. 'won' → logprob: -18.625

Token 715: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0006459566066041589
    2. 'd' → logprob: -7.375646114349365
    3. '_d' → logprob: -12.125645637512207
    4. 't' → logprob: -12.375645637512207
    5. '_t' → logprob: -12.375645637512207
    6. 'w' → logprob: -13.000645637512207
    7. 'm' → logprob: -13.750645637512207
    8. '_i' → logprob: -14.625645637512207
    9. '_' → logprob: -14.750645637512207
    10. 'n' → logprob: -14.875645637512207

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -12.250011444091797
    3. ',min' → logprob: -12.250011444091797
    4. ',
' → logprob: -13.250011444091797
    5. '       ' → logprob: -15.875011444091797
    6. '   ' → logprob: -17.000011444091797
    7. 'min' → logprob: -17.500011444091797
    8. ',m' → logprob: -18.625011444091797
    9. '```' → logprob: -18.750011444091797
    10. '
' → logprob: -18.875011444091797

Token 717: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2519938349723816
    2. ' min' → logprob: -1.5019938945770264
    3. 'int' → logprob: -10.001994132995605
    4. ' int' → logprob: -10.876994132995605
    5. '[min' → logprob: -15.751994132995605
    6. '(min' → logprob: -15.876994132995605
    7. '	min' → logprob: -16.25199317932129
    8. ' ' → logprob: -16.37699317932129
    9. '   ' → logprob: -16.62699317932129
    10. ' ' → logprob: -17.00199317932129

Token 718: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0280383548888494e-06
    2. 'sum' → logprob: -13.875000953674316
    3. '_t' → logprob: -17.250001907348633
    4. '_s' → logprob: -18.125001907348633
    5. '_' → logprob: -18.375001907348633
    6. '_set' → logprob: -19.000001907348633
    7. '_cost' → logprob: -19.125001907348633
    8. '_min' → logprob: -20.000001907348633
    9. '_sub' → logprob: -20.125001907348633
    10. '_SUM' → logprob: -20.250001907348633

Token 719: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 721: ' Input' (ID: 10090)
  Prédit: ' Convenience'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Convenience' → logprob: -0.4717141389846802
    2. ' Office' → logprob: -2.2217140197753906
    3. 'Office' → logprob: -3.3467140197753906
    4. ' Company' → logprob: -3.4717140197753906
    5. ' Solution' → logprob: -3.7217140197753906
    6. 'Company' → logprob: -3.8467140197753906
    7. 'Conven' → logprob: -4.221714019775391
    8. ' Network' → logprob: -4.596714019775391
    9. ' Road' → logprob: -4.721714019775391
    10. ' Central' → logprob: -4.846714019775391

Token 722: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.5975626707077026
    2. 'Reader' → logprob: -1.4725626707077026
    3. 'Processor' → logprob: -2.097562789916992
    4. 'Parser' → logprob: -2.472562789916992
    5. 'Data' → logprob: -4.722562789916992
    6. 'Manager' → logprob: -6.472562789916992
    7. 'Provider' → logprob: -6.722562789916992
    8. ':' → logprob: -7.722562789916992
    9. 'Helper' → logprob: -8.472562789916992
    10. 'Output' → logprob: -8.472562789916992

Token 723: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030436101951636374
    2. ':
' → logprob: -8.125304222106934
    3. ':def' → logprob: -12.625304222106934
    4. '):' → logprob: -13.500304222106934
    5. ' :' → logprob: -13.875304222106934
    6. ':

' → logprob: -14.375304222106934
    7. '():' → logprob: -14.500304222106934
    8. '(' → logprob: -15.000304222106934
    9. '<|end|>' → logprob: -15.000304222106934
    10. '(object' → logprob: -15.125304222106934

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007298283162526786
    2. ' def' → logprob: -7.250730037689209
    3. 'def' → logprob: -10.87572956085205
    4. '	def' → logprob: -14.87572956085205
    5. 'import' → logprob: -15.37572956085205
    6. ' class' → logprob: -16.000730514526367
    7. '   ' → logprob: -16.000730514526367
    8. 'class' → logprob: -16.625730514526367
    9. '```' → logprob: -16.875730514526367
    10. ':' → logprob: -17.000730514526367

Token 725: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011669781059026718
    2. ' def' → logprob: -4.511669635772705
    3. '   ' → logprob: -7.511669635772705
    4. '@' → logprob: -9.511670112609863
    5. ' @' → logprob: -14.511670112609863
    6. 'class' → logprob: -14.636670112609863
    7. '	def' → logprob: -17.136669158935547
    8. 'import' → logprob: -17.636669158935547
    9. 'from' → logprob: -18.636669158935547
    10. '```' → logprob: -18.761669158935547

Token 726: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.020983250811696053
    2. ' __' → logprob: -4.2709832191467285
    3. 'def' → logprob: -5.1459832191467285
    4. ' parse' → logprob: -7.5209832191467285
    5. 'staticmethod' → logprob: -8.645983695983887
    6. '__' → logprob: -9.020983695983887
    7. ' self' → logprob: -9.520983695983887
    8. '```' → logprob: -11.145983695983887
    9. 'parse' → logprob: -11.645983695983887
    10. ' ' → logprob: -11.770983695983887

Token 727: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.875
    3. 'def' → logprob: -18.75
    4. 'ini' → logprob: -18.75
    5. 'int' → logprob: -19.0
    6. 'new' → logprob: -19.5
    7. '   ' → logprob: -20.125
    8. '_init' → logprob: -20.5
    9. 'in' → logprob: -20.75
    10. '
' → logprob: -21.125

Token 728: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015219069086015224
    2. '__(' → logprob: -4.265219211578369
    3. '(' → logprob: -7.515219211578369
    4. ' (' → logprob: -7.765219211578369
    5. '()' → logprob: -10.265218734741211
    6. 'self' → logprob: -10.890218734741211
    7. '   ' → logprob: -11.265218734741211
    8. ' ' → logprob: -12.640218734741211
    9. '__(
' → logprob: -12.765218734741211
    10. '_(' → logprob: -13.140218734741211

Token 729: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019102399528492242
    2. ')' → logprob: -9.125190734863281
    3. '
' → logprob: -10.000190734863281
    4. ' self' → logprob: -10.625190734863281
    5. '):
' → logprob: -11.750190734863281
    6. '   ' → logprob: -12.625190734863281
    7. ')
' → logprob: -14.750190734863281
    8. '       ' → logprob: -15.125190734863281
    9. '(self' → logprob: -16.37519073486328
    10. '  ' → logprob: -16.50019073486328

Token 730: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.607029378414154
    2. ',' → logprob: -1.1070294380187988
    3. '):
' → logprob: -2.107029438018799
    4. 'self' → logprob: -5.982029438018799
    5. ')' → logprob: -8.60702896118164
    6. '):

' → logprob: -10.48202896118164
    7. '):
' → logprob: -10.60702896118164
    8. ':' → logprob: -10.98202896118164
    9. '(self' → logprob: -11.23202896118164
    10. '<|end|>' → logprob: -11.48202896118164

Token 731: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2491481751203537
    2. 'lines' → logprob: -2.24914813041687
    3. ' input' → logprob: -2.99914813041687
    4. ' lines' → logprob: -3.37414813041687
    5. 'data' → logprob: -4.124148368835449
    6. ')' → logprob: -4.874148368835449
    7. 'raw' → logprob: -5.749148368835449
    8. 'text' → logprob: -6.374148368835449
    9. ' data' → logprob: -6.749148368835449
    10. ' raw' → logprob: -7.874148368835449

Token 732: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.28818196058273315
    2. '_str' → logprob: -1.788182020187378
    3. '_text' → logprob: -3.288182020187378
    4. '_lines' → logprob: -3.538182020187378
    5. '_string' → logprob: -4.163181781768799
    6. 'data' → logprob: -7.663181781768799
    7. 'str' → logprob: -8.788182258605957
    8. '_' → logprob: -8.913182258605957
    9. '_strings' → logprob: -9.288182258605957
    10. '_source' → logprob: -9.288182258605957

Token 733: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003559615579433739
    2. '):
' → logprob: -8.50035572052002
    3. '):' → logprob: -8.87535572052002
    4. '```' → logprob: -11.87535572052002
    5. ' :' → logprob: -13.00035572052002
    6. '   ' → logprob: -13.50035572052002
    7. 'self' → logprob: -14.12535572052002
    8. ')' → logprob: -15.00035572052002
    9. '_:' → logprob: -15.25035572052002
    10. '__:' → logprob: -15.75035572052002

Token 734: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -2.3199920178740285e-05
    2. 'list' → logprob: -11.000022888183594
    3. ' List' → logprob: -12.125022888183594
    4. ')' → logprob: -14.500022888183594
    5. 'self' → logprob: -15.250022888183594
    6. '[List' → logprob: -16.375022888183594
    7. '):
' → logprob: -16.500022888183594
    8. '   ' → logprob: -17.000022888183594
    9. '	List' → logprob: -17.125022888183594
    10. '```' → logprob: -18.250022888183594

Token 735: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.4974866644479334e-05
    2. 'str' → logprob: -11.125015258789062
    3. '```' → logprob: -17.375015258789062
    4. '[' → logprob: -17.625015258789062
    5. '=str' → logprob: -18.250015258789062
    6. ')' → logprob: -18.375015258789062
    7. 'Str' → logprob: -18.750015258789062
    8. '[
' → logprob: -18.750015258789062
    9. '
' → logprob: -18.750015258789062
    10. '	str' → logprob: -19.250015258789062

Token 736: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.09251827001571655
    2. ']):' → logprob: -2.4675183296203613
    3. ']' → logprob: -6.342518329620361
    4. '):
' → logprob: -6.592518329620361
    5. '):' → logprob: -8.467517852783203
    6. '   ' → logprob: -9.717517852783203
    7. '']):
' → logprob: -9.842517852783203
    8. '])' → logprob: -10.217517852783203
    9. '       ' → logprob: -10.342517852783203
    10. ')' → logprob: -10.592517852783203

Token 737: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09048540145158768
    2. '       ' → logprob: -2.8404853343963623
    3. 'def' → logprob: -3.7154853343963623
    4. 'self' → logprob: -5.965485572814941
    5. ' def' → logprob: -7.590485572814941
    6. '<|end|>' → logprob: -8.590485572814941
    7. ' ' → logprob: -9.465485572814941
    8. '	def' → logprob: -9.590485572814941
    9. '    ' → logprob: -9.715485572814941
    10. '  ' → logprob: -9.715485572814941

Token 738: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004339321982115507
    2. '       ' → logprob: -5.504339218139648
    3. ' self' → logprob: -8.254339218139648
    4. '	self' → logprob: -14.629339218139648
    5. '   ' → logprob: -15.254339218139648
    6. '	' → logprob: -17.62933921813965
    7. '(self' → logprob: -18.25433921813965
    8. ' ' → logprob: -18.25433921813965
    9. '[self' → logprob: -18.75433921813965
    10. '﻿' → logprob: -20.12933921813965

Token 739: '.lines' (ID: 96601)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.4274245798587799
    2. 'input' → logprob: -1.1774245500564575
    3. '.lines' → logprob: -3.427424669265747
    4. 'lines' → logprob: -4.927424430847168
    5. ' input' → logprob: -11.302424430847168
    6. '_lines' → logprob: -12.802424430847168
    7. '.' → logprob: -12.927424430847168
    8. '_input' → logprob: -12.927424430847168
    9. '	lines' → logprob: -13.177424430847168
    10. ' lines' → logprob: -13.177424430847168

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14269520342350006
    2. ' =' → logprob: -2.017695188522339
    3. '<|end|>' → logprob: -11.642695426940918
    4. '=[]' → logprob: -13.517695426940918
    5. '   ' → logprob: -13.517695426940918
    6. '	' → logprob: -13.892695426940918
    7. '.' → logprob: -13.892695426940918
    8. ')' → logprob: -14.017695426940918
    9. '=
' → logprob: -14.142695426940918
    10. '=self' → logprob: -14.142695426940918

Token 741: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0028111785650253296
    2. ' input' → logprob: -5.877810955047607
    3. 'iter' → logprob: -12.877811431884766
    4. '[input' → logprob: -12.877811431884766
    5. '[' → logprob: -14.002811431884766
    6. '	input' → logprob: -15.877811431884766
    7. '   ' → logprob: -16.252811431884766
    8. '(input' → logprob: -16.627811431884766
    9. ' iter' → logprob: -16.752811431884766
    10. ' [' → logprob: -17.127811431884766

Token 742: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.511406809295295e-06
    2. 'lines' → logprob: -12.750006675720215
    3. 'Lines' → logprob: -14.000006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '_LINES' → logprob: -14.500006675720215
    6. '_' → logprob: -14.750006675720215
    7. 's' → logprob: -15.000006675720215
    8. '
' → logprob: -15.500006675720215
    9. '       ' → logprob: -16.2500057220459
    10. '_tokens' → logprob: -16.3750057220459

Token 743: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8032198548316956
    2. '   ' → logprob: -0.9282198548316956
    3. '       ' → logprob: -1.9282197952270508
    4. '<|end|>' → logprob: -4.803219795227051
    5. '    
' → logprob: -6.928219795227051
    6. ',' → logprob: -7.553219795227051
    7. 'def' → logprob: -7.678219795227051
    8. '<|end|>' → logprob: -7.928219795227051
    9. '  ' → logprob: -8.55321979522705
    10. '    ' → logprob: -9.17821979522705

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31430938839912415
    2. '   ' → logprob: -1.3143093585968018
    3. 'def' → logprob: -7.689309597015381
    4. 'self' → logprob: -8.064309120178223
    5. '
' → logprob: -8.689309120178223
    6. '    ' → logprob: -11.189309120178223
    7. '  ' → logprob: -11.189309120178223
    8. '<|end|>' → logprob: -11.189309120178223
    9. ' self' → logprob: -11.814309120178223
    10. ' def' → logprob: -11.814309120178223

Token 745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007928364910185337
    2. '
' → logprob: -5.257928371429443
    3. '       ' → logprob: -6.132928371429443
    4. ' self' → logprob: -7.882928371429443
    5. '   ' → logprob: -9.257927894592285
    6. '	self' → logprob: -10.507927894592285
    7. 'def' → logprob: -11.882927894592285
    8. '0' → logprob: -12.257927894592285
    9. '	' → logprob: -12.632927894592285
    10. '        
' → logprob: -13.132927894592285

Token 746: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.25944024324417114
    2. '.index' → logprob: -1.5094401836395264
    3. '_index' → logprob: -5.5094404220581055
    4. '.current' → logprob: -6.5094404220581055
    5. 'current' → logprob: -6.6344404220581055
    6. ' index' → logprob: -8.634440422058105
    7. 'pos' → logprob: -8.759440422058105
    8. '.pos' → logprob: -9.759440422058105
    9. '.position' → logprob: -9.759440422058105
    10. '.pointer' → logprob: -10.009440422058105

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693682312965393
    2. '=' → logprob: -2.126936912536621
    3. '<|end|>' → logprob: -12.376936912536621
    4. ' ' → logprob: -12.626936912536621
    5. '0' → logprob: -14.126936912536621
    6. '  ' → logprob: -15.876936912536621
    7. '   ' → logprob: -16.126935958862305
    8. ':' → logprob: -16.626935958862305
    9. '<|end|>' → logprob: -16.876935958862305
    10. 's' → logprob: -16.876935958862305

Token 748: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.00001335144043
    4. '۰' → logprob: -19.25001335144043
    5. '  ' → logprob: -21.37501335144043
    6. '=' → logprob: -21.50001335144043
    7. '```' → logprob: -22.25001335144043
    8. '1' → logprob: -22.37501335144043
    9. '<|end|>' → logprob: -22.62501335144043
    10. '০' → logprob: -22.68751335144043

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -18.12500762939453
    4. '=' → logprob: -18.50000762939453
    5. '   ' → logprob: -19.31250762939453
    6. '1' → logprob: -20.00000762939453
    7. '-' → logprob: -20.00000762939453
    8. '```' → logprob: -20.06250762939453
    9. '০' → logprob: -20.62500762939453
    10. '  ' → logprob: -20.68750762939453

Token 750: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007936405017971992
    2. '   ' → logprob: -5.882936477661133
    3. '<|end|>' → logprob: -5.882936477661133
    4. ' def' → logprob: -7.007936477661133
    5. 'def' → logprob: -7.132936477661133
    6. '    
' → logprob: -8.257936477661133
    7. '

' → logprob: -9.007936477661133
    8. ' 
' → logprob: -9.507936477661133
    9. '<|end|>' → logprob: -9.882936477661133
    10. '  
' → logprob: -9.882936477661133

Token 751: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017328636720776558
    2. '<|end|>' → logprob: -4.76732873916626
    3. 'def' → logprob: -5.64232873916626
    4. ' def' → logprob: -6.01732873916626
    5. '    
' → logprob: -6.89232873916626
    6. '   ' → logprob: -7.26732873916626
    7. '

' → logprob: -7.51732873916626
    8. '<|end|>' → logprob: -8.767328262329102
    9. ' 
' → logprob: -9.142328262329102
    10. '  
' → logprob: -9.392328262329102

Token 752: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005242533516138792
    2. ' def' → logprob: -5.255242347717285
    3. '   ' → logprob: -12.505242347717285
    4. '
' → logprob: -12.880242347717285
    5. '	def' → logprob: -13.005242347717285
    6. 'de' → logprob: -16.1302433013916
    7. '```' → logprob: -17.1302433013916
    8. 'Def' → logprob: -17.7552433013916
    9. ':def' → logprob: -18.7552433013916
    10. '[' → logprob: -18.7552433013916

Token 753: ' next' (ID: 2613)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.01021178811788559
    2. ' has' → logprob: -5.010211944580078
    3. 'read' → logprob: -6.135211944580078
    4. 'parse' → logprob: -7.260211944580078
    5. 'next' → logprob: -7.510211944580078
    6. 'def' → logprob: -9.760211944580078
    7. ' next' → logprob: -12.510211944580078
    8. ' parse' → logprob: -12.760211944580078
    9. ' read' → logprob: -13.135211944580078
    10. ' def' → logprob: -13.135211944580078

Token 754: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.012196213938295841
    2. '_token' → logprob: -5.012196063995361
    3. '()' → logprob: -5.637196063995361
    4. '(self' → logprob: -6.762196063995361
    5. '_' → logprob: -7.637196063995361
    6. '(' → logprob: -8.88719654083252
    7. 'line' → logprob: -10.26219654083252
    8. '_int' → logprob: -10.26219654083252
    9. '_value' → logprob: -10.38719654083252
    10. '_t' → logprob: -12.13719654083252

Token 755: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016957100888248533
    2. '()' → logprob: -8.75016975402832
    3. 'self' → logprob: -12.50016975402832
    4. '(' → logprob: -12.62516975402832
    5. '():' → logprob: -13.62516975402832
    6. '_line' → logprob: -14.12516975402832
    7. '   ' → logprob: -14.12516975402832
    8. 's' → logprob: -14.50016975402832
    9. 'def' → logprob: -15.37516975402832
    10. '():
' → logprob: -15.62516975402832

Token 756: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011197781190276146
    2. '(self' → logprob: -5.386197566986084
    3. '):' → logprob: -5.886197566986084
    4. 'self' → logprob: -6.011197566986084
    5. '):
' → logprob: -6.761197566986084
    6. ')(' → logprob: -9.136198043823242
    7. ')->' → logprob: -11.386198043823242
    8. 's' → logprob: -11.636198043823242
    9. '()' → logprob: -11.761198043823242
    10. '   ' → logprob: -12.261198043823242

Token 757: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -11.000024795532227
    3. 'self' → logprob: -12.250024795532227
    4. '()' → logprob: -13.000024795532227
    5. '():' → logprob: -15.375024795532227
    6. '(s' → logprob: -15.375024795532227
    7. 's' → logprob: -16.000024795532227
    8. '   ' → logprob: -17.000024795532227
    9. '():
' → logprob: -17.125024795532227
    10. '	self' → logprob: -17.375024795532227

Token 758: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014606848359107971
    2. ' int' → logprob: -4.264606952667236
    3. '(int' → logprob: -7.764606952667236
    4. '()' → logprob: -11.889606475830078
    5. '[int' → logprob: -11.889606475830078
    6. '<int' → logprob: -13.139606475830078
    7. ' ' → logprob: -14.014606475830078
    8. 'self' → logprob: -14.389606475830078
    9. ':int' → logprob: -14.639606475830078
    10. '=int' → logprob: -14.889606475830078

Token 759: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.39463570713996887
    2. '():' → logprob: -1.5196356773376465
    3. ':' → logprob: -2.5196356773376465
    4. '()' → logprob: -4.1446356773376465
    5. ':
' → logprob: -4.6446356773376465
    6. '(self' → logprob: -7.8946356773376465
    7. '(' → logprob: -8.269636154174805
    8. '):
' → logprob: -8.394636154174805
    9. '       ' → logprob: -8.519636154174805
    10. '   ' → logprob: -9.394636154174805

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047110289335250854
    2. 'return' → logprob: -3.9221103191375732
    3. 'int' → logprob: -4.297110080718994
    4. 'result' → logprob: -5.922110080718994
    5. 'value' → logprob: -6.172110080718994
    6. ' return' → logprob: -6.422110080718994
    7. 'num' → logprob: -6.547110080718994
    8. 'self' → logprob: -7.047110080718994
    9. 'line' → logprob: -7.047110080718994
    10. '```' → logprob: -7.922110080718994

Token 761: ' while' (ID: 2049)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.20547805726528168
    2. 'val' → logprob: -1.7054780721664429
    3. ' value' → logprob: -6.455478191375732
    4. ' val' → logprob: -6.705478191375732
    5. 'result' → logprob: -6.705478191375732
    6. 'res' → logprob: -10.455477714538574
    7. 'int' → logprob: -13.455477714538574
    8. 'v' → logprob: -13.705477714538574
    9. '   ' → logprob: -13.830477714538574
    10. '	val' → logprob: -13.955477714538574

Token 762: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11301673948764801
    2. ' self' → logprob: -2.2380168437957764
    3. ' not' → logprob: -9.363017082214355
    4. 'True' → logprob: -10.113017082214355
    5. ' True' → logprob: -10.113017082214355
    6. 'not' → logprob: -10.738017082214355
    7. '   ' → logprob: -12.613017082214355
    8. '	self' → logprob: -14.113017082214355
    9. ' ' → logprob: -14.488017082214355
    10. '(self' → logprob: -15.113017082214355

Token 763: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4746857285499573
    2. '.index' → logprob: -0.9746857285499573
    3. '.lines' → logprob: -8.599685668945312
    4. 'lines' → logprob: -8.849685668945312
    5. ' index' → logprob: -9.224685668945312
    6. '	index' → logprob: -9.974685668945312
    7. ':index' → logprob: -10.474685668945312
    8. ':' → logprob: -10.724685668945312
    9. ' and' → logprob: -10.974685668945312
    10. '.' → logprob: -11.224685668945312

Token 764: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2801840007305145
    2. '<' → logprob: -2.155184030532837
    3. '<len' → logprob: -2.655184030532837
    4. ' >=' → logprob: -3.280184030532837
    5. '>=' → logprob: -3.905184030532837
    6. ' ' → logprob: -9.155183792114258
    7. '<size' → logprob: -9.530183792114258
    8. '<n' → logprob: -10.155183792114258
    9. '<int' → logprob: -10.405183792114258
    10. '<data' → logprob: -10.655183792114258

Token 765: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009115827269852161
    2. ' len' → logprob: -7.000911712646484
    3. 'self' → logprob: -17.000911712646484
    4. '	len' → logprob: -17.375911712646484
    5. '(len' → logprob: -17.875911712646484
    6. '=len' → logprob: -17.875911712646484
    7. '[len' → logprob: -18.500911712646484
    8. '<len' → logprob: -18.750911712646484
    9. '
' → logprob: -19.625911712646484
    10. ',len' → logprob: -20.000911712646484

Token 766: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034988581319339573
    2. 'self' → logprob: -8.125349998474121
    3. '(' → logprob: -9.875349998474121
    4. ' self' → logprob: -13.125349998474121
    5. 's' → logprob: -15.250349998474121
    6. '(
' → logprob: -15.750349998474121
    7. '(s' → logprob: -18.750349044799805
    8. ':self' → logprob: -18.875349044799805
    9. ',self' → logprob: -18.875349044799805
    10. ' (' → logprob: -19.000349044799805

Token 767: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0004954866599291563
    2. 'lines' → logprob: -7.625495433807373
    3. '.' → logprob: -12.750495910644531
    4. '	lines' → logprob: -13.000495910644531
    5. '(lines' → logprob: -13.500495910644531
    6. ' lines' → logprob: -14.750495910644531
    7. '_lines' → logprob: -15.750495910644531
    8. '.l' → logprob: -16.00049591064453
    9. '.li' → logprob: -16.37549591064453
    10. ' .' → logprob: -16.62549591064453

Token 768: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05732966959476471
    2. 'and' → logprob: -3.4323296546936035
    3. ':
' → logprob: -3.8073296546936035
    4. ':' → logprob: -7.4323296546936035
    5. '):
' → logprob: -7.9323296546936035
    6. ')' → logprob: -8.682330131530762
    7. '       ' → logprob: -10.307330131530762
    8. '           ' → logprob: -10.932330131530762
    9. ' ' → logprob: -12.182330131530762
    10. '   ' → logprob: -12.182330131530762

Token 769: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4285804331302643
    2. ' line' → logprob: -1.303580403327942
    3. '           ' → logprob: -3.0535805225372314
    4. 'line' → logprob: -4.553580284118652
    5. 'tokens' → logprob: -4.803580284118652
    6. ' if' → logprob: -6.053580284118652
    7. 'token' → logprob: -6.053580284118652
    8. ' tokens' → logprob: -6.553580284118652
    9. ' token' → logprob: -6.678580284118652
    10. ' s' → logprob: -7.178580284118652

Token 770: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.16062813997268677
    2. ' line' → logprob: -1.910628080368042
    3. 'token' → logprob: -8.785628318786621
    4. '           ' → logprob: -9.035628318786621
    5. 'value' → logprob: -9.910628318786621
    6. '       ' → logprob: -10.910628318786621
    7. 'if' → logprob: -11.160628318786621
    8. '	line' → logprob: -11.535628318786621
    9. 'val' → logprob: -11.910628318786621
    10. ' token' → logprob: -12.160628318786621

Token 771: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029714616015553474
    2. '=' → logprob: -3.654714584350586
    3. '=line' → logprob: -6.154714584350586
    4. 'tokens' → logprob: -8.029714584350586
    5. '_tokens' → logprob: -8.029714584350586
    6. '.strip' → logprob: -8.654714584350586
    7. 's' → logprob: -8.904714584350586
    8. ' ' → logprob: -9.404714584350586
    9. '       ' → logprob: -10.154714584350586
    10. '.tokens' → logprob: -10.529714584350586

Token 772: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170225441455841
    2. ' self' → logprob: -6.7511701583862305
    3. '(self' → logprob: -18.751171112060547
    4. 's' → logprob: -19.876171112060547
    5. '           ' → logprob: -19.876171112060547
    6. '	self' → logprob: -20.251171112060547
    7. '
' → logprob: -21.626171112060547
    8. 'this' → logprob: -21.626171112060547
    9. '[self' → logprob: -21.751171112060547
    10. '   ' → logprob: -21.876171112060547

Token 773: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.04874848946928978
    2. 'lines' → logprob: -3.04874849319458
    3. ' lines' → logprob: -9.548748016357422
    4. 'self' → logprob: -10.048748016357422
    5. '	lines' → logprob: -10.423748016357422
    6. '_lines' → logprob: -11.423748016357422
    7. '(lines' → logprob: -12.298748016357422
    8. '   ' → logprob: -14.798748016357422
    9. 'Lines' → logprob: -15.423748016357422
    10. '.' → logprob: -15.798748016357422

Token 774: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00011009939044015482
    2. 'self' → logprob: -9.125109672546387
    3. ' self' → logprob: -13.875109672546387
    4. '[' → logprob: -16.000110626220703
    5. '[
' → logprob: -17.625110626220703
    6. '	self' → logprob: -17.750110626220703
    7. '
' → logprob: -18.625110626220703
    8. '(self' → logprob: -18.750110626220703
    9. ' [' → logprob: -19.250110626220703
    10. '   ' → logprob: -19.750110626220703

Token 775: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.4740956723690033
    2. 'index' → logprob: -0.9740957021713257
    3. ' index' → logprob: -11.474095344543457
    4. ':index' → logprob: -13.099095344543457
    5. '.' → logprob: -13.474095344543457
    6. '	index' → logprob: -13.849095344543457
    7. '_index' → logprob: -13.974095344543457
    8. 'nd' → logprob: -14.099095344543457
    9. '.lines' → logprob: -14.724095344543457
    10. 'Index' → logprob: -14.849095344543457

Token 776: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.12423586845397949
    2. '
' → logprob: -2.3742358684539795
    3. ').' → logprob: -4.499236106872559
    4. '.split' → logprob: -5.124236106872559
    5. '.rstrip' → logprob: -5.999236106872559
    6. '           ' → logprob: -6.999236106872559
    7. ')
' → logprob: -7.124236106872559
    8. ' .' → logprob: -7.499236106872559
    9. ')' → logprob: -7.624236106872559
    10. '.' → logprob: -7.749236106872559

Token 777: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'split' → logprob: -16.0
    3. '.strip' → logprob: -18.0
    4. 'rstrip' → logprob: -18.125
    5. ' strip' → logprob: -19.125
    6. '_strip' → logprob: -21.0
    7. 'str' → logprob: -22.75
    8. 'stripe' → logprob: -23.0
    9. '
' → logprob: -23.125
    10. '-strip' → logprob: -23.625

Token 778: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3870358467102051
    2. '()' → logprob: -1.137035846710205
    3. '
' → logprob: -9.887035369873047
    4. '();' → logprob: -10.512035369873047
    5. '()

' → logprob: -10.762035369873047
    6. '()
' → logprob: -11.012035369873047
    7. '()\' → logprob: -11.637035369873047
    8. ')' → logprob: -12.012035369873047
    9. '       ' → logprob: -12.512035369873047
    10. '           ' → logprob: -12.762035369873047

Token 779: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2408456951379776
    2. '           ' → logprob: -2.4908456802368164
    3. 'self' → logprob: -2.6158456802368164
    4. 'if' → logprob: -3.1158456802368164
    5. ' if' → logprob: -4.490845680236816
    6. ' self' → logprob: -6.115845680236816
    7. ',' → logprob: -9.990845680236816
    8. '<|end|>' → logprob: -9.990845680236816
    9. '
' → logprob: -10.365845680236816
    10. '   ' → logprob: -10.490845680236816

Token 780: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01435224898159504
    2. 'if' → logprob: -4.264352321624756
    3. ' self' → logprob: -9.014351844787598
    4. '           ' → logprob: -10.389351844787598
    5. '       ' → logprob: -10.639351844787598
    6. ' if' → logprob: -11.389351844787598
    7. '	self' → logprob: -14.514351844787598
    8. '   ' → logprob: -16.139352798461914
    9. '
' → logprob: -16.264352798461914
    10. '               ' → logprob: -16.639352798461914

Token 781: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.029800361022353172
    2. 'index' → logprob: -3.5298004150390625
    3. '=index' → logprob: -10.654800415039062
    4. ':index' → logprob: -11.779800415039062
    5. '_index' → logprob: -11.904800415039062
    6. '.' → logprob: -11.904800415039062
    7. ' index' → logprob: -13.029800415039062
    8. '	index' → logprob: -13.279800415039062
    9. 'if' → logprob: -15.154800415039062
    10. '@index' → logprob: -15.654800415039062

Token 782: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889584451913834
    2. ' +=' → logprob: -2.5788958072662354
    3. '=' → logprob: -12.828895568847656
    4. ']+=' → logprob: -13.203895568847656
    5. '
' → logprob: -14.203895568847656
    6. '+' → logprob: -15.328895568847656
    7. '   ' → logprob: -15.828895568847656
    8. '	' → logprob: -16.078895568847656
    9. '==' → logprob: -16.203895568847656
    10. '+="' → logprob: -17.203895568847656

Token 783: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -20.250001907348633
    4. '１' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.500001907348633
    6. '۱' → logprob: -23.000001907348633
    7. '```' → logprob: -23.812501907348633
    8. '  ' → logprob: -24.500001907348633
    9. ' ' → logprob: -24.687501907348633
    10. '১' → logprob: -24.812501907348633

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '
' → logprob: -19.75
    4. '１' → logprob: -21.875
    5. '```' → logprob: -22.125
    6. '   ' → logprob: -22.375
    7. '۱' → logprob: -22.5625
    8. '

' → logprob: -23.75
    9. '-' → logprob: -23.8125
    10. '`' → logprob: -23.9375

Token 785: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03332844004034996
    2. 'if' → logprob: -3.5333285331726074
    3. ' if' → logprob: -5.658328533172607
    4. '       ' → logprob: -9.90832805633545
    5. '               ' → logprob: -11.40832805633545
    6. '	       ' → logprob: -12.03332805633545
    7. '   ' → logprob: -12.28332805633545
    8. '		' → logprob: -12.53332805633545
    9. ' ' → logprob: -13.15832805633545
    10. '	if' → logprob: -13.65832805633545

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0550813227891922
    2. 'if' → logprob: -3.055081367492676
    3. ' if' → logprob: -5.055081367492676
    4. '       ' → logprob: -9.555081367492676
    5. '   ' → logprob: -11.305081367492676
    6. '               ' → logprob: -12.305081367492676
    7. ' ' → logprob: -13.180081367492676
    8. '		' → logprob: -13.180081367492676
    9. 'try' → logprob: -13.430081367492676
    10. '	       ' → logprob: -13.930081367492676

Token 787: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.400689305039123e-05
    2. '           ' → logprob: -9.500094413757324
    3. ' if' → logprob: -10.875094413757324
    4. 'If' → logprob: -16.375093460083008
    5. 'try' → logprob: -17.125093460083008
    6. ';if' → logprob: -19.000093460083008
    7. '```' → logprob: -19.125093460083008
    8. '            
' → logprob: -19.250093460083008
    9. '
' → logprob: -19.250093460083008
    10. '	if' → logprob: -19.375093460083008

Token 788: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011708177626132965
    2. ' line' → logprob: -6.751170635223389
    3. 'len' → logprob: -14.501171112060547
    4. 'not' → logprob: -16.001171112060547
    5. ' not' → logprob: -18.376171112060547
    6. '	line' → logprob: -18.751171112060547
    7. '   ' → logprob: -18.876171112060547
    8. '(line' → logprob: -19.126171112060547
    9. ' ' → logprob: -19.626171112060547
    10. '
' → logprob: -19.876171112060547

Token 789: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6199216842651367
    2. '!=' → logprob: -0.8699216842651367
    3. ' !=' → logprob: -3.3699216842651367
    4. ':
' → logprob: -6.119921684265137
    5. '!='' → logprob: -6.494921684265137
    6. '==' → logprob: -6.494921684265137
    7. '<|end|>' → logprob: -6.744921684265137
    8. ' and' → logprob: -7.994921684265137
    9. '!="' → logprob: -7.994921684265137
    10. 'and' → logprob: -7.994921684265137

Token 790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2919863164424896
    2. 'return' → logprob: -1.416986346244812
    3. ' return' → logprob: -4.541986465454102
    4. ':return' → logprob: -10.041986465454102
    5. '```' → logprob: -10.541986465454102
    6. '	return' → logprob: -10.916986465454102
    7. '           ' → logprob: -11.666986465454102
    8. '{return' → logprob: -11.666986465454102
    9. '   ' → logprob: -12.166986465454102
    10. '	           ' → logprob: -12.791986465454102

Token 791: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.8961017202818766e-05
    2. ' return' → logprob: -9.750059127807617
    3. '               ' → logprob: -15.125059127807617
    4. '                   ' → logprob: -15.750059127807617
    5. '
' → logprob: -16.375059127807617
    6. '	return' → logprob: -17.000059127807617
    7. 'try' → logprob: -17.250059127807617
    8. '```' → logprob: -18.250059127807617
    9. ':return' → logprob: -18.875059127807617
    10. '{return' → logprob: -19.000059127807617

Token 792: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.676292231422849e-05
    2. ' int' → logprob: -11.000017166137695
    3. '(int' → logprob: -22.250017166137695
    4. '[int' → logprob: -22.750017166137695
    5. '	int' → logprob: -23.125017166137695
    6. '<int' → logprob: -24.625017166137695
    7. '   ' → logprob: -24.750017166137695
    8. ':int' → logprob: -25.500017166137695
    9. 'ints' → logprob: -26.500017166137695
    10. '
' → logprob: -26.750017166137695

Token 793: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. 'line' → logprob: -14.625123977661133
    4. '[line' → logprob: -16.500123977661133
    5. '(
' → logprob: -16.875123977661133
    6. ' line' → logprob: -17.500123977661133
    7. '=line' → logprob: -18.750123977661133
    8. '#line' → logprob: -19.000123977661133
    9. ',line' → logprob: -19.625123977661133
    10. ' (' → logprob: -20.000123977661133

Token 794: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. '<|end|>' → logprob: -10.750048637390137
    3. ' )' → logprob: -11.250048637390137
    4. ')
' → logprob: -11.375048637390137
    5. '())' → logprob: -13.625048637390137
    6. '<|end|>' → logprob: -14.500048637390137
    7. '       ' → logprob: -15.000048637390137
    8. ')return' → logprob: -15.000048637390137
    9. '))' → logprob: -16.625049591064453
    10. '()' → logprob: -16.625049591064453

Token 795: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07660267502069473
    2. 'raise' → logprob: -3.0766026973724365
    3. ' raise' → logprob: -3.7016026973724365
    4. '<|end|>' → logprob: -6.826602458953857
    5. '   ' → logprob: -7.451602458953857
    6. '	raise' → logprob: -8.326602935791016
    7. 'return' (adapté à ' return') → logprob: -8.451602935791016
    8. '        
' → logprob: -8.951602935791016
    9. '
' → logprob: -9.076602935791016
    10. '    ' → logprob: -9.076602935791016

Token 797: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001976215047761798
    2. '0' → logprob: -6.876976013183594
    3. 'None' → logprob: -7.251976013183594
    4. ' -' → logprob: -8.376976013183594
    5. ' None' → logprob: -12.501976013183594
    6. ' ' → logprob: -15.376976013183594
    7. '-int' → logprob: -16.376976013183594
    8. '
' → logprob: -17.126976013183594
    9. '-ex' → logprob: -18.126976013183594
    10. '-f' → logprob: -18.126976013183594

Token 798: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001140453852713108
    2. 'None' → logprob: -7.251140594482422
    3. '0' → logprob: -7.751140594482422
    4. ' -' → logprob: -16.126140594482422
    5. '-int' → logprob: -17.251140594482422
    6. ' None' → logprob: -17.751140594482422
    7. '-none' → logprob: -18.876140594482422
    8. '-s' → logprob: -19.001140594482422
    9. 'int' → logprob: -19.126140594482422
    10. 'EOF' → logprob: -19.126140594482422

Token 799: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22439666092395782
    2. '
' → logprob: -2.2243967056274414
    3. '<|end|>' → logprob: -2.7243967056274414
    4. 'def' → logprob: -4.349396705627441
    5. '    
' → logprob: -4.349396705627441
    6. '<|end|>' → logprob: -7.724396705627441
    7. '  
' → logprob: -8.224396705627441
    8. ' 
' → logprob: -8.599396705627441
    9. '        
' → logprob: -8.724396705627441
    10. ' def' → logprob: -8.974396705627441

Token 800: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7087664604187012
    2. '<|end|>' → logprob: -0.9587664604187012
    3. 'def' → logprob: -2.208766460418701
    4. '   ' → logprob: -5.833766460418701
    5. ' 
' → logprob: -5.958766460418701
    6. ' def' → logprob: -6.083766460418701
    7. '```' → logprob: -6.208766460418701
    8. '<|end|>' → logprob: -6.208766460418701
    9. '	def' → logprob: -7.333766460418701
    10. '    
' → logprob: -7.458766460418701

Token 801: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.246537173457909e-06
    2. ' def' → logprob: -12.750003814697266
    3. '   ' → logprob: -13.625003814697266
    4. '	def' → logprob: -17.125003814697266
    5. '    
' → logprob: -17.500003814697266
    6. '```' → logprob: -17.750003814697266
    7. '
' → logprob: -18.625003814697266
    8. 'from' → logprob: -19.125003814697266
    9. 'class' → logprob: -19.375003814697266
    10. 'next' → logprob: -19.500003814697266

Token 802: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.004004315007477999
    2. ' next' → logprob: -5.75400447845459
    3. 'read' → logprob: -8.00400447845459
    4. 'parse' → logprob: -8.62900447845459
    5. 'has' → logprob: -8.75400447845459
    6. 'peek' → logprob: -9.50400447845459
    7. 'get' → logprob: -10.37900447845459
    8. '__' → logprob: -11.12900447845459
    9. '_next' → logprob: -11.12900447845459
    10. 'split' → logprob: -11.25400447845459

Token 803: '_' (ID: 62)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6751117706298828
    2. '_line' → logprob: -0.8001117706298828
    3. '_tuple' → logprob: -3.800111770629883
    4. '_token' → logprob: -4.800111770629883
    5. '_tokens' → logprob: -4.925111770629883
    6. '_int' → logprob: -6.300111770629883
    7. '_pair' → logprob: -7.425111770629883
    8. '_str' → logprob: -7.675111770629883
    9. '_word' → logprob: -8.925111770629883
    10. '_' → logprob: -9.050111770629883

Token 804: 'road' (ID: 12086)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.3996012806892395
    2. 'tuple' → logprob: -1.6496012210845947
    3. 'line' → logprob: -2.5246012210845947
    4. 'list' → logprob: -3.0246012210845947
    5. 'tokens' → logprob: -5.649601459503174
    6. 'int' → logprob: -6.149601459503174
    7. 'pair' → logprob: -7.024601459503174
    8. 'str' → logprob: -7.524601459503174
    9. 'split' → logprob: -7.774601459503174
    10. 'Ints' → logprob: -8.274600982666016

Token 805: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001351306913420558
    2. '()' → logprob: -6.626351356506348
    3. ' (' → logprob: -11.501351356506348
    4. '(' → logprob: -11.876351356506348
    5. '()(' → logprob: -12.876351356506348
    6. '(s' → logprob: -13.376351356506348
    7. 'self' → logprob: -13.501351356506348
    8. 's' → logprob: -13.626351356506348
    9. ' ()' → logprob: -14.501351356506348
    10. '(sel' → logprob: -15.876351356506348

Token 806: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.9160102712921798e-05
    2. '(' → logprob: -10.625029563903809
    3. ' (' → logprob: -12.500029563903809
    4. 'self' → logprob: -14.625029563903809
    5. '(s' → logprob: -15.000029563903809
    6. '(
' → logprob: -15.875029563903809
    7. '()' → logprob: -16.750028610229492
    8. '(sel' → logprob: -17.250028610229492
    9. '(se' → logprob: -17.375028610229492
    10. '   ' → logprob: -17.750028610229492

Token 807: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38748660683631897
    2. ')' → logprob: -1.1374865770339966
    3. 'self' → logprob: -7.512486457824707
    4. ')(' → logprob: -9.887486457824707
    5. '()' → logprob: -12.012486457824707
    6. '(' → logprob: -12.762486457824707
    7. ' self' → logprob: -13.637486457824707
    8. '   ' → logprob: -13.637486457824707
    9. '):' → logprob: -13.637486457824707
    10. ' )' → logprob: -13.762486457824707

Token 808: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028141476213932037
    2. 'n' → logprob: -6.752814292907715
    3. 'count' → logprob: -7.127814292907715
    4. '   ' → logprob: -8.377814292907715
    5. 'num' → logprob: -8.627814292907715
    6. '):' → logprob: -9.002814292907715
    7. ')n' → logprob: -9.377814292907715
    8. '):
' → logprob: -10.127814292907715
    9. 'a' → logprob: -10.877814292907715
    10. ' n' → logprob: -11.002814292907715

Token 809: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04263211786746979
    2. ':' → logprob: -3.2926321029663086
    3. '):' → logprob: -5.542632102966309
    4. '):
' → logprob: -7.917632102966309
    5. '_lines' → logprob: -9.542632102966309
    6. ' )' → logprob: -9.667632102966309
    7. '
' → logprob: -10.042632102966309
    8. '   ' → logprob: -10.417632102966309
    9. ':int' → logprob: -10.542632102966309
    10. '  ' → logprob: -11.667632102966309

Token 810: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028922520577907562
    2. ')' → logprob: -5.877892017364502
    3. ' int' → logprob: -9.62789249420166
    4. '):
' → logprob: -11.87789249420166
    5. '):' → logprob: -12.50289249420166
    6. ')>' → logprob: -12.87789249420166
    7. ')->' → logprob: -13.50289249420166
    8. ':int' → logprob: -13.87789249420166
    9. '	int' → logprob: -14.00289249420166
    10. '[int' → logprob: -14.12789249420166

Token 811: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.029847231227905e-05
    2. '):' → logprob: -9.500080108642578
    3. '):
' → logprob: -12.750080108642578
    4. ' )' → logprob: -13.500080108642578
    5. '   ' → logprob: -14.875080108642578
    6. ')->' → logprob: -15.125080108642578
    7. ',' → logprob: -15.750080108642578
    8. ',)' → logprob: -15.750080108642578
    9. '）' → logprob: -16.375080108642578
    10. ':' → logprob: -16.875080108642578

Token 812: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -1.2099689245224
    2. ' ->' → logprob: -1.2099689245224
    3. ')' → logprob: -1.3349689245224
    4. ':' → logprob: -2.3349690437316895
    5. '(self' → logprob: -3.4599690437316895
    6. '       ' → logprob: -5.5849690437316895
    7. '   ' → logprob: -5.5849690437316895
    8. '()' → logprob: -6.7099690437316895
    9. ')->' → logprob: -6.7099690437316895
    10. 'self' → logprob: -6.7099690437316895

Token 813: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -8.983476436696947e-05
    2. ' List' → logprob: -9.750089645385742
    3. '[List' → logprob: -10.625089645385742
    4. 'Tuple' → logprob: -11.875089645385742
    5. 'list' → logprob: -15.750089645385742
    6. '	List' → logprob: -17.000089645385742
    7. 'Iterator' → logprob: -17.875089645385742
    8. 'Generator' → logprob: -18.000089645385742
    9. '[(' → logprob: -18.125089645385742
    10. '   ' → logprob: -18.250089645385742

Token 814: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.0629870858974755e-05
    2. '[List' → logprob: -9.75006103515625
    3. '[int' → logprob: -13.25006103515625
    4. 'Tuple' → logprob: -14.50006103515625
    5. '[
' → logprob: -17.25006103515625
    6. '[str' → logprob: -17.50006103515625
    7. '   ' → logprob: -18.12506103515625
    8. '[T' → logprob: -18.62506103515625
    9. 'List' → logprob: -19.75006103515625
    10. '<Tuple' → logprob: -20.12506103515625

Token 815: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.696889623621246e-06
    2. ' Tuple' → logprob: -13.75000286102295
    3. 'List' → logprob: -14.12500286102295
    4. '[' → logprob: -14.62500286102295
    5. 'tuple' → logprob: -14.87500286102295
    6. 'Tu' → logprob: -18.750001907348633
    7. 'int' → logprob: -18.875001907348633
    8. 'Trip' → logprob: -19.125001907348633
    9. '.Tuple' → logprob: -19.375001907348633
    10. 'Triple' → logprob: -19.500001907348633

Token 816: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132769465446472
    2. '[int' → logprob: -1.313277006149292
    3. '(int' → logprob: -11.313277244567871
    4. ',int' → logprob: -13.563277244567871
    5. ' int' → logprob: -13.813277244567871
    6. '   ' → logprob: -14.813277244567871
    7. '	int' → logprob: -16.188276290893555
    8. '<int' → logprob: -16.438276290893555
    9. ',' → logprob: -16.563276290893555
    10. ']int' → logprob: -16.688276290893555

Token 817: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001060198643244803
    2. ',int' → logprob: -6.8760600090026855
    3. ' ,' → logprob: -10.751060485839844
    4. 'int' → logprob: -12.126060485839844
    5. '[int' → logprob: -14.751060485839844
    6. ',
' → logprob: -16.251060485839844
    7. ',List' → logprob: -16.251060485839844
    8. '‌,' → logprob: -17.126060485839844
    9. ',Integer' → logprob: -17.126060485839844
    10. ' int' → logprob: -17.626060485839844

Token 818: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.20150192081928253
    2. ',' → logprob: -1.7015019655227661
    3. 'int' → logprob: -9.826501846313477
    4. ' ,' → logprob: -10.326501846313477
    5. ',
' → logprob: -15.076501846313477
    6. ',bool' → logprob: -15.076501846313477
    7. ',i' → logprob: -15.201501846313477
    8. ' int' → logprob: -15.201501846313477
    9. ']int' → logprob: -15.951501846313477
    10. ',float' → logprob: -15.951501846313477

Token 819: ']]:
' (ID: 183340)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0759332180023193
    2. ']:' → logprob: -1.2009332180023193
    3. ']>' → logprob: -1.7009332180023193
    4. ']]:
' → logprob: -2.2009332180023193
    5. ']]' → logprob: -2.8259332180023193
    6. '>' → logprob: -6.200933456420898
    7. ']:
' → logprob: -6.325933456420898
    8. ')]' → logprob: -6.575933456420898
    9. ']:
' → logprob: -8.950933456420898
    10. ']):' → logprob: -9.075933456420898

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00795095693320036
    2. '[]' → logprob: -5.132950782775879
    3. '```' → logprob: -6.757950782775879
    4. '	' → logprob: -8.257950782775879
    5. '[' → logprob: -8.632950782775879
    6. '   ' → logprob: -9.257950782775879
    7. ' lines' → logprob: -10.382950782775879
    8. ',' → logprob: -10.507950782775879
    9. 'List' → logprob: -10.507950782775879
    10. 'result' → logprob: -11.007950782775879

Token 821: ' roads' (ID: 30027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040277618914842606
    2. 'data' → logprob: -3.2902777194976807
    3. 'road' → logprob: -6.540277481079102
    4. 'result' → logprob: -7.415277481079102
    5. 'results' → logprob: -9.165277481079102
    6. 'roads' (adapté à ' roads') → logprob: -10.040277481079102
    7. ' data' → logprob: -11.165277481079102
    8. '   ' → logprob: -12.165277481079102
    9. ' road' → logprob: -12.665277481079102
    10. 'res' → logprob: -12.790277481079102

Token 822: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31335487961769104
    2. '=' → logprob: -1.3133548498153687
    3. '=[]' → logprob: -9.9383544921875
    4. '=[]
' → logprob: -10.4383544921875
    5. ':' → logprob: -11.3133544921875
    6. ' ' → logprob: -14.0633544921875
    7. '[]' → logprob: -14.0633544921875
    8. '   ' → logprob: -14.5633544921875
    9. ' []' → logprob: -15.0633544921875
    10. 's' → logprob: -15.0633544921875

Token 823: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000283265660982579
    2. '[]
' → logprob: -8.750283241271973
    3. ' []' → logprob: -9.000283241271973
    4. '[' → logprob: -13.500283241271973
    5. '[]

' → logprob: -17.00028419494629
    6. '[]}' → logprob: -18.25028419494629
    7. ' []
' → logprob: -19.00028419494629
    8. '[]"' → logprob: -19.12528419494629
    9. ' ' → logprob: -19.75028419494629
    10. '[
' → logprob: -19.75028419494629

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07210041582584381
    2. ' for' → logprob: -2.8221004009246826
    3. 'for' → logprob: -4.947100639343262
    4. '   ' → logprob: -6.822100639343262
    5. '	for' → logprob: -7.322100639343262
    6. '
' → logprob: -7.697100639343262
    7. '	' → logprob: -8.322100639343262
    8. '<|end|>' → logprob: -8.822100639343262
    9. '        
' → logprob: -9.322100639343262
    10. '	   ' → logprob: -9.572100639343262

Token 825: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06257366389036179
    2. '       ' → logprob: -2.8125736713409424
    3. 'while' → logprob: -8.062573432922363
    4. ' for' → logprob: -8.187573432922363
    5. '   ' → logprob: -11.812573432922363
    6. '	for' → logprob: -12.687573432922363
    7. '
' → logprob: -13.437573432922363
    8. '	' → logprob: -14.562573432922363
    9. ' while' → logprob: -16.93757438659668
    10. ' ' → logprob: -17.93757438659668

Token 826: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001967457792488858
    2. ' _' → logprob: -9.25019645690918
    3. '_i' → logprob: -9.75019645690918
    4. '_line' → logprob: -10.25019645690918
    5. '_lines' → logprob: -13.37519645690918
    6. '_range' → logprob: -13.50019645690918
    7. '_
' → logprob: -13.50019645690918
    8. '_in' → logprob: -14.00019645690918
    9. '_self' → logprob: -14.37519645690918
    10. '_idx' → logprob: -15.50019645690918

Token 827: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325398102402687
    2. 'in' → logprob: -3.773253917694092
    3. ' ' → logprob: -12.52325439453125
    4. 'i' → logprob: -12.64825439453125
    5. 'range' → logprob: -13.64825439453125
    6. '  ' → logprob: -15.52325439453125
    7. 'line' → logprob: -16.39825439453125
    8. '	in' → logprob: -16.89825439453125
    9. '   ' → logprob: -17.02325439453125
    10. ' i' → logprob: -17.39825439453125

Token 828: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.522638169466518e-05
    2. ' range' → logprob: -10.625024795532227
    3. 'self' → logprob: -14.250024795532227
    4. 'rang' → logprob: -16.625024795532227
    5. '	range' → logprob: -17.000024795532227
    6. '(range' → logprob: -17.375024795532227
    7. 'r' → logprob: -17.500024795532227
    8. '   ' → logprob: -18.125024795532227
    9. '
' → logprob: -18.500024795532227
    10. 'ran' → logprob: -18.750024795532227

Token 829: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004151887726038694
    2. 'n' → logprob: -5.504151821136475
    3. ' n' → logprob: -9.629152297973633
    4. '(' → logprob: -12.004152297973633
    5. ' (' → logprob: -14.129152297973633
    6. '	n' → logprob: -14.879152297973633
    7. '
' → logprob: -15.754152297973633
    8. '   ' → logprob: -16.129152297973633
    9. ',n' → logprob: -16.504152297973633
    10. ',' → logprob: -16.629152297973633

Token 830: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08913674205541611
    2. '):' → logprob: -2.464136838912964
    3. ' ):
' → logprob: -9.214137077331543
    4. '):
' → logprob: -10.339137077331543
    5. ' ):' → logprob: -10.964137077331543
    6. ':' → logprob: -10.964137077331543
    7. ',' → logprob: -11.214137077331543
    8. ')' → logprob: -11.589137077331543
    9. ':
' → logprob: -12.589137077331543
    10. '):

' → logprob: -13.339137077331543

Token 831: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07999151200056076
    2. '           ' → logprob: -2.704991579055786
    3. 'line' → logprob: -5.204991340637207
    4. ' line' → logprob: -5.954991340637207
    5. ' lines' → logprob: -7.704991340637207
    6. '#line' → logprob: -7.704991340637207
    7. '	       ' → logprob: -8.204991340637207
    8. '```' → logprob: -8.829991340637207
    9. 'lines' → logprob: -8.954991340637207
    10. '   ' → logprob: -9.579991340637207

Token 832: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.7336750030517578
    2. 'a' → logprob: -1.1086750030517578
    3. 'parts' → logprob: -2.233675003051758
    4. ' line' → logprob: -3.108675003051758
    5. ' parts' → logprob: -3.983675003051758
    6. '           ' → logprob: -4.358675003051758
    7. ' a' → logprob: -5.483675003051758
    8. 'data' → logprob: -6.733675003051758
    9. '       ' → logprob: -7.233675003051758
    10. 'nums' → logprob: -8.858675003051758

Token 833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059433747082948685
    2. '=' → logprob: -5.130943298339844
    3. '=line' → logprob: -11.380943298339844
    4. '=self' → logprob: -13.880943298339844
    5. ' ' → logprob: -14.255943298339844
    6. '_tokens' → logprob: -14.755943298339844
    7. 's' → logprob: -15.005943298339844
    8. '_lines' → logprob: -15.130943298339844
    9. ' =
' → logprob: -15.255943298339844
    10. '_line' → logprob: -16.130943298339844

Token 834: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033646274358034134
    2. ' self' → logprob: -3.40864634513855
    3. '(self' → logprob: -15.658646583557129
    4. '           ' → logprob: -16.533645629882812
    5. '	self' → logprob: -16.533645629882812
    6. '       ' → logprob: -16.658645629882812
    7. '   ' → logprob: -16.783645629882812
    8. ' ' → logprob: -16.908645629882812
    9. 's' → logprob: -17.533645629882812
    10. '
' → logprob: -17.783645629882812

Token 835: '.lines' (ID: 96601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010939228348433971
    2. '.lines' → logprob: -5.260939121246338
    3. ' self' → logprob: -5.635939121246338
    4. 'lines' → logprob: -6.385939121246338
    5. '_lines' → logprob: -8.010939598083496
    6. ' lines' → logprob: -10.010939598083496
    7. 's' → logprob: -11.260939598083496
    8. '.self' → logprob: -11.260939598083496
    9. '.strip' → logprob: -11.760939598083496
    10. '   ' → logprob: -12.260939598083496

Token 836: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.029849069193005562
    2. 'self' → logprob: -3.529849052429199
    3. ' self' → logprob: -9.2798490524292
    4. '[' → logprob: -13.0298490524292
    5. '(self' → logprob: -14.0298490524292
    6. '=self' → logprob: -14.2798490524292
    7. '   ' → logprob: -15.0298490524292
    8. '       ' → logprob: -15.2798490524292
    9. '	self' → logprob: -15.4048490524292
    10. '
' → logprob: -15.5298490524292

Token 837: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.053944557905197144
    2. '.index' → logprob: -3.3039445877075195
    3. 'self' → logprob: -4.1789445877075195
    4. '_index' → logprob: -7.9289445877075195
    5. '.' → logprob: -9.92894458770752
    6. ' index' → logprob: -11.05394458770752
    7. '[self' → logprob: -11.17894458770752
    8. '[index' → logprob: -11.80394458770752
    9. '   ' → logprob: -12.55394458770752
    10. '._' → logprob: -13.17894458770752

Token 838: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -6.754368223482743e-05
    2. ']' → logprob: -9.625067710876465
    3. ' ].' → logprob: -14.250067710876465
    4. '.strip' → logprob: -14.500067710876465
    5. ']
' → logprob: -16.00006675720215
    6. '.split' → logprob: -16.50006675720215
    7. '.' → logprob: -17.12506675720215
    8. ''].' → logprob: -18.00006675720215
    9. '"].' → logprob: -18.37506675720215
    10. '}.' → logprob: -18.62506675720215

Token 839: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0004307884373702109
    2. 'split' → logprob: -7.750430583953857
    3. 'rstrip' → logprob: -16.625431060791016
    4. '.strip' → logprob: -17.000431060791016
    5. ' strip' → logprob: -18.250431060791016
    6. '_strip' → logprob: -21.000431060791016
    7. 'str' → logprob: -22.625431060791016
    8. 'stripe' → logprob: -22.750431060791016
    9. '-strip' → logprob: -22.875431060791016
    10. '
' → logprob: -23.125431060791016

Token 840: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11525553464889526
    2. '()
' → logprob: -2.24025559425354
    3. '().' → logprob: -6.615255355834961
    4. '           ' → logprob: -8.115255355834961
    5. '();' → logprob: -8.615255355834961
    6. '<|end|>' → logprob: -8.615255355834961
    7. '(),' → logprob: -9.115255355834961
    8. '()\' → logprob: -9.365255355834961
    9. ')' → logprob: -10.115255355834961
    10. ',' → logprob: -10.365255355834961

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04987630620598793
    2. '.split' → logprob: -4.4248762130737305
    3. '<|end|>' → logprob: -4.5498762130737305
    4. '       ' → logprob: -4.7998762130737305
    5. '            
' → logprob: -5.2998762130737305
    6. 'split' → logprob: -5.7998762130737305
    7. '<|end|>' → logprob: -6.2998762130737305
    8. '()
' → logprob: -6.6748762130737305
    9. ',' → logprob: -6.6748762130737305
    10. '()' → logprob: -6.7998762130737305

Token 842: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021664638072252274
    2. 'a' → logprob: -3.896664619445801
    3. 'parts' → logprob: -7.396664619445801
    4. '       ' → logprob: -8.1466646194458
    5. ' self' → logprob: -9.3966646194458
    6. 'tokens' → logprob: -9.5216646194458
    7. '           ' → logprob: -10.0216646194458
    8. 'values' → logprob: -13.0216646194458
    9. 'vals' → logprob: -13.1466646194458
    10. 'data' → logprob: -13.2716646194458

Token 843: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00035631912760436535
    2. '.index' → logprob: -8.000356674194336
    3. ' index' → logprob: -11.250356674194336
    4. '_index' → logprob: -12.125356674194336
    5. '=index' → logprob: -14.125356674194336
    6. '```' → logprob: -14.625356674194336
    7. '...' → logprob: -15.000356674194336
    8. ':index' → logprob: -15.000356674194336
    9. '	index' → logprob: -15.750356674194336
    10. '
' → logprob: -15.750356674194336

Token 844: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005235190503299236
    2. ' +=' → logprob: -5.255235195159912
    3. '+' → logprob: -13.630234718322754
    4. ']+=' → logprob: -16.00523567199707
    5. '=' → logprob: -17.50523567199707
    6. '```' → logprob: -17.88023567199707
    7. '+="' → logprob: -18.13023567199707
    8. '++' → logprob: -18.75523567199707
    9. '   ' → logprob: -19.25523567199707
    10. '+='' → logprob: -19.88023567199707

Token 845: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -18.750009536743164
    4. '   ' → logprob: -19.000009536743164
    5. '１' → logprob: -19.875009536743164
    6. '۱' → logprob: -20.125009536743164
    7. '
' → logprob: -20.812509536743164
    8. '`' → logprob: -21.500009536743164
    9. '0' → logprob: -21.812509536743164
    10. '  ' → logprob: -21.812509536743164

Token 846: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '１' → logprob: -21.125
    4. '```' → logprob: -22.125
    5. '   ' → logprob: -22.25
    6. '۱' → logprob: -22.5
    7. '
' → logprob: -23.1875
    8. '0' → logprob: -23.625
    9. '3' → logprob: -23.9375
    10. '১' → logprob: -24.5625

Token 847: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019180169329047203
    2. '       ' → logprob: -4.8941802978515625
    3. 'tokens' → logprob: -5.5191802978515625
    4. ',' → logprob: -6.0191802978515625
    5. 'a' → logprob: -6.7691802978515625
    6. ' parts' → logprob: -7.1441802978515625
    7. '	       ' → logprob: -7.1441802978515625
    8. '
' → logprob: -7.5191802978515625
    9. 'parts' → logprob: -8.019180297851562
    10. '		' → logprob: -8.519180297851562

Token 848: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5584385395050049
    2. '       ' → logprob: -1.5584385395050049
    3. 'a' → logprob: -1.8084385395050049
    4. 'tokens' → logprob: -3.683438539505005
    5. 'parts' → logprob: -4.308438301086426
    6. ' parts' → logprob: -5.308438301086426
    7. ' a' → logprob: -5.683438301086426
    8. ',a' → logprob: -6.308438301086426
    9. ',' → logprob: -6.558438301086426
    10. '   ' → logprob: -7.308438301086426

Token 849: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -8.0536883615423e-05
    2. 'parts' → logprob: -9.625080108642578
    3. ' a' → logprob: -11.250080108642578
    4. '           ' → logprob: -13.875080108642578
    5. ' parts' → logprob: -15.250080108642578
    6. '       ' → logprob: -16.125080108642578
    7. 'if' → logprob: -16.750080108642578
    8. '            
' → logprob: -17.125080108642578
    9. '   ' → logprob: -17.250080108642578
    10. '	a' → logprob: -18.000080108642578

Token 850: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001557355048134923
    2. ',b' → logprob: -6.501557350158691
    3. ' ,' → logprob: -10.126557350158691
    4. 'b' → logprob: -11.126557350158691
    5. ',
' → logprob: -16.501558303833008
    6. '_,' → logprob: -17.251558303833008
    7. ' b' → logprob: -17.251558303833008
    8. ',\
' → logprob: -17.501558303833008
    9. '‌,' → logprob: -18.501558303833008
    10. ',int' → logprob: -18.626558303833008

Token 851: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020903512835502625
    2. ',b' → logprob: -3.8959035873413086
    3. 'b' → logprob: -8.145903587341309
    4. ',a' → logprob: -10.145903587341309
    5. ' ,' → logprob: -10.645903587341309
    6. 'a' → logprob: -12.645903587341309
    7. '=' → logprob: -13.145903587341309
    8. ',int' → logprob: -14.645903587341309
    9. '‌,' → logprob: -14.770903587341309
    10. ',
' → logprob: -14.895903587341309

Token 852: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10351445525884628
    2. '_str' → logprob: -2.6035144329071045
    3. ',c' → logprob: -4.228514671325684
    4. ',b' → logprob: -4.978514671325684
    5. ',str' → logprob: -6.603514671325684
    6. 'str' → logprob: -7.353514671325684
    7. ',int' → logprob: -8.728514671325684
    8. ' ,' → logprob: -8.978514671325684
    9. ',s' → logprob: -9.228514671325684
    10. ',_' → logprob: -9.728514671325684

Token 853: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.20326264202594757
    2. ',' → logprob: -1.7032626867294312
    3. ',b' → logprob: -6.328262805938721
    4. ' ,' → logprob: -11.453262329101562
    5. ',int' → logprob: -11.828262329101562
    6. ',r' → logprob: -11.828262329101562
    7. ',d' → logprob: -12.453262329101562
    8. ',a' → logprob: -12.453262329101562
    9. ',num' → logprob: -12.453262329101562
    10. ',C' → logprob: -13.203262329101562

Token 854: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0007195804500952363
    2. 'str' → logprob: -7.6257195472717285
    3. ' =' → logprob: -9.375720024108887
    4. ',' → logprob: -10.000720024108887
    5. 'ost' → logprob: -10.000720024108887
    6. '=' → logprob: -11.000720024108887
    7. 'ar' → logprob: -11.750720024108887
    8. '_' → logprob: -12.000720024108887
    9. 'on' → logprob: -12.375720024108887
    10. ',_' → logprob: -12.750720024108887

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859248176217079
    2. ' =' → logprob: -3.0485925674438477
    3. '=line' → logprob: -12.298592567443848
    4. '=a' → logprob: -15.173592567443848
    5. ',' → logprob: -15.423592567443848
    6. 'a' → logprob: -18.04859161376953
    7. ' ' → logprob: -18.17359161376953
    8. '=
' → logprob: -19.04859161376953
    9. ')=' → logprob: -19.17359161376953
    10. '＝' → logprob: -19.29859161376953

Token 856: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '[line' → logprob: -18.628177642822266
    4. '(line' → logprob: -19.753177642822266
    5. '	line' → logprob: -19.878177642822266
    6. 'lin' → logprob: -20.378177642822266
    7. '=line' → logprob: -20.878177642822266
    8. 'tuple' → logprob: -21.253177642822266
    9. 'map' → logprob: -21.503177642822266
    10. '#line' → logprob: -21.753177642822266

Token 857: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.003268261207267642
    2. '.' → logprob: -5.753268241882324
    3. '.strip' → logprob: -9.503268241882324
    4. ' .' → logprob: -11.128268241882324
    5. '.partition' → logprob: -14.253268241882324
    6. 'split' → logprob: -14.503268241882324
    7. '.rstrip' → logprob: -16.25326919555664
    8. '.Split' → logprob: -17.12826919555664
    9. ' split' → logprob: -17.25326919555664
    10. '.readline' → logprob: -18.37826919555664

Token 858: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020389800192788243
    2. '(' → logprob: -9.250204086303711
    3. '('' → logprob: -9.625204086303711
    4. '()
' → logprob: -10.500204086303711
    5. ''' → logprob: -11.750204086303711
    6. ')' → logprob: -13.875204086303711
    7. '(),' → logprob: -14.000204086303711
    8. '"' → logprob: -14.000204086303711
    9. '("' → logprob: -14.625204086303711
    10. '(','' → logprob: -14.625204086303711

Token 859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37671199440956116
    2. ',' → logprob: -2.1267120838165283
    3. 'a' → logprob: -2.6267120838165283
    4. '<|end|>' → logprob: -2.8767120838165283
    5. '       ' → logprob: -3.7517120838165283
    6. '		' → logprob: -4.751711845397949
    7. '               ' → logprob: -4.876711845397949
    8. '          ' → logprob: -5.376711845397949
    9. '            
' → logprob: -5.501711845397949
    10. ',a' → logprob: -5.626711845397949

Token 860: ' roads' (ID: 30027)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004496704321354628
    2. 'roads' (adapté à ' roads') → logprob: -6.2544965744018555
    3. ' a' → logprob: -6.3794965744018555
    4. ' roads' → logprob: -7.5044965744018555
    5. '           ' → logprob: -8.129496574401855
    6. '	a' → logprob: -11.879496574401855
    7. '       ' → logprob: -12.004496574401855
    8. 'road' → logprob: -12.754496574401855
    9. '   ' → logprob: -13.004496574401855
    10. 'ro' → logprob: -13.879496574401855

Token 861: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013011827832087874
    2. '.' → logprob: -9.000129699707031
    3. '.app' → logprob: -12.375129699707031
    4. ' .' → logprob: -13.875129699707031
    5. '.ap' → logprob: -14.500129699707031
    6. '=' → logprob: -14.750129699707031
    7. '.extend' → logprob: -15.750129699707031
    8. 'append' → logprob: -16.25012969970703
    9. '.=' → logprob: -16.25012969970703
    10. ' =' → logprob: -16.75012969970703

Token 862: '((' (ID: 2054)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03121473453938961
    2. '(' → logprob: -3.656214714050293
    3. ' (' → logprob: -5.406214714050293
    4. '(tuple' → logprob: -8.406214714050293
    5. '(
' → logprob: -9.406214714050293
    6. '(a' → logprob: -10.656214714050293
    7. '((' → logprob: -10.781214714050293
    8. '   ' → logprob: -11.156214714050293
    9. '(i' → logprob: -11.656214714050293
    10. '(Int' → logprob: -12.406214714050293

Token 863: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.0
    3. '(int' → logprob: -23.25
    4. '	int' → logprob: -24.5
    5. '[int' → logprob: -24.5
    6. '<int' → logprob: -25.25
    7. '   ' → logprob: -25.5
    8. '
' → logprob: -25.5
    9. ':int' → logprob: -26.0
    10. ',int' → logprob: -26.375

Token 864: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006716079078614712
    2. 'a' → logprob: -5.006716251373291
    3. '(' → logprob: -15.381715774536133
    4. ' a' → logprob: -15.631715774536133
    5. ')a' → logprob: -15.631715774536133
    6. '(
' → logprob: -15.881715774536133
    7. '	a' → logprob: -18.006715774536133
    8. ' (' → logprob: -18.381715774536133
    9. '
' → logprob: -19.256715774536133
    10. ')' → logprob: -19.381715774536133

Token 865: '_str' (ID: 6182)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.251956045627594
    2. 'a' → logprob: -1.5019559860229492
    3. ' a' → logprob: -11.87695598602295
    4. ')a' → logprob: -12.25195598602295
    5. '_a' → logprob: -12.37695598602295
    6. '_str' → logprob: -12.75195598602295
    7. '(' → logprob: -13.12695598602295
    8. ')' → logprob: -13.50195598602295
    9. ' (' → logprob: -13.62695598602295
    10. ',a' → logprob: -13.87695598602295

Token 866: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015568895265460014
    2. '),' → logprob: -4.265568733215332
    3. ',int' → logprob: -7.140568733215332
    4. ' ,' → logprob: -8.015568733215332
    5. '),(' → logprob: -8.515568733215332
    6. ',b' → logprob: -10.765568733215332
    7. ')' → logprob: -10.765568733215332
    8. ',),' → logprob: -11.640568733215332
    9. '<|end|>' → logprob: -11.890568733215332
    10. ',
' → logprob: -11.890568733215332

Token 867: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.339278580620885e-06
    2. ' int' → logprob: -13.000001907348633
    3. '(int' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '	int' → logprob: -19.625001907348633
    6. '[int' → logprob: -20.375001907348633
    7. '<int' → logprob: -20.500001907348633
    8. '  ' → logprob: -21.375001907348633
    9. ',int' → logprob: -21.625001907348633
    10. 'b' → logprob: -21.625001907348633

Token 868: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.988221684878226e-06
    2. '(b' → logprob: -12.000006675720215
    3. ' b' → logprob: -14.250006675720215
    4. 'c' → logprob: -16.12500762939453
    5. ')b' → logprob: -17.00000762939453
    6. '(' → logprob: -18.50000762939453
    7. '	b' → logprob: -18.75000762939453
    8. 'a' → logprob: -19.25000762939453
    9. '
' → logprob: -19.87500762939453
    10. ',b' → logprob: -20.00000762939453

Token 869: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.843177233240567e-05
    2. 'c' → logprob: -11.750018119812012
    3. 'str' → logprob: -12.000018119812012
    4. '_c' → logprob: -12.500018119812012
    5. 'b' → logprob: -15.250018119812012
    6. 'Str' → logprob: -16.000019073486328
    7. '_STR' → logprob: -18.000019073486328
    8. '1' → logprob: -18.375019073486328
    9. 's' → logprob: -18.625019073486328
    10. 'f' → logprob: -18.625019073486328

Token 870: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005195216741412878
    2. '),' → logprob: -5.505195140838623
    3. ',int' → logprob: -6.880195140838623
    4. ' ,' → logprob: -9.505195617675781
    5. ',),' → logprob: -12.505195617675781
    6. ')' → logprob: -13.255195617675781
    7. ',
' → logprob: -13.380195617675781
    8. '‌,' → logprob: -13.755195617675781
    9. '<|end|>' → logprob: -13.880195617675781
    10. ',c' → logprob: -14.255195617675781

Token 871: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. '
' → logprob: -18.37520408630371
    4. '	int' → logprob: -19.00020408630371
    5. '   ' → logprob: -19.12520408630371
    6. '(int' → logprob: -19.50020408630371
    7. '[int' → logprob: -19.50020408630371
    8. '<int' → logprob: -20.12520408630371
    9. '=int' → logprob: -20.37520408630371
    10. '           ' → logprob: -21.00020408630371

Token 872: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018162349238991737
    2. 'c' → logprob: -4.018162250518799
    3. ')c' → logprob: -11.518162727355957
    4. ' c' → logprob: -13.643162727355957
    5. '	c' → logprob: -14.393162727355957
    6. '(' → logprob: -14.768162727355957
    7. '(
' → logprob: -15.768162727355957
    8. ' (' → logprob: -16.51816177368164
    9. ')' → logprob: -17.39316177368164
    10. '   ' → logprob: -18.01816177368164

Token 873: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.1398757123970427e-05
    2. '_c' → logprob: -11.750011444091797
    3. 'c' → logprob: -13.500011444091797
    4. 'str' → logprob: -13.625011444091797
    5. '(c' → logprob: -14.125011444091797
    6. 'Str' → logprob: -16.875011444091797
    7. 's' → logprob: -17.625011444091797
    8. '3' → logprob: -18.250011444091797
    9. '_s' → logprob: -18.375011444091797
    10. 'a' → logprob: -18.375011444091797

Token 874: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5822059512138367
    2. ')))' → logprob: -0.8322059512138367
    3. ')' → logprob: -5.082205772399902
    4. ')))
' → logprob: -11.082205772399902
    5. '))
' → logprob: -11.207205772399902
    6. '),' → logprob: -12.457205772399902
    7. ' ))' → logprob: -12.832205772399902
    8. ')
' → logprob: -13.332205772399902
    9. '))))' → logprob: -13.457205772399902
    10. ' ' → logprob: -13.957205772399902

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31448477506637573
    2. 'return' → logprob: -1.6894848346710205
    3. '<|end|>' → logprob: -3.0644848346710205
    4. ')' → logprob: -3.8144848346710205
    5. ' return' → logprob: -4.439484596252441
    6. '
' → logprob: -6.564484596252441
    7. '	' → logprob: -7.439484596252441
    8. '	return' → logprob: -7.564484596252441
    9. ')return' → logprob: -7.564484596252441
    10. ')
' → logprob: -7.939484596252441

Token 876: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.641275942325592
    2. '       ' → logprob: -0.891275942325592
    3. ' return' → logprob: -2.7662758827209473
    4. '<|end|>' → logprob: -8.891276359558105
    5. '   ' → logprob: -9.141276359558105
    6. '	return' → logprob: -10.141276359558105
    7. '
' → logprob: -10.391276359558105
    8. '        
' → logprob: -11.641276359558105
    9. ':return' → logprob: -12.391276359558105
    10. '```' → logprob: -12.516276359558105

Token 877: ' roads' (ID: 30027)
  Prédit: 'roads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roads' → logprob: -7.636475493200123e-05
    2. ' roads' → logprob: -9.625076293945312
    3. 'road' → logprob: -11.625076293945312
    4. 'ro' → logprob: -13.625076293945312
    5. 'roots' → logprob: -17.375076293945312
    6. 'r' → logprob: -17.500076293945312
    7. 'rocks' → logprob: -17.875076293945312
    8. 'ros' → logprob: -18.500076293945312
    9. 'routes' → logprob: -18.625076293945312
    10. '
' → logprob: -19.000076293945312

Token 878: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037552833557128906
    2. 'if' → logprob: -3.537552833557129
    3. '
' → logprob: -5.162552833557129
    4. '```' → logprob: -6.287552833557129
    5. '

' → logprob: -8.787552833557129
    6. 'from' → logprob: -12.287552833557129
    7. 'class' → logprob: -12.287552833557129
    8. '  
' → logprob: -12.412552833557129
    9. 'import' → logprob: -12.412552833557129
    10. '#' → logprob: -12.537552833557129

Token 880: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.8402081727981567
    2. 'Office' → logprob: -1.5902081727981567
    3. 'Main' → logprob: -1.9652081727981567
    4. 'Solver' → logprob: -3.465208053588867
    5. 'Output' → logprob: -3.590208053588867
    6. 'main' → logprob: -3.715208053588867
    7. 'Network' → logprob: -3.965208053588867
    8. 'Problem' → logprob: -3.965208053588867
    9. ' Solution' → logprob: -3.965208053588867
    10. ' Office' → logprob: -4.215208053588867

Token 881: 'Controller' (ID: 2947)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038586699520237744
    2. ':
' → logprob: -7.875385761260986
    3. '():' → logprob: -12.875386238098145
    4. ':def' → logprob: -14.000386238098145
    5. ':

' → logprob: -14.250386238098145
    6. ' :' → logprob: -14.750386238098145
    7. '):' → logprob: -15.375386238098145
    8. '(' → logprob: -15.375386238098145
    9. '(object' → logprob: -15.625386238098145
    10. '(Abstract' → logprob: -16.125385284423828

Token 882: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014169269241392612
    2. ':
' → logprob: -4.264169216156006
    3. ':def' → logprob: -13.389169692993164
    4. ':

' → logprob: -14.014169692993164
    5. '():' → logprob: -14.139169692993164
    6. ' :' → logprob: -14.139169692993164
    7. '(object' → logprob: -14.639169692993164
    8. '():
' → logprob: -14.889169692993164
    9. '):' → logprob: -15.264169692993164
    10. '(' → logprob: -15.264169692993164

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0077340384013950825
    2. ' def' → logprob: -4.8827338218688965
    3. 'def' → logprob: -9.132734298706055
    4. '	def' → logprob: -11.632734298706055
    5. 'class' → logprob: -12.132734298706055
    6. ' class' → logprob: -12.757734298706055
    7. '    
' → logprob: -14.257734298706055
    8. '   ' → logprob: -14.257734298706055
    9. '
' → logprob: -14.757734298706055
    10. '```' → logprob: -15.132734298706055

Token 884: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029765989631414413
    2. ' def' → logprob: -3.529766082763672
    3. '   ' → logprob: -11.154766082763672
    4. 'class' → logprob: -14.404766082763672
    5. 'de' → logprob: -15.154766082763672
    6. '	def' → logprob: -15.779766082763672
    7. 'import' → logprob: -16.279766082763672
    8. '```' → logprob: -17.154766082763672
    9. 'd' → logprob: -18.029766082763672
    10. '
' → logprob: -18.404766082763672

Token 885: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2552824318408966
    2. '__' → logprob: -1.5052824020385742
    3. ' run' → logprob: -6.005282402038574
    4. 'run' → logprob: -7.755282402038574
    5. 'def' → logprob: -8.255282402038574
    6. ' def' → logprob: -8.880282402038574
    7. '_run' → logprob: -10.130282402038574
    8. '_' → logprob: -12.130282402038574
    9. ' _' → logprob: -13.005282402038574
    10. ' solve' → logprob: -13.130282402038574

Token 886: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.011373155459296e-05
    2. 'def' → logprob: -10.625030517578125
    3. '__' → logprob: -12.250030517578125
    4. '```' → logprob: -15.125030517578125
    5. 'int' → logprob: -15.625030517578125
    6. '_init' → logprob: -16.000030517578125
    7. ' init' → logprob: -16.375030517578125
    8. '   ' → logprob: -16.750030517578125
    9. 'solve' → logprob: -17.000030517578125
    10. ' __' → logprob: -17.625030517578125

Token 887: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1608537882566452
    2. '(self' → logprob: -1.9108537435531616
    3. '(' → logprob: -8.035853385925293
    4. '__' → logprob: -9.285853385925293
    5. ' (' → logprob: -9.535853385925293
    6. '   ' → logprob: -9.660853385925293
    7. '__(
' → logprob: -10.410853385925293
    8. 'self' → logprob: -11.035853385925293
    9. '_(' → logprob: -11.035853385925293
    10. '<>(' → logprob: -12.785853385925293

Token 888: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001037815964082256
    2. ' self' → logprob: -10.000103950500488
    3. ')' → logprob: -10.125103950500488
    4. '):
' → logprob: -11.375103950500488
    5. '   ' → logprob: -12.500103950500488
    6. '
' → logprob: -13.000103950500488
    7. '(self' → logprob: -15.375103950500488
    8. '       ' → logprob: -15.625103950500488
    9. ' ' → logprob: -16.250102996826172
    10. '):

' → logprob: -16.875102996826172

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18958540260791779
    2. 'self' → logprob: -1.8145854473114014
    3. '       ' → logprob: -5.689585208892822
    4. '(self' → logprob: -6.189585208892822
    5. '):
' → logprob: -6.314585208892822
    6. '   ' → logprob: -6.814585208892822
    7. ' self' → logprob: -7.189585208892822
    8. '):' → logprob: -7.814585208892822
    9. ',self' → logprob: -9.18958568572998
    10. '
' → logprob: -9.31458568572998

Token 890: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12146203964948654
    2. 'self' → logprob: -2.246462106704712
    3. ' input' → logprob: -4.996461868286133
    4. ')' → logprob: -7.496461868286133
    5. '):
' → logprob: -7.621461868286133
    6. ' self' → logprob: -8.121461868286133
    7. '   ' → logprob: -8.621461868286133
    8. '):' → logprob: -8.996461868286133
    9. 'network' → logprob: -9.496461868286133
    10. 'lines' → logprob: -9.621461868286133

Token 891: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01911502704024315
    2. '_data' → logprob: -4.269114971160889
    3. '_lines' → logprob: -6.144114971160889
    4. 'input' → logprob: -6.644114971160889
    5. '_inputs' → logprob: -6.644114971160889
    6. 'data' → logprob: -8.644115447998047
    7. '_text' → logprob: -12.394115447998047
    8. '_' → logprob: -12.894115447998047
    9. ')' → logprob: -13.519115447998047
    10. 'Input' → logprob: -13.644115447998047

Token 892: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04762544110417366
    2. '_lines' → logprob: -3.9226255416870117
    3. '):' → logprob: -3.9226255416870117
    4. '):
' → logprob: -5.047625541687012
    5. ')' → logprob: -8.422625541687012
    6. ' :' → logprob: -9.172625541687012
    7. '   ' → logprob: -9.797625541687012
    8. '_:' → logprob: -10.547625541687012
    9. '=None' → logprob: -11.172625541687012
    10. '[' → logprob: -11.297625541687012

Token 893: ' str' (ID: 989)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0059630488976836205
    2. ' List' → logprob: -5.13096284866333
    3. 'str' → logprob: -10.755963325500488
    4. 'list' → logprob: -11.380963325500488
    5. ' str' → logprob: -14.755963325500488
    6. '[List' → logprob: -14.755963325500488
    7. '   ' → logprob: -15.505963325500488
    8. ' ' → logprob: -15.505963325500488
    9. ' list' → logprob: -15.755963325500488
    10. ')' → logprob: -15.880963325500488

Token 894: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693740963935852
    2. '):' → logprob: -0.693740963935852
    3. '   ' → logprob: -8.818740844726562
    4. '):
' → logprob: -8.818740844726562
    5. '       ' → logprob: -9.068740844726562
    6. ':' → logprob: -9.318740844726562
    7. ')' → logprob: -9.443740844726562
    8. ' ):' → logprob: -11.943740844726562
    9. ' ):
' → logprob: -12.943740844726562
    10. '):

' → logprob: -13.443740844726562

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001415618316968903
    2. 'self' → logprob: -9.125141143798828
    3. ' self' → logprob: -10.875141143798828
    4. '   ' → logprob: -11.375141143798828
    5. '      ' → logprob: -14.500141143798828
    6. '[' → logprob: -15.375141143798828
    7. ',' → logprob: -15.625141143798828
    8. '           ' → logprob: -15.625141143798828
    9. '	' → logprob: -15.875141143798828
    10. ' ' → logprob: -16.125141143798828

Token 896: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02913597784936428
    2. '       ' → logprob: -4.0291361808776855
    3. ' self' → logprob: -4.5291361808776855
    4. 'input' → logprob: -9.529135704040527
    5. 'lines' → logprob: -10.029135704040527
    6. ' lines' → logprob: -11.154135704040527
    7. '   ' → logprob: -13.029135704040527
    8. ' input' → logprob: -13.154135704040527
    9. '	self' → logprob: -14.779135704040527
    10. ' ' → logprob: -16.279136657714844

Token 897: '.raw' (ID: 36636)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.7330076098442078
    2. '.raw' → logprob: -1.2330076694488525
    3. '.input' → logprob: -1.4830076694488525
    4. '.' → logprob: -7.358007431030273
    5. ' .' → logprob: -9.233007431030273
    6. '.inputs' → logprob: -9.358007431030273
    7. 'input' → logprob: -9.483007431030273
    8. 'raw' → logprob: -9.858007431030273
    9. '_lines' → logprob: -10.358007431030273
    10. 'lines' → logprob: -10.733007431030273

Token 898: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.531315314830863e-06
    2. 'input' → logprob: -13.250003814697266
    3. '_' → logprob: -14.250003814697266
    4. '_output' → logprob: -15.375003814697266
    5. 'Input' → logprob: -15.625003814697266
    6. '
' → logprob: -15.625003814697266
    7. '_inputs' → logprob: -15.750003814697266
    8. '_raw' → logprob: -16.250003814697266
    9. '_data' → logprob: -16.625003814697266
    10. ' _' → logprob: -16.750003814697266

Token 899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025726059451699257
    2. ' =' → logprob: -3.775726079940796
    3. '_lines' → logprob: -6.275725841522217
    4. ':' → logprob: -7.775725841522217
    5. ')' → logprob: -9.775726318359375
    6. '):
' → logprob: -10.650726318359375
    7. '=self' → logprob: -10.650726318359375
    8. ',' → logprob: -10.775726318359375
    9. '   ' → logprob: -11.400726318359375
    10. '=None' → logprob: -11.775726318359375

Token 900: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.005234594456851482
    2. ' raw' → logprob: -5.255234718322754
    3. '	raw' → logprob: -14.505234718322754
    4. '(raw' → logprob: -15.630234718322754
    5. '_raw' → logprob: -17.880233764648438
    6. '.raw' → logprob: -18.505233764648438
    7. ' ' → logprob: -18.755233764648438
    8. '/raw' → logprob: -19.005233764648438
    9. 'r' → logprob: -19.255233764648438
    10. '
' → logprob: -19.380233764648438

Token 901: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0921942703134846e-05
    2. 'input' → logprob: -12.00001049041748
    3. 'put' → logprob: -12.62501049041748
    4. 'Input' → logprob: -14.75001049041748
    5. '```' → logprob: -14.75001049041748
    6. '   ' → logprob: -15.37501049041748
    7. '_' → logprob: -16.000011444091797
    8. '_INPUT' → logprob: -16.375011444091797
    9. '_string' → logprob: -16.750011444091797
    10. '
' → logprob: -17.000011444091797

Token 902: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006932519841939211
    2. '   ' → logprob: -5.381932735443115
    3. '       ' → logprob: -6.381932735443115
    4. '

' → logprob: -7.881932735443115
    5. '    
' → logprob: -9.256932258605957
    6. 'def' → logprob: -9.506932258605957
    7. '
' → logprob: -10.256932258605957
    8. '        
' → logprob: -12.006932258605957
    9. '  
' → logprob: -12.256932258605957
    10. '<|end|>' → logprob: -12.381932258605957

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13792721927165985
    2. '   ' → logprob: -2.512927293777466
    3. '
' → logprob: -3.137927293777466
    4. 'def' → logprob: -5.887927055358887
    5. 'self' → logprob: -7.387927055358887
    6. '<|end|>' → logprob: -8.887927055358887
    7. '    
' → logprob: -9.012927055358887
    8. '        
' → logprob: -9.012927055358887
    9. 'import' → logprob: -9.137927055358887
    10. 'from' → logprob: -9.262927055358887

Token 904: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05126858502626419
    2. ' self' → logprob: -3.6762685775756836
    3. '       ' → logprob: -4.051268577575684
    4. 'def' → logprob: -5.426268577575684
    5. '   ' → logprob: -6.426268577575684
    6. '
' → logprob: -6.926268577575684
    7. '	self' → logprob: -9.176268577575684
    8. ' lines' → logprob: -9.926268577575684
    9. 'lines' → logprob: -10.051268577575684
    10. ' def' → logprob: -11.301268577575684

Token 905: '.parser' (ID: 50244)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.5930005311965942
    2. '._' → logprob: -1.8430005311965942
    3. '.input' → logprob: -1.9680005311965942
    4. '.parser' → logprob: -2.8430004119873047
    5. '_lines' → logprob: -3.4680004119873047
    6. '_parser' → logprob: -3.8430004119873047
    7. '_input' → logprob: -4.718000411987305
    8. 'input' → logprob: -4.968000411987305
    9. '.par' → logprob: -5.218000411987305
    10. '.' → logprob: -5.218000411987305

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.953889846801758
    4. '	' → logprob: -16.578889846801758
    5. '<|end|>' → logprob: -16.578889846801758
    6. '=
' → logprob: -16.703889846801758
    7. '＝' → logprob: -17.453889846801758
    8. '   ' → logprob: -17.453889846801758
    9. '=create' → logprob: -17.828889846801758
    10. '.' → logprob: -17.828889846801758

Token 907: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -3.547789674485102e-05
    2. ' Input' → logprob: -10.250035285949707
    3. '	Input' → logprob: -21.000036239624023
    4. '_input' → logprob: -22.125036239624023
    5. '_Input' → logprob: -23.125036239624023
    6. '<Input' → logprob: -23.125036239624023
    7. 'None' → logprob: -23.500036239624023
    8. 'input' → logprob: -23.875036239624023
    9. '\Input' → logprob: -24.625036239624023
    10. 'INPUT' → logprob: -26.000036239624023

Token 908: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -17.625
    3. '(Parser' → logprob: -18.125
    4. ' Parser' → logprob: -18.625
    5. '.Parser' → logprob: -19.0
    6. '_parser' → logprob: -20.0
    7. 'Processor' → logprob: -21.125
    8. '-parser' → logprob: -21.125
    9. 'Parse' → logprob: -21.75
    10. 'Tokenizer' → logprob: -22.25

Token 909: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7004302144050598
    2. '(raw' → logprob: -0.7004302144050598
    3. '(' → logprob: -5.325430393218994
    4. '(
' → logprob: -6.450430393218994
    5. '([' → logprob: -7.700430393218994
    6. 'self' → logprob: -8.950429916381836
    7. '([
' → logprob: -9.450429916381836
    8. 'raw' → logprob: -9.575429916381836
    9. '
' → logprob: -10.575429916381836
    10. '[self' → logprob: -11.575429916381836

Token 910: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.6943390965461731
    2. '.lines' → logprob: -0.6943390965461731
    3. 'raw' → logprob: -7.569339275360107
    4. '.' → logprob: -7.569339275360107
    5. 'lines' → logprob: -8.94433879852295
    6. ').' → logprob: -11.81933879852295
    7. '._' → logprob: -12.19433879852295
    8. '
' → logprob: -12.94433879852295
    9. '	lines' → logprob: -13.44433879852295
    10. ' .' → logprob: -13.56933879852295

Token 911: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.894790981779806e-05
    2. 'input' → logprob: -11.000048637390137
    3. 'Input' → logprob: -11.250048637390137
    4. '_lines' → logprob: -11.375048637390137
    5. ')' → logprob: -13.000048637390137
    6. 'lines' → logprob: -13.500048637390137
    7. '   ' → logprob: -14.125048637390137
    8. '_inputs' → logprob: -14.375048637390137
    9. '
' → logprob: -15.125048637390137
    10. '_INPUT' → logprob: -15.125048637390137

Token 912: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0005740015767514706
    2. '.strip' → logprob: -8.000574111938477
    3. '.' → logprob: -9.000574111938477
    4. ')' → logprob: -9.125574111938477
    5. 'split' → logprob: -12.125574111938477
    6. ' .' → logprob: -14.750574111938477
    7. ' split' → logprob: -15.500574111938477
    8. '.lines' → logprob: -16.250574111938477
    9. '   ' → logprob: -16.750574111938477
    10. '.replace' → logprob: -17.250574111938477

Token 913: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2525169253349304
    2. '('\' → logprob: -1.5025169849395752
    3. '("\' → logprob: -7.502516746520996
    4. '()' → logprob: -10.252516746520996
    5. '()\' → logprob: -15.252516746520996
    6. '()
' → logprob: -15.377516746520996
    7. ''\' → logprob: -15.877516746520996
    8. '(' → logprob: -16.627517700195312
    9. 'Lines' → logprob: -18.377517700195312
    10. '"\' → logprob: -18.752517700195312

Token 914: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2525950074195862
    2. '())' → logprob: -1.5025949478149414
    3. '()' → logprob: -7.502594947814941
    4. ' )' → logprob: -10.502594947814941
    5. '[' → logprob: -10.877594947814941
    6. '))' → logprob: -11.002594947814941
    7. '   ' → logprob: -11.002594947814941
    8. '       ' → logprob: -11.127594947814941
    9. '())
' → logprob: -12.502594947814941
    10. ')
' → logprob: -12.502594947814941

Token 915: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19197151064872742
    2. '
' → logprob: -2.31697154045105
    3. ' def' → logprob: -3.06697154045105
    4. '   ' → logprob: -3.81697154045105
    5. '<|end|>' → logprob: -5.066971302032471
    6. '

' → logprob: -7.691971302032471
    7. '	def' → logprob: -7.941971302032471
    8. '    
' → logprob: -8.441971778869629
    9. '<|end|>' → logprob: -9.441971778869629
    10. ' 
' → logprob: -10.566971778869629

Token 916: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.811348480870947e-05
    2. ' def' → logprob: -10.00004768371582
    3. '
' → logprob: -13.12504768371582
    4. '   ' → logprob: -14.25004768371582
    5. '	def' → logprob: -17.50004768371582
    6. '    
' → logprob: -19.75004768371582
    7. '```' → logprob: -20.12504768371582
    8. 'self' → logprob: -20.50004768371582
    9. '        
' → logprob: -21.25004768371582
    10. ' 
' → logprob: -22.00004768371582

Token 917: ' process' (ID: 2273)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.3903249204158783
    2. ' run' → logprob: -1.3903249502182007
    3. 'solve' → logprob: -3.265324831008911
    4. 'process' → logprob: -3.890324831008911
    5. ' solve' → logprob: -4.76532506942749
    6. ' process' → logprob: -5.14032506942749
    7. 'execute' → logprob: -7.64032506942749
    8. 'def' → logprob: -8.015324592590332
    9. '_run' → logprob: -9.265324592590332
    10. ' def' → logprob: -9.640324592590332

Token 918: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.375042915344238
    3. '()' → logprob: -11.750042915344238
    4. '_input' → logprob: -13.875042915344238
    5. 'self' → logprob: -14.250042915344238
    6. '_(' → logprob: -14.375042915344238
    7. '(s' → logprob: -15.375042915344238
    8. '_data' → logprob: -15.625042915344238
    9. '_next' → logprob: -15.750042915344238
    10. '_all' → logprob: -15.875042915344238

Token 919: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24541398882865906
    2. ')' → logprob: -1.8704140186309814
    3. '_input' → logprob: -3.4954140186309814
    4. '_' → logprob: -4.495413780212402
    5. '(self' → logprob: -4.495413780212402
    6. 'self' → logprob: -5.620413780212402
    7. '):
' → logprob: -5.870413780212402
    8. '_lines' → logprob: -6.370413780212402
    9. ')_' → logprob: -6.620413780212402
    10. '_queries' → logprob: -8.370413780212402

Token 920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045098740607500076
    2. 'n' → logprob: -3.4200987815856934
    3. 'num' → logprob: -5.170098781585693
    4. ' n' → logprob: -5.795098781585693
    5. 'while' → logprob: -7.170098781585693
    6. ' while' → logprob: -7.795098781585693
    7. '   ' → logprob: -7.795098781585693
    8. 't' → logprob: -7.920098781585693
    9. ' num' → logprob: -8.295098304748535
    10. 'number' → logprob: -9.170098304748535

Token 921: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8454145789146423
    2. 'n' → logprob: -0.9704145789146423
    3. 'num' → logprob: -2.220414638519287
    4. 'test' → logprob: -3.970414638519287
    5. '       ' → logprob: -4.345414638519287
    6. 't' → logprob: -4.345414638519287
    7. 'T' → logprob: -4.595414638519287
    8. 'case' → logprob: -4.720414638519287
    9. 'N' → logprob: -4.845414638519287
    10. 'road' → logprob: -6.095414638519287

Token 922: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0003455944824963808
    2. ' True' → logprob: -8.000345230102539
    3. '(True' → logprob: -11.500345230102539
    4. 'true' → logprob: -17.62534523010254
    5. '   ' → logprob: -18.62534523010254
    6. '
' → logprob: -19.62534523010254
    7. '(' → logprob: -19.87534523010254
    8. '=True' → logprob: -21.12534523010254
    9. ' ' → logprob: -21.12534523010254
    10. '_true' → logprob: -21.37534523010254

Token 923: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7034583687782288
    2. ':' → logprob: -0.8284583687782288
    3. ':
' → logprob: -2.703458309173584
    4. ',' → logprob: -7.203458309173584
    5. '<|end|>' → logprob: -8.578458786010742
    6. '():
' → logprob: -9.828458786010742
    7. '<|end|>' → logprob: -9.828458786010742
    8. '):
' → logprob: -9.828458786010742
    9. ' and' → logprob: -10.078458786010742
    10. 'n' → logprob: -10.203458786010742

Token 924: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023339013569056988
    2. 'n' → logprob: -6.127334117889404
    3. 'num' → logprob: -9.377333641052246
    4. 'count' → logprob: -10.127333641052246
    5. 't' → logprob: -11.752333641052246
    6. 'number' → logprob: -12.627333641052246
    7. ' n' → logprob: -12.752333641052246
    8. 'N' → logprob: -13.127333641052246
    9. 'line' → logprob: -13.627333641052246
    10. '       ' → logprob: -14.002333641052246

Token 925: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09533584117889404
    2. 'num' → logprob: -3.2203359603881836
    3. 'N' → logprob: -3.5953359603881836
    4. '           ' → logprob: -3.8453359603881836
    5. 'count' → logprob: -6.970335960388184
    6. 'm' → logprob: -8.345335960388184
    7. ' n' → logprob: -8.970335960388184
    8. 'k' → logprob: -8.970335960388184
    9. 'road' → logprob: -8.970335960388184
    10. 'line' → logprob: -9.220335960388184

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132767081260681
    2. ' =' → logprob: -1.313276767730713
    3. '=line' → logprob: -12.188276290893555
    4. '_line' → logprob: -12.688276290893555
    5. '=int' → logprob: -12.813276290893555
    6. '=n' → logprob: -13.563276290893555
    7. 'n' → logprob: -14.813276290893555
    8. '=self' → logprob: -14.938276290893555
    9. ' ' → logprob: -15.063276290893555
    10. '_n' → logprob: -15.188276290893555

Token 927: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011049000546336174
    2. ' self' → logprob: -4.511048793792725
    3. 'int' → logprob: -14.136049270629883
    4. '           ' → logprob: -14.636049270629883
    5. '	self' → logprob: -18.636049270629883
    6. '(self' → logprob: -18.636049270629883
    7. '   ' → logprob: -19.261049270629883
    8. '               ' → logprob: -19.386049270629883
    9. ' int' → logprob: -20.511049270629883
    10. 'this' → logprob: -20.636049270629883

Token 928: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.07954803854227066
    2. 'parser' → logprob: -2.5795481204986572
    3. '.next' → logprob: -8.204547882080078
    4. '.process' → logprob: -8.579547882080078
    5. '.processor' → logprob: -8.829547882080078
    6. 'next' → logprob: -11.204547882080078
    7. '	parser' → logprob: -11.454547882080078
    8. '.parse' → logprob: -11.454547882080078
    9. 'process' → logprob: -11.954547882080078
    10. 'self' → logprob: -13.079547882080078

Token 929: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.00010807292710524052
    2. 'next' → logprob: -9.250107765197754
    3. '.' → logprob: -11.375107765197754
    4. ' .' → logprob: -15.250107765197754
    5. ' next' → logprob: -17.12510871887207
    6. '\.' → logprob: -17.37510871887207
    7. '   ' → logprob: -17.75010871887207
    8. '`.' → logprob: -17.87510871887207
    9. '	next' → logprob: -18.00010871887207
    10. '_next' → logprob: -18.62510871887207

Token 930: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0004375830467324704
    2. 'int' → logprob: -7.7504377365112305
    3. 'Int' → logprob: -12.75043773651123
    4. '_' → logprob: -13.87543773651123
    5. '_line' → logprob: -14.00043773651123
    6. '<int' → logprob: -14.87543773651123
    7. '(int' → logprob: -15.37543773651123
    8. '
' → logprob: -15.50043773651123
    9. '_n' → logprob: -15.75043773651123
    10. '```' → logprob: -16.000436782836914

Token 931: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025361981242895126
    2. '       ' → logprob: -4.650362014770508
    3. ' if' → logprob: -4.775362014770508
    4. 'if' → logprob: -5.400362014770508
    5. '<|end|>' → logprob: -7.525362014770508
    6. '
' → logprob: -7.650362014770508
    7. '		' → logprob: -7.775362014770508
    8. '	       ' → logprob: -8.025362014770508
    9. '<|end|>' → logprob: -8.525362014770508
    10. '   ' → logprob: -9.900362014770508

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008986921049654484
    2. 'if' → logprob: -4.883986949920654
    3. ' if' → logprob: -7.133986949920654
    4. '       ' → logprob: -7.633986949920654
    5. '		' → logprob: -9.758986473083496
    6. '   ' → logprob: -11.258986473083496
    7. '	       ' → logprob: -11.383986473083496
    8. '	   ' → logprob: -12.758986473083496
    9. '<|end|>' → logprob: -12.883986473083496
    10. '	if' → logprob: -12.883986473083496

Token 933: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009163050912320614
    2. ' if' → logprob: -4.759162902832031
    3. '           ' → logprob: -7.509162902832031
    4. '
' → logprob: -15.509162902832031
    5. '	if' → logprob: -16.88416290283203
    6. '            
' → logprob: -18.38416290283203
    7. '       ' → logprob: -18.38416290283203
    8. '   ' → logprob: -18.38416290283203
    9. 'If' → logprob: -19.00916290283203
    10. ';if' → logprob: -19.00916290283203

Token 934: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.386963427066803
    2. ' n' → logprob: -1.1369633674621582
    3. ' not' → logprob: -9.386963844299316
    4. 'not' → logprob: -12.011963844299316
    5. '	n' → logprob: -13.636963844299316
    6. ' ' → logprob: -14.136963844299316
    7. 'n't' → logprob: -15.386963844299316
    8. '_n' → logprob: -15.386963844299316
    9. '0' → logprob: -16.636962890625
    10. '(n' → logprob: -16.886962890625

Token 935: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6941218972206116
    2. ' ==' → logprob: -0.6941218972206116
    3. '<=' → logprob: -7.194121837615967
    4. ' <=' → logprob: -8.444122314453125
    5. '=' → logprob: -12.944122314453125
    6. '===' → logprob: -13.194122314453125
    7. ')==' → logprob: -13.944122314453125
    8. ' ' → logprob: -14.069122314453125
    9. '()==' → logprob: -14.569122314453125
    10. '==
' → logprob: -14.819122314453125

Token 936: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010625827126204967
    2. ' ' → logprob: -6.876062393188477
    3. '-' → logprob: -11.001062393188477
    4. ' -' → logprob: -11.376062393188477
    5. '   ' → logprob: -14.876062393188477
    6. '  ' → logprob: -15.001062393188477
    7. '
' → logprob: -15.376062393188477
    8. '```' → logprob: -15.438562393188477
    9. '    ' → logprob: -16.501062393188477
    10. ' ' → logprob: -16.751062393188477

Token 937: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.625038146972656
    3. '-' → logprob: -11.250038146972656
    4. ' -' → logprob: -15.250038146972656
    5. '```' → logprob: -17.250038146972656
    6. '   ' → logprob: -17.562538146972656
    7. 'EOF' → logprob: -18.812538146972656
    8. ')' → logprob: -18.812538146972656
    9. '=' → logprob: -19.000038146972656
    10. '`' → logprob: -19.187538146972656

Token 938: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4741842448711395
    2. ':
' → logprob: -0.9741842746734619
    3. ':return' → logprob: -10.099184036254883
    4. '           ' → logprob: -10.349184036254883
    5. '               ' → logprob: -10.599184036254883
    6. ':
' → logprob: -12.099184036254883
    7. '   ' → logprob: -13.474184036254883
    8. '.' → logprob: -15.349184036254883
    9. ' :' → logprob: -15.474184036254883
    10. '       ' → logprob: -15.474184036254883

Token 939: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.5014188799541444e-05
    2. '           ' → logprob: -10.375044822692871
    3. '	           ' → logprob: -12.500044822692871
    4. '              ' → logprob: -12.875044822692871
    5. '                   ' → logprob: -13.125044822692871
    6. '   ' → logprob: -13.125044822692871
    7. '
' → logprob: -13.375044822692871
    8. '			' → logprob: -14.875044822692871
    9. '             ' → logprob: -15.000044822692871
    10. '                ' → logprob: -15.625044822692871

Token 940: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03251086175441742
    2. 'return' → logprob: -4.282510757446289
    3. ' break' → logprob: -4.282510757446289
    4. '               ' → logprob: -5.532510757446289
    5. '	break' → logprob: -8.032510757446289
    6. '           ' → logprob: -10.282510757446289
    7. '
' → logprob: -10.657510757446289
    8. ' return' → logprob: -10.782510757446289
    9. '                   ' → logprob: -11.782510757446289
    10. '_break' → logprob: -13.157510757446289

Token 941: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22269724309444427
    2. '
' → logprob: -1.7226972579956055
    3. '            
' → logprob: -3.9726972579956055
    4. '        
' → logprob: -7.7226972579956055
    5. '    
' → logprob: -7.7226972579956055
    6. '       ' → logprob: -8.347697257995605
    7. '            ' → logprob: -8.597697257995605
    8. '<|end|>' → logprob: -8.597697257995605
    9. '          ' → logprob: -8.847697257995605
    10. '
' → logprob: -9.597697257995605

Token 942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001156770158559084
    2. '
' → logprob: -7.501156806945801
    3. 'network' → logprob: -8.1261568069458
    4. '       ' → logprob: -9.1261568069458
    5. '            
' → logprob: -9.3761568069458
    6. '		' → logprob: -11.0011568069458
    7. 'n' → logprob: -11.0011568069458
    8. '```' → logprob: -11.3761568069458
    9. '          ' → logprob: -11.5011568069458
    10. '        
' → logprob: -11.5011568069458

Token 943: ' roads' (ID: 30027)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.03163960203528404
    2. 'office' → logprob: -4.156639575958252
    3. '           ' → logprob: -4.656639575958252
    4. 'on' → logprob: -5.531639575958252
    5. 'net' → logprob: -7.281639575958252
    6. 'off' → logprob: -7.781639575958252
    7. ' network' → logprob: -8.40664005279541
    8. 'road' → logprob: -8.53164005279541
    9. 'n' → logprob: -9.65664005279541
    10. '       ' → logprob: -9.78164005279541

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488329753279686
    2. '=' → logprob: -2.9298832416534424
    3. 'data' → logprob: -14.929883003234863
    4. ':' → logprob: -15.679883003234863
    5. '_data' → logprob: -15.679883003234863
    6. ',' → logprob: -16.42988395690918
    7. 's' → logprob: -16.92988395690918
    8. ' ' → logprob: -16.92988395690918
    9. '＝' → logprob: -17.17988395690918
    10. '=data' → logprob: -17.30488395690918

Token 945: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170460251159966
    2. ' self' → logprob: -6.751170635223389
    3. '           ' → logprob: -15.50117015838623
    4. '[self' → logprob: -18.626171112060547
    5. '(self' → logprob: -19.251171112060547
    6. '	self' → logprob: -19.876171112060547
    7. '=self' → logprob: -19.876171112060547
    8. '               ' → logprob: -20.376171112060547
    9. '
' → logprob: -20.626171112060547
    10. 'Self' → logprob: -21.376171112060547

Token 946: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.014172914437949657
    2. 'parser' → logprob: -4.2641730308532715
    3. '	parser' → logprob: -12.014172554016113
    4. ' parser' → logprob: -13.389172554016113
    5. '.parsers' → logprob: -14.139172554016113
    6. 'self' → logprob: -14.639172554016113
    7. '.' → logprob: -15.514172554016113
    8. '(parser' → logprob: -16.01417350769043
    9. '/parser' → logprob: -16.01417350769043
    10. ' .' → logprob: -16.51417350769043

Token 947: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.7610454708337784e-05
    2. 'next' → logprob: -10.500027656555176
    3. '.' → logprob: -18.25002670288086
    4. ' next' → logprob: -19.87502670288086
    5. '	next' → logprob: -21.62502670288086
    6. ' .' → logprob: -22.50002670288086
    7. '[next' → logprob: -22.87502670288086
    8. ',next' → logprob: -23.37502670288086
    9. '.new' → logprob: -24.12502670288086
    10. '(next' → logprob: -24.50002670288086

Token 948: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'road' → logprob: -15.75
    3. 'Road' → logprob: -19.25
    4. '_ro' → logprob: -19.5
    5. '_int' → logprob: -20.875
    6. '_
' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. ' road' → logprob: -21.625
    9. '__' → logprob: -22.875
    10. 'int' → logprob: -23.125

Token 949: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -6.76628842484206e-05
    2. 'int' → logprob: -9.625067710876465
    3. 'rod' → logprob: -15.125067710876465
    4. '
' → logprob: -15.375067710876465
    5. ' road' → logprob: -15.375067710876465
    6. 'roof' → logprob: -15.750067710876465
    7. 'oad' → logprob: -16.00006675720215
    8. 'Road' → logprob: -16.12506675720215
    9. 'roads' → logprob: -16.37506675720215
    10. '```' → logprob: -17.12506675720215

Token 950: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.1928003813372925e-05
    2. 'data' → logprob: -9.875051498413086
    3. '```' → logprob: -16.125051498413086
    4. ' data' → logprob: -16.375051498413086
    5. 's' → logprob: -16.500051498413086
    6. 'n' → logprob: -17.375051498413086
    7. 'Data' → logprob: -17.625051498413086
    8. 'a' → logprob: -17.625051498413086
    9. '_DATA' → logprob: -18.000051498413086
    10. '-data' → logprob: -18.250051498413086

Token 951: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.750000953674316
    4. 'n' → logprob: -16.875
    5. '(
' → logprob: -20.25
    6. '((' → logprob: -20.875
    7. '(num' → logprob: -21.375
    8. '(len' → logprob: -21.5
    9. '	n' → logprob: -21.75
    10. '           ' → logprob: -21.75

Token 952: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03436262160539627
    2. ')
' → logprob: -3.409362554550171
    3. '           ' → logprob: -7.28436279296875
    4. '       ' → logprob: -10.90936279296875
    5. ')
' → logprob: -11.65936279296875
    6. ')`' → logprob: -14.40936279296875
    7. ')

' → logprob: -14.78436279296875
    8. '()' → logprob: -15.03436279296875
    9. '               ' → logprob: -15.03436279296875
    10. ')`
' → logprob: -15.15936279296875

Token 953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050608549267053604
    2. 'network' → logprob: -3.0506086349487305
    3. '       ' → logprob: -6.4256086349487305
    4. ' network' → logprob: -8.67560863494873
    5. 'net' → logprob: -8.92560863494873
    6. '
' → logprob: -9.67560863494873
    7. '        
' → logprob: -11.92560863494873
    8. '   ' → logprob: -12.17560863494873
    9. '            
' → logprob: -12.42560863494873
    10. '```' → logprob: -12.55060863494873

Token 954: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -6.52788148727268e-05
    2. '           ' → logprob: -9.750064849853516
    3. 'net' → logprob: -12.625064849853516
    4. ' network' → logprob: -13.125064849853516
    5. '
' → logprob: -13.500064849853516
    6. 'office' → logprob: -16.125064849853516
    7. '            
' → logprob: -17.375064849853516
    8. '_network' → logprob: -17.500064849853516
    9. 'netz' → logprob: -17.500064849853516
    10. 'Network' → logprob: -18.375064849853516

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. '.' → logprob: -15.951414108276367
    4. ':' → logprob: -16.076414108276367
    5. '.clear' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.451414108276367
    7. ' =
' → logprob: -17.951414108276367
    8. '.=' → logprob: -17.951414108276367
    9. '=
' → logprob: -18.201414108276367
    10. '   ' → logprob: -18.326414108276367

Token 956: ' Office' (ID: 11360)
  Prédit: 'Office'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Office' → logprob: -0.001170225441455841
    2. ' Office' → logprob: -6.7511701583862305
    3. 'Off' → logprob: -17.001171112060547
    4. 'Officer' → logprob: -17.626171112060547
    5. '.Office' → logprob: -19.001171112060547
    6. 'Offline' → logprob: -19.626171112060547
    7. 'office' → logprob: -19.626171112060547
    8. '   ' → logprob: -20.126171112060547
    9. 'Official' → logprob: -20.876171112060547
    10. '       ' → logprob: -21.126171112060547

Token 957: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -3.128163257315464e-07
    2. 'network' → logprob: -15.75
    3. '_network' → logprob: -17.125
    4. ' Network' → logprob: -17.25
    5. '
' → logprob: -17.625
    6. 'etwork' → logprob: -18.0
    7. 'Net' → logprob: -18.625
    8. 'Networks' → logprob: -18.875
    9. '   ' → logprob: -19.125
    10. '(Network' → logprob: -19.75

Token 958: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41257694363594055
    2. '()
' → logprob: -1.1625769138336182
    3. '()' → logprob: -4.037577152252197
    4. 'for' → logprob: -5.162577152252197
    5. ' for' → logprob: -7.287577152252197
    6. '       ' → logprob: -7.412577152252197
    7. '
' → logprob: -8.037576675415039
    8. '()
' → logprob: -8.412576675415039
    9. ' =' → logprob: -10.412576675415039
    10. 'network' → logprob: -10.412576675415039

Token 959: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040099851321429014
    2. 'for' → logprob: -7.875401020050049
    3. ' for' → logprob: -11.00040054321289
    4. '       ' → logprob: -12.62540054321289
    5. '   ' → logprob: -14.50040054321289
    6. '	       ' → logprob: -16.75040054321289
    7. '          ' → logprob: -16.75040054321289
    8. '<|end|>' → logprob: -16.75040054321289
    9. '```' → logprob: -17.62540054321289
    10. '               ' → logprob: -17.87540054321289

Token 960: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2127087504486553e-05
    2. '           ' → logprob: -10.750021934509277
    3. ' for' → logprob: -14.375021934509277
    4. '       ' → logprob: -17.500022888183594
    5. '```' → logprob: -18.125022888183594
    6. '	for' → logprob: -20.000022888183594
    7. '
' → logprob: -20.250022888183594
    8. '   ' → logprob: -21.250022888183594
    9. '            
' → logprob: -22.250022888183594
    10. '               ' → logprob: -22.250022888183594

Token 961: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004773824184667319
    2. '(a' → logprob: -7.750477313995361
    3. ' a' → logprob: -10.00047779083252
    4. ' (' → logprob: -14.50047779083252
    5. '   ' → logprob: -15.12547779083252
    6. '(' → logprob: -15.12547779083252
    7. 'road' → logprob: -16.000476837158203
    8. '	a' → logprob: -16.000476837158203
    9. '```' → logprob: -17.750476837158203
    10. '[a' → logprob: -18.500476837158203

Token 962: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054954275488853455
    2. ',b' → logprob: -2.9299542903900146
    3. ' ,' → logprob: -10.179954528808594
    4. 'b' → logprob: -10.554954528808594
    5. ',
' → logprob: -12.679954528808594
    6. '_,' → logprob: -13.804954528808594
    7. ',a' → logprob: -14.554954528808594
    8. 'a' → logprob: -14.679954528808594
    9. '```' → logprob: -14.679954528808594
    10. 'in' → logprob: -15.054954528808594

Token 963: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. '	b' → logprob: -22.250911712646484
    4. '<|end|>' → logprob: -22.500911712646484
    5. '           ' → logprob: -22.750911712646484
    6. '   ' → logprob: -22.875911712646484
    7. ',b' → logprob: -23.250911712646484
    8. '       ' → logprob: -23.375911712646484
    9. ',' → logprob: -23.625911712646484
    10. ' ' → logprob: -24.125911712646484

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ',c' → logprob: -10.875024795532227
    3. ' ,' → logprob: -12.125024795532227
    4. ',
' → logprob: -17.250024795532227
    5. 'c' → logprob: -17.875024795532227
    6. ',b' → logprob: -18.625024795532227
    7. '<|end|>' → logprob: -18.875024795532227
    8. 'cost' → logprob: -19.000024795532227
    9. '_,' → logprob: -19.375024795532227
    10. '‌,' → logprob: -19.500024795532227

Token 965: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10028419643640518
    2. 'cost' → logprob: -2.3502840995788574
    3. ' c' → logprob: -10.100284576416016
    4. ' cost' → logprob: -10.225284576416016
    5. '	c' → logprob: -16.225284576416016
    6. '   ' → logprob: -17.225284576416016
    7. '_cost' → logprob: -17.475284576416016
    8. '           ' → logprob: -17.725284576416016
    9. 'Cost' → logprob: -18.350284576416016
    10. '  ' → logprob: -18.725284576416016

Token 966: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020551465451717377
    2. 'in' → logprob: -3.8955514430999756
    3. ',' → logprob: -11.770551681518555
    4. '	in' → logprob: -14.520551681518555
    5. '_in' → logprob: -15.395551681518555
    6. ' ' → logprob: -15.395551681518555
    7. 'n' → logprob: -15.395551681518555
    8. 's' → logprob: -15.520551681518555
    9. '  ' → logprob: -16.020551681518555
    10. '_' → logprob: -16.520551681518555

Token 967: ' roads' (ID: 30027)
  Prédit: 'roads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roads' → logprob: -0.02324780821800232
    2. ' roads' → logprob: -3.773247718811035
    3. 'road' → logprob: -13.523247718811035
    4. 'ro' → logprob: -15.023247718811035
    5. '   ' → logprob: -15.398247718811035
    6. 'routes' → logprob: -16.39824867248535
    7. ' ' → logprob: -16.52324867248535
    8. 'r' → logprob: -17.02324867248535
    9. 'roots' → logprob: -17.14824867248535
    10. '  ' → logprob: -17.27324867248535

Token 968: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14570485055446625
    2. ':
' → logprob: -2.020704746246338
    3. '               ' → logprob: -5.895704746246338
    4. '           ' → logprob: -9.645705223083496
    5. '<|end|>' → logprob: -9.895705223083496
    6. '):
' → logprob: -10.145705223083496
    7. '.' → logprob: -10.395705223083496
    8. ',' → logprob: -10.520705223083496
    9. ':
' → logprob: -11.020705223083496
    10. '<|end|>' → logprob: -11.770705223083496

Token 969: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.685467764735222e-05
    2. '           ' → logprob: -9.500086784362793
    3. 'network' → logprob: -12.375086784362793
    4. '   ' → logprob: -12.750086784362793
    5. 'self' → logprob: -13.250086784362793
    6. '```' → logprob: -13.875086784362793
    7. '              ' → logprob: -14.625086784362793
    8. ' network' → logprob: -14.750086784362793
    9. '	           ' → logprob: -15.000086784362793
    10. ' self' → logprob: -15.500086784362793

Token 970: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.486194372177124
    2. ' network' → logprob: -1.236194372177124
    3. '               ' → logprob: -2.361194372177124
    4. '   ' → logprob: -9.611194610595703
    5. 'net' → logprob: -9.861194610595703
    6. '           ' → logprob: -10.111194610595703
    7. 'self' → logprob: -10.361194610595703
    8. '                   ' → logprob: -10.361194610595703
    9. ' self' → logprob: -11.361194610595703
    10. '(network' → logprob: -13.486194610595703

Token 971: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00020532844064291567
    2. '.' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.375205039978027
    4. ' .' → logprob: -16.375205993652344
    5. '.append' → logprob: -16.375205993652344
    6. '.Add' → logprob: -17.750205993652344
    7. 'add' → logprob: -17.875205993652344
    8. '           ' → logprob: -18.375205993652344
    9. '       ' → logprob: -18.500205993652344
    10. '.
' → logprob: -18.625205993652344

Token 972: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.253090865968261e-06
    2. 'road' → logprob: -11.625009536743164
    3. 'a' → logprob: -15.625009536743164
    4. '_ro' → logprob: -16.375009536743164
    5. 'Road' → logprob: -17.750009536743164
    6. '_
' → logprob: -18.000009536743164
    7. '(a' → logprob: -18.125009536743164
    8. '```' → logprob: -18.625009536743164
    9. '__' → logprob: -19.750009536743164
    10. '\' → logprob: -20.000009536743164

Token 973: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.625
    3. ' road' → logprob: -16.875
    4. '_' → logprob: -17.875
    5. 'Road' → logprob: -18.25
    6. 'rod' → logprob: -18.75
    7. '-road' → logprob: -18.75
    8. '```' → logprob: -18.75
    9. 'r' → logprob: -19.375
    10. 'roads' → logprob: -19.5

Token 974: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.750031471252441
    3. 'a' → logprob: -11.500031471252441
    4. '(
' → logprob: -16.125032424926758
    5. ' (' → logprob: -16.625032424926758
    6. ' a' → logprob: -17.250032424926758
    7. '(A' → logprob: -19.250032424926758
    8. '   ' → logprob: -21.000032424926758
    9. '((' → logprob: -21.250032424926758
    10. '()' → logprob: -22.000032424926758

Token 975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043472214019857347
    2. ' ,' → logprob: -8.000434875488281
    3. ',b' → logprob: -9.250434875488281
    4. ',
' → logprob: -13.125434875488281
    5. 'b' → logprob: -15.000434875488281
    6. '‌,' → logprob: -15.625434875488281
    7. '<|end|>' → logprob: -16.00043487548828
    8. '               ' → logprob: -16.00043487548828
    9. '`,' → logprob: -16.62543487548828
    10. ')' → logprob: -16.62543487548828

Token 976: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. '   ' → logprob: -19.02975082397461
    4. '	b' → logprob: -19.40475082397461
    5. '    ' → logprob: -19.90475082397461
    6. ')b' → logprob: -20.15475082397461
    7. '       ' → logprob: -20.77975082397461
    8. ' ' → logprob: -21.02975082397461
    9. '           ' → logprob: -21.27975082397461
    10. '  ' → logprob: -21.77975082397461

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.221884101862088e-05
    2. ',c' → logprob: -9.625092506408691
    3. ' ,' → logprob: -10.625092506408691
    4. 'c' → logprob: -13.625092506408691
    5. ',
' → logprob: -14.875092506408691
    6. ')' → logprob: -16.250091552734375
    7. '```' → logprob: -17.375091552734375
    8. '‌,' → logprob: -17.875091552734375
    9. '   ' → logprob: -18.250091552734375
    10. ' c' → logprob: -18.375091552734375

Token 978: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018150413408875465
    2. ' c' → logprob: -4.018150329589844
    3. ')c' → logprob: -15.518150329589844
    4. '	c' → logprob: -15.768150329589844
    5. '
' → logprob: -15.768150329589844
    6. ' ' → logprob: -17.018150329589844
    7. '   ' → logprob: -17.268150329589844
    8. '    ' → logprob: -18.518150329589844
    9. ' ' → logprob: -18.893150329589844
    10. '
' → logprob: -19.018150329589844

Token 979: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007117166533134878
    2. ')
' → logprob: -7.250711917877197
    3. '           ' → logprob: -14.500711441040039
    4. ')

' → logprob: -14.500711441040039
    5. ')
' → logprob: -15.250711441040039
    6. '       ' → logprob: -15.500711441040039
    7. ' )' → logprob: -15.875711441040039
    8. '               ' → logprob: -16.00071144104004
    9. '
' → logprob: -17.00071144104004
    10. ')`' → logprob: -17.37571144104004

Token 980: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08443418890237808
    2. '           ' → logprob: -2.5844342708587646
    3. 'e' → logprob: -5.8344340324401855
    4. ' evaluator' → logprob: -6.8344340324401855
    5. 'con' → logprob: -7.3344340324401855
    6. '   ' → logprob: -8.084434509277344
    7. '               ' → logprob: -8.459434509277344
    8. 'evalu' → logprob: -8.959434509277344
    9. '
' → logprob: -9.709434509277344
    10. '```' → logprob: -10.834434509277344

Token 981: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0017016025958582759
    2. 'eval' → logprob: -7.376701831817627
    3. ' evaluator' → logprob: -7.751701831817627
    4. 'evalu' → logprob: -7.876701831817627
    5. '           ' → logprob: -8.626701354980469
    6. 'con' → logprob: -10.501701354980469
    7. 'evaluation' → logprob: -11.126701354980469
    8. 'valuator' → logprob: -11.751701354980469
    9. '               ' → logprob: -11.876701354980469
    10. 'result' → logprob: -11.876701354980469

Token 982: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007108822464942932
    2. '=' → logprob: -7.250710964202881
    3. ' ' → logprob: -14.625710487365723
    4. '.' → logprob: -15.375710487365723
    5. ' =
' → logprob: -16.62571144104004
    6. '  ' → logprob: -16.87571144104004
    7. '.evaluate' → logprob: -17.00071144104004
    8. '   ' → logprob: -17.25071144104004
    9. '    ' → logprob: -17.50071144104004
    10. ' ' → logprob: -18.50071144104004

Token 983: ' Convenience' (ID: 142321)
  Prédit: 'Conven'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conven' → logprob: -0.00012725738633889705
    2. ' Convenience' → logprob: -9.000126838684082
    3. ' convenience' → logprob: -12.625126838684082
    4. 'Con' → logprob: -14.875126838684082
    5. 'Convention' → logprob: -15.750126838684082
    6. 'Conv' → logprob: -18.3751277923584
    7. '   ' → logprob: -18.6251277923584
    8. 'Comfort' → logprob: -18.6251277923584
    9. 'Concurrency' → logprob: -19.0001277923584
    10. 'Conversation' → logprob: -20.7501277923584

Token 984: 'Evaluator' (ID: 87172)
  Prédit: 'Evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -4.320199877838604e-07
    2. 'valuator' → logprob: -15.625
    3. 'e' → logprob: -16.375
    4. 'Evalu' → logprob: -16.75
    5. '_e' → logprob: -16.875
    6. 'Enumerator' → logprob: -18.0
    7. 'Estimator' → logprob: -19.625
    8. 'Conven' → logprob: -19.625
    9. 'Evaluation' → logprob: -19.875
    10. 'Evaluate' → logprob: -20.25

Token 985: '(network' (ID: 93784)
  Prédit: '(network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(network' → logprob: -3.082895273109898e-05
    2. '(self' → logprob: -10.875030517578125
    3. '(' → logprob: -11.500030517578125
    4. '(
' → logprob: -14.250030517578125
    5. '(net' → logprob: -14.625030517578125
    6. 'network' → logprob: -14.750030517578125
    7. '(Network' → logprob: -16.250030517578125
    8. '(n' → logprob: -16.375030517578125
    9. '           ' → logprob: -16.750030517578125
    10. ' (' → logprob: -18.250030517578125

Token 986: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.464697003364563
    2. '           ' → logprob: -1.464697003364563
    3. ')
' → logprob: -1.964697003364563
    4. '       ' → logprob: -8.964696884155273
    5. ').' → logprob: -9.589696884155273
    6. ')
' → logprob: -9.714696884155273
    7. '          ' → logprob: -10.714696884155273
    8. '<|end|>' → logprob: -11.964696884155273
    9. '   ' → logprob: -12.464696884155273
    10. '         ' → logprob: -12.589696884155273

Token 987: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01754968799650669
    2. 'result' → logprob: -4.142549514770508
    3. ' result' → logprob: -7.142549514770508
    4. 'town' → logprob: -8.017549514770508
    5. ' town' → logprob: -9.142549514770508
    6. '       ' → logprob: -9.142549514770508
    7. 'min' → logprob: -9.267549514770508
    8. 'best' → logprob: -11.142549514770508
    9. '```' → logprob: -11.142549514770508
    10. 'selected' → logprob: -11.267549514770508

Token 988: ' town' (ID: 8234)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.24523890018463135
    2. 'town' (adapté à ' town') → logprob: -2.495238780975342
    3. 'result' → logprob: -2.620238780975342
    4. 'best' → logprob: -2.870238780975342
    5. 'res' → logprob: -6.245238780975342
    6. 'optimal' → logprob: -7.120238780975342
    7. 'center' → logprob: -7.620238780975342
    8. 'chosen' → logprob: -8.1202392578125
    9. 'ans' → logprob: -8.3702392578125
    10. 'answer' → logprob: -8.3702392578125

Token 989: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0003241414960939437
    2. ',' → logprob: -8.375324249267578
    3. '_,' → logprob: -9.750324249267578
    4. 'id' → logprob: -10.875324249267578
    5. ',_' → logprob: -11.875324249267578
    6. '_' → logprob: -13.250324249267578
    7. '_i' → logprob: -13.500324249267578
    8. '_result' → logprob: -13.750324249267578
    9. '_best' → logprob: -14.500324249267578
    10. '```' → logprob: -14.750324249267578

Token 990: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',t' → logprob: -12.500019073486328
    4. ',total' → logprob: -14.500019073486328
    5. ',user' → logprob: -14.875019073486328
    6. ',
' → logprob: -14.875019073486328
    7. '‌,' → logprob: -15.000019073486328
    8. ',target' → logprob: -15.125019073486328
    9. ',e' → logprob: -15.875019073486328
    10. '<|end|>' → logprob: -16.000019073486328

Token 991: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5709725022315979
    2. ' total' → logprob: -1.6959724426269531
    3. 'cost' → logprob: -2.320972442626953
    4. 'min' → logprob: -2.820972442626953
    5. ' cost' → logprob: -3.195972442626953
    6. 'sum' → logprob: -3.445972442626953
    7. ' min' → logprob: -4.070972442626953
    8. ' sum' → logprob: -5.820972442626953
    9. 'score' → logprob: -7.695972442626953
    10. 'con' → logprob: -8.695972442626953

Token 992: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0016301940195262432
    2. '_' → logprob: -6.5016303062438965
    3. 'cost' → logprob: -10.126629829406738
    4. ' _' → logprob: -10.626629829406738
    5. ' =' → logprob: -10.876629829406738
    6. '_sum' → logprob: -11.376629829406738
    7. '_c' → logprob: -11.501629829406738
    8. ',' → logprob: -11.626629829406738
    9. '_score' → logprob: -12.626629829406738
    10. '=' → logprob: -13.126629829406738

Token 993: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889022678136826
    2. '=' → logprob: -2.578890323638916
    3. ',' → logprob: -15.703889846801758
    4. ' ' → logprob: -16.703889846801758
    5. '<|end|>' → logprob: -16.703889846801758
    6. ' =
' → logprob: -17.578889846801758
    7. ' ' → logprob: -18.078889846801758
    8. ')' → logprob: -18.203889846801758
    9. '＝' → logprob: -18.453889846801758
    10. '	' → logprob: -18.453889846801758

Token 994: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0015979375457391143
    2. ' evaluator' → logprob: -6.501597881317139
    3. 'evalu' → logprob: -9.376598358154297
    4. 'Evaluator' → logprob: -11.876598358154297
    5. 'evaluation' → logprob: -14.001598358154297
    6. 'valuator' → logprob: -14.251598358154297
    7. '_e' → logprob: -14.251598358154297
    8. '	e' → logprob: -14.501598358154297
    9. 'evaluate' → logprob: -14.626598358154297
    10. '-e' → logprob: -15.001598358154297

Token 995: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -3.173704271830502e-06
    2. 'evaluate' → logprob: -12.87500286102295
    3. '.' → logprob: -14.62500286102295
    4. ' .' → logprob: -16.375003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '.execute' → logprob: -19.625003814697266
    7. '
' → logprob: -20.875003814697266
    8. '().' → logprob: -21.375003814697266
    9. '  ' → logprob: -21.625003814697266
    10. '.calculate' → logprob: -21.750003814697266

Token 996: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20864345133304596
    2. '()
' → logprob: -1.9586434364318848
    3. '
' → logprob: -3.0836434364318848
    4. '()' → logprob: -6.708643436431885
    5. 'print' → logprob: -8.458643913269043
    6. '            
' → logprob: -11.333643913269043
    7. '
' → logprob: -12.333643913269043
    8. '<|end|>' → logprob: -12.458643913269043
    9. '       ' → logprob: -12.708643913269043
    10. '()
' → logprob: -12.708643913269043

Token 997: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067941173911094666
    2. 'print' → logprob: -5.006793975830078
    3. '
' → logprob: -9.631793975830078
    4. '       ' → logprob: -12.506793975830078
    5. 'return' → logprob: -12.631793975830078
    6. ' print' → logprob: -12.631793975830078
    7. '```' → logprob: -13.631793975830078
    8. '		' → logprob: -14.381793975830078
    9. '
' → logprob: -15.006793975830078
    10. '            
' → logprob: -15.631793975830078

Token 998: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010127831774298102
    2. '           ' → logprob: -9.250101089477539
    3. ' print' → logprob: -12.250101089477539
    4. 'return' → logprob: -15.375101089477539
    5. '
' → logprob: -15.875101089477539
    6. '#print' → logprob: -19.00010108947754
    7. '```' → logprob: -19.37510108947754
    8. '	print' → logprob: -20.12510108947754
    9. '       ' → logprob: -21.87510108947754
    10. '#' → logprob: -22.12510108947754

Token 999: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.25193166732788086
    2. '(f' → logprob: -1.5019316673278809
    3. '(' → logprob: -13.501932144165039
    4. 'f' → logprob: -14.001932144165039
    5. 'town' → logprob: -15.501932144165039
    6. '((' → logprob: -15.876932144165039
    7. 't' → logprob: -16.37693214416504
    8. '(
' → logprob: -17.75193214416504
    9. ' town' → logprob: -18.37693214416504
    10. '	t' → logprob: -19.00193214416504

Token 1000: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -2.5776860184123507e-06
    2. 'town' → logprob: -13.37500286102295
    3. '{' → logprob: -14.75000286102295
    4. 'ow' → logprob: -14.87500286102295
    5. '_' → logprob: -16.625001907348633
    6. 'o' → logprob: -17.000001907348633
    7. 'wn' → logprob: -17.375001907348633
    8. 'won' → logprob: -17.750001907348633
    9. '
' → logprob: -18.375001907348633
    10. '(' → logprob: -18.750001907348633

Token 1001: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. '_i' → logprob: -17.875
    4. 'id' → logprob: -18.25
    5. '__' → logprob: -18.625
    6. ' _' → logprob: -18.75
    7. '\' → logprob: -19.0
    8. ',' → logprob: -20.0
    9. '_,' → logprob: -20.375
    10. ',_' → logprob: -20.625

Token 1002: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010831133840838447
    2. ',end' → logprob: -10.25010871887207
    3. ' ,' → logprob: -10.50010871887207
    4. ',total' → logprob: -10.62510871887207
    5. ')' → logprob: -11.25010871887207
    6. ',
' → logprob: -12.37510871887207
    7. ',f' → logprob: -13.75010871887207
    8. ',",' → logprob: -13.87510871887207
    9. '<|end|>' → logprob: -15.37510871887207
    10. ',t' → logprob: -15.62510871887207

Token 1003: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0010393599513918161
    2. ' total' → logprob: -7.126039505004883
    3. 'int' → logprob: -8.376039505004883
    4. 'tot' → logprob: -14.001039505004883
    5. '
' → logprob: -14.126039505004883
    6. ' int' → logprob: -14.626039505004883
    7. '   ' → logprob: -14.751039505004883
    8. '"' → logprob: -15.001039505004883
    9. 't' → logprob: -15.251039505004883
    10. '(total' → logprob: -15.251039505004883

Token 1004: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.875000953674316
    3. ')' → logprob: -15.000000953674316
    4. 'cost' → logprob: -16.250001907348633
    5. ' _' → logprob: -16.875001907348633
    6. ')_' → logprob: -16.875001907348633
    7. '_count' → logprob: -17.500001907348633
    8. '_c' → logprob: -17.750001907348633
    9. '_COST' → logprob: -17.875001907348633
    10. '_code' → logprob: -18.625001907348633

Token 1005: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ')
' → logprob: -10.500028610229492
    3. '<|end|>' → logprob: -14.375028610229492
    4. ' )' → logprob: -15.000028610229492
    5. '
' → logprob: -17.125028610229492
    6. '),' → logprob: -17.250028610229492
    7. '())' → logprob: -18.000028610229492
    8. '")' → logprob: -18.125028610229492
    9. ')

' → logprob: -18.375028610229492
    10. '       ' → logprob: -18.375028610229492

Token 1006: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008263026247732341
    2. ' if' → logprob: -8.500825881958008
    3. '```' → logprob: -8.500825881958008
    4. '<|end|>' → logprob: -8.625825881958008
    5. 'def' → logprob: -9.000825881958008
    6. '
' → logprob: -9.875825881958008
    7. 'Solution' → logprob: -10.750825881958008
    8. '#' → logprob: -11.000825881958008
    9. 'solution' → logprob: -11.125825881958008
    10. 'controller' → logprob: -12.625825881958008

Token 1007: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031973200384527445
    2. ' main' → logprob: -5.753197193145752
    3. 'run' → logprob: -11.00319766998291
    4. '_main' → logprob: -13.75319766998291
    5. 'solve' → logprob: -14.25319766998291
    6. '__' → logprob: -14.37819766998291
    7. ' run' → logprob: -15.00319766998291
    8. '	main' → logprob: -15.75319766998291
    9. 'solution' → logprob: -16.378196716308594
    10. ' solve' → logprob: -16.753196716308594

Token 1008: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001942322589457035
    2. '():
' → logprob: -6.251942157745361
    3. '()' → logprob: -11.37694263458252
    4. ' ():' → logprob: -13.87694263458252
    5. '():
' → logprob: -14.00194263458252
    6. '():

' → logprob: -15.62694263458252
    7. '();' → logprob: -16.751941680908203
    8. '().' → logprob: -16.876941680908203
    9. '()>' → logprob: -17.126941680908203
    10. '(' → logprob: -17.626941680908203

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007936524227261543
    2. 'import' → logprob: -5.007936477661133
    3. 'if' → logprob: -7.382936477661133
    4. 'controller' → logprob: -7.882936477661133
    5. 'raw' → logprob: -10.507936477661133
    6. ' controller' → logprob: -10.507936477661133
    7. ' raw' → logprob: -10.507936477661133
    8. 'input' → logprob: -10.507936477661133
    9. 'def' → logprob: -10.632936477661133
    10. ' import' → logprob: -10.632936477661133

Token 1010: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.020448457449674606
    2. ' import' → logprob: -4.020448684692383
    3. 'raw' → logprob: -7.270448684692383
    4. '   ' → logprob: -7.270448684692383
    5. 'controller' → logprob: -7.520448684692383
    6. ' raw' → logprob: -8.270448684692383
    7. 'input' → logprob: -10.145448684692383
    8. ' controller' → logprob: -11.270448684692383
    9. 'sc' → logprob: -11.395448684692383
    10. 'lines' → logprob: -11.645448684692383

Token 1011: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.935296834039036e-06
    2. ' sys' → logprob: -12.75000286102295
    3. '	sys' → logprob: -21.500003814697266
    4. '=sys' → logprob: -21.500003814697266
    5. '(sys' → logprob: -23.375003814697266
    6. 'io' → logprob: -23.500003814697266
    7. 'os' → logprob: -24.000003814697266
    8. 'stdin' → logprob: -24.875003814697266
    9. '.sys' → logprob: -25.375003814697266
    10. '_sys' → logprob: -25.750003814697266

Token 1012: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44297555088996887
    2. '
' → logprob: -1.0679755210876465
    3. '    
' → logprob: -4.6929755210876465
    4. 'input' → logprob: -5.6929755210876465
    5. 'def' → logprob: -7.0679755210876465
    6. ' input' → logprob: -8.442975997924805
    7. ' lines' → logprob: -9.317975997924805
    8. '   
' → logprob: -9.317975997924805
    9. '<|end|>' → logprob: -9.567975997924805
    10. '  
' → logprob: -9.692975997924805

Token 1013: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06459394842386246
    2. 'controller' → logprob: -2.939594030380249
    3. 'input' → logprob: -5.43959379196167
    4. ' controller' → logprob: -6.31459379196167
    5. 'solution' → logprob: -7.31459379196167
    6. 'raw' → logprob: -7.43959379196167
    7. 'def' → logprob: -7.56459379196167
    8. ' lines' → logprob: -7.81459379196167
    9. ' raw' → logprob: -7.81459379196167
    10. ' solution' → logprob: -8.314594268798828

Token 1014: ' raw' (ID: 11428)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' → logprob: -0.41568252444267273
    2. 'input' → logprob: -1.4156825542449951
    3. 'lines' → logprob: -2.665682554244995
    4. '   ' → logprob: -4.915682315826416
    5. 'raw' (adapté à ' raw') → logprob: -4.915682315826416
    6. 'solution' → logprob: -4.915682315826416
    7. 'data' → logprob: -5.790682315826416
    8. 'sc' → logprob: -6.915682315826416
    9. 'ctrl' → logprob: -7.540682315826416
    10. ' lines' → logprob: -7.790682315826416

Token 1015: ' =' (ID: 314)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00022237090161070228
    2. '_' → logprob: -8.750222206115723
    3. '_inputs' → logprob: -11.125222206115723
    4. '_data' → logprob: -11.375222206115723
    5. '_raw' → logprob: -11.625222206115723
    6. '_in' → logprob: -12.125222206115723
    7. 'input' → logprob: -12.250222206115723
    8. ' =' → logprob: -12.750222206115723
    9. '=_' → logprob: -13.000222206115723
    10. '=' → logprob: -13.250222206115723

Token 1016: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31328392028808594
    2. 'sys' → logprob: -1.313283920288086
    3. '=sys' → logprob: -11.188283920288086
    4. '	sys' → logprob: -12.063283920288086
    5. '(sys' → logprob: -12.938283920288086
    6. '   ' → logprob: -16.938283920288086
    7. '_sys' → logprob: -17.313283920288086
    8. 'input' → logprob: -17.563283920288086
    9. '.sys' → logprob: -18.063283920288086
    10. '/sys' → logprob: -18.938283920288086

Token 1017: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000591278774663806
    2. '.' → logprob: -8.000591278076172
    3. '.argv' → logprob: -8.375591278076172
    4. '.stdout' → logprob: -11.125591278076172
    5. 'stdin' → logprob: -12.125591278076172
    6. '.std' → logprob: -13.000591278076172
    7. ' .' → logprob: -13.625591278076172
    8. '.stderr' → logprob: -14.875591278076172
    9. ' stdin' → logprob: -15.375591278076172
    10. '(stdin' → logprob: -15.500591278076172

Token 1018: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5576572418212891
    2. '.read' → logprob: -1.057657241821289
    3. 'read' → logprob: -2.557657241821289
    4. '.readlines' → logprob: -5.932657241821289
    5. '_read' → logprob: -10.807657241821289
    6. '.' → logprob: -11.807657241821289
    7. 'buffer' → logprob: -11.807657241821289
    8. '.buffer' → logprob: -12.057657241821289
    9. ' readline' → logprob: -14.057657241821289
    10. 'rea' → logprob: -14.432657241821289

Token 1019: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008160584256984293
    2. '().' → logprob: -7.3758158683776855
    3. '()
' → logprob: -8.750816345214844
    4. '())' → logprob: -11.875816345214844
    5. '();' → logprob: -12.375816345214844
    6. '()

' → logprob: -12.500816345214844
    7. '<|end|>' → logprob: -12.500816345214844
    8. '()\' → logprob: -13.125816345214844
    9. 'split' → logprob: -13.625816345214844
    10. '(' → logprob: -13.625816345214844

Token 1020: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010265124961733818
    2. '
' → logprob: -5.010265350341797
    3. 'controller' → logprob: -5.760265350341797
    4. '    
' → logprob: -8.260265350341797
    5. 'ctrl' → logprob: -10.635265350341797
    6. 'sc' → logprob: -11.135265350341797
    7. 'def' → logprob: -11.260265350341797
    8. ' controller' → logprob: -11.260265350341797
    9. 'SC' → logprob: -11.260265350341797
    10. '	controller' → logprob: -11.510265350341797

Token 1021: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -0.05377828702330589
    2. 'ctrl' → logprob: -4.303778171539307
    3. '   ' → logprob: -4.428778171539307
    4. 'solution' → logprob: -4.428778171539307
    5. 'sc' → logprob: -4.803778171539307
    6. 'sol' → logprob: -5.928778171539307
    7. 'Solution' → logprob: -6.053778171539307
    8. 'solver' → logprob: -6.428778171539307
    9. ' controller' → logprob: -9.553778648376465
    10. '
' → logprob: -11.053778648376465

Token 1022: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05532228201627731
    2. '=' → logprob: -2.9303221702575684
    3. '.' → logprob: -8.055322647094727
    4. '.controller' → logprob: -9.805322647094727
    5. '.process' → logprob: -9.930322647094727
    6. '_controller' → logprob: -12.055322647094727
    7. 'controller' → logprob: -12.930322647094727
    8. 'Controller' → logprob: -13.305322647094727
    9. '   ' → logprob: -13.305322647094727
    10. '.=' → logprob: -13.680322647094727

Token 1023: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -2.339278580620885e-06
    2. ' Solution' → logprob: -13.000001907348633
    3. 'Solver' → logprob: -23.625001907348633
    4. 'System' → logprob: -25.000001907348633
    5. 'S' → logprob: -25.250001907348633
    6. 'Source' → logprob: -25.375001907348633
    7. '_solution' → logprob: -25.500001907348633
    8. 'Scheme' → logprob: -25.875001907348633
    9. 'Service' → logprob: -25.875001907348633
    10. '   ' → logprob: -26.000001907348633

Token 1024: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -4.320199877838604e-07
    2. 'controller' → logprob: -15.0
    3. 'Control' → logprob: -17.75
    4. '@Controller' → logprob: -18.25
    5. '_controller' → logprob: -19.75
    6. '_Controller' → logprob: -19.875
    7. 'C' → logprob: -20.25
    8. 'Cont' → logprob: -20.875
    9. 'Con' → logprob: -21.25
    10. 'Container' → logprob: -21.25

Token 1025: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0008117707911878824
    2. '(' → logprob: -7.250811576843262
    3. '(
' → logprob: -9.250811576843262
    4. '   ' → logprob: -12.375811576843262
    5. 'raw' → logprob: -13.750811576843262
    6. '
' → logprob: -16.125812530517578
    7. ' ' → logprob: -16.250812530517578
    8. '(main' → logprob: -16.500812530517578
    9. '()
' → logprob: -17.375812530517578
    10. 'controller' → logprob: -17.500812530517578

Token 1026: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31328558921813965
    2. ')' → logprob: -1.3132855892181396
    3. '   ' → logprob: -11.063285827636719
    4. ' )
' → logprob: -12.563285827636719
    5. ')
' → logprob: -12.813285827636719
    6. ' ' → logprob: -13.938285827636719
    7. ')

' → logprob: -15.313285827636719
    8. ' )' → logprob: -15.438285827636719
    9. '())
' → logprob: -16.18828582763672
    10. ').' → logprob: -16.18828582763672

Token 1027: '   ' (ID: 271)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' → logprob: -0.25227075815200806
    2. '   ' → logprob: -1.5022706985473633
    3. '
' → logprob: -8.627270698547363
    4. '	controller' → logprob: -8.877270698547363
    5. ' controller' → logprob: -10.752270698547363
    6. '_controller' → logprob: -14.877270698547363
    7. '```' → logprob: -15.252270698547363
    8. '    
' → logprob: -15.252270698547363
    9. '.controller' → logprob: -15.377270698547363
    10. '(controller' → logprob: -15.502270698547363

Token 1028: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' controller' → logprob: -16.875001907348633
    4. '	controller' → logprob: -18.875001907348633
    5. 'container' → logprob: -20.125001907348633
    6. 'control' → logprob: -20.375001907348633
    7. '_controller' → logprob: -20.625001907348633
    8. '
' → logprob: -21.125001907348633
    9. '.controller' → logprob: -21.500001907348633
    10. '(controller' → logprob: -22.625001907348633

Token 1029: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -10.750021934509277
    3. 'process' → logprob: -17.62502098083496
    4. '.
' → logprob: -19.00002098083496
    5. ' .' → logprob: -19.12502098083496
    6. '.run' → logprob: -19.25002098083496
    7. '.Process' → logprob: -19.62502098083496
    8. '	process' → logprob: -20.00002098083496
    9. '.pro' → logprob: -20.25002098083496
    10. '.perform' → logprob: -20.37502098083496

Token 1030: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6502065062522888
    2. '<|end|>' → logprob: -0.7752065062522888
    3. 'if' → logprob: -4.150206565856934
    4. '()' → logprob: -7.400206565856934
    5. '```' → logprob: -7.900206565856934
    6. '<|end|>' → logprob: -8.400206565856934
    7. '\n' → logprob: -8.525206565856934
    8. '()
' → logprob: -9.275206565856934
    9. '

' → logprob: -10.025206565856934
    10. '  
' → logprob: -10.400206565856934

Token 1031: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.228561349213123e-05
    2. ' if' → logprob: -11.125052452087402
    3. 'main' → logprob: -11.250052452087402
    4. '#' → logprob: -11.625052452087402
    5. '```' → logprob: -11.750052452087402
    6. '
' → logprob: -12.375052452087402
    7. '<|end|>' → logprob: -12.875052452087402
    8. '__' → logprob: -15.500052452087402
    9. '\n' → logprob: -15.625052452087402
    10. '#if' → logprob: -16.125051498413086

Token 1032: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16085906326770782
    2. ' __' → logprob: -1.9108591079711914
    3. 'name' → logprob: -7.910859107971191
    4. '_name' → logprob: -8.410859107971191
    5. '___' → logprob: -10.410859107971191
    6. ' name' → logprob: -12.660859107971191
    7. '_' → logprob: -12.785859107971191
    8. '```' → logprob: -13.535859107971191
    9. '﻿' → logprob: -13.660859107971191
    10. ' ' → logprob: -13.660859107971191

Token 1033: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7426100969314575
    2. ' ==' → logprob: -1.2426100969314575
    3. '==' → logprob: -1.4926100969314575
    4. '=="' → logprob: -5.117609977722168
    5. 'name' → logprob: -5.742609977722168
    6. ' __' → logprob: -6.992609977722168
    7. '=='' → logprob: -8.367609977722168
    8. '.__' → logprob: -8.867609977722168
    9. '.name' → logprob: -9.617609977722168
    10. '_name' → logprob: -9.992609977722168

Token 1034: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03927153721451759
    2. '==' → logprob: -3.289271593093872
    3. '=="' → logprob: -7.039271354675293
    4. ' ==' → logprob: -8.039271354675293
    5. '=='' → logprob: -10.664271354675293
    6. '==
' → logprob: -13.039271354675293
    7. '__.__' → logprob: -13.789271354675293
    8. '__
' → logprob: -14.414271354675293
    9. '=' → logprob: -14.539271354675293
    10. '___' → logprob: -14.914271354675293

Token 1035: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11908381432294846
    2. ' ==' → logprob: -2.369083881378174
    3. '=="' → logprob: -4.494083881378174
    4. '__' → logprob: -5.119083881378174
    5. '=='' → logprob: -6.494083881378174
    6. '==
' → logprob: -11.244083404541016
    7. '=' → logprob: -11.744083404541016
    8. '[' → logprob: -12.619083404541016
    9. '===' → logprob: -13.494083404541016
    10. '_' → logprob: -13.619083404541016

Token 1036: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01815216802060604
    2. ''' → logprob: -4.018152236938477
    3. '__' → logprob: -13.393152236938477
    4. ' "__' → logprob: -14.268152236938477
    5. ''"' → logprob: -17.893152236938477
    6. '"user' → logprob: -18.143152236938477
    7. '   ' → logprob: -18.268152236938477
    8. '"'' → logprob: -18.643152236938477
    9. ' '__' → logprob: -18.768152236938477
    10. '"name' → logprob: -18.893152236938477

Token 1037: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.125
    3. '__' → logprob: -16.375
    4. '_main' → logprob: -17.625
    5. ' main' → logprob: -18.375
    6. ''' → logprob: -19.125
    7. '"' → logprob: -20.25
    8. 'ma' → logprob: -21.375
    9. 'm' → logprob: -21.75
    10. '	main' → logprob: -21.875

Token 1038: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25368940830230713
    2. '__' → logprob: -1.5036894083023071
    3. '__':
' → logprob: -6.378689289093018
    4. '__["' → logprob: -10.628689765930176
    5. '__
' → logprob: -11.503689765930176
    6. '__.' → logprob: -11.628689765930176
    7. '__.__' → logprob: -11.753689765930176
    8. '__
' → logprob: -12.503689765930176
    9. '=="' → logprob: -12.628689765930176
    10. '__("' → logprob: -14.378689765930176

Token 1039: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1734665334224701
    2. '"' → logprob: -1.9234665632247925
    3. 'main' → logprob: -5.298466682434082
    4. '   ' → logprob: -5.548466682434082
    5. ''' → logprob: -5.798466682434082
    6. '__":
' → logprob: -7.798466682434082
    7. ' main' → logprob: -8.548466682434082
    8. ' "__' → logprob: -8.673466682434082
    9. '____' → logprob: -8.798466682434082
    10. '_main' → logprob: -9.298466682434082

Token 1040: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -22.125
    5. 'mai' → logprob: -24.125
    6. 'ma' → logprob: -24.625
    7. 'import' → logprob: -24.75
    8. '(main' → logprob: -24.875
    9. '.main' → logprob: -25.5
    10. '
' → logprob: -25.625

Token 1041: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1039
Tokens correctement prédits (1ère position, stricte): 564
Tokens correctement prédits (1ère position, avec adaptation): 626
Tokens correctement prédits (top 10): 975
Précision stricte (1ère position): 54.28%
Précision adaptée (1ère position): 60.25%
Précision (top 10): 93.84%
================================================================================
