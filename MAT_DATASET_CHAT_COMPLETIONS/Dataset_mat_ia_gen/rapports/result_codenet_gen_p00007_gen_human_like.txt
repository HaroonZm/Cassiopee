================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
debt = 100000
for _ in range(n):
    debt = debt * 1.05
    if debt % 1000 != 0:
        debt = int(debt // 1000 + 1) * 1000
    else:
        debt = int(debt)
print(debt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005424272385425866
    2. '```' → logprob: -8.500542640686035
    3. ''' → logprob: -8.625542640686035
    4. '(n' → logprob: -10.250542640686035
    5. '`' → logprob: -10.500542640686035
    6. ')' → logprob: -10.875542640686035
    7. '('' → logprob: -11.250542640686035
    8. '(
' → logprob: -11.250542640686035
    9. '[' → logprob: -11.375542640686035
    10. '()' → logprob: -11.750542640686035

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41402262449264526
    2. ')' → logprob: -1.16402268409729
    3. '()' → logprob: -3.78902268409729
    4. '())' → logprob: -6.039022445678711
    5. '(
' → logprob: -7.414022445678711
    6. '('' → logprob: -8.414022445678711
    7. '```' → logprob: -8.914022445678711
    8. '')' → logprob: -9.164022445678711
    9. '")' → logprob: -9.289022445678711
    10. ''' → logprob: -9.789022445678711

Token 5: 'de' (ID: 613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: 'bt' (ID: 16051)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.052377623040229e-05
    2. 'fi' → logprob: -10.125070571899414
    3. 'fen' → logprob: -11.375070571899414
    4. 'fine' → logprob: -11.750070571899414
    5. 'x' → logprob: -13.250070571899414
    6. 'fa' → logprob: -13.750070571899414
    7. 'fe' → logprob: -13.875070571899414
    8. 'fy' → logprob: -14.000070571899414
    9. '```' → logprob: -14.000070571899414
    10. 'fs' → logprob: -14.875070571899414

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3179064691066742
    2. '_' → logprob: -1.4429064989089966
    3. ' =' → logprob: -4.442906379699707
    4. ' +=' → logprob: -4.692906379699707
    5. '=' → logprob: -5.192906379699707
    6. ' ' → logprob: -5.567906379699707
    7. '[:]' → logprob: -6.567906379699707
    8. ')' → logprob: -7.067906379699707
    9. '_amount' → logprob: -7.942906379699707
    10. '[i' → logprob: -7.942906379699707

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16889014840126038
    2. '0' → logprob: -2.2938902378082275
    3. ' n' → logprob: -3.5438902378082275
    4. ' int' → logprob: -4.043889999389648
    5. 'int' → logprob: -5.918889999389648
    6. 'n' → logprob: -5.918889999389648
    7. ' []' → logprob: -6.543889999389648
    8. ' float' → logprob: -7.793889999389648
    9. ' input' → logprob: -8.418889999389648
    10. 'input' → logprob: -8.918889999389648

Token 9: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006306292489171028
    2. 'int' → logprob: -6.006306171417236
    3. ' ' → logprob: -6.506306171417236
    4. 'n' → logprob: -6.631306171417236
    5. '[]' → logprob: -8.256306648254395
    6. 'float' → logprob: -8.506306648254395
    7. '[int' → logprob: -8.631306648254395
    8. 'input' → logprob: -9.381306648254395
    9. '[])' → logprob: -9.881306648254395
    10. '100' → logprob: -10.006306648254395

Token 10: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9290605187416077
    2. '*' → logprob: -1.179060459136963
    3. '%' → logprob: -2.554060459136963
    4. '\' → logprob: -3.554060459136963
    5. ' *' → logprob: -3.554060459136963
    6. '\n' → logprob: -3.554060459136963
    7. '_' → logprob: -3.804060459136963
    8. '000' → logprob: -3.929060459136963
    9. ' ' → logprob: -4.179060459136963
    10. 'for' → logprob: -4.679060459136963

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.286820650100708
    2. '*' → logprob: -2.536820650100708
    3. '' → logprob: -3.036820650100708
    4. ' 
' → logprob: -3.661820650100708
    5. ' ' → logprob: -4.036820411682129
    6. '
' → logprob: -4.286820411682129
    7. 'for' → logprob: -4.661820411682129
    8. '0' → logprob: -4.661820411682129
    9. '\n' → logprob: -4.786820411682129
    10. '#' → logprob: -5.036820411682129

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01305822841823101
    2. ' for' → logprob: -4.513058185577393
    3. 'while' → logprob: -7.013058185577393
    4. 'profit' → logprob: -7.388058185577393
    5. 'total' → logprob: -8.63805866241455
    6. '```' → logprob: -8.88805866241455
    7. 'interest' → logprob: -9.88805866241455
    8. 'rate' → logprob: -10.38805866241455
    9. 'if' → logprob: -11.01305866241455
    10. ' while' → logprob: -11.51305866241455

Token 13: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01085704192519188
    2. '  ' → logprob: -4.760857105255127
    3. ' i' → logprob: -6.260857105255127
    4. '_' → logprob: -8.635856628417969
    5. 'i' → logprob: -9.135856628417969
    6. ' ‌' → logprob: -11.260856628417969
    7. ' ' → logprob: -11.385856628417969
    8. ' _' → logprob: -12.010856628417969
    9. ' n' → logprob: -12.760856628417969
    10. 'space' → logprob: -13.635856628417969

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005150977522134781
    2. 'in' → logprob: -5.75515079498291
    3. ' ' → logprob: -6.25515079498291
    4. ' i' → logprob: -11.25515079498291
    5. '  ' → logprob: -11.50515079498291
    6. 'space' → logprob: -12.25515079498291
    7. ',' → logprob: -12.63015079498291
    8. '_' → logprob: -12.75515079498291
    9. ' ,' → logprob: -12.75515079498291
    10. 'n' → logprob: -12.88015079498291

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03366044908761978
    2. 'range' → logprob: -3.408660411834717
    3. ' ' → logprob: -11.408660888671875
    4. ' in' → logprob: -13.408660888671875
    5. '	range' → logprob: -14.283660888671875
    6. '```' → logprob: -14.658660888671875
    7. ' xrange' → logprob: -14.783660888671875
    8. '(range' → logprob: -15.408660888671875
    9. ' n' → logprob: -16.033660888671875
    10. 'in' → logprob: -16.533660888671875

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08381762355566025
    2. '(n' → logprob: -2.583817720413208
    3. ' (' → logprob: -5.333817481994629
    4. '(range' → logprob: -9.833817481994629
    5. '(
' → logprob: -10.458817481994629
    6. '(

' → logprob: -13.458817481994629
    7. '(len' → logprob: -13.833817481994629
    8. ' range' → logprob: -14.083817481994629
    9. '```' → logprob: -14.083817481994629
    10. '(int' → logprob: -14.458817481994629

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009072950924746692
    2. ':' → logprob: -7.6259074211120605
    3. ')' → logprob: -7.8759074211120605
    4. ' ):' → logprob: -11.000906944274902
    5. '):
' → logprob: -11.375906944274902
    6. '+' → logprob: -12.000906944274902
    7. ',' → logprob: -14.000906944274902
    8. '**' → logprob: -14.250906944274902
    9. '():' → logprob: -14.250906944274902
    10. ''):' → logprob: -15.125906944274902

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25644031167030334
    2. ' debt' → logprob: -2.0064404010772705
    3. '```' → logprob: -3.1314404010772705
    4. '    
' → logprob: -4.256440162658691
    5. '    ' → logprob: -4.381440162658691
    6. ' ```' → logprob: -5.256440162658691
    7. ' input' → logprob: -6.131440162658691
    8. '     
' → logprob: -6.256440162658691
    9. ' ' → logprob: -6.381440162658691
    10. ' 
' → logprob: -6.631440162658691

Token 19: ' debt' (ID: 17451)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.2466944456100464
    2. ' payment' → logprob: -1.8716944456100464
    3. 'p' → logprob: -3.496694564819336
    4. 'pay' → logprob: -5.121694564819336
    5. 'amount' → logprob: -5.121694564819336
    6. ' repayment' → logprob: -5.496694564819336
    7. 'rate' → logprob: -5.746694564819336
    8. 'money' → logprob: -6.121694564819336
    9. 'paid' → logprob: -6.621694564819336
    10. ' p' → logprob: -6.746694564819336

Token 20: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7248700857162476
    2. ' *=' → logprob: -0.8498700857162476
    3. ' =' → logprob: -3.474870204925537
    4. '=' → logprob: -4.099870204925537
    5. ' +=' → logprob: -4.099870204925537
    6. '-=' → logprob: -4.474870204925537
    7. '*=' → logprob: -4.724870204925537
    8. '   ' → logprob: -7.224870204925537
    9. '+=' → logprob: -7.349870204925537
    10. ' /=' → logprob: -7.474870204925537

Token 21: ' debt' (ID: 17451)
  Prédit: ' debt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' debt' → logprob: -0.5606878399848938
    2. 'de' → logprob: -1.435687780380249
    3. ' int' → logprob: -2.310687780380249
    4. 'int' → logprob: -2.435687780380249
    5. '(de' → logprob: -6.060688018798828
    6. '(int' → logprob: -7.185688018798828
    7. ' de' → logprob: -7.560688018798828
    8. ' (' → logprob: -8.060688018798828
    9. ' ' → logprob: -9.185688018798828
    10. '   ' → logprob: -9.685688018798828

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0716228112578392
    2. ' *' → logprob: -2.696622848510742
    3. '-' → logprob: -7.071622848510742
    4. ' -' → logprob: -8.071622848510742
    5. '+' → logprob: -8.196622848510742
    6. ' +' → logprob: -9.321622848510742
    7. '*(' → logprob: -10.071622848510742
    8. '<|end|>' → logprob: -10.946622848510742
    9. '**' → logprob: -11.071622848510742
    10. '/' → logprob: -11.196622848510742

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12318447977304459
    2. '0' → logprob: -2.8731844425201416
    3. ' ' → logprob: -3.3731844425201416
    4. '(' → logprob: -4.123184680938721
    5. '2' → logprob: -4.998184680938721
    6. ' (' → logprob: -6.998184680938721
    7. '110' → logprob: -8.248184204101562
    8. '3' → logprob: -8.373184204101562
    9. '11' → logprob: -8.748184204101562
    10. '10' → logprob: -8.998184204101562

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04978431761264801
    2. '0' → logprob: -3.9247844219207764
    3. '(' → logprob: -4.299784183502197
    4. '2' → logprob: -5.549784183502197
    5. '110' → logprob: -5.924784183502197
    6. '11' → logprob: -6.174784183502197
    7. '105' → logprob: -6.424784183502197
    8. '3' → logprob: -6.799784183502197
    9. '4' → logprob: -8.174784660339355
    10. '5' → logprob: -8.174784660339355

Token 25: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.050333354622125626
    2. '0' → logprob: -3.175333261489868
    3. '1' → logprob: -5.300333499908447
    4. '+' → logprob: -7.550333499908447
    5. ' +' → logprob: -7.550333499908447
    6. ' .' → logprob: -8.050333023071289
    7. '2' → logprob: -8.300333023071289
    8. '-' → logprob: -8.925333023071289
    9. ' -' → logprob: -8.925333023071289
    10. '00' → logprob: -9.175333023071289

Token 26: '05' (ID: 2922)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8989075422286987
    2. '05' → logprob: -1.3989075422286987
    3. '2' → logprob: -1.7739075422286987
    4. '03' → logprob: -2.5239076614379883
    5. '02' → logprob: -3.3989076614379883
    6. '04' → logprob: -4.023907661437988
    7. '0' → logprob: -4.148907661437988
    8. '01' → logprob: -4.898907661437988
    9. '06' → logprob: -5.523907661437988
    10. '15' → logprob: -5.523907661437988

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' debt' (ID: 17451)
  Prédit: ' debt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' debt' → logprob: -0.00279834121465683
    2. ' de' → logprob: -6.752798557281494
    3. 'de' → logprob: -7.002798557281494
    4. ' ' → logprob: -8.627798080444336
    5. ' debts' → logprob: -9.002798080444336
    6. ' n' → logprob: -9.127798080444336
    7. ' ' → logprob: -9.627798080444336
    8. '(de' → logprob: -10.377798080444336
    9. '_de' → logprob: -10.502798080444336
    10. ' _' → logprob: -10.502798080444336

Token 31: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06916993111371994
    2. ' >=' → logprob: -3.0691699981689453
    3. '>' → logprob: -3.9441699981689453
    4. ' <' → logprob: -7.944169998168945
    5. '>=' → logprob: -7.944169998168945
    6. ' ' → logprob: -8.819169998168945
    7. ' <=' → logprob: -9.319169998168945
    8. ' ' → logprob: -11.319169998168945
    9. '<' → logprob: -11.444169998168945
    10. '%' → logprob: -11.944169998168945

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11456234008073807
    2. '2' → logprob: -2.8645622730255127
    3. '200' → logprob: -3.8645622730255127
    4. '100' → logprob: -3.8645622730255127
    5. '1' → logprob: -5.114562511444092
    6. '10' → logprob: -6.364562511444092
    7. '400' → logprob: -7.364562511444092
    8. '500' → logprob: -8.489562034606934
    9. '20' → logprob: -8.739562034606934
    10. '3' → logprob: -8.739562034606934

Token 33: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9483890533447266
    2. '100' → logprob: -1.0733890533447266
    3. '2' → logprob: -1.6983890533447266
    4. '10' → logprob: -2.9483890533447266
    5. '5' → logprob: -4.448389053344727
    6. '3' → logprob: -4.698389053344727
    7. '500' → logprob: -4.948389053344727
    8. '200' → logprob: -6.073389053344727
    9. ' ' → logprob: -6.448389053344727
    10. '7' → logprob: -7.198389053344727

Token 34: '0' (ID: 15)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2788279354572296
    2. '==' → logprob: -1.6538279056549072
    3. ' !=' → logprob: -3.7788279056549072
    4. '0' → logprob: -4.153828144073486
    5. ' <' → logprob: -5.028828144073486
    6. '!=' → logprob: -5.903828144073486
    7. '<' → logprob: -6.903828144073486
    8. '=' → logprob: -7.278828144073486
    9. ' >=' → logprob: -7.528828144073486
    10. ' ' → logprob: -7.778828144073486

Token 35: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1706981211900711
    2. '==' → logprob: -2.4206981658935547
    3. ' !=' → logprob: -2.7956981658935547
    4. '!=' → logprob: -5.920698165893555
    5. ' <' → logprob: -6.170698165893555
    6. ' >=' → logprob: -6.795698165893555
    7. ' <=' → logprob: -7.670698165893555
    8. ' >' → logprob: -8.670698165893555
    9. '0' → logprob: -8.920698165893555
    10. ' ' → logprob: -9.420698165893555

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231279134750366
    2. ' ' → logprob: -0.8981279134750366
    3. '=' → logprob: -13.273127555847168
    4. '  ' → logprob: -13.773127555847168
    5. '000' → logprob: -15.023127555847168
    6. '100' → logprob: -15.210627555847168
    7. '   ' → logprob: -15.335627555847168
    8. ' ' → logprob: -15.335627555847168
    9. '00' → logprob: -15.773127555847168
    10. 'int' → logprob: -16.523128509521484

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007611948065459728
    2. ' ' → logprob: -4.8826117515563965
    3. '  ' → logprob: -13.445112228393555
    4. '   ' → logprob: -13.507612228393555
    5. '=' → logprob: -14.195112228393555
    6. '000' → logprob: -14.570112228393555
    7. '00' → logprob: -14.695112228393555
    8. '    ' → logprob: -15.195112228393555
    9. '100' → logprob: -15.632612228393555
    10. '500' → logprob: -16.382612228393555

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003682285314425826
    2. ' :' → logprob: -8.125368118286133
    3. ':
' → logprob: -10.125368118286133
    4. ' or' → logprob: -11.500368118286133
    5. '):' → logprob: -12.125368118286133
    6. ' and' → logprob: -12.250368118286133
    7. '   ' → logprob: -12.500368118286133
    8. ',' → logprob: -12.875368118286133
    9. '=' → logprob: -13.875368118286133
    10. 'and' → logprob: -14.250368118286133

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.629956841468811
    2. '    ' → logprob: -1.004956841468811
    3. '   ' → logprob: -3.2549567222595215
    4. ' debt' → logprob: -3.5049567222595215
    5. 'de' → logprob: -5.1299567222595215
    6. ' ' → logprob: -5.5049567222595215
    7. '```' → logprob: -5.5049567222595215
    8. '     
' → logprob: -6.0049567222595215
    9. '1' → logprob: -6.1299567222595215
    10. '     ' → logprob: -6.3799567222595215

Token 40: ' debt' (ID: 17451)
  Prédit: ' debt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' debt' → logprob: -0.019247762858867645
    2. 'de' → logprob: -4.019247531890869
    3. '   ' → logprob: -7.394247531890869
    4. '    ' → logprob: -8.144248008728027
    5. ' deuda' → logprob: -10.394248008728027
    6. '	de' → logprob: -10.519248008728027
    7. '       ' → logprob: -10.894248008728027
    8. ' debts' → logprob: -11.019248008728027
    9. 'd' → logprob: -11.144248008728027
    10. ' de' → logprob: -11.269248008728027

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03212917968630791
    2. '=' → logprob: -3.9071292877197266
    3. ' +=' → logprob: -4.532129287719727
    4. '+=' → logprob: -7.282129287719727
    5. ' -=' → logprob: -10.157129287719727
    6. '//=' → logprob: -11.282129287719727
    7. '=int' → logprob: -11.532129287719727
    8. ' //' → logprob: -11.907129287719727
    9. '//' → logprob: -13.157129287719727
    10. ' ' → logprob: -13.407129287719727

Token 42: ' int' (ID: 677)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ((' → logprob: -1.089288592338562
    2. '((' → logprob: -1.214288592338562
    3. ' (' → logprob: -1.339288592338562
    4. '(de' → logprob: -3.4642887115478516
    5. 'int' → logprob: -3.8392887115478516
    6. '(int' → logprob: -3.9642887115478516
    7. ' int' → logprob: -4.214288711547852
    8. ' debt' → logprob: -4.964288711547852
    9. '(((' → logprob: -5.589288711547852
    10. 'de' → logprob: -5.839288711547852

Token 43: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.5667157769203186
    2. '((' → logprob: -1.3167157173156738
    3. '(' → logprob: -1.8167157173156738
    4. ' (' → logprob: -6.441715717315674
    5. '(round' → logprob: -8.941716194152832
    6. '(((' → logprob: -9.441716194152832
    7. ' ((' → logprob: -10.441716194152832
    8. 'de' → logprob: -10.566716194152832
    9. '(
' → logprob: -10.566716194152832
    10. '(math' → logprob: -10.691716194152832

Token 44: 'bt' (ID: 16051)
  Prédit: 'bt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.00017529279284644872
    2. 'b' → logprob: -9.750175476074219
    3. 't' → logprob: -9.875175476074219
    4. 'pt' → logprob: -10.000175476074219
    5. 'btn' → logprob: -11.250175476074219
    6. 'ht' → logprob: -13.250175476074219
    7. '```' → logprob: -13.500175476074219
    8. 'rt' → logprob: -13.625175476074219
    9. 'nt' → logprob: -14.625175476074219
    10. '``' → logprob: -14.875175476074219

Token 45: ' //' (ID: 602)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5878352522850037
    2. '/' → logprob: -0.9628352522850037
    3. ' +' → logprob: -3.2128353118896484
    4. ')' → logprob: -4.712835311889648
    5. ' //' → logprob: -4.712835311889648
    6. '+' → logprob: -6.462835311889648
    7. '//' → logprob: -7.337835311889648
    8. '   ' → logprob: -7.462835311889648
    9. '()' → logprob: -7.712835311889648
    10. ' ' → logprob: -7.837835311889648

Token 46: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005555360112339258
    2. ' ' → logprob: -7.500555515289307
    3. '   ' → logprob: -14.000555992126465
    4. '  ' → logprob: -14.375555992126465
    5. '1' → logprob: -14.500555992126465
    6. '10' → logprob: -15.250555992126465
    7. '１００' → logprob: -15.625555992126465
    8. '```' → logprob: -16.68805503845215
    9. '0' → logprob: -17.62555503845215
    10. '    ' → logprob: -17.68805503845215

Token 47: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00018220659694634378
    2. ' ' → logprob: -8.625182151794434
    3. '1' → logprob: -13.875182151794434
    4. '10' → logprob: -14.500182151794434
    5. '  ' → logprob: -14.937682151794434
    6. '   ' → logprob: -15.062682151794434
    7. '１００' → logprob: -15.250182151794434
    8. '```' → logprob: -15.937682151794434
    9. '0' → logprob: -16.68768310546875
    10. '-' → logprob: -17.56268310546875

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.750006675720215
    4. '   ' → logprob: -16.2500057220459
    5. '*' → logprob: -17.3750057220459
    6. '000' → logprob: -17.3750057220459
    7. '۰' → logprob: -17.5000057220459
    8. '０' → logprob: -18.3750057220459
    9. '       ' → logprob: -18.7500057220459
    10. '  ' → logprob: -18.8750057220459

Token 49: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08048505336046219
    2. ')' → logprob: -3.2054851055145264
    3. ' *' → logprob: -3.5804851055145264
    4. ')*' → logprob: -4.830484867095947
    5. '   ' → logprob: -7.580484867095947
    6. '+' → logprob: -8.080485343933105
    7. '       ' → logprob: -10.205485343933105
    8. ' +' → logprob: -10.705485343933105
    9. '0' → logprob: -10.830485343933105
    10. '*)' → logprob: -11.580485343933105

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00407923199236393
    2. ' ' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.12907886505127
    4. '  ' → logprob: -16.879079818725586
    5. ')' → logprob: -17.504079818725586
    6. '１' → logprob: -18.254079818725586
    7. '    ' → logprob: -18.379079818725586
    8. '0' → logprob: -18.566579818725586
    9. ' ' → logprob: -18.754079818725586
    10. '+' → logprob: -18.879079818725586

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '１' → logprob: -18.625024795532227
    5. '2' → logprob: -18.750024795532227
    6. ')' → logprob: -18.750024795532227
    7. '0' → logprob: -18.750024795532227
    8. '  ' → logprob: -18.812524795532227
    9. '۱' → logprob: -19.187524795532227
    10. '१' → logprob: -19.375024795532227

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016590259969234467
    2. ')*' → logprob: -4.141590118408203
    3. '*' → logprob: -8.516590118408203
    4. '000' → logprob: -8.641590118408203
    5. ' )' → logprob: -9.391590118408203
    6. '0' → logprob: -9.641590118408203
    7. '   ' → logprob: -10.766590118408203
    8. '```' → logprob: -13.016590118408203
    9. ' *' → logprob: -13.766590118408203
    10. '）' → logprob: -13.891590118408203

Token 53: ' *' (ID: 425)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.14877979457378387
    2. '*' → logprob: -2.02377986907959
    3. '0' → logprob: -5.52377986907959
    4. ' *' → logprob: -6.52377986907959
    5. '   ' → logprob: -8.39877986907959
    6. '	' → logprob: -9.64877986907959
    7. '00' → logprob: -9.77377986907959
    8. '```' → logprob: -10.39877986907959
    9. '\t' → logprob: -10.52377986907959
    10. '**' → logprob: -10.52377986907959

Token 54: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01105206273496151
    2. ' ' → logprob: -4.511052131652832
    3. '1' → logprob: -13.636052131652832
    4. '000' → logprob: -14.011052131652832
    5. ' ' → logprob: -14.261052131652832
    6. '   ' → logprob: -14.511052131652832
    7. '  ' → logprob: -14.511052131652832
    8. '10' → logprob: -15.948552131652832
    9. '１００' → logprob: -16.511051177978516
    10. '`' → logprob: -16.761051177978516

Token 55: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.7835754988482222e-05
    2. '000' → logprob: -11.500018119812012
    3. ' ' → logprob: -12.375018119812012
    4. '1' → logprob: -12.750018119812012
    5. '10' → logprob: -15.000018119812012
    6. '１００' → logprob: -17.375017166137695
    7. '  ' → logprob: -17.875017166137695
    8. '   ' → logprob: -18.375017166137695
    9. '```' → logprob: -19.187517166137695
    10. '0' → logprob: -19.312517166137695

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006880664732307196
    2. '00' → logprob: -5.506880760192871
    3. '000' → logprob: -5.881880760192871
    4. ' ' → logprob: -12.131880760192871
    5. '   ' → logprob: -13.631880760192871
    6. '```' → logprob: -15.131880760192871
    7. '०' → logprob: -15.444380760192871
    8. '٠' → logprob: -15.506880760192871
    9. ')' → logprob: -15.819380760192871
    10. '۰' → logprob: -16.006879806518555

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4920564293861389
    2. '<|end|>' → logprob: -0.9920564293861389
    3. '
' → logprob: -4.867056369781494
    4. ' print' → logprob: -5.617056369781494
    5. '\n' → logprob: -6.242056369781494
    6. ')' → logprob: -6.742056369781494
    7. '```' → logprob: -6.992056369781494
    8. '#' → logprob: -7.117056369781494
    9. ' ' → logprob: -7.367056369781494
    10. '<|end|>' → logprob: -8.242056846618652

Token 59: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002112886286340654
    2. ' :' → logprob: -9.750211715698242
    3. ':
' → logprob: -9.875211715698242
    4. '   ' → logprob: -9.875211715698242
    5. '       ' → logprob: -10.125211715698242
    6. ':return' → logprob: -13.375211715698242
    7. '    ' → logprob: -13.500211715698242
    8. '<|end|>' → logprob: -13.750211715698242
    9. '```' → logprob: -14.000211715698242
    10. '      ' → logprob: -14.500211715698242

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2661656439304352
    2. '   ' → logprob: -1.5161656141281128
    3. 'de' → logprob: -4.516165733337402
    4. ' debt' → logprob: -6.891165733337402
    5. ' continue' → logprob: -6.891165733337402
    6. 'continue' → logprob: -7.266165733337402
    7. 'pass' → logprob: -8.391165733337402
    8. ' pass' → logprob: -9.391165733337402
    9. '```' → logprob: -9.516165733337402
    10. '   ' → logprob: -10.766165733337402

Token 62: ' debt' (ID: 17451)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.22245687246322632
    2. '   ' → logprob: -1.972456932067871
    3. ' debt' → logprob: -2.847456932067871
    4. ' continue' → logprob: -7.472456932067871
    5. 'continue' → logprob: -7.722456932067871
    6. '       ' → logprob: -8.347456932067871
    7. 'pass' → logprob: -8.597456932067871
    8. '   ' → logprob: -8.722456932067871
    9. 'deb' → logprob: -8.972456932067871
    10. '```' → logprob: -9.097456932067871

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048665717244148254
    2. ' =' → logprob: -3.048665761947632
    3. '=int' → logprob: -10.048666000366211
    4. '*=' → logprob: -11.173666000366211
    5. '<|end|>' → logprob: -12.048666000366211
    6. ')' → logprob: -12.298666000366211
    7. '+=' → logprob: -12.298666000366211
    8. ' *=' → logprob: -13.173666000366211
    9. '```' → logprob: -14.048666000366211
    10. ' +=' → logprob: -14.173666000366211

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006448796018958092
    2. ' int' → logprob: -5.131448745727539
    3. 'de' → logprob: -7.631448745727539
    4. '   ' → logprob: -10.506448745727539
    5. ' debt' → logprob: -12.756448745727539
    6. '       ' → logprob: -13.756448745727539
    7. '(int' → logprob: -13.881448745727539
    8. '	int' → logprob: -14.006448745727539
    9. '    ' → logprob: -14.256448745727539
    10. ' ' → logprob: -14.506448745727539

Token 65: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -5.9153885558771435e-06
    2. 'de' → logprob: -12.250005722045898
    3. '(' → logprob: -14.375005722045898
    4. '(d' → logprob: -15.375005722045898
    5. ' debt' → logprob: -16.8750057220459
    6. '	de' → logprob: -17.6250057220459
    7. 'Debt' → logprob: -17.6250057220459
    8. ' (' → logprob: -17.8750057220459
    9. ',de' → logprob: -18.6250057220459
    10. '(dead' → logprob: -18.7500057220459

Token 66: 'bt' (ID: 16051)
  Prédit: 'bt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.00012701898231171072
    2. 'b' → logprob: -9.625126838684082
    3. 'pt' → logprob: -10.250126838684082
    4. 't' → logprob: -11.875126838684082
    5. 'btn' → logprob: -11.875126838684082
    6. 'btc' → logprob: -13.250126838684082
    7. 'bet' → logprob: -13.750126838684082
    8. '[' → logprob: -13.750126838684082
    9. 'eb' → logprob: -13.875126838684082
    10. '```' → logprob: -14.250126838684082

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011013990733772516
    2. '//' → logprob: -7.001101493835449
    3. '/' → logprob: -9.75110149383545
    4. '100' → logprob: -9.75110149383545
    5. '   ' → logprob: -11.12610149383545
    6. '<|end|>' → logprob: -11.12610149383545
    7. ' )' → logprob: -11.37610149383545
    8. ' //' → logprob: -11.37610149383545
    9. ')//' → logprob: -11.87610149383545
    10. ' /' → logprob: -12.87610149383545

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012941618449985981
    2. '<|end|>' → logprob: -5.137941837310791
    3. '\n' → logprob: -5.637941837310791
    4. ')' → logprob: -6.887941837310791
    5. ' print' → logprob: -7.262941837310791
    6. ' ' → logprob: -7.262941837310791
    7. '\' → logprob: -8.637941360473633
    8. '#' → logprob: -8.762941360473633
    9. '```' → logprob: -8.762941360473633
    10. '
' → logprob: -9.137941360473633

Token 69: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.38689956068992615
    2. '(' → logprob: -1.1368995904922485
    3. '()' → logprob: -10.761899948120117
    4. '(d' → logprob: -12.886899948120117
    5. '('' → logprob: -13.386899948120117
    6. '("("' → logprob: -14.636899948120117
    7. '(n' → logprob: -15.136899948120117
    8. ' (' → logprob: -15.136899948120117
    9. 'de' → logprob: -15.136899948120117
    10. '((' → logprob: -15.261899948120117

Token 70: 'bt' (ID: 16051)
  Prédit: 'bt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -8.2994620242971e-06
    2. 'b' → logprob: -12.625008583068848
    3. 'btn' → logprob: -12.625008583068848
    4. 't' → logprob: -13.625008583068848
    5. 'pt' → logprob: -14.750008583068848
    6. 'btc' → logprob: -16.00000762939453
    7. 'nt' → logprob: -18.37500762939453
    8. '```' → logprob: -18.50000762939453
    9. 'bet' → logprob: -19.62500762939453
    10. '#' → logprob: -20.00000762939453

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -15.5
    3. ')`' → logprob: -16.875
    4. ' )' → logprob: -17.75
    5. ')}' → logprob: -18.125
    6. ')
' → logprob: -18.25
    7. '')' → logprob: -19.25
    8. '),' → logprob: -19.5
    9. '）' → logprob: -19.875
    10. '`)' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 43.48%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 81.16%
================================================================================
