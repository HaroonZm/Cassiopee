================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    w,d=map(int,input().split())
    if w==0 and d==0: break
    front=list(map(int,input().split()))
    side=list(map(int,input().split()))
    print(sum(min(front[j],side[i]) for i in range(d) for j in range(w)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2796720266342163
    2. ' ' → logprob: -2.279672145843506
    3. '    ' → logprob: -3.404672145843506
    4. '```' → logprob: -3.529672145843506
    5. '\' → logprob: -3.779672145843506
    6. '    
' → logprob: -4.529672145843506
    7. '\n' → logprob: -4.654672145843506
    8. '<|end|>' → logprob: -5.154672145843506
    9. ':' → logprob: -5.779672145843506
    10. ''' → logprob: -5.779672145843506

Token 4: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1945326179265976
    2. '    ' → logprob: -2.694532632827759
    3. ' ' → logprob: -3.069532632827759
    4. '```' → logprob: -3.194532632827759
    5. '       ' → logprob: -5.31953239440918
    6. '    
' → logprob: -5.69453239440918
    7. ' pass' → logprob: -5.94453239440918
    8. '  ' → logprob: -6.44453239440918
    9. 'pass' → logprob: -6.44453239440918
    10. ' ```' → logprob: -6.94453239440918

Token 5: ',d' (ID: 26159)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09453693777322769
    2. 'hile' → logprob: -2.4695370197296143
    3. 'i' → logprob: -5.344536781311035
    4. '   ' → logprob: -7.969536781311035
    5. '```' → logprob: -8.719536781311035
    6. '=' → logprob: -9.594536781311035
    7. 'e' → logprob: -9.969536781311035
    8. ' h' → logprob: -10.094536781311035
    9. 'a' → logprob: -10.219536781311035
    10. ' ' → logprob: -10.469536781311035

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15968430042266846
    2. ',' → logprob: -2.284684181213379
    3. ' =' → logprob: -3.159684181213379
    4. ')' → logprob: -6.909684181213379
    5. ' ,' → logprob: -7.534684181213379
    6. '[' → logprob: -7.659684181213379
    7. ' ' → logprob: -8.034684181213379
    8. '.' → logprob: -8.409684181213379
    9. '  ' → logprob: -9.159684181213379
    10. 'i' → logprob: -9.159684181213379

Token 7: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6632587909698486
    2. ' input' → logprob: -0.7882587909698486
    3. ' map' → logprob: -3.9132587909698486
    4. 'map' → logprob: -5.0382585525512695
    5. ' w' → logprob: -6.6632585525512695
    6. 'w' → logprob: -7.0382585525512695
    7. ' ' → logprob: -7.0382585525512695
    8. '0' → logprob: -9.03825855255127
    9. ' (' → logprob: -10.16325855255127
    10. '(input' → logprob: -10.22575855255127

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10612630844116211
    2. '(str' → logprob: -2.481126308441162
    3. '(' → logprob: -4.106126308441162
    4. '(lambda' → logprob: -7.981126308441162
    5. '(input' → logprob: -9.35612678527832
    6. 'int' → logprob: -10.23112678527832
    7. ' (' → logprob: -10.73112678527832
    8. '(list' → logprob: -10.73112678527832
    9. 'str' → logprob: -10.98112678527832
    10. '(eval' → logprob: -11.23112678527832

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0474858433008194
    2. ')' → logprob: -3.297485828399658
    3. 'input' → logprob: -5.672485828399658
    4. '(' → logprob: -5.672485828399658
    5. '<|end|>' → logprob: -6.797485828399658
    6. ',input' → logprob: -7.547485828399658
    7. ' input' → logprob: -8.547486305236816
    8. '=input' → logprob: -9.047486305236816
    9. '(line' → logprob: -9.547486305236816
    10. ',' → logprob: -9.797486305236816

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1878872513771057
    2. '()' → logprob: -1.937887191772461
    3. '().' → logprob: -3.687887191772461
    4. '());' → logprob: -6.687887191772461
    5. '()))' → logprob: -8.437887191772461
    6. '('' → logprob: -8.562887191772461
    7. '();)' → logprob: -8.812887191772461
    8. ')' → logprob: -9.187887191772461
    9. '("' → logprob: -9.687887191772461
    10. ' ())' → logprob: -10.187887191772461

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.816591434879228e-05
    2. 'strip' → logprob: -9.50008773803711
    3. 'rstrip' → logprob: -11.37508773803711
    4. ' split' → logprob: -13.37508773803711
    5. '(split' → logprob: -15.37508773803711
    6. 'spl' → logprob: -18.00008773803711
    7. 'read' → logprob: -18.25008773803711
    8. ')' → logprob: -18.62508773803711
    9. 'rs' → logprob: -18.75008773803711
    10. '```' → logprob: -19.00008773803711

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21776790916919708
    2. ')' → logprob: -1.9677679538726807
    3. '))' → logprob: -3.3427679538726807
    4. '()))' → logprob: -4.092767715454102
    5. '()' → logprob: -5.592767715454102
    6. '('' → logprob: -9.592767715454102
    7. '(' → logprob: -9.967767715454102
    8. ' ())' → logprob: -11.592767715454102
    9. '())
' → logprob: -12.092767715454102
    10. '')' → logprob: -12.592767715454102

Token 13: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2861924469470978
    2. '   ' → logprob: -2.4111924171447754
    3. 'if' (adapté à ' if') → logprob: -2.6611924171447754
    4. '<|end|>' → logprob: -3.4111924171447754
    5. ':' → logprob: -3.6611924171447754
    6. '```' → logprob: -5.036192417144775
    7. '\n' → logprob: -5.411192417144775
    8. ':
' → logprob: -5.536192417144775
    9. ')' → logprob: -5.661192417144775
    10. ' ' → logprob: -5.661192417144775

Token 15: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.01695072650909424
    2. 'w' → logprob: -4.891950607299805
    3. ' not' → logprob: -5.266950607299805
    4. ' ' → logprob: -5.516950607299805
    5. ' ' → logprob: -9.641950607299805
    6. 'not' → logprob: -10.516950607299805
    7. ' (' → logprob: -11.016950607299805
    8. '  ' → logprob: -12.266950607299805
    9. '(w' → logprob: -13.141950607299805
    10. ' d' → logprob: -13.391950607299805

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5345106720924377
    2. '==' → logprob: -1.034510612487793
    3. ' <' → logprob: -3.534510612487793
    4. '<' → logprob: -4.409510612487793
    5. ' <=' → logprob: -4.784510612487793
    6. ' >=' → logprob: -6.034510612487793
    7. '<=' → logprob: -6.409510612487793
    8. ' >' → logprob: -6.534510612487793
    9. '>' → logprob: -6.909510612487793
    10. ' ' → logprob: -7.284510612487793

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026747358962893486
    2. ' ' → logprob: -3.651747465133667
    3. 'd' → logprob: -7.776747226715088
    4. ' d' → logprob: -11.276747703552246
    5. '-' → logprob: -12.026747703552246
    6. '1' → logprob: -12.901747703552246
    7. '  ' → logprob: -13.776747703552246
    8. '   ' → logprob: -13.964247703552246
    9. '```' → logprob: -14.714247703552246
    10. ' -' → logprob: -15.089247703552246

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026827916502952576
    2. 'and' → logprob: -3.651827812194824
    3. ':' → logprob: -8.026827812194824
    4. ' or' → logprob: -8.776827812194824
    5. ' ' → logprob: -10.651827812194824
    6. '   ' → logprob: -11.526827812194824
    7. '	and' → logprob: -11.901827812194824
    8. '    ' → logprob: -13.151827812194824
    9. ' a' → logprob: -13.526827812194824
    10. ' ' → logprob: -14.151827812194824

Token 19: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011049000546336174
    2. 'd' → logprob: -4.511048793792725
    3. ' ' → logprob: -13.761049270629883
    4. '   ' → logprob: -16.011049270629883
    5. '	d' → logprob: -17.636049270629883
    6. '    ' → logprob: -17.886049270629883
    7. '  ' → logprob: -18.761049270629883
    8. ' ' → logprob: -19.011049270629883
    9. ' and' → logprob: -19.136049270629883
    10. ',d' → logprob: -19.136049270629883

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09617578238248825
    2. ' ==' → logprob: -2.4711756706237793
    3. '=' → logprob: -4.971175670623779
    4. ' ' → logprob: -9.971176147460938
    5. '<|end|>' → logprob: -9.971176147460938
    6. '>' → logprob: -10.596176147460938
    7. ' =' → logprob: -10.596176147460938
    8. ')' → logprob: -10.596176147460938
    9. ')==' → logprob: -11.221176147460938
    10. ']==' → logprob: -11.721176147460938

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '1' → logprob: -17.375179290771484
    4. '  ' → logprob: -17.812679290771484
    5. '   ' → logprob: -18.312679290771484
    6. '۰' → logprob: -18.625179290771484
    7. 'o' → logprob: -19.750179290771484
    8. '```' → logprob: -19.875179290771484
    9. ')' → logprob: -19.937679290771484
    10. '<|end|>' → logprob: -20.062679290771484

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005171707598492503
    2. '       ' → logprob: -8.500516891479492
    3. ':
' → logprob: -8.875516891479492
    4. '   ' → logprob: -9.125516891479492
    5. ' :' → logprob: -9.750516891479492
    6. '    ' → logprob: -13.000516891479492
    7. ':return' → logprob: -13.500516891479492
    8. '):' → logprob: -14.250516891479492
    9. '      ' → logprob: -15.000516891479492
    10. ':\' → logprob: -15.250516891479492

Token 23: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014569842256605625
    2. '   ' → logprob: -5.1395697593688965
    3. '\n' → logprob: -5.2645697593688965
    4. ' break' → logprob: -5.7645697593688965
    5. '	break' → logprob: -9.014570236206055
    6. '<|end|>' → logprob: -10.764570236206055
    7. '\' → logprob: -10.889570236206055
    8. ' ' → logprob: -11.014570236206055
    9. 'break' → logprob: -11.139570236206055
    10. '    ' → logprob: -11.139570236206055

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9765296578407288
    2. '\n' → logprob: -1.101529598236084
    3. '   ' → logprob: -1.601529598236084
    4. '    
' → logprob: -2.976529598236084
    5. '  
' → logprob: -4.726529598236084
    6. '<|end|>' → logprob: -4.726529598236084
    7. ' 
' → logprob: -5.226529598236084
    8. '\r' → logprob: -5.726529598236084
    9. 'n' → logprob: -5.851529598236084
    10. '\' → logprob: -6.351529598236084

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08855243772268295
    2. '\n' → logprob: -3.463552474975586
    3. '    
' → logprob: -3.838552474975586
    4. 'print' → logprob: -4.963552474975586
    5. 'n' → logprob: -5.213552474975586
    6. '
' → logprob: -5.213552474975586
    7. '<|end|>' → logprob: -5.463552474975586
    8. ')' → logprob: -6.338552474975586
    9. '  
' → logprob: -6.463552474975586
    10. '#' → logprob: -6.588552474975586

Token 26: ' front' (ID: 5567)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4799548387527466
    2. '\n' → logprob: -1.6049548387527466
    3. '    
' → logprob: -2.854954719543457
    4. 'n' → logprob: -3.979954719543457
    5. ' 
' → logprob: -3.979954719543457
    6. '
' → logprob: -3.979954719543457
    7. '    ' → logprob: -4.479954719543457
    8. '  
' → logprob: -4.854954719543457
    9. '\r' → logprob: -4.854954719543457
    10. 'print' → logprob: -4.979954719543457

Token 27: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5514310598373413
    2. ',' → logprob: -1.1764310598373413
    3. ' =' → logprob: -2.801431179046631
    4. ' ,' → logprob: -4.551431179046631
    5. 's' → logprob: -5.051431179046631
    6. '_' → logprob: -5.426431179046631
    7. '_weight' → logprob: -5.551431179046631
    8. '_length' → logprob: -5.801431179046631
    9. '_len' → logprob: -5.926431179046631
    10. '_w' → logprob: -6.176431179046631

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013194587081670761
    2. '(range' → logprob: -4.763194561004639
    3. '(map' → logprob: -6.638194561004639
    4. '()' → logprob: -6.638194561004639
    5. '(int' → logprob: -6.888194561004639
    6. '[int' → logprob: -8.013195037841797
    7. '(str' → logprob: -9.013195037841797
    8. '(input' → logprob: -9.138195037841797
    9. '([' → logprob: -10.138195037841797
    10. '[' → logprob: -10.138195037841797

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003718046355061233
    2. '(' → logprob: -8.000371932983398
    3. '[int' → logprob: -11.375371932983398
    4. '<int' → logprob: -11.750371932983398
    5. ')' → logprob: -12.000371932983398
    6. '=int' → logprob: -12.500371932983398
    7. ',int' → logprob: -13.250371932983398
    8. 'int' → logprob: -13.500371932983398
    9. '(lambda' → logprob: -13.875371932983398
    10. ']int' → logprob: -13.875371932983398

Token 30: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04522646218538284
    2. '(input' → logprob: -3.170226573944092
    3. ',' → logprob: -6.170226573944092
    4. ',int' → logprob: -9.420226097106934
    5. ' ,' → logprob: -10.920226097106934
    6. '(' → logprob: -11.045226097106934
    7. '=input' → logprob: -11.795226097106934
    8. '(),' → logprob: -12.795226097106934
    9. 'input' → logprob: -13.170226097106934
    10. '(int' → logprob: -13.295226097106934

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021093101531732827
    2. '()' → logprob: -8.500210762023926
    3. ' ().' → logprob: -12.250210762023926
    4. '(' → logprob: -13.750210762023926
    5. '()))' → logprob: -14.625210762023926
    6. '())' → logprob: -14.750210762023926
    7. '()).' → logprob: -15.250210762023926
    8. '.' → logprob: -15.750210762023926
    9. '(.' → logprob: -16.250211715698242
    10. '()
' → logprob: -17.375211715698242

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.370294846012257e-05
    2. 'strip' → logprob: -10.500043869018555
    3. ' split' → logprob: -11.125043869018555
    4. 'rstrip' → logprob: -14.500043869018555
    5. '(split' → logprob: -14.750043869018555
    6. ' ' → logprob: -16.500043869018555
    7. 's' → logprob: -16.625043869018555
    8. 'plit' → logprob: -16.750043869018555
    9. '_split' → logprob: -17.000043869018555
    10. 'spl' → logprob: -17.000043869018555

Token 33: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07569696754217148
    2. '())' → logprob: -2.8256969451904297
    3. '()' → logprob: -4.82569694519043
    4. '))' → logprob: -5.32569694519043
    5. ')' → logprob: -7.45069694519043
    6. '()))
' → logprob: -9.57569694519043
    7. '(' → logprob: -9.95069694519043
    8. '())))' → logprob: -11.07569694519043
    9. '()));' → logprob: -11.20069694519043
    10. '())
' → logprob: -12.82569694519043

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' side' (ID: 4307)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.2923910319805145
    2. ' back' → logprob: -2.417391061782837
    3. 'rear' → logprob: -2.542391061782837
    4. '   ' → logprob: -3.167391061782837
    5. '[' → logprob: -3.917391061782837
    6. 'front' → logprob: -5.042390823364258
    7. 'reverse' → logprob: -6.167390823364258
    8. '    
' → logprob: -6.667390823364258
    9. '```' → logprob: -7.042390823364258
    10. ' rear' → logprob: -7.167390823364258

Token 36: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25201916694641113
    2. '=list' → logprob: -1.5020191669464111
    3. ' =' → logprob: -9.627018928527832
    4. '=[]' → logprob: -11.502018928527832
    5. '=line' → logprob: -12.627018928527832
    6. '=int' → logprob: -13.252018928527832
    7. '=

' → logprob: -13.377018928527832
    8. '_=' → logprob: -13.502018928527832
    9. '=s' → logprob: -13.877018928527832
    10. ':list' → logprob: -14.502018928527832

Token 37: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14680680632591248
    2. '(map' → logprob: -2.0218067169189453
    3. '(int' → logprob: -5.771806716918945
    4. ' (' → logprob: -7.021806716918945
    5. '(
' → logprob: -10.021806716918945
    6. '(

' → logprob: -10.896806716918945
    7. '(list' → logprob: -11.646806716918945
    8. ')' → logprob: -12.396806716918945
    9. '(len' → logprob: -12.771806716918945
    10. '(eval' → logprob: -13.146806716918945

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.375538163818419e-05
    2. '(' → logprob: -10.625083923339844
    3. '<int' → logprob: -10.875083923339844
    4. '=int' → logprob: -11.000083923339844
    5. 'int' → logprob: -11.500083923339844
    6. '[int' → logprob: -11.625083923339844
    7. ',int' → logprob: -12.875083923339844
    8. ']int' → logprob: -13.375083923339844
    9. '<|end|>' → logprob: -16.000083923339844
    10. '(lambda' → logprob: -16.000083923339844

Token 39: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011668369174003601
    2. ',int' → logprob: -5.1366682052612305
    3. '=int' → logprob: -5.8866682052612305
    4. '<int' → logprob: -6.3866682052612305
    5. '[int' → logprob: -7.2616682052612305
    6. 'int' → logprob: -8.13666820526123
    7. ')' → logprob: -9.88666820526123
    8. ':int' → logprob: -10.01166820526123
    9. ']int' → logprob: -10.13666820526123
    10. '```' → logprob: -10.26166820526123

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -13.250003814697266
    3. '.' → logprob: -13.500003814697266
    4. ').' → logprob: -14.875003814697266
    5. ' ().' → logprob: -15.375003814697266
    6. '()).' → logprob: -16.250003814697266
    7. ' .' → logprob: -16.500003814697266
    8. '```' → logprob: -16.625003814697266
    9. '.split' → logprob: -17.625003814697266
    10. '.int' → logprob: -17.750003814697266

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ' split' → logprob: -14.375000953674316
    3. '(split' → logprob: -15.125000953674316
    4. 'spl' → logprob: -15.250000953674316
    5. '```' → logprob: -16.000001907348633
    6. ')' → logprob: -16.500001907348633
    7. '.split' → logprob: -17.250001907348633
    8. 'read' → logprob: -17.375001907348633
    9. 'plit' → logprob: -17.625001907348633
    10. 'strip' → logprob: -17.875001907348633

Token 42: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028419360518455505
    2. '))' → logprob: -4.403419494628906
    3. '())' → logprob: -4.653419494628906
    4. '()' → logprob: -5.153419494628906
    5. ')' → logprob: -7.903419494628906
    6. '()))
' → logprob: -10.028419494628906
    7. '()));' → logprob: -10.653419494628906
    8. '(' → logprob: -10.903419494628906
    9. '())))' → logprob: -12.778419494628906
    10. '())).' → logprob: -13.028419494628906

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051033440977334976
    2. '    
' → logprob: -4.1760334968566895
    3. '<|end|>' → logprob: -5.0510334968566895
    4. '\n' → logprob: -5.1760334968566895
    5. '[' → logprob: -5.5510334968566895
    6. '
' → logprob: -5.9260334968566895
    7. '\' → logprob: -6.3010334968566895
    8. '    ' → logprob: -6.3010334968566895
    9. ' if' → logprob: -6.5510334968566895
    10. ' 
' → logprob: -6.5510334968566895

Token 44: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3214851915836334
    2. 'valid' → logprob: -2.8214852809906006
    3. 'n' → logprob: -2.9464852809906006
    4. 'matrix' → logprob: -3.5714852809906006
    5. ' for' → logprob: -4.4464850425720215
    6. 'result' → logprob: -4.5714850425720215
    7. '```' → logprob: -4.5714850425720215
    8. 's' → logprob: -4.8214850425720215
    9. ' valid' → logprob: -4.9464850425720215
    10. ' matrix' → logprob: -5.0714850425720215

Token 45: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007326074875891209
    2. '('' → logprob: -5.757326126098633
    3. '(sum' → logprob: -6.382326126098633
    4. '(len' → logprob: -7.007326126098633
    5. '()' → logprob: -7.132326126098633
    6. '("' → logprob: -8.007326126098633
    7. '(max' → logprob: -8.507326126098633
    8. '((' → logprob: -9.507326126098633
    9. '("("' → logprob: -10.382326126098633
    10. '("")' → logprob: -11.132326126098633

Token 46: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16908393800258636
    2. '(front' → logprob: -2.169083833694458
    3. '([' → logprob: -3.669083833694458
    4. '(min' → logprob: -4.544084072113037
    5. '((' → logprob: -6.669084072113037
    6. '(s' → logprob: -7.544084072113037
    7. '(w' → logprob: -7.669084072113037
    8. '(abs' → logprob: -7.794084072113037
    9. '(max' → logprob: -7.794084072113037
    10. '(i' → logprob: -8.169083595275879

Token 47: '(front' (ID: 182066)
  Prédit: '(front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(front' → logprob: -0.046203065663576126
    2. '(' → logprob: -4.546203136444092
    3. '(w' → logprob: -4.671203136444092
    4. '(a' → logprob: -4.796203136444092
    5. '(x' → logprob: -5.046203136444092
    6. '(f' → logprob: -5.546203136444092
    7. '(s' → logprob: -6.046203136444092
    8. '(i' → logprob: -6.421203136444092
    9. '(side' → logprob: -6.921203136444092
    10. '((' → logprob: -8.046202659606934

Token 48: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09406156837940216
    2. '[d' → logprob: -3.0940616130828857
    3. '[' → logprob: -3.7190616130828857
    4. '[j' → logprob: -5.219061374664307
    5. ',' → logprob: -5.469061374664307
    6. '[x' → logprob: -5.594061374664307
    7. '[w' → logprob: -6.219061374664307
    8. ',d' → logprob: -6.344061374664307
    9. '[s' → logprob: -7.344061374664307
    10. '[k' → logprob: -7.469061374664307

Token 49: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5338181257247925
    2. ',d' → logprob: -1.1588181257247925
    3. ',j' → logprob: -3.533818244934082
    4. '[j' → logprob: -4.033818244934082
    5. '[d' → logprob: -4.158818244934082
    6. ',k' → logprob: -5.158818244934082
    7. '[i' → logprob: -5.283818244934082
    8. ',w' → logprob: -5.283818244934082
    9. ' ,' → logprob: -5.408818244934082
    10. '[' → logprob: -5.658818244934082

Token 50: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.42898255586624146
    2. ' side' → logprob: -1.0539824962615967
    3. ' ' → logprob: -8.803982734680176
    4. '   ' → logprob: -9.678982734680176
    5. '  ' → logprob: -10.928982734680176
    6. '	side' → logprob: -11.053982734680176
    7. '(side' → logprob: -11.178982734680176
    8. 's' → logprob: -12.678982734680176
    9. ')' → logprob: -12.866482734680176
    10. '-side' → logprob: -13.116482734680176

Token 51: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005450497264973819
    2. '[i' → logprob: -7.625545024871826
    3. '[' → logprob: -10.875545501708984
    4. '[k' → logprob: -11.000545501708984
    5. '[w' → logprob: -11.875545501708984
    6. ' [' → logprob: -12.625545501708984
    7. '[d' → logprob: -13.250545501708984
    8. 'j' → logprob: -13.625545501708984
    9. ')' → logprob: -13.750545501708984
    10. ' ' → logprob: -14.375545501708984

Token 52: '])' (ID: 4636)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2283334881067276
    2. '])' → logprob: -1.6033334732055664
    3. '][' → logprob: -6.353333473205566
    4. '[' → logprob: -7.978333473205566
    5. '[i' → logprob: -8.103333473205566
    6. ']' → logprob: -8.853333473205566
    7. ')' → logprob: -9.478333473205566
    8. '   ' → logprob: -9.728333473205566
    9. ']))' → logprob: -10.103333473205566
    10. '[k' → logprob: -10.603333473205566

Token 53: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3939577639102936
    2. ' for' → logprob: -1.6439577341079712
    3. 'for' → logprob: -3.1439578533172607
    4. '))' → logprob: -3.5189578533172607
    5. ' )' → logprob: -3.7689578533172607
    6. '[' → logprob: -3.8939578533172607
    7. '[j' → logprob: -4.893957614898682
    8. ' ' → logprob: -6.268957614898682
    9. '   ' → logprob: -6.518957614898682
    10. '[i' → logprob: -6.643957614898682

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0389862135052681
    2. ' j' → logprob: -3.4139862060546875
    3. 'i' → logprob: -6.0389862060546875
    4. '<|end|>' → logprob: -6.5389862060546875
    5. 'j' → logprob: -6.7889862060546875
    6. ' ' → logprob: -8.663986206054688
    7. '	i' → logprob: -8.663986206054688
    8. '<|end|>' → logprob: -11.913986206054688
    9. '	j' → logprob: -12.413986206054688
    10. ' ' → logprob: -12.413986206054688

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026924132835119963
    2. 'in' → logprob: -6.002692222595215
    3. ' ' → logprob: -9.252692222595215
    4. '<|end|>' → logprob: -9.252692222595215
    5. ' j' → logprob: -11.627692222595215
    6. ',j' → logprob: -12.252692222595215
    7. ',' → logprob: -13.127692222595215
    8. ')' → logprob: -13.252692222595215
    9. '	in' → logprob: -13.252692222595215
    10. '  ' → logprob: -14.127692222595215

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10023686289787292
    2. 'range' → logprob: -2.3502368927001953
    3. '(range' → logprob: -11.475236892700195
    4. ' xrange' → logprob: -11.475236892700195
    5. '	range' → logprob: -11.850236892700195
    6. ' ' → logprob: -13.225236892700195
    7. '<|end|>' → logprob: -16.350236892700195
    8. '_range' → logprob: -16.475236892700195
    9. '.range' → logprob: -16.725236892700195
    10. '  ' → logprob: -16.850236892700195

Token 57: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.32256168127059937
    2. '(' → logprob: -1.4475617408752441
    3. '(w' → logprob: -3.447561740875244
    4. '(len' → logprob: -5.072561740875244
    5. ' (' → logprob: -6.072561740875244
    6. '(
' → logprob: -10.072561264038086
    7. ')' → logprob: -10.072561264038086
    8. ' d' → logprob: -10.822561264038086
    9. '(s' → logprob: -11.447561264038086
    10. '(n' → logprob: -11.822561264038086

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020621151197701693
    2. ' )' → logprob: -6.2520623207092285
    3. '))' → logprob: -10.12706184387207
    4. ' ' → logprob: -11.12706184387207
    5. ',' → logprob: -11.50206184387207
    6. '   ' → logprob: -11.62706184387207
    7. ' for' → logprob: -11.75206184387207
    8. '),' → logprob: -11.87706184387207
    9. 'for' → logprob: -11.87706184387207
    10. ')
' → logprob: -12.12706184387207

Token 59: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5214734673500061
    2. '   ' → logprob: -1.3964734077453613
    3. ' for' → logprob: -2.7714734077453613
    4. '       ' → logprob: -3.7714734077453613
    5. '    ' → logprob: -4.271473407745361
    6. '),' → logprob: -5.021473407745361
    7. 'for' → logprob: -5.021473407745361
    8. '          ' → logprob: -5.021473407745361
    9. '  ' → logprob: -5.271473407745361
    10. ' ' → logprob: -5.396473407745361

Token 60: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.002268493641167879
    2. 'j' → logprob: -6.877268314361572
    3. ' w' → logprob: -6.877268314361572
    4. ' ' → logprob: -8.87726879119873
    5. '<|end|>' → logprob: -10.50226879119873
    6. ' range' → logprob: -11.12726879119873
    7. '  ' → logprob: -12.25226879119873
    8. ')' → logprob: -12.25226879119873
    9. 'w' → logprob: -12.37726879119873
    10. '	j' → logprob: -13.12726879119873

Token 61: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' range' (ID: 3352)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.18827511370182037
    2. 'w' → logprob: -2.438275098800659
    3. ' range' → logprob: -2.813275098800659
    4. '(w' → logprob: -3.938275098800659
    5. 'range' → logprob: -5.688275337219238
    6. '<w' → logprob: -7.438275337219238
    7. '	w' → logprob: -7.688275337219238
    8. '[w' → logprob: -8.813275337219238
    9. ' xrange' → logprob: -10.688275337219238
    10. ' ' → logprob: -10.813275337219238

Token 63: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0002790935104712844
    2. '(' → logprob: -8.250279426574707
    3. ' (' → logprob: -11.250279426574707
    4. 'w' → logprob: -13.875279426574707
    5. ')' → logprob: -14.375279426574707
    6. '(d' → logprob: -14.500279426574707
    7. '(W' → logprob: -14.625279426574707
    8. '   ' → logprob: -14.875279426574707
    9. '	w' → logprob: -15.375279426574707
    10. '(n' → logprob: -15.375279426574707

Token 64: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.03228754550218582
    2. ')' → logprob: -4.03228759765625
    3. '))' → logprob: -4.28228759765625
    4. '))))' → logprob: -9.15728759765625
    5. ' ' → logprob: -9.53228759765625
    6. ')))
' → logprob: -10.90728759765625
    7. '   ' → logprob: -11.28228759765625
    8. ')));' → logprob: -12.53228759765625
    9. ' )' → logprob: -12.65728759765625
    10. '  ' → logprob: -13.65728759765625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 51.61%
Précision adaptée (1ère position): 51.61%
Précision (top 10): 82.26%
================================================================================
