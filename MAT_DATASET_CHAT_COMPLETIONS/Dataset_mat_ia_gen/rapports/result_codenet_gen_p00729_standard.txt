================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

def merge_intervals(intervals):
    merged = []
    for start, end in sorted(intervals):
        if merged and merged[-1][1] >= start:
            merged[-1][1] = max(merged[-1][1], end)
        else:
            merged.append([start, end])
    return merged

def interval_overlap(interval, start, end):
    s, e = interval
    if e <= start or s >= end:
        return 0
    return min(e, end) - max(s, start)

input = sys.stdin.readline

while True:
    N, M = map(int, input().split())
    if N == 0 and M == 0:
        break
    r = int(input())
    logins = {}  # (pc) -> (student, login_time)
    usage = {m: [] for m in range(1, M+1)}
    for _ in range(r):
        t, n, m, s = map(int, input().split())
        if s == 1:  # login
            logins[n] = (m, t)
        else:  # logout
            stu, tin = logins.pop(n)
            usage[stu].append([tin, t])
    # merge intervals per student
    for m in usage:
        usage[m] = merge_intervals(usage[m])
    q = int(input())
    for _ in range(q):
        ts, te, m = map(int, input().split())
        intervals = usage.get(m, [])
        total = 0
        # intervals sorted, can binary search for start
        idx = bisect.bisect_left(intervals, [ts, ts])
        # check previous interval as well
        if idx > 0:
            idx -= 1
        for i in range(idx, len(intervals)):
            s, e = intervals[i]
            if s >= te:
                break
            if e <= ts:
                continue
            total += interval_overlap([s,e], ts, te)
        print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3002793490886688
    2. '\n' → logprob: -1.5502793788909912
    3. '<|end|>' → logprob: -3.675279378890991
    4. '\' → logprob: -4.925279140472412
    5. 'newline' → logprob: -5.675279140472412
    6. 'import' → logprob: -5.675279140472412
    7. '<|end|>' → logprob: -6.050279140472412
    8. '
' → logprob: -6.925279140472412
    9. '```' → logprob: -6.925279140472412
    10. '' → logprob: -7.675279140472412

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.7432603272027336e-06
    2. 'ec' → logprob: -14.125001907348633
    3. 't' → logprob: -15.125001907348633
    4. 'e' → logprob: -15.250001907348633
    5. 'ected' → logprob: -15.625001907348633
    6. 'ection' → logprob: -16.250001907348633
    7. 'ectl' → logprob: -17.500001907348633
    8. 'ex' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. 'truct' → logprob: -18.250001907348633

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24884159862995148
    2. '<|end|>' → logprob: -2.9988415241241455
    3. '
' → logprob: -3.3738415241241455
    4. '\n' → logprob: -3.4988415241241455
    5. '\' → logprob: -3.7488415241241455
    6. '' → logprob: -3.8738415241241455
    7. '

' → logprob: -3.9988415241241455
    8. 'import' → logprob: -4.123841762542725
    9. 'newline' → logprob: -4.873841762542725
    10. '```' → logprob: -5.373841762542725

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2353571653366089
    2. 'def' → logprob: -1.4853571653366089
    3. '
' → logprob: -1.7353571653366089
    4. '\n' → logprob: -2.3603572845458984
    5. '

' → logprob: -2.7353572845458984
    6. '```' → logprob: -3.2353572845458984
    7. 'import' → logprob: -3.7353572845458984
    8. '\' → logprob: -4.235357284545898
    9. '`' → logprob: -4.610357284545898
    10. '' → logprob: -4.860357284545898

Token 8: ' merge' (ID: 20345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08908865600824356
    2. '_' → logprob: -3.0890886783599854
    3. ' find' → logprob: -4.214088439941406
    4. ' binary' → logprob: -4.839088439941406
    5. ' space' → logprob: -5.339088439941406
    6. ' calculate' → logprob: -5.839088439941406
    7. ' _' → logprob: -6.714088439941406
    8. ' predict' → logprob: -6.964088439941406
    9. ' insert' → logprob: -7.464088439941406
    10. ' factorial' → logprob: -7.839088439941406

Token 9: '_inter' (ID: 16818)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.5462024807929993
    2. '_' → logprob: -1.0462024211883545
    3. '_arrays' → logprob: -3.4212024211883545
    4. '_sorted' → logprob: -4.921202659606934
    5. '_list' → logprob: -5.046202659606934
    6. '(' → logprob: -5.046202659606934
    7. '_items' → logprob: -6.046202659606934
    8. '_two' → logprob: -6.296202659606934
    9. '(_' → logprob: -6.296202659606934
    10. '(a' → logprob: -6.421202659606934

Token 10: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.005970389116555452
    2. 'val' → logprob: -5.130970478057861
    3. '```' → logprob: -11.130970001220703
    4. '_val' → logprob: -12.005970001220703
    5. ' vals' → logprob: -12.380970001220703
    6. 'sections' → logprob: -12.380970001220703
    7. 'v' → logprob: -12.630970001220703
    8. 'values' → logprob: -13.255970001220703
    9. '_' → logprob: -14.255970001220703
    10. 'views' → logprob: -14.380970001220703

Token 11: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008873839862644672
    2. '_' → logprob: -4.75887393951416
    3. ' (' → logprob: -9.38387393951416
    4. '[' → logprob: -10.25887393951416
    5. '```' → logprob: -10.25887393951416
    6. '_(' → logprob: -11.50887393951416
    7. '(_' → logprob: -11.75887393951416
    8. 's' → logprob: -11.88387393951416
    9. '_merge' → logprob: -12.25887393951416
    10. '_list' → logprob: -12.38387393951416

Token 12: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.537868779967539e-06
    2. ')s' → logprob: -12.625008583068848
    3. ')' → logprob: -13.125008583068848
    4. '_list' → logprob: -13.500008583068848
    5. '):' → logprob: -14.250008583068848
    6. '_' → logprob: -15.000008583068848
    7. ',' → logprob: -15.375008583068848
    8. '_s' → logprob: -15.750008583068848
    9. ' s' → logprob: -16.12500762939453
    10. '```' → logprob: -16.75000762939453

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01603272557258606
    2. '[' → logprob: -4.641032695770264
    3. ')' → logprob: -5.266032695770264
    4. '[]):' → logprob: -7.641032695770264
    5. ':' → logprob: -8.016033172607422
    6. '<|end|>' → logprob: -9.391033172607422
    7. ',' → logprob: -9.766033172607422
    8. ']:' → logprob: -10.391033172607422
    9. '):
' → logprob: -10.766033172607422
    10. '```' → logprob: -11.891033172607422

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08782140910625458
    2. ':' → logprob: -2.9628214836120605
    3. '[' → logprob: -4.0878214836120605
    4. '(' → logprob: -4.5878214836120605
    5. '(interval' → logprob: -6.2128214836120605
    6. '():' → logprob: -7.4628214836120605
    7. '[]' → logprob: -7.4628214836120605
    8. '[:]' → logprob: -7.8378214836120605
    9. '):' → logprob: -8.087821006774902
    10. '_' → logprob: -8.462821006774902

Token 15: ' merged' (ID: 49536)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8085330128669739
    2. '   ' → logprob: -0.9335330128669739
    3. 'if' → logprob: -3.058532953262329
    4. ' intervals' → logprob: -3.308532953262329
    5. ' sorted' → logprob: -3.433532953262329
    6. 'interval' → logprob: -4.558533191680908
    7. 'sorted' → logprob: -4.558533191680908
    8. ' ' → logprob: -5.058533191680908
    9. '    ' → logprob: -5.183533191680908
    10. '"' → logprob: -5.808533191680908

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5730382800102234
    2. '_' → logprob: -0.9480382800102234
    3. ' ' → logprob: -3.948038339614868
    4. '=' → logprob: -4.573038101196289
    5. '[:]' → logprob: -5.448038101196289
    6. '.append' → logprob: -5.823038101196289
    7. '[' → logprob: -5.823038101196289
    8. '.' → logprob: -6.198038101196289
    9. '[]' → logprob: -6.323038101196289
    10. '=[]' → logprob: -6.823038101196289

Token 17: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16033826768398285
    2. '[]' → logprob: -1.910338282585144
    3. ' ' → logprob: -9.160338401794434
    4. '[' → logprob: -12.410338401794434
    5. ' []
' → logprob: -13.160338401794434
    6. '   ' → logprob: -14.285338401794434
    7. '  ' → logprob: -14.410338401794434
    8. ' [' → logprob: -14.910338401794434
    9. ' []
' → logprob: -15.410338401794434
    10. '[]
' → logprob: -15.410338401794434

Token 18: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0126705169677734
    2. ' 
' → logprob: -1.7626705169677734
    3. '   ' → logprob: -1.8876705169677734
    4. ' sorted' → logprob: -1.8876705169677734
    5. ' if' → logprob: -3.5126705169677734
    6. '    
' → logprob: -3.7626705169677734
    7. '    ' → logprob: -4.012670516967773
    8. '     
' → logprob: -4.012670516967773
    9. ' intervals' → logprob: -4.137670516967773
    10. 'for' → logprob: -4.262670516967773

Token 19: ' for' (ID: 395)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.37023672461509705
    2. ' for' → logprob: -2.12023663520813
    3. ' intervals' → logprob: -2.24523663520813
    4. 'for' (adapté à ' for') → logprob: -2.49523663520813
    5. 'sorted' → logprob: -8.12023639678955
    6. ' sorted' → logprob: -8.24523639678955
    7. '   ' → logprob: -8.49523639678955
    8. ' interval' → logprob: -9.24523639678955
    9. 'if' → logprob: -9.99523639678955
    10. ' if' → logprob: -10.12023639678955

Token 20: ' start' (ID: 1604)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.002517158165574074
    2. 'interval' → logprob: -6.002517223358154
    3. ' i' → logprob: -11.377516746520996
    4. ' start' → logprob: -11.752516746520996
    5. ' ' → logprob: -12.002516746520996
    6. '(interval' → logprob: -12.252516746520996
    7. '   ' → logprob: -12.627516746520996
    8. '_interval' → logprob: -13.377516746520996
    9. ' intervalo' → logprob: -13.877516746520996
    10. 'Interval' → logprob: -14.002516746520996

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010977147612720728
    2. ' ,' → logprob: -6.876097679138184
    3. ' in' → logprob: -10.626097679138184
    4. '_,' → logprob: -11.376097679138184
    5. ' ' → logprob: -11.751097679138184
    6. ',in' → logprob: -12.501097679138184
    7. '<|end|>' → logprob: -12.876097679138184
    8. ',end' → logprob: -13.001097679138184
    9. '‌,' → logprob: -13.626097679138184
    10. ',next' → logprob: -13.876097679138184

Token 22: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.2519313097000122
    2. 'end' → logprob: -1.5019313097000122
    3. '	end' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '=end' → logprob: -15.126931190490723
    6. ',end' → logprob: -15.751931190490723
    7. '_end' → logprob: -15.876931190490723
    8. '   ' → logprob: -16.25193214416504
    9. '>end' → logprob: -16.50193214416504
    10. '[end' → logprob: -17.25193214416504

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00300777330994606
    2. 'in' → logprob: -6.253007888793945
    3. ',' → logprob: -7.628007888793945
    4. ' ' → logprob: -8.128007888793945
    5. '    ' → logprob: -9.253007888793945
    6. '   ' → logprob: -9.628007888793945
    7. '<|end|>' → logprob: -9.628007888793945
    8. '_in' → logprob: -11.128007888793945
    9. '  ' → logprob: -11.128007888793945
    10. '	in' → logprob: -11.378007888793945

Token 24: ' sorted' (ID: 20099)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.3133357763290405
    2. 'interval' → logprob: -1.3133357763290405
    3. '(interval' → logprob: -10.563335418701172
    4. ' sorted' → logprob: -10.813335418701172
    5. ' ' → logprob: -11.313335418701172
    6. ' interval' → logprob: -11.688335418701172
    7. 'sorted' → logprob: -12.313335418701172
    8. '   ' → logprob: -13.688335418701172
    9. '[]' → logprob: -15.188335418701172
    10. ' in' → logprob: -15.438335418701172

Token 25: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.00038443657103925943
    2. 'interval' → logprob: -7.875384330749512
    3. '(' → logprob: -12.750384330749512
    4. ' (' → logprob: -14.125384330749512
    5. ' intervals' → logprob: -14.500384330749512
    6. '```' → logprob: -15.750384330749512
    7. '((' → logprob: -17.875385284423828
    8. '(inter' → logprob: -18.375385284423828
    9. 'Intervals' → logprob: -18.375385284423828
    10. '(in' → logprob: -18.875385284423828

Token 26: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010866894444916397
    2. ' s' → logprob: -9.50010871887207
    3. ')s' → logprob: -11.12510871887207
    4. ')' → logprob: -11.75010871887207
    5. '   ' → logprob: -12.75010871887207
    6. ',' → logprob: -13.75010871887207
    7. '(s' → logprob: -13.87510871887207
    8. '       ' → logprob: -14.37510871887207
    9. '),' → logprob: -14.62510871887207
    10. '```' → logprob: -14.62510871887207

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009868424385786057
    2. ' ):' → logprob: -7.7509870529174805
    3. '):
' → logprob: -8.62598705291748
    4. ',' → logprob: -8.75098705291748
    5. ':' → logprob: -9.12598705291748
    6. ')' → logprob: -9.62598705291748
    7. '   ' → logprob: -10.75098705291748
    8. '[]):' → logprob: -12.37598705291748
    9. ']:' → logprob: -12.50098705291748
    10. '):
' → logprob: -12.62598705291748

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024508053436875343
    2. ':' → logprob: -4.774507999420166
    3. '    ' → logprob: -5.024507999420166
    4. '        ' → logprob: -6.399507999420166
    5. ' :' → logprob: -6.524507999420166
    6. '   ' → logprob: -6.649507999420166
    7. ',' → logprob: -7.274507999420166
    8. '):' → logprob: -7.524507999420166
    9. '<|end|>' → logprob: -7.899507999420166
    10. '        
' → logprob: -7.899507999420166

Token 29: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.040777307003736496
    2. 'if' (adapté à ' if') → logprob: -3.9157772064208984
    3. '        ' → logprob: -4.665777206420898
    4. '       ' → logprob: -5.165777206420898
    5. '    ' → logprob: -5.415777206420898
    6. '   ' → logprob: -8.415777206420898
    7. ' ' → logprob: -8.790777206420898
    8. ' while' → logprob: -10.790777206420898
    9. '     ' → logprob: -11.165777206420898
    10. '```' → logprob: -11.165777206420898

Token 30: ' merged' (ID: 49536)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.013242701068520546
    2. 'not' → logprob: -4.388242721557617
    3. ' merged' → logprob: -7.388242721557617
    4. 'merged' → logprob: -9.138242721557617
    5. '	not' → logprob: -12.513242721557617
    6. ' ' → logprob: -13.388242721557617
    7. '(not' → logprob: -14.138242721557617
    8. ' len' → logprob: -14.763242721557617
    9. '<|end|>' → logprob: -16.138242721557617
    10. '!' → logprob: -16.513242721557617

Token 31: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16028718650341034
    2. 'and' → logprob: -1.9102871417999268
    3. ' ' → logprob: -10.410286903381348
    4. '	and' → logprob: -11.535286903381348
    5. '==' → logprob: -12.035286903381348
    6. '   ' → logprob: -12.035286903381348
    7. '=' → logprob: -13.535286903381348
    8. '  ' → logprob: -13.910286903381348
    9. ' &&' → logprob: -14.160286903381348
    10. '       ' → logprob: -14.160286903381348

Token 32: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.11374995112419128
    2. 'merged' → logprob: -2.2387499809265137
    3. ' start' → logprob: -7.738749980926514
    4. 'end' → logprob: -8.488749504089355
    5. ' end' → logprob: -8.488749504089355
    6. 'start' → logprob: -9.488749504089355
    7. ' ' → logprob: -13.238749504089355
    8. 'Merged' → logprob: -13.613749504089355
    9. ' merg' → logprob: -14.363749504089355
    10. 'erged' → logprob: -16.113750457763672

Token 33: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.625001907348633
    3. '-' → logprob: -15.625001907348633
    4. ' [-' → logprob: -17.000001907348633
    5. '][-' → logprob: -17.125001907348633
    6. '[
' → logprob: -17.625001907348633
    7. ' ' → logprob: -18.000001907348633
    8. '```' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.500001907348633
    10. ''s' → logprob: -19.500001907348633

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012705412693321705
    2. '[' → logprob: -5.137705326080322
    3. '][' → logprob: -5.637705326080322
    4. ' ' → logprob: -5.887705326080322
    5. ']' → logprob: -8.51270580291748
    6. ' [' → logprob: -9.38770580291748
    7. 'end' → logprob: -10.38770580291748
    8. '   ' → logprob: -11.38770580291748
    9. '```' → logprob: -11.51270580291748
    10. ''][' → logprob: -11.63770580291748

Token 35: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017813296290114522
    2. '][' → logprob: -6.376781463623047
    3. ' [' → logprob: -10.501781463623047
    4. ' ][' → logprob: -11.376781463623047
    5. ')[' → logprob: -11.876781463623047
    6. '```' → logprob: -12.001781463623047
    7. ' ' → logprob: -12.501781463623047
    8. ''][' → logprob: -12.626781463623047
    9. '.' → logprob: -12.626781463623047
    10. '>[' → logprob: -12.876781463623047

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -14.12500286102295
    3. '
' → logprob: -14.75000286102295
    4. '

' → logprob: -15.00000286102295
    5. ' ' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.75000286102295
    7. '>' → logprob: -15.93750286102295
    8. '' → logprob: -16.562501907348633
    9. 'end' → logprob: -16.687501907348633
    10. '``' → logprob: -16.812501907348633

Token 37: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.21782293915748596
    2. '>=' → logprob: -1.7178229093551636
    3. ']>=' → logprob: -4.342823028564453
    4. ')>=' → logprob: -6.092823028564453
    5. ' ' → logprob: -7.467823028564453
    6. ')' → logprob: -8.842823028564453
    7. ']' → logprob: -9.592823028564453
    8. '>' → logprob: -9.592823028564453
    9. '">' → logprob: -10.217823028564453
    10. '<|end|>' → logprob: -10.467823028564453

Token 38: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3510846197605133
    2. ' >=' → logprob: -1.226084589958191
    3. ']>=' → logprob: -6.3510847091674805
    4. ')>=' → logprob: -7.3510847091674805
    5. ' ' → logprob: -8.85108470916748
    6. '>' → logprob: -10.60108470916748
    7. '">' → logprob: -10.72608470916748
    8. '≥' → logprob: -11.35108470916748
    9. ')' → logprob: -11.60108470916748
    10. '  ' → logprob: -12.10108470916748

Token 39: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6931489109992981
    2. 'start' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.568148612976074
    4. 'star' → logprob: -16.44314956665039
    5. ' star' → logprob: -16.44314956665039
    6. '	start' → logprob: -16.56814956665039
    7. 'end' → logprob: -17.69314956665039
    8. '_start' → logprob: -17.94314956665039
    9. '   ' → logprob: -18.19314956665039
    10. '=start' → logprob: -18.19314956665039

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002626192755997181
    2. ' :' → logprob: -6.252626419067383
    3. '       ' → logprob: -7.752626419067383
    4. ':
' → logprob: -8.502626419067383
    5. '):' → logprob: -10.502626419067383
    6. '           ' → logprob: -12.002626419067383
    7. ':end' → logprob: -12.127626419067383
    8. '   ' → logprob: -12.877626419067383
    9. '        ' → logprob: -13.127626419067383
    10. '':' → logprob: -13.252626419067383

Token 41: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44901716709136963
    2. '           ' → logprob: -1.0740171670913696
    3. ' :' → logprob: -4.07401704788208
    4. '       ' → logprob: -6.57401704788208
    5. ':
' → logprob: -7.32401704788208
    6. '        ' → logprob: -8.449017524719238
    7. ':end' → logprob: -8.699017524719238
    8. '            ' → logprob: -9.074017524719238
    9. '          ' → logprob: -9.199017524719238
    10. '0' → logprob: -9.824017524719238

Token 42: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.2847261428833008
    2. 'merged' (adapté à ' merged') → logprob: -1.4097261428833008
    3. '           ' → logprob: -6.159726142883301
    4. ' max' → logprob: -7.159726142883301
    5. 'max' → logprob: -8.0347261428833
    6. '               ' → logprob: -8.7847261428833
    7. 'Merged' → logprob: -10.0347261428833
    8. '1' → logprob: -10.1597261428833
    9. ' =' → logprob: -10.9097261428833
    10. '[' → logprob: -11.0347261428833

Token 43: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00013166792632546276
    2. '[' → logprob: -9.000131607055664
    3. '][-' → logprob: -12.500131607055664
    4. ' [-' → logprob: -13.125131607055664
    5. '           ' → logprob: -14.375131607055664
    6. '-' → logprob: -14.750131607055664
    7. '=' → logprob: -14.875131607055664
    8. '[:-' → logprob: -15.000131607055664
    9. '   ' → logprob: -15.125131607055664
    10. '       ' → logprob: -16.000131607055664

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.047134305234067e-05
    2. ' ' → logprob: -10.500030517578125
    3. '[' → logprob: -14.000030517578125
    4. '-' → logprob: -14.187530517578125
    5. '   ' → logprob: -14.750030517578125
    6. '][' → logprob: -15.625030517578125
    7. '```' → logprob: -16.125030517578125
    8. '  ' → logprob: -16.437530517578125
    9. '2' → logprob: -16.625030517578125
    10. ']' → logprob: -16.687530517578125

Token 45: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2877454161643982
    2. '[' → logprob: -1.412745475769043
    3. ' ][' → logprob: -5.912745475769043
    4. ']' → logprob: -6.287745475769043
    5. '   ' → logprob: -7.537745475769043
    6. ')[' → logprob: -7.912745475769043
    7. ' [' → logprob: -8.162745475769043
    8. ' ' → logprob: -8.787745475769043
    9. '=' → logprob: -9.287745475769043
    10. ' =' → logprob: -9.287745475769043

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '
' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.875012397766113
    4. '```' → logprob: -14.000012397766113
    5. '[' → logprob: -14.625012397766113
    6. '>' → logprob: -14.750012397766113
    7. '   ' → logprob: -15.250012397766113
    8. '
' → logprob: -15.562512397766113
    9. ']' → logprob: -15.562512397766113
    10. '	' → logprob: -15.625012397766113

Token 47: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699496641755104
    2. '=' → logprob: -2.6949496269226074
    3. ')' → logprob: -11.819950103759766
    4. ']' → logprob: -12.819950103759766
    5. '=max' → logprob: -13.444950103759766
    6. ' =
' → logprob: -15.194950103759766
    7. '<|end|>' → logprob: -15.319950103759766
    8. ']=' → logprob: -15.319950103759766
    9. ' =)' → logprob: -15.319950103759766
    10. ',' → logprob: -15.569950103759766

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889143377542496
    2. '=' → logprob: -2.5788915157318115
    3. '=max' → logprob: -14.32889175415039
    4. ' =
' → logprob: -15.20389175415039
    5. ' ' → logprob: -15.45389175415039
    6. '=end' → logprob: -15.57889175415039
    7. ' =)' → logprob: -16.32889175415039
    8. '<|end|>' → logprob: -16.95389175415039
    9. '	' → logprob: -17.07889175415039
    10. ',' → logprob: -17.07889175415039

Token 49: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09650438278913498
    2. ' max' → logprob: -2.5965044498443604
    3. 'end' → logprob: -4.096504211425781
    4. ' end' → logprob: -7.096504211425781
    5. '	max' → logprob: -14.471504211425781
    6. '(max' → logprob: -15.221504211425781
    7. ' ' → logprob: -15.721504211425781
    8. '   ' → logprob: -15.971504211425781
    9. 'min' → logprob: -16.22150421142578
    10. '=max' → logprob: -16.22150421142578

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008848914876580238
    2. 'merged' → logprob: -5.258849143981934
    3. '(end' → logprob: -5.883849143981934
    4. ' merged' → logprob: -7.508849143981934
    5. ' (' → logprob: -8.258849143981934
    6. '(
' → logprob: -12.258849143981934
    7. 'Merged' → logprob: -12.383849143981934
    8. 'end' → logprob: -13.008849143981934
    9. '(interval' → logprob: -13.633849143981934
    10. '(

' → logprob: -13.758849143981934

Token 51: 'merged' (ID: 66277)
  Prédit: 'merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.4372781813144684
    2. ' merged' → logprob: -1.687278151512146
    3. 'end' → logprob: -1.937278151512146
    4. ' end' → logprob: -3.6872782707214355
    5. '[end' → logprob: -11.312277793884277
    6. '           ' → logprob: -11.687277793884277
    7. '	end' → logprob: -12.437277793884277
    8. '(end' → logprob: -12.562277793884277
    9. ')' → logprob: -12.687277793884277
    10. 'merge' → logprob: -13.062277793884277

Token 52: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002702760975807905
    2. '[' → logprob: -8.375269889831543
    3. '][-' → logprob: -11.375269889831543
    4. '-' → logprob: -11.625269889831543
    5. ' ' → logprob: -12.875269889831543
    6. '   ' → logprob: -12.875269889831543
    7. '```' → logprob: -13.125269889831543
    8. ')' → logprob: -13.250269889831543
    9. '`' → logprob: -13.500269889831543
    10. ' [-' → logprob: -13.625269889831543

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008673549629747868
    2. '-' → logprob: -4.758673667907715
    3. '[-' → logprob: -10.758673667907715
    4. '0' → logprob: -11.008673667907715
    5. '[' → logprob: -11.133673667907715
    6. ']' → logprob: -13.383673667907715
    7. ' -' → logprob: -13.758673667907715
    8. ' ' → logprob: -14.133673667907715
    9. '][-' → logprob: -14.133673667907715
    10. 'token' → logprob: -15.133673667907715

Token 54: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010615098290145397
    2. '[' → logprob: -7.00106143951416
    3. ' ][' → logprob: -9.12606143951416
    4. ']' → logprob: -10.62606143951416
    5. ')][' → logprob: -12.62606143951416
    6. ''][' → logprob: -12.62606143951416
    7. '   ' → logprob: -13.00106143951416
    8. ')[' → logprob: -13.50106143951416
    9. ']][' → logprob: -13.62606143951416
    10. ' ' → logprob: -13.75106143951416

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.250015258789062
    4. '[' → logprob: -15.750015258789062
    5. ']' → logprob: -15.875015258789062
    6. '
' → logprob: -16.125015258789062
    7. '```' → logprob: -16.250015258789062
    8. '0' → logprob: -16.875015258789062
    9. ')' → logprob: -17.187515258789062
    10. '-' → logprob: -17.625015258789062

Token 56: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012806518003344536
    2. ' ,' → logprob: -4.887806415557861
    3. ',end' → logprob: -5.262806415557861
    4. 'end' → logprob: -12.88780689239502
    5. '),' → logprob: -13.76280689239502
    6. ')' → logprob: -14.63780689239502
    7. ' end' → logprob: -14.88780689239502
    8. '[end' → logprob: -15.01280689239502
    9. ' ' → logprob: -15.13780689239502
    10. '   ' → logprob: -16.387805938720703

Token 57: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.04858850687742233
    2. 'end' → logprob: -3.048588514328003
    3. '	end' → logprob: -15.423588752746582
    4. '[end' → logprob: -15.798588752746582
    5. '_end' → logprob: -15.923588752746582
    6. '(end' → logprob: -16.048587799072266
    7. ''end' → logprob: -16.048587799072266
    8. '=end' → logprob: -16.048587799072266
    9. ' ' → logprob: -16.798587799072266
    10. '.end' → logprob: -17.173587799072266

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009108719415962696
    2. ')
' → logprob: -5.134108543395996
    3. '       ' → logprob: -5.759108543395996
    4. ' )' → logprob: -11.259108543395996
    5. ')
' → logprob: -12.509108543395996
    6. ')

' → logprob: -13.759108543395996
    7. '   ' → logprob: -14.759108543395996
    8. ')return' → logprob: -15.259108543395996
    9. '):
' → logprob: -15.259108543395996
    10. ' )
' → logprob: -15.384108543395996

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055993106216192245
    2. ' else' → logprob: -5.380599498748779
    3. 'else' → logprob: -7.005599498748779
    4. '
' → logprob: -10.880599021911621
    5. '<|end|>' → logprob: -11.630599021911621
    6. '      ' → logprob: -11.755599021911621
    7. '   ' → logprob: -11.880599021911621
    8. ')' → logprob: -12.130599021911621
    9. '	else' → logprob: -12.130599021911621
    10. '        
' → logprob: -12.380599021911621

Token 60: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6250941753387451
    2. 'else' (adapté à ' else') → logprob: -1.0000941753387451
    3. '       ' → logprob: -2.375094175338745
    4. ')' → logprob: -6.875094413757324
    5. '	else' → logprob: -7.625094413757324
    6. '   ' → logprob: -7.875094413757324
    7. '        ' → logprob: -8.125094413757324
    8. ':' → logprob: -8.125094413757324
    9. '<|end|>' → logprob: -8.250094413757324
    10. '[' → logprob: -8.250094413757324

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06192600354552269
    2. '           ' → logprob: -3.3119258880615234
    3. ' :' → logprob: -4.311925888061523
    4. '       ' → logprob: -5.936925888061523
    5. '.append' → logprob: -6.061925888061523
    6. '        ' → logprob: -6.686925888061523
    7. '[' → logprob: -6.936925888061523
    8. '   ' → logprob: -7.311925888061523
    9. ',' → logprob: -7.436925888061523
    10. '<|end|>' → logprob: -7.811925888061523

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2323569357395172
    2. ' merged' → logprob: -1.6073569059371948
    3. 'merged' → logprob: -4.982357025146484
    4. ' ' → logprob: -11.232357025146484
    5. 'Merged' → logprob: -11.232357025146484
    6. '            
' → logprob: -11.857357025146484
    7. '[' → logprob: -12.357357025146484
    8. '   ' → logprob: -12.482357025146484
    9. '	       ' → logprob: -12.982357025146484
    10. '```' → logprob: -12.982357025146484

Token 63: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.062031541019678116
    2. 'merged' (adapté à ' merged') → logprob: -2.8120315074920654
    3. '           ' → logprob: -9.812031745910645
    4. '   ' → logprob: -12.437031745910645
    5. '[' → logprob: -12.937031745910645
    6. ' [' → logprob: -13.312031745910645
    7. 'Merged' → logprob: -14.937031745910645
    8. '       ' → logprob: -15.187031745910645
    9. ' ' → logprob: -15.187031745910645
    10. '    ' → logprob: -16.062030792236328

Token 64: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006749955005943775
    2. '.' → logprob: -5.006750106811523
    3. '.setdefault' → logprob: -11.256750106811523
    4. ').' → logprob: -11.631750106811523
    5. '.app' → logprob: -12.881750106811523
    6. ' .' → logprob: -13.131750106811523
    7. '.Append' → logprob: -13.256750106811523
    8. '.push' → logprob: -13.381750106811523
    9. '.extend' → logprob: -13.506750106811523
    10. '.add' → logprob: -14.006750106811523

Token 65: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00044092073221690953
    2. '((' → logprob: -8.37544059753418
    3. '(' → logprob: -8.62544059753418
    4. '[' → logprob: -11.25044059753418
    5. '(([' → logprob: -11.37544059753418
    6. '[(' → logprob: -12.75044059753418
    7. '([(' → logprob: -13.87544059753418
    8. '(
' → logprob: -14.62544059753418
    9. '(interval' → logprob: -14.62544059753418
    10. '[start' → logprob: -14.75044059753418

Token 66: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.512236498361744e-07
    2. ' start' → logprob: -14.625000953674316
    3. '[start' → logprob: -19.875
    4. '   ' → logprob: -20.25
    5. 'star' → logprob: -20.75
    6. ' ' → logprob: -23.0
    7. '	start' → logprob: -23.0
    8. '(start' → logprob: -23.0
    9. 's' → logprob: -23.25
    10. '  ' → logprob: -23.625

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ',
' → logprob: -13.75000286102295
    3. ',end' → logprob: -13.87500286102295
    4. ' ,' → logprob: -15.12500286102295
    5. ',

' → logprob: -16.375001907348633
    6. '‌,' → logprob: -18.125001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. '،' → logprob: -19.250001907348633
    9. ',int' → logprob: -19.625001907348633
    10. ',start' → logprob: -19.750001907348633

Token 68: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3132616877555847
    2. ' end' → logprob: -1.3132617473602295
    3. ' ' → logprob: -19.063261032104492
    4. '	end' → logprob: -19.688261032104492
    5. '[end' → logprob: -20.188261032104492
    6. '(end' → logprob: -20.438261032104492
    7. ''end' → logprob: -20.438261032104492
    8. ',end' → logprob: -21.063261032104492
    9. '   ' → logprob: -21.313261032104492
    10. '=end' → logprob: -21.438261032104492

Token 69: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005586316110566258
    2. ')' → logprob: -7.625558853149414
    3. '])
' → logprob: -9.625558853149414
    4. ']' → logprob: -12.875558853149414
    5. '))' → logprob: -14.875558853149414
    6. ')
' → logprob: -14.875558853149414
    7. ' ])' → logprob: -14.875558853149414
    8. ')]' → logprob: -15.125558853149414
    9. ')])' → logprob: -15.375558853149414
    10. '   ' → logprob: -16.250558853149414

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4268161654472351
    2. '   ' → logprob: -1.3018162250518799
    3. 'return' → logprob: -3.05181622505188
    4. ' return' → logprob: -4.176815986633301
    5. '    
' → logprob: -5.301815986633301
    6. ' ' → logprob: -6.301815986633301
    7. '\n' → logprob: -6.801815986633301
    8. ' 
' → logprob: -6.926815986633301
    9. '  
' → logprob: -7.301815986633301
    10. ':return' → logprob: -7.301815986633301

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6763259768486023
    2. '
' → logprob: -2.176326036453247
    3. ' return' → logprob: -2.176326036453247
    4. '   ' → logprob: -2.801326036453247
    5. '\n' → logprob: -3.051326036453247
    6. ')' → logprob: -3.301326036453247
    7. '<|end|>' → logprob: -3.301326036453247
    8. 'r' → logprob: -4.051325798034668
    9. ' 
' → logprob: -4.301325798034668
    10. '```' → logprob: -4.426325798034668

Token 72: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.12693022191524506
    2. 'merged' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.501930236816406
    4. '[' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.251930236816406
    6. 'Merged' → logprob: -16.126930236816406
    7. 'merge' → logprob: -16.626930236816406
    8. '   ' → logprob: -17.376930236816406
    9. 'mer' → logprob: -17.876930236816406
    10. ' merge' → logprob: -18.126930236816406

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24033239483833313
    2. '
' → logprob: -1.6153323650360107
    3. '#' → logprob: -4.99033260345459
    4. '```' → logprob: -5.86533260345459
    5. '

' → logprob: -6.61533260345459
    6. '[' → logprob: -6.86533260345459
    7. '<|end|>' → logprob: -7.24033260345459
    8. ' def' → logprob: -7.49033260345459
    9. 'class' → logprob: -7.86533260345459
    10. '[
' → logprob: -8.61533260345459

Token 75: ' interval' (ID: 17116)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.655861496925354
    2. ' insert' → logprob: -0.905861496925354
    3. ' binary' → logprob: -3.2808613777160645
    4. ' search' → logprob: -3.7808613777160645
    5. ' bis' → logprob: -5.1558613777160645
    6. ' add' → logprob: -5.4058613777160645
    7. ' main' → logprob: -6.5308613777160645
    8. ' merge' → logprob: -7.0308613777160645
    9. ' get' → logprob: -7.7808613777160645
    10. ' insertion' → logprob: -8.155861854553223

Token 76: '_overlap' (ID: 179163)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3887275159358978
    2. '_search' → logprob: -1.5137275457382202
    3. 's' → logprob: -2.8887274265289307
    4. '_s' → logprob: -4.51372766494751
    5. '_contains' → logprob: -4.51372766494751
    6. '_overlap' → logprob: -5.01372766494751
    7. '_query' → logprob: -5.38872766494751
    8. '_insert' → logprob: -5.63872766494751
    9. '_tree' → logprob: -6.26372766494751
    10. '_merge' → logprob: -6.63872766494751

Token 77: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04449702799320221
    2. 's' → logprob: -3.169497013092041
    3. '(interval' → logprob: -7.419497013092041
    4. '(a' → logprob: -8.1694974899292
    5. '_' → logprob: -8.7944974899292
    6. ' (' → logprob: -8.9194974899292
    7. '(s' → logprob: -9.1694974899292
    8. '_list' → logprob: -10.5444974899292
    9. '_inter' → logprob: -10.6694974899292
    10. '(_' → logprob: -10.6694974899292

Token 78: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08232121914625168
    2. '):' → logprob: -2.7073211669921875
    3. ',' → logprob: -4.7073211669921875
    4. ')' → logprob: -6.0823211669921875
    5. '1' → logprob: -8.207321166992188
    6. '_' → logprob: -8.582321166992188
    7. ')s' → logprob: -8.707321166992188
    8. ' ):' → logprob: -9.582321166992188
    9. 'a' → logprob: -10.082321166992188
    10. '[' → logprob: -10.082321166992188

Token 79: ' start' (ID: 1604)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.31215402483940125
    2. 'interval' → logprob: -1.5621540546417236
    3. ' interval' → logprob: -3.0621540546417236
    4. ' other' → logprob: -4.6871538162231445
    5. 'other' → logprob: -7.4371538162231445
    6. ')' → logprob: -7.5621538162231445
    7. '(interval' → logprob: -8.187153816223145
    8. ' new' → logprob: -8.562153816223145
    9. '   ' → logprob: -8.812153816223145
    10. 'inter' → logprob: -9.312153816223145

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011547473259270191
    2. ',end' → logprob: -7.501154899597168
    3. '):' → logprob: -7.626154899597168
    4. ' ,' → logprob: -10.001154899597168
    5. ')' → logprob: -11.376154899597168
    6. ',start' → logprob: -11.626154899597168
    7. ',int' → logprob: -11.751154899597168
    8. ' ):' → logprob: -11.751154899597168
    9. ' ' → logprob: -12.376154899597168
    10. '=' → logprob: -13.126154899597168

Token 81: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6931501030921936
    2. ' end' → logprob: -0.6931501030921936
    3. ' ' → logprob: -13.693150520324707
    4. '	end' → logprob: -14.443150520324707
    5. '_end' → logprob: -14.693150520324707
    6. '=end' → logprob: -15.443150520324707
    7. ''end' → logprob: -15.693150520324707
    8. '   ' → logprob: -16.06814956665039
    9. ',end' → logprob: -16.56814956665039
    10. '[end' → logprob: -16.94314956665039

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.3358446166384965e-05
    2. ')' → logprob: -10.375053405761719
    3. ' ):' → logprob: -11.625053405761719
    4. ',' → logprob: -12.125053405761719
    5. '):
' → logprob: -12.375053405761719
    6. ':' → logprob: -12.875053405761719
    7. '   ' → logprob: -15.000053405761719
    8. ']:' → logprob: -15.250053405761719
    9. '[]):' → logprob: -16.50005340576172
    10. '):
' → logprob: -16.75005340576172

Token 83: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.431162565946579
    2. '   ' → logprob: -1.4311625957489014
    3. '):' → logprob: -2.3061625957489014
    4. ' :' → logprob: -4.806162357330322
    5. ',' → logprob: -6.806162357330322
    6. ')' → logprob: -7.556162357330322
    7. ':return' → logprob: -7.931162357330322
    8. ':
' → logprob: -8.93116283416748
    9. ' ):' → logprob: -9.18116283416748
    10. '():' → logprob: -9.18116283416748

Token 84: ' s' (ID: 265)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1497689038515091
    2. '   ' → logprob: -2.149768829345703
    3. 'return' → logprob: -3.899768829345703
    4. ' ' → logprob: -6.899768829345703
    5. '    ' → logprob: -7.649768829345703
    6. ' if' → logprob: -9.024768829345703
    7. ' start' → logprob: -9.024768829345703
    8. ' (' → logprob: -9.274768829345703
    9. ')' → logprob: -9.274768829345703
    10. ' 
' → logprob: -9.649768829345703

Token 85: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017005808651447296
    2. ',' → logprob: -4.767005920410156
    3. 'tar' → logprob: -5.142005920410156
    4. ' <=' → logprob: -7.267005920410156
    5. ' =' → logprob: -8.017005920410156
    6. ' ' → logprob: -8.142005920410156
    7. '=' → logprob: -8.392005920410156
    8. ' tart' → logprob: -8.517005920410156
    9. ' tar' → logprob: -8.892005920410156
    10. ' t' → logprob: -9.017005920410156

Token 86: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011049704626202583
    2. ' e' → logprob: -4.511049747467041
    3. ' ' → logprob: -14.136049270629883
    4. '	e' → logprob: -14.636049270629883
    5. 't' → logprob: -14.761049270629883
    6. 'es' → logprob: -15.886049270629883
    7. '   ' → logprob: -16.261049270629883
    8. 'f' → logprob: -16.886049270629883
    9. 's' → logprob: -17.386049270629883
    10. ' t' → logprob: -17.761049270629883

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07956686615943909
    2. '=' → logprob: -2.5795669555664062
    3. ',' → logprob: -7.329566955566406
    4. ')' → logprob: -12.329566955566406
    5. '  ' → logprob: -12.454566955566406
    6. ' ' → logprob: -12.704566955566406
    7. ' ,' → logprob: -12.829566955566406
    8. '_' → logprob: -13.954566955566406
    9. '   ' → logprob: -13.954566955566406
    10. '[' → logprob: -14.204566955566406

Token 88: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.2014366239309311
    2. 'interval' → logprob: -1.7014366388320923
    3. '(interval' → logprob: -11.576436996459961
    4. ' ' → logprob: -12.701436996459961
    5. '   ' → logprob: -12.701436996459961
    6. '0' → logprob: -13.076436996459961
    7. '    ' → logprob: -13.451436996459961
    8. ' intervalo' → logprob: -13.701436996459961
    9. ' intervals' → logprob: -14.201436996459961
    10. '[' → logprob: -14.576436996459961

Token 89: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012419236823916435
    2. '<|end|>' → logprob: -4.6374192237854
    3. '<|end|>' → logprob: -7.5124192237854
    4. ' ' → logprob: -7.7624192237854
    5. ',' → logprob: -8.262419700622559
    6. '0' → logprob: -8.387419700622559
    7. 's' → logprob: -8.637419700622559
    8. '
' → logprob: -8.762419700622559
    9. 'def' → logprob: -8.762419700622559
    10. '[]' → logprob: -9.387419700622559

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00698519591242075
    2. ' >=' → logprob: -6.131985187530518
    3. '    
' → logprob: -6.381985187530518
    4. '
' → logprob: -6.881985187530518
    5. '[' → logprob: -7.506985187530518
    6. '>=' → logprob: -8.381985664367676
    7. ' if' → logprob: -8.506985664367676
    8. 'return' → logprob: -9.006985664367676
    9. ' 
' → logprob: -9.131985664367676
    10. ' and' → logprob: -9.256985664367676

Token 91: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012703172862529755
    2. ' return' → logprob: -5.262702941894531
    3. '    
' → logprob: -6.137702941894531
    4. '    ' → logprob: -6.637702941894531
    5. 'return' → logprob: -6.637702941894531
    6. ' 
' → logprob: -7.012702941894531
    7. ')' → logprob: -7.637702941894531
    8. ' ' → logprob: -8.012702941894531
    9. '  ' → logprob: -8.262702941894531
    10. ' if' → logprob: -8.512702941894531

Token 92: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.43855348229408264
    2. 'e' → logprob: -1.4385534524917603
    3. ' s' → logprob: -2.56355357170105
    4. 's' → logprob: -3.93855357170105
    5. ' not' → logprob: -4.188553333282471
    6. ' end' → logprob: -6.188553333282471
    7. 'end' → logprob: -6.563553333282471
    8. ' max' → logprob: -6.938553333282471
    9. '   ' → logprob: -7.313553333282471
    10. 'not' → logprob: -7.688553333282471

Token 93: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.34750568866729736
    2. '>=' → logprob: -1.4725056886672974
    3. ' <' → logprob: -3.472505569458008
    4. '<' → logprob: -4.222505569458008
    5. '>' → logprob: -4.597505569458008
    6. ' ' → logprob: -5.347505569458008
    7. ' >' → logprob: -5.722505569458008
    8. '   ' → logprob: -8.847505569458008
    9. '  ' → logprob: -8.847505569458008
    10. '[' → logprob: -10.972505569458008

Token 94: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04860281944274902
    2. ' start' → logprob: -3.048602819442749
    3. ' ' → logprob: -11.423603057861328
    4. 's' → logprob: -13.048603057861328
    5. '	start' → logprob: -14.298603057861328
    6. '[start' → logprob: -14.423603057861328
    7. '=start' → logprob: -14.923603057861328
    8. '  ' → logprob: -15.173603057861328
    9. '<|end|>' → logprob: -15.673603057861328
    10. '    ' → logprob: -15.798603057861328

Token 95: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00029494395130313933
    2. ':' → logprob: -8.50029468536377
    3. 'or' → logprob: -9.50029468536377
    4. ' ' → logprob: -11.62529468536377
    5. '	or' → logprob: -13.12529468536377
    6. ':
' → logprob: -13.25029468536377
    7. ':return' → logprob: -13.37529468536377
    8. '<|end|>' → logprob: -14.37529468536377
    9. '   ' → logprob: -14.50029468536377
    10. ' :' → logprob: -15.12529468536377

Token 96: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.217457577586174
    2. ' s' → logprob: -1.7174575328826904
    3. '   ' → logprob: -4.9674577713012695
    4. 'end' → logprob: -5.2174577713012695
    5. ' end' → logprob: -5.8424577713012695
    6. 'e' → logprob: -8.46745777130127
    7. '    ' → logprob: -8.59245777130127
    8. ' ' → logprob: -8.96745777130127
    9. '  ' → logprob: -10.71745777130127
    10. 'interval' → logprob: -11.96745777130127

Token 97: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5270382165908813
    2. '>=' → logprob: -0.9020382165908813
    3. '>' → logprob: -6.152038097381592
    4. ' >' → logprob: -6.527038097381592
    5. ' ' → logprob: -9.15203857421875
    6. '<|end|>' → logprob: -9.27703857421875
    7. ']>=' → logprob: -10.52703857421875
    8. ')>=' → logprob: -10.52703857421875
    9. '   ' → logprob: -11.15203857421875
    10. '>end' → logprob: -11.65203857421875

Token 98: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.029751529917120934
    2. ' end' → logprob: -3.5297515392303467
    3. ' ' → logprob: -15.154751777648926
    4. '	end' → logprob: -15.154751777648926
    5. '=end' → logprob: -15.529751777648926
    6. '   ' → logprob: -15.904751777648926
    7. '(end' → logprob: -16.27975082397461
    8. '[end' → logprob: -16.27975082397461
    9. '>end' → logprob: -17.52975082397461
    10. '_end' → logprob: -17.52975082397461

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03269800916314125
    2. ':
' → logprob: -4.032698154449463
    3. ':return' → logprob: -4.532698154449463
    4. ' :' → logprob: -5.907698154449463
    5. '   ' → logprob: -7.532698154449463
    6. ' :
' → logprob: -8.032697677612305
    7. '       ' → logprob: -10.032697677612305
    8. ' return' → logprob: -10.657697677612305
    9. ' ' → logprob: -11.532697677612305
    10. '	return' → logprob: -11.782697677612305

Token 100: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11372856795787811
    2. '       ' → logprob: -2.4887285232543945
    3. ' False' → logprob: -3.9887285232543945
    4. 'False' → logprob: -5.7387285232543945
    5. ' return' → logprob: -5.9887285232543945
    6. '    ' → logprob: -9.363728523254395
    7. ' True' → logprob: -10.113728523254395
    8. 'return' → logprob: -10.488728523254395
    9. '0' → logprob: -10.488728523254395
    10. ' None' → logprob: -11.613728523254395

Token 101: ' return' (ID: 622)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.1663583368062973
    2. 'False' → logprob: -2.166358232498169
    3. '       ' → logprob: -4.041358470916748
    4. ' return' → logprob: -4.416358470916748
    5. '   ' → logprob: -5.041358470916748
    6. ' True' → logprob: -6.791358470916748
    7. 'return' (adapté à ' return') → logprob: -7.291358470916748
    8. ' 
' → logprob: -8.54135799407959
    9. '    ' → logprob: -8.91635799407959
    10. '0' → logprob: -9.16635799407959

Token 102: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25248482823371887
    2. ' False' → logprob: -1.5024847984313965
    3. '0' → logprob: -7.5024847984313965
    4. ' ' → logprob: -12.502485275268555
    5. '(False' → logprob: -16.752485275268555
    6. '   ' → logprob: -17.002485275268555
    7. 'None' → logprob: -18.127485275268555
    8. ' None' → logprob: -19.002485275268555
    9. '=False' → logprob: -19.127485275268555
    10. 'F' → logprob: -19.252485275268555

Token 103: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.2166411478538066e-05
    2. ' False' → logprob: -10.250052452087402
    3. '0' → logprob: -11.000052452087402
    4. '(False' → logprob: -21.375051498413086
    5. ' ' → logprob: -21.875051498413086
    6. 'false' → logprob: -22.125051498413086
    7. 'None' → logprob: -22.500051498413086
    8. '   ' → logprob: -22.500051498413086
    9. 'FALSE' → logprob: -23.250051498413086
    10. 'F' → logprob: -23.375051498413086

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049104250967502594
    2. '
' → logprob: -3.2991042137145996
    3. '    
' → logprob: -4.7991042137146
    4. '<|end|>' → logprob: -6.6741042137146
    5. '  
' → logprob: -7.4241042137146
    6. '\n' → logprob: -8.424104690551758
    7. '  ' → logprob: -8.799104690551758
    8. '   
' → logprob: -8.924104690551758
    9. ' 
' → logprob: -9.299104690551758
    10. '    ' → logprob: -9.674104690551758

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016726844012737274
    2. '
' → logprob: -4.141726970672607
    3. '    
' → logprob: -7.391726970672607
    4. '<|end|>' → logprob: -10.64172649383545
    5. '  
' → logprob: -10.89172649383545
    6. 'return' → logprob: -11.39172649383545
    7. ' return' → logprob: -12.26672649383545
    8. '1' → logprob: -13.14172649383545
    9. '       ' → logprob: -13.26672649383545
    10. '   
' → logprob: -13.39172649383545

Token 106: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3884263038635254
    2. '
' → logprob: -1.6384263038635254
    3. ' return' → logprob: -2.5134263038635254
    4. 'return' (adapté à ' return') → logprob: -3.5134263038635254
    5. '    
' → logprob: -4.513426303863525
    6. '  
' → logprob: -6.138426303863525
    7. ' 
' → logprob: -6.138426303863525
    8. '	return' → logprob: -7.263426303863525
    9. '\n' → logprob: -8.638425827026367
    10. '   
' → logprob: -8.763425827026367

Token 107: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07889077812433243
    2. ' min' → logprob: -2.578890800476074
    3. '(min' → logprob: -14.953890800476074
    4. 'max' → logprob: -15.328890800476074
    5. '	min' → logprob: -15.328890800476074
    6. ' ' → logprob: -16.703889846801758
    7. '   ' → logprob: -16.953889846801758
    8. '1' → logprob: -17.078889846801758
    9. ' max' → logprob: -17.828889846801758
    10. '[min' → logprob: -17.828889846801758

Token 108: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0004952482995577157
    2. '(end' → logprob: -7.625495433807373
    3. '(' → logprob: -12.125494956970215
    4. 'e' → logprob: -13.500494956970215
    5. ' (' → logprob: -14.875494956970215
    6. 'end' → logprob: -17.50049591064453
    7. '(interval' → logprob: -18.12549591064453
    8. ' ' → logprob: -19.12549591064453
    9. '((' → logprob: -19.12549591064453
    10. '(
' → logprob: -19.25049591064453

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016934091225266457
    2. ',end' → logprob: -4.266933917999268
    3. ' ,' → logprob: -5.891933917999268
    4. 'end' → logprob: -12.516934394836426
    5. ' end' → logprob: -14.641934394836426
    6. ',
' → logprob: -15.266934394836426
    7. '(end' → logprob: -15.391934394836426
    8. ')' → logprob: -15.641934394836426
    9. ',e' → logprob: -15.641934394836426
    10. ' ' → logprob: -15.891934394836426

Token 110: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31326642632484436
    2. ' end' → logprob: -1.313266396522522
    3. '(end' → logprob: -13.31326675415039
    4. '[end' → logprob: -13.81326675415039
    5. ' ' → logprob: -14.56326675415039
    6. ',end' → logprob: -14.68826675415039
    7. '	end' → logprob: -14.93826675415039
    8. '=end' → logprob: -15.18826675415039
    9. '_end' → logprob: -15.93826675415039
    10. ')' → logprob: -15.93826675415039

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007402998744510114
    2. ' )' → logprob: -7.2507405281066895
    3. ')-' → logprob: -10.875740051269531
    4. ' -' → logprob: -11.625740051269531
    5. ',' → logprob: -14.125740051269531
    6. '   ' → logprob: -14.250740051269531
    7. '-' → logprob: -14.375740051269531
    8. '-)' → logprob: -15.625740051269531
    9. ' ' → logprob: -16.12574005126953
    10. '),' → logprob: -16.50074005126953

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004273565486073494
    2. '-' → logprob: -5.504273414611816
    3. '-start' → logprob: -8.754273414611816
    4. ',' → logprob: -11.254273414611816
    5. ')' → logprob: -11.879273414611816
    6. ' ' → logprob: -12.254273414611816
    7. ' ' → logprob: -12.629273414611816
    8. 's' → logprob: -12.629273414611816
    9. ' ,' → logprob: -13.129273414611816
    10. '-end' → logprob: -14.254273414611816

Token 113: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.067680723965168
    2. ' max' → logprob: -2.817680835723877
    3. 'min' → logprob: -5.192680835723877
    4. ' min' → logprob: -8.942680358886719
    5. 'start' → logprob: -12.192680358886719
    6. 's' → logprob: -13.567680358886719
    7. '	max' → logprob: -13.817680358886719
    8. '(max' → logprob: -14.067680358886719
    9. ',max' → logprob: -15.567680358886719
    10. ' ' → logprob: -15.817680358886719

Token 114: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00027182576013728976
    2. '(' → logprob: -8.250271797180176
    3. 's' → logprob: -11.500271797180176
    4. '(start' → logprob: -14.750271797180176
    5. ' (' → logprob: -18.375272750854492
    6. '(
' → logprob: -18.625272750854492
    7. 'start' → logprob: -19.000272750854492
    8. '(

' → logprob: -19.000272750854492
    9. '(S' → logprob: -19.250272750854492
    10. '<|end|>' → logprob: -19.375272750854492

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014807011932134628
    2. ')' → logprob: -4.764807224273682
    3. '(start' → logprob: -5.889807224273682
    4. ',start' → logprob: -5.889807224273682
    5. 'start' → logprob: -8.639806747436523
    6. '[start' → logprob: -8.764806747436523
    7. '(' → logprob: -8.889806747436523
    8. '[' → logprob: -9.639806747436523
    9. ' ,' → logprob: -10.139806747436523
    10. 's' → logprob: -10.264806747436523

Token 116: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0005561320576816797
    2. ' start' → logprob: -7.500555992126465
    3. 's' → logprob: -12.750555992126465
    4. '[start' → logprob: -15.875555992126465
    5. ')' → logprob: -16.87555694580078
    6. '(start' → logprob: -17.00055694580078
    7. ' ' → logprob: -18.00055694580078
    8. '	start' → logprob: -18.25055694580078
    9. '=start' → logprob: -18.87555694580078
    10. '_start' → logprob: -19.25055694580078

Token 117: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.375
    4. ')return' → logprob: -18.25
    5. '   ' → logprob: -18.375
    6. ')

' → logprob: -18.75
    7. '}' → logprob: -18.75
    8. '<|end|>' → logprob: -19.125
    9. ')#' → logprob: -19.625
    10. '))' → logprob: -19.75

Token 118: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020890454470645636
    2. '
' → logprob: -8.500208854675293
    3. ' def' → logprob: -12.875208854675293
    4. '

' → logprob: -14.125208854675293
    5. 'class' → logprob: -14.375208854675293
    6. '  
' → logprob: -15.000208854675293
    7. 'de' → logprob: -15.375208854675293
    8. '```' → logprob: -15.375208854675293
    9. '    
' → logprob: -15.625208854675293
    10. ' 
' → logprob: -15.875208854675293

Token 119: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3641812801361084
    2. '_lines' → logprob: -1.4891812801361084
    3. '_data' → logprob: -1.6141812801361084
    4. '_line' → logprob: -1.8641812801361084
    5. '_' → logprob: -2.1141812801361084
    6. ' =' → logprob: -3.9891812801361084
    7. 's' → logprob: -4.4891815185546875
    8. '_text' → logprob: -4.7391815185546875
    9. '_list' → logprob: -6.1141815185546875
    10. '_str' → logprob: -7.2391815185546875

Token 120: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03027106076478958
    2. 'sys' → logprob: -3.530271053314209
    3. ' ' → logprob: -8.155271530151367
    4. ' []' → logprob: -9.030271530151367
    5. '[]' → logprob: -10.780271530151367
    6. '=sys' → logprob: -10.905271530151367
    7. '(sys' → logprob: -10.905271530151367
    8. '	sys' → logprob: -11.030271530151367
    9. '[' → logprob: -11.405271530151367
    10. ' input' → logprob: -11.655271530151367

Token 121: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010468624532222748
    2. '.stdin' → logprob: -7.501046657562256
    3. '.readline' → logprob: -8.751047134399414
    4. ' .' → logprob: -9.501047134399414
    5. '.stdout' → logprob: -9.751047134399414
    6. '[' → logprob: -9.876047134399414
    7. '.input' → logprob: -10.501047134399414
    8. '.argv' → logprob: -10.626047134399414
    9. 'import' → logprob: -11.501047134399414
    10. '.​' → logprob: -11.501047134399414

Token 122: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06591053307056427
    2. '.' → logprob: -2.815910577774048
    3. '.readlines' → logprob: -6.065910339355469
    4. '.read' → logprob: -6.440910339355469
    5. 'read' → logprob: -11.065910339355469
    6. ' readline' → logprob: -13.690910339355469
    7. '.buffer' → logprob: -13.940910339355469
    8. '.write' → logprob: -15.190910339355469
    9. ' .' → logprob: -15.315910339355469
    10. '```' → logprob: -15.440910339355469

Token 123: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048084188252687454
    2. '()
' → logprob: -3.548084259033203
    3. '
' → logprob: -4.048084259033203
    4. '()

' → logprob: -7.923084259033203
    5. '().' → logprob: -9.048084259033203
    6. '()\' → logprob: -9.548084259033203
    7. '(' → logprob: -10.298084259033203
    8. '(
' → logprob: -11.048084259033203
    9. '<|end|>' → logprob: -11.423084259033203
    10. 'def' → logprob: -11.548084259033203

Token 124: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004217182286083698
    2. 'N' → logprob: -7.004217147827148
    3. 't' → logprob: -7.129217147827148
    4. ' n' → logprob: -7.379217147827148
    5. 'Q' → logprob: -7.504217147827148
    6. 'q' → logprob: -8.129217147827148
    7. 'num' → logprob: -8.129217147827148
    8. 'def' → logprob: -8.379217147827148
    9. '
' → logprob: -8.754217147827148
    10. '_' → logprob: -8.879217147827148

Token 125: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.000639765290543437
    2. ' ' → logprob: -8.000639915466309
    3. 'True' → logprob: -8.250639915466309
    4. ' input' → logprob: -10.750639915466309
    5. '(True' → logprob: -10.875639915466309
    6. ' (' → logprob: -14.000639915466309
    7. ' line' → logprob: -14.625639915466309
    8. ' not' → logprob: -14.875639915466309
    9. ' true' → logprob: -15.375639915466309
    10. '1' → logprob: -16.125638961791992

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002552592661231756
    2. '():' → logprob: -6.252552509307861
    3. ' :' → logprob: -7.502552509307861
    4. ':
' → logprob: -10.12755298614502
    5. ',' → logprob: -11.37755298614502
    6. '):' → logprob: -11.50255298614502
    7. ':**' → logprob: -12.62755298614502
    8. '(' → logprob: -12.87755298614502
    9. '   ' → logprob: -13.87755298614502
    10. '():
' → logprob: -14.12755298614502

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01864629238843918
    2. ' ' → logprob: -4.768646240234375
    3. ' line' → logprob: -4.768646240234375
    4. '    
' → logprob: -8.143646240234375
    5. '    ' → logprob: -8.268646240234375
    6. '  ' → logprob: -8.643646240234375
    7. ' ,' → logprob: -8.768646240234375
    8. ' try' → logprob: -8.893646240234375
    9. ' readline' → logprob: -9.518646240234375
    10. ' input' → logprob: -9.643646240234375

Token 128: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0038348750676959753
    2. 'line' → logprob: -5.8788347244262695
    3. ' n' → logprob: -7.1288347244262695
    4. ' try' → logprob: -9.00383472442627
    5. ' l' → logprob: -10.00383472442627
    6. 'n' → logprob: -10.75383472442627
    7. ' data' → logprob: -11.50383472442627
    8. ' s' → logprob: -11.62883472442627
    9. '   ' → logprob: -11.75383472442627
    10. 'try' → logprob: -12.62883472442627

Token 129: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019536202773451805
    2. '=' → logprob: -4.019536018371582
    3. ' ' → logprob: -6.644536018371582
    4. ',' → logprob: -10.269536018371582
    5. '=int' → logprob: -11.144536018371582
    6. ' ,' → logprob: -11.269536018371582
    7. ' >' → logprob: -11.769536018371582
    8. ' =
' → logprob: -12.644536018371582
    9. '    ' → logprob: -12.769536018371582
    10. '   ' → logprob: -13.519536018371582

Token 130: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.08377564698457718
    2. 'M' → logprob: -2.708775758743286
    3. ' =' → logprob: -5.708775520324707
    4. ' ' → logprob: -5.708775520324707
    5. '_' → logprob: -5.958775520324707
    6. ' K' → logprob: -6.083775520324707
    7. '=' → logprob: -7.708775520324707
    8. 'K' → logprob: -8.208775520324707
    9. ' _' → logprob: -8.208775520324707
    10. ' Q' → logprob: -8.458775520324707

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021012276411057
    2. '=' → logprob: -2.350210189819336
    3. ' ' → logprob: -12.725210189819336
    4. ',' → logprob: -15.225210189819336
    5. '=input' → logprob: -16.225210189819336
    6. ')' → logprob: -16.475210189819336
    7. '=line' → logprob: -17.350210189819336
    8. ' ' → logprob: -17.475210189819336
    9. ' ,' → logprob: -17.975210189819336
    10. '    ' → logprob: -18.350210189819336

Token 132: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08819703012704849
    2. 'map' → logprob: -2.5881969928741455
    3. ' input' → logprob: -4.838197231292725
    4. 'input' → logprob: -6.963197231292725
    5. ' sys' → logprob: -8.463196754455566
    6. ' list' → logprob: -9.338196754455566
    7. ' ' → logprob: -9.838196754455566
    8. 'list' → logprob: -11.088196754455566
    9. '(map' → logprob: -11.588196754455566
    10. 'sys' → logprob: -12.088196754455566

Token 133: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.070986308157444
    2. '(input' → logprob: -3.195986270904541
    3. '(int' → logprob: -3.945986270904541
    4. '(str' → logprob: -4.820986270904541
    5. '(list' → logprob: -9.4459867477417
    6. '(lambda' → logprob: -9.8209867477417
    7. '(eval' → logprob: -10.8209867477417
    8. '(sys' → logprob: -10.9459867477417
    9. ' (' → logprob: -11.9459867477417
    10. '(
' → logprob: -12.1959867477417

Token 134: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.034872058779001236
    2. '(sys' → logprob: -3.409872055053711
    3. '(' → logprob: -7.409872055053711
    4. ',input' → logprob: -7.909872055053711
    5. 'input' → logprob: -8.534872055053711
    6. 'sys' → logprob: -10.909872055053711
    7. '=input' → logprob: -11.909872055053711
    8. ')' → logprob: -12.284872055053711
    9. '[input' → logprob: -12.534872055053711
    10. ' (' → logprob: -12.659872055053711

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142561197280884
    2. ' input' → logprob: -1.701425552368164
    3. 'sys' → logprob: -11.576425552368164
    4. ' sys' → logprob: -13.076425552368164
    5. 'str' → logprob: -14.576425552368164
    6. '(input' → logprob: -15.451425552368164
    7. '=input' → logprob: -16.451425552368164
    8. ')' → logprob: -16.576425552368164
    9. ',input' → logprob: -17.201425552368164
    10. ' ' → logprob: -17.826425552368164

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001093841710826382
    2. '()' → logprob: -9.125109672546387
    3. ' ().' → logprob: -15.750109672546387
    4. '())' → logprob: -16.62510871887207
    5. '()
' → logprob: -17.12510871887207
    6. '.strip' → logprob: -19.12510871887207
    7. '()

' → logprob: -19.37510871887207
    8. '(' → logprob: -19.87510871887207
    9. '()[' → logprob: -20.37510871887207
    10. ' ()' → logprob: -20.37510871887207

Token 137: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31467515230178833
    2. 'split' → logprob: -1.3146750926971436
    3. 'rstrip' → logprob: -6.564675331115723
    4. ' strip' → logprob: -13.689675331115723
    5. '(split' → logprob: -14.189675331115723
    6. 'read' → logprob: -14.689675331115723
    7. ' split' → logprob: -14.939675331115723
    8. '(strip' → logprob: -15.189675331115723
    9. '-strip' → logprob: -16.939674377441406
    10. '().' → logprob: -17.064674377441406

Token 138: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4432791769504547
    2. '())' → logprob: -1.0682791471481323
    3. '()' → logprob: -4.318279266357422
    4. '(' → logprob: -7.068279266357422
    5. '())
' → logprob: -8.943279266357422
    6. '(),' → logprob: -9.318279266357422
    7. ')
' → logprob: -10.443279266357422
    8. '))' → logprob: -11.568279266357422
    9. '('' → logprob: -12.068279266357422
    10. '(',' → logprob: -12.193279266357422

Token 139: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0707695335149765
    2. 'if' (adapté à ' if') → logprob: -3.4457695484161377
    3. ' 
' → logprob: -4.320769309997559
    4. '   ' → logprob: -4.695769309997559
    5. '<|end|>' → logprob: -4.945769309997559
    6. ' ' → logprob: -5.945769309997559
    7. '
' → logprob: -6.070769309997559
    8. '    
' → logprob: -7.070769309997559
    9. '    ' → logprob: -7.445769309997559
    10. '	if' → logprob: -8.945769309997559

Token 141: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5760374069213867
    2. ' N' → logprob: -0.8260374069213867
    3. ' not' → logprob: -9.326037406921387
    4. ' ' → logprob: -12.951037406921387
    5. ' (' → logprob: -13.076037406921387
    6. 'not' → logprob: -13.576037406921387
    7. '(' → logprob: -13.576037406921387
    8. '(N' → logprob: -13.826037406921387
    9. '	N' → logprob: -14.701037406921387
    10. ' ' → logprob: -15.201037406921387

Token 142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28143107891082764
    2. '==' → logprob: -1.4064310789108276
    3. '=' → logprob: -8.406431198120117
    4. ' =' → logprob: -10.406431198120117
    5. ' ' → logprob: -11.156431198120117
    6. '0' → logprob: -12.656431198120117
    7. ')==' → logprob: -13.281431198120117
    8. ')' → logprob: -13.406431198120117
    9. ' ' → logprob: -13.406431198120117
    10. ',' → logprob: -14.156431198120117

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '  ' → logprob: -18.25247573852539
    4. '۰' → logprob: -18.31497573852539
    5. '   ' → logprob: -18.62747573852539
    6. ' ' → logprob: -18.87747573852539
    7. '```' → logprob: -18.87747573852539
    8. 'and' → logprob: -19.62747573852539
    9. '=' → logprob: -19.81497573852539
    10. '_' → logprob: -19.93997573852539

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. 'and' → logprob: -16.25004005432129
    4. '۰' → logprob: -17.37504005432129
    5. '-' → logprob: -17.93754005432129
    6. '```' → logprob: -18.31254005432129
    7. 'M' → logprob: -18.43754005432129
    8. 'N' → logprob: -18.93754005432129
    9. ' and' → logprob: -19.00004005432129
    10. '０' → logprob: -19.18754005432129

Token 145: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602286994457245
    2. 'and' → logprob: -1.9102287292480469
    3. ' ' → logprob: -12.910228729248047
    4. '0' → logprob: -14.285228729248047
    5. '	and' → logprob: -14.535228729248047
    6. '   ' → logprob: -14.910228729248047
    7. ' or' → logprob: -14.910228729248047
    8. ' a' → logprob: -16.160228729248047
    9. ':' → logprob: -16.160228729248047
    10. ' ' → logprob: -16.410228729248047

Token 146: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.061970487236976624
    2. ' M' → logprob: -2.8119704723358154
    3. '   ' → logprob: -13.436970710754395
    4. '  ' → logprob: -14.561970710754395
    5. ' ' → logprob: -14.686970710754395
    6. '	M' → logprob: -15.561970710754395
    7. ' ' → logprob: -15.811970710754395
    8. '    ' → logprob: -16.811969757080078
    9. '0' → logprob: -17.311969757080078
    10. 'N' → logprob: -18.311969757080078

Token 147: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25202006101608276
    2. '==' → logprob: -1.5020201206207275
    3. '0' → logprob: -10.127019882202148
    4. ' ' → logprob: -10.502019882202148
    5. '<|end|>' → logprob: -11.877019882202148
    6. ')==' → logprob: -12.127019882202148
    7. '=' → logprob: -13.002019882202148
    8. ']==' → logprob: -13.127019882202148
    9. ' =' → logprob: -13.627019882202148
    10. '```' → logprob: -13.752019882202148

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029752103611826897
    2. ' ' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.029751777648926
    4. '<|end|>' → logprob: -14.904751777648926
    5. '  ' → logprob: -15.529751777648926
    6. '۰' → logprob: -16.592252731323242
    7. '   ' → logprob: -16.904752731323242
    8. '```' → logprob: -17.467252731323242
    9. '<|end|>' → logprob: -17.592252731323242
    10. '00' → logprob: -18.154752731323242

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -17.875085830688477
    4. '```' → logprob: -19.125085830688477
    5. '０' → logprob: -19.812585830688477
    6. '  ' → logprob: -19.812585830688477
    7. ' ' → logprob: -19.937585830688477
    8. '০' → logprob: -20.000085830688477
    9. '०' → logprob: -20.375085830688477
    10. '   ' → logprob: -20.375085830688477

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009762464091181755
    2. ':
' → logprob: -4.634762287139893
    3. '   ' → logprob: -12.13476276397705
    4. ':return' → logprob: -14.25976276397705
    5. ':
' → logprob: -15.50976276397705
    6. '       ' → logprob: -15.75976276397705
    7. '):' → logprob: -16.884761810302734
    8. ' :' → logprob: -17.134761810302734
    9. '	break' → logprob: -17.384761810302734
    10. ':

' → logprob: -17.384761810302734

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04312365502119064
    2. '   ' → logprob: -3.168123722076416
    3. ':' → logprob: -10.418123245239258
    4. ' break' → logprob: -10.668123245239258
    5. '	break' → logprob: -10.793123245239258
    6. '      ' → logprob: -11.543123245239258
    7. '<|end|>' → logprob: -11.918123245239258
    8. '     ' → logprob: -11.918123245239258
    9. '   ' → logprob: -11.918123245239258
    10. '	' → logprob: -12.668123245239258

Token 152: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.12720505893230438
    2. 'break' (adapté à ' break') → logprob: -2.3772051334381104
    3. '   ' → logprob: -4.252204895019531
    4. '	break' → logprob: -4.877204895019531
    5. '       ' → logprob: -5.377204895019531
    6. '
' → logprob: -9.002204895019531
    7. '    
' → logprob: -11.002204895019531
    8. '           ' → logprob: -12.377204895019531
    9. '_break' → logprob: -12.377204895019531
    10. '        
' → logprob: -13.127204895019531

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10869917273521423
    2. '   ' → logprob: -2.858699083328247
    3. '    
' → logprob: -3.233699083328247
    4. '<|end|>' → logprob: -6.483699321746826
    5. '```' → logprob: -6.483699321746826
    6. ':' → logprob: -7.358699321746826
    7. '[' → logprob: -7.608699321746826
    8. '#' → logprob: -7.983699321746826
    9. '

' → logprob: -8.233698844909668
    10. ' 
' → logprob: -8.483698844909668

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07628572732210159
    2. '    
' → logprob: -3.0762858390808105
    3. '
' → logprob: -3.9512858390808105
    4. ' intervals' → logprob: -5.7012858390808105
    5. 'interval' → logprob: -6.2012858390808105
    6. 'indices' → logprob: -7.7012858390808105
    7. '```' → logprob: -8.326285362243652
    8. 'data' → logprob: -8.701285362243652
    9. '<|end|>' → logprob: -8.826285362243652
    10. '   
' → logprob: -8.826285362243652

Token 155: ' r' (ID: 428)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.3954166173934937
    2. '   ' → logprob: -1.8954166173934937
    3. 'interval' → logprob: -1.8954166173934937
    4. 'ranges' → logprob: -3.395416736602783
    5. ' coverage' → logprob: -3.520416736602783
    6. ' bus' → logprob: -3.520416736602783
    7. ' ranges' → logprob: -3.895416736602783
    8. ' lines' → logprob: -4.207916736602783
    9. 'segments' → logprob: -4.332916736602783
    10. ' schedules' → logprob: -4.645416736602783

Token 156: ' =' (ID: 314)
  Prédit: 'anges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anges' → logprob: -0.40607956051826477
    2. 'e' → logprob: -2.2810795307159424
    3. 'ead' → logprob: -3.0310795307159424
    4. 'outes' → logprob: -3.4060795307159424
    5. 'ects' → logprob: -3.4060795307159424
    6. 'oad' → logprob: -4.1560797691345215
    7. 'ec' → logprob: -4.2810797691345215
    8. 'ect' → logprob: -4.4060797691345215
    9. 'es' → logprob: -4.5310797691345215
    10. 'eg' → logprob: -4.6560797691345215

Token 157: ' int' (ID: 677)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2617816627025604
    2. ' []' → logprob: -1.5117816925048828
    3. '[' → logprob: -5.261781692504883
    4. ' [' → logprob: -6.136781692504883
    5. '[]
' → logprob: -6.261781692504883
    6. ' []
' → logprob: -8.636781692504883
    7. ' [[]' → logprob: -9.011781692504883
    8. ' ' → logprob: -10.011781692504883
    9. '{}' → logprob: -10.136781692504883
    10. '[int' → logprob: -10.261781692504883

Token 158: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16883496940135956
    2. '(' → logprob: -2.043834924697876
    3. '()' → logprob: -4.043835163116455
    4. '(sys' → logprob: -5.543835163116455
    5. '(M' → logprob: -6.043835163116455
    6. 'input' → logprob: -6.793835163116455
    7. ' (' → logprob: -9.043834686279297
    8. '((' → logprob: -9.043834686279297
    9. '(N' → logprob: -9.293834686279297
    10. '('' → logprob: -9.418834686279297

Token 159: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.028391558676958084
    2. '()' → logprob: -3.7783915996551514
    3. '().' → logprob: -5.278391361236572
    4. ')' → logprob: -10.90339183807373
    5. '())
' → logprob: -12.40339183807373
    6. '(' → logprob: -12.65339183807373
    7. '()
' → logprob: -12.90339183807373
    8. ' ())' → logprob: -13.27839183807373
    9. '())

' → logprob: -13.65339183807373
    10. '();)' → logprob: -15.02839183807373

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2102004438638687
    2. ' ranges' → logprob: -2.710200548171997
    3. 'ranges' → logprob: -2.710200548171997
    4. ' intervals' → logprob: -4.460200309753418
    5. '    
' → logprob: -4.960200309753418
    6. ' regions' → logprob: -5.710200309753418
    7. 'regions' → logprob: -5.835200309753418
    8. '_ranges' → logprob: -5.835200309753418
    9. 'r' → logprob: -6.085200309753418
    10. ' reservations' → logprob: -6.335200309753418

Token 161: ' log' (ID: 2142)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -1.8560898303985596
    2. ' ranges' → logprob: -2.2310898303985596
    3. 'requests' → logprob: -2.7310898303985596
    4. ' requests' → logprob: -2.9810898303985596
    5. ' intervals' → logprob: -2.9810898303985596
    6. 'reserved' → logprob: -3.3560898303985596
    7. 'rect' → logprob: -3.3560898303985596
    8. ' routes' → logprob: -3.4810898303985596
    9. ' reservations' → logprob: -3.6060898303985596
    10. 'interval' → logprob: -3.7310898303985596

Token 162: 'ins' (ID: 1564)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.024973714724183083
    2. '_inter' → logprob: -4.1499738693237305
    3. '_ranges' → logprob: -5.2749738693237305
    4. ' =' → logprob: -6.1499738693237305
    5. '=' → logprob: -7.2749738693237305
    6. '=[]' → logprob: -8.14997386932373
    7. '_points' → logprob: -8.64997386932373
    8. '_' → logprob: -9.27497386932373
    9. '_segments' → logprob: -9.77497386932373
    10. '_entries' → logprob: -10.02497386932373

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18010082840919495
    2. '=' → logprob: -1.8051007986068726
    3. '_inter' → logprob: -9.180100440979004
    4. '=[]' → logprob: -9.180100440979004
    5. '_' → logprob: -9.930100440979004
    6. ' ' → logprob: -10.555100440979004
    7. 's' → logprob: -11.055100440979004
    8. '[]' → logprob: -11.305100440979004
    9. '   ' → logprob: -11.305100440979004
    10. '	' → logprob: -12.055100440979004

Token 164: ' {}' (ID: 9902)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10081320255994797
    2. '[' → logprob: -2.350813150405884
    3. '[list' → logprob: -8.350812911987305
    4. '[int' → logprob: -9.475812911987305
    5. '[array' → logprob: -9.975812911987305
    6. '[r' → logprob: -10.350812911987305
    7. '[line' → logprob: -10.850812911987305
    8. '[user' → logprob: -10.975812911987305
    9. '[]
' → logprob: -11.225812911987305
    10. '[[' → logprob: -11.225812911987305

Token 165: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01848960667848587
    2. '<|end|>' → logprob: -5.018489837646484
    3. '	
' → logprob: -6.143489837646484
    4. ' 
' → logprob: -6.393489837646484
    5. '    
' → logprob: -6.393489837646484
    6. ' for' → logprob: -6.643489837646484
    7. '
' → logprob: -6.768489837646484
    8. '	for' → logprob: -6.893489837646484
    9. '' → logprob: -6.893489837646484
    10. '  
' → logprob: -7.893489837646484

Token 166: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27302873134613037
    2. '
' → logprob: -1.5230287313461304
    3. ' for' → logprob: -4.14802885055542
    4. '	for' → logprob: -6.39802885055542
    5. '	
' → logprob: -6.64802885055542
    6. '<|end|>' → logprob: -6.77302885055542
    7. '    
' → logprob: -8.023028373718262
    8. '' → logprob: -8.648028373718262
    9. ' 
' → logprob: -8.898028373718262
    10. '   ' → logprob: -9.023028373718262

Token 167: ' (' (ID: 350)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.05496906116604805
    2. 'for' → logprob: -3.804969072341919
    3. '{' → logprob: -3.929969072341919
    4. '[]' → logprob: -5.55496883392334
    5. ' for' → logprob: -6.42996883392334
    6. 'default' → logprob: -6.67996883392334
    7. ' {}' → logprob: -6.80496883392334
    8. 'list' → logprob: -7.17996883392334
    9. 'user' → logprob: -7.42996883392334
    10. ' defaultdict' → logprob: -7.55496883392334

Token 168: 'pc' (ID: 6344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23381812870502472
    2. 'int' → logprob: -1.9838181734085083
    3. 'str' → logprob: -2.9838180541992188
    4. '(int' → logprob: -4.733818054199219
    5. 'user' → logprob: -4.983818054199219
    6. '(str' → logprob: -6.483818054199219
    7. '')' → logprob: -7.733818054199219
    8. 'tuple' → logprob: -7.983818054199219
    9. '(' → logprob: -8.108818054199219
    10. ' )' → logprob: -8.233818054199219

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.135269045829773
    2. ',' → logprob: -1.260269045829773
    3. '_id' → logprob: -1.260269045829773
    4. 'id' → logprob: -2.2602691650390625
    5. 'ID' → logprob: -5.5102691650390625
    6. ' id' → logprob: -7.8852691650390625
    7. ':' → logprob: -8.010269165039062
    8. ']' → logprob: -8.385269165039062
    9. '_ip' → logprob: -8.385269165039062
    10. '_number' → logprob: -8.385269165039062

Token 170: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0022939443588256836
    2. '[' → logprob: -6.377294063568115
    3. ' []' → logprob: -8.252293586730957
    4. 'list' → logprob: -8.252293586730957
    5. '[]}' → logprob: -11.002293586730957
    6. '[(' → logprob: -11.377293586730957
    7. '[]
' → logprob: -12.002293586730957
    8. 'set' → logprob: -12.127293586730957
    9. '[list' → logprob: -12.127293586730957
    10. '[int' → logprob: -12.252293586730957

Token 172: 'student' (ID: 22495)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.610899031162262
    2. '[])' → logprob: -1.2358989715576172
    3. '[' → logprob: -1.9858989715576172
    4. 'list' → logprob: -5.110898971557617
    5. '[[' → logprob: -5.110898971557617
    6. '[(' → logprob: -5.110898971557617
    7. ')' → logprob: -5.985898971557617
    8. '[]
' → logprob: -6.235898971557617
    9. '[list' → logprob: -6.610898971557617
    10. '[int' → logprob: -6.860898971557617

Token 173: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4083227217197418
    2. ',' → logprob: -1.9083226919174194
    3. 's' → logprob: -2.783322811126709
    4. ':' → logprob: -3.658322811126709
    5. 'id' → logprob: -3.908322811126709
    6. '[' → logprob: -3.908322811126709
    7. '[])' → logprob: -4.658322811126709
    8. '):' → logprob: -4.783322811126709
    9. 'ids' → logprob: -5.533322811126709
    10. '_ids' → logprob: -5.533322811126709

Token 174: ' login' (ID: 9464)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2201054096221924
    2. 'time' → logprob: -1.7201054096221924
    3. 'interval' → logprob: -2.3451054096221924
    4. 'login' → logprob: -2.4701054096221924
    5. '[' → logprob: -2.8451054096221924
    6. ')' → logprob: -3.0951054096221924
    7. 'count' → logprob: -3.0951054096221924
    8. '[])' → logprob: -3.4701054096221924
    9. '[start' → logprob: -3.4701054096221924
    10. 'logout' → logprob: -3.5951054096221924

Token 175: '_time' (ID: 6425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27893614768981934
    2. '_time' → logprob: -1.9039361476898193
    3. 'time' → logprob: -2.9039361476898193
    4. '_times' → logprob: -3.6539361476898193
    5. 'times' → logprob: -4.778936386108398
    6. ',' → logprob: -6.528936386108398
    7. '_)' → logprob: -7.278936386108398
    8. ' time' → logprob: -7.403936386108398
    9. ')_' → logprob: -7.778936386108398
    10. '_' → logprob: -8.028936386108398

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001617035741219297
    2. ',' → logprob: -8.875162124633789
    3. ' )' → logprob: -11.125162124633789
    4. ')
' → logprob: -12.625162124633789
    5. ',)' → logprob: -14.000162124633789
    6. '}' → logprob: -14.125162124633789
    7. '   ' → logprob: -14.375162124633789
    8. '[' → logprob: -14.750162124633789
    9. ' ' → logprob: -15.250162124633789
    10. '[])' → logprob: -15.875162124633789

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8343852758407593
    2. '
' → logprob: -0.9593852758407593
    3. '<|end|>' → logprob: -1.9593852758407593
    4. '    
' → logprob: -3.834385395050049
    5. ' 
' → logprob: -4.959385395050049
    6. '  
' → logprob: -5.084385395050049
    7. '<|end|>' → logprob: -6.834385395050049
    8. ' for' → logprob: -6.834385395050049
    9. '   
' → logprob: -7.084385395050049
    10. '	
' → logprob: -7.459385395050049

Token 178: ' usage' (ID: 16622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7501869201660156
    2. 'log' → logprob: -2.0001869201660156
    3. 'sessions' → logprob: -2.1251869201660156
    4. ' for' → logprob: -2.2501869201660156
    5. 'actions' → logprob: -2.5001869201660156
    6. 'events' → logprob: -3.3751869201660156
    7. 'students' → logprob: -3.8751869201660156
    8. 'active' → logprob: -3.8751869201660156
    9. 'activities' → logprob: -4.000186920166016
    10. 'used' → logprob: -4.125186920166016

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1805139034986496
    2. '=' → logprob: -1.805513858795166
    3. 's' → logprob: -7.430513858795166
    4. ' ' → logprob: -9.805514335632324
    5. '_times' → logprob: -10.305514335632324
    6. '_' → logprob: -10.430514335632324
    7. '[' → logprob: -11.430514335632324
    8. ')' → logprob: -12.055514335632324
    9. 'times' → logprob: -12.180514335632324
    10. '   ' → logprob: -12.180514335632324

Token 180: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0022711048368364573
    2. ' {}' → logprob: -6.7522711753845215
    3. '{' → logprob: -7.5022711753845215
    4. '[' → logprob: -7.6272711753845215
    5. ' [' → logprob: -10.002270698547363
    6. 'default' → logprob: -12.002270698547363
    7. '[]' → logprob: -12.127270698547363
    8. ' {' → logprob: -13.377270698547363
    9. '{}
' → logprob: -13.377270698547363
    10. '{})' → logprob: -14.752270698547363

Token 181: 'm' (ID: 76)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42925986647605896
    2. '}' → logprob: -1.6792598962783813
    3. 'pc' → logprob: -2.179259777069092
    4. 'student' → logprob: -3.304259777069092
    5. 'k' → logprob: -4.554259777069092
    6. 'pid' → logprob: -7.679259777069092
    7. 'str' → logprob: -7.804259777069092
    8. '   ' → logprob: -8.80426025390625
    9. 's' → logprob: -8.80426025390625
    10. '(i' → logprob: -8.92926025390625

Token 182: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018473666859790683
    2. ' :' → logprob: -6.376847267150879
    3. ':i' → logprob: -9.251847267150879
    4. ':m' → logprob: -10.251847267150879
    5. '+' → logprob: -12.126847267150879
    6. 'i' → logprob: -13.501847267150879
    7. 'm' → logprob: -13.501847267150879
    8. ':k' → logprob: -14.251847267150879
    9. ':[' → logprob: -14.376847267150879
    10. ':int' → logprob: -14.626847267150879

Token 183: ' []' (ID: 6126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1815803050994873
    2. '[]' → logprob: -1.9315803050994873
    3. '[]}' → logprob: -3.9315803050994873
    4. '{}' → logprob: -7.306580543518066
    5. ' ' → logprob: -7.931580543518066
    6. '[' → logprob: -8.431580543518066
    7. ' []' → logprob: -8.931580543518066
    8. '{' → logprob: -10.056580543518066
    9. '[]
' → logprob: -10.556580543518066
    10. '}' → logprob: -11.431580543518066

Token 184: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5768532156944275
    2. 'for' → logprob: -0.8268532156944275
    3. ':' → logprob: -8.451852798461914
    4. '()' → logprob: -8.451852798461914
    5. ')' → logprob: -9.076852798461914
    6. '[]' → logprob: -9.201852798461914
    7. '}' → logprob: -9.326852798461914
    8. '[:]' → logprob: -9.576852798461914
    9. ' ' → logprob: -10.076852798461914
    10. '	for' → logprob: -10.326852798461914

Token 185: ' m' (ID: 284)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04948621615767479
    2. ' range' → logprob: -3.1744861602783203
    3. 'm' → logprob: -5.04948616027832
    4. '(range' → logprob: -10.17448616027832
    5. ' m' → logprob: -12.17448616027832
    6. ' in' → logprob: -12.17448616027832
    7. 'in' → logprob: -12.54948616027832
    8. '	range' → logprob: -14.67448616027832
    9. 'M' → logprob: -15.42448616027832
    10. '_m' → logprob: -15.92448616027832

Token 186: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234183669090271
    2. ' in' → logprob: -0.8984183669090271
    3. 'm' → logprob: -8.898418426513672
    4. 'range' → logprob: -9.648418426513672
    5. 'In' → logprob: -10.398418426513672
    6. 'n' → logprob: -10.523418426513672
    7. '	in' → logprob: -11.898418426513672
    8. 'ine' → logprob: -12.773418426513672
    9. 'ange' → logprob: -12.898418426513672
    10. '_in' → logprob: -12.898418426513672

Token 187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -15.506715774536133
    4. 'M' → logprob: -18.006715774536133
    5. 'm' → logprob: -18.381715774536133
    6. 'r' → logprob: -18.381715774536133
    7. '	range' → logprob: -19.006715774536133
    8. 'rang' → logprob: -19.381715774536133
    9. 'map' → logprob: -20.631715774536133
    10. '[' → logprob: -20.631715774536133

Token 188: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002509070560336113
    2. '(M' → logprob: -6.002509117126465
    3. '1' → logprob: -10.627509117126465
    4. '(N' → logprob: -11.877509117126465
    5. '(m' → logprob: -13.377509117126465
    6. '(r' → logprob: -15.252509117126465
    7. '   ' → logprob: -16.25250816345215
    8. 'M' → logprob: -16.25250816345215
    9. ' (' → logprob: -16.50250816345215
    10. '(-' → logprob: -17.50250816345215

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02076691947877407
    2. 'M' → logprob: -3.8957669734954834
    3. 'N' → logprob: -8.895767211914062
    4. '(' → logprob: -9.770767211914062
    5. '(M' → logprob: -11.645767211914062
    6. ' ' → logprob: -11.895767211914062
    7. '   ' → logprob: -12.395767211914062
    8. ' M' → logprob: -12.645767211914062
    9. '2' → logprob: -13.770767211914062
    10. '0' → logprob: -14.020767211914062

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014984336448833346
    2. ',M' → logprob: -7.001498222351074
    3. ' ,' → logprob: -8.126498222351074
    4. '1' → logprob: -8.376498222351074
    5. '(' → logprob: -10.501498222351074
    6. '(M' → logprob: -11.251498222351074
    7. 'M' → logprob: -11.751498222351074
    8. '   ' → logprob: -12.251498222351074
    9. ' ' → logprob: -12.376498222351074
    10. ' M' → logprob: -13.251498222351074

Token 191: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00027718624914996326
    2. ' M' → logprob: -8.375277519226074
    3. 'N' → logprob: -10.000277519226074
    4. '   ' → logprob: -14.500277519226074
    5. 'm' → logprob: -15.000277519226074
    6. '1' → logprob: -15.250277519226074
    7. '	M' → logprob: -17.000276565551758
    8. '    ' → logprob: -17.500276565551758
    9. '  ' → logprob: -17.750276565551758
    10. ' ' → logprob: -17.875276565551758

Token 192: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011717714369297028
    2. ' +' → logprob: -6.751171588897705
    3. ')}' → logprob: -14.126172065734863
    4. ')' → logprob: -15.001172065734863
    5. '```' → logprob: -15.001172065734863
    6. '+
' → logprob: -16.626171112060547
    7. '   ' → logprob: -17.126171112060547
    8. '1' → logprob: -17.501171112060547
    9. ' ' → logprob: -17.876171112060547
    10. '+)' → logprob: -18.001171112060547

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.250049591064453
    3. '+' → logprob: -11.625049591064453
    4. '2' → logprob: -13.375049591064453
    5. '```' → logprob: -13.875049591064453
    6. ')' → logprob: -14.000049591064453
    7. ')}' → logprob: -14.750049591064453
    8. '})' → logprob: -15.250049591064453
    9. 'N' → logprob: -15.625049591064453
    10. '   ' → logprob: -15.750049591064453

Token 194: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.012739891186356544
    2. ')' → logprob: -4.512739658355713
    3. '}' → logprob: -6.512739658355713
    4. ' )' → logprob: -8.637740135192871
    5. '})' → logprob: -11.262740135192871
    6. ' }' → logprob: -11.637740135192871
    7. ' ' → logprob: -12.887740135192871
    8. ');}' → logprob: -13.637740135192871
    9. '")}' → logprob: -14.137740135192871
    10. ',' → logprob: -14.512740135192871

Token 195: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1679617166519165
    2. ' for' → logprob: -2.292961597442627
    3. '   ' → logprob: -3.042961597442627
    4. '
' → logprob: -5.542961597442627
    5. '    
' → logprob: -7.292961597442627
    6. '	for' → logprob: -7.417961597442627
    7. 'while' → logprob: -8.542962074279785
    8. ' 
' → logprob: -8.667962074279785
    9. '  
' → logprob: -9.417962074279785
    10. '  ' → logprob: -9.792962074279785

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002714049769565463
    2. ' for' → logprob: -6.002714157104492
    3. '   ' → logprob: -8.377714157104492
    4. '	for' → logprob: -11.877714157104492
    5. '    
' → logprob: -14.627714157104492
    6. '  ' → logprob: -15.002714157104492
    7. '
' → logprob: -15.627714157104492
    8. '```' → logprob: -15.627714157104492
    9. ' ' → logprob: -15.877714157104492
    10. 'student' → logprob: -17.127714157104492

Token 197: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011048289015889168
    2. ' _' → logprob: -4.511048316955566
    3. '_i' → logprob: -15.386048316955566
    4. ' ' → logprob: -16.63604736328125
    5. '__' → logprob: -17.38604736328125
    6. ' ' → logprob: -17.88604736328125
    7. '_=' → logprob: -18.01104736328125
    8. '   ' → logprob: -18.51104736328125
    9. '  ' → logprob: -18.63604736328125
    10. 'r' → logprob: -18.88604736328125

Token 198: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21051552891731262
    2. ' range' → logprob: -1.7105154991149902
    3. ' in' → logprob: -4.83551549911499
    4. 'in' → logprob: -7.21051549911499
    5. 'r' → logprob: -8.460515975952148
    6. ' r' → logprob: -9.085515975952148
    7. 'int' → logprob: -10.460515975952148
    8. '_' → logprob: -11.585515975952148
    9. ')' → logprob: -12.460515975952148
    10. ' ' → logprob: -12.585515975952148

Token 199: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013289296766743064
    2. ' range' → logprob: -6.626328945159912
    3. '(range' → logprob: -13.626328468322754
    4. ' ' → logprob: -14.751328468322754
    5. '   ' → logprob: -15.126328468322754
    6. ')' → logprob: -15.876328468322754
    7. 'r' → logprob: -15.876328468322754
    8. '  ' → logprob: -15.876328468322754
    9. '	range' → logprob: -15.876328468322754
    10. '```' → logprob: -16.00132942199707

Token 200: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.008633834309875965
    2. 'r' → logprob: -4.758633613586426
    3. ' r' → logprob: -11.133633613586426
    4. '(' → logprob: -12.883633613586426
    5. '	r' → logprob: -13.508633613586426
    6. '   ' → logprob: -14.758633613586426
    7. ' (' → logprob: -15.633633613586426
    8. '_r' → logprob: -16.883634567260742
    9. ')' → logprob: -17.008634567260742
    10. '[r' → logprob: -17.008634567260742

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28149935603141785
    2. '):
' → logprob: -1.4064993858337402
    3. ':' → logprob: -8.406498908996582
    4. ' ):' → logprob: -10.031498908996582
    5. '):
' → logprob: -10.156498908996582
    6. '   ' → logprob: -11.031498908996582
    7. ' ):
' → logprob: -11.281498908996582
    8. ':
' → logprob: -12.281498908996582
    9. ',' → logprob: -12.656498908996582
    10. ')' → logprob: -13.406498908996582

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2668989300727844
    2. '   ' → logprob: -2.0168988704681396
    3. ' s' → logprob: -3.1418988704681396
    4. ' student' → logprob: -4.016899108886719
    5. ' line' → logprob: -4.016899108886719
    6. 's' → logprob: -4.766899108886719
    7. 'student' → logprob: -5.641899108886719
    8. 'line' → logprob: -5.891899108886719
    9. 'user' → logprob: -6.516899108886719
    10. 'pc' → logprob: -6.766899108886719

Token 203: ' t' (ID: 260)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0926729440689087
    2. 'pc' → logprob: -1.0926729440689087
    3. 's' → logprob: -2.342672824859619
    4. 't' (adapté à ' t') → logprob: -2.467672824859619
    5. 'time' → logprob: -2.717672824859619
    6. 'student' → logprob: -3.217672824859619
    7. ' line' → logprob: -4.092672824859619
    8. 'p' → logprob: -4.592672824859619
    9. 'l' → logprob: -5.842672824859619
    10. ' pc' → logprob: -6.342672824859619

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2884395718574524
    2. 'ype' → logprob: -1.6634395122528076
    3. 'ime' → logprob: -3.1634395122528076
    4. ' ,' → logprob: -4.913439750671387
    5. 'imestamp' → logprob: -5.038439750671387
    6. 'okens' → logprob: -5.913439750671387
    7. 'oken' → logprob: -7.163439750671387
    8. '_,' → logprob: -8.163439750671387
    9. 'imes' → logprob: -8.538439750671387
    10. '=' → logprob: -8.913439750671387

Token 205: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6265445351600647
    2. 's' → logprob: -1.50154447555542
    3. 'pc' → logprob: -1.50154447555542
    4. 'm' → logprob: -4.62654447555542
    5. 'student' → logprob: -5.87654447555542
    6. 'a' → logprob: -6.87654447555542
    7. 'c' → logprob: -7.00154447555542
    8. ' p' → logprob: -7.25154447555542
    9. 'u' → logprob: -7.25154447555542
    10. ' pc' → logprob: -7.37654447555542

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009968446101993322
    2. ' ,' → logprob: -7.250997066497803
    3. 'um' → logprob: -9.125996589660645
    4. ',p' → logprob: -10.375996589660645
    5. 'p' → logprob: -10.625996589660645
    6. '_pc' → logprob: -10.875996589660645
    7. '_,' → logprob: -11.125996589660645
    8. 'pc' → logprob: -11.250996589660645
    9. 'm' → logprob: -11.625996589660645
    10. 'ame' → logprob: -11.750996589660645

Token 207: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1828155517578125
    2. 'm' → logprob: -2.3078155517578125
    3. 'pc' → logprob: -3.0578155517578125
    4. ' p' → logprob: -4.8078155517578125
    5. 's' → logprob: -5.6828155517578125
    6. 'c' → logprob: -5.9328155517578125
    7. ' pc' → logprob: -6.1828155517578125
    8. ' m' → logprob: -6.5578155517578125
    9. 'k' → logprob: -7.4328155517578125
    10. 'a' → logprob: -7.5578155517578125

Token 208: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5814476609230042
    2. '=' → logprob: -1.2064476013183594
    3. ',' → logprob: -1.9564476013183594
    4. ')' → logprob: -10.08144760131836
    5. ' ' → logprob: -10.33144760131836
    6. ' ,' → logprob: -10.95644760131836
    7. 's' → logprob: -11.33144760131836
    8. '=input' → logprob: -11.33144760131836
    9. 'p' → logprob: -11.45644760131836
    10. '_str' → logprob: -11.83144760131836

Token 209: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6670607924461365
    2. 'a' → logprob: -1.9170608520507812
    3. 'action' → logprob: -2.1670608520507812
    4. 'c' → logprob: -3.2920608520507812
    5. 'cmd' → logprob: -3.5420608520507812
    6. 'op' → logprob: -3.7920608520507812
    7. 'event' → logprob: -3.9170608520507812
    8. 'state' → logprob: -4.042060852050781
    9. 'o' → logprob: -4.167060852050781
    10. 'status' → logprob: -4.167060852050781

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2522563338279724
    2. ' =' → logprob: -1.5022563934326172
    3. 'plit' → logprob: -8.752256393432617
    4. 'p' → logprob: -9.502256393432617
    5. ',' → logprob: -9.877256393432617
    6. '=input' → logprob: -12.252256393432617
    7. '_' → logprob: -12.252256393432617
    8. ' ' → logprob: -12.377256393432617
    9. '_=' → logprob: -12.627256393432617
    10. '=line' → logprob: -12.627256393432617

Token 211: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1479579359292984
    2. 'map' → logprob: -2.0229580402374268
    3. ' input' → logprob: -5.397957801818848
    4. ' map' → logprob: -7.272957801818848
    5. 'sys' → logprob: -10.147957801818848
    6. 'int' → logprob: -12.772957801818848
    7. 'line' → logprob: -13.522957801818848
    8. '=input' → logprob: -13.647957801818848
    9. '(input' → logprob: -13.772957801818848
    10. ' sys' → logprob: -14.022957801818848

Token 212: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000204851632588543
    2. '(str' → logprob: -8.500205039978027
    3. 'int' → logprob: -13.875205039978027
    4. 'str' → logprob: -16.00020408630371
    5. '=int' → logprob: -16.37520408630371
    6. '(' → logprob: -16.50020408630371
    7. '[int' → logprob: -16.87520408630371
    8. ',int' → logprob: -17.00020408630371
    9. ' int' → logprob: -17.87520408630371
    10. '	int' → logprob: -19.37520408630371

Token 213: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.05229220539331436
    2. ',' → logprob: -3.0522921085357666
    3. '(input' → logprob: -5.677292346954346
    4. 'input' → logprob: -8.802291870117188
    5. '(),' → logprob: -9.552291870117188
    6. '(' → logprob: -10.927291870117188
    7. 'sys' → logprob: -11.552291870117188
    8. '(sys' → logprob: -11.552291870117188
    9. ',(' → logprob: -11.927291870117188
    10. ' ,' → logprob: -12.552291870117188

Token 214: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00672448705881834
    2. ' input' → logprob: -5.0067243576049805
    3. 'sys' → logprob: -11.63172435760498
    4. ' sys' → logprob: -15.38172435760498
    5. '(input' → logprob: -17.381725311279297
    6. '	input' → logprob: -19.131725311279297
    7. ' ' → logprob: -19.131725311279297
    8. '=input' → logprob: -19.756725311279297
    9. ',input' → logprob: -19.881725311279297
    10. '_input' → logprob: -20.006725311279297

Token 215: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.682846287731081e-05
    2. '()' → logprob: -9.750066757202148
    3. '())' → logprob: -11.750066757202148
    4. ')' → logprob: -14.875066757202148
    5. '(' → logprob: -15.875066757202148
    6. ' ().' → logprob: -16.25006675720215
    7. '()
' → logprob: -18.00006675720215
    8. '.split' → logprob: -19.12506675720215
    9. '();)' → logprob: -19.12506675720215
    10. '()[' → logprob: -19.25006675720215

Token 216: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.955703818472102e-05
    2. 'strip' → logprob: -9.750059127807617
    3. ' split' → logprob: -14.625059127807617
    4. '(split' → logprob: -14.875059127807617
    5. 'rstrip' → logprob: -15.125059127807617
    6. ')' → logprob: -17.625059127807617
    7. 'spl' → logprob: -18.125059127807617
    8. '```' → logprob: -19.125059127807617
    9. '.split' → logprob: -20.250059127807617
    10. ' ' → logprob: -20.375059127807617

Token 217: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009379075840115547
    2. '())' → logprob: -4.759378910064697
    3. '()' → logprob: -7.259378910064697
    4. ')
' → logprob: -10.509379386901855
    5. '(' → logprob: -11.009379386901855
    6. ' )' → logprob: -12.009379386901855
    7. ')`' → logprob: -13.134379386901855
    8. '())
' → logprob: -13.384379386901855
    9. '))' → logprob: -13.509379386901855
    10. ',' → logprob: -14.134379386901855

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4539140462875366
    2. '   ' → logprob: -1.2039140462875366
    3. '
' → logprob: -3.578914165496826
    4. '<|end|>' → logprob: -3.953914165496826
    5. ' if' → logprob: -5.203914165496826
    6. 'if' → logprob: -5.578914165496826
    7. ')' → logprob: -6.328914165496826
    8. '        
' → logprob: -6.828914165496826
    9. '	if' → logprob: -6.828914165496826
    10. '    
' → logprob: -6.953914165496826

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10067576915025711
    2. ' if' → logprob: -2.3506758213043213
    3. '   ' → logprob: -8.100675582885742
    4. '       ' → logprob: -8.850675582885742
    5. 'log' → logprob: -11.725675582885742
    6. '	if' → logprob: -12.475675582885742
    7. 'key' → logprob: -12.725675582885742
    8. ' key' → logprob: -12.975675582885742
    9. '```' → logprob: -13.100675582885742
    10. '#' → logprob: -14.225675582885742

Token 220: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4810231328010559
    2. 's' → logprob: -0.9810231328010559
    3. ' m' → logprob: -5.98102331161499
    4. 'm' → logprob: -6.48102331161499
    5. '(s' → logprob: -7.10602331161499
    6. ' t' → logprob: -7.23102331161499
    7. ' (' → logprob: -7.85602331161499
    8. 't' → logprob: -8.356022834777832
    9. ' n' → logprob: -8.606022834777832
    10. '(m' → logprob: -8.731022834777832

Token 221: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07893087714910507
    2. ' ==' → logprob: -2.5789308547973633
    3. ')' → logprob: -11.828930854797363
    4. ':' → logprob: -11.828930854797363
    5. ')==' → logprob: -11.828930854797363
    6. '=' → logprob: -12.078930854797363
    7. '==-' → logprob: -12.203930854797363
    8. '==
' → logprob: -12.828930854797363
    9. '>' → logprob: -13.703930854797363
    10. ' ' → logprob: -13.703930854797363

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08680655807256699
    2. '0' → logprob: -2.836806535720825
    3. ' ' → logprob: -3.711806535720825
    4. '-' → logprob: -9.586806297302246
    5. ' -' → logprob: -11.211806297302246
    6. '2' → logprob: -11.336806297302246
    7. '3' → logprob: -13.086806297302246
    8. '4' → logprob: -14.649306297302246
    9. '   ' → logprob: -14.649306297302246
    10. '  ' → logprob: -14.774306297302246

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07054205238819122
    2. '0' → logprob: -2.695542097091675
    3. ' ' → logprob: -8.070542335510254
    4. '-' → logprob: -8.195542335510254
    5. '2' → logprob: -11.570542335510254
    6. '3' → logprob: -13.445542335510254
    7. ' -' → logprob: -13.570542335510254
    8. '100' → logprob: -13.820542335510254
    9. '   ' → logprob: -14.945542335510254
    10. '4' → logprob: -15.008042335510254

Token 224: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021020598709583282
    2. ':
' → logprob: -3.8960206508636475
    3. ' and' → logprob: -8.396020889282227
    4. '):' → logprob: -8.521020889282227
    5. ' :' → logprob: -10.646020889282227
    6. '):
' → logprob: -11.146020889282227
    7. 'and' → logprob: -12.396020889282227
    8. ' :
' → logprob: -12.896020889282227
    9. ')' → logprob: -13.021020889282227
    10. '   ' → logprob: -13.146020889282227

Token 225: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019291730597615242
    2. 'log' → logprob: -4.894291877746582
    3. 'if' → logprob: -5.144291877746582
    4. ' if' → logprob: -5.394291877746582
    5. '   ' → logprob: -7.519291877746582
    6. ' log' → logprob: -7.644291877746582
    7. '       ' → logprob: -8.769291877746582
    8. '```' → logprob: -10.519291877746582
    9. '          ' → logprob: -12.019291877746582
    10. '               ' → logprob: -12.519291877746582

Token 226: ' #' (ID: 1069)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.39963918924331665
    2. '           ' → logprob: -1.6496391296386719
    3. 'if' → logprob: -2.024639129638672
    4. ' if' → logprob: -5.649639129638672
    5. ' log' → logprob: -7.149639129638672
    6. '   ' → logprob: -7.649639129638672
    7. '       ' → logprob: -8.024639129638672
    8. '#' → logprob: -9.899639129638672
    9. '```' → logprob: -10.774639129638672
    10. 'login' → logprob: -11.274639129638672

Token 227: ' login' (ID: 9464)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.39709576964378357
    2. '#' → logprob: -1.647095799446106
    3. ' log' → logprob: -2.8970956802368164
    4. 'if' → logprob: -3.1470956802368164
    5. ' #' → logprob: -4.022095680236816
    6. ' if' → logprob: -4.772095680236816
    7. '           ' → logprob: -5.147095680236816
    8. 'login' → logprob: -5.772095680236816
    9. '   ' → logprob: -7.647095680236816
    10. '
' → logprob: -7.772095680236816

Token 228: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0764882564544678
    2. '   ' → logprob: -1.3264882564544678
    3. ':
' → logprob: -1.7014882564544678
    4. '       ' → logprob: -2.3264882564544678
    5. ':' → logprob: -2.5764882564544678
    6. '):
' → logprob: -3.8264882564544678
    7. ')' → logprob: -5.076488494873047
    8. '):' → logprob: -5.576488494873047
    9. ' and' → logprob: -6.201488494873047
    10. ' if' → logprob: -6.826488494873047

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036998428404331207
    2. ' if' → logprob: -5.878699779510498
    3. 'if' → logprob: -7.753699779510498
    4. '       ' → logprob: -8.503700256347656
    5. ')' → logprob: -9.503700256347656
    6. ',' → logprob: -10.003700256347656
    7. 'log' → logprob: -11.003700256347656
    8. '            
' → logprob: -11.003700256347656
    9. '```' → logprob: -11.003700256347656
    10. '   ' → logprob: -11.503700256347656

Token 230: ' log' (ID: 2142)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' (adapté à ' log') → logprob: -0.00938037596642971
    2. 'if' → logprob: -4.759380340576172
    3. '           ' → logprob: -7.259380340576172
    4. ' log' → logprob: -10.509380340576172
    5. '   ' → logprob: -10.884380340576172
    6. ' if' → logprob: -11.634380340576172
    7. 'login' → logprob: -13.134380340576172
    8. '               ' → logprob: -13.384380340576172
    9. '       ' → logprob: -13.634380340576172
    10. '	log' → logprob: -15.259380340576172

Token 231: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -3.128163257315464e-07
    2. '_ins' → logprob: -16.5
    3. 'in' → logprob: -16.75
    4. 's' → logprob: -16.875
    5. '   ' → logprob: -17.25
    6. 'ions' → logprob: -18.5
    7. 'sins' → logprob: -18.5
    8. '           ' → logprob: -18.75
    9. 'ns' → logprob: -18.875
    10. '```' → logprob: -19.125

Token 232: '[n' (ID: 15433)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.38714951276779175
    2. '[(' → logprob: -1.1371495723724365
    3. '[n' → logprob: -8.262149810791016
    4. '[' → logprob: -11.387149810791016
    5. '.setdefault' → logprob: -11.762149810791016
    6. '[s' → logprob: -15.512149810791016
    7. '[f' → logprob: -15.637149810791016
    8. '[t' → logprob: -15.887149810791016
    9. ' [(' → logprob: -16.012149810791016
    10. '[c' → logprob: -16.512149810791016

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03850145637989044
    2. ',' → logprob: -4.038501262664795
    3. '][' → logprob: -4.413501262664795
    4. ',m' → logprob: -5.163501262664795
    5. '[m' → logprob: -6.413501262664795
    6. ']=' → logprob: -7.788501262664795
    7. ']=(' → logprob: -9.663501739501953
    8. '(m' → logprob: -10.038501739501953
    9. 'm' → logprob: -10.038501739501953
    10. ' ]' → logprob: -10.663501739501953

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061210423707962036
    2. ' =' → logprob: -3.5612103939056396
    3. ']' → logprob: -4.186210632324219
    4. '[m' → logprob: -4.311210632324219
    5. '[' → logprob: -6.811210632324219
    6. ',' → logprob: -7.561210632324219
    7. ']=' → logprob: -7.811210632324219
    8. '[n' → logprob: -8.311210632324219
    9. '=m' → logprob: -11.061210632324219
    10. '][' → logprob: -11.436210632324219

Token 235: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.01717538759112358
    2. '[t' → logprob: -4.142175197601318
    3. ' (' → logprob: -6.892175197601318
    4. '[' → logprob: -9.767175674438477
    5. '(m' → logprob: -10.392175674438477
    6. '(' → logprob: -11.017175674438477
    7. 't' → logprob: -11.767175674438477
    8. '[m' → logprob: -12.392175674438477
    9. '   ' → logprob: -12.517175674438477
    10. ' [' → logprob: -13.642175674438477

Token 236: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004243654664605856
    2. 't' → logprob: -5.754243850708008
    3. ' m' → logprob: -6.879243850708008
    4. ' t' → logprob: -10.379243850708008
    5. '   ' → logprob: -13.629243850708008
    6. ' ' → logprob: -13.879243850708008
    7. 's' → logprob: -14.379243850708008
    8. '	m' → logprob: -14.879243850708008
    9. ')m' → logprob: -14.879243850708008
    10. ')' → logprob: -15.004243850708008

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00884418748319149
    2. ',t' → logprob: -5.258844375610352
    3. ' ,' → logprob: -5.633844375610352
    4. 't' → logprob: -10.758844375610352
    5. ' t' → logprob: -12.383844375610352
    6. ' ' → logprob: -13.133844375610352
    7. ',
' → logprob: -14.633844375610352
    8. '	t' → logprob: -15.383844375610352
    9. '
' → logprob: -15.383844375610352
    10. '	' → logprob: -16.00884437561035

Token 238: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007099286303855479
    2. ' t' → logprob: -7.2507100105285645
    3. '	t' → logprob: -18.875709533691406
    4. ')t' → logprob: -20.625709533691406
    5. ' ' → logprob: -20.750709533691406
    6. ')' → logprob: -20.750709533691406
    7. '   ' → logprob: -20.875709533691406
    8. '
' → logprob: -22.000709533691406
    9. '`t' → logprob: -22.125709533691406
    10. ' ' → logprob: -22.875709533691406

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006392885115928948
    2. ')
' → logprob: -7.37563943862915
    3. ' )' → logprob: -11.375638961791992
    4. '   ' → logprob: -14.500638961791992
    5. ')

' → logprob: -14.875638961791992
    6. '       ' → logprob: -15.750638961791992
    7. ')
' → logprob: -16.500638961791992
    8. '<|end|>' → logprob: -17.250638961791992
    9. ' )
' → logprob: -17.250638961791992
    10. '))' → logprob: -18.000638961791992

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070395395159721375
    2. 'else' → logprob: -5.257039546966553
    3. ' else' → logprob: -7.007039546966553
    4. '
' → logprob: -8.132039070129395
    5. '	' → logprob: -8.257039070129395
    6. 'elif' → logprob: -8.507039070129395
    7. '	else' → logprob: -10.507039070129395
    8. '   ' → logprob: -10.507039070129395
    9. '<|end|>' → logprob: -10.757039070129395
    10. ' elif' → logprob: -11.007039070129395

Token 241: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.36292657256126404
    2. ' else' → logprob: -1.3629266023635864
    3. '       ' → logprob: -3.112926483154297
    4. '   ' → logprob: -5.737926483154297
    5. 'elif' → logprob: -7.737926483154297
    6. '	else' → logprob: -8.362926483154297
    7. ' elif' → logprob: -9.487926483154297
    8. '	' → logprob: -12.237926483154297
    9. '
' → logprob: -12.737926483154297
    10. '	elif' → logprob: -12.737926483154297

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059342472814023495
    2. ':
' → logprob: -5.130934238433838
    3. ':
' → logprob: -13.130934715270996
    4. ' :' → logprob: -13.505934715270996
    5. ':#' → logprob: -13.755934715270996
    6. '   ' → logprob: -14.255934715270996
    7. ':

' → logprob: -15.630934715270996
    8. ' :
' → logprob: -16.00593376159668
    9. ' if' → logprob: -16.75593376159668
    10. '           ' → logprob: -17.00593376159668

Token 243: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1908801794052124
    2. 'pc' → logprob: -2.940880298614502
    3. ' pc' → logprob: -3.065880298614502
    4. ' if' → logprob: -3.190880298614502
    5. 'if' → logprob: -3.565880298614502
    6. ',' → logprob: -7.315880298614502
    7. '#' → logprob: -7.690880298614502
    8. 'login' → logprob: -7.690880298614502
    9. 'start' → logprob: -7.940880298614502
    10. 'm' → logprob: -7.940880298614502

Token 244: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16855722665786743
    2. 'pc' → logprob: -2.4185571670532227
    3. 'if' → logprob: -3.1685571670532227
    4. ' if' → logprob: -5.043557167053223
    5. '#' → logprob: -5.168557167053223
    6. ' pc' → logprob: -5.418557167053223
    7. 'm' → logprob: -5.918557167053223
    8. 'start' → logprob: -7.418557167053223
    9. 'pm' → logprob: -7.543557167053223
    10. '   ' → logprob: -7.543557167053223

Token 245: ' logout' (ID: 43634)
  Prédit: 'logout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'logout' → logprob: -0.3412564694881439
    2. ' logout' → logprob: -1.4662564992904663
    3. '#' → logprob: -3.4662563800811768
    4. ' #' → logprob: -4.091256618499756
    5. ' ' → logprob: -6.091256618499756
    6. ':' → logprob: -6.091256618499756
    7. '           ' → logprob: -6.341256618499756
    8. 'log' → logprob: -6.591256618499756
    9. '   ' → logprob: -7.091256618499756
    10. '_logout' → logprob: -7.716256618499756

Token 246: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013706794008612633
    2. '
' → logprob: -5.013706684112549
    3. ',' → logprob: -6.138706684112549
    4. ':' → logprob: -6.763706684112549
    5. '):
' → logprob: -6.763706684112549
    6. ':
' → logprob: -6.888706684112549
    7. ')' → logprob: -7.888706684112549
    8. ' if' → logprob: -7.888706684112549
    9. '       ' → logprob: -8.638707160949707
    10. '            
' → logprob: -8.763707160949707

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06538316607475281
    2. ' pc' → logprob: -3.190383195877075
    3. ' if' → logprob: -4.190382957458496
    4. 'pc' → logprob: -5.315382957458496
    5. 'if' → logprob: -6.565382957458496
    6. '            ' → logprob: -9.190382957458496
    7. ',' → logprob: -9.440382957458496
    8. ' pm' → logprob: -9.565382957458496
    9. ' m' → logprob: -9.690382957458496
    10. 'm' → logprob: -10.440382957458496

Token 248: ' stu' (ID: 44912)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.4524511694908142
    2. 'start' → logprob: -1.827451229095459
    3. 'pm' → logprob: -2.077451229095459
    4. 'if' → logprob: -3.202451229095459
    5. 'login' → logprob: -4.827451229095459
    6. 'sm' → logprob: -4.827451229095459
    7. 'm' → logprob: -5.202451229095459
    8. '           ' → logprob: -5.827451229095459
    9. 'usage' → logprob: -6.202451229095459
    10. 'pcm' → logprob: -6.327451229095459

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2703247368335724
    2. 'dent' → logprob: -1.89532470703125
    3. 'd' → logprob: -2.52032470703125
    4. ',m' → logprob: -6.39532470703125
    5. 'm' → logprob: -6.89532470703125
    6. 'n' → logprob: -7.27032470703125
    7. 'nt' → logprob: -7.64532470703125
    8. '   ' → logprob: -7.77032470703125
    9. ' =' → logprob: -8.14532470703125
    10. 'nent' → logprob: -8.14532470703125

Token 250: ' tin' (ID: 17325)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lt' → logprob: -1.240486979484558
    2. 'login' → logprob: -1.490486979484558
    3. 'time' → logprob: -1.615486979484558
    4. 'start' → logprob: -1.615486979484558
    5. 'log' → logprob: -3.3654870986938477
    6. 'stime' → logprob: -3.7404870986938477
    7. 'st' → logprob: -5.365487098693848
    8. 't' → logprob: -5.365487098693848
    9. ' lt' → logprob: -5.615487098693848
    10. ' login' → logprob: -5.865487098693848

Token 251: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18812225759029388
    2. '=' → logprob: -1.813122272491455
    3. ' =' → logprob: -5.563122272491455
    4. ',' → logprob: -6.313122272491455
    5. 'me' → logprob: -6.438122272491455
    6. 't' → logprob: -8.063121795654297
    7. 'ime' → logprob: -8.813121795654297
    8. '```' → logprob: -8.938121795654297
    9. 'ie' → logprob: -9.438121795654297
    10. 'g' → logprob: -9.438121795654297

Token 252: ' log' (ID: 2142)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.07889176905155182
    2. ' log' → logprob: -2.5788917541503906
    3. '           ' → logprob: -13.57889175415039
    4. '	log' → logprob: -15.57889175415039
    5. '(log' → logprob: -16.20389175415039
    6. '_log' → logprob: -16.70389175415039
    7. 'login' → logprob: -16.82889175415039
    8. '"log' → logprob: -16.82889175415039
    9. ' logs' → logprob: -16.95389175415039
    10. 'logs' → logprob: -16.95389175415039

Token 253: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.0921942703134846e-05
    2. 's' → logprob: -11.50001049041748
    3. 'in' → logprob: -14.50001049041748
    4. 'ns' → logprob: -16.125011444091797
    5. '(ins' → logprob: -17.125011444091797
    6. 'sins' → logprob: -17.375011444091797
    7. '_ins' → logprob: -17.750011444091797
    8. 'ons' → logprob: -17.875011444091797
    9. '```' → logprob: -18.000011444091797
    10. '[' → logprob: -18.250011444091797

Token 254: '.pop' (ID: 15746)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.21340642869472504
    2. '.pop' → logprob: -1.9634064435958862
    3. 'n' → logprob: -2.9634063243865967
    4. 'pop' → logprob: -8.838406562805176
    5. '(n' → logprob: -13.088406562805176
    6. '.' → logprob: -13.838406562805176
    7. '	n' → logprob: -14.588406562805176
    8. '.get' → logprob: -14.838406562805176
    9. ' n' → logprob: -15.338406562805176
    10. '[' → logprob: -15.463406562805176

Token 255: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001055676257237792
    2. 'n' → logprob: -6.876055717468262
    3. '[n' → logprob: -10.876055717468262
    4. '(' → logprob: -12.626055717468262
    5. ' (' → logprob: -15.376055717468262
    6. '(
' → logprob: -15.626055717468262
    7. 's' → logprob: -16.001054763793945
    8. 't' → logprob: -16.751054763793945
    9. ' n' → logprob: -17.001054763793945
    10. '	n' → logprob: -17.251054763793945

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133414387702942
    2. ')
' → logprob: -1.3133413791656494
    3. ')
' → logprob: -9.56334114074707
    4. ' )
' → logprob: -12.81334114074707
    5. ' )' → logprob: -12.81334114074707
    6. ')

' → logprob: -13.68834114074707
    7. ')[' → logprob: -13.68834114074707
    8. ')m' → logprob: -14.31334114074707
    9. ')`
' → logprob: -15.68834114074707
    10. '   ' → logprob: -15.81334114074707

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042484626173973083
    2. ' usage' → logprob: -3.5424845218658447
    3. 'usage' → logprob: -4.417484760284424
    4. ' if' → logprob: -8.667484283447266
    5. '            
' → logprob: -8.917484283447266
    6. '   ' → logprob: -9.167484283447266
    7. 'if' → logprob: -9.667484283447266
    8. '       ' → logprob: -10.042484283447266
    9. '
' → logprob: -10.667484283447266
    10. ' 
' → logprob: -11.542484283447266

Token 258: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.0007903324440121651
    2. '           ' → logprob: -7.625790119171143
    3. ' usage' → logprob: -8.3757905960083
    4. 'if' → logprob: -10.0007905960083
    5. '   ' → logprob: -10.7507905960083
    6. 'interval' → logprob: -13.0007905960083
    7. '               ' → logprob: -13.6257905960083
    8. '       ' → logprob: -14.8757905960083
    9. '            
' → logprob: -15.3757905960083
    10. 'duration' → logprob: -15.5007905960083

Token 259: '[' (ID: 58)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.4742160439491272
    2. '[' → logprob: -0.9742160439491272
    3. 'm' → logprob: -9.09921646118164
    4. '[s' → logprob: -11.34921646118164
    5. 'stu' → logprob: -12.34921646118164
    6. '[mem' → logprob: -12.59921646118164
    7. '.setdefault' → logprob: -13.09921646118164
    8. 's' → logprob: -13.22421646118164
    9. '[M' → logprob: -14.47421646118164
    10. '```' → logprob: -14.59921646118164

Token 260: 'stu' (ID: 41672)
  Prédit: 'stu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stu' → logprob: -0.2524603605270386
    2. 'm' → logprob: -1.5024603605270386
    3. '[m' → logprob: -9.377460479736328
    4. ' stu' → logprob: -9.502460479736328
    5. 'sto' → logprob: -9.877460479736328
    6. 'st' → logprob: -9.877460479736328
    7. 's' → logprob: -10.127460479736328
    8. 'stm' → logprob: -10.252460479736328
    9. '[' → logprob: -10.502460479736328
    10. 'sti' → logprob: -11.002460479736328

Token 261: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00024358915106859058
    2. '.append' → logprob: -9.000243186950684
    3. '[m' → logprob: -10.250243186950684
    4. '][' → logprob: -10.250243186950684
    5. '[' → logprob: -10.875243186950684
    6. ').' → logprob: -11.500243186950684
    7. ']' → logprob: -11.875243186950684
    8. 'append' → logprob: -12.000243186950684
    9. '.' → logprob: -12.750243186950684
    10. ' ].' → logprob: -13.375243186950684

Token 262: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -14.750000953674316
    4. 'app' → logprob: -18.0
    5. 'appen' → logprob: -18.375
    6. '_append' → logprob: -20.375
    7. '	append' → logprob: -20.875
    8. 'Append' → logprob: -20.875
    9. '   ' → logprob: -22.25
    10. '```' → logprob: -22.375

Token 263: '([' (ID: 5194)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.5978220105171204
    2. '([' → logprob: -0.8478220105171204
    3. '[' → logprob: -3.8478219509124756
    4. '(t' → logprob: -8.472822189331055
    5. '[T' → logprob: -10.222822189331055
    6. ' [' → logprob: -10.972822189331055
    7. '[(' → logprob: -11.472822189331055
    8. '((' → logprob: -11.722822189331055
    9. '[start' → logprob: -11.722822189331055
    10. '[token' → logprob: -12.097822189331055

Token 264: 'tin' (ID: 63664)
  Prédit: 'tin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tin' → logprob: -0.0005388548015616834
    2. ' tin' → logprob: -7.6255388259887695
    3. 't' → logprob: -10.50053882598877
    4. '   ' → logprob: -10.87553882598877
    5. 'ti' → logprob: -13.37553882598877
    6. ' ' → logprob: -15.12553882598877
    7. '           ' → logprob: -15.37553882598877
    8. '  ' → logprob: -15.50053882598877
    9. '(t' → logprob: -15.50053882598877
    10. '	t' → logprob: -15.75053882598877

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017475310014560819
    2. ',t' → logprob: -6.3767476081848145
    3. ' ,' → logprob: -10.126747131347656
    4. 't' → logprob: -12.626747131347656
    5. ',
' → logprob: -13.251747131347656
    6. ' t' → logprob: -15.751747131347656
    7. ',m' → logprob: -17.001747131347656
    8. '[' → logprob: -17.501747131347656
    9. '[t' → logprob: -17.751747131347656
    10. ',end' → logprob: -17.876747131347656

Token 266: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009115827269852161
    2. ' t' → logprob: -7.000911712646484
    3. '	t' → logprob: -18.750911712646484
    4. '           ' → logprob: -19.125911712646484
    5. '   ' → logprob: -19.625911712646484
    6. ' ' → logprob: -21.000911712646484
    7. '`t' → logprob: -21.000911712646484
    8. '               ' → logprob: -21.375911712646484
    9. '
' → logprob: -22.000911712646484
    10. '    ' → logprob: -22.000911712646484

Token 267: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00010759611177491024
    2. ')' → logprob: -9.875107765197754
    3. '])
' → logprob: -10.250107765197754
    4. ' ])' → logprob: -11.750107765197754
    5. ']' → logprob: -12.500107765197754
    6. ')])' → logprob: -12.625107765197754
    7. ')]' → logprob: -13.125107765197754
    8. ']])' → logprob: -13.625107765197754
    9. '))' → logprob: -14.375107765197754
    10. '])]' → logprob: -14.500107765197754

Token 268: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5045095086097717
    2. '<|end|>' → logprob: -1.879509449005127
    3. ' for' → logprob: -2.129509449005127
    4. '   ' → logprob: -2.254509449005127
    5. '```' → logprob: -5.004509449005127
    6. ' ' → logprob: -6.254509449005127
    7. '    
' → logprob: -6.254509449005127
    8. ')' → logprob: -6.254509449005127
    9. '#' → logprob: -6.754509449005127
    10. '<|end|>' → logprob: -7.129509449005127

Token 269: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11896918714046478
    2. '   ' → logprob: -2.993969202041626
    3. ' for' → logprob: -3.243969202041626
    4. 'usage' → logprob: -4.118968963623047
    5. 'merged' → logprob: -5.493968963623047
    6. 'interval' → logprob: -6.868968963623047
    7. ' usage' → logprob: -7.993968963623047
    8. '    
' → logprob: -8.118968963623047
    9. '```' → logprob: -8.493968963623047
    10. 'us' → logprob: -8.993968963623047

Token 270: ' merge' (ID: 20345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22005848586559296
    2. ' for' → logprob: -1.7200584411621094
    3. 'result' → logprob: -4.970058441162109
    4. 'usage' → logprob: -5.470058441162109
    5. '   ' → logprob: -6.220058441162109
    6. 'merged' → logprob: -6.595058441162109
    7. ' usage' → logprob: -6.720058441162109
    8. ' result' → logprob: -7.220058441162109
    9. ' merged' → logprob: -7.845058441162109
    10. 'results' → logprob: -7.970058441162109

Token 271: ' intervals' (ID: 49900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7207274436950684
    2. ' for' → logprob: -1.4707274436950684
    3. 'usage' → logprob: -2.3457274436950684
    4. '_usage' → logprob: -2.5957274436950684
    5. '   ' → logprob: -3.2207274436950684
    6. 'interval' → logprob: -3.9707274436950684
    7. 'ed' → logprob: -4.095727443695068
    8. ' usage' → logprob: -4.345727443695068
    9. ' intervals' → logprob: -4.470727443695068
    10. '_inter' → logprob: -4.970727443695068

Token 272: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0482180193066597
    2. 'for' → logprob: -3.548218011856079
    3. ' for' → logprob: -4.048218250274658
    4. '    
' → logprob: -7.423218250274658
    5. '
' → logprob: -8.7982177734375
    6. 'usage' → logprob: -9.6732177734375
    7. ' 
' → logprob: -11.7982177734375
    8. ' usage' → logprob: -12.1732177734375
    9. '  
' → logprob: -12.6732177734375
    10. '   
' → logprob: -12.7982177734375

Token 273: ' student' (ID: 6760)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1009769439697266
    2. 'pc' → logprob: -1.1009769439697266
    3. 'machine' → logprob: -1.6009769439697266
    4. 'student' → logprob: -2.8509769439697266
    5. ' pc' → logprob: -3.7259769439697266
    6. 'computer' → logprob: -4.600976943969727
    7. ' machine' → logprob: -4.850976943969727
    8. 'usage' → logprob: -4.850976943969727
    9. 'user' → logprob: -5.100976943969727
    10. ' m' → logprob: -5.475976943969727

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41626685857772827
    2. 'for' → logprob: -1.291266918182373
    3. ' for' → logprob: -2.791266918182373
    4. '
' → logprob: -5.916266918182373
    5. '    
' → logprob: -6.541266918182373
    6. 'usage' → logprob: -10.791266441345215
    7. '```' → logprob: -10.916266441345215
    8. ' 
' → logprob: -11.416266441345215
    9. '  
' → logprob: -11.666266441345215
    10. '
' → logprob: -11.791266441345215

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12291169166564941
    2. 'for' → logprob: -2.2479116916656494
    3. ' for' → logprob: -4.62291145324707
    4. '    
' → logprob: -8.99791145324707
    5. '
' → logprob: -9.49791145324707
    6. '```' → logprob: -12.24791145324707
    7. '  ' → logprob: -12.62291145324707
    8. '  
' → logprob: -13.37291145324707
    9. ' ' → logprob: -13.62291145324707
    10. '<|end|>' → logprob: -13.87291145324707

Token 276: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4205029308795929
    2. '   ' → logprob: -1.2955029010772705
    3. ' for' → logprob: -2.6705029010772705
    4. 'usage' → logprob: -8.295502662658691
    5. ' usage' → logprob: -10.545502662658691
    6. '    
' → logprob: -11.170502662658691
    7. 'merged' → logprob: -12.170502662658691
    8. '  ' → logprob: -12.420502662658691
    9. ' ' → logprob: -13.170502662658691
    10. '	for' → logprob: -13.920502662658691

Token 277: ' m' (ID: 284)
  Prédit: 'stu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stu' → logprob: -0.6200327277183533
    2. 'm' → logprob: -1.870032787322998
    3. ' stu' → logprob: -2.120032787322998
    4. ' m' → logprob: -2.245032787322998
    5. ' student' → logprob: -2.995032787322998
    6. 'student' → logprob: -3.620032787322998
    7. ' key' → logprob: -6.495032787322998
    8. 'k' → logprob: -6.745032787322998
    9. ' k' → logprob: -7.495032787322998
    10. 'key' → logprob: -7.745032787322998

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2565971910953522
    2. 'in' → logprob: -1.5065971612930298
    3. ',' → logprob: -5.38159704208374
    4. 'm' → logprob: -11.256597518920898
    5. 'n' → logprob: -11.506597518920898
    6. ' ' → logprob: -11.506597518920898
    7. 'i' → logprob: -12.256597518920898
    8. '   ' → logprob: -12.506597518920898
    9. ' ,' → logprob: -12.756597518920898
    10. ',in' → logprob: -12.756597518920898

Token 279: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.012742599472403526
    2. 'range' → logprob: -4.762742519378662
    3. ' usage' → logprob: -5.512742519378662
    4. ' range' → logprob: -9.38774299621582
    5. ' ' → logprob: -14.88774299621582
    6. 'Usage' → logprob: -15.51274299621582
    7. 'use' → logprob: -16.76274299621582
    8. '   ' → logprob: -17.13774299621582
    9. '_usage' → logprob: -17.38774299621582
    10. 'sorted' → logprob: -18.01274299621582

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6994994282722473
    2. ' in' → logprob: -1.4494993686676025
    3. ']:' → logprob: -1.8244993686676025
    4. ']' → logprob: -2.5744993686676025
    5. ',' → logprob: -4.824499607086182
    6. ':
' → logprob: -5.199499607086182
    7. 'in' → logprob: -5.324499607086182
    8. 'm' → logprob: -5.949499607086182
    9. '].' → logprob: -6.074499607086182
    10. '):' → logprob: -6.324499607086182

Token 281: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05946500599384308
    2. 'usage' → logprob: -3.184464931488037
    3. '       ' → logprob: -4.809464931488037
    4. ' usage' → logprob: -4.809464931488037
    5. '_usage' → logprob: -11.559465408325195
    6. '  ' → logprob: -12.309465408325195
    7. '```' → logprob: -12.434465408325195
    8. '    ' → logprob: -12.934465408325195
    9. ' ' → logprob: -13.309465408325195
    10. 'Usage' → logprob: -14.059465408325195

Token 282: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.07875417172908783
    2. '   ' → logprob: -3.078754186630249
    3. ' usage' → logprob: -3.578754186630249
    4. '       ' → logprob: -6.32875394821167
    5. ' ' → logprob: -11.703754425048828
    6. '  ' → logprob: -11.703754425048828
    7. 'Usage' → logprob: -13.203754425048828
    8. '_usage' → logprob: -13.328754425048828
    9. '    ' → logprob: -14.453754425048828
    10. '           ' → logprob: -15.078754425048828

Token 283: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.37500286102295
    3. 'm' → logprob: -13.75000286102295
    4. '][' → logprob: -16.125001907348633
    5. ' [' → logprob: -17.375001907348633
    6. ']' → logprob: -18.000001907348633
    7. '=' → logprob: -18.000001907348633
    8. '```' → logprob: -18.125001907348633
    9. '}[' → logprob: -18.125001907348633
    10. '=m' → logprob: -18.250001907348633

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021895181853324175
    2. ']=' → logprob: -6.252189636230469
    3. '=' → logprob: -8.252189636230469
    4. ' ]' → logprob: -16.12718963623047
    5. ' =' → logprob: -16.50218963623047
    6. '[' → logprob: -17.50218963623047
    7. '   ' → logprob: -17.87718963623047
    8. ')' → logprob: -18.37718963623047
    9. ']+=' → logprob: -18.50218963623047
    10. '	' → logprob: -19.50218963623047

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020354038861114532
    2. ' =' → logprob: -8.500203132629395
    3. ']=' → logprob: -18.62520408630371
    4. ']' → logprob: -18.62520408630371
    5. '＝' → logprob: -19.62520408630371
    6. '.=' → logprob: -20.00020408630371
    7. ')' → logprob: -20.25020408630371
    8. '=

' → logprob: -20.37520408630371
    9. ')=' → logprob: -20.37520408630371
    10. '[' → logprob: -20.75020408630371

Token 286: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.10020828247070312
    2. ' merge' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.225208282470703
    4. 'merged' → logprob: -14.850208282470703
    5. ' merged' → logprob: -15.225208282470703
    6. ' ' → logprob: -15.850208282470703
    7. '.merge' → logprob: -16.100208282470703
    8. '[' → logprob: -17.350208282470703
    9. '  ' → logprob: -17.475208282470703
    10. 'mer' → logprob: -17.975208282470703

Token 287: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0005437385407276452
    2. '_' → logprob: -7.625543594360352
    3. 'interval' → logprob: -10.500543594360352
    4. '_interval' → logprob: -11.000543594360352
    5. '_usage' → logprob: -12.000543594360352
    6. '(' → logprob: -13.500543594360352
    7. '(interval' → logprob: -13.500543594360352
    8. 'usage' → logprob: -14.250543594360352
    9. '(_' → logprob: -14.250543594360352
    10. '```' → logprob: -15.000543594360352

Token 288: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.23717762529850006
    2. 'als' → logprob: -1.6121776103973389
    3. 'val' → logprob: -4.737177848815918
    4. 'al' → logprob: -6.612177848815918
    5. 'interval' → logprob: -7.362177848815918
    6. 'usage' → logprob: -7.862177848815918
    7. 'erv' → logprob: -8.862177848815918
    8. '[' → logprob: -9.112177848815918
    9. '(' → logprob: -9.987177848815918
    10. 'ls' → logprob: -10.237177848815918

Token 289: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '((' → logprob: -17.5
    3. '([' → logprob: -18.25
    4. 'usage' → logprob: -18.375
    5. ' (' → logprob: -19.0
    6. '(list' → logprob: -21.0
    7. '(use' → logprob: -22.25
    8. ' usage' → logprob: -22.625
    9. '([(' → logprob: -22.875
    10. '(
' → logprob: -23.0

Token 290: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -4.4418171455617994e-05
    2. ' usage' → logprob: -10.500044822692871
    3. '(' → logprob: -11.000044822692871
    4. ')' → logprob: -15.875044822692871
    5. '[' → logprob: -17.250043869018555
    6. 'Usage' → logprob: -17.375043869018555
    7. 'use' → logprob: -19.000043869018555
    8. '_usage' → logprob: -19.625043869018555
    9. '
' → logprob: -20.250043869018555
    10. '   ' → logprob: -20.500043869018555

Token 291: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.1885043978691101
    2. '(' → logprob: -2.438504457473755
    3. '[' → logprob: -2.563504457473755
    4. '(m' → logprob: -5.563504219055176
    5. 'usage' → logprob: -5.813504219055176
    6. '[(' → logprob: -7.563504219055176
    7. ' usage' → logprob: -9.563504219055176
    8. '([' → logprob: -10.813504219055176
    9. '[[' → logprob: -11.063504219055176
    10. ')' → logprob: -11.938504219055176

Token 292: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013321444857865572
    2. '])' → logprob: -6.6263322830200195
    3. '})' → logprob: -13.12633228302002
    4. '))' → logprob: -13.62633228302002
    5. ' )' → logprob: -13.75133228302002
    6. ')
' → logprob: -14.62633228302002
    7. '）' → logprob: -15.12633228302002
    8. ')]' → logprob: -15.12633228302002
    9. '())' → logprob: -15.50133228302002
    10. '>)' → logprob: -15.62633228302002

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20625963807106018
    2. 'total' → logprob: -2.9562597274780273
    3. 'for' → logprob: -3.2062597274780273
    4. '    
' → logprob: -3.8312597274780273
    5. 'print' → logprob: -4.081259727478027
    6. 'max' → logprob: -5.331259727478027
    7. ' for' → logprob: -5.456259727478027
    8. '```' → logprob: -5.456259727478027
    9. 'time' → logprob: -6.081259727478027
    10. '#' → logprob: -6.081259727478027

Token 294: ' q' (ID: 2335)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.5843647718429565
    2. 'q' (adapté à ' q') → logprob: -1.9593647718429565
    3. 'query' → logprob: -2.334364891052246
    4. 'total' → logprob: -2.834364891052246
    5. 'for' → logprob: -2.834364891052246
    6. 'queries' → logprob: -2.834364891052246
    7. 'answers' → logprob: -3.084364891052246
    8. 'answer' → logprob: -3.209364891052246
    9. '   ' → logprob: -3.459364891052246
    10. 'ans' → logprob: -3.584364891052246

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3282715380191803
    2. 'u' → logprob: -1.953271508216858
    3. '=' → logprob: -2.0782716274261475
    4. 'ue' → logprob: -4.828271389007568
    5. 'uer' → logprob: -5.578271389007568
    6. 'uire' → logprob: -8.578271865844727
    7. '   ' → logprob: -8.703271865844727
    8. 'ual' → logprob: -8.953271865844727
    9. 'uir' → logprob: -9.328271865844727
    10. 'uel' → logprob: -9.703271865844727

Token 296: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868745267391205
    2. ' int' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.386874198913574
    4. '   ' → logprob: -14.011874198913574
    5. '  ' → logprob: -14.886874198913574
    6. '[int' → logprob: -14.886874198913574
    7. '	int' → logprob: -15.886874198913574
    8. '(int' → logprob: -16.38687515258789
    9. '    ' → logprob: -16.51187515258789
    10. '<int' → logprob: -16.63687515258789

Token 297: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016074994346126914
    2. '(' → logprob: -8.750161170959473
    3. 'input' → logprob: -13.250161170959473
    4. ' (' → logprob: -14.625161170959473
    5. '=input' → logprob: -16.875160217285156
    6. '(int' → logprob: -17.625160217285156
    7. ' input' → logprob: -17.875160217285156
    8. '(in' → logprob: -18.375160217285156
    9. '(
' → logprob: -18.500160217285156
    10. ',input' → logprob: -18.625160217285156

Token 298: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2572247087955475
    2. '())' → logprob: -1.507224678993225
    3. '()' → logprob: -5.2572245597839355
    4. ')
' → logprob: -10.382225036621094
    5. '())
' → logprob: -10.507225036621094
    6. '()
' → logprob: -11.882225036621094
    7. ' )' → logprob: -13.007225036621094
    8. '(' → logprob: -13.382225036621094
    9. ' ())' → logprob: -13.632225036621094
    10. '();)' → logprob: -14.382225036621094

Token 299: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00031508569372817874
    2. ' for' → logprob: -8.375314712524414
    3. '   ' → logprob: -10.000314712524414
    4. '
' → logprob: -10.375314712524414
    5. '	for' → logprob: -11.875314712524414
    6. '<|end|>' → logprob: -14.500314712524414
    7. '    
' → logprob: -14.750314712524414
    8. '```' → logprob: -16.625314712524414
    9. 'while' → logprob: -17.375314712524414
    10. ' 
' → logprob: -17.500314712524414

Token 300: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.12500286102295
    4. '
' → logprob: -15.87500286102295
    5. '	for' → logprob: -18.750001907348633
    6. '    
' → logprob: -18.875001907348633
    7. 'q' → logprob: -21.250001907348633
    8. 'while' → logprob: -22.125001907348633
    9. 'from' → logprob: -22.500001907348633
    10. ' 
' → logprob: -22.875001907348633

Token 301: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25197505950927734
    2. '_' → logprob: -1.5019750595092773
    3. ' i' → logprob: -10.626975059509277
    4. ' ' → logprob: -10.751975059509277
    5. ' ' → logprob: -15.876975059509277
    6. ' __' → logprob: -16.376976013183594
    7. '__' → logprob: -16.876976013183594
    8. ' q' → logprob: -17.501976013183594
    9. '_i' → logprob: -18.126976013183594
    10. ' _
' → logprob: -18.251976013183594

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1802200824022293
    2. 'in' → logprob: -1.805220127105713
    3. ' ' → logprob: -7.805220127105713
    4. 'q' → logprob: -10.805219650268555
    5. '	in' → logprob: -11.180219650268555
    6. '  ' → logprob: -11.680219650268555
    7. ' i' → logprob: -11.805219650268555
    8. ' _' → logprob: -12.430219650268555
    9. 'i' → logprob: -12.680219650268555
    10. ',' → logprob: -12.680219650268555

Token 303: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015040287980809808
    2. ' range' → logprob: -6.501503944396973
    3. 'q' → logprob: -13.501503944396973
    4. '(range' → logprob: -16.25150489807129
    5. 'in' → logprob: -17.25150489807129
    6. ' ' → logprob: -17.25150489807129
    7. 'ange' → logprob: -17.37650489807129
    8. 'input' → logprob: -17.50150489807129
    9. ')' → logprob: -17.62650489807129
    10. 'query' → logprob: -17.62650489807129

Token 304: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1405487358570099
    2. '(q' → logprob: -2.1405487060546875
    3. ' (' → logprob: -4.3905487060546875
    4. ' ' → logprob: -7.6405487060546875
    5. ' q' → logprob: -7.8905487060546875
    6. '(range' → logprob: -9.390548706054688
    7. '()' → logprob: -9.765548706054688
    8. '  ' → logprob: -10.265548706054688
    9. ' ()' → logprob: -10.515548706054688
    10. ' range' → logprob: -11.140548706054688

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35714632272720337
    2. '):
' → logprob: -1.2321462631225586
    3. ',' → logprob: -4.857146263122559
    4. '   ' → logprob: -7.732146263122559
    5. ':' → logprob: -8.107146263122559
    6. ')' → logprob: -10.107146263122559
    7. '):
' → logprob: -10.732146263122559
    8. ' ):' → logprob: -10.857146263122559
    9. ':
' → logprob: -10.982146263122559
    10. '():
' → logprob: -11.107146263122559

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014049944002181292
    2. '	   ' → logprob: -7.376404762268066
    3. ',' → logprob: -8.626404762268066
    4. '	' → logprob: -9.001404762268066
    5. '        
' → logprob: -9.376404762268066
    6. '    ' → logprob: -9.626404762268066
    7. '   ' → logprob: -9.626404762268066
    8. '[' → logprob: -9.876404762268066
    9. '' → logprob: -10.626404762268066
    10. '(' → logprob: -11.126404762268066

Token 307: ' ts' (ID: 6601)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9816812872886658
    2. 'l' → logprob: -1.9816813468933105
    3. ' s' → logprob: -2.4816813468933105
    4. 'L' → logprob: -2.7316813468933105
    5. 't' → logprob: -3.1066813468933105
    6. ' l' → logprob: -3.2316813468933105
    7. 'a' → logprob: -3.4816813468933105
    8. 'start' → logprob: -3.4816813468933105
    9. 'x' → logprob: -3.6066813468933105
    10. ' L' → logprob: -3.7316813468933105

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012953500263392925
    2. ' ,' → logprob: -4.887953281402588
    3. 't' → logprob: -5.387953281402588
    4. 'art' → logprob: -7.387953281402588
    5. ',t' → logprob: -9.637953758239746
    6. ',start' → logprob: -10.887953758239746
    7. '_,' → logprob: -11.387953758239746
    8. ' t' → logprob: -12.137953758239746
    9. 'tar' → logprob: -12.137953758239746
    10. ' =' → logprob: -12.262953758239746

Token 309: ' te' (ID: 729)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.00627465546131134
    2. ' te' → logprob: -5.256274700164795
    3. 'tf' → logprob: -6.881274700164795
    4. 'td' → logprob: -12.006274223327637
    5. 'tt' → logprob: -12.881274223327637
    6. ' tf' → logprob: -13.131274223327637
    7. 't' → logprob: -14.631274223327637
    8. '_te' → logprob: -14.631274223327637
    9. 'tm' → logprob: -14.881274223327637
    10. 'ted' → logprob: -15.006274223327637

Token 310: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12741613388061523
    2. ' =' → logprob: -2.1274161338806152
    3. ',' → logprob: -7.627416133880615
    4. ' ,' → logprob: -14.627416610717773
    5. ' ' → logprob: -15.627416610717773
    6. ')' → logprob: -16.252416610717773
    7. '   ' → logprob: -17.127416610717773
    8. '    ' → logprob: -17.502416610717773
    9. '=input' → logprob: -17.502416610717773
    10. '=line' → logprob: -18.002416610717773

Token 311: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2028520256280899
    2. 'pc' → logprob: -2.8278520107269287
    3. ' m' → logprob: -3.4528520107269287
    4. 'p' → logprob: -3.4528520107269287
    5. 'pm' → logprob: -4.577852249145508
    6. 'k' → logprob: -4.827852249145508
    7. ' pc' → logprob: -4.952852249145508
    8. 'ms' → logprob: -5.077852249145508
    9. 'stu' → logprob: -5.577852249145508
    10. 'mc' → logprob: -5.827852249145508

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20693263411521912
    2. ' =' → logprob: -1.7069326639175415
    3. ',' → logprob: -5.206932544708252
    4. ' ' → logprob: -11.08193302154541
    5. ' ,' → logprob: -11.95693302154541
    6. ')' → logprob: -13.45693302154541
    7. '=input' → logprob: -14.58193302154541
    8. '  ' → logprob: -14.58193302154541
    9. '=int' → logprob: -14.95693302154541
    10. ' =
' → logprob: -15.70693302154541

Token 313: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20142094790935516
    2. 'map' → logprob: -1.7014209032058716
    3. '    ' → logprob: -11.951420783996582
    4. '   ' → logprob: -14.576420783996582
    5. '	map' → logprob: -14.701420783996582
    6. ' ' → logprob: -15.826420783996582
    7. '       ' → logprob: -16.8264217376709
    8. '        ' → logprob: -17.4514217376709
    9. '  ' → logprob: -17.4514217376709
    10. 'm' → logprob: -17.4514217376709

Token 314: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004128622822463512
    2. 'int' → logprob: -5.504128456115723
    3. '=int' → logprob: -10.754128456115723
    4. ',int' → logprob: -10.754128456115723
    5. '[int' → logprob: -12.254128456115723
    6. '```' → logprob: -13.879128456115723
    7. ']int' → logprob: -14.629128456115723
    8. '<int' → logprob: -14.629128456115723
    9. ' int' → logprob: -15.254128456115723
    10. ':int' → logprob: -15.879128456115723

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023948144167661667
    2. ',input' → logprob: -3.7739481925964355
    3. '(),' → logprob: -7.5239481925964355
    4. '(input' → logprob: -10.273947715759277
    5. ' ,' → logprob: -10.273947715759277
    6. '(' → logprob: -10.398947715759277
    7. 'input' → logprob: -10.898947715759277
    8. ',int' → logprob: -11.023947715759277
    9. '       ' → logprob: -11.273947715759277
    10. 'int' → logprob: -12.898947715759277

Token 316: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. ',input' → logprob: -17.258615493774414
    4. '(input' → logprob: -18.133615493774414
    5. 'int' → logprob: -19.258615493774414
    6. ')' → logprob: -19.383615493774414
    7. '=input' → logprob: -20.258615493774414
    8. 'map' → logprob: -20.508615493774414
    9. '   ' → logprob: -21.258615493774414
    10. '[input' → logprob: -21.383615493774414

Token 317: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.125
    3. ')' → logprob: -17.0
    4. '.' → logprob: -18.0
    5. ' ().' → logprob: -18.375
    6. '.split' → logprob: -19.0
    7. '   ' → logprob: -20.0
    8. '(' → logprob: -20.125
    9. '().__' → logprob: -20.625
    10. '()
' → logprob: -21.25

Token 318: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'strip' → logprob: -15.625
    3. ')' → logprob: -16.0
    4. ' split' → logprob: -16.25
    5. '(split' → logprob: -16.625
    6. 'rstrip' → logprob: -19.625
    7. 'plit' → logprob: -20.625
    8. '.split' → logprob: -20.625
    9. 'spl' → logprob: -21.25
    10. ')
' → logprob: -22.0

Token 319: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00081153231440112
    2. ')
' → logprob: -7.125811576843262
    3. '):' → logprob: -13.125811576843262
    4. '())' → logprob: -13.250811576843262
    5. '):
' → logprob: -14.000811576843262
    6. ')`' → logprob: -14.250811576843262
    7. '       ' → logprob: -14.625811576843262
    8. ')
' → logprob: -14.875811576843262
    9. '()' → logprob: -15.250811576843262
    10. ' )' → logprob: -15.375811576843262

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009592344984412193
    2. '
' → logprob: -5.509592533111572
    3. '<|end|>' → logprob: -5.884592533111572
    4. '        
' → logprob: -7.009592533111572
    5. '   ' → logprob: -7.509592533111572
    6. ',' → logprob: -8.259592056274414
    7. ':' → logprob: -8.759592056274414
    8. '' → logprob: -8.884592056274414
    9. '  
' → logprob: -8.884592056274414
    10. '    
' → logprob: -9.259592056274414

Token 321: ' intervals' (ID: 49900)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.730690598487854
    2. 'ans' → logprob: -1.355690598487854
    3. 'interval' → logprob: -2.2306904792785645
    4. 'res' → logprob: -2.8556904792785645
    5. 'result' → logprob: -3.1056904792785645
    6. 'answer' → logprob: -3.8556904792785645
    7. 'usage' → logprob: -4.4806904792785645
    8. 'time' → logprob: -5.4806904792785645
    9. 'idx' → logprob: -6.2306904792785645
    10. 'l' → logprob: -6.2306904792785645

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692926824092865
    2. ' =' → logprob: -2.12692928314209
    3. ',' → logprob: -14.37692928314209
    4. ')' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.626928329467773
    6. 's' → logprob: -16.876928329467773
    7. '[' → logprob: -17.001928329467773
    8. '=user' → logprob: -17.251928329467773
    9. '   ' → logprob: -17.376928329467773
    10. '<|end|>' → logprob: -17.501928329467773

Token 323: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.008614808320999146
    2. ' usage' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.758615493774414
    4. 'use' → logprob: -17.008615493774414
    5. '_usage' → logprob: -17.008615493774414
    6. 'Usage' → logprob: -17.008615493774414
    7. ' ' → logprob: -18.133615493774414
    8. '[' → logprob: -18.883615493774414
    9. '  ' → logprob: -19.008615493774414
    10. 'merge' → logprob: -19.383615493774414

Token 324: '.get' (ID: 775)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0009122979827225208
    2. '.get' → logprob: -7.000912189483643
    3. 'm' → logprob: -14.3759126663208
    4. 'get' → logprob: -15.6259126663208
    5. '[' → logprob: -16.750911712646484
    6. '.m' → logprob: -17.000911712646484
    7. '.setdefault' → logprob: -17.625911712646484
    8. '[get' → logprob: -17.875911712646484
    9. '.' → logprob: -18.125911712646484
    10. ' [' → logprob: -18.250911712646484

Token 325: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.2664456789934775e-06
    2. 'm' → logprob: -13.625000953674316
    3. '(' → logprob: -17.125001907348633
    4. '(
' → logprob: -17.375001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '[m' → logprob: -19.750001907348633
    7. ')m' → logprob: -19.875001907348633
    8. ',m' → logprob: -20.000001907348633
    9. '	m' → logprob: -20.750001907348633
    10. '((' → logprob: -21.125001907348633

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.436450636712834e-05
    2. ')' → logprob: -9.625094413757324
    3. ')
' → logprob: -10.750094413757324
    4. '[],' → logprob: -12.500094413757324
    5. ',
' → logprob: -13.500094413757324
    6. ' ,' → logprob: -13.875094413757324
    7. '[]' → logprob: -14.625094413757324
    8. '[])
' → logprob: -15.875094413757324
    9. ',[' → logprob: -16.625093460083008
    10. '[]
' → logprob: -17.000093460083008

Token 327: ' [])
' (ID: 64395)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.004413028713315725
    2. '[]' → logprob: -6.00441312789917
    3. '[])
' → logprob: -6.25441312789917
    4. ' [])' → logprob: -11.754412651062012
    5. '[]
' → logprob: -12.754412651062012
    6. ')' → logprob: -12.879412651062012
    7. ' [])
' → logprob: -16.379413604736328
    8. '[' → logprob: -16.754413604736328
    9. '[],' → logprob: -17.254413604736328
    10. '[]):' → logprob: -17.879413604736328

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02721974439918995
    2. 'total' → logprob: -4.402219772338867
    3. '        
' → logprob: -4.902219772338867
    4. 'count' → logprob: -6.277219772338867
    5. 'idx' → logprob: -7.027219772338867
    6. '   ' → logprob: -7.277219772338867
    7. '
' → logprob: -7.277219772338867
    8. '```' → logprob: -7.652219772338867
    9. 'i' → logprob: -7.777219772338867
    10. 'answer' → logprob: -8.152219772338867

Token 329: ' total' (ID: 3609)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9169807434082031
    2. 'l' → logprob: -1.1669807434082031
    3. 'ans' → logprob: -2.416980743408203
    4. 'total' (adapté à ' total') → logprob: -2.791980743408203
    5. 'left' → logprob: -2.791980743408203
    6. 'i' → logprob: -3.916980743408203
    7. 'pos' → logprob: -4.166980743408203
    8. 'res' → logprob: -4.166980743408203
    9. 'lo' → logprob: -5.166980743408203
    10. 'result' → logprob: -5.291980743408203

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8259260058403015
    2. '_' → logprob: -1.5759260654449463
    3. '_time' → logprob: -1.7009260654449463
    4. '=' → logprob: -1.8259260654449463
    5. '_overlap' → logprob: -4.825925827026367
    6. '_usage' → logprob: -5.950925827026367
    7. '_space' → logprob: -7.950925827026367
    8. ' _' → logprob: -8.450925827026367
    9. ' ' → logprob: -8.575925827026367
    10. '_duration' → logprob: -8.950925827026367

Token 331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -18.12670135498047
    4. '```' → logprob: -20.50170135498047
    5. '  ' → logprob: -20.75170135498047
    6. ' ' → logprob: -20.75170135498047
    7. '۰' → logprob: -21.00170135498047
    8. '=' → logprob: -21.50170135498047
    9. '<|end|>' → logprob: -21.81420135498047
    10. '`' → logprob: -22.37670135498047

Token 332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'sum' → logprob: -17.500001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '000' → logprob: -20.125001907348633
    6. '```' → logprob: -20.125001907348633
    7. '00' → logprob: -21.125001907348633
    8. '۰' → logprob: -22.062501907348633
    9. '  ' → logprob: -22.125001907348633
    10. '=' → logprob: -22.500001907348633

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5131858587265015
    2. '
' → logprob: -1.2631858587265015
    3. '<|end|>' → logprob: -2.263185977935791
    4. '        
' → logprob: -5.888185977935791
    5. '  
' → logprob: -6.013185977935791
    6. ' for' → logprob: -6.513185977935791
    7. ' 
' → logprob: -6.513185977935791
    8. ' ' → logprob: -6.513185977935791
    9. ',' → logprob: -7.013185977935791
    10. '<|end|>' → logprob: -7.138185977935791

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29430872201919556
    2. '<|end|>' → logprob: -2.044308662414551
    3. ' for' → logprob: -2.794308662414551
    4. '
' → logprob: -3.169308662414551
    5. 'for' → logprob: -4.794308662414551
    6. '   ' → logprob: -5.794308662414551
    7. '  
' → logprob: -5.919308662414551
    8. '        
' → logprob: -6.419308662414551
    9. '	for' → logprob: -6.669308662414551
    10. '<|end|>' → logprob: -6.794308662414551

Token 335: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43705448508262634
    2. ' for' → logprob: -1.5620545148849487
    3. '       ' → logprob: -1.9370545148849487
    4. '   ' → logprob: -8.937054634094238
    5. '        
' → logprob: -10.937054634094238
    6. '	for' → logprob: -10.937054634094238
    7. ' ' → logprob: -11.187054634094238
    8. '
' → logprob: -11.687054634094238
    9. '	' → logprob: -11.812054634094238
    10. '      ' → logprob: -11.937054634094238

Token 336: ' intervals' (ID: 49900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012615379877388477
    2. '       ' → logprob: -4.637615203857422
    3. ' for' → logprob: -6.262615203857422
    4. 'l' → logprob: -7.512615203857422
    5. 'left' → logprob: -8.262615203857422
    6. 'i' → logprob: -9.387615203857422
    7. '   ' → logprob: -10.887615203857422
    8. 'start' → logprob: -11.012615203857422
    9. 'lo' → logprob: -11.512615203857422
    10. 'idx' → logprob: -12.012615203857422

Token 337: ' sorted' (ID: 20099)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6826584935188293
    2. '=' → logprob: -1.8076584339141846
    3. '_idx' → logprob: -2.0576584339141846
    4. ' for' → logprob: -2.8076584339141846
    5. ':' → logprob: -3.0576584339141846
    6. ' =' → logprob: -3.6826584339141846
    7. 'idx' → logprob: -4.057658672332764
    8. '_index' → logprob: -4.682658672332764
    9. ',' → logprob: -4.807658672332764
    10. ')' → logprob: -5.182658672332764

Token 338: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7444672584533691
    2. 'for' → logprob: -1.4944672584533691
    3. '=' → logprob: -2.869467258453369
    4. ' for' → logprob: -2.994467258453369
    5. ':' → logprob: -3.244467258453369
    6. ' =' → logprob: -3.744467258453369
    7. ',' → logprob: -3.744467258453369
    8. ' in' → logprob: -3.994467258453369
    9. '.sort' → logprob: -4.119467258453369
    10. '<|end|>' → logprob: -4.119467258453369

Token 339: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5027226805686951
    2. '       ' → logprob: -1.1277227401733398
    3. ' for' → logprob: -3.50272274017334
    4. 'l' → logprob: -3.50272274017334
    5. 'left' → logprob: -5.12772274017334
    6. 'i' → logprob: -5.87772274017334
    7. 'idx' → logprob: -7.12772274017334
    8. ' l' → logprob: -7.75272274017334
    9. 'start' → logprob: -8.12772274017334
    10. '        
' → logprob: -8.75272274017334

Token 340: ' binary' (ID: 15600)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5112295150756836
    2. ' be' → logprob: -1.6362295150756836
    3. 'for' → logprob: -2.0112295150756836
    4. 'start' → logprob: -2.1362295150756836
    5. ' for' → logprob: -2.5112295150756836
    6. '           ' → logprob: -2.7612295150756836
    7. '       ' → logprob: -3.3862295150756836
    8. ' start' → logprob: -4.386229515075684
    9. '          ' → logprob: -4.386229515075684
    10. ' ' → logprob: -4.511229515075684

Token 341: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.0022004556376487017
    2. ' search' → logprob: -6.502200603485107
    3. 'earch' → logprob: -7.377200603485107
    4. '_search' → logprob: -9.75220012664795
    5. 'se' → logprob: -11.75220012664795
    6. '	search' → logprob: -13.37720012664795
    7. '-search' → logprob: -13.50220012664795
    8. 'ch' → logprob: -14.87720012664795
    9. '   ' → logprob: -14.87720012664795
    10. '```' → logprob: -15.00220012664795

Token 342: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10986074060201645
    2. ' for' → logprob: -2.73486065864563
    3. 'for' → logprob: -4.484860897064209
    4. '        
' → logprob: -4.859860897064209
    5. 'left' → logprob: -5.859860897064209
    6. ',' → logprob: -5.984860897064209
    7. 'idx' → logprob: -6.109860897064209
    8. 'pos' → logprob: -6.359860897064209
    9. 'start' → logprob: -6.359860897064209
    10. '	' → logprob: -6.734860897064209

Token 343: ' start' (ID: 1604)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -1.428117036819458
    2. 'te' → logprob: -1.678117036819458
    3. 'start' → logprob: -1.803117036819458
    4. ' ts' → logprob: -2.303117036819458
    5. 'left' → logprob: -2.928117036819458
    6. '[' → logprob: -3.053117036819458
    7. ' te' → logprob: -3.303117036819458
    8. '(ts' → logprob: -3.303117036819458
    9. '(te' → logprob: -3.928117036819458
    10. 'idx' → logprob: -4.178116798400879

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5669276714324951
    2. ' idx' → logprob: -2.066927671432495
    3. 'idx' → logprob: -2.316927671432495
    4. 'pos' → logprob: -2.691927671432495
    5. '        
' → logprob: -2.941927671432495
    6. '        ' → logprob: -4.691927909851074
    7. 'index' → logprob: -4.941927909851074
    8. ' pos' → logprob: -4.941927909851074
    9. '_idx' → logprob: -4.941927909851074
    10. ' for' → logprob: -5.191927909851074

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009836013428866863
    2. '        
' → logprob: -5.384836196899414
    3. 'idx' → logprob: -7.134836196899414
    4. ' idx' → logprob: -7.134836196899414
    5. ' for' → logprob: -7.634836196899414
    6. ' i' → logprob: -7.634836196899414
    7. ',' → logprob: -7.634836196899414
    8. 'pos' → logprob: -7.884836196899414
    9. '	' → logprob: -8.134836196899414
    10. 'i' → logprob: -8.134836196899414

Token 346: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9766846299171448
    2. 'idx' (adapté à ' idx') → logprob: -1.1016845703125
    3. '       ' → logprob: -1.4766845703125
    4. 'l' → logprob: -3.2266845703125
    5. 'pos' → logprob: -4.9766845703125
    6. 'index' → logprob: -4.9766845703125
    7. 'left' → logprob: -5.6016845703125
    8. ' idx' → logprob: -5.8516845703125
    9. ' i' → logprob: -6.6016845703125
    10. 'start' → logprob: -7.7266845703125

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.37692928314209
    4. '=b' → logprob: -16.001930236816406
    5. ')' → logprob: -16.626930236816406
    6. '	' → logprob: -17.376930236816406
    7. '   ' → logprob: -17.501930236816406
    8. 'idx' → logprob: -18.376930236816406
    9. ' =)' → logprob: -18.501930236816406
    10. '_' → logprob: -18.626930236816406

Token 348: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -5.512236498361744e-07
    2. ' bis' → logprob: -14.500000953674316
    3. 'b' → logprob: -17.75
    4. 'bs' → logprob: -18.75
    5. '0' → logprob: -18.75
    6. '   ' → logprob: -19.75
    7. 'bi' → logprob: -20.625
    8. '	b' → logprob: -21.0
    9. ' ' → logprob: -21.75
    10. 'bes' → logprob: -21.875

Token 349: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.710618905955926e-05
    2. 'lect' → logprob: -9.500097274780273
    3. 'sect' → logprob: -11.000097274780273
    4. 'ct' → logprob: -12.750097274780273
    5. 'ects' → logprob: -13.625097274780273
    6. 'ectl' → logprob: -14.625097274780273
    7. '```' → logprob: -15.250097274780273
    8. 'ec' → logprob: -15.625097274780273
    9. 'ext' → logprob: -16.375097274780273
    10. 'left' → logprob: -16.750097274780273

Token 350: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0009164590737782419
    2. '_left' → logprob: -7.000916481018066
    3. 'bis' → logprob: -13.125916481018066
    4. '_right' → logprob: -13.750916481018066
    5. ' bis' → logprob: -14.125916481018066
    6. '(b' → logprob: -15.250916481018066
    7. '.' → logprob: -15.625916481018066
    8. 'b' → logprob: -16.25091552734375
    9. '	b' → logprob: -16.25091552734375
    10. 'Left' → logprob: -16.25091552734375

Token 351: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0039936271496117115
    2. 's' → logprob: -6.128993511199951
    3. 'sect' → logprob: -6.878993511199951
    4. 'search' → logprob: -7.878993511199951
    5. 'sc' → logprob: -10.00399398803711
    6. 'sk' → logprob: -10.12899398803711
    7. 'left' → logprob: -10.12899398803711
    8. 'sl' → logprob: -10.37899398803711
    9. 'ct' → logprob: -10.50399398803711
    10. 'skip' → logprob: -10.50399398803711

Token 352: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.007917601615190506
    2. 'ect' → logprob: -4.882917404174805
    3. 'sect' → logprob: -8.507917404174805
    4. '```' → logprob: -10.382917404174805
    5. 's' → logprob: -10.757917404174805
    6. 'n' → logprob: -11.132917404174805
    7. 'с' → logprob: -12.007917404174805
    8. 'r' → logprob: -12.507917404174805
    9. '   ' → logprob: -12.882917404174805
    10. 'rt' → logprob: -13.132917404174805

Token 353: '_left' (ID: 22189)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0341680645942688
    2. 'interval' → logprob: -3.534168004989624
    3. '_left' → logprob: -5.534168243408203
    4. 'left' → logprob: -7.784168243408203
    5. '_right' → logprob: -10.284168243408203
    6. 'right' → logprob: -12.034168243408203
    7. 'Left' → logprob: -13.534168243408203
    8. '(left' → logprob: -15.534168243408203
    9. ' intervals' → logprob: -15.909168243408203
    10. 'Right' → logprob: -16.159168243408203

Token 354: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0011703446507453918
    2. 'interval' → logprob: -6.7511701583862305
    3. ' intervals' → logprob: -16.126171112060547
    4. 'Intervals' → logprob: -18.126171112060547
    5. 'usage' → logprob: -18.251171112060547
    6. '```' → logprob: -19.126171112060547
    7. '<|end|>' → logprob: -19.376171112060547
    8. '   ' → logprob: -19.376171112060547
    9. '(' → logprob: -19.501171112060547
    10. '(
' → logprob: -19.626171112060547

Token 355: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01277779508382082
    2. 'interval' → logprob: -4.762777805328369
    3. '(interval' → logprob: -5.512777805328369
    4. ' intervals' → logprob: -9.137777328491211
    5. ')' → logprob: -12.262777328491211
    6. 'Intervals' → logprob: -13.887777328491211
    7. 'vals' → logprob: -13.887777328491211
    8. '[' → logprob: -14.137777328491211
    9. '(s' → logprob: -14.387777328491211
    10. 'es' → logprob: -14.512777328491211

Token 356: ',' (ID: 11)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.38764718174934387
    2. ',' → logprob: -1.1376471519470215
    3. 'interval' → logprob: -7.5126471519470215
    4. ',(' → logprob: -9.51264762878418
    5. ' ,' → logprob: -10.01264762878418
    6. ',[' → logprob: -10.13764762878418
    7. ' (' → logprob: -10.76264762878418
    8. '(' → logprob: -11.51264762878418
    9. ' intervals' → logprob: -11.76264762878418
    10. ',
' → logprob: -12.13764762878418

Token 357: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.574251918005757e-05
    2. '[start' → logprob: -10.750055313110352
    3. '[js' → logprob: -10.875055313110352
    4. '[t' → logprob: -12.125055313110352
    5. ' [' → logprob: -12.875055313110352
    6. '[token' → logprob: -14.125055313110352
    7. '[temp' → logprob: -14.125055313110352
    8. '[tmp' → logprob: -14.125055313110352
    9. '[test' → logprob: -14.250055313110352
    10. '[int' → logprob: -14.375055313110352

Token 358: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.00026860725483857095
    2. '[' → logprob: -8.750268936157227
    3. 'te' → logprob: -9.250268936157227
    4. '(ts' → logprob: -11.500268936157227
    5. ' ts' → logprob: -12.500268936157227
    6. '	ts' → logprob: -16.750268936157227
    7. '[t' → logprob: -17.000268936157227
    8. ' [' → logprob: -18.625268936157227
    9. '(te' → logprob: -18.625268936157227
    10. '_ts' → logprob: -18.875268936157227

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018196653574705124
    2. '])' → logprob: -4.0181965827941895
    3. ')' → logprob: -11.018197059631348
    4. ',None' → logprob: -11.768197059631348
    5. '])
' → logprob: -12.518197059631348
    6. ',
' → logprob: -12.643197059631348
    7. ']' → logprob: -12.768197059631348
    8. ' ,' → logprob: -12.893197059631348
    9. ' ])' → logprob: -13.143197059631348
    10. ',)' → logprob: -14.018197059631348

Token 360: ' ts' (ID: 6601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07373063266277313
    2. 'te' → logprob: -3.073730707168579
    3. 'ts' → logprob: -4.19873046875
    4. '])' → logprob: -5.07373046875
    5. '-' → logprob: -5.82373046875
    6. 'float' → logprob: -8.07373046875
    7. '-te' → logprob: -9.19873046875
    8. '-ts' → logprob: -9.82373046875
    9. ']))' → logprob: -9.94873046875
    10. ' ' → logprob: -11.07373046875

Token 361: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00012809180771000683
    2. '])
' → logprob: -9.000127792358398
    3. ']' → logprob: -13.625127792358398
    4. ' ])' → logprob: -13.875127792358398
    5. ''])' → logprob: -14.500127792358398
    6. '],' → logprob: -14.625127792358398
    7. ')' → logprob: -15.000127792358398
    8. '])

' → logprob: -15.500127792358398
    9. ']);' → logprob: -15.875127792358398
    10. ']])' → logprob: -15.875127792358398

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.278978556394577
    2. '
' → logprob: -2.1539785861968994
    3. '        
' → logprob: -3.1539785861968994
    4. ')' → logprob: -3.9039785861968994
    5. '<|end|>' → logprob: -4.02897834777832
    6. 'for' → logprob: -4.40397834777832
    7. 'while' → logprob: -5.02897834777832
    8. '  
' → logprob: -5.15397834777832
    9. ' for' → logprob: -5.40397834777832
    10. ',' → logprob: -5.40397834777832

Token 363: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33870556950569153
    2. 'i' → logprob: -1.7137055397033691
    3. 'for' → logprob: -2.338705539703369
    4. 'idx' → logprob: -5.588705539703369
    5. '-' → logprob: -5.963705539703369
    6. '       ' → logprob: -6.588705539703369
    7. '```' → logprob: -6.713705539703369
    8. '#' (adapté à ' #') → logprob: -7.338705539703369
    9. ' if' → logprob: -7.838705539703369
    10. '   ' → logprob: -8.463706016540527

Token 364: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5882428884506226
    2. 'if' → logprob: -0.8382428884506226
    3. 'i' → logprob: -5.088243007659912
    4. 'idx' → logprob: -5.713243007659912
    5. '#' → logprob: -6.338243007659912
    6. '       ' → logprob: -6.963243007659912
    7. 'while' → logprob: -11.338242530822754
    8. 'prev' → logprob: -11.713242530822754
    9. 'start' → logprob: -12.338242530822754
    10. '   ' → logprob: -12.338242530822754

Token 365: ' previous' (ID: 5880)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7824850678443909
    2. 'max' → logprob: -0.9074850678443909
    3. ' max' → logprob: -2.407485008239746
    4. ' idx' → logprob: -3.282485008239746
    5. 'interval' → logprob: -5.907485008239746
    6. ' intervals' → logprob: -5.907485008239746
    7. 'if' → logprob: -6.157485008239746
    8. 'for' → logprob: -6.657485008239746
    9. ' for' → logprob: -7.157485008239746
    10. '   ' → logprob: -7.782485008239746

Token 366: ' interval' (ID: 17116)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2879388630390167
    2. 'if' → logprob: -1.5379388332366943
    3. '       ' → logprob: -4.412939071655273
    4. 'interval' → logprob: -4.912939071655273
    5. '   ' → logprob: -5.662939071655273
    6. '(interval' → logprob: -5.787939071655273
    7. 'idx' → logprob: -6.287939071655273
    8. 'for' → logprob: -6.537939071655273
    9. ' for' → logprob: -6.912939071655273
    10. '```' → logprob: -7.162939071655273

Token 367: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30989110469818115
    2. '       ' → logprob: -1.8098911046981812
    3. 'if' → logprob: -2.3098912239074707
    4. '   ' → logprob: -6.809891223907471
    5. '        
' → logprob: -7.059891223907471
    6. ',' → logprob: -8.059890747070312
    7. ' and' → logprob: -8.309890747070312
    8. '
' → logprob: -8.434890747070312
    9. ' for' → logprob: -8.434890747070312
    10. 'for' → logprob: -9.184890747070312

Token 368: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.07731714844703674
    2. 'well' → logprob: -2.952317237854004
    3. '       ' → logprob: -3.827317237854004
    4. 'if' → logprob: -8.452317237854004
    5. ' if' → logprob: -9.577317237854004
    6. '   ' → logprob: -9.827317237854004
    7. '    ' → logprob: -11.202317237854004
    8. ' idx' → logprob: -11.327317237854004
    9. 'idx' → logprob: -11.452317237854004
    10. ' ' → logprob: -12.202317237854004

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8228638172149658
    2. '       ' → logprob: -0.9478638172149658
    3. '        
' → logprob: -2.197863817214966
    4. ' if' → logprob: -3.447863817214966
    5. '    
' → logprob: -4.947863578796387
    6. '  
' → logprob: -5.197863578796387
    7. 'if' → logprob: -5.322863578796387
    8. ' for' → logprob: -5.572863578796387
    9. ' 
' → logprob: -5.697863578796387
    10. 'for' → logprob: -6.322863578796387

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02124926634132862
    2. '        
' → logprob: -4.271249294281006
    3. ' if' → logprob: -5.646249294281006
    4. '   ' → logprob: -7.146249294281006
    5. ' for' → logprob: -7.146249294281006
    6. '    
' → logprob: -8.021248817443848
    7. '<|end|>' → logprob: -8.271248817443848
    8. 'if' → logprob: -8.396248817443848
    9. 'for' → logprob: -8.521248817443848
    10. '
' → logprob: -8.521248817443848

Token 371: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08788745850324631
    2. ' if' → logprob: -2.5878875255584717
    3. 'for' → logprob: -5.337887287139893
    4. '       ' → logprob: -5.587887287139893
    5. ' for' → logprob: -8.08788776397705
    6. 'i' → logprob: -10.46288776397705
    7. 'idx' → logprob: -10.46288776397705
    8. '        
' → logprob: -10.96288776397705
    9. '   ' → logprob: -11.58788776397705
    10. '
' → logprob: -11.83788776397705

Token 372: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.10021400451660156
    2. 'idx' → logprob: -2.3502140045166016
    3. '	idx' → logprob: -11.975214004516602
    4. '(idx' → logprob: -13.850214004516602
    5. ' ' → logprob: -15.850214004516602
    6. '[idx' → logprob: -17.3502140045166
    7. '_idx' → logprob: -18.2252140045166
    8. '0' → logprob: -18.2252140045166
    9. '   ' → logprob: -18.4752140045166
    10. 'index' → logprob: -19.2252140045166

Token 373: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04344192147254944
    2. ' >' → logprob: -3.1684420108795166
    3. '-' → logprob: -7.7934417724609375
    4. ':' → logprob: -11.418441772460938
    5. '   ' → logprob: -11.543441772460938
    6. ' -' → logprob: -13.043441772460938
    7. ' ' → logprob: -13.918441772460938
    8. '  ' → logprob: -13.918441772460938
    9. '0' → logprob: -14.043441772460938
    10. '()>' → logprob: -14.043441772460938

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '=' → logprob: -16.75037956237793
    4. '   ' → logprob: -19.12537956237793
    5. '  ' → logprob: -20.62537956237793
    6. '۰' → logprob: -20.75037956237793
    7. '1' → logprob: -21.25037956237793
    8. ' ' → logprob: -21.56287956237793
    9. '０' → logprob: -21.68787956237793
    10. '٠' → logprob: -22.18787956237793

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.87504005432129
    4. '1' → logprob: -20.25004005432129
    5. '۰' → logprob: -20.62504005432129
    6. '  ' → logprob: -21.31254005432129
    7. '-' → logprob: -21.87504005432129
    8. '```' → logprob: -21.93754005432129
    9. '=' → logprob: -22.00004005432129
    10. ' ' → logprob: -22.06254005432129

Token 376: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06645915657281876
    2. ':' → logprob: -3.3164591789245605
    3. ':
' → logprob: -3.9414591789245605
    4. 'and' → logprob: -5.0664591789245605
    5. '       ' → logprob: -6.6914591789245605
    6. '           ' → logprob: -7.4414591789245605
    7. '   ' → logprob: -8.441458702087402
    8. '<|end|>' → logprob: -9.316458702087402
    9. ',' → logprob: -9.566458702087402
    10. '<|end|>' → logprob: -11.191458702087402

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018229780718684196
    2. '       ' → logprob: -4.268229961395264
    3. ' for' → logprob: -6.893229961395264
    4. ' total' → logprob: -7.393229961395264
    5. '   ' → logprob: -7.643229961395264
    6. '	       ' → logprob: -7.643229961395264
    7. '        ' → logprob: -8.018229484558105
    8. '        
' → logprob: -8.268229484558105
    9. 'total' → logprob: -8.518229484558105
    10. '            
' → logprob: -9.018229484558105

Token 378: ' idx' (ID: 14016)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1035386472940445
    2. '           ' → logprob: -2.478538751602173
    3. ' total' → logprob: -4.353538513183594
    4. '       ' → logprob: -6.603538513183594
    5. '   ' → logprob: -9.228538513183594
    6. '	total' → logprob: -9.353538513183594
    7. '               ' → logprob: -10.728538513183594
    8. '	       ' → logprob: -10.978538513183594
    9. ' ' → logprob: -11.353538513183594
    10. ',total' → logprob: -11.353538513183594

Token 379: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3957565426826477
    2. ' -=' → logprob: -1.145756483078003
    3. '-' → logprob: -4.770756721496582
    4. '=' → logprob: -8.145756721496582
    5. '   ' → logprob: -10.145756721496582
    6. ' -' → logprob: -10.770756721496582
    7. ' =' → logprob: -11.145756721496582
    8. '    ' → logprob: -13.020756721496582
    9. '```' → logprob: -13.270756721496582
    10. ' ' → logprob: -13.895756721496582

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '
' → logprob: -20.875001907348633
    5. '```' → logprob: -20.875001907348633
    6. '0' → logprob: -21.687501907348633
    7. '  ' → logprob: -21.812501907348633
    8. '１' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.687501907348633
    10. '2' → logprob: -22.687501907348633

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '```' → logprob: -20.687501907348633
    6. '0' → logprob: -21.000001907348633
    7. '１' → logprob: -21.125001907348633
    8. '  ' → logprob: -21.312501907348633
    9. '۱' → logprob: -22.187501907348633
    10. '-' → logprob: -22.500001907348633

Token 382: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0818280279636383
    2. 'while' → logprob: -2.8318281173706055
    3. ' while' → logprob: -4.9568281173706055
    4. '       ' → logprob: -5.0818281173706055
    5. 'for' → logprob: -6.4568281173706055
    6. ' for' → logprob: -6.5818281173706055
    7. '<|end|>' → logprob: -6.5818281173706055
    8. '        
' → logprob: -6.9568281173706055
    9. ' 
' → logprob: -8.081828117370605
    10. '  
' → logprob: -8.206828117370605

Token 383: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16925376653671265
    2. '       ' → logprob: -2.0442538261413574
    3. 'for' → logprob: -4.544253826141357
    4. ' for' → logprob: -4.669253826141357
    5. '        
' → logprob: -6.044253826141357
    6. '<|end|>' → logprob: -6.294253826141357
    7. 'while' → logprob: -7.044253826141357
    8. ' while' → logprob: -8.2942533493042
    9. '  
' → logprob: -8.7942533493042
    10. '   ' → logprob: -9.0442533493042

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2184581160545349
    2. 'while' → logprob: -1.9684581756591797
    3. '       ' → logprob: -2.9684581756591797
    4. ' for' → logprob: -5.34345817565918
    5. ' while' → logprob: -7.96845817565918
    6. '   ' → logprob: -11.09345817565918
    7. '```' → logprob: -11.09345817565918
    8. '
' → logprob: -11.21845817565918
    9. '	for' → logprob: -11.96845817565918
    10. '        
' → logprob: -12.46845817565918

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36752137541770935
    2. ' i' → logprob: -1.2425214052200317
    3. 'interval' → logprob: -4.242521286010742
    4. ' interval' → logprob: -5.492521286010742
    5. '   ' → logprob: -8.242521286010742
    6. 'start' → logprob: -10.117521286010742
    7. ' start' → logprob: -10.367521286010742
    8. 'int' → logprob: -10.867521286010742
    9. 'inter' → logprob: -11.867521286010742
    10. '_i' → logprob: -12.242521286010742

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029785092920064926
    2. 'in' → logprob: -3.52978515625
    3. ' ' → logprob: -11.15478515625
    4. '	in' → logprob: -12.02978515625
    5. ',' → logprob: -12.27978515625
    6. '   ' → logprob: -12.77978515625
    7. ' i' → logprob: -13.65478515625
    8. '_in' → logprob: -14.02978515625
    9. 'i' → logprob: -14.52978515625
    10. 'In' → logprob: -14.65478515625

Token 387: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01421545259654522
    2. ' range' → logprob: -4.264215469360352
    3. 'interval' → logprob: -10.264215469360352
    4. '   ' → logprob: -12.014215469360352
    5. ' ' → logprob: -12.514215469360352
    6. 'idx' → logprob: -13.139215469360352
    7. '  ' → logprob: -13.764215469360352
    8. '	range' → logprob: -13.764215469360352
    9. '(range' → logprob: -14.264215469360352
    10. '
' → logprob: -14.264215469360352

Token 388: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.06483552604913712
    2. 'idx' → logprob: -2.814835548400879
    3. ' idx' → logprob: -6.064835548400879
    4. ' (' → logprob: -7.564835548400879
    5. '	idx' → logprob: -11.814835548400879
    6. '   ' → logprob: -12.314835548400879
    7. '(' → logprob: -12.439835548400879
    8. ',' → logprob: -12.814835548400879
    9. '[idx' → logprob: -13.314835548400879
    10. '       ' → logprob: -14.439835548400879

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029912706464529037
    2. ',len' → logprob: -3.5299127101898193
    3. ' ,' → logprob: -8.779912948608398
    4. '(len' → logprob: -12.029912948608398
    5. 'len' → logprob: -13.404912948608398
    6. ',
' → logprob: -14.779912948608398
    7. '   ' → logprob: -15.404912948608398
    8. '=len' → logprob: -16.1549129486084
    9. '<len' → logprob: -16.2799129486084
    10. '       ' → logprob: -16.2799129486084

Token 390: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8325677703833207e-05
    2. ' len' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.000028610229492
    4. '           ' → logprob: -15.375028610229492
    5. '       ' → logprob: -15.750028610229492
    6. 'min' → logprob: -16.125028610229492
    7. '(len' → logprob: -18.250028610229492
    8. '	len' → logprob: -19.125028610229492
    9. '               ' → logprob: -19.250028610229492
    10. 'idx' → logprob: -20.000028610229492

Token 391: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.000553151941858232
    2. 'interval' → logprob: -7.500553131103516
    3. ' (' → logprob: -16.500553131103516
    4. '(' → logprob: -17.875553131103516
    5. ' intervals' → logprob: -17.875553131103516
    6. ')' → logprob: -18.750553131103516
    7. '```' → logprob: -18.750553131103516
    8. ',' → logprob: -19.375553131103516
    9. '(indices' → logprob: -20.375553131103516
    10. '   ' → logprob: -20.625553131103516

Token 392: 's' (ID: 82)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.7269588112831116
    2. 's' → logprob: -1.3519587516784668
    3. 'vals' → logprob: -1.4769587516784668
    4. ')' → logprob: -4.601958751678467
    5. 'val' → logprob: -5.101958751678467
    6. '(interval' → logprob: -5.351958751678467
    7. 'erv' → logprob: -6.351958751678467
    8. 'al' → logprob: -6.601958751678467
    9. '[' → logprob: -6.851958751678467
    10. 'ls' → logprob: -7.226958751678467

Token 393: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014188424684107304
    2. '):' → logprob: -4.264188289642334
    3. '):
' → logprob: -11.264188766479492
    4. '   ' → logprob: -12.639188766479492
    5. ')):
' → logprob: -12.889188766479492
    6. '       ' → logprob: -13.139188766479492
    7. ' ):
' → logprob: -13.389188766479492
    8. '):

' → logprob: -14.014188766479492
    9. ']):
' → logprob: -14.389188766479492
    10. '():
' → logprob: -14.639188766479492

Token 394: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06651381403207779
    2. '           ' → logprob: -3.066513776779175
    3. '   ' → logprob: -4.441514015197754
    4. ' if' → logprob: -6.691514015197754
    5. ',' → logprob: -7.066514015197754
    6. '        
' → logprob: -7.191514015197754
    7. ' ' → logprob: -7.441514015197754
    8. '```' → logprob: -7.691514015197754
    9. '[' → logprob: -7.816514015197754
    10. '        ' → logprob: -8.191514015197754

Token 395: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7800194621086121
    2. '       ' → logprob: -1.6550195217132568
    3. 'interval' → logprob: -2.030019521713257
    4. ' if' → logprob: -2.405019521713257
    5. 'if' → logprob: -2.655019521713257
    6. 'start' → logprob: -4.030019283294678
    7. ' interval' → logprob: -4.280019283294678
    8. ' s' → logprob: -5.155019283294678
    9. 's' (adapté à ' s') → logprob: -5.155019283294678
    10. '   ' → logprob: -5.280019283294678

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015252856246661395
    2. '_,' → logprob: -9.375152587890625
    3. ' ,' → logprob: -9.875152587890625
    4. 'interval' → logprob: -12.375152587890625
    5. ',start' → logprob: -13.125152587890625
    6. ',
' → logprob: -13.250152587890625
    7. ',end' → logprob: -13.750152587890625
    8. '[' → logprob: -13.875152587890625
    9. 't' → logprob: -13.875152587890625
    10. ',e' → logprob: -14.000152587890625

Token 397: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12692853808403015
    2. ' e' → logprob: -2.1269285678863525
    3. 'end' → logprob: -15.376928329467773
    4. '	e' → logprob: -16.376928329467773
    5. '           ' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.001928329467773
    7. '   ' → logprob: -17.001928329467773
    8. ',e' → logprob: -17.876928329467773
    9. '       ' → logprob: -18.001928329467773
    10. ' end' → logprob: -18.626928329467773

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5776003003120422
    2. '=' → logprob: -0.8276003003120422
    3. '           ' → logprob: -6.452600479125977
    4. ')' → logprob: -9.952600479125977
    5. '               ' → logprob: -11.952600479125977
    6. '            ' → logprob: -12.452600479125977
    7. '<|end|>' → logprob: -12.452600479125977
    8. '=line' → logprob: -12.702600479125977
    9. ',' → logprob: -12.827600479125977
    10. ' ' → logprob: -12.952600479125977

Token 399: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.008616226725280285
    2. ' intervals' → logprob: -4.7586164474487305
    3. ' interval' → logprob: -13.88361644744873
    4. '(interval' → logprob: -14.75861644744873
    5. '           ' → logprob: -14.88361644744873
    6. '       ' → logprob: -17.258615493774414
    7. '   ' → logprob: -18.133615493774414
    8. 'inter' → logprob: -19.258615493774414
    9. 'int' → logprob: -19.883615493774414
    10. '
' → logprob: -20.008615493774414

Token 400: '[i' (ID: 1768)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6925163865089417
    2. ' =' → logprob: -1.3175163269042969
    3. '               ' → logprob: -2.067516326904297
    4. '[' → logprob: -3.567516326904297
    5. '<|end|>' → logprob: -3.692516326904297
    6. '=' → logprob: -3.942516326904297
    7. '            ' → logprob: -5.192516326904297
    8. '	       ' → logprob: -5.192516326904297
    9. '            
' → logprob: -5.442516326904297
    10. ')' → logprob: -6.442516326904297

Token 401: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5071750283241272
    2. ']' → logprob: -1.1321749687194824
    3. ')' → logprob: -3.3821749687194824
    4. ')
' → logprob: -3.6321749687194824
    5. '           ' → logprob: -4.257174968719482
    6. '       ' → logprob: -7.632174968719482
    7. ']
' → logprob: -8.88217544555664
    8. '               ' → logprob: -9.50717544555664
    9. '])' → logprob: -10.25717544555664
    10. ']

' → logprob: -10.75717544555664

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002783783129416406
    2. '<|end|>' → logprob: -9.37527847290039
    3. ' ' → logprob: -9.62527847290039
    4. '               ' → logprob: -9.87527847290039
    5. ' if' → logprob: -10.25027847290039
    6. '            
' → logprob: -11.62527847290039
    7. '   ' → logprob: -11.75027847290039
    8. '       ' → logprob: -11.87527847290039
    9. '          ' → logprob: -12.37527847290039
    10. '	       ' → logprob: -12.75027847290039

Token 403: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.725780189037323
    2. ' if' → logprob: -0.975780189037323
    3. 'if' (adapté à ' if') → logprob: -1.9757802486419678
    4. '       ' → logprob: -8.975780487060547
    5. '   ' → logprob: -9.350780487060547
    6. ' ' → logprob: -9.475780487060547
    7. 'total' → logprob: -9.725780487060547
    8. ' total' → logprob: -10.350780487060547
    9. '          ' → logprob: -10.725780487060547
    10. '               ' → logprob: -10.975780487060547

Token 404: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31327956914901733
    2. 's' → logprob: -1.313279628753662
    3. '           ' → logprob: -11.188279151916504
    4. '               ' → logprob: -12.813279151916504
    5. 'e' → logprob: -14.688279151916504
    6. '            ' → logprob: -14.938279151916504
    7. '   ' → logprob: -15.938279151916504
    8. ' e' → logprob: -16.06328010559082
    9. '       ' → logprob: -16.68828010559082
    10. '                   ' → logprob: -16.93828010559082

Token 405: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7752891778945923
    2. ' >' → logprob: -0.9002891778945923
    3. '>=' → logprob: -2.6502890586853027
    4. '>' → logprob: -2.7752890586853027
    5. ' ' → logprob: -12.150289535522461
    6. '[' → logprob: -13.525289535522461
    7. '   ' → logprob: -13.650289535522461
    8. ']>=' → logprob: -14.025289535522461
    9. '≥' → logprob: -14.150289535522461
    10. '           ' → logprob: -14.150289535522461

Token 406: ' te' (ID: 729)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0005530327325686812
    2. ' te' → logprob: -7.500553131103516
    3. 'Te' → logprob: -18.250553131103516
    4. '(te' → logprob: -18.750553131103516
    5. '   ' → logprob: -19.125553131103516
    6. '_te' → logprob: -19.375553131103516
    7. 'e' → logprob: -20.125553131103516
    8. ' ' → logprob: -20.625553131103516
    9. 'TE' → logprob: -20.875553131103516
    10. '­te' → logprob: -21.375553131103516

Token 407: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.205668106675148
    2. ':' → logprob: -1.8306680917739868
    3. '           ' → logprob: -3.8306682109832764
    4. '               ' → logprob: -5.580667972564697
    5. '       ' → logprob: -9.455668449401855
    6. ':
' → logprob: -10.830668449401855
    7. '):
' → logprob: -11.330668449401855
    8. ' :
' → logprob: -12.830668449401855
    9. '():
' → logprob: -13.080668449401855
    10. '   ' → logprob: -13.205668449401855

Token 408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005244429688900709
    2. '           ' → logprob: -5.255244255065918
    3. 'break' → logprob: -12.880244255065918
    4. '              ' → logprob: -13.130244255065918
    5. '       ' → logprob: -13.630244255065918
    6. '                   ' → logprob: -14.130244255065918
    7. ' break' → logprob: -14.380244255065918
    8. '<|end|>' → logprob: -14.630244255065918
    9. '	           ' → logprob: -14.630244255065918
    10. '   ' → logprob: -14.755244255065918

Token 409: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29269835352897644
    2. '           ' → logprob: -1.5426983833312988
    3. 'break' (adapté à ' break') → logprob: -3.292698383331299
    4. ' break' → logprob: -5.917698383331299
    5. '	break' → logprob: -9.54269790649414
    6. '   ' → logprob: -11.54269790649414
    7. '                   ' → logprob: -11.66769790649414
    8. '		' → logprob: -12.16769790649414
    9. '			' → logprob: -12.79269790649414
    10. '       ' → logprob: -13.16769790649414

Token 410: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005635689478367567
    2. '
' → logprob: -5.755635738372803
    3. '            
' → logprob: -6.630635738372803
    4. '       ' → logprob: -7.880635738372803
    5. '<|end|>' → logprob: -8.255635261535645
    6. '               ' → logprob: -8.505635261535645
    7. '  
' → logprob: -9.880635261535645
    8. '    
' → logprob: -10.005635261535645
    9. '        
' → logprob: -10.005635261535645
    10. ' 
' → logprob: -10.255635261535645

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006635877070948482
    2. '<|end|>' → logprob: -8.375663757324219
    3. '               ' → logprob: -8.875663757324219
    4. '       ' → logprob: -8.875663757324219
    5. '	       ' → logprob: -10.125663757324219
    6. ' total' → logprob: -11.000663757324219
    7. '		' → logprob: -11.125663757324219
    8. '   ' → logprob: -11.250663757324219
    9. 'total' → logprob: -11.375663757324219
    10. '<|end|>' → logprob: -11.875663757324219

Token 412: ' if' (ID: 538)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2545640766620636
    2. '           ' → logprob: -1.7545640468597412
    3. 'total' → logprob: -3.004564046859741
    4. '       ' → logprob: -6.62956428527832
    5. '	total' → logprob: -8.00456428527832
    6. '   ' → logprob: -8.62956428527832
    7. '               ' → logprob: -9.12956428527832
    8. ' ' → logprob: -9.37956428527832
    9. ',total' → logprob: -10.12956428527832
    10. ' ' → logprob: -11.25456428527832

Token 413: ' e' (ID: 319)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8935670256614685
    2. ' e' → logprob: -0.8935670256614685
    3. 's' → logprob: -2.2685670852661133
    4. 'e' → logprob: -2.6435670852661133
    5. 'interval' → logprob: -6.393567085266113
    6. ' te' → logprob: -6.893567085266113
    7. 'end' → logprob: -7.518567085266113
    8. '           ' → logprob: -7.518567085266113
    9. 'start' → logprob: -7.893567085266113
    10. '   ' → logprob: -8.018567085266113

Token 414: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.562737226486206
    2. ' >' → logprob: -0.937737226486206
    3. '<=' → logprob: -3.562737226486206
    4. '>' → logprob: -4.562737464904785
    5. ' ' → logprob: -11.062737464904785
    6. ' >=' → logprob: -11.687737464904785
    7. '   ' → logprob: -11.687737464904785
    8. '>=' → logprob: -12.937737464904785
    9. '    ' → logprob: -13.062737464904785
    10. '  ' → logprob: -13.562737464904785

Token 415: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.0036066018510609865
    2. ' ts' → logprob: -5.628606796264648
    3. '	ts' → logprob: -12.503606796264648
    4. 'te' → logprob: -14.128606796264648
    5. '_ts' → logprob: -14.378606796264648
    6. 't' → logprob: -14.878606796264648
    7. '(ts' → logprob: -15.628606796264648
    8. 's' → logprob: -15.628606796264648
    9. '
' → logprob: -15.878606796264648
    10. 'tsx' → logprob: -15.878606796264648

Token 416: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7168005704879761
    2. '               ' → logprob: -0.8418005704879761
    3. ':' → logprob: -2.5918006896972656
    4. '           ' → logprob: -5.216800689697266
    5. '):
' → logprob: -9.591800689697266
    6. ' continue' → logprob: -9.591800689697266
    7. ':return' → logprob: -9.716800689697266
    8. ',' → logprob: -10.091800689697266
    9. '<|end|>' → logprob: -10.466800689697266
    10. 'continue' → logprob: -10.716800689697266

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005398815032094717
    2. ' continue' → logprob: -5.380398750305176
    3. '           ' → logprob: -7.505398750305176
    4. 'continue' → logprob: -9.255398750305176
    5. ' continues' → logprob: -9.505398750305176
    6. '<|end|>' → logprob: -11.505398750305176
    7. ':
' → logprob: -11.630398750305176
    8. '	           ' → logprob: -11.755398750305176
    9. '	continue' → logprob: -12.130398750305176
    10. '	       ' → logprob: -12.880398750305176

Token 418: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40873607993125916
    2. ' continue' → logprob: -1.4087361097335815
    3. 'continue' (adapté à ' continue') → logprob: -2.408735990524292
    4. '           ' → logprob: -7.283736228942871
    5. '	continue' → logprob: -8.408736228942871
    6. '	           ' → logprob: -9.158736228942871
    7. '_continue' → logprob: -9.783736228942871
    8. '	       ' → logprob: -11.158736228942871
    9. ' continues' → logprob: -11.283736228942871
    10. '		       ' → logprob: -11.283736228942871

Token 419: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009282566024921834
    2. '            
' → logprob: -8.000927925109863
    3. '<|end|>' → logprob: -8.625927925109863
    4. ' 
' → logprob: -9.000927925109863
    5. '  
' → logprob: -9.750927925109863
    6. '
' → logprob: -9.750927925109863
    7. ' total' → logprob: -10.125927925109863
    8. '               ' → logprob: -10.625927925109863
    9. '    
' → logprob: -10.750927925109863
    10. ',' → logprob: -11.000927925109863

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00143083231523633
    2. ' total' → logprob: -7.501430988311768
    3. '       ' → logprob: -7.876430988311768
    4. '               ' → logprob: -9.12643051147461
    5. 'total' → logprob: -9.25143051147461
    6. '            
' → logprob: -9.50143051147461
    7. '<|end|>' → logprob: -10.25143051147461
    8. '
' → logprob: -10.25143051147461
    9. ' 
' → logprob: -10.62643051147461
    10. '		' → logprob: -11.00143051147461

Token 421: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9613592028617859
    2. ' total' → logprob: -0.9613592028617859
    3. 'total' (adapté à ' total') → logprob: -1.4613592624664307
    4. '       ' → logprob: -6.461359024047852
    5. '
' → logprob: -6.961359024047852
    6. '               ' → logprob: -7.961359024047852
    7. '	total' → logprob: -8.961359024047852
    8. '   ' → logprob: -9.211359024047852
    9. ' 
' → logprob: -9.711359024047852
    10. '(total' → logprob: -10.336359024047852

Token 422: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759847164154053
    2. '+=' → logprob: -0.8259847164154053
    3. '+' → logprob: -10.575984954833984
    4. ']+=' → logprob: -10.950984954833984
    5. '=' → logprob: -14.200984954833984
    6. '+=(' → logprob: -14.700984954833984
    7. '+='' → logprob: -14.825984954833984
    8. '+="' → logprob: -15.325984954833984
    9. '	' → logprob: -15.825984954833984
    10. ' ' → logprob: -16.200984954833984

Token 423: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.032761234790086746
    2. ' interval' → logprob: -3.657761335372925
    3. 'e' → logprob: -5.907761096954346
    4. 'min' → logprob: -6.157761096954346
    5. ' min' → logprob: -7.032761096954346
    6. ' e' → logprob: -8.032761573791504
    7. 'max' → logprob: -8.157761573791504
    8. ' max' → logprob: -10.032761573791504
    9. '(interval' → logprob: -10.032761573791504
    10. '(e' → logprob: -11.782761573791504

Token 424: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. '_over' → logprob: -15.750000953674316
    4. '_interval' → logprob: -17.625
    5. 'over' → logprob: -17.75
    6. '_override' → logprob: -17.875
    7. '\' → logprob: -18.875
    8. 's' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. ' _' → logprob: -19.375

Token 425: '([' (ID: 5194)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.001174747827462852
    2. '((' → logprob: -7.1261749267578125
    3. 'interval' → logprob: -8.876174926757812
    4. '([' → logprob: -8.876174926757812
    5. ' (' → logprob: -9.501174926757812
    6. '(' → logprob: -11.126174926757812
    7. ' intervals' → logprob: -15.126174926757812
    8. '(in' → logprob: -16.251174926757812
    9. '(([' → logprob: -16.251174926757812
    10. ' ([' → logprob: -16.376174926757812

Token 426: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2589253783226013
    2. '[s' → logprob: -1.883925437927246
    3. 'interval' → logprob: -2.758925437927246
    4. '(s' → logprob: -4.508925437927246
    5. '[i' → logprob: -7.883925437927246
    6. ' intervals' → logprob: -8.258925437927246
    7. ' [' → logprob: -8.383925437927246
    8. ' s' → logprob: -8.383925437927246
    9. ' (' → logprob: -8.883925437927246
    10. 'i' → logprob: -8.883925437927246

Token 427: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07900754362344742
    2. ',e' → logprob: -2.579007625579834
    3. ' ,' → logprob: -9.204007148742676
    4. 'e' → logprob: -11.829007148742676
    5. ',
' → logprob: -12.329007148742676
    6. ',end' → logprob: -12.454007148742676
    7. '           ' → logprob: -14.704007148742676
    8. ',i' → logprob: -15.829007148742676
    9. ',t' → logprob: -16.329008102416992
    10. ' e' → logprob: -16.329008102416992

Token 428: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039235666394233704
    2. '],' → logprob: -3.2892355918884277
    3. ' ,' → logprob: -6.789235591888428
    4. '),' → logprob: -10.164236068725586
    5. ' ],' → logprob: -10.664236068725586
    6. ']' → logprob: -14.164236068725586
    7. '],[' → logprob: -14.164236068725586
    8. '           ' → logprob: -14.539236068725586
    9. '```' → logprob: -14.664236068725586
    10. '(ts' → logprob: -14.664236068725586

Token 429: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.01815052703022957
    2. ' ts' → logprob: -4.018150329589844
    3. '	ts' → logprob: -14.893150329589844
    4. '(ts' → logprob: -15.768150329589844
    5. '_ts' → logprob: -16.268150329589844
    6. '
' → logprob: -17.393150329589844
    7. 'tsx' → logprob: -17.893150329589844
    8. 'Ts' → logprob: -18.393150329589844
    9. ' ' → logprob: -18.518150329589844
    10. 'TS' → logprob: -19.018150329589844

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014084660506341606
    2. ' ,' → logprob: -8.875141143798828
    3. ',
' → logprob: -14.750141143798828
    4. ' te' → logprob: -15.000141143798828
    5. '           ' → logprob: -16.375141143798828
    6. '   ' → logprob: -17.750141143798828
    7. ',to' → logprob: -17.750141143798828
    8. '(te' → logprob: -18.125141143798828
    9. ')' → logprob: -18.500141143798828
    10. ',se' → logprob: -18.500141143798828

Token 431: ' te' (ID: 729)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.048587486147880554
    2. ' te' → logprob: -3.0485875606536865
    3. '(te' → logprob: -17.548587799072266
    4. '_te' → logprob: -18.423587799072266
    5. 'Te' → logprob: -18.673587799072266
    6. ' ' → logprob: -19.673587799072266
    7. ' Te' → logprob: -19.798587799072266
    8. '.te' → logprob: -19.923587799072266
    9. '   ' → logprob: -20.423587799072266
    10. ' ' → logprob: -20.423587799072266

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011755822924897075
    2. ')
' → logprob: -6.751175403594971
    3. ' )' → logprob: -12.376175880432129
    4. '       ' → logprob: -15.126175880432129
    5. ')
' → logprob: -15.126175880432129
    6. ')

' → logprob: -15.251175880432129
    7. '           ' → logprob: -15.626175880432129
    8. '))' → logprob: -17.376174926757812
    9. ')return' → logprob: -17.376174926757812
    10. ' )
' → logprob: -17.501174926757812

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0892535150051117
    2. '
' → logprob: -2.7142534255981445
    3. 'print' → logprob: -4.2142534255981445
    4. ' print' → logprob: -6.2142534255981445
    5. '<|end|>' → logprob: -6.9642534255981445
    6. '        
' → logprob: -7.3392534255981445
    7. '   ' → logprob: -8.714253425598145
    8. '  
' → logprob: -8.714253425598145
    9. ' 
' → logprob: -8.839253425598145
    10. '    
' → logprob: -9.714253425598145

Token 434: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00030269217677414417
    2. ' print' → logprob: -8.2503023147583
    3. '       ' → logprob: -10.2503023147583
    4. '```' → logprob: -12.7503023147583
    5. '
' → logprob: -13.1253023147583
    6. '   ' → logprob: -14.2503023147583
    7. '	print' → logprob: -15.0003023147583
    8. '``' → logprob: -16.750303268432617
    9. '        
' → logprob: -17.500303268432617
    10. '.print' → logprob: -17.750303268432617

Token 435: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00016158436483237892
    2. '(' → logprob: -8.750161170959473
    3. 'total' → logprob: -12.750161170959473
    4. ' total' → logprob: -17.00016212463379
    5. ' (' → logprob: -17.00016212463379
    6. '()' → logprob: -17.62516212463379
    7. '('' → logprob: -18.25016212463379
    8. '(t' → logprob: -18.62516212463379
    9. ',total' → logprob: -18.62516212463379
    10. '(
' → logprob: -19.12516212463379

Token 436: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -16.125
    4. ')`' → logprob: -16.125
    5. '())' → logprob: -16.875
    6. '()' → logprob: -17.125
    7. '))' → logprob: -17.875
    8. '`)' → logprob: -18.125
    9. ')}' → logprob: -18.75
    10. '}' → logprob: -18.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 434
Tokens correctement prédits (1ère position, stricte): 184
Tokens correctement prédits (1ère position, avec adaptation): 196
Tokens correctement prédits (top 10): 366
Précision stricte (1ère position): 42.40%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 84.33%
================================================================================
