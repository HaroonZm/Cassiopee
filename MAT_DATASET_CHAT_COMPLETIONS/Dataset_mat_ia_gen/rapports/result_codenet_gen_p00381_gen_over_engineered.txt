================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class WarpMachineRouting:
    MOD = 10**9 + 7

    class LetterIndexMapper:
        def __init__(self):
            # Maps character to list of indices (1-based)
            self._map = {chr(c): [] for c in range(ord('a'), ord('z') + 1)}

        def add(self, ch: str, index: int):
            self._map[ch].append(index)

        def get_indices(self, ch: str):
            return self._map[ch]

    class FenwickTree:
        def __init__(self, size: int):
            self.size = size
            self.tree = [0] * (size + 1)

        def update(self, index: int, value: int):
            while index <= self.size:
                self.tree[index] = (self.tree[index] + value) % WarpMachineRouting.MOD
                index += index & (-index)

        def query(self, index: int):
            s = 0
            while index > 0:
                s = (s + self.tree[index]) % WarpMachineRouting.MOD
                index -= index & (-index)
            return s

        def range_query(self, left: int, right: int):
            if right < left:
                return 0
            return (self.query(right) - self.query(left - 1)) % WarpMachineRouting.MOD

    def __init__(self, N: int, s: str, t: str):
        self.N = N
        self.s = s
        self.t = t
        self.s_mapper = self.LetterIndexMapper()
        self.dp = [0] * (N + 1)
        self.fenwicks = {ch: self.FenwickTree(N) for ch in set(s)}

        # Preprocess indices by entrance letter s[i]
        for i, ch in enumerate(s, start=1):
            self.s_mapper.add(ch, i)

    def compute_routes(self):
        # Base case: from star 1, 1 way to start
        self.dp[1] = 1
        # Initialize Fenwick Trees for dp updates
        self.fenwicks[self.s[0]].update(1, 1)

        for i in range(2, self.N + 1):
            # For planet i, t[i-1] is the exit letter
            exit_letter = self.t[i - 1]
            # For all entrances with s_j == exit_letter and j < i
            fenw = self.fenwicks.get(exit_letter)
            if fenw is None:
                self.dp[i] = 0
                continue
            # sum dp[j] over j < i and s_j == exit_letter
            self.dp[i] = fenw.query(i - 1) % self.MOD
            # Update fenwicks for s[i] with dp[i]
            self.fenwicks[self.s[i - 1]].update(i, self.dp[i])

        return self.dp[self.N] % self.MOD


def main():
    import sys
    sys.setrecursionlimit(10**7)
    N = int(sys.stdin.readline())
    s = sys.stdin.readline().strip()
    t = sys.stdin.readline().strip()
    routing = WarpMachineRouting(N, s, t)
    print(routing.compute_routes())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Warp' (ID: 197006)
  → Token d'amorce (pas de prédiction)

Token 2: 'Machine' (ID: 25519)
  → Token d'amorce (pas de prédiction)

Token 3: 'Routing' (ID: 38834)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2977876663208008
    2. '{' → logprob: -2.047787666320801
    3. '(' → logprob: -2.172787666320801
    4. ' {' → logprob: -4.672787666320801
    5. '.' → logprob: -5.422787666320801
    6. ' ' → logprob: -8.4227876663208
    7. '```' → logprob: -8.4227876663208
    8. ' :' → logprob: -8.7977876663208
    9. '(:' → logprob: -9.1727876663208
    10. '_' → logprob: -10.5477876663208

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.33767691254615784
    2. '(' → logprob: -1.7126768827438354
    3. ':' → logprob: -2.587677001953125
    4. ' {' → logprob: -3.962677001953125
    5. '.' → logprob: -4.587677001953125
    6. ' ' → logprob: -6.837677001953125
    7. '```' → logprob: -8.087677001953125
    8. '[' → logprob: -9.212677001953125
    9. '(:' → logprob: -9.962677001953125
    10. ' (' → logprob: -10.212677001953125

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15050108730793
    2. '(' → logprob: -2.025501012802124
    3. '.' → logprob: -5.525501251220703
    4. '   ' → logprob: -6.150501251220703
    5. '```' → logprob: -7.400501251220703
    6. '(
' → logprob: -7.900501251220703
    7. ':
' → logprob: -8.150501251220703
    8. '():' → logprob: -8.400501251220703
    9. '{' → logprob: -10.775501251220703
    10. '(:' → logprob: -10.900501251220703

Token 6: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.509088397026062
    2. ' ' → logprob: -1.509088397026062
    3. '    ' → logprob: -2.7590885162353516
    4. '```' → logprob: -3.3840885162353516
    5. '    
' → logprob: -4.509088516235352
    6. '(' → logprob: -4.759088516235352
    7. '       ' → logprob: -5.009088516235352
    8. '\' → logprob: -5.134088516235352
    9. '\n' → logprob: -5.134088516235352
    10. ' def' → logprob: -5.509088516235352

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03226596117019653
    2. '=' → logprob: -3.5322659015655518
    3. ' ' → logprob: -7.282266139984131
    4. 'ULE' → logprob: -7.407266139984131
    5. '   ' → logprob: -7.907266139984131
    6. 'ULO' → logprob: -8.532265663146973
    7. 'UL' → logprob: -8.782265663146973
    8. '_' → logprob: -9.282265663146973
    9. '  ' → logprob: -9.282265663146973
    10. 'IFY' → logprob: -9.907265663146973

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0064882272854447365
    2. '10' → logprob: -5.50648832321167
    3. '100' → logprob: -6.13148832321167
    4. '409' → logprob: -9.256487846374512
    5. '16' → logprob: -10.381487846374512
    6. '1' → logprob: -11.381487846374512
    7. '2' → logprob: -11.381487846374512
    8. '256' → logprob: -11.381487846374512
    9. '102' → logprob: -11.631487846374512
    10. ' (' → logprob: -11.756487846374512

Token 9: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.45731085538864136
    2. '10' → logprob: -1.0823109149932861
    3. '409' → logprob: -4.832310676574707
    4. '2' → logprob: -5.582310676574707
    5. '256' → logprob: -5.707310676574707
    6. ' ' → logprob: -5.957310676574707
    7. '0' → logprob: -6.332310676574707
    8. '360' → logprob: -6.582310676574707
    9. '998' → logprob: -6.957310676574707
    10. '102' → logprob: -7.082310676574707

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5921728014945984
    2. '.' → logprob: -1.4671728610992432
    3. '%' → logprob: -2.217172861099243
    4. '_' → logprob: -3.592172861099243
    5. '#' → logprob: -4.092172622680664
    6. '\' → logprob: -4.467172622680664
    7. ',' → logprob: -4.717172622680664
    8. '6' → logprob: -4.967172622680664
    9. '4' → logprob: -5.092172622680664
    10. '2' → logprob: -5.092172622680664

Token 11: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. '09' → logprob: -13.37500286102295
    3. ' ' → logprob: -15.50000286102295
    4. '8' → logprob: -15.50000286102295
    5. '```' → logprob: -15.62500286102295
    6. '6' → logprob: -15.75000286102295
    7. '10' → logprob: -16.125001907348633
    8. '7' → logprob: -16.625001907348633
    9. '18' → logprob: -16.625001907348633
    10. '4' → logprob: -17.875001907348633

Token 12: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017084944993257523
    2. ' +' → logprob: -6.376708507537842
    3. '7' → logprob: -12.501708030700684
    4. '+
' → logprob: -13.376708030700684
    5. '6' → logprob: -14.876708030700684
    6. '```' → logprob: -15.376708030700684
    7. ' +
' → logprob: -16.001708984375
    8. '+

' → logprob: -16.251708984375
    9. '＋' → logprob: -16.376708984375
    10. '9' → logprob: -17.126708984375

Token 13: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -14.625006675720215
    4. '```' → logprob: -16.12500762939453
    5. '9' → logprob: -16.50000762939453
    6. '   ' → logprob: -16.62500762939453
    7. '07' → logprob: -17.75000762939453
    8. '17' → logprob: -18.25000762939453
    9. '  ' → logprob: -18.43750762939453
    10. '37' → logprob: -18.87500762939453

Token 14: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.25
    4. '+' → logprob: -16.25
    5. '```' → logprob: -17.125
    6. '9' → logprob: -17.875
    7. '07' → logprob: -18.5
    8. '  ' → logprob: -19.125
    9. '17' → logprob: -19.25
    10. '77' → logprob: -19.625

Token 15: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7301778197288513
    2. '
' → logprob: -1.605177879333496
    3. '\' → logprob: -2.730177879333496
    4. '[' → logprob: -2.730177879333496
    5. '<|end|>' → logprob: -3.230177879333496
    6. '.' → logprob: -3.230177879333496
    7. '' → logprob: -3.855177879333496
    8. '\n' → logprob: -4.105177879333496
    9. '   ' → logprob: -4.105177879333496
    10. ':' → logprob: -4.480177879333496

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7025261521339417
    2. '```' → logprob: -0.9525261521339417
    3. '   ' → logprob: -2.327526092529297
    4. '
' → logprob: -4.952526092529297
    5. '\' → logprob: -5.577526092529297
    6. '\n' → logprob: -5.827526092529297
    7. '    
' → logprob: -5.952526092529297
    8. '``' → logprob: -6.452526092529297
    9. 'def' → logprob: -7.452526092529297
    10. '[' → logprob: -7.577526092529297

Token 17: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4262445271015167
    2. '   ' → logprob: -1.3012444972991943
    3. ' def' → logprob: -2.9262444972991943
    4. '```' → logprob: -4.301244735717773
    5. '_' → logprob: -6.051244735717773
    6. ' ' → logprob: -7.176244735717773
    7. ' ```' → logprob: -7.301244735717773
    8. 'd' → logprob: -7.551244735717773
    9. '    ' → logprob: -7.551244735717773
    10. '`' → logprob: -7.801244735717773

Token 18: ' Letter' (ID: 36718)
  Prédit: ' Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Warp' → logprob: -0.29949328303337097
    2. ' Router' → logprob: -2.1744933128356934
    3. '_' → logprob: -2.9244933128356934
    4. 'Warp' → logprob: -3.9244933128356934
    5. ' _' → logprob: -4.299493312835693
    6. ' Meta' → logprob: -4.674493312835693
    7. ' def' → logprob: -4.924493312835693
    8. ' Node' → logprob: -5.049493312835693
    9. ' ' → logprob: -5.424493312835693
    10. ' Config' → logprob: -5.424493312835693

Token 19: 'Index' (ID: 2368)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037826199550181627
    2. ' :' → logprob: -7.128782749176025
    3. '):' → logprob: -7.128782749176025
    4. '{' → logprob: -7.253782749176025
    5. 'Mapping' → logprob: -8.378782272338867
    6. '(' → logprob: -8.628782272338867
    7. ' ' → logprob: -9.003782272338867
    8. '():' → logprob: -9.003782272338867
    9. '>:' → logprob: -9.128782272338867
    10. ':
' → logprob: -9.378782272338867

Token 20: 'Mapper' (ID: 10811)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008086714660748839
    2. '(' → logprob: -7.7508087158203125
    3. ' :' → logprob: -8.250808715820312
    4. '():' → logprob: -10.250808715820312
    5. ':
' → logprob: -10.750808715820312
    6. '(object' → logprob: -11.250808715820312
    7. ':**' → logprob: -11.375808715820312
    8. '<|end|>' → logprob: -11.375808715820312
    9. '):' → logprob: -12.500808715820312
    10. ',' → logprob: -12.750808715820312

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002931558701675385
    2. '(' → logprob: -9.125292778015137
    3. ' :' → logprob: -9.125292778015137
    4. '<|end|>' → logprob: -10.500292778015137
    5. ':
' → logprob: -11.000292778015137
    6. '```' → logprob: -11.625292778015137
    7. '():' → logprob: -12.000292778015137
    8. '   ' → logprob: -12.625292778015137
    9. '):' → logprob: -13.125292778015137
    10. ':**' → logprob: -13.125292778015137

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2431638091802597
    2. '<|end|>' → logprob: -2.243163824081421
    3. '    ' → logprob: -3.368163824081421
    4. '   ' → logprob: -3.618163824081421
    5. ' ' → logprob: -4.368163585662842
    6. '        
' → logprob: -4.618163585662842
    7. '    
' → logprob: -5.493163585662842
    8. '<|end|>' → logprob: -5.868163585662842
    9. ' 
' → logprob: -5.993163585662842
    10. '_' → logprob: -6.118163585662842

Token 23: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4333256781101227
    2. ' def' → logprob: -1.0583256483078003
    3. '       ' → logprob: -5.55832576751709
    4. '   ' → logprob: -7.80832576751709
    5. '        ' → logprob: -8.68332576751709
    6. ' ' → logprob: -9.93332576751709
    7. '    ' → logprob: -10.05832576751709
    8. '           ' → logprob: -10.55832576751709
    9. '@' → logprob: -10.80832576751709
    10. '        
' → logprob: -11.68332576751709

Token 24: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009263450279831886
    2. '_' → logprob: -6.009263515472412
    3. ' ' → logprob: -6.134263515472412
    4. ' _' → logprob: -6.259263515472412
    5. ' init' → logprob: -6.384263515472412
    6. '__' → logprob: -7.634263515472412
    7. ' initialize' → logprob: -8.634263038635254
    8. '_init' → logprob: -9.259263038635254
    9. 'init' → logprob: -9.884263038635254
    10. ' get' → logprob: -10.259263038635254

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.286852345103398e-05
    2. 'ini' → logprob: -10.625042915344238
    3. 'i' → logprob: -11.625042915344238
    4. 'in' → logprob: -11.750042915344238
    5. 'int' → logprob: -13.500042915344238
    6. 'inite' → logprob: -16.250041961669922
    7. ' init' → logprob: -16.500041961669922
    8. 'innit' → logprob: -16.625041961669922
    9. 'new' → logprob: -16.750041961669922
    10. 'inti' → logprob: -16.875041961669922

Token 26: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23893184959888458
    2. '__(' → logprob: -2.238931894302368
    3. '(self' → logprob: -2.363931894302368
    4. ' (' → logprob: -5.238931655883789
    5. '<|end|>' → logprob: -5.738931655883789
    6. '__' → logprob: -6.863931655883789
    7. '```' → logprob: -7.988931655883789
    8. ')(' → logprob: -8.113931655883789
    9. 'self' → logprob: -8.363931655883789
    10. '__(
' → logprob: -8.363931655883789

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012645380571484566
    2. ' self' → logprob: -4.387645244598389
    3. ')' → logprob: -9.387645721435547
    4. '(self' → logprob: -10.887645721435547
    5. ' )' → logprob: -11.387645721435547
    6. ' ' → logprob: -11.887645721435547
    7. '	self' → logprob: -12.637645721435547
    8. 's' → logprob: -12.762645721435547
    9. ',self' → logprob: -13.637645721435547
    10. '       ' → logprob: -14.387645721435547

Token 28: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3166413903236389
    2. ' ,' → logprob: -1.4416413307189941
    3. 'self' → logprob: -3.441641330718994
    4. ' self' → logprob: -6.316641330718994
    5. '):' → logprob: -8.566641807556152
    6. ' ' → logprob: -8.566641807556152
    7. ' )' → logprob: -8.691641807556152
    8. ')' → logprob: -8.816641807556152
    9. ',self' → logprob: -9.316641807556152
    10. '(self' → logprob: -9.316641807556152

Token 29: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23537462949752808
    2. ' self' → logprob: -1.7353746891021729
    3. '           ' → logprob: -3.485374689102173
    4. '               ' → logprob: -6.485374450683594
    5. ')' → logprob: -8.735374450683594
    6. '       ' → logprob: -8.735374450683594
    7. '        ' → logprob: -8.860374450683594
    8. '(self' → logprob: -8.860374450683594
    9. '            ' → logprob: -8.860374450683594
    10. ' ' → logprob: -9.360374450683594

Token 30: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3971157968044281
    2. 'self' → logprob: -1.1471158266067505
    3. '           ' → logprob: -5.022115707397461
    4. '               ' → logprob: -6.022115707397461
    5. ' ' → logprob: -7.147115707397461
    6. '       ' → logprob: -9.022115707397461
    7. '   ' → logprob: -9.397115707397461
    8. '            ' → logprob: -10.272115707397461
    9. '	self' → logprob: -10.397115707397461
    10. '             ' → logprob: -10.522115707397461

Token 31: ' Maps' (ID: 43803)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19674262404441833
    2. 'self' → logprob: -1.8217426538467407
    3. '           ' → logprob: -5.321742534637451
    4. ' def' → logprob: -6.196742534637451
    5. ' ' → logprob: -6.321742534637451
    6. ' defaultdict' → logprob: -6.571742534637451
    7. '            ' → logprob: -6.571742534637451
    8. 'from' → logprob: -7.071742534637451
    9. ' from' → logprob: -7.696742534637451
    10. '               ' → logprob: -7.946742534637451

Token 32: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9100146293640137
    2. ' self' → logprob: -1.2850146293640137
    3. ' char' → logprob: -2.0350146293640137
    4. 'self' → logprob: -2.5350146293640137
    5. 'char' → logprob: -3.9100146293640137
    6. ' (' → logprob: -4.785014629364014
    7. ' character' → logprob: -4.910014629364014
    8. ' a' → logprob: -5.160014629364014
    9. ' lowercase' → logprob: -5.160014629364014
    10. ' letter' → logprob: -5.285014629364014

Token 33: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3011380434036255
    2. ' to' → logprob: -1.4261380434036255
    3. 's' → logprob: -4.176137924194336
    4. '  ' → logprob: -6.801137924194336
    5. ' ->' → logprob: -6.801137924194336
    6. ' :' → logprob: -7.551137924194336
    7. ''s' → logprob: -8.051137924194336
    8. ':' → logprob: -8.301137924194336
    9. ' '' → logprob: -8.426137924194336
    10. ''' → logprob: -8.926137924194336

Token 34: ' list' (ID: 1562)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.8743917942047119
    2. ' index' → logprob: -0.8743917942047119
    3. ' their' → logprob: -2.374391794204712
    4. ' integer' → logprob: -2.874391794204712
    5. 'index' → logprob: -4.874391555786133
    6. ' int' → logprob: -5.749391555786133
    7. ' an' → logprob: -6.499391555786133
    8. ' the' → logprob: -7.624391555786133
    9. 'its' → logprob: -7.624391555786133
    10. ' ' → logprob: -7.749391555786133

Token 35: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1900429129600525
    2. '<|end|>' → logprob: -1.8150429725646973
    3. '[int' → logprob: -5.190042972564697
    4. '[' → logprob: -6.190042972564697
    5. '<|end|>' → logprob: -7.315042972564697
    6. ' ' → logprob: -7.565042972564697
    7. ' indices' → logprob: -7.565042972564697
    8. 's' → logprob: -8.065042495727539
    9. ' tokens' → logprob: -9.315042495727539
    10. 'of' → logprob: -9.315042495727539

Token 36: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.1266898363828659
    2. ' positions' → logprob: -2.376689910888672
    3. 'indices' → logprob: -4.376689910888672
    4. ' indexes' → logprob: -4.751689910888672
    5. ' integers' → logprob: -5.876689910888672
    6. 'positions' → logprob: -7.876689910888672
    7. ' their' → logprob: -8.001689910888672
    8. ' line' → logprob: -8.251689910888672
    9. 'indexes' → logprob: -8.501689910888672
    10. ' integer' → logprob: -8.751689910888672

Token 37: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0223188400268555
    2. '<|end|>' → logprob: -1.3973188400268555
    3. '[' → logprob: -2.3973188400268555
    4. ':' → logprob: -2.3973188400268555
    5. '```' → logprob: -3.2723188400268555
    6. '           ' → logprob: -3.8973188400268555
    7. 's' → logprob: -4.0223188400268555
    8. '            ' → logprob: -4.1473188400268555
    9. ' :' → logprob: -4.1473188400268555
    10. '       ' → logprob: -4.2723188400268555

Token 38: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14425311982631683
    2. ' )' → logprob: -2.1442530155181885
    3. 's' → logprob: -5.394253253936768
    4. '[' → logprob: -6.644253253936768
    5. '<|end|>' → logprob: -6.644253253936768
    6. ' where' → logprob: -6.894253253936768
    7. ' ' → logprob: -6.894253253936768
    8. ' tokens' → logprob: -7.019253253936768
    9. ' positions' → logprob: -7.394253253936768
    10. ' in' → logprob: -7.394253253936768

Token 39: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.0049836281687021255
    2. '-' → logprob: -6.129983425140381
    3. ')' → logprob: -7.129983425140381
    4. 'based' → logprob: -7.254983425140381
    5. ')-' → logprob: -8.004983901977539
    6. ' based' → logprob: -8.004983901977539
    7. ' -' → logprob: -8.254983901977539
    8. '-index' → logprob: -9.254983901977539
    9. ':' → logprob: -9.754983901977539
    10. '-base' → logprob: -10.129983901977539

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004903312306851149
    2. ' )' → logprob: -6.504903316497803
    3. 's' → logprob: -6.629903316497803
    4. ' indices' → logprob: -7.629903316497803
    5. ' positions' → logprob: -7.629903316497803
    6. ' of' → logprob: -7.879903316497803
    7. '<|end|>' → logprob: -8.379902839660645
    8. ' in' → logprob: -9.379902839660645
    9. ' tokens' → logprob: -9.504902839660645
    10. 'indices' → logprob: -9.504902839660645

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7216649055480957
    2. '<|end|>' → logprob: -2.0966649055480957
    3. '            ' → logprob: -2.3466649055480957
    4. ' ' → logprob: -2.4716649055480957
    5. '               ' → logprob: -2.7216649055480957
    6. '\' → logprob: -3.2216649055480957
    7. '       ' → logprob: -3.4716649055480957
    8. '```' → logprob: -4.346664905548096
    9. '        ' → logprob: -4.596664905548096
    10. '             ' → logprob: -5.221664905548096

Token 42: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7900809645652771
    2. 'self' (adapté à ' self') → logprob: -1.2900810241699219
    3. '               ' → logprob: -1.4150810241699219
    4. ' self' → logprob: -4.040081024169922
    5. ' ' → logprob: -5.165081024169922
    6. '            ' → logprob: -6.665081024169922
    7. '   ' → logprob: -6.790081024169922
    8. '                   ' → logprob: -7.540081024169922
    9. '       ' → logprob: -8.040081024169922
    10. '<|end|>' → logprob: -8.290081024169922

Token 43: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8353912234306335
    2. '.char' → logprob: -1.4603912830352783
    3. '.indices' → logprob: -2.0853912830352783
    4. '.' → logprob: -2.3353912830352783
    5. '.characters' → logprob: -2.8353912830352783
    6. '.mapping' → logprob: -3.5853912830352783
    7. '.character' → logprob: -4.835391044616699
    8. '.positions' → logprob: -4.960391044616699
    9. ' .' → logprob: -5.835391044616699
    10. '.ch' → logprob: -5.960391044616699

Token 44: 'map' (ID: 3726)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.02944079600274563
    2. 'map' → logprob: -4.904440879821777
    3. 'positions' → logprob: -4.904440879821777
    4. '_char' → logprob: -5.779440879821777
    5. 'mapping' → logprob: -5.904440879821777
    6. 'index' → logprob: -6.029440879821777
    7. 'pos' → logprob: -6.279440879821777
    8. 'indices' → logprob: -6.279440879821777
    9. '_map' → logprob: -7.154440879821777
    10. 'position' → logprob: -8.029440879821777

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20164185762405396
    2. '=' → logprob: -1.7016417980194092
    3. '.setdefault' → logprob: -9.201642036437988
    4. '[' → logprob: -9.826642036437988
    5. '={}' → logprob: -10.451642036437988
    6. ':' → logprob: -11.326642036437988
    7. '{' → logprob: -11.951642036437988
    8. 's' → logprob: -12.076642036437988
    9. ' ' → logprob: -12.701642036437988
    10. '={' → logprob: -12.951642036437988

Token 46: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.09471859782934189
    2. ' {}' → logprob: -2.5947186946868896
    3. ' defaultdict' → logprob: -4.2197184562683105
    4. 'default' → logprob: -7.0947184562683105
    5. 'dict' → logprob: -9.094718933105469
    6. ' dict' → logprob: -10.469718933105469
    7. ' collections' → logprob: -11.094718933105469
    8. 'collections' → logprob: -11.844718933105469
    9. '[]' → logprob: -12.719718933105469
    10. ' ' → logprob: -13.344718933105469

Token 47: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.2117498517036438
    2. '}' → logprob: -2.336749792098999
    3. ' chr' → logprob: -2.836749792098999
    4. ' }' → logprob: -3.961749792098999
    5. 'c' → logprob: -4.836750030517578
    6. '(chr' → logprob: -6.336750030517578
    7. ' c' → logprob: -6.336750030517578
    8. '            ' → logprob: -7.461750030517578
    9. '        ' → logprob: -7.711750030517578
    10. '    ' → logprob: -7.836750030517578

Token 48: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6497030258178711
    2. '(ord' → logprob: -0.8997030258178711
    3. '(i' → logprob: -2.649703025817871
    4. '(a' → logprob: -8.024703025817871
    5. '(c' → logprob: -10.024703025817871
    6. '(x' → logprob: -10.274703025817871
    7. '(s' → logprob: -11.774703025817871
    8. '(code' → logprob: -12.774703025817871
    9. '```' → logprob: -13.149703025817871
    10. '(o' → logprob: -13.399703025817871

Token 49: '):' (ID: 3127)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35578060150146484
    2. '(ord' → logprob: -1.6057806015014648
    3. ':' → logprob: -3.230780601501465
    4. ' :' → logprob: -4.230780601501465
    5. '   ' → logprob: -4.480780601501465
    6. ' ' → logprob: -4.855780601501465
    7. '=' → logprob: -5.105780601501465
    8. '97' → logprob: -5.605780601501465
    9. 'a' → logprob: -5.855780601501465
    10. 'ord' → logprob: -5.855780601501465

Token 50: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6361365914344788
    2. ' []' → logprob: -0.7611365914344788
    3. '[' → logprob: -6.261136531829834
    4. '[]}' → logprob: -7.261136531829834
    5. ' [' → logprob: -7.636136531829834
    6. ' ' → logprob: -7.886136531829834
    7. '[]

' → logprob: -12.011137008666992
    8. '[]
' → logprob: -12.011137008666992
    9. '[])' → logprob: -12.136137008666992
    10. '   ' → logprob: -12.261137008666992

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019387952983379364
    2. 'for' → logprob: -4.019387722015381
    3. ' ' → logprob: -7.269387722015381
    4. ')' → logprob: -8.644388198852539
    5. '}' → logprob: -9.144388198852539
    6. '()' → logprob: -9.394388198852539
    7. '           ' → logprob: -10.644388198852539
    8. '        ' → logprob: -11.144388198852539
    9. '       ' → logprob: -11.144388198852539
    10. '   ' → logprob: -11.269388198852539

Token 52: ' c' (ID: 274)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -4.203409844194539e-05
    2. 'range' → logprob: -10.125041961669922
    3. '(range' → logprob: -13.500041961669922
    4. ' ord' → logprob: -15.375041961669922
    5. '	range' → logprob: -16.375041961669922
    6. ' ' → logprob: -16.500041961669922
    7. ' c' → logprob: -16.750041961669922
    8. ' r' → logprob: -17.000041961669922
    9. ' xrange' → logprob: -17.625041961669922
    10. ' ra' → logprob: -18.250041961669922

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06249437481164932
    2. 'in' → logprob: -2.8124942779541016
    3. 's' → logprob: -9.187494277954102
    4. 'range' → logprob: -9.562494277954102
    5. ' ' → logprob: -9.937494277954102
    6. 'i' → logprob: -9.937494277954102
    7. '32' → logprob: -10.312494277954102
    8. '   ' → logprob: -10.562494277954102
    9. 'ord' → logprob: -11.062494277954102
    10. 'In' → logprob: -11.062494277954102

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0040874239057302475
    2. 'range' → logprob: -5.504087448120117
    3. '(range' → logprob: -11.754087448120117
    4. ' ord' → logprob: -14.379087448120117
    5. '	range' → logprob: -15.504087448120117
    6. '   ' → logprob: -16.004087448120117
    7. ' ' → logprob: -16.629087448120117
    8. '(ord' → logprob: -16.754087448120117
    9. '(' → logprob: -17.254087448120117
    10. 'ord' → logprob: -17.379087448120117

Token 55: '(ord' (ID: 199585)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04862143099308014
    2. '(ord' → logprob: -3.048621416091919
    3. '65' → logprob: -10.42362117767334
    4. '97' → logprob: -13.17362117767334
    5. ' (' → logprob: -13.79862117767334
    6. '40' → logprob: -14.67362117767334
    7. 'ord' → logprob: -15.29862117767334
    8. ' ' → logprob: -15.54862117767334
    9. ' ord' → logprob: -15.67362117767334
    10. '   ' → logprob: -16.298622131347656

Token 56: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08165523409843445
    2. '(ord' → logprob: -2.581655263900757
    3. '65' → logprob: -6.081655025482178
    4. '97' → logprob: -7.831655025482178
    5. '('' → logprob: -9.956655502319336
    6. 'ord' → logprob: -10.956655502319336
    7. '(a' → logprob: -11.706655502319336
    8. '48' → logprob: -13.081655502319336
    9. 'a' → logprob: -13.456655502319336
    10. '40' → logprob: -14.581655502319336

Token 57: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20186127722263336
    2. 'A' → logprob: -1.7018612623214722
    3. ''a' → logprob: -8.451861381530762
    4. ''A' → logprob: -9.201861381530762
    5. 'а' → logprob: -10.201861381530762
    6. '65' → logprob: -10.951861381530762
    7. '97' → logprob: -11.201861381530762
    8. ' a' → logprob: -11.701861381530762
    9. '```' → logprob: -11.889361381530762
    10. '`' → logprob: -11.889361381530762

Token 58: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.014269285835325718
    2. 'a' → logprob: -4.3892693519592285
    3. '),' → logprob: -7.6392693519592285
    4. ''),
' → logprob: -7.8892693519592285
    5. ''' → logprob: -7.8892693519592285
    6. ''),'' → logprob: -8.63926887512207
    7. '')' → logprob: -8.76426887512207
    8. ''a' → logprob: -9.63926887512207
    9. '```' → logprob: -10.63926887512207
    10. ')' → logprob: -11.01426887512207

Token 59: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.12709052860736847
    2. ' ord' → logprob: -2.1270904541015625
    3. '(ord' → logprob: -8.752090454101562
    4. ' ' → logprob: -13.252090454101562
    5. '   ' → logprob: -14.252090454101562
    6. 'ordinal' → logprob: -14.377090454101562
    7. '_ord' → logprob: -14.502090454101562
    8. 'ordin' → logprob: -15.377090454101562
    9. '```' → logprob: -15.877090454101562
    10. 'ords' → logprob: -16.127090454101562

Token 60: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0014248794177547097
    2. '(' → logprob: -6.626424789428711
    3. '(ord' → logprob: -10.001424789428711
    4. 'a' → logprob: -10.626424789428711
    5. 'ord' → logprob: -11.376424789428711
    6. ''a' → logprob: -12.126424789428711
    7. ''s' → logprob: -13.001424789428711
    8. '(
' → logprob: -13.251424789428711
    9. ''' → logprob: -13.376424789428711
    10. ' ('' → logprob: -13.626424789428711

Token 61: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0015089125372469425
    2. ''z' → logprob: -6.501508712768555
    3. '{' → logprob: -13.001508712768555
    4. '{'' → logprob: -13.251508712768555
    5. ''' → logprob: -13.626508712768555
    6. 'm' → logprob: -15.376508712768555
    7. '```' → logprob: -15.501508712768555
    8. 'a' → logprob: -15.751508712768555
    9. '`' → logprob: -16.251508712768555
    10. '‘z' → logprob: -16.251508712768555

Token 62: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.08637091517448425
    2. 'a' → logprob: -3.3363709449768066
    3. ')' → logprob: -3.4613709449768066
    4. ')+' → logprob: -4.336370944976807
    5. '")+' → logprob: -6.086370944976807
    6. '```' → logprob: -8.836370468139648
    7. '1' → logprob: -9.586370468139648
    8. 'z' → logprob: -9.961370468139648
    9. '")' → logprob: -10.211370468139648
    10. '+' → logprob: -10.336370468139648

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07009715586900711
    2. ' +' → logprob: -2.6950972080230713
    3. ')+' → logprob: -9.070096969604492
    4. ')' → logprob: -10.195096969604492
    5. '```' → logprob: -12.945096969604492
    6. '   ' → logprob: -13.195096969604492
    7. ' ' → logprob: -13.320096969604492
    8. '()+' → logprob: -13.820096969604492
    9. '1' → logprob: -14.445096969604492
    10. ',' → logprob: -15.695096969604492

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '```' → logprob: -16.00020408630371
    5. '  ' → logprob: -17.87520408630371
    6. '0' → logprob: -18.00020408630371
    7. '7' → logprob: -18.62520408630371
    8. '2' → logprob: -19.12520408630371
    9. '' → logprob: -19.37520408630371
    10. '27' → logprob: -19.87520408630371

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -11.000021934509277
    3. '0' → logprob: -13.000021934509277
    4. '26' → logprob: -13.375021934509277
    5. '```' → logprob: -14.375021934509277
    6. '25' → logprob: -15.375021934509277
    7. '27' → logprob: -15.875021934509277
    8. '7' → logprob: -16.125022888183594
    9. '   ' → logprob: -16.250022888183594
    10. ')' → logprob: -16.375022888183594

Token 66: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.002560792025178671
    2. ')' → logprob: -6.002560615539551
    3. '}' → logprob: -9.50256061553955
    4. '})' → logprob: -12.50256061553955
    5. ' )' → logprob: -13.62756061553955
    6. ')}}' → logprob: -13.75256061553955
    7. '))' → logprob: -14.12756061553955
    8. ');}' → logprob: -14.25256061553955
    9. ')}
' → logprob: -14.37756061553955
    10. '       ' → logprob: -14.62756061553955

Token 67: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7254855632781982
    2. 'def' (adapté à ' def') → logprob: -1.2254855632781982
    3. ' ' → logprob: -2.7254855632781982
    4. ' def' → logprob: -3.6004855632781982
    5. '        
' → logprob: -3.6004855632781982
    6. '
' → logprob: -3.7254855632781982
    7. '<|end|>' → logprob: -3.7254855632781982
    8. ' 
' → logprob: -3.9754855632781982
    9. '        ' → logprob: -5.100485801696777
    10. '   ' → logprob: -5.225485801696777

Token 69: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.08923366665840149
    2. ' add' → logprob: -2.964233636856079
    3. 'append' → logprob: -3.839233636856079
    4. 'get' → logprob: -4.589233875274658
    5. 'insert' → logprob: -6.839233875274658
    6. ' get' → logprob: -8.2142333984375
    7. ' append' → logprob: -8.3392333984375
    8. ' insert' → logprob: -8.9642333984375
    9. 'update' → logprob: -8.9642333984375
    10. '__' → logprob: -9.7142333984375

Token 70: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1933407336473465
    2. '_token' → logprob: -2.19334077835083
    3. '(self' → logprob: -2.94334077835083
    4. '_' → logprob: -5.81834077835083
    5. '_character' → logprob: -5.94334077835083
    6. '_char' → logprob: -6.69334077835083
    7. ' (' → logprob: -6.81834077835083
    8. '(char' → logprob: -6.81834077835083
    9. 'token' → logprob: -7.94334077835083
    10. '_index' → logprob: -8.193340301513672

Token 71: ',' (ID: 11)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.7690231800079346
    2. ',' → logprob: -2.0190231800079346
    3. ')' → logprob: -2.3940231800079346
    4. '(' → logprob: -2.3940231800079346
    5. '(char' → logprob: -2.3940231800079346
    6. 'char' → logprob: -3.1440231800079346
    7. '_token' → logprob: -3.3940231800079346
    8. '_character' → logprob: -4.0190229415893555
    9. ',char' → logprob: -4.6440229415893555
    10. 'token' → logprob: -5.3940229415893555

Token 72: ' ch' (ID: 549)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.5962408781051636
    2. ' c' → logprob: -1.2212408781051636
    3. 'char' → logprob: -2.721240997314453
    4. ' ch' → logprob: -2.971240997314453
    5. 'c' → logprob: -4.596240997314453
    6. ' token' → logprob: -4.596240997314453
    7. 'ch' → logprob: -4.846240997314453
    8. 'token' → logprob: -6.221240997314453
    9. ' letter' → logprob: -6.346240997314453
    10. ' character' → logprob: -6.846240997314453

Token 73: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04221176356077194
    2. '):' → logprob: -3.4172117710113525
    3. ' ,' → logprob: -4.792211532592773
    4. 's' → logprob: -10.292211532592773
    5. 'self' → logprob: -10.417211532592773
    6. ')' → logprob: -10.667211532592773
    7. ' ):' → logprob: -10.667211532592773
    8. '):
' → logprob: -10.792211532592773
    9. ',char' → logprob: -10.792211532592773
    10. ',index' → logprob: -11.542211532592773

Token 74: ' str' (ID: 989)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -1.090996265411377
    2. ',' → logprob: -1.590996265411377
    3. ' ' → logprob: -1.715996265411377
    4. ')' → logprob: -1.840996265411377
    5. ' )' → logprob: -2.965996265411377
    6. ' ch' → logprob: -3.715996265411377
    7. ' c' → logprob: -4.840996265411377
    8. ' str' → logprob: -5.590996265411377
    9. ' int' → logprob: -5.965996265411377
    10. ' token' → logprob: -6.090996265411377

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002188449027016759
    2. ' ,' → logprob: -6.127188682556152
    3. ',index' → logprob: -13.252188682556152
    4. '):' → logprob: -14.877188682556152
    5. ',int' → logprob: -15.252188682556152
    6. '‌,' → logprob: -15.877188682556152
    7. '           ' → logprob: -15.877188682556152
    8. ')' → logprob: -16.252187728881836
    9. ',line' → logprob: -16.377187728881836
    10. '               ' → logprob: -16.502187728881836

Token 76: ' index' (ID: 3472)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.21278749406337738
    2. ' index' → logprob: -1.8377875089645386
    3. ' i' → logprob: -3.837787389755249
    4. 'index' → logprob: -5.212787628173828
    5. ' pos' → logprob: -5.587787628173828
    6. 'idx' → logprob: -6.712787628173828
    7. 'pos' → logprob: -8.212787628173828
    8. 'i' → logprob: -8.587787628173828
    9. ' ' → logprob: -10.087787628173828
    10. ' position' → logprob: -10.962787628173828

Token 77: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027614871505647898
    2. ':' → logprob: -6.627761363983154
    3. '):
' → logprob: -6.877761363983154
    4. ' ):' → logprob: -8.627761840820312
    5. ')' → logprob: -9.002761840820312
    6. '=' → logprob: -10.002761840820312
    7. ',' → logprob: -10.752761840820312
    8. ' ' → logprob: -11.502761840820312
    9. '<|end|>' → logprob: -12.127761840820312
    10. '<|end|>' → logprob: -12.627761840820312

Token 78: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.655938982963562
    2. ' ' → logprob: -1.530938982963562
    3. ')' → logprob: -2.0309391021728516
    4. '1' → logprob: -2.9059391021728516
    5. 'int' → logprob: -3.2809391021728516
    6. ' int' → logprob: -3.2809391021728516
    7. ' ):' → logprob: -7.155939102172852
    8. ''' → logprob: -7.905939102172852
    9. ':int' → logprob: -8.155939102172852
    10. ' ):
' → logprob: -8.405939102172852

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010044663213193417
    2. ')' → logprob: -7.001004695892334
    3. '):
' → logprob: -9.376004219055176
    4. ':' → logprob: -12.001004219055176
    5. ' ):' → logprob: -13.251004219055176
    6. '       ' → logprob: -16.126005172729492
    7. '):
' → logprob: -16.251005172729492
    8. '   ' → logprob: -16.501005172729492
    9. ' ' → logprob: -17.001005172729492
    10. ')：' → logprob: -17.626005172729492

Token 80: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8242689371109009
    2. '           ' → logprob: -0.9492689371109009
    3. '):' → logprob: -2.9492688179016113
    4. '.' → logprob: -3.3242688179016113
    5. '       ' → logprob: -3.3242688179016113
    6. ')' → logprob: -4.199268817901611
    7. ' ' → logprob: -4.699268817901611
    8. '<|end|>' → logprob: -5.074268817901611
    9. '   ' → logprob: -5.449268817901611
    10. '        ' → logprob: -5.824268817901611

Token 81: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10887624323368073
    2. '               ' → logprob: -2.7338762283325195
    3. '.' → logprob: -4.4838762283325195
    4. 'self' (adapté à ' self') → logprob: -4.8588762283325195
    5. ')' → logprob: -4.9838762283325195
    6. ' self' → logprob: -5.6088762283325195
    7. '       ' → logprob: -5.8588762283325195
    8. '[' → logprob: -7.1088762283325195
    9. '<|end|>' → logprob: -7.4838762283325195
    10. '   ' → logprob: -7.6088762283325195

Token 82: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0003202114312443882
    2. '.' → logprob: -8.250320434570312
    3. ' .' → logprob: -10.250320434570312
    4. ')._' → logprob: -11.125320434570312
    5. ']._' → logprob: -12.375320434570312
    6. '_' → logprob: -13.750320434570312
    7. '   ' → logprob: -14.750320434570312
    8. '
' → logprob: -14.750320434570312
    9. ' ' → logprob: -14.875320434570312
    10. '       ' → logprob: -15.125320434570312

Token 83: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0003805064770858735
    2. '_map' → logprob: -7.875380516052246
    3. ' map' → logprob: -15.375380516052246
    4. 'm' → logprob: -16.37537956237793
    5. '	map' → logprob: -17.50037956237793
    6. 'maps' → logprob: -17.62537956237793
    7. '.map' → logprob: -18.50037956237793
    8. 'ma' → logprob: -18.50037956237793
    9. 'ap' → logprob: -18.62537956237793
    10. '_' → logprob: -18.87537956237793

Token 84: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.75000286102295
    3. '```' → logprob: -15.87500286102295
    4. '[cur' → logprob: -17.250003814697266
    5. '[channel' → logprob: -17.625003814697266
    6. '[c' → logprob: -18.250003814697266
    7. ' [' → logprob: -18.750003814697266
    8. '\[' → logprob: -18.750003814697266
    9. '.setdefault' → logprob: -19.000003814697266
    10. '[col' → logprob: -19.250003814697266

Token 85: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009524329798296094
    2. ').' → logprob: -7.500952243804932
    3. ']' → logprob: -8.50095272064209
    4. '.append' → logprob: -8.62595272064209
    5. ' ].' → logprob: -12.12595272064209
    6. '.' → logprob: -12.25095272064209
    7. ']).' → logprob: -13.87595272064209
    8. '[' → logprob: -14.00095272064209
    9. ''].' → logprob: -14.12595272064209
    10. ':].' → logprob: -14.25095272064209

Token 86: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.375
    3. ' append' → logprob: -15.75
    4. '_append' → logprob: -18.875
    5. 'app' → logprob: -19.375
    6. 'appen' → logprob: -19.875
    7. 'Append' → logprob: -20.25
    8. '	append' → logprob: -20.375
    9. '```' → logprob: -22.875
    10. 'add' → logprob: -23.0

Token 87: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.006723771803081036
    2. '(' → logprob: -5.006723880767822
    3. 'index' → logprob: -12.006723403930664
    4. '(
' → logprob: -13.506723403930664
    5. ' (' → logprob: -14.631723403930664
    6. '((' → logprob: -16.131723403930664
    7. '(ind' → logprob: -16.756723403930664
    8. '(

' → logprob: -17.006723403930664
    9. '(indices' → logprob: -17.131723403930664
    10. ',index' → logprob: -17.256723403930664

Token 88: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012654215970542282
    2. ')
' → logprob: -9.000126838684082
    3. ' )' → logprob: -13.500126838684082
    4. '\n' → logprob: -14.500126838684082
    5. '
' → logprob: -15.500126838684082
    6. '\' → logprob: -15.875126838684082
    7. ')

' → logprob: -15.875126838684082
    8. '<|end|>' → logprob: -16.000125885009766
    9. ')return' → logprob: -16.375125885009766
    10. ')\' → logprob: -16.500125885009766

Token 89: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39378821849823
    2. '<|end|>' → logprob: -2.0187883377075195
    3. '
' → logprob: -2.6437883377075195
    4. 'def' (adapté à ' def') → logprob: -3.3937883377075195
    5. '        
' → logprob: -3.5187883377075195
    6. '   ' → logprob: -4.3937883377075195
    7. ' ' → logprob: -4.5187883377075195
    8. '        

' → logprob: -4.7687883377075195
    9. '<|end|>' → logprob: -4.8937883377075195
    10. ' def' → logprob: -5.2687883377075195

Token 91: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.016703875735402107
    2. ' get' → logprob: -4.141704082489014
    3. 'query' → logprob: -8.641703605651855
    4. 'pop' → logprob: -8.766703605651855
    5. 'getitem' → logprob: -10.141703605651855
    6. '__' → logprob: -10.266703605651855
    7. 'count' → logprob: -10.391703605651855
    8. 'find' → logprob: -10.516703605651855
    9. 'has' → logprob: -11.016703605651855
    10. 'def' → logprob: -11.391703605651855

Token 92: '_indices' (ID: 43508)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045513201504945755
    2. '_list' → logprob: -4.045513153076172
    3. 's' → logprob: -4.670513153076172
    4. '_' → logprob: -4.670513153076172
    5. '_indices' → logprob: -6.170513153076172
    6. '(_' → logprob: -6.795513153076172
    7. '(self' → logprob: -6.920513153076172
    8. '_s' → logprob: -7.670513153076172
    9. '_tokens' → logprob: -8.045513153076172
    10. '_values' → logprob: -8.170513153076172

Token 93: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28168097138404846
    2. '(' → logprob: -1.406680941581726
    3. '(
' → logprob: -7.906681060791016
    4. '<|end|>' → logprob: -9.156681060791016
    5. 'self' → logprob: -10.906681060791016
    6. '(s' → logprob: -11.531681060791016
    7. ' (' → logprob: -11.906681060791016
    8. '(

' → logprob: -12.281681060791016
    9. ' ' → logprob: -12.781681060791016
    10. ' self' → logprob: -13.031681060791016

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008028378360904753
    2. ' ,' → logprob: -7.500802993774414
    3. '[' → logprob: -9.375802993774414
    4. ',ch' → logprob: -9.625802993774414
    5. '[ch' → logprob: -9.625802993774414
    6. ')' → logprob: -10.875802993774414
    7. ' ' → logprob: -13.125802993774414
    8. ',[' → logprob: -13.250802993774414
    9. '[
' → logprob: -13.875802993774414
    10. '<|end|>' → logprob: -14.000802993774414

Token 95: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.1797989010810852
    2. 'ch' → logprob: -1.8047988414764404
    3. 'self' → logprob: -10.30479907989502
    4. ' self' → logprob: -11.80479907989502
    5. '	ch' → logprob: -12.17979907989502
    6. '   ' → logprob: -13.17979907989502
    7. '       ' → logprob: -13.17979907989502
    8. ',ch' → logprob: -13.80479907989502
    9. ' ' → logprob: -13.92979907989502
    10. ')' → logprob: -14.80479907989502

Token 96: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007523220032453537
    2. ':' → logprob: -5.632523059844971
    3. ')' → logprob: -5.882523059844971
    4. '):
' → logprob: -7.257523059844971
    5. ' ):' → logprob: -8.132523536682129
    6. ',' → logprob: -9.507523536682129
    7. ' :' → logprob: -11.757523536682129
    8. ' ' → logprob: -11.882523536682129
    9. ']:' → logprob: -12.132523536682129
    10. '   ' → logprob: -12.257523536682129

Token 97: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2519974708557129
    2. 'str' → logprob: -1.501997470855713
    3. ')' → logprob: -9.876996994018555
    4. ':str' → logprob: -11.501996994018555
    5. '[str' → logprob: -13.251996994018555
    6. 'int' → logprob: -13.626996994018555
    7. '(str' → logprob: -13.751996994018555
    8. ' ' → logprob: -14.376996994018555
    9. '   ' → logprob: -14.501996994018555
    10. '	str' → logprob: -14.876996994018555

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12708160281181335
    2. ')' → logprob: -2.1270816326141357
    3. '):
' → logprob: -8.877081871032715
    4. 'self' → logprob: -12.127081871032715
    5. ')->' → logprob: -13.002081871032715
    6. ' ):' → logprob: -13.502081871032715
    7. '       ' → logprob: -13.877081871032715
    8. '   ' → logprob: -14.502081871032715
    9. '):
' → logprob: -14.627081871032715
    10. ',' → logprob: -14.627081871032715

Token 99: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0691319927573204
    2. '           ' → logprob: -3.569132089614868
    3. ':return' → logprob: -4.069131851196289
    4. ':
' → logprob: -4.569131851196289
    5. '[' → logprob: -6.069131851196289
    6. '<|end|>' → logprob: -6.444131851196289
    7. '[]' → logprob: -6.694131851196289
    8. '():' → logprob: -6.819131851196289
    9. '       ' → logprob: -6.944131851196289
    10. 'return' → logprob: -7.319131851196289

Token 100: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4886625409126282
    2. 'return' (adapté à ' return') → logprob: -0.9886625409126282
    3. '           ' → logprob: -4.2386627197265625
    4. '
' → logprob: -10.488662719726562
    5. 'self' → logprob: -11.863662719726562
    6. '	return' → logprob: -12.613662719726562
    7. 'eturn' → logprob: -12.988662719726562
    8. ' 
' → logprob: -13.238662719726562
    9. ' self' → logprob: -13.363662719726562
    10. '               ' → logprob: -13.363662719726562

Token 101: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1269451230764389
    2. 'self' → logprob: -2.1269450187683105
    3. '           ' → logprob: -11.126945495605469
    4. '(self' → logprob: -14.376945495605469
    5. '	self' → logprob: -14.501945495605469
    6. ' ' → logprob: -14.876945495605469
    7. ' ' → logprob: -15.251945495605469
    8. '            ' → logprob: -15.376945495605469
    9. '[self' → logprob: -15.626945495605469
    10. '[]' → logprob: -15.626945495605469

Token 102: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.625001907348633
    3. ' .' → logprob: -14.750001907348633
    4. ']._' → logprob: -16.250001907348633
    5. '       ' → logprob: -16.625001907348633
    6. ')._' → logprob: -17.125001907348633
    7. '[' → logprob: -18.250001907348633
    8. '_' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '.__' → logprob: -18.875001907348633

Token 103: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1875571544806007e-05
    2. '_map' → logprob: -11.625011444091797
    3. 'get' → logprob: -13.625011444091797
    4. '.map' → logprob: -15.250011444091797
    5. 'mapping' → logprob: -15.500011444091797
    6. ' map' → logprob: -15.750011444091797
    7. 'maps' → logprob: -15.875011444091797
    8. 'mp' → logprob: -16.125011444091797
    9. 'user' → logprob: -16.375011444091797
    10. 'm' → logprob: -16.375011444091797

Token 104: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -3.7146746763028204e-05
    2. '.get' → logprob: -10.25003719329834
    3. '```' → logprob: -14.87503719329834
    4. 'get' → logprob: -15.00003719329834
    5. '       ' → logprob: -15.37503719329834
    6. '[' → logprob: -15.87503719329834
    7. '<|end|>' → logprob: -16.000036239624023
    8. '.setdefault' → logprob: -16.500036239624023
    9. '   ' → logprob: -16.500036239624023

Token 105: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.23917081207037e-05
    2. ' ]' → logprob: -10.625041961669922
    3. ']
' → logprob: -12.000041961669922
    4. ')' → logprob: -12.000041961669922
    5. '}' → logprob: -13.375041961669922
    6. '']' → logprob: -13.625041961669922
    7. '       ' → logprob: -14.250041961669922
    8. ']

' → logprob: -14.750041961669922
    9. ']()' → logprob: -14.875041961669922
    10. '<|end|>' → logprob: -15.000041961669922

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5917246341705322
    2. '   ' → logprob: -1.2167246341705322
    3. '<|end|>' → logprob: -2.9667246341705322
    4. '    
' → logprob: -3.2167246341705322
    5. ' 
' → logprob: -4.091724395751953
    6. '\n' → logprob: -4.341724395751953
    7. 'n' → logprob: -5.216724395751953
    8. ' ' → logprob: -5.341724395751953
    9. 'newline' → logprob: -5.591724395751953
    10. '       ' → logprob: -5.966724395751953

Token 108: ' Fen' (ID: 48230)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.9978252649307251
    2. ' State' → logprob: -2.2478251457214355
    3. ' Fen' → logprob: -2.6228251457214355
    4. ' Node' → logprob: -2.8728251457214355
    5. ' Solution' → logprob: -2.8728251457214355
    6. ' Trie' → logprob: -3.1228251457214355
    7. ' Query' → logprob: -3.2478251457214355
    8. ' DP' → logprob: -3.3728251457214355
    9. ' Warp' → logprob: -3.9978251457214355
    10. ' Solver' → logprob: -4.2478251457214355

Token 109: 'wick' (ID: 14105)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.9428170919418335
    2. 'wick' → logprob: -1.6928170919418335
    3. 't' → logprob: -1.9428170919418335
    4. 'ick' → logprob: -2.817817211151123
    5. '   ' → logprob: -3.067817211151123
    6. 'Segment' → logprob: -3.567817211151123
    7. 'icky' → logprob: -3.692817211151123
    8. 'e' → logprob: -3.817817211151123
    9. 'icks' → logprob: -4.317817211151123
    10. 'al' → logprob: -4.317817211151123

Token 110: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0004690418136306107
    2. '(Tree' → logprob: -8.000469207763672
    3. ' Tree' → logprob: -9.250469207763672
    4. '(T' → logprob: -11.500469207763672
    5. '	Tree' → logprob: -11.500469207763672
    6. '_T' → logprob: -12.375469207763672
    7. ' tree' → logprob: -12.625469207763672
    8. '<Tree' → logprob: -12.875469207763672
    9. '```' → logprob: -13.125469207763672
    10. '   ' → logprob: -14.000469207763672

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009882692247629166
    2. '<|end|>' → logprob: -8.250988006591797
    3. ' :' → logprob: -8.375988006591797
    4. '):' → logprob: -8.875988006591797
    5. '(' → logprob: -9.000988006591797
    6. '():' → logprob: -9.375988006591797
    7. ':
' → logprob: -9.750988006591797
    8. '(object' → logprob: -10.375988006591797
    9. '   ' → logprob: -11.125988006591797
    10. '>:' → logprob: -11.625988006591797

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3440896272659302
    2. ':' → logprob: -1.3440896272659302
    3. '   ' → logprob: -4.094089508056641
    4. '(' → logprob: -5.219089508056641
    5. ':
' → logprob: -5.719089508056641
    6. '(n' → logprob: -6.094089508056641
    7. '    ' → logprob: -7.344089508056641
    8. '```' → logprob: -7.469089508056641
    9. '<|end|>' → logprob: -7.969089508056641
    10. '    
' → logprob: -8.09408950805664

Token 113: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.30708804726600647
    2. 'def' (adapté à ' def') → logprob: -1.682088017463684
    3. '       ' → logprob: -3.0570881366729736
    4. '   ' → logprob: -4.0570878982543945
    5. ' 
' → logprob: -5.5570878982543945
    6. ' ' → logprob: -5.9320878982543945
    7. '    ' → logprob: -6.1820878982543945
    8. '    
' → logprob: -6.3070878982543945
    9. '        ' → logprob: -6.6820878982543945
    10. '        
' → logprob: -6.8070878982543945

Token 114: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.041642941534519196
    2. '__' → logprob: -3.916642904281616
    3. 'init' → logprob: -3.916642904281616
    4. ' init' → logprob: -7.291643142700195
    5. '_init' → logprob: -8.166643142700195
    6. 'int' → logprob: -13.541643142700195
    7. ' ' → logprob: -13.666643142700195
    8. '__(' → logprob: -13.791643142700195
    9. '____' → logprob: -14.541643142700195
    10. '```' → logprob: -14.666643142700195

Token 115: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0004541486850939691
    2. '_init' → logprob: -8.00045394897461
    3. '__' → logprob: -9.37545394897461
    4. '(init' → logprob: -10.62545394897461
    5. ' init' → logprob: -12.37545394897461
    6. 'int' → logprob: -13.00045394897461
    7. '   ' → logprob: -14.00045394897461
    8. ' __' → logprob: -14.25045394897461
    9. '```' → logprob: -14.87545394897461
    10. 'ini' → logprob: -15.12545394897461

Token 116: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00415378762409091
    2. '__(' → logprob: -5.754153728485107
    3. ' (' → logprob: -7.254153728485107
    4. '(' → logprob: -8.754154205322266
    5. '_(' → logprob: -9.629154205322266
    6. '   ' → logprob: -11.629154205322266
    7. '__' → logprob: -11.879154205322266
    8. 'self' → logprob: -12.129154205322266
    9. '       ' → logprob: -12.254154205322266
    10. '```' → logprob: -12.379154205322266

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -16.75020408630371
    4. 'size' → logprob: -17.75020408630371
    5. '(self' → logprob: -18.37520408630371
    6. ',' → logprob: -19.00020408630371
    7. '   ' → logprob: -19.25020408630371
    8. '           ' → logprob: -19.25020408630371
    9. '	self' → logprob: -19.62520408630371
    10. '0' → logprob: -20.37520408630371

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.472211968386546e-05
    2. ' ,' → logprob: -9.375094413757324
    3. 'self' → logprob: -12.000094413757324
    4. ',n' → logprob: -13.375094413757324
    5. ',size' → logprob: -13.625094413757324
    6. 'size' → logprob: -15.625094413757324
    7. '(size' → logprob: -16.00009536743164
    8. ',self' → logprob: -16.37509536743164
    9. '(n' → logprob: -16.62509536743164
    10. ' (' → logprob: -16.62509536743164

Token 119: ' size' (ID: 2349)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2202179431915283
    2. ' size' → logprob: -1.2202179431915283
    3. 'n' → logprob: -1.5952179431915283
    4. 'size' → logprob: -1.7202179431915283
    5. 'self' → logprob: -3.7202179431915283
    6. ' self' → logprob: -5.720217704772949
    7. '       ' → logprob: -8.34521770477295
    8. '   ' → logprob: -11.22021770477295
    9. 'capacity' → logprob: -12.47021770477295
    10. ' sz' → logprob: -12.84521770477295

Token 120: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1880587339401245
    2. '):
' → logprob: -1.8130587339401245
    3. ',' → logprob: -5.688058853149414
    4. '(self' → logprob: -5.688058853149414
    5. ':' → logprob: -7.188058853149414
    6. 'self' → logprob: -7.813058853149414
    7. '):
' → logprob: -9.813058853149414
    8. '       ' → logprob: -9.938058853149414
    9. '```' → logprob: -10.188058853149414
    10. '_self' → logprob: -10.438058853149414

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20143917202949524
    2. ' int' → logprob: -1.7014391422271729
    3. '(int' → logprob: -12.201438903808594
    4. 'size' → logprob: -12.451438903808594
    5. ' size' → logprob: -12.701438903808594
    6. ')' → logprob: -12.826438903808594
    7. '<|end|>' → logprob: -12.951438903808594
    8. ':int' → logprob: -13.076438903808594
    9. ' ' → logprob: -13.076438903808594
    10. '<int' → logprob: -13.576438903808594

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006757409777492285
    2. '):
' → logprob: -5.0067572593688965
    3. ')' → logprob: -10.381757736206055
    4. '):
' → logprob: -12.381757736206055
    5. ':' → logprob: -12.631757736206055
    6. ' ):' → logprob: -13.131757736206055
    7. ',' → logprob: -14.381757736206055
    8. '   ' → logprob: -14.756757736206055
    9. '       ' → logprob: -15.256757736206055
    10. '**' → logprob: -15.881757736206055

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033314721658825874
    2. '\n' → logprob: -6.628331661224365
    3. '            
' → logprob: -7.503331661224365
    4. '```' → logprob: -7.753331661224365
    5. '\' → logprob: -8.378331184387207
    6. '       ' → logprob: -9.378331184387207
    7. '        
' → logprob: -9.503331184387207
    8. ' 
' → logprob: -9.628331184387207
    9. ':' → logprob: -9.753331184387207
    10. '    
' → logprob: -9.878331184387207

Token 124: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17344637215137482
    2. 'self' (adapté à ' self') → logprob: -2.1734464168548584
    3. '           ' → logprob: -3.2984464168548584
    4. ' ' → logprob: -5.923446178436279
    5. '        ' → logprob: -6.048446178436279
    6. '       ' → logprob: -6.298446178436279
    7. '0' → logprob: -7.423446178436279
    8. '	self' → logprob: -8.173446655273438
    9. '	       ' → logprob: -8.798446655273438
    10. '   ' → logprob: -9.048446655273438

Token 125: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.2608832120895386
    2. '._' → logprob: -1.5108832120895386
    3. '.' → logprob: -5.635883331298828
    4. '.tree' → logprob: -5.760883331298828
    5. ' .' → logprob: -7.010883331298828
    6. '.data' → logprob: -7.760883331298828
    7. '_size' → logprob: -8.260883331298828
    8. 'size' → logprob: -8.510883331298828
    9. ' =' → logprob: -8.760883331298828
    10. '.bit' → logprob: -9.760883331298828

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008239250630140305
    2. '=' → logprob: -4.883239269256592
    3. ' ' → logprob: -7.383239269256592
    4. ' +=' → logprob: -12.133238792419434
    5. '    ' → logprob: -13.508238792419434
    6. '   ' → logprob: -14.258238792419434
    7. '  ' → logprob: -14.258238792419434
    8. ')' → logprob: -14.258238792419434
    9. '=int' → logprob: -14.508238792419434
    10. '+' → logprob: -15.133238792419434

Token 127: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.06197485327720642
    2. 'size' → logprob: -2.8119747638702393
    3. '[size' → logprob: -12.31197452545166
    4. '(size' → logprob: -13.18697452545166
    5. '=size' → logprob: -15.06197452545166
    6. '	size' → logprob: -15.81197452545166
    7. ' ' → logprob: -16.061975479125977
    8. '0' → logprob: -16.311975479125977
    9. '<size' → logprob: -16.311975479125977
    10. '[' → logprob: -16.811975479125977

Token 128: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6479059457778931
    2. '
' → logprob: -0.8979059457778931
    3. '       ' → logprob: -2.7729058265686035
    4. '        ' → logprob: -5.6479058265686035
    5. 'self' → logprob: -6.8979058265686035
    6. '        
' → logprob: -7.8979058265686035
    7. '   ' → logprob: -8.022906303405762
    8. ' self' → logprob: -8.022906303405762
    9. '    
' → logprob: -8.022906303405762
    10. ',' → logprob: -8.772906303405762

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01346183568239212
    2. '       ' → logprob: -4.388462066650391
    3. '
' → logprob: -7.388462066650391
    4. 'self' → logprob: -9.26346206665039
    5. '   ' → logprob: -9.88846206665039
    6. ',' → logprob: -9.88846206665039
    7. '        ' → logprob: -10.51346206665039
    8. '	       ' → logprob: -10.63846206665039
    9. ' self' → logprob: -10.88846206665039
    10. '               ' → logprob: -11.01346206665039

Token 130: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005446366500109434
    2. ' self' → logprob: -5.255446434020996
    3. '           ' → logprob: -8.505446434020996
    4. '       ' → logprob: -11.755446434020996
    5. '   ' → logprob: -13.255446434020996
    6. '	self' → logprob: -15.005446434020996
    7. 'tree' → logprob: -15.755446434020996
    8. '[self' → logprob: -16.88044548034668
    9. '(self' → logprob: -17.25544548034668
    10. '               ' → logprob: -17.50544548034668

Token 131: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.28521832823753357
    2. '._' → logprob: -1.535218358039856
    3. '.data' → logprob: -3.6602182388305664
    4. '.' → logprob: -5.410218238830566
    5. ' .' → logprob: -6.535218238830566
    6. '.f' → logprob: -7.410218238830566
    7. '.bit' → logprob: -8.285218238830566
    8. '_tree' → logprob: -9.285218238830566
    9. '   ' → logprob: -11.285218238830566
    10. '.bits' → logprob: -11.535218238830566

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511059641838074
    2. '=' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.262511253356934
    4. '[' → logprob: -14.887511253356934
    5. '   ' → logprob: -16.262510299682617
    6. ' =[' → logprob: -16.387510299682617
    7. ')' → logprob: -17.137510299682617
    8. '	' → logprob: -17.637510299682617
    9. ':' → logprob: -17.637510299682617
    10. '```' → logprob: -17.762510299682617

Token 133: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12692810595035553
    2. '[' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.126928329467773
    4. ' ' → logprob: -18.251928329467773
    5. '[int' → logprob: -18.626928329467773
    6. '   ' → logprob: -19.626928329467773
    7. '[n' → logprob: -19.626928329467773
    8. '0' → logprob: -19.751928329467773
    9. '[len' → logprob: -20.126928329467773
    10. '[p' → logprob: -20.126928329467773

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -18.125019073486328
    4. '00' → logprob: -20.375019073486328
    5. '   ' → logprob: -20.437519073486328
    6. '٠' → logprob: -20.625019073486328
    7. '000' → logprob: -20.812519073486328
    8. '০' → logprob: -21.000019073486328
    9. 'None' → logprob: -21.062519073486328
    10. '०' → logprob: -21.187519073486328

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.191489642835222e-05
    2. ']*(' → logprob: -10.125041961669922
    3. ']*' → logprob: -13.500041961669922
    4. ' ]' → logprob: -15.000041961669922
    5. ')' → logprob: -17.625041961669922
    6. ',' → logprob: -18.500041961669922
    7. ']+' → logprob: -18.750041961669922
    8. '}' → logprob: -19.000041961669922
    9. '   ' → logprob: -19.125041961669922
    10. ' ' → logprob: -19.625041961669922

Token 136: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17363908886909485
    2. ' *' → logprob: -2.1736390590667725
    3. '*' → logprob: -3.1736390590667725
    4. ']*(' → logprob: -5.923639297485352
    5. '*(' → logprob: -7.298639297485352
    6. ')' → logprob: -8.673639297485352
    7. ']*' → logprob: -8.673639297485352
    8. ',' → logprob: -10.548639297485352
    9. ' ' → logprob: -11.423639297485352
    10. ' for' → logprob: -11.423639297485352

Token 137: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.05147705227136612
    2. ' (' → logprob: -3.0514769554138184
    3. '(s' → logprob: -6.426476955413818
    4. '(sz' → logprob: -7.176476955413818
    5. '(self' → logprob: -8.676477432250977
    6. '(' → logprob: -10.051477432250977
    7. '(n' → logprob: -10.301477432250977
    8. '(length' → logprob: -10.551477432250977
    9. '(name' → logprob: -10.676477432250977
    10. '(sl' → logprob: -11.051477432250977

Token 138: 'size' (ID: 4461)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0011899876408278942
    2. 'size' → logprob: -7.126190185546875
    3. ' (' → logprob: -8.001190185546875
    4. ' size' → logprob: -10.251190185546875
    5. '[size' → logprob: -11.626190185546875
    6. '(self' → logprob: -12.251190185546875
    7. '<size' → logprob: -14.751190185546875
    8. 'self' → logprob: -15.501190185546875
    9. ',size' → logprob: -15.501190185546875
    10. '   ' → logprob: -15.751190185546875

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141343772411346
    2. ' +' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.451414108276367
    4. ' +
' → logprob: -16.951414108276367
    5. '+
' → logprob: -17.326414108276367
    6. ' plus' → logprob: -17.326414108276367
    7. '＋' → logprob: -18.826414108276367
    8. '   ' → logprob: -19.326414108276367
    9. '()+' → logprob: -19.701414108276367
    10. '[' → logprob: -19.701414108276367

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '2' → logprob: -15.002185821533203
    4. '   ' → logprob: -17.002185821533203
    5. '```' → logprob: -17.002185821533203
    6. '7' → logprob: -18.689685821533203
    7. '  ' → logprob: -18.689685821533203
    8. '
' → logprob: -19.002185821533203
    9. '１' → logprob: -19.939685821533203
    10. '۱' → logprob: -20.127185821533203

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -18.125001907348633
    4. '```' → logprob: -18.437501907348633
    5. '۱' → logprob: -19.250001907348633
    6. '7' → logprob: -19.437501907348633
    7. '   ' → logprob: -19.500001907348633
    8. '{' → logprob: -19.625001907348633
    9. '
' → logprob: -19.625001907348633
    10. '１' → logprob: -19.687501907348633

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ')
' → logprob: -11.250018119812012
    3. ' )' → logprob: -12.375018119812012
    4. '}' → logprob: -15.000018119812012
    5. '<|end|>' → logprob: -15.500018119812012
    6. '),' → logprob: -16.625019073486328
    7. ')

' → logprob: -16.875019073486328
    8. '   ' → logprob: -17.125019073486328
    9. '```' → logprob: -17.500019073486328
    10. ']' → logprob: -17.750019073486328

Token 143: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004845192190259695
    2. '    
' → logprob: -6.379845142364502
    3. '<|end|>' → logprob: -7.004845142364502
    4. ' 
' → logprob: -7.254845142364502
    5. '        
' → logprob: -7.629845142364502
    6. '   ' → logprob: -8.37984561920166
    7. '       ' → logprob: -8.37984561920166
    8. '
' → logprob: -8.50484561920166
    9. '

' → logprob: -8.75484561920166
    10. '  
' → logprob: -9.75484561920166

Token 144: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03422139585018158
    2. ' def' → logprob: -3.7842214107513428
    3. '   ' → logprob: -4.534221172332764
    4. '
' → logprob: -8.659221649169922
    5. '	def' → logprob: -12.284221649169922
    6. '    
' → logprob: -13.659221649169922
    7. '       ' → logprob: -14.534221649169922
    8. ' ' → logprob: -15.409221649169922
    9. ' 
' → logprob: -15.784221649169922
    10. '  ' → logprob: -15.784221649169922

Token 145: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.17237068712711334
    2. 'update' → logprob: -1.9223706722259521
    3. '_update' → logprob: -4.422370910644531
    4. ' add' → logprob: -10.297370910644531
    5. 'add' → logprob: -10.922370910644531
    6. '_add' → logprob: -12.422370910644531
    7. ' _' → logprob: -13.047370910644531
    8. ' query' → logprob: -13.297370910644531
    9. '.update' → logprob: -13.422370910644531
    10. 'query' → logprob: -14.047370910644531

Token 146: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11404727399349213
    2. '(' → logprob: -2.2390472888946533
    3. '<|end|>' → logprob: -7.114047050476074
    4. ' (' → logprob: -8.239047050476074
    5. '(index' → logprob: -9.989047050476074
    6. '(i' → logprob: -10.364047050476074
    7. '(
' → logprob: -10.489047050476074
    8. '(idx' → logprob: -11.114047050476074
    9. '<|end|>' → logprob: -12.239047050476074
    10. 'self' → logprob: -12.864047050476074

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32223084568977356
    2. ' ,' → logprob: -1.3222308158874512
    3. '<|end|>' → logprob: -5.072230815887451
    4. ')' → logprob: -6.697230815887451
    5. ',index' → logprob: -7.697230815887451
    6. ' ' → logprob: -8.57223129272461
    7. '<|end|>' → logprob: -8.69723129272461
    8. '(index' → logprob: -8.82223129272461
    9. ' (' → logprob: -9.19723129272461
    10. '(self' → logprob: -10.07223129272461

Token 148: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.5114400386810303
    2. ' i' → logprob: -1.7614400386810303
    3. ' idx' → logprob: -1.7614400386810303
    4. 'index' → logprob: -3.0114400386810303
    5. 'i' → logprob: -5.261440277099609
    6. 'idx' → logprob: -6.136440277099609
    7. ' ' → logprob: -9.63644027709961
    8. ' self' → logprob: -10.13644027709961
    9. ')' → logprob: -10.13644027709961
    10. ' pos' → logprob: -10.38644027709961

Token 149: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -8.875143051147461
    3. ':' → logprob: -14.250143051147461
    4. ',int' → logprob: -14.375143051147461
    5. '```' → logprob: -14.500143051147461
    6. ',value' → logprob: -15.625143051147461
    7. ',
' → logprob: -16.00014305114746
    8. '<|end|>' → logprob: -16.00014305114746
    9. ':int' → logprob: -16.37514305114746
    10. '1' → logprob: -16.37514305114746

Token 150: ' int' (ID: 677)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0962327718734741
    2. ' ' → logprob: -1.2212327718734741
    3. ' index' → logprob: -1.5962327718734741
    4. '1' → logprob: -2.0962328910827637
    5. ',' → logprob: -3.7212328910827637
    6. '<|end|>' → logprob: -4.346232891082764
    7. ')' → logprob: -5.471232891082764
    8. ' ,' → logprob: -6.596232891082764
    9. '+' → logprob: -7.596232891082764
    10. ',index' → logprob: -8.096232414245605

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',value' → logprob: -14.250046730041504
    4. ',int' → logprob: -16.500045776367188
    5. ',
' → logprob: -16.875045776367188
    6. ',val' → logprob: -17.375045776367188
    7. '           ' → logprob: -18.125045776367188
    8. '```' → logprob: -19.125045776367188
    9. ':' → logprob: -19.375045776367188
    10. '‌,' → logprob: -19.500045776367188

Token 152: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5677939653396606
    2. ' delta' → logprob: -1.5677939653396606
    3. 'value' → logprob: -1.5677939653396606
    4. 'delta' → logprob: -4.442793846130371
    5. ' val' → logprob: -5.567793846130371
    6. 'val' → logprob: -7.817793846130371
    7. ' ' → logprob: -8.442793846130371
    8. '1' → logprob: -11.692793846130371
    9. ' amount' → logprob: -13.442793846130371
    10. '   ' → logprob: -13.692793846130371

Token 153: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1892959028482437
    2. ':' → logprob: -1.8142958879470825
    3. ' ):' → logprob: -5.189295768737793
    4. '):
' → logprob: -5.564295768737793
    5. ':int' → logprob: -10.189295768737793
    6. ' :' → logprob: -11.064295768737793
    7. ' ):
' → logprob: -11.314295768737793
    8. ',' → logprob: -11.564295768737793
    9. ' ' → logprob: -13.064295768737793
    10. ']:' → logprob: -13.064295768737793

Token 154: ' int' (ID: 677)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.19867296516895294
    2. '):' → logprob: -2.3236730098724365
    3. ' ):
' → logprob: -2.8236730098724365
    4. ' ' → logprob: -4.698672771453857
    5. '):
' → logprob: -5.073672771453857
    6. ' )' → logprob: -5.323672771453857
    7. ' value' → logprob: -6.698672771453857
    8. ')' → logprob: -7.698672771453857
    9. ' int' → logprob: -7.823672771453857
    10. 'value' → logprob: -8.698673248291016

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0062932646833360195
    2. '):
' → logprob: -5.131293296813965
    3. ' ):' → logprob: -8.131293296813965
    4. ':' → logprob: -9.756293296813965
    5. ',' → logprob: -12.131293296813965
    6. '):
' → logprob: -12.756293296813965
    7. ')' → logprob: -13.256293296813965
    8. ' ):
' → logprob: -13.381293296813965
    9. '=' → logprob: -15.881293296813965
    10. '       ' → logprob: -16.00629234313965

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06806589663028717
    2. ':' → logprob: -4.693066120147705
    3. '):
' → logprob: -4.693066120147705
    4. '        ' → logprob: -4.943066120147705
    5. ',' → logprob: -5.068066120147705
    6. ' 
' → logprob: -5.318066120147705
    7. '):' → logprob: -5.443066120147705
    8. ')' → logprob: -5.693066120147705
    9. '
' → logprob: -5.818066120147705
    10. '            ' → logprob: -5.818066120147705

Token 157: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07756680995225906
    2. '               ' → logprob: -3.0775668621063232
    3. ' while' → logprob: -3.7025668621063232
    4. 'while' (adapté à ' while') → logprob: -6.202566623687744
    5. '```' → logprob: -7.327566623687744
    6. '            ' → logprob: -7.452566623687744
    7. '
' → logprob: -8.952567100524902
    8. ' i' → logprob: -8.952567100524902
    9. ' 
' → logprob: -9.327567100524902
    10. ' ' → logprob: -9.452567100524902

Token 158: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.20141392946243286
    2. 'index' → logprob: -1.701413869857788
    3. '(index' → logprob: -14.576414108276367
    4. '	index' → logprob: -16.826414108276367
    5. '#index' → logprob: -17.826414108276367
    6. '[index' → logprob: -17.951414108276367
    7. '   ' → logprob: -18.076414108276367
    8. '_index' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.201414108276367
    10. '=index' → logprob: -19.201414108276367

Token 159: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0052717034704983234
    2. '<=' → logprob: -5.255271911621094
    3. ' <' → logprob: -10.255271911621094
    4. ' <<=' → logprob: -13.755271911621094
    5. ' +=' → logprob: -14.505271911621094
    6. '<' → logprob: -14.630271911621094
    7. '```' → logprob: -15.505271911621094
    8. ' ≤' → logprob: -15.630271911621094
    9. '   ' → logprob: -16.130271911621094
    10. ' ' → logprob: -16.630271911621094

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '           ' → logprob: -16.375431060791016
    4. '(self' → logprob: -17.500431060791016
    5. '```' → logprob: -18.250431060791016
    6. 'size' → logprob: -18.375431060791016
    7. '[self' → logprob: -18.500431060791016
    8. '
' → logprob: -18.875431060791016
    9. '=self' → logprob: -19.000431060791016
    10. '       ' → logprob: -19.250431060791016

Token 161: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.5764850974082947
    2. 'size' → logprob: -0.8264850974082947
    3. ' size' → logprob: -7.5764851570129395
    4. 'self' → logprob: -10.451484680175781
    5. '	size' → logprob: -13.451484680175781
    6. '       ' → logprob: -14.576484680175781
    7. '.' → logprob: -14.826484680175781
    8. '<size' → logprob: -14.951484680175781
    9. ':size' → logprob: -15.076484680175781
    10. '_size' → logprob: -15.201484680175781

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17990098893642426
    2. ':
' → logprob: -1.8049010038375854
    3. '):
' → logprob: -9.679901123046875
    4. ' and' → logprob: -10.179901123046875
    5. '           ' → logprob: -11.304901123046875
    6. ':

' → logprob: -11.804901123046875
    7. ':
' → logprob: -11.929901123046875
    8. '               ' → logprob: -12.054901123046875
    9. '<|end|>' → logprob: -12.179901123046875
    10. '):' → logprob: -12.429901123046875

Token 163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002356617944315076
    2. '           ' → logprob: -7.00235652923584
    3. 'self' → logprob: -7.50235652923584
    4. '
' → logprob: -7.75235652923584
    5. '```' → logprob: -8.50235652923584
    6. ' self' → logprob: -9.12735652923584
    7. '    
' → logprob: -10.50235652923584
    8. '+' → logprob: -11.12735652923584
    9. '``' → logprob: -11.37735652923584
    10. '   ' → logprob: -11.50235652923584

Token 164: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5921086072921753
    2. 'self' (adapté à ' self') → logprob: -1.3421086072921753
    3. '               ' → logprob: -1.7171086072921753
    4. '           ' → logprob: -5.342108726501465
    5. '(self' → logprob: -6.967108726501465
    6. '```' → logprob: -9.467108726501465
    7. ' (' → logprob: -9.842108726501465
    8. '   ' → logprob: -10.592108726501465
    9. '[self' → logprob: -10.842108726501465
    10. '	self' → logprob: -10.967108726501465

Token 165: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0019310165662318468
    2. '.' → logprob: -6.501931190490723
    3. ' .' → logprob: -7.876931190490723
    4. '	tree' → logprob: -11.376931190490723
    5. 'tree' → logprob: -11.751931190490723
    6. '`.' → logprob: -11.751931190490723
    7. '```' → logprob: -12.626931190490723
    8. '           ' → logprob: -13.001931190490723
    9. '       ' → logprob: -13.001931190490723
    10. '.thread' → logprob: -13.376931190490723

Token 166: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -6.153795766294934e-06
    2. 'index' → logprob: -12.500005722045898
    3. '[' → logprob: -13.375005722045898
    4. '```' → logprob: -15.125005722045898
    5. '[Index' → logprob: -15.750005722045898
    6. ' index' → logprob: -16.1250057220459
    7. ' [' → logprob: -16.6250057220459
    8. '               ' → logprob: -17.3750057220459
    9. '[int' → logprob: -17.5000057220459
    10. '                   ' → logprob: -17.7500057220459

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01475462131202221
    2. '=' → logprob: -5.264754772186279
    3. ']+=' → logprob: -5.639754772186279
    4. ' +=' → logprob: -5.889754772186279
    5. ' =' → logprob: -6.264754772186279
    6. '+=' → logprob: -6.889754772186279
    7. ']=' → logprob: -9.389754295349121
    8. ' ]' → logprob: -9.639754295349121
    9. ')' → logprob: -10.264754295349121
    10. '+' → logprob: -10.889754295349121

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48487716913223267
    2. ' =' → logprob: -0.9848771691322327
    3. '+=' → logprob: -5.109877109527588
    4. ' +=' → logprob: -5.359877109527588
    5. '+' → logprob: -13.859877586364746
    6. '%=' → logprob: -14.109877586364746
    7. '=(' → logprob: -14.234877586364746
    8. ']+=' → logprob: -14.984877586364746
    9. ' =(' → logprob: -15.609877586364746
    10. ' ' → logprob: -15.609877586364746

Token 169: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20159003138542175
    2. ' (' → logprob: -1.7015900611877441
    3. '(' → logprob: -9.576589584350586
    4. '(value' → logprob: -9.951589584350586
    5. '(max' → logprob: -10.326589584350586
    6. '(val' → logprob: -11.701589584350586
    7. '(s' → logprob: -13.326589584350586
    8. '(this' → logprob: -13.576589584350586
    9. '(state' → logprob: -13.826589584350586
    10. '(x' → logprob: -14.076589584350586

Token 170: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009224193054251373
    2. ' self' → logprob: -7.000922203063965
    3. '(self' → logprob: -11.500922203063965
    4. '               ' → logprob: -14.125922203063965
    5. '[self' → logprob: -17.87592315673828
    6. '                   ' → logprob: -18.00092315673828
    7. '           ' → logprob: -18.25092315673828
    8. ' (' → logprob: -18.25092315673828
    9. '```' → logprob: -18.50092315673828
    10. '	self' → logprob: -19.75092315673828

Token 171: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00010640407708706334
    2. '.' → logprob: -9.500106811523438
    3. '	tree' → logprob: -11.125106811523438
    4. ' .' → logprob: -11.875106811523438
    5. 'tree' → logprob: -12.125106811523438
    6. '._' → logprob: -13.500106811523438
    7. '(tree' → logprob: -14.375106811523438
    8. '[' → logprob: -14.875106811523438
    9. '```' → logprob: -15.125106811523438
    10. '.t' → logprob: -15.250106811523438

Token 172: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -9.13388703338569e-06
    2. 'index' → logprob: -11.750009536743164
    3. '```' → logprob: -14.625009536743164
    4. '[' → logprob: -15.500009536743164
    5. '#index' → logprob: -16.000009536743164
    6. ',index' → logprob: -16.375009536743164
    7. '[Index' → logprob: -16.500009536743164
    8. ')[' → logprob: -16.750009536743164
    9. ')' → logprob: -17.500009536743164
    10. ' index' → logprob: -17.625009536743164

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013072698377072811
    2. '+' → logprob: -5.138072490692139
    3. ' +' → logprob: -5.138072490692139
    4. ']+' → logprob: -6.763072490692139
    5. ' ]' → logprob: -9.388072967529297
    6. 'index' → logprob: -12.138072967529297
    7. '```' → logprob: -13.763072967529297
    8. ']+=' → logprob: -15.013072967529297
    9. ')' → logprob: -15.138072967529297
    10. ' ' → logprob: -15.138072967529297

Token 174: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25192973017692566
    2. '+' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.12692928314209
    4. ' plus' → logprob: -15.75192928314209
    5. '+self' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.376930236816406
    7. '+[' → logprob: -17.501930236816406
    8. '+x' → logprob: -17.751930236816406
    9. '+
' → logprob: -17.876930236816406
    10. '+a' → logprob: -18.001930236816406

Token 175: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.16022422909736633
    2. ' value' → logprob: -1.910224199295044
    3. ')value' → logprob: -17.66022491455078
    4. '(value' → logprob: -18.16022491455078
    5. '               ' → logprob: -18.41022491455078
    6. '"value' → logprob: -19.53522491455078
    7. '                   ' → logprob: -19.78522491455078
    8. '                ' → logprob: -20.16022491455078
    9. '$value' → logprob: -20.16022491455078
    10. ''value' → logprob: -20.28522491455078

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')%' → logprob: -10.500028610229492
    3. ' )' → logprob: -13.500028610229492
    4. ')
' → logprob: -18.125028610229492
    5. '   ' → logprob: -18.375028610229492
    6. '       ' → logprob: -18.625028610229492
    7. '           ' → logprob: -19.125028610229492
    8. ')>>' → logprob: -19.875028610229492
    9. ')&' → logprob: -20.250028610229492
    10. '*' → logprob: -20.375028610229492

Token 177: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3464905619621277
    2. '<|end|>' → logprob: -1.9714906215667725
    3. '
' → logprob: -2.9714906215667725
    4. '               ' → logprob: -3.5964906215667725
    5. '           ' → logprob: -3.8464906215667725
    6. 'index' → logprob: -4.596490383148193
    7. ' %' → logprob: -4.721490383148193
    8. ')' → logprob: -4.971490383148193
    9. '       ' → logprob: -5.221490383148193
    10. '<|end|>' → logprob: -5.346490383148193

Token 178: ' Warp' (ID: 197006)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.133201465010643
    2. ' self' → logprob: -2.1332013607025146
    3. 'Warp' → logprob: -5.133201599121094
    4. ' Warp' → logprob: -8.133201599121094
    5. '(self' → logprob: -10.008201599121094
    6. 'Self' → logprob: -12.008201599121094
    7. '	self' → logprob: -13.008201599121094
    8. '
' → logprob: -13.133201599121094
    9. ' ' → logprob: -13.383201599121094
    10. '   ' → logprob: -13.633201599121094

Token 179: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -1.1472419600977446e-06
    2. '_machine' → logprob: -14.500000953674316
    3. 'achine' → logprob: -15.750000953674316
    4. ' Machine' → logprob: -16.000001907348633
    5. 'machine' → logprob: -16.125001907348633
    6. 'Mach' → logprob: -16.250001907348633
    7. '```' → logprob: -17.500001907348633
    8. '_MACHINE' → logprob: -17.500001907348633
    9. '
' → logprob: -18.250001907348633
    10. '`' → logprob: -18.750001907348633

Token 180: 'Routing' (ID: 38834)
  Prédit: 'Routing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Routing' → logprob: -2.236549335066229e-05
    2. '.routing' → logprob: -11.125021934509277
    3. 'routing' → logprob: -13.250021934509277
    4. ' routing' → logprob: -13.375021934509277
    5. 'Warp' → logprob: -13.625021934509277
    6. 'Machine' → logprob: -13.625021934509277
    7. ' Routing' → logprob: -14.375021934509277
    8. '.' → logprob: -14.625021934509277
    9. 'Router' → logprob: -14.750021934509277
    10. '-routing' → logprob: -15.750021934509277

Token 181: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -1.2352385965641588e-05
    2. '.MODE' → logprob: -11.875012397766113
    3. 'MOD' → logprob: -13.125012397766113
    4. ' .' → logprob: -13.500012397766113
    5. '.M' → logprob: -13.750012397766113
    6. '.' → logprob: -14.750012397766113
    7. '.Mod' → logprob: -15.375012397766113
    8. '_MOD' → logprob: -16.250011444091797
    9. '.MULT' → logprob: -17.125011444091797
    10. '.MON' → logprob: -17.250011444091797

Token 182: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030697984038852155
    2. '           ' → logprob: -8.375307083129883
    3. 'index' → logprob: -9.750307083129883
    4. '                   ' → logprob: -12.875307083129883
    5. '       ' → logprob: -13.000307083129883
    6. '   ' → logprob: -13.125307083129883
    7. '#index' → logprob: -13.375307083129883
    8. ',' → logprob: -13.500307083129883
    9. '              ' → logprob: -13.625307083129883
    10. ' index' → logprob: -13.750307083129883

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.9888433093437925e-05
    2. '           ' → logprob: -10.375040054321289
    3. '                   ' → logprob: -13.125040054321289
    4. '   ' → logprob: -13.250040054321289
    5. 'index' → logprob: -13.375040054321289
    6. '       ' → logprob: -13.625040054321289
    7. '```' → logprob: -13.750040054321289
    8. '	           ' → logprob: -15.250040054321289
    9. '              ' → logprob: -15.375040054321289
    10. '                
' → logprob: -16.12504005432129

Token 184: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.04979622736573219
    2. ' index' → logprob: -3.0497963428497314
    3. '               ' → logprob: -6.799796104431152
    4. '           ' → logprob: -9.299796104431152
    5. '   ' → logprob: -13.174796104431152
    6. '	index' → logprob: -15.674796104431152
    7. '                   ' → logprob: -15.674796104431152
    8. '       ' → logprob: -16.29979705810547
    9. '#index' → logprob: -16.54979705810547
    10. ',index' → logprob: -16.67479705810547

Token 185: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47444525361061096
    2. ' +=' → logprob: -0.9744452238082886
    3. ' <<=' → logprob: -8.099445343017578
    4. '=' → logprob: -10.974445343017578
    5. ']+=' → logprob: -11.224445343017578
    6. '|' → logprob: -11.974445343017578
    7. '*=' → logprob: -11.974445343017578
    8. '```' → logprob: -12.224445343017578
    9. ' *=' → logprob: -12.349445343017578
    10. '    ' → logprob: -12.724445343017578

Token 186: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.014172795228660107
    2. ' index' → logprob: -4.2641730308532715
    3. '(index' → logprob: -11.764172554016113
    4. '   ' → logprob: -14.264172554016113
    5. ' ' → logprob: -14.889172554016113
    6. '	index' → logprob: -15.389172554016113
    7. ' (' → logprob: -16.26417350769043
    8. '  ' → logprob: -16.51417350769043
    9. '#index' → logprob: -17.01417350769043
    10. '(' → logprob: -17.13917350769043

Token 187: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.055315058678388596
    2. '&' → logprob: -2.9303150177001953
    3. '&t' → logprob: -8.305315017700195
    4. '&id' → logprob: -9.555315017700195
    5. '&i' → logprob: -10.180315017700195
    6. '&r' → logprob: -11.055315017700195
    7. '&p' → logprob: -12.055315017700195
    8. '&s' → logprob: -12.180315017700195
    9. '&type' → logprob: -12.180315017700195
    10. '&q' → logprob: -12.305315017700195

Token 188: ' (-' (ID: 21382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49542236328125
    2. '-index' → logprob: -0.99542236328125
    3. '-' → logprob: -3.99542236328125
    4. ' index' → logprob: -6.24542236328125
    5. 'index' → logprob: -7.62042236328125
    6. '(-' → logprob: -8.87042236328125
    7. ' (-' → logprob: -9.24542236328125
    8. '-in' → logprob: -10.62042236328125
    9. '_index' → logprob: -12.49542236328125
    10. '-i' → logprob: -12.74542236328125

Token 189: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.676292231422849e-05
    2. ' index' → logprob: -11.000017166137695
    3. '_index' → logprob: -20.875017166137695
    4. '   ' → logprob: -21.000017166137695
    5. '(index' → logprob: -21.500017166137695
    6. '	index' → logprob: -21.875017166137695
    7. ' ' → logprob: -22.000017166137695
    8. '#index' → logprob: -22.250017166137695
    9. 'Index' → logprob: -22.875017166137695
    10. '[index' → logprob: -23.500017166137695

Token 190: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12718825042247772
    2. 'index' → logprob: -2.127188205718994
    3. ' index' → logprob: -8.502188682556152
    4. '1' → logprob: -11.002188682556152
    5. '_index' → logprob: -11.502188682556152
    6. ')
' → logprob: -11.877188682556152
    7. ' )' → logprob: -12.502188682556152
    8. '))' → logprob: -12.627188682556152
    9. 'Index' → logprob: -13.002188682556152
    10. '#index' → logprob: -13.127188682556152

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04088945686817169
    2. '
' → logprob: -4.165889263153076
    3. '        
' → logprob: -4.290889263153076
    4. '   ' → logprob: -5.790889263153076
    5. '    
' → logprob: -5.790889263153076
    6. '<|end|>' → logprob: -6.415889263153076
    7. ' 
' → logprob: -6.540889263153076
    8. '```' → logprob: -7.165889263153076
    9. '  
' → logprob: -7.915889263153076
    10. 'def' → logprob: -8.540889739990234

Token 192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6549826264381409
    2. '       ' → logprob: -0.9049826264381409
    3. ' def' → logprob: -2.654982566833496
    4. '   ' → logprob: -5.529982566833496
    5. '        
' → logprob: -6.779982566833496
    6. '```' → logprob: -8.404982566833496
    7. ' ' → logprob: -9.154982566833496
    8. '    
' → logprob: -9.279982566833496
    9. '
' → logprob: -9.279982566833496
    10. ' 
' → logprob: -10.404982566833496

Token 193: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.023500990122556686
    2. ' query' → logprob: -3.773500919342041
    3. 'sum' → logprob: -8.6485013961792
    4. 'prefix' → logprob: -10.1485013961792
    5. '_query' → logprob: -10.2735013961792
    6. ' sum' → logprob: -12.3985013961792
    7. ' prefix' → logprob: -13.2735013961792
    8. 'get' → logprob: -16.023500442504883
    9. '	query' → logprob: -16.273500442504883
    10. '.query' → logprob: -16.398500442504883

Token 194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.625003814697266
    3. 'self' → logprob: -14.250003814697266
    4. ' (' → logprob: -16.250003814697266
    5. '       ' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '<|end|>' → logprob: -18.125003814697266
    9. '(Self' → logprob: -18.250003814697266
    10. 'def' → logprob: -18.625003814697266

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010960446670651436
    2. '(self' → logprob: -5.260960578918457
    3. ' ,' → logprob: -5.260960578918457
    4. 'self' → logprob: -9.010960578918457
    5. ')' → logprob: -9.260960578918457
    6. '<|end|>' → logprob: -9.260960578918457
    7. ',self' → logprob: -9.885960578918457
    8. ' (' → logprob: -10.010960578918457
    9. 'index' → logprob: -10.510960578918457
    10. ',index' → logprob: -10.760960578918457

Token 196: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.072405606508255
    2. ' index' → logprob: -2.6974055767059326
    3. 'self' → logprob: -6.072405815124512
    4. ' self' → logprob: -9.447405815124512
    5. 'int' → logprob: -9.697405815124512
    6. ' ' → logprob: -12.072405815124512
    7. ')' → logprob: -12.197405815124512
    8. '_index' → logprob: -13.072405815124512
    9. 'size' → logprob: -13.822405815124512
    10. ',' → logprob: -13.822405815124512

Token 197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14103005826473236
    2. '):' → logprob: -2.1410300731658936
    3. ':int' → logprob: -4.3910298347473145
    4. '):
' → logprob: -6.6410298347473145
    5. ' :' → logprob: -8.891030311584473
    6. ' ):' → logprob: -9.641030311584473
    7. '   ' → logprob: -10.516030311584473
    8. ')' → logprob: -10.516030311584473
    9. 'int' → logprob: -10.641030311584473
    10. '       ' → logprob: -11.891030311584473

Token 198: ' int' (ID: 677)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2685104012489319
    2. ' index' → logprob: -1.518510341644287
    3. 'int' → logprob: -4.143510341644287
    4. ' int' → logprob: -7.893510341644287
    5. ')' → logprob: -9.393510818481445
    6. '(index' → logprob: -9.893510818481445
    7. '<|end|>' → logprob: -10.518510818481445
    8. '[index' → logprob: -10.893510818481445
    9. ' ' → logprob: -11.518510818481445
    10. '=index' → logprob: -13.143510818481445

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055124979466199875
    2. '):
' → logprob: -2.9301249980926514
    3. ':' → logprob: -8.68012523651123
    4. '):
' → logprob: -10.18012523651123
    5. ')' → logprob: -10.80512523651123
    6. ':int' → logprob: -12.43012523651123
    7. ' ):' → logprob: -12.80512523651123
    8. '       ' → logprob: -13.05512523651123
    9. '   ' → logprob: -13.55512523651123
    10. '):

' → logprob: -13.68012523651123

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25262129306793213
    2. '0' → logprob: -1.5026212930679321
    3. ' ' → logprob: -7.752621173858643
    4. '       ' → logprob: -9.5026216506958
    5. '	       ' → logprob: -9.8776216506958
    6. '   ' → logprob: -10.5026216506958
    7. 'result' → logprob: -10.6276216506958
    8. 'int' → logprob: -10.7526216506958
    9. '               ' → logprob: -10.7526216506958
    10. ' ' → logprob: -11.7526216506958

Token 201: ' s' (ID: 265)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.32008716464042664
    2. ' res' → logprob: -1.570087194442749
    3. 'result' → logprob: -2.820087194442749
    4. '           ' → logprob: -5.82008695602417
    5. 'res' → logprob: -6.19508695602417
    6. ' sum' → logprob: -7.69508695602417
    7. ' total' → logprob: -7.82008695602417
    8. 'sum' → logprob: -8.820087432861328
    9. '0' → logprob: -9.320087432861328
    10. ' ans' → logprob: -9.695087432861328

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10050878673791885
    2. '=' → logprob: -2.350508689880371
    3. 'um' → logprob: -8.850508689880371
    4. '       ' → logprob: -9.475508689880371
    5. '   ' → logprob: -10.225508689880371
    6. 'elf' → logprob: -11.350508689880371
    7. ' ' → logprob: -11.350508689880371
    8. '           ' → logprob: -11.475508689880371
    9. '    ' → logprob: -13.100508689880371
    10. '	' → logprob: -13.350508689880371

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '   ' → logprob: -18.139163970947266
    4. '           ' → logprob: -18.139163970947266
    5. '۰' → logprob: -19.139163970947266
    6. 'self' → logprob: -19.764163970947266
    7. ' ' → logprob: -20.389163970947266
    8. '       ' → logprob: -20.389163970947266
    9. '=' → logprob: -20.889163970947266
    10. '  ' → logprob: -21.139163970947266

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -17.375123977661133
    4. '   ' → logprob: -18.437623977661133
    5. '```' → logprob: -18.437623977661133
    6. '(' → logprob: -19.250123977661133
    7. 'self' → logprob: -19.500123977661133
    8. '  ' → logprob: -20.312623977661133
    9. '  ' → logprob: -20.312623977661133
    10. '=' → logprob: -20.437623977661133

Token 205: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003000696888193488
    2. '
' → logprob: -9.125300407409668
    3. 'while' → logprob: -9.375300407409668
    4. '       ' → logprob: -10.375300407409668
    5. '<|end|>' → logprob: -10.625300407409668
    6. ' while' → logprob: -11.000300407409668
    7. '               ' → logprob: -12.125300407409668
    8. '          ' → logprob: -12.125300407409668
    9. '   ' → logprob: -12.375300407409668
    10. '            
' → logprob: -12.500300407409668

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009550517424941063
    2. 'while' → logprob: -7.750955104827881
    3. ' while' → logprob: -8.625954627990723
    4. '
' → logprob: -8.875954627990723
    5. '       ' → logprob: -9.000954627990723
    6. '<|end|>' → logprob: -10.250954627990723
    7. '   ' → logprob: -11.375954627990723
    8. '               ' → logprob: -11.750954627990723
    9. '<|end|>' → logprob: -12.750954627990723
    10. '          ' → logprob: -12.750954627990723

Token 207: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1275751143693924
    2. ' while' → logprob: -2.377575159072876
    3. 'while' (adapté à ' while') → logprob: -3.627575159072876
    4. '       ' → logprob: -8.502574920654297
    5. '   ' → logprob: -10.252574920654297
    6. ' 
' → logprob: -10.627574920654297
    7. 'index' → logprob: -10.752574920654297
    8. 'While' → logprob: -10.752574920654297
    9. ' index' → logprob: -10.877574920654297
    10. '
' → logprob: -11.002574920654297

Token 208: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.38687121868133545
    2. ' index' → logprob: -1.1368712186813354
    3. '(index' → logprob: -15.761871337890625
    4. '	index' → logprob: -18.261871337890625
    5. '   ' → logprob: -18.511871337890625
    6. ' ' → logprob: -19.011871337890625
    7. '           ' → logprob: -19.261871337890625
    8. 'Index' → logprob: -19.261871337890625
    9. '#index' → logprob: -19.386871337890625
    10. '[index' → logprob: -19.386871337890625

Token 209: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0019301822176203132
    2. ' >' → logprob: -6.251930236816406
    3. '>=' → logprob: -13.626930236816406
    4. ' ' → logprob: -16.001930236816406
    5. '>
' → logprob: -16.876930236816406
    6. '&gt' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.126930236816406
    8. ' >=' → logprob: -17.501930236816406
    9. '>s' → logprob: -18.001930236816406
    10. ':' → logprob: -18.501930236816406

Token 210: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. '=' → logprob: -15.001326560974121
    4. 'index' → logprob: -15.751326560974121
    5. '           ' → logprob: -17.126325607299805
    6. '<|end|>' → logprob: -17.376325607299805
    7. ' index' → logprob: -17.876325607299805
    8. '>' → logprob: -18.376325607299805
    9. ')' → logprob: -18.751325607299805
    10. '   ' → logprob: -19.376325607299805

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -20.000019073486328
    4. '<|end|>' → logprob: -20.625019073486328
    5. '۰' → logprob: -21.250019073486328
    6. '   ' → logprob: -21.375019073486328
    7. 'index' → logprob: -21.375019073486328
    8. '           ' → logprob: -21.875019073486328
    9. '[' → logprob: -22.500019073486328
    10. '  ' → logprob: -22.750019073486328

Token 212: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6227633953094482
    2. '               ' → logprob: -0.8727633953094482
    3. ':' → logprob: -3.1227633953094482
    4. '           ' → logprob: -7.122763633728027
    5. ',' → logprob: -7.997763633728027
    6. '<|end|>' → logprob: -8.622763633728027
    7. '):
' → logprob: -8.997763633728027
    8. ' s' → logprob: -9.747763633728027
    9. '<|end|>' → logprob: -10.247763633728027
    10. 's' → logprob: -10.372763633728027

Token 213: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010956883197650313
    2. 's' → logprob: -7.126095771789551
    3. ' s' → logprob: -8.25109577178955
    4. '           ' → logprob: -11.25109577178955
    5. '   ' → logprob: -12.37609577178955
    6. ',' → logprob: -13.25109577178955
    7. '<|end|>' → logprob: -13.25109577178955
    8. '
' → logprob: -13.37609577178955
    9. '	           ' → logprob: -13.37609577178955
    10. '                   ' → logprob: -13.75109577178955

Token 214: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5035637021064758
    2. ' s' → logprob: -1.503563642501831
    3. '               ' → logprob: -1.753563642501831
    4. '           ' → logprob: -9.25356388092041
    5. '   ' → logprob: -11.00356388092041
    6. '                   ' → logprob: -12.25356388092041
    7. '```' → logprob: -12.37856388092041
    8. '              ' → logprob: -12.50356388092041
    9. ' ' → logprob: -13.00356388092041
    10. '                ' → logprob: -13.25356388092041

Token 215: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2951755225658417
    2. '+=' → logprob: -1.545175552368164
    3. ' =' → logprob: -3.795175552368164
    4. '=' → logprob: -3.920175552368164
    5. ' ' → logprob: -12.670175552368164
    6. '   ' → logprob: -13.170175552368164
    7. '```' → logprob: -14.295175552368164
    8. '+' → logprob: -14.420175552368164
    9. '+=(' → logprob: -14.670175552368164
    10. ' ^=' → logprob: -15.045175552368164

Token 216: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3266074061393738
    2. '(s' → logprob: -1.3266074657440186
    3. '(self' → logprob: -4.3266072273254395
    4. '(S' → logprob: -10.576607704162598
    5. '               ' → logprob: -11.326607704162598
    6. '(' → logprob: -13.201607704162598
    7. '(t' → logprob: -13.826607704162598
    8. '           ' → logprob: -14.201607704162598
    9. ' ' → logprob: -14.576607704162598
    10. '                   ' → logprob: -14.826607704162598

Token 217: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006311862962320447
    2. ' s' → logprob: -7.375631332397461
    3. 'self' → logprob: -12.375631332397461
    4. '               ' → logprob: -16.25063133239746
    5. '           ' → logprob: -16.37563133239746
    6. ')s' → logprob: -16.50063133239746
    7. '(s' → logprob: -16.50063133239746
    8. ' self' → logprob: -17.25063133239746
    9. ')' → logprob: -17.37563133239746
    10. '`s' → logprob: -18.25063133239746

Token 218: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16027691960334778
    2. '+' → logprob: -1.9102768898010254
    3. '+s' → logprob: -10.035277366638184
    4. 's' → logprob: -12.035277366638184
    5. '+self' → logprob: -13.785277366638184
    6. ' ' → logprob: -14.285277366638184
    7. ' +
' → logprob: -14.910277366638184
    8. ' s' → logprob: -15.035277366638184
    9. '+
' → logprob: -15.160277366638184
    10. ' ' → logprob: -15.160277366638184

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018101456225849688
    2. ' self' → logprob: -8.625181198120117
    3. '(self' → logprob: -14.500181198120117
    4. '[self' → logprob: -14.750181198120117
    5. '           ' → logprob: -14.875181198120117
    6. '=self' → logprob: -16.625181198120117
    7. '               ' → logprob: -17.250181198120117
    8. '	self' → logprob: -17.875181198120117
    9. '```' → logprob: -18.750181198120117
    10. '*self' → logprob: -18.875181198120117

Token 220: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.50000286102295
    3. ' .' → logprob: -14.75000286102295
    4. 'tree' → logprob: -14.87500286102295
    5. '	tree' → logprob: -15.62500286102295
    6. '.table' → logprob: -16.750001907348633
    7. '.t' → logprob: -18.125001907348633
    8. '```' → logprob: -18.500001907348633
    9. '​.' → logprob: -18.500001907348633
    10. '.Tree' → logprob: -18.750001907348633

Token 221: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: 0.0
    2. 'index' → logprob: -17.0
    3. '```' → logprob: -18.625
    4. '[' → logprob: -19.125
    5. '[ind' → logprob: -21.25
    6. '[in' → logprob: -21.75
    7. '[
' → logprob: -21.875
    8. '[Index' → logprob: -22.0
    9. ',index' → logprob: -22.125
    10. '
' → logprob: -22.125

Token 222: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1004989743232727
    2. ')' → logprob: -2.350498914718628
    3. ']' → logprob: -9.225499153137207
    4. ' )' → logprob: -9.475499153137207
    5. ' ])' → logprob: -10.225499153137207
    6. '       ' → logprob: -11.100499153137207
    7. ')]' → logprob: -11.225499153137207
    8. ')])' → logprob: -11.600499153137207
    9. '           ' → logprob: -12.100499153137207
    10. '[' → logprob: -12.100499153137207

Token 223: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37708327174186707
    2. '<|end|>' → logprob: -1.6270833015441895
    3. ')' → logprob: -3.0020833015441895
    4. '           ' → logprob: -3.5020833015441895
    5. '<|end|>' → logprob: -3.8770833015441895
    6. ' ' → logprob: -5.2520833015441895
    7. '               ' → logprob: -5.6270833015441895
    8. '       ' → logprob: -6.1270833015441895
    9. ' 
' → logprob: -6.7520833015441895
    10. '```' → logprob: -7.1270833015441895

Token 224: ' Warp' (ID: 197006)
  Prédit: 'Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Warp' → logprob: -0.023248739540576935
    2. ' Warp' → logprob: -3.7732486724853516
    3. 'self' → logprob: -13.023248672485352
    4. ' self' → logprob: -15.148248672485352
    5. 'warp' → logprob: -15.148248672485352
    6. 'War' → logprob: -15.273248672485352
    7. ' warp' → logprob: -15.398248672485352
    8. '           ' → logprob: -16.89824867248535
    9. '       ' → logprob: -17.64824867248535
    10. '
' → logprob: -17.77324867248535

Token 225: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -2.2200749754119897e-06
    2. '_machine' → logprob: -14.000001907348633
    3. '_MACHINE' → logprob: -14.750001907348633
    4. ' Machine' → logprob: -15.250001907348633
    5. 'achine' → logprob: -15.750001907348633
    6. 'Mach' → logprob: -15.875001907348633
    7. '
' → logprob: -16.250001907348633
    8. '=' → logprob: -16.375001907348633
    9. '_M' → logprob: -16.750001907348633
    10. '﻿' → logprob: -17.125001907348633

Token 226: 'Routing' (ID: 38834)
  Prédit: 'Routing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Routing' → logprob: -0.009084968827664852
    2. 'Machine' → logprob: -4.884085178375244
    3. 'Tree' → logprob: -6.759085178375244
    4. 'routing' → logprob: -8.884084701538086
    5. ' routing' → logprob: -10.009084701538086
    6. '   ' → logprob: -10.509084701538086
    7. '
' → logprob: -10.634084701538086
    8. '.routing' → logprob: -11.259084701538086
    9. ')' → logprob: -11.509084701538086
    10. '-routing' → logprob: -11.634084701538086

Token 227: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -2.8802491215174086e-05
    2. 'MOD' → logprob: -10.625028610229492
    3. '_MOD' → logprob: -13.375028610229492
    4. ' .' → logprob: -13.375028610229492
    5. '.MODE' → logprob: -14.250028610229492
    6. '.' → logprob: -15.125028610229492
    7. '.Mod' → logprob: -15.625028610229492
    8. '   ' → logprob: -17.000028610229492
    9. ' MOD' → logprob: -17.375028610229492
    10. '.mod' → logprob: -17.500028610229492

Token 228: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.771655115589965e-05
    2. '           ' → logprob: -11.500018119812012
    3. 'index' → logprob: -12.500018119812012
    4. '       ' → logprob: -14.250018119812012
    5. '                   ' → logprob: -14.250018119812012
    6. '	           ' → logprob: -14.500018119812012
    7. '   ' → logprob: -14.750018119812012
    8. '              ' → logprob: -14.875018119812012
    9. '			' → logprob: -15.250018119812012
    10. ' index' → logprob: -15.375018119812012

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2233183042553719e-05
    2. 'index' → logprob: -12.500012397766113
    3. '           ' → logprob: -12.625012397766113
    4. '                   ' → logprob: -13.750012397766113
    5. '   ' → logprob: -14.125012397766113
    6. 'return' → logprob: -14.250012397766113
    7. '	           ' → logprob: -14.500012397766113
    8. '			' → logprob: -14.750012397766113
    9. '       ' → logprob: -15.000012397766113
    10. '
' → logprob: -15.125012397766113

Token 230: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.16025316715240479
    2. ' index' → logprob: -1.9102531671524048
    3. '               ' → logprob: -10.535253524780273
    4. '           ' → logprob: -13.535253524780273
    5. '                   ' → logprob: -14.535253524780273
    6. '   ' → logprob: -15.660253524780273
    7. '(index' → logprob: -16.285253524780273
    8. '	index' → logprob: -16.285253524780273
    9. ',index' → logprob: -16.410253524780273
    10. '
' → logprob: -16.535253524780273

Token 231: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2595602571964264
    2. ' -=' → logprob: -1.509560227394104
    3. '-' → logprob: -5.0095601081848145
    4. '>' → logprob: -7.0095601081848145
    5. '=' → logprob: -11.259560585021973
    6. ' >' → logprob: -12.134560585021973
    7. ' -' → logprob: -13.259560585021973
    8. '   ' → logprob: -14.134560585021973
    9. '->' → logprob: -14.384560585021973
    10. '>-' → logprob: -14.509560585021973

Token 232: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.31326553225517273
    2. ' index' → logprob: -1.3132655620574951
    3. '(index' → logprob: -12.688265800476074
    4. '	index' → logprob: -15.188265800476074
    5. ' ' → logprob: -16.063264846801758
    6. '   ' → logprob: -16.188264846801758
    7. ' (' → logprob: -16.813264846801758
    8. '#index' → logprob: -17.563264846801758
    9. '1' → logprob: -17.813264846801758
    10. '=index' → logprob: -17.938264846801758

Token 233: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2737075686454773
    2. ' &' → logprob: -2.023707628250122
    3. 'index' → logprob: -2.273707628250122
    4. ' index' → logprob: -5.523707389831543
    5. '(index' → logprob: -9.398707389831543
    6. '[index' → logprob: -9.523707389831543
    7. '&id' → logprob: -10.148707389831543
    8. '=index' → logprob: -10.148707389831543
    9. '&t' → logprob: -10.398707389831543
    10. '&amp' → logprob: -10.773707389831543

Token 234: ' (-' (ID: 21382)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.41367772221565247
    2. ' index' → logprob: -1.78867769241333
    3. '(-' → logprob: -1.91367769241333
    4. ' (-' → logprob: -4.16367769241333
    5. '(index' → logprob: -4.78867769241333
    6. ' (' → logprob: -9.038678169250488
    7. '-' → logprob: -10.538678169250488
    8. ' ' → logprob: -11.413678169250488
    9. ' -' → logprob: -11.413678169250488
    10. '-index' → logprob: -11.663678169250488

Token 235: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -3.643152740551159e-05
    2. ' index' → logprob: -10.250036239624023
    3. '(index' → logprob: -14.000036239624023
    4. ')' → logprob: -15.750036239624023
    5. '	index' → logprob: -17.375036239624023
    6. '
' → logprob: -17.625036239624023
    7. '_index' → logprob: -18.000036239624023
    8. '-index' → logprob: -18.250036239624023
    9. '#index' → logprob: -18.375036239624023
    10. '[index' → logprob: -18.750036239624023

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008153468370437622
    2. ')
' → logprob: -7.500815391540527
    3. 'index' → logprob: -9.250815391540527
    4. '1' → logprob: -9.625815391540527
    5. '       ' → logprob: -10.875815391540527
    6. '           ' → logprob: -10.875815391540527
    7. ')

' → logprob: -11.250815391540527
    8. '<|end|>' → logprob: -11.750815391540527
    9. '               ' → logprob: -11.875815391540527
    10. ' index' → logprob: -12.125815391540527

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0327516570687294
    2. '
' → logprob: -3.6577515602111816
    3. 'return' → logprob: -6.032751560211182
    4. '       ' → logprob: -6.282751560211182
    5. ' return' → logprob: -7.282751560211182
    6. '		' → logprob: -7.782751560211182
    7. '    
' → logprob: -8.03275203704834
    8. '	return' → logprob: -8.53275203704834
    9. '   ' → logprob: -9.03275203704834
    10. '
' → logprob: -9.65775203704834

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.43140706419944763
    2. '           ' → logprob: -1.68140709400177
    3. '       ' → logprob: -1.93140709400177
    4. ' return' → logprob: -4.0564069747924805
    5. '	return' → logprob: -6.5564069747924805
    6. '   ' → logprob: -7.6814069747924805
    7. '		' → logprob: -9.80640697479248
    8. '	' → logprob: -10.55640697479248
    9. '               ' → logprob: -11.30640697479248
    10. 'eturn' → logprob: -11.43140697479248

Token 239: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.663042068481445
    4. '(s' → logprob: -18.663042068481445
    5. '	s' → logprob: -18.788042068481445
    6. ' ' → logprob: -18.913042068481445
    7. '{s' → logprob: -18.913042068481445
    8. '`s' → logprob: -19.163042068481445
    9. '"s' → logprob: -19.913042068481445
    10. '<s' → logprob: -20.038042068481445

Token 240: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012422176077961922
    2. '   ' → logprob: -5.13742208480835
    3. '       ' → logprob: -6.26242208480835
    4. '

' → logprob: -6.51242208480835
    5. '    
' → logprob: -6.63742208480835
    6. '<|end|>' → logprob: -6.76242208480835
    7. '        
' → logprob: -8.512422561645508
    8. 'def' → logprob: -8.887422561645508
    9. '```' → logprob: -9.512422561645508
    10. '<|end|>' → logprob: -10.012422561645508

Token 242: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10520864278078079
    2. '   ' → logprob: -2.3552086353302
    3. '
' → logprob: -5.480208873748779
    4. '       ' → logprob: -7.605208873748779
    5. ' def' → logprob: -8.355208396911621
    6. '	def' → logprob: -10.105208396911621
    7. '    
' → logprob: -10.480208396911621
    8. '        
' → logprob: -11.605208396911621
    9. '

' → logprob: -12.230208396911621
    10. '```' → logprob: -13.105208396911621

Token 243: ' range' (ID: 3352)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.30667197704315186
    2. ' build' → logprob: -1.8066719770431519
    3. 'query' → logprob: -2.8066720962524414
    4. ' range' → logprob: -4.181672096252441
    5. 'range' → logprob: -4.556672096252441
    6. ' reset' → logprob: -5.181672096252441
    7. 'build' → logprob: -5.181672096252441
    8. 'reset' → logprob: -6.556672096252441
    9. ' update' → logprob: -7.431672096252441
    10. 'update' → logprob: -8.306672096252441

Token 244: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.023729072883725166
    2. '_sum' → logprob: -3.773729085922241
    3. '_update' → logprob: -7.773728847503662
    4. '_' → logprob: -10.02372932434082
    5. '_add' → logprob: -11.89872932434082
    6. 'sum' → logprob: -12.02372932434082
    7. '_queries' → logprob: -13.52372932434082
    8. 'query' → logprob: -14.64872932434082
    9. '_q' → logprob: -14.89872932434082
    10. '_Query' → logprob: -15.02372932434082

Token 245: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036089823115617037
    2. '(' → logprob: -5.6286091804504395
    3. ' (' → logprob: -11.878608703613281
    4. '(
' → logprob: -13.878608703613281
    5. '(s' → logprob: -14.503608703613281
    6. '(Self' → logprob: -15.753608703613281
    7. '(sel' → logprob: -16.50360870361328
    8. '(start' → logprob: -16.62860870361328
    9. '<|end|>' → logprob: -16.62860870361328
    10. 'self' → logprob: -16.75360870361328

Token 246: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005406403914093971
    2. '(' → logprob: -5.255406379699707
    3. ')(' → logprob: -9.755406379699707
    4. ')' → logprob: -10.255406379699707
    5. ' (' → logprob: -10.630406379699707
    6. ',' → logprob: -11.130406379699707
    7. 'self' → logprob: -11.630406379699707
    8. '(start' → logprob: -11.880406379699707
    9. '<|end|>' → logprob: -11.880406379699707
    10. '(
' → logprob: -12.005406379699707

Token 247: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5536046028137207
    2. 'left' → logprob: -1.6786046028137207
    3. ' self' → logprob: -1.8036046028137207
    4. 'self' → logprob: -2.9286046028137207
    5. ' l' → logprob: -4.428604602813721
    6. ' start' → logprob: -5.678604602813721
    7. 'start' → logprob: -5.928604602813721
    8. 'l' → logprob: -6.178604602813721
    9. ' lef' → logprob: -9.678604125976562
    10. ')' → logprob: -9.928604125976562

Token 248: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014537633978761733
    2. ' ,' → logprob: -8.875144958496094
    3. ',int' → logprob: -13.000144958496094
    4. ',
' → logprob: -13.875144958496094
    5. ':' → logprob: -14.125144958496094
    6. ':int' → logprob: -14.250144958496094
    7. ',index' → logprob: -15.000144958496094
    8. '<|end|>' → logprob: -15.625144958496094
    9. ',end' → logprob: -16.500144958496094
    10. '_,' → logprob: -17.125144958496094

Token 249: ' int' (ID: 677)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5553238987922668
    2. 'right' → logprob: -1.055323839187622
    3. 'index' → logprob: -3.055323839187622
    4. 'int' → logprob: -4.430324077606201
    5. ' index' → logprob: -4.930324077606201
    6. ',' → logprob: -5.180324077606201
    7. '1' → logprob: -5.930324077606201
    8. ',right' → logprob: -6.680324077606201
    9. ' int' → logprob: -7.180324077606201
    10. ' ' → logprob: -7.555324077606201

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -16.375003814697266
    4. ',int' → logprob: -16.750003814697266
    5. ',index' → logprob: -18.625003814697266
    6. '‌,' → logprob: -19.375003814697266
    7. ',right' → logprob: -19.750003814697266
    8. ',

' → logprob: -20.250003814697266
    9. ',end' → logprob: -20.250003814697266
    10. '<|end|>' → logprob: -20.375003814697266

Token 251: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.251930296421051
    2. ' right' → logprob: -1.5019302368164062
    3. '	right' → logprob: -14.376930236816406
    4. '   ' → logprob: -15.501930236816406
    5. ',right' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '[right' → logprob: -16.876930236816406
    8. 'Right' → logprob: -16.876930236816406
    9. ')' → logprob: -18.001930236816406
    10. '    ' → logprob: -18.251930236816406

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015276946127414703
    2. '):' → logprob: -4.265276908874512
    3. ':int' → logprob: -7.265276908874512
    4. ',' → logprob: -8.765276908874512
    5. '):
' → logprob: -8.890276908874512
    6. ' :' → logprob: -9.265276908874512
    7. ')' → logprob: -11.515276908874512
    8. ' ):' → logprob: -12.265276908874512
    9. '   ' → logprob: -13.265276908874512
    10. '```' → logprob: -13.765276908874512

Token 253: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06197149679064751
    2. ' int' → logprob: -2.811971426010132
    3. ')' → logprob: -12.936971664428711
    4. ' ' → logprob: -14.811971664428711
    5. '(int' → logprob: -15.311971664428711
    6. ':int' → logprob: -15.686971664428711
    7. '   ' → logprob: -15.811971664428711
    8. '	int' → logprob: -15.811971664428711
    9. ',int' → logprob: -16.18697166442871
    10. '=int' → logprob: -16.31197166442871

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04326225072145462
    2. '):
' → logprob: -3.168262243270874
    3. ')' → logprob: -9.043262481689453
    4. ':' → logprob: -9.293262481689453
    5. '):
' → logprob: -10.668262481689453
    6. ' ):' → logprob: -10.668262481689453
    7. '):

' → logprob: -13.418262481689453
    8. '       ' → logprob: -13.793262481689453
    9. ' ):
' → logprob: -13.918262481689453
    10. '   ' → logprob: -14.168262481689453

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1461934596300125
    2. ' return' → logprob: -2.146193504333496
    3. 'return' → logprob: -4.021193504333496
    4. ' if' → logprob: -7.271193504333496
    5. '               ' → logprob: -8.646193504333496
    6. '       ' → logprob: -9.271193504333496
    7. 'if' → logprob: -10.396193504333496
    8. '	       ' → logprob: -10.521193504333496
    9. '		' → logprob: -10.771193504333496
    10. ' 
' → logprob: -10.896193504333496

Token 256: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014716687612235546
    2. ' return' → logprob: -4.264716625213623
    3. '           ' → logprob: -7.514716625213623
    4. '               ' → logprob: -12.514717102050781
    5. '
' → logprob: -12.889717102050781
    6. '	return' → logprob: -13.764717102050781
    7. '       ' → logprob: -15.389717102050781
    8. '   ' → logprob: -15.389717102050781
    9. 'self' → logprob: -15.639717102050781
    10. '            ' → logprob: -16.76471710205078

Token 257: ' right' (ID: 1849)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.15914398431777954
    2. 'left' → logprob: -2.0341439247131348
    3. ' right' → logprob: -4.284143924713135
    4. 'right' → logprob: -6.034143924713135
    5. ' lef' → logprob: -8.909144401550293
    6. '	left' → logprob: -11.659144401550293
    7. 'lef' → logprob: -12.659144401550293
    8. ' ' → logprob: -13.159144401550293
    9. '_left' → logprob: -13.909144401550293
    10. '(left' → logprob: -14.034144401550293

Token 258: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05139416456222534
    2. '<' → logprob: -3.05139422416687
    3. '<|end|>' → logprob: -6.176393985748291
    4. '<int' → logprob: -8.30139446258545
    5. ' ==' → logprob: -9.05139446258545
    6. '[' → logprob: -9.55139446258545
    7. '+' → logprob: -10.05139446258545
    8. ' -' → logprob: -10.30139446258545
    9. '   ' → logprob: -10.30139446258545
    10. ' ' → logprob: -10.80139446258545

Token 259: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.014165983535349369
    2. ' left' → logprob: -4.264165878295898
    3. '	left' → logprob: -13.889165878295898
    4. '=' → logprob: -14.889165878295898
    5. '   ' → logprob: -14.889165878295898
    6. '1' → logprob: -15.264165878295898
    7. ' ' → logprob: -15.639165878295898
    8. '[left' → logprob: -16.3891658782959
    9. '           ' → logprob: -16.6391658782959
    10. ' lef' → logprob: -16.6391658782959

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9443541765213013
    2. ':
' → logprob: -1.0693541765213013
    3. ':return' → logprob: -1.8193541765213013
    4. '           ' → logprob: -2.9443540573120117
    5. '               ' → logprob: -3.5693540573120117
    6. '):
' → logprob: -4.944354057312012
    7. '<|end|>' → logprob: -5.569354057312012
    8. ' return' → logprob: -5.694354057312012
    9. ' or' → logprob: -6.069354057312012
    10. ')' → logprob: -6.069354057312012

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4236602485179901
    2. 'return' → logprob: -1.7986602783203125
    3. '           ' → logprob: -1.9236602783203125
    4. ' return' → logprob: -3.5486602783203125
    5. '
' → logprob: -5.9236602783203125
    6. '	           ' → logprob: -7.7986602783203125
    7. '	return' → logprob: -7.7986602783203125
    8. '	       ' → logprob: -7.9236602783203125
    9. ':return' → logprob: -8.548660278320312
    10. '		       ' → logprob: -8.798660278320312

Token 262: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14302216470241547
    2. 'return' (adapté à ' return') → logprob: -2.143022060394287
    3. ' return' → logprob: -4.268022060394287
    4. ' ' → logprob: -6.393022060394287
    5. '           ' → logprob: -8.893022537231445
    6. '               ' → logprob: -8.893022537231445
    7. '
' → logprob: -12.643022537231445
    8. '	return' → logprob: -13.143022537231445
    9. '{return' → logprob: -14.393022537231445
    10. '   ' → logprob: -14.518022537231445

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '           ' → logprob: -14.250015258789062
    4. '               ' → logprob: -16.375015258789062
    5. '   ' → logprob: -18.125015258789062
    6. '                   ' → logprob: -18.500015258789062
    7. '۰' → logprob: -19.750015258789062
    8. '       ' → logprob: -19.875015258789062
    9. '                       ' → logprob: -20.250015258789062
    10. '00' → logprob: -20.625015258789062

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '           ' → logprob: -14.250003814697266
    4. '               ' → logprob: -15.875003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '                   ' → logprob: -18.125003814697266
    7. '۰' → logprob: -18.375003814697266
    8. '       ' → logprob: -18.500003814697266
    9. '
' → logprob: -19.125003814697266
    10. '         ' → logprob: -19.750003814697266

Token 265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0236166063696146
    2. '
' → logprob: -3.8986165523529053
    3. 'return' → logprob: -6.273616790771484
    4. '       ' → logprob: -7.648616790771484
    5. '               ' → logprob: -8.273616790771484
    6. '		' → logprob: -8.898616790771484
    7. '            
' → logprob: -9.273616790771484
    8. ' return' → logprob: -9.648616790771484
    9. ')' → logprob: -10.898616790771484
    10. '    
' → logprob: -10.898616790771484

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008122475701384246
    2. '       ' → logprob: -7.75081205368042
    3. '
' → logprob: -8.375812530517578
    4. 'return' → logprob: -9.500812530517578
    5. '            
' → logprob: -10.500812530517578
    6. '               ' → logprob: -10.625812530517578
    7. '    
' → logprob: -11.750812530517578
    8. '		' → logprob: -12.125812530517578
    9. ' return' → logprob: -12.250812530517578
    10. '        
' → logprob: -13.000812530517578

Token 267: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3148360550403595
    2. 'return' (adapté à ' return') → logprob: -1.314836025238037
    3. ' return' → logprob: -7.314836025238037
    4. '
' → logprob: -7.439836025238037
    5. '       ' → logprob: -8.189836502075195
    6. '	return' → logprob: -10.814836502075195
    7. '   ' → logprob: -11.439836502075195
    8. '               ' → logprob: -12.064836502075195
    9. '		' → logprob: -13.314836502075195
    10. '	       ' → logprob: -14.189836502075195

Token 268: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.700886607170105
    2. ' (' → logprob: -1.575886607170105
    3. 'self' → logprob: -1.575886607170105
    4. ' self' → logprob: -2.4508867263793945
    5. '           ' → logprob: -5.5758867263793945
    6. '            ' → logprob: -9.700886726379395
    7. '               ' → logprob: -9.825886726379395
    8. '   ' → logprob: -10.075886726379395
    9. '(' → logprob: -11.700886726379395
    10. ' ' → logprob: -11.825886726379395

Token 269: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007457832107320428
    2. ' self' → logprob: -7.25074577331543
    3. '           ' → logprob: -10.87574577331543
    4. '(self' → logprob: -11.00074577331543
    5. '               ' → logprob: -15.25074577331543
    6. '[self' → logprob: -17.12574577331543
    7. '	self' → logprob: -17.62574577331543
    8. '                   ' → logprob: -19.00074577331543
    9. '=self' → logprob: -19.00074577331543
    10. '
' → logprob: -19.25074577331543

Token 270: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -4.870950215263292e-05
    2. 'query' → logprob: -10.000048637390137
    3. ' .' → logprob: -13.125048637390137
    4. '.' → logprob: -14.125048637390137
    5. '=query' → logprob: -15.250048637390137
    6. ' query' → logprob: -15.625048637390137
    7. '.tree' → logprob: -17.125049591064453
    8. '	query' → logprob: -17.250049591064453
    9. '_query' → logprob: -18.375049591064453
    10. '$query' → logprob: -18.375049591064453

Token 271: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -1.1279553291387856e-05
    2. 'right' → logprob: -12.125011444091797
    3. '[right' → logprob: -12.500011444091797
    4. ')' → logprob: -13.875011444091797
    5. ')(' → logprob: -14.875011444091797
    6. '(' → logprob: -15.000011444091797
    7. ' (' → logprob: -15.625011444091797
    8. '(rhs' → logprob: -16.000011444091797
    9. ',right' → logprob: -16.125011444091797
    10. ' right' → logprob: -16.750011444091797

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011471256148070097
    2. ' -' → logprob: -7.126147270202637
    3. ' )' → logprob: -8.251147270202637
    4. '-' → logprob: -9.626147270202637
    5. ')-' → logprob: -11.251147270202637
    6. '-)' → logprob: -13.251147270202637
    7. ']' → logprob: -15.251147270202637
    8. ',' → logprob: -16.25114631652832
    9. ' ' → logprob: -16.37614631652832
    10. '   ' → logprob: -16.37614631652832

Token 273: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00014191943046171218
    2. '-' → logprob: -8.875142097473145
    3. ' -
' → logprob: -14.250142097473145
    4. ' ' → logprob: -14.375142097473145
    5. ' ' → logprob: -14.500142097473145
    6. ')' → logprob: -15.500142097473145
    7. '        ' → logprob: -18.125141143798828
    8. '```' → logprob: -18.250141143798828
    9. '    ' → logprob: -18.500141143798828
    10. '            ' → logprob: -18.500141143798828

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02325223572552204
    2. ' self' → logprob: -3.773252248764038
    3. '           ' → logprob: -12.648252487182617
    4. '(self' → logprob: -12.773252487182617
    5. '	self' → logprob: -15.023252487182617
    6. '               ' → logprob: -16.023252487182617
    7. '[self' → logprob: -16.273252487182617
    8. '            ' → logprob: -16.523252487182617
    9. '       ' → logprob: -17.523252487182617
    10. ' ' → logprob: -17.523252487182617

Token 275: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -2.8921695047756657e-05
    2. 'query' → logprob: -11.375028610229492
    3. '.' → logprob: -11.500028610229492
    4. ' .' → logprob: -11.875028610229492
    5. ' query' → logprob: -15.375028610229492
    6. '=query' → logprob: -16.750028610229492
    7. '	query' → logprob: -17.000028610229492
    8. '.question' → logprob: -17.500028610229492
    9. '.range' → logprob: -18.375028610229492
    10. '$query' → logprob: -18.500028610229492

Token 276: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -7.5649528298527e-05
    2. 'left' → logprob: -9.500075340270996
    3. '[left' → logprob: -14.625075340270996
    4. '(' → logprob: -15.625075340270996
    5. ' left' → logprob: -16.625076293945312
    6. ',left' → logprob: -16.875076293945312
    7. ' (' → logprob: -17.875076293945312
    8. '	left' → logprob: -18.250076293945312
    9. ')' → logprob: -18.375076293945312
    10. '(right' → logprob: -18.750076293945312

Token 277: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133254051208496
    2. ' -' → logprob: -1.3133254051208496
    3. '           ' → logprob: -10.438325881958008
    4. '1' → logprob: -10.938325881958008
    5. ')' → logprob: -11.688325881958008
    6. ' ' → logprob: -13.188325881958008
    7. '   ' → logprob: -13.438325881958008
    8. '(' → logprob: -13.688325881958008
    9. '       ' → logprob: -14.438325881958008
    10. '               ' → logprob: -14.563325881958008

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.250015258789062
    4. '```' → logprob: -17.125015258789062
    5. '           ' → logprob: -17.500015258789062
    6. '<|end|>' → logprob: -17.875015258789062
    7. '   ' → logprob: -18.125015258789062
    8. '       ' → logprob: -20.125015258789062
    9. '               ' → logprob: -20.625015258789062
    10. 'def' → logprob: -20.875015258789062

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -15.625001907348633
    4. '```' → logprob: -17.625001907348633
    5. '           ' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -19.250001907348633
    8. '0' → logprob: -20.000001907348633
    9. 'def' → logprob: -20.562501907348633
    10. 'int' → logprob: -20.750001907348633

Token 280: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.611323624383658e-05
    2. ')%' → logprob: -10.500065803527832
    3. ' )' → logprob: -10.875065803527832
    4. '+' → logprob: -11.375065803527832
    5. ' +' → logprob: -11.875065803527832
    6. '           ' → logprob: -14.250065803527832
    7. '       ' → logprob: -15.375065803527832
    8. '   ' → logprob: -16.50006675720215
    9. '+)' → logprob: -16.62506675720215
    10. '))' → logprob: -17.12506675720215

Token 281: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006589424447156489
    2. ')%' → logprob: -7.625658988952637
    3. '+' → logprob: -9.375658988952637
    4. ' )' → logprob: -9.875658988952637
    5. ' +' → logprob: -10.500658988952637
    6. '           ' → logprob: -12.500658988952637
    7. '%' → logprob: -13.625658988952637
    8. ']' → logprob: -14.375658988952637
    9. '
' → logprob: -14.875658988952637
    10. '       ' → logprob: -15.000658988952637

Token 282: ' Warp' (ID: 197006)
  Prédit: 'Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Warp' → logprob: -0.048588961362838745
    2. ' Warp' → logprob: -3.048588991165161
    3. 'War' → logprob: -13.548588752746582
    4. 'warp' → logprob: -16.4235897064209
    5. ' warp' → logprob: -16.5485897064209
    6. ' War' → logprob: -17.7985897064209
    7. 'Wrap' → logprob: -17.9235897064209
    8. '
' → logprob: -19.0485897064209
    9. 'self' → logprob: -19.2985897064209
    10. 'W' → logprob: -19.4235897064209

Token 283: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -1.2471589798224159e-05
    2. '_machine' → logprob: -11.875012397766113
    3. '_M' → logprob: -13.000012397766113
    4. ' Machine' → logprob: -14.000012397766113
    5. '_MACHINE' → logprob: -14.125012397766113
    6. ')' → logprob: -14.625012397766113
    7. 'achine' → logprob: -14.625012397766113
    8. ' ' → logprob: -16.12501335144043
    9. 'Mach' → logprob: -16.75001335144043
    10. '_' → logprob: -16.75001335144043

Token 284: 'Routing' (ID: 38834)
  Prédit: 'Routing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Routing' → logprob: -0.0024706630501896143
    2. 'Machine' → logprob: -6.12747049331665
    3. '.routing' → logprob: -9.627470970153809
    4. '
' → logprob: -10.127470970153809
    5. 'routing' → logprob: -10.127470970153809
    6. 'Router' → logprob: -10.627470970153809
    7. '_ROUT' → logprob: -11.127470970153809
    8. 'outing' → logprob: -11.127470970153809
    9. ')' → logprob: -11.252470970153809
    10. 'ing' → logprob: -12.127470970153809

Token 285: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -1.318681188422488e-05
    2. 'MOD' → logprob: -12.25001335144043
    3. '_MOD' → logprob: -12.75001335144043
    4. ' .' → logprob: -13.25001335144043
    5. '.MODE' → logprob: -13.37501335144043
    6. '.' → logprob: -13.50001335144043
    7. '```' → logprob: -15.87501335144043
    8. ')' → logprob: -16.50001335144043
    9. '.Mod' → logprob: -16.62501335144043
    10. '._' → logprob: -16.87501335144043

Token 286: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07348942756652832
    2. '
' → logprob: -2.6984894275665283
    3. 'def' → logprob: -6.448489189147949
    4. '       ' → logprob: -6.948489189147949
    5. '```' → logprob: -7.948489189147949
    6. '    
' → logprob: -8.07348918914795
    7. '<|end|>' → logprob: -9.07348918914795
    8. 'class' → logprob: -9.69848918914795
    9. '

' → logprob: -9.82348918914795
    10. '        
' → logprob: -10.44848918914795

Token 288: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18351608514785767
    2. 'def' (adapté à ' def') → logprob: -1.933516025543213
    3. '
' → logprob: -4.183516025543213
    4. ' def' → logprob: -5.558516025543213
    5. '<|end|>' → logprob: -6.308516025543213
    6. '    
' → logprob: -6.808516025543213
    7. '```' → logprob: -7.933516025543213
    8. '       ' → logprob: -8.808516502380371
    9. '	def' → logprob: -8.933516502380371
    10. '

' → logprob: -9.558516502380371

Token 289: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7409401535987854
    2. ' count' → logprob: -0.8659401535987854
    3. ' _' → logprob: -3.6159400939941406
    4. ' compute' → logprob: -4.115940093994141
    5. '__' → logprob: -4.240940093994141
    6. 'count' → logprob: -4.615940093994141
    7. ' longest' → logprob: -4.990940093994141
    8. ' find' → logprob: -5.115940093994141
    9. ' solve' → logprob: -5.115940093994141
    10. ' def' → logprob: -5.115940093994141

Token 290: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.3915141355246305e-05
    2. 'i' → logprob: -10.75002384185791
    3. ' init' → logprob: -13.25002384185791
    4. '_init' → logprob: -14.62502384185791
    5. 'in' → logprob: -16.250024795532227
    6. '_' → logprob: -16.375024795532227
    7. 'ini' → logprob: -16.750024795532227
    8. 'int' → logprob: -18.375024795532227
    9. '_i' → logprob: -18.375024795532227
    10. '(init' → logprob: -18.500024795532227

Token 291: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -2.570319702499546e-05
    2. '(self' → logprob: -11.250025749206543
    3. '__' → logprob: -11.750025749206543
    4. '__(
' → logprob: -12.500025749206543
    5. '_(' → logprob: -14.375025749206543
    6. '(' → logprob: -15.250025749206543
    7. '__((' → logprob: -17.000024795532227
    8. 'self' → logprob: -17.750024795532227
    9. '__('' → logprob: -17.875024795532227
    10. '<>(' → logprob: -18.250024795532227

Token 292: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.707997428951785e-05
    2. ' self' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.875077247619629
    4. ',' → logprob: -14.750077247619629
    5. '
' → logprob: -15.375077247619629
    6. ')' → logprob: -15.375077247619629
    7. '       ' → logprob: -15.875077247619629
    8. '(self' → logprob: -16.250076293945312
    9. ' ' → logprob: -16.625076293945312
    10. '0' → logprob: -16.750076293945312

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010199354437645525
    2. 'self' → logprob: -9.375102043151855
    3. '):' → logprob: -12.125102043151855
    4. '):
' → logprob: -12.375102043151855
    5. ',self' → logprob: -12.750102043151855
    6. ' ,' → logprob: -13.125102043151855
    7. '(self' → logprob: -13.625102043151855
    8. ',
' → logprob: -14.125102043151855
    9. ' self' → logprob: -15.375102043151855
    10. '):

' → logprob: -16.12510108947754

Token 294: ' N' (ID: 478)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1491323709487915
    2. 's' → logprob: -1.5241323709487915
    3. ' text' → logprob: -2.649132251739502
    4. ' source' → logprob: -2.649132251739502
    5. 'text' → logprob: -2.899132251739502
    6. 'source' → logprob: -3.274132251739502
    7. 'pattern' → logprob: -3.274132251739502
    8. ' pattern' → logprob: -3.774132251739502
    9. 'self' → logprob: -3.774132251739502
    10. 'S' → logprob: -4.274132251739502

Token 295: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03602643683552742
    2. '):' → logprob: -3.6610264778137207
    3. '):
' → logprob: -4.786026477813721
    4. ':' → logprob: -6.661026477813721
    5. ' ,' → logprob: -10.161026000976562
    6. '=' → logprob: -12.286026000976562
    7. ':int' → logprob: -12.786026000976562
    8. ' ):' → logprob: -13.161026000976562
    9. '   ' → logprob: -13.536026000976562
    10. '):
' → logprob: -13.911026000976562

Token 296: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008629352785646915
    2. ' int' → logprob: -4.758629322052002
    3. '   ' → logprob: -11.88362979888916
    4. ')' → logprob: -12.75862979888916
    5. '(int' → logprob: -13.63362979888916
    6. '):
' → logprob: -13.88362979888916
    7. '):' → logprob: -14.13362979888916
    8. 'self' → logprob: -14.25862979888916
    9. '       ' → logprob: -15.38362979888916
    10. ',int' → logprob: -15.38362979888916

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0070961154997348785
    2. '):' → logprob: -5.007096290588379
    3. '):
' → logprob: -7.882096290588379
    4. ' ,' → logprob: -13.257096290588379
    5. '   ' → logprob: -14.632096290588379
    6. ')' → logprob: -14.632096290588379
    7. '):
' → logprob: -15.507096290588379
    8. '       ' → logprob: -15.882096290588379
    9. '):

' → logprob: -16.632095336914062
    10. ' ):' → logprob: -16.632095336914062

Token 298: ' s' (ID: 265)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8009427785873413
    2. 'M' → logprob: -2.175942897796631
    3. 'K' → logprob: -2.800942897796631
    4. ' S' → logprob: -2.800942897796631
    5. 's' → logprob: -3.425942897796631
    6. 'A' → logprob: -3.550942897796631
    7. 'words' → logprob: -3.675942897796631
    8. 'source' → logprob: -3.675942897796631
    9. ' M' → logprob: -3.800942897796631
    10. 'strings' → logprob: -3.925942897796631

Token 299: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038348292582668364
    2. '):' → logprob: -8.500383377075195
    3. ':str' → logprob: -9.500383377075195
    4. '):
' → logprob: -10.000383377075195
    5. 'tring' → logprob: -10.250383377075195
    6. 'tr' → logprob: -11.750383377075195
    7. ',' → logprob: -12.000383377075195
    8. '_:' → logprob: -12.500383377075195
    9. 's' → logprob: -12.750383377075195
    10. ')' → logprob: -13.750383377075195

Token 300: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004669595509767532
    2. ' str' → logprob: -5.379669666290283
    3. 'tr' → logprob: -11.004669189453125
    4. '[str' → logprob: -11.129669189453125
    5. ':str' → logprob: -11.754669189453125
    6. ')' → logprob: -12.504669189453125
    7. '(str' → logprob: -12.879669189453125
    8. '):
' → logprob: -13.879669189453125
    9. 's' → logprob: -13.879669189453125
    10. '=str' → logprob: -14.504669189453125

Token 301: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1274769902229309
    2. '):
' → logprob: -2.127476930618286
    3. ',' → logprob: -7.752477169036865
    4. ')' → logprob: -9.377476692199707
    5. '):
' → logprob: -10.877476692199707
    6. '   ' → logprob: -11.877476692199707
    7. ':' → logprob: -12.127476692199707
    8. '       ' → logprob: -13.127476692199707
    9. ' ):' → logprob: -14.502476692199707
    10. '):

' → logprob: -15.252476692199707

Token 302: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6999810338020325
    2. 'T' → logprob: -1.4499809741973877
    3. ' t' → logprob: -2.1999809741973877
    4. ' T' → logprob: -3.3249809741973877
    5. 'm' → logprob: -3.9499809741973877
    6. 'K' → logprob: -4.324981212615967
    7. 'k' → logprob: -4.449981212615967
    8. 'M' → logprob: -4.699981212615967
    9. 'w' → logprob: -4.699981212615967
    10. 'p' → logprob: -4.824981212615967

Token 303: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011125932214781642
    2. '):' → logprob: -6.876112461090088
    3. '):
' → logprob: -9.626112937927246
    4. ')' → logprob: -12.126112937927246
    5. '_:' → logprob: -12.501112937927246
    6. ':str' → logprob: -13.376112937927246
    7. ' :' → logprob: -13.501112937927246
    8. ',' → logprob: -13.626112937927246
    9. ' ):' → logprob: -15.626112937927246
    10. '":' → logprob: -15.876112937927246

Token 304: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3533196449279785
    2. 'str' → logprob: -1.2283196449279785
    3. ')' → logprob: -5.7283196449279785
    4. '):' → logprob: -7.8533196449279785
    5. 's' → logprob: -7.9783196449279785
    6. '):
' → logprob: -8.22831916809082
    7. ' ' → logprob: -8.72831916809082
    8. 'int' → logprob: -8.72831916809082
    9. ',' → logprob: -9.72831916809082
    10. '   ' → logprob: -10.22831916809082

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012540032155811787
    2. '):
' → logprob: -4.387539863586426
    3. ')' → logprob: -11.262539863586426
    4. ',' → logprob: -11.637539863586426
    5. '   ' → logprob: -12.887539863586426
    6. '):
' → logprob: -12.887539863586426
    7. ':' → logprob: -13.012539863586426
    8. '       ' → logprob: -13.762539863586426
    9. ''):' → logprob: -16.637540817260742
    10. '):

' → logprob: -16.887540817260742

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014191943046171218
    2. ':' → logprob: -10.000142097473145
    3. 'self' → logprob: -10.750142097473145
    4. ',' → logprob: -10.875142097473145
    5. ' self' → logprob: -11.625142097473145
    6. '```' → logprob: -11.750142097473145
    7. '   ' → logprob: -11.875142097473145
    8. ':
' → logprob: -12.000142097473145
    9. '        
' → logprob: -12.250142097473145
    10. '
' → logprob: -12.375142097473145

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003976054955273867
    2. '       ' → logprob: -6.003975868225098
    3. ' self' → logprob: -6.503975868225098
    4. '   ' → logprob: -13.753975868225098
    5. '	self' → logprob: -15.128975868225098
    6. 'super' → logprob: -15.628975868225098
    7. '           ' → logprob: -15.878975868225098
    8. '```' → logprob: -16.378976821899414
    9. '
' → logprob: -17.378976821899414
    10. ' ' → logprob: -17.503976821899414

Token 308: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.12945201992988586
    2. ' .' → logprob: -2.5044519901275635
    3. '.' → logprob: -3.3794519901275635
    4. ' =' → logprob: -5.754452228546143
    5. '       ' → logprob: -6.629452228546143
    6. '   ' → logprob: -7.754452228546143
    7. '=' → logprob: -8.754451751708984
    8. ' ' → logprob: -9.004451751708984
    9. '.n' → logprob: -9.379451751708984
    10. 'N' → logprob: -9.379451751708984

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023250602185726166
    2. '=' → logprob: -3.7732505798339844
    3. ' ' → logprob: -12.648250579833984
    4. ',' → logprob: -14.023250579833984
    5. '=N' → logprob: -14.273250579833984
    6. '    ' → logprob: -15.273250579833984
    7. ')' → logprob: -16.148250579833984
    8. '   ' → logprob: -16.273250579833984
    9. ' ,' → logprob: -17.648250579833984
    10. '=int' → logprob: -18.273250579833984

Token 310: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16022443771362305
    2. ' N' → logprob: -1.910224437713623
    3. '	N' → logprob: -14.910224914550781
    4. ' ' → logprob: -18.28522491455078
    5. '=N' → logprob: -19.03522491455078
    6. '_N' → logprob: -19.66022491455078
    7. '
' → logprob: -19.91022491455078
    8. '```' → logprob: -20.41022491455078
    9. ' ' → logprob: -20.53522491455078
    10. ',N' → logprob: -20.53522491455078

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012702468782663345
    2. '
' → logprob: -4.387702465057373
    3. 'self' → logprob: -9.137702941894531
    4. ',' → logprob: -10.137702941894531
    5. '        
' → logprob: -11.012702941894531
    6. ',
' → logprob: -11.637702941894531
    7. '```' → logprob: -12.512702941894531
    8. 's' → logprob: -12.637702941894531
    9. ' self' → logprob: -13.262702941894531
    10. '
' → logprob: -13.262702941894531

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.635164754698053e-05
    2. 'self' → logprob: -9.750066757202148
    3. ' self' → logprob: -12.875066757202148
    4. '
' → logprob: -13.125066757202148
    5. ',' → logprob: -13.625066757202148
    6. '```' → logprob: -14.250066757202148
    7. '   ' → logprob: -14.625066757202148
    8. 's' → logprob: -15.000066757202148
    9. '           ' → logprob: -15.125066757202148
    10. '<|end|>' → logprob: -15.625066757202148

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.069664333248511e-05
    2. 's' → logprob: -11.250020980834961
    3. '       ' → logprob: -11.875020980834961
    4. ' self' → logprob: -14.250020980834961
    5. '
' → logprob: -17.75002098083496
    6. '   ' → logprob: -18.12502098083496
    7. '```' → logprob: -18.25002098083496
    8. '           ' → logprob: -19.12502098083496
    9. 'from' → logprob: -19.62502098083496
    10. '	self' → logprob: -20.00002098083496

Token 314: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0007027800311334431
    2. '.' → logprob: -8.000702857971191
    3. ' .' → logprob: -8.125702857971191
    4. 's' → logprob: -10.375702857971191
    5. '.t' → logprob: -11.000702857971191
    6. '.string' → logprob: -12.375702857971191
    7. '._' → logprob: -12.500702857971191
    8. '.str' → logprob: -12.625702857971191
    9. '
' → logprob: -13.375702857971191
    10. '   ' → logprob: -13.500702857971191

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021141171455383
    2. '=' → logprob: -2.3502113819122314
    3. ',' → logprob: -12.975211143493652
    4. 's' → logprob: -13.725211143493652
    5. ' =
' → logprob: -14.600211143493652
    6. ' ' → logprob: -15.350211143493652
    7. '   ' → logprob: -15.475211143493652
    8. '_' → logprob: -16.47521209716797
    9. '    ' → logprob: -16.47521209716797
    10. '=s' → logprob: -16.47521209716797

Token 316: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759395956993103
    2. ' s' → logprob: -0.8259395956993103
    3. 't' → logprob: -16.575939178466797
    4. ' ' → logprob: -16.825939178466797
    5. '	s' → logprob: -17.825939178466797
    6. '_s' → logprob: -17.825939178466797
    7. ' t' → logprob: -18.575939178466797
    8. ' ' → logprob: -19.450939178466797
    9. '    ' → logprob: -20.325939178466797
    10. '{s' → logprob: -20.325939178466797

Token 317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015287866117432714
    2. '
' → logprob: -6.876528739929199
    3. 'self' → logprob: -7.626528739929199
    4. '        
' → logprob: -12.5015287399292
    5. ' self' → logprob: -13.6265287399292
    6. ',' → logprob: -14.0015287399292
    7. '   ' → logprob: -14.3765287399292
    8. '
' → logprob: -15.0015287399292
    9. '           ' → logprob: -15.2515287399292
    10. '<|end|>' → logprob: -15.2515287399292

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000718626833986491
    2. 'self' → logprob: -7.250718593597412
    3. ' self' → logprob: -12.37571907043457
    4. '
' → logprob: -12.62571907043457
    5. '   ' → logprob: -14.87571907043457
    6. '        
' → logprob: -15.25071907043457
    7. ',' → logprob: -15.75071907043457
    8. '           ' → logprob: -16.25071907043457
    9. '	self' → logprob: -16.75071907043457
    10. '	' → logprob: -16.87571907043457

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003188524628058076
    2. '       ' → logprob: -6.003188610076904
    3. ' self' → logprob: -7.253188610076904
    4. '
' → logprob: -13.003188133239746
    5. '           ' → logprob: -14.253188133239746
    6. '   ' → logprob: -14.378188133239746
    7. '	self' → logprob: -14.378188133239746
    8. 't' → logprob: -15.128188133239746
    9. ' ' → logprob: -16.378189086914062
    10. '        
' → logprob: -16.503189086914062

Token 320: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.011644579470157623
    2. '.' → logprob: -4.51164436340332
    3. 't' → logprob: -7.51164436340332
    4. ' .' → logprob: -10.38664436340332
    5. '.s' → logprob: -12.63664436340332
    6. ' t' → logprob: -12.76164436340332
    7. '_t' → logprob: -13.13664436340332
    8. ' =' → logprob: -13.13664436340332
    9. '=' → logprob: -13.63664436340332
    10. '   ' → logprob: -14.01164436340332

Token 321: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020796209573746
    2. ' t' → logprob: -2.350208044052124
    3. 's' → logprob: -13.975208282470703
    4. ' ' → logprob: -15.725208282470703
    5. '	t' → logprob: -16.350208282470703
    6. 'list' → logprob: -16.725208282470703
    7. '   ' → logprob: -16.975208282470703
    8. '[' → logprob: -16.975208282470703
    9. ' list' → logprob: -17.475208282470703
    10. '[t' → logprob: -17.600208282470703

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01727990061044693
    2. '
' → logprob: -4.767280101776123
    3. '<|end|>' → logprob: -4.767280101776123
    4. '        
' → logprob: -9.892279624938965
    5. 'self' → logprob: -10.767279624938965
    6. ',' → logprob: -11.517279624938965
    7. '<|end|>' → logprob: -11.642279624938965
    8. '   ' → logprob: -12.017279624938965
    9. '```' → logprob: -12.392279624938965
    10. ' self' → logprob: -12.517279624938965

Token 324: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2581179141998291
    2. '       ' → logprob: -1.508117914199829
    3. '
' → logprob: -5.50811767578125
    4. ' self' → logprob: -6.25811767578125
    5. '        
' → logprob: -9.50811767578125
    6. 'def' → logprob: -10.13311767578125
    7. '   ' → logprob: -10.63311767578125
    8. '           ' → logprob: -10.88311767578125
    9. '```' → logprob: -11.75811767578125
    10. '	self' → logprob: -12.13311767578125

Token 326: '.s' (ID: 640)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.36303773522377014
    2. '.' → logprob: -2.2380378246307373
    3. ' .' → logprob: -2.4880378246307373
    4. '.L' → logprob: -3.4880378246307373
    5. '.s' → logprob: -3.8630378246307373
    6. '.W' → logprob: -4.363037586212158
    7. '.S' → logprob: -4.488037586212158
    8. '       ' → logprob: -4.738037586212158
    9. '.Mapper' → logprob: -5.363037586212158
    10. '.w' → logprob: -5.613037586212158

Token 327: '_mapper' (ID: 198867)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.5961171388626099
    2. '_map' → logprob: -2.0961170196533203
    3. '_positions' → logprob: -2.0961170196533203
    4. '_index' → logprob: -3.0961170196533203
    5. '_counts' → logprob: -3.3461170196533203
    6. '_' → logprob: -3.5961170196533203
    7. '_chars' → logprob: -4.09611701965332
    8. '_pos' → logprob: -4.09611701965332
    9. '_indexes' → logprob: -4.22111701965332
    10. ' =' → logprob: -4.84611701965332

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022635996341705
    2. '=' → logprob: -1.9102263450622559
    3. '.' → logprob: -14.160226821899414
    4. '=self' → logprob: -15.035226821899414
    5. '.=' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.285226821899414
    7. 'self' → logprob: -15.410226821899414
    8. '   ' → logprob: -16.035226821899414
    9. 'Warp' → logprob: -16.660226821899414
    10. ')' → logprob: -17.035226821899414

Token 329: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6347885727882385
    2. 'Warp' → logprob: -0.7597885727882385
    3. ' self' → logprob: -6.509788513183594
    4. ' Warp' → logprob: -7.384788513183594
    5. 'War' → logprob: -10.634788513183594
    6. 'warp' → logprob: -11.009788513183594
    7. 'Self' → logprob: -11.884788513183594
    8. '(self' → logprob: -12.009788513183594
    9. '[self' → logprob: -12.009788513183594
    10. 'W' → logprob: -12.134788513183594

Token 330: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.750014305114746
    3. '.Leg' → logprob: -13.000014305114746
    4. '.S' → logprob: -13.625014305114746
    5. ' .' → logprob: -14.000014305114746
    6. '.Le' → logprob: -14.625014305114746
    7. 's' → logprob: -14.750014305114746
    8. '.Line' → logprob: -15.000014305114746
    9. 'Letter' → logprob: -15.875014305114746
    10. '.W' → logprob: -16.50001335144043

Token 331: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -15.750000953674316
    3. 'eter' → logprob: -15.875000953674316
    4. 'ette' → logprob: -17.0
    5. '```' → logprob: -17.0
    6. '{' → logprob: -17.5
    7. 'et' → logprob: -17.5
    8. '`' → logprob: -18.375
    9. 'letter' → logprob: -18.625
    10. ' etter' → logprob: -18.625

Token 332: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -6.749814019713085e-06
    2. 'index' → logprob: -12.000006675720215
    3. 'Indexer' → logprob: -14.500006675720215
    4. '_index' → logprob: -17.50000762939453
    5. 'Ind' → logprob: -17.75000762939453
    6. 'In' → logprob: -18.25000762939453
    7. 'INDEX' → logprob: -18.87500762939453
    8. '```' → logprob: -18.87500762939453
    9. 's' → logprob: -19.12500762939453
    10. ' Index' → logprob: -19.37500762939453

Token 333: 'Mapper' (ID: 10811)
  Prédit: 'Mapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapper' → logprob: -1.5451681974809617e-05
    2. 'mapper' → logprob: -11.250015258789062
    3. '_mapper' → logprob: -13.750015258789062
    4. 'Map' → logprob: -15.125015258789062
    5. ' Mapper' → logprob: -15.375015258789062
    6. 'Indexer' → logprob: -15.625015258789062
    7. '@Mapper' → logprob: -15.750015258789062
    8. 'M' → logprob: -15.875015258789062
    9. 'apper' → logprob: -16.500015258789062
    10. ' mapper' → logprob: -17.125015258789062

Token 334: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16039341688156128
    2. '()
' → logprob: -1.910393476486206
    3. '()

' → logprob: -9.410393714904785
    4. '(' → logprob: -10.535393714904785
    5. '(self' → logprob: -10.785393714904785
    6. '       ' → logprob: -11.160393714904785
    7. '()
' → logprob: -12.160393714904785
    8. '())' → logprob: -12.660393714904785
    9. '()\' → logprob: -12.910393714904785
    10. '();' → logprob: -12.910393714904785

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20216254889965057
    2. ' for' → logprob: -1.827162504196167
    3. 'for' → logprob: -4.077162742614746
    4. '<|end|>' → logprob: -5.327162742614746
    5. '        
' → logprob: -9.202162742614746
    6. '```' → logprob: -9.327162742614746
    7. ' ' → logprob: -10.202162742614746
    8. '   ' → logprob: -10.327162742614746
    9. '
' → logprob: -10.577162742614746
    10. '<|end|>' → logprob: -10.577162742614746

Token 336: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011312862625345588
    2. '       ' → logprob: -7.251131057739258
    3. ' for' → logprob: -7.876131057739258
    4. 'self' (adapté à ' self') → logprob: -10.126131057739258
    5. '	for' → logprob: -14.001131057739258
    6. '```' → logprob: -15.126131057739258
    7. '        
' → logprob: -16.126131057739258
    8. '   ' → logprob: -16.501131057739258
    9. '#' → logprob: -16.876131057739258
    10. '
' → logprob: -17.001131057739258

Token 337: '.dp' (ID: 77268)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.5673810839653015
    2. '.' → logprob: -1.3173811435699463
    3. '.t' → logprob: -1.8173811435699463
    4. '.for' → logprob: -6.817380905151367
    5. 't' → logprob: -8.067380905151367
    6. 'for' → logprob: -8.192380905151367
    7. ' .' → logprob: -8.192380905151367
    8. '._' → logprob: -9.067380905151367
    9. 's' → logprob: -9.692380905151367
    10. '.f' → logprob: -9.817380905151367

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006635555997490883
    2. '=' → logprob: -5.131635665893555
    3. '_' → logprob: -8.006635665893555
    4. 's' → logprob: -9.006635665893555
    5. '_arrays' → logprob: -9.756635665893555
    6. '   ' → logprob: -10.756635665893555
    7. '_values' → logprob: -10.881635665893555
    8. '_tree' → logprob: -10.881635665893555
    9. '=[]' → logprob: -11.256635665893555
    10. '_f' → logprob: -11.631635665893555

Token 339: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35539868474006653
    2. '[self' → logprob: -1.3553986549377441
    3. 'self' → logprob: -3.730398654937744
    4. ' [' → logprob: -4.105398654937744
    5. 'Warp' → logprob: -7.605398654937744
    6. ' self' → logprob: -8.855399131774902
    7. '[[' → logprob: -9.855399131774902
    8. '[s' → logprob: -11.230399131774902
    9. '[
' → logprob: -11.980399131774902
    10. '[-' → logprob: -12.105399131774902

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040815072134137154
    2. '[' → logprob: -8.500408172607422
    3. '1' → logprob: -8.625408172607422
    4. 'Warp' → logprob: -11.625408172607422
    5. ' [' → logprob: -12.250408172607422
    6. ']' → logprob: -12.750408172607422
    7. 'self' → logprob: -13.625408172607422
    8. '(' → logprob: -13.750408172607422
    9. ' ' → logprob: -13.750408172607422
    10. 'None' → logprob: -13.875408172607422

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002783783129416406
    2. ']*(' → logprob: -8.25027847290039
    3. ',' → logprob: -11.87527847290039
    4. ' for' → logprob: -12.12527847290039
    5. ']*' → logprob: -13.12527847290039
    6. ' ]' → logprob: -13.87527847290039
    7. ')' → logprob: -15.12527847290039
    8. ' *' → logprob: -15.12527847290039
    9. 'for' → logprob: -15.62527847290039
    10. '<|end|>' → logprob: -15.62527847290039

Token 342: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025965485721826553
    2. ' *' → logprob: -4.400965690612793
    3. ']*(' → logprob: -4.775965690612793
    4. ',' → logprob: -6.650965690612793
    5. '*(' → logprob: -7.275965690612793
    6. ' for' → logprob: -7.275965690612793
    7. '*' → logprob: -7.400965690612793
    8. 'for' → logprob: -7.400965690612793
    9. '0' → logprob: -8.400965690612793
    10. '(' → logprob: -8.400965690612793

Token 343: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009414771921001375
    2. '(self' → logprob: -7.250941276550293
    3. '(' → logprob: -9.625941276550293
    4. ' (' → logprob: -9.750941276550293
    5. '((' → logprob: -10.125941276550293
    6. '(s' → logprob: -10.375941276550293
    7. '(n' → logprob: -10.750941276550293
    8. '   ' → logprob: -11.875941276550293
    9. '(len' → logprob: -13.375941276550293
    10. '
' → logprob: -13.500941276550293

Token 344: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011699870228767395
    2. 'N' → logprob: -7.6261701583862305
    3. ' (' → logprob: -7.8761701583862305
    4. '(self' → logprob: -9.00117015838623
    5. '(' → logprob: -9.50117015838623
    6. '   ' → logprob: -10.37617015838623
    7. '(n' → logprob: -10.50117015838623
    8. '       ' → logprob: -10.62617015838623
    9. '((' → logprob: -12.12617015838623
    10. '
' → logprob: -12.87617015838623

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815931126475334
    2. ' +' → logprob: -4.01815938949585
    3. '+
' → logprob: -11.893158912658691
    4. ')' → logprob: -14.018158912658691
    5. ' +
' → logprob: -14.018158912658691
    6. '+)' → logprob: -15.518158912658691
    7. '1' → logprob: -15.643158912658691
    8. '   ' → logprob: -15.893158912658691
    9. '       ' → logprob: -16.018159866333008
    10. '
' → logprob: -16.893159866333008

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013504724483937025
    2. '2' → logprob: -6.626350402832031
    3. ' ' → logprob: -10.626350402832031
    4. '3' → logprob: -16.50135040283203
    5. '   ' → logprob: -16.75135040283203
    6. '7' → logprob: -17.12635040283203
    7. '5' → logprob: -17.12635040283203
    8. '```' → logprob: -18.06385040283203
    9. '10' → logprob: -18.62635040283203
    10. '6' → logprob: -18.62635040283203

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00672211404889822
    2. '2' → logprob: -5.0067219734191895
    3. '3' → logprob: -12.881722450256348
    4. ' ' → logprob: -13.256722450256348
    5. '5' → logprob: -13.881722450256348
    6. '10' → logprob: -14.381722450256348
    7. '
' → logprob: -15.506722450256348
    8. '7' → logprob: -15.819222450256348
    9. '11' → logprob: -15.944222450256348
    10. '4' → logprob: -16.06922149658203

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002811290556564927
    2. ')
' → logprob: -5.877811431884766
    3. '<|end|>' → logprob: -12.502811431884766
    4. ')
' → logprob: -14.002811431884766
    5. ')

' → logprob: -15.002811431884766
    6. ']' → logprob: -15.127811431884766
    7. ' )' → logprob: -15.377811431884766
    8. '),' → logprob: -15.502811431884766
    9. '       ' → logprob: -15.627811431884766
    10. '
' → logprob: -15.627811431884766

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09987219423055649
    2. '<|end|>' → logprob: -2.47487211227417
    3. 'self' → logprob: -5.59987211227417
    4. '
' → logprob: -5.59987211227417
    5. '   ' → logprob: -6.22487211227417
    6. '        
' → logprob: -8.349872589111328
    7. '	' → logprob: -8.474872589111328
    8. '<|end|>' → logprob: -8.724872589111328
    9. ' self' → logprob: -8.974872589111328
    10. ' for' → logprob: -8.974872589111328

Token 350: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15780267119407654
    2. ' for' → logprob: -2.6578025817871094
    3. '       ' → logprob: -2.9078025817871094
    4. 'self' (adapté à ' self') → logprob: -3.9078025817871094
    5. '	for' → logprob: -7.907802581787109
    6. '
' → logprob: -8.40780258178711
    7. ' self' → logprob: -8.53280258178711
    8. '<|end|>' → logprob: -9.28280258178711
    9. '```' → logprob: -9.90780258178711
    10. '   ' → logprob: -9.90780258178711

Token 351: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.582497239112854
    2. '.dp' → logprob: -1.457497239112854
    3. '.s' → logprob: -1.957497239112854
    4. '.t' → logprob: -3.8324971199035645
    5. '.' → logprob: -4.5824971199035645
    6. ' .' → logprob: -4.9574971199035645
    7. '._' → logprob: -4.9574971199035645
    8. '.F' → logprob: -5.0824971199035645
    9. '.ft' → logprob: -5.2074971199035645
    10. '.tree' → logprob: -6.2074971199035645

Token 352: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4512093663215637
    2. 't' → logprob: -1.076209306716919
    3. 'w' → logprob: -3.951209306716919
    4. 'tw' → logprob: -7.201209545135498
    5. 'tree' → logprob: -7.201209545135498
    6. 'or' → logprob: -8.32620906829834
    7. 'wt' → logprob: -8.45120906829834
    8. 'e' → logprob: -8.70120906829834
    9. 'p' → logprob: -8.70120906829834
    10. 'req' → logprob: -9.20120906829834

Token 353: 'w' (ID: 86)
  Prédit: 'wick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.02349504455924034
    2. 'w' → logprob: -4.523495197296143
    3. '_w' → logprob: -5.023495197296143
    4. '       ' → logprob: -6.648495197296143
    5. '   ' → logprob: -7.023495197296143
    6. '```' → logprob: -7.273495197296143
    7. '\' → logprob: -7.398495197296143
    8. 'wit' → logprob: -7.648495197296143
    9. '_' → logprob: -8.273494720458984
    10. '*' → logprob: -8.773494720458984

Token 354: 'icks' (ID: 8736)
  Prédit: 'ick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -3.9054008084349334e-05
    2. 'icks' → logprob: -11.125039100646973
    3. '   ' → logprob: -11.500039100646973
    4. '       ' → logprob: -12.625039100646973
    5. 'i' → logprob: -13.250039100646973
    6. 'e' → logprob: -13.625039100646973
    7. 'in' → logprob: -13.875039100646973
    8. 'ic' → logprob: -13.875039100646973
    9. '               ' → logprob: -13.875039100646973
    10. '```' → logprob: -13.875039100646973

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02330802194774151
    2. '=' → logprob: -3.773308038711548
    3. '=[]' → logprob: -11.398307800292969
    4. ' =[' → logprob: -11.523307800292969
    5. '[' → logprob: -11.648307800292969
    6. 's' → logprob: -11.898307800292969
    7. '=[' → logprob: -12.023307800292969
    8. '[]' → logprob: -12.398307800292969
    9. 'Trees' → logprob: -12.773307800292969
    10. ' ' → logprob: -12.898307800292969

Token 356: ' {' (ID: 354)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04891026392579079
    2. '[' → logprob: -3.04891037940979
    3. '[self' → logprob: -8.298910140991211
    4. ' []' → logprob: -10.173910140991211
    5. '[]' → logprob: -10.923910140991211
    6. '[N' → logprob: -12.173910140991211
    7. '[class' → logprob: -12.673910140991211
    8. '[int' → logprob: -13.298910140991211
    9. '[array' → logprob: -13.673910140991211
    10. '[len' → logprob: -14.048910140991211

Token 357: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5363554954528809
    2. 'c' → logprob: -1.6613554954528809
    3. 'i' → logprob: -1.9113554954528809
    4. 'char' → logprob: -3.536355495452881
    5. 'chr' → logprob: -4.161355495452881
    6. 'k' → logprob: -4.786355495452881
    7. 'length' → logprob: -4.786355495452881
    8. '}' → logprob: -5.161355495452881
    9. ''' → logprob: -6.161355495452881
    10. '1' → logprob: -6.661355495452881

Token 358: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001760029001161456
    2. ' :' → logprob: -6.376760005950928
    3. ':self' → logprob: -11.501760482788086
    4. ':[' → logprob: -11.751760482788086
    5. '=' → logprob: -12.251760482788086
    6. ' for' → logprob: -12.376760482788086
    7. '           ' → logprob: -12.751760482788086
    8. '   ' → logprob: -12.876760482788086
    9. ':list' → logprob: -13.126760482788086
    10. 'for' → logprob: -13.376760482788086

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04120180755853653
    2. ' self' → logprob: -3.5412018299102783
    3. 'Warp' → logprob: -4.666201591491699
    4. 'None' → logprob: -6.541201591491699
    5. ' Warp' → logprob: -7.916201591491699
    6. ' None' → logprob: -9.4162015914917
    7. '[self' → logprob: -11.7912015914917
    8. '[]}' → logprob: -11.7912015914917
    9. '[]' → logprob: -11.9162015914917
    10. '}' → logprob: -11.9787015914917

Token 360: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -0.0008170120418071747
    2. 'Fen' → logprob: -7.250816822052002
    3. 'F' → logprob: -10.25081729888916
    4. '.L' → logprob: -10.87581729888916
    5. '.f' → logprob: -11.12581729888916
    6. '.' → logprob: -11.50081729888916
    7. '.W' → logprob: -11.87581729888916
    8. ')' → logprob: -12.87581729888916
    9. '=' → logprob: -12.87581729888916
    10. '	F' → logprob: -12.87581729888916

Token 361: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0280383548888494e-06
    2. 'ен' → logprob: -14.750000953674316
    3. ' en' → logprob: -15.125000953674316
    4. 'e' → logprob: -16.625001907348633
    5. '

' → logprob: -16.625001907348633
    6. '(en' → logprob: -16.750001907348633
    7. 'ent' → logprob: -17.625001907348633
    8. '
' → logprob: -17.750001907348633
    9. '[' → logprob: -18.000001907348633
    10. 'w' → logprob: -18.125001907348633

Token 362: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.03650273382663727
    2. 'w' → logprob: -3.5365028381347656
    3. '       ' → logprob: -6.411502838134766
    4. '   ' → logprob: -6.786502838134766
    5. '```' → logprob: -7.786502838134766
    6. '{
' → logprob: -8.161502838134766
    7. '               ' → logprob: -8.536502838134766
    8. 'ick' → logprob: -8.786502838134766
    9. '>' → logprob: -8.786502838134766
    10. '``' → logprob: -8.786502838134766

Token 363: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -3.292907877039397e-06
    2. '	Tree' → logprob: -13.62500286102295
    3. '<Tree' → logprob: -14.62500286102295
    4. ' Tree' → logprob: -14.75000286102295
    5. '[' → logprob: -15.25000286102295
    6. 'tree' → logprob: -15.37500286102295
    7. '_tree' → logprob: -16.000003814697266
    8. '(Tree' → logprob: -16.000003814697266
    9. '_TREE' → logprob: -16.125003814697266
    10. 'Tre' → logprob: -16.250003814697266

Token 364: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003183041699230671
    2. '(' → logprob: -8.75031852722168
    3. '(self' → logprob: -9.50031852722168
    4. '(len' → logprob: -9.87531852722168
    5. ' (' → logprob: -11.25031852722168
    6. '(n' → logprob: -11.62531852722168
    7. 'N' → logprob: -12.37531852722168
    8. '((' → logprob: -13.12531852722168
    9. ')' → logprob: -14.00031852722168
    10. ')(' → logprob: -14.12531852722168

Token 365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. ' )' → logprob: -10.625028610229492
    3. ')}' → logprob: -13.625028610229492
    4. ')
' → logprob: -14.375028610229492
    5. '   ' → logprob: -14.375028610229492
    6. '))' → logprob: -15.375028610229492
    7. ' ' → logprob: -15.625028610229492
    8. '')' → logprob: -15.750028610229492
    9. '+' → logprob: -16.000028610229492
    10. '       ' → logprob: -16.125028610229492

Token 366: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10190867632627487
    2. 'for' → logprob: -2.4769086837768555
    3. ')' → logprob: -5.1019086837768555
    4. '}' → logprob: -5.8519086837768555
    5. '       ' → logprob: -5.9769086837768555
    6. '           ' → logprob: -7.2269086837768555
    7. '	for' → logprob: -8.851908683776855
    8. '   ' → logprob: -8.976908683776855
    9. '
' → logprob: -9.351908683776855
    10. '               ' → logprob: -9.726908683776855

Token 367: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.3872651159763336
    2. 'ch' → logprob: -1.1372650861740112
    3. 'c' → logprob: -9.3872652053833
    4. 'chr' → logprob: -9.3872652053833
    5. '	ch' → logprob: -9.3872652053833
    6. ' chr' → logprob: -9.7622652053833
    7. ' c' → logprob: -10.1372652053833
    8. '_ch' → logprob: -11.8872652053833
    9. '(ch' → logprob: -11.8872652053833
    10. ' ' → logprob: -12.0747652053833

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002833649516105652
    2. 'in' → logprob: -5.877833843231201
    3. 'ch' → logprob: -11.252833366394043
    4. ' ' → logprob: -11.752833366394043
    5. 's' → logprob: -13.127833366394043
    6. ')' → logprob: -14.502833366394043
    7. 'c' → logprob: -14.502833366394043
    8. '    ' → logprob: -14.752833366394043
    9. ' ' → logprob: -14.940333366394043
    10. ',' → logprob: -15.002833366394043

Token 369: ' set' (ID: 920)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.5917496681213379
    2. '(chr' → logprob: -1.966749668121338
    3. 'range' → logprob: -2.591749668121338
    4. 'self' → logprob: -2.966749668121338
    5. 'set' → logprob: -3.341749668121338
    6. ' chr' → logprob: -3.466749668121338
    7. ' set' → logprob: -3.591749668121338
    8. ' self' → logprob: -3.966749668121338
    9. ' range' → logprob: -4.216749668121338
    10. ' [' → logprob: -4.591749668121338

Token 370: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2539159059524536
    2. '(t' → logprob: -1.5039159059524536
    3. '(self' → logprob: -6.378915786743164
    4. '(' → logprob: -9.128915786743164
    5. 't' → logprob: -9.128915786743164
    6. 's' → logprob: -9.753915786743164
    7. '(
' → logprob: -12.753915786743164
    8. ' (' → logprob: -13.628915786743164
    9. 'self' → logprob: -13.628915786743164
    10. '()' → logprob: -13.753915786743164

Token 371: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.008048283867537975
    2. ')' → logprob: -4.883048057556152
    3. ' )' → logprob: -8.133048057556152
    4. 's' → logprob: -10.383048057556152
    5. '       ' → logprob: -10.633048057556152
    6. '+' → logprob: -10.883048057556152
    7. ')}
' → logprob: -11.383048057556152
    8. '}' → logprob: -11.508048057556152
    9. ');}' → logprob: -11.633048057556152
    10. '+s' → logprob: -11.758048057556152

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9089592695236206
    2. '<|end|>' → logprob: -0.9089592695236206
    3. '
' → logprob: -2.28395938873291
    4. ' for' → logprob: -3.40895938873291
    5. 'for' → logprob: -3.40895938873291
    6. 'def' → logprob: -4.15895938873291
    7. '   ' → logprob: -4.90895938873291
    8. '<|end|>' → logprob: -7.03395938873291
    9. ' def' → logprob: -7.28395938873291
    10. '```' → logprob: -7.65895938873291

Token 373: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03068373166024685
    2. ' for' → logprob: -3.780683755874634
    3. '       ' → logprob: -4.905683517456055
    4. '   ' → logprob: -12.655683517456055
    5. '	for' → logprob: -14.405683517456055
    6. '#' (adapté à ' #') → logprob: -14.530683517456055
    7. '
' → logprob: -14.530683517456055
    8. '<|end|>' → logprob: -14.655683517456055
    9. ' ' → logprob: -14.780683517456055
    10. '```' → logprob: -15.030683517456055

Token 374: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0233287513256073
    2. ' for' → logprob: -3.7733287811279297
    3. '       ' → logprob: -9.39832878112793
    4. '   ' → logprob: -15.89832878112793
    5. '
' → logprob: -16.02332878112793
    6. '	for' → logprob: -16.39832878112793
    7. '```' → logprob: -17.52332878112793
    8. 'For' → logprob: -17.77332878112793
    9. '        
' → logprob: -17.77332878112793
    10. '#' → logprob: -17.89832878112793

Token 375: 'process' (ID: 9139)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.38235950469970703
    2. 'process' → logprob: -1.632359504699707
    3. 'fix' → logprob: -2.507359504699707
    4. 'sum' → logprob: -4.382359504699707
    5. 'for' → logprob: -5.507359504699707
    6. 'compute' → logprob: -5.507359504699707
    7. 'populate' → logprob: -5.632359504699707
    8. '       ' → logprob: -5.632359504699707
    9. 'pend' → logprob: -5.757359504699707
    10. 'dict' → logprob: -5.882359504699707

Token 376: ' indices' (ID: 30378)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31367120146751404
    2. 'for' → logprob: -1.3136712312698364
    3. '       ' → logprob: -7.813671112060547
    4. '
' → logprob: -13.313671112060547
    5. '	for' → logprob: -13.438671112060547
    6. '   ' → logprob: -14.313671112060547
    7. '<|end|>' → logprob: -14.313671112060547
    8. ' ' → logprob: -15.438671112060547
    9. 'For' → logprob: -15.563671112060547
    10. '        
' → logprob: -15.813671112060547

Token 377: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4119449853897095
    2. '       ' → logprob: -1.6619449853897095
    3. 'for' → logprob: -1.9119449853897095
    4. '<|end|>' → logprob: -10.536945343017578
    5. ' in' → logprob: -11.536945343017578
    6. '   ' → logprob: -11.661945343017578
    7. ',' → logprob: -11.786945343017578
    8. '	for' → logprob: -12.036945343017578
    9. '        
' → logprob: -12.536945343017578
    10. ' ' → logprob: -12.536945343017578

Token 378: ' entrance' (ID: 27326)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10218046605587006
    2. 'i' → logprob: -3.2271804809570312
    3. ' enumerate' → logprob: -3.4771804809570312
    4. ' i' → logprob: -4.602180480957031
    5. ' index' → logprob: -5.477180480957031
    6. ' for' → logprob: -5.727180480957031
    7. 'for' → logprob: -5.852180480957031
    8. ' enumer' → logprob: -6.602180480957031
    9. ' idx' → logprob: -6.602180480957031
    10. 'index' → logprob: -6.852180480957031

Token 379: ' letter' (ID: 10263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.618872344493866
    2. ' in' → logprob: -1.1188724040985107
    3. ' for' → logprob: -2.6188724040985107
    4. ' of' → logprob: -3.9938724040985107
    5. 'for' → logprob: -4.618872165679932
    6. ' characters' → logprob: -4.618872165679932
    7. 'in' → logprob: -5.243872165679932
    8. ' letters' → logprob: -5.243872165679932
    9. ' s' → logprob: -5.993872165679932
    10. ' positions' → logprob: -6.493872165679932

Token 380: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01765698567032814
    2. ' for' → logprob: -4.1426568031311035
    3. 'for' → logprob: -6.6426568031311035
    4. '<|end|>' → logprob: -9.392657279968262
    5. 's' → logprob: -9.642657279968262
    6. ',' → logprob: -10.017657279968262
    7. '
' → logprob: -10.267657279968262
    8. '   ' → logprob: -10.767657279968262
    9. ':' → logprob: -10.767657279968262
    10. '        
' → logprob: -11.267657279968262

Token 381: '[i' (ID: 1768)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6732170581817627
    2. ' for' → logprob: -1.6732170581817627
    3. '       ' → logprob: -1.7982170581817627
    4. 'elf' → logprob: -2.0482170581817627
    5. '   ' → logprob: -6.048216819763184
    6. ':' → logprob: -6.548216819763184
    7. 'x' → logprob: -6.923216819763184
    8. '           ' → logprob: -6.923216819763184
    9. 'f' → logprob: -7.923216819763184
    10. ':
' → logprob: -8.298216819763184

Token 382: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15911419689655304
    2. '])' → logprob: -2.034114122390747
    3. ']
' → logprob: -5.659114360809326
    4. '].' → logprob: -5.659114360809326
    5. ')]' → logprob: -6.034114360809326
    6. 'ex' → logprob: -6.909114360809326
    7. '])]' → logprob: -6.909114360809326
    8. 's' → logprob: -7.534114360809326
    9. ']}' → logprob: -7.534114360809326
    10. 'x' → logprob: -7.534114360809326

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03201107680797577
    2. ' for' → logprob: -3.782011032104492
    3. 'for' → logprob: -4.782011032104492
    4. '<|end|>' → logprob: -8.782011032104492
    5. '   ' → logprob: -9.157011032104492
    6. '
' → logprob: -10.032011032104492
    7. '        
' → logprob: -11.407011032104492
    8. '```' → logprob: -11.907011032104492
    9. ',' → logprob: -12.032011032104492
    10. '<|end|>' → logprob: -12.282011032104492

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09568582475185394
    2. ' for' → logprob: -2.5956857204437256
    3. '       ' → logprob: -4.095685958862305
    4. '   ' → logprob: -12.220685958862305
    5. '	for' → logprob: -12.595685958862305
    6. '```' → logprob: -13.720685958862305
    7. '
' → logprob: -13.845685958862305
    8. ' ' → logprob: -14.970685958862305
    9. '        
' → logprob: -14.970685958862305
    10. '	' → logprob: -16.595685958862305

Token 385: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759737491607666
    2. 'i' → logprob: -0.8259737491607666
    3. 'idx' → logprob: -11.075973510742188
    4. ' idx' → logprob: -11.075973510742188
    5. 'index' → logprob: -13.200973510742188
    6. ' index' → logprob: -14.200973510742188
    7. '	i' → logprob: -14.950973510742188
    8. ' ' → logprob: -15.450973510742188
    9. '   ' → logprob: -16.075973510742188
    10. '(i' → logprob: -16.325973510742188

Token 386: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001961701549589634
    2. 'in' → logprob: -6.251961708068848
    3. ' ' → logprob: -11.001961708068848
    4. ',' → logprob: -11.501961708068848
    5. 'n' → logprob: -14.001961708068848
    6. '1' → logprob: -14.251961708068848
    7. '   ' → logprob: -14.376961708068848
    8. ' i' → logprob: -14.626961708068848
    9. '```' → logprob: -14.751961708068848
    10. '  ' → logprob: -14.876961708068848

Token 387: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.474122554063797
    2. 'ch' → logprob: -0.9741225242614746
    3. 'c' → logprob: -10.224123001098633
    4. ' c' → logprob: -11.974123001098633
    5. '(ch' → logprob: -13.599123001098633
    6. '_ch' → logprob: -13.849123001098633
    7. '[ch' → logprob: -14.849123001098633
    8. '	ch' → logprob: -15.474123001098633
    9. 'char' → logprob: -15.724123001098633
    10. ',ch' → logprob: -17.474123001098633

Token 388: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020680740475654602
    2. 'in' → logprob: -3.8956806659698486
    3. ',' → logprob: -9.39568042755127
    4. ' ' → logprob: -10.14568042755127
    5. 's' → logprob: -12.14568042755127
    6. 'n' → logprob: -12.39568042755127
    7. '	in' → logprob: -13.64568042755127
    8. '  ' → logprob: -13.89568042755127
    9. ' i' → logprob: -14.02068042755127
    10. '_in' → logprob: -14.39568042755127

Token 389: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.11282656341791153
    2. 'enumer' → logprob: -2.2378265857696533
    3. '(en' → logprob: -14.112826347351074
    4. 's' → logprob: -14.362826347351074
    5. 'en' → logprob: -14.487826347351074
    6. '
' → logprob: -14.862826347351074
    7. '```' → logprob: -15.237826347351074
    8. 'range' → logprob: -15.737826347351074
    9. '(' → logprob: -15.737826347351074
    10. ' en' → logprob: -15.737826347351074

Token 390: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.40118157863616943
    2. 's' → logprob: -1.4011815786361694
    3. ' s' → logprob: -2.901181697845459
    4. '(self' → logprob: -4.276181697845459
    5. ' (' → logprob: -4.651181697845459
    6. 'self' → logprob: -5.776181697845459
    7. ' self' → logprob: -6.151181697845459
    8. '(' → logprob: -7.651181697845459
    9. ' ' → logprob: -11.5261812210083
    10. '   ' → logprob: -11.9011812210083

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027807503938674927
    2. ' ,' → logprob: -6.127780914306641
    3. '):
' → logprob: -8.12778091430664
    4. '):' → logprob: -8.25278091430664
    5. ',start' → logprob: -11.50278091430664
    6. '   ' → logprob: -11.62778091430664
    7. '       ' → logprob: -12.37778091430664
    8. '_,' → logprob: -12.62778091430664
    9. '           ' → logprob: -12.62778091430664
    10. '):
' → logprob: -13.00278091430664

Token 392: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.164995014667511
    2. ' ' → logprob: -2.164994955062866
    3. ' start' → logprob: -3.414994955062866
    4. 'start' → logprob: -5.414995193481445
    5. ' i' → logprob: -11.789995193481445
    6. '   ' → logprob: -11.914995193481445
    7. 'i' → logprob: -12.789995193481445
    8. 'index' → logprob: -12.914995193481445
    9. '    ' → logprob: -13.914995193481445
    10. ')' → logprob: -14.289995193481445

Token 393: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006469102227129042
    2. '1' → logprob: -7.625647068023682
    3. '(' → logprob: -8.750646591186523
    4. '   ' → logprob: -15.500646591186523
    5. ' =' → logprob: -16.375646591186523
    6. ')' → logprob: -16.625646591186523
    7. '           ' → logprob: -16.625646591186523
    8. '=
' → logprob: -16.750646591186523
    9. ')=' → logprob: -17.000646591186523
    10. '):
' → logprob: -17.250646591186523

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '0' → logprob: -18.375001907348633
    5. '       ' → logprob: -19.875001907348633
    6. ')' → logprob: -19.875001907348633
    7. '           ' → logprob: -20.000001907348633
    8. '
' → logprob: -20.250001907348633
    9. '```' → logprob: -20.250001907348633
    10. '2' → logprob: -20.625001907348633

Token 395: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01620480790734291
    2. '):' → logprob: -4.141204833984375
    3. '):
' → logprob: -9.141204833984375
    4. ':' → logprob: -10.391204833984375
    5. ':
' → logprob: -10.766204833984375
    6. '           ' → logprob: -12.516204833984375
    7. '       ' → logprob: -12.516204833984375
    8. ')' → logprob: -13.391204833984375
    9. ' ):
' → logprob: -13.766204833984375
    10. '():
' → logprob: -14.391204833984375

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034058515448123217
    2. ' self' → logprob: -6.378406047821045
    3. 'self' → logprob: -6.503406047821045
    4. '   ' → logprob: -8.628405570983887
    5. '               ' → logprob: -11.753405570983887
    6. '       ' → logprob: -11.878405570983887
    7. ' ' → logprob: -13.128405570983887
    8. '```' → logprob: -13.253405570983887
    9. '  ' → logprob: -13.503405570983887
    10. '<|end|>' → logprob: -13.628405570983887

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00763892475515604
    2. ' self' → logprob: -5.007638931274414
    3. '           ' → logprob: -7.007638931274414
    4. '   ' → logprob: -11.632638931274414
    5. '               ' → logprob: -11.882638931274414
    6. ' ' → logprob: -13.632638931274414
    7. '	self' → logprob: -14.507638931274414
    8. '       ' → logprob: -15.007638931274414
    9. '  ' → logprob: -15.882638931274414
    10. '```' → logprob: -16.132638931274414

Token 398: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -2.534558552724775e-05
    2. 's' → logprob: -10.625025749206543
    3. '.' → logprob: -14.000025749206543
    4. ' .' → logprob: -15.750025749206543
    5. '_s' → logprob: -18.750024795532227
    6. 'self' → logprob: -19.375024795532227
    7. '..' → logprob: -19.625024795532227
    8. '.self' → logprob: -19.750024795532227
    9. '
' → logprob: -20.000024795532227
    10. '.user' → logprob: -20.000024795532227

Token 399: '_mapper' (ID: 198867)
  Prédit: '_mapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mapper' → logprob: -1.2352385965641588e-05
    2. '._' → logprob: -11.750012397766113
    3. 's' → logprob: -13.000012397766113
    4. '_mapping' → logprob: -13.875012397766113
    5. '_s' → logprob: -15.500012397766113
    6. '_parser' → logprob: -15.750012397766113
    7. '_' → logprob: -16.000011444091797
    8. '.Mapper' → logprob: -16.125011444091797
    9. '_map' → logprob: -16.375011444091797
    10. '@Mapper' → logprob: -16.375011444091797

Token 400: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.625008583068848
    3. 'add' → logprob: -12.750008583068848
    4. ' .' → logprob: -14.000008583068848
    5. '   ' → logprob: -15.125008583068848
    6. '       ' → logprob: -15.250008583068848
    7. '           ' → logprob: -15.500008583068848
    8. '.append' → logprob: -15.875008583068848
    9. '._' → logprob: -16.37500762939453
    10. 's' → logprob: -16.62500762939453

Token 401: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -3.666993507067673e-05
    2. 'ch' → logprob: -10.250036239624023
    3. '[ch' → logprob: -14.500036239624023
    4. '	ch' → logprob: -14.625036239624023
    5. ' ch' → logprob: -15.500036239624023
    6. '(' → logprob: -16.375036239624023
    7. ',ch' → logprob: -17.875036239624023
    8. '(
' → logprob: -18.000036239624023
    9. ' (' → logprob: -18.875036239624023
    10. '/ch' → logprob: -19.000036239624023

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039008883759379387
    2. ' ,' → logprob: -6.12890100479126
    3. ',i' → logprob: -6.37890100479126
    4. ' i' → logprob: -11.628900527954102
    5. 'i' → logprob: -12.128900527954102
    6. '[i' → logprob: -14.378900527954102
    7. ',ch' → logprob: -14.378900527954102
    8. '(i' → logprob: -14.753900527954102
    9. ',
' → logprob: -14.878900527954102
    10. ')' → logprob: -14.878900527954102

Token 403: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804149478673935
    2. ' i' → logprob: -3.288041591644287
    3. ')i' → logprob: -18.163042068481445
    4. ')' → logprob: -19.288042068481445
    5. '   ' → logprob: -19.538042068481445
    6. '	i' → logprob: -19.663042068481445
    7. ' ' → logprob: -21.288042068481445
    8. '           ' → logprob: -21.413042068481445
    9. '```' → logprob: -21.788042068481445
    10. '(i' → logprob: -21.913042068481445

Token 404: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.726595241460018e-05
    2. ')
' → logprob: -10.50003719329834
    3. '<|end|>' → logprob: -11.75003719329834
    4. ' )' → logprob: -13.75003719329834
    5. '       ' → logprob: -15.75003719329834
    6. ')return' → logprob: -15.87503719329834
    7. ')

' → logprob: -15.87503719329834
    8. '<|end|>' → logprob: -16.125038146972656
    9. ')#' → logprob: -17.000038146972656
    10. '),' → logprob: -17.250038146972656

Token 405: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39658835530281067
    2. '<|end|>' → logprob: -1.2715883255004883
    3. 'def' → logprob: -3.5215883255004883
    4. '
' → logprob: -4.896588325500488
    5. '<|end|>' → logprob: -5.771588325500488
    6. '   ' → logprob: -6.021588325500488
    7. ' def' → logprob: -6.771588325500488
    8. '```' → logprob: -6.896588325500488
    9. 'for' → logprob: -7.146588325500488
    10. 'self' → logprob: -7.646588325500488

Token 406: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04322081431746483
    2. '   ' → logprob: -3.2932207584381104
    3. ' def' → logprob: -6.0432209968566895
    4. '
' → logprob: -6.1682209968566895
    5. '       ' → logprob: -7.4182209968566895
    6. '<|end|>' → logprob: -10.793220520019531
    7. 'self' → logprob: -11.168220520019531
    8. '    
' → logprob: -11.543220520019531
    9. '

' → logprob: -11.543220520019531
    10. '	def' → logprob: -11.668220520019531

Token 407: ' compute' (ID: 23864)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0083768367767334
    2. ' count' → logprob: -1.1333768367767334
    3. ' def' → logprob: -2.0083768367767334
    4. 'def' → logprob: -3.0083768367767334
    5. 'compute' → logprob: -3.3833768367767334
    6. ' compute' → logprob: -3.5083768367767334
    7. 'calculate' → logprob: -4.2583770751953125
    8. '_count' → logprob: -4.5083770751953125
    9. ' calculate' → logprob: -4.5083770751953125
    10. '_' → logprob: -5.1333770751953125

Token 408: '_routes' (ID: 151448)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02089160867035389
    2. '(' → logprob: -4.7708916664123535
    3. '_sub' → logprob: -5.2708916664123535
    4. '_' → logprob: -6.1458916664123535
    5. '_count' → logprob: -6.5208916664123535
    6. 'self' → logprob: -7.0208916664123535
    7. '_dp' → logprob: -7.8958916664123535
    8. '():' → logprob: -8.020891189575195
    9. '_sequences' → logprob: -8.395891189575195
    10. '_counts' → logprob: -8.395891189575195

Token 409: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0182053092867136
    2. '(' → logprob: -4.018205165863037
    3. 'self' → logprob: -10.643205642700195
    4. ' (' → logprob: -10.893205642700195
    5. '(
' → logprob: -11.518205642700195
    6. '   ' → logprob: -13.518205642700195
    7. ' ' → logprob: -15.018205642700195
    8. '_(' → logprob: -15.893205642700195
    9. ' self' → logprob: -16.018205642700195
    10. '       ' → logprob: -16.018205642700195

Token 410: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14087247848510742
    2. '):' → logprob: -2.6408724784851074
    3. '):
' → logprob: -3.7658724784851074
    4. 'self' → logprob: -3.8908724784851074
    5. '(self' → logprob: -4.265872478485107
    6. '   ' → logprob: -7.140872478485107
    7. ')(' → logprob: -7.390872478485107
    8. ' ,' → logprob: -8.390872955322266
    9. '       ' → logprob: -8.390872955322266
    10. ',self' → logprob: -8.640872955322266

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.259079363080673e-05
    2. 'self' → logprob: -12.250012397766113
    3. '```' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.125012397766113
    5. ',' → logprob: -14.125012397766113
    6. '[' → logprob: -15.125012397766113
    7. ' self' → logprob: -15.250012397766113
    8. '()' → logprob: -15.500012397766113
    9. '[]' → logprob: -15.500012397766113
    10. '           ' → logprob: -15.500012397766113

Token 412: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06076214462518692
    2. 'for' → logprob: -3.4357621669769287
    3. ' self' → logprob: -4.43576192855835
    4. '       ' → logprob: -4.68576192855835
    5. 'result' → logprob: -5.93576192855835
    6. ' for' → logprob: -6.31076192855835
    7. 'from' → logprob: -8.060762405395508
    8. 'res' → logprob: -8.435762405395508
    9. 'total' → logprob: -9.185762405395508
    10. '   ' → logprob: -9.435762405395508

Token 413: ' Base' (ID: 8729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33568140864372253
    2. 'self' → logprob: -1.710681438446045
    3. 'prev' → logprob: -3.210681438446045
    4. '#' → logprob: -3.960681438446045
    5. 'res' → logprob: -4.585681438446045
    6. 'result' → logprob: -4.585681438446045
    7. ' for' → logprob: -5.460681438446045
    8. 'dp' → logprob: -5.710681438446045
    9. 'from' → logprob: -5.960681438446045
    10. 'if' → logprob: -6.210681438446045

Token 414: ' case' (ID: 1890)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1519477367401123
    2. ' case' → logprob: -1.1519477367401123
    3. 'case' → logprob: -1.2769477367401123
    4. '[' → logprob: -2.9019477367401123
    5. '       ' → logprob: -4.526947975158691
    6. '=' → logprob: -4.776947975158691
    7. '_case' → logprob: -6.151947975158691
    8. ' cases' → logprob: -6.276947975158691
    9. 'def' → logprob: -6.401947975158691
    10. ' self' → logprob: -6.401947975158691

Token 415: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17075106501579285
    2. '
' → logprob: -2.0457510948181152
    3. 'self' → logprob: -4.795751094818115
    4. '[' → logprob: -4.920751094818115
    5. ':' → logprob: -5.420751094818115
    6. ':
' → logprob: -6.045751094818115
    7. ' self' → logprob: -6.420751094818115
    8. ',' → logprob: -7.045751094818115
    9. '[self' → logprob: -7.170751094818115
    10. '        
' → logprob: -7.545751094818115

Token 416: ' from' (ID: 591)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6594329476356506
    2. 'self' → logprob: -0.7844329476356506
    3. '       ' → logprob: -4.284432888031006
    4. ' for' → logprob: -4.534432888031006
    5. 'for' → logprob: -6.409432888031006
    6. '```' → logprob: -9.534433364868164
    7. '0' → logprob: -9.659433364868164
    8. '[self' → logprob: -10.534433364868164
    9. '=self' → logprob: -10.659433364868164
    10. ' ' → logprob: -10.784433364868164

Token 417: ' star' (ID: 8253)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6484028100967407
    2. 'self' → logprob: -1.7734028100967407
    3. 's' → logprob: -1.8984028100967407
    4. ' ' → logprob: -2.523402690887451
    5. ' the' → logprob: -2.773402690887451
    6. ' self' → logprob: -3.023402690887451
    7. 'def' → logprob: -3.398402690887451
    8. ' s' → logprob: -3.523402690887451
    9. '[' → logprob: -3.648402690887451
    10. '1' → logprob: -3.648402690887451

Token 418: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00010831133840838447
    2. ' t' → logprob: -9.50010871887207
    3. '       ' → logprob: -11.50010871887207
    4. '   ' → logprob: -11.87510871887207
    5. 'td' → logprob: -12.25010871887207
    6. 'ting' → logprob: -13.37510871887207
    7. '           ' → logprob: -13.62510871887207
    8. 'tdown' → logprob: -13.87510871887207
    9. '
' → logprob: -14.12510871887207
    10. 'ted' → logprob: -14.25010871887207

Token 419: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0011148543562740088
    2. ' t' → logprob: -8.001114845275879
    3. '[' → logprob: -8.751114845275879
    4. '   ' → logprob: -9.126114845275879
    5. '       ' → logprob: -9.626114845275879
    6. 'ting' → logprob: -9.751114845275879
    7. 'td' → logprob: -9.751114845275879
    8. '
' → logprob: -10.376114845275879
    9. '```' → logprob: -10.626114845275879
    10. 'ts' → logprob: -10.626114845275879

Token 420: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1691053807735443
    2. 't' → logprob: -2.419105291366577
    3. ' =' → logprob: -4.169105529785156
    4. ',' → logprob: -4.544105529785156
    5. '0' → logprob: -4.669105529785156
    6. '=' → logprob: -5.044105529785156
    7. '[' → logprob: -5.044105529785156
    8. ':' → logprob: -5.419105529785156
    9. '
' → logprob: -6.044105529785156
    10. '1' → logprob: -6.294105529785156

Token 421: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10337471961975098
    2. ' self' → logprob: -2.603374719619751
    3. ' for' → logprob: -4.603374481201172
    4. '       ' → logprob: -5.228374481201172
    5. 'for' → logprob: -5.228374481201172
    6. 's' → logprob: -6.603374481201172
    7. '0' → logprob: -7.853374481201172
    8. '
' → logprob: -7.853374481201172
    9. '1' → logprob: -8.478374481201172
    10. '...' → logprob: -8.478374481201172

Token 422: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011481008492410183
    2. 'for' → logprob: -5.011480808258057
    3. '1' → logprob: -5.761480808258057
    4. ' self' → logprob: -7.511480808258057
    5. '0' → logprob: -7.761480808258057
    6. ' for' → logprob: -9.011481285095215
    7. 's' → logprob: -9.261481285095215
    8. '...' → logprob: -9.511481285095215
    9. '
' → logprob: -9.511481285095215
    10. '[self' → logprob: -9.761481285095215

Token 423: ' way' (ID: 2006)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6795504689216614
    2. 'self' → logprob: -2.1795504093170166
    3. ' self' → logprob: -2.1795504093170166
    4. '       ' → logprob: -2.5545504093170166
    5. '
' → logprob: -2.6795504093170166
    6. '=' → logprob: -3.4295504093170166
    7. '=self' → logprob: -4.179550647735596
    8. ']' → logprob: -4.304550647735596
    9. ')' → logprob: -4.804550647735596
    10. ' to' → logprob: -5.179550647735596

Token 424: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029163416475057602
    2. '[' → logprob: -4.404163360595703
    3. 'self' → logprob: -4.654163360595703
    4. ',' → logprob: -6.279163360595703
    5. '
' → logprob: -6.529163360595703
    6. ':' → logprob: -7.279163360595703
    7. ' self' → logprob: -7.404163360595703
    8. '   ' → logprob: -7.529163360595703
    9. ' =' → logprob: -7.779163360595703
    10. '[self' → logprob: -8.029163360595703

Token 425: ' start' (ID: 1604)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.9068744778633118
    2. 'stay' → logprob: -1.406874418258667
    3. 'stand' → logprob: -1.906874418258667
    4. 'start' → logprob: -2.406874418258667
    5. ' reach' → logprob: -3.906874418258667
    6. 'get' → logprob: -4.156874656677246
    7. 'be' → logprob: -4.156874656677246
    8. ' stand' → logprob: -4.531874656677246
    9. ' stay' → logprob: -4.656874656677246
    10. '0' → logprob: -4.781874656677246

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22839146852493286
    2. '
' → logprob: -2.228391408920288
    3. 'self' → logprob: -2.603391408920288
    4. '[' → logprob: -4.853391647338867
    5. ' self' → logprob: -4.853391647338867
    6. ',' → logprob: -6.228391647338867
    7. ' =' → logprob: -6.353391647338867
    8. ':' → logprob: -6.728391647338867
    9. '=' → logprob: -7.853391647338867
    10. '[self' → logprob: -7.978391647338867

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046083685010671616
    2. 'self' → logprob: -5.754608154296875
    3. '
' → logprob: -7.129608154296875
    4. ',' → logprob: -8.629608154296875
    5. ' self' → logprob: -8.879608154296875
    6. 's' → logprob: -9.754608154296875
    7. '	' → logprob: -9.754608154296875
    8. '```' → logprob: -10.129608154296875
    9. '   ' → logprob: -10.379608154296875
    10. '        
' → logprob: -10.754608154296875

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025081254541873932
    2. ' self' → logprob: -3.900081157684326
    3. '       ' → logprob: -5.400081157684326
    4. '```' → logprob: -12.025081634521484
    5. '   ' → logprob: -13.150081634521484
    6. 'for' → logprob: -13.400081634521484
    7. '	self' → logprob: -13.900081634521484
    8. '           ' → logprob: -14.275081634521484
    9. ' for' → logprob: -14.525081634521484
    10. 's' → logprob: -14.900081634521484

Token 429: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.0002639582962729037
    2. ' .' → logprob: -8.625264167785645
    3. '.' → logprob: -10.125264167785645
    4. '	dp' → logprob: -11.000264167785645
    5. '.df' → logprob: -12.250264167785645
    6. 'dp' → logprob: -12.250264167785645
    7. '.dt' → logprob: -12.500264167785645
    8. ' dp' → logprob: -13.000264167785645
    9. '
' → logprob: -13.625264167785645
    10. '.s' → logprob: -13.750264167785645

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.167648876318708e-05
    2. ' [' → logprob: -10.875041961669922
    3. ' =' → logprob: -11.250041961669922
    4. '=' → logprob: -12.125041961669922
    5. '=[' → logprob: -12.750041961669922
    6. '<|end|>' → logprob: -14.625041961669922
    7. '[
' → logprob: -15.375041961669922
    8. '
' → logprob: -15.500041961669922
    9. ' =[' → logprob: -15.750041961669922
    10. '```' → logprob: -16.625041961669922

Token 431: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.693425714969635
    2. '1' → logprob: -0.693425714969635
    3. ' ' → logprob: -8.318426132202148
    4. ']' → logprob: -10.943426132202148
    5. '[' → logprob: -11.318426132202148
    6. ')' → logprob: -13.943426132202148
    7. '=' → logprob: -14.693426132202148
    8. '
' → logprob: -14.755926132202148
    9. '```' → logprob: -14.755926132202148
    10. '   ' → logprob: -14.880926132202148

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018744789122138172
    2. ' ]' → logprob: -8.625187873840332
    3. ']=' → logprob: -12.000187873840332
    4. ')' → logprob: -13.750187873840332
    5. '[' → logprob: -15.250187873840332
    6. '=' → logprob: -16.125186920166016
    7. ']+=' → logprob: -16.250186920166016
    8. ']
' → logprob: -16.875186920166016
    9. ' =' → logprob: -17.000186920166016
    10. '`]' → logprob: -17.875186920166016

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. ' +=' → logprob: -15.50192928314209
    4. '[' → logprob: -16.001930236816406
    5. '+=' → logprob: -16.626930236816406
    6. ')' → logprob: -17.001930236816406
    7. ',' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.126930236816406
    9. '```' → logprob: -17.501930236816406
    10. ']' → logprob: -17.626930236816406

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.625025749206543
    3. '0' → logprob: -13.875025749206543
    4. '
' → logprob: -16.625024795532227
    5. '۱' → logprob: -17.250024795532227
    6. '(' → logprob: -17.312524795532227
    7. '   ' → logprob: -17.437524795532227
    8. '```' → logprob: -17.562524795532227
    9. '' → logprob: -17.875024795532227
    10. 'pow' → logprob: -18.625024795532227

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -15.000000953674316
    4. '(' → logprob: -16.625001907348633
    5. '
' → logprob: -17.000001907348633
    6. 'self' → logprob: -18.562501907348633
    7. '[' → logprob: -18.687501907348633
    8. '' → logprob: -18.750001907348633
    9. '2' → logprob: -18.750001907348633
    10. '۱' → logprob: -19.125001907348633

Token 436: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43051815032958984
    2. '<|end|>' → logprob: -1.0555181503295898
    3. '<|end|>' → logprob: -7.18051815032959
    4. '       ' → logprob: -7.18051815032959
    5. '\n' → logprob: -9.30551815032959
    6. '
' → logprob: -9.93051815032959
    7. '' → logprob: -10.55551815032959
    8. '  
' → logprob: -11.30551815032959
    9. '#' → logprob: -11.30551815032959
    10. '        
' → logprob: -11.30551815032959

Token 438: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05635414645075798
    2. ' for' → logprob: -3.30635404586792
    3. '       ' → logprob: -4.05635404586792
    4. 'i' → logprob: -7.68135404586792
    5. 'prev' → logprob: -9.556354522705078
    6. '	for' → logprob: -9.681354522705078
    7. ' i' → logprob: -10.306354522705078
    8. 'f' → logprob: -10.556354522705078
    9. 'index' → logprob: -10.681354522705078
    10. 'current' → logprob: -10.931354522705078

Token 439: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1305391639471054
    2. ' for' → logprob: -2.1305391788482666
    3. '       ' → logprob: -5.8805389404296875
    4. 'from' → logprob: -7.5055389404296875
    5. 'f' → logprob: -10.130538940429688
    6. 'fen' → logprob: -10.255538940429688
    7. '#' → logprob: -10.505538940429688
    8. ' from' → logprob: -10.880538940429688
    9. 'self' → logprob: -11.005538940429688
    10. 'prev' → logprob: -11.130538940429688

Token 440: ' Fen' (ID: 48230)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25649499893188477
    2. 'for' → logprob: -1.7564949989318848
    3. ' fen' → logprob: -4.006494998931885
    4. 'self' → logprob: -4.256494998931885
    5. ' self' → logprob: -4.381494998931885
    6. 'fen' → logprob: -5.881494998931885
    7. '       ' → logprob: -6.381494998931885
    8. 'f' → logprob: -6.756494998931885
    9. ' f' → logprob: -6.756494998931885
    10. ' the' → logprob: -8.006494522094727

Token 441: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00027134892297908664
    2. 'wick' → logprob: -8.250271797180176
    3. '       ' → logprob: -11.625271797180176
    4. '        ' → logprob: -15.250271797180176
    5. '   ' → logprob: -15.500271797180176
    6. 'wit' → logprob: -15.875271797180176
    7. ' w' → logprob: -16.12527084350586
    8. 'wik' → logprob: -16.25027084350586
    9. '           ' → logprob: -16.75027084350586
    10. '\' → logprob: -16.75027084350586

Token 442: ' Trees' (ID: 96132)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.43791186809539795
    2. 'Trees' → logprob: -1.312911868095398
    3. ' trees' → logprob: -2.8129119873046875
    4. 'trees' → logprob: -5.0629119873046875
    5. ' Trees' → logprob: -5.1879119873046875
    6. '       ' → logprob: -5.8129119873046875
    7. '_tree' → logprob: -5.9379119873046875
    8. ' Tree' → logprob: -6.0629119873046875
    9. ' tree' → logprob: -7.3129119873046875
    10. 'tree' → logprob: -7.5629119873046875

Token 443: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41927459836006165
    2. '       ' → logprob: -1.2942745685577393
    3. 'for' → logprob: -2.9192745685577393
    4. '
' → logprob: -5.044274806976318
    5. '        
' → logprob: -5.544274806976318
    6. '	for' → logprob: -6.669274806976318
    7. ':' → logprob: -7.419274806976318
    8. '<|end|>' → logprob: -7.544274806976318
    9. ',' → logprob: -7.794274806976318
    10. ' with' → logprob: -8.41927433013916

Token 444: ' dp' (ID: 21546)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5958863496780396
    2. 'ch' → logprob: -1.2208863496780396
    3. 's' → logprob: -3.09588623046875
    4. ' ch' → logprob: -3.34588623046875
    5. 'for' → logprob: -3.72088623046875
    6. ' self' → logprob: -4.09588623046875
    7. 'each' → logprob: -4.97088623046875
    8. 'i' → logprob: -5.09588623046875
    9. ' for' → logprob: -5.47088623046875
    10. ' all' → logprob: -5.59588623046875

Token 445: ' updates' (ID: 12663)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7313515543937683
    2. '       ' → logprob: -0.8563515543937683
    3. 'for' → logprob: -3.356351613998413
    4. '
' → logprob: -3.856351613998413
    5. '[self' → logprob: -4.106351375579834
    6. '[' → logprob: -4.856351375579834
    7. '        
' → logprob: -5.356351375579834
    8. 'self' → logprob: -6.731351375579834
    9. '[ch' → logprob: -6.731351375579834
    10. '[s' → logprob: -6.856351375579834

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03246620297431946
    2. '
' → logprob: -4.282466411590576
    3. ' for' → logprob: -4.282466411590576
    4. 'for' → logprob: -6.032466411590576
    5. '        
' → logprob: -6.782466411590576
    6. '<|end|>' → logprob: -7.532466411590576
    7. ',' → logprob: -9.407465934753418
    8. '<|end|>' → logprob: -10.282465934753418
    9. '	for' → logprob: -10.407465934753418
    10. '	' → logprob: -10.657465934753418

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04701157286763191
    2. ' for' → logprob: -3.547011613845825
    3. 'for' → logprob: -4.797011375427246
    4. '
' → logprob: -4.922011375427246
    5. '        
' → logprob: -7.547011375427246
    6. '<|end|>' → logprob: -7.547011375427246
    7. '```' → logprob: -8.422011375427246
    8. '	for' → logprob: -9.797011375427246
    9. ',' → logprob: -9.922011375427246
    10. '	' → logprob: -10.297011375427246

Token 448: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0060198064893484116
    2. ' for' → logprob: -5.506019592285156
    3. '       ' → logprob: -6.256019592285156
    4. '	for' → logprob: -11.381019592285156
    5. 'self' (adapté à ' self') → logprob: -12.881019592285156
    6. '```' → logprob: -13.381019592285156
    7. '        
' → logprob: -13.756019592285156
    8. '
' → logprob: -14.006019592285156
    9. '   ' → logprob: -14.506019592285156
    10. ' ' → logprob: -14.881019592285156

Token 449: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.026386799290776253
    2. 'for' → logprob: -4.026386737823486
    3. '.for' → logprob: -6.276386737823486
    4. 'dp' → logprob: -6.276386737823486
    5. 'f' → logprob: -6.776386737823486
    6. '.update' → logprob: -7.151386737823486
    7. '.dp' → logprob: -7.776386737823486
    8. ' for' → logprob: -8.026387214660645
    9. '.s' → logprob: -8.276387214660645
    10. '.' → logprob: -8.401387214660645

Token 450: 'en' (ID: 262)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6327575445175171
    2. 'en' → logprob: -0.7577575445175171
    3. 'for' → logprob: -9.257757186889648
    4. '[' → logprob: -10.757757186889648
    5. '
' → logprob: -12.132757186889648
    6. '```' → logprob: -12.507757186889648
    7. ' or' → logprob: -12.632757186889648
    8. '   ' → logprob: -13.382757186889648
    9. 'env' → logprob: -13.382757186889648
    10. '=' → logprob: -13.632757186889648

Token 451: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.696889623621246e-06
    2. 'wick' → logprob: -14.37500286102295
    3. ' w' → logprob: -15.00000286102295
    4. '_' → logprob: -15.81250286102295
    5. 'wik' → logprob: -15.93750286102295
    6. '\' → logprob: -16.000001907348633
    7. 'v' → logprob: -16.062501907348633
    8. '   ' → logprob: -16.125001907348633
    9. '```' → logprob: -16.375001907348633
    10. 'icks' → logprob: -16.500001907348633

Token 452: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -8.828512363834307e-05
    2. 'cks' → logprob: -9.750088691711426
    3. 'r' → logprob: -12.250088691711426
    4. 'ick' → logprob: -12.375088691711426
    5. 's' → logprob: -12.875088691711426
    6. 'acks' → logprob: -13.000088691711426
    7. 'e' → logprob: -13.000088691711426
    8. 'w' → logprob: -13.000088691711426
    9. 'ocks' → logprob: -13.125088691711426
    10. 'i' → logprob: -13.500088691711426

Token 453: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.06878695636987686
    2. '[' → logprob: -3.693786859512329
    3. ' =' → logprob: -4.068787097930908
    4. '[s' → logprob: -4.443787097930908
    5. '['' → logprob: -5.443787097930908
    6. '=' → logprob: -5.568787097930908
    7. '=self' → logprob: -6.193787097930908
    8. 'self' → logprob: -7.068787097930908
    9. '[t' → logprob: -7.943787097930908
    10. '[ch' → logprob: -8.44378662109375

Token 454: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0004486653197091073
    2. '.t' → logprob: -8.000448226928711
    3. 's' → logprob: -9.375448226928711
    4. '[' → logprob: -11.750448226928711
    5. 't' → logprob: -12.750448226928711
    6. '.' → logprob: -12.750448226928711
    7. '[s' → logprob: -12.750448226928711
    8. '[self' → logprob: -12.875448226928711
    9. ']' → logprob: -13.250448226928711
    10. ' .' → logprob: -13.250448226928711

Token 455: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008102210704237223
    2. '[self' → logprob: -7.125810146331787
    3. '[i' → logprob: -12.625810623168945
    4. 'self' → logprob: -13.625810623168945
    5. '['' → logprob: -14.250810623168945
    6. '[s' → logprob: -15.250810623168945
    7. 's' → logprob: -15.625810623168945
    8. '[
' → logprob: -16.500810623168945
    9. '[ch' → logprob: -17.000810623168945
    10. '[-' → logprob: -17.250810623168945

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6940386891365051
    2. '[' → logprob: -0.6940386891365051
    3. '1' → logprob: -7.0690388679504395
    4. ' ' → logprob: -10.444038391113281
    5. '   ' → logprob: -12.569038391113281
    6. '[self' → logprob: -13.569038391113281
    7. '(' → logprob: -13.819038391113281
    8. '```' → logprob: -13.944038391113281
    9. 'self' → logprob: -14.069038391113281
    10. '
' → logprob: -14.194038391113281

Token 457: ']].' (ID: 47690)
  Prédit: ']].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']].' → logprob: -0.002662458224222064
    2. ']][' → logprob: -6.377662658691406
    3. ')].' → logprob: -7.502662658691406
    4. '].' → logprob: -8.627662658691406
    5. ']]' → logprob: -9.002662658691406
    6. ']' → logprob: -9.877662658691406
    7. ' ]' → logprob: -11.127662658691406
    8. '   ' → logprob: -11.752662658691406
    9. '[' → logprob: -12.002662658691406
    10. '       ' → logprob: -12.002662658691406

Token 458: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.7432603272027336e-06
    2. ' update' → logprob: -13.375001907348633
    3. '.update' → logprob: -16.625001907348633
    4. '	update' → logprob: -20.625001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '```' → logprob: -21.500001907348633
    7. 'insert' → logprob: -22.000001907348633
    8. '  ' → logprob: -23.125001907348633
    9. '(update' → logprob: -23.125001907348633
    10. 'upload' → logprob: -23.375001907348633

Token 459: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141635835170746
    2. '1' → logprob: -1.7014163732528687
    3. '(
' → logprob: -12.826416015625
    4. '```' → logprob: -15.701416015625
    5. ' (' → logprob: -16.451416015625
    6. ' ' → logprob: -17.826416015625
    7. '(self' → logprob: -17.951416015625
    8. '   ' → logprob: -18.201416015625
    9. '[' → logprob: -19.076416015625
    10. 'self' → logprob: -19.201416015625

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -18.375001907348633
    5. ')' → logprob: -18.500001907348633
    6. '(' → logprob: -19.000001907348633
    7. '۱' → logprob: -19.625001907348633
    8. '`' → logprob: -19.687501907348633
    9. '  ' → logprob: -19.937501907348633
    10. ',' → logprob: -20.000001907348633

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03371197357773781
    2. ')' → logprob: -3.4087119102478027
    3. ' ,' → logprob: -10.033712387084961
    4. ',
' → logprob: -12.158712387084961
    5. ')
' → logprob: -12.533712387084961
    6. '1' → logprob: -12.783712387084961
    7. ' )' → logprob: -12.783712387084961
    8. '<|end|>' → logprob: -13.408712387084961
    9. '),' → logprob: -13.533712387084961
    10. ',)' → logprob: -13.783712387084961

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'self' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '       ' → logprob: -18.000001907348633
    6. '           ' → logprob: -19.000001907348633
    7. ' self' → logprob: -19.500001907348633
    8. '```' → logprob: -20.000001907348633
    9. '
' → logprob: -22.875001907348633
    10. '               ' → logprob: -22.875001907348633

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. 'self' → logprob: -10.250035285949707
    3. ' ' → logprob: -16.875036239624023
    4. '   ' → logprob: -18.375036239624023
    5. ' self' → logprob: -18.625036239624023
    6. '```' → logprob: -19.500036239624023
    7. '       ' → logprob: -20.000036239624023
    8. '
' → logprob: -20.125036239624023
    9. '(self' → logprob: -20.875036239624023
    10. '[self' → logprob: -21.250036239624023

Token 464: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006347587914206088
    2. ')
' → logprob: -7.375634670257568
    3. '       ' → logprob: -11.875635147094727
    4. ' )' → logprob: -15.125635147094727
    5. ')

' → logprob: -15.375635147094727
    6. ')
' → logprob: -15.375635147094727
    7. '   ' → logprob: -15.875635147094727
    8. '
' → logprob: -16.000635147094727
    9. ')return' → logprob: -16.375635147094727
    10. ')`' → logprob: -16.500635147094727

Token 465: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25664782524108887
    2. '       ' → logprob: -1.7566478252410889
    3. 'for' → logprob: -3.506647825241089
    4. ' for' → logprob: -4.256648063659668
    5. '<|end|>' → logprob: -5.256648063659668
    6. '        
' → logprob: -7.006648063659668
    7. '	for' → logprob: -7.506648063659668
    8. '   ' → logprob: -7.756648063659668
    9. '```' → logprob: -7.756648063659668
    10. '	' → logprob: -7.756648063659668

Token 466: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005543439765460789
    2. '       ' → logprob: -7.75055456161499
    3. ' for' → logprob: -9.000554084777832
    4. 'from' → logprob: -16.00055503845215
    5. '	for' → logprob: -17.12555503845215
    6. '#' → logprob: -17.37555503845215
    7. 'n' → logprob: -17.37555503845215
    8. '```' → logprob: -17.50055503845215
    9. 'prev' → logprob: -17.62555503845215
    10. 'i' → logprob: -17.87555503845215

Token 467: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1045817956328392
    2. ' pos' → logprob: -2.729581832885742
    3. 'i' → logprob: -3.604581832885742
    4. ' length' → logprob: -5.854581832885742
    5. ' idx' → logprob: -6.354581832885742
    6. 'pos' → logprob: -6.979581832885742
    7. ' j' → logprob: -7.354581832885742
    8. ' step' → logprob: -9.104581832885742
    9. ' position' → logprob: -9.354581832885742
    10. ' current' → logprob: -9.729581832885742

Token 468: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011828463757410645
    2. 'in' → logprob: -6.751183032989502
    3. ',' → logprob: -12.126182556152344
    4. ' ' → logprob: -12.751182556152344
    5. '1' → logprob: -13.501182556152344
    6. '   ' → logprob: -14.626182556152344
    7. '	in' → logprob: -15.126182556152344
    8. '_' → logprob: -15.376182556152344
    9. 'In' → logprob: -15.626182556152344
    10. ' i' → logprob: -15.876182556152344

Token 469: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023254677653312683
    2. ' range' → logprob: -3.773254632949829
    3. '   ' → logprob: -12.52325439453125
    4. ' ' → logprob: -13.14825439453125
    5. '  ' → logprob: -13.89825439453125
    6. '	range' → logprob: -14.14825439453125
    7. 'self' → logprob: -14.39825439453125
    8. '(range' → logprob: -14.77325439453125
    9. '    ' → logprob: -15.14825439453125
    10. '     ' → logprob: -16.02325439453125

Token 470: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0487184077501297
    2. '2' → logprob: -3.0487184524536133
    3. '1' → logprob: -9.423718452453613
    4. ' ' → logprob: -10.423718452453613
    5. ',' → logprob: -11.423718452453613
    6. '   ' → logprob: -12.298718452453613
    7. ' (' → logprob: -12.673718452453613
    8. '       ' → logprob: -14.423718452453613
    9. '=' → logprob: -15.173718452453613
    10. '(
' → logprob: -15.173718452453613

Token 471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00761620607227087
    2. '1' → logprob: -4.88261604309082
    3. ' ' → logprob: -12.25761604309082
    4. 'self' → logprob: -12.25761604309082
    5. '   ' → logprob: -15.75761604309082
    6. 'len' → logprob: -15.75761604309082
    7. '0' → logprob: -16.19511604309082
    8. '(' → logprob: -16.57011604309082
    9. '
' → logprob: -16.94511604309082
    10. '```' → logprob: -17.75761604309082

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011774895247071981
    2. ' ,' → logprob: -6.7511773109436035
    3. ',N' → logprob: -12.376177787780762
    4. ',self' → logprob: -13.876177787780762
    5. '       ' → logprob: -14.126177787780762
    6. ',n' → logprob: -14.876177787780762
    7. ',
' → logprob: -14.876177787780762
    8. '   ' → logprob: -15.626177787780762
    9. ',len' → logprob: -15.626177787780762
    10. '           ' → logprob: -17.126176834106445

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010092071170220152
    2. ' self' → logprob: -9.250101089477539
    3. '
' → logprob: -13.500101089477539
    4. '       ' → logprob: -13.500101089477539
    5. '           ' → logprob: -13.750101089477539
    6. '(self' → logprob: -15.000101089477539
    7. '   ' → logprob: -15.000101089477539
    8. '=self' → logprob: -16.62510108947754
    9. '[self' → logprob: -16.75010108947754
    10. 'N' → logprob: -17.00010108947754

Token 474: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -6.2729995988775045e-06
    2. 'N' → logprob: -12.625006675720215
    3. '.' → logprob: -13.750006675720215
    4. '   ' → logprob: -14.875006675720215
    5. ' .' → logprob: -15.000006675720215
    6. '	N' → logprob: -15.625006675720215
    7. 'self' → logprob: -15.750006675720215
    8. '       ' → logprob: -15.875006675720215
    9. '.n' → logprob: -16.1250057220459
    10. '(N' → logprob: -16.5000057220459

Token 475: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5874371528625488
    2. ' +' → logprob: -1.0874371528625488
    3. '):
' → logprob: -2.337437152862549
    4. '):' → logprob: -4.587437152862549
    5. '   ' → logprob: -8.96243667602539
    6. '       ' → logprob: -9.21243667602539
    7. ' ):
' → logprob: -9.46243667602539
    8. ':' → logprob: -10.96243667602539
    9. ':
' → logprob: -11.33743667602539
    10. ',' → logprob: -11.46243667602539

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.625262260437012
    4. '):
' → logprob: -16.000261306762695
    5. '```' → logprob: -16.125261306762695
    6. ')' → logprob: -16.500261306762695
    7. ',' → logprob: -17.875261306762695
    8. '
' → logprob: -18.000261306762695
    9. '       ' → logprob: -18.562761306762695
    10. '2' → logprob: -18.937761306762695

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.811348480870947e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.62504768371582
    4. '
' → logprob: -14.50004768371582
    5. ')' → logprob: -14.87504768371582
    6. '):
' → logprob: -15.56254768371582
    7. '```' → logprob: -15.81254768371582
    8. '  ' → logprob: -17.43754768371582
    9. '2' → logprob: -17.62504768371582
    10. ',' → logprob: -17.81254768371582

Token 478: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7456983327865601
    2. '):
' → logprob: -0.8706983327865601
    3. ':' → logprob: -2.2456984519958496
    4. ':
' → logprob: -7.12069845199585
    5. '       ' → logprob: -8.870697975158691
    6. '):
' → logprob: -9.370697975158691
    7. ',' → logprob: -10.620697975158691
    8. ')' → logprob: -11.120697975158691
    9. '           ' → logprob: -12.620697975158691
    10. '):

' → logprob: -13.120697975158691

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2267291098833084
    2. '       ' → logprob: -1.726729154586792
    3. ' for' → logprob: -4.851728916168213
    4. 'ch' → logprob: -4.976728916168213
    5. ' if' → logprob: -5.851728916168213
    6. '```' → logprob: -6.101728916168213
    7. ' ch' → logprob: -6.851728916168213
    8. 'for' → logprob: -7.101728916168213
    9. 'self' → logprob: -7.226728916168213
    10. '   ' → logprob: -7.726728916168213

Token 480: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.32363036274909973
    2. 'c' → logprob: -2.8236303329467773
    3. 'char' → logprob: -3.0736303329467773
    4. 'current' → logprob: -3.1986303329467773
    5. 'total' → logprob: -3.5736303329467773
    6. 'prev' → logprob: -3.6986303329467773
    7. '           ' → logprob: -3.9486303329467773
    8. 'curr' → logprob: -4.073630332946777
    9. 'cur' → logprob: -4.323630332946777
    10. 'self' → logprob: -4.323630332946777

Token 481: ' For' (ID: 2214)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.9299300312995911
    2. 'prev' → logprob: -1.9299299716949463
    3. 'current' → logprob: -2.0549299716949463
    4. 'curr' → logprob: -2.4299299716949463
    5. 'c' → logprob: -2.8049299716949463
    6. 'char' → logprob: -2.9299299716949463
    7. 'cur' → logprob: -3.0549299716949463
    8. 'for' → logprob: -3.9299299716949463
    9. 'target' → logprob: -4.179930210113525
    10. 'total' → logprob: -4.429930210113525

Token 482: ' planet' (ID: 17921)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06869903951883316
    2. 'j' → logprob: -3.6936991214752197
    3. ' ch' → logprob: -3.8186991214752197
    4. 'prev' → logprob: -4.818698883056641
    5. 'pos' → logprob: -5.693698883056641
    6. 'c' → logprob: -5.818698883056641
    7. 't' → logprob: -7.068698883056641
    8. ' j' → logprob: -7.193698883056641
    9. 'idx' → logprob: -7.568698883056641
    10. 'char' → logprob: -7.693698883056641

Token 483: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7665033340454102
    2. '_index' → logprob: -2.01650333404541
    3. 't' → logprob: -2.76650333404541
    4. ' t' → logprob: -2.89150333404541
    5. 'ch' → logprob: -3.01650333404541
    6. 's' → logprob: -3.01650333404541
    7. '_idx' → logprob: -3.14150333404541
    8. 'self' → logprob: -3.64150333404541
    9. '_ch' → logprob: -4.01650333404541
    10. ' ch' → logprob: -4.26650333404541

Token 484: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1542302966117859
    2. ',' → logprob: -3.1542303562164307
    3. ':' → logprob: -3.1542303562164307
    4. ' =' → logprob: -3.6542303562164307
    5. 'ch' → logprob: -4.404230117797852
    6. ':
' → logprob: -5.529230117797852
    7. '=' → logprob: -5.654230117797852
    8. 's' → logprob: -6.529230117797852
    9. '       ' → logprob: -6.779230117797852
    10. '_ch' → logprob: -6.904230117797852

Token 485: ' t' (ID: 260)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7219141721725464
    2. 'prev' → logprob: -1.3469141721725464
    3. 'char' → logprob: -2.971914291381836
    4. 'total' → logprob: -3.096914291381836
    5. '           ' → logprob: -3.471914291381836
    6. 'current' → logprob: -3.846914291381836
    7. 'c' → logprob: -3.846914291381836
    8. 't' → logprob: -4.596914291381836
    9. 'for' → logprob: -4.596914291381836
    10. 'cur' → logprob: -4.846914291381836

Token 486: '[i' (ID: 1768)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.3375978171825409
    2. 'ch' → logprob: -1.8375978469848633
    3. '_char' → logprob: -2.2125978469848633
    4. '_i' → logprob: -4.212597846984863
    5. 'char' → logprob: -6.462597846984863
    6. 'i' → logprob: -6.962597846984863
    7. 'c' → logprob: -8.337597846984863
    8. '[i' → logprob: -9.337597846984863
    9. '_c' → logprob: -9.462597846984863
    10. '_chr' → logprob: -10.087597846984863

Token 487: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.290021687746048
    2. '[i' → logprob: -1.4150216579437256
    3. ' -' → logprob: -5.665021896362305
    4. ']' → logprob: -6.165021896362305
    5. '[' → logprob: -6.290021896362305
    6. 'i' → logprob: -6.790021896362305
    7. ' i' → logprob: -9.790021896362305
    8. '][' → logprob: -10.415021896362305
    9. '   ' → logprob: -10.540021896362305
    10. '```' → logprob: -10.540021896362305

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013142230920493603
    2. '-' → logprob: -4.513142108917236
    3. 'i' → logprob: -6.388142108917236
    4. ' ' → logprob: -8.513142585754395
    5. ']' → logprob: -9.388142585754395
    6. '2' → logprob: -9.888142585754395
    7. '   ' → logprob: -10.513142585754395
    8. ' -' → logprob: -11.263142585754395
    9. '```' → logprob: -11.388142585754395
    10. '  ' → logprob: -11.763142585754395

Token 489: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03288213163614273
    2. '])' → logprob: -4.907882213592529
    3. '[' → logprob: -5.032882213592529
    4. '-' → logprob: -5.032882213592529
    5. '[i' → logprob: -5.407882213592529
    6. '_ch' → logprob: -6.157882213592529
    7. '[-' → logprob: -6.782882213592529
    8. '],' → logprob: -7.407882213592529
    9. '[ch' → logprob: -7.532882213592529
    10. '][' → logprob: -7.907882213592529

Token 490: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2143130600452423
    2. '=' → logprob: -2.08931303024292
    3. '_ch' → logprob: -3.21431303024292
    4. 'ch' → logprob: -4.21431303024292
    5. '_char' → logprob: -4.33931303024292
    6. 'char' → logprob: -7.46431303024292
    7. '_letter' → logprob: -8.964313507080078
    8. '   ' → logprob: -9.464313507080078
    9. '_chars' → logprob: -9.964313507080078
    10. 'c' → logprob: -10.214313507080078

Token 491: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3737836480140686
    2. ' self' → logprob: -1.6237835884094238
    3. 't' → logprob: -2.873783588409424
    4. ' the' → logprob: -3.373783588409424
    5. ' t' → logprob: -4.873783588409424
    6. 'the' → logprob: -4.998783588409424
    7. 's' → logprob: -5.373783588409424
    8. 'target' → logprob: -6.498783588409424
    9. ' s' → logprob: -7.248783588409424
    10. ' target' → logprob: -7.498783588409424

Token 492: ' exit' (ID: 10654)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.20096491277217865
    2. 'character' → logprob: -2.82596492767334
    3. 'destination' → logprob: -3.57596492767334
    4. 'ch' → logprob: -3.70096492767334
    5. 'letter' → logprob: -3.95096492767334
    6. ' target' → logprob: -4.20096492767334
    7. 'char' → logprob: -4.57596492767334
    8. 'current' → logprob: -4.82596492767334
    9. ' character' → logprob: -5.70096492767334
    10. 'desired' → logprob: -5.70096492767334

Token 493: ' letter' (ID: 10263)
  Prédit: '_letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.27124178409576416
    2. ' letter' → logprob: -2.6462416648864746
    3. '_' → logprob: -3.2712416648864746
    4. '_char' → logprob: -3.5212416648864746
    5. ']' → logprob: -3.7712416648864746
    6. 'letter' → logprob: -3.8962416648864746
    7. '_ch' → logprob: -4.271241664886475
    8. '[' → logprob: -4.396241664886475
    9. ' character' → logprob: -5.521241664886475
    10. '_character' → logprob: -5.646241664886475

Token 494: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036350544542074203
    2. ' =' → logprob: -3.7863504886627197
    3. ':' → logprob: -5.286350727081299
    4. ',' → logprob: -5.536350727081299
    5. '=' → logprob: -7.161350727081299
    6. '            
' → logprob: -8.03635025024414
    7. '   ' → logprob: -8.03635025024414
    8. '       ' → logprob: -8.03635025024414
    9. 'ch' → logprob: -8.03635025024414
    10. '<|end|>' → logprob: -8.53635025024414

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010392199270427227
    2. 'ch' → logprob: -4.760392189025879
    3. ' ch' → logprob: -7.385392189025879
    4. ',' → logprob: -8.885392189025879
    5. '       ' → logprob: -9.260392189025879
    6. '   ' → logprob: -9.385392189025879
    7. 'prev' → logprob: -9.385392189025879
    8. 'token' → logprob: -9.510392189025879
    9. 'char' → logprob: -9.635392189025879
    10. 'tokens' → logprob: -10.135392189025879

Token 496: ' exit' (ID: 10654)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16872532665729523
    2. 'prev' → logprob: -2.7937252521514893
    3. 'exit' (adapté à ' exit') → logprob: -2.9187252521514893
    4. 'char' → logprob: -5.293725490570068
    5. 'target' → logprob: -5.293725490570068
    6. 'c' → logprob: -5.418725490570068
    7. 'letter' → logprob: -5.793725490570068
    8. '           ' → logprob: -5.918725490570068
    9. 't' → logprob: -6.043725490570068
    10. ' ch' → logprob: -6.168725490570068

Token 497: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.6395176649093628
    2. '_char' → logprob: -1.0145176649093628
    3. '_ch' → logprob: -2.6395177841186523
    4. ' =' → logprob: -3.2645177841186523
    5. '=' → logprob: -9.264517784118652
    6. '_le' → logprob: -10.264517784118652
    7. '_chr' → logprob: -10.764517784118652
    8. '_letters' → logprob: -10.764517784118652
    9. '_index' → logprob: -11.014517784118652
    10. '_' → logprob: -11.389517784118652

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033646851778030396
    2. '=' → logprob: -3.408646821975708
    3. ' ' → logprob: -14.033646583557129
    4. ',' → logprob: -15.408646583557129
    5. '   ' → logprob: -16.783647537231445
    6. '  ' → logprob: -17.283647537231445
    7. ' ' → logprob: -17.783647537231445
    8. 's' → logprob: -17.908647537231445
    9. ':' → logprob: -18.158647537231445
    10. ')' → logprob: -18.158647537231445

Token 499: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859304800629616
    2. ' self' → logprob: -3.048593044281006
    3. '           ' → logprob: -12.548593521118164
    4. '       ' → logprob: -14.423593521118164
    5. '(self' → logprob: -14.798593521118164
    6. '	self' → logprob: -15.173593521118164
    7. '=self' → logprob: -15.798593521118164
    8. 's' → logprob: -16.048593521118164
    9. '   ' → logprob: -16.048593521118164
    10. '
' → logprob: -16.298593521118164

Token 500: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00012642296496778727
    2. 't' → logprob: -9.000126838684082
    3. '.' → logprob: -13.250126838684082
    4. '	t' → logprob: -13.875126838684082
    5. ' .' → logprob: -15.625126838684082
    6. ' t' → logprob: -16.750125885009766
    7. '.s' → logprob: -17.250125885009766
    8. 'self' → logprob: -18.625125885009766
    9. '   ' → logprob: -19.000125885009766
    10. 's' → logprob: -19.000125885009766

Token 501: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. '[' → logprob: -11.875014305114746
    3. '[self' → logprob: -13.125014305114746
    4. '[
' → logprob: -13.250014305114746
    5. ' [' → logprob: -14.250014305114746
    6. '           ' → logprob: -14.375014305114746
    7. '```' → logprob: -14.625014305114746
    8. 'i' → logprob: -14.750014305114746
    9. '
' → logprob: -15.250014305114746
    10. '   ' → logprob: -15.625014305114746

Token 502: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03335750475525856
    2. '[i' → logprob: -3.533357620239258
    3. '[' → logprob: -6.283357620239258
    4. ' -' → logprob: -6.533357620239258
    5. 'i' → logprob: -8.533357620239258
    6. '[-' → logprob: -10.533357620239258
    7. '1' → logprob: -11.033357620239258
    8. '-i' → logprob: -11.283357620239258
    9. ']' → logprob: -11.908357620239258
    10. '   ' → logprob: -12.408357620239258

Token 503: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '2' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.250011444091797
    4. '   ' → logprob: -14.750011444091797
    5. '```' → logprob: -16.500011444091797
    6. '           ' → logprob: -17.125011444091797
    7. '       ' → logprob: -18.500011444091797
    8. 'i' → logprob: -18.875011444091797
    9. '  ' → logprob: -19.250011444091797
    10. '`' → logprob: -19.625011444091797

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.070975071750581e-05
    2. '2' → logprob: -10.500030517578125
    3. ' ' → logprob: -13.000030517578125
    4. '   ' → logprob: -14.875030517578125
    5. 'i' → logprob: -15.437530517578125
    6. '```' → logprob: -15.562530517578125
    7. '۱' → logprob: -17.937530517578125
    8. '
' → logprob: -17.937530517578125
    9. '       ' → logprob: -18.125030517578125
    10. '           ' → logprob: -18.187530517578125

Token 505: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6219226717948914
    2. ']' → logprob: -0.8719226717948914
    3. ']
' → logprob: -3.871922731399536
    4. ')
' → logprob: -3.996922731399536
    5. '           ' → logprob: -5.371922492980957
    6. '])' → logprob: -7.621922492980957
    7. ')]' → logprob: -8.121922492980957
    8. ' )' → logprob: -9.496922492980957
    9. '       ' → logprob: -9.996922492980957
    10. ' ]' → logprob: -10.621922492980957

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46268120408058167
    2. '
' → logprob: -1.0876811742782593
    3. '<|end|>' → logprob: -4.462681293487549
    4. '            
' → logprob: -4.962681293487549
    5. '```' → logprob: -5.087681293487549
    6. '       ' → logprob: -6.587681293487549
    7. 's' → logprob: -6.962681293487549
    8. ',' → logprob: -7.087681293487549
    9. 'indices' → logprob: -7.837681293487549
    10. ' =' → logprob: -7.837681293487549

Token 507: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0724517107009888
    2. 'res' → logprob: -2.072451591491699
    3. 'prev' → logprob: -2.072451591491699
    4. 'result' → logprob: -2.197451591491699
    5. 'ans' → logprob: -2.697451591491699
    6. 'dp' → logprob: -3.197451591491699
    7. '           ' → logprob: -3.197451591491699
    8. 'self' → logprob: -3.572451591491699
    9. 'answer' → logprob: -3.697451591491699
    10. 'ways' → logprob: -3.697451591491699

Token 508: ' For' (ID: 2214)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.27593618631362915
    2. 'total' → logprob: -2.6509361267089844
    3. 'result' → logprob: -3.5259361267089844
    4. 'prev' → logprob: -3.9009361267089844
    5. 'positions' → logprob: -4.150936126708984
    6. 'possible' → logprob: -4.275936126708984
    7. 'start' → logprob: -4.275936126708984
    8. 'dp' → logprob: -4.525936126708984
    9. 'for' → logprob: -4.650936126708984
    10. 'res' → logprob: -4.775936126708984

Token 509: ' all' (ID: 722)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.1363922357559204
    2. 'prev' → logprob: -2.011392116546631
    3. 'start' → logprob: -2.136392116546631
    4. 'ch' → logprob: -2.136392116546631
    5. 'idx' → logprob: -2.761392116546631
    6. ' indices' → logprob: -2.886392116546631
    7. 'index' → logprob: -3.261392116546631
    8. ' idx' → logprob: -3.886392116546631
    9. 'pos' → logprob: -3.886392116546631
    10. ' ch' → logprob: -4.011392116546631

Token 510: ' entrances' (ID: 171105)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4271828532218933
    2. ' indices' → logprob: -2.052182912826538
    3. 'start' → logprob: -2.802182912826538
    4. 'positions' → logprob: -3.052182912826538
    5. 'entry' → logprob: -3.677182912826538
    6. 'ch' → logprob: -3.802182912826538
    7. ' positions' → logprob: -4.677182674407959
    8. 'entr' → logprob: -4.927182674407959
    9. ' start' → logprob: -5.052182674407959
    10. ' ch' → logprob: -5.052182674407959

Token 511: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2758038341999054
    2. ' =' → logprob: -1.650803804397583
    3. 'in' → logprob: -3.900803804397583
    4. '=' → logprob: -4.900804042816162
    5. '_letter' → logprob: -5.275804042816162
    6. '_in' → logprob: -5.400804042816162
    7. '           ' → logprob: -6.275804042816162
    8. '_ch' → logprob: -6.400804042816162
    9. '_indices' → logprob: -6.400804042816162
    10. 'ch' → logprob: -6.900804042816162

Token 512: ' s' (ID: 265)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.02554793655872345
    2. ' exit' → logprob: -3.900547981262207
    3. 'self' → logprob: -6.025547981262207
    4. ' that' → logprob: -7.400547981262207
    5. 'indices' → logprob: -7.775547981262207
    6. 'index' → logprob: -8.150547981262207
    7. 'the' → logprob: -8.275547981262207
    8. ' the' → logprob: -8.525547981262207
    9. 'that' → logprob: -8.650547981262207
    10. 'this' → logprob: -8.900547981262207

Token 513: '_j' (ID: 12021)
  Prédit: '_mapper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mapper' → logprob: -0.7110812664031982
    2. '[' → logprob: -1.3360812664031982
    3. '=' → logprob: -2.3360812664031982
    4. '==' → logprob: -3.2110812664031982
    5. ' =' → logprob: -4.461081504821777
    6. 'exit' → logprob: -4.586081504821777
    7. '_mapping' → logprob: -4.836081504821777
    8. '_map' → logprob: -5.211081504821777
    9. ' ==' → logprob: -5.336081504821777
    10. 'indices' → logprob: -5.586081504821777

Token 514: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07927089929580688
    2. '==' → logprob: -2.829270839691162
    3. '[' → logprob: -5.454270839691162
    4. ' =' → logprob: -5.579270839691162
    5. '=' → logprob: -5.829270839691162
    6. ' in' → logprob: -6.329270839691162
    7. ' <=' → logprob: -6.579270839691162
    8. ' equal' → logprob: -6.829270839691162
    9. 'equal' → logprob: -8.20427131652832
    10. ' <' → logprob: -8.57927131652832

Token 515: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.07894949615001678
    2. ' exit' → logprob: -2.578949451446533
    3. '(exit' → logprob: -11.078949928283691
    4. '_exit' → logprob: -11.828949928283691
    5. 't' → logprob: -12.203949928283691
    6. '
' → logprob: -12.203949928283691
    7. '           ' → logprob: -12.453949928283691
    8. 's' → logprob: -12.578949928283691
    9. '	exit' → logprob: -12.703949928283691
    10. 'self' → logprob: -12.953949928283691

Token 516: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.00010139751975657418
    2. 'letter' → logprob: -9.250101089477539
    3. '_' → logprob: -13.000101089477539
    4. '_letters' → logprob: -13.375101089477539
    5. '```' → logprob: -14.750101089477539
    6. ' letter' → logprob: -15.500101089477539
    7. 's' → logprob: -15.625101089477539
    8. '=' → logprob: -15.750101089477539
    9. 'Letter' → logprob: -16.50010108947754
    10. ' =' → logprob: -16.75010108947754

Token 517: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5471420884132385
    2. ':' → logprob: -1.5471420288085938
    3. ',' → logprob: -2.2971420288085938
    4. ':
' → logprob: -2.9221420288085938
    5. 'indices' → logprob: -3.4221420288085938
    6. '_indices' → logprob: -5.672142028808594
    7. ' =' → logprob: -5.672142028808594
    8. ' indices' → logprob: -5.797142028808594
    9. '):
' → logprob: -6.422142028808594
    10. '
' → logprob: -6.797142028808594

Token 518: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1243524551391602
    2. 'index' → logprob: -1.2493524551391602
    3. 'indices' → logprob: -2.37435245513916
    4. ' index' → logprob: -2.49935245513916
    5. ' indices' → logprob: -2.62435245513916
    6. ' j' → logprob: -2.74935245513916
    7. 's' → logprob: -3.12435245513916
    8. ' s' → logprob: -4.12435245513916
    9. 'exit' → logprob: -6.37435245513916
    10. ' all' → logprob: -6.93685245513916

Token 519: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13702704012393951
    2. '<' → logprob: -2.1370270252227783
    3. ' in' → logprob: -5.762027263641357
    4. '<i' → logprob: -6.137027263641357
    5. '=' → logprob: -6.637027263641357
    6. '<s' → logprob: -7.512027263641357
    7. ')' → logprob: -8.0120267868042
    8. 's' → logprob: -8.3870267868042
    9. ' <=' → logprob: -8.3870267868042
    10. '<n' → logprob: -8.5120267868042

Token 520: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015087933279573917
    2. ' i' → logprob: -6.501508712768555
    3. '=i' → logprob: -12.626508712768555
    4. '=' → logprob: -13.376508712768555
    5. '	i' → logprob: -14.626508712768555
    6. '   ' → logprob: -15.001508712768555
    7. '
' → logprob: -15.501508712768555
    8. ' =' → logprob: -15.751508712768555
    9. '           ' → logprob: -15.876508712768555
    10. ')' → logprob: -16.751508712768555

Token 521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8244413137435913
    2. ',' → logprob: -1.4494413137435913
    3. ':' → logprob: -1.8244413137435913
    4. 'indices' → logprob: -2.449441432952881
    5. ':
' → logprob: -3.074441432952881
    6. ' indices' → logprob: -5.324441432952881
    7. '
' → logprob: -5.449441432952881
    8. '(indices' → logprob: -5.574441432952881
    9. '<|end|>' → logprob: -5.574441432952881
    10. '<|end|>' → logprob: -5.574441432952881

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1811889261007309
    2. ',' → logprob: -1.931188941001892
    3. ':' → logprob: -4.056189060211182
    4. '<|end|>' → logprob: -7.056189060211182
    5. '
' → logprob: -7.681189060211182
    6. ':
' → logprob: -8.056188583374023
    7. '<|end|>' → logprob: -8.056188583374023
    8. '            
' → logprob: -8.431188583374023
    9. ',
' → logprob: -8.806188583374023
    10. ')' → logprob: -9.056188583374023

Token 523: ' fen' (ID: 25170)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4081563353538513
    2. 'total' → logprob: -2.158156394958496
    3. 'result' → logprob: -2.908156394958496
    4. 'res' → logprob: -3.283156394958496
    5. 'prev' → logprob: -3.408156394958496
    6. 'sum' → logprob: -3.658156394958496
    7. 'for' → logprob: -4.033156394958496
    8. 'ways' → logprob: -4.658156394958496
    9. 'ans' → logprob: -4.783156394958496
    10. 'dp' → logprob: -5.158156394958496

Token 524: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.24155479669570923
    2. ' =' → logprob: -1.8665547370910645
    3. 'wick' → logprob: -3.2415547370910645
    4. '=' → logprob: -4.1165547370910645
    5. '       ' → logprob: -7.1165547370910645
    6. '   ' → logprob: -7.1165547370910645
    7. '    ' → logprob: -8.241555213928223
    8. ' ' → logprob: -8.241555213928223
    9. 'wik' → logprob: -8.741555213928223
    10. '_w' → logprob: -8.929055213928223

Token 525: ' =' (ID: 314)
  Prédit: 'icks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.005278703290969133
    2. 'w' → logprob: -5.255278587341309
    3. '
' → logprob: -11.255278587341309
    4. 'r' → logprob: -12.130278587341309
    5. 'cks' → logprob: -12.130278587341309
    6. 'ick' → logprob: -12.380278587341309
    7. 'ic' → logprob: -12.505278587341309
    8. 'e' → logprob: -13.255278587341309
    9. '[' → logprob: -13.505278587341309
    10. '   ' → logprob: -13.755278587341309

Token 526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007379194721579552
    2. ' self' → logprob: -7.250738143920898
    3. 'elf' → logprob: -10.875738143920898
    4. '           ' → logprob: -12.375738143920898
    5. 's' → logprob: -13.625738143920898
    6. '=self' → logprob: -13.625738143920898
    7. '(self' → logprob: -14.375738143920898
    8. '[self' → logprob: -14.750738143920898
    9. '
' → logprob: -15.000738143920898
    10. '	self' → logprob: -15.750738143920898

Token 527: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.12500286102295
    3. 'f' → logprob: -15.37500286102295
    4. 'fen' → logprob: -15.62500286102295
    5. ' .' → logprob: -15.87500286102295
    6. '.s' → logprob: -16.125001907348633
    7. '	f' → logprob: -16.500001907348633
    8. 's' → logprob: -17.750001907348633
    9. '.F' → logprob: -17.875001907348633
    10. 'self' → logprob: -17.875001907348633

Token 528: 'en' (ID: 262)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.020719151943922043
    2. 'en' → logprob: -3.895719051361084
    3. 'ew' → logprob: -9.270719528198242
    4. 'e' → logprob: -9.770719528198242
    5. 'n' → logprob: -11.020719528198242
    6. '
' → logprob: -12.895719528198242
    7. '[' → logprob: -13.520719528198242
    8. 'icks' → logprob: -14.145719528198242
    9. '_w' → logprob: -14.645719528198242
    10. 'ow' → logprob: -14.895719528198242

Token 529: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.2127087504486553e-05
    2. 'icks' → logprob: -10.750021934509277
    3. 'wick' → logprob: -16.125022888183594
    4. '
' → logprob: -16.375022888183594
    5. 'v' → logprob: -17.000022888183594
    6. ' w' → logprob: -17.125022888183594
    7. 'f' → logprob: -17.250022888183594
    8. '\' → logprob: -17.375022888183594
    9. 'winds' → logprob: -17.375022888183594
    10. '[' → logprob: -17.875022888183594

Token 530: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0059761968441307545
    2. 'cks' → logprob: -5.13097620010376
    3. 's' → logprob: -10.880975723266602
    4. 'w' → logprob: -11.755975723266602
    5. '
' → logprob: -12.005975723266602
    6. 'ocks' → logprob: -13.005975723266602
    7. '[' → logprob: -13.380975723266602
    8. 'r' → logprob: -13.380975723266602
    9. 'ks' → logprob: -14.005975723266602
    10. '

' → logprob: -14.005975723266602

Token 531: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.12055293470621109
    2. '[' → logprob: -2.2455530166625977
    3. ' =' → logprob: -5.370553016662598
    4. 'get' → logprob: -6.120553016662598
    5. '_exit' → logprob: -8.370553016662598
    6. 'exit' → logprob: -8.745553016662598
    7. '[self' → logprob: -8.995553016662598
    8. '=' → logprob: -9.245553016662598
    9. '.setdefault' → logprob: -9.495553016662598
    10. 's' → logprob: -10.620553016662598

Token 532: '(exit' (ID: 187799)
  Prédit: '(exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exit' → logprob: -1.676292231422849e-05
    2. 'exit' → logprob: -11.000017166137695
    3. '(ex' → logprob: -18.500017166137695
    4. '(entry' → logprob: -19.250017166137695
    5. '(exc' → logprob: -19.250017166137695
    6. '(f' → logprob: -19.375017166137695
    7. ' exit' → logprob: -19.500017166137695
    8. '(EXIT' → logprob: -19.875017166137695
    9. '	exit' → logprob: -20.375017166137695
    10. '(export' → logprob: -20.750017166137695

Token 533: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -8.895480277715251e-06
    2. 'letter' → logprob: -12.125008583068848
    3. '[' → logprob: -13.000008583068848
    4. '_' → logprob: -15.000008583068848
    5. '_letters' → logprob: -15.250008583068848
    6. '[_' → logprob: -16.375009536743164
    7. 'Letter' → logprob: -16.500009536743164
    8. '```' → logprob: -16.500009536743164
    9. '(letter' → logprob: -17.000009536743164
    10. '_l' → logprob: -17.250009536743164

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6341403126716614
    2. ')
' → logprob: -0.7591403126716614
    3. '           ' → logprob: -6.759140491485596
    4. ',' → logprob: -8.634140014648438
    5. '       ' → logprob: -10.009140014648438
    6. ' )
' → logprob: -10.134140014648438
    7. '):
' → logprob: -10.384140014648438
    8. ' )' → logprob: -10.509140014648438
    9. ')
' → logprob: -11.009140014648438
    10. '
' → logprob: -12.134140014648438

Token 535: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35156962275505066
    2. '           ' → logprob: -2.351569652557373
    3. '<|end|>' → logprob: -2.351569652557373
    4. '       ' → logprob: -3.351569652557373
    5. 'if' → logprob: -4.101569652557373
    6. ':' → logprob: -4.726569652557373
    7. ' and' → logprob: -4.976569652557373
    8. '[' → logprob: -5.226569652557373
    9. '<|end|>' → logprob: -5.351569652557373
    10. ',' → logprob: -5.351569652557373

Token 536: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2345234751701355
    2. 'if' (adapté à ' if') → logprob: -1.8595235347747803
    3. '           ' → logprob: -3.3595235347747803
    4. '       ' → logprob: -5.234523296356201
    5. ' 
' → logprob: -5.984523296356201
    6. ' ' → logprob: -6.109523296356201
    7. '<|end|>' → logprob: -6.109523296356201
    8. '  
' → logprob: -6.609523296356201
    9. '
' → logprob: -6.734523296356201
    10. '   ' → logprob: -7.109523296356201

Token 537: ' fen' (ID: 25170)
  Prédit: ' fen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.0009117019944824278
    2. 'fen' → logprob: -7.000911712646484
    3. ' not' → logprob: -16.500911712646484
    4. '           ' → logprob: -17.500911712646484
    5. '   ' → logprob: -17.625911712646484
    6. '    ' → logprob: -19.000911712646484
    7. '       ' → logprob: -19.000911712646484
    8. ' None' → logprob: -19.625911712646484
    9. 'Fen' → logprob: -19.625911712646484
    10. 'None' → logprob: -19.750911712646484

Token 538: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.696889623621246e-06
    2. '_w' → logprob: -13.25000286102295
    3. '_' → logprob: -15.00000286102295
    4. '\' → logprob: -16.375001907348633
    5. 'wik' → logprob: -16.750001907348633
    6. '=' → logprob: -17.000001907348633
    7. 'W' → logprob: -17.125001907348633
    8. '	w' → logprob: -17.375001907348633
    9. ' w' → logprob: -17.500001907348633
    10. ')' → logprob: -17.875001907348633

Token 539: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16529707610607147
    2. 'is' → logprob: -1.915297031402588
    3. ':' → logprob: -5.290297031402588
    4. ':
' → logprob: -11.540297508239746
    5. ')' → logprob: -12.165297508239746
    6. '	is' → logprob: -13.165297508239746
    7. ' ' → logprob: -14.040297508239746
    8. '=' → logprob: -14.665297508239746
    9. ')is' → logprob: -15.165297508239746
    10. 'not' → logprob: -15.290297508239746

Token 540: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.029888061806559563
    2. 'None' → logprob: -3.654888153076172
    3. ' not' → logprob: -5.654888153076172
    4. ' None' → logprob: -9.529888153076172
    5. 'none' → logprob: -12.029888153076172
    6. 'Not' → logprob: -14.154888153076172
    7. '	not' → logprob: -14.654888153076172
    8. '   ' → logprob: -15.154888153076172
    9. '=None' → logprob: -15.654888153076172
    10. '
' → logprob: -16.279888153076172

Token 541: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3988500237464905
    2. ':
' → logprob: -1.3988499641418457
    3. '               ' → logprob: -2.5238499641418457
    4. ' or' → logprob: -7.273849964141846
    5. '           ' → logprob: -7.273849964141846
    6. ':return' → logprob: -8.273850440979004
    7. ',' → logprob: -9.773850440979004
    8. ' and' → logprob: -10.023850440979004
    9. '                   ' → logprob: -10.273850440979004
    10. '                       ' → logprob: -10.773850440979004

Token 542: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045188379590399563
    2. 'self' → logprob: -8.875452041625977
    3. 'continue' → logprob: -9.375452041625977
    4. '           ' → logprob: -9.750452041625977
    5. ' continue' → logprob: -9.875452041625977
    6. ' self' → logprob: -10.500452041625977
    7. '                
' → logprob: -10.750452041625977
    8. '   ' → logprob: -11.250452041625977
    9. '                   ' → logprob: -11.500452041625977
    10. '```' → logprob: -12.375452041625977

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3910062313079834
    2. '               ' → logprob: -1.3910062313079834
    3. 'continue' → logprob: -3.5160062313079834
    4. ' self' → logprob: -3.7660062313079834
    5. '   ' → logprob: -4.1410064697265625
    6. ' continue' → logprob: -5.7660064697265625
    7. '           ' → logprob: -6.5160064697265625
    8. '                   ' → logprob: -6.7660064697265625
    9. '	self' → logprob: -9.391006469726562
    10. ' ' → logprob: -9.891006469726562

Token 544: '.dp' (ID: 77268)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8406797647476196
    2. '.dp' → logprob: -0.8406797647476196
    3. ' continue' → logprob: -2.59067964553833
    4. '           ' → logprob: -3.21567964553833
    5. 'dp' → logprob: -4.59067964553833
    6. ' dp' → logprob: -5.84067964553833
    7. '               ' → logprob: -5.96567964553833
    8. '	dp' → logprob: -6.71567964553833
    9. 'return' → logprob: -7.09067964553833
    10. '       ' → logprob: -7.34067964553833

Token 545: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '.append' → logprob: -16.25
    4. 'i' → logprob: -17.25
    5. '```' → logprob: -18.125
    6. '
' → logprob: -18.25
    7. ' [' → logprob: -18.375
    8. ' =' → logprob: -18.875
    9. '[
' → logprob: -19.0
    10. '   ' → logprob: -19.0

Token 546: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47500550746917725
    2. ' =' → logprob: -0.9750055074691772
    3. ']' → logprob: -7.100005626678467
    4. ')' → logprob: -9.725005149841309
    5. ']=' → logprob: -10.725005149841309
    6. ',' → logprob: -12.225005149841309
    7. ' +=' → logprob: -12.975005149841309
    8. '[' → logprob: -12.975005149841309
    9. 'continue' → logprob: -13.350005149841309
    10. ' ' → logprob: -13.475005149841309

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804252669215202
    2. ' =' → logprob: -3.2880425453186035
    3. '+=' → logprob: -14.038042068481445
    4. ' +=' → logprob: -16.038042068481445
    5. ',' → logprob: -16.163042068481445
    6. '[' → logprob: -17.038042068481445
    7. ' ' → logprob: -17.038042068481445
    8. '.=' → logprob: -17.913042068481445
    9. '   ' → logprob: -18.413042068481445
    10. '.append' → logprob: -18.788042068481445

Token 548: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.5
    4. '۰' → logprob: -19.75
    5. '000' → logprob: -20.125
    6. '00' → logprob: -20.75
    7. '           ' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '                   ' → logprob: -21.9375
    10. '               ' → logprob: -22.0

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '000' → logprob: -18.125
    4. '۰' → logprob: -19.125
    5. '00' → logprob: -19.625
    6. '   ' → logprob: -19.75
    7. '```' → logprob: -20.625
    8. '০' → logprob: -21.25
    9. '  ' → logprob: -21.3125
    10. '           ' → logprob: -21.4375

Token 550: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20751209557056427
    2. '               ' → logprob: -1.9575121402740479
    3. '
' → logprob: -3.332512140274048
    4. 'else' → logprob: -5.457511901855469
    5. 'continue' → logprob: -5.707511901855469
    6. '<|end|>' → logprob: -7.082511901855469
    7. ' else' → logprob: -7.457511901855469
    8. '\n' → logprob: -8.332511901855469
    9. '       ' → logprob: -8.332511901855469
    10. ' continue' → logprob: -8.457511901855469

Token 551: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1203141063451767
    2. '               ' → logprob: -2.495314121246338
    3. 'else' → logprob: -3.870314121246338
    4. 'continue' → logprob: -5.495314121246338
    5. ' else' → logprob: -5.870314121246338
    6. '       ' → logprob: -6.495314121246338
    7. '                   ' → logprob: -7.870314121246338
    8. ' continue' → logprob: -8.12031364440918
    9. '   ' → logprob: -8.37031364440918
    10. '	continue' → logprob: -9.24531364440918

Token 552: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.020473213866353035
    2. '               ' → logprob: -4.020473003387451
    3. ' continue' → logprob: -6.395473003387451
    4. '           ' → logprob: -7.395473003387451
    5. '	continue' → logprob: -10.77047348022461
    6. 'else' → logprob: -11.89547348022461
    7. 'contin' → logprob: -12.89547348022461
    8. '   ' → logprob: -13.52047348022461
    9. '_continue' → logprob: -13.52047348022461
    10. '                   ' → logprob: -13.52047348022461

Token 553: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010971187148243189
    2. '            
' → logprob: -7.751097202301025
    3. 'fen' → logprob: -8.501096725463867
    4. '       ' → logprob: -8.876096725463867
    5. '
' → logprob: -9.251096725463867
    6. '```' → logprob: -10.126096725463867
    7. '    
' → logprob: -10.376096725463867
    8. 'else' → logprob: -10.376096725463867
    9. '        
' → logprob: -11.251096725463867
    10. '  
' → logprob: -11.501096725463867

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06711059808731079
    2. '       ' → logprob: -2.942110538482666
    3. '```' → logprob: -5.317110538482666
    4. ')' → logprob: -6.442110538482666
    5. ' fen' → logprob: -6.817110538482666
    6. '   ' → logprob: -6.942110538482666
    7. 'fen' → logprob: -6.942110538482666
    8. '               ' → logprob: -7.442110538482666
    9. '            
' → logprob: -8.317111015319824
    10. 'for' → logprob: -8.692111015319824

Token 555: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3906123638153076
    2. 'sum' → logprob: -1.7656123638153076
    3. 'left' → logprob: -3.6406123638153076
    4. 'pos' → logprob: -3.7656123638153076
    5. ' sum' → logprob: -4.015612602233887
    6. 'self' → logprob: -4.515612602233887
    7. 'dp' → logprob: -4.890612602233887
    8. 'prev' → logprob: -5.015612602233887
    9. 'idx' → logprob: -5.140612602233887
    10. 'count' → logprob: -5.140612602233887

Token 556: ' sum' (ID: 4215)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.1259907484054565
    2. 'left' → logprob: -1.6259907484054565
    3. 'total' → logprob: -2.000990867614746
    4. 'self' → logprob: -2.375990867614746
    5. 'sum' → logprob: -2.500990867614746
    6. '#' → logprob: -2.875990867614746
    7. 'prefix' → logprob: -3.375990867614746
    8. 'prev' → logprob: -4.250990867614746
    9. 'idx' → logprob: -4.375990867614746
    10. 'dp' → logprob: -4.500990867614746

Token 557: ' dp' (ID: 21546)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5210581421852112
    2. '_' → logprob: -1.2710580825805664
    3. '_value' → logprob: -3.6460580825805664
    4. ' =' → logprob: -3.8960580825805664
    5. '_to' → logprob: -4.146058082580566
    6. '_up' → logprob: -4.146058082580566
    7. '_query' → logprob: -4.646058082580566
    8. '_prev' → logprob: -4.896058082580566
    9. '_dp' → logprob: -5.146058082580566
    10. '_until' → logprob: -5.521058082580566

Token 558: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1353026628494263
    2. '_i' → logprob: -1.2603026628494263
    3. ' =' → logprob: -1.7603026628494263
    4. '_value' → logprob: -3.1353025436401367
    5. '(i' → logprob: -3.1353025436401367
    6. '_query' → logprob: -3.6353025436401367
    7. '_up' → logprob: -3.6353025436401367
    8. '_val' → logprob: -4.260302543640137
    9. '_before' → logprob: -4.260302543640137
    10. '=' → logprob: -4.385302543640137

Token 559: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3691233694553375
    2. ')' → logprob: -2.1191234588623047
    3. ' =' → logprob: -2.9941234588623047
    4. '=' → logprob: -3.1191234588623047
    5. ' for' → logprob: -4.119123458862305
    6. ' fen' → logprob: -4.244123458862305
    7. 'for' → logprob: -4.369123458862305
    8. '(' → logprob: -4.619123458862305
    9. ' ,' → logprob: -5.369123458862305
    10. 'query' → logprob: -5.619123458862305

Token 560: ' over' (ID: 1072)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08916693925857544
    2. '=' → logprob: -2.4641668796539307
    3. ')' → logprob: -9.464166641235352
    4. '           ' → logprob: -10.339166641235352
    5. 'from' → logprob: -10.714166641235352
    6. ' ' → logprob: -11.589166641235352
    7. '(' → logprob: -11.714166641235352
    8. '[' → logprob: -11.964166641235352
    9. 'for' → logprob: -11.964166641235352
    10. ',' → logprob: -11.964166641235352

Token 561: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.27184510231018066
    2. 'range' → logprob: -1.8968451023101807
    3. ' j' → logprob: -3.5218451023101807
    4. '1' → logprob: -3.6468451023101807
    5. ' range' → logprob: -3.6468451023101807
    6. 'all' → logprob: -6.271844863891602
    7. '[' → logprob: -6.521844863891602
    8. ' ' → logprob: -7.271844863891602
    9. ' all' → logprob: -7.896844863891602
    10. '[j' → logprob: -7.896844863891602

Token 562: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12350083142518997
    2. ' in' → logprob: -2.7485008239746094
    3. ' =' → logprob: -4.373500823974609
    4. ' <' → logprob: -4.498500823974609
    5. '<' → logprob: -4.623500823974609
    6. ',' → logprob: -5.373500823974609
    7. 'from' → logprob: -5.748500823974609
    8. 'in' → logprob: -5.873500823974609
    9. ')' → logprob: -5.998500823974609
    10. '[' → logprob: -6.748500823974609

Token 563: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023247575387358665
    2. ' i' → logprob: -3.773247480392456
    3. '=i' → logprob: -14.398247718811035
    4. 'index' → logprob: -14.648247718811035
    5. '           ' → logprob: -15.023247718811035
    6. '	i' → logprob: -15.523247718811035
    7. '_i' → logprob: -15.898247718811035
    8. '   ' → logprob: -16.02324676513672
    9. '                   ' → logprob: -16.14824676513672
    10. ' index' → logprob: -16.89824676513672

Token 564: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26134926080703735
    2. '           ' → logprob: -1.7613492012023926
    3. '=' → logprob: -3.6363492012023926
    4. ',' → logprob: -4.386349201202393
    5. ' fen' → logprob: -5.011349201202393
    6. '
' → logprob: -5.636349201202393
    7. ')' → logprob: -6.261349201202393
    8. ':' → logprob: -6.886349201202393
    9. '<|end|>' → logprob: -6.886349201202393
    10. '<|end|>' → logprob: -7.511349201202393

Token 565: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6588683724403381
    2. 's' → logprob: -0.7838683724403381
    3. 'j' → logprob: -4.033868312835693
    4. ' self' → logprob: -5.283868312835693
    5. ' s' → logprob: -6.033868312835693
    6. ' j' → logprob: -7.658868312835693
    7. '           ' → logprob: -9.283868789672852
    8. '   ' → logprob: -10.971368789672852
    9. '
' → logprob: -11.283868789672852
    10. 'where' → logprob: -11.471368789672852

Token 566: '_j' (ID: 12021)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9651825428009033
    2. '[' → logprob: -1.0901825428009033
    3. '_j' → logprob: -1.5901825428009033
    4. '[i' → logprob: -3.8401825428009033
    5. '[self' → logprob: -4.715182304382324
    6. 'j' → logprob: -4.965182304382324
    7. '```' → logprob: -5.465182304382324
    8. 'index' → logprob: -5.840182304382324
    9. '==' → logprob: -5.840182304382324
    10. '_index' → logprob: -5.965182304382324

Token 567: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7708151936531067
    2. '==' → logprob: -0.8958151936531067
    3. '[' → logprob: -2.770815134048462
    4. '[ch' → logprob: -3.520815134048462
    5. ' <' → logprob: -4.770815372467041
    6. '<=' → logprob: -5.145815372467041
    7. ' <=' → logprob: -5.395815372467041
    8. ']' → logprob: -5.520815372467041
    9. '[j' → logprob: -5.645815372467041
    10. '<' → logprob: -6.020815372467041

Token 568: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.0003268831642344594
    2. ' exit' → logprob: -8.500327110290527
    3. 'self' → logprob: -9.625327110290527
    4. 't' → logprob: -9.875327110290527
    5. 'escape' → logprob: -13.875327110290527
    6. 'ex' → logprob: -14.125327110290527
    7. '
' → logprob: -14.250327110290527
    8. 's' → logprob: -14.250327110290527
    9. 'export' → logprob: -14.625327110290527
    10. '(exit' → logprob: -14.625327110290527

Token 569: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -9.639096970204264e-05
    2. 'letter' → logprob: -9.625096321105957
    3. '_' → logprob: -10.875096321105957
    4. '_letters' → logprob: -13.000096321105957
    5. '```' → logprob: -13.125096321105957
    6. '_j' → logprob: -13.750096321105957
    7. '_word' → logprob: -14.500096321105957
    8. '_index' → logprob: -14.500096321105957
    9. '_i' → logprob: -14.625096321105957
    10. ' _' → logprob: -15.250096321105957

Token 570: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08057810366153717
    2. ' =' → logprob: -3.080578088760376
    3. ')' → logprob: -4.455578327178955
    4. ',' → logprob: -4.955578327178955
    5. '=' → logprob: -5.080578327178955
    6. '
' → logprob: -6.455578327178955
    7. ' fen' → logprob: -6.830578327178955
    8. '<|end|>' → logprob: -7.080578327178955
    9. '            
' → logprob: -7.830578327178955
    10. ':' → logprob: -7.955578327178955

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018930566729977727
    2. ',' → logprob: -7.126893043518066
    3. ' =' → logprob: -7.251893043518066
    4. '
' → logprob: -8.501893043518066
    5. '=' → logprob: -9.876893043518066
    6. '            
' → logprob: -10.376893043518066
    7. 'self' → logprob: -10.626893043518066
    8. '    
' → logprob: -11.876893043518066
    9. ' self' → logprob: -12.126893043518066
    10. '```' → logprob: -12.251893043518066

Token 572: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.055494390428066254
    2. 'sum' → logprob: -3.8054943084716797
    3. 'dp' → logprob: -4.55549430847168
    4. 'total' → logprob: -5.18049430847168
    5. '           ' → logprob: -5.18049430847168
    6. ' self' → logprob: -5.55549430847168
    7. 'prefix' → logprob: -5.68049430847168
    8. 'query' → logprob: -7.55549430847168
    9. 'cur' → logprob: -8.05549430847168
    10. 'val' → logprob: -8.30549430847168

Token 573: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.05492730811238289
    2. 'dp' → logprob: -3.429927349090576
    3. '_dp' → logprob: -4.054927349090576
    4. 'sum' → logprob: -6.679927349090576
    5. '	dp' → logprob: -7.804927349090576
    6. ' dp' → logprob: -8.179926872253418
    7. '_sum' → logprob: -8.304926872253418
    8. 's' → logprob: -8.429926872253418
    9. 'value' → logprob: -8.929926872253418
    10. 'for' → logprob: -8.929926872253418

Token 574: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.500004768371582
    3. '[j' → logprob: -15.125004768371582
    4. '[I' → logprob: -15.125004768371582
    5. 'i' → logprob: -15.625004768371582
    6. '<|end|>' → logprob: -16.3750057220459
    7. '\[' → logprob: -16.6250057220459
    8. '[
' → logprob: -17.1250057220459
    9. ' [' → logprob: -17.6250057220459
    10. '```' → logprob: -17.6250057220459

Token 575: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014054712373763323
    2. ']' → logprob: -6.626405239105225
    3. '[' → logprob: -10.001405715942383
    4. ')' → logprob: -11.126405715942383
    5. 'i' → logprob: -11.626405715942383
    6. '[j' → logprob: -12.626405715942383
    7. ']=' → logprob: -13.001405715942383
    8. '[
' → logprob: -13.376405715942383
    9. '=' → logprob: -13.626405715942383
    10. ' [' → logprob: -14.626405715942383

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875478208065033
    2. '=' → logprob: -1.1375478506088257
    3. ' +=' → logprob: -7.387547969818115
    4. '+=' → logprob: -9.887547492980957
    5. '[' → logprob: -12.887547492980957
    6. ' ' → logprob: -13.137547492980957
    7. '   ' → logprob: -14.512547492980957
    8. ' |=' → logprob: -14.637547492980957
    9. ',' → logprob: -15.387547492980957
    10. '    ' → logprob: -15.512547492980957

Token 577: ' fen' (ID: 25170)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.05575328692793846
    2. ' fen' → logprob: -2.930753231048584
    3. '(f' → logprob: -7.180753231048584
    4. '           ' → logprob: -10.055753707885742
    5. ' (' → logprob: -10.680753707885742
    6. '       ' → logprob: -12.055753707885742
    7. 'Fen' → logprob: -12.055753707885742
    8. '(' → logprob: -12.180753707885742
    9. '   ' → logprob: -12.430753707885742
    10. 'self' → logprob: -12.805753707885742

Token 578: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.935296834039036e-06
    2. '	w' → logprob: -14.37500286102295
    3. ' w' → logprob: -15.43750286102295
    4. '```' → logprob: -15.50000286102295
    5. '[w' → logprob: -15.56250286102295
    6. '(w' → logprob: -15.62500286102295
    7. '<w' → logprob: -15.87500286102295
    8. 'ws' → logprob: -15.93750286102295
    9. '_w' → logprob: -16.187503814697266
    10. '*w' → logprob: -16.187503814697266

Token 579: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.0004904801025986671
    2. '.range' → logprob: -7.625490665435791
    3. '.' → logprob: -14.125490188598633
    4. 'query' → logprob: -14.375490188598633
    5. ' .' → logprob: -14.750490188598633
    6. '.update' → logprob: -15.125490188598633
    7. ').' → logprob: -16.250490188598633
    8. '.question' → logprob: -16.875490188598633
    9. '}.' → logprob: -17.250490188598633
    10. '`.' → logprob: -17.375490188598633

Token 580: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.875000953674316
    3. 'i' → logprob: -16.375
    4. '```' → logprob: -16.875
    5. '(I' → logprob: -17.0
    6. '(ii' → logprob: -17.375
    7. '(index' → logprob: -17.625
    8. '(
' → logprob: -17.75
    9. '[i' → logprob: -17.75
    10. '`' → logprob: -18.5

Token 581: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6326705813407898
    2. ' -' → logprob: -0.7576705813407898
    3. '1' → logprob: -10.132670402526855
    4. ')' → logprob: -10.507670402526855
    5. ' ' → logprob: -13.132670402526855
    6. '```' → logprob: -14.507670402526855
    7. '0' → logprob: -14.632670402526855
    8. '   ' → logprob: -14.882670402526855
    9. '2' → logprob: -15.382670402526855
    10. '[' → logprob: -15.632670402526855

Token 582: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ')' → logprob: -18.5
    4. '۱' → logprob: -18.8125
    5. '<|end|>' → logprob: -19.1875
    6. '```' → logprob: -19.375
    7. '१' → logprob: -19.5
    8. '১' → logprob: -19.875
    9. '2' → logprob: -20.0625
    10. '
' → logprob: -21.125

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ')' → logprob: -17.625
    4. '```' → logprob: -18.9375
    5. '۱' → logprob: -19.0
    6. '2' → logprob: -19.0
    7. '१' → logprob: -19.4375
    8. '}' → logprob: -19.5
    9. '১' → logprob: -19.625
    10. '<|end|>' → logprob: -19.625

Token 584: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.35706390615087e-05
    2. ')
' → logprob: -10.500033378601074
    3. ' )' → logprob: -12.875033378601074
    4. '           ' → logprob: -13.500033378601074
    5. '<|end|>' → logprob: -14.000033378601074
    6. '       ' → logprob: -15.375033378601074
    7. '+' → logprob: -15.625033378601074
    8. '   ' → logprob: -15.875033378601074
    9. '))' → logprob: -16.00003433227539
    10. '               ' → logprob: -16.75003433227539

Token 585: ' %' (ID: 1851)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11551396548748016
    2. '
' → logprob: -2.240514039993286
    3. '<|end|>' → logprob: -6.115513801574707
    4. '            
' → logprob: -9.115513801574707
    5. '
' → logprob: -9.490513801574707
    6. '<|end|>' → logprob: -9.615513801574707
    7. '       ' → logprob: -10.115513801574707
    8. '  
' → logprob: -10.115513801574707
    9. '   ' → logprob: -10.615513801574707
    10. ',' → logprob: -11.240513801574707

Token 586: ' self' (ID: 1051)
  Prédit: 'Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Warp' → logprob: -0.014389262534677982
    2. 'self' → logprob: -4.7643890380859375
    3. ' Warp' → logprob: -5.2643890380859375
    4. ' self' → logprob: -7.5143890380859375
    5. '(self' → logprob: -10.514389038085938
    6. 'War' → logprob: -12.264389038085938
    7. '(W' → logprob: -12.514389038085938
    8. 'warp' → logprob: -13.764389038085938
    9. '```' → logprob: -14.514389038085938
    10. '
' → logprob: -14.639389038085938

Token 587: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00029613598599098623
    2. '.W' → logprob: -8.500296592712402
    3. 'Warp' → logprob: -10.250296592712402
    4. '.M' → logprob: -10.625296592712402
    5. 'MOD' → logprob: -11.250296592712402
    6. '.MODE' → logprob: -11.875296592712402
    7. '.' → logprob: -12.125296592712402
    8. '.Mod' → logprob: -12.875296592712402
    9. '.WRAP' → logprob: -13.375296592712402
    10. ' .' → logprob: -13.875296592712402

Token 588: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20206885039806366
    2. '
' → logprob: -1.70206880569458
    3. '            
' → logprob: -8.702069282531738
    4. '<|end|>' → logprob: -9.077069282531738
    5. '       ' → logprob: -9.577069282531738
    6. '  
' → logprob: -9.702069282531738
    7. '   ' → logprob: -9.702069282531738
    8. '        
' → logprob: -10.077069282531738
    9. '    
' → logprob: -10.577069282531738
    10. '```' → logprob: -10.702069282531738

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053313303738832474
    2. '       ' → logprob: -3.5533132553100586
    3. '```' → logprob: -3.9283132553100586
    4. '<|end|>' → logprob: -6.553313255310059
    5. '
' → logprob: -7.053313255310059
    6. 'self' → logprob: -8.303313255310059
    7. '        
' → logprob: -8.678313255310059
    8. '            
' → logprob: -8.928313255310059
    9. '               ' → logprob: -8.928313255310059
    10. ' self' → logprob: -9.303313255310059

Token 590: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010919421911239624
    2. 'self' → logprob: -5.010919570922852
    3. 'if' → logprob: -5.760919570922852
    4. '       ' → logprob: -7.135919570922852
    5. ' if' → logprob: -9.135919570922852
    6. ' self' → logprob: -10.010919570922852
    7. '```' → logprob: -10.635919570922852
    8. 'fen' → logprob: -10.760919570922852
    9. '            
' → logprob: -10.885919570922852
    10. '   ' → logprob: -11.510919570922852

Token 591: ' Update' (ID: 9152)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07108169794082642
    2. 'if' → logprob: -2.6960816383361816
    3. 'fen' → logprob: -7.821081638336182
    4. 'for' → logprob: -8.44608211517334
    5. '           ' → logprob: -8.94608211517334
    6. 'ch' → logprob: -8.94608211517334
    7. '#' → logprob: -9.07108211517334
    8. '       ' → logprob: -10.07108211517334
    9. ' self' → logprob: -10.19608211517334
    10. 'current' → logprob: -11.32108211517334

Token 592: ' fen' (ID: 25170)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29510045051574707
    2. ' self' → logprob: -1.545100450515747
    3. ' fen' → logprob: -3.545100450515747
    4. 'fen' → logprob: -5.045100212097168
    5. '           ' → logprob: -5.670100212097168
    6. '[self' → logprob: -6.795100212097168
    7. '(self' → logprob: -7.045100212097168
    8. '       ' → logprob: -7.545100212097168
    9. '   ' → logprob: -7.670100212097168
    10. '               ' → logprob: -9.045100212097168

Token 593: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.704273118884885e-07
    2. '       ' → logprob: -14.875000953674316
    3. 'wick' → logprob: -15.625000953674316
    4. 'icks' → logprob: -16.875
    5. 'W' → logprob: -17.625
    6. ' w' → logprob: -17.625
    7. '\' → logprob: -17.875
    8. '   ' → logprob: -18.5
    9. 'v' → logprob: -18.75
    10. '```' → logprob: -19.0

Token 594: 'icks' (ID: 8736)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11742686480283737
    2. '[self' → logprob: -2.242426872253418
    3. 'self' → logprob: -6.117426872253418
    4. 's' → logprob: -6.617426872253418
    5. 'icks' → logprob: -8.992426872253418
    6. 'es' → logprob: -9.117426872253418
    7. 'ics' → logprob: -9.492426872253418
    8. 'f' → logprob: -9.742426872253418
    9. 'ex' → logprob: -9.992426872253418
    10. 'ectors' → logprob: -10.367426872253418

Token 595: ' for' (ID: 395)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0010562685783952475
    2. 'self' → logprob: -6.87605619430542
    3. '[' → logprob: -11.126056671142578
    4. '       ' → logprob: -12.626056671142578
    5. '           ' → logprob: -13.376056671142578
    6. '[s' → logprob: -13.626056671142578
    7. ' self' → logprob: -14.376056671142578
    8. '   ' → logprob: -14.626056671142578
    9. '=self' → logprob: -14.751056671142578
    10. '
' → logprob: -15.126056671142578

Token 596: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008345239912159741
    2. 's' → logprob: -7.6258344650268555
    3. ' self' → logprob: -8.125834465026855
    4. '[self' → logprob: -10.125834465026855
    5. '(self' → logprob: -11.625834465026855
    6. 'elf' → logprob: -14.375834465026855
    7. 'the' → logprob: -14.875834465026855
    8. '=self' → logprob: -15.375834465026855
    9. ' s' → logprob: -15.875834465026855
    10. '
' → logprob: -16.500835418701172

Token 597: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0014274981804192066
    2. 'self' → logprob: -7.12642765045166
    3. 'elf' → logprob: -7.75142765045166
    4. '[i' → logprob: -8.62642765045166
    5. '[' → logprob: -12.25142765045166
    6. '[s' → logprob: -13.12642765045166
    7. '=self' → logprob: -13.25142765045166
    8. '```' → logprob: -13.62642765045166
    9. ' self' → logprob: -13.87642765045166
    10. '[
' → logprob: -14.00142765045166

Token 598: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003349890175741166
    2. '[self' → logprob: -8.625334739685059
    3. '[' → logprob: -8.875334739685059
    4. ']' → logprob: -11.500334739685059
    5. 'self' → logprob: -13.500334739685059
    6. '```' → logprob: -13.750334739685059
    7. '   ' → logprob: -13.875334739685059
    8. '[
' → logprob: -14.500334739685059
    9. '(i' → logprob: -14.750334739685059
    10. 'i' → logprob: -15.000334739685059

Token 599: ' with' (ID: 483)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.009294160641729832
    2. 'self' → logprob: -4.759294033050537
    3. '[s' → logprob: -7.884294033050537
    4. '[' → logprob: -8.634294509887695
    5. 'elf' → logprob: -10.134294509887695
    6. ' self' → logprob: -10.759294509887695
    7. '=self' → logprob: -11.509294509887695
    8. '       ' → logprob: -11.509294509887695
    9. '   ' → logprob: -11.884294509887695
    10. '[
' → logprob: -12.009294509887695

Token 600: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02490430325269699
    2. 'self' → logprob: -4.149904251098633
    3. ' i' → logprob: -4.899904251098633
    4. ' self' → logprob: -7.149904251098633
    5. 'the' → logprob: -8.399904251098633
    6. '(i' → logprob: -8.899904251098633
    7. ' the' → logprob: -9.399904251098633
    8. 'index' → logprob: -9.649904251098633
    9. 'dp' → logprob: -10.274904251098633
    10. '(self' → logprob: -11.399904251098633

Token 601: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.03662008047103882
    2. '[i' → logprob: -3.5366201400756836
    3. 'self' → logprob: -5.161620140075684
    4. '[' → logprob: -7.661620140075684
    5. '[s' → logprob: -8.161620140075684
    6. 's' → logprob: -8.536620140075684
    7. 'i' → logprob: -9.911620140075684
    8. '```' → logprob: -10.411620140075684
    9. ' self' → logprob: -10.911620140075684
    10. '[
' → logprob: -10.911620140075684

Token 602: ']
' (ID: 1592)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.233054980635643
    2. '[i' → logprob: -1.9830549955368042
    3. 'self' → logprob: -3.8580548763275146
    4. '(self' → logprob: -4.108055114746094
    5. ',' → logprob: -4.608055114746094
    6. '],' → logprob: -4.983055114746094
    7. ')' → logprob: -5.233055114746094
    8. '][' → logprob: -5.608055114746094
    9. '),' → logprob: -6.233055114746094
    10. ']' → logprob: -6.358055114746094

Token 603: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5052663087844849
    2. '[self' → logprob: -1.6302663087844849
    3. 'self' → logprob: -2.1302661895751953
    4. '[' → logprob: -3.7552661895751953
    5. ' self' → logprob: -4.255266189575195
    6. '           ' → logprob: -4.380266189575195
    7. '
' → logprob: -5.005266189575195
    8. '        
' → logprob: -5.130266189575195
    9. '<|end|>' → logprob: -5.130266189575195
    10. '[
' → logprob: -6.380266189575195

Token 604: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02713528648018837
    2. ' self' → logprob: -3.6521353721618652
    3. '           ' → logprob: -7.402135372161865
    4. 'fen' → logprob: -9.402134895324707
    5. 'ch' → logprob: -10.652134895324707
    6. 's' → logprob: -10.902134895324707
    7. '
' → logprob: -10.902134895324707
    8. '       ' → logprob: -11.027134895324707
    9. 'elf' → logprob: -11.277134895324707
    10. '[self' → logprob: -11.527134895324707

Token 605: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -2.3438327843905427e-05
    2. '.' → logprob: -10.87502384185791
    3. '.s' → logprob: -14.00002384185791
    4. '	f' → logprob: -14.50002384185791
    5. 'f' → logprob: -14.62502384185791
    6. '].' → logprob: -15.00002384185791
    7. 's' → logprob: -15.12502384185791
    8. '_f' → logprob: -15.37502384185791
    9. ' .' → logprob: -15.87502384185791

Token 606: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0002165299083571881
    2. '[' → logprob: -9.375216484069824
    3. 'w' → logprob: -10.250216484069824
    4. 'ew' → logprob: -10.500216484069824
    5. 's' → logprob: -10.875216484069824
    6. '[i' → logprob: -11.250216484069824
    7. 'in' → logprob: -11.500216484069824
    8. 'ench' → logprob: -12.750216484069824
    9. '[self' → logprob: -12.875216484069824
    10. 'e' → logprob: -13.000216484069824

Token 607: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1472419600977446e-06
    2. 'icks' → logprob: -14.750000953674316
    3. '[i' → logprob: -15.250000953674316
    4. 's' → logprob: -15.750000953674316
    5. '[' → logprob: -16.375001907348633
    6. ' w' → logprob: -16.625001907348633
    7. '\' → logprob: -17.125001907348633
    8. '[self' → logprob: -17.250001907348633
    9. 'v' → logprob: -17.375001907348633
    10. 'f' → logprob: -17.875001907348633

Token 608: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.06507224589586258
    2. 'w' → logprob: -3.0650722980499268
    3. 's' → logprob: -4.565072059631348
    4. 'cks' → logprob: -5.190072059631348
    5. '[' → logprob: -9.315072059631348
    6. '[self' → logprob: -9.940072059631348
    7. 'acks' → logprob: -10.190072059631348
    8. 'ocks' → logprob: -10.565072059631348
    9. 'locks' → logprob: -10.690072059631348
    10. 'ks' → logprob: -10.815072059631348

Token 609: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.1008713702030946e-06
    2. 'self' → logprob: -13.250001907348633
    3. '[' → logprob: -15.250001907348633
    4. '[s' → logprob: -17.000001907348633
    5. '```' → logprob: -19.500001907348633
    6. '=self' → logprob: -19.750001907348633
    7. '[
' → logprob: -19.875001907348633
    8. '(self' → logprob: -20.000001907348633
    9. '.setdefault' → logprob: -20.250001907348633
    10. '	self' → logprob: -20.250001907348633

Token 610: '.s' (ID: 640)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.3884952664375305
    2. '[s' → logprob: -1.1384952068328857
    3. '.s' → logprob: -7.138495445251465
    4. 'self' → logprob: -7.388495445251465
    5. '```' → logprob: -9.513495445251465
    6. '[i' → logprob: -9.888495445251465
    7. 's' → logprob: -10.013495445251465
    8. '[' → logprob: -10.763495445251465
    9. '[
' → logprob: -11.638495445251465
    10. '`s' → logprob: -13.138495445251465

Token 611: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002261854097014293
    2. '[' → logprob: -8.500226020812988
    3. ']' → logprob: -11.125226020812988
    4. '[
' → logprob: -12.500226020812988
    5. '][' → logprob: -13.125226020812988
    6. '```' → logprob: -13.875226020812988
    7. '[self' → logprob: -15.000226020812988
    8. 'i' → logprob: -15.375226020812988
    9. '[I' → logprob: -15.375226020812988
    10. ' [' → logprob: -16.125226974487305

Token 612: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8789383830153383e-05
    2. ']' → logprob: -11.125019073486328
    3. '[' → logprob: -12.875019073486328
    4. 'i' → logprob: -14.125019073486328
    5. '```' → logprob: -15.750019073486328
    6. '[
' → logprob: -16.250019073486328
    7. '[I' → logprob: -16.625019073486328
    8. '   ' → logprob: -17.125019073486328
    9. '(i' → logprob: -17.250019073486328
    10. '])' → logprob: -17.250019073486328

Token 613: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.625
    4. 'i' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. ']' → logprob: -18.375
    7. '[i' → logprob: -20.1875
    8. '           ' → logprob: -20.75
    9. '``' → logprob: -20.8125
    10. '۱' → logprob: -20.875

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.000001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. ']' → logprob: -19.875001907348633
    7. '0' → logprob: -20.375001907348633
    8. '[i' → logprob: -20.500001907348633
    9. ' i' → logprob: -20.500001907348633
    10. '2' → logprob: -20.875001907348633

Token 615: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.1472419600977446e-06
    2. ']' → logprob: -14.750000953674316
    3. ']].' → logprob: -15.000000953674316
    4. ' ].' → logprob: -15.250000953674316
    5. ').' → logprob: -16.500001907348633
    6. '()].' → logprob: -17.000001907348633
    7. ')].' → logprob: -17.250001907348633
    8. ''].' → logprob: -17.625001907348633
    9. '][' → logprob: -17.750001907348633
    10. ':].' → logprob: -18.125001907348633

Token 616: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.9361264946837764e-07
    2. '.update' → logprob: -15.75
    3. ' update' → logprob: -17.5
    4. '	update' → logprob: -22.5
    5. '   ' → logprob: -23.125
    6. ' ' → logprob: -24.625
    7. '`' → logprob: -24.875
    8. '```' → logprob: -24.875
    9. ':update' → logprob: -25.0
    10. '_update' → logprob: -25.125

Token 617: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005242652725428343
    2. 'i' → logprob: -5.255242824554443
    3. ' i' → logprob: -12.880242347717285
    4. ')i' → logprob: -13.130242347717285
    5. '(' → logprob: -13.505242347717285
    6. '	i' → logprob: -14.130242347717285
    7. ',i' → logprob: -14.130242347717285
    8. '```' → logprob: -14.505242347717285
    9. '{i' → logprob: -14.880242347717285
    10. '_i' → logprob: -15.630242347717285

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9862216504407115e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',self' → logprob: -15.250020027160645
    4. ')' → logprob: -15.250020027160645
    5. ',
' → logprob: -15.375020027160645
    6. '‌,' → logprob: -16.625019073486328
    7. '),' → logprob: -16.875019073486328
    8. ',i' → logprob: -17.250019073486328
    9. '`,' → logprob: -17.500019073486328
    10. '           ' → logprob: -17.500019073486328

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178071230649948
    2. ' self' → logprob: -5.753178119659424
    3. '           ' → logprob: -15.128177642822266
    4. '(self' → logprob: -16.878177642822266
    5. '	self' → logprob: -18.253177642822266
    6. '               ' → logprob: -18.503177642822266
    7. '       ' → logprob: -18.628177642822266
    8. '[self' → logprob: -19.503177642822266
    9. '   ' → logprob: -19.628177642822266
    10. '                   ' → logprob: -20.253177642822266

Token 620: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -1.1756367712223437e-05
    2. 'dp' → logprob: -11.875011444091797
    3. '	dp' → logprob: -12.500011444091797
    4. '.' → logprob: -14.625011444091797
    5. '[i' → logprob: -15.000011444091797
    6. '_dp' → logprob: -15.250011444091797
    7. ' dp' → logprob: -17.125011444091797
    8. ' .' → logprob: -17.500011444091797
    9. '.df' → logprob: -18.500011444091797
    10. 'DP' → logprob: -18.750011444091797

Token 621: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '```' → logprob: -17.625
    5. '[
' → logprob: -18.125
    6. ']' → logprob: -18.375
    7. ')' → logprob: -19.375
    8. '[I' → logprob: -20.375
    9. '\[' → logprob: -20.375
    10. ' [' → logprob: -20.75

Token 622: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '       ' → logprob: -16.875001907348633
    5. '           ' → logprob: -17.000001907348633
    6. '))' → logprob: -17.750001907348633
    7. ')`' → logprob: -18.125001907348633
    8. '),' → logprob: -18.500001907348633
    9. ')}' → logprob: -19.000001907348633
    10. ']' → logprob: -19.125001907348633

Token 623: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24102753400802612
    2. 'return' (adapté à ' return') → logprob: -1.741027593612671
    3. '```' → logprob: -3.616027593612671
    4. '<|end|>' → logprob: -5.366027355194092
    5. '   ' → logprob: -6.116027355194092
    6. '	return' → logprob: -6.241027355194092
    7. ' return' → logprob: -6.366027355194092
    8. '
' → logprob: -7.241027355194092
    9. '           ' → logprob: -8.61602783203125
    10. '@return' → logprob: -8.99102783203125

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005332559230737388
    2. ' self' → logprob: -8.250533103942871
    3. '[self' → logprob: -8.250533103942871
    4. 'sum' → logprob: -11.500533103942871
    5. '[' → logprob: -15.250533103942871
    6. '(self' → logprob: -15.625533103942871
    7. ' [' → logprob: -15.750533103942871
    8. '   ' → logprob: -16.875534057617188
    9. '	self' → logprob: -17.125534057617188
    10. '0' → logprob: -18.000534057617188

Token 626: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.0025184655096381903
    2. '.' → logprob: -6.002518653869629
    3. '	dp' → logprob: -11.377518653869629
    4. ' .' → logprob: -11.877518653869629
    5. '.df' → logprob: -12.502518653869629
    6. 'dp' → logprob: -12.502518653869629
    7. '.py' → logprob: -12.627518653869629
    8. '.d' → logprob: -13.127518653869629
    9. '.
' → logprob: -13.502518653869629
    10. '
' → logprob: -13.502518653869629

Token 627: '[self' (ID: 33734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 628: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -9.088346359931165e-07
    2. 'N' → logprob: -14.000000953674316
    3. '.' → logprob: -16.875
    4. '.n' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '.M' → logprob: -21.0
    7. '	N' → logprob: -21.375
    8. '.Н' → logprob: -21.5
    9. '.user' → logprob: -21.875
    10. ' .' → logprob: -22.0

Token 629: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014334988372866064
    2. ')' → logprob: -9.375143051147461
    3. ' ]' → logprob: -10.375143051147461
    4. '}' → logprob: -11.625143051147461
    5. '])' → logprob: -12.125143051147461
    6. ']
' → logprob: -12.250143051147461
    7. ')]' → logprob: -12.875143051147461
    8. '<|end|>' → logprob: -13.375143051147461
    9. '[' → logprob: -13.625143051147461
    10. ']%' → logprob: -14.250143051147461

Token 630: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 631: ' self' (ID: 1051)
  Prédit: 'Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Warp' → logprob: -0.20154725015163422
    2. 'self' → logprob: -1.7015472650527954
    3. '(self' → logprob: -9.576547622680664
    4. 'War' → logprob: -10.576547622680664
    5. ' self' → logprob: -10.826547622680664
    6. ' Warp' → logprob: -11.451547622680664
    7. '(W' → logprob: -12.701547622680664
    8. 'warp' → logprob: -12.826547622680664
    9. 'Self' → logprob: -13.326547622680664
    10. 'Wrap' → logprob: -15.201547622680664

Token 632: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00012892624363303185
    2. 'MOD' → logprob: -9.000128746032715
    3. '_MOD' → logprob: -13.000128746032715
    4. ' .' → logprob: -13.375128746032715
    5. '.MODE' → logprob: -14.125128746032715
    6. '.M' → logprob: -14.750128746032715
    7. '.' → logprob: -15.750128746032715
    8. '.Mod' → logprob: -15.750128746032715
    9. ' MOD' → logprob: -16.12512969970703
    10. '
' → logprob: -17.25012969970703

Token 633: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8351970911026001
    2. ' solve' → logprob: -1.4601970911026
    3. ' Warp' → logprob: -1.5851970911026
    4. ' warp' → logprob: -3.4601969718933105
    5. ' test' → logprob: -3.4601969718933105
    6. 'Warp' → logprob: -3.5851969718933105
    7. ' run' → logprob: -4.4601969718933105
    8. ' solution' → logprob: -4.4601969718933105
    9. 'solve' → logprob: -5.9601969718933105
    10. ' W' → logprob: -6.4601969718933105

Token 636: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010616567305987701
    2. '():
' → logprob: -9.250105857849121
    3. ' ():' → logprob: -11.875105857849121
    4. '()' → logprob: -13.000105857849121
    5. '():
' → logprob: -14.875105857849121
    6. '_' → logprob: -16.500106811523438
    7. '():

' → logprob: -16.750106811523438
    8. '()>' → logprob: -17.000106811523438
    9. '()->' → logprob: -17.375106811523438
    10. '().' → logprob: -17.500106811523438

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18113185465335846
    2. '(n' → logprob: -2.8061318397521973
    3. ' import' → logprob: -3.8061318397521973
    4. ' n' → logprob: -3.8061318397521973
    5. 'import' → logprob: -4.306131839752197
    6. 'def' → logprob: -4.306131839752197
    7. '```' → logprob: -4.431131839752197
    8. 'n' → logprob: -4.556131839752197
    9. ' input' → logprob: -5.431131839752197
    10. '<|end|>' → logprob: -6.431131839752197

Token 638: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.546362578868866
    2. 'import' (adapté à ' import') → logprob: -1.0463626384735107
    3. '   ' → logprob: -3.4213626384735107
    4. 'n' → logprob: -4.171362400054932
    5. 'N' → logprob: -4.921362400054932
    6. ' N' → logprob: -4.921362400054932
    7. ' n' → logprob: -5.046362400054932
    8. '```' → logprob: -8.17136287689209
    9. ' if' → logprob: -8.79636287689209
    10. 'if' → logprob: -9.04636287689209

Token 639: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020354038861114532
    2. ' sys' → logprob: -8.500203132629395
    3. '=sys' → logprob: -16.87520408630371
    4. 'io' → logprob: -18.75020408630371
    5. '	sys' → logprob: -19.75020408630371
    6. '```' → logprob: -20.12520408630371
    7. '(sys' → logprob: -20.62520408630371
    8. 'stdin' → logprob: -20.75020408630371
    9. '_sys' → logprob: -21.00020408630371
    10. 'math' → logprob: -21.37520408630371

Token 640: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6876403093338013
    2. 'input' → logprob: -1.3126403093338013
    3. '
' → logprob: -1.5626403093338013
    4. '    
' → logprob: -4.312640190124512
    5. ' input' → logprob: -5.687640190124512
    6. 'data' → logprob: -7.187640190124512
    7. ' readline' → logprob: -8.437640190124512
    8. 'def' → logprob: -8.562640190124512
    9. '.readline' → logprob: -8.562640190124512
    10. '```' → logprob: -8.937640190124512

Token 641: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.745671272277832
    2. ' input' → logprob: -0.745671272277832
    3. '   ' → logprob: -2.995671272277832
    4. ' readline' → logprob: -7.620671272277832
    5. 'data' → logprob: -7.745671272277832
    6. ' data' → logprob: -9.370671272277832
    7. '
' → logprob: -9.745671272277832
    8. '    
' → logprob: -10.245671272277832
    9. 'n' → logprob: -11.120671272277832
    10. '_input' → logprob: -11.495671272277832

Token 642: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012285939417779446
    2. ' input' → logprob: -4.5122857093811035
    3. '   ' → logprob: -6.8872857093811035
    4. 'data' → logprob: -8.512286186218262
    5. 'n' → logprob: -12.387286186218262
    6. '
' → logprob: -12.762286186218262
    7. ' readline' → logprob: -13.012286186218262
    8. 'read' → logprob: -13.262286186218262
    9. '_input' → logprob: -13.637286186218262
    10. '	input' → logprob: -13.887286186218262

Token 643: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04521291330456734
    2. '.stdout' → logprob: -3.170212984085083
    3. '.argv' → logprob: -6.920212745666504
    4. '.' → logprob: -7.420212745666504
    5. '.exit' → logprob: -7.920212745666504
    6. '.readline' → logprob: -9.045212745666504
    7. '.set' → logprob: -9.420212745666504
    8. '.setdefault' → logprob: -10.545212745666504
    9. '.stderr' → logprob: -11.170212745666504
    10. 'stdin' → logprob: -11.670212745666504

Token 644: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -3.0590548703912646e-05
    2. 'set' → logprob: -11.375030517578125
    3. 'stdin' → logprob: -12.000030517578125
    4. ' recursion' → logprob: -12.625030517578125
    5. 'limit' → logprob: -12.875030517578125
    6. 'sys' → logprob: -13.875030517578125
    7. 'stdout' → logprob: -14.000030517578125
    8. '_rec' → logprob: -14.000030517578125
    9. 'import' → logprob: -14.375030517578125
    10. 'stack' → logprob: -14.625030517578125

Token 645: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.7120533811976202e-05
    2. 'ursive' → logprob: -12.250017166137695
    3. 'ur' → logprob: -12.625017166137695
    4. 'c' → logprob: -12.625017166137695
    5. 't' → logprob: -13.625017166137695
    6. 'urs' → logprob: -13.875017166137695
    7. 'limit' → logprob: -14.125017166137695
    8. 'ursively' → logprob: -14.500017166137695
    9. 'ursor' → logprob: -14.750017166137695
    10. 'set' → logprob: -14.875017166137695

Token 646: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.0206720617134124e-05
    2. '_limit' → logprob: -11.75001049041748
    3. ' limit' → logprob: -13.25001049041748
    4. 'lim' → logprob: -15.37501049041748
    5. 'depth' → logprob: -15.75001049041748
    6. 'Limit' → logprob: -16.375009536743164
    7. '-limit' → logprob: -17.000009536743164
    8. 'limits' → logprob: -17.125009536743164
    9. 'LIMIT' → logprob: -17.875009536743164
    10. '(limit' → logprob: -18.375009536743164

Token 647: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '(
' → logprob: -13.25000286102295
    3. ' (' → logprob: -14.37500286102295
    4. '((' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '100' → logprob: -17.500001907348633
    7. '  ' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '(int' → logprob: -18.125001907348633
    10. '    ' → logprob: -18.500001907348633

Token 648: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3902033970225602e-05
    2. '100' → logprob: -11.250014305114746
    3. '1' → logprob: -14.250014305114746
    4. '200' → logprob: -16.62501335144043
    5. 'pow' → logprob: -17.12501335144043
    6. ' ' → logprob: -17.25001335144043
    7. '   ' → logprob: -17.87501335144043
    8. '300' → logprob: -17.87501335144043
    9. 'int' → logprob: -18.87501335144043
    10. '500' → logprob: -19.00001335144043

Token 649: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.208393394947052
    2. '**' → logprob: -1.7083933353424072
    3. '8' → logprob: -5.083393573760986
    4. '6' → logprob: -7.583393573760986
    5. '9' → logprob: -8.333393096923828
    6. '07' → logprob: -11.958393096923828
    7. '```' → logprob: -14.958393096923828
    8. '000' → logprob: -15.583393096923828
    9. '007' → logprob: -15.583393096923828
    10. '87' → logprob: -15.833393096923828

Token 650: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003273491282016039
    2. '9' → logprob: -5.7532734870910645
    3. '8' → logprob: -9.253273963928223
    4. '```' → logprob: -18.003273010253906
    5. '6' → logprob: -18.878273010253906
    6. '``' → logprob: -22.253273010253906
    7. '**' → logprob: -22.503273010253906
    8. ' ' → logprob: -23.503273010253906
    9. '​' → logprob: -23.753273010253906
    10. '

' → logprob: -24.253273010253906

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008659947663545609
    2. ')
' → logprob: -4.758659839630127
    3. '   ' → logprob: -10.383660316467285
    4. '
' → logprob: -11.633660316467285
    5. ' )' → logprob: -13.133660316467285
    6. ')
' → logprob: -13.133660316467285
    7. '<|end|>' → logprob: -14.883660316467285
    8. '    
' → logprob: -15.508660316467285
    9. ' ' → logprob: -15.758660316467285
    10. ' )
' → logprob: -15.883660316467285

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03410607948899269
    2. 'input' → logprob: -3.4091060161590576
    3. '```' → logprob: -8.784106254577637
    4. ' input' → logprob: -8.909106254577637
    5. 'data' → logprob: -9.284106254577637
    6. ' readline' → logprob: -10.409106254577637
    7. 'read' → logprob: -10.659106254577637
    8. 'def' → logprob: -11.909106254577637
    9. '    
' → logprob: -12.284106254577637
    10. 'import' → logprob: -12.284106254577637

Token 653: ' N' (ID: 478)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00013262155698612332
    2. 'n' → logprob: -9.75013256072998
    3. '   ' → logprob: -9.75013256072998
    4. ' input' → logprob: -12.00013256072998
    5. 'N' (adapté à ' N') → logprob: -12.12513256072998
    6. 'data' → logprob: -13.00013256072998
    7. '
' → logprob: -13.50013256072998
    8. '    
' → logprob: -15.00013256072998
    9. 'read' → logprob: -15.37513256072998
    10. 'inp' → logprob: -16.875133514404297

Token 654: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.216411292552948
    2. ' =' → logprob: -2.2164113521575928
    3. '=' → logprob: -2.4664113521575928
    4. ' ,' → logprob: -7.841411113739014
    5. '=int' → logprob: -8.716411590576172
    6. '   ' → logprob: -8.966411590576172
    7. ',int' → logprob: -12.091411590576172
    8. '=input' → logprob: -12.341411590576172
    9. ')' → logprob: -12.966411590576172
    10. ',N' → logprob: -13.091411590576172

Token 655: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141343772411346
    2. ' int' → logprob: -1.7014133930206299
    3. '=int' → logprob: -16.576414108276367
    4. '[int' → logprob: -16.576414108276367
    5. '<int' → logprob: -17.326414108276367
    6. '(int' → logprob: -17.701414108276367
    7. '	int' → logprob: -19.076414108276367
    8. 'len' → logprob: -19.951414108276367
    9. ' ' → logprob: -20.076414108276367
    10. '   ' → logprob: -20.951414108276367

Token 656: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18595059216022491
    2. '(sys' → logprob: -2.435950517654419
    3. '(' → logprob: -2.685950517654419
    4. 'input' → logprob: -4.560950756072998
    5. '()' → logprob: -5.685950756072998
    6. '(
' → logprob: -9.43595027923584
    7. 'sys' → logprob: -10.31095027923584
    8. ' (' → logprob: -10.68595027923584
    9. ' input' → logprob: -11.56095027923584
    10. '('' → logprob: -11.68595027923584

Token 657: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4334404468536377
    2. '.readline' → logprob: -1.3084404468536377
    3. '.' → logprob: -3.5584404468536377
    4. '().' → logprob: -3.8084404468536377
    5. '())' → logprob: -4.433440208435059
    6. '(stdin' → logprob: -4.683440208435059
    7. '()' → logprob: -4.933440208435059
    8. 'stdin' → logprob: -7.558440208435059
    9. 'input' → logprob: -7.808440208435059
    10. '.argv' → logprob: -7.933440208435059

Token 658: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004049322451464832
    2. '.' → logprob: -7.8754048347473145
    3. '.stdin' → logprob: -11.250405311584473
    4. '.read' → logprob: -11.875405311584473
    5. '().' → logprob: -12.625405311584473
    6. ' .' → logprob: -14.250405311584473
    7. ' readline' → logprob: -14.875405311584473
    8. '.)' → logprob: -16.000404357910156
    9. ')' → logprob: -16.500404357910156
    10. '.argv' → logprob: -16.750404357910156

Token 659: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005511688068509102
    2. '().' → logprob: -5.50551176071167
    3. '()' → logprob: -6.75551176071167
    4. '())
' → logprob: -8.255511283874512
    5. ' ())' → logprob: -12.880511283874512
    6. '())

' → logprob: -13.505511283874512
    7. '()
' → logprob: -14.005511283874512
    8. '()]' → logprob: -14.255511283874512
    9. '();)' → logprob: -14.380511283874512
    10. '(' → logprob: -14.630511283874512

Token 660: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02387901209294796
    2. '   ' → logprob: -3.773879051208496
    3. '```' → logprob: -7.898879051208496
    4. 't' → logprob: -8.648879051208496
    5. ' s' → logprob: -9.648879051208496
    6. '`s' → logprob: -11.648879051208496
    7. '_s' → logprob: -12.148879051208496
    8. '	s' → logprob: -12.398879051208496
    9. '<|end|>' → logprob: -14.023879051208496
    10. '    
' → logprob: -14.148879051208496

Token 661: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00031282080453820527
    2. 't' → logprob: -8.375312805175781
    3. '   ' → logprob: -9.875312805175781
    4. ' s' → logprob: -10.500312805175781
    5. '```' → logprob: -13.500312805175781
    6. '_s' → logprob: -13.750312805175781
    7. 'S' → logprob: -14.625312805175781
    8. ' t' → logprob: -16.00031280517578
    9. '`s' → logprob: -16.12531280517578
    10. '	s' → logprob: -16.50031280517578

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691946864128113
    2. ' =' → logprob: -1.1369194984436035
    3. '   ' → logprob: -10.011919021606445
    4. ',' → logprob: -12.886919021606445
    5. '.readline' → logprob: -15.136919021606445
    6. '=line' → logprob: -15.136919021606445
    7. ' ' → logprob: -15.761919021606445
    8. '=s' → logprob: -16.261919021606445
    9. '=sys' → logprob: -16.386919021606445
    10. '  ' → logprob: -17.261919021606445

Token 663: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009115827269852161
    2. ' sys' → logprob: -7.000911712646484
    3. '=sys' → logprob: -16.500911712646484
    4. '(sys' → logprob: -17.000911712646484
    5. '	sys' → logprob: -18.750911712646484
    6. 'input' → logprob: -19.125911712646484
    7. '_sys' → logprob: -21.125911712646484
    8. '   ' → logprob: -21.375911712646484
    9. '/sys' → logprob: -21.500911712646484
    10. 's' → logprob: -21.500911712646484

Token 664: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.023508092388510704
    2. '.readline' → logprob: -3.773508071899414
    3. 'stdin' → logprob: -8.773508071899414
    4. 's' → logprob: -10.398508071899414
    5. '.stdout' → logprob: -10.523508071899414
    6. 'd' → logprob: -11.148508071899414
    7. 'in' → logprob: -11.273508071899414
    8. '(stdin' → logprob: -11.523508071899414
    9. 'sys' → logprob: -12.648508071899414
    10. '.argv' → logprob: -13.273508071899414

Token 665: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008189192740246654
    2. '().' → logprob: -7.250818729400635
    3. 'sys' → logprob: -9.625819206237793
    4. '.stdin' → logprob: -10.875819206237793
    5. 'stdin' → logprob: -12.125819206237793
    6. 'e' → logprob: -12.500819206237793
    7. '.read' → logprob: -12.625819206237793
    8. '=sys' → logprob: -12.875819206237793
    9. 'line' → logprob: -13.875819206237793
    10. 'read' → logprob: -14.000819206237793

Token 666: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001414426224073395
    2. '()' → logprob: -8.875141143798828
    3. '.strip' → logprob: -13.875141143798828
    4. '()
' → logprob: -14.750141143798828
    5. '.rstrip' → logprob: -15.875141143798828
    6. '[:-' → logprob: -17.125141143798828
    7. '   ' → logprob: -18.375141143798828
    8. ' ().' → logprob: -18.625141143798828
    9. '.readline' → logprob: -18.625141143798828
    10. '()[' → logprob: -19.375141143798828

Token 667: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0067156096920371056
    2. 'rstrip' → logprob: -5.006715774536133
    3. 'read' → logprob: -16.006715774536133
    4. ' strip' → logprob: -16.381715774536133
    5. '_strip' → logprob: -18.756715774536133
    6. 'decode' → logprob: -20.381715774536133
    7. 'str' → logprob: -20.506715774536133
    8. 'rs' → logprob: -21.631715774536133
    9. '-strip' → logprob: -22.006715774536133
    10. '.rstrip' → logprob: -22.256715774536133

Token 668: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3136293888092041
    2. 't' → logprob: -1.313629388809204
    3. ' t' → logprob: -8.313629150390625
    4. '	t' → logprob: -9.813629150390625
    5. '`t' → logprob: -10.438629150390625
    6. '```' → logprob: -12.063629150390625
    7. '_t' → logprob: -12.188629150390625
    8. '(t' → logprob: -12.188629150390625
    9. '    
' → logprob: -12.313629150390625
    10. ',t' → logprob: -12.438629150390625

Token 669: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018355604261159897
    2. '   ' → logprob: -4.018355369567871
    3. ' t' → logprob: -8.518355369567871
    4. '```' → logprob: -12.643355369567871
    5. '`t' → logprob: -12.893355369567871
    6. '	t' → logprob: -16.268356323242188
    7. '``' → logprob: -18.268356323242188
    8. ' ' → logprob: -18.518356323242188
    9. '
' → logprob: -19.018356323242188
    10. '  ' → logprob: -19.268356323242188

Token 670: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00034869377850554883
    2. '   ' → logprob: -8.000349044799805
    3. ' t' → logprob: -11.250349044799805
    4. '`t' → logprob: -15.875349044799805
    5. '	t' → logprob: -16.000349044799805
    6. '```' → logprob: -17.500349044799805
    7. '_t' → logprob: -20.875349044799805
    8. ' ' → logprob: -20.875349044799805
    9. '  ' → logprob: -21.500349044799805
    10. '
' → logprob: -22.125349044799805

Token 671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489582568407059
    2. '=' → logprob: -2.9298958778381348
    3. '   ' → logprob: -11.554895401000977
    4. '.readline' → logprob: -13.429895401000977
    5. ' =
' → logprob: -14.304895401000977
    6. ' ' → logprob: -14.679895401000977
    7. ')' → logprob: -15.679895401000977
    8. '=sys' → logprob: -15.679895401000977
    9. '=
' → logprob: -15.804895401000977
    10. ' ' → logprob: -15.929895401000977

Token 672: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023246875032782555
    2. ' sys' → logprob: -3.7732467651367188
    3. '=sys' → logprob: -14.148246765136719
    4. '(sys' → logprob: -14.398246765136719
    5. '	sys' → logprob: -16.52324676513672
    6. '   ' → logprob: -18.89824676513672
    7. 'input' → logprob: -19.02324676513672
    8. 's' → logprob: -19.39824676513672
    9. 'stdin' → logprob: -19.89824676513672
    10. '.sys' → logprob: -20.14824676513672

Token 673: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0050141094252467155
    2. '.stdin' → logprob: -5.380013942718506
    3. '().' → logprob: -7.880013942718506
    4. '.stdout' → logprob: -12.505014419555664
    5. '=sys' → logprob: -12.755014419555664
    6. '.strip' → logprob: -13.380014419555664
    7. '.read' → logprob: -13.755014419555664
    8. 'stdin' → logprob: -13.880014419555664
    9. '()' → logprob: -14.005014419555664
    10. '.' → logprob: -14.380014419555664

Token 674: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.088346359931165e-07
    2. '().' → logprob: -14.750000953674316
    3. '.stdin' → logprob: -15.125000953674316
    4. '.read' → logprob: -16.875
    5. 'line' → logprob: -17.375
    6. '.strip' → logprob: -18.75
    7. '```' → logprob: -19.5
    8. '.line' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. '.rstrip' → logprob: -19.875

Token 675: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. '.strip' → logprob: -14.500006675720215
    4. ' ().' → logprob: -16.62500762939453
    5. '()
' → logprob: -16.75000762939453
    6. '()).' → logprob: -18.12500762939453
    7. '.readline' → logprob: -18.87500762939453
    8. '().'' → logprob: -19.25000762939453
    9. '()].' → logprob: -19.37500762939453
    10. '('').' → logprob: -19.50000762939453

Token 676: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.25
    3. ' strip' → logprob: -18.875
    4. '(strip' → logprob: -19.625
    5. '.strip' → logprob: -19.75
    6. '_strip' → logprob: -21.25
    7. 'stripe' → logprob: -21.375
    8. 'read' → logprob: -21.375
    9. '-strip' → logprob: -23.0
    10. '```' → logprob: -23.125

Token 677: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29895317554473877
    2. '()' → logprob: -1.5489531755447388
    3. ')' → logprob: -3.673953056335449
    4. '()
' → logprob: -4.798953056335449
    5. '
' → logprob: -4.923953056335449
    6. '<|end|>' → logprob: -6.298953056335449
    7. '    
' → logprob: -6.548953056335449
    8. '())' → logprob: -7.673953056335449
    9. ')
' → logprob: -7.798953056335449
    10. '(
' → logprob: -8.42395305633545

Token 678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4213498532772064
    2. 'wm' → logprob: -1.2963498830795288
    3. 'warp' → logprob: -3.1713497638702393
    4. 'w' → logprob: -4.046350002288818
    5. 'war' → logprob: -5.796350002288818
    6. ' wm' → logprob: -5.921350002288818
    7. ' warp' → logprob: -6.546350002288818
    8. 'machine' → logprob: -6.546350002288818
    9. 'W' → logprob: -8.04634952545166
    10. 'Warp' → logprob: -8.54634952545166

Token 679: ' routing' (ID: 54478)
  Prédit: 'wm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wm' → logprob: -0.051583144813776016
    2. 'warp' → logprob: -3.6765830516815186
    3. 'w' → logprob: -4.051583290100098
    4. 'war' → logprob: -6.051583290100098
    5. 'routing' (adapté à ' routing') → logprob: -6.676583290100098
    6. 'machine' → logprob: -6.676583290100098
    7. ' wm' → logprob: -7.176583290100098
    8. 'solver' → logprob: -7.301583290100098
    9. 'router' → logprob: -8.301583290100098
    10. 'wr' → logprob: -8.301583290100098

Token 680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193288922309875
    2. '=' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.876933097839355
    4. 'Routing' → logprob: -14.126933097839355
    5. '.' → logprob: -14.626933097839355
    6. ' =
' → logprob: -15.001933097839355
    7. '=
' → logprob: -15.376933097839355
    8. '   ' → logprob: -15.501933097839355
    9. '(' → logprob: -15.626933097839355
    10. ' routing' → logprob: -16.25193214416504

Token 681: ' Warp' (ID: 197006)
  Prédit: 'Warp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Warp' → logprob: -0.04858805239200592
    2. ' Warp' → logprob: -3.0485880374908447
    3. 'War' → logprob: -14.548587799072266
    4. ' warp' → logprob: -15.798587799072266
    5. 'warp' → logprob: -17.298587799072266
    6. 'Wrap' → logprob: -18.423587799072266
    7. 'W' → logprob: -18.923587799072266
    8. ' War' → logprob: -19.548587799072266
    9. '   ' → logprob: -19.923587799072266
    10. '`' → logprob: -20.298587799072266

Token 682: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: 0.0
    2. '_machine' → logprob: -18.0
    3. 'Mach' → logprob: -18.375
    4. 'achine' → logprob: -18.875
    5. ' Machine' → logprob: -19.25
    6. 'machine' → logprob: -19.625
    7. '(M' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. 'Warp' → logprob: -20.625
    10. 'Machines' → logprob: -20.75

Token 683: 'Routing' (ID: 38834)
  Prédit: 'Routing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Routing' → logprob: -1.6240566083070007e-06
    2. 'routing' → logprob: -13.750001907348633
    3. ' routing' → logprob: -15.000001907348633
    4. '.routing' → logprob: -16.125001907348633
    5. ' Routing' → logprob: -16.875001907348633
    6. '-routing' → logprob: -17.250001907348633
    7. 'Warp' → logprob: -17.625001907348633
    8. 'Router' → logprob: -18.375001907348633
    9. '\Routing' → logprob: -20.875001907348633
    10. 'Rou' → logprob: -21.250001907348633

Token 684: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11665574461221695
    2. '(' → logprob: -2.2416558265686035
    3. '(W' → logprob: -5.6166558265686035
    4. '(
' → logprob: -8.866655349731445
    5. ' (' → logprob: -11.116655349731445
    6. 'Routing' → logprob: -11.616655349731445
    7. 'Warp' → logprob: -11.866655349731445
    8. 'W' → logprob: -12.241655349731445
    9. '()' → logprob: -12.616655349731445
    10. '(S' → logprob: -13.116655349731445

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ',s' → logprob: -9.625066757202148
    3. 's' → logprob: -14.375066757202148
    4. ',N' → logprob: -16.62506675720215
    5. ' ,' → logprob: -16.75006675720215
    6. ')' → logprob: -17.87506675720215
    7. '   ' → logprob: -17.87506675720215
    8. ',n' → logprob: -18.25006675720215
    9. ',
' → logprob: -18.75006675720215
    10. ',S' → logprob: -19.37506675720215

Token 686: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0325924449716695e-05
    2. ' s' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '```' → logprob: -17.625009536743164
    5. '`s' → logprob: -18.500009536743164
    6. '<|end|>' → logprob: -18.875009536743164
    7. ')' → logprob: -20.250009536743164
    8. '
' → logprob: -20.750009536743164
    9. '  ' → logprob: -21.250009536743164
    10. '	s' → logprob: -21.375009536743164

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011045700375689194
    2. ',t' → logprob: -9.125110626220703
    3. ' ,' → logprob: -14.500110626220703
    4. '   ' → logprob: -14.750110626220703
    5. ',
' → logprob: -14.875110626220703
    6. 't' → logprob: -16.125110626220703
    7. ')' → logprob: -16.375110626220703
    8. ',s' → logprob: -18.125110626220703
    9. ',r' → logprob: -18.500110626220703
    10. '),' → logprob: -18.875110626220703

Token 688: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861456897109747
    2. ' t' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.633615493774414
    4. '`t' → logprob: -18.633615493774414
    5. '	t' → logprob: -19.508615493774414
    6. ')t' → logprob: -19.883615493774414
    7. '       ' → logprob: -20.133615493774414
    8. ')' → logprob: -20.383615493774414
    9. '           ' → logprob: -20.633615493774414
    10. ' ' → logprob: -20.633615493774414

Token 689: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5244786739349365
    2. ')
' → logprob: -0.8994786739349365
    3. '   ' → logprob: -6.899478912353516
    4. ').' → logprob: -8.274478912353516
    5. ')
' → logprob: -10.149478912353516
    6. '.compute' → logprob: -10.274478912353516
    7. '<|end|>' → logprob: -12.524478912353516
    8. '.routing' → logprob: -13.149478912353516
    9. '
' → logprob: -13.399478912353516
    10. ' ' → logprob: -14.024478912353516

Token 690: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0034930426627397537
    2. '   ' → logprob: -6.003492832183838
    3. 'result' → logprob: -7.003492832183838
    4. '```' → logprob: -9.503493309020996
    5. ' print' → logprob: -10.503493309020996
    6. 'return' → logprob: -13.503493309020996
    7. '
' → logprob: -13.503493309020996
    8. 'output' → logprob: -14.128493309020996
    9. 'res' → logprob: -14.128493309020996
    10. 'answer' → logprob: -14.628493309020996

Token 691: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.968312951968983e-06
    2. 'result' → logprob: -11.625009536743164
    3. 'return' → logprob: -15.125009536743164
    4. 'pr' → logprob: -15.250009536743164
    5. '```' → logprob: -15.375009536743164
    6. ' print' → logprob: -16.125009536743164
    7. 'res' → logprob: -16.875009536743164
    8. '   ' → logprob: -17.000009536743164
    9. 'answer' → logprob: -17.500009536743164
    10. '
' → logprob: -18.000009536743164

Token 692: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.125004768371582
    3. 'routing' → logprob: -13.125004768371582
    4. '(route' → logprob: -16.250003814697266
    5. '(router' → logprob: -16.750003814697266
    6. ' routing' → logprob: -16.750003814697266
    7. 'r' → logprob: -17.250003814697266
    8. '(routes' → logprob: -17.625003814697266
    9. ' (' → logprob: -18.500003814697266
    10. '(
' → logprob: -18.875003814697266

Token 693: 'outing' (ID: 19229)
  Prédit: 'outing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outing' → logprob: -3.173704271830502e-06
    2. 'oute' → logprob: -12.75000286102295
    3. 'outes' → logprob: -16.875003814697266
    4. 'routing' → logprob: -16.875003814697266
    5. 'uting' → logprob: -17.000003814697266
    6. 'out' → logprob: -17.875003814697266
    7. 'outer' → logprob: -18.625003814697266
    8. 'outi' → logprob: -18.875003814697266
    9. 'outed' → logprob: -19.000003814697266
    10. 'ount' → logprob: -19.625003814697266

Token 694: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -5.5577775128767826e-06
    2. ').' → logprob: -12.875005722045898
    3. '.calculate' → logprob: -13.000005722045898
    4. '.' → logprob: -15.625005722045898
    5. ' .' → logprob: -16.1250057220459
    6. '.run' → logprob: -16.2500057220459
    7. ')' → logprob: -17.3750057220459
    8. '.solve' → logprob: -17.5000057220459
    9. 'compute' → logprob: -17.7500057220459
    10. '.evaluate' → logprob: -17.7500057220459

Token 695: '_routes' (ID: 151448)
  Prédit: '_routes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_routes' → logprob: -3.128163257315464e-07
    2. 'routes' → logprob: -15.625
    3. '_rates' → logprob: -17.5
    4. '_' → logprob: -18.0
    5. ')' → logprob: -18.0
    6. ')_' → logprob: -18.375
    7. ' _' → logprob: -19.375
    8. '_rules' → logprob: -19.5
    9. '_ranges' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 696: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00011319868644932285
    2. '()' → logprob: -9.250113487243652
    3. '())
' → logprob: -11.000113487243652
    4. ' ())' → logprob: -15.375113487243652
    5. '())

' → logprob: -17.125112533569336
    6. ')' → logprob: -17.500112533569336
    7. '()
' → logprob: -17.750112533569336
    8. '();)' → logprob: -17.875112533569336
    9. '())
' → logprob: -18.250112533569336
    10. '()))' → logprob: -18.500112533569336

Token 697: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00039015832589939237
    2. '```' → logprob: -8.12539005279541
    3. ' if' → logprob: -9.50039005279541
    4. '#' → logprob: -11.37539005279541
    5. '<|end|>' → logprob: -12.50039005279541
    6. '__' → logprob: -13.75039005279541
    7. '
' → logprob: -13.87539005279541
    8. '\' → logprob: -14.25039005279541
    9. 'If' → logprob: -14.50039005279541
    10. '#if' → logprob: -15.50039005279541

Token 698: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.693276584148407
    2. ' __' → logprob: -0.693276584148407
    3. 'name' → logprob: -9.443276405334473
    4. '_name' → logprob: -10.568276405334473
    5. '_' → logprob: -12.068276405334473
    6. '___' → logprob: -12.318276405334473
    7. ' ' → logprob: -12.443276405334473
    8. 'Name' → logprob: -12.818276405334473
    9. ' ' → logprob: -13.318276405334473
    10. 'if' → logprob: -13.818276405334473

Token 699: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11319932341575623
    2. '==' → logprob: -2.988199234008789
    3. ' ==' → logprob: -2.988199234008789
    4. '=="' → logprob: -5.863199234008789
    5. '=='' → logprob: -6.738199234008789
    6. '.__' → logprob: -7.363199234008789
    7. 'name' → logprob: -7.488199234008789
    8. '__.__' → logprob: -7.988199234008789
    9. '__.' → logprob: -9.238199234008789
    10. '[' → logprob: -9.238199234008789

Token 700: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.179569077678025e-05
    2. '__.__' → logprob: -10.250041961669922
    3. '==' → logprob: -12.250041961669922
    4. ' ==' → logprob: -14.125041961669922
    5. '__.' → logprob: -15.125041961669922
    6. '=="' → logprob: -15.250041961669922
    7. '__["' → logprob: -15.750041961669922
    8. '__('' → logprob: -16.375041961669922
    9. '____' → logprob: -17.125041961669922
    10. '__[' → logprob: -17.125041961669922

Token 701: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4262257516384125
    2. ' ==' → logprob: -1.4262257814407349
    3. '__' → logprob: -2.6762256622314453
    4. '=="' → logprob: -3.3012256622314453
    5. '=='' → logprob: -6.801225662231445
    6. '__.__' → logprob: -11.426225662231445
    7. '.__' → logprob: -11.426225662231445
    8. '==
' → logprob: -11.926225662231445
    9. '===' → logprob: -12.426225662231445
    10. '==="' → logprob: -12.801225662231445

Token 702: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3868785798549652
    2. ''' → logprob: -1.1368786096572876
    3. '__' → logprob: -12.011878967285156
    4. ' "__' → logprob: -14.011878967285156
    5. ''"' → logprob: -15.636878967285156
    6. ' '__' → logprob: -16.011878967285156
    7. '"user' → logprob: -16.011878967285156
    8. '('__' → logprob: -16.761878967285156
    9. '("__' → logprob: -17.136878967285156
    10. ''user' → logprob: -17.386878967285156

Token 703: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03223768249154091
    2. '"' → logprob: -4.032237529754639
    3. 'main' → logprob: -4.282237529754639
    4. ''' → logprob: -8.657238006591797
    5. '___' → logprob: -14.032238006591797
    6. '__":
' → logprob: -14.157238006591797
    7. '_main' → logprob: -14.532238006591797
    8. ' "__' → logprob: -15.032238006591797
    9. ' __' → logprob: -15.407238006591797
    10. '__
' → logprob: -15.782238006591797

Token 704: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3158150315284729
    2. '__' → logprob: -1.3158149719238281
    3. '__.' → logprob: -6.940814971923828
    4. '__.__' → logprob: -7.190814971923828
    5. '__':
' → logprob: -7.315814971923828
    6. '__["' → logprob: -9.190814971923828
    7. '__
' → logprob: -11.065814971923828
    8. '__
' → logprob: -11.440814971923828
    9. '.' → logprob: -11.815814971923828
    10. '```' → logprob: -12.065814971923828

Token 705: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.3676733690081164e-05
    2. '__' → logprob: -10.75002384185791
    3. ' main' → logprob: -13.50002384185791
    4. '   ' → logprob: -14.75002384185791
    5. 'run' → logprob: -15.00002384185791
    6. '	main' → logprob: -16.500022888183594
    7. '```' → logprob: -17.500022888183594
    8. 'print' → logprob: -17.500022888183594
    9. '_main' → logprob: -17.875022888183594
    10. '`' → logprob: -19.750022888183594

Token 706: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. 'import' → logprob: -17.25
    4. '	main' → logprob: -17.25
    5. '   ' → logprob: -20.5
    6. '_main' → logprob: -21.5
    7. '.main' → logprob: -22.25
    8. '(main' → logprob: -23.125
    9. 'from' → logprob: -24.875
    10. '```' → logprob: -25.125

Token 707: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 705
Tokens correctement prédits (1ère position, stricte): 315
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 597
Précision stricte (1ère position): 44.68%
Précision adaptée (1ère position): 48.37%
Précision (top 10): 84.68%
================================================================================
