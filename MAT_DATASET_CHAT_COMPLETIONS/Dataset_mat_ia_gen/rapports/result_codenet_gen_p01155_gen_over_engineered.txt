================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class FactorizationStrategy:
    def factor_pairs(self, n: int) -> list[tuple[int, int]]:
        raise NotImplementedError

class BruteForceFactorization(FactorizationStrategy):
    def factor_pairs(self, n: int) -> list[tuple[int, int]]:
        factors = []
        limit = int(n**0.5)
        for i in range(1, limit + 1):
            if n % i == 0:
                factors.append((i, n // i))
        return factors

class SequenceGenerator:
    def __init__(self, a: int, b: int, factorization_strategy: FactorizationStrategy):
        self.a = a
        self.b = b
        self.factorization_strategy = factorization_strategy
        
    def generate_all_sequences(self) -> list[list[int]]:
        a_factors = self.factorization_strategy.factor_pairs(self.a)
        b_factors = self.factorization_strategy.factor_pairs(self.b)
        sequences = []
        for a1, a2 in a_factors:
            for b1, b2 in b_factors:
                seq = [a1, a2, b1, b2]
                seq.sort()
                sequences.append(seq)
        return sequences

class CostEvaluator:
    @staticmethod
    def evaluate_sequence(seq: list[int]) -> int:
        return sum((seq[i+1] - seq[i])**2 for i in range(len(seq)-1))

class MinimalCostFinder:
    def __init__(self, sequence_generator: SequenceGenerator, cost_evaluator: CostEvaluator):
        self.sequence_generator = sequence_generator
        self.cost_evaluator = cost_evaluator
        
    def find_min_cost(self) -> int:
        sequences = self.sequence_generator.generate_all_sequences()
        min_cost = None
        for seq in sequences:
            cost = self.cost_evaluator.evaluate_sequence(seq)
            if min_cost is None or cost < min_cost:
                min_cost = cost
        return min_cost

class RuinsSolver:
    def __init__(self, factorization_strategy: FactorizationStrategy):
        self.factorization_strategy = factorization_strategy
        
    def solve(self, a: int, b: int) -> int:
        sequence_generator = SequenceGenerator(a, b, self.factorization_strategy)
        cost_evaluator = CostEvaluator()
        finder = MinimalCostFinder(sequence_generator, cost_evaluator)
        return finder.find_min_cost()

def main():
    import sys
    factorization_strategy = BruteForceFactorization()
    solver = RuinsSolver(factorization_strategy)
    for line in sys.stdin:
        a_str, b_str = line.split()
        a, b = int(a_str), int(b_str)
        if a == 0 and b == 0:
            break
        result = solver.solve(a, b)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Factor' (ID: 63743)
  → Token d'amorce (pas de prédiction)

Token 2: 'ization' (ID: 2860)
  → Token d'amorce (pas de prédiction)

Token 3: 'Strategy' (ID: 21488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2329310029745102
    2. ':' → logprob: -1.8579310178756714
    3. '{' → logprob: -2.982930898666382
    4. '.' → logprob: -7.232931137084961
    5. '(:' → logprob: -8.982931137084961
    6. '```' → logprob: -9.107931137084961
    7. '[' → logprob: -10.607931137084961
    8. '_' → logprob: -11.357931137084961
    9. '():' → logprob: -11.357931137084961
    10. ' {' → logprob: -11.357931137084961

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4607471823692322
    2. '{' → logprob: -1.585747241973877
    3. '(' → logprob: -1.835747241973877
    4. '.' → logprob: -5.460747241973877
    5. ' {' → logprob: -8.460746765136719
    6. '[' → logprob: -9.085746765136719
    7. '(:' → logprob: -9.585746765136719
    8. ' ' → logprob: -9.960746765136719
    9. ' :' → logprob: -10.335746765136719
    10. '_' → logprob: -10.460746765136719

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6830559372901917
    2. '(' → logprob: -1.3080558776855469
    3. '   ' → logprob: -1.9330558776855469
    4. '```' → logprob: -3.183055877685547
    5. '.' → logprob: -3.683055877685547
    6. '    ' → logprob: -6.308055877685547
    7. ''' → logprob: -6.433055877685547
    8. ':
' → logprob: -6.433055877685547
    9. '\' → logprob: -6.683055877685547
    10. '()' → logprob: -6.933055877685547

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32322052121162415
    2. ' def' → logprob: -1.9482204914093018
    3. ' ' → logprob: -3.0732204914093018
    4. '_' → logprob: -3.1982204914093018
    5. 'def' (adapté à ' def') → logprob: -4.323220729827881
    6. '    ' → logprob: -4.448220729827881
    7. ' 
' → logprob: -5.323220729827881
    8. '```' → logprob: -5.573220729827881
    9. '    
' → logprob: -6.323220729827881
    10. '\n' → logprob: -6.448220729827881

Token 7: ' factor' (ID: 12332)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03824150189757347
    2. '_' → logprob: -5.038241386413574
    3. ' __' → logprob: -5.163241386413574
    4. ' ' → logprob: -5.163241386413574
    5. ' calculate' → logprob: -5.288241386413574
    6. ' factor' → logprob: -5.663241386413574
    7. ' process' → logprob: -6.163241386413574
    8. ' def' → logprob: -6.663241386413574
    9. '__' → logprob: -6.788241386413574
    10. ')' → logprob: -7.163241386413574

Token 8: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7855454087257385
    2. 'ize' → logprob: -0.7855454087257385
    3. '(self' → logprob: -3.1605453491210938
    4. ' ' → logprob: -3.5355453491210938
    5. 'ialize' → logprob: -4.910545349121094
    6. '```' → logprob: -5.660545349121094
    7. '(' → logprob: -6.035545349121094
    8. '   ' → logprob: -6.910545349121094
    9. 'al' → logprob: -7.160545349121094
    10. '       ' → logprob: -7.285545349121094

Token 9: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30678635835647583
    2. '(self' → logprob: -1.431786298751831
    3. ' (' → logprob: -3.681786298751831
    4. '(s' → logprob: -10.68178653717041
    5. ' ' → logprob: -10.80678653717041
    6. '(
' → logprob: -10.93178653717041
    7. '   ' → logprob: -11.18178653717041
    8. '```' → logprob: -11.30678653717041
    9. '_' → logprob: -11.43178653717041
    10. '       ' → logprob: -12.43178653717041

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24096420407295227
    2. '):' → logprob: -1.8659641742706299
    3. ')' → logprob: -2.86596417427063
    4. 'self' → logprob: -6.990964412689209
    5. ':' → logprob: -7.115964412689209
    6. '   ' → logprob: -8.11596393585205
    7. '       ' → logprob: -8.86596393585205
    8. '):
' → logprob: -9.74096393585205
    9. ' ,' → logprob: -9.99096393585205
    10. '.' → logprob: -10.11596393585205

Token 11: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0371499061584473
    2. ' n' → logprob: -1.1621499061584473
    3. ' number' → logprob: -1.5371499061584473
    4. 'n' → logprob: -3.1621499061584473
    5. 'self' → logprob: -3.7871499061584473
    6. ' x' → logprob: -3.9121499061584473
    7. ' num' → logprob: -4.537149906158447
    8. ' numbers' → logprob: -4.787149906158447
    9. 'number' → logprob: -4.912149906158447
    10. ')' → logprob: -6.037149906158447

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03554726392030716
    2. ')' → logprob: -3.4105472564697266
    3. ':' → logprob: -6.410547256469727
    4. '):
' → logprob: -9.410547256469727
    5. 'self' → logprob: -9.910547256469727
    6. ',' → logprob: -10.035547256469727
    7. ' ):' → logprob: -10.410547256469727
    8. '   ' → logprob: -10.660547256469727
    9. '       ' → logprob: -11.535547256469727
    10. ' )' → logprob: -12.660547256469727

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20146577060222626
    2. 'int' → logprob: -1.7014657258987427
    3. ')' → logprob: -10.451465606689453
    4. ':int' → logprob: -11.826465606689453
    5. ' ' → logprob: -12.201465606689453
    6. '   ' → logprob: -12.326465606689453
    7. '=int' → logprob: -13.576465606689453
    8. ' )' → logprob: -13.701465606689453
    9. '(int' → logprob: -14.076465606689453
    10. '    ' → logprob: -14.201465606689453

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003294632537290454
    2. '):' → logprob: -5.753294467926025
    3. ')->' → logprob: -9.128294944763184
    4. '   ' → logprob: -12.503294944763184
    5. ' )' → logprob: -13.003294944763184
    6. '`)' → logprob: -14.128294944763184
    7. '):
' → logprob: -14.628294944763184
    8. ':' → logprob: -15.628294944763184
    9. ',' → logprob: -15.753294944763184
    10. '->' → logprob: -16.003293991088867

Token 15: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017481597024016082
    2. '):' → logprob: -9.500174522399902
    3. ':**' → logprob: -10.375174522399902
    4. '():' → logprob: -10.500174522399902
    5. ':return' → logprob: -11.625174522399902
    6. ' :' → logprob: -11.625174522399902
    7. '->' → logprob: -12.250174522399902
    8. '':' → logprob: -12.625174522399902
    9. '   ' → logprob: -12.875174522399902
    10. '       ' → logprob: -13.250174522399902

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3787900507450104
    2. 'List' → logprob: -2.2537901401519775
    3. 'list' → logprob: -2.8787901401519775
    4. ' ' → logprob: -3.0037901401519775
    5. ' List' → logprob: -3.0037901401519775
    6. '   ' → logprob: -3.8787901401519775
    7. ' int' → logprob: -5.128789901733398
    8. 'int' → logprob: -5.503789901733398
    9. '  ' → logprob: -5.503789901733398
    10. ' Iterator' → logprob: -6.003789901733398

Token 17: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006805036100558937
    2. '():' → logprob: -7.500680446624756
    3. '):' → logprob: -10.250680923461914
    4. ':
' → logprob: -10.500680923461914
    5. ':**' → logprob: -10.875680923461914
    6. '':' → logprob: -11.750680923461914
    7. '`:' → logprob: -12.000680923461914
    8. '[' → logprob: -12.375680923461914
    9. '[:]' → logprob: -12.625680923461914
    10. '```' → logprob: -12.750680923461914

Token 18: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.05213005840778351
    2. 'int' → logprob: -3.0521299839019775
    3. ' tuple' → logprob: -6.177130222320557
    4. 'Tuple' → logprob: -6.552130222320557
    5. 'tu' → logprob: -11.052129745483398
    6. '(tuple' → logprob: -11.427129745483398
    7. '   ' → logprob: -13.302129745483398
    8. '[int' → logprob: -13.552129745483398
    9. ' int' → logprob: -13.677129745483398
    10. '```' → logprob: -14.552129745483398

Token 19: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.265633419388905e-05
    2. '[in' → logprob: -10.375062942504883
    3. '[i' → logprob: -10.500062942504883
    4. '<int' → logprob: -13.500062942504883
    5. '(int' → logprob: -14.375062942504883
    6. '[Int' → logprob: -14.500062942504883
    7. ']int' → logprob: -14.750062942504883
    8. '[' → logprob: -14.875062942504883
    9. ']:' → logprob: -15.250062942504883
    10. ')]' → logprob: -16.125062942504883

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010499580530449748
    2. ',int' → logprob: -7.251049995422363
    3. '[int' → logprob: -8.126049995422363
    4. ']]' → logprob: -10.376049995422363
    5. ' ,' → logprob: -11.501049995422363
    6. '   ' → logprob: -13.626049995422363
    7. ']])' → logprob: -14.876049995422363
    8. ']' → logprob: -14.876049995422363
    9. ']int' → logprob: -15.251049995422363
    10. ']]]' → logprob: -15.751049995422363

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0380939356982708
    2. ' int' → logprob: -3.2880940437316895
    3. '	int' → logprob: -11.038093566894531
    4. ']int' → logprob: -11.163093566894531
    5. '[int' → logprob: -11.413093566894531
    6. '   ' → logprob: -12.288093566894531
    7. '<int' → logprob: -13.163093566894531
    8. ':int' → logprob: -13.913093566894531
    9. ',int' → logprob: -14.038093566894531
    10. '```' → logprob: -14.288093566894531

Token 22: ']]:
' (ID: 183340)
  Prédit: ']>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.6272222995758057
    2. ']:' → logprob: -1.5022222995758057
    3. ']' → logprob: -2.1272222995758057
    4. ']]' → logprob: -2.3772222995758057
    5. ']):' → logprob: -3.6272222995758057
    6. ')]' → logprob: -5.877222061157227
    7. '>' → logprob: -6.752222061157227
    8. ')' → logprob: -8.252222061157227
    9. ':' → logprob: -9.252222061157227
    10. ']]:
' → logprob: -9.252222061157227

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5871942639350891
    2. ':' → logprob: -0.8371942639350891
    3. ':
' → logprob: -5.337194442749023
    4. '\' → logprob: -6.462194442749023
    5. '\n' → logprob: -6.837194442749023
    6. '<|end|>' → logprob: -6.962194442749023
    7. '   ' → logprob: -7.462194442749023
    8. '```' → logprob: -7.587194442749023
    9. '        
' → logprob: -7.837194442749023
    10. '    ' → logprob: -8.337194442749023

Token 24: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13743525743484497
    2. '```' → logprob: -3.0124351978302
    3. '        ' → logprob: -3.2624351978302
    4. '\' → logprob: -4.137435436248779
    5. '\n' → logprob: -4.887435436248779
    6. '[' → logprob: -5.387435436248779
    7. '   ' → logprob: -6.012435436248779
    8. '        
' → logprob: -6.137435436248779
    9. '    ' → logprob: -6.637435436248779
    10. ' ' → logprob: -6.637435436248779

Token 25: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.046185314655303955
    2. 'Not' → logprob: -3.171185255050659
    3. ' ' → logprob: -5.921185493469238
    4. '  ' → logprob: -7.921185493469238
    5. '<|end|>' → logprob: -9.671185493469238
    6. '_Not' → logprob: -10.921185493469238
    7. ' ' → logprob: -11.796185493469238
    8. '_not' → logprob: -11.921185493469238
    9. '@Not' → logprob: -12.421185493469238
    10. '   ' → logprob: -12.421185493469238

Token 26: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -1.688212614681106e-05
    2. 'implemented' → logprob: -11.500017166137695
    3. 'Found' → logprob: -12.875017166137695
    4. 'Impl' → logprob: -13.375017166137695
    5. 'Im' → logprob: -13.875017166137695
    6. 'Imp' → logprob: -14.000017166137695
    7. 'Implement' → logprob: -14.625017166137695
    8. 'Supported' → logprob: -15.875017166137695
    9. 'impl' → logprob: -17.500017166137695
    10. 'Implementation' → logprob: -17.625017166137695

Token 27: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.173704271830502e-06
    2. 'rror' → logprob: -13.62500286102295
    3. '```' → logprob: -14.50000286102295
    4. '()' → logprob: -14.62500286102295
    5. 'error' → logprob: -15.75000286102295
    6. '   ' → logprob: -15.87500286102295
    7. '_Error' → logprob: -16.125003814697266
    8. 'Exception' → logprob: -16.250003814697266
    9. 'Erro' → logprob: -16.500003814697266
    10. '(Error' → logprob: -16.625003814697266

Token 28: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6335780024528503
    2. '<|end|>' → logprob: -2.008578062057495
    3. '```' → logprob: -2.258578062057495
    4. '\n' → logprob: -2.633578062057495
    5. '\' → logprob: -3.383578062057495
    6. ' ' → logprob: -3.633578062057495
    7. '   ' → logprob: -3.633578062057495
    8. ' 
' → logprob: -4.008577823638916
    9. '' → logprob: -4.258577823638916
    10. '    
' → logprob: -5.258577823638916

Token 29: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2790287733078003
    2. '   ' → logprob: -2.15402889251709
    3. ' 
' → logprob: -3.15402889251709
    4. '    
' → logprob: -3.40402889251709
    5. 'class' → logprob: -4.40402889251709
    6. '```' → logprob: -4.52902889251709
    7. '\n' → logprob: -4.90402889251709
    8. ' ' → logprob: -5.02902889251709
    9. '\' → logprob: -5.52902889251709
    10. '  
' → logprob: -6.02902889251709

Token 30: ' Br' (ID: 2866)
  Prédit: ' Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.15436893701553345
    2. ' Br' → logprob: -2.6543688774108887
    3. ' ' → logprob: -3.7793688774108887
    4. ' Complete' → logprob: -4.279368877410889
    5. ' Basic' → logprob: -5.029368877410889
    6. ' Simple' → logprob: -5.279368877410889
    7. ' Factor' → logprob: -5.529368877410889
    8. ' Classic' → logprob: -5.654368877410889
    9. ' Quadr' → logprob: -5.654368877410889
    10. ' Trial' → logprob: -6.279368877410889

Token 31: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.0032095611095428467
    2. 'e' → logprob: -6.003209590911865
    3. 'oken' → logprob: -8.753209114074707
    4. 'ut' → logprob: -8.878209114074707
    5. 'ent' → logprob: -9.753209114074707
    6. 'oke' → logprob: -9.753209114074707
    7. 'em' → logprob: -10.378209114074707
    8. 'o' → logprob: -10.753209114074707
    9. 'a' → logprob: -10.753209114074707
    10. 'ook' → logprob: -11.003209114074707

Token 32: 'Force' (ID: 27384)
  Prédit: 'Force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Force' → logprob: -7.135819760151207e-05
    2. 'For' → logprob: -10.00007152557373
    3. 'Factor' → logprob: -11.50007152557373
    4. 'F' → logprob: -12.25007152557373
    5. 'Fo' → logprob: -12.25007152557373
    6. '```' → logprob: -12.87507152557373
    7. ' Force' → logprob: -13.37507152557373
    8. ' ' → logprob: -14.75007152557373
    9. '-' → logprob: -14.75007152557373
    10. '   ' → logprob: -15.37507152557373

Token 33: 'Factor' (ID: 23681)
  Prédit: 'Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.2271391600370407
    2. 'Strategy' → logprob: -1.6021391153335571
    3. ':' → logprob: -7.352138996124268
    4. 'Fact' → logprob: -7.352138996124268
    5. 'F' → logprob: -9.602139472961426
    6. 'Solver' → logprob: -9.852139472961426
    7. 'Optimizer' → logprob: -9.852139472961426
    8. 'Search' → logprob: -10.102139472961426
    9. ' Factor' → logprob: -10.102139472961426
    10. 'Method' → logprob: -10.727139472961426

Token 34: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -2.2007883671903983e-05
    2. 'Strategy' → logprob: -11.250021934509277
    3. '```' → logprob: -12.125021934509277
    4. 'izer' → logprob: -14.250021934509277
    5. 'iza' → logprob: -14.375021934509277
    6. '   ' → logprob: -14.375021934509277
    7. 'iation' → logprob: -14.500021934509277
    8. 'Factor' → logprob: -14.750021934509277
    9. 'i' → logprob: -16.250022888183594
    10. 'iz' → logprob: -16.375022888183594

Token 35: '(F' (ID: 12044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39045676589012146
    2. 'Strategy' → logprob: -1.1404567956924438
    3. '(' → logprob: -5.890456676483154
    4. '():' → logprob: -8.265457153320312
    5. 'Strategies' → logprob: -8.515457153320312
    6. ' Strategy' → logprob: -9.390457153320312
    7. '_strategy' → logprob: -9.640457153320312
    8. '):' → logprob: -10.015457153320312
    9. '(S' → logprob: -10.640457153320312
    10. ' :' → logprob: -10.890457153320312

Token 36: 'actor' (ID: 8428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013882569037377834
    2. 'actor' → logprob: -4.388882637023926
    3. 'a' → logprob: -7.388882637023926
    4. 'o' → logprob: -8.263882637023926
    5. '```' → logprob: -8.763882637023926
    6. 'acto' → logprob: -9.388882637023926
    7. 'or' → logprob: -10.013882637023926
    8. 'act' → logprob: -10.388882637023926
    9. 'rac' → logprob: -10.513882637023926
    10. 'race' → logprob: -10.763882637023926

Token 37: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.00026753442944027483
    2. 'Factor' → logprob: -8.62526798248291
    3. 'Force' → logprob: -10.62526798248291
    4. 'o' → logprob: -10.75026798248291
    5. '```' → logprob: -11.25026798248291
    6. 'ize' → logprob: -12.00026798248291
    7. 'iz' → logprob: -12.00026798248291
    8. 'iza' → logprob: -12.25026798248291
    9. 'izat' → logprob: -12.87526798248291
    10. '   ' → logprob: -13.00026798248291

Token 38: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.00011725161311915144
    2. ')' → logprob: -9.875117301940918
    3. '):' → logprob: -10.375117301940918
    4. 'Strateg' → logprob: -11.000117301940918
    5. 'Stra' → logprob: -11.750117301940918
    6. ' Strategy' → logprob: -12.750117301940918
    7. 'S' → logprob: -12.750117301940918
    8. 'Strategies' → logprob: -13.375117301940918
    9. '_strategy' → logprob: -13.750117301940918
    10. 'St' → logprob: -15.375117301940918

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019483851792756468
    2. ')' → logprob: -8.750194549560547
    3. ':' → logprob: -10.875194549560547
    4. '):
' → logprob: -11.250194549560547
    5. '   ' → logprob: -13.250194549560547
    6. ' ):' → logprob: -13.250194549560547
    7. '():' → logprob: -15.625194549560547
    8. '>:' → logprob: -16.125194549560547
    9. '>):' → logprob: -16.250194549560547
    10. ':)' → logprob: -16.875194549560547

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19081339240074158
    2. ':' → logprob: -1.815813422203064
    3. ':
' → logprob: -4.9408135414123535
    4. '```' → logprob: -6.8158135414123535
    5. '
' → logprob: -7.0658135414123535
    6. '    
' → logprob: -7.3158135414123535
    7. '    ' → logprob: -7.6908135414123535
    8. '       ' → logprob: -8.690813064575195
    9. ' :' → logprob: -9.565813064575195
    10. ' 
' → logprob: -9.815813064575195

Token 41: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7180464267730713
    2. ' def' → logprob: -0.7180464267730713
    3. '
' → logprob: -4.218046188354492
    4. 'def' (adapté à ' def') → logprob: -4.968046188354492
    5. '```' → logprob: -7.343046188354492
    6. '    ' → logprob: -7.468046188354492
    7. '    
' → logprob: -7.593046188354492
    8. ' 
' → logprob: -7.843046188354492
    9. ' ' → logprob: -8.218046188354492
    10. '       ' → logprob: -9.093046188354492

Token 42: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.11268012225627899
    2. ' ' → logprob: -2.362680196762085
    3. 'factor' → logprob: -4.862679958343506
    4. ' f' → logprob: -5.862679958343506
    5. ' def' → logprob: -7.987679958343506
    6. '_' → logprob: -7.987679958343506
    7. ' space' → logprob: -8.237680435180664
    8. ' _' → logprob: -8.237680435180664
    9. '_factor' → logprob: -8.362680435180664
    10. ' ' → logprob: -9.862680435180664

Token 43: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0005113297956995666
    2. '_' → logprob: -7.625511169433594
    3. '_p' → logprob: -11.750511169433594
    4. '_pair' → logprob: -12.250511169433594
    5. ' _' → logprob: -12.500511169433594
    6. '   ' → logprob: -13.000511169433594
    7. 'ization' → logprob: -13.375511169433594
    8. 'ize' → logprob: -13.750511169433594
    9. '```' → logprob: -15.000511169433594
    10. ')_' → logprob: -15.250511169433594

Token 44: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003930192324332893
    2. '(' → logprob: -7.875392913818359
    3. ' (' → logprob: -11.37539291381836
    4. '(s' → logprob: -14.00039291381836
    5. '   ' → logprob: -15.25039291381836
    6. 'self' → logprob: -16.25039291381836
    7. '       ' → logprob: -16.37539291381836
    8. '_(' → logprob: -16.87539291381836
    9. '```' → logprob: -16.87539291381836
    10. ' ' → logprob: -17.25039291381836

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000261216628132388
    2. ' ,' → logprob: -8.750261306762695
    3. 'self' → logprob: -9.250261306762695
    4. ',self' → logprob: -12.875261306762695
    5. ',n' → logprob: -13.375261306762695
    6. '   ' → logprob: -13.750261306762695
    7. ')' → logprob: -15.000261306762695
    8. 'n' → logprob: -15.250261306762695
    9. 's' → logprob: -15.500261306762695
    10. ' ' → logprob: -15.750261306762695

Token 46: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3679125905036926
    2. ' n' → logprob: -1.4929125308990479
    3. 'self' → logprob: -2.742912530899048
    4. 'n' → logprob: -3.992912530899048
    5. ' ' → logprob: -8.492912292480469
    6. ' s' → logprob: -10.992912292480469
    7. ' ' → logprob: -11.242912292480469
    8. 's' → logprob: -11.492912292480469
    9. ')' → logprob: -11.617912292480469
    10. '(self' → logprob: -12.242912292480469

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5027716159820557
    2. ')' → logprob: -1.1277716159820557
    3. '):' → logprob: -2.8777716159820557
    4. ' )' → logprob: -4.877771377563477
    5. ' ):' → logprob: -5.752771377563477
    6. ' :' → logprob: -5.752771377563477
    7. '   ' → logprob: -7.252771377563477
    8. ',' → logprob: -8.877771377563477
    9. ':int' → logprob: -8.877771377563477
    10. '):
' → logprob: -9.752771377563477

Token 48: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05921516194939613
    2. 'int' → logprob: -3.0592150688171387
    3. ' ' → logprob: -4.559215068817139
    4. ')' → logprob: -10.059215545654297
    5. ':int' → logprob: -11.059215545654297
    6. ' )' → logprob: -11.184215545654297
    7. '(int' → logprob: -11.934215545654297
    8. '  ' → logprob: -12.309215545654297
    9. '[int' → logprob: -12.434215545654297
    10. '```' → logprob: -12.684215545654297

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.995397365652025e-05
    2. '):' → logprob: -9.375089645385742
    3. ' )' → logprob: -12.750089645385742
    4. '   ' → logprob: -13.500089645385742
    5. ')->' → logprob: -15.000089645385742
    6. '`)' → logprob: -15.625089645385742
    7. '       ' → logprob: -16.625089645385742
    8. '):
' → logprob: -17.125089645385742
    9. 'self' → logprob: -17.500089645385742
    10. ':' → logprob: -17.500089645385742

Token 50: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013395269401371479
    2. '):' → logprob: -4.388395309448242
    3. '->' → logprob: -8.513395309448242
    4. ')' → logprob: -8.888395309448242
    5. ' ->' → logprob: -9.138395309448242
    6. '       ' → logprob: -9.138395309448242
    7. ':return' → logprob: -9.513395309448242
    8. ':**' → logprob: -9.888395309448242
    9. ' :' → logprob: -10.138395309448242
    10. ')->' → logprob: -10.138395309448242

Token 51: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0052377874962985516
    2. 'list' → logprob: -5.255237579345703
    3. ' ' → logprob: -12.880237579345703
    4. ' ' → logprob: -13.755237579345703
    5. 'List' → logprob: -16.130237579345703
    6. '```' → logprob: -16.630237579345703
    7. '	list' → logprob: -17.005237579345703
    8. ' int' → logprob: -17.380237579345703
    9. ' List' → logprob: -17.630237579345703
    10. ' []' → logprob: -17.630237579345703

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.292095299111679e-05
    2. '[int' → logprob: -9.875082969665527
    3. '[List' → logprob: -11.750082969665527
    4. '[t' → logprob: -11.875082969665527
    5. '[[' → logprob: -12.250082969665527
    6. '[
' → logprob: -12.375082969665527
    7. '[list' → logprob: -12.750082969665527
    8. '[(' → logprob: -13.875082969665527
    9. ' [' → logprob: -14.000082969665527
    10. '[token' → logprob: -14.500082969665527

Token 53: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -4.596781946020201e-05
    2. ' tuple' → logprob: -10.000045776367188
    3. 'tu' → logprob: -15.000045776367188
    4. '(tuple' → logprob: -16.625045776367188
    5. '   ' → logprob: -17.000045776367188
    6. 'int' → logprob: -17.375045776367188
    7. '       ' → logprob: -18.125045776367188
    8. ' ' → logprob: -18.125045776367188
    9. '           ' → logprob: -18.250045776367188
    10. '[' → logprob: -18.375045776367188

Token 54: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.1008713702030946e-06
    2. ',int' → logprob: -13.750001907348633
    3. 'int' → logprob: -14.625001907348633
    4. ',' → logprob: -15.125001907348633
    5. '[' → logprob: -15.625001907348633
    6. '<int' → logprob: -17.125001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '[
' → logprob: -18.250001907348633
    9. '[in' → logprob: -18.750001907348633
    10. '[Int' → logprob: -18.750001907348633

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ',int' → logprob: -9.875053405761719
    3. ' ,' → logprob: -13.750053405761719
    4. '   ' → logprob: -15.375053405761719
    5. '‌,' → logprob: -16.12505340576172
    6. ',

' → logprob: -16.75005340576172
    7. ',float' → logprob: -16.75005340576172
    8. ',n' → logprob: -16.87505340576172
    9. ',
' → logprob: -17.12505340576172
    10. ',Integer' → logprob: -17.37505340576172

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007627569139003754
    2. ' int' → logprob: -4.882627487182617
    3. '   ' → logprob: -11.132627487182617
    4. ' ' → logprob: -13.132627487182617
    5. ',int' → logprob: -13.257627487182617
    6. '```' → logprob: -13.882627487182617
    7. '  ' → logprob: -14.507627487182617
    8. '	int' → logprob: -14.507627487182617
    9. '    ' → logprob: -15.007627487182617
    10. '(int' → logprob: -16.132627487182617

Token 57: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.9157254099845886
    2. ']:' → logprob: -0.9157254099845886
    3. ']):' → logprob: -1.9157254695892334
    4. ']' → logprob: -3.0407254695892334
    5. ']>' → logprob: -6.415725231170654
    6. ')' → logprob: -6.790725231170654
    7. ')]' → logprob: -7.040725231170654
    8. ']]:
' → logprob: -8.415725708007812
    9. '):' → logprob: -8.665725708007812
    10. ':' → logprob: -8.665725708007812

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036037206882610917
    2. ':' → logprob: -8.000360488891602
    3. '        
' → logprob: -11.500360488891602
    4. '```' → logprob: -12.500360488891602
    5. '   ' → logprob: -13.000360488891602
    6. '
' → logprob: -13.000360488891602
    7. '    ' → logprob: -14.000360488891602
    8. '      ' → logprob: -14.125360488891602
    9. '\n' → logprob: -14.125360488891602
    10. ':
' → logprob: -14.250360488891602

Token 59: ' factors' (ID: 11652)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.14325089752674103
    2. '       ' → logprob: -2.1432509422302246
    3. 'result' → logprob: -5.018250942230225
    4. ' result' → logprob: -6.018250942230225
    5. 'pairs' → logprob: -6.018250942230225
    6. ' pairs' → logprob: -6.268250942230225
    7. ' []' → logprob: -6.768250942230225
    8. '```' → logprob: -8.018250465393066
    9. '[]' → logprob: -8.143250465393066
    10. ' [' → logprob: -8.518250465393066

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006308287265710533
    2. '=' → logprob: -7.375630855560303
    3. '=[]' → logprob: -13.250630378723145
    4. 's' → logprob: -13.625630378723145
    5. '   ' → logprob: -15.125630378723145
    6. '  ' → logprob: -15.750630378723145
    7. ' =
' → logprob: -15.875630378723145
    8. '[]' → logprob: -16.00063133239746
    9. ' =[' → logprob: -16.00063133239746
    10. '[:]' → logprob: -16.12563133239746

Token 61: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6931532025337219
    2. ' []' → logprob: -0.6931532025337219
    3. '[' → logprob: -12.568153381347656
    4. ' [' → logprob: -13.443153381347656
    5. '[]
' → logprob: -14.943153381347656
    6. ' []
' → logprob: -15.068153381347656
    7. '[]}' → logprob: -15.193153381347656
    8. ' ' → logprob: -16.818153381347656
    9. '[]>' → logprob: -17.068153381347656
    10. '   ' → logprob: -17.568153381347656

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12038154155015945
    2. '
' → logprob: -2.2453815937042236
    3. ' for' → logprob: -5.6203813552856445
    4. '        
' → logprob: -5.8703813552856445
    5. 'for' → logprob: -7.8703813552856445
    6. '    
' → logprob: -7.8703813552856445
    7. '   ' → logprob: -8.495381355285645
    8. '' → logprob: -10.995381355285645
    9. ' 
' → logprob: -10.995381355285645
    10. '  
' → logprob: -11.120381355285645

Token 63: ' limit' (ID: 5967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04865935444831848
    2. ' for' → logprob: -3.048659324645996
    3. '       ' → logprob: -9.548659324645996
    4. '```' → logprob: -14.548659324645996
    5. '   ' → logprob: -16.673660278320312
    6. 'import' → logprob: -17.173660278320312
    7. ' ' → logprob: -17.423660278320312
    8. '	for' → logprob: -18.923660278320312
    9. 'from' → logprob: -19.048660278320312
    10. '
' → logprob: -20.048660278320312

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011063856072723866
    2. '=' → logprob: -4.511064052581787
    3. ' ' → logprob: -12.011063575744629
    4. '=int' → logprob: -12.261063575744629
    5. ' for' → logprob: -13.011063575744629
    6. 'for' → logprob: -13.886063575744629
    7. ' in' → logprob: -14.261063575744629
    8. 'int' → logprob: -14.386063575744629
    9. 'import' → logprob: -15.261063575744629
    10. '   ' → logprob: -15.886063575744629

Token 65: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1069110706448555
    2. ' n' → logprob: -2.4819111824035645
    3. 'int' → logprob: -4.6069111824035645
    4. 'n' → logprob: -4.8569111824035645
    5. '   ' → logprob: -10.981910705566406
    6. '(int' → logprob: -11.981910705566406
    7. ' ' → logprob: -12.106910705566406
    8. '	int' → logprob: -12.356910705566406
    9. ' i' → logprob: -12.356910705566406
    10. ' in' → logprob: -12.606910705566406

Token 66: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005312616005539894
    2. '(' → logprob: -5.255312442779541
    3. '(s' → logprob: -9.7553129196167
    4. 'n' → logprob: -11.1303129196167
    5. '```' → logprob: -13.3803129196167
    6. '(abs' → logprob: -13.6303129196167
    7. ')n' → logprob: -13.6303129196167
    8. '	n' → logprob: -14.1303129196167
    9. '(pow' → logprob: -14.3803129196167
    10. ' n' → logprob: -16.130311965942383

Token 67: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0059290360659360886
    2. ' **' → logprob: -5.130928993225098
    3. ')**' → logprob: -15.255928993225098
    4. '.sqrt' → logprob: -16.755929946899414
    5. ')' → logprob: -16.880929946899414
    6. ''s' → logprob: -17.130929946899414
    7. ' ' → logprob: -17.130929946899414
    8. '*' → logprob: -17.255929946899414
    9. '```' → logprob: -17.255929946899414
    10. '**)' → logprob: -17.755929946899414

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '.' → logprob: -15.125009536743164
    4. '   ' → logprob: -18.500009536743164
    5. '(' → logprob: -18.875009536743164
    6. '```' → logprob: -19.125009536743164
    7. ' ' → logprob: -19.375009536743164
    8. '    ' → logprob: -19.375009536743164
    9. '

' → logprob: -19.500009536743164
    10. '2' → logprob: -20.000009536743164

Token 69: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.000001907348633
    3. '5' → logprob: -15.250001907348633
    4. '```' → logprob: -16.375001907348633
    5. '1' → logprob: -16.750001907348633
    6. ' .' → logprob: -17.250001907348633
    7. '`.' → logprob: -17.250001907348633
    8. '6' → logprob: -18.125001907348633
    9. '    ' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.250001907348633

Token 70: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.375003814697266
    3. '   ' → logprob: -14.437503814697266
    4. '.' → logprob: -15.000003814697266
    5. '...' → logprob: -16.000003814697266
    6. '4' → logprob: -16.500003814697266
    7. '``' → logprob: -16.500003814697266
    8. '       ' → logprob: -16.750003814697266
    9. '"' → logprob: -16.750003814697266
    10. ' ' → logprob: -16.937503814697266

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011734402505680919
    2. ')+' → logprob: -7.001173496246338
    3. ' )' → logprob: -8.25117301940918
    4. '+' → logprob: -15.25117301940918
    5. '       ' → logprob: -16.00117301940918
    6. '())' → logprob: -16.12617301940918
    7. ' +' → logprob: -16.12617301940918
    8. '()' → logprob: -16.25117301940918
    9. '))' → logprob: -16.62617301940918
    10. '   ' → logprob: -17.00117301940918

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5754151344299316
    2. ' +' → logprob: -1.2004151344299316
    3. '+' → logprob: -2.0754151344299316
    4. '<|end|>' → logprob: -5.075415134429932
    5. ' for' → logprob: -6.200415134429932
    6. ')' → logprob: -6.950415134429932
    7. '
' → logprob: -7.825415134429932
    8. ' +
' → logprob: -7.950415134429932
    9. '+
' → logprob: -8.200414657592773
    10. '<|end|>' → logprob: -8.450414657592773

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0371549129486084
    2. 'for' (adapté à ' for') → logprob: -3.9121549129486084
    3. '       ' → logprob: -4.1621551513671875
    4. '
' → logprob: -7.5371551513671875
    5. ' ' → logprob: -8.912155151367188
    6. '+' → logprob: -9.787155151367188
    7. '	for' → logprob: -9.912155151367188
    8. '        ' → logprob: -10.412155151367188
    9. '   ' → logprob: -11.162155151367188
    10. '        
' → logprob: -11.162155151367188

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0022401853930205107
    2. ' ' → logprob: -6.127240180969238
    3. ' range' → logprob: -10.752240180969238
    4. 'i' → logprob: -11.127240180969238
    5. ' x' → logprob: -11.502240180969238
    6. ' num' → logprob: -13.252240180969238
    7. ' n' → logprob: -13.627240180969238
    8. ' _' → logprob: -13.627240180969238
    9. ' factor' → logprob: -13.627240180969238
    10. ' in' → logprob: -14.127240180969238

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029962435364723206
    2. 'in' → logprob: -6.127996444702148
    3. ' ' → logprob: -7.127996444702148
    4. ' i' → logprob: -13.127996444702148
    5. '<|end|>' → logprob: -13.377996444702148
    6. '  ' → logprob: -13.877996444702148
    7. '1' → logprob: -14.252996444702148
    8. '```' → logprob: -14.377996444702148
    9. '	in' → logprob: -14.627996444702148
    10. 'n' → logprob: -15.002996444702148

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -3.1424973713001236e-05
    2. 'range' → logprob: -10.500031471252441
    3. ' ' → logprob: -12.500031471252441
    4. '	range' → logprob: -15.875031471252441
    5. '(range' → logprob: -17.875030517578125
    6. ' xrange' → logprob: -17.875030517578125
    7. '_range' → logprob: -19.625030517578125
    8. '1' → logprob: -20.125030517578125
    9. ' ' → logprob: -20.250030517578125
    10. '  ' → logprob: -20.375030517578125

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.253090865968261e-06
    2. ' (' → logprob: -12.000009536743164
    3. '1' → logprob: -13.000009536743164
    4. ' ' → logprob: -14.625009536743164
    5. '(
' → logprob: -15.250009536743164
    6. ')' → logprob: -18.125009536743164
    7. ',' → logprob: -18.250009536743164
    8. '2' → logprob: -19.000009536743164
    9. '```' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.750009536743164

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023104806896299124
    2. ' ' → logprob: -6.252310276031494
    3. '2' → logprob: -7.877310276031494
    4. '   ' → logprob: -13.252310752868652
    5. '(' → logprob: -15.002310752868652
    6. '    ' → logprob: -15.752310752868652
    7. '       ' → logprob: -16.002309799194336
    8. '  ' → logprob: -17.127309799194336
    9. '	' → logprob: -17.502309799194336
    10. '```' → logprob: -17.752309799194336

Token 79: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.251944363117218
    2. ',' → logprob: -1.5019443035125732
    3. ' ' → logprob: -11.501944541931152
    4. ' ,
' → logprob: -12.626944541931152
    5. ',n' → logprob: -13.751944541931152
    6. ' ,

' → logprob: -15.376944541931152
    7. ' )' → logprob: -16.126943588256836
    8. ' ),' → logprob: -16.376943588256836
    9. ',i' → logprob: -16.501943588256836
    10. ',len' → logprob: -16.501943588256836

Token 80: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.25194233655929565
    2. 'limit' → logprob: -1.5019423961639404
    3. '(limit' → logprob: -11.87694263458252
    4. '    ' → logprob: -12.62694263458252
    5. ' ' → logprob: -14.00194263458252
    6. '_limit' → logprob: -14.37694263458252
    7. '```' → logprob: -14.87694263458252
    8. ' ' → logprob: -15.37694263458252
    9. 'lim' → logprob: -15.50194263458252
    10. ' n' → logprob: -15.62694263458252

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687223196029663
    2. '+' → logprob: -1.1368722915649414
    3. ' ' → logprob: -13.886872291564941
    4. '+i' → logprob: -16.886871337890625
    5. ')+' → logprob: -16.886871337890625
    6. ' +
' → logprob: -17.261871337890625
    7. '()+' → logprob: -17.511871337890625
    8. '1' → logprob: -17.636871337890625
    9. ' ' → logprob: -17.636871337890625
    10. '＋' → logprob: -17.636871337890625

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888978719711304
    2. ' ' → logprob: -2.578889846801758
    3. '```' → logprob: -17.203889846801758
    4. '2' → logprob: -17.828889846801758
    5. ' ' → logprob: -18.078889846801758
    6. ')' → logprob: -19.328889846801758
    7. '  ' → logprob: -19.828889846801758
    8. '۱' → logprob: -19.953889846801758
    9. '   ' → logprob: -20.578889846801758
    10. '

' → logprob: -20.828889846801758

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -20.125001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '2' → logprob: -21.750001907348633
    6. ')' → logprob: -21.750001907348633
    7. '  ' → logprob: -22.375001907348633
    8. '۱' → logprob: -22.625001907348633
    9. '

' → logprob: -23.062501907348633
    10. '１' → logprob: -23.187501907348633

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008713965304195881
    2. ':' → logprob: -4.758714199066162
    3. '):
' → logprob: -9.508713722229004
    4. ' ):' → logprob: -11.008713722229004
    5. ')' → logprob: -12.258713722229004
    6. ',' → logprob: -13.133713722229004
    7. '       ' → logprob: -14.258713722229004
    8. '():' → logprob: -14.883713722229004
    9. '):
' → logprob: -15.883713722229004
    10. ' :' → logprob: -16.25871467590332

Token 85: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008575215935707092
    2. '       ' → logprob: -5.883575439453125
    3. '):' → logprob: -6.008575439453125
    4. ' :' → logprob: -6.383575439453125
    5. ':
' → logprob: -7.758575439453125
    6. ' ' → logprob: -7.883575439453125
    7. '<|end|>' → logprob: -8.008575439453125
    8. '        ' → logprob: -8.758575439453125
    9. '           ' → logprob: -9.383575439453125
    10. ' ):' → logprob: -10.258575439453125

Token 86: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3744358718395233
    2. ':' → logprob: -1.3744359016418457
    3. ' :' → logprob: -3.4994359016418457
    4. ' if' → logprob: -4.624435901641846
    5. '<|end|>' → logprob: -4.624435901641846
    6. '):' → logprob: -6.124435901641846
    7. ' ):' → logprob: -6.249435901641846
    8. 'if' (adapté à ' if') → logprob: -6.999435901641846
    9. '       ' → logprob: -7.124435901641846
    10. '        ' → logprob: -7.499435901641846

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00023750975378789008
    2. 'n' → logprob: -8.375237464904785
    3. ' ' → logprob: -12.000237464904785
    4. ' ' → logprob: -14.750237464904785
    5. '	n' → logprob: -15.000237464904785
    6. ' (' → logprob: -16.2502384185791
    7. '(n' → logprob: -17.3752384185791
    8. ')n' → logprob: -19.2502384185791
    9. ' ‌' → logprob: -19.3752384185791
    10. '(' → logprob: -19.6252384185791

Token 88: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0055869752541184425
    2. '%' → logprob: -5.505587100982666
    3. ' ' → logprob: -6.505587100982666
    4. '%i' → logprob: -11.380586624145508
    5. ' ' → logprob: -15.255586624145508
    6. ' %=' → logprob: -16.505586624145508
    7. ' %#' → logprob: -16.505586624145508
    8. ')' → logprob: -16.755586624145508
    9. '<|end|>' → logprob: -16.755586624145508
    10. ' %"' → logprob: -16.755586624145508

Token 89: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10137089341878891
    2. 'i' → logprob: -2.3513708114624023
    3. ' ' → logprob: -6.851370811462402
    4. '	i' → logprob: -9.226370811462402
    5. ' ' → logprob: -12.476370811462402
    6. ' ‌' → logprob: -14.101370811462402
    7. '<|end|>' → logprob: -14.476370811462402
    8. '[i' → logprob: -15.101370811462402
    9. '0' → logprob: -15.476370811462402
    10. '    ' → logprob: -15.601370811462402

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0009532637195661664
    2. '==' → logprob: -7.000953197479248
    3. ' ' → logprob: -10.250953674316406
    4. ' =' → logprob: -12.375953674316406
    5. '=' → logprob: -13.500953674316406
    6. ')==' → logprob: -15.125953674316406
    7. ' ===' → logprob: -15.375953674316406
    8. ')' → logprob: -15.750953674316406
    9. '0' → logprob: -15.750953674316406
    10. '  ' → logprob: -17.125953674316406

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022412478923798
    2. ' ' → logprob: -1.9102240800857544
    3. ' ' → logprob: -17.78522491455078
    4. '۰' → logprob: -18.91022491455078
    5. '<|end|>' → logprob: -19.53522491455078
    6. '```' → logprob: -20.16022491455078
    7. ')' → logprob: -20.53522491455078
    8. '  ' → logprob: -20.66022491455078
    9. ' 

' → logprob: -20.91022491455078
    10. ' ' → logprob: -21.16022491455078

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '  ' → logprob: -19.253177642822266
    4. '۰' → logprob: -19.253177642822266
    5. ' ' → logprob: -20.003177642822266
    6. '

' → logprob: -21.003177642822266
    7. '٠' → logprob: -21.128177642822266
    8. '   ' → logprob: -21.378177642822266
    9. '```' → logprob: -21.378177642822266
    10. ' 

' → logprob: -21.753177642822266

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005767432739958167
    2. '):' → logprob: -7.500576972961426
    3. ':
' → logprob: -11.875576972961426
    4. ' and' → logprob: -12.000576972961426
    5. ':**' → logprob: -12.125576972961426
    6. ' :' → logprob: -13.250576972961426
    7. ',' → logprob: -13.375576972961426
    8. ')' → logprob: -13.625576972961426
    9. ':return' → logprob: -15.875576972961426
    10. '):
' → logprob: -16.25057601928711

Token 94: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9010486006736755
    2. '           ' → logprob: -1.1510486602783203
    3. '            ' → logprob: -2.4010486602783203
    4. ' factors' → logprob: -2.5260486602783203
    5. ' ' → logprob: -2.7760486602783203
    6. '                ' → logprob: -4.65104866027832
    7. '            
' → logprob: -4.77604866027832
    8. '             
' → logprob: -5.02604866027832
    9. ' ' → logprob: -5.02604866027832
    10. ' 
' → logprob: -5.15104866027832

Token 95: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.00022034443099983037
    2. ' ' → logprob: -8.87522029876709
    3. 'f' → logprob: -10.12522029876709
    4. ' factores' → logprob: -11.50022029876709
    5. ' (' → logprob: -11.75022029876709
    6. ' ' → logprob: -11.87522029876709
    7. 'Factors' → logprob: -12.37522029876709
    8. ' Factors' → logprob: -12.87522029876709
    9. ' factor' → logprob: -12.87522029876709
    10. ' f' → logprob: -13.25022029876709

Token 96: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20145729184150696
    2. '.' → logprob: -1.7014572620391846
    3. ' .' → logprob: -10.451457023620605
    4. '.Append' → logprob: -11.951457023620605
    5. '.extend' → logprob: -12.576457023620605
    6. ').' → logprob: -13.826457023620605
    7. '.ap' → logprob: -14.076457023620605
    8. '.app' → logprob: -14.201457023620605
    9. '.add' → logprob: -14.326457023620605
    10. 'append' → logprob: -14.326457023620605

Token 97: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0024894531816244125
    2. '(' → logprob: -6.0024895668029785
    3. '(
' → logprob: -11.75248908996582
    4. '(i' → logprob: -12.12748908996582
    5. ' (' → logprob: -15.62748908996582
    6. ' ((' → logprob: -16.12748908996582
    7. ' ' → logprob: -16.62748908996582
    8. '```' → logprob: -16.87748908996582
    9. '(((' → logprob: -17.00248908996582
    10. '(

' → logprob: -17.62748908996582

Token 98: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.615255839889869e-05
    2. ' i' → logprob: -9.250096321105957
    3. '	i' → logprob: -17.37509536743164
    4. '1' → logprob: -17.37509536743164
    5. '(i' → logprob: -17.75009536743164
    6. '   ' → logprob: -18.12509536743164
    7. ')i' → logprob: -18.37509536743164
    8. ',i' → logprob: -19.12509536743164
    9. '```' → logprob: -19.37509536743164
    10. '
' → logprob: -19.50009536743164

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ',
' → logprob: -12.625014305114746
    3. ' ,' → logprob: -12.625014305114746
    4. ',n' → logprob: -12.625014305114746
    5. ',

' → logprob: -13.500014305114746
    6. '‌,' → logprob: -13.625014305114746
    7. ',i' → logprob: -14.875014305114746
    8. '<|end|>' → logprob: -14.875014305114746
    9. '```' → logprob: -16.25001335144043
    10. ',)' → logprob: -16.25001335144043

Token 100: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018152866512537003
    2. 'n' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.518153190612793
    4. '(n' → logprob: -14.768153190612793
    5. ' ' → logprob: -14.893153190612793
    6. '	n' → logprob: -15.018153190612793
    7. '    ' → logprob: -15.268153190612793
    8. '   ' → logprob: -16.018152236938477
    9. ')n' → logprob: -16.518152236938477
    10. ' int' → logprob: -17.268152236938477

Token 101: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06197149679064751
    2. ' //' → logprob: -2.811971426010132
    3. ' ' → logprob: -12.936971664428711
    4. '   ' → logprob: -13.686971664428711
    5. '/i' → logprob: -15.186971664428711
    6. '```' → logprob: -17.18697166442871
    7. ' ' → logprob: -17.56197166442871
    8. '  ' → logprob: -17.68697166442871
    9. '//=' → logprob: -17.81197166442871
    10. 'i' → logprob: -17.81197166442871

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.615255839889869e-05
    2. ' i' → logprob: -9.250096321105957
    3. ' ' → logprob: -18.00009536743164
    4. '   ' → logprob: -18.00009536743164
    5. '	i' → logprob: -18.12509536743164
    6. ')' → logprob: -19.00009536743164
    7. ')i' → logprob: -19.37509536743164
    8. '  ' → logprob: -20.00009536743164
    9. '```' → logprob: -21.50009536743164
    10. '_i' → logprob: -21.75009536743164

Token 103: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00047726318007335067
    2. ')' → logprob: -8.125476837158203
    3. '))
' → logprob: -8.625476837158203
    4. '       ' → logprob: -14.000476837158203
    5. ' ))' → logprob: -15.000476837158203
    6. '))

' → logprob: -15.625476837158203
    7. ')))' → logprob: -15.875476837158203
    8. ')
' → logprob: -16.875476837158203
    9. '           ' → logprob: -17.250476837158203
    10. '   ' → logprob: -17.375476837158203

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005991425714455545
    2. '
' → logprob: -7.625598907470703
    3. '        
' → logprob: -9.875598907470703
    4. 'return' → logprob: -10.750598907470703
    5. ' return' → logprob: -11.625598907470703
    6. '   ' → logprob: -11.875598907470703
    7. '	' → logprob: -12.125598907470703
    8. '<|end|>' → logprob: -12.375598907470703
    9. '      ' → logprob: -12.875598907470703
    10. '```' → logprob: -13.250598907470703

Token 105: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006089949980378151
    2. 'return' (adapté à ' return') → logprob: -5.13109016418457
    3. ' return' → logprob: -8.88109016418457
    4. '   ' → logprob: -11.13109016418457
    5. '
' → logprob: -12.25609016418457
    6. '	return' → logprob: -13.88109016418457
    7. '```' → logprob: -14.00609016418457
    8. ':return' → logprob: -15.25609016418457
    9. '        
' → logprob: -15.50609016418457
    10. '      ' → logprob: -15.50609016418457

Token 106: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.17978256940841675
    2. ' factors' → logprob: -1.8047826290130615
    3. 'factor' → logprob: -10.55478286743164
    4. ' f' → logprob: -12.42978286743164
    5. 'facts' → logprob: -13.42978286743164
    6. ' ' → logprob: -13.67978286743164
    7. ' ' → logprob: -13.80478286743164
    8. ' factores' → logprob: -13.92978286743164
    9. 'fact' → logprob: -13.92978286743164
    10. 'fac' → logprob: -14.30478286743164

Token 107: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7072407603263855
    2. '<|end|>' → logprob: -1.3322408199310303
    3. '#' → logprob: -1.9572408199310303
    4. '[' → logprob: -3.5822408199310303
    5. '```' → logprob: -3.9572408199310303
    6. '\n' → logprob: -4.082240581512451
    7. ' ' → logprob: -4.332240581512451
    8. ')' → logprob: -4.832240581512451
    9. '<|end|>' → logprob: -5.832240581512451
    10. 'newline' → logprob: -6.082240581512451

Token 108: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8945059180259705
    2. '
' → logprob: -1.1445059776306152
    3. '```' → logprob: -1.7695059776306152
    4. '<|end|>' → logprob: -2.7695059776306152
    5. '#' → logprob: -3.5195059776306152
    6. ' class' → logprob: -5.894505977630615
    7. '\n' → logprob: -6.269505977630615
    8. 'c' → logprob: -7.019505977630615
    9. '<|end|>' → logprob: -7.019505977630615
    10. '[' → logprob: -7.019505977630615

Token 109: ' Sequence' (ID: 57144)
  Prédit: ' Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.35869476199150085
    2. ' Trial' → logprob: -2.6086947917938232
    3. ' Ferm' → logprob: -2.7336947917938232
    4. ' Poll' → logprob: -3.1086947917938232
    5. 'Prime' → logprob: -3.4836947917938232
    6. ' Optim' → logprob: -3.6086947917938232
    7. ' Efficient' → logprob: -4.358694553375244
    8. ' Optimal' → logprob: -4.483694553375244
    9. 'Optim' → logprob: -5.483694553375244
    10. ' Advanced' → logprob: -5.483694553375244

Token 110: 'Generator' (ID: 14802)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.00847049243748188
    2. 'Generator' → logprob: -5.75847053527832
    3. 'Based' → logprob: -6.13347053527832
    4. 'Sum' → logprob: -7.13347053527832
    5. 'Strategy' → logprob: -8.00847053527832
    6. ':' → logprob: -8.00847053527832
    7. 'Range' → logprob: -8.63347053527832
    8. 'Multiplier' → logprob: -8.75847053527832
    9. 'Analyzer' → logprob: -9.00847053527832
    10. 'Split' → logprob: -9.63347053527832

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002286886883666739
    2. '(' → logprob: -9.250228881835938
    3. ':
' → logprob: -9.625228881835938
    4. ' :' → logprob: -9.750228881835938
    5. '):' → logprob: -13.500228881835938
    6. '(S' → logprob: -13.750228881835938
    7. ':

' → logprob: -13.875228881835938
    8. '(F' → logprob: -14.375228881835938
    9. '(object' → logprob: -14.375228881835938
    10. '():' → logprob: -14.625228881835938

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041184606379829347
    2. ' def' → logprob: -8.000411987304688
    3. ':' → logprob: -9.750411987304688
    4. '    
' → logprob: -11.875411987304688
    5. 'def' → logprob: -12.500411987304688
    6. '    ' → logprob: -13.625411987304688
    7. ',' → logprob: -13.625411987304688
    8. ':
' → logprob: -13.875411987304688
    9. '   ' → logprob: -14.500411987304688
    10. '	def' → logprob: -14.500411987304688

Token 113: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0807965025305748
    2. '   ' → logprob: -3.080796480178833
    3. 'def' (adapté à ' def') → logprob: -3.455796480178833
    4. 'class' → logprob: -9.080796241760254
    5. '    ' → logprob: -11.205796241760254
    6. ' class' → logprob: -12.705796241760254
    7. '	def' → logprob: -14.205796241760254
    8. ':' → logprob: -14.205796241760254
    9. ' """' → logprob: -14.205796241760254
    10. 'from' → logprob: -15.455796241760254

Token 114: ' __' (ID: 2516)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.423571228981018
    2. ' __' → logprob: -1.548571228981018
    3. ' factor' → logprob: -1.673571228981018
    4. '_factor' → logprob: -1.923571228981018
    5. 'init' → logprob: -2.2985711097717285
    6. '_init' → logprob: -2.9235711097717285
    7. '__' → logprob: -3.1735711097717285
    8. ' init' → logprob: -5.6735711097717285
    9. '_generate' → logprob: -5.9235711097717285
    10. 'generate' → logprob: -6.1735711097717285

Token 115: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.125
    3. 'in' → logprob: -17.125
    4. 'iter' → logprob: -17.875
    5. ' init' → logprob: -18.875
    6. 'next' → logprob: -19.0
    7. 'call' → logprob: -19.125
    8. 'int' → logprob: -19.25
    9. '
' → logprob: -19.75
    10. 'i' → logprob: -19.75

Token 116: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003171294927597046
    2. '(self' → logprob: -6.253171443939209
    3. '__' → logprob: -7.128171443939209
    4. '__(
' → logprob: -8.25317096710205
    5. '(' → logprob: -8.87817096710205
    6. '_(' → logprob: -11.37817096710205
    7. '__((' → logprob: -12.12817096710205
    8. '__('' → logprob: -12.62817096710205
    9. '__(*' → logprob: -12.62817096710205
    10. 'self' → logprob: -12.87817096710205

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001957179047167301
    2. ' self' → logprob: -6.251957416534424
    3. '   ' → logprob: -10.626956939697266
    4. '       ' → logprob: -13.126956939697266
    5. ')' → logprob: -14.126956939697266
    6. 'n' → logprob: -14.751956939697266
    7. '
' → logprob: -14.876956939697266
    8. ' ' → logprob: -15.751956939697266
    9. '(self' → logprob: -16.126956939697266
    10. 'factor' → logprob: -16.251956939697266

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006812188657931983
    2. ' ,' → logprob: -7.750681400299072
    3. 'self' → logprob: -8.500680923461914
    4. '):' → logprob: -10.250680923461914
    5. ',n' → logprob: -12.375680923461914
    6. ' self' → logprob: -13.000680923461914
    7. ')' → logprob: -13.875680923461914
    8. ' ):' → logprob: -13.875680923461914
    9. ',self' → logprob: -14.375680923461914
    10. '   ' → logprob: -14.375680923461914

Token 119: ' a' (ID: 261)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7545132637023926
    2. 'start' → logprob: -1.6295132637023926
    3. ' start' → logprob: -2.1295132637023926
    4. 'self' → logprob: -3.0045132637023926
    5. ' factor' → logprob: -3.3795132637023926
    6. ' strategy' → logprob: -3.8795132637023926
    7. 'strategy' → logprob: -3.8795132637023926
    8. 'sequence' → logprob: -4.004513263702393
    9. 'n' → logprob: -4.129513263702393
    10. ' self' → logprob: -4.754513263702393

Token 120: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5245801210403442
    2. ':' → logprob: -0.8995801210403442
    3. ':int' → logprob: -6.774580001831055
    4. ' ,' → logprob: -9.149580001831055
    5. ')' → logprob: -9.524580001831055
    6. ':,' → logprob: -10.149580001831055
    7. '1' → logprob: -10.524580001831055
    8. '):' → logprob: -11.024580001831055
    9. '_,' → logprob: -11.649580001831055
    10. '=' → logprob: -12.149580001831055

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000866083602886647
    2. ' int' → logprob: -7.750865936279297
    3. 'list' → logprob: -7.875865936279297
    4. '1' → logprob: -11.500865936279297
    5. ':int' → logprob: -11.625865936279297
    6. 'List' → logprob: -11.750865936279297
    7. ',' → logprob: -12.375865936279297
    8. ')' → logprob: -12.500865936279297
    9. '[int' → logprob: -12.625865936279297
    10. '   ' → logprob: -12.875865936279297

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005476363468915224
    2. ':' → logprob: -5.255476474761963
    3. ')' → logprob: -8.755475997924805
    4. '):' → logprob: -9.755475997924805
    5. ' ,' → logprob: -11.505475997924805
    6. '=' → logprob: -11.630475997924805
    7. ':int' → logprob: -12.255475997924805
    8. '   ' → logprob: -14.380475997924805
    9. ',b' → logprob: -14.630475997924805
    10. '0' → logprob: -15.505475997924805

Token 123: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07161936908960342
    2. 'd' → logprob: -2.8216192722320557
    3. ' b' → logprob: -4.821619510650635
    4. ' d' → logprob: -6.821619510650635
    5. 'r' → logprob: -8.196619033813477
    6. 'l' → logprob: -10.196619033813477
    7. 'n' → logprob: -10.696619033813477
    8. 'c' → logprob: -10.821619033813477
    9. '   ' → logprob: -11.071619033813477
    10. 'q' → logprob: -11.196619033813477

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003821694990620017
    2. '):' → logprob: -6.003821849822998
    3. ',' → logprob: -6.753821849822998
    4. ':int' → logprob: -9.25382137298584
    5. ')' → logprob: -9.50382137298584
    6. '):
' → logprob: -12.25382137298584
    7. '=' → logprob: -13.62882137298584
    8. ' :' → logprob: -13.87882137298584
    9. ' ):' → logprob: -14.87882137298584
    10. '<|end|>' → logprob: -15.62882137298584

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05524241179227829
    2. ' int' → logprob: -2.9302423000335693
    3. ':int' → logprob: -8.680242538452148
    4. ')' → logprob: -8.930242538452148
    5. '   ' → logprob: -11.305242538452148
    6. '):
' → logprob: -11.555242538452148
    7. ':' → logprob: -11.555242538452148
    8. ' ' → logprob: -12.180242538452148
    9. 'c' → logprob: -12.555242538452148
    10. '[int' → logprob: -12.680242538452148

Token 126: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06610583513975143
    2. ')' → logprob: -3.566105842590332
    3. ',' → logprob: -3.566105842590332
    4. ':' → logprob: -5.441105842590332
    5. '):
' → logprob: -5.816105842590332
    6. '=' → logprob: -10.316105842590332
    7. ' ):' → logprob: -10.566105842590332
    8. '   ' → logprob: -11.191105842590332
    9. '):
' → logprob: -11.691105842590332
    10. ' ' → logprob: -11.941105842590332

Token 127: ' factor' (ID: 12332)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16237446665763855
    2. ' c' → logprob: -2.162374496459961
    3. 'n' → logprob: -5.037374496459961
    4. 'limit' → logprob: -5.662374496459961
    5. ' max' → logprob: -5.787374496459961
    6. 'max' → logprob: -5.912374496459961
    7. '   ' → logprob: -6.037374496459961
    8. 'start' → logprob: -6.162374496459961
    9. ' start' → logprob: -6.287374496459961
    10. ' limit' → logprob: -6.412374496459961

Token 128: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.003828225424513221
    2. '_strategy' → logprob: -6.253828048706055
    3. '_' → logprob: -6.503828048706055
    4. '_factor' → logprob: -8.628828048706055
    5. 's' → logprob: -9.128828048706055
    6. '   ' → logprob: -10.753828048706055
    7. ' _' → logprob: -11.378828048706055
    8. ':' → logprob: -11.503828048706055
    9. '_str' → logprob: -12.253828048706055
    10. 'ation' → logprob: -12.253828048706055

Token 129: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.0012477317359298468
    2. 'Strategy' → logprob: -6.751247882843018
    3. ':' → logprob: -9.75124740600586
    4. '_method' → logprob: -11.75124740600586
    5. 'strategy' → logprob: -11.75124740600586
    6. ' strategy' → logprob: -13.87624740600586
    7. '_str' → logprob: -13.87624740600586
    8. ')' → logprob: -14.25124740600586
    9. '_factor' → logprob: -15.12624740600586
    10. ' Strategy' → logprob: -15.37624740600586

Token 130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04996895790100098
    2. '):' → logprob: -3.049968957901001
    3. ')' → logprob: -6.674968719482422
    4. '=None' → logprob: -9.799968719482422
    5. '):
' → logprob: -10.299968719482422
    6. ' :' → logprob: -11.299968719482422
    7. ' ):' → logprob: -11.424968719482422
    8. '<|end|>' → logprob: -13.299968719482422
    9. ',' → logprob: -13.799968719482422
    10. '=' → logprob: -14.049968719482422

Token 131: ' Factor' (ID: 63743)
  Prédit: ' Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.048608485609292984
    2. 'Factor' → logprob: -3.0486085414886475
    3. ')' → logprob: -11.798608779907227
    4. ' factor' → logprob: -12.548608779907227
    5. ' None' → logprob: -12.798608779907227
    6. ' ' → logprob: -12.923608779907227
    7. ' )' → logprob: -13.298608779907227
    8. '_factor' → logprob: -13.548608779907227
    9. ' ' → logprob: -14.798608779907227
    10. ' 
' → logprob: -15.298608779907227

Token 132: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -2.5776860184123507e-06
    2. 'ation' → logprob: -13.00000286102295
    3. ' ' → logprob: -17.500001907348633
    4. 'iz' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. 'iza' → logprob: -17.875001907348633
    7. 'IZATION' → logprob: -18.500001907348633
    8. 'iation' → logprob: -18.625001907348633
    9. 'izer' → logprob: -18.875001907348633
    10. '_' → logprob: -18.875001907348633

Token 133: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.2471589798224159e-05
    2. 'Strateg' → logprob: -12.000012397766113
    3. '_strategy' → logprob: -12.875012397766113
    4. '):' → logprob: -13.500012397766113
    5. 'Factor' → logprob: -14.625012397766113
    6. 'Strategies' → logprob: -15.250012397766113
    7. '[str' → logprob: -15.375012397766113
    8. ')' → logprob: -15.625012397766113
    9. '):
' → logprob: -15.625012397766113
    10. '   ' → logprob: -15.750012397766113

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029873361811041832
    2. ')' → logprob: -3.5298733711242676
    3. '):
' → logprob: -9.02987289428711
    4. ' ):' → logprob: -13.27987289428711
    5. ':' → logprob: -14.27987289428711
    6. ',' → logprob: -15.65487289428711
    7. '):
' → logprob: -15.77987289428711
    8. ' )' → logprob: -15.90487289428711
    9. ')->' → logprob: -16.27987289428711
    10. '=' → logprob: -16.40487289428711

Token 135: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4518488943576813
    2. '       ' → logprob: -1.2018488645553589
    3. ')' → logprob: -3.5768489837646484
    4. ':
' → logprob: -4.451848983764648
    5. ',' → logprob: -4.576848983764648
    6. '   ' → logprob: -4.826848983764648
    7. '):
' → logprob: -6.076848983764648
    8. '):' → logprob: -6.076848983764648
    9. '<|end|>' → logprob: -9.326848983764648
    10. '        
' → logprob: -9.951848983764648

Token 136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5839580297470093
    2. ' self' → logprob: -0.8339580297470093
    3. '       ' → logprob: -4.833958148956299
    4. ' ' → logprob: -10.83395767211914
    5. '   ' → logprob: -11.83395767211914
    6. ' super' → logprob: -13.08395767211914
    7. 'super' → logprob: -13.70895767211914
    8. ' ' → logprob: -14.45895767211914
    9. '	self' → logprob: -15.20895767211914
    10. ' a' → logprob: -15.83395767211914

Token 137: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.2270817905664444
    2. '.' → logprob: -1.6020817756652832
    3. ' .' → logprob: -6.477081775665283
    4. '._' → logprob: -10.227082252502441
    5. 'a' → logprob: -10.352082252502441
    6. '.ai' → logprob: -11.352082252502441
    7. ' ' → logprob: -11.727082252502441
    8. ' =' → logprob: -11.977082252502441
    9. '```' → logprob: -12.477082252502441
    10. '.b' → logprob: -13.227082252502441

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05887894332408905
    2. '=' → logprob: -2.9338788986206055
    3. ',' → logprob: -5.5588788986206055
    4. ' ,' → logprob: -9.058878898620605
    5. ' ' → logprob: -11.808878898620605
    6. '_' → logprob: -13.058878898620605
    7. '<|end|>' → logprob: -13.058878898620605
    8. '    ' → logprob: -14.058878898620605
    9. ' =
' → logprob: -14.183878898620605
    10. ',a' → logprob: -14.308878898620605

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931610703468323
    2. ' a' → logprob: -0.6931610703468323
    3. '	a' → logprob: -11.443161010742188
    4. ' ' → logprob: -13.193161010742188
    5. ' ' → logprob: -14.443161010742188
    6. '_a' → logprob: -14.568161010742188
    7. '<|end|>' → logprob: -16.318161010742188
    8. ' а' → logprob: -17.068161010742188
    9. 'b' → logprob: -18.068161010742188
    10. ''a' → logprob: -18.318161010742188

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6447566151618958
    2. ' 
' → logprob: -1.144756555557251
    3. '<|end|>' → logprob: -2.269756555557251
    4. ',' → logprob: -3.769756555557251
    5. ' ' → logprob: -4.01975679397583
    6. '  
' → logprob: -5.26975679397583
    7. '        
' → logprob: -6.14475679397583
    8. '       ' → logprob: -6.39475679397583
    9. '        ' → logprob: -6.64475679397583
    10. ',
' → logprob: -7.76975679397583

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02606455609202385
    2. 'self' → logprob: -3.77606463432312
    3. ' self' → logprob: -5.901064395904541
    4. 'b' → logprob: -10.2760648727417
    5. '   ' → logprob: -10.2760648727417
    6. ' ' → logprob: -13.1510648727417
    7. '      ' → logprob: -13.2760648727417
    8. '	self' → logprob: -13.2760648727417
    9. '     ' → logprob: -13.9010648727417
    10. ' b' → logprob: -14.0260648727417

Token 142: ' self' (ID: 1051)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.909333023941144e-05
    2. ' b' → logprob: -9.750068664550781
    3. 'self' (adapté à ' self') → logprob: -11.500068664550781
    4. '       ' → logprob: -14.625068664550781
    5. '   ' → logprob: -16.12506866455078
    6. ' self' → logprob: -18.62506866455078
    7. '_b' → logprob: -19.37506866455078
    8. ' ' → logprob: -19.87506866455078
    9. 'factor' → logprob: -20.12506866455078
    10. '    ' → logprob: -20.37506866455078

Token 143: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.09631264954805374
    2. '.' → logprob: -2.7213127613067627
    3. ' .' → logprob: -4.346312522888184
    4. 'b' → logprob: -4.596312522888184
    5. ' ' → logprob: -6.721312522888184
    6. ' b' → logprob: -6.846312522888184
    7. ',' → logprob: -8.596312522888184
    8. ' =' → logprob: -9.221312522888184
    9. '*b' → logprob: -9.721312522888184
    10. '_b' → logprob: -9.846312522888184

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.430683434009552
    2. ' =' → logprob: -1.0556833744049072
    3. '<|end|>' → logprob: -6.555683612823486
    4. ' ' → logprob: -8.305683135986328
    5. ',' → logprob: -8.305683135986328
    6. '<|end|>' → logprob: -10.930683135986328
    7. ')' → logprob: -11.680683135986328
    8. ' ' → logprob: -11.805683135986328
    9. '        ' → logprob: -11.805683135986328
    10. ' ,' → logprob: -12.180683135986328

Token 145: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6326048374176025
    2. 'b' → logprob: -0.7576048374176025
    3. ' ' → logprob: -12.757604598999023
    4. '	b' → logprob: -13.757604598999023
    5. ' ' → logprob: -14.007604598999023
    6. '_b' → logprob: -15.507604598999023
    7. ' б' → logprob: -15.757604598999023
    8. '<|end|>' → logprob: -16.007604598999023
    9. ')b' → logprob: -16.132604598999023
    10. '>b' → logprob: -16.445104598999023

Token 146: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019889144459739327
    2. 'self' → logprob: -8.625199317932129
    3. ' self' → logprob: -11.125199317932129
    4. '   ' → logprob: -13.125199317932129
    5. '
' → logprob: -13.250199317932129
    6. '	self' → logprob: -15.500199317932129
    7. '        
' → logprob: -15.625199317932129
    8. 'def' → logprob: -16.000198364257812
    9. ' ' → logprob: -16.750198364257812
    10. ',' → logprob: -16.750198364257812

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017791526624932885
    2. 'self' → logprob: -8.750178337097168
    3. ' self' → logprob: -11.500178337097168
    4. '   ' → logprob: -12.000178337097168
    5. 'def' → logprob: -13.125178337097168
    6. '
' → logprob: -14.750178337097168
    7. '        
' → logprob: -15.500178337097168
    8. '	self' → logprob: -15.875178337097168
    9. '      ' → logprob: -16.00017738342285
    10. '     ' → logprob: -17.12517738342285

Token 148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003673940955195576
    2. '       ' → logprob: -8.000367164611816
    3. ' self' → logprob: -10.375367164611816
    4. '   ' → logprob: -14.875367164611816
    5. '
' → logprob: -15.375367164611816
    6. 'def' → logprob: -16.375368118286133
    7. '        
' → logprob: -16.875368118286133
    8. '	self' → logprob: -17.750368118286133
    9. 's' → logprob: -18.375368118286133
    10. '     ' → logprob: -18.750368118286133

Token 149: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0011490292381495237
    2. '.f' → logprob: -7.0011491775512695
    3. '.fact' → logprob: -9.62614917755127
    4. 'factor' → logprob: -9.62614917755127
    5. '._' → logprob: -10.37614917755127
    6. '.' → logprob: -10.37614917755127
    7. ' .' → logprob: -11.12614917755127
    8. '.fac' → logprob: -11.87614917755127
    9. '.factory' → logprob: -12.00114917755127
    10. '.strategy' → logprob: -12.00114917755127

Token 150: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.0028657352086156607
    2. '_factor' → logprob: -5.877865791320801
    3. '_' → logprob: -10.0028657913208
    4. '_strategy' → logprob: -11.8778657913208
    5. ' _' → logprob: -12.8778657913208
    6. 'factor' → logprob: -13.8778657913208
    7. 'ation' → logprob: -14.0028657913208
    8. '_function' → logprob: -14.5028657913208
    9. '```' → logprob: -14.6278657913208
    10. 'IZATION' → logprob: -14.8778657913208

Token 151: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.3856492842023727e-06
    2. '_str' → logprob: -14.250000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_factor' → logprob: -15.125000953674316
    5. '_method' → logprob: -16.125001907348633
    6. 'strategy' → logprob: -18.750001907348633
    7. '_scheme' → logprob: -18.875001907348633
    8. '_factory' → logprob: -19.375001907348633
    9. '_s' → logprob: -20.250001907348633
    10. ' _' → logprob: -20.375001907348633

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759433507919312
    2. ' =' → logprob: -0.8259433507919312
    3. '_' → logprob: -13.325942993164062
    4. ' ' → logprob: -13.575942993164062
    5. '.' → logprob: -15.075942993164062
    6. ')' → logprob: -15.575942993164062
    7. 's' → logprob: -15.700942993164062
    8. '<|end|>' → logprob: -16.825942993164062
    9. '  ' → logprob: -17.075942993164062
    10. ' ' → logprob: -17.325942993164062

Token 153: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.47407910227775574
    2. 'factor' → logprob: -0.9740791320800781
    3. '_factor' → logprob: -13.474079132080078
    4. 'fact' → logprob: -15.599079132080078
    5. '.factor' → logprob: -15.599079132080078
    6. ' fact' → logprob: -16.224079132080078
    7. ' ' → logprob: -16.849079132080078
    8. ' fator' → logprob: -16.974079132080078
    9. 'Factor' → logprob: -17.099079132080078
    10. ' factorial' → logprob: -17.474079132080078

Token 154: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.001019590417854488
    2. 'ation' → logprob: -7.626019477844238
    3. '_' → logprob: -7.876019477844238
    4. '_factor' → logprob: -9.376019477844238
    5. '_strategy' → logprob: -9.751019477844238
    6. 'iz' → logprob: -13.001019477844238
    7. '_method' → logprob: -14.126019477844238
    8. ' _' → logprob: -14.376019477844238
    9. 'z' → logprob: -14.501019477844238
    10. 'a' → logprob: -14.626019477844238

Token 155: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.0445127372804563e-05
    2. 'strategy' → logprob: -11.50001049041748
    3. 'Strategy' → logprob: -16.125009536743164
    4. '_str' → logprob: -16.500009536743164
    5. 'strateg' → logprob: -16.875009536743164
    6. '_factor' → logprob: -17.500009536743164
    7. ' strategy' → logprob: -18.125009536743164
    8. '_' → logprob: -18.750009536743164
    9. '_scheme' → logprob: -21.500009536743164
    10. '_method' → logprob: -21.500009536743164

Token 156: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0087158577516675
    2. '   ' → logprob: -5.008715629577637
    3. '    
' → logprob: -6.383715629577637
    4. '<|end|>' → logprob: -8.883715629577637
    5. '

' → logprob: -9.758715629577637
    6. 'def' → logprob: -10.008715629577637
    7. ' def' → logprob: -11.008715629577637
    8. '        
' → logprob: -11.383715629577637
    9. ' 
' → logprob: -11.383715629577637
    10. '	def' → logprob: -11.758715629577637

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6943913102149963
    2. 'def' → logprob: -0.6943913102149963
    3. ' def' → logprob: -6.694391250610352
    4. '    
' → logprob: -12.694391250610352
    5. '	def' → logprob: -13.694391250610352
    6. '       ' → logprob: -14.694391250610352
    7. '        
' → logprob: -14.819391250610352
    8. '
' → logprob: -15.444391250610352
    9. '```' → logprob: -16.69439125061035
    10. ' ' → logprob: -17.44439125061035

Token 158: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00043555660522542894
    2. ' def' → logprob: -7.7504353523254395
    3. '   ' → logprob: -12.250435829162598
    4. ' ' → logprob: -16.62543487548828
    5. '    
' → logprob: -17.50043487548828
    6. '
' → logprob: -18.37543487548828
    7. 'self' → logprob: -18.50043487548828
    8. '        
' → logprob: -18.87543487548828
    9. '	def' → logprob: -18.87543487548828
    10. '```' → logprob: -19.12543487548828

Token 159: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.04215199500322342
    2. 'generate' → logprob: -3.292151927947998
    3. ' next' → logprob: -6.542151927947998
    4. ' sequence' → logprob: -6.542151927947998
    5. '_generate' → logprob: -7.167151927947998
    6. ' def' → logprob: -8.917152404785156
    7. '_next' → logprob: -9.542152404785156
    8. ' _' → logprob: -9.917152404785156
    9. '_sequence' → logprob: -10.167152404785156
    10. ' ' → logprob: -10.917152404785156

Token 160: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00159163074567914
    2. '(' → logprob: -6.626591682434082
    3. '_sequence' → logprob: -8.501591682434082
    4. 'self' → logprob: -11.126591682434082
    5. '_numbers' → logprob: -11.376591682434082
    6. '_sequences' → logprob: -12.001591682434082
    7. '()' → logprob: -12.376591682434082
    8. 's' → logprob: -12.626591682434082
    9. ' (' → logprob: -13.001591682434082
    10. '_(' → logprob: -13.126591682434082

Token 161: '_sequences' (ID: 153014)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009900694712996483
    2. '_sequences' → logprob: -5.2599005699157715
    3. '(' → logprob: -6.1349005699157715
    4. '_pairs' → logprob: -6.7599005699157715
    5. '_numbers' → logprob: -7.5099005699157715
    6. '_terms' → logprob: -8.25990104675293
    7. '_f' → logprob: -8.75990104675293
    8. '_values' → logprob: -9.50990104675293
    9. '_s' → logprob: -10.00990104675293
    10. 's' → logprob: -10.00990104675293

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023154958034865558
    2. '(' → logprob: -8.375231742858887
    3. ' (' → logprob: -14.250231742858887
    4. 'self' → logprob: -15.750231742858887
    5. '(
' → logprob: -16.62523078918457
    6. '(s' → logprob: -17.00023078918457
    7. '   ' → logprob: -18.00023078918457
    8. ' self' → logprob: -18.50023078918457
    9. 's' → logprob: -18.87523078918457
    10. '(Self' → logprob: -19.00023078918457

Token 163: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01780688762664795
    2. '):' → logprob: -5.0178070068359375
    3. ' ,' → logprob: -5.2678070068359375
    4. '(self' → logprob: -5.6428070068359375
    5. 'self' → logprob: -6.3928070068359375
    6. ' ):' → logprob: -8.017807006835938
    7. ' (' → logprob: -9.267807006835938
    8. '):
' → logprob: -9.517807006835938
    9. '   ' → logprob: -10.017807006835938
    10. ')' → logprob: -10.392807006835938

Token 164: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06202806904911995
    2. '(' → logprob: -2.812028169631958
    3. ':' → logprob: -10.687027931213379
    4. '(
' → logprob: -11.062027931213379
    5. 'self' → logprob: -11.812027931213379
    6. '(s' → logprob: -12.187027931213379
    7. ' (' → logprob: -12.187027931213379
    8. '   ' → logprob: -13.937027931213379
    9. '():' → logprob: -14.312027931213379
    10. '(Self' → logprob: -14.562027931213379

Token 165: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.576031506061554
    2. ' list' → logprob: -0.826031506061554
    3. 'set' → logprob: -10.576031684875488
    4. 'dict' → logprob: -11.076031684875488
    5. ' dict' → logprob: -11.326031684875488
    6. '   ' → logprob: -11.701031684875488
    7. '[list' → logprob: -11.701031684875488
    8. 'None' → logprob: -12.201031684875488
    9. ' None' → logprob: -12.326031684875488
    10. ' set' → logprob: -12.326031684875488

Token 166: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.023280074819922447
    2. '[' → logprob: -4.023280143737793
    3. '[int' → logprob: -5.523280143737793
    4. '[str' → logprob: -7.023280143737793
    5. '[List' → logprob: -8.648280143737793
    6. '[(' → logprob: -10.148280143737793
    7. '[[' → logprob: -11.773280143737793
    8. '[
' → logprob: -12.273280143737793
    9. '(list' → logprob: -13.148280143737793
    10. ':' → logprob: -13.148280143737793

Token 167: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.375000953674316
    3. '[list' → logprob: -14.750000953674316
    4. 'int' → logprob: -16.250001907348633
    5. '[List' → logprob: -16.250001907348633
    6. '<int' → logprob: -16.375001907348633
    7. '[str' → logprob: -18.500001907348633
    8. '(int' → logprob: -19.500001907348633
    9. ']int' → logprob: -19.875001907348633
    10. '[Int' → logprob: -20.125001907348633

Token 168: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03686518594622612
    2. ']:
' → logprob: -3.411865234375
    3. ']]:
' → logprob: -6.286865234375
    4. ']:
' → logprob: -7.536865234375
    5. ']]' → logprob: -7.911865234375
    6. ']' → logprob: -7.911865234375
    7. ']:

' → logprob: -10.161865234375
    8. '[int' → logprob: -11.036865234375
    9. '[' → logprob: -11.411865234375
    10. '   ' → logprob: -12.036865234375

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00137404166162014
    2. ':' → logprob: -6.751374244689941
    3. '(' → logprob: -9.001374244689941
    4. '():' → logprob: -11.001374244689941
    5. '   ' → logprob: -11.251374244689941
    6. '        
' → logprob: -11.626374244689941
    7. ',' → logprob: -11.626374244689941
    8. '```' → logprob: -12.001374244689941
    9. '(self' → logprob: -12.501374244689941
    10. '[' → logprob: -12.751374244689941

Token 170: ' a' (ID: 261)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.029276644811034203
    2. '       ' → logprob: -4.0292768478393555
    3. ' sequences' → logprob: -4.7792768478393555
    4. 'result' → logprob: -6.4042768478393555
    5. 'results' → logprob: -7.2792768478393555
    6. ' result' → logprob: -8.529276847839355
    7. 'all' → logprob: -9.529276847839355
    8. ' all' → logprob: -11.279276847839355
    9. 'n' → logprob: -11.279276847839355
    10. ' results' → logprob: -11.529276847839355

Token 171: '_f' (ID: 1337)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.09326578676700592
    2. '_sequences' → logprob: -2.7182657718658447
    3. ',' → logprob: -5.593266010284424
    4. 'l' → logprob: -5.843266010284424
    5. '_ll' → logprob: -6.093266010284424
    6. 's' → logprob: -6.343266010284424
    7. ' =' → logprob: -6.468266010284424
    8. 'f' → logprob: -6.968266010284424
    9. '_' → logprob: -7.093266010284424
    10. '_values' → logprob: -7.093266010284424

Token 172: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0077642048709094524
    2. 'f' → logprob: -5.1327643394470215
    3. '_pairs' → logprob: -7.2577643394470215
    4. 'actor' → logprob: -7.6327643394470215
    5. 'pairs' → logprob: -7.7577643394470215
    6. 'ctors' → logprob: -9.257763862609863
    7. '_f' → logprob: -9.757763862609863
    8. '=' → logprob: -11.382763862609863
    9. 'acts' → logprob: -11.507763862609863
    10. '_' → logprob: -12.132763862609863

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005650628358125687
    2. '=' → logprob: -5.255650520324707
    3. 's' → logprob: -8.380650520324707
    4. '_pairs' → logprob: -8.755650520324707
    5. ',' → logprob: -11.505650520324707
    6. '   ' → logprob: -11.755650520324707
    7. ' ' → logprob: -12.505650520324707
    8. '    ' → logprob: -12.880650520324707
    9. 'pairs' → logprob: -13.630650520324707
    10. '       ' → logprob: -13.755650520324707

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142951607704163
    2. ' self' → logprob: -1.7014294862747192
    3. '[self' → logprob: -12.20142936706543
    4. '       ' → logprob: -12.45142936706543
    5. '(self' → logprob: -12.45142936706543
    6. '	self' → logprob: -13.20142936706543
    7. '=self' → logprob: -14.20142936706543
    8. '   ' → logprob: -15.45142936706543
    9. '[' → logprob: -15.82642936706543
    10. '           ' → logprob: -15.95142936706543

Token 175: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -4.334533878136426e-05
    2. '.' → logprob: -11.000042915344238
    3. '.fact' → logprob: -11.500042915344238
    4. 'factor' → logprob: -12.125042915344238
    5. '..' → logprob: -12.375042915344238
    6. '.b' → logprob: -12.750042915344238
    7. ' .' → logprob: -12.875042915344238
    8. '.fac' → logprob: -14.375042915344238
    9. '.f' → logprob: -15.375042915344238
    10. '.a' → logprob: -15.375042915344238

Token 176: 'ization' (ID: 2860)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.3986162543296814
    2. 'ization' → logprob: -1.1486163139343262
    3. '_strategy' → logprob: -4.523616313934326
    4. 'f' → logprob: -8.273615837097168
    5. '_f' → logprob: -8.273615837097168
    6. '_factor' → logprob: -8.898615837097168
    7. 'strategy' → logprob: -9.398615837097168
    8. 'pairs' → logprob: -10.023615837097168
    9. 'ation' → logprob: -10.898615837097168
    10. 's' → logprob: -11.898615837097168

Token 177: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -5.4192871175473556e-05
    2. 'strategy' → logprob: -9.875054359436035
    3. 'self' → logprob: -13.250054359436035
    4. 'strateg' → logprob: -14.750054359436035
    5. 'Strategy' → logprob: -15.000054359436035
    6. '_' → logprob: -16.25005340576172
    7. '_str' → logprob: -16.87505340576172
    8. ' strategy' → logprob: -17.50005340576172
    9. ' 전략' → logprob: -17.62505340576172
    10. 'f' → logprob: -17.75005340576172

Token 178: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -3.650518920039758e-06
    2. ' .' → logprob: -12.875003814697266
    3. 'factor' → logprob: -14.875003814697266
    4. '.' → logprob: -15.000003814697266
    5. '.fact' → logprob: -15.125003814697266
    6. '.fac' → logprob: -17.625003814697266
    7. ').' → logprob: -18.000003814697266
    8. '.method' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '```' → logprob: -20.000003814697266

Token 179: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.1994775377388578e-05
    2. '_f' → logprob: -12.125012397766113
    3. 'ize' → logprob: -13.375012397766113
    4. '_factor' → logprob: -13.625012397766113
    5. 'ization' → logprob: -13.875012397766113
    6. 'Pairs' → logprob: -14.625012397766113
    7. '_' → logprob: -14.625012397766113
    8. 'pairs' → logprob: -14.750012397766113
    9. 'f' → logprob: -14.875012397766113
    10. '(_' → logprob: -15.250012397766113

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.875001907348633
    3. '(abs' → logprob: -14.500001907348633
    4. '((' → logprob: -15.125001907348633
    5. '(this' → logprob: -15.875001907348633
    6. 'self' → logprob: -17.500001907348633
    7. '(
' → logprob: -18.375001907348633
    8. '(a' → logprob: -18.500001907348633
    9. '(s' → logprob: -18.875001907348633
    10. '(len' → logprob: -19.000001907348633

Token 181: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0003202114312443882
    2. '.b' → logprob: -8.250320434570312
    3. '.' → logprob: -9.750320434570312
    4. ' .' → logprob: -15.125320434570312
    5. 'a' → logprob: -15.250320434570312
    6. ').' → logprob: -15.875320434570312
    7. '.ab' → logprob: -18.000320434570312
    8. ')' → logprob: -19.625320434570312
    9. '.abs' → logprob: -19.625320434570312
    10. '​.' → logprob: -19.750320434570312

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048623811453580856
    2. ')
' → logprob: -3.04862380027771
    3. ')
' → logprob: -10.423624038696289
    4. ' )' → logprob: -13.048624038696289
    5. ')

' → logprob: -13.423624038696289
    6. '       ' → logprob: -14.423624038696289
    7. '(' → logprob: -14.798624038696289
    8. '())' → logprob: -14.923624038696289
    9. '))' → logprob: -14.923624038696289
    10. ' )
' → logprob: -15.048624038696289

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16120865941047668
    2. 'b' → logprob: -1.9112086296081543
    3. ',' → logprob: -7.411208629608154
    4. ' b' → logprob: -8.911209106445312
    5. 's' → logprob: -9.911209106445312
    6. '   ' → logprob: -9.911209106445312
    7. 'a' → logprob: -10.661209106445312
    8. '_b' → logprob: -11.036209106445312
    9. '        
' → logprob: -11.036209106445312
    10. ',b' → logprob: -11.286209106445312

Token 184: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.33951184153556824
    2. '       ' → logprob: -1.4645118713378906
    3. ' b' → logprob: -3.7145118713378906
    4. 'all' → logprob: -4.214511871337891
    5. 'se' → logprob: -4.589511871337891
    6. ' sequences' → logprob: -5.839511871337891
    7. ' all' → logprob: -6.589511871337891
    8. 'results' → logprob: -6.589511871337891
    9. 'result' → logprob: -6.714511871337891
    10. ' result' → logprob: -8.46451187133789

Token 185: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00011367550177965313
    2. '_' → logprob: -9.375113487243652
    3. 'f' → logprob: -12.250113487243652
    4. '_factor' → logprob: -12.250113487243652
    5. '_s' → logprob: -12.375113487243652
    6. '=_' → logprob: -12.750113487243652
    7. ' =' → logprob: -12.875113487243652
    8. ' _' → logprob: -13.250113487243652
    9. '=' → logprob: -13.250113487243652
    10. '_pairs' → logprob: -13.375113487243652

Token 186: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0002270198310725391
    2. 'f' → logprob: -8.625226974487305
    3. '_f' → logprob: -11.125226974487305
    4. 'a' → logprob: -11.375226974487305
    5. 'acters' → logprob: -11.500226974487305
    6. 'actor' → logprob: -13.000226974487305
    7. '_' → logprob: -13.125226974487305
    8. 'ac' → logprob: -13.375226974487305
    9. '```' → logprob: -13.750226974487305
    10. 'act' → logprob: -13.750226974487305

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.70141315460205
    4. 's' → logprob: -18.451414108276367
    5. '=

' → logprob: -18.451414108276367
    6. '_' → logprob: -18.826414108276367
    7. '   ' → logprob: -18.826414108276367
    8. ':' → logprob: -18.826414108276367
    9. ' =
' → logprob: -19.076414108276367
    10. '＝' → logprob: -19.076414108276367

Token 188: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16023783385753632
    2. 'self' → logprob: -1.9102377891540527
    3. '[self' → logprob: -12.035238265991211
    4. '(self' → logprob: -13.285238265991211
    5. '	self' → logprob: -13.410238265991211
    6. ' ' → logprob: -13.410238265991211
    7. '=self' → logprob: -13.660238265991211
    8. '<|end|>' → logprob: -14.535238265991211
    9. 's' → logprob: -15.410238265991211
    10. '_self' → logprob: -15.660238265991211

Token 189: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0010286426404491067
    2. 'factor' → logprob: -7.001028537750244
    3. '_factor' → logprob: -9.251029014587402
    4. '.' → logprob: -11.126029014587402
    5. '._' → logprob: -13.251029014587402
    6. '.b' → logprob: -13.876029014587402
    7. ' .' → logprob: -14.126029014587402
    8. 'self' → logprob: -14.376029014587402
    9. ' factor' → logprob: -14.501029014587402
    10. 'Factor' → logprob: -15.001029014587402

Token 190: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.1301281452178955
    2. '_strategy' → logprob: -2.1301281452178955
    3. 'strategy' → logprob: -5.880127906799316
    4. 'actor' → logprob: -8.880127906799316
    5. '_pairs' → logprob: -9.255127906799316
    6. 'or' → logprob: -10.005127906799316
    7. 'ator' → logprob: -10.880127906799316
    8. '_factor' → logprob: -10.880127906799316
    9. 'ation' → logprob: -11.255127906799316
    10. 'z' → logprob: -11.630127906799316

Token 191: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.0007151735480874777
    2. 'strategy' → logprob: -7.250715255737305
    3. '.strategy' → logprob: -12.875715255737305
    4. '_factor' → logprob: -13.625715255737305
    5. '_f' → logprob: -14.625715255737305
    6. ' strategy' → logprob: -15.125715255737305
    7. 'Strategy' → logprob: -15.625715255737305
    8. 'strateg' → logprob: -15.625715255737305
    9. 'f' → logprob: -16.125715255737305
    10. 'factor' → logprob: -16.750715255737305

Token 192: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -1.0921942703134846e-05
    2. 'factor' → logprob: -11.75001049041748
    3. ' .' → logprob: -12.87501049041748
    4. '.' → logprob: -15.25001049041748
    5. '.f' → logprob: -16.875011444091797
    6. '_factor' → logprob: -17.250011444091797
    7. '.fact' → logprob: -17.375011444091797
    8. 'Factor' → logprob: -19.125011444091797
    9. ' factor' → logprob: -19.375011444091797
    10. '_FACTOR' → logprob: -20.250011444091797

Token 193: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.894790981779806e-05
    2. '_strategy' → logprob: -10.000048637390137
    3. 'pairs' → logprob: -12.875048637390137
    4. 'strategy' → logprob: -14.250048637390137
    5. 'Pairs' → logprob: -16.375049591064453
    6. '_f' → logprob: -16.750049591064453
    7. '_factor' → logprob: -17.250049591064453
    8. 'f' → logprob: -17.250049591064453
    9. '```' → logprob: -17.250049591064453
    10. 's' → logprob: -17.625049591064453

Token 194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009199160267598927
    2. '(' → logprob: -7.000919818878174
    3. '(
' → logprob: -12.000920295715332
    4. ' (' → logprob: -13.375920295715332
    5. 'self' → logprob: -14.750920295715332
    6. '((' → logprob: -16.250919342041016
    7. '(this' → logprob: -16.375919342041016
    8. '(

' → logprob: -17.000919342041016
    9. '(the' → logprob: -18.000919342041016
    10. '(Self' → logprob: -18.500919342041016

Token 195: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -17.500001907348633
    4. 'b' → logprob: -19.000001907348633
    5. '.B' → logprob: -22.125001907348633
    6. '.б' → logprob: -22.500001907348633
    7. ' b' → logprob: -23.500001907348633
    8. '	b' → logprob: -23.750001907348633
    9. '.
' → logprob: -23.875001907348633
    10. ' б' → logprob: -23.875001907348633

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004341261519584805
    2. ')
' → logprob: -7.750433921813965
    3. ')

' → logprob: -13.250433921813965
    4. '       ' → logprob: -14.000433921813965
    5. ')
' → logprob: -15.375433921813965
    6. ' )' → logprob: -15.375433921813965
    7. '))' → logprob: -15.875433921813965
    8. '()' → logprob: -16.00043487548828
    9. '())' → logprob: -17.12543487548828
    10. ')`' → logprob: -17.62543487548828

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017076305812224746
    2. '        
' → logprob: -10.250170707702637
    3. 'result' → logprob: -10.250170707702637
    4. '#' → logprob: -11.000170707702637
    5. 'return' → logprob: -11.250170707702637
    6. '[' → logprob: -11.375170707702637
    7. '<|end|>' → logprob: -11.375170707702637
    8. 'all' → logprob: -11.625170707702637
    9. ' sequences' → logprob: -12.000170707702637
    10. 'results' → logprob: -12.125170707702637

Token 198: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.006897593382745981
    2. 'result' → logprob: -5.881897449493408
    3. 'all' → logprob: -6.006897449493408
    4. '       ' → logprob: -6.881897449493408
    5. 'results' → logprob: -7.506897449493408
    6. ' sequences' → logprob: -10.881897926330566
    7. 'return' → logprob: -11.131897926330566
    8. 'solutions' → logprob: -12.631897926330566
    9. '#' → logprob: -12.756897926330566
    10. 'seq' → logprob: -12.881897926330566

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165744185447693
    2. '=' → logprob: -4.264165878295898
    3. ':' → logprob: -13.639165878295898
    4. 's' → logprob: -14.264165878295898
    5. '=[]' → logprob: -15.264165878295898
    6. ' ' → logprob: -16.7641658782959
    7. '_sequences' → logprob: -17.1391658782959
    8. '_' → logprob: -17.2641658782959
    9. ',' → logprob: -18.5141658782959
    10. '[]' → logprob: -18.6391658782959

Token 200: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38689881563186646
    2. ' []' → logprob: -1.1368987560272217
    3. '[]
' → logprob: -11.3868989944458
    4. '[' → logprob: -11.7618989944458
    5. ' []
' → logprob: -12.0118989944458
    6. ' ' → logprob: -14.5118989944458
    7. '[]}' → logprob: -14.5118989944458
    8. ' [' → logprob: -14.7618989944458
    9. '[]

' → logprob: -14.8868989944458
    10. ' []

' → logprob: -15.3868989944458

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001314295077463612
    2. 'for' → logprob: -9.500131607055664
    3. ' for' → logprob: -10.000131607055664
    4. '
' → logprob: -11.750131607055664
    5. '        
' → logprob: -13.375131607055664
    6. '<|end|>' → logprob: -14.125131607055664
    7. '```' → logprob: -15.125131607055664
    8. '	for' → logprob: -15.500131607055664
    9. '   ' → logprob: -16.125131607055664
    10. '	' → logprob: -16.375131607055664

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03832799941301346
    2. '       ' → logprob: -3.288327932357788
    3. ' for' → logprob: -8.163328170776367
    4. '   ' → logprob: -14.163328170776367
    5. '```' → logprob: -14.538328170776367
    6. '
' → logprob: -15.413328170776367
    7. '	for' → logprob: -16.413328170776367
    8. '        
' → logprob: -16.788328170776367
    9. 'from' → logprob: -17.288328170776367
    10. '#' → logprob: -17.663328170776367

Token 203: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2874605357646942
    2. ' a' → logprob: -1.9124605655670166
    3. '(a' → logprob: -3.0374605655670166
    4. 'af' → logprob: -4.1624603271484375
    5. ' af' → logprob: -4.2874603271484375
    6. '(' → logprob: -4.9124603271484375
    7. ' (' → logprob: -5.0374603271484375
    8. 'i' → logprob: -5.9124603271484375
    9. 'x' → logprob: -6.1624603271484375
    10. ' i' → logprob: -6.9124603271484375

Token 204: '1' (ID: 16)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.42341673374176025
    2. '_f' → logprob: -1.1734167337417603
    3. 'f' → logprob: -3.9234166145324707
    4. '_pair' → logprob: -5.298416614532471
    5. '_' → logprob: -5.423416614532471
    6. '_i' → logprob: -5.673416614532471
    7. '_x' → logprob: -7.173416614532471
    8. '_fac' → logprob: -7.298416614532471
    9. '_fact' → logprob: -7.548416614532471
    10. '_a' → logprob: -8.298417091369629

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024227561429142952
    2. 'a' → logprob: -4.899227619171143
    3. ',a' → logprob: -4.899227619171143
    4. 'in' → logprob: -5.524227619171143
    5. ',_' → logprob: -6.274227619171143
    6. '1' → logprob: -6.399227619171143
    7. '_a' → logprob: -7.399227619171143
    8. ' in' → logprob: -7.524227619171143
    9. ' ,' → logprob: -8.774227142333984
    10. 'for' → logprob: -10.649227142333984

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018156031146645546
    2. ' a' → logprob: -4.018156051635742
    3. 'b' → logprob: -12.893156051635742
    4. ' ' → logprob: -13.643156051635742
    5. '	a' → logprob: -13.893156051635742
    6. '_a' → logprob: -14.143156051635742
    7. ' b' → logprob: -15.018156051635742
    8. '   ' → logprob: -15.768156051635742
    9. 'A' → logprob: -16.268156051635742
    10. '    ' → logprob: -16.893156051635742

Token 207: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5443087220191956
    2. '2' → logprob: -1.0443086624145508
    3. '_' → logprob: -2.919308662414551
    4. '0' → logprob: -5.544308662414551
    5. '_,' → logprob: -5.669308662414551
    6. ',' → logprob: -5.919308662414551
    7. '```' → logprob: -6.919308662414551
    8. '_factor' → logprob: -7.169308662414551
    9. ',_' → logprob: -7.669308662414551
    10. '_f' → logprob: -8.16930866241455

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0290603656321764
    2. 'in' → logprob: -3.7790603637695312
    3. ',' → logprob: -5.154060363769531
    4. ' ,' → logprob: -11.154060363769531
    5. ' ' → logprob: -12.654060363769531
    6. '<|end|>' → logprob: -13.154060363769531
    7. ')' → logprob: -14.529060363769531
    8. 's' → logprob: -15.029060363769531
    9. ',in' → logprob: -15.529060363769531
    10. 'a' → logprob: -15.529060363769531

Token 209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023246755823493004
    2. ' a' → logprob: -3.7732467651367188
    3. '_a' → logprob: -14.648246765136719
    4. '	a' → logprob: -14.898246765136719
    5. '(a' → logprob: -15.148246765136719
    6. '[a' → logprob: -16.39824676513672
    7. '#a' → logprob: -16.64824676513672
    8. '   ' → logprob: -17.14824676513672
    9. ' ' → logprob: -18.02324676513672
    10. ')a' → logprob: -18.39824676513672

Token 210: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -5.676981345459353e-06
    2. 'f' → logprob: -12.375005722045898
    3. '_' → logprob: -15.000005722045898
    4. 'Factors' → logprob: -15.125005722045898
    5. '_factor' → logprob: -15.375005722045898
    6. ' _' → logprob: -16.2500057220459
    7. ')' → logprob: -16.5000057220459
    8. ' factors' → logprob: -16.5000057220459
    9. '_pairs' → logprob: -16.7500057220459
    10. '._' → logprob: -17.1250057220459

Token 211: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -6.56364209135063e-05
    2. 'f' → logprob: -10.625065803527832
    3. '_f' → logprob: -11.500065803527832
    4. 'ctors' → logprob: -11.750065803527832
    5. 'actor' → logprob: -12.250065803527832
    6. '_pairs' → logprob: -12.625065803527832
    7. 'acters' → logprob: -13.000065803527832
    8. '_' → logprob: -13.125065803527832
    9. 'pairs' → logprob: -13.250065803527832
    10. '```' → logprob: -13.250065803527832

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013051759451627731
    2. ':
' → logprob: -4.388051986694336
    3. '       ' → logprob: -8.263051986694336
    4. ',' → logprob: -8.263051986694336
    5. '<|end|>' → logprob: -11.888051986694336
    6. '   ' → logprob: -12.138051986694336
    7. '):
' → logprob: -12.763051986694336
    8. '           ' → logprob: -13.138051986694336
    9. '<|end|>' → logprob: -13.388051986694336
    10. '[' → logprob: -13.513051986694336

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003235228592529893
    2. ' for' → logprob: -5.753235340118408
    3. '            
' → logprob: -11.37823486328125
    4. 'for' → logprob: -11.37823486328125
    5. '   ' → logprob: -11.75323486328125
    6. '       ' → logprob: -12.00323486328125
    7. '
' → logprob: -12.37823486328125
    8. '<|end|>' → logprob: -12.62823486328125
    9. '               ' → logprob: -13.00323486328125
    10. '```' → logprob: -13.12823486328125

Token 214: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1923811286687851
    2. 'for' (adapté à ' for') → logprob: -1.8173811435699463
    3. '           ' → logprob: -4.692380905151367
    4. '       ' → logprob: -5.692380905151367
    5. ' ' → logprob: -12.192380905151367
    6. '	for' → logprob: -12.692380905151367
    7. '   ' → logprob: -12.692380905151367
    8. '               ' → logprob: -12.817380905151367
    9. '        ' → logprob: -13.317380905151367
    10. 'b' → logprob: -13.567380905151367

Token 215: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34844908118247986
    2. 'b' → logprob: -1.2234491109848022
    3. '(b' → logprob: -13.473448753356934
    4. '       ' → logprob: -14.223448753356934
    5. '   ' → logprob: -14.348448753356934
    6. ' (' → logprob: -14.598448753356934
    7. '    ' → logprob: -14.973448753356934
    8. ',' → logprob: -14.973448753356934
    9. ' ' → logprob: -15.598448753356934
    10. '_b' → logprob: -16.09844970703125

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9040898880339228e-05
    2. ',' → logprob: -10.625028610229492
    3. '_,' → logprob: -13.500028610229492
    4. '_' → logprob: -13.750028610229492
    5. ' ' → logprob: -13.750028610229492
    6. ' ,' → logprob: -14.625028610229492
    7. '```' → logprob: -15.625028610229492
    8. '2' → logprob: -15.875028610229492
    9. '
' → logprob: -16.500028610229492
    10. '   ' → logprob: -16.750028610229492

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.951771421066951e-05
    2. ',b' → logprob: -10.625029563903809
    3. ' ,' → logprob: -12.250029563903809
    4. 'b' → logprob: -15.625029563903809
    5. ',
' → logprob: -16.125028610229492
    6. '‌,' → logprob: -16.750028610229492
    7. '<|end|>' → logprob: -18.000028610229492
    8. '_,' → logprob: -18.500028610229492
    9. 'in' → logprob: -18.500028610229492
    10. 'a' → logprob: -19.125028610229492

Token 218: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08929470926523209
    2. 'b' → logprob: -2.464294672012329
    3. ' ' → logprob: -7.964294910430908
    4. '<|end|>' → logprob: -12.46429443359375
    5. '    ' → logprob: -14.58929443359375
    6. '_b' → logprob: -14.83929443359375
    7. ' ' → logprob: -14.83929443359375
    8. ' б' → logprob: -15.21429443359375
    9. ')' → logprob: -15.46429443359375
    10. ' 
' → logprob: -15.58929443359375

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013272698037326336
    2. ',' → logprob: -4.513272762298584
    3. '1' → logprob: -6.138272762298584
    4. '_' → logprob: -10.638272285461426
    5. '_,' → logprob: -11.138272285461426
    6. ' ,' → logprob: -11.513272285461426
    7. ',_' → logprob: -12.513272285461426
    8. '```' → logprob: -12.638272285461426
    9. '<|end|>' → logprob: -13.013272285461426
    10. ' ' → logprob: -13.513272285461426

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013277375837787986
    2. 'in' → logprob: -6.6263275146484375
    3. ' ' → logprob: -13.751327514648438
    4. ',' → logprob: -15.751327514648438
    5. 'b' → logprob: -15.876327514648438
    6. '   ' → logprob: -16.376327514648438
    7. '    ' → logprob: -16.501327514648438
    8. '        ' → logprob: -16.501327514648438
    9. '       ' → logprob: -16.876327514648438
    10. '<|end|>' → logprob: -17.251327514648438

Token 221: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740789234638214
    2. ' b' → logprob: -0.974078893661499
    3. '(b' → logprob: -13.974079132080078
    4. '<|end|>' → logprob: -15.474079132080078
    5. '[b' → logprob: -15.724079132080078
    6. ')b' → logprob: -16.099079132080078
    7. '	b' → logprob: -16.224079132080078
    8. '```' → logprob: -16.474079132080078
    9. ' ' → logprob: -16.599079132080078
    10. ' б' → logprob: -17.224079132080078

Token 222: '_f' (ID: 1337)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3868793845176697
    2. '_f' → logprob: -1.1368794441223145
    3. 'b' → logprob: -12.511878967285156
    4. '_pairs' → logprob: -13.636878967285156
    5. 's' → logprob: -14.261878967285156
    6. 'actors' → logprob: -14.511878967285156
    7. 'pairs' → logprob: -14.511878967285156
    8. 'Factors' → logprob: -14.886878967285156
    9. 'factor' → logprob: -15.636878967285156
    10. '```' → logprob: -15.886878967285156

Token 223: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00020389800192788243
    2. 'f' → logprob: -8.625204086303711
    3. 'ctors' → logprob: -11.125204086303711
    4. '_f' → logprob: -12.250204086303711
    5. 'actor' → logprob: -14.375204086303711
    6. 'a' → logprob: -14.875204086303711
    7. 'acters' → logprob: -14.875204086303711
    8. 'ectors' → logprob: -14.875204086303711
    9. '```' → logprob: -15.125204086303711
    10. '
' → logprob: -15.375204086303711

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02316720224916935
    2. ':
' → logprob: -4.398167133331299
    3. '               ' → logprob: -4.648167133331299
    4. '           ' → logprob: -7.523167133331299
    5. ',' → logprob: -7.773167133331299
    6. '[' → logprob: -11.523167610168457
    7. '<|end|>' → logprob: -11.523167610168457
    8. ':

' → logprob: -11.898167610168457
    9. '):
' → logprob: -12.273167610168457
    10. '                   ' → logprob: -12.648167610168457

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001294030516874045
    2. '           ' → logprob: -9.500129699707031
    3. '                
' → logprob: -10.625129699707031
    4. '<|end|>' → logprob: -11.750129699707031
    5. '                ' → logprob: -11.875129699707031
    6. '                   ' → logprob: -12.750129699707031
    7. '              ' → logprob: -12.875129699707031
    8. '            
' → logprob: -13.125129699707031
    9. ',' → logprob: -13.250129699707031
    10. '            ' → logprob: -13.625129699707031

Token 226: ' seq' (ID: 26775)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04132912680506706
    2. '               ' → logprob: -4.1663289070129395
    3. ' if' → logprob: -4.1663289070129395
    4. ' sequences' → logprob: -5.9163289070129395
    5. ' for' → logprob: -6.2913289070129395
    6. 'if' → logprob: -6.5413289070129395
    7. ' sequence' → logprob: -6.7913289070129395
    8. 'sequence' → logprob: -7.6663289070129395
    9. '[' → logprob: -8.041329383850098
    10. 'for' → logprob: -8.291329383850098

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012136265635490417
    2. 'u' → logprob: -4.762136459350586
    3. 's' → logprob: -6.887136459350586
    4. '1' → logprob: -6.887136459350586
    5. '   ' → logprob: -8.262136459350586
    6. '=' → logprob: -8.387136459350586
    7. '       ' → logprob: -8.387136459350586
    8. 'ences' → logprob: -8.887136459350586
    9. '=[' → logprob: -9.012136459350586
    10. 'e' → logprob: -9.512136459350586

Token 228: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.09429168701171875
    2. ' [' → logprob: -2.4692916870117188
    3. '[' → logprob: -5.844291687011719
    4. '[self' → logprob: -6.219291687011719
    5. '[
' → logprob: -7.969291687011719
    6. '[f' → logprob: -10.844291687011719
    7. '[b' → logprob: -11.219291687011719
    8. '       ' → logprob: -11.469291687011719
    9. '[int' → logprob: -11.469291687011719
    10. '[start' → logprob: -11.969291687011719

Token 229: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001242017257027328
    2. 'self' → logprob: -6.876242160797119
    3. '1' → logprob: -8.751241683959961
    4. '0' → logprob: -10.376241683959961
    5. ' a' → logprob: -11.876241683959961
    6. '(a' → logprob: -12.626241683959961
    7. '   ' → logprob: -12.876241683959961
    8. '[a' → logprob: -13.876241683959961
    9. '(' → logprob: -14.001241683959961
    10. '-' → logprob: -14.376241683959961

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ',' → logprob: -11.875015258789062
    3. '2' → logprob: -12.750015258789062
    4. 'a' → logprob: -12.750015258789062
    5. ' ' → logprob: -14.375015258789062
    6. '_' → logprob: -14.500015258789062
    7. '[' → logprob: -14.812515258789062
    8. ' ,' → logprob: -15.937515258789062
    9. ',
' → logprob: -16.437515258789062
    10. '   ' → logprob: -16.500015258789062

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012123758206143975
    2. ',b' → logprob: -7.2512125968933105
    3. ' ,' → logprob: -7.7512125968933105
    4. ',
' → logprob: -10.501212120056152
    5. 'b' → logprob: -11.376212120056152
    6. ']' → logprob: -11.876212120056152
    7. '+' → logprob: -12.126212120056152
    8. ',a' → logprob: -12.251212120056152
    9. '*b' → logprob: -12.626212120056152
    10. 'a' → logprob: -13.251212120056152

Token 232: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5056079030036926
    2. 'b' → logprob: -1.5056078433990479
    3. ' a' → logprob: -2.130607843399048
    4. ' b' → logprob: -2.880607843399048
    5. ' ' → logprob: -10.005607604980469
    6. ' (' → logprob: -10.630607604980469
    7. '    ' → logprob: -11.505607604980469
    8. '(a' → logprob: -11.630607604980469
    9. '   ' → logprob: -12.568107604980469
    10. '	a' → logprob: -12.755607604980469

Token 233: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013496380997821689
    2. '1' → logprob: -6.751349449157715
    3. 'a' → logprob: -9.751349449157715
    4. ',' → logprob: -10.126349449157715
    5. '_' → logprob: -11.126349449157715
    6. 'b' → logprob: -11.251349449157715
    7. '-' → logprob: -12.126349449157715
    8. '+' → logprob: -12.126349449157715
    9. 's' → logprob: -12.251349449157715
    10. '   ' → logprob: -12.313849449157715

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029995047952979803
    2. ' ,' → logprob: -8.750300407409668
    3. ',
' → logprob: -9.750300407409668
    4. ',b' → logprob: -10.000300407409668
    5. ']' → logprob: -10.500300407409668
    6. '               ' → logprob: -12.375300407409668
    7. ' +' → logprob: -13.375300407409668
    8. '+' → logprob: -13.750300407409668
    9. '           ' → logprob: -14.250300407409668
    10. '       ' → logprob: -14.375300407409668

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043299127370119095
    2. ' b' → logprob: -3.1682991981506348
    3. ',' → logprob: -8.418298721313477
    4. ',b' → logprob: -10.168298721313477
    5. 'a' → logprob: -11.418298721313477
    6. ' ,' → logprob: -11.918298721313477
    7. '    ' → logprob: -12.418298721313477
    8. '0' → logprob: -12.918298721313477
    9. ' a' → logprob: -13.168298721313477
    10. ' ' → logprob: -13.293298721313477

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. ',' → logprob: -11.375025749206543
    3. '2' → logprob: -12.125025749206543
    4. '[' → logprob: -12.625025749206543
    5. '_' → logprob: -12.750025749206543
    6. ' ' → logprob: -13.750025749206543
    7. '```' → logprob: -15.500025749206543
    8. '**' → logprob: -15.687525749206543
    9. '<|end|>' → logprob: -15.812525749206543
    10. '   ' → logprob: -16.00002670288086

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000961362209636718
    2. ' ,' → logprob: -7.1259613037109375
    3. ',b' → logprob: -9.375961303710938
    4. ']' → logprob: -10.000961303710938
    5. ',
' → logprob: -10.625961303710938
    6. 'b' → logprob: -13.625961303710938
    7. ' b' → logprob: -15.000961303710938
    8. ' ]' → logprob: -15.125961303710938
    9. ' ' → logprob: -15.875961303710938
    10. '   ' → logprob: -16.375961303710938

Token 238: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10249059647321701
    2. 'b' → logprob: -2.3524906635284424
    3. ',' → logprob: -6.352490425109863
    4. ' ' → logprob: -7.977490425109863
    5. ' ,' → logprob: -8.852490425109863
    6. ',b' → logprob: -10.352490425109863
    7. ']' → logprob: -11.977490425109863
    8. ''' → logprob: -12.602490425109863
    9. ' ]' → logprob: -13.102490425109863
    10. ' '' → logprob: -13.102490425109863

Token 239: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011284107313258573
    2. ',' → logprob: -9.875112533569336
    3. '_' → logprob: -10.000112533569336
    4. ' ' → logprob: -12.125112533569336
    5. '₂' → logprob: -12.500112533569336
    6. '```' → logprob: -13.625112533569336
    7. '1' → logprob: -13.750112533569336
    8. '   ' → logprob: -13.875112533569336
    9. ')' → logprob: -14.125112533569336
    10. '<|end|>' → logprob: -14.625112533569336

Token 240: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07805681228637695
    2. '               ' → logprob: -3.203056812286377
    3. ',' → logprob: -3.953056812286377
    4. ']
' → logprob: -4.203056812286377
    5. ' ]' → logprob: -9.328056335449219
    6. '                   ' → logprob: -9.578056335449219
    7. '           ' → logprob: -9.953056335449219
    8. ',
' → logprob: -10.203056335449219
    9. ']
' → logprob: -10.828056335449219
    10. ']

' → logprob: -11.453056335449219

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002789303893223405
    2. '                
' → logprob: -6.127789497375488
    3. '                ' → logprob: -8.502789497375488
    4. ',' → logprob: -8.752789497375488
    5. '<|end|>' → logprob: -9.002789497375488
    6. '              ' → logprob: -10.877789497375488
    7. '                   ' → logprob: -10.877789497375488
    8. '               
' → logprob: -11.377789497375488
    9. '                
                
' → logprob: -11.377789497375488
    10. ',
' → logprob: -11.752789497375488

Token 242: ' seq' (ID: 26775)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.5218121409416199
    2. '               ' → logprob: -1.3968122005462646
    3. 'se' → logprob: -2.2718122005462646
    4. ' if' → logprob: -3.1468122005462646
    5. 'if' → logprob: -4.7718119621276855
    6. '
' → logprob: -6.2718119621276855
    7. '                
' → logprob: -6.3968119621276855
    8. ' for' → logprob: -7.8968119621276855
    9. 'for' → logprob: -8.646812438964844
    10. '       ' → logprob: -9.021812438964844

Token 243: '.sort' (ID: 19551)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09559189528226852
    2. '.' → logprob: -2.4705917835235596
    3. '.extend' → logprob: -5.345592021942139
    4. 's' → logprob: -6.970592021942139
    5. '.sort' → logprob: -7.595592021942139
    6. ' .' → logprob: -8.59559154510498
    7. '.reverse' → logprob: -9.09559154510498
    8. '.s' → logprob: -9.59559154510498
    9. '.app' → logprob: -11.47059154510498
    10. '.insert' → logprob: -11.97059154510498

Token 244: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023304175585508347
    2. '()
' → logprob: -3.7733042240142822
    3. '()
' → logprob: -11.148303985595703
    4. '               ' → logprob: -11.273303985595703
    5. '(' → logprob: -11.523303985595703
    6. '()\' → logprob: -11.648303985595703
    7. '()

' → logprob: -11.898303985595703
    8. '(
' → logprob: -13.773303985595703
    9. '()>' → logprob: -13.898303985595703
    10. '())' → logprob: -14.023303985595703

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007414005231112242
    2. '                
' → logprob: -5.007413864135742
    3. '
' → logprob: -7.632413864135742
    4. '<|end|>' → logprob: -9.257413864135742
    5. '               
' → logprob: -10.757413864135742
    6. '```' → logprob: -10.882413864135742
    7. '                ' → logprob: -11.132413864135742
    8. ',' → logprob: -11.632413864135742
    9. '              ' → logprob: -12.132413864135742
    10. '                   ' → logprob: -12.257413864135742

Token 246: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.4005877673625946
    2. ' sequences' → logprob: -1.775587797164917
    3. 'if' → logprob: -2.400587797164917
    4. '               ' → logprob: -3.150587797164917
    5. ' if' → logprob: -3.900587797164917
    6. '       ' → logprob: -5.025587558746338
    7. 'for' → logprob: -8.775588035583496
    8. '   ' → logprob: -10.025588035583496
    9. 'sequence' → logprob: -10.525588035583496
    10. '           ' → logprob: -10.525588035583496

Token 247: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12708495557308197
    2. '.' → logprob: -2.127084970474243
    3. '.extend' → logprob: -9.377084732055664
    4. '.add' → logprob: -10.127084732055664
    5. ' .' → logprob: -10.752084732055664
    6. '.app' → logprob: -12.752084732055664
    7. '.push' → logprob: -12.752084732055664
    8. '.ap' → logprob: -13.252084732055664
    9. '.setdefault' → logprob: -14.127084732055664
    10. '.
' → logprob: -14.377084732055664

Token 248: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.625005722045898
    3. '(tuple' → logprob: -13.125005722045898
    4. 'seq' → logprob: -14.750005722045898
    5. '(list' → logprob: -15.875005722045898
    6. '(se' → logprob: -16.2500057220459
    7. '(sequence' → logprob: -17.1250057220459
    8. '((' → logprob: -17.5000057220459
    9. ' (' → logprob: -18.6250057220459
    10. '(sorted' → logprob: -18.7500057220459

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001345115713775158
    2. '               ' → logprob: -7.376345157623291
    3. ')
' → logprob: -7.626345157623291
    4. '       ' → logprob: -8.751344680786133
    5. '           ' → logprob: -9.626344680786133
    6. ')return' → logprob: -13.626344680786133
    7. ' )' → logprob: -13.751344680786133
    8. '`)' → logprob: -14.126344680786133
    9. ')`' → logprob: -14.376344680786133
    10. '))' → logprob: -14.876344680786133

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010688089241739362
    2. 'return' → logprob: -9.875106811523438
    3. '
' → logprob: -10.750106811523438
    4. '        
' → logprob: -11.125106811523438
    5. '	' → logprob: -11.375106811523438
    6. ' return' → logprob: -12.375106811523438
    7. '```' → logprob: -13.875106811523438
    8. '               ' → logprob: -14.000106811523438
    9. '   ' → logprob: -14.500106811523438
    10. '      ' → logprob: -14.875106811523438

Token 251: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011170901358127594
    2. 'return' (adapté à ' return') → logprob: -4.511170864105225
    3. ' return' → logprob: -9.511171340942383
    4. '
' → logprob: -10.511171340942383
    5. '        
' → logprob: -11.386171340942383
    6. '   ' → logprob: -12.386171340942383
    7. '	return' → logprob: -13.261171340942383
    8. '	' → logprob: -13.511171340942383
    9. '```' → logprob: -13.511171340942383
    10. '               ' → logprob: -14.136171340942383

Token 252: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.5759420990943909
    2. 'se' → logprob: -0.8259420990943909
    3. 'sequ' → logprob: -13.575942039489746
    4. 'sequence' → logprob: -14.575942039489746
    5. '[' → logprob: -15.325942039489746
    6. '_sequences' → logprob: -15.575942039489746
    7. 'sorted' → logprob: -16.075942993164062
    8. 'seq' → logprob: -16.450942993164062
    9. 'Sequences' → logprob: -16.825942993164062
    10. '[]' → logprob: -16.825942993164062

Token 253: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' Cost' (ID: 18328)
  Prédit: ' Advanced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Advanced' → logprob: -0.6965122818946838
    2. ' Custom' → logprob: -2.071512222290039
    3. ' Sequence' → logprob: -2.571512222290039
    4. 'Advanced' → logprob: -2.696512222290039
    5. ' Extended' → logprob: -2.696512222290039
    6. ' Optim' → logprob: -3.071512222290039
    7. ' Product' → logprob: -3.946512222290039
    8. 'Sequence' → logprob: -4.571512222290039
    9. 'Optim' → logprob: -4.696512222290039
    10. 'Custom' → logprob: -4.696512222290039

Token 256: 'Evaluator' (ID: 87172)
  Prédit: 'Function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Function' → logprob: -0.8119573593139648
    2. 'Estimator' → logprob: -1.4369573593139648
    3. 'Calculator' → logprob: -1.9369573593139648
    4. 'Strategy' → logprob: -2.061957359313965
    5. 'Optimizer' → logprob: -3.561957359313965
    6. 'Evaluator' → logprob: -4.686957359313965
    7. ':' → logprob: -5.436957359313965
    8. 'Analyzer' → logprob: -5.811957359313965
    9. 'Model' → logprob: -6.686957359313965
    10. 'Calculation' → logprob: -8.811957359313965

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05489785596728325
    2. ':
' → logprob: -2.9298977851867676
    3. '(' → logprob: -12.054898262023926
    4. ':

' → logprob: -12.804898262023926
    5. ' :' → logprob: -13.429898262023926
    6. ':def' → logprob: -13.429898262023926
    7. '(object' → logprob: -14.304898262023926
    8. ':
' → logprob: -14.554898262023926
    9. ' :
' → logprob: -14.679898262023926
    10. '   ' → logprob: -14.804898262023926

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000327956018736586
    2. 'def' → logprob: -8.375328063964844
    3. ' def' → logprob: -9.250328063964844
    4. 'class' → logprob: -13.750328063964844
    5. '   ' → logprob: -15.875328063964844
    6. '```' → logprob: -16.750328063964844
    7. ' class' → logprob: -17.000328063964844
    8. '	def' → logprob: -19.125328063964844
    9. '   ' → logprob: -19.125328063964844
    10. '    
' → logprob: -19.250328063964844

Token 259: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.30042651295661926
    2. '   ' → logprob: -1.5504264831542969
    3. 'def' → logprob: -3.050426483154297
    4. 'class' → logprob: -14.050426483154297
    5. '	def' → logprob: -15.175426483154297
    6. '   ' → logprob: -15.550426483154297
    7. '```' → logprob: -16.050426483154297
    8. ' class' → logprob: -16.675426483154297
    9. '    ' → logprob: -17.050426483154297
    10. ':def' → logprob: -18.050426483154297

Token 260: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0008517975220456719
    2. 'abstract' → logprob: -7.250851631164551
    3. 'dat' → logprob: -9.50085163116455
    4. 'classmethod' → logprob: -9.75085163116455
    5. 'abc' → logprob: -12.50085163116455
    6. 'property' → logprob: -12.50085163116455
    7. 'static' → logprob: -13.62585163116455
    8. 'cache' → logprob: -16.875852584838867
    9. 'l' → logprob: -18.500852584838867
    10. '@' → logprob: -19.250852584838867

Token 261: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18545348942279816
    2. ' def' → logprob: -2.185453414916992
    3. '   ' → logprob: -3.185453414916992
    4. '
' → logprob: -4.310453414916992
    5. '(' → logprob: -7.185453414916992
    6. '(def' → logprob: -7.685453414916992
    7. ' ' → logprob: -7.935453414916992
    8. '()
' → logprob: -9.185453414916992
    9. '()' → logprob: -9.560453414916992
    10. '	def' → logprob: -9.685453414916992

Token 262: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07189464569091797
    2. '   ' → logprob: -3.196894645690918
    3. ' def' → logprob: -3.946894645690918
    4. '
' → logprob: -4.696894645690918
    5. ' ' → logprob: -11.321894645690918
    6. '	def' → logprob: -11.821894645690918
    7. '  ' → logprob: -12.071894645690918
    8. '(def' → logprob: -12.071894645690918
    9. '(' → logprob: -12.196894645690918
    10. '    
' → logprob: -12.446894645690918

Token 263: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.650518920039758e-06
    2. ' def' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.375003814697266
    4. '
' → logprob: -19.875003814697266
    5. 'class' → logprob: -20.750003814697266
    6. 'int' → logprob: -20.875003814697266
    7. '    
' → logprob: -21.125003814697266
    8. ' ' → logprob: -21.375003814697266
    9. '	def' → logprob: -22.000003814697266
    10. 'method' → logprob: -22.375003814697266

Token 264: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.5666356086730957
    2. ' evaluate' → logprob: -1.5666356086730957
    3. 'calculate' → logprob: -1.9416356086730957
    4. ' calculate' → logprob: -3.1916356086730957
    5. 'compute' → logprob: -3.8166356086730957
    6. ' compute' → logprob: -4.566635608673096
    7. 'cost' → logprob: -5.691635608673096
    8. ' cost' → logprob: -6.441635608673096
    9. 'def' → logprob: -6.816635608673096
    10. ' def' → logprob: -7.941635608673096

Token 265: '_sequence' (ID: 55606)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.5690175294876099
    2. '(se' → logprob: -1.1940175294876099
    3. '(' → logprob: -2.6940174102783203
    4. '(seq' → logprob: -2.9440174102783203
    5. '(self' → logprob: -5.31901741027832
    6. ' (' → logprob: -5.81901741027832
    7. '_sequences' → logprob: -7.06901741027832
    8. '(cost' → logprob: -7.44401741027832
    9. '(s' → logprob: -8.19401741027832
    10. '(lst' → logprob: -8.31901741027832

Token 266: '(seq' (ID: 78669)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.043085742741823196
    2. '(seq' → logprob: -3.293085813522339
    3. ' (' → logprob: -6.04308557510376
    4. '(se' → logprob: -6.29308557510376
    5. '(' → logprob: -7.16808557510376
    6. '(self' → logprob: -10.418086051940918
    7. '(lst' → logprob: -12.793086051940918
    8. '(list' → logprob: -14.043086051940918
    9. '(s' → logprob: -14.168086051940918
    10. '(
' → logprob: -14.293086051940918

Token 267: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012724604457616806
    2. '):' → logprob: -4.76272439956665
    3. ')' → logprob: -5.63772439956665
    4. ':list' → logprob: -7.88772439956665
    5. '):
' → logprob: -9.637724876403809
    6. ' :' → logprob: -10.387724876403809
    7. '   ' → logprob: -10.637724876403809
    8. ' ):' → logprob: -10.887724876403809
    9. '[' → logprob: -11.512724876403809
    10. ' )' → logprob: -12.137724876403809

Token 268: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0036867710296064615
    2. ' list' → logprob: -5.628686904907227
    3. ')' → logprob: -9.753686904907227
    4. '[list' → logprob: -11.253686904907227
    5. 'int' → logprob: -11.378686904907227
    6. 'List' → logprob: -13.503686904907227
    7. '   ' → logprob: -13.753686904907227
    8. 'tuple' → logprob: -14.253686904907227
    9. '(list' → logprob: -14.628686904907227
    10. ':list' → logprob: -15.128686904907227

Token 269: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.375
    3. '<int' → logprob: -16.625
    4. '   ' → logprob: -16.625
    5. '[' → logprob: -16.875
    6. ')' → logprob: -19.25
    7. ',int' → logprob: -20.75
    8. ':int' → logprob: -21.5
    9. '```' → logprob: -21.625
    10. ']int' → logprob: -21.75

Token 270: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -4.656383680412546e-05
    2. ')' → logprob: -10.250046730041504
    3. ' ])' → logprob: -11.750046730041504
    4. '[int' → logprob: -13.625046730041504
    5. '],' → logprob: -14.500046730041504
    6. ''])' → logprob: -14.750046730041504
    7. '   ' → logprob: -15.125046730041504
    8. ']])' → logprob: -15.250046730041504
    9. ']' → logprob: -15.750046730041504
    10. '[' → logprob: -16.125045776367188

Token 271: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.3175278306007385
    2. ' ->' → logprob: -1.3175277709960938
    3. ')->' → logprob: -6.442527770996094
    4. ')' → logprob: -6.692527770996094
    5. ':' → logprob: -7.442527770996094
    6. '   ' → logprob: -7.567527770996094
    7. '()->' → logprob: -8.567527770996094
    8. '(' → logprob: -10.192527770996094
    9. '->[' → logprob: -10.692527770996094
    10. ' )->' → logprob: -11.192527770996094

Token 272: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20194290578365326
    2. ' int' → logprob: -1.7019429206848145
    3. 'float' → logprob: -8.451942443847656
    4. 'sum' → logprob: -9.201942443847656
    5. ' float' → logprob: -9.451942443847656
    6. '(int' → logprob: -10.076942443847656
    7. ' sum' → logprob: -10.201942443847656
    8. 'max' → logprob: -10.951942443847656
    9. ' max' → logprob: -11.701942443847656
    10. ' ' → logprob: -11.826942443847656

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002855159342288971
    2. ':
' → logprob: -6.37785530090332
    3. '   ' → logprob: -7.25285530090332
    4. '(' → logprob: -8.87785530090332
    5. '():' → logprob: -8.87785530090332
    6. ':return' → logprob: -9.50285530090332
    7. '<|end|>' → logprob: -10.50285530090332
    8. '):' → logprob: -11.25285530090332
    9. '       ' → logprob: -11.62785530090332
    10. ' :' → logprob: -11.75285530090332

Token 274: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5024269819259644
    2. '   ' → logprob: -1.3774269819259644
    3. 'return' → logprob: -2.752427101135254
    4. ' cost' → logprob: -2.877427101135254
    5. 'cost' → logprob: -4.127427101135254
    6. '       ' → logprob: -5.627427101135254
    7. ' max' → logprob: -7.127427101135254
    8. ' if' → logprob: -7.377427101135254
    9. ' min' → logprob: -7.752427101135254
    10. '    ' → logprob: -8.127427101135254

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009131275117397308
    2. ' return' → logprob: -5.88413143157959
    3. 'seq' → logprob: -6.13413143157959
    4. 'cost' → logprob: -6.25913143157959
    5. 'sum' → logprob: -6.63413143157959
    6. '   ' → logprob: -7.88413143157959
    7. 'max' → logprob: -8.63413143157959
    8. '#' → logprob: -9.00913143157959
    9. 'abs' → logprob: -9.50913143157959
    10. 'min' → logprob: -9.75913143157959

Token 276: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7300170660018921
    2. 'seq' → logprob: -0.8550170660018921
    3. ' seq' → logprob: -3.4800171852111816
    4. 'max' → logprob: -3.6050171852111816
    5. ' sum' → logprob: -3.6050171852111816
    6. ' max' → logprob: -5.480017185211182
    7. 'abs' → logprob: -6.230017185211182
    8. '(seq' → logprob: -7.355017185211182
    9. 'len' → logprob: -8.105016708374023
    10. 'min' → logprob: -8.980016708374023

Token 277: '((' (ID: 2054)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.47513967752456665
    2. 'seq' → logprob: -0.9751396775245667
    3. '(x' → logprob: -7.600139617919922
    4. '(' → logprob: -8.350139617919922
    5. '(i' → logprob: -8.475139617919922
    6. ' seq' → logprob: -10.350139617919922
    7. 'x' → logprob: -10.350139617919922
    8. 'sq' → logprob: -10.725139617919922
    9. '([' → logprob: -11.100139617919922
    10. 'i' → logprob: -11.975139617919922

Token 278: 'seq' (ID: 27794)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6655567288398743
    2. 'seq' → logprob: -0.7905567288398743
    3. 'abs' → logprob: -4.165556907653809
    4. '(seq' → logprob: -4.540556907653809
    5. '(x' → logprob: -5.540556907653809
    6. 'i' → logprob: -7.665556907653809
    7. '(' → logprob: -7.665556907653809
    8. 'elem' → logprob: -8.540556907653809
    9. 'val' → logprob: -8.665556907653809
    10. '(i' → logprob: -8.790556907653809

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018506382184568793
    2. '[' → logprob: -9.125185012817383
    3. ')' → logprob: -10.625185012817383
    4. '))' → logprob: -10.750185012817383
    5. '[-' → logprob: -11.500185012817383
    6. 'i' → logprob: -11.625185012817383
    7. '_i' → logprob: -12.500185012817383
    8. ')**' → logprob: -12.750185012817383
    9. '[j' → logprob: -14.125185012817383
    10. '   ' → logprob: -14.375185012817383

Token 280: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5872694849967957
    2. ']' → logprob: -0.8372694849967957
    3. '-' → logprob: -5.587269306182861
    4. ' -' → logprob: -5.837269306182861
    5. '   ' → logprob: -6.587269306182861
    6. ']-' → logprob: -6.712269306182861
    7. ' ' → logprob: -7.087269306182861
    8. '1' → logprob: -8.33726978302002
    9. ']+' → logprob: -8.71226978302002
    10. ' +' → logprob: -8.83726978302002

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003088871017098427
    2. ' ' → logprob: -8.625308990478516
    3. ']' → logprob: -9.125308990478516
    4. '0' → logprob: -11.125308990478516
    5. '2' → logprob: -13.500308990478516
    6. '   ' → logprob: -13.625308990478516
    7. '  ' → logprob: -14.125308990478516
    8. ']+' → logprob: -14.750308990478516
    9. '+' → logprob: -14.875308990478516
    10. '-' → logprob: -15.125308990478516

Token 282: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1529911905527115
    2. '-' → logprob: -2.02799129486084
    3. ']' → logprob: -4.65299129486084
    4. ' ' → logprob: -7.77799129486084
    5. ']-' → logprob: -8.77799129486084
    6. ')' → logprob: -9.65299129486084
    7. '[' → logprob: -9.77799129486084
    8. '   ' → logprob: -11.40299129486084
    9. '}' → logprob: -11.52799129486084
    10. '  ' → logprob: -12.90299129486084

Token 283: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026335015892982483
    2. '-' → logprob: -3.6513350009918213
    3. ' ' → logprob: -10.651334762573242
    4. ' -
' → logprob: -11.776334762573242
    5. '[' → logprob: -13.401334762573242
    6. '   ' → logprob: -14.651334762573242
    7. '-
' → logprob: -14.901334762573242
    8. ')' → logprob: -14.901334762573242
    9. '  ' → logprob: -16.026334762573242
    10. '    ' → logprob: -16.526334762573242

Token 284: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.008619419299066067
    2. ' seq' → logprob: -4.75861930847168
    3. '(seq' → logprob: -13.00861930847168
    4. ')' → logprob: -13.63361930847168
    5. '1' → logprob: -15.00861930847168
    6. '   ' → logprob: -15.25861930847168
    7. '_seq' → logprob: -15.75861930847168
    8. 'sq' → logprob: -16.00861930847168
    9. ' ' → logprob: -16.13361930847168
    10. 'se' → logprob: -16.25861930847168

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013452880375552922
    2. '[' → logprob: -9.125134468078613
    3. 'i' → logprob: -11.750134468078613
    4. ')' → logprob: -12.625134468078613
    5. ']' → logprob: -13.250134468078613
    6. ')[' → logprob: -13.250134468078613
    7. '][' → logprob: -13.375134468078613
    8. '```' → logprob: -13.500134468078613
    9. '[j' → logprob: -13.625134468078613
    10. ' ' → logprob: -13.750134468078613

Token 286: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576301097869873
    2. ')**' → logprob: -0.826301097869873
    3. ' )' → logprob: -8.201301574707031
    4. '])' → logprob: -9.951301574707031
    5. '   ' → logprob: -11.076301574707031
    6. '       ' → logprob: -12.201301574707031
    7. '[' → logprob: -12.826301574707031
    8. ' ' → logprob: -12.951301574707031
    9. '))' → logprob: -13.076301574707031
    10. ']' → logprob: -13.076301574707031

Token 287: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7009657621383667
    2. ')**' → logprob: -1.4509657621383667
    3. ')' → logprob: -1.9509657621383667
    4. ' for' → logprob: -2.4509658813476562
    5. 'for' → logprob: -3.9509658813476562
    6. ' **' → logprob: -3.9509658813476562
    7. ' )' → logprob: -6.450965881347656
    8. ' ' → logprob: -7.450965881347656
    9. ' *' → logprob: -8.200965881347656
    10. '*' → logprob: -8.700965881347656

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017042214749380946
    2. ' ' → logprob: -6.376704216003418
    3. '  ' → logprob: -14.376704216003418
    4. '

' → logprob: -15.126704216003418
    5. '
' → logprob: -15.501704216003418
    6. ')' → logprob: -15.501704216003418
    7. '   ' → logprob: -15.689204216003418
    8. '1' → logprob: -16.189205169677734
    9. '```' → logprob: -16.189205169677734
    10. '۲' → logprob: -16.689205169677734

Token 289: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.040313806384801865
    2. 'for' → logprob: -3.290313720703125
    3. ')' → logprob: -6.415313720703125
    4. '       ' → logprob: -7.540313720703125
    5. '	for' → logprob: -10.040313720703125
    6. '   ' → logprob: -10.665313720703125
    7. ' ' → logprob: -11.165313720703125
    8. ' )' → logprob: -11.665313720703125
    9. '  ' → logprob: -12.790313720703125
    10. '           ' → logprob: -13.415313720703125

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861456897109747
    2. ' i' → logprob: -4.758614540100098
    3. '	i' → logprob: -18.008615493774414
    4. ' ' → logprob: -18.383615493774414
    5. '(i' → logprob: -21.383615493774414
    6. '
' → logprob: -21.758615493774414
    7. '   ' → logprob: -21.883615493774414
    8. ')i' → logprob: -21.883615493774414
    9. ',i' → logprob: -22.008615493774414
    10. '  ' → logprob: -22.008615493774414

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001419995678588748
    2. 'in' → logprob: -6.626420021057129
    3. ' i' → logprob: -10.251420021057129
    4. '<|end|>' → logprob: -10.501420021057129
    5. 'range' → logprob: -11.001420021057129
    6. ' ' → logprob: -12.626420021057129
    7. 'i' → logprob: -13.126420021057129
    8. ' range' → logprob: -13.376420021057129
    9. '   ' → logprob: -13.501420021057129
    10. '  ' → logprob: -13.501420021057129

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740772247314453
    2. ' range' → logprob: -0.9740772247314453
    3. ' ' → logprob: -15.849077224731445
    4. '(range' → logprob: -16.099077224731445
    5. '	range' → logprob: -17.349077224731445
    6. ' xrange' → logprob: -18.849077224731445
    7. '.range' → logprob: -20.724077224731445
    8. '
' → logprob: -20.849077224731445
    9. 'ran' → logprob: -21.099077224731445
    10. '0' → logprob: -21.224077224731445

Token 293: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.008974510245025158
    2. '(' → logprob: -4.758974552154541
    3. '3' → logprob: -8.008974075317383
    4. 'len' → logprob: -10.508974075317383
    5. ' len' → logprob: -15.758974075317383
    6. '[len' → logprob: -18.383974075317383
    7. '(
' → logprob: -18.633974075317383
    8. '<len' → logprob: -18.758974075317383
    9. ' ' → logprob: -19.133974075317383
    10. '	len' → logprob: -19.383974075317383

Token 294: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.8789383830153383e-05
    2. '(len' → logprob: -11.000019073486328
    3. '(' → logprob: -13.250019073486328
    4. '(sequence' → logprob: -15.250019073486328
    5. 'seq' → logprob: -18.375019073486328
    6. ' (' → logprob: -18.875019073486328
    7. '(se' → logprob: -19.375019073486328
    8. '(
' → logprob: -19.875019073486328
    9. ' seq' → logprob: -20.625019073486328
    10. '_seq' → logprob: -21.500019073486328

Token 295: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24391761422157288
    2. '-' → logprob: -1.6189175844192505
    3. ')' → logprob: -4.118917465209961
    4. ' ' → logprob: -6.743917465209961
    5. '1' → logprob: -7.993917465209961
    6. ')-' → logprob: -8.743917465209961
    7. '   ' → logprob: -9.243917465209961
    8. '(seq' → logprob: -9.618917465209961
    9. '[' → logprob: -9.868917465209961
    10. ' )' → logprob: -10.118917465209961

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.250059127807617
    4. '2' → logprob: -17.500059127807617
    5. '   ' → logprob: -18.000059127807617
    6. ')' → logprob: -18.437559127807617
    7. '3' → logprob: -19.000059127807617
    8. '0' → logprob: -19.000059127807617
    9. '4' → logprob: -19.062559127807617
    10. '  ' → logprob: -19.375059127807617

Token 297: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005253322422504425
    2. '))' → logprob: -5.255253314971924
    3. ' )' → logprob: -11.130253791809082
    4. ')))' → logprob: -13.505253791809082
    5. ')}' → logprob: -13.755253791809082
    6. '       ' → logprob: -14.130253791809082
    7. '<|end|>' → logprob: -14.505253791809082
    8. ')
' → logprob: -14.755253791809082
    9. ')}}' → logprob: -15.505253791809082
    10. '})' → logprob: -15.880253791809082

Token 298: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0003445216570980847
    2. '
' → logprob: -8.125344276428223
    3. '<|end|>' → logprob: -10.375344276428223
    4. ' class' → logprob: -11.250344276428223
    5. '<|end|>' → logprob: -13.125344276428223
    6. '    
' → logprob: -14.250344276428223
    7. '  
' → logprob: -15.125344276428223
    8. '   ' → logprob: -15.125344276428223
    9. '```' → logprob: -15.250344276428223
    10. '"class' → logprob: -15.750344276428223

Token 299: ' Minimal' (ID: 99472)
  Prédit: ' Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.7138583660125732
    2. 'Sequence' → logprob: -1.4638583660125732
    3. 'Optimizer' → logprob: -2.4638583660125732
    4. 'Optimal' → logprob: -2.8388583660125732
    5. ' Optimal' → logprob: -3.2138583660125732
    6. ' Solution' → logprob: -3.7138583660125732
    7. 'Solution' → logprob: -4.213858604431152
    8. 'Cost' → logprob: -4.463858604431152
    9. ' Cost' → logprob: -4.713858604431152
    10. ' Optim' → logprob: -4.963858604431152

Token 300: 'Cost' (ID: 16815)
  Prédit: 'Cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: -0.0011880877427756786
    2. 'Sequence' → logprob: -6.751188278198242
    3. 'Sequences' → logprob: -11.876188278198242
    4. 'Difference' → logprob: -13.001188278198242
    5. 'Costs' → logprob: -13.126188278198242
    6. ' Cost' → logprob: -13.126188278198242
    7. 'cost' → logprob: -14.251188278198242
    8. 'Distance' → logprob: -14.251188278198242
    9. ' cost' → logprob: -14.376188278198242
    10. 'Factor' → logprob: -14.501188278198242

Token 301: 'Finder' (ID: 42976)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.31526872515678406
    2. 'Finder' → logprob: -1.9402687549591064
    3. 'Strategy' → logprob: -2.4402687549591064
    4. 'Selector' → logprob: -3.9402687549591064
    5. 'Factor' → logprob: -5.190268516540527
    6. 'Sequ' → logprob: -5.440268516540527
    7. 'Evaluator' → logprob: -5.815268516540527
    8. 'Optimizer' → logprob: -6.190268516540527
    9. 'Cost' → logprob: -6.565268516540527
    10. 'Solver' → logprob: -7.315268516540527

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021990251261740923
    2. ':
' → logprob: -6.127199172973633
    3. ' :' → logprob: -11.627199172973633
    4. ':

' → logprob: -12.877199172973633
    5. '(' → logprob: -13.377199172973633
    6. ':
' → logprob: -15.377199172973633
    7. ' :
' → logprob: -15.877199172973633
    8. '():' → logprob: -16.127199172973633
    9. ':def' → logprob: -16.127199172973633
    10. '):' → logprob: -16.502199172973633

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004107134882360697
    2. ' def' → logprob: -5.5041069984436035
    3. 'def' → logprob: -11.004107475280762
    4. '```' → logprob: -12.254107475280762
    5. ' class' → logprob: -12.754107475280762
    6. 'class' → logprob: -13.004107475280762
    7. '    ' → logprob: -13.879107475280762
    8. ' ' → logprob: -15.254107475280762
    9. '  ' → logprob: -15.504107475280762
    10. '   ' → logprob: -15.754107475280762

Token 304: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9580363035202026
    2. ' def' → logprob: -0.9580363035202026
    3. 'def' (adapté à ' def') → logprob: -1.4580363035202026
    4. ' ' → logprob: -11.583036422729492
    5. '@' → logprob: -12.833036422729492
    6. 'class' → logprob: -12.833036422729492
    7. '  ' → logprob: -14.083036422729492
    8. '    ' → logprob: -14.958036422729492
    9. ' @' → logprob: -15.458036422729492
    10. '	def' → logprob: -15.958036422729492

Token 305: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03827890381217003
    2. ' def' → logprob: -3.288278818130493
    3. '__' → logprob: -9.538278579711914
    4. ' ' → logprob: -9.663278579711914
    5. ' _' → logprob: -10.538278579711914
    6. ' init' → logprob: -10.663278579711914
    7. '_init' → logprob: -11.038278579711914
    8. 'def' → logprob: -11.413278579711914
    9. ' ' → logprob: -11.913278579711914
    10. ' find' → logprob: -12.413278579711914

Token 306: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'new' → logprob: -18.75
    3. ' init' → logprob: -19.625
    4. '(init' → logprob: -20.625
    5. 'inite' → logprob: -21.0
    6. 'in' → logprob: -21.125
    7. 'initi' → logprob: -21.125
    8. '	init' → logprob: -21.25
    9. 'ini' → logprob: -21.5
    10. 'def' → logprob: -22.125

Token 307: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10208466649055481
    2. ' (' → logprob: -2.3520846366882324
    3. '__(' → logprob: -6.602084636688232
    4. '(' → logprob: -8.10208511352539
    5. ',' → logprob: -8.72708511352539
    6. '   ' → logprob: -10.60208511352539
    7. 'self' → logprob: -11.60208511352539
    8. '(
' → logprob: -12.47708511352539
    9. '_(' → logprob: -12.47708511352539
    10. '__(
' → logprob: -12.85208511352539

Token 308: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001146291324403137
    2. '       ' → logprob: -9.625114440917969
    3. ' self' → logprob: -10.750114440917969
    4. '   ' → logprob: -10.875114440917969
    5. '
' → logprob: -12.125114440917969
    6. 'a' → logprob: -13.625114440917969
    7. ',' → logprob: -14.250114440917969
    8. '(self' → logprob: -14.750114440917969
    9. ')' → logprob: -16.37511444091797
    10. 'sequence' → logprob: -16.37511444091797

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013502299785614014
    2. 'self' → logprob: -5.13850212097168
    3. ' ,' → logprob: -5.88850212097168
    4. ' (' → logprob: -5.88850212097168
    5. '(self' → logprob: -6.63850212097168
    6. '   ' → logprob: -7.76350212097168
    7. ' self' → logprob: -8.38850212097168
    8. '       ' → logprob: -10.88850212097168
    9. ',self' → logprob: -11.88850212097168
    10. '(' → logprob: -12.88850212097168

Token 310: ' sequence' (ID: 16281)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11208488792181015
    2. ' a' → logprob: -2.3620848655700684
    3. 'sequence' → logprob: -5.237084865570068
    4. ' sequences' → logprob: -5.862084865570068
    5. 'se' → logprob: -6.362084865570068
    6. ' sequence' → logprob: -7.362084865570068
    7. 'factor' → logprob: -7.737084865570068
    8. '   ' → logprob: -7.737084865570068
    9. ')' → logprob: -9.112085342407227
    10. ' factor' → logprob: -9.487085342407227

Token 311: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -0.36003825068473816
    2. 'Generator' → logprob: -1.2350382804870605
    3. 's' → logprob: -5.2350382804870605
    4. 'generator' → logprob: -6.1100382804870605
    5. ':' → logprob: -6.3600382804870605
    6. '   ' → logprob: -6.8600382804870605
    7. ')' → logprob: -7.9850382804870605
    8. ',' → logprob: -8.610037803649902
    9. '):' → logprob: -8.985037803649902
    10. '  ' → logprob: -9.610037803649902

Token 312: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002976633608341217
    2. ' ,' → logprob: -6.252976417541504
    3. ':' → logprob: -7.127976417541504
    4. '):' → logprob: -8.377976417541504
    5. '   ' → logprob: -12.252976417541504
    6. '):
' → logprob: -12.752976417541504
    7. ' ):' → logprob: -13.127976417541504
    8. ')' → logprob: -13.252976417541504
    9. '       ' → logprob: -13.877976417541504
    10. ' :' → logprob: -14.252976417541504

Token 313: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.03804286941885948
    2. ' Sequence' → logprob: -3.2880427837371826
    3. '_sequence' → logprob: -14.538043022155762
    4. ')' → logprob: -14.788043022155762
    5. ' sequence' → logprob: -15.663043022155762
    6. 'sequence' → logprob: -15.913043022155762
    7. '   ' → logprob: -16.038042068481445
    8. '.Sequence' → logprob: -16.413042068481445
    9. ' ' → logprob: -16.663042068481445
    10. '):
' → logprob: -17.413042068481445

Token 314: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -0.00026574634830467403
    2. '_generator' → logprob: -8.500266075134277
    3. '   ' → logprob: -10.125266075134277
    4. '):
' → logprob: -11.875266075134277
    5. ')' → logprob: -11.875266075134277
    6. 'generator' → logprob: -12.625266075134277
    7. ' Generator' → logprob: -13.125266075134277
    8. ')
' → logprob: -14.375266075134277
    9. '),' → logprob: -15.000266075134277
    10. '       ' → logprob: -15.000266075134277

Token 315: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48202913999557495
    2. '):
' → logprob: -0.982029139995575
    3. ',' → logprob: -4.857028961181641
    4. '   ' → logprob: -9.73202896118164
    5. '):
' → logprob: -10.10702896118164
    6. ')' → logprob: -10.35702896118164
    7. ':' → logprob: -11.85702896118164
    8. '       ' → logprob: -12.85702896118164
    9. '):

' → logprob: -13.23202896118164
    10. ' ):' → logprob: -13.73202896118164

Token 316: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.35417187213897705
    2. ' cost' → logprob: -1.229171872138977
    3. 'target' → logprob: -5.8541717529296875
    4. ' target' → logprob: -6.3541717529296875
    5. '   ' → logprob: -8.104171752929688
    6. 'e' → logprob: -8.479171752929688
    7. 'sequence' → logprob: -8.979171752929688
    8. 'max' → logprob: -9.479171752929688
    9. ' sequences' → logprob: -9.979171752929688
    10. ' minimal' → logprob: -9.979171752929688

Token 317: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.00043925188947468996
    2. 'e' → logprob: -7.750439167022705
    3. 'Evaluator' → logprob: -12.375439643859863
    4. '   ' → logprob: -13.750439643859863
    5. '_' → logprob: -14.500439643859863
    6. '_optimizer' → logprob: -14.625439643859863
    7. '_cal' → logprob: -15.000439643859863
    8. ',e' → logprob: -15.125439643859863
    9. ' evaluator' → logprob: -15.500439643859863
    10. 'valuator' → logprob: -15.500439643859863

Token 318: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -8.537868779967539e-06
    2. 'val' → logprob: -12.750008583068848
    3. 'lator' → logprob: -12.750008583068848
    4. 'v' → logprob: -13.625008583068848
    5. 'alu' → logprob: -13.875008583068848
    6. 'valu' → logprob: -15.375008583068848
    7. 'ulator' → logprob: -16.50000762939453
    8. 'uator' → logprob: -16.75000762939453
    9. 'valuer' → logprob: -16.75000762939453
    10. 'st' → logprob: -17.62500762939453

Token 319: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08730777353048325
    2. '):
' → logprob: -2.8373076915740967
    3. ':' → logprob: -3.7123076915740967
    4. ' ):' → logprob: -7.712307929992676
    5. '   ' → logprob: -9.587307929992676
    6. ' ' → logprob: -10.837307929992676
    7. ' ):
' → logprob: -10.962307929992676
    8. '  ' → logprob: -11.212307929992676
    9. '):
' → logprob: -11.462307929992676
    10. ')' → logprob: -11.462307929992676

Token 320: ' Cost' (ID: 18328)
  Prédit: 'Cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: -0.0019735998939722776
    2. ' Cost' → logprob: -6.251973628997803
    3. ')' → logprob: -10.751973152160645
    4. '   ' → logprob: -11.626973152160645
    5. '  ' → logprob: -12.501973152160645
    6. ' ' → logprob: -12.751973152160645
    7. '
' → logprob: -13.001973152160645
    8. '):
' → logprob: -13.376973152160645
    9. 'Callable' → logprob: -13.626973152160645
    10. 'Costs' → logprob: -14.751973152160645

Token 321: 'Evaluator' (ID: 87172)
  Prédit: 'valuator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.062007006257772446
    2. 'Evaluator' → logprob: -2.812006950378418
    3. 'uator' → logprob: -10.687006950378418
    4. 'lator' → logprob: -12.312006950378418
    5. 'val' → logprob: -12.687006950378418
    6. 'ulator' → logprob: -13.312006950378418
    7. ')' → logprob: -13.562006950378418
    8. '   ' → logprob: -13.937006950378418
    9. 'ator' → logprob: -14.312006950378418
    10. '  ' → logprob: -14.312006950378418

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03810460492968559
    2. '):' → logprob: -3.28810453414917
    3. '   ' → logprob: -9.913105010986328
    4. '):
' → logprob: -11.663105010986328
    5. ' ):
' → logprob: -12.538105010986328
    6. ' ' → logprob: -14.913105010986328
    7. '       ' → logprob: -15.038105010986328
    8. ')' → logprob: -15.163105010986328
    9. '):

' → logprob: -15.538105010986328
    10. ' ):' → logprob: -16.038105010986328

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1612875908613205
    2. '       ' → logprob: -1.911287546157837
    3. 'def' → logprob: -7.161287784576416
    4. '
' → logprob: -8.786287307739258
    5. ' def' → logprob: -9.786287307739258
    6. '):
' → logprob: -10.786287307739258
    7. '    
' → logprob: -10.911287307739258
    8. '```' → logprob: -11.661287307739258
    9. '        
' → logprob: -12.161287307739258
    10. ')' → logprob: -12.161287307739258

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.026612715795636177
    2. '       ' → logprob: -4.026612758636475
    3. ' self' → logprob: -4.776612758636475
    4. '   ' → logprob: -13.151612281799316
    5. '	self' → logprob: -15.026612281799316
    6. ' ' → logprob: -16.651613235473633
    7. 'def' → logprob: -16.901613235473633
    8. '(self' → logprob: -17.276613235473633
    9. '     ' → logprob: -18.276613235473633
    10. '      ' → logprob: -18.401613235473633

Token 325: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.0010324534960091114
    2. 'sequence' → logprob: -7.50103235244751
    3. '.' → logprob: -7.75103235244751
    4. ' .' → logprob: -10.126032829284668
    5. ' sequence' → logprob: -11.626032829284668
    6. '.se' → logprob: -16.25103187561035
    7. '.s' → logprob: -17.25103187561035
    8. '._' → logprob: -17.25103187561035
    9. '   ' → logprob: -17.62603187561035
    10. '.Sequence' → logprob: -18.37603187561035

Token 326: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -4.7994282795116305e-05
    2. 's' → logprob: -10.12504768371582
    3. '_f' → logprob: -12.62504768371582
    4. '_' → logprob: -13.37504768371582
    5. '   ' → logprob: -14.00004768371582
    6. ' =' → logprob: -15.00004768371582
    7. '_creator' → logprob: -15.50004768371582
    8. ' _' → logprob: -15.50004768371582
    9. '_manager' → logprob: -15.50004768371582
    10. '_constructor' → logprob: -15.75004768371582

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31398460268974304
    2. '=' → logprob: -1.3139846324920654
    3. '   ' → logprob: -7.313984394073486
    4. '       ' → logprob: -10.438984870910645
    5. ',' → logprob: -11.063984870910645
    6. ' ' → logprob: -12.188984870910645
    7. '    ' → logprob: -12.563984870910645
    8. '  ' → logprob: -13.938984870910645
    9. '        ' → logprob: -14.313984870910645
    10. '.' → logprob: -14.938984870910645

Token 328: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.1269282102584839
    2. ' sequence' → logprob: -2.1269283294677734
    3. '(sequence' → logprob: -15.626928329467773
    4. '.sequence' → logprob: -18.001928329467773
    5. '_sequence' → logprob: -19.751928329467773
    6. '   ' → logprob: -21.126928329467773
    7. 'sequ' → logprob: -21.126928329467773
    8. '       ' → logprob: -21.626928329467773
    9. 'Sequence' → logprob: -21.626928329467773
    10. 'se' → logprob: -21.751928329467773

Token 329: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -1.1472419600977446e-06
    2. 'Generator' → logprob: -15.000000953674316
    3. '_generate' → logprob: -15.375000953674316
    4. 'generator' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.125001907348633
    6. '_' → logprob: -16.250001907348633
    7. '_gener' → logprob: -17.000001907348633
    8. '_generated' → logprob: -17.125001907348633
    9. '_creator' → logprob: -17.625001907348633
    10. ' _' → logprob: -17.625001907348633

Token 330: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08277355879545212
    2. '
' → logprob: -2.707773447036743
    3. '       ' → logprob: -5.082773685455322
    4. '    
' → logprob: -5.082773685455322
    5. '        
' → logprob: -8.707773208618164
    6. 'def' → logprob: -9.707773208618164
    7. '<|end|>' → logprob: -9.832773208618164
    8. '  
' → logprob: -10.832773208618164
    9. ',' → logprob: -11.332773208618164
    10. ' def' → logprob: -11.582773208618164

Token 331: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014533077366650105
    2. '
' → logprob: -4.389533042907715
    3. '    
' → logprob: -6.264533042907715
    4. 'def' → logprob: -9.764533042907715
    5. '       ' → logprob: -10.139533042907715
    6. '        
' → logprob: -11.139533042907715
    7. '  
' → logprob: -12.889533042907715
    8. ' def' → logprob: -13.389533042907715
    9. '   
' → logprob: -13.514533042907715
    10. '<|end|>' → logprob: -14.514533042907715

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.861651490908116e-05
    2. 'def' → logprob: -9.875068664550781
    3. ' self' → logprob: -11.250068664550781
    4. '       ' → logprob: -12.500068664550781
    5. '   ' → logprob: -15.375068664550781
    6. '
' → logprob: -15.625068664550781
    7. '        
' → logprob: -17.00006866455078
    8. '	self' → logprob: -18.12506866455078
    9. '        

' → logprob: -18.37506866455078
    10. '    
' → logprob: -18.62506866455078

Token 333: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0006390500930137932
    2. '.' → logprob: -8.000638961791992
    3. ' .' → logprob: -8.250638961791992
    4. ' cost' → logprob: -11.000638961791992
    5. 'cost' → logprob: -11.250638961791992
    6. '   ' → logprob: -12.250638961791992
    7. '.c' → logprob: -13.500638961791992
    8. '.b' → logprob: -14.000638961791992
    9. '.code' → logprob: -14.500638961791992
    10. '._' → logprob: -14.500638961791992

Token 334: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -7.433829159708694e-05
    2. 'e' → logprob: -10.00007438659668
    3. '   ' → logprob: -11.12507438659668
    4. 'Evaluator' → logprob: -11.75007438659668
    5. '_' → logprob: -13.75007438659668
    6. '_f' → logprob: -13.87507438659668
    7. '_eval' → logprob: -14.62507438659668
    8. '_optimizer' → logprob: -14.87507438659668
    9. '  ' → logprob: -15.00007438659668
    10. 'valuator' → logprob: -15.50007438659668

Token 335: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -3.9054008084349334e-05
    2. 'val' → logprob: -11.250039100646973
    3. 'valu' → logprob: -11.375039100646973
    4. 'v' → logprob: -11.875039100646973
    5. 'alu' → logprob: -12.000039100646973
    6. 'valuer' → logprob: -14.875039100646973
    7. 'va' → logprob: -15.750039100646973
    8. 'lator' → logprob: -15.875039100646973
    9. '   ' → logprob: -16.000038146972656
    10. '  ' → logprob: -16.250038146972656

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4646133482456207
    2. '=' → logprob: -1.3396133184432983
    3. '   ' → logprob: -2.964613437652588
    4. '.evaluate' → logprob: -3.089613437652588
    5. '.' → logprob: -5.089613437652588
    6. '       ' → logprob: -5.589613437652588
    7. ' ' → logprob: -6.714613437652588
    8. '.generate' → logprob: -7.839613437652588
    9. '    ' → logprob: -8.08961296081543
    10. '  ' → logprob: -9.21461296081543

Token 337: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.31326258182525635
    2. 'cost' → logprob: -1.3132625818252563
    3. ' ' → logprob: -14.688262939453125
    4. '(cost' → logprob: -15.813262939453125
    5. '_cost' → logprob: -16.313262939453125
    6. 'Cost' → logprob: -16.688262939453125
    7. '   ' → logprob: -17.438262939453125
    8. '.cost' → logprob: -18.438262939453125
    9. '    ' → logprob: -18.938262939453125
    10. '  ' → logprob: -19.063262939453125

Token 338: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0010088731069117785
    2. 'Evaluator' → logprob: -7.001008987426758
    3. '_' → logprob: -9.376008987426758
    4. 'Evalu' → logprob: -12.501008987426758
    5. 'e' → logprob: -12.876008987426758
    6. 'valuator' → logprob: -13.251008987426758
    7. '_E' → logprob: -13.876008987426758
    8. ' _' → logprob: -14.001008987426758
    9. '._' → logprob: -14.376008987426758
    10. ' Evalu' → logprob: -15.001008987426758

Token 339: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.0010578181827440858
    2. 'alu' → logprob: -7.1260576248168945
    3. 'valu' → logprob: -9.001057624816895
    4. 'val' → logprob: -9.501057624816895
    5. 'v' → logprob: -10.126057624816895
    6. 'al' → logprob: -12.376057624816895
    7. 'va' → logprob: -12.751057624816895
    8. 'ulator' → logprob: -13.626057624816895
    9. 'value' → logprob: -13.751057624816895
    10. 'lator' → logprob: -14.001057624816895

Token 340: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14675194025039673
    2. '   ' → logprob: -2.021751880645752
    3. '    
' → logprob: -5.521751880645752
    4. 'def' → logprob: -10.39675235748291
    5. ' 
' → logprob: -11.39675235748291
    6. '  
' → logprob: -11.77175235748291
    7. ' def' → logprob: -12.02175235748291
    8. '        
' → logprob: -12.27175235748291
    9. '   
' → logprob: -12.77175235748291
    10. '	def' → logprob: -13.52175235748291

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02326178550720215
    2. 'def' → logprob: -3.773261785507202
    3. ' def' → logprob: -11.023262023925781
    4. '
' → logprob: -17.77326202392578
    5. '	def' → logprob: -18.02326202392578
    6. '    
' → logprob: -19.39826202392578
    7. '  ' → logprob: -20.27326202392578
    8. ' ' → logprob: -20.77326202392578
    9. '       ' → logprob: -21.64826202392578
    10. '```' → logprob: -21.89826202392578

Token 342: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7729658540920354e-05
    2. '   ' → logprob: -10.750027656555176
    3. ' def' → logprob: -12.000027656555176
    4. '	def' → logprob: -21.375028610229492
    5. ' ' → logprob: -23.625028610229492
    6. '  ' → logprob: -25.125028610229492
    7. '_def' → logprob: -25.500028610229492
    8. 'Def' → logprob: -25.750028610229492
    9. 'from' → logprob: -26.125028610229492
    10. 'class' → logprob: -26.250028610229492

Token 343: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.47407835721969604
    2. ' find' → logprob: -0.974078357219696
    3. '	find' → logprob: -14.599078178405762
    4. 'get' → logprob: -15.599078178405762
    5. '   ' → logprob: -15.724078178405762
    6. ' minimal' → logprob: -15.849078178405762
    7. ' ' → logprob: -15.849078178405762
    8. ' get' → logprob: -16.349079132080078
    9. '_find' → logprob: -16.349079132080078
    10. '.find' → logprob: -17.224079132080078

Token 344: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.007046048529446125
    2. '_' → logprob: -5.757046222686768
    3. '_best' → logprob: -6.382046222686768
    4. '_low' → logprob: -6.632046222686768
    5. '_max' → logprob: -7.757046222686768
    6. '_opt' → logprob: -8.00704574584961
    7. ' _' → logprob: -10.00704574584961
    8. '_m' → logprob: -10.88204574584961
    9. '_all' → logprob: -11.75704574584961
    10. '_sequence' → logprob: -12.63204574584961

Token 345: '_cost' (ID: 36820)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.004144761245697737
    2. '_' → logprob: -5.629144668579102
    3. '_cost' → logprob: -7.879144668579102
    4. 'imum' → logprob: -9.379144668579102
    5. '_im' → logprob: -9.879144668579102
    6. 'IMAL' → logprob: -11.504144668579102
    7. '(self' → logprob: -13.004144668579102
    8. '_sequence' → logprob: -13.004144668579102
    9. '_val' → logprob: -13.004144668579102
    10. 'inal' → logprob: -13.004144668579102

Token 346: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02707391418516636
    2. '_sequence' → logprob: -3.652073860168457
    3. '_sequences' → logprob: -7.527073860168457
    4. '(' → logprob: -9.152073860168457
    5. '_(' → logprob: -9.652073860168457
    6. '_and' → logprob: -10.777073860168457
    7. 'self' → logprob: -11.027073860168457
    8. '_' → logprob: -11.652073860168457
    9. '_se' → logprob: -12.777073860168457
    10. ' (' → logprob: -12.902073860168457

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07161204516887665
    2. '):' → logprob: -3.6966121196746826
    3. '):
' → logprob: -3.9466121196746826
    4. 'self' → logprob: -4.9466118812561035
    5. ',' → logprob: -5.0716118812561035
    6. ' )' → logprob: -5.0716118812561035
    7. '   ' → logprob: -6.0716118812561035
    8. '_sequences' → logprob: -6.5716118812561035
    9. '       ' → logprob: -7.5716118812561035
    10. '(self' → logprob: -7.8216118812561035

Token 348: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013779717264696956
    2. ' ->' → logprob: -7.751378059387207
    3. '       ' → logprob: -8.251378059387207
    4. '(' → logprob: -8.501378059387207
    5. ' (' → logprob: -8.626378059387207
    6. '   ' → logprob: -9.001378059387207
    7. '->' → logprob: -9.376378059387207
    8. 'self' → logprob: -9.626378059387207
    9. 'def' → logprob: -12.001378059387207
    10. ' self' → logprob: -12.376378059387207

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.049191754311323166
    2. ' int' → logprob: -3.04919171333313
    3. 'Optional' → logprob: -8.54919147491455
    4. 'tuple' → logprob: -8.79919147491455
    5. ' tuple' → logprob: -9.29919147491455
    6. ' Optional' → logprob: -9.42419147491455
    7. '(int' → logprob: -9.79919147491455
    8. 'list' → logprob: -11.04919147491455
    9. ' list' → logprob: -11.67419147491455
    10. '[int' → logprob: -13.17419147491455

Token 350: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8164004683494568
    2. '       ' → logprob: -0.8164004683494568
    3. ':
' → logprob: -2.1914005279541016
    4. '(self' → logprob: -5.816400527954102
    5. '():
' → logprob: -7.566400527954102
    6. '():' → logprob: -8.816400527954102
    7. '(' → logprob: -8.941400527954102
    8. '   ' → logprob: -8.941400527954102
    9. 'self' → logprob: -9.941400527954102
    10. ',' → logprob: -9.941400527954102

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9266199160483666e-05
    2. ' sequences' → logprob: -11.125019073486328
    3. 'all' → logprob: -13.500019073486328
    4. 'se' → logprob: -13.500019073486328
    5. 'min' → logprob: -14.125019073486328
    6. '```' → logprob: -15.125019073486328
    7. '   ' → logprob: -15.375019073486328
    8. ' all' → logprob: -15.750019073486328
    9. ' min' → logprob: -16.750019073486328
    10. '_sequences' → logprob: -17.000019073486328

Token 352: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0738203227519989
    2. 'min' → logprob: -3.4488203525543213
    3. '       ' → logprob: -3.8238203525543213
    4. ' sequences' → logprob: -4.198820114135742
    5. 'all' → logprob: -6.323820114135742
    6. ' min' → logprob: -7.573820114135742
    7. 'minimal' → logprob: -9.448820114135742
    8. ' all' → logprob: -9.948820114135742
    9. ' minimal' → logprob: -10.448820114135742
    10. 'best' → logprob: -10.448820114135742

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013259568950161338
    2. '=' → logprob: -6.626326084136963
    3. ' ' → logprob: -17.751325607299805
    4. 's' → logprob: -17.876325607299805
    5. ' =
' → logprob: -18.001325607299805
    6. '    ' → logprob: -18.001325607299805
    7. '        ' → logprob: -18.126325607299805
    8. '   ' → logprob: -18.376325607299805
    9. ' =[' → logprob: -19.001325607299805
    10. ' =
' → logprob: -20.251325607299805

Token 354: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.251935750246048
    2. 'self' → logprob: -1.5019357204437256
    3. '       ' → logprob: -12.001935958862305
    4. '	self' → logprob: -15.001935958862305
    5. '(self' → logprob: -16.376935958862305
    6. '[self' → logprob: -16.501935958862305
    7. '   ' → logprob: -17.501935958862305
    8. '           ' → logprob: -17.751935958862305
    9. '=self' → logprob: -18.126935958862305
    10. '        ' → logprob: -18.501935958862305

Token 355: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.0009138475870713592
    2. 'sequence' → logprob: -7.000913619995117
    3. '.' → logprob: -13.125913619995117
    4. ' sequence' → logprob: -15.750913619995117
    5. ' .' → logprob: -16.625913619995117
    6. '_sequence' → logprob: -17.375913619995117
    7. '.se' → logprob: -17.375913619995117
    8. '   ' → logprob: -17.875913619995117
    9. '(sequence' → logprob: -18.125913619995117
    10. 'quence' → logprob: -18.250913619995117

Token 356: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -3.128163257315464e-07
    2. 'generator' → logprob: -15.375
    3. '_generate' → logprob: -18.0
    4. 'Generator' → logprob: -18.125
    5. '_generated' → logprob: -18.25
    6. 'enerator' → logprob: -18.875
    7. 's' → logprob: -19.5
    8. '_strategy' → logprob: -20.5
    9. '-generator' → logprob: -20.75
    10. '_gen' → logprob: -20.875

Token 357: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -3.786196975852363e-05
    2. 'generate' → logprob: -10.250038146972656
    3. '.' → logprob: -13.125038146972656
    4. ' .' → logprob: -15.125038146972656
    5. '_generate' → logprob: -16.000038146972656
    6. '   ' → logprob: -18.125038146972656
    7. '.get' → logprob: -20.500038146972656
    8. ' generate' → logprob: -20.875038146972656
    9. '(generate' → logprob: -21.125038146972656
    10. 'enerate' → logprob: -21.375038146972656

Token 358: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: 0.0
    2. 'all' → logprob: -18.875
    3. 's' → logprob: -20.0
    4. '__' → logprob: -21.375
    5. '```' → logprob: -21.375
    6. '_' → logprob: -22.375
    7. '\' → logprob: -22.375
    8. '_
' → logprob: -22.5
    9. '_and' → logprob: -22.625
    10. '_ALL' → logprob: -23.0

Token 359: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -4.246537173457909e-06
    2. '_se' → logprob: -13.375003814697266
    3. 's' → logprob: -13.625003814697266
    4. 'se' → logprob: -14.375003814697266
    5. '_all' → logprob: -15.000003814697266
    6. '_s' → logprob: -15.375003814697266
    7. '_' → logprob: -15.500003814697266
    8. '_lists' → logprob: -17.500003814697266
    9. ' sequences' → logprob: -17.750003814697266
    10. '_scores' → logprob: -17.750003814697266

Token 360: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00162043038289994
    2. '
' → logprob: -7.251620292663574
    3. '        
' → logprob: -7.501620292663574
    4. ',' → logprob: -8.376620292663574
    5. '<|end|>' → logprob: -10.001620292663574
    6. '   ' → logprob: -11.126620292663574
    7. '        ' → logprob: -11.501620292663574
    8. 'cost' → logprob: -11.751620292663574
    9. '[' → logprob: -12.126620292663574
    10. '
' → logprob: -12.251620292663574

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012040519155561924
    2. 'min' → logprob: -4.512040615081787
    3. ' min' → logprob: -7.637040615081787
    4. 'cost' → logprob: -7.887040615081787
    5. '   ' → logprob: -9.637040138244629
    6. ' cost' → logprob: -10.887040138244629
    7. ' costs' → logprob: -11.012040138244629
    8. '```' → logprob: -11.137040138244629
    9. ' minimal' → logprob: -11.762040138244629
    10. 'minimal' → logprob: -12.637040138244629

Token 362: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.18699289858341217
    2. ' min' → logprob: -1.811992883682251
    3. 'return' → logprob: -6.18699312210083
    4. ' costs' → logprob: -6.31199312210083
    5. 'cost' → logprob: -6.31199312210083
    6. ' return' → logprob: -7.68699312210083
    7. '       ' → logprob: -7.81199312210083
    8. 'best' → logprob: -8.186992645263672
    9. 'if' → logprob: -8.561992645263672
    10. ' if' → logprob: -9.311992645263672

Token 363: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00047202190035022795
    2. '_' → logprob: -7.750472068786621
    3. ' _' → logprob: -10.750472068786621
    4. '_val' → logprob: -11.750472068786621
    5. '(_' → logprob: -12.000472068786621
    6. '_value' → logprob: -13.250472068786621
    7. '_seq' → logprob: -14.000472068786621
    8. '_score' → logprob: -14.250472068786621
    9. '_COST' → logprob: -15.000472068786621
    10. '_code' → logprob: -15.375472068786621

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078758880496025
    2. '=' → logprob: -5.5040788650512695
    3. ',' → logprob: -15.62907886505127
    4. ' ' → logprob: -16.754077911376953
    5. ' =
' → logprob: -17.879077911376953
    6. '=None' → logprob: -17.879077911376953
    7. '_' → logprob: -18.004077911376953
    8. '   ' → logprob: -18.004077911376953
    9. '  ' → logprob: -18.504077911376953
    10. ':' → logprob: -19.004077911376953

Token 365: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00017648482753429562
    2. ' float' → logprob: -8.750176429748535
    3. 'None' → logprob: -11.000176429748535
    4. ' None' → logprob: -14.000176429748535
    5. '   ' → logprob: -15.000176429748535
    6. 'min' → logprob: -16.50017738342285
    7. '       ' → logprob: -18.25017738342285
    8. '	float' → logprob: -19.50017738342285
    9. '    ' → logprob: -21.00017738342285
    10. '<float' → logprob: -21.75017738342285

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022086964920163155
    2. '
' → logprob: -4.147087097167969
    3. '        
' → logprob: -6.772087097167969
    4. '<|end|>' → logprob: -6.772087097167969
    5. ' for' → logprob: -7.147087097167969
    6. '  
' → logprob: -7.272087097167969
    7. ' 
' → logprob: -7.397087097167969
    8. '	' → logprob: -7.647087097167969
    9. '    
' → logprob: -8.147087097167969
    10. '   ' → logprob: -8.147087097167969

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002293825149536133
    2. ' for' → logprob: -6.127293586730957
    3. 'for' → logprob: -9.502293586730957
    4. '<|end|>' → logprob: -11.252293586730957
    5. '   ' → logprob: -11.377293586730957
    6. '	for' → logprob: -13.002293586730957
    7. '	' → logprob: -13.252293586730957
    8. '
' → logprob: -13.502293586730957
    9. '        
' → logprob: -13.752293586730957
    10. '      ' → logprob: -14.002293586730957

Token 368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.901345038088039e-05
    2. '       ' → logprob: -10.000099182128906
    3. ' for' → logprob: -10.000099182128906
    4. 'min' → logprob: -11.750099182128906
    5. 'best' → logprob: -15.375099182128906
    6. '   ' → logprob: -16.250099182128906
    7. '
' → logprob: -18.625099182128906
    8. '	for' → logprob: -19.250099182128906
    9. ' ' → logprob: -19.875099182128906
    10. '        
' → logprob: -20.250099182128906

Token 369: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.01417115144431591
    2. ' seq' → logprob: -4.264171123504639
    3. 'sequence' → logprob: -12.514171600341797
    4. '   ' → logprob: -12.639171600341797
    5. ' sequence' → logprob: -14.514171600341797
    6. 'se' → logprob: -17.014171600341797
    7. '       ' → logprob: -17.014171600341797
    8. ' ' → logprob: -17.264171600341797
    9. '(seq' → logprob: -17.264171600341797
    10. 's' → logprob: -17.764171600341797

Token 370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008011689060367644
    2. 'in' → logprob: -7.375801086425781
    3. ',' → logprob: -8.875801086425781
    4. '        ' → logprob: -11.250801086425781
    5. '   ' → logprob: -11.875801086425781
    6. '       ' → logprob: -12.625801086425781
    7. ' ' → logprob: -12.625801086425781
    8. '    ' → logprob: -13.125801086425781
    9. '<|end|>' → logprob: -13.250801086425781
    10. ' ,' → logprob: -13.625801086425781

Token 371: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.038043782114982605
    2. 'se' → logprob: -3.288043737411499
    3. '_sequences' → logprob: -13.038043975830078
    4. 'Sequences' → logprob: -17.288043975830078
    5. 'sequence' → logprob: -17.413043975830078
    6. '(se' → logprob: -17.538043975830078
    7. '       ' → logprob: -17.663043975830078
    8. 'quences' → logprob: -18.038043975830078
    9. '           ' → logprob: -18.663043975830078
    10. '	se' → logprob: -18.788043975830078

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14803668856620789
    2. '           ' → logprob: -2.3980367183685303
    3. ':
' → logprob: -3.1480367183685303
    4. ',' → logprob: -6.273036479949951
    5. '       ' → logprob: -6.523036479949951
    6. '<|end|>' → logprob: -8.39803695678711
    7. '<|end|>' → logprob: -10.39803695678711
    8. ' :' → logprob: -11.14803695678711
    9. '):
' → logprob: -11.14803695678711
    10. ':

' → logprob: -11.14803695678711

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.587483221665025e-05
    2. ' if' → logprob: -10.375065803527832
    3. ' cost' → logprob: -11.250065803527832
    4. '
' → logprob: -12.125065803527832
    5. '            
' → logprob: -12.625065803527832
    6. '          ' → logprob: -13.125065803527832
    7. '```' → logprob: -13.250065803527832
    8. '               ' → logprob: -13.500065803527832
    9. '       ' → logprob: -13.500065803527832
    10. '   ' → logprob: -13.625065803527832

Token 374: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.18700484931468964
    2. 'cost' (adapté à ' cost') → logprob: -1.812004804611206
    3. '           ' → logprob: -4.937005043029785
    4. '               ' → logprob: -9.937005043029785
    5. '   ' → logprob: -12.437005043029785
    6. '_cost' → logprob: -13.687005043029785
    7. ' current' → logprob: -14.062005043029785
    8. ' ' → logprob: -14.437005043029785
    9. '       ' → logprob: -14.562005043029785
    10. 'current' → logprob: -14.812005043029785

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00671584764495492
    2. '=' → logprob: -5.006715774536133
    3. '_' → logprob: -14.881715774536133
    4. ' ' → logprob: -16.381715774536133
    5. '   ' → logprob: -17.256715774536133
    6. '	' → logprob: -17.506715774536133
    7. ' =
' → logprob: -18.381715774536133
    8. '_=' → logprob: -19.006715774536133
    9. '  ' → logprob: -19.131715774536133
    10. ' ' → logprob: -19.756715774536133

Token 376: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693199515342712
    2. 'self' → logprob: -2.12693190574646
    3. '           ' → logprob: -12.501932144165039
    4. '               ' → logprob: -16.25193214416504
    5. '            ' → logprob: -16.75193214416504
    6. '	self' → logprob: -17.25193214416504
    7. '(self' → logprob: -17.37693214416504
    8. '   ' → logprob: -19.00193214416504
    9. 'Self' → logprob: -19.25193214416504
    10. '=self' → logprob: -20.00193214416504

Token 377: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -3.4121114822482923e-06
    2. 'cost' → logprob: -13.250003814697266
    3. '.' → logprob: -13.750003814697266
    4. ' .' → logprob: -15.125003814697266
    5. ' cost' → logprob: -15.250003814697266
    6. '.code' → logprob: -17.000003814697266
    7. '.score' → logprob: -19.375003814697266
    8. '_cost' → logprob: -19.500003814697266
    9. 'Cost' → logprob: -20.125003814697266
    10. '   ' → logprob: -20.125003814697266

Token 378: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -5.872261317563243e-05
    2. 'Evaluator' → logprob: -10.250059127807617
    3. 'valuator' → logprob: -10.750059127807617
    4. '_cost' → logprob: -14.250059127807617
    5. '_a' → logprob: -14.750059127807617
    6. '.evaluate' → logprob: -15.375059127807617
    7. 'evaluate' → logprob: -16.250059127807617
    8. 'cost' → logprob: -16.500059127807617
    9. '-e' → logprob: -16.625059127807617
    10. 'Evalu' → logprob: -16.625059127807617

Token 379: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.08955034613609314
    2. 'valuate' → logprob: -2.589550256729126
    3. 'val' → logprob: -5.089550495147705
    4. 'alu' → logprob: -5.589550495147705
    5. 'value' → logprob: -8.214550018310547
    6. 'st' → logprob: -9.339550018310547
    7. 'valuer' → logprob: -9.464550018310547
    8. 'valu' → logprob: -9.589550018310547
    9. 'v' → logprob: -9.839550018310547
    10. 'cost' → logprob: -10.214550018310547

Token 380: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0003659746435005218
    2. '.' → logprob: -8.0003662109375
    3. ' .' → logprob: -10.5003662109375
    4. '.calculate' → logprob: -13.7503662109375
    5. 'evaluate' → logprob: -13.8753662109375
    6. '.eval' → logprob: -15.0003662109375
    7. '._' → logprob: -15.1253662109375
    8. '().' → logprob: -16.1253662109375
    9. '.perform' → logprob: -17.5003662109375
    10. '.compute' → logprob: -17.5003662109375

Token 381: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -12.000009536743164
    3. '_cost' → logprob: -13.375009536743164
    4. 'sequence' → logprob: -13.875009536743164
    5. '_seq' → logprob: -14.625009536743164
    6. 'Sequence' → logprob: -15.875009536743164
    7. '_SEQUENCE' → logprob: -15.875009536743164
    8. ' sequence' → logprob: -16.000009536743164
    9. '(sequence' → logprob: -16.500009536743164
    10. '_sequences' → logprob: -16.500009536743164

Token 382: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. '(sequence' → logprob: -14.375004768371582
    4. '(se' → logprob: -14.875004768371582
    5. '(
' → logprob: -17.375003814697266
    6. ' (' → logprob: -18.000003814697266
    7. '(seg' → logprob: -18.875003814697266
    8. '(

' → logprob: -19.375003814697266
    9. '(sess' → logprob: -19.375003814697266
    10. '(sec' → logprob: -19.500003814697266

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20159314572811127
    2. ')
' → logprob: -1.7015931606292725
    3. '           ' → logprob: -8.826593399047852
    4. ')
' → logprob: -10.451593399047852
    5. ')

' → logprob: -13.826593399047852
    6. ' )' → logprob: -13.826593399047852
    7. ' )
' → logprob: -14.076593399047852
    8. ')`
' → logprob: -14.826593399047852
    9. '       ' → logprob: -15.451593399047852
    10. ')\
' → logprob: -15.576593399047852

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003136552404612303
    2. '
' → logprob: -8.375313758850098
    3. 'if' → logprob: -10.500313758850098
    4. ' if' → logprob: -10.500313758850098
    5. '            
' → logprob: -11.125313758850098
    6. '       ' → logprob: -12.750313758850098
    7. '<|end|>' → logprob: -13.125313758850098
    8. '               ' → logprob: -13.125313758850098
    9. '          ' → logprob: -13.375313758850098
    10. ' 
' → logprob: -14.000313758850098

Token 385: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03551643341779709
    2. ' if' → logprob: -3.4105165004730225
    3. 'if' (adapté à ' if') → logprob: -6.285516262054443
    4. '          ' → logprob: -13.410516738891602
    5. '               ' → logprob: -13.535516738891602
    6. '       ' → logprob: -13.660516738891602
    7. '   ' → logprob: -13.910516738891602
    8. '            ' → logprob: -15.785516738891602
    9. '```' → logprob: -16.0355167388916
    10. '         ' → logprob: -16.2855167388916

Token 386: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.008615161292254925
    2. 'min' → logprob: -4.758615016937256
    3. '(min' → logprob: -14.758615493774414
    4. '           ' → logprob: -16.633615493774414
    5. '	min' → logprob: -17.008615493774414
    6. ' (' → logprob: -17.383615493774414
    7. '    ' → logprob: -18.133615493774414
    8. '[min' → logprob: -18.258615493774414
    9. '_min' → logprob: -18.508615493774414
    10. '            ' → logprob: -18.758615493774414

Token 387: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -15.75
    3. '_' → logprob: -17.875
    4. ' cost' → logprob: -19.0
    5. '_COST' → logprob: -19.375
    6. 'Cost' → logprob: -19.75
    7. ' _' → logprob: -20.125
    8. '-cost' → logprob: -20.5
    9. '_c' → logprob: -20.5
    10. '   ' → logprob: -21.5

Token 388: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008614808320999146
    2. 'is' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.008615493774414
    4. '	is' → logprob: -16.508615493774414
    5. 'or' → logprob: -19.383615493774414
    6. 'in' → logprob: -19.508615493774414
    7. 's' → logprob: -19.508615493774414
    8. '   ' → logprob: -20.383615493774414
    9. 'i' → logprob: -20.508615493774414
    10. ' None' → logprob: -20.758615493774414

Token 389: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.38687121868133545
    2. ' None' → logprob: -1.1368712186813354
    3. 'min' → logprob: -16.761871337890625
    4. '   ' → logprob: -16.886871337890625
    5. ' min' → logprob: -17.761871337890625
    6. ' ' → logprob: -17.761871337890625
    7. '=None' → logprob: -17.886871337890625
    8. '  ' → logprob: -18.011871337890625
    9. '(None' → logprob: -18.011871337890625
    10. 'none' → logprob: -19.636871337890625

Token 390: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007261329446919262
    2. 'or' → logprob: -7.250726222991943
    3. '               ' → logprob: -11.375725746154785
    4. '            ' → logprob: -13.000725746154785
    5. '           ' → logprob: -13.750725746154785
    6. '              ' → logprob: -14.250725746154785
    7. '                ' → logprob: -15.375725746154785
    8. '	or' → logprob: -15.500725746154785
    9. ' ' → logprob: -15.875725746154785
    10. '                   ' → logprob: -17.1257266998291

Token 391: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.16024728119373322
    2. 'cost' → logprob: -1.9102473258972168
    3. '               ' → logprob: -11.285246849060059
    4. '           ' → logprob: -11.660246849060059
    5. '            ' → logprob: -14.035246849060059
    6. '(cost' → logprob: -15.035246849060059
    7. '   ' → logprob: -15.660246849060059
    8. '                   ' → logprob: -15.910246849060059
    9. '_cost' → logprob: -16.160247802734375
    10. '                ' → logprob: -16.285247802734375

Token 392: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12699078023433685
    2. '>' → logprob: -2.126990795135498
    3. ' <' → logprob: -9.75199031829834
    4. '<' → logprob: -12.62699031829834
    5. 'cost' → logprob: -14.75199031829834
    6. ' is' → logprob: -15.12699031829834
    7. '><' → logprob: -15.62699031829834
    8. ' >
' → logprob: -16.501991271972656
    9. ' >

' → logprob: -16.501991271972656
    10. ' cost' → logprob: -16.501991271972656

Token 393: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759404301643372
    2. 'min' → logprob: -0.8259404301643372
    3. 'cost' → logprob: -14.700940132141113
    4. ' cost' → logprob: -15.075940132141113
    5. '_min' → logprob: -15.325940132141113
    6. '	min' → logprob: -16.20094108581543
    7. '=min' → logprob: -18.07594108581543
    8. ' ' → logprob: -18.70094108581543
    9. '.min' → logprob: -18.70094108581543
    10. '           ' → logprob: -19.07594108581543

Token 394: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0445127372804563e-05
    2. 'cost' → logprob: -11.50001049041748
    3. '_min' → logprob: -16.625009536743164
    4. '-cost' → logprob: -16.625009536743164
    5. ' cost' → logprob: -17.250009536743164
    6. '_COST' → logprob: -17.375009536743164
    7. '_' → logprob: -17.625009536743164
    8. 'Cost' → logprob: -17.875009536743164
    9. '.cost' → logprob: -19.375009536743164
    10. '_c' → logprob: -19.500009536743164

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02758939564228058
    2. ':
' → logprob: -4.027589321136475
    3. '               ' → logprob: -5.027589321136475
    4. '           ' → logprob: -5.902589321136475
    5. '       ' → logprob: -10.152589797973633
    6. '):' → logprob: -11.402589797973633
    7. '):
' → logprob: -11.777589797973633
    8. '              ' → logprob: -11.777589797973633
    9. '                   ' → logprob: -11.902589797973633
    10. ':

' → logprob: -12.027589797973633

Token 396: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008106979075819254
    2. 'min' → logprob: -7.750810623168945
    3. ' min' → logprob: -8.375810623168945
    4. '           ' → logprob: -8.875810623168945
    5. '                   ' → logprob: -12.250810623168945
    6. '              ' → logprob: -13.625810623168945
    7. '[min' → logprob: -14.250810623168945
    8. '   ' → logprob: -14.375810623168945
    9. ',min' → logprob: -14.375810623168945
    10. '(min' → logprob: -14.500810623168945

Token 397: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3891909420490265
    2. 'min' (adapté à ' min') → logprob: -1.139190912246704
    3. '               ' → logprob: -6.139191150665283
    4. '           ' → logprob: -8.764190673828125
    5. '                   ' → logprob: -12.889190673828125
    6. '	min' → logprob: -14.514190673828125
    7. '_min' → logprob: -14.889190673828125
    8. '   ' → logprob: -15.014190673828125
    9. '[min' → logprob: -15.514190673828125
    10. '(min' → logprob: -15.764190673828125

Token 398: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -8.2994620242971e-06
    2. 'cost' → logprob: -12.625008583068848
    3. 'Cost' → logprob: -13.125008583068848
    4. '_' → logprob: -13.250008583068848
    5. '_COST' → logprob: -14.375008583068848
    6. '_cos' → logprob: -15.750008583068848
    7. '_co' → logprob: -16.62500762939453
    8. ' _' → logprob: -16.62500762939453
    9. '-cost' → logprob: -16.87500762939453
    10. ' cost' → logprob: -17.00000762939453

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993910670280457
    2. '=' → logprob: -2.694939136505127
    3. ' =
' → logprob: -13.819938659667969
    4. '<|end|>' → logprob: -14.694938659667969
    5. '=cut' → logprob: -15.694938659667969
    6. '＝' → logprob: -15.819938659667969
    7. '               ' → logprob: -15.819938659667969
    8. '                ' → logprob: -16.06993865966797
    9. '=

' → logprob: -16.19493865966797
    10. '=c' → logprob: -16.31993865966797

Token 400: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.575939416885376
    2. 'cost' → logprob: -0.825939416885376
    3. '_cost' → logprob: -18.325939178466797
    4. '(cost' → logprob: -19.075939178466797
    5. 'Cost' → logprob: -20.450939178466797
    6. '.cost' → logprob: -20.700939178466797
    7. 'c' → logprob: -21.450939178466797
    8. ' kost' → logprob: -21.575939178466797
    9. '               ' → logprob: -21.825939178466797
    10. '   ' → logprob: -21.950939178466797

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005253921262919903
    2. '
' → logprob: -8.00052547454834
    3. 'return' → logprob: -8.87552547454834
    4. '        
' → logprob: -10.50052547454834
    5. ' return' → logprob: -11.00052547454834
    6. '      ' → logprob: -13.50052547454834
    7. '   ' → logprob: -13.50052547454834
    8. '       
' → logprob: -14.12552547454834
    9. '    
' → logprob: -14.37552547454834
    10. '               ' → logprob: -14.50052547454834

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.000763510703109e-05
    2. '
' → logprob: -10.500040054321289
    3. 'return' → logprob: -11.750040054321289
    4. '	' → logprob: -13.750040054321289
    5. ' return' → logprob: -14.000040054321289
    6. '        
' → logprob: -14.000040054321289
    7. '   ' → logprob: -14.125040054321289
    8. '      ' → logprob: -14.500040054321289
    9. '	return' → logprob: -15.875040054321289
    10. '```' → logprob: -16.37504005432129

Token 403: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001173321157693863
    2. 'return' (adapté à ' return') → logprob: -6.751173496246338
    3. '   ' → logprob: -13.25117301940918
    4. ' return' → logprob: -13.62617301940918
    5. '	return' → logprob: -16.00117301940918
    6. '               ' → logprob: -17.62617301940918
    7. '	' → logprob: -18.00117301940918
    8. '           ' → logprob: -18.37617301940918
    9. ':return' → logprob: -19.00117301940918
    10. '      ' → logprob: -19.12617301940918

Token 404: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.10020667314529419
    2. 'min' → logprob: -2.3502066135406494
    3. '	min' → logprob: -18.22520637512207
    4. '_min' → logprob: -19.72520637512207
    5. '(min' → logprob: -21.60020637512207
    6. '[min' → logprob: -22.10020637512207
    7. '   ' → logprob: -22.22520637512207
    8. ' ' → logprob: -22.85020637512207
    9. ',min' → logprob: -22.97520637512207
    10. 'm' → logprob: -23.10020637512207

Token 405: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. 'cost' → logprob: -15.875
    3. '_' → logprob: -16.875
    4. ' _' → logprob: -17.375
    5. '_min' → logprob: -17.75
    6. '_co' → logprob: -17.75
    7. '_COST' → logprob: -17.75
    8. '._' → logprob: -18.5
    9. '_c' → logprob: -18.625
    10. '\' → logprob: -18.875

Token 406: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.668131947517395
    2. '<|end|>' → logprob: -0.793131947517395
    3. 'class' → logprob: -4.1681318283081055
    4. '#' → logprob: -4.2931318283081055
    5. '   ' → logprob: -6.5431318283081055
    6. '<|end|>' → logprob: -6.7931318283081055
    7. 'def' → logprob: -7.7931318283081055
    8. '    
' → logprob: -7.9181318283081055
    9. ' ' → logprob: -8.043131828308105
    10. 'n' → logprob: -8.043131828308105

Token 407: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020204905420541763
    2. 'a' → logprob: -4.645205020904541
    3. 'class' → logprob: -5.020205020904541
    4. '```' → logprob: -6.770205020904541
    5. 'def' → logprob: -6.895205020904541
    6. '<|end|>' → logprob: -7.395205020904541
    7. 'if' → logprob: -7.645205020904541
    8. 'factor' → logprob: -8.020204544067383
    9. '
' → logprob: -10.145204544067383
    10. 'from' → logprob: -10.145204544067383

Token 408: ' Ru' (ID: 24119)
  Prédit: ' Optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optimal' → logprob: -1.1298635005950928
    2. ' Test' → logprob: -1.5048635005950928
    3. ' Advanced' → logprob: -2.7548635005950928
    4. 'Test' → logprob: -3.0048635005950928
    5. 'Optimal' → logprob: -3.0048635005950928
    6. ' Optim' → logprob: -3.3798635005950928
    7. ' Main' → logprob: -3.7548635005950928
    8. ' Solution' → logprob: -4.004863739013672
    9. ' Perfect' → logprob: -4.254863739013672
    10. ' Sequence' → logprob: -4.254863739013672

Token 409: 'ins' (ID: 1564)
  Prédit: 'nn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nn' → logprob: -0.9929985404014587
    2. 'st' → logprob: -1.4929986000061035
    3. 'n' → logprob: -1.8679986000061035
    4. 'ntime' → logprob: -3.6179986000061035
    5. 'nner' → logprob: -3.7429986000061035
    6. 'b' → logprob: -3.9929986000061035
    7. 'nge' → logprob: -3.9929986000061035
    8. 'ng' → logprob: -4.1179986000061035
    9. 'nest' → logprob: -4.2429986000061035
    10. 'nst' → logprob: -4.3679986000061035

Token 410: 'Solver' (ID: 70484)
  Prédit: 'Rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rest' → logprob: -0.6719909310340881
    2. 'Factor' → logprob: -1.0469908714294434
    3. 'Cost' → logprob: -3.5469908714294434
    4. 'Builder' → logprob: -4.796990871429443
    5. 'Optimizer' → logprob: -4.796990871429443
    6. 'Repair' → logprob: -4.921990871429443
    7. 'Strategy' → logprob: -4.921990871429443
    8. 'Sequence' → logprob: -5.171990871429443
    9. 'Finder' → logprob: -5.296990871429443
    10. 'Breaker' → logprob: -5.296990871429443

Token 411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001689462224021554
    2. ':
' → logprob: -6.501689434051514
    3. '(F' → logprob: -9.126689910888672
    4. '(' → logprob: -9.751689910888672
    5. '(S' → logprob: -11.626689910888672
    6. '(R' → logprob: -12.376689910888672
    7. '(object' → logprob: -13.626689910888672
    8. ':def' → logprob: -13.626689910888672
    9. ':

' → logprob: -14.001689910888672
    10. '(Abstract' → logprob: -14.251689910888672

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006791924242861569
    2. ' def' → logprob: -7.375679016113281
    3. 'def' → logprob: -10.125679016113281
    4. ':
' → logprob: -12.000679016113281
    5. ':' → logprob: -12.375679016113281
    6. '	def' → logprob: -14.500679016113281
    7. '```' → logprob: -14.625679016113281
    8. '):
' → logprob: -14.750679016113281
    9. 'class' → logprob: -15.375679016113281
    10. ':def' → logprob: -16.25067901611328

Token 413: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6094327569007874
    2. '   ' → logprob: -1.1094326972961426
    3. 'def' (adapté à ' def') → logprob: -2.1094326972961426
    4. ':
' → logprob: -5.609432697296143
    5. ':' → logprob: -6.609432697296143
    6. 'class' → logprob: -9.2344331741333
    7. ' ' → logprob: -9.7344331741333
    8. '	def' → logprob: -9.9844331741333
    9. ':def' → logprob: -10.2344331741333
    10. '  ' → logprob: -11.4844331741333

Token 414: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06894085556268692
    2. '__' → logprob: -3.0689408779144287
    3. 'init' → logprob: -4.44394063949585
    4. ' init' → logprob: -5.06894063949585
    5. '_init' → logprob: -6.31894063949585
    6. ' def' → logprob: -9.193941116333008
    7. ' ' → logprob: -9.568941116333008
    8. '_' → logprob: -10.068941116333008
    9. '___' → logprob: -10.943941116333008
    10. ' _' → logprob: -11.068941116333008

Token 415: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. 'ini' → logprob: -18.75
    4. '_init' → logprob: -19.75
    5. '(init' → logprob: -20.125
    6. '	init' → logprob: -20.75
    7. 'def' → logprob: -21.0
    8. 'in' → logprob: -21.125
    9. 'name' → logprob: -21.375
    10. 'inite' → logprob: -21.5

Token 416: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14450879395008087
    2. '(self' → logprob: -2.0195088386535645
    3. '_(' → logprob: -7.3945088386535645
    4. 'self' → logprob: -7.5195088386535645
    5. '__(
' → logprob: -8.394508361816406
    6. '(' → logprob: -8.769508361816406
    7. ' (' → logprob: -9.144508361816406
    8. '>(' → logprob: -10.019508361816406
    9. ')(' → logprob: -10.269508361816406
    10. '__' → logprob: -11.144508361816406

Token 417: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.786196975852363e-05
    2. ' self' → logprob: -10.750038146972656
    3. '   ' → logprob: -11.750038146972656
    4. '(self' → logprob: -12.500038146972656
    5. '       ' → logprob: -13.375038146972656
    6. 'a' → logprob: -13.500038146972656
    7. ')' → logprob: -14.125038146972656
    8. ',' → logprob: -14.375038146972656
    9. '
' → logprob: -15.500038146972656
    10. 'A' → logprob: -16.375038146972656

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2281143069267273
    2. 'self' → logprob: -1.603114366531372
    3. '(self' → logprob: -6.603114128112793
    4. ' self' → logprob: -7.103114128112793
    5. ' ,' → logprob: -8.353114128112793
    6. '   ' → logprob: -9.103114128112793
    7. '       ' → logprob: -9.478114128112793
    8. ' (' → logprob: -9.853114128112793
    9. ',self' → logprob: -10.478114128112793
    10. ')' → logprob: -11.853114128112793

Token 419: ' factor' (ID: 12332)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032436542212963104
    2. ' a' → logprob: -3.5324366092681885
    3. 'self' → logprob: -6.032436370849609
    4. ' self' → logprob: -9.15743637084961
    5. '   ' → logprob: -9.78243637084961
    6. 'factor' → logprob: -10.53243637084961
    7. 'n' → logprob: -10.90743637084961
    8. 'input' → logprob: -11.03243637084961
    9. '):
' → logprob: -11.65743637084961
    10. ')' → logprob: -11.90743637084961

Token 420: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -6.349075556499884e-05
    2. '_strategy' → logprob: -10.2500638961792
    3. '_factor' → logprob: -11.1250638961792
    4. 'ation' → logprob: -11.2500638961792
    5. 'iation' → logprob: -16.000062942504883
    6. 'factor' → logprob: -16.875062942504883
    7. 'ize' → logprob: -17.375062942504883
    8. 'strategy' → logprob: -17.500062942504883
    9. '_class' → logprob: -17.750062942504883
    10. '   ' → logprob: -18.125062942504883

Token 421: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.6405310816480778e-05
    2. 'Strategy' → logprob: -11.125016212463379
    3. 'strategy' → logprob: -13.500016212463379
    4. '_str' → logprob: -16.125017166137695
    5. ' strategy' → logprob: -17.000017166137695
    6. 'strateg' → logprob: -18.000017166137695
    7. '_method' → logprob: -18.375017166137695
    8. '_factor' → logprob: -18.500017166137695
    9. ',' → logprob: -18.625017166137695
    10. '   ' → logprob: -19.250017166137695

Token 422: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03219647333025932
    2. '):' → logprob: -3.657196521759033
    3. ',' → logprob: -5.157196521759033
    4. ')' → logprob: -9.907196044921875
    5. '):
' → logprob: -10.407196044921875
    6. ' :' → logprob: -11.157196044921875
    7. '=' → logprob: -11.782196044921875
    8. ' ):' → logprob: -12.032196044921875
    9. '   ' → logprob: -12.157196044921875
    10. '       ' → logprob: -12.907196044921875

Token 423: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.0031830633524805307
    2. ' Factor' → logprob: -5.753182888031006
    3. '_factor' → logprob: -13.003183364868164
    4. 'factor' → logprob: -13.128183364868164
    5. '   ' → logprob: -14.628183364868164
    6. ')' → logprob: -15.378183364868164
    7. ' factor' → logprob: -15.628183364868164
    8. '       ' → logprob: -16.503183364868164
    9. '):
' → logprob: -17.628183364868164
    10. 'Factors' → logprob: -18.003183364868164

Token 424: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -3.128163257315464e-07
    2. 'Strategy' → logprob: -16.5
    3. 'ation' → logprob: -16.875
    4. 'iz' → logprob: -17.625
    5. 'Factor' → logprob: -18.0
    6. 'izer' → logprob: -19.75
    7. 'iza' → logprob: -20.0
    8. 'IZATION' → logprob: -20.125
    9. '_strategy' → logprob: -20.375
    10. 'izat' → logprob: -20.75

Token 425: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.32058924436569214
    2. '):' → logprob: -1.820589303970337
    3. '):
' → logprob: -2.195589303970337
    4. 'Factor' → logprob: -8.070589065551758
    5. ',' → logprob: -8.445589065551758
    6. '   ' → logprob: -9.070589065551758
    7. '):

' → logprob: -9.445589065551758
    8. ':' → logprob: -9.570589065551758
    9. '):
' → logprob: -9.570589065551758
    10. '=' → logprob: -10.320589065551758

Token 426: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. '):' → logprob: -9.750065803527832
    3. ' ,' → logprob: -12.125065803527832
    4. '   ' → logprob: -13.625065803527832
    5. '):
' → logprob: -15.625065803527832
    6. '       ' → logprob: -16.000064849853516
    7. ',
' → logprob: -16.750064849853516
    8. ',a' → logprob: -17.750064849853516
    9. '‌,' → logprob: -18.000064849853516
    10. ')' → logprob: -18.625064849853516

Token 427: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00740501144900918
    2. 'def' → logprob: -5.632404804229736
    3. '       ' → logprob: -5.757404804229736
    4. ' def' → logprob: -7.382404804229736
    5. ' self' → logprob: -11.757405281066895
    6. 'self' → logprob: -12.382405281066895
    7. '	def' → logprob: -13.382405281066895
    8. '
' → logprob: -13.882405281066895
    9. '    
' → logprob: -14.382405281066895
    10. '```' → logprob: -14.757405281066895

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006270744372159243
    2. '       ' → logprob: -5.256270885467529
    3. ' self' → logprob: -6.881270885467529
    4. 'def' → logprob: -12.256270408630371
    5. '   ' → logprob: -12.506270408630371
    6. 'class' → logprob: -14.131270408630371
    7. '	self' → logprob: -15.756270408630371
    8. 'super' → logprob: -16.131271362304688
    9. '(self' → logprob: -16.881271362304688
    10. ' ' → logprob: -17.756271362304688

Token 429: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.000536828360054642
    2. 'factor' → logprob: -7.625536918640137
    3. '.strategy' → logprob: -10.875536918640137
    4. '.sequence' → logprob: -11.000536918640137
    5. ' .' → logprob: -12.375536918640137
    6. '.' → logprob: -13.125536918640137
    7. '.fac' → logprob: -13.125536918640137
    8. '.fact' → logprob: -13.250536918640137
    9. '.f' → logprob: -13.750536918640137
    10. ' factor' → logprob: -14.125536918640137

Token 430: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -2.15310683415737e-05
    2. 'ation' → logprob: -10.750021934509277
    3. '_factor' → logprob: -17.12502098083496
    4. 'factor' → logprob: -17.87502098083496
    5. 'iation' → logprob: -18.62502098083496
    6. '_strategy' → logprob: -19.62502098083496
    7. '_' → logprob: -20.62502098083496
    8. '   ' → logprob: -20.87502098083496
    9. 'IZATION' → logprob: -20.87502098083496
    10. 'strategy' → logprob: -21.00002098083496

Token 431: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.2664456789934775e-06
    2. 'strategy' → logprob: -13.875000953674316
    3. '_factor' → logprob: -16.000001907348633
    4. '_str' → logprob: -16.000001907348633
    5. '_' → logprob: -17.125001907348633
    6. 'strateg' → logprob: -18.625001907348633
    7. 'Strategy' → logprob: -19.750001907348633
    8. '_method' → logprob: -19.750001907348633
    9. ' strategy' → logprob: -20.000001907348633
    10. '=' → logprob: -20.000001907348633

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859304800629616
    2. ' =' → logprob: -3.048593044281006
    3. '=
' → logprob: -12.798593521118164
    4. '=self' → logprob: -14.048593521118164
    5. ':' → logprob: -14.798593521118164
    6. '   ' → logprob: -15.048593521118164
    7. ' =
' → logprob: -15.298593521118164
    8. '=

' → logprob: -15.423593521118164
    9. ' ' → logprob: -15.548593521118164
    10. ')' → logprob: -15.673593521118164

Token 433: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.04858816787600517
    2. ' factor' → logprob: -3.048588275909424
    3. '_factor' → logprob: -14.923587799072266
    4. '.factor' → logprob: -15.923587799072266
    5. 'Factor' → logprob: -16.423587799072266
    6. 'fact' → logprob: -16.923587799072266
    7. ' fator' → logprob: -17.173587799072266
    8. '
' → logprob: -17.423587799072266
    9. 'self' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.048587799072266

Token 434: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -7.822646693966817e-06
    2. '_strategy' → logprob: -12.125007629394531
    3. 'ation' → logprob: -13.125007629394531
    4. '_factor' → logprob: -16.50000762939453
    5. 'strategy' → logprob: -16.50000762939453
    6. '_' → logprob: -17.37500762939453
    7. 'iz' → logprob: -17.50000762939453
    8. 'IZATION' → logprob: -17.75000762939453
    9. 'z' → logprob: -17.75000762939453
    10. 'az' → logprob: -19.12500762939453

Token 435: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -2.176947600673884e-05
    2. 'strategy' → logprob: -10.875021934509277
    3. 'Strategy' → logprob: -13.375021934509277
    4. '_' → logprob: -14.125021934509277
    5. '_
' → logprob: -15.500021934509277
    6. 'strateg' → logprob: -16.37502098083496
    7. '_str' → logprob: -16.50002098083496
    8. ' strategy' → logprob: -16.62502098083496
    9. '_factor' → logprob: -17.12502098083496
    10. '
' → logprob: -18.25002098083496

Token 436: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5475968718528748
    2. '   ' → logprob: -1.2975969314575195
    3. '    
' → logprob: -1.9225969314575195
    4. 'def' → logprob: -6.4225969314575195
    5. '        
' → logprob: -7.7975969314575195
    6. ' 
' → logprob: -9.92259693145752
    7. '  
' → logprob: -10.29759693145752
    8. '	
' → logprob: -10.29759693145752
    9. '   
' → logprob: -10.54759693145752
    10. '<|end|>' → logprob: -10.79759693145752

Token 437: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2524188756942749
    2. '   ' → logprob: -1.502418875694275
    3. ' def' → logprob: -7.6274189949035645
    4. '
' → logprob: -13.627418518066406
    5. '	def' → logprob: -13.752418518066406
    6. '       ' → logprob: -15.877418518066406
    7. ' ' → logprob: -16.002418518066406
    8. 'self' → logprob: -16.502418518066406
    9. '    
' → logprob: -16.877418518066406
    10. '  ' → logprob: -17.877418518066406

Token 438: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.981667537620524e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '
' → logprob: -21.875001907348633
    5. ' ' → logprob: -22.750001907348633
    6. '    
' → logprob: -22.750001907348633
    7. 'class' → logprob: -23.000001907348633
    8. 'de' → logprob: -23.375001907348633
    9. '	def' → logprob: -23.375001907348633
    10. '```' → logprob: -24.625001907348633

Token 439: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.08077967911958694
    2. ' solve' → logprob: -2.580779790878296
    3. 'def' → logprob: -7.205779552459717
    4. ' def' → logprob: -7.705779552459717
    5. 'find' → logprob: -8.455780029296875
    6. ' find' → logprob: -8.580780029296875
    7. ' minimal' → logprob: -8.705780029296875
    8. 'minimal' → logprob: -10.330780029296875
    9. 'min' → logprob: -10.580780029296875
    10. 'calculate' → logprob: -10.955780029296875

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -14.000205039978027
    4. '(
' → logprob: -15.000205039978027
    5. 'self' → logprob: -15.625205039978027
    6. '   ' → logprob: -17.50020408630371
    7. '       ' → logprob: -18.62520408630371
    8. '(s' → logprob: -18.87520408630371
    9. '(a' → logprob: -19.37520408630371
    10. 'def' → logprob: -19.50020408630371

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.625006675720215
    3. 'self' → logprob: -12.875006675720215
    4. '       ' → logprob: -15.000006675720215
    5. ',a' → logprob: -15.500006675720215
    6. ')' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.37500762939453
    8. '(self' → logprob: -16.37500762939453
    9. ',self' → logprob: -17.37500762939453
    10. 'a' → logprob: -18.12500762939453

Token 442: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.059355027973651886
    2. ' a' → logprob: -2.9343550205230713
    3. 'self' → logprob: -5.55935525894165
    4. ' self' → logprob: -7.43435525894165
    5. '   ' → logprob: -11.559354782104492
    6. ' ' → logprob: -12.684354782104492
    7. 'input' → logprob: -12.934354782104492
    8. ')' → logprob: -13.809354782104492
    9. ' input' → logprob: -13.934354782104492
    10. ')a' → logprob: -14.184354782104492

Token 443: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05497436597943306
    2. ',' → logprob: -2.929974317550659
    3. ':int' → logprob: -9.554974555969238
    4. ' ,' → logprob: -11.179974555969238
    5. '   ' → logprob: -12.679974555969238
    6. ':,' → logprob: -13.054974555969238
    7. ' :' → logprob: -13.679974555969238
    8. ',b' → logprob: -14.304974555969238
    9. '       ' → logprob: -16.054973602294922
    10. ')' → logprob: -16.929973602294922

Token 444: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014190183952450752
    2. ' int' → logprob: -4.264190196990967
    3. 'self' → logprob: -11.639189720153809
    4. ',' → logprob: -12.139189720153809
    5. '   ' → logprob: -12.139189720153809
    6. ')' → logprob: -13.389189720153809
    7. 'b' → logprob: -13.514189720153809
    8. ' ' → logprob: -13.889189720153809
    9. ':int' → logprob: -14.389189720153809
    10. '       ' → logprob: -14.639189720153809

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.625012397766113
    3. ',b' → logprob: -12.750012397766113
    4. ',
' → logprob: -16.000011444091797
    5. '‌,' → logprob: -16.750011444091797
    6. '   ' → logprob: -16.875011444091797
    7. ')' → logprob: -16.875011444091797
    8. '       ' → logprob: -17.000011444091797
    9. 'b' → logprob: -18.375011444091797
    10. ',

' → logprob: -18.875011444091797

Token 446: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3132619559764862
    2. 'b' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.188261032104492
    4. '    ' → logprob: -16.438261032104492
    5. '   ' → logprob: -17.563261032104492
    6. ' ' → logprob: -17.688261032104492
    7. ')b' → logprob: -19.438261032104492
    8. 'a' → logprob: -19.438261032104492
    9. '       ' → logprob: -19.813261032104492
    10. '	b' → logprob: -19.813261032104492

Token 447: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08916977792978287
    2. ')' → logprob: -2.46416974067688
    3. ':' → logprob: -9.0891695022583
    4. ' ,' → logprob: -9.9641695022583
    5. '):' → logprob: -10.5891695022583
    6. '   ' → logprob: -10.5891695022583
    7. ' )' → logprob: -10.9641695022583
    8. ',)' → logprob: -14.0891695022583
    9. '):
' → logprob: -14.3391695022583
    10. '       ' → logprob: -15.2141695022583

Token 448: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01819477789103985
    2. ' int' → logprob: -4.018194675445557
    3. ')' → logprob: -10.143195152282715
    4. 'b' → logprob: -12.893195152282715
    5. '   ' → logprob: -13.143195152282715
    6. ':int' → logprob: -14.643195152282715
    7. '(int' → logprob: -16.2681941986084
    8. ' b' → logprob: -16.2681941986084
    9. '[int' → logprob: -16.3931941986084
    10. ' ' → logprob: -16.3931941986084

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.500001907348633
    4. ',' → logprob: -16.125001907348633
    5. '):' → logprob: -16.250001907348633
    6. ',)' → logprob: -16.375001907348633
    7. ')->' → logprob: -17.000001907348633
    8. '):
' → logprob: -17.125001907348633
    9. '`)' → logprob: -17.125001907348633
    10. ':' → logprob: -18.875001907348633

Token 450: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24660837650299072
    2. ' ->' → logprob: -2.121608257293701
    3. '->' → logprob: -2.371608257293701
    4. ')' → logprob: -5.746608257293701
    5. ')->' → logprob: -6.496608257293701
    6. ':
' → logprob: -8.37160873413086
    7. '):' → logprob: -8.62160873413086
    8. '       ' → logprob: -8.99660873413086
    9. '   ' → logprob: -9.37160873413086
    10. ':return' → logprob: -11.37160873413086

Token 451: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008798571303486824
    2. ' int' → logprob: -4.758798599243164
    3. 'Minimal' → logprob: -9.008798599243164
    4. 'Optional' → logprob: -9.758798599243164
    5. ' Optional' → logprob: -13.133798599243164
    6. ' Minimal' → logprob: -14.008798599243164
    7. '[int' → logprob: -14.633798599243164
    8. '   ' → logprob: -15.508798599243164
    9. ':int' → logprob: -16.133798599243164
    10. '	int' → logprob: -16.133798599243164

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023919446393847466
    2. ':
' → logprob: -6.127391815185547
    3. '       ' → logprob: -8.627391815185547
    4. '():' → logprob: -11.377391815185547
    5. '):' → logprob: -11.627391815185547
    6. '   ' → logprob: -13.002391815185547
    7. '):
' → logprob: -13.377391815185547
    8. '():
' → logprob: -14.002391815185547
    9. ':return' → logprob: -14.377391815185547
    10. ':

' → logprob: -15.252391815185547

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023047674039844424
    2. ' sequence' → logprob: -9.00023078918457
    3. 'factor' → logprob: -10.00023078918457
    4. 'sequence' → logprob: -10.37523078918457
    5. ' factor' → logprob: -10.62523078918457
    6. '   ' → logprob: -12.62523078918457
    7. ' self' → logprob: -14.75023078918457
    8. '    ' → logprob: -15.12523078918457
    9. '      ' → logprob: -15.12523078918457
    10. 'self' → logprob: -15.37523078918457

Token 454: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.36067891120910645
    2. 'sequence' (adapté à ' sequence') → logprob: -1.2356789112091064
    3. '       ' → logprob: -5.360678672790527
    4. 'generator' → logprob: -5.735678672790527
    5. ' generator' → logprob: -5.860678672790527
    6. 'seq' → logprob: -7.985678672790527
    7. ' seq' → logprob: -8.235678672790527
    8. 'sg' → logprob: -8.235678672790527
    9. ' factor' → logprob: -8.360678672790527
    10. 'factor' → logprob: -8.485678672790527

Token 455: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -1.7835754988482222e-05
    2. '_' → logprob: -11.125018119812012
    3. '_gen' → logprob: -13.625018119812012
    4. '_generated' → logprob: -14.875018119812012
    5. '   ' → logprob: -15.125018119812012
    6. ' _' → logprob: -15.375018119812012
    7. '_generate' → logprob: -15.375018119812012
    8. '=_' → logprob: -15.500018119812012
    9. 'Generator' → logprob: -16.375017166137695
    10. '_gene' → logprob: -16.500017166137695

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324547804892063
    2. '=' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.398244857788086
    4. ' ' → logprob: -18.898244857788086
    5. ' =
' → logprob: -19.273244857788086
    6. '=
' → logprob: -20.398244857788086
    7. '```' → logprob: -20.398244857788086
    8. '       ' → logprob: -20.523244857788086
    9. '=create' → logprob: -20.523244857788086
    10. 'Sequence' → logprob: -20.523244857788086

Token 457: ' Sequence' (ID: 57144)
  Prédit: ' Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.47407710552215576
    2. 'Sequence' → logprob: -0.9740771055221558
    3. '       ' → logprob: -16.724077224731445
    4. '   ' → logprob: -17.974077224731445
    5. 'Sequ' → logprob: -18.224077224731445
    6. ' sequence' → logprob: -18.349077224731445
    7. ' Sequ' → logprob: -18.974077224731445
    8. ' ' → logprob: -19.724077224731445
    9. '    ' → logprob: -19.724077224731445
    10. '_sequence' → logprob: -20.224077224731445

Token 458: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: 0.0
    2. 'generator' → logprob: -18.0
    3. ' Generator' → logprob: -18.5
    4. '_generator' → logprob: -18.5
    5. 'Generate' → logprob: -19.0
    6. '   ' → logprob: -19.25
    7. 'Gen' → logprob: -19.375
    8. 'Generators' → logprob: -19.875
    9. 'Sequence' → logprob: -20.375
    10. '(' → logprob: -21.125

Token 459: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.125021934509277
    3. '(
' → logprob: -11.875021934509277
    4. '(self' → logprob: -17.75002098083496
    5. 'a' → logprob: -17.87502098083496
    6. '(
' → logprob: -18.50002098083496
    7. '(

' → logprob: -18.87502098083496
    8. '       ' → logprob: -19.00002098083496
    9. '```' → logprob: -19.50002098083496
    10. '(A' → logprob: -19.62502098083496

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',b' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.500051498413086
    4. '       ' → logprob: -14.375051498413086
    5. ',
' → logprob: -14.750051498413086
    6. '   ' → logprob: -17.375051498413086
    7. ',B' → logprob: -17.500051498413086
    8. ',self' → logprob: -17.500051498413086
    9. 'b' → logprob: -17.625051498413086
    10. '=' → logprob: -17.750051498413086

Token 461: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004315036640036851
    2. ' b' → logprob: -7.750431537628174
    3. '       ' → logprob: -14.250431060791016
    4. '   ' → logprob: -16.125431060791016
    5. '<|end|>' → logprob: -16.625431060791016
    6. '    ' → logprob: -18.250431060791016
    7. ' ' → logprob: -18.250431060791016
    8. '      ' → logprob: -18.375431060791016
    9. '  ' → logprob: -18.500431060791016
    10. '     ' → logprob: -18.625431060791016

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. 'self' → logprob: -10.125059127807617
    3. ' ,' → logprob: -11.500059127807617
    4. ',self' → logprob: -12.500059127807617
    5. '       ' → logprob: -12.875059127807617
    6. ',
' → logprob: -13.750059127807617
    7. '   ' → logprob: -14.125059127807617
    8. '           ' → logprob: -14.750059127807617
    9. ' self' → logprob: -15.125059127807617
    10. ')' → logprob: -15.375059127807617

Token 463: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2014138251543045
    2. 'self' → logprob: -1.701413869857788
    3. '	self' → logprob: -15.701414108276367
    4. '           ' → logprob: -16.201414108276367
    5. '       ' → logprob: -16.451414108276367
    6. ' ' → logprob: -16.576414108276367
    7. ' ' → logprob: -17.326414108276367
    8. '        ' → logprob: -17.576414108276367
    9. '(self' → logprob: -18.326414108276367
    10. '    ' → logprob: -18.451414108276367

Token 464: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.500003814697266
    3. 'factor' → logprob: -13.500003814697266
    4. '.fact' → logprob: -14.750003814697266
    5. '.fac' → logprob: -15.125003814697266
    6. '.f' → logprob: -16.500003814697266
    7. ' .' → logprob: -16.500003814697266
    8. '.factory' → logprob: -18.125003814697266
    9. '_factor' → logprob: -19.625003814697266
    10. 'Factor' → logprob: -20.250003814697266

Token 465: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.306760805164231e-05
    2. 'ation' → logprob: -11.25001335144043
    3. '_' → logprob: -18.50001335144043
    4. 'IZATION' → logprob: -20.25001335144043
    5. '```' → logprob: -20.50001335144043
    6. 'iation' → logprob: -20.62501335144043
    7. ' ' → logprob: -21.25001335144043
    8. '_factor' → logprob: -21.37501335144043
    9. 'ion' → logprob: -21.37501335144043
    10. 'iz' → logprob: -21.50001335144043

Token 466: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -4.961759259458631e-06
    2. 'strategy' → logprob: -12.250004768371582
    3. 'Strategy' → logprob: -15.875004768371582
    4. ' strategy' → logprob: -18.1250057220459
    5. '_factor' → logprob: -18.6250057220459
    6. 'strateg' → logprob: -19.1250057220459
    7. '_' → logprob: -19.3750057220459
    8. '_str' → logprob: -19.8750057220459
    9. '.strategy' → logprob: -20.3750057220459
    10. '   ' → logprob: -21.0000057220459

Token 467: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056797876954078674
    2. ')
' → logprob: -3.056797981262207
    3. '       ' → logprob: -4.806797981262207
    4. ')
' → logprob: -13.181797981262207
    5. '   ' → logprob: -15.181797981262207
    6. ')

' → logprob: -15.431797981262207
    7. ' )' → logprob: -15.556797981262207
    8. '      ' → logprob: -16.68179702758789
    9. '),' → logprob: -17.05679702758789
    10. '
' → logprob: -17.30679702758789

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7729658540920354e-05
    2. ' cost' → logprob: -11.375027656555176
    3. '   ' → logprob: -11.500027656555176
    4. 'cost' → logprob: -12.250027656555176
    5. '
' → logprob: -15.000027656555176
    6. '      ' → logprob: -15.125027656555176
    7. '           ' → logprob: -15.125027656555176
    8. 'return' → logprob: -16.000028610229492
    9. '```' → logprob: -16.000028610229492
    10. '     ' → logprob: -16.250028610229492

Token 469: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.23230400681495667
    2. ' cost' → logprob: -1.6073039770126343
    3. '       ' → logprob: -4.982304096221924
    4. ' minimal' → logprob: -12.607303619384766
    5. '   ' → logprob: -13.232303619384766
    6. 'minimal' → logprob: -13.857303619384766
    7. ' ' → logprob: -14.732303619384766
    8. '
' → logprob: -15.107303619384766
    9. 'return' → logprob: -15.232303619384766
    10. '      ' → logprob: -15.232303619384766

Token 470: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -4.429896944202483e-05
    2. 'e' → logprob: -10.750043869018555
    3. '_f' → logprob: -10.750043869018555
    4. 'Evaluator' → logprob: -14.000043869018555
    5. 'valuator' → logprob: -15.250043869018555
    6. ' =' → logprob: -17.250043869018555
    7. '_eval' → logprob: -17.375043869018555
    8. '   ' → logprob: -17.375043869018555
    9. 'finder' → logprob: -17.625043869018555
    10. '=' → logprob: -17.625043869018555

Token 471: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -6.704273118884885e-07
    2. 'valu' → logprob: -15.375000953674316
    3. 'v' → logprob: -15.625000953674316
    4. 'val' → logprob: -16.125
    5. 'lator' → logprob: -16.75
    6. 'alu' → logprob: -17.5
    7. 'valuer' → logprob: -18.5
    8. 'vel' → logprob: -18.875
    9. '  ' → logprob: -19.125
    10. 'st' → logprob: -19.375

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313263863325119
    2. '=' → logprob: -1.3132638931274414
    3. '   ' → logprob: -13.188263893127441
    4. ' ' → logprob: -16.063262939453125
    5. '    ' → logprob: -16.563262939453125
    6. '  ' → logprob: -16.813262939453125
    7. '       ' → logprob: -17.188262939453125
    8. '        ' → logprob: -17.438262939453125
    9. ' =
' → logprob: -17.688262939453125
    10. '=
' → logprob: -17.688262939453125

Token 473: ' Cost' (ID: 18328)
  Prédit: 'Cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: -0.00861456897109747
    2. ' Cost' → logprob: -4.758614540100098
    3. 'Costs' → logprob: -19.633615493774414
    4. ' cost' → logprob: -20.758615493774414
    5. '       ' → logprob: -21.133615493774414
    6. '	C' → logprob: -21.508615493774414
    7. '   ' → logprob: -21.633615493774414
    8. ' ' → logprob: -21.758615493774414
    9. 'C' → logprob: -22.008615493774414
    10. 'cost' → logprob: -22.133615493774414

Token 474: 'Evaluator' (ID: 87172)
  Prédit: 'Evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -1.9361264946837764e-07
    2. 'valuator' → logprob: -16.375
    3. 'Evalu' → logprob: -17.75
    4. '_e' → logprob: -20.25
    5. 'Estimator' → logprob: -20.25
    6. 'Evaluate' → logprob: -20.625
    7. 'Cost' → logprob: -21.0
    8. 'Elev' → logprob: -21.25
    9. 'Enumerator' → logprob: -21.375
    10. ' evaluator' → logprob: -21.625

Token 475: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021583672612905502
    2. '
' → logprob: -3.8965835571289062
    3. '        
' → logprob: -7.771583557128906
    4. 'Minimal' → logprob: -8.271583557128906
    5. 'minimal' → logprob: -9.021583557128906
    6. '<|end|>' → logprob: -9.021583557128906
    7. ' minimal' → logprob: -9.771583557128906
    8. '()
' → logprob: -10.646583557128906
    9. '()' → logprob: -12.021583557128906
    10. ' 
' → logprob: -12.021583557128906

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010930694406852126
    2. ' minimal' → logprob: -7.251092910766602
    3. 'minimal' → logprob: -8.251092910766602
    4. '
' → logprob: -9.251092910766602
    5. 'finder' → logprob: -11.501092910766602
    6. 'min' → logprob: -11.876092910766602
    7. '   ' → logprob: -12.251092910766602
    8. ' finder' → logprob: -13.501092910766602
    9. 'Minimal' → logprob: -14.501092910766602
    10. '	min' → logprob: -14.501092910766602

Token 477: ' finder' (ID: 61306)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.04214593768119812
    2. 'minimal' → logprob: -3.5421459674835205
    3. 'finder' (adapté à ' finder') → logprob: -5.167145729064941
    4. ' finder' → logprob: -5.417145729064941
    5. '       ' → logprob: -6.292145729064941
    6. 'min' → logprob: -8.292145729064941
    7. ' min' → logprob: -9.667145729064941
    8. 'Minimal' → logprob: -11.917145729064941
    9. ' minim' → logprob: -13.292145729064941
    10. ' Minimal' → logprob: -13.417145729064941

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805021569132805
    2. '=' → logprob: -3.2880501747131348
    3. '   ' → logprob: -11.913050651550293
    4. '=find' → logprob: -13.663050651550293
    5. '  ' → logprob: -15.163050651550293
    6. ' ' → logprob: -15.163050651550293
    7. '_' → logprob: -16.038049697875977
    8. '	' → logprob: -16.163049697875977
    9. '=_' → logprob: -16.538049697875977
    10. ' =
' → logprob: -17.163049697875977

Token 479: ' Minimal' (ID: 99472)
  Prédit: ' Minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Minimal' → logprob: -0.5759404897689819
    2. 'Minimal' → logprob: -0.8259404897689819
    3. 'Min' → logprob: -14.575940132141113
    4. ' Min' → logprob: -14.950940132141113
    5. ' minimal' → logprob: -15.950940132141113
    6. '       ' → logprob: -15.950940132141113
    7. '   ' → logprob: -17.07594108581543
    8. '_Min' → logprob: -17.32594108581543
    9. ' Minimum' → logprob: -17.95094108581543
    10. 'Minimum' → logprob: -18.07594108581543

Token 480: 'Cost' (ID: 16815)
  Prédit: 'Cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: 0.0
    2. '_cost' → logprob: -18.25
    3. 'cost' → logprob: -18.875
    4. 'Costs' → logprob: -18.875
    5. ' Cost' → logprob: -19.25
    6. ' cost' → logprob: -20.5
    7. '-cost' → logprob: -21.0
    8. '_COST' → logprob: -21.125
    9. '```' → logprob: -21.375
    10. 'Costo' → logprob: -22.125

Token 481: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -5.512236498361744e-07
    2. ' Finder' → logprob: -15.250000953674316
    3. 'Find' → logprob: -16.125
    4. 'finder' → logprob: -16.625
    5. 'Cost' → logprob: -17.25
    6. 'F' → logprob: -17.875
    7. 'Fetcher' → logprob: -18.0
    8. 'Founder' → logprob: -19.75
    9. 'Solver' → logprob: -19.875
    10. ' finder' → logprob: -20.0

Token 482: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.500005722045898
    3. '(
' → logprob: -13.625005722045898
    4. 'sequence' → logprob: -15.500005722045898
    5. '       ' → logprob: -15.875005722045898
    6. '(sentence' → logprob: -17.7500057220459
    7. '(se' → logprob: -18.5000057220459
    8. ' (' → logprob: -18.5000057220459
    9. ' sequence' → logprob: -19.7500057220459
    10. '(
' → logprob: -20.2500057220459

Token 483: '_generator' (ID: 60998)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.2539115846157074
    2. '_generator' → logprob: -1.5039116144180298
    3. 'sequence' → logprob: -7.75391149520874
    4. ',' → logprob: -7.75391149520874
    5. 'Generator' → logprob: -8.003911972045898
    6. ')' → logprob: -8.003911972045898
    7. 'generator' → logprob: -8.378911972045898
    8. ' (' → logprob: -10.003911972045898
    9. '(
' → logprob: -10.253911972045898
    10. '(' → logprob: -10.253911972045898

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5690089639974758e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',c' → logprob: -13.750015258789062
    4. ',
' → logprob: -14.000015258789062
    5. '       ' → logprob: -14.500015258789062
    6. '   ' → logprob: -15.625015258789062
    7. ',f' → logprob: -17.625015258789062
    8. ')' → logprob: -18.000015258789062
    9. 'cost' → logprob: -18.250015258789062
    10. ',

' → logprob: -18.500015258789062

Token 485: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.47407761216163635
    2. ' cost' → logprob: -0.974077582359314
    3. '       ' → logprob: -14.849077224731445
    4. '   ' → logprob: -16.224077224731445
    5. '(cost' → logprob: -17.099077224731445
    6. ' ' → logprob: -17.474077224731445
    7. '    ' → logprob: -17.599077224731445
    8. '        ' → logprob: -17.724077224731445
    9. '           ' → logprob: -17.974077224731445
    10. '     ' → logprob: -18.224077224731445

Token 486: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -9.372294698550832e-06
    2. 'Evaluator' → logprob: -12.000009536743164
    3. '   ' → logprob: -13.500009536743164
    4. '_f' → logprob: -14.250009536743164
    5. ')' → logprob: -14.750009536743164
    6. '._' → logprob: -15.375009536743164
    7. '_a' → logprob: -15.750009536743164
    8. ')_' → logprob: -16.000009536743164
    9. '       ' → logprob: -16.250009536743164
    10. ' _' → logprob: -16.750009536743164

Token 487: 'valuator' (ID: 144940)
  Prédit: 'alu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alu' → logprob: -0.1604142189025879
    2. 'valuator' → logprob: -1.910414218902588
    3. 'al' → logprob: -8.91041374206543
    4. 'ulator' → logprob: -10.41041374206543
    5. 'uator' → logprob: -11.28541374206543
    6. 'valu' → logprob: -12.28541374206543
    7. 'lu' → logprob: -13.03541374206543
    8. 'val' → logprob: -13.41041374206543
    9. 'Evaluator' → logprob: -13.41041374206543
    10. 'lator' → logprob: -14.03541374206543

Token 488: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5456925630569458
    2. '       ' → logprob: -1.2956925630569458
    3. ')' → logprob: -1.9206925630569458
    4. '
' → logprob: -8.795692443847656
    5. '<|end|>' → logprob: -9.795692443847656
    6. ')
' → logprob: -9.920692443847656
    7. '   ' → logprob: -10.920692443847656
    8. ' ' → logprob: -11.045692443847656
    9. '        
' → logprob: -11.420692443847656
    10. ')return' → logprob: -11.670692443847656

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004535745829343796
    2. 'return' → logprob: -6.004535675048828
    3. '
' → logprob: -6.254535675048828
    4. ' return' → logprob: -9.254535675048828
    5. '   ' → logprob: -10.754535675048828
    6. '	' → logprob: -12.004535675048828
    7. '        
' → logprob: -12.254535675048828
    8. '
' → logprob: -12.754535675048828
    9. '' → logprob: -13.879535675048828
    10. '	return' → logprob: -14.129535675048828

Token 490: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5759897828102112
    2. '       ' → logprob: -0.8259897828102112
    3. ' return' → logprob: -9.950989723205566
    4. '   ' → logprob: -13.325989723205566
    5. 'result' → logprob: -14.200989723205566
    6. '	return' → logprob: -15.325989723205566
    7. '
' → logprob: -17.075990676879883
    8. '```' → logprob: -17.825990676879883
    9. '	' → logprob: -18.075990676879883
    10. '      ' → logprob: -18.450990676879883

Token 491: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.31326326727867126
    2. ' finder' → logprob: -1.3132632970809937
    3. 'find' → logprob: -13.563262939453125
    4. 'Finder' → logprob: -16.063262939453125
    5. ' find' → logprob: -16.563262939453125
    6. 'f' → logprob: -18.188262939453125
    7. 'found' → logprob: -18.313262939453125
    8. ' filer' → logprob: -19.313262939453125
    9. '       ' → logprob: -19.563262939453125
    10. ' founder' → logprob: -20.063262939453125

Token 492: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -6.76628842484206e-05
    2. '.' → logprob: -10.250067710876465
    3. '.findall' → logprob: -10.375067710876465
    4. 'find' → logprob: -13.875067710876465
    5. '	find' → logprob: -18.00006675720215
    6. '.Find' → logprob: -18.50006675720215
    7. '.
' → logprob: -18.75006675720215
    8. ' .' → logprob: -18.87506675720215
    9. '.solve' → logprob: -19.37506675720215
    10. ')find' → logprob: -19.87506675720215

Token 493: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.014806658029556274
    2. '_' → logprob: -4.514806747436523
    3. '_cost' → logprob: -5.639806747436523
    4. ' _' → logprob: -9.389806747436523
    5. '_max' → logprob: -10.014806747436523
    6. '_m' → logprob: -10.514806747436523
    7. '_val' → logprob: -12.014806747436523
    8. '_low' → logprob: -12.514806747436523
    9. '_best' → logprob: -12.764806747436523
    10. '_token' → logprob: -13.139806747436523

Token 494: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.12500286102295
    3. ' _' → logprob: -14.25000286102295
    4. '_code' → logprob: -14.75000286102295
    5. '_co' → logprob: -15.25000286102295
    6. 'Cost' → logprob: -16.125001907348633
    7. '_COST' → logprob: -16.875001907348633
    8. 'cost' → logprob: -17.125001907348633
    9. '_c' → logprob: -17.250001907348633
    10. '_value' → logprob: -17.375001907348633

Token 495: '()

' (ID: 5874)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.544074535369873
    2. '
' → logprob: -1.919074535369873
    3. '<|end|>' → logprob: -2.044074535369873
    4. 'a' → logprob: -2.544074535369873
    5. 'n' → logprob: -3.794074535369873
    6. 'r' → logprob: -4.544074535369873
    7. ')' → logprob: -4.794074535369873
    8. '[' → logprob: -5.044074535369873
    9. '```' → logprob: -5.669074535369873
    10. '.' → logprob: -5.669074535369873

Token 496: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007555469055660069
    2. ' run' → logprob: -7.750755310058594
    3. ' solve' → logprob: -8.125755310058594
    4. ' test' → logprob: -10.750755310058594
    5. ' example' → logprob: -12.125755310058594
    6. 'main' → logprob: -14.000755310058594
    7. ' solution' → logprob: -14.250755310058594
    8. '_main' → logprob: -16.125755310058594
    9. '	main' → logprob: -16.250755310058594
    10. ' calculate' → logprob: -16.375755310058594

Token 498: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.054500666621607e-06
    2. '():
' → logprob: -13.37500286102295
    3. ' ():' → logprob: -13.87500286102295
    4. '()' → logprob: -14.50000286102295
    5. '(' → logprob: -17.500003814697266
    6. '():
' → logprob: -18.250003814697266
    7. '_' → logprob: -19.125003814697266
    8. '(":' → logprob: -19.250003814697266
    9. '():

' → logprob: -19.375003814697266
    10. ':' → logprob: -19.375003814697266

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05015388876199722
    2. ' import' → logprob: -3.300153970718384
    3. 'import' → logprob: -5.175153732299805
    4. ' a' → logprob: -5.300153732299805
    5. 'a' → logprob: -7.050153732299805
    6. ' if' → logprob: -8.050153732299805
    7. '```' → logprob: -9.925153732299805
    8. '    ' → logprob: -10.175153732299805
    9. 'if' → logprob: -10.300153732299805
    10. ' factor' → logprob: -11.050153732299805

Token 500: ' import' (ID: 1588)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5638255476951599
    2. 'import' (adapté à ' import') → logprob: -1.3138256072998047
    3. ' a' → logprob: -2.6888256072998047
    4. ' import' → logprob: -2.8138256072998047
    5. '   ' → logprob: -3.5638256072998047
    6. 'factor' → logprob: -5.813825607299805
    7. 'strategy' → logprob: -6.813825607299805
    8. ' strategy' → logprob: -7.063825607299805
    9. ' factor' → logprob: -7.188825607299805
    10. 'solver' → logprob: -9.813825607299805

Token 501: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10021314769983292
    2. 'sys' → logprob: -2.350213050842285
    3. '=sys' → logprob: -12.350213050842285
    4. ' math' → logprob: -13.600213050842285
    5. '	sys' → logprob: -14.225213050842285
    6. 'math' → logprob: -15.725213050842285
    7. ' argparse' → logprob: -16.2252140045166
    8. '(sys' → logprob: -16.2252140045166
    9. 'random' → logprob: -18.8502140045166
    10. '_sys' → logprob: -19.1002140045166

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011089015752077103
    2. '    
' → logprob: -7.2511091232299805
    3. '
' → logprob: -8.25110912322998
    4. 'input' → logprob: -10.12610912322998
    5. 'if' → logprob: -10.25110912322998
    6. ' if' → logprob: -11.12610912322998
    7. 'a' → logprob: -11.25110912322998
    8. 'import' → logprob: -12.00110912322998
    9. 'n' → logprob: -12.25110912322998
    10. '```' → logprob: -12.75110912322998

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017785917734727263
    2. ' if' → logprob: -7.501778602600098
    3. '    
' → logprob: -7.876778602600098
    4. ' lines' → logprob: -8.626778602600098
    5. 'input' → logprob: -8.751778602600098
    6. 'if' → logprob: -9.001778602600098
    7. ' input' → logprob: -9.251778602600098
    8. 'a' → logprob: -9.751778602600098
    9. '<|end|>' → logprob: -10.126778602600098
    10. 'n' → logprob: -10.501778602600098

Token 504: ' factor' (ID: 12332)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06350298225879669
    2. ' if' → logprob: -3.4385030269622803
    3. 'if' → logprob: -4.438502788543701
    4. ' input' → logprob: -5.188502788543701
    5. 'args' → logprob: -5.688502788543701
    6. ' args' → logprob: -6.313502788543701
    7. 'data' → logprob: -6.313502788543701
    8. 'input' → logprob: -6.438502788543701
    9. ' data' → logprob: -6.813502788543701
    10. ' a' → logprob: -6.938502788543701

Token 505: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.4498052223643754e-05
    2. '_strategy' → logprob: -12.000014305114746
    3. 'ation' → logprob: -12.875014305114746
    4. '   ' → logprob: -13.000014305114746
    5. '=' → logprob: -14.000014305114746
    6. 'izer' → logprob: -14.375014305114746
    7. ' =' → logprob: -14.750014305114746
    8. '_factor' → logprob: -14.750014305114746
    9. 'from' → logprob: -15.000014305114746
    10. 'ize' → logprob: -15.000014305114746

Token 506: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -2.522638169466518e-05
    2. '_' → logprob: -10.750024795532227
    3. '_str' → logprob: -13.375024795532227
    4. '_method' → logprob: -13.750024795532227
    5. 'Strategy' → logprob: -15.250024795532227
    6. '_=' → logprob: -15.375024795532227
    7. '=_' → logprob: -15.625024795532227
    8. 'strategy' → logprob: -16.000024795532227
    9. '_factor' → logprob: -16.125024795532227
    10. ' _' → logprob: -16.375024795532227

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '   ' → logprob: -16.849077224731445
    4. '=

' → logprob: -16.974077224731445
    5. ' =
' → logprob: -17.099077224731445
    6. ' ' → logprob: -17.724077224731445
    7. '=
' → logprob: -18.099077224731445
    8. '＝' → logprob: -18.974077224731445
    9. '=}' → logprob: -19.224077224731445
    10. '=f' → logprob: -19.599077224731445

Token 508: ' Br' (ID: 2866)
  Prédit: 'Br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Br' → logprob: -0.07889000326395035
    2. ' Br' → logprob: -2.578890085220337
    3. ' ' → logprob: -16.578889846801758
    4. 'Bracket' → logprob: -16.953889846801758
    5. '   ' → logprob: -17.078889846801758
    6. ' Brut' → logprob: -17.453889846801758
    7. 'B' → logprob: -19.203889846801758
    8. 'br' → logprob: -19.328889846801758
    9. 'Bl' → logprob: -19.328889846801758
    10. '  ' → logprob: -20.078889846801758

Token 509: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.0001721934968372807
    2. 'ut' → logprob: -8.87517261505127
    3. 'utte' → logprob: -10.50017261505127
    4. 'u' → logprob: -13.12517261505127
    5. '```' → logprob: -13.50017261505127
    6. 'e' → logprob: -15.37517261505127
    7. 'utf' → logprob: -16.125171661376953
    8. 't' → logprob: -16.250171661376953
    9. 'uteq' → logprob: -16.250171661376953
    10. 'utes' → logprob: -16.250171661376953

Token 510: 'Force' (ID: 27384)
  Prédit: 'Force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Force' → logprob: -0.00014072739577386528
    2. 'Factor' → logprob: -9.250141143798828
    3. 'For' → logprob: -10.500141143798828
    4. 'Ford' → logprob: -12.250141143798828
    5. 'Fo' → logprob: -12.375141143798828
    6. 'Fort' → logprob: -13.000141143798828
    7. 'F' → logprob: -13.000141143798828
    8. 'Free' → logprob: -14.375141143798828
    9. 'Fuel' → logprob: -14.625141143798828
    10. 'False' → logprob: -14.625141143798828

Token 511: 'Factor' (ID: 23681)
  Prédit: 'Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -4.320199877838604e-07
    2. 'Fact' → logprob: -16.375
    3. 'factor' → logprob: -16.5
    4. ' Factor' → logprob: -17.125
    5. '_factor' → logprob: -17.25
    6. '
' → logprob: -17.375
    7. '   ' → logprob: -17.625
    8. '

' → logprob: -17.625
    9. '```' → logprob: -18.0
    10. '(' → logprob: -18.625

Token 512: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.0006280870293267071
    2. 'ation' → logprob: -7.3756279945373535
    3. 'Factor' → logprob: -14.250628471374512
    4. 'al' → logprob: -14.875628471374512
    5. '```' → logprob: -14.875628471374512
    6. 'izer' → logprob: -17.000627517700195
    7. 'iz' → logprob: -17.375627517700195
    8. '   ' → logprob: -17.875627517700195
    9. 'iation' → logprob: -18.250627517700195
    10. '##' → logprob: -18.500627517700195

Token 513: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15184509754180908
    2. '
' → logprob: -2.0268449783325195
    3. '    
' → logprob: -4.7768449783325195
    4. 'a' → logprob: -7.5268449783325195
    5. '<|end|>' → logprob: -9.90184497833252
    6. '  
' → logprob: -11.27684497833252
    7. 'def' → logprob: -11.40184497833252
    8. 'if' → logprob: -11.52684497833252
    9. ')' → logprob: -11.90184497833252
    10. '   
' → logprob: -11.90184497833252

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007836606819182634
    2. '    
' → logprob: -7.500783443450928
    3. '
' → logprob: -9.250783920288086
    4. 'a' → logprob: -9.625783920288086
    5. 'if' → logprob: -10.875783920288086
    6. 'args' → logprob: -11.375783920288086
    7. ' if' → logprob: -11.500783920288086
    8. '<|end|>' → logprob: -11.500783920288086
    9. 'import' → logprob: -11.750783920288086
    10. ' a' → logprob: -13.500783920288086

Token 515: ' solver' (ID: 63271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.148872971534729
    2. '   ' → logprob: -2.6488728523254395
    3. 'args' → logprob: -3.5238728523254395
    4. 'if' → logprob: -4.3988728523254395
    5. ' a' → logprob: -4.8988728523254395
    6. ' lines' → logprob: -5.0238728523254395
    7. 'for' → logprob: -5.1488728523254395
    8. 'data' → logprob: -6.5238728523254395
    9. ' args' → logprob: -6.6488728523254395
    10. 'lines' → logprob: -6.6488728523254395

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032188263721764088
    2. '=' → logprob: -5.753218650817871
    3. '(' → logprob: -10.378218650817871
    4. '.solve' → logprob: -12.128218650817871
    5. '(s' → logprob: -13.253218650817871
    6. '.' → logprob: -13.628218650817871
    7. ' =
' → logprob: -15.003218650817871
    8. ' ' → logprob: -15.503218650817871
    9. '   ' → logprob: -15.628218650817871
    10. ' =(' → logprob: -16.003219604492188

Token 517: ' Ru' (ID: 24119)
  Prédit: ' Ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ru' → logprob: -0.16022737324237823
    2. 'Ru' → logprob: -1.9102274179458618
    3. 'R' → logprob: -12.66022777557373
    4. ' R' → logprob: -18.660226821899414
    5. '_R' → logprob: -19.285226821899414
    6. ' Ruiz' → logprob: -19.910226821899414
    7. 'Rub' → logprob: -20.160226821899414
    8. 'RU' → logprob: -20.285226821899414
    9. ' ' → logprob: -20.285226821899414
    10. '   ' → logprob: -20.410226821899414

Token 518: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -5.676981345459353e-06
    2. 'in' → logprob: -12.875005722045898
    3. 'ils' → logprob: -14.000005722045898
    4. 'solver' → logprob: -14.125005722045898
    5. 'iner' → logprob: -15.000005722045898
    6. '```' → logprob: -15.750005722045898
    7. 'is' → logprob: -16.2500057220459
    8. 'insu' → logprob: -16.2500057220459
    9. 'irs' → logprob: -16.3750057220459
    10. '   ' → logprob: -16.5000057220459

Token 519: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.4153549020411447e-05
    2. 'solver' → logprob: -10.75002384185791
    3. 'olver' → logprob: -13.12502384185791
    4. '_solver' → logprob: -15.00002384185791
    5. 'Solve' → logprob: -16.250024795532227
    6. ' Solver' → logprob: -16.250024795532227
    7. 'Sol' → logprob: -17.250024795532227
    8. ' solver' → logprob: -17.375024795532227
    9. 'solve' → logprob: -19.000024795532227
    10. '   ' → logprob: -19.250024795532227

Token 520: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006761549040675163
    2. '(' → logprob: -5.00676155090332
    3. '(
' → logprob: -10.13176155090332
    4. 'factor' → logprob: -12.63176155090332
    5. '(F' → logprob: -13.25676155090332
    6. '(factory' → logprob: -14.13176155090332
    7. '(

' → logprob: -15.75676155090332
    8. '(
' → logprob: -16.13176155090332
    9. '(strategy' → logprob: -16.25676155090332
    10. '(br' → logprob: -16.25676155090332

Token 521: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -6.575563020305708e-05
    2. 'factor' → logprob: -10.125065803527832
    3. 'act' → logprob: -11.125065803527832
    4. 'ator' → logprob: -12.250065803527832
    5. '   ' → logprob: -13.625065803527832
    6. 'actory' → logprob: -14.250065803527832
    7. '```' → logprob: -14.625065803527832
    8. 'ctor' → logprob: -14.750065803527832
    9. 'actoring' → logprob: -14.875065803527832
    10. '(' → logprob: -14.875065803527832

Token 522: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -7.107425062713446e-06
    2. 'ation' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.37500762939453
    4. '```' → logprob: -18.12500762939453
    5. 'iz' → logprob: -18.75000762939453
    6. 'iation' → logprob: -19.00000762939453
    7. 'IZATION' → logprob: -19.00000762939453
    8. 'oration' → logprob: -19.25000762939453
    9. ' ' → logprob: -19.62500762939453
    10. 'ication' → logprob: -19.87500762939453

Token 523: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.00017362393555231392
    2. 'Strategy' → logprob: -9.375173568725586
    3. 'strategy' → logprob: -9.500173568725586
    4. '_factor' → logprob: -11.250173568725586
    5. ' strategy' → logprob: -15.375173568725586
    6. '_' → logprob: -15.375173568725586
    7. '_str' → logprob: -15.750173568725586
    8. '(strategy' → logprob: -16.750173568725586
    9. 'factor' → logprob: -17.000173568725586
    10. '   ' → logprob: -17.125173568725586

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11420966684818268
    2. ')
' → logprob: -2.2392096519470215
    3. '   ' → logprob: -6.6142096519470215
    4. ' ' → logprob: -11.36421012878418
    5. '()' → logprob: -11.48921012878418
    6. ')
' → logprob: -11.73921012878418
    7. '()
' → logprob: -12.73921012878418
    8. ' )' → logprob: -12.98921012878418
    9. '(' → logprob: -13.36421012878418
    10. ')a' → logprob: -13.36421012878418

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003849133790936321
    2. '
' → logprob: -8.750385284423828
    3. '    
' → logprob: -9.000385284423828
    4. ' if' → logprob: -10.125385284423828
    5. 'args' → logprob: -10.875385284423828
    6. 'if' → logprob: -11.125385284423828
    7. 'input' → logprob: -12.375385284423828
    8. ' for' → logprob: -12.500385284423828
    9. 'for' → logprob: -12.750385284423828
    10. 'import' → logprob: -12.750385284423828

Token 526: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4372779130935669
    2. '   ' → logprob: -1.812277913093567
    3. 'for' (adapté à ' for') → logprob: -2.8122777938842773
    4. 'args' → logprob: -3.1872777938842773
    5. 'if' → logprob: -3.4372777938842773
    6. ' a' → logprob: -3.6872777938842773
    7. ' for' → logprob: -4.687277793884277
    8. ' args' → logprob: -5.187277793884277
    9. ' if' → logprob: -5.312277793884277
    10. 'input' → logprob: -5.562277793884277

Token 527: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00016659092216286808
    2. 'line' → logprob: -8.750166893005371
    3. ' arg' → logprob: -11.875166893005371
    4. '	line' → logprob: -14.000166893005371
    5. ' ' → logprob: -15.500166893005371
    6. ' lin' → logprob: -17.000165939331055
    7. 'arg' → logprob: -17.500165939331055
    8. '   ' → logprob: -18.125165939331055
    9. '(line' → logprob: -18.500165939331055
    10. '_line' → logprob: -18.750165939331055

Token 528: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -4.644463479053229e-05
    2. 'in' → logprob: -10.000046730041504
    3. ' ' → logprob: -14.875046730041504
    4. '()' → logprob: -15.500046730041504
    5. '	in' → logprob: -15.750046730041504
    6. '   ' → logprob: -16.375045776367188
    7. ' i' → logprob: -17.000045776367188
    8. 'line' → logprob: -17.250045776367188
    9. 's' → logprob: -18.000045776367188
    10. ' ' → logprob: -18.875045776367188

Token 529: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.061973292380571365
    2. 'sys' → logprob: -2.8119733333587646
    3. '=sys' → logprob: -13.061973571777344
    4. '(sys' → logprob: -13.311973571777344
    5. '	sys' → logprob: -13.436973571777344
    6. 'stdin' → logprob: -15.311973571777344
    7. '   ' → logprob: -15.936973571777344
    8. ' stdin' → logprob: -18.061973571777344
    9. ' ' → logprob: -18.686973571777344
    10. '.sys' → logprob: -19.436973571777344

Token 530: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00011796683247666806
    2. 'stdin' → logprob: -9.375118255615234
    3. '.' → logprob: -11.250118255615234
    4. ' stdin' → logprob: -11.375118255615234
    5. '(stdin' → logprob: -12.125118255615234
    6. ' in' → logprob: -13.875118255615234
    7. '   ' → logprob: -14.125118255615234
    8. 'in' → logprob: -14.625118255615234
    9. '.argv' → logprob: -14.875118255615234
    10. '.stdout' → logprob: -15.000118255615234

Token 531: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06199794262647629
    2. ':
' → logprob: -3.561997890472412
    3. '.readline' → logprob: -3.811997890472412
    4. '.readlines' → logprob: -4.936997890472412
    5. '.rstrip' → logprob: -6.811997890472412
    6. '.strip' → logprob: -6.936997890472412
    7. ' in' → logprob: -9.31199836730957
    8. '   ' → logprob: -9.81199836730957
    9. '():
' → logprob: -10.18699836730957
    10. '.' → logprob: -10.31199836730957

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001901743933558464
    2. '   ' → logprob: -7.251901626586914
    3. ':' → logprob: -7.501901626586914
    4. '        
' → logprob: -8.001901626586914
    5. ',' → logprob: -9.876901626586914
    6. ' if' → logprob: -10.251901626586914
    7. '    
' → logprob: -10.376901626586914
    8. '<|end|>' → logprob: -10.626901626586914
    9. '    ' → logprob: -11.001901626586914
    10. '      ' → logprob: -11.251901626586914

Token 533: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3462555706501007
    2. ' line' → logprob: -1.4712555408477783
    3. ' if' → logprob: -2.9712555408477783
    4. 'line' → logprob: -5.346255779266357
    5. '   ' → logprob: -5.846255779266357
    6. ' stripped' → logprob: -6.346255779266357
    7. ' n' → logprob: -7.346255779266357
    8. ' strip' → logprob: -8.2212553024292
    9. ' a' → logprob: -8.2212553024292
    10. '	line' → logprob: -8.7212553024292

Token 534: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017290872347075492
    2. ' ,' → logprob: -9.00017261505127
    3. ',b' → logprob: -10.62517261505127
    4. ',int' → logprob: -11.00017261505127
    5. ',a' → logprob: -13.00017261505127
    6. '_,' → logprob: -13.62517261505127
    7. ',
' → logprob: -13.87517261505127
    8. '<|end|>' → logprob: -14.12517261505127
    9. ',s' → logprob: -14.75017261505127
    10. '=' → logprob: -15.00017261505127

Token 535: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07157476991415024
    2. ' =' → logprob: -3.1965746879577637
    3. ',' → logprob: -3.5715746879577637
    4. '=line' → logprob: -10.571575164794922
    5. ',a' → logprob: -11.696575164794922
    6. ' ,' → logprob: -12.196575164794922
    7. '=
' → logprob: -12.446575164794922
    8. '       ' → logprob: -12.821575164794922
    9. ' =
' → logprob: -12.946575164794922
    10. '.' → logprob: -13.446575164794922

Token 536: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25195547938346863
    2. 'b' → logprob: -1.501955509185791
    3. ' ' → logprob: -11.001955032348633
    4. ' =' → logprob: -12.751955032348633
    5. '=' → logprob: -13.251955032348633
    6. ' 
' → logprob: -14.251955032348633
    7. ' *' → logprob: -14.251955032348633
    8. '*' → logprob: -14.251955032348633
    9. '    ' → logprob: -14.376955032348633
    10. '*b' → logprob: -14.501955032348633

Token 537: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.5800988078117371
    2. '=' → logprob: -1.4550988674163818
    3. ' =' → logprob: -1.5800988674163818
    4. '_' → logprob: -7.205098628997803
    5. 'str' → logprob: -9.830099105834961
    6. '=str' → logprob: -11.580099105834961
    7. ' ' → logprob: -12.205099105834961
    8. ',' → logprob: -12.830099105834961
    9. '_=' → logprob: -12.955099105834961
    10. 'Str' → logprob: -13.080099105834961

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '=line' → logprob: -15.953889846801758
    4. ' ' → logprob: -19.078889846801758
    5. '＝' → logprob: -19.203889846801758
    6. ',' → logprob: -19.703889846801758
    7. '=

' → logprob: -19.953889846801758
    8. ' =
' → logprob: -20.078889846801758
    9. '=
' → logprob: -20.078889846801758
    10. '   ' → logprob: -20.578889846801758

Token 539: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5759395360946655
    2. 'line' → logprob: -0.8259395360946655
    3. '	line' → logprob: -16.825939178466797
    4. '=line' → logprob: -16.825939178466797
    5. '   ' → logprob: -17.575939178466797
    6. '[line' → logprob: -18.575939178466797
    7. '(line' → logprob: -18.700939178466797
    8. ' ' → logprob: -20.325939178466797
    9. '_line' → logprob: -20.700939178466797
    10. '#line' → logprob: -21.075939178466797

Token 540: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.852177619934082
    2. '.strip' → logprob: -1.352177619934082
    3. '.' → logprob: -1.727177619934082
    4. ' =' → logprob: -2.477177619934082
    5. '.split' → logprob: -2.977177619934082
    6. 'split' → logprob: -6.602177619934082
    7. '.=' → logprob: -8.102177619934082
    8. '.rstrip' → logprob: -8.602177619934082
    9. ' .' → logprob: -9.102177619934082
    10. 'strip' → logprob: -10.352177619934082

Token 541: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001290454383706674
    2. '()
' → logprob: -9.375128746032715
    3. '(' → logprob: -10.250128746032715
    4. '()\' → logprob: -12.875128746032715
    5. '();' → logprob: -13.250128746032715
    6. '()

' → logprob: -13.250128746032715
    7. '()]' → logprob: -14.250128746032715
    8. ')' → logprob: -15.125128746032715
    9. '())' → logprob: -15.250128746032715
    10. '()<' → logprob: -15.250128746032715

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021322984248399734
    2. '        
' → logprob: -6.627132415771484
    3. '
' → logprob: -8.252132415771484
    4. 'a' → logprob: -8.377132415771484
    5. '   ' → logprob: -8.627132415771484
    6. ',' → logprob: -9.627132415771484
    7. ' 
' → logprob: -11.252132415771484
    8. ' a' → logprob: -11.252132415771484
    9. '    
' → logprob: -11.627132415771484
    10. '           ' → logprob: -12.127132415771484

Token 543: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -4.68022444692906e-05
    2. ' a' → logprob: -10.500046730041504
    3. '   ' → logprob: -11.250046730041504
    4. '       ' → logprob: -12.000046730041504
    5. '  ' → logprob: -20.00004768371582
    6. '	a' → logprob: -20.12504768371582
    7. ' ' → logprob: -20.50004768371582
    8. '    ' → logprob: -21.00004768371582
    9. '_a' → logprob: -21.12504768371582
    10. '           ' → logprob: -21.25004768371582

Token 544: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02519065886735916
    2. '=' → logprob: -4.275190830230713
    3. ',' → logprob: -4.525190830230713
    4. '=int' → logprob: -9.150190353393555
    5. ' ,' → logprob: -10.775190353393555
    6. ' =
' → logprob: -13.275190353393555
    7. ' ' → logprob: -13.400190353393555
    8. ',int' → logprob: -13.650190353393555
    9. 'int' → logprob: -14.025190353393555
    10. ',b' → logprob: -14.150190353393555

Token 545: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3144613802433014
    2. 'b' → logprob: -1.314461350440979
    3. 'int' → logprob: -7.1894612312316895
    4. ' int' → logprob: -8.189461708068848
    5. ' ' → logprob: -9.189461708068848
    6. '<|end|>' → logprob: -9.939461708068848
    7. '=int' → logprob: -12.064461708068848
    8. ' =' → logprob: -12.189461708068848
    9. ' 
' → logprob: -13.064461708068848
    10. ' ' → logprob: -13.814461708068848

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931536197662354
    2. ' =' → logprob: -0.6931536197662354
    3. '=int' → logprob: -12.193153381347656
    4. ',' → logprob: -14.193153381347656
    5. '=

' → logprob: -15.443153381347656
    6. ' =
' → logprob: -16.068153381347656
    7. '=}' → logprob: -16.193153381347656
    8. ' ' → logprob: -16.693153381347656
    9. '＝' → logprob: -16.693153381347656
    10. ' =)' → logprob: -16.693153381347656

Token 547: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.753177642822266
    4. '[int' → logprob: -17.878177642822266
    5. 'map' → logprob: -19.003177642822266
    6. '(int' → logprob: -19.128177642822266
    7. '=int' → logprob: -19.378177642822266
    8. '	int' → logprob: -20.378177642822266
    9. '<int' → logprob: -20.628177642822266
    10. '  ' → logprob: -20.878177642822266

Token 548: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.0
    3. 'a' → logprob: -17.125
    4. '(
' → logprob: -20.5
    5. ' (' → logprob: -22.125
    6. '(b' → logprob: -23.5
    7. '((' → logprob: -24.0
    8. '   ' → logprob: -24.375
    9. '(ai' → logprob: -24.375
    10. '(A' → logprob: -24.5

Token 549: '_str' (ID: 6182)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002121830591931939
    2. 'a' → logprob: -6.252121925354004
    3. '),' → logprob: -8.627121925354004
    4. '(b' → logprob: -12.127121925354004
    5. '(' → logprob: -12.502121925354004
    6. '   ' → logprob: -13.877121925354004
    7. ',' → logprob: -13.877121925354004
    8. ' (' → logprob: -14.377121925354004
    9. ')' → logprob: -14.502121925354004
    10. ',a' → logprob: -14.752121925354004

Token 550: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.576042890548706
    2. ',' → logprob: -0.826042890548706
    3. ')' → logprob: -10.076043128967285
    4. ' ),' → logprob: -10.451043128967285
    5. ' ,' → logprob: -11.076043128967285
    6. ',),' → logprob: -11.326043128967285
    7. ',b' → logprob: -12.576043128967285
    8. ' ' → logprob: -14.826043128967285
    9. '),(' → logprob: -14.826043128967285
    10. '>,' → logprob: -14.951043128967285

Token 551: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868713676929474
    2. 'int' → logprob: -1.136871337890625
    3. '=int' → logprob: -15.886871337890625
    4. 'b' → logprob: -16.886871337890625
    5. ' b' → logprob: -17.136871337890625
    6. '[int' → logprob: -17.386871337890625
    7. '<int' → logprob: -17.886871337890625
    8. ' ' → logprob: -18.386871337890625
    9. ':int' → logprob: -18.511871337890625
    10. '	int' → logprob: -18.761871337890625

Token 552: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00614634994417429
    2. '(b' → logprob: -5.256146430969238
    3. ' b' → logprob: -7.006146430969238
    4. '(' → logprob: -12.131146430969238
    5. '	b' → logprob: -15.256146430969238
    6. ')b' → logprob: -16.506145477294922
    7. '   ' → logprob: -16.756145477294922
    8. '(
' → logprob: -17.381145477294922
    9. ' (' → logprob: -18.006145477294922
    10. ' ' → logprob: -18.506145477294922

Token 553: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.16063717007637024
    2. ')' → logprob: -1.9106371402740479
    3. ')b' → logprob: -9.035636901855469
    4. '_)' → logprob: -9.160636901855469
    5. 'Str' → logprob: -10.285636901855469
    6. 'b' → logprob: -10.285636901855469
    7. 'str' → logprob: -10.660636901855469
    8. '_b' → logprob: -10.660636901855469
    9. ')_' → logprob: -10.785636901855469
    10. '_' → logprob: -10.785636901855469

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006720705423504114
    2. ')
' → logprob: -5.006720542907715
    3. ')
' → logprob: -12.506720542907715
    4. ')

' → logprob: -14.256720542907715
    5. '<|end|>' → logprob: -14.881720542907715
    6. ' )' → logprob: -15.131720542907715
    7. '       ' → logprob: -15.256720542907715
    8. '   ' → logprob: -16.63172149658203
    9. ')
/' → logprob: -17.25672149658203
    10. ')\
' → logprob: -17.88172149658203

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.811348480870947e-05
    2. '   ' → logprob: -10.12504768371582
    3. 'print' → logprob: -12.00004768371582
    4. ' print' → logprob: -14.37504768371582
    5. 'result' → logprob: -14.50004768371582
    6. '<|end|>' → logprob: -14.75004768371582
    7. ' result' → logprob: -15.37504768371582
    8. '        
' → logprob: -15.62504768371582
    9. '```' → logprob: -16.87504768371582
    10. '      ' → logprob: -17.00004768371582

Token 556: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29968446493148804
    2. ' print' → logprob: -1.7996845245361328
    3. ' result' → logprob: -3.049684524536133
    4. 'result' → logprob: -3.549684524536133
    5. '       ' → logprob: -4.049684524536133
    6. '   ' → logprob: -9.924684524536133
    7. ' cost' → logprob: -12.674684524536133
    8. 'cost' → logprob: -13.049684524536133
    9. 'res' → logprob: -13.299684524536133
    10. 'answer' → logprob: -13.924684524536133

Token 557: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759432911872864
    2. 'a' → logprob: -0.8259432911872864
    3. '(a' → logprob: -13.325942993164062
    4. ' (' → logprob: -13.700942993164062
    5. '(' → logprob: -15.075942993164062
    6. '	a' → logprob: -15.325942993164062
    7. ' ' → logprob: -15.325942993164062
    8. ' not' → logprob: -15.700942993164062
    9. ' ' → logprob: -16.325942993164062
    10. '   ' → logprob: -16.825942993164062

Token 558: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3871528208255768
    2. ' ==' → logprob: -1.1371527910232544
    3. '<=' → logprob: -9.262152671813965
    4. '0' → logprob: -9.387152671813965
    5. '<' → logprob: -10.512152671813965
    6. ' <' → logprob: -10.887152671813965
    7. '=' → logprob: -10.887152671813965
    8. ' ' → logprob: -10.887152671813965
    9. ' <=' → logprob: -11.137152671813965
    10. 'a' → logprob: -12.887152671813965

Token 559: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008101018611341715
    2. ' ' → logprob: -7.125810146331787
    3. 'b' → logprob: -12.125809669494629
    4. ' b' → logprob: -15.375809669494629
    5. '   ' → logprob: -18.000810623168945
    6. '-' → logprob: -18.000810623168945
    7. '  ' → logprob: -18.375810623168945
    8. '1' → logprob: -19.125810623168945
    9. ' -' → logprob: -19.563310623168945
    10. '    ' → logprob: -20.063310623168945

Token 560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -11.000033378601074
    3. 'b' → logprob: -11.125033378601074
    4. '-' → logprob: -13.500033378601074
    5. ' b' → logprob: -17.125032424926758
    6. ' -' → logprob: -17.375032424926758
    7. '1' → logprob: -17.500032424926758
    8. '
' → logprob: -17.875032424926758
    9. '

' → logprob: -18.000032424926758
    10. '```' → logprob: -18.562532424926758

Token 561: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16024190187454224
    2. 'and' → logprob: -1.9102418422698975
    3. ' or' → logprob: -11.035242080688477
    4. ' ' → logprob: -14.535242080688477
    5. '   ' → logprob: -14.785242080688477
    6. '	and' → logprob: -14.785242080688477
    7. 'or' → logprob: -15.535242080688477
    8. '    ' → logprob: -17.035242080688477
    9. '0' → logprob: -17.035242080688477
    10. '  ' → logprob: -18.035242080688477

Token 562: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014133334159851
    2. ' b' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.201414108276367
    4. '	b' → logprob: -17.576414108276367
    5. ' ' → logprob: -18.826414108276367
    6. '  ' → logprob: -19.451414108276367
    7. '    ' → logprob: -20.451414108276367
    8. '       ' → logprob: -22.076414108276367
    9. ' ' → logprob: -22.326414108276367
    10. '_b' → logprob: -22.576414108276367

Token 563: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193798542022705
    2. '==' → logprob: -1.501937985420227
    3. '<|end|>' → logprob: -12.001937866210938
    4. '=' → logprob: -14.251937866210938
    5. ')==' → logprob: -14.751937866210938
    6. '()==' → logprob: -14.751937866210938
    7. ' =' → logprob: -15.126937866210938
    8. '0' → logprob: -15.626937866210938
    9. ' ' → logprob: -15.876937866210938
    10. ' ' → logprob: -15.876937866210938

Token 564: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -19.500179290771484
    4. ' ' → logprob: -19.875179290771484
    5. '   ' → logprob: -20.000179290771484
    6. '  ' → logprob: -20.125179290771484
    7. '<|end|>' → logprob: -20.125179290771484
    8. '=' → logprob: -20.812679290771484
    9. '০' → logprob: -21.562679290771484
    10. '
' → logprob: -21.562679290771484

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '۰' → logprob: -20.312503814697266
    5. '  ' → logprob: -21.125003814697266
    6. '       ' → logprob: -21.500003814697266
    7. '০' → logprob: -21.812503814697266
    8. '<|end|>' → logprob: -21.812503814697266
    9. '०' → logprob: -22.125003814697266
    10. '=' → logprob: -22.125003814697266

Token 566: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3877333998680115
    2. ':
' → logprob: -1.1377334594726562
    3. '       ' → logprob: -7.387733459472656
    4. '           ' → logprob: -8.387733459472656
    5. '   ' → logprob: -12.012733459472656
    6. ':
' → logprob: -12.637733459472656
    7. ':return' → logprob: -12.762733459472656
    8. ':

' → logprob: -14.137733459472656
    9. '():
' → logprob: -14.262733459472656
    10. '):
' → logprob: -14.512733459472656

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9862216504407115e-05
    2. '       ' → logprob: -10.875020027160645
    3. '               ' → logprob: -14.625020027160645
    4. '          ' → logprob: -15.500020027160645
    5. '   ' → logprob: -16.125019073486328
    6. '		' → logprob: -16.500019073486328
    7. 'break' → logprob: -17.000019073486328
    8. ' break' → logprob: -17.000019073486328
    9. '	       ' → logprob: -17.750019073486328
    10. '         ' → logprob: -18.000019073486328

Token 568: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8705248236656189
    2. ' break' → logprob: -1.1205248832702637
    3. 'break' (adapté à ' break') → logprob: -1.3705248832702637
    4. '       ' → logprob: -7.495524883270264
    5. 'return' → logprob: -7.745524883270264
    6. '               ' → logprob: -8.995524406433105
    7. ' return' → logprob: -10.245524406433105
    8. '	break' → logprob: -10.370524406433105
    9. '   ' → logprob: -12.870524406433105
    10. '_break' → logprob: -13.245524406433105

Token 569: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011081460979767144
    2. '
' → logprob: -10.375110626220703
    3. '        
' → logprob: -10.375110626220703
    4. '<|end|>' → logprob: -10.375110626220703
    5. '   ' → logprob: -11.250110626220703
    6. '```' → logprob: -14.000110626220703
    7. '           ' → logprob: -14.125110626220703
    8. '    
' → logprob: -14.375110626220703
    9. '  
' → logprob: -14.750110626220703
    10. '      ' → logprob: -15.000110626220703

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.77627644513268e-06
    2. '   ' → logprob: -12.625008583068848
    3. '        
' → logprob: -13.000008583068848
    4. '<|end|>' → logprob: -13.125008583068848
    5. '
' → logprob: -14.250008583068848
    6. '           ' → logprob: -16.125009536743164
    7. '```' → logprob: -16.375009536743164
    8. '      ' → logprob: -17.000009536743164
    9. '    
' → logprob: -17.250009536743164
    10. 'print' → logprob: -17.625009536743164

Token 571: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4622355103492737
    2. 'result' (adapté à ' result') → logprob: -1.712235450744629
    3. ' result' → logprob: -2.462235450744629
    4. '       ' → logprob: -2.837235450744629
    5. ' print' → logprob: -3.087235450744629
    6. '   ' → logprob: -9.837235450744629
    7. 'cost' → logprob: -9.837235450744629
    8. ' cost' → logprob: -10.087235450744629
    9. 'score' → logprob: -11.087235450744629
    10. 'answer' → logprob: -11.462235450744629

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.504079818725586
    4. '<|end|>' → logprob: -16.504079818725586
    5. ' =
' → logprob: -16.754079818725586
    6. ')' → logprob: -17.129079818725586
    7. '	' → logprob: -17.254079818725586
    8. '  ' → logprob: -17.629079818725586
    9. ' =)' → logprob: -17.629079818725586
    10. 's' → logprob: -18.504079818725586

Token 573: ' solver' (ID: 63271)
  Prédit: ' solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solver' → logprob: -0.6931471824645996
    2. 'solver' → logprob: -0.6931471824645996
    3. 'sol' → logprob: -17.318147659301758
    4. '_solver' → logprob: -18.193147659301758
    5. 'Solver' → logprob: -19.568147659301758
    6. ' sol' → logprob: -20.443147659301758
    7. ' Solver' → logprob: -21.443147659301758
    8. '	s' → logprob: -21.818147659301758
    9. 'solve' → logprob: -21.818147659301758
    10. '   ' → logprob: -22.068147659301758

Token 574: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -4.572941179503687e-05
    2. '.' → logprob: -10.000045776367188
    3. ' .' → logprob: -15.500045776367188
    4. '.sol' → logprob: -16.375045776367188
    5. 'solve' → logprob: -18.125045776367188
    6. '.s' → logprob: -18.250045776367188
    7. '.find' → logprob: -18.250045776367188
    8. '.resolve' → logprob: -18.500045776367188
    9. '.findall' → logprob: -19.375045776367188
    10. '.run' → logprob: -19.375045776367188

Token 575: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -13.750008583068848
    4. ' (' → logprob: -18.500009536743164
    5. '(A' → logprob: -18.750009536743164
    6. 'a' → logprob: -19.000009536743164
    7. '(

' → logprob: -20.125009536743164
    8. '(ai' → logprob: -20.750009536743164
    9. '(i' → logprob: -21.625009536743164
    10. '((' → logprob: -22.000009536743164

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014537633978761733
    2. ',b' → logprob: -8.875144958496094
    3. ' ,' → logprob: -12.125144958496094
    4. ',
' → logprob: -17.500144958496094
    5. '   ' → logprob: -19.250144958496094
    6. 'b' → logprob: -19.625144958496094
    7. ',m' → logprob: -19.875144958496094
    8. '```' → logprob: -19.875144958496094
    9. '‌,' → logprob: -20.750144958496094
    10. ',g' → logprob: -21.000144958496094

Token 577: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ')b' → logprob: -16.77975082397461
    4. '       ' → logprob: -19.52975082397461
    5. ' ' → logprob: -19.90475082397461
    6. '    ' → logprob: -19.90475082397461
    7. '<|end|>' → logprob: -20.27975082397461
    8. '   ' → logprob: -20.52975082397461
    9. '	b' → logprob: -20.65475082397461
    10. '>b' → logprob: -21.15475082397461

Token 578: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13805443048477173
    2. ')' → logprob: -2.138054370880127
    3. '       ' → logprob: -4.513054370880127
    4. ')
' → logprob: -9.263054847717285
    5. '   ' → logprob: -12.638054847717285
    6. ' )
' → logprob: -14.388054847717285
    7. ')

' → logprob: -15.263054847717285
    8. '           ' → logprob: -15.888054847717285
    9. ')`
' → logprob: -16.26305389404297
    10. ' )' → logprob: -16.51305389404297

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.8889261304575484e-06
    2. 'print' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '```' → logprob: -18.000003814697266
    5. ' print' → logprob: -18.875003814697266
    6. '        
' → logprob: -19.625003814697266
    7. '
' → logprob: -21.000003814697266
    8. '	' → logprob: -21.000003814697266
    9. '           ' → logprob: -21.375003814697266
    10. '	   ' → logprob: -21.750003814697266

Token 580: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000924561289139092
    2. '       ' → logprob: -7.000924587249756
    3. ' print' → logprob: -11.250924110412598
    4. '   ' → logprob: -17.875925064086914
    5. '	print' → logprob: -19.000925064086914
    6. '```' → logprob: -20.250925064086914
    7. '#print' → logprob: -22.125925064086914
    8. 'printf' → logprob: -22.750925064086914
    9. '
' → logprob: -22.875925064086914
    10. '_print' → logprob: -23.000925064086914

Token 581: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.25000286102295
    3. 'result' → logprob: -14.00000286102295
    4. '(f' → logprob: -17.375001907348633
    5. '=result' → logprob: -20.500001907348633
    6. '()' → logprob: -20.875001907348633
    7. '[result' → logprob: -21.000001907348633
    8. '(res' → logprob: -21.000001907348633
    9. ' result' → logprob: -21.125001907348633
    10. '(
' → logprob: -21.250001907348633

Token 582: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.750000953674316
    3. '())' → logprob: -15.750000953674316
    4. ' )' → logprob: -16.375
    5. '   ' → logprob: -16.75
    6. ')
' → logprob: -16.875
    7. '))' → logprob: -17.875
    8. ')`' → logprob: -18.0
    9. ')}' → logprob: -19.75
    10. '")' → logprob: -19.75

Token 583: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000317231344524771
    2. '```' → logprob: -8.875317573547363
    3. '<|end|>' → logprob: -9.125317573547363
    4. ' if' → logprob: -10.500317573547363
    5. '
' → logprob: -10.625317573547363
    6. '#' → logprob: -11.500317573547363
    7. 'main' → logprob: -12.875317573547363
    8. '\n' → logprob: -13.750317573547363
    9. '    
' → logprob: -14.500317573547363
    10. '__' → logprob: -14.625317573547363

Token 584: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3138428032398224
    2. '__' → logprob: -1.3138427734375
    3. '_name' → logprob: -7.6888427734375
    4. '_' → logprob: -9.3138427734375
    5. 'name' → logprob: -10.9388427734375
    6. '___' → logprob: -11.4388427734375
    7. ' ' → logprob: -13.3138427734375
    8. ' "__' → logprob: -14.4388427734375
    9. 'Name' → logprob: -15.1888427734375
    10. ' _' → logprob: -15.3138427734375

Token 585: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0071105556562542915
    2. ' __' → logprob: -5.132110595703125
    3. ' ==' → logprob: -7.007110595703125
    4. '==' → logprob: -8.757110595703125
    5. '.__' → logprob: -10.257110595703125
    6. '__.__' → logprob: -10.757110595703125
    7. '_' → logprob: -10.882110595703125
    8. '__.' → logprob: -11.632110595703125
    9. '___' → logprob: -11.882110595703125
    10. '[' → logprob: -12.007110595703125

Token 586: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.869017852295656e-06
    2. '__.__' → logprob: -12.125006675720215
    3. '==' → logprob: -14.000006675720215
    4. '__.' → logprob: -15.000006675720215
    5. ' ==' → logprob: -15.500006675720215
    6. '___' → logprob: -17.00000762939453
    7. '____' → logprob: -17.37500762939453
    8. '__["' → logprob: -18.37500762939453
    9. '__[' → logprob: -18.62500762939453
    10. '__
' → logprob: -18.75000762939453

Token 587: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08160359412431717
    2. ' ==' → logprob: -2.831603527069092
    3. '==' → logprob: -3.956603527069092
    4. '=="' → logprob: -8.58160400390625
    5. '__.__' → logprob: -9.45660400390625
    6. '.__' → logprob: -10.83160400390625
    7. '__.' → logprob: -11.70660400390625
    8. '=='' → logprob: -12.08160400390625
    9. '___' → logprob: -12.95660400390625
    10. '["' → logprob: -12.95660400390625

Token 588: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014175849966704845
    2. ''' → logprob: -4.264175891876221
    3. ' "__' → logprob: -11.514175415039062
    4. '__' → logprob: -13.139175415039062
    5. ' '__' → logprob: -15.889175415039062
    6. ' ' → logprob: -17.014175415039062
    7. ''"' → logprob: -17.014175415039062
    8. '   ' → logprob: -17.014175415039062
    9. '"user' → logprob: -17.264175415039062
    10. '"name' → logprob: -17.389175415039062

Token 589: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048654474318027496
    2. '__' → logprob: -3.048654556274414
    3. '"' → logprob: -9.673654556274414
    4. '_main' → logprob: -13.673654556274414
    5. 'name' → logprob: -14.048654556274414
    6. ''' → logprob: -14.173654556274414
    7. ' main' → logprob: -14.173654556274414
    8. '__":
' → logprob: -15.173654556274414
    9. 'built' → logprob: -15.923654556274414
    10. '___' → logprob: -16.298654556274414

Token 590: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.008817716501653194
    2. '__' → logprob: -4.758817672729492
    3. '__':
' → logprob: -8.508817672729492
    4. '__.' → logprob: -14.508817672729492
    5. '__
' → logprob: -14.883817672729492
    6. '__.__' → logprob: -15.508817672729492
    7. '_' → logprob: -15.633817672729492
    8. '__:' → logprob: -15.883817672729492
    9. '__["' → logprob: -16.258817672729492
    10. '__
' → logprob: -16.633817672729492

Token 591: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00015240935317706317
    2. '__' → logprob: -9.250152587890625
    3. ' main' → logprob: -9.875152587890625
    4. '   ' → logprob: -12.750152587890625
    5. '	main' → logprob: -13.375152587890625
    6. '_main' → logprob: -15.625152587890625
    7. '"' → logprob: -16.750152587890625
    8. '(main' → logprob: -17.000152587890625
    9. '    
' → logprob: -17.625152587890625
    10. '.main' → logprob: -17.750152587890625

Token 592: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -19.125
    4. '	main' → logprob: -20.0
    5. 'import' → logprob: -21.25
    6. '.main' → logprob: -25.0
    7. '_main' → logprob: -25.375
    8. '(main' → logprob: -26.25
    9. '  ' → logprob: -26.875
    10. '```' → logprob: -27.0

Token 593: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 591
Tokens correctement prédits (1ère position, stricte): 344
Tokens correctement prédits (1ère position, avec adaptation): 363
Tokens correctement prédits (top 10): 542
Précision stricte (1ère position): 58.21%
Précision adaptée (1ère position): 61.42%
Précision (top 10): 91.71%
================================================================================
