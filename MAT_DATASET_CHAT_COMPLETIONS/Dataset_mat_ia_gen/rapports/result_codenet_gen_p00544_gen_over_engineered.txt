================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class FlagColor:
    WHITE = 'W'
    BLUE = 'B'
    RED = 'R'


class FlagRow:
    def __init__(self, colors: str):
        self.colors = colors
        self.length = len(colors)

    def repaint_cost(self, target_color: str) -> int:
        return sum(1 for c in self.colors if c != target_color)


class Flag:
    def __init__(self, rows: list[FlagRow]):
        self.rows = rows
        self.N = len(rows)
        self.M = rows[0].length if self.N > 0 else 0

    def min_repainting_to_russian_flag(self) -> int:
        # We have to partition rows into three contiguous segments:
        # top rows painted WHITE (1 or more rows)
        # middle rows painted BLUE (1 or more rows)
        # bottom rows painted RED (1 or more rows)
        # Find indices white_end and blue_end with 1 ≤ white_end < blue_end < N
        # white rows: [0, white_end-1], blue rows: [white_end, blue_end-1], red rows: [blue_end, N-1]
        min_cost = float('inf')
        # Precompute repaint costs per row per color
        cost_by_color = {FlagColor.WHITE: [], FlagColor.BLUE: [], FlagColor.RED: []}
        for row in self.rows:
            for color in cost_by_color.keys():
                cost_by_color[color].append(row.repaint_cost(color))

        for white_end in range(1, self.N - 1):
            for blue_end in range(white_end + 1, self.N):
                cost_white = sum(cost_by_color[FlagColor.WHITE][:white_end])
                cost_blue = sum(cost_by_color[FlagColor.BLUE][white_end:blue_end])
                cost_red = sum(cost_by_color[FlagColor.RED][blue_end:])
                total_cost = cost_white + cost_blue + cost_red
                if total_cost < min_cost:
                    min_cost = total_cost
        return min_cost


class InputParser:
    def __init__(self):
        self.N = 0
        self.M = 0
        self.raw_rows = []

    def parse(self):
        first_line = input().strip()
        self.N, self.M = map(int, first_line.split())
        for _ in range(self.N):
            self.raw_rows.append(input().strip())

    def to_flag(self) -> Flag:
        rows = [FlagRow(colors) for colors in self.raw_rows]
        return Flag(rows)


def main():
    parser = InputParser()
    parser.parse()
    flag = parser.to_flag()
    print(flag.min_repainting_to_russian_flag())


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Flag' (ID: 40343)
  → Token d'amorce (pas de prédiction)

Token 2: 'Color' (ID: 2324)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8679026365280151
    2. '(' → logprob: -1.2429026365280151
    3. '{' → logprob: -1.2429026365280151
    4. ' {' → logprob: -6.242902755737305
    5. '.' → logprob: -8.242902755737305
    6. '(:' → logprob: -8.367902755737305
    7. ' :' → logprob: -8.492902755737305
    8. '```' → logprob: -8.492902755737305
    9. '[' → logprob: -9.492902755737305
    10. ' ' → logprob: -10.242902755737305

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014793859794735909
    2. '(' → logprob: -5.014793872833252
    3. '   ' → logprob: -5.264793872833252
    4. '```' → logprob: -7.014793872833252
    5. ' ' → logprob: -7.139793872833252
    6. ':
' → logprob: -8.014793395996094
    7. '.' → logprob: -8.264793395996094
    8. ' :' → logprob: -8.389793395996094
    9. '():' → logprob: -9.389793395996094
    10. '  ' → logprob: -9.639793395996094

Token 5: ' WHITE' (ID: 94026)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24054384231567383
    2. ' ' → logprob: -1.8655438423156738
    3. '_' → logprob: -3.615543842315674
    4. '    ' → logprob: -4.240543842315674
    5. '```' → logprob: -4.990543842315674
    6. '  ' → logprob: -5.865543842315674
    7. ' ```' → logprob: -6.490543842315674
    8. ''' → logprob: -6.615543842315674
    9. 'space' → logprob: -7.365543842315674
    10. '[' → logprob: -7.490543842315674

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32424265146255493
    2. ' =' → logprob: -1.5742425918579102
    3. ':' → logprob: -3.07424259185791
    4. '.' → logprob: -3.94924259185791
    5. '   ' → logprob: -6.19924259185791
    6. '```' → logprob: -7.44924259185791
    7. ',' → logprob: -7.57424259185791
    8. '_' → logprob: -8.07424259185791
    9. ' ' → logprob: -9.07424259185791
    10. ':
' → logprob: -9.32424259185791

Token 7: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0607539527118206
    2. '"' → logprob: -2.9357540607452393
    3. ' '' → logprob: -5.43575382232666
    4. ' ' → logprob: -6.81075382232666
    5. ' "' → logprob: -7.93575382232666
    6. '0' → logprob: -11.18575382232666
    7. '1' → logprob: -11.43575382232666
    8. '(' → logprob: -12.68575382232666
    9. ''s' → logprob: -13.93575382232666
    10. ' ' → logprob: -13.93575382232666

Token 8: 'W' (ID: 54)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09497815370559692
    2. 'white' → logprob: -2.469978094100952
    3. ' white' → logprob: -5.594978332519531
    4. ''' → logprob: -7.469978332519531
    5. 'WHITE' → logprob: -7.469978332519531
    6. ''#' → logprob: -7.719978332519531
    7. 'White' → logprob: -8.219978332519531
    8. ' #' → logprob: -8.594978332519531
    9. '白' → logprob: -9.219978332519531
    10. '#w' → logprob: -10.344978332519531

Token 9: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005028736195527017
    2. ''
' → logprob: -8.000502586364746
    3. 'h' → logprob: -9.250502586364746
    4. ''''' → logprob: -10.375502586364746
    5. 'H' → logprob: -11.375502586364746
    6. ''H' → logprob: -11.500502586364746
    7. ''h' → logprob: -12.125502586364746
    8. 'HITE' → logprob: -12.500502586364746
    9. ''
' → logprob: -12.875502586364746
    10. '''' → logprob: -12.875502586364746

Token 10: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5087846517562866
    2. '   ' → logprob: -1.3837846517562866
    3. '    
' → logprob: -2.633784770965576
    4. '<|end|>' → logprob: -4.508784770965576
    5. 'newline' → logprob: -4.508784770965576
    6. '_' → logprob: -4.883784770965576
    7. '  
' → logprob: -4.883784770965576
    8. '\n' → logprob: -5.133784770965576
    9. '' → logprob: -5.133784770965576
    10. '.' → logprob: -5.383784770965576

Token 11: ' BLUE' (ID: 110151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08388537913560867
    2. '.' → logprob: -3.958885431289673
    3. '    
' → logprob: -4.333885192871094
    4. ''' → logprob: -4.583885192871094
    5. '\n' → logprob: -4.583885192871094
    6. 'B' → logprob: -5.083885192871094
    7. '```' → logprob: -5.083885192871094
    8. '_' → logprob: -5.458885192871094
    9. '  ' → logprob: -6.583885192871094
    10. ' ' → logprob: -6.708885192871094

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008635961450636387
    2. '=' → logprob: -4.758635997772217
    3. ' ' → logprob: -11.758635520935059
    4. '_' → logprob: -12.133635520935059
    5. ' ='' → logprob: -12.633635520935059
    6. '   ' → logprob: -13.008635520935059
    7. ''' → logprob: -14.133635520935059
    8. '  ' → logprob: -14.383635520935059
    9. '<|end|>' → logprob: -14.633635520935059
    10. '='' → logprob: -15.133635520935059

Token 13: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001398929744027555
    2. ' '' → logprob: -9.000140190124512
    3. ' ' → logprob: -11.375140190124512
    4. '"' → logprob: -12.625140190124512
    5. ''A' → logprob: -15.125140190124512
    6. ' ' → logprob: -15.500140190124512
    7. ''b' → logprob: -15.500140190124512
    8. '   ' → logprob: -15.750140190124512
    9. '  ' → logprob: -16.000139236450195
    10. ''O' → logprob: -16.125139236450195

Token 14: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4743838608264923
    2. ''' → logprob: -0.9743838310241699
    3. ''U' → logprob: -8.724384307861328
    4. ''L' → logprob: -10.099384307861328
    5. ' B' → logprob: -10.224384307861328
    6. 'U' → logprob: -11.349384307861328
    7. ' '' → logprob: -11.474384307861328
    8. ''A' → logprob: -11.724384307861328
    9. 'L' → logprob: -11.974384307861328
    10. '`' → logprob: -12.724384307861328

Token 15: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003091254911851138
    2. ''''' → logprob: -8.625308990478516
    3. ''
' → logprob: -9.000308990478516
    4. '''' → logprob: -13.375308990478516
    5. '"'' → logprob: -13.750308990478516
    6. '"' → logprob: -13.750308990478516
    7. '```' → logprob: -14.000308990478516
    8. ' '' → logprob: -14.625308990478516
    9. ''"' → logprob: -14.875308990478516
    10. ''

' → logprob: -14.875308990478516

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09812572598457336
    2. '    
' → logprob: -3.098125696182251
    3. '
' → logprob: -4.34812593460083
    4. '```' → logprob: -4.72312593460083
    5. '_' → logprob: -5.47312593460083
    6. '    ' → logprob: -5.72312593460083
    7. '<|end|>' → logprob: -5.72312593460083
    8. ' ' → logprob: -5.84812593460083
    9. '  ' → logprob: -6.09812593460083
    10. '  
' → logprob: -6.22312593460083

Token 17: ' RED' (ID: 45309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760959386825562
    2. 'R' → logprob: -1.2010959386825562
    3. 'RED' (adapté à ' RED') → logprob: -3.0760960578918457
    4. ' ' → logprob: -3.4510960578918457
    5. 'Y' → logprob: -4.076096057891846
    6. ''' → logprob: -4.076096057891846
    7. 'GREEN' → logprob: -5.701096057891846
    8. '_' → logprob: -5.951096057891846
    9. '    
' → logprob: -6.076096057891846
    10. 'L' → logprob: -6.201096057891846

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012635251507163048
    2. '=' → logprob: -4.387635231018066
    3. ' ='' → logprob: -10.012635231018066
    4. ''' → logprob: -10.387635231018066
    5. ' ' → logprob: -10.762635231018066
    6. '   ' → logprob: -11.262635231018066
    7. '='' → logprob: -12.137635231018066
    8. '<|end|>' → logprob: -12.262635231018066
    9. '  ' → logprob: -12.512635231018066
    10. ':' → logprob: -15.012635231018066

Token 19: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007145775598473847
    2. ' '' → logprob: -7.2507147789001465
    3. ' ' → logprob: -13.125714302062988
    4. '"' → logprob: -13.625714302062988
    5. ''r' → logprob: -14.375714302062988
    6. ' R' → logprob: -14.625714302062988
    7. ''A' → logprob: -16.375715255737305
    8. ''Re' → logprob: -16.750715255737305
    9. 'r' → logprob: -16.875715255737305
    10. 'R' → logprob: -16.875715255737305

Token 20: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005236956290900707
    2. 'R' → logprob: -5.255237102508545
    3. ''''' → logprob: -14.005236625671387
    4. '''' → logprob: -14.630236625671387
    5. ' R' → logprob: -14.880236625671387
    6. ''\' → logprob: -15.255236625671387
    7. ''"' → logprob: -15.380236625671387
    8. '’' → logprob: -15.380236625671387
    9. ''r' → logprob: -15.380236625671387
    10. '`' → logprob: -15.630236625671387

Token 21: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00016480287013109773
    2. ''''' → logprob: -8.750164985656738
    3. ''
' → logprob: -12.375164985656738
    4. '```' → logprob: -13.875164985656738
    5. '"' → logprob: -14.250164985656738
    6. ' '' → logprob: -16.250164031982422
    7. '"""' → logprob: -16.875164031982422
    8. '''' → logprob: -16.875164031982422
    9. ''"' → logprob: -17.000164031982422
    10. ''

' → logprob: -17.125164031982422

Token 22: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.43708232045173645
    2. 'c' → logprob: -1.062082290649414
    3. '   ' → logprob: -5.687082290649414
    4. ' ' → logprob: -6.937082290649414
    5. '#' → logprob: -7.187082290649414
    6. ' class' → logprob: -7.562082290649414
    7. 'n' → logprob: -7.937082290649414
    8. '
' → logprob: -8.187082290649414
    9. 'C' → logprob: -8.437082290649414
    10. 'def' → logprob: -8.437082290649414

Token 23: ' Flag' (ID: 40343)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015983818098902702
    2. ' Space' → logprob: -4.890983581542969
    3. ' Flag' → logprob: -5.265983581542969
    4. ' ' → logprob: -6.890983581542969
    5. ' I' → logprob: -7.890983581542969
    6. ' Fl' → logprob: -8.765983581542969
    7. ' )' → logprob: -9.140983581542969
    8. ' 空' → logprob: -9.265983581542969
    9. ' Color' → logprob: -9.390983581542969
    10. ' space' → logprob: -9.390983581542969

Token 24: 'Row' (ID: 5513)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044549811631441116
    2. 'Color' → logprob: -3.1695497035980225
    3. '<Color' → logprob: -7.044549942016602
    4. 'Colors' → logprob: -8.419549942016602
    5. ' :' → logprob: -8.794549942016602
    6. 'C' → logprob: -9.544549942016602
    7. '(Color' → logprob: -9.919549942016602
    8. ':
' → logprob: -10.169549942016602
    9. ' Color' → logprob: -10.419549942016602
    10. '):' → logprob: -10.544549942016602

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000261216628132388
    2. '(' → logprob: -8.625261306762695
    3. ' :' → logprob: -10.125261306762695
    4. '):' → logprob: -11.250261306762695
    5. '():' → logprob: -11.625261306762695
    6. '   ' → logprob: -12.125261306762695
    7. '<|end|>' → logprob: -12.500261306762695
    8. ':**' → logprob: -12.625261306762695
    9. '：' → logprob: -13.875261306762695
    10. ':
' → logprob: -14.125261306762695

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013741609873250127
    2. '(' → logprob: -8.001374244689941
    3. ':' → logprob: -8.126374244689941
    4. ' def' → logprob: -8.126374244689941
    5. '    ' → logprob: -8.626374244689941
    6. ' ' → logprob: -9.751374244689941
    7. 'def' → logprob: -10.001374244689941
    8. '  ' → logprob: -10.251374244689941
    9. ' (' → logprob: -10.376374244689941
    10. ' :' → logprob: -11.126374244689941

Token 27: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7026368379592896
    2. ' def' → logprob: -1.0776368379592896
    3. 'def' (adapté à ' def') → logprob: -1.8276368379592896
    4. '    ' → logprob: -5.82763671875
    5. 'de' → logprob: -8.70263671875
    6. 'class' → logprob: -8.70263671875
    7. '```' → logprob: -9.45263671875
    8. '_' → logprob: -10.45263671875
    9. ' ' → logprob: -10.45263671875
    10. ')' → logprob: -10.95263671875

Token 28: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010818946175277233
    2. '_' → logprob: -5.135818958282471
    3. '__' → logprob: -5.885818958282471
    4. ' _' → logprob: -6.885818958282471
    5. ' ' → logprob: -7.010818958282471
    6. ' init' → logprob: -10.260818481445312
    7. ' ' → logprob: -10.260818481445312
    8. ' add' → logprob: -10.635818481445312
    9. '_init' → logprob: -11.135818481445312
    10. '  ' → logprob: -11.760818481445312

Token 29: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4259644558478612e-05
    2. 'ini' → logprob: -11.250014305114746
    3. 'in' → logprob: -13.875014305114746
    4. 'i' → logprob: -15.500014305114746
    5. 'int' → logprob: -17.62501335144043
    6. ' init' → logprob: -18.50001335144043
    7. 'innit' → logprob: -19.62501335144043
    8. 'inite' → logprob: -19.75001335144043
    9. 'inti' → logprob: -20.75001335144043
    10. 'def' → logprob: -20.75001335144043

Token 30: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07994771003723145
    2. ' (' → logprob: -3.4549477100372314
    3. '__(' → logprob: -3.7049477100372314
    4. '(self' → logprob: -4.079947471618652
    5. '<|end|>' → logprob: -6.204947471618652
    6. 'self' → logprob: -7.204947471618652
    7. '__(
' → logprob: -8.579947471618652
    8. '<|end|>' → logprob: -9.329947471618652
    9. '__' → logprob: -9.454947471618652
    10. '```' → logprob: -9.454947471618652

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3136671185493469
    2. ' self' → logprob: -1.3136670589447021
    3. ')' → logprob: -8.938667297363281
    4. 'colors' → logprob: -9.688667297363281
    5. ' colors' → logprob: -10.063667297363281
    6. 'flags' → logprob: -10.563667297363281
    7. 'color' → logprob: -10.688667297363281
    8. 'rows' → logprob: -10.688667297363281
    9. ' color' → logprob: -10.813667297363281
    10. ' )' → logprob: -11.313667297363281

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29008081555366516
    2. ' ,' → logprob: -1.4150807857513428
    3. 'self' → logprob: -5.040081024169922
    4. ' self' → logprob: -6.415081024169922
    5. ' ' → logprob: -8.040081024169922
    6. ',self' → logprob: -8.540081024169922
    7. ' )' → logprob: -9.290081024169922
    8. ')' → logprob: -9.415081024169922
    9. '_self' → logprob: -10.040081024169922
    10. '_' → logprob: -11.540081024169922

Token 33: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.1148454025387764
    2. 'colors' → logprob: -2.6148455142974854
    3. ' self' → logprob: -4.864845275878906
    4. ' flags' → logprob: -5.114845275878906
    5. 'self' → logprob: -5.239845275878906
    6. ' color' → logprob: -5.364845275878906
    7. ' flag' → logprob: -5.864845275878906
    8. 'flags' → logprob: -6.239845275878906
    9. 'flag' → logprob: -6.239845275878906
    10. 'color' → logprob: -6.614845275878906

Token 34: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023300565779209137
    2. ':' → logprob: -3.8983006477355957
    3. ' ):' → logprob: -6.523300647735596
    4. ')' → logprob: -7.648300647735596
    5. ',' → logprob: -8.023300170898438
    6. ':list' → logprob: -9.023300170898438
    7. '=[]' → logprob: -9.023300170898438
    8. '=' → logprob: -9.398300170898438
    9. '):
' → logprob: -9.523300170898438
    10. '=None' → logprob: -10.148300170898438

Token 35: ' str' (ID: 989)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06332799792289734
    2. 'list' → logprob: -3.1883280277252197
    3. ' List' → logprob: -4.438327789306641
    4. 'List' → logprob: -5.313327789306641
    5. ')' → logprob: -6.438327789306641
    6. ' )' → logprob: -7.438327789306641
    7. ' ' → logprob: -7.813327789306641
    8. ' str' → logprob: -8.68832778930664
    9. ' [' → logprob: -8.93832778930664
    10. ' [])' → logprob: -9.18832778930664

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011747077107429504
    2. ')' → logprob: -4.511746883392334
    3. ' ):' → logprob: -8.386747360229492
    4. '   ' → logprob: -8.511747360229492
    5. ':' → logprob: -8.886747360229492
    6. '       ' → logprob: -9.261747360229492
    7. '):
' → logprob: -10.761747360229492
    8. ' )' → logprob: -12.386747360229492
    9. ',' → logprob: -12.886747360229492
    10. ' ' → logprob: -13.261747360229492

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010980613296851516
    2. ':' → logprob: -7.376098155975342
    3. '   ' → logprob: -8.626097679138184
    4. ')' → logprob: -8.876097679138184
    5. '):' → logprob: -10.251097679138184
    6. ',' → logprob: -10.626097679138184
    7. '      ' → logprob: -10.751097679138184
    8. '    ' → logprob: -11.126097679138184
    9. ' ' → logprob: -11.251097679138184
    10. '<|end|>' → logprob: -11.501097679138184

Token 38: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3949297070503235
    2. ' self' → logprob: -1.6449296474456787
    3. 'self' (adapté à ' self') → logprob: -2.0199296474456787
    4. '        ' → logprob: -8.144929885864258
    5. '   ' → logprob: -9.144929885864258
    6. ' ' → logprob: -9.519929885864258
    7. ' if' → logprob: -10.769929885864258
    8. '      ' → logprob: -10.894929885864258
    9. '    ' → logprob: -11.269929885864258
    10. ' for' → logprob: -11.644929885864258

Token 39: '.colors' (ID: 57861)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005365021526813507
    2. '.colors' → logprob: -5.255364894866943
    3. 'colors' → logprob: -9.755365371704102
    4. ' .' → logprob: -9.880365371704102
    5. '_colors' → logprob: -11.630365371704102
    6. '.color' → logprob: -12.005365371704102
    7. ' colors' → logprob: -12.755365371704102
    8. '.

' → logprob: -14.880365371704102
    9. ')' → logprob: -14.880365371704102
    10. '.
' → logprob: -15.005365371704102

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17979681491851807
    2. '=' → logprob: -1.804796814918518
    3. ' ' → logprob: -9.929797172546387
    4. ' =)' → logprob: -13.429797172546387
    5. ')' → logprob: -15.179797172546387
    6. '   ' → logprob: -15.429797172546387
    7. '.' → logprob: -15.429797172546387
    8. ' +=' → logprob: -15.679797172546387
    9. ' ' → logprob: -16.17979621887207
    10. '    ' → logprob: -16.17979621887207

Token 41: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5766296982765198
    2. ' colors' → logprob: -0.8266296982765198
    3. 'list' → logprob: -7.701629638671875
    4. ' list' → logprob: -8.701629638671875
    5. '[' → logprob: -10.326629638671875
    6. 'color' → logprob: -11.326629638671875
    7. ' [' → logprob: -11.451629638671875
    8. '[]' → logprob: -11.951629638671875
    9. '(colors' → logprob: -13.076629638671875
    10. '.colors' → logprob: -13.201629638671875

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6792072653770447
    2. '<|end|>' → logprob: -0.8042072653770447
    3. '   ' → logprob: -3.4292073249816895
    4. '<|end|>' → logprob: -5.0542073249816895
    5. '    
' → logprob: -5.5542073249816895
    6. ' 
' → logprob: -7.0542073249816895
    7. 'def' → logprob: -7.4292073249816895
    8. ' ' → logprob: -8.054206848144531
    9. '  
' → logprob: -8.679206848144531
    10. '

' → logprob: -8.804206848144531

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05008552595973015
    2. '
' → logprob: -3.6750855445861816
    3. '    
' → logprob: -5.050085544586182
    4. 'def' → logprob: -5.175085544586182
    5. '<|end|>' → logprob: -5.425085544586182
    6. ' ' → logprob: -5.800085544586182
    7. ' 
' → logprob: -6.675085544586182
    8. ' def' → logprob: -7.800085544586182
    9. '       ' → logprob: -8.175085067749023
    10. '  
' → logprob: -8.175085067749023

Token 44: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08757221698760986
    2. '.length' → logprob: -2.9625720977783203
    3. '.count' → logprob: -4.83757209777832
    4. '.is' → logprob: -4.96257209777832
    5. '.colors' → logprob: -5.58757209777832
    6. '.color' → logprob: -5.71257209777832
    7. '.size' → logprob: -5.96257209777832
    8. '.unique' → logprob: -6.08757209777832
    9. '.has' → logprob: -7.33757209777832
    10. '.current' → logprob: -7.46257209777832

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0896790400147438
    2. '=' → logprob: -2.464679002761841
    3. ' ' → logprob: -7.96467924118042
    4. '<|end|>' → logprob: -8.214678764343262
    5. '_' → logprob: -9.964678764343262
    6. '   ' → logprob: -11.464678764343262
    7. '=len' → logprob: -11.464678764343262
    8. '<|end|>' → logprob: -11.589678764343262
    9. ')' → logprob: -11.839678764343262
    10. '  ' → logprob: -11.964678764343262

Token 47: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.00023095356300473213
    2. 'len' → logprob: -8.37523078918457
    3. '(len' → logprob: -15.62523078918457
    4. '=len' → logprob: -15.75023078918457
    5. '	len' → logprob: -17.00023078918457
    6. ' ' → logprob: -17.25023078918457
    7. ' ' → logprob: -17.87523078918457
    8. '[len' → logprob: -18.12523078918457
    9. ',len' → logprob: -19.25023078918457
    10. '<len' → logprob: -19.75023078918457

Token 48: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.019330907613039017
    2. '(self' → logprob: -4.269330978393555
    3. '(' → logprob: -5.269330978393555
    4. 'colors' → logprob: -13.019330978393555
    5. '(color' → logprob: -13.144330978393555
    6. '(
' → logprob: -13.769330978393555
    7. '(

' → logprob: -14.769330978393555
    8. 'self' → logprob: -15.019330978393555
    9. ' colors' → logprob: -15.144330978393555
    10. '(s' → logprob: -15.394330978393555

Token 49: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -11.875009536743164
    3. ')
' → logprob: -13.250009536743164
    4. '   ' → logprob: -15.375009536743164
    5. '<|end|>' → logprob: -16.125009536743164
    6. '       ' → logprob: -16.875009536743164
    7. ' ' → logprob: -17.000009536743164
    8. '}' → logprob: -17.250009536743164
    9. ')return' → logprob: -17.750009536743164
    10. '<|end|>' → logprob: -18.375009536743164

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8349955081939697
    2. '   ' → logprob: -1.0849955081939697
    3. 'def' → logprob: -1.7099955081939697
    4. '    
' → logprob: -3.8349955081939697
    5. ' def' → logprob: -4.459995269775391
    6. '<|end|>' → logprob: -4.959995269775391
    7. ' 
' → logprob: -5.584995269775391
    8. '<|end|>' → logprob: -6.709995269775391
    9. '        
' → logprob: -7.834995269775391
    10. ' ' → logprob: -8.20999526977539

Token 51: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13364335894584656
    2. '   ' → logprob: -2.883643388748169
    3. ' def' → logprob: -2.883643388748169
    4. '
' → logprob: -4.75864315032959
    5. '    
' → logprob: -6.25864315032959
    6. '<|end|>' → logprob: -6.25864315032959
    7. '<|end|>' → logprob: -8.13364315032959
    8. ' ' → logprob: -9.00864315032959
    9. ' 
' → logprob: -9.13364315032959
    10. '	def' → logprob: -9.38364315032959

Token 52: ' repaint' (ID: 133657)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24709108471870422
    2. ' ' → logprob: -1.6220910549163818
    3. ' space' → logprob: -4.997091293334961
    4. ' _' → logprob: -5.622091293334961
    5. ' def' → logprob: -6.122091293334961
    6. '_space' → logprob: -6.622091293334961
    7. ' ' → logprob: -6.872091293334961
    8. '_contains' → logprob: -6.997091293334961
    9. ' is' → logprob: -7.247091293334961
    10. ' contains' → logprob: -7.247091293334961

Token 53: '_cost' (ID: 36820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08439014852046967
    2. '(self' → logprob: -2.584390163421631
    3. '_' → logprob: -5.584390163421631
    4. '_color' → logprob: -7.959390163421631
    5. '_(' → logprob: -8.334389686584473
    6. ' (' → logprob: -8.459389686584473
    7. '_space' → logprob: -8.834389686584473
    8. '_token' → logprob: -9.209389686584473
    9. '_self' → logprob: -9.334389686584473
    10. 'self' → logprob: -9.459389686584473

Token 54: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31374961137771606
    2. '(self' → logprob: -1.3137495517730713
    3. ' (' → logprob: -9.063749313354492
    4. 'self' → logprob: -9.188749313354492
    5. '_' → logprob: -9.563749313354492
    6. '(
' → logprob: -9.813749313354492
    7. 's' → logprob: -9.938749313354492
    8. ')' → logprob: -11.313749313354492
    9. '<|end|>' → logprob: -11.438749313354492
    10. '(

' → logprob: -11.688749313354492

Token 55: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20757941901683807
    2. ',' → logprob: -1.9575793743133545
    3. 'self' → logprob: -3.2075793743133545
    4. '_' → logprob: -6.832579612731934
    5. '_)' → logprob: -6.957579612731934
    6. 'ed' → logprob: -7.082579612731934
    7. ')_' → logprob: -7.457579612731934
    8. '(self' → logprob: -7.582579612731934
    9. '_,' → logprob: -8.082579612731934
    10. ',)' → logprob: -8.207579612731934

Token 56: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6826835870742798
    2. ' self' → logprob: -1.3076835870742798
    3. 'index' → logprob: -3.6826834678649902
    4. ' target' → logprob: -3.6826834678649902
    5. ' other' → logprob: -3.9326834678649902
    6. ' index' → logprob: -3.9326834678649902
    7. ' new' → logprob: -4.05768346786499
    8. ' idx' → logprob: -4.18268346786499
    9. ' i' → logprob: -4.30768346786499
    10. 'color' → logprob: -4.43268346786499

Token 57: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.1590491086244583
    2. '):' → logprob: -2.0340490341186523
    3. '_colors' → logprob: -4.784049034118652
    4. ':' → logprob: -5.409049034118652
    5. 'color' → logprob: -6.534049034118652
    6. '_' → logprob: -7.659049034118652
    7. ')' → logprob: -8.034049034118652
    8. '_row' → logprob: -8.284049034118652
    9. ' ):' → logprob: -8.534049034118652
    10. '_char' → logprob: -8.784049034118652

Token 58: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03482381999492645
    2. ':' → logprob: -3.5348238945007324
    3. ')' → logprob: -5.784823894500732
    4. ',' → logprob: -6.784823894500732
    5. ' ):' → logprob: -7.159823894500732
    6. ' :' → logprob: -10.284823417663574
    7. '):
' → logprob: -11.034823417663574
    8. ' ' → logprob: -11.534823417663574
    9. ' )' → logprob: -12.159823417663574
    10. ':str' → logprob: -12.284823417663574

Token 59: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.6439688801765442
    2. ')' → logprob: -1.1439688205718994
    3. ' '' → logprob: -2.7689688205718994
    4. ''' → logprob: -3.1439688205718994
    5. 'str' → logprob: -3.1439688205718994
    6. ' )' → logprob: -5.6439690589904785
    7. ' ' → logprob: -6.3939690589904785
    8. '):' → logprob: -7.1439690589904785
    9. ''s' → logprob: -8.26896858215332
    10. '')' → logprob: -8.39396858215332

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761361122131348
    2. '):' → logprob: -0.8261361122131348
    3. '):
' → logprob: -9.201135635375977
    4. ' ):' → logprob: -9.951135635375977
    5. ' )' → logprob: -10.576135635375977
    6. ',' → logprob: -11.576135635375977
    7. ')->' → logprob: -12.451135635375977
    8. '   ' → logprob: -12.451135635375977
    9. ':' → logprob: -12.576135635375977
    10. ' ' → logprob: -15.076135635375977

Token 61: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005370667786337435
    2. '):' → logprob: -7.875536918640137
    3. ' :' → logprob: -9.875536918640137
    4. '():' → logprob: -10.000536918640137
    5. '       ' → logprob: -11.375536918640137
    6. ':return' → logprob: -11.375536918640137
    7. '(self' → logprob: -12.000536918640137
    8. ':**' → logprob: -12.125536918640137
    9. ':
' → logprob: -12.500536918640137
    10. '   ' → logprob: -12.625536918640137

Token 62: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029753033071756363
    2. 'int' → logprob: -3.5297529697418213
    3. ' ' → logprob: -13.404752731323242
    4. ':int' → logprob: -15.279752731323242
    5. ' '' → logprob: -15.779752731323242
    6. '[int' → logprob: -15.904752731323242
    7. '(int' → logprob: -16.529752731323242
    8. '   ' → logprob: -16.529752731323242
    9. ' ' → logprob: -16.654752731323242
    10. '	int' → logprob: -16.904752731323242

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007366081699728966
    2. '):' → logprob: -7.500736713409424
    3. '():' → logprob: -9.000736236572266
    4. ' :' → logprob: -10.000736236572266
    5. ',' → logprob: -12.250736236572266
    6. ':**' → logprob: -12.875736236572266
    7. '       ' → logprob: -13.375736236572266
    8. '(self' → logprob: -13.625736236572266
    9. '>:' → logprob: -13.625736236572266
    10. '   ' → logprob: -14.250736236572266

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07785313576459885
    2. ' ' → logprob: -2.952853202819824
    3. '    ' → logprob: -4.577853202819824
    4. ' 
' → logprob: -5.452853202819824
    5. '   ' → logprob: -5.952853202819824
    6. '\n' → logprob: -6.077853202819824
    7. '        
' → logprob: -7.452853202819824
    8. '<|end|>' → logprob: -7.577853202819824
    9. '0' → logprob: -7.827853202819824
    10. '        ' → logprob: -7.952853202819824

Token 65: ' return' (ID: 622)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8923320174217224
    2. '       ' → logprob: -1.1423320770263672
    3. 'return' (adapté à ' return') → logprob: -1.3923320770263672
    4. ' return' → logprob: -4.267332077026367
    5. ' sum' → logprob: -5.142332077026367
    6. 'cost' → logprob: -6.017332077026367
    7. ' cost' → logprob: -9.142332077026367
    8. '   ' → logprob: -9.392332077026367
    9. 'self' → logprob: -9.517332077026367
    10. 'result' → logprob: -10.142332077026367

Token 66: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.011314007453620434
    2. 'sum' → logprob: -4.5113139152526855
    3. ' self' → logprob: -8.511314392089844
    4. ' len' → logprob: -10.511314392089844
    5. '   ' → logprob: -11.136314392089844
    6. 'self' → logprob: -12.011314392089844
    7. ' ' → logprob: -12.011314392089844
    8. '0' → logprob: -12.511314392089844
    9. 'len' → logprob: -13.136314392089844
    10. '(sum' → logprob: -13.636314392089844

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1895710974931717
    2. '(c' → logprob: -1.9395711421966553
    3. '(color' → logprob: -4.189570903778076
    4. '(self' → logprob: -4.314570903778076
    5. '1' → logprob: -8.939571380615234
    6. '((' → logprob: -9.564571380615234
    7. 'c' → logprob: -10.064571380615234
    8. '(
' → logprob: -10.189571380615234
    9. '([' → logprob: -10.314571380615234
    10. '(ch' → logprob: -11.064571380615234

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6417614817619324
    2. 'c' → logprob: -1.1417615413665771
    3. 'color' → logprob: -2.391761541366577
    4. 'self' → logprob: -3.016761541366577
    5. '(' → logprob: -5.391761302947998
    6. '   ' → logprob: -5.766761302947998
    7. ' ' → logprob: -6.641761302947998
    8. '       ' → logprob: -6.641761302947998
    9. '           ' → logprob: -7.391761302947998
    10. '(c' → logprob: -7.391761302947998

Token 69: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009184670634567738
    2. 'for' → logprob: -4.884184837341309
    3. ' if' → logprob: -6.759184837341309
    4. ' c' → logprob: -8.884184837341309
    5. 'c' → logprob: -9.009184837341309
    6. ')' → logprob: -10.509184837341309
    7. 'if' → logprob: -10.634184837341309
    8. '           ' → logprob: -10.884184837341309
    9. ' ' → logprob: -11.009184837341309
    10. '       ' → logprob: -11.634184837341309

Token 70: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05088355392217636
    2. 'c' → logprob: -3.0508835315704346
    3. ' color' → logprob: -6.550883769989014
    4. ' ' → logprob: -7.675883769989014
    5. ' current' → logprob: -8.300883293151855
    6. 'color' → logprob: -9.050883293151855
    7. ' ch' → logprob: -11.675883293151855
    8. '   ' → logprob: -12.300883293151855
    9. 'current' → logprob: -12.550883293151855
    10. ' original' → logprob: -12.800883293151855

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009902111254632473
    2. ' ' → logprob: -4.759902000427246
    3. 'in' → logprob: -6.759902000427246
    4. '  ' → logprob: -10.134902000427246
    5. ',' → logprob: -10.634902000427246
    6. ' c' → logprob: -11.009902000427246
    7. 's' → logprob: -11.259902000427246
    8. ' i' → logprob: -11.259902000427246
    9. 'c' → logprob: -12.134902000427246
    10. '   ' → logprob: -12.884902000427246

Token 72: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5231528282165527
    2. 'self' → logprob: -0.8981528282165527
    3. ' ' → logprob: -11.273153305053711
    4. 'elf' → logprob: -12.148153305053711
    5. '	self' → logprob: -12.648153305053711
    6. '(self' → logprob: -13.023153305053711
    7. ' ' → logprob: -13.648153305053711
    8. '   ' → logprob: -14.273153305053711
    9. '`' → logprob: -14.523153305053711
    10. 's' → logprob: -14.773153305053711

Token 73: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -7.553032628493384e-05
    2. 'colors' → logprob: -9.625075340270996
    3. ' .' → logprob: -12.375075340270996
    4. '.' → logprob: -12.750075340270996
    5. '.color' → logprob: -13.375075340270996
    6. ' colors' → logprob: -15.125075340270996
    7. '_colors' → logprob: -16.250076293945312
    8. '.characters' → logprob: -16.250076293945312
    9. '/colors' → logprob: -16.625076293945312
    10. '.c' → logprob: -16.625076293945312

Token 74: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0017885866109281778
    2. 'if' → logprob: -6.37678861618042
    3. ' ' → logprob: -9.626788139343262
    4. ' in' → logprob: -11.376788139343262
    5. '        ' → logprob: -12.751788139343262
    6. '            ' → logprob: -13.376788139343262
    7. ' not' → logprob: -14.001788139343262
    8. ')' → logprob: -14.126788139343262
    9. '    ' → logprob: -14.376788139343262
    10. ' c' → logprob: -14.501788139343262

Token 75: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.00861669983714819
    2. 'c' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.25861644744873
    4. ' ' → logprob: -15.13361644744873
    5. '	c' → logprob: -16.383617401123047
    6. ')c' → logprob: -16.758617401123047
    7. ')' → logprob: -18.383617401123047
    8. '    ' → logprob: -18.383617401123047
    9. '            ' → logprob: -18.508617401123047
    10. '        ' → logprob: -18.883617401123047

Token 76: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4742587208747864
    2. '!=' → logprob: -0.9742587208747864
    3. ' ' → logprob: -8.724258422851562
    4. ')!=' → logprob: -11.724258422851562
    5. '()!=' → logprob: -12.099258422851562
    6. ']!=' → logprob: -13.474258422851562
    7. '=' → logprob: -14.099258422851562
    8. ')' → logprob: -14.224258422851562
    9. '!==' → logprob: -14.599258422851562
    10. '!=(' → logprob: -15.099258422851562

Token 77: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.02060401625931263
    2. 'target' → logprob: -3.895604133605957
    3. ' ' → logprob: -9.895604133605957
    4. 'arget' → logprob: -12.770604133605957
    5. '(target' → logprob: -13.270604133605957
    6. ' ' → logprob: -13.270604133605957
    7. '	target' → logprob: -13.395604133605957
    8. '[target' → logprob: -13.645604133605957
    9. '_target' → logprob: -14.270604133605957
    10. ' t' → logprob: -14.270604133605957

Token 78: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -8.697387966094539e-05
    2. '_' → logprob: -9.375086784362793
    3. '_token' → logprob: -14.250086784362793
    4. '_c' → logprob: -14.250086784362793
    5. ' _' → logprob: -14.750086784362793
    6. '_COLOR' → logprob: -16.12508773803711
    7. 'color' → logprob: -17.00008773803711
    8. '_col' → logprob: -17.12508773803711
    9. '_co' → logprob: -17.37508773803711
    10. '_colors' → logprob: -17.50008773803711

Token 79: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. ' )' → logprob: -10.625028610229492
    3. ')
' → logprob: -12.625028610229492
    4. '       ' → logprob: -15.000028610229492
    5. ')return' → logprob: -15.875028610229492
    6. ')

' → logprob: -17.375028610229492
    7. '   ' → logprob: -17.375028610229492
    8. ' ' → logprob: -18.125028610229492
    9. '),' → logprob: -18.125028610229492
    10. ')}' → logprob: -18.125028610229492

Token 80: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.318006306886673
    2. 'class' → logprob: -1.3180062770843506
    3. '

' → logprob: -5.56800651550293
    4. ' class' → logprob: -8.06800651550293
    5. 'def' → logprob: -8.06800651550293
    6. '


' → logprob: -9.69300651550293
    7. '<|end|>' → logprob: -9.69300651550293
    8. '  
' → logprob: -10.44300651550293
    9. ' 
' → logprob: -10.44300651550293
    10. '    
' → logprob: -10.56800651550293

Token 81: ' Flag' (ID: 40343)
  Prédit: ' Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Flag' → logprob: -0.12798918783664703
    2. ' ' → logprob: -2.1279892921447754
    3. ' Flags' → logprob: -7.877989292144775
    4. ' ' → logprob: -8.627988815307617
    5. ' Space' → logprob: -9.252988815307617
    6. ' flag' → logprob: -9.877988815307617
    7. 'Flag' → logprob: -9.877988815307617
    8. ' Stripe' → logprob: -10.002988815307617
    9. ' Block' → logprob: -10.627988815307617
    10. ' Color' → logprob: -10.752988815307617

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012795452028512955
    2. ':
' → logprob: -5.137795448303223
    3. 'Color' → logprob: -5.512795448303223
    4. 'Painter' → logprob: -7.137795448303223
    5. 'Stripe' → logprob: -8.387795448303223
    6. 'Colors' → logprob: -8.387795448303223
    7. '<Color' → logprob: -8.512795448303223
    8. '<|end|>' → logprob: -8.512795448303223
    9. 'Type' → logprob: -9.012795448303223
    10. 'Design' → logprob: -9.137795448303223

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002918757265433669
    2. ' def' → logprob: -6.127918720245361
    3. 'def' → logprob: -7.252918720245361
    4. '   ' → logprob: -11.75291919708252
    5. ':' → logprob: -11.87791919708252
    6. ')' → logprob: -13.25291919708252
    7. '	def' → logprob: -13.25291919708252
    8. '```' → logprob: -13.25291919708252
    9. ',' → logprob: -14.37791919708252
    10. '  ' → logprob: -14.37791919708252

Token 84: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5759711265563965
    2. ' def' → logprob: -0.8259711265563965
    3. '   ' → logprob: -10.575971603393555
    4. '```' → logprob: -12.950971603393555
    5. '__' → logprob: -13.950971603393555
    6. ' ' → logprob: -14.325971603393555
    7. '	def' → logprob: -14.325971603393555
    8. 'class' → logprob: -14.825971603393555
    9. 'rows' → logprob: -15.700971603393555
    10. ':def' → logprob: -15.950971603393555

Token 85: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005500787403434515
    2. ' init' → logprob: -5.755500793457031
    3. ' _' → logprob: -6.380500793457031
    4. ' def' → logprob: -8.130500793457031
    5. '_init' → logprob: -9.005500793457031
    6. '__' → logprob: -9.380500793457031
    7. ' ' → logprob: -10.005500793457031
    8. ' ```' → logprob: -11.130500793457031
    9. 'itialize' → logprob: -11.130500793457031
    10. 'init' → logprob: -11.380500793457031

Token 86: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005328982137143612
    2. 'it' → logprob: -5.880329132080078
    3. '   ' → logprob: -7.005329132080078
    4. 'def' → logprob: -7.630329132080078
    5. '__' → logprob: -7.880329132080078
    6. 'i' → logprob: -8.380329132080078
    7. '_init' → logprob: -8.755329132080078
    8. ' init' → logprob: -9.005329132080078
    9. '```' → logprob: -9.255329132080078
    10. ' __' → logprob: -10.380329132080078

Token 87: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6164904236793518
    2. '(self' → logprob: -1.116490364074707
    3. ' (' → logprob: -2.491490364074707
    4. '__(' → logprob: -3.116490364074707
    5. '<|end|>' → logprob: -5.991490364074707
    6. 'self' → logprob: -6.866490364074707
    7. ',' → logprob: -7.241490364074707
    8. '_(' → logprob: -7.741490364074707
    9. ' self' → logprob: -8.866490364074707
    10. '__(
' → logprob: -8.991490364074707

Token 88: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004119242075830698
    2. ' self' → logprob: -5.504119396209717
    3. 'rows' → logprob: -11.129118919372559
    4. '       ' → logprob: -11.379118919372559
    5. '   ' → logprob: -11.879118919372559
    6. ')' → logprob: -13.254118919372559
    7. 'colors' → logprob: -13.254118919372559
    8. '
' → logprob: -13.504118919372559
    9. ' ' → logprob: -13.879118919372559
    10. ',' → logprob: -14.879118919372559

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011090504936873913
    2. '_colors' → logprob: -5.136090278625488
    3. ' ,' → logprob: -5.386090278625488
    4. '_,' → logprob: -8.386090278625488
    5. 'self' → logprob: -8.761090278625488
    6. 'colors' → logprob: -10.011090278625488
    7. ',
' → logprob: -10.011090278625488
    8. '(colors' → logprob: -11.011090278625488
    9. '_' → logprob: -11.136090278625488
    10. ')' → logprob: -11.386090278625488

Token 90: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.4276675879955292
    2. 'rows' → logprob: -1.4276676177978516
    3. ' self' → logprob: -2.5526676177978516
    4. 'self' → logprob: -3.6776676177978516
    5. ' flag' → logprob: -6.177667617797852
    6. '   ' → logprob: -7.302667617797852
    7. ' colors' → logprob: -7.552667617797852
    8. ' n' → logprob: -8.052667617797852
    9. ' ' → logprob: -8.177667617797852
    10. 'flag' → logprob: -8.427667617797852

Token 91: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5715867280960083
    2. ':' → logprob: -1.0715867280960083
    3. ',' → logprob: -2.4465866088867188
    4. '):
' → logprob: -5.446586608886719
    5. ')' → logprob: -7.071586608886719
    6. '   ' → logprob: -7.821586608886719
    7. ' ):' → logprob: -8.446586608886719
    8. ' :' → logprob: -9.446586608886719
    9. ':list' → logprob: -9.446586608886719
    10. ' ,' → logprob: -9.571586608886719

Token 92: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.40041807293891907
    2. 'List' → logprob: -2.1504180431365967
    3. ' List' → logprob: -2.7754180431365967
    4. 'list' → logprob: -2.9004180431365967
    5. ')' → logprob: -3.0254180431365967
    6. ' ['' → logprob: -4.275418281555176
    7. ' [' → logprob: -4.775418281555176
    8. '[str' → logprob: -5.525418281555176
    9. ' )' → logprob: -5.650418281555176
    10. '[List' → logprob: -5.775418281555176

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26644277572631836
    2. '):' → logprob: -2.1414427757263184
    3. '[str' → logprob: -2.2664427757263184
    4. '):
' → logprob: -4.516442775726318
    5. ')' → logprob: -7.141442775726318
    6. '[int' → logprob: -7.641442775726318
    7. ':' → logprob: -8.891443252563477
    8. ' ):' → logprob: -9.016443252563477
    9. ' ' → logprob: -9.516443252563477
    10. '   ' → logprob: -10.141443252563477

Token 94: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -9.353008499601856e-05
    2. 'str' → logprob: -10.000093460083008
    3. ' Flag' → logprob: -10.000093460083008
    4. '   ' → logprob: -13.500093460083008
    5. 'flag' → logprob: -14.750093460083008
    6. 'Str' → logprob: -15.375093460083008
    7. ' str' → logprob: -16.000093460083008
    8. ' ' → logprob: -16.250093460083008
    9. '[str' → logprob: -16.250093460083008
    10. '.Flag' → logprob: -16.750093460083008

Token 95: 'Row' (ID: 5513)
  Prédit: 'Row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Row' → logprob: -5.676981345459353e-06
    2. 'Color' → logprob: -12.125005722045898
    3. 'row' → logprob: -16.5000057220459
    4. '<Row' → logprob: -17.0000057220459
    5. '_Row' → logprob: -18.6250057220459
    6. 'Rows' → logprob: -18.7500057220459
    7. 'R' → logprob: -19.0000057220459
    8. '_row' → logprob: -19.2500057220459
    9. ' Row' → logprob: -20.0000057220459
    10. '   ' → logprob: -20.1250057220459

Token 96: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.04422038421034813
    2. ']' → logprob: -3.544220447540283
    3. '])' → logprob: -4.669220447540283
    4. ']):
' → logprob: -5.419220447540283
    5. ')' → logprob: -8.169219970703125
    6. '):' → logprob: -8.669219970703125
    7. ']:' → logprob: -9.794219970703125
    8. ' ]' → logprob: -11.044219970703125
    9. '>):' → logprob: -12.044219970703125
    10. ']>' → logprob: -12.169219970703125

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033581978641450405
    2. 'self' → logprob: -8.625335693359375
    3. '   ' → logprob: -9.250335693359375
    4. ' self' → logprob: -9.875335693359375
    5. ',' → logprob: -12.750335693359375
    6. '<|end|>' → logprob: -13.250335693359375
    7. '	self' → logprob: -14.125335693359375
    8. '```' → logprob: -14.625335693359375
    9. '):
' → logprob: -14.875335693359375
    10. ' ' → logprob: -15.000335693359375

Token 98: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3063969314098358
    2. ' self' → logprob: -1.8063969612121582
    3. '       ' → logprob: -2.306396961212158
    4. '   ' → logprob: -10.556396484375
    5. '	self' → logprob: -11.431396484375
    6. ' ' → logprob: -12.806396484375
    7. ' ' → logprob: -14.806396484375
    8. '(self' → logprob: -15.431396484375
    9. '	' → logprob: -15.806396484375
    10. '```' → logprob: -15.806396484375

Token 99: '.rows' (ID: 41542)
  Prédit: '.rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.00016563729150220752
    2. '.' → logprob: -9.000165939331055
    3. 'rows' → logprob: -11.250165939331055
    4. ' .' → logprob: -11.625165939331055
    5. '	rows' → logprob: -11.875165939331055
    6. '.lines' → logprob: -12.375165939331055
    7. '.columns' → logprob: -13.625165939331055
    8. '.entries' → logprob: -13.750165939331055
    9. '.Rows' → logprob: -14.250165939331055
    10. '.layers' → logprob: -14.250165939331055

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16047748923301697
    2. '=' → logprob: -1.9104775190353394
    3. '.' → logprob: -9.285477638244629
    4. '.extend' → logprob: -9.285477638244629
    5. '<|end|>' → logprob: -11.160477638244629
    6. '.append' → logprob: -11.410477638244629
    7. ')' → logprob: -11.535477638244629
    8. ' ' → logprob: -12.035477638244629
    9. '_' → logprob: -12.285477638244629
    10. '=[]' → logprob: -12.285477638244629

Token 101: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.3868771195411682
    2. ' rows' → logprob: -1.1368770599365234
    3. '	rows' → logprob: -12.261877059936523
    4. '(rows' → logprob: -14.386877059936523
    5. ' ' → logprob: -15.136877059936523
    6. '   ' → logprob: -16.136877059936523
    7. '_rows' → logprob: -16.261877059936523
    8. '[' → logprob: -16.886877059936523
    9. '.rows' → logprob: -17.011877059936523
    10. '[]' → logprob: -17.136877059936523

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8478915691375732
    2. '<|end|>' → logprob: -0.8478915691375732
    3. '
' → logprob: -2.0978915691375732
    4. '<|end|>' → logprob: -4.347891807556152
    5. 'def' → logprob: -5.347891807556152
    6. ' def' → logprob: -6.722891807556152
    7. '    
' → logprob: -6.972891807556152
    8. '

' → logprob: -8.472891807556152
    9. ' ' → logprob: -8.722891807556152
    10. '```' → logprob: -8.722891807556152

Token 103: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008243273943662643
    2. '
' → logprob: -5.508243083953857
    3. 'def' → logprob: -6.008243083953857
    4. ' def' → logprob: -7.258243083953857
    5. '    
' → logprob: -7.758243083953857
    6. '<|end|>' → logprob: -7.883243083953857
    7. '       ' → logprob: -9.508243560791016
    8. '        
' → logprob: -9.758243560791016
    9. '<|end|>' → logprob: -10.383243560791016
    10. '	def' → logprob: -12.133243560791016

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07732553035020828
    2. ' self' → logprob: -2.8273255825042725
    3. '       ' → logprob: -4.702325344085693
    4. 'def' → logprob: -5.577325344085693
    5. '   ' → logprob: -6.202325344085693
    6. '
' → logprob: -8.202325820922852
    7. ' ' → logprob: -10.702325820922852
    8. ' def' → logprob: -11.077325820922852
    9. '	self' → logprob: -11.952325820922852
    10. '  ' → logprob: -12.077325820922852

Token 105: '.N' (ID: 4439)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.7933915853500366
    2. '_length' → logprob: -1.5433915853500366
    3. ' .' → logprob: -2.043391704559326
    4. '.' → logprob: -2.043391704559326
    5. 'length' → logprob: -4.043391704559326
    6. '._' → logprob: -4.293391704559326
    7. '_count' → logprob: -4.543391704559326
    8. ' =' → logprob: -5.043391704559326
    9. '   ' → logprob: -5.168391704559326
    10. '.size' → logprob: -5.918391704559326

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5254682302474976
    2. ' =' → logprob: -0.9004682302474976
    3. '_' → logprob: -6.150468349456787
    4. ' ' → logprob: -9.650467872619629
    5. '   ' → logprob: -9.650467872619629
    6. '<|end|>' → logprob: -10.525467872619629
    7. ',' → logprob: -11.525467872619629
    8. '_=' → logprob: -11.775467872619629
    9. '=int' → logprob: -12.150467872619629
    10. '=len' → logprob: -12.275467872619629

Token 107: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.048587825149297714
    2. 'len' → logprob: -3.0485877990722656
    3. '(len' → logprob: -15.298587799072266
    4. '=len' → logprob: -15.923587799072266
    5. '	len' → logprob: -16.673587799072266
    6. '[len' → logprob: -17.548587799072266
    7. ',len' → logprob: -19.048587799072266
    8. ' ' → logprob: -20.298587799072266
    9. '<len' → logprob: -20.923587799072266
    10. '<|end|>' → logprob: -21.048587799072266

Token 108: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.0008116515236906707
    2. '(self' → logprob: -7.250811576843262
    3. '(' → logprob: -9.375811576843262
    4. 'rows' → logprob: -11.000811576843262
    5. '(
' → logprob: -16.500812530517578
    6. ' rows' → logprob: -16.750812530517578
    7. '	rows' → logprob: -16.750812530517578
    8. 'self' → logprob: -16.875812530517578
    9. '(row' → logprob: -17.000812530517578
    10. '(lines' → logprob: -17.250812530517578

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014728360110893846
    2. ')
' → logprob: -9.375146865844727
    3. '<|end|>' → logprob: -10.375146865844727
    4. ' )' → logprob: -10.875146865844727
    5. '   ' → logprob: -12.000146865844727
    6. '<|end|>' → logprob: -12.625146865844727
    7. '       ' → logprob: -13.250146865844727
    8. ' ' → logprob: -15.500146865844727
    9. '}' → logprob: -15.750146865844727
    10. '
' → logprob: -16.125146865844727

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01401529461145401
    2. 'def' → logprob: -4.514015197753906
    3. ' def' → logprob: -6.764015197753906
    4. '<|end|>' → logprob: -6.764015197753906
    5. '
' → logprob: -8.014015197753906
    6. '    
' → logprob: -9.264015197753906
    7. '```' → logprob: -9.514015197753906
    8. ' ' → logprob: -9.889015197753906
    9. '       ' → logprob: -10.139015197753906
    10. '<|end|>' → logprob: -10.639015197753906

Token 111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05090395361185074
    2. ' self' → logprob: -3.4259040355682373
    3. '       ' → logprob: -4.800903797149658
    4. '   ' → logprob: -4.925903797149658
    5. 'def' → logprob: -6.925903797149658
    6. ' ' → logprob: -8.675904273986816
    7. '
' → logprob: -8.800904273986816
    8. 'from' → logprob: -9.800904273986816
    9. '  ' → logprob: -10.050904273986816
    10. '	self' → logprob: -10.425904273986816

Token 112: '.M' (ID: 2015)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17266321182250977
    2. '.M' → logprob: -1.9226632118225098
    3. ' .' → logprob: -5.42266321182251
    4. '.K' → logprob: -6.29766321182251
    5. '.length' → logprob: -6.54766321182251
    6. '.L' → logprob: -7.29766321182251
    7. '.D' → logprob: -7.29766321182251
    8. '.B' → logprob: -7.92266321182251
    9. '.width' → logprob: -7.92266321182251
    10. '.N' → logprob: -8.172662734985352

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934364438056946
    2. ' =' → logprob: -0.6934364438056946
    3. '<|end|>' → logprob: -8.193436622619629
    4. ' ' → logprob: -11.568436622619629
    5. '=len' → logprob: -13.818436622619629
    6. ')' → logprob: -13.943436622619629
    7. '<|end|>' → logprob: -14.193436622619629
    8. '=int' → logprob: -16.318435668945312
    9. ' ' → logprob: -16.443435668945312
    10. '=[]' → logprob: -16.818435668945312

Token 114: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.014718214981257915
    2. 'len' → logprob: -5.264718055725098
    3. ' rows' → logprob: -5.389718055725098
    4. 'self' → logprob: -5.389718055725098
    5. ' len' → logprob: -8.514718055725098
    6. ' self' → logprob: -9.139718055725098
    7. '(rows' → logprob: -13.639718055725098
    8. '   ' → logprob: -13.764718055725098
    9. '	rows' → logprob: -13.764718055725098
    10. ' ' → logprob: -15.014718055725098

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. '.' → logprob: -17.125
    4. '0' → logprob: -17.375
    5. ' [' → logprob: -17.5
    6. '[-' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. '\[' → logprob: -18.75
    9. 'and' → logprob: -19.125
    10. ' ' → logprob: -19.375

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.000028610229492
    4. '.' → logprob: -15.500028610229492
    5. '[' → logprob: -15.500028610229492
    6. 'rows' → logprob: -16.625028610229492
    7. ']' → logprob: -16.750028610229492
    8. 's' → logprob: -16.875028610229492
    9. '-' → logprob: -17.125028610229492
    10. '(' → logprob: -17.187528610229492

Token 117: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.39838364720344543
    2. '.length' → logprob: -1.273383617401123
    3. '.' → logprob: -3.648383617401123
    4. ').' → logprob: -4.023383617401123
    5. '}.' → logprob: -6.023383617401123
    6. '.colors' → logprob: -7.523383617401123
    7. '.color' → logprob: -7.523383617401123
    8. '.size' → logprob: -7.648383617401123
    9. '.width' → logprob: -9.398384094238281
    10. '.characters' → logprob: -9.398384094238281

Token 118: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -5.9153885558771435e-06
    2. ' length' → logprob: -12.625005722045898
    3. 'colors' → logprob: -13.000005722045898
    4. 'len' → logprob: -16.0000057220459
    5. 'leng' → logprob: -16.2500057220459
    6. ' ' → logprob: -18.3750057220459
    7. 'color' → logprob: -20.0000057220459
    8. '.length' → logprob: -20.2500057220459
    9. '	length' → logprob: -20.2500057220459
    10. 'Length' → logprob: -20.3750057220459

Token 119: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4070228636264801
    2. '<|end|>' → logprob: -1.4070228338241577
    3. 'def' → logprob: -2.7820229530334473
    4. ' def' → logprob: -4.532022953033447
    5. '   ' → logprob: -4.782022953033447
    6. '<|end|>' → logprob: -5.407022953033447
    7. '

' → logprob: -5.907022953033447
    8. '	def' → logprob: -7.907022953033447
    9. '```' → logprob: -8.032022476196289
    10. '    
' → logprob: -8.407022476196289

Token 120: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7126466035842896
    2. 'rows' → logprob: -0.7126466035842896
    3. ' self' → logprob: -4.337646484375
    4. ' rows' → logprob: -5.087646484375
    5. '   ' → logprob: -10.087646484375
    6. '       ' → logprob: -11.587646484375
    7. '(rows' → logprob: -12.212646484375
    8. '	rows' → logprob: -12.462646484375
    9. '(self' → logprob: -12.837646484375
    10. ' ' → logprob: -13.212646484375

Token 121: '.N' (ID: 4439)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.09659896790981293
    2. '.N' → logprob: -2.7215988636016846
    3. 'rows' → logprob: -4.221599102020264
    4. '.M' → logprob: -4.471599102020264
    5. '.' → logprob: -8.846598625183105
    6. 'N' → logprob: -10.721598625183105
    7. ' rows' → logprob: -10.971598625183105
    8. '	rows' → logprob: -12.471598625183105
    9. 'self' → logprob: -12.596598625183105
    10. '.Rows' → logprob: -12.846598625183105

Token 122: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38873252272605896
    2. ' >' → logprob: -1.1387325525283813
    3. ' else' → logprob: -6.888732433319092
    4. 'else' → logprob: -7.513732433319092
    5. '<|end|>' → logprob: -8.38873291015625
    6. ' ' → logprob: -10.26373291015625
    7. ' ' → logprob: -11.51373291015625
    8. '<|end|>' → logprob: -11.88873291015625
    9. '()>' → logprob: -12.51373291015625
    10. '&gt' → logprob: -12.63873291015625

Token 123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007608397863805294
    2. ' ' → logprob: -4.882608413696289
    3. '>' → logprob: -13.507608413696289
    4. '   ' → logprob: -15.507608413696289
    5. '

' → logprob: -15.632608413696289
    6. ' ' → logprob: -15.632608413696289
    7. '  ' → logprob: -16.32010841369629
    8. '=' → logprob: -16.57010841369629
    9. '۰' → logprob: -16.63260841369629
    10. '
' → logprob: -16.69510841369629

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024763736873865128
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.002476692199707
    4. '>' → logprob: -16.12747573852539
    5. '  ' → logprob: -16.12747573852539
    6. ' ' → logprob: -17.06497573852539
    7. '```' → logprob: -17.12747573852539
    8. '۰' → logprob: -17.25247573852539
    9. '    ' → logprob: -17.68997573852539
    10. '1' → logprob: -18.06497573852539

Token 125: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00317783304490149
    2. 'else' → logprob: -5.753177642822266
    3. ' ' → logprob: -16.128177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '	else' → logprob: -17.503177642822266
    6. '>' → logprob: -17.628177642822266
    7. '<|end|>' → logprob: -18.878177642822266
    8. ' is' → logprob: -19.378177642822266
    9. '_else' → logprob: -20.378177642822266
    10. '    ' → logprob: -20.628177642822266

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -14.87523078918457
    4. '  ' → logprob: -17.87523078918457
    5. ' ' → logprob: -18.00023078918457
    6. '۰' → logprob: -18.50023078918457
    7. '    ' → logprob: -18.62523078918457
    8. '
' → logprob: -19.50023078918457
    9. '０' → logprob: -19.93773078918457
    10. '```' → logprob: -20.25023078918457

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.000009536743164
    4. '۰' → logprob: -19.750009536743164
    5. '  ' → logprob: -20.500009536743164
    6. ' ' → logprob: -20.750009536743164
    7. '```' → logprob: -21.125009536743164
    8. '０' → logprob: -21.125009536743164
    9. '    ' → logprob: -21.500009536743164
    10. '00' → logprob: -21.562509536743164

Token 128: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04885055124759674
    2. '   ' → logprob: -3.9238505363464355
    3. 'def' → logprob: -4.2988505363464355
    4. '<|end|>' → logprob: -4.5488505363464355
    5. ' def' → logprob: -6.0488505363464355
    6. '

' → logprob: -6.9238505363464355
    7. '<|end|>' → logprob: -8.548851013183594
    8. '    
' → logprob: -8.798851013183594
    9. '	def' → logprob: -10.548851013183594
    10. '  
' → logprob: -11.548851013183594

Token 129: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6453261971473694
    2. 'def' → logprob: -1.2703261375427246
    3. '   ' → logprob: -1.7703261375427246
    4. ' def' → logprob: -3.8953261375427246
    5. '<|end|>' → logprob: -5.895326137542725
    6. '    
' → logprob: -7.145326137542725
    7. '

' → logprob: -7.770326137542725
    8. '<|end|>' → logprob: -10.020326614379883
    9. '	def' → logprob: -10.145326614379883
    10. '  
' → logprob: -10.395326614379883

Token 130: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.4153549020411447e-05
    2. ' def' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.37502384185791
    4. '
' → logprob: -14.37502384185791
    5. 'from' → logprob: -14.62502384185791
    6. '    
' → logprob: -18.625024795532227
    7. '	def' → logprob: -18.625024795532227
    8. 'import' → logprob: -18.750024795532227
    9. 'de' → logprob: -19.750024795532227
    10. ' ' → logprob: -20.125024795532227

Token 131: ' min' (ID: 1349)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.9860658049583435
    2. ' repaint' → logprob: -1.4860658645629883
    3. 'min' → logprob: -1.8610658645629883
    4. ' minimum' → logprob: -2.4860658645629883
    5. ' min' → logprob: -2.7360658645629883
    6. '_min' → logprob: -3.7360658645629883
    7. 're' → logprob: -3.8610658645629883
    8. ' minimize' → logprob: -3.9860658645629883
    9. 'minimum' → logprob: -4.611065864562988
    10. 'minimal' → logprob: -4.861065864562988

Token 132: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.5307396650314331
    2. '_' → logprob: -1.530739665031433
    3. '_p' → logprob: -1.780739665031433
    4. '_cost' → logprob: -3.6557397842407227
    5. '_rep' → logprob: -7.155739784240723
    6. '_color' → logprob: -9.655739784240723
    7. '_total' → logprob: -10.030739784240723
    8. 'imum' → logprob: -10.280739784240723
    9. '_flag' → logprob: -10.405739784240723
    10. 'imal' → logprob: -10.780739784240723

Token 133: 'painting' (ID: 168134)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.000867156486492604
    2. 'pain' → logprob: -8.000866889953613
    3. 'pa' → logprob: -8.125866889953613
    4. 'p' → logprob: -9.500866889953613
    5. '_p' → logprob: -9.750866889953613
    6. 'pair' → logprob: -10.125866889953613
    7. 'painting' → logprob: -10.750866889953613
    8. 'color' → logprob: -11.125866889953613
    9. '.paint' → logprob: -12.375866889953613
    10. 'place' → logprob: -12.750866889953613

Token 134: '_to' (ID: 5089)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.500017166137695
    3. '```' → logprob: -13.250017166137695
    4. '_count' → logprob: -13.750017166137695
    5. '_steps' → logprob: -14.250017166137695
    6. '_code' → logprob: -14.875017166137695
    7. '_needed' → logprob: -15.125017166137695
    8. '_score' → logprob: -15.125017166137695
    9. '_for' → logprob: -15.250017166137695
    10. '_COST' → logprob: -15.500017166137695

Token 135: '_r' (ID: 3442)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.4170678853988647
    2. '_' → logprob: -1.9170678853988647
    3. '_make' → logprob: -1.9170678853988647
    4. '_flag' → logprob: -2.0420680046081543
    5. '_white' → logprob: -2.0420680046081543
    6. '_uniform' → logprob: -2.9170680046081543
    7. '_three' → logprob: -3.9170680046081543
    8. '_correct' → logprob: -4.542068004608154
    9. '_color' → logprob: -4.542068004608154
    10. '_tr' → logprob: -4.542068004608154

Token 136: 'ussian' (ID: 28810)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.056535765528678894
    2. 'ow' → logprob: -3.8065357208251953
    3. 'ead' → logprob: -4.931535720825195
    4. 'e' → logprob: -5.056535720825195
    5. 'each' → logprob: -5.181535720825195
    6. 'aise' → logprob: -5.931535720825195
    7. 'ep' → logprob: -6.056535720825195
    8. 'ows' → logprob: -7.056535720825195
    9. 'eg' → logprob: -7.306535720825195
    10. 'ec' → logprob: -7.306535720825195

Token 137: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.07300063967704773
    2. 'flag' → logprob: -2.82300066947937
    3. '_' → logprob: -5.198000431060791
    4. '()' → logprob: -6.073000431060791
    5. '_f' → logprob: -6.698000431060791
    6. '_fl' → logprob: -7.573000431060791
    7. '```' → logprob: -8.07300090789795
    8. '():' → logprob: -8.44800090789795
    9. 'fl' → logprob: -8.82300090789795
    10. '(' → logprob: -9.07300090789795

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011790355201810598
    2. '(' → logprob: -6.751179218292236
    3. ' (' → logprob: -12.376178741455078
    4. 'self' → logprob: -13.001178741455078
    5. '(s' → logprob: -13.751178741455078
    6. '():' → logprob: -15.251178741455078
    7. '_(' → logprob: -15.501178741455078
    8. '   ' → logprob: -15.626178741455078
    9. '(
' → logprob: -15.751178741455078
    10. 's' → logprob: -16.001178741455078

Token 139: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0023701780010014772
    2. '):' → logprob: -7.127370357513428
    3. ')(' → logprob: -7.752370357513428
    4. '):
' → logprob: -7.877370357513428
    5. '   ' → logprob: -8.37736988067627
    6. 'self' → logprob: -8.62736988067627
    7. ' (' → logprob: -8.75236988067627
    8. ')' → logprob: -9.37736988067627
    9. '       ' → logprob: -9.75236988067627
    10. ' ' → logprob: -11.62736988067627

Token 140: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005221663508564234
    2. '(' → logprob: -5.380221843719482
    3. ':' → logprob: -7.505221843719482
    4. 'self' → logprob: -10.630221366882324
    5. '(s' → logprob: -11.630221366882324
    6. '():' → logprob: -12.005221366882324
    7. ' (' → logprob: -12.755221366882324
    8. '(
' → logprob: -13.130221366882324
    9. '   ' → logprob: -13.255221366882324
    10. ':self' → logprob: -13.755221366882324

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0889458954334259
    2. ' int' → logprob: -2.4639458656311035
    3. '   ' → logprob: -12.963946342468262
    4. ':int' → logprob: -13.963946342468262
    5. '[int' → logprob: -14.088946342468262
    6. '(int' → logprob: -14.213946342468262
    7. '	int' → logprob: -15.088946342468262
    8. 'None' → logprob: -15.463946342468262
    9. ']int' → logprob: -15.588946342468262
    10. '```' → logprob: -15.713946342468262

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20868274569511414
    2. '(self' → logprob: -1.7086827754974365
    3. ':
' → logprob: -5.333682537078857
    4. '(' → logprob: -6.708682537078857
    5. '       ' → logprob: -7.958682537078857
    6. '):' → logprob: -8.083683013916016
    7. '(
' → logprob: -8.458683013916016
    8. 'self' → logprob: -9.208683013916016
    9. '   ' → logprob: -9.583683013916016
    10. ':self' → logprob: -9.958683013916016

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007044629193842411
    2. ' cost' → logprob: -5.507044792175293
    3. ' min' → logprob: -6.882044792175293
    4. '   ' → logprob: -7.632044792175293
    5. 'cost' → logprob: -7.757044792175293
    6. ' total' → logprob: -8.132044792175293
    7. ' dp' → logprob: -8.382044792175293
    8. ' costs' → logprob: -8.632044792175293
    9. 'min' → logprob: -9.257044792175293
    10. '```' → logprob: -9.632044792175293

Token 144: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.36822018027305603
    2. 'dp' → logprob: -1.3682202100753784
    3. 'INF' → logprob: -3.743220090866089
    4. '       ' → logprob: -4.743220329284668
    5. 'cost' → logprob: -5.118220329284668
    6. 'import' → logprob: -5.243220329284668
    7. 'inf' → logprob: -5.618220329284668
    8. '#' (adapté à ' #') → logprob: -5.993220329284668
    9. 'best' → logprob: -6.368220329284668
    10. ' min' → logprob: -7.243220329284668

Token 145: ' We' (ID: 1416)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5915874242782593
    2. ' min' → logprob: -1.3415874242782593
    3. 'cost' → logprob: -2.841587543487549
    4. 'dp' → logprob: -3.466587543487549
    5. 'best' → logprob: -4.091587543487549
    6. ' best' → logprob: -4.216587543487549
    7. '#' → logprob: -4.466587543487549
    8. 'result' → logprob: -4.841587543487549
    9. ' cost' → logprob: -5.091587543487549
    10. ' total' → logprob: -5.591587543487549

Token 146: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.153804063796997
    2. ' n' → logprob: -1.778804063796997
    3. '   ' → logprob: -2.153804063796997
    4. ' min' → logprob: -2.528804063796997
    5. ' best' → logprob: -2.778804063796997
    6. ' #' → logprob: -2.903804063796997
    7. ' import' → logprob: -3.528804063796997
    8. ' if' → logprob: -3.528804063796997
    9. 'n' → logprob: -3.903804063796997
    10. ' can' → logprob: -4.278803825378418

Token 147: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3184612989425659
    2. 'to' → logprob: -1.568461298942566
    3. '   ' → logprob: -3.9434614181518555
    4. '       ' → logprob: -4.0684614181518555
    5. ' at' → logprob: -4.5684614181518555
    6. ' three' → logprob: -4.8184614181518555
    7. ' ' → logprob: -6.0684614181518555
    8. 'at' → logprob: -6.8184614181518555
    9. ' a' → logprob: -6.9434614181518555
    10. 'total' → logprob: -7.3184614181518555

Token 148: ' partition' (ID: 31512)
  Prédit: ' repaint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' repaint' → logprob: -0.156747505068779
    2. ' paint' → logprob: -2.281747579574585
    3. ' ensure' → logprob: -4.031747341156006
    4. 'paint' → logprob: -4.406747341156006
    5. 'min' → logprob: -5.781747341156006
    6. ' minimize' → logprob: -6.281747341156006
    7. ' min' → logprob: -6.531747341156006
    8. ' color' → logprob: -6.906747341156006
    9. 're' → logprob: -7.031747341156006
    10. ' keep' → logprob: -7.031747341156006

Token 149: ' rows' (ID: 13585)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0902554988861084
    2. 'the' → logprob: -2.9652554988861084
    3. 'self' → logprob: -3.7152554988861084
    4. ' self' → logprob: -4.7152557373046875
    5. 'rows' → logprob: -7.5902557373046875
    6. ' into' → logprob: -8.215255737304688
    7. ' rows' → logprob: -8.340255737304688
    8. ' at' → logprob: -8.965255737304688
    9. ' three' → logprob: -9.090255737304688
    10. '       ' → logprob: -9.590255737304688

Token 150: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.059604156762361526
    2. 'into' → logprob: -2.9346041679382324
    3. '       ' → logprob: -6.934604167938232
    4. ',' → logprob: -7.434604167938232
    5. '```' → logprob: -7.684604167938232
    6. ' between' → logprob: -7.684604167938232
    7. ' ' → logprob: -7.809604167938232
    8. '   ' → logprob: -8.059603691101074
    9. '[' → logprob: -8.309603691101074
    10. '<|end|>' → logprob: -8.559603691101074

Token 151: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.3264753818511963
    2. '3' → logprob: -2.0764753818511963
    3. ' three' → logprob: -2.2014753818511963
    4. 'at' → logprob: -4.076475143432617
    5. 'white' → logprob: -4.201475143432617
    6. ' at' → logprob: -4.951475143432617
    7. ' ' → logprob: -6.701475143432617
    8. ' white' → logprob: -6.951475143432617
    9. 'WHITE' → logprob: -7.826475143432617
    10. '[' → logprob: -8.201475143432617

Token 152: ' contiguous' (ID: 130997)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7114853262901306
    2. ' parts' → logprob: -1.5864853858947754
    3. 'segments' → logprob: -1.8364853858947754
    4. ' contiguous' → logprob: -2.7114853858947754
    5. ' sections' → logprob: -3.7114853858947754
    6. 'parts' → logprob: -3.8364853858947754
    7. 'sections' → logprob: -4.211485385894775
    8. 'groups' → logprob: -5.461485385894775
    9. ' continuous' → logprob: -5.586485385894775
    10. ' groups' → logprob: -5.711485385894775

Token 153: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.4797457456588745
    2. 'segments' → logprob: -1.1047457456588745
    3. ' parts' → logprob: -3.229745864868164
    4. 'parts' → logprob: -5.104745864868164
    5. 'sections' → logprob: -6.604745864868164
    6. ' sections' → logprob: -7.104745864868164
    7. 'groups' → logprob: -7.729745864868164
    8. 'regions' → logprob: -7.979745864868164
    9. '#' → logprob: -8.104745864868164
    10. ' regions' → logprob: -8.229745864868164

Token 154: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7306202054023743
    2. ':' → logprob: -1.2306201457977295
    3. ',' → logprob: -1.9806201457977295
    4. '<|end|>' → logprob: -2.7306201457977295
    5. '        
' → logprob: -5.730620384216309
    6. '   ' → logprob: -5.730620384216309
    7. ' for' → logprob: -5.855620384216309
    8. ' ' → logprob: -5.980620384216309
    9. ':
' → logprob: -6.105620384216309
    10. ' with' → logprob: -6.355620384216309

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0182616226375103
    2. '#' → logprob: -4.518261432647705
    3. '        
' → logprob: -6.393261432647705
    4. ' ' → logprob: -7.018261432647705
    5. '        ' → logprob: -7.143261432647705
    6. '[' → logprob: -7.643261432647705
    7. '   ' → logprob: -7.643261432647705
    8. ' n' → logprob: -7.768261432647705
    9. 'n' → logprob: -7.768261432647705
    10. '```' → logprob: -8.268261909484863

Token 156: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5811518430709839
    2. '       ' → logprob: -0.9561518430709839
    3. ' #' → logprob: -3.5811519622802734
    4. ' white' → logprob: -5.331151962280273
    5. 'result' → logprob: -5.331151962280273
    6. '   ' → logprob: -5.456151962280273
    7. 'white' → logprob: -6.206151962280273
    8. ' total' → logprob: -6.331151962280273
    9. 'cost' → logprob: -6.456151962280273
    10. 'total' → logprob: -6.456151962280273

Token 157: ' top' (ID: 2344)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5664849281311035
    2. '       ' → logprob: -1.4414849281311035
    3. 'result' → logprob: -2.9414849281311035
    4. 'min' → logprob: -3.4414849281311035
    5. 'cost' → logprob: -3.4414849281311035
    6. '   ' → logprob: -4.3164849281311035
    7. 'white' → logprob: -4.5664849281311035
    8. ' #' → logprob: -4.6914849281311035
    9. 'total' → logprob: -4.8164849281311035
    10. 'res' → logprob: -5.4414849281311035

Token 158: ' rows' (ID: 13585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6644002199172974
    2. '_white' → logprob: -1.4144002199172974
    3. '   ' → logprob: -2.289400100708008
    4. 'white' → logprob: -3.289400100708008
    5. ' white' → logprob: -3.414400100708008
    6. ',' → logprob: -4.539400100708008
    7. ' =' → logprob: -4.664400100708008
    8. '_length' → logprob: -5.289400100708008
    9. '_count' → logprob: -5.539400100708008
    10. ' (' → logprob: -5.664400100708008

Token 159: ' painted' (ID: 33842)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0651952028274536
    2. ' with' → logprob: -1.1901952028274536
    3. ' =' → logprob: -2.815195083618164
    4. '   ' → logprob: -3.065195083618164
    5. ' for' → logprob: -3.065195083618164
    6. ',' → logprob: -3.315195083618164
    7. ':' → logprob: -3.315195083618164
    8. 'with' → logprob: -3.565195083618164
    9. ' white' → logprob: -3.815195083618164
    10. ' (' → logprob: -3.940195083618164

Token 160: ' WHITE' (ID: 94026)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.5301918387413025
    2. ' in' → logprob: -2.0301918983459473
    3. ' with' → logprob: -2.2801918983459473
    4. 'in' → logprob: -3.0301918983459473
    5. 'with' → logprob: -3.0301918983459473
    6. 'white' → logprob: -3.1551918983459473
    7. ' as' → logprob: -4.155191898345947
    8. 'White' → logprob: -4.655191898345947
    9. 'as' → logprob: -5.280191898345947
    10. ' White' → logprob: -6.405191898345947

Token 161: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11423944681882858
    2. ',
' → logprob: -3.489239454269409
    3. '
' → logprob: -3.739239454269409
    4. '       ' → logprob: -3.739239454269409
    5. '<|end|>' → logprob: -4.36423921585083
    6. ' (' → logprob: -4.61423921585083
    7. ' ,' → logprob: -5.98923921585083
    8. '   ' → logprob: -6.86423921585083
    9. '<|end|>' → logprob: -7.73923921585083
    10. ' for' → logprob: -7.73923921585083

Token 162: '1' (ID: 16)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3035906255245209
    2. ')
' → logprob: -2.0535905361175537
    3. ')' → logprob: -2.6785905361175537
    4. ' for' → logprob: -4.303590774536133
    5. '),
' → logprob: -4.803590774536133
    6. 'for' → logprob: -5.053590774536133
    7. '#' → logprob: -5.178590774536133
    8. '0' → logprob: -5.428590774536133
    9. 'i' → logprob: -5.678590774536133
    10. ' i' → logprob: -5.928590774536133

Token 163: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9463023543357849
    2. ')
' → logprob: -0.9463023543357849
    3. '),' → logprob: -2.3213024139404297
    4. ' to' → logprob: -3.4463024139404297
    5. ',' → logprob: -3.8213024139404297
    6. '
' → logprob: -3.9463024139404297
    7. '),
' → logprob: -4.57130241394043
    8. 'to' → logprob: -5.07130241394043
    9. ' for' → logprob: -5.07130241394043
    10. '       ' → logprob: -5.69630241394043

Token 164: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.6426746249198914
    2. 'more' → logprob: -0.7676746249198914
    3. 'self' → logprob: -5.517674446105957
    4. '2' → logprob: -6.267674446105957
    5. ')' → logprob: -6.642674446105957
    6. '       ' → logprob: -7.267674446105957
    7. '...' → logprob: -8.142674446105957
    8. ' at' → logprob: -8.517674446105957
    9. '           ' → logprob: -8.642674446105957
    10. ' ' → logprob: -8.892674446105957

Token 165: ' rows' (ID: 13585)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1427195072174072
    2. '),' → logprob: -1.7677195072174072
    3. ' lines' → logprob: -1.7677195072174072
    4. 'rows' → logprob: -2.0177195072174072
    5. ' rows' → logprob: -2.1427195072174072
    6. ')
' → logprob: -3.0177195072174072
    7. '),
' → logprob: -3.6427195072174072
    8. 'lines' → logprob: -4.767719268798828
    9. ',' → logprob: -6.267719268798828
    10. ')

' → logprob: -6.767719268798828

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1135546937584877
    2. '),' → logprob: -2.8635547161102295
    3. ',' → logprob: -3.3635547161102295
    4. ')
' → logprob: -4.36355447769165
    5. '),
' → logprob: -6.61355447769165
    6. ',
' → logprob: -7.61355447769165
    7. '<|end|>' → logprob: -7.98855447769165
    8. '   ' → logprob: -8.363554954528809
    9. ' )' → logprob: -9.363554954528809
    10. ')

' → logprob: -9.863554954528809

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009312230162322521
    2. '#' → logprob: -4.759312152862549
    3. '   ' → logprob: -8.009312629699707
    4. '
' → logprob: -8.759312629699707
    5. ' #' → logprob: -9.134312629699707
    6. '        
' → logprob: -10.634312629699707
    7. '```' → logprob: -10.884312629699707
    8. '           ' → logprob: -11.634312629699707
    9. '      ' → logprob: -12.009312629699707
    10. 'middle' → logprob: -12.134312629699707

Token 168: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25559425354003906
    2. '#' (adapté à ' #') → logprob: -1.505594253540039
    3. ' #' → logprob: -6.255594253540039
    4. 'middle' → logprob: -7.130594253540039
    5. 'bottom' → logprob: -8.130594253540039
    6. ' middle' → logprob: -8.630594253540039
    7. '   ' → logprob: -8.880594253540039
    8. '
' → logprob: -8.880594253540039
    9. ' bottom' → logprob: -9.005594253540039
    10. '```' → logprob: -10.755594253540039

Token 169: ' middle' (ID: 10006)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.06925436109304428
    2. ' middle' → logprob: -2.9442543983459473
    3. '#' → logprob: -4.444254398345947
    4. '
' → logprob: -6.569254398345947
    5. '       ' → logprob: -6.944254398345947
    6. '   ' → logprob: -9.569253921508789
    7. 'bottom' → logprob: -9.944253921508789
    8. 'mid' → logprob: -11.444253921508789
    9. ' #' → logprob: -11.944253921508789
    10. ' ' → logprob: -12.819253921508789

Token 170: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.022086262702941895
    2. 'rows' → logprob: -3.8970861434936523
    3. '_rows' → logprob: -6.522086143493652
    4. '(rows' → logprob: -10.022086143493652
    5. '	rows' → logprob: -11.522086143493652
    6. ' ' → logprob: -11.897086143493652
    7. ' white' → logprob: -12.897086143493652
    8. ' ones' → logprob: -13.022086143493652
    9. 'row' → logprob: -13.897086143493652
    10. ' row' → logprob: -14.022086143493652

Token 171: ' painted' (ID: 33842)
  Prédit: ' painted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.05940680578351021
    2. 'paint' → logprob: -2.9344067573547363
    3. '   ' → logprob: -5.559406757354736
    4. ' ' → logprob: -8.809407234191895
    5. '       ' → logprob: -8.934407234191895
    6. ' rep' → logprob: -9.059407234191895
    7. ' colored' → logprob: -9.434407234191895
    8. '```' → logprob: -10.309407234191895
    9. ' repaint' → logprob: -11.059407234191895
    10. ' Painted' → logprob: -11.059407234191895

Token 172: ' BLUE' (ID: 110151)
  Prédit: 'BLUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLUE' → logprob: -0.12707823514938354
    2. ' BLUE' → logprob: -2.1270782947540283
    3. 'WHITE' → logprob: -9.50207805633545
    4. ' ' → logprob: -10.25207805633545
    5. '   ' → logprob: -11.25207805633545
    6. '.BLUE' → logprob: -11.62707805633545
    7. '```' → logprob: -11.87707805633545
    8. ' WHITE' → logprob: -12.37707805633545
    9. '  ' → logprob: -13.12707805633545
    10. 'RED' → logprob: -13.12707805633545

Token 173: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10384110361337662
    2. '       ' → logprob: -2.7288410663604736
    3. '
' → logprob: -3.9788410663604736
    4. '(' → logprob: -4.353841304779053
    5. '#' → logprob: -7.728841304779053
    6. '   ' → logprob: -7.728841304779053
    7. '        
' → logprob: -8.228840827941895
    8. ' #' → logprob: -9.353840827941895
    9. ' 
' → logprob: -9.728840827941895
    10. '  
' → logprob: -10.103840827941895

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04609948396682739
    2. ' at' → logprob: -3.5460994243621826
    3. ' ' → logprob: -4.546099662780762
    4. 'at' → logprob: -5.796099662780762
    5. ' one' → logprob: -6.046099662780762
    6. ')' → logprob: -9.421099662780762
    7. 'one' → logprob: -9.421099662780762
    8. ' (' → logprob: -11.296099662780762
    9. '
' → logprob: -12.296099662780762
    10. '   ' → logprob: -12.296099662780762

Token 175: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10028883814811707
    2. 'or' → logprob: -2.3502888679504395
    3. ')' → logprob: -9.475288391113281
    4. '<|end|>' → logprob: -13.475288391113281
    5. ' ' → logprob: -13.725288391113281
    6. '#' → logprob: -14.225288391113281
    7. '<|end|>' → logprob: -14.350288391113281
    8. ' )' → logprob: -14.975288391113281
    9. ',' → logprob: -15.100288391113281
    10. '   ' → logprob: -15.600288391113281

Token 176: ' more' (ID: 945)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4502483010292053
    2. ' more' → logprob: -1.9502482414245605
    3. 'more' → logprob: -1.9502482414245605
    4. ' or' → logprob: -3.3252482414245605
    5. 'one' → logprob: -4.0752482414245605
    6. ' one' → logprob: -4.3252482414245605
    7. 'or' → logprob: -5.0752482414245605
    8. ' ' → logprob: -5.4502482414245605
    9. ' at' → logprob: -7.9502482414245605
    10. 'at' → logprob: -8.575248718261719

Token 177: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.42901477217674255
    2. 'rows' → logprob: -1.054014801979065
    3. ')
' → logprob: -9.054015159606934
    4. ')' → logprob: -9.804015159606934
    5. ' or' → logprob: -9.804015159606934
    6. '_rows' → logprob: -10.554015159606934
    7. '	rows' → logprob: -11.054015159606934
    8. '(rows' → logprob: -11.429015159606934
    9. ' lines' → logprob: -11.554015159606934
    10. '#' → logprob: -12.304015159606934

Token 178: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08480016142129898
    2. ')' → logprob: -2.8348002433776855
    3. '       ' → logprob: -3.8348002433776855
    4. '#' → logprob: -7.2098002433776855
    5. '   ' → logprob: -8.709799766540527
    6. ',' → logprob: -10.959799766540527
    7. ')

' → logprob: -11.584799766540527
    8. ')
' → logprob: -11.709799766540527
    9. 'and' → logprob: -12.334799766540527
    10. '),' → logprob: -12.709799766540527

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014187601394951344
    2. '#' → logprob: -4.264187812805176
    3. '   ' → logprob: -11.264187812805176
    4. ' #' → logprob: -11.514187812805176
    5. '
' → logprob: -14.514187812805176
    6. '      ' → logprob: -15.014187812805176
    7. '           ' → logprob: -15.639187812805176
    8. '```' → logprob: -15.764187812805176
    9. ' ' → logprob: -16.26418685913086
    10. '     ' → logprob: -16.26418685913086

Token 180: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.25196465849876404
    2. '       ' → logprob: -1.5019646883010864
    3. '   ' → logprob: -10.376964569091797
    4. ' #' → logprob: -12.626964569091797
    5. '```' → logprob: -14.751964569091797
    6. '           ' → logprob: -16.001964569091797
    7. 'bottom' → logprob: -16.126964569091797
    8. '      ' → logprob: -16.126964569091797
    9. ' ' → logprob: -16.251964569091797
    10. '
' → logprob: -16.751964569091797

Token 181: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.16635732352733612
    2. ' bottom' → logprob: -1.9163572788238525
    3. '#' → logprob: -5.166357517242432
    4. '       ' → logprob: -7.916357517242432
    5. 'bot' → logprob: -10.916357040405273
    6. '   ' → logprob: -11.541357040405273
    7. ' #' → logprob: -12.666357040405273
    8. 'down' → logprob: -13.291357040405273
    9. '
' → logprob: -13.416357040405273
    10. 'Bottom' → logprob: -13.541357040405273

Token 182: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.31330403685569763
    2. 'rows' → logprob: -1.31330406665802
    3. '(rows' → logprob: -10.93830394744873
    4. '	rows' → logprob: -11.81330394744873
    5. '_rows' → logprob: -12.18830394744873
    6. '#' → logprob: -12.56330394744873
    7. '       ' → logprob: -12.68830394744873
    8. ' ' → logprob: -13.43830394744873
    9. ' red' → logprob: -14.31330394744873
    10. ' white' → logprob: -14.43830394744873

Token 183: ' painted' (ID: 33842)
  Prédit: ' painted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.35319632291793823
    2. 'paint' → logprob: -1.228196382522583
    3. '   ' → logprob: -5.478196144104004
    4. ' ' → logprob: -8.978196144104004
    5. ' red' → logprob: -8.978196144104004
    6. '       ' → logprob: -10.103196144104004
    7. 'red' → logprob: -10.353196144104004
    8. '  ' → logprob: -10.353196144104004
    9. '    ' → logprob: -10.478196144104004
    10. 'pa' → logprob: -10.603196144104004

Token 184: ' RED' (ID: 45309)
  Prédit: 'RED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RED' → logprob: -0.029771320521831512
    2. ' RED' → logprob: -3.529771327972412
    3. ' ' → logprob: -11.154770851135254
    4. 'WHITE' → logprob: -12.529770851135254
    5. '   ' → logprob: -13.654770851135254
    6. '.RED' → logprob: -13.779770851135254
    7. ' WHITE' → logprob: -14.654770851135254
    8. '  ' → logprob: -15.904770851135254
    9. '```' → logprob: -17.27977180480957
    10. '`' → logprob: -17.77977180480957

Token 185: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44324585795402527
    2. '
' → logprob: -1.0682458877563477
    3. '        
' → logprob: -4.318245887756348
    4. '<|end|>' → logprob: -7.568245887756348
    5. '

' → logprob: -8.818245887756348
    6. ',' → logprob: -9.068245887756348
    7. '       
' → logprob: -9.943245887756348
    8. '    
' → logprob: -10.318245887756348
    9. '        ' → logprob: -10.443245887756348
    10. '   ' → logprob: -10.568245887756348

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10973106324672699
    2. '(' → logprob: -3.6097309589385986
    3. ' (' → logprob: -3.6097309589385986
    4. ' ' → logprob: -3.7347309589385986
    5. ')' → logprob: -3.8597309589385986
    6. ' one' → logprob: -5.984731197357178
    7. 'one' → logprob: -7.609731197357178
    8. '(one' → logprob: -7.859731197357178
    9. ' at' → logprob: -8.23473072052002
    10. ')
' → logprob: -8.48473072052002

Token 187: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.429414838552475
    2. 'or' → logprob: -1.0544148683547974
    3. ')' → logprob: -7.304414749145508
    4. ' ' → logprob: -11.179414749145508
    5. '
' → logprob: -11.679414749145508
    6. '#' → logprob: -12.054414749145508
    7. ' )' → logprob: -13.429414749145508
    8. '   ' → logprob: -13.429414749145508
    9. ' (' → logprob: -13.429414749145508
    10. ')
' → logprob: -13.554414749145508

Token 188: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.6333696246147156
    2. ' more' → logprob: -0.7583696246147156
    3. ' or' → logprob: -8.258369445800781
    4. 'or' → logprob: -8.383369445800781
    5. 'one' → logprob: -8.883369445800781
    6. ' one' → logprob: -9.883369445800781
    7. ')' → logprob: -10.633369445800781
    8. '1' → logprob: -10.758369445800781
    9. ' ' → logprob: -11.133369445800781
    10. '_more' → logprob: -11.383369445800781

Token 189: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.11416872590780258
    2. ' rows' → logprob: -2.489168643951416
    3. ')
' → logprob: -3.989168643951416
    4. ')' → logprob: -5.239168643951416
    5. ')

' → logprob: -7.864168643951416
    6. '_rows' → logprob: -8.364169120788574
    7. '	rows' → logprob: -9.114169120788574
    8. '):
' → logprob: -9.739169120788574
    9. '   ' → logprob: -9.989169120788574
    10. '(rows' → logprob: -10.114169120788574

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03266754746437073
    2. ')
' → logprob: -3.532667636871338
    3. '       ' → logprob: -5.907667636871338
    4. '   ' → logprob: -9.15766716003418
    5. '
' → logprob: -10.40766716003418
    6. ')

' → logprob: -10.90766716003418
    7. '```' → logprob: -11.15766716003418
    8. ')
' → logprob: -11.78266716003418
    9. ' )' → logprob: -12.53266716003418
    10. '):
' → logprob: -13.03266716003418

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010010939091444016
    2. '
' → logprob: -5.260010719299316
    3. '    
' → logprob: -6.510010719299316
    4. '        
' → logprob: -6.510010719299316
    5. '   ' → logprob: -6.635010719299316
    6. 'n' → logprob: -9.010010719299316
    7. '   
' → logprob: -9.635010719299316
    8. ' 
' → logprob: -9.760010719299316
    9. '  
' → logprob: -9.760010719299316
    10. '       
' → logprob: -10.385010719299316

Token 192: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30054840445518494
    2. 'min' → logprob: -1.4255484342575073
    3. ' min' → logprob: -4.050548553466797
    4. '   ' → logprob: -7.675548553466797
    5. 'result' → logprob: -7.675548553466797
    6. 'cost' → logprob: -8.550548553466797
    7. '
' → logprob: -8.925548553466797
    8. 'minimum' → logprob: -9.050548553466797
    9. 'best' → logprob: -9.425548553466797
    10. 'total' → logprob: -9.550548553466797

Token 193: ' Find' (ID: 9764)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4997251629829407
    2. 'min' → logprob: -1.124725103378296
    3. ' min' → logprob: -2.749725103378296
    4. '   ' → logprob: -6.749725341796875
    5. 'best' → logprob: -6.749725341796875
    6. ' best' → logprob: -7.124725341796875
    7. '
' → logprob: -7.499725341796875
    8. 'result' → logprob: -9.124725341796875
    9. ' minimal' → logprob: -9.124725341796875
    10. 'minimum' → logprob: -9.249725341796875

Token 194: ' indices' (ID: 30378)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6422598958015442
    2. ' min' → logprob: -0.7672598958015442
    3. '       ' → logprob: -5.5172600746154785
    4. '   ' → logprob: -6.5172600746154785
    5. ' minimal' → logprob: -6.5172600746154785
    6. ' minimum' → logprob: -6.8922600746154785
    7. 'minimum' → logprob: -7.5172600746154785
    8. ' best' → logprob: -8.14225959777832
    9. 'minimal' → logprob: -8.76725959777832
    10. ' the' → logprob: -9.01725959777832

Token 195: ' white' (ID: 6461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14833281934261322
    2. ' =' → logprob: -3.0233328342437744
    3. '       ' → logprob: -4.023332595825195
    4. 'for' → logprob: -4.273332595825195
    5. ' of' → logprob: -4.523332595825195
    6. ' i' → logprob: -4.898332595825195
    7. ' to' → logprob: -4.898332595825195
    8. '        ' → logprob: -5.148332595825195
    9. '<|end|>' → logprob: -5.148332595825195
    10. ' ' → logprob: -5.273332595825195

Token 196: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.19637420773506165
    2. '_white' → logprob: -2.6963741779327393
    3. '_break' → logprob: -3.4463741779327393
    4. '_split' → logprob: -3.8213741779327393
    5. '_' → logprob: -4.446374416351318
    6. '_partition' → logprob: -4.571374416351318
    7. '_cut' → logprob: -4.946374416351318
    8. '_bound' → logprob: -5.571374416351318
    9. '_ranges' → logprob: -5.821374416351318
    10. '_part' → logprob: -5.946374416351318

Token 197: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02760470286011696
    2. ' in' → logprob: -4.527604579925537
    3. '=' → logprob: -4.902604579925537
    4. ',' → logprob: -6.152604579925537
    5. ' ' → logprob: -6.277604579925537
    6. '_range' → logprob: -6.402604579925537
    7. 's' → logprob: -7.027604579925537
    8. '   ' → logprob: -7.277604579925537
    9. '  ' → logprob: -8.152605056762695
    10. ' for' → logprob: -8.277605056762695

Token 198: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.5232604146003723
    2. 'blue' → logprob: -0.8982604146003723
    3. ' ' → logprob: -10.273260116577148
    4. '
' → logprob: -10.773260116577148
    5. ' white' → logprob: -11.148260116577148
    6. 'white' → logprob: -11.273260116577148
    7. '   ' → logprob: -11.398260116577148
    8. '```' → logprob: -11.523260116577148
    9. '       ' → logprob: -11.648260116577148
    10. 'middle' → logprob: -12.273260116577148

Token 199: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0005513638607226312
    2. '_' → logprob: -8.625551223754883
    3. '_idx' → logprob: -8.750551223754883
    4. '_index' → logprob: -9.000551223754883
    5. '_row' → logprob: -10.875551223754883
    6. '_line' → logprob: -11.125551223754883
    7. '_start' → logprob: -11.250551223754883
    8. '_cut' → logprob: -11.500551223754883
    9. ' =' → logprob: -12.000551223754883
    10. '_out' → logprob: -12.125551223754883

Token 200: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34939104318618774
    2. '       ' → logprob: -1.599390983581543
    3. ' for' → logprob: -3.849390983581543
    4. ' that' → logprob: -3.974390983581543
    5. ':' → logprob: -4.349390983581543
    6. ' (' → logprob: -4.349390983581543
    7. ' =' → logprob: -4.849390983581543
    8. ',' → logprob: -5.474390983581543
    9. ' to' → logprob: -5.849390983581543
    10. ':
' → logprob: -5.974390983581543

Token 201: ' ' (ID: 220)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.1611730456352234
    2. ' range' → logprob: -3.161173105239868
    3. '   ' → logprob: -3.661173105239868
    4. 'white' → logprob: -3.911173105239868
    5. ' ' → logprob: -4.286172866821289
    6. ' for' → logprob: -4.661172866821289
    7. '1' → logprob: -4.786172866821289
    8. 'range' → logprob: -4.786172866821289
    9. '       ' → logprob: -4.911172866821289
    10. '
' → logprob: -5.286172866821289

Token 202: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8413377404212952
    2. '1' → logprob: -1.2163376808166504
    3. 'white' → logprob: -2.4663376808166504
    4. ' range' → logprob: -2.4663376808166504
    5. ' white' → logprob: -3.3413376808166504
    6. '   ' → logprob: -3.8413376808166504
    7. '
' → logprob: -4.21633768081665
    8. '0' → logprob: -4.34133768081665
    9. 'for' → logprob: -4.84133768081665
    10. ' ' → logprob: -5.59133768081665

Token 203: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.008335602469742298
    2. '<=' → logprob: -5.258335590362549
    3. ' ' → logprob: -6.383335590362549
    4. ' <' → logprob: -7.758335590362549
    5. ' ≤' → logprob: -8.258336067199707
    6. ',' → logprob: -8.258336067199707
    7. '-based' → logprob: -9.508336067199707
    8. 'based' → logprob: -9.633336067199707
    9. '  ' → logprob: -9.758336067199707
    10. '<' → logprob: -9.758336067199707

Token 204: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.06197015196084976
    2. ' white' → logprob: -2.8119702339172363
    3. '_white' → logprob: -14.561969757080078
    4. '   ' → logprob: -14.686969757080078
    5. '白' → logprob: -15.186969757080078
    6. '```' → logprob: -15.311969757080078
    7. ':white' → logprob: -15.311969757080078
    8. '       ' → logprob: -15.436969757080078
    9. ' ' → logprob: -15.811969757080078
    10. '.white' → logprob: -15.936969757080078

Token 205: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0007830646354705095
    2. '_' → logprob: -7.8757829666137695
    3. '_start' → logprob: -8.87578296661377
    4. ' _' → logprob: -9.00078296661377
    5. '_out' → logprob: -10.50078296661377
    6. '_e' → logprob: -10.62578296661377
    7. '_index' → logprob: -11.62578296661377
    8. '_min' → logprob: -11.87578296661377
    9. '_row' → logprob: -12.12578296661377
    10. '_idx' → logprob: -12.12578296661377

Token 206: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14382341504096985
    2. ' +' → logprob: -3.0188233852386475
    3. ' <=' → logprob: -3.3938233852386475
    4. ' <' → logprob: -3.6438233852386475
    5. '<=' → logprob: -4.143823623657227
    6. '=' → logprob: -5.393823623657227
    7. '<' → logprob: -5.768823623657227
    8. 'and' → logprob: -7.768823623657227
    9. ' =' → logprob: -7.893823623657227
    10. ' and' → logprob: -8.643823623657227

Token 207: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.5267147421836853
    2. 'self' → logprob: -1.77671480178833
    3. ' self' → logprob: -1.90171480178833
    4. 'blue' → logprob: -2.40171480178833
    5. ' ' → logprob: -9.151714324951172
    6. '       ' → logprob: -9.901714324951172
    7. '_blue' → logprob: -10.151714324951172
    8. ' white' → logprob: -10.276714324951172
    9. '
' → logprob: -10.526714324951172
    10. '           ' → logprob: -11.276714324951172

Token 208: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -9.729906196298543e-06
    2. ' _' → logprob: -12.125009536743164
    3. '_' → logprob: -12.875009536743164
    4. '_e' → logprob: -14.625009536743164
    5. '   ' → logprob: -15.250009536743164
    6. '_out' → logprob: -15.500009536743164
    7. '_start' → logprob: -15.875009536743164
    8. '```' → logprob: -16.500009536743164
    9. '_END' → logprob: -16.625009536743164
    10. '
' → logprob: -16.625009536743164

Token 209: ' <' (ID: 464)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1891675442457199
    2. '
' → logprob: -2.6891674995422363
    3. ' for' → logprob: -3.6891674995422363
    4. ':' → logprob: -3.6891674995422363
    5. ',' → logprob: -4.314167499542236
    6. ' in' → logprob: -4.439167499542236
    7. ':
' → logprob: -4.939167499542236
    8. '<|end|>' → logprob: -5.564167499542236
    9. '        ' → logprob: -5.939167499542236
    10. ' and' → logprob: -6.064167499542236

Token 210: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028137899935245514
    2. ' self' → logprob: -5.877813816070557
    3. '(self' → logprob: -12.627813339233398
    4. '
' → logprob: -13.002813339233398
    5. '       ' → logprob: -13.502813339233398
    6. '```' → logprob: -14.502813339233398
    7. 'N' → logprob: -14.752813339233398
    8. '[self' → logprob: -15.002813339233398
    9. '   ' → logprob: -15.502813339233398
    10. '=self' → logprob: -15.627813339233398

Token 211: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6970205903053284
    2. '       ' → logprob: -0.6970205903053284
    3. '        
' → logprob: -6.072020530700684
    4. '```' → logprob: -7.697020530700684
    5. '<|end|>' → logprob: -8.072020530700684
    6. ',' → logprob: -8.072020530700684
    7. ' 
' → logprob: -9.572020530700684
    8. '  
' → logprob: -9.822020530700684
    9. '   ' → logprob: -9.947020530700684
    10. ':
' → logprob: -10.197020530700684

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024107310455292463
    2. '
' → logprob: -6.752410888671875
    3. '        
' → logprob: -6.877410888671875
    4. '<|end|>' → logprob: -9.627410888671875
    5. ',' → logprob: -10.377410888671875
    6. '   ' → logprob: -10.377410888671875
    7. '```' → logprob: -10.752410888671875
    8. '    
' → logprob: -11.752410888671875
    9. '        ' → logprob: -11.877410888671875
    10. '  
' → logprob: -12.127410888671875

Token 213: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027490470558404922
    2. '
' → logprob: -3.6524903774261475
    3. '        
' → logprob: -7.652490615844727
    4. 'min' → logprob: -8.777490615844727
    5. '   ' → logprob: -8.902490615844727
    6. 'result' → logprob: -9.402490615844727
    7. '```' → logprob: -9.527490615844727
    8. 'cost' → logprob: -9.777490615844727
    9. '    
' → logprob: -10.152490615844727
    10. 'total' → logprob: -10.652490615844727

Token 214: ' white' (ID: 6461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008292094804346561
    2. 'result' → logprob: -5.883292198181152
    3. '        
' → logprob: -6.758292198181152
    4. ' result' → logprob: -6.883292198181152
    5. '   ' → logprob: -7.133292198181152
    6. 'min' → logprob: -7.383292198181152
    7. ' min' → logprob: -7.383292198181152
    8. '
' → logprob: -7.758292198181152
    9. ' for' → logprob: -9.258292198181152
    10. ' cost' → logprob: -9.258292198181152

Token 215: ' rows' (ID: 13585)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00010425841173855588
    2. '_' → logprob: -9.375103950500488
    3. '_cost' → logprob: -12.125103950500488
    4. '_start' → logprob: -13.125103950500488
    5. '_white' → logprob: -13.625103950500488
    6. 'end' → logprob: -13.750103950500488
    7. ' _' → logprob: -14.125103950500488
    8. '_min' → logprob: -14.125103950500488
    9. 'End' → logprob: -14.250103950500488
    10. '_space' → logprob: -14.375103950500488

Token 216: ':' (ID: 25)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.2645378112792969
    2. ' =' → logprob: -2.389537811279297
    3. '_' → logprob: -2.639537811279297
    4. '   ' → logprob: -3.889537811279297
    5. 'for' → logprob: -4.139537811279297
    6. '_start' → logprob: -4.889537811279297
    7. '=' → logprob: -5.014537811279297
    8. '_to' → logprob: -5.764537811279297
    9. '_cost' → logprob: -6.014537811279297
    10. '_count' → logprob: -6.139537811279297

Token 217: ' [' (ID: 723)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8911017179489136
    2. ' range' → logprob: -1.7661017179489136
    3. ' white' → logprob: -2.016101837158203
    4. ' ' → logprob: -2.766101837158203
    5. 'range' → logprob: -3.141101837158203
    6. ' self' → logprob: -3.391101837158203
    7. 'for' → logprob: -3.516101837158203
    8. '       ' → logprob: -4.016101837158203
    9. ' cost' → logprob: -4.016101837158203
    10. ' sum' → logprob: -4.516101837158203

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019829542725346982
    2. ' ' → logprob: -8.750198364257812
    3. ':' → logprob: -11.000198364257812
    4. '   ' → logprob: -11.625198364257812
    5. ' :' → logprob: -11.875198364257812
    6. ')' → logprob: -13.250198364257812
    7. ']' → logprob: -13.500198364257812
    8. '```' → logprob: -14.125198364257812
    9. '       ' → logprob: -14.500198364257812
    10. '1' → logprob: -14.750198364257812

Token 219: ',' (ID: 11)
  Prédit: ':white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':white' → logprob: -0.27742332220077515
    2. ',' → logprob: -1.77742338180542
    3. ':' → logprob: -3.15242338180542
    4. '..' → logprob: -4.15242338180542
    5. ']' → logprob: -4.77742338180542
    6. 'white' → logprob: -5.52742338180542
    7. ' ,' → logprob: -7.77742338180542
    8. '...' → logprob: -7.90242338180542
    9. ' white' → logprob: -8.027422904968262
    10. ';' → logprob: -8.027422904968262

Token 220: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.3132706880569458
    2. ' white' → logprob: -1.3132706880569458
    3. '   ' → logprob: -12.938270568847656
    4. '       ' → logprob: -12.938270568847656
    5. ':white' → logprob: -13.938270568847656
    6. '         ' → logprob: -14.688270568847656
    7. '白' → logprob: -14.688270568847656
    8. '    ' → logprob: -15.063270568847656
    9. '        ' → logprob: -15.063270568847656
    10. ' ' → logprob: -15.188270568847656

Token 221: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -7.896309739408025e-07
    2. 'end' → logprob: -15.500000953674316
    3. ')' → logprob: -15.875000953674316
    4. '_END' → logprob: -16.5
    5. ']_' → logprob: -16.625
    6. ')_' → logprob: -16.875
    7. '   ' → logprob: -17.25
    8. 'End' → logprob: -17.25
    9. ' _' → logprob: -17.375
    10. '       ' → logprob: -17.625

Token 222: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38152527809143066
    2. ')' → logprob: -1.8815252780914307
    3. '+' → logprob: -2.3815252780914307
    4. ' +' → logprob: -3.5065252780914307
    5. ']
' → logprob: -3.7565252780914307
    6. ')
' → logprob: -4.131525039672852
    7. '   ' → logprob: -7.131525039672852
    8. '],' → logprob: -7.256525039672852
    9. '),' → logprob: -7.631525039672852
    10. ' ]' → logprob: -7.881525039672852

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020782671868801117
    2. ')' → logprob: -3.895782709121704
    3. ' ' → logprob: -9.395782470703125
    4. ']' → logprob: -9.645782470703125
    5. ' )' → logprob: -10.145782470703125
    6. ')
' → logprob: -10.645782470703125
    7. '),' → logprob: -11.395782470703125
    8. '   ' → logprob: -12.270782470703125
    9. '```' → logprob: -12.395782470703125
    10. '])' → logprob: -13.895782470703125

Token 224: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17328310012817383
    2. ')' → logprob: -1.9232831001281738
    3. ']
' → logprob: -5.298283100128174
    4. ')
' → logprob: -5.548283100128174
    5. ' ]' → logprob: -6.298283100128174
    6. '+' → logprob: -6.923283100128174
    7. '   ' → logprob: -7.798283100128174
    8. ')]' → logprob: -8.173282623291016
    9. ' )' → logprob: -9.173282623291016
    10. '       ' → logprob: -9.298282623291016

Token 225: ' blue' (ID: 9861)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.6034296154975891
    2. ' blue' → logprob: -0.8534296154975891
    3. '       ' → logprob: -4.103429794311523
    4. 'white' → logprob: -5.353429794311523
    5. 'blue' → logprob: -6.353429794311523
    6. ' ' → logprob: -6.978429794311523
    7. ' ' → logprob: -7.228429794311523
    8. '   ' → logprob: -8.103429794311523
    9. ' 
' → logprob: -8.353429794311523
    10. ' #' → logprob: -8.353429794311523

Token 226: ' rows' (ID: 13585)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.24268284440040588
    2. '_rows' → logprob: -1.7426828145980835
    3. '   ' → logprob: -4.242682933807373
    4. '       ' → logprob: -4.867682933807373
    5. '```' → logprob: -5.117682933807373
    6. '
' → logprob: -5.492682933807373
    7. 'rows' → logprob: -5.617682933807373
    8. ',' → logprob: -6.867682933807373
    9. '_row' → logprob: -7.242682933807373
    10. ')' → logprob: -8.117682456970215

Token 227: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013217177242040634
    2. ' =' → logprob: -5.263216972351074
    3. '[' → logprob: -5.513216972351074
    4. ' :' → logprob: -6.138216972351074
    5. '       ' → logprob: -7.263216972351074
    6. '=' → logprob: -8.013216972351074
    7. '   ' → logprob: -8.888216972351074
    8. ',' → logprob: -9.263216972351074
    9. '=[' → logprob: -9.263216972351074
    10. '):' → logprob: -9.513216972351074

Token 228: ' [' (ID: 723)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.061526358127593994
    2. 'white' → logprob: -3.061526298522949
    3. ' blue' → logprob: -4.936526298522949
    4. '[' → logprob: -5.686526298522949
    5. ' [' → logprob: -6.186526298522949
    6. 'blue' → logprob: -8.68652629852295
    7. ' ' → logprob: -10.93652629852295
    8. ' ' → logprob: -11.06152629852295
    9. '   ' → logprob: -12.56152629852295
    10. ' range' → logprob: -12.93652629852295

Token 229: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.2014150768518448
    2. ' white' → logprob: -1.7014150619506836
    3. '   ' → logprob: -15.201415061950684
    4. ' ' → logprob: -15.326415061950684
    5. '白' → logprob: -15.451415061950684
    6. ':white' → logprob: -15.701415061950684
    7. 'blue' → logprob: -15.826415061950684
    8. ' ' → logprob: -16.201416015625
    9. '_white' → logprob: -16.201416015625
    10. ' blue' → logprob: -16.451416015625

Token 230: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.500007629394531
    3. ' _' → logprob: -12.875007629394531
    4. '_e' → logprob: -15.750007629394531
    5. '_END' → logprob: -15.875007629394531
    6. 'end' → logprob: -16.62500762939453
    7. '   ' → logprob: -16.62500762939453
    8. '_out' → logprob: -16.75000762939453
    9. '_start' → logprob: -16.87500762939453
    10. '```' → logprob: -16.87500762939453

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08449400216341019
    2. '],' → logprob: -2.709494113922119
    3. ' ,' → logprob: -4.959494113922119
    4. '   ' → logprob: -5.834494113922119
    5. ' ],' → logprob: -6.209494113922119
    6. ':' → logprob: -7.209494113922119
    7. ']' → logprob: -7.209494113922119
    8. '),' → logprob: -7.959494113922119
    9. ' ' → logprob: -8.459493637084961
    10. ':],' → logprob: -9.209493637084961

Token 232: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.2254403978586197
    2. 'blue' → logprob: -1.6004403829574585
    3. ' ' → logprob: -11.22544002532959
    4. ' ' → logprob: -12.22544002532959
    5. '
' → logprob: -13.47544002532959
    6. '   ' → logprob: -13.60044002532959
    7. '       ' → logprob: -14.10044002532959
    8. ' white' → logprob: -14.10044002532959
    9. '         ' → logprob: -14.60044002532959
    10. '    ' → logprob: -14.60044002532959

Token 233: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.5438101291656494
    2. '-' → logprob: -0.9188101291656494
    3. '_blue' → logprob: -4.66880989074707
    4. 'blue' → logprob: -5.29380989074707
    5. ' -' → logprob: -5.29380989074707
    6. ' blue' → logprob: -8.29380989074707
    7. '   ' → logprob: -8.79380989074707
    8. ')' → logprob: -8.79380989074707
    9. ']' → logprob: -9.16880989074707
    10. '-_' → logprob: -9.29380989074707

Token 234: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8053293228149414
    2. '-' → logprob: -1.1803293228149414
    3. ')' → logprob: -2.4303293228149414
    4. '],' → logprob: -2.4303293228149414
    5. '),' → logprob: -3.4303293228149414
    6. ' -' → logprob: -3.5553293228149414
    7. '   ' → logprob: -5.555329322814941
    8. ']
' → logprob: -6.930329322814941
    9. '       ' → logprob: -7.055329322814941
    10. ' ]' → logprob: -7.180329322814941

Token 235: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.844563901424408
    2. '1' → logprob: -0.844563901424408
    3. ']' → logprob: -2.3445639610290527
    4. ')' → logprob: -4.094563961029053
    5. ' ' → logprob: -4.344563961029053
    6. ' -' → logprob: -4.844563961029053
    7. '],' → logprob: -5.469563961029053
    8. '),' → logprob: -6.844563961029053
    9. '   ' → logprob: -7.219563961029053
    10. 'N' → logprob: -8.469563484191895

Token 236: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14842142164707184
    2. '       ' → logprob: -2.8984215259552
    3. ']
' → logprob: -3.0234215259552
    4. '],' → logprob: -3.6484215259552
    5. ')' → logprob: -5.523421287536621
    6. ',' → logprob: -5.773421287536621
    7. '),' → logprob: -8.023421287536621
    8. ')
' → logprob: -8.273421287536621
    9. '   ' → logprob: -8.898421287536621
    10. ']

' → logprob: -9.398421287536621

Token 237: ' red' (ID: 3592)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6306588053703308
    2. '       ' → logprob: -1.1306588649749756
    3. ' blue' → logprob: -2.3806588649749756
    4. ' #' → logprob: -3.3806588649749756
    5. 'blue' → logprob: -4.3806586265563965
    6. ' white' → logprob: -6.5056586265563965
    7. ' ' → logprob: -6.6306586265563965
    8. ' red' → logprob: -7.2556586265563965
    9. '   ' → logprob: -7.3806586265563965
    10. '```' → logprob: -7.5056586265563965

Token 238: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.03148390352725983
    2. 'rows' → logprob: -3.6564838886260986
    3. '_rows' → logprob: -5.531484127044678
    4. '	rows' → logprob: -8.15648365020752
    5. '[' → logprob: -8.28148365020752
    6. '_' → logprob: -9.03148365020752
    7. '   ' → logprob: -9.40648365020752
    8. ' _' → logprob: -9.40648365020752
    9. '(rows' → logprob: -9.40648365020752
    10. '```' → logprob: -9.40648365020752

Token 239: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014580932911485434
    2. '=' → logprob: -7.126458168029785
    3. ' =' → logprob: -7.501458168029785
    4. ' :' → logprob: -9.876458168029785
    5. '[' → logprob: -10.376458168029785
    6. '=[' → logprob: -11.376458168029785
    7. ':[' → logprob: -13.501458168029785
    8. '   ' → logprob: -14.376458168029785
    9. '```' → logprob: -14.376458168029785
    10. ')' → logprob: -14.626458168029785

Token 240: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03805181756615639
    2. ' [' → logprob: -3.2880518436431885
    3. ' blue' → logprob: -12.28805160522461
    4. ' ' → logprob: -13.91305160522461
    5. 'blue' → logprob: -14.03805160522461
    6. 'range' → logprob: -14.16305160522461
    7. ' range' → logprob: -14.28805160522461
    8. '[
' → logprob: -14.78805160522461
    9. ' ' → logprob: -14.91305160522461
    10. '   ' → logprob: -14.91305160522461

Token 241: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0028065370861440897
    2. ' blue' → logprob: -5.877806663513184
    3. ' ' → logprob: -13.877806663513184
    4. '   ' → logprob: -14.752806663513184
    5. '
' → logprob: -16.377805709838867
    6. '       ' → logprob: -16.877805709838867
    7. '`' → logprob: -17.252805709838867
    8. '```' → logprob: -17.252805709838867
    9. 'blu' → logprob: -17.502805709838867
    10. '0' → logprob: -17.502805709838867

Token 242: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.570319702499546e-05
    2. ' _' → logprob: -10.875025749206543
    3. '_' → logprob: -12.750025749206543
    4. '   ' → logprob: -13.625025749206543
    5. '_e' → logprob: -14.250025749206543
    6. 'End' → logprob: -15.125025749206543
    7. '_out' → logprob: -15.250025749206543
    8. '```' → logprob: -15.375025749206543
    9. '_END' → logprob: -15.500025749206543
    10. ')_' → logprob: -16.375024795532227

Token 243: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03128162398934364
    2. ',' → logprob: -4.281281471252441
    3. '+' → logprob: -5.031281471252441
    4. ':]' → logprob: -5.156281471252441
    5. ')' → logprob: -6.531281471252441
    6. ']:' → logprob: -7.031281471252441
    7. '+]' → logprob: -7.781281471252441
    8. ' ]' → logprob: -7.781281471252441
    9. ' +' → logprob: -8.156281471252441
    10. ']
' → logprob: -8.281281471252441

Token 244: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4759249687194824
    2. ' self' → logprob: -0.9759249687194824
    3. 'N' → logprob: -6.475924968719482
    4. ' N' → logprob: -8.22592544555664
    5. ' ' → logprob: -11.47592544555664
    6. '   ' → logprob: -11.97592544555664
    7. ']' → logprob: -12.22592544555664
    8. '	self' → logprob: -12.47592544555664
    9. ')' → logprob: -12.60092544555664
    10. '```' → logprob: -13.22592544555664

Token 245: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04922160506248474
    2. ']' → logprob: -3.1742215156555176
    3. ')' → logprob: -5.174221515655518
    4. ' -' → logprob: -7.674221515655518
    5. ']-' → logprob: -9.924221992492676
    6. ')-' → logprob: -12.299221992492676
    7. '```' → logprob: -12.549221992492676
    8. ']
' → logprob: -12.674221992492676
    9. '])' → logprob: -12.924221992492676
    10. ' ]' → logprob: -12.924221992492676

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.500041007995605
    3. ')' → logprob: -12.000041007995605
    4. ']' → logprob: -12.875041007995605
    5. '])' → logprob: -13.375041007995605
    6. '0' → logprob: -13.500041007995605
    7. '   ' → logprob: -15.250041007995605
    8. '2' → logprob: -15.250041007995605
    9. '```' → logprob: -15.250041007995605
    10. '3' → logprob: -15.250041007995605

Token 247: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8877912759780884
    2. '       ' → logprob: -1.3877912759780884
    3. ']' → logprob: -1.5127912759780884
    4. ')
' → logprob: -2.512791156768799
    5. ']
' → logprob: -3.637791156768799
    6. '   ' → logprob: -4.887791156768799
    7. '):
' → logprob: -6.762791156768799
    8. '```' → logprob: -8.012791633605957
    9. 'def' → logprob: -8.262791633605957
    10. '):' → logprob: -8.262791633605957

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05987948924303055
    2. '
' → logprob: -2.9348795413970947
    3. '        
' → logprob: -5.434879302978516
    4. '<|end|>' → logprob: -8.934879302978516
    5. '   ' → logprob: -9.309879302978516
    6. ' 
' → logprob: -9.684879302978516
    7. '\n' → logprob: -9.809879302978516
    8. '```' → logprob: -9.934879302978516
    9. '    
' → logprob: -10.059879302978516
    10. '  
' → logprob: -10.684879302978516

Token 249: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010774021036922932
    2. 'min' (adapté à ' min') → logprob: -5.1357741355896
    3. '
' → logprob: -6.2607741355896
    4. ' min' → logprob: -7.0107741355896
    5. 'result' → logprob: -7.1357741355896
    6. '        
' → logprob: -7.5107741355896
    7. '   ' → logprob: -7.8857741355896
    8. 'cost' → logprob: -9.385773658752441
    9. '    
' → logprob: -9.885773658752441
    10. 'results' → logprob: -10.385773658752441

Token 250: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.11326563358306885
    2. '_' → logprob: -2.2382655143737793
    3. '_total' → logprob: -8.363265991210938
    4. ' _' → logprob: -9.863265991210938
    5. '_re' → logprob: -10.113265991210938
    6. '_val' → logprob: -11.238265991210938
    7. '(_' → logprob: -11.238265991210938
    8. '_distance' → logprob: -11.238265991210938
    9. '(' → logprob: -11.363265991210938
    10. '_possible' → logprob: -11.988265991210938

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0211640577763319
    2. '=' → logprob: -3.8961639404296875
    3. '_' → logprob: -7.3961639404296875
    4. ' ' → logprob: -12.771163940429688
    5. '   ' → logprob: -13.021163940429688
    6. ',' → logprob: -13.896163940429688
    7. ' _' → logprob: -14.771163940429688
    8. ' =
' → logprob: -14.896163940429688
    9. '  ' → logprob: -15.146163940429688
    10. ')' → logprob: -15.271163940429688

Token 252: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0031804447062313557
    2. ' float' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.378180503845215
    4. '	float' → logprob: -14.753180503845215
    5. '10' → logprob: -15.128180503845215
    6. 'None' → logprob: -16.3781795501709
    7. 'int' → logprob: -16.5031795501709
    8. 'sum' → logprob: -16.5031795501709
    9. '=float' → logprob: -16.5031795501709
    10. ',float' → logprob: -17.1281795501709

Token 253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010642479173839092
    2. ''in' → logprob: -7.501064300537109
    3. ''' → logprob: -7.876064300537109
    4. ''s' → logprob: -9.37606430053711
    5. 'inf' → logprob: -10.62606430053711
    6. ''a' → logprob: -12.62606430053711
    7. '('+' → logprob: -13.12606430053711
    8. '   ' → logprob: -13.25106430053711
    9. '_inf' → logprob: -13.25106430053711
    10. '(' → logprob: -13.62606430053711

Token 254: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -14.625000953674316
    3. 'in' → logprob: -14.750000953674316
    4. ''in' → logprob: -15.125000953674316
    5. 'info' → logprob: -16.625001907348633
    6. 'pos' → logprob: -18.125001907348633
    7. ' inf' → logprob: -18.750001907348633
    8. '_inf' → logprob: -19.500001907348633
    9. '')' → logprob: -20.000001907348633
    10. '.inf' → logprob: -20.375001907348633

Token 255: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023685127962380648
    2. '')' → logprob: -6.752368450164795
    3. ')
' → logprob: -6.752368450164795
    4. '   ' → logprob: -11.377368927001953
    5. '')
' → logprob: -11.877368927001953
    6. ' )' → logprob: -12.377368927001953
    7. '       ' → logprob: -12.627368927001953
    8. ')

' → logprob: -13.627368927001953
    9. ')
' → logprob: -14.502368927001953
    10. ')'' → logprob: -15.252368927001953

Token 256: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021195456385612488
    2. '       ' → logprob: -4.771195411682129
    3. '\n' → logprob: -4.771195411682129
    4. '    
' → logprob: -6.521195411682129
    5. '   ' → logprob: -7.021195411682129
    6. '        
' → logprob: -7.396195411682129
    7. '  
' → logprob: -7.521195411682129
    8. ' 
' → logprob: -8.646195411682129
    9. '   
' → logprob: -9.646195411682129
    10. 'for' → logprob: -9.896195411682129

Token 257: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5186772346496582
    2. ' for' → logprob: -1.0186772346496582
    3. '       ' → logprob: -3.143677234649658
    4. '   ' → logprob: -7.643677234649658
    5. '
' → logprob: -11.7686767578125
    6. '	for' → logprob: -12.1436767578125
    7. ' ' → logprob: -13.6436767578125
    8. '        
' → logprob: -13.8936767578125
    9. '  ' → logprob: -14.6436767578125
    10. '      ' → logprob: -15.0186767578125

Token 258: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038874808233231306
    2. ' for' → logprob: -5.75388765335083
    3. '       ' → logprob: -7.25388765335083
    4. '   ' → logprob: -13.378887176513672
    5. '```' → logprob: -14.753887176513672
    6. 'from' → logprob: -17.253887176513672
    7. 'N' → logprob: -17.253887176513672
    8. ' ' → logprob: -17.378887176513672
    9. '
' → logprob: -17.378887176513672
    10. '	for' → logprob: -17.503887176513672

Token 259: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.47826337814331055
    2. 'sum' → logprob: -1.1032633781433105
    3. 'fix' → logprob: -3.2282633781433105
    4. 'calculate' → logprob: -5.3532633781433105
    5. '       ' → logprob: -7.2282633781433105
    6. '   ' → logprob: -7.3532633781433105
    7. 'pare' → logprob: -7.6032633781433105
    8. 'computed' → logprob: -7.6032633781433105
    9. 'cost' → logprob: -7.8532633781433105
    10. 'pend' → logprob: -8.853263854980469

Token 260: ' repaint' (ID: 133657)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.028200577944517136
    2. ' white' → logprob: -4.028200626373291
    3. 'cost' → logprob: -5.153200626373291
    4. 'prefix' → logprob: -6.278200626373291
    5. '       ' → logprob: -7.153200626373291
    6. ' repaint' → logprob: -7.278200626373291
    7. ' costs' → logprob: -8.028200149536133
    8. 'for' → logprob: -8.903200149536133
    9. '   ' → logprob: -9.153200149536133
    10. ' prefix' → logprob: -9.653200149536133

Token 261: ' costs' (ID: 8959)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.012311029247939587
    2. '_' → logprob: -4.762310981750488
    3. 'ing' → logprob: -6.012310981750488
    4. '_counts' → logprob: -7.512310981750488
    5. 's' → logprob: -8.137310981750488
    6. ' costs' → logprob: -9.387310981750488
    7. 'cost' → logprob: -9.512310981750488
    8. '_prefix' → logprob: -9.637310981750488
    9. '_rows' → logprob: -9.887310981750488
    10. '_sum' → logprob: -10.012310981750488

Token 262: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019008010625839233
    2. ' for' → logprob: -4.394008159637451
    3. 'for' → logprob: -5.519008159637451
    4. 'cost' → logprob: -7.269008159637451
    5. ' white' → logprob: -7.769008159637451
    6. 'white' → logprob: -8.019007682800293
    7. '        
' → logprob: -8.394007682800293
    8. ' costs' → logprob: -8.519007682800293
    9. ' cost' → logprob: -8.894007682800293
    10. ',' → logprob: -9.269007682800293

Token 263: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.08112631738185883
    2. ' row' → logprob: -2.7061262130737305
    3. 'color' → logprob: -4.7061262130737305
    4. ' color' → logprob: -6.5811262130737305
    5. 'target' → logprob: -8.08112621307373
    6. 'token' → logprob: -9.33112621307373
    7. 'Flag' → logprob: -9.45612621307373
    8. 'flag' → logprob: -9.83112621307373
    9. ' target' → logprob: -10.08112621307373
    10. 'Color' → logprob: -10.95612621307373

Token 264: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012768734246492386
    2. ' for' → logprob: -5.387768745422363
    3. 'cost' → logprob: -5.887768745422363
    4. ' costs' → logprob: -6.137768745422363
    5. 'for' → logprob: -6.887768745422363
    6. ' cost' → logprob: -7.637768745422363
    7. ',' → logprob: -7.637768745422363
    8. ' per' → logprob: -8.137768745422363
    9. 'per' → logprob: -8.887768745422363
    10. '        
' → logprob: -9.012768745422363

Token 265: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.18424081802368164
    2. ' color' → logprob: -1.8092408180236816
    3. 'target' → logprob: -5.684240818023682
    4. 'Color' → logprob: -7.684240818023682
    5. ' target' → logprob: -7.809240818023682
    6. '[
' → logprob: -9.684240341186523
    7. '[' → logprob: -10.059240341186523
    8. '_color' → logprob: -10.559240341186523
    9. '[color' → logprob: -10.559240341186523
    10. 'flag' → logprob: -11.434240341186523

Token 266: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00968832615762949
    2. 'cost' → logprob: -4.884688377380371
    3. ' costs' → logprob: -7.509688377380371
    4. ' cost' → logprob: -8.009688377380371
    5. ',' → logprob: -8.134688377380371
    6. '        
' → logprob: -8.509688377380371
    7. 'row' → logprob: -8.634688377380371
    8. 'per' → logprob: -8.759688377380371
    9. 'pre' → logprob: -10.134688377380371
    10. 'colors' → logprob: -10.134688377380371

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014560560695827007
    2. 'cost' → logprob: -4.514560699462891
    3. ' costs' → logprob: -7.139560699462891
    4. ' cost' → logprob: -7.389560699462891
    5. 'white' → logprob: -7.639560699462891
    6. '```' → logprob: -7.639560699462891
    7. 'row' → logprob: -8.26456069946289
    8. '
' → logprob: -8.88956069946289
    9. '        
' → logprob: -9.01456069946289
    10. ' white' → logprob: -9.38956069946289

Token 268: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.48093417286872864
    2. '       ' → logprob: -1.3559341430664062
    3. ' cost' → logprob: -3.2309341430664062
    4. 're' → logprob: -3.4809341430664062
    5. ' repaint' → logprob: -3.9809341430664062
    6. 'row' → logprob: -4.230934143066406
    7. ' costs' → logprob: -4.480934143066406
    8. 'white' → logprob: -5.605934143066406
    9. ' white' → logprob: -6.730934143066406
    10. 'paint' → logprob: -6.980934143066406

Token 269: '_by' (ID: 8214)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.25753170251846313
    2. 's' → logprob: -1.5075316429138184
    3. ' =' → logprob: -6.257531642913818
    4. '_white' → logprob: -6.382531642913818
    5. '_by' → logprob: -7.132531642913818
    6. '_' → logprob: -7.132531642913818
    7. '_matrix' → logprob: -8.882532119750977
    8. '_rows' → logprob: -9.257532119750977
    9. '_s' → logprob: -10.007532119750977
    10. '=' → logprob: -10.132532119750977

Token 270: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.22269971668720245
    2. '_row' → logprob: -2.0976996421813965
    3. 'row' → logprob: -3.0976996421813965
    4. 'color' → logprob: -3.5976996421813965
    5. ' color' → logprob: -6.2226996421813965
    6. '_' → logprob: -6.9726996421813965
    7. ' row' → logprob: -7.7226996421813965
    8. ' ' → logprob: -7.9726996421813965
    9. ' =' → logprob: -8.347700119018555
    10. '_token' → logprob: -9.597700119018555

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860758036375046
    2. '=' → logprob: -3.048607587814331
    3. ' ' → logprob: -11.42360782623291
    4. 's' → logprob: -12.67360782623291
    5. '  ' → logprob: -12.92360782623291
    6. '_' → logprob: -14.04860782623291
    7. '[' → logprob: -14.29860782623291
    8. '   ' → logprob: -14.42360782623291
    9. ':' → logprob: -14.67360782623291
    10. ' =[' → logprob: -15.04860782623291

Token 272: ' {' (ID: 354)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.2338273823261261
    2. '{' → logprob: -2.2338273525238037
    3. ' {
' → logprob: -3.4838273525238037
    4. '{'' → logprob: -3.6088273525238037
    5. '[' → logprob: -4.608827590942383
    6. ' {' → logprob: -4.733827590942383
    7. '[
' → logprob: -4.858827590942383
    8. '[]' → logprob: -5.108827590942383
    9. ' {'' → logprob: -5.858827590942383
    10. '[]
' → logprob: -6.108827590942383

Token 273: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.5884912014007568
    2. 'color' → logprob: -0.8384912014007568
    3. 'c' → logprob: -4.963491439819336
    4. 'Color' → logprob: -6.088491439819336
    5. '   ' → logprob: -7.213491439819336
    6. '       ' → logprob: -7.463491439819336
    7. 'White' → logprob: -7.713491439819336
    8. 'white' → logprob: -8.088491439819336
    9. ' Flag' → logprob: -8.588491439819336
    10. ' color' → logprob: -8.713491439819336

Token 274: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.00014180023572407663
    2. '.WHITE' → logprob: -10.125142097473145
    3. 'color' → logprob: -10.625142097473145
    4. '.Color' → logprob: -10.750142097473145
    5. 'COLOR' → logprob: -11.000142097473145
    6. '.COLOR' → logprob: -11.375142097473145
    7. '_COLOR' → logprob: -12.125142097473145
    8. '.' → logprob: -12.250142097473145
    9. 'WHITE' → logprob: -12.375142097473145
    10. '.color' → logprob: -12.500142097473145

Token 275: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.00022117885237094015
    2. '.' → logprob: -8.625221252441406
    3. 'WHITE' → logprob: -10.375221252441406
    4. '}.' → logprob: -13.250221252441406
    5. '   ' → logprob: -13.750221252441406
    6. ' .' → logprob: -13.875221252441406
    7. ':' → logprob: -14.250221252441406
    8. '}' → logprob: -14.375221252441406
    9. '.COLOR' → logprob: -14.500221252441406
    10. '.W' → logprob: -14.750221252441406

Token 276: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.052377623040229e-05
    2. ' :' → logprob: -10.125070571899414
    3. ':[' → logprob: -10.500070571899414
    4. '   ' → logprob: -14.125070571899414
    5. '[' → logprob: -14.375070571899414
    6. ':list' → logprob: -15.625070571899414
    7. '[i' → logprob: -15.750070571899414
    8. ':set' → logprob: -16.000070571899414
    9. ':[
' → logprob: -16.125070571899414
    10. ':self' → logprob: -16.250070571899414

Token 277: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.08672622591257095
    2. ' [],' → logprob: -3.211726188659668
    3. ' [' → logprob: -3.836726188659668
    4. '[]' → logprob: -4.586726188659668
    5. '[' → logprob: -5.336726188659668
    6. '[],
' → logprob: -5.586726188659668
    7. ' []' → logprob: -6.711726188659668
    8. ' [],
' → logprob: -6.836726188659668
    9. '[i' → logprob: -9.961726188659668
    10. '[
' → logprob: -10.211726188659668

Token 278: ' Flag' (ID: 40343)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.5085822343826294
    2. ' Flag' → logprob: -1.0085822343826294
    3. '                        ' → logprob: -4.50858211517334
    4. '                       ' → logprob: -5.38358211517334
    5. '                     ' → logprob: -5.38358211517334
    6. '                         ' → logprob: -5.63358211517334
    7. '                      ' → logprob: -5.75858211517334
    8. '                    ' → logprob: -6.13358211517334
    9. '                          ' → logprob: -6.75858211517334
    10. '        ' → logprob: -7.25858211517334

Token 279: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.9266199160483666e-05
    2. '_Color' → logprob: -12.375019073486328
    3. '_color' → logprob: -12.500019073486328
    4. '_COLOR' → logprob: -12.750019073486328
    5. 'Flag' → logprob: -13.375019073486328
    6. '[' → logprob: -14.250019073486328
    7. '.Color' → logprob: -14.375019073486328
    8. 'Blue' → logprob: -14.375019073486328
    9. 'color' → logprob: -14.500019073486328
    10. 'By' → logprob: -14.500019073486328

Token 280: '.BLUE' (ID: 144649)
  Prédit: '.BLUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BLUE' → logprob: -0.00019066639652010053
    2. '.RED' → logprob: -9.625190734863281
    3. '.WHITE' → logprob: -9.875190734863281
    4. '.' → logprob: -10.125190734863281
    5. '.BL' → logprob: -11.250190734863281
    6. 'BLUE' → logprob: -12.125190734863281
    7. '.B' → logprob: -12.500190734863281
    8. ' .' → logprob: -12.625190734863281
    9. '.BLACK' → logprob: -12.750190734863281
    10. '   ' → logprob: -13.125190734863281

Token 281: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007478733081370592
    2. ',' → logprob: -5.132478713989258
    3. '],' → logprob: -7.382478713989258
    4. ']:' → logprob: -7.507478713989258
    5. ':,' → logprob: -8.757478713989258
    6. ' :' → logprob: -9.507478713989258
    7. ':],' → logprob: -10.257478713989258
    8. ' ,' → logprob: -10.632478713989258
    9. ']' → logprob: -10.757478713989258
    10. '   ' → logprob: -10.757478713989258

Token 282: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.07907385379076004
    2. ' [],' → logprob: -2.579073905944824
    3. '[]' → logprob: -8.704073905944824
    4. ',' → logprob: -11.829073905944824
    5. ' []' → logprob: -11.829073905944824
    6. ' ' → logprob: -13.329073905944824
    7. '[],
' → logprob: -14.454073905944824
    8. '  ' → logprob: -15.204073905944824
    9. '[' → logprob: -15.204073905944824
    10. '   ' → logprob: -15.329073905944824

Token 283: ' Flag' (ID: 40343)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.014304060488939285
    2. ' Flag' → logprob: -4.264304161071777
    3. '       ' → logprob: -10.014304161071777
    4. '           ' → logprob: -10.264304161071777
    5. '        ' → logprob: -11.264304161071777
    6. '   ' → logprob: -12.014304161071777
    7. '            ' → logprob: -12.139304161071777
    8. '         ' → logprob: -12.264304161071777
    9. '          ' → logprob: -12.389304161071777
    10. '                        ' → logprob: -12.639304161071777

Token 284: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -2.3438327843905427e-05
    2. '_COLOR' → logprob: -11.25002384185791
    3. 'COLOR' → logprob: -12.62502384185791
    4. 'color' → logprob: -13.62502384185791
    5. 'Flag' → logprob: -13.75002384185791
    6. '_Color' → logprob: -13.87502384185791
    7. '.RED' → logprob: -13.87502384185791
    8. 'Red' → logprob: -14.25002384185791
    9. 'RED' → logprob: -15.25002384185791
    10. ':' → logprob: -15.37502384185791

Token 285: '.RED' (ID: 72268)
  Prédit: '.RED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.RED' → logprob: -0.0016735144890844822
    2. 'RED' → logprob: -6.751673698425293
    3. ':' → logprob: -8.376673698425293
    4. '.' → logprob: -8.751673698425293
    5. '.WHITE' → logprob: -9.876673698425293
    6. '.BLUE' → logprob: -11.126673698425293
    7. ' .' → logprob: -11.376673698425293
    8. '.Red' → logprob: -12.001673698425293
    9. '.FLAG' → logprob: -12.126673698425293
    10. ' RED' → logprob: -12.501673698425293

Token 286: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03613406792283058
    2. ']:' → logprob: -3.4111340045928955
    3. ']' → logprob: -6.286134243011475
    4. '):' → logprob: -8.661133766174316
    5. ':]' → logprob: -8.786133766174316
    6. '}:' → logprob: -8.911133766174316
    7. '   ' → logprob: -10.036133766174316
    8. ' :' → logprob: -10.161133766174316
    9. '}' → logprob: -10.411133766174316
    10. ']}' → logprob: -10.911133766174316

Token 287: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8119652271270752
    2. '[]}' → logprob: -1.0619652271270752
    3. ' []' → logprob: -1.5619652271270752
    4. '}' → logprob: -7.686964988708496
    5. ' ' → logprob: -11.186964988708496
    6. ' }' → logprob: -11.311964988708496
    7. '=[]' → logprob: -12.436964988708496
    8. '[]
' → logprob: -12.561964988708496
    9. '[]

' → logprob: -12.561964988708496
    10. '}
' → logprob: -12.561964988708496

Token 288: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.008280511945486069
    2. '}
' → logprob: -5.008280277252197
    3. '   ' → logprob: -6.883280277252197
    4. '       ' → logprob: -8.258280754089355
    5. ')' → logprob: -9.133280754089355
    6. '}

' → logprob: -9.258280754089355
    7. ' }' → logprob: -9.633280754089355
    8. ',' → logprob: -13.133280754089355
    9. ')}' → logprob: -13.133280754089355
    10. '}
' → logprob: -13.383280754089355

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25510168075561523
    2. ' for' → logprob: -2.1301016807556152
    3. 'for' → logprob: -2.2551016807556152
    4. '
' → logprob: -7.505101680755615
    5. '	for' → logprob: -8.130102157592773
    6. '   ' → logprob: -8.255102157592773
    7. '        
' → logprob: -8.880102157592773
    8. '	' → logprob: -8.880102157592773
    9. '<|end|>' → logprob: -11.005102157592773
    10. ')' → logprob: -11.130102157592773

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21328701078891754
    2. '       ' → logprob: -1.9632869958877563
    3. ' for' → logprob: -2.963287115097046
    4. '   ' → logprob: -10.963287353515625
    5. '	for' → logprob: -12.088287353515625
    6. '        
' → logprob: -12.713287353515625
    7. '```' → logprob: -12.963287353515625
    8. ')' → logprob: -14.213287353515625
    9. '           ' → logprob: -15.213287353515625
    10. ' ' → logprob: -15.213287353515625

Token 291: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4287501871585846
    2. ' row' → logprob: -1.0537501573562622
    3. '   ' → logprob: -10.303750038146973
    4. ' ' → logprob: -11.928750038146973
    5. 'r' → logprob: -12.678750038146973
    6. '	row' → logprob: -13.303750038146973
    7. ' i' → logprob: -13.553750038146973
    8. '  ' → logprob: -13.928750038146973
    9. 'i' → logprob: -14.428750038146973
    10. '    ' → logprob: -14.928750038146973

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00030852947384119034
    2. 'in' → logprob: -8.125308990478516
    3. ' ' → logprob: -12.125308990478516
    4. 'row' → logprob: -13.125308990478516
    5. '   ' → logprob: -13.625308990478516
    6. 'd' → logprob: -14.375308990478516
    7. '	in' → logprob: -14.625308990478516
    8. ',' → logprob: -14.875308990478516
    9. '  ' → logprob: -15.125308990478516
    10. 'index' → logprob: -15.562808990478516

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163747429847717
    2. ' self' → logprob: -4.264163970947266
    3. '(self' → logprob: -15.764163970947266
    4. '	self' → logprob: -17.764163970947266
    5. '       ' → logprob: -17.889163970947266
    6. '=self' → logprob: -18.264163970947266
    7. '
' → logprob: -19.139163970947266
    8. '[self' → logprob: -19.389163970947266
    9. '   ' → logprob: -19.514163970947266
    10. ':self' → logprob: -19.639163970947266

Token 294: '.rows' (ID: 41542)
  Prédit: '.rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -6.837811088189483e-05
    2. 'rows' → logprob: -9.625068664550781
    3. '.' → logprob: -13.500068664550781
    4. '	rows' → logprob: -14.250068664550781
    5. ' .' → logprob: -15.750068664550781
    6. ' rows' → logprob: -17.00006866455078
    7. '.
' → logprob: -17.00006866455078
    8. 's' → logprob: -17.25006866455078
    9. '(rows' → logprob: -17.50006866455078
    10. ' ' → logprob: -17.75006866455078

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004637434147298336
    2. ':
' → logprob: -5.379637241363525
    3. ' :' → logprob: -12.129637718200684
    4. '):' → logprob: -12.379637718200684
    5. ':
' → logprob: -13.629637718200684
    6. ',' → logprob: -13.879637718200684
    7. '.' → logprob: -14.004637718200684
    8. '):
' → logprob: -14.004637718200684
    9. ':

' → logprob: -14.004637718200684
    10. '       ' → logprob: -14.129637718200684

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011317544616758823
    2. '       ' → logprob: -5.261317729949951
    3. ' for' → logprob: -5.636317729949951
    4. 'for' → logprob: -6.386317729949951
    5. '   ' → logprob: -7.261317729949951
    6. ' cost' → logprob: -10.386317253112793
    7. 'cost' → logprob: -10.386317253112793
    8. '```' → logprob: -10.886317253112793
    9. '
' → logprob: -11.511317253112793
    10. '               ' → logprob: -12.011317253112793

Token 297: ' for' (ID: 395)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.29617810249328613
    2. ' cost' → logprob: -1.9211781024932861
    3. 'for' (adapté à ' for') → logprob: -2.421178102493286
    4. ' for' → logprob: -4.546177864074707
    5. '   ' → logprob: -5.296177864074707
    6. '           ' → logprob: -5.921177864074707
    7. '       ' → logprob: -5.921177864074707
    8. ' ' → logprob: -9.671177864074707
    9. '    ' → logprob: -11.421177864074707
    10. '  ' → logprob: -11.671177864074707

Token 298: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0011718906462192535
    2. ' color' → logprob: -6.751172065734863
    3. 'c' → logprob: -14.126172065734863
    4. 'col' → logprob: -14.751172065734863
    5. '	color' → logprob: -15.126172065734863
    6. 'Color' → logprob: -15.626172065734863
    7. '   ' → logprob: -17.751171112060547
    8. 'clr' → logprob: -17.876171112060547
    9. 'icolor' → logprob: -18.001171112060547
    10. '_color' → logprob: -18.251171112060547

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026550263166427612
    2. 'in' → logprob: -3.65155029296875
    3. ' ' → logprob: -9.02655029296875
    4. '<|end|>' → logprob: -9.52655029296875
    5. ',' → logprob: -10.90155029296875
    6. 'color' → logprob: -11.77655029296875
    7. '<|end|>' → logprob: -11.90155029296875
    8. ' ,' → logprob: -12.15155029296875
    9. ' color' → logprob: -12.27655029296875
    10. '[' → logprob: -12.90155029296875

Token 300: ' cost' (ID: 3097)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2971322238445282
    2. 'cost' → logprob: -2.4221322536468506
    3. ' [' → logprob: -2.5471322536468506
    4. 'Flag' → logprob: -2.9221322536468506
    5. ' cost' → logprob: -4.2971320152282715
    6. '(cost' → logprob: -4.6721320152282715
    7. ' Flag' → logprob: -5.1721320152282715
    8. '[c' → logprob: -5.2971320152282715
    9. ' (' → logprob: -6.4221320152282715
    10. '[color' → logprob: -8.42213249206543

Token 301: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -3.128163257315464e-07
    2. 'By' → logprob: -15.25
    3. '_By' → logprob: -19.25
    4. '_BY' → logprob: -19.75
    5. '[' → logprob: -19.875
    6. 'by' → logprob: -20.375
    7. '_cost' → logprob: -20.625
    8. '_' → logprob: -21.125
    9. '_for' → logprob: -21.5
    10. '_of' → logprob: -21.5

Token 302: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.003089059144258499
    2. 'Color' → logprob: -6.00308895111084
    3. '_by' → logprob: -8.00308895111084
    4. '_cost' → logprob: -8.62808895111084
    5. 'color' → logprob: -10.25308895111084
    6. '_flag' → logprob: -10.75308895111084
    7. '[' → logprob: -11.25308895111084
    8. 'By' → logprob: -11.87808895111084
    9. '_col' → logprob: -12.12808895111084
    10. 'cost' → logprob: -12.37808895111084

Token 303: '.keys' (ID: 18392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2938368320465088
    2. '.keys' → logprob: -1.4188368320465088
    3. ':
' → logprob: -4.79383659362793
    4. '):' → logprob: -6.04383659362793
    5. '<|end|>' → logprob: -6.66883659362793
    6. '):
' → logprob: -8.54383659362793
    7. '[' → logprob: -9.16883659362793
    8. ']:' → logprob: -9.29383659362793
    9. '.values' → logprob: -10.16883659362793
    10. ' :' → logprob: -10.16883659362793

Token 304: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02389971911907196
    2. '():
' → logprob: -3.773899793624878
    3. '()' → logprob: -7.398899555206299
    4. ' ():' → logprob: -11.023900032043457
    5. '():
' → logprob: -11.023900032043457
    6. ':' → logprob: -12.148900032043457
    7. '(' → logprob: -13.023900032043457
    8. '():

' → logprob: -13.398900032043457
    9. '):' → logprob: -16.14889907836914
    10. ' ()' → logprob: -16.64889907836914

Token 305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006020752713084221
    2. '           ' → logprob: -5.256020545959473
    3. '<|end|>' → logprob: -8.006020545959473
    4. ' cost' → logprob: -8.756020545959473
    5. '):
' → logprob: -9.256020545959473
    6. '       ' → logprob: -10.631020545959473
    7. 'cost' → logprob: -10.631020545959473
    8. ':' → logprob: -10.881020545959473
    9. '	       ' → logprob: -11.131020545959473
    10. '                
' → logprob: -11.131020545959473

Token 306: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2880171537399292
    2. 'cost' (adapté à ' cost') → logprob: -1.5380171537399292
    3. '               ' → logprob: -3.7880172729492188
    4. '                   ' → logprob: -4.413017272949219
    5. '   ' → logprob: -8.038017272949219
    6. '           ' → logprob: -8.663017272949219
    7. '
' → logprob: -10.413017272949219
    8. '_cost' → logprob: -10.663017272949219
    9. '                ' → logprob: -10.788017272949219
    10. '(cost' → logprob: -11.038017272949219

Token 307: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -4.596781946020201e-05
    2. '=' → logprob: -10.500045776367188
    3. ' =' → logprob: -11.000045776367188
    4. 'by' → logprob: -14.500045776367188
    5. '_for' → logprob: -15.000045776367188
    6. 'By' → logprob: -15.625045776367188
    7. ')' → logprob: -16.125045776367188
    8. '=[]' → logprob: -16.125045776367188
    9. 's' → logprob: -16.375045776367188
    10. '   ' → logprob: -16.875045776367188

Token 308: '_color' (ID: 15576)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.28197216987609863
    2. '_color' → logprob: -1.4069721698760986
    3. 'cost' → logprob: -7.2819719314575195
    4. ' color' → logprob: -9.65697193145752
    5. 'row' → logprob: -11.03197193145752
    6. 'col' → logprob: -11.03197193145752
    7. 'olor' → logprob: -11.28197193145752
    8. '_cost' → logprob: -11.53197193145752
    9. '[color' → logprob: -12.78197193145752
    10. 'colo' → logprob: -13.65697193145752

Token 309: '[color' (ID: 190244)
  Prédit: '[color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[color' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.62501049041748
    3. '[c' → logprob: -14.75001049041748
    4. '][' → logprob: -15.12501049041748
    5. 'color' → logprob: -15.25001049041748
    6. '=color' → logprob: -16.375009536743164
    7. '[col' → logprob: -16.875009536743164
    8. '(color' → logprob: -17.000009536743164
    9. ' [' → logprob: -17.125009536743164
    10. ',color' → logprob: -18.000009536743164

Token 310: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06268283724784851
    2. '.append' → logprob: -2.812682867050171
    3. ').' → logprob: -7.437682628631592
    4. '.' → logprob: -10.06268310546875
    5. ' ].' → logprob: -10.18768310546875
    6. '.app' → logprob: -11.43768310546875
    7. 'append' → logprob: -11.43768310546875
    8. ']' → logprob: -11.56268310546875
    9. '.ap' → logprob: -12.31268310546875
    10. '   ' → logprob: -12.43768310546875

Token 311: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -17.25
    4. 'appen' → logprob: -19.5
    5. 'app' → logprob: -20.5
    6. '	append' → logprob: -20.5
    7. '_append' → logprob: -20.5
    8. 'Append' → logprob: -21.0
    9. 'ap' → logprob: -22.875
    10. '   ' → logprob: -23.625

Token 312: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.12730760872364044
    2. ' row' → logprob: -2.127307653427124
    3. '(row' → logprob: -7.877307415008545
    4. '[row' → logprob: -16.127307891845703
    5. ',row' → logprob: -16.752307891845703
    6. '	row' → logprob: -17.002307891845703
    7. '=row' → logprob: -17.377307891845703
    8. '$row' → logprob: -19.377307891845703
    9. ' (' → logprob: -20.252307891845703
    10. '(' → logprob: -20.377307891845703

Token 313: '.repaint' (ID: 169397)
  Prédit: '.repaint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.repaint' → logprob: -0.00011474833445390686
    2. '.' → logprob: -9.625114440917969
    3. '.re' → logprob: -10.250114440917969
    4. ' .' → logprob: -11.875114440917969
    5. '.paint' → logprob: -12.750114440917969
    6. '.rep' → logprob: -13.750114440917969
    7. ').' → logprob: -14.125114440917969
    8. '.p' → logprob: -15.125114440917969
    9. 're' → logprob: -15.875114440917969
    10. '   ' → logprob: -15.875114440917969

Token 314: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.45848218582978e-06
    2. 'cost' → logprob: -13.75000286102295
    3. '_color' → logprob: -13.87500286102295
    4. '_' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.875001907348633
    6. '_c' → logprob: -17.375001907348633
    7. ')_' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_COST' → logprob: -18.375001907348633
    10. '_code' → logprob: -18.875001907348633

Token 315: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.014208407141268253
    2. '(' → logprob: -4.2642083168029785
    3. ' (' → logprob: -11.014208793640137
    4. '(cost' → logprob: -11.764208793640137
    5. '(
' → logprob: -11.889208793640137
    6. ' color' → logprob: -12.139208793640137
    7. 'color' → logprob: -12.139208793640137
    8. ')' → logprob: -13.014208793640137
    9. '(colors' → logprob: -15.889208793640137
    10. '(Color' → logprob: -16.01420783996582

Token 316: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20157910883426666
    2. ')' → logprob: -1.7015790939331055
    3. ' ))' → logprob: -9.076579093933105
    4. ' )' → logprob: -10.701579093933105
    5. '))
' → logprob: -10.826579093933105
    6. ')
' → logprob: -13.201579093933105
    7. ')))' → logprob: -13.326579093933105
    8. '   ' → logprob: -13.326579093933105
    9. '()))' → logprob: -13.326579093933105
    10. ' ' → logprob: -14.326579093933105

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35152867436408997
    2. '
' → logprob: -1.3515286445617676
    3. 'for' → logprob: -4.101528644561768
    4. ' for' → logprob: -4.601528644561768
    5. '        
' → logprob: -4.726528644561768
    6. '   ' → logprob: -6.976528644561768
    7. '```' → logprob: -7.976528644561768
    8. '    
' → logprob: -8.851529121398926
    9. '<|end|>' → logprob: -9.601529121398926
    10. '	for' → logprob: -9.976529121398926

Token 318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06833047419786453
    2. ' for' → logprob: -2.8183305263519287
    3. '       ' → logprob: -5.06833028793335
    4. '   ' → logprob: -10.693330764770508
    5. '
' → logprob: -11.068330764770508
    6. '```' → logprob: -12.318330764770508
    7. '	for' → logprob: -12.818330764770508
    8. '        
' → logprob: -13.068330764770508
    9. 'white' → logprob: -14.818330764770508
    10. ' ' → logprob: -14.818330764770508

Token 319: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.07893726974725723
    2. 'white' → logprob: -2.578937292098999
    3. ' ' → logprob: -10.828937530517578
    4. '   ' → logprob: -10.953937530517578
    5. 'w' → logprob: -12.328937530517578
    6. ' i' → logprob: -13.578937530517578
    7. ' w' → logprob: -14.203937530517578
    8. '  ' → logprob: -14.203937530517578
    9. '白' → logprob: -14.578937530517578
    10. '_white' → logprob: -14.703937530517578

Token 320: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -6.704273118884885e-07
    2. '_len' → logprob: -15.250000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_white' → logprob: -16.125
    5. '_length' → logprob: -16.375
    6. 'end' → logprob: -16.875
    7. '_END' → logprob: -17.875
    8. '_count' → logprob: -18.625
    9. '_e' → logprob: -18.75
    10. '_size' → logprob: -19.125

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031893588602542877
    2. 'in' → logprob: -5.753189563751221
    3. ' ' → logprob: -11.753189086914062
    4. '1' → logprob: -13.253189086914062
    5. 'range' → logprob: -13.878189086914062
    6. 'In' → logprob: -15.628189086914062
    7. '```' → logprob: -15.878189086914062
    8. '_in' → logprob: -16.253189086914062
    9. ',' → logprob: -16.378189086914062
    10. '=' → logprob: -16.503189086914062

Token 322: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0052354102954268456
    2. 'range' → logprob: -5.255235195159912
    3. '	range' → logprob: -13.63023567199707
    4. '(range' → logprob: -15.13023567199707
    5. ' ' → logprob: -15.50523567199707
    6. ' xrange' → logprob: -17.75523567199707
    7. '   ' → logprob: -19.00523567199707
    8. '_range' → logprob: -20.13023567199707
    9. '1' → logprob: -20.50523567199707
    10. '  ' → logprob: -20.88023567199707

Token 323: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004129218868911266
    2. '1' → logprob: -5.504129409790039
    3. '   ' → logprob: -10.004129409790039
    4. '       ' → logprob: -13.004129409790039
    5. ' ' → logprob: -13.129129409790039
    6. ' (' → logprob: -14.004129409790039
    7. '           ' → logprob: -15.504129409790039
    8. '(
' → logprob: -16.00412940979004
    9. '[' → logprob: -16.62912940979004
    10. ',' → logprob: -17.12912940979004

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. '   ' → logprob: -11.125020027160645
    3. ' ' → logprob: -12.250020027160645
    4. '       ' → logprob: -15.750020027160645
    5. '(' → logprob: -16.875019073486328
    6. '    ' → logprob: -18.000019073486328
    7. '           ' → logprob: -18.250019073486328
    8. '  ' → logprob: -18.375019073486328
    9. ')' → logprob: -19.250019073486328
    10. '```' → logprob: -19.250019073486328

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017445837147533894
    2. ' ,' → logprob: -8.875174522399902
    3. ',self' → logprob: -10.500174522399902
    4. ',len' → logprob: -12.250174522399902
    5. ',
' → logprob: -14.125174522399902
    6. 'self' → logprob: -14.250174522399902
    7. '<|end|>' → logprob: -14.375174522399902
    8. '(self' → logprob: -16.250173568725586
    9. '       ' → logprob: -17.375173568725586
    10. ',N' → logprob: -17.500173568725586

Token 326: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00028052396373823285
    2. ' self' → logprob: -8.250280380249023
    3. '       ' → logprob: -11.000280380249023
    4. '
' → logprob: -13.625280380249023
    5. '           ' → logprob: -14.250280380249023
    6. '   ' → logprob: -14.500280380249023
    7. '(self' → logprob: -16.625280380249023
    8. '[self' → logprob: -17.125280380249023
    9. '     ' → logprob: -18.125280380249023
    10. '               ' → logprob: -18.500280380249023

Token 327: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.750000953674316
    3. 'N' → logprob: -15.000000953674316
    4. ' .' → logprob: -18.25
    5. '	N' → logprob: -18.625
    6. ' N' → logprob: -20.125
    7. '<N' → logprob: -20.25
    8. '   ' → logprob: -20.875
    9. '.n' → logprob: -21.0
    10. '
' → logprob: -21.0

Token 328: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31334230303764343
    2. ' -' → logprob: -1.3133423328399658
    3. '):' → logprob: -10.188342094421387
    4. '):
' → logprob: -10.438342094421387
    5. ' ' → logprob: -11.688342094421387
    6. ')' → logprob: -13.188342094421387
    7. '   ' → logprob: -13.438342094421387
    8. '):

' → logprob: -14.188342094421387
    9. ' ):' → logprob: -14.688342094421387
    10. ' ):
' → logprob: -15.313342094421387

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -9.875054359436035
    3. '2' → logprob: -13.500054359436035
    4. '```' → logprob: -14.625054359436035
    5. '   ' → logprob: -15.125054359436035
    6. '１' → logprob: -16.06255340576172
    7. '
' → logprob: -16.25005340576172
    8. '۱' → logprob: -16.37505340576172
    9. '१' → logprob: -16.93755340576172
    10. '  ' → logprob: -16.93755340576172

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.62500286102295
    3. '```' → logprob: -15.12500286102295
    4. '2' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.125001907348633
    6. '１' → logprob: -16.187501907348633
    7. '۱' → logprob: -16.250001907348633
    8. '
' → logprob: -16.437501907348633
    9. '१' → logprob: -16.937501907348633
    10. '

' → logprob: -17.062501907348633

Token 331: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20172536373138428
    2. '):
' → logprob: -1.7017253637313843
    3. ' ):' → logprob: -8.326725006103516
    4. ' ):
' → logprob: -10.326725006103516
    5. ')' → logprob: -10.826725006103516
    6. ':' → logprob: -11.576725006103516
    7. '):
' → logprob: -12.201725006103516
    8. '   ' → logprob: -13.701725006103516
    9. '):

' → logprob: -13.951725006103516
    10. '       ' → logprob: -14.951725006103516

Token 332: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08442641794681549
    2. ' for' → logprob: -3.0844264030456543
    3. '           ' → logprob: -3.9594264030456543
    4. '   ' → logprob: -5.459426403045654
    5. '        
' → logprob: -5.709426403045654
    6. '        ' → logprob: -5.709426403045654
    7. 'for' → logprob: -5.959426403045654
    8. '    ' → logprob: -7.084426403045654
    9. '    
' → logprob: -7.959426403045654
    10. '
' → logprob: -8.209426879882812

Token 333: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4551052451133728
    2. '       ' → logprob: -1.7051053047180176
    3. 'for' (adapté à ' for') → logprob: -1.7051053047180176
    4. '           ' → logprob: -6.455105304718018
    5. '   ' → logprob: -7.580105304718018
    6. '	for' → logprob: -11.45510482788086
    7. ' ' → logprob: -11.70510482788086
    8. '               ' → logprob: -12.95510482788086
    9. '        ' → logprob: -13.45510482788086
    10. '
' → logprob: -13.45510482788086

Token 334: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0788949653506279
    2. ' blue' → logprob: -2.578894853591919
    3. ' ' → logprob: -12.57889461517334
    4. '   ' → logprob: -14.45389461517334
    5. '_blue' → logprob: -14.95389461517334
    6. 'Blue' → logprob: -15.57889461517334
    7. '```' → logprob: -15.95389461517334
    8. '  ' → logprob: -16.078895568847656
    9. 'b' → logprob: -16.328895568847656
    10. '.blue' → logprob: -16.828895568847656

Token 335: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.6240566083070007e-06
    2. 'end' → logprob: -13.750001907348633
    3. ' _' → logprob: -15.000001907348633
    4. '_blue' → logprob: -16.500001907348633
    5. '_endpoint' → logprob: -17.000001907348633
    6. '_END' → logprob: -17.000001907348633
    7. 'End' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. ''_' → logprob: -17.750001907348633
    10. ')_' → logprob: -18.000001907348633

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00861681904643774
    2. 'in' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.38361644744873
    4. '	in' → logprob: -14.63361644744873
    5. '    ' → logprob: -17.008617401123047
    6. '```' → logprob: -17.258617401123047
    7. ' ' → logprob: -17.508617401123047
    8. '   ' → logprob: -17.633617401123047
    9. ')' → logprob: -17.758617401123047
    10. 'space' → logprob: -17.883617401123047

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192955136299133
    2. ' range' → logprob: -1.501929521560669
    3. '(range' → logprob: -15.00192928314209
    4. '	range' → logprob: -15.62692928314209
    5. '   ' → logprob: -17.876930236816406
    6. ' ' → logprob: -18.251930236816406
    7. '_range' → logprob: -19.251930236816406
    8. '    ' → logprob: -20.001930236816406
    9. '       ' → logprob: -20.126930236816406
    10. '  ' → logprob: -20.876930236816406

Token 338: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.250007629394531
    3. ' white' → logprob: -13.000007629394531
    4. 'white' → logprob: -15.125007629394531
    5. '(
' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.75000762939453
    7. ' ' → logprob: -18.50000762939453
    8. '((' → logprob: -18.62500762939453
    9. '_white' → logprob: -19.12500762939453
    10. 'White' → logprob: -19.37500762939453

Token 339: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.004755138419568539
    2. ' white' → logprob: -5.379755020141602
    3. '   ' → logprob: -9.129755020141602
    4. '       ' → logprob: -11.629755020141602
    5. ' ' → logprob: -12.754755020141602
    6. '           ' → logprob: -13.004755020141602
    7. ')' → logprob: -13.379755020141602
    8. '白' → logprob: -13.754755020141602
    9. '_white' → logprob: -13.879755020141602
    10. '     ' → logprob: -13.879755020141602

Token 340: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0001713590754661709
    2. 'end' → logprob: -8.750171661376953
    3. 'End' → logprob: -12.250171661376953
    4. '+' → logprob: -12.625171661376953
    5. 'white' → logprob: -13.375171661376953
    6. '   ' → logprob: -14.375171661376953
    7. '_white' → logprob: -14.375171661376953
    8. '_END' → logprob: -15.125171661376953
    9. '       ' → logprob: -16.000171661376953
    10. '-end' → logprob: -16.000171661376953

Token 341: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740830957889557
    2. ' +' → logprob: -0.9740830659866333
    3. ',' → logprob: -12.849082946777344
    4. '1' → logprob: -13.349082946777344
    5. '+
' → logprob: -14.724082946777344
    6. '+,' → logprob: -14.849082946777344
    7. ' ' → logprob: -15.099082946777344
    8. '   ' → logprob: -15.099082946777344
    9. ' +
' → logprob: -15.599082946777344
    10. ' ,' → logprob: -16.099082946777344

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.250035285949707
    4. '
' → logprob: -16.875036239624023
    5. '  ' → logprob: -18.000036239624023
    6. ',' → logprob: -18.500036239624023
    7. '    ' → logprob: -18.875036239624023
    8. '```' → logprob: -18.875036239624023
    9. '       ' → logprob: -19.375036239624023
    10. '           ' → logprob: -19.375036239624023

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.75001335144043
    4. '
' → logprob: -17.75001335144043
    5. '2' → logprob: -17.87501335144043
    6. '  ' → logprob: -18.87501335144043
    7. '```' → logprob: -19.56251335144043
    8. '۱' → logprob: -20.62501335144043
    9. '0' → logprob: -20.81251335144043
    10. '       ' → logprob: -20.81251335144043

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ',self' → logprob: -12.375027656555176
    4. ',
' → logprob: -13.750027656555176
    5. '1' → logprob: -15.250027656555176
    6. '           ' → logprob: -16.00002670288086
    7. '(),' → logprob: -16.25002670288086
    8. ',n' → logprob: -16.25002670288086
    9. ',N' → logprob: -16.75002670288086
    10. '   ' → logprob: -17.50002670288086

Token 345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132675588130951
    2. ' self' → logprob: -1.3132675886154175
    3. '           ' → logprob: -12.438267707824707
    4. '(self' → logprob: -14.313267707824707
    5. '               ' → logprob: -14.813267707824707
    6. '       ' → logprob: -15.313267707824707
    7. ' ' → logprob: -15.438267707824707
    8. '	self' → logprob: -15.563267707824707
    9. '[self' → logprob: -15.813267707824707
    10. '   ' → logprob: -16.56326675415039

Token 346: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.004213974345475435
    2. 'self' → logprob: -5.504213809967041
    3. 'N' → logprob: -9.0042142868042
    4. ' self' → logprob: -11.7542142868042
    5. '       ' → logprob: -13.6292142868042
    6. '.' → logprob: -13.7542142868042
    7. '   ' → logprob: -14.1292142868042
    8. '.S' → logprob: -14.7542142868042
    9. ' .' → logprob: -15.0042142868042
    10. ' ' → logprob: -15.2542142868042

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3885054290294647
    2. '):
' → logprob: -1.138505458831787
    3. ')' → logprob: -7.888505458831787
    4. '-' → logprob: -8.013504981994629
    5. ' -' → logprob: -8.388504981994629
    6. '):

' → logprob: -8.888504981994629
    7. '       ' → logprob: -9.013504981994629
    8. ' ):' → logprob: -9.138504981994629
    9. '<|end|>' → logprob: -9.638504981994629
    10. '           ' → logprob: -9.888504981994629

Token 348: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31692326068878174
    2. '               ' → logprob: -1.3169232606887817
    3. 'total' → logprob: -5.941923141479492
    4. 'cost' → logprob: -7.566923141479492
    5. ' total' → logprob: -9.191923141479492
    6. '            
' → logprob: -9.316923141479492
    7. '       ' → logprob: -9.566923141479492
    8. ' cost' → logprob: -9.691923141479492
    9. '```' → logprob: -9.691923141479492
    10. 'sum' → logprob: -10.066923141479492

Token 349: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.8510960936546326
    2. 'total' → logprob: -1.6010961532592773
    3. '               ' → logprob: -1.7260961532592773
    4. ' cost' → logprob: -2.7260961532592773
    5. ' total' → logprob: -3.2260961532592773
    6. '                   ' → logprob: -3.3510961532592773
    7. '           ' → logprob: -3.6010961532592773
    8. 'white' → logprob: -4.601096153259277
    9. 'current' → logprob: -4.601096153259277
    10. ' white' → logprob: -6.101096153259277

Token 350: '_white' (ID: 105599)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2172050178050995
    2. '=' → logprob: -1.7172050476074219
    3. '_white' → logprob: -4.217205047607422
    4. '_' → logprob: -7.342205047607422
    5. '_by' → logprob: -9.342205047607422
    6. '_total' → logprob: -10.092205047607422
    7. '   ' → logprob: -10.342205047607422
    8. '           ' → logprob: -10.592205047607422
    9. '               ' → logprob: -10.967205047607422
    10. '_for' → logprob: -11.342205047607422

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16065403819084167
    2. '=' → logprob: -1.910654067993164
    3. '=sum' → logprob: -8.035654067993164
    4. '_sum' → logprob: -9.660654067993164
    5. 'sum' → logprob: -10.410654067993164
    6. ' ' → logprob: -12.285654067993164
    7. '_total' → logprob: -12.410654067993164
    8. 'total' → logprob: -13.785654067993164
    9. 's' → logprob: -14.035654067993164
    10. ' sum' → logprob: -14.660654067993164

Token 352: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0031790214125066996
    2. ' sum' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.003178596496582
    4. '           ' → logprob: -15.378178596496582
    5. '	sum' → logprob: -16.1281795501709
    6. '       ' → logprob: -16.2531795501709
    7. '               ' → logprob: -16.8781795501709
    8. ' ' → logprob: -17.5031795501709
    9. '    ' → logprob: -18.3781795501709
    10. '=sum' → logprob: -18.5031795501709

Token 353: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.001179512357339263
    2. 'cost' → logprob: -6.7511796951293945
    3. '(' → logprob: -12.126179695129395
    4. ' cost' → logprob: -12.626179695129395
    5. '(
' → logprob: -14.626179695129395
    6. ' (' → logprob: -17.251178741455078
    7. '   ' → logprob: -17.251178741455078
    8. 'Cost' → logprob: -18.876178741455078
    9. '_cost' → logprob: -19.001178741455078
    10. '               ' → logprob: -19.376178741455078

Token 354: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -14.00000286102295
    3. 'by' → logprob: -14.12500286102295
    4. 'By' → logprob: -14.12500286102295
    5. '_for' → logprob: -15.25000286102295
    6. '(cost' → logprob: -16.375003814697266
    7. 's' → logprob: -16.500003814697266
    8. '_cost' → logprob: -16.750003814697266
    9. ')' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.125003814697266

Token 355: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.11343497782945633
    2. 'color' → logprob: -2.2384350299835205
    3. '[color' → logprob: -7.988434791564941
    4. 'olor' → logprob: -8.988434791564941
    5. ' color' → logprob: -9.613434791564941
    6. 'cost' → logprob: -10.863434791564941
    7. '_cost' → logprob: -11.863434791564941
    8. 'col' → logprob: -12.113434791564941
    9. 'by' → logprob: -12.113434791564941
    10. '[' → logprob: -12.238434791564941

Token 356: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ')[' → logprob: -15.750000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[
' → logprob: -16.125
    5. ' [' → logprob: -16.125
    6. '   ' → logprob: -16.5
    7. ')' → logprob: -16.75
    8. '][' → logprob: -17.0
    9. '[color' → logprob: -17.25
    10. '       ' → logprob: -17.375

Token 357: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.000036239624023
    4. '.Flag' → logprob: -15.375036239624023
    5. ' Flag' → logprob: -16.250036239624023
    6. '[
' → logprob: -17.375036239624023
    7. 'flag' → logprob: -17.375036239624023
    8. 'Color' → logprob: -17.500036239624023
    9. '           ' → logprob: -17.875036239624023
    10. 'White' → logprob: -17.875036239624023

Token 358: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.1472419600977446e-06
    2. '_COLOR' → logprob: -15.125000953674316
    3. 'color' → logprob: -15.250000953674316
    4. '_color' → logprob: -15.625000953674316
    5. 'olor' → logprob: -16.375001907348633
    6. 'COLOR' → logprob: -16.500001907348633
    7. '<Color' → logprob: -17.000001907348633
    8. '_Color' → logprob: -17.250001907348633
    9. '	Color' → logprob: -17.250001907348633
    10. 'C' → logprob: -17.625001907348633

Token 359: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.0001721934968372807
    2. '.' → logprob: -9.37517261505127
    3. ' .' → logprob: -10.12517261505127
    4. '['' → logprob: -10.87517261505127
    5. 'WHITE' → logprob: -10.87517261505127
    6. '[' → logprob: -12.75017261505127
    7. '   ' → logprob: -13.12517261505127
    8. '.BLUE' → logprob: -13.87517261505127
    9. '.White' → logprob: -14.62517261505127
    10. '.BLACK' → logprob: -14.87517261505127

Token 360: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.03953443840146065
    2. '[:' → logprob: -3.414534330368042
    3. '][' → logprob: -5.164534568786621
    4. '[' → logprob: -8.914534568786621
    5. ']' → logprob: -11.789534568786621
    6. '   ' → logprob: -12.164534568786621
    7. '[i' → logprob: -12.914534568786621
    8. '           ' → logprob: -13.914534568786621
    9. ' [:' → logprob: -14.039534568786621
    10. '       ' → logprob: -14.414534568786621

Token 361: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -5.080963092041202e-06
    2. ' white' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.0000057220459
    4. '       ' → logprob: -17.7500057220459
    5. '           ' → logprob: -17.8750057220459
    6. '白' → logprob: -18.2500057220459
    7. ':white' → logprob: -18.6250057220459
    8. '               ' → logprob: -18.8750057220459
    9. '                   ' → logprob: -20.0000057220459
    10. '         ' → logprob: -20.5000057220459

Token 362: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0009225384565070271
    2. 'end' → logprob: -7.000922679901123
    3. 'white' → logprob: -12.125922203063965
    4. 'End' → logprob: -13.000922203063965
    5. '_white' → logprob: -14.000922203063965
    6. '   ' → logprob: -14.625922203063965
    7. '
' → logprob: -14.875922203063965
    8. '-end' → logprob: -15.125922203063965
    9. ':end' → logprob: -16.00092315673828
    10. '	end' → logprob: -16.00092315673828

Token 363: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6525492668151855
    2. ')' → logprob: -0.7775492668151855
    3. '               ' → logprob: -4.5275492668151855
    4. '])' → logprob: -5.0275492668151855
    5. '])
' → logprob: -6.4025492668151855
    6. ']' → logprob: -7.6525492668151855
    7. ')
' → logprob: -9.152549743652344
    8. ']
' → logprob: -9.902549743652344
    9. '           ' → logprob: -10.527549743652344
    10. '                   ' → logprob: -11.277549743652344

Token 364: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009567205561324954
    2. '                
' → logprob: -7.2509565353393555
    3. '
' → logprob: -9.375956535339355
    4. ' cost' → logprob: -9.625956535339355
    5. '                ' → logprob: -10.500956535339355
    6. 'cost' → logprob: -10.750956535339355
    7. '              ' → logprob: -10.875956535339355
    8. '           ' → logprob: -11.250956535339355
    9. '               
' → logprob: -12.125956535339355
    10. '                   ' → logprob: -13.250956535339355

Token 365: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.18903523683547974
    2. '               ' → logprob: -1.939035177230835
    3. ' cost' → logprob: -3.564035177230835
    4. '                ' → logprob: -10.939035415649414
    5. '           ' → logprob: -11.064035415649414
    6. '              ' → logprob: -11.189035415649414
    7. '                   ' → logprob: -11.689035415649414
    8. '   ' → logprob: -12.189035415649414
    9. '                
' → logprob: -12.439035415649414
    10. '             ' → logprob: -13.189035415649414

Token 366: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.00038443657103925943
    2. '_' → logprob: -8.125384330749512
    3. '_by' → logprob: -9.500384330749512
    4. '_white' → logprob: -12.500384330749512
    5. '_BLUE' → logprob: -12.750384330749512
    6. 'blue' → logprob: -14.000384330749512
    7. '_black' → logprob: -14.000384330749512
    8. '[' → logprob: -14.375384330749512
    9. '_=' → logprob: -14.500384330749512
    10. '       ' → logprob: -14.750384330749512

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. ' ' → logprob: -15.011871337890625
    4. '=sum' → logprob: -16.136871337890625
    5. ' =
' → logprob: -16.511871337890625
    6. ' +=' → logprob: -17.511871337890625
    7. '=
' → logprob: -17.511871337890625
    8. '           ' → logprob: -17.636871337890625
    9. '        ' → logprob: -17.636871337890625
    10. '   ' → logprob: -17.886871337890625

Token 368: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.10020839422941208
    2. 'sum' → logprob: -2.350208282470703
    3. '	sum' → logprob: -14.225208282470703
    4. '(sum' → logprob: -15.225208282470703
    5. ' ' → logprob: -15.850208282470703
    6. ' ' → logprob: -15.975208282470703
    7. '=sum' → logprob: -16.225208282470703
    8. '               ' → logprob: -16.850208282470703
    9. '                ' → logprob: -16.850208282470703
    10. '.sum' → logprob: -16.850208282470703

Token 369: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0007124318508431315
    2. '(' → logprob: -7.2507123947143555
    3. ' cost' → logprob: -14.000712394714355
    4. ' (' → logprob: -14.125712394714355
    5. '(
' → logprob: -14.375712394714355
    6. 'cost' → logprob: -15.000712394714355
    7. '(color' → logprob: -17.625713348388672
    8. '_cost' → logprob: -19.750713348388672
    9. '(

' → logprob: -19.750713348388672
    10. '(cap' → logprob: -19.875713348388672

Token 370: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -12.00001335144043
    3. '_color' → logprob: -13.00001335144043
    4. 'By' → logprob: -13.25001335144043
    5. 'by' → logprob: -13.87501335144043
    6. '   ' → logprob: -14.25001335144043
    7. '_cost' → logprob: -14.50001335144043
    8. '[_' → logprob: -15.37501335144043
    9. '[color' → logprob: -15.87501335144043
    10. '                   ' → logprob: -15.87501335144043

Token 371: '_color' (ID: 15576)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4753754138946533
    2. 'color' → logprob: -0.9753754138946533
    3. '_color' → logprob: -7.225375175476074
    4. '[color' → logprob: -7.975375175476074
    5. ' cost' → logprob: -9.225375175476074
    6. ' color' → logprob: -9.975375175476074
    7. '_cost' → logprob: -10.100375175476074
    8. '[' → logprob: -10.725375175476074
    9. '(cost' → logprob: -11.975375175476074
    10. '[c' → logprob: -13.725375175476074

Token 372: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '[
' → logprob: -13.875003814697266
    3. ' [' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.125003814697266
    5. '[[' → logprob: -15.250003814697266
    6. '       ' → logprob: -15.625003814697266
    7. ' ' → logprob: -15.625003814697266
    8. '	' → logprob: -15.875003814697266
    9. '  ' → logprob: -16.000003814697266
    10. '    ' → logprob: -16.625003814697266

Token 373: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.0017152780201286077
    2. '[' → logprob: -6.376715183258057
    3. ' Flag' → logprob: -11.501715660095215
    4. '.Flag' → logprob: -13.376715660095215
    5. '   ' → logprob: -14.501715660095215
    6. 'Blue' → logprob: -15.626715660095215
    7. 'FLAG' → logprob: -15.751715660095215
    8. '_flag' → logprob: -15.876715660095215
    9. ' ' → logprob: -16.3767147064209
    10. 'flag' → logprob: -16.5017147064209

Token 374: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.00012558852904476225
    2. '.BLUE' → logprob: -9.750125885009766
    3. 'Flag' → logprob: -10.375125885009766
    4. '[' → logprob: -11.000125885009766
    5. 'COLOR' → logprob: -11.750125885009766
    6. 'color' → logprob: -12.000125885009766
    7. '_COLOR' → logprob: -13.750125885009766
    8. 'BLUE' → logprob: -14.000125885009766
    9. '.FLAG' → logprob: -14.500125885009766
    10. '.COLOR' → logprob: -14.500125885009766

Token 375: '.BLUE' (ID: 144649)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024250061251223087
    2. '.BLUE' → logprob: -6.502425193786621
    3. 'BLUE' → logprob: -7.377425193786621
    4. 'Flag' → logprob: -8.252425193786621
    5. '.Flag' → logprob: -11.252425193786621
    6. '   ' → logprob: -12.127425193786621
    7. '.FLAG' → logprob: -12.127425193786621
    8. '.Blue' → logprob: -12.627425193786621
    9. 'FLAG' → logprob: -13.627425193786621
    10. '[[' → logprob: -14.002425193786621

Token 376: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00532175088301301
    2. '[:' → logprob: -5.630321979522705
    3. '][' → logprob: -6.630321979522705
    4. ' [' → logprob: -9.880321502685547
    5. 'white' → logprob: -9.880321502685547
    6. '   ' → logprob: -10.255321502685547
    7. '[col' → logprob: -10.255321502685547
    8. ')[' → logprob: -10.255321502685547
    9. '][:' → logprob: -11.130321502685547
    10. '
' → logprob: -11.255321502685547

Token 377: 'white' (ID: 9988)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1016792356967926
    2. 'white' → logprob: -2.3516793251037598
    3. ' white' → logprob: -6.72667932510376
    4. ':white' → logprob: -9.101678848266602
    5. '白' → logprob: -9.726678848266602
    6. '   ' → logprob: -10.476678848266602
    7. '_white' → logprob: -10.976678848266602
    8. 'White' → logprob: -11.601678848266602
    9. '][' → logprob: -11.726678848266602
    10. '[
' → logprob: -11.726678848266602

Token 378: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0003277176001574844
    2. 'end' → logprob: -8.750328063964844
    3. 'white' → logprob: -8.750328063964844
    4. 'End' → logprob: -12.250328063964844
    5. '_white' → logprob: -13.125328063964844
    6. '   ' → logprob: -14.000328063964844
    7. ':end' → logprob: -14.500328063964844
    8. 'blue' → logprob: -14.500328063964844
    9. ':white' → logprob: -15.125328063964844
    10. '```' → logprob: -15.250328063964844

Token 379: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031580092036165297
    2. ' :' → logprob: -8.25031566619873
    3. '   ' → logprob: -10.75031566619873
    4. 'blue' → logprob: -10.87531566619873
    5. ' blue' → logprob: -12.25031566619873
    6. ':semicolon' → logprob: -12.87531566619873
    7. ':white' → logprob: -13.00031566619873
    8. '
' → logprob: -14.25031566619873
    9. ' ' → logprob: -14.37531566619873
    10. '       ' → logprob: -14.50031566619873

Token 380: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.00862887967377901
    2. ' blue' → logprob: -4.758628845214844
    3. '               ' → logprob: -11.508628845214844
    4. '           ' → logprob: -13.258628845214844
    5. '                   ' → logprob: -13.508628845214844
    6. '   ' → logprob: -14.883628845214844
    7. ' ' → logprob: -15.383628845214844
    8. '       ' → logprob: -15.883628845214844
    9. '             ' → logprob: -16.133628845214844
    10. '              ' → logprob: -16.258628845214844

Token 381: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00016039233014453202
    2. 'end' → logprob: -8.750160217285156
    3. 'blue' → logprob: -14.375160217285156
    4. 'End' → logprob: -14.875160217285156
    5. '-end' → logprob: -15.750160217285156
    6. 'e' → logprob: -15.750160217285156
    7. '   ' → logprob: -16.125160217285156
    8. '_blue' → logprob: -16.375160217285156
    9. '+' → logprob: -17.250160217285156
    10. '_start' → logprob: -17.500160217285156

Token 382: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07896061986684799
    2. '])
' → logprob: -2.578960657119751
    3. '               ' → logprob: -10.578960418701172
    4. ')' → logprob: -11.078960418701172
    5. '])
' → logprob: -11.828960418701172
    6. ')
' → logprob: -11.953960418701172
    7. ' ])' → logprob: -12.078960418701172
    8. '           ' → logprob: -12.203960418701172
    9. '])

' → logprob: -13.453960418701172
    10. ' ])
' → logprob: -13.828960418701172

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.7252845029579476e-05
    2. '                ' → logprob: -11.625027656555176
    3. '              ' → logprob: -12.375027656555176
    4. '                
' → logprob: -12.375027656555176
    5. '           ' → logprob: -12.625027656555176
    6. ' cost' → logprob: -12.875027656555176
    7. '                   ' → logprob: -13.500027656555176
    8. 'cost' → logprob: -14.125027656555176
    9. '       ' → logprob: -14.375027656555176
    10. '             ' → logprob: -14.875027656555176

Token 384: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.6809988021850586
    2. ' cost' → logprob: -0.8059988021850586
    3. '               ' → logprob: -3.0559988021850586
    4. '                ' → logprob: -10.055998802185059
    5. '           ' → logprob: -10.305998802185059
    6. '              ' → logprob: -10.555998802185059
    7. '_cost' → logprob: -10.680998802185059
    8. '   ' → logprob: -11.430998802185059
    9. '                   ' → logprob: -11.805998802185059
    10. '             ' → logprob: -12.430998802185059

Token 385: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -3.7697225252486533e-06
    2. 'red' → logprob: -13.000003814697266
    3. '_' → logprob: -14.250003814697266
    4. '_RED' → logprob: -15.125003814697266
    5. '[' → logprob: -15.875003814697266
    6. 'RED' → logprob: -16.000003814697266
    7. '_r' → logprob: -16.625003814697266
    8. 'Red' → logprob: -16.750003814697266
    9. '```' → logprob: -17.375003814697266
    10. ' red' → logprob: -17.500003814697266

Token 386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020796209573746
    2. '=' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.725208282470703
    4. '        ' → logprob: -15.725208282470703
    5. '=sum' → logprob: -15.850208282470703
    6. '           ' → logprob: -15.975208282470703
    7. '   ' → logprob: -16.350208282470703
    8. '       ' → logprob: -16.850208282470703
    9. '    ' → logprob: -16.975208282470703
    10. ')' → logprob: -17.350208282470703

Token 387: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.04300285503268242
    2. 'sum' → logprob: -3.1680028438568115
    3. '	sum' → logprob: -13.66800308227539
    4. '(sum' → logprob: -14.04300308227539
    5. '=sum' → logprob: -14.41800308227539
    6. ' ' → logprob: -15.16800308227539
    7. '                ' → logprob: -15.29300308227539
    8. '               ' → logprob: -15.79300308227539
    9. '.sum' → logprob: -15.91800308227539
    10. ' ' → logprob: -16.16800308227539

Token 388: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'cost' → logprob: -14.75000286102295
    4. ' cost' → logprob: -16.625001907348633
    5. '(
' → logprob: -17.125001907348633
    6. ' (' → logprob: -18.750001907348633
    7. '(color' → logprob: -22.000001907348633
    8. '.cost' → logprob: -22.000001907348633
    9. '_cost' → logprob: -22.125001907348633
    10. '   ' → logprob: -23.375001907348633

Token 389: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -12.500008583068848
    3. 'by' → logprob: -12.625008583068848
    4. 'By' → logprob: -13.500008583068848
    5. 's' → logprob: -16.250009536743164
    6. '[_' → logprob: -16.375009536743164
    7. '   ' → logprob: -16.750009536743164
    8. '_color' → logprob: -16.875009536743164
    9. '[color' → logprob: -16.875009536743164
    10. '_of' → logprob: -17.000009536743164

Token 390: '_color' (ID: 15576)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.06416428089141846
    2. 'color' → logprob: -2.814164161682129
    3. '(cost' → logprob: -6.689164161682129
    4. '_color' → logprob: -7.689164161682129
    5. ' cost' → logprob: -8.439164161682129
    6. '_cost' → logprob: -8.564164161682129
    7. '[color' → logprob: -10.439164161682129
    8. '[' → logprob: -11.189164161682129
    9. ' color' → logprob: -11.314164161682129
    10. '(color' → logprob: -11.689164161682129

Token 391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.125001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '[[' → logprob: -16.875001907348633
    6. '(' → logprob: -17.000001907348633
    7. '       ' → logprob: -17.500001907348633
    8. '           ' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '[(' → logprob: -17.875001907348633

Token 392: 'Flag' (ID: 13267)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011085901409387589
    2. 'Flag' → logprob: -4.5110859870910645
    3. 'Red' → logprob: -10.511085510253906
    4. '[
' → logprob: -12.511085510253906
    5. '(' → logprob: -13.761085510253906
    6. '   ' → logprob: -14.011085510253906
    7. 'FLAG' → logprob: -14.011085510253906
    8. ' Flag' → logprob: -14.261085510253906
    9. 'red' → logprob: -14.511085510253906
    10. ')' → logprob: -14.761085510253906

Token 393: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -4.0484450437361374e-05
    2. '[' → logprob: -10.500040054321289
    3. '_COLOR' → logprob: -11.625040054321289
    4. 'color' → logprob: -13.750040054321289
    5. '.RED' → logprob: -14.375040054321289
    6. 'Flag' → logprob: -14.375040054321289
    7. 'Red' → logprob: -14.875040054321289
    8. 'COLOR' → logprob: -14.875040054321289
    9. 'C' → logprob: -16.12504005432129
    10. '_color' → logprob: -16.25004005432129

Token 394: '.RED' (ID: 72268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029910853132605553
    2. '.RED' → logprob: -3.5299108028411865
    3. '.FLAG' → logprob: -9.404911041259766
    4. 'RED' → logprob: -10.154911041259766
    5. '   ' → logprob: -11.154911041259766
    6. 'Flag' → logprob: -11.904911041259766
    7. '['' → logprob: -12.154911041259766
    8. '.Flag' → logprob: -12.904911041259766
    9. '][' → logprob: -13.529911041259766
    10. '       ' → logprob: -13.779911041259766

Token 395: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08919702470302582
    2. '][' → logprob: -2.4641969203948975
    3. ')[' → logprob: -9.214197158813477
    4. ' [' → logprob: -9.714197158813477
    5. '>[' → logprob: -9.839197158813477
    6. '}[' → logprob: -10.964197158813477
    7. ' ][' → logprob: -12.214197158813477
    8. ']' → logprob: -12.339197158813477
    9. '[b' → logprob: -12.339197158813477
    10. '   ' → logprob: -12.839197158813477

Token 396: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0005532711511477828
    2. ' blue' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.000553131103516
    4. '_blue' → logprob: -16.750553131103516
    5. ' ' → logprob: -17.375553131103516
    6. 'red' → logprob: -17.625553131103516
    7. '[' → logprob: -17.875553131103516
    8. '
' → logprob: -18.000553131103516
    9. '           ' → logprob: -18.375553131103516
    10. '.blue' → logprob: -18.500553131103516

Token 397: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.4868770196917467e-05
    2. 'end' → logprob: -10.750024795532227
    3. 'End' → logprob: -13.375024795532227
    4. '_red' → logprob: -14.875024795532227
    5. ':end' → logprob: -15.125024795532227
    6. '```' → logprob: -15.250024795532227
    7. '-end' → logprob: -15.625024795532227
    8. '_END' → logprob: -16.250024795532227
    9. '   ' → logprob: -16.375024795532227
    10. 'e' → logprob: -16.500024795532227

Token 398: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005132370279170573
    2. ':])
' → logprob: -7.625513076782227
    3. '])' → logprob: -11.125513076782227
    4. ' :' → logprob: -11.875513076782227
    5. ':]' → logprob: -13.125513076782227
    6. ':],' → logprob: -14.625513076782227
    7. ':)' → logprob: -15.750513076782227
    8. ' ])' → logprob: -16.000513076782227
    9. ' ' → logprob: -16.000513076782227
    10. '   ' → logprob: -16.125513076782227

Token 399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00029637437546625733
    2. '
' → logprob: -9.125296592712402
    3. '                
' → logprob: -9.125296592712402
    4. '           ' → logprob: -10.250296592712402
    5. ')' → logprob: -11.250296592712402
    6. '              ' → logprob: -11.750296592712402
    7. '```' → logprob: -11.875296592712402
    8. '<|end|>' → logprob: -12.500296592712402
    9. '                   ' → logprob: -12.875296592712402
    10. '                ' → logprob: -13.125296592712402

Token 400: ' total' (ID: 3609)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8540380001068115
    2. 'total' (adapté à ' total') → logprob: -0.8540380001068115
    3. ' total' → logprob: -2.6040380001068115
    4. 'cost' → logprob: -3.1040380001068115
    5. 'current' → logprob: -4.104038238525391
    6. ' cost' → logprob: -4.604038238525391
    7. ' current' → logprob: -6.479038238525391
    8. 'min' → logprob: -7.229038238525391
    9. '           ' → logprob: -8.10403823852539
    10. ' min' → logprob: -8.35403823852539

Token 401: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.875000953674316
    3. ' _' → logprob: -15.500000953674316
    4. 'cost' → logprob: -16.625001907348633
    5. '_COST' → logprob: -16.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. '_color' → logprob: -18.375001907348633
    8. '_total' → logprob: -18.375001907348633
    9. '_code' → logprob: -18.375001907348633
    10. '_score' → logprob: -18.750001907348633

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245712742209435
    2. '=' → logprob: -3.7732458114624023
    3. ' =
' → logprob: -16.398244857788086
    4. ' ' → logprob: -17.398244857788086
    5. '                ' → logprob: -17.773244857788086
    6. '        ' → logprob: -17.898244857788086
    7. '           ' → logprob: -17.898244857788086
    8. '            ' → logprob: -18.023244857788086
    9. ')' → logprob: -18.148244857788086
    10. '    ' → logprob: -18.648244857788086

Token 403: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.011047814972698689
    2. ' cost' → logprob: -4.511047840118408
    3. '(cost' → logprob: -18.76104736328125
    4. '   ' → logprob: -19.88604736328125
    5. ' ' → logprob: -21.26104736328125
    6. '_cost' → logprob: -21.51104736328125
    7. 'color' → logprob: -23.01104736328125
    8. 'Cost' → logprob: -23.01104736328125
    9. '  ' → logprob: -23.51104736328125
    10. '     ' → logprob: -23.76104736328125

Token 404: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -2.2603901015827432e-05
    2. '_red' → logprob: -10.750022888183594
    3. '_' → logprob: -15.375022888183594
    4. 'white' → logprob: -15.750022888183594
    5. '_WHITE' → logprob: -15.750022888183594
    6. '_total' → logprob: -16.625022888183594
    7. '_blue' → logprob: -16.750022888183594
    8. '_color' → logprob: -17.000022888183594
    9. ' _' → logprob: -17.000022888183594
    10. ' ' → logprob: -17.375022888183594

Token 405: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021184384822845
    2. '+' → logprob: -2.3502118587493896
    3. ' +
' → logprob: -12.850212097167969
    4. '<|end|>' → logprob: -13.225212097167969
    5. '+
' → logprob: -15.100212097167969
    6. ' ' → logprob: -15.850212097167969
    7. ' ' → logprob: -16.35021209716797
    8. ' +
' → logprob: -16.85021209716797
    9. '        ' → logprob: -17.47521209716797
    10. ')' → logprob: -17.47521209716797

Token 406: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12693031132221222
    2. ' cost' → logprob: -2.1269302368164062
    3. 'total' → logprob: -13.251930236816406
    4. '_cost' → logprob: -15.751930236816406
    5. '(cost' → logprob: -16.001930236816406
    6. ' total' → logprob: -16.751930236816406
    7. 'color' → logprob: -18.501930236816406
    8. '```' → logprob: -18.626930236816406
    9. '
' → logprob: -18.876930236816406
    10. 'Cost' → logprob: -19.126930236816406

Token 407: '_blue' (ID: 81479)
  Prédit: '_blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blue' → logprob: -0.00026777281891554594
    2. '_red' → logprob: -8.25026798248291
    3. '_white' → logprob: -12.37526798248291
    4. '_' → logprob: -13.75026798248291
    5. '_cost' → logprob: -14.50026798248291
    6. '_black' → logprob: -15.75026798248291
    7. '_BLUE' → logprob: -16.000267028808594
    8. '_green' → logprob: -16.250267028808594
    9. '_b' → logprob: -16.750267028808594
    10. ')_' → logprob: -17.125267028808594

Token 408: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1270352005958557
    2. '+' → logprob: -2.127035140991211
    3. ' +
' → logprob: -9.502035140991211
    4. '<|end|>' → logprob: -10.627035140991211
    5. '+
' → logprob: -12.127035140991211
    6. ' +
' → logprob: -14.127035140991211
    7. ' ' → logprob: -14.502035140991211
    8. '<|end|>' → logprob: -14.752035140991211
    9. ')' → logprob: -15.002035140991211
    10. ' +

' → logprob: -15.502035140991211

Token 409: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0031777136027812958
    2. ' cost' → logprob: -5.753177642822266
    3. 'color' → logprob: -18.503177642822266
    4. '               ' → logprob: -19.128177642822266
    5. '_cost' → logprob: -19.253177642822266
    6. '(cost' → logprob: -20.378177642822266
    7. '   ' → logprob: -20.753177642822266
    8. '                   ' → logprob: -21.503177642822266
    9. 'count' → logprob: -21.628177642822266
    10. '           ' → logprob: -22.003177642822266

Token 410: '_red' (ID: 61951)
  Prédit: '_red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_red' → logprob: -4.842555426876061e-06
    2. 'red' → logprob: -12.625004768371582
    3. '_cost' → logprob: -13.500004768371582
    4. 'Red' → logprob: -17.2500057220459
    5. '_blue' → logprob: -18.7500057220459
    6. '_RED' → logprob: -18.8750057220459
    7. ' red' → logprob: -18.8750057220459
    8. '_color' → logprob: -20.0000057220459
    9. '```' → logprob: -20.0000057220459
    10. '_white' → logprob: -20.1250057220459

Token 411: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006991826929152012
    2. '
' → logprob: -5.131991863250732
    3. '                
' → logprob: -7.631991863250732
    4. ' if' → logprob: -8.256991386413574
    5. '           ' → logprob: -9.631991386413574
    6. '
' → logprob: -10.006991386413574
    7. 'if' → logprob: -10.131991386413574
    8. '<|end|>' → logprob: -10.131991386413574
    9. '  
' → logprob: -10.506991386413574
    10. '                   ' → logprob: -10.881991386413574

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006741895340383053
    2. '
' → logprob: -8.5006742477417
    3. '                
' → logprob: -8.5006742477417
    4. '           ' → logprob: -8.8756742477417
    5. ' if' → logprob: -10.1256742477417
    6. '<|end|>' → logprob: -10.2506742477417
    7. '       ' → logprob: -11.3756742477417
    8. '                ' → logprob: -11.5006742477417
    9. '                   ' → logprob: -11.8756742477417
    10. '            
' → logprob: -12.6256742477417

Token 413: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24689078330993652
    2. '               ' → logprob: -1.9968907833099365
    3. 'if' (adapté à ' if') → logprob: -2.4968907833099365
    4. '           ' → logprob: -7.371891021728516
    5. ' min' → logprob: -10.371891021728516
    6. 'min' → logprob: -11.746891021728516
    7. '       ' → logprob: -12.121891021728516
    8. '                   ' → logprob: -13.621891021728516
    9. '   ' → logprob: -14.246891021728516
    10. '
' → logprob: -15.121891021728516

Token 414: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0011705794604495168
    2. 'total' → logprob: -6.751170635223389
    3. '(total' → logprob: -15.00117015838623
    4. '	total' → logprob: -17.001171112060547
    5. '                   ' → logprob: -17.876171112060547
    6. '_total' → logprob: -18.626171112060547
    7. '               ' → logprob: -18.751171112060547
    8. '$total' → logprob: -19.251171112060547
    9. 'Total' → logprob: -19.751171112060547
    10. ',total' → logprob: -20.376171112060547

Token 415: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2664456789934775e-06
    2. 'cost' → logprob: -14.125000953674316
    3. '_' → logprob: -15.250000953674316
    4. '_code' → logprob: -16.375001907348633
    5. '_cos' → logprob: -16.875001907348633
    6. '_co' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.625001907348633
    8. '_cast' → logprob: -17.625001907348633
    9. '_token' → logprob: -18.000001907348633
    10. '_c' → logprob: -18.375001907348633

Token 416: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005239921621978283
    2. '<' → logprob: -5.255239963531494
    3. '<|end|>' → logprob: -12.505239486694336
    4. '[' → logprob: -13.880239486694336
    5. '   ' → logprob: -15.005239486694336
    6. ' ' → logprob: -15.255239486694336
    7. '<int' → logprob: -16.005239486694336
    8. ' <
' → logprob: -16.380239486694336
    9. ' <",' → logprob: -16.505239486694336
    10. ' ' → logprob: -16.755239486694336

Token 417: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132617771625519
    2. ' min' → logprob: -1.3132617473602295
    3. '	min' → logprob: -16.563261032104492
    4. '           ' → logprob: -17.938261032104492
    5. '_min' → logprob: -18.438261032104492
    6. '               ' → logprob: -18.938261032104492
    7. '   ' → logprob: -19.313261032104492
    8. '=min' → logprob: -19.313261032104492
    9. '(min' → logprob: -19.563261032104492
    10. '
' → logprob: -20.313261032104492

Token 418: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.875
    3. '_COST' → logprob: -18.875
    4. '_' → logprob: -18.875
    5. 'Cost' → logprob: -19.875
    6. '_code' → logprob: -19.875
    7. '\' → logprob: -20.375
    8. ' _' → logprob: -20.75
    9. '_color' → logprob: -21.125
    10. '_cos' → logprob: -21.875

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015527580864727497
    2. ':
' → logprob: -4.890527725219727
    3. '                   ' → logprob: -5.265527725219727
    4. '               ' → logprob: -6.265527725219727
    5. '           ' → logprob: -7.390527725219727
    6. '                       ' → logprob: -9.265527725219727
    7. '):' → logprob: -10.765527725219727
    8. '<|end|>' → logprob: -11.015527725219727
    9. '):
' → logprob: -11.265527725219727
    10. '                           ' → logprob: -11.265527725219727

Token 420: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004364490509033203
    2. ' min' → logprob: -5.754364490509033
    3. 'min' → logprob: -6.879364490509033
    4. '           ' → logprob: -9.379364013671875
    5. '               ' → logprob: -10.129364013671875
    6. '                       ' → logprob: -10.629364013671875
    7. '                  ' → logprob: -12.629364013671875
    8. '   ' → logprob: -13.754364013671875
    9. '                    ' → logprob: -13.754364013671875
    10. '(min' → logprob: -14.629364013671875

Token 421: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.07905072718858719
    2. ' min' → logprob: -2.8290507793426514
    3. '                   ' → logprob: -4.079050540924072
    4. '               ' → logprob: -11.95405101776123
    5. '                       ' → logprob: -12.57905101776123
    6. '           ' → logprob: -13.20405101776123
    7. '   ' → logprob: -13.32905101776123
    8. '	min' → logprob: -14.45405101776123
    9. '       ' → logprob: -15.45405101776123
    10. '_min' → logprob: -15.82905101776123

Token 422: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.749814019713085e-06
    2. '_code' → logprob: -12.250006675720215
    3. 'cost' → logprob: -13.875006675720215
    4. '_color' → logprob: -14.250006675720215
    5. 'Cost' → logprob: -15.875006675720215
    6. '                   ' → logprob: -17.25000762939453
    7. '_COST' → logprob: -17.37500762939453
    8. '_' → logprob: -17.87500762939453
    9. '_flag' → logprob: -18.12500762939453
    10. '_c' → logprob: -18.12500762939453

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. '=min' → logprob: -14.511873245239258
    4. '＝' → logprob: -14.761873245239258
    5. '                   ' → logprob: -15.636873245239258
    6. '                       ' → logprob: -16.261873245239258
    7. '_cost' → logprob: -16.636873245239258
    8. '=int' → logprob: -17.136873245239258
    9. '=create' → logprob: -17.136873245239258
    10. ',' → logprob: -17.261873245239258

Token 424: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5759395956993103
    2. ' total' → logprob: -0.8259395956993103
    3. '	total' → logprob: -15.950939178466797
    4. '                   ' → logprob: -16.950939178466797
    5. '_total' → logprob: -17.825939178466797
    6. 'tot' → logprob: -17.950939178466797
    7. '$total' → logprob: -18.825939178466797
    8. '(total' → logprob: -18.950939178466797
    9. ' tota' → logprob: -19.575939178466797
    10. ' tot' → logprob: -19.825939178466797

Token 425: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.93710636976175e-05
    2. 'cost' → logprob: -9.250099182128906
    3. 'Cost' → logprob: -13.500099182128906
    4. 'total' → logprob: -14.500099182128906
    5. '_token' → logprob: -14.875099182128906
    6. '_total' → logprob: -15.500099182128906
    7. ' cost' → logprob: -15.750099182128906
    8. '_COST' → logprob: -15.750099182128906
    9. 't' → logprob: -16.000099182128906
    10. '_code' → logprob: -16.250099182128906

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015562419139314443
    2. 'return' → logprob: -9.250155448913574
    3. '
' → logprob: -9.875155448913574
    4. '        
' → logprob: -12.375155448913574
    5. ' return' → logprob: -13.875155448913574
    6. '```' → logprob: -14.000155448913574
    7. '      ' → logprob: -14.375155448913574
    8. '   ' → logprob: -14.625155448913574
    9. '               ' → logprob: -15.250155448913574
    10. '                   ' → logprob: -15.375155448913574

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031284019351005554
    2. 'return' → logprob: -6.253128528594971
    3. '
' → logprob: -7.628128528594971
    4. '        
' → logprob: -7.753128528594971
    5. ' return' → logprob: -9.128128051757812
    6. '```' → logprob: -9.628128051757812
    7. '               ' → logprob: -10.003128051757812
    8. '    
' → logprob: -11.503128051757812
    9. '   ' → logprob: -11.878128051757812
    10. '                   ' → logprob: -12.003128051757812

Token 428: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10231423377990723
    2. 'return' (adapté à ' return') → logprob: -2.3523142337799072
    3. ' return' → logprob: -6.477313995361328
    4. '
' → logprob: -8.352313995361328
    5. '   ' → logprob: -9.227313995361328
    6. '	' → logprob: -9.227313995361328
    7. '	return' → logprob: -9.727313995361328
    8. '```' → logprob: -9.852313995361328
    9. '        
' → logprob: -11.727313995361328
    10. ':return' → logprob: -11.852313995361328

Token 429: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.16022412478923798
    2. 'min' → logprob: -1.9102240800857544
    3. '	min' → logprob: -17.91022491455078
    4. '_min' → logprob: -19.91022491455078
    5. '(min' → logprob: -20.41022491455078
    6. '[min' → logprob: -20.66022491455078
    7. '   ' → logprob: -20.78522491455078
    8. ' ' → logprob: -21.28522491455078
    9. 'int' → logprob: -21.28522491455078
    10. ',min' → logprob: -22.03522491455078

Token 430: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.704273118884885e-07
    2. 'cost' → logprob: -14.500000953674316
    3. '_code' → logprob: -16.875
    4. '_COST' → logprob: -16.875
    5. '_' → logprob: -18.25
    6. 'Cost' → logprob: -18.375
    7. '_color' → logprob: -18.5
    8. '_cast' → logprob: -18.5
    9. '_count' → logprob: -19.75
    10. '\' → logprob: -20.0

Token 431: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: ' Input' (ID: 10090)
  Prédit: ' Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Flag' → logprob: -0.013669287785887718
    2. ' Solution' → logprob: -4.513669490814209
    3. 'Flag' → logprob: -6.263669490814209
    4. ' Test' → logprob: -7.888669490814209
    5. ' Solver' → logprob: -8.76366901397705
    6. ' Flags' → logprob: -10.63866901397705
    7. 'Solution' → logprob: -10.63866901397705
    8. ' Runner' → logprob: -11.26366901397705
    9. ' ' → logprob: -11.26366901397705
    10. ' User' → logprob: -11.51366901397705

Token 434: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.21136191487312317
    2. 'Handler' → logprob: -1.9613618850708008
    3. 'Parser' → logprob: -3.711361885070801
    4. ':' → logprob: -4.586361885070801
    5. 'Data' → logprob: -4.586361885070801
    6. 'Processor' → logprob: -6.211361885070801
    7. ':
' → logprob: -7.211361885070801
    8. 'Helper' → logprob: -7.961361885070801
    9. 'Provider' → logprob: -7.961361885070801
    10. 'Stream' → logprob: -8.3363618850708

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002841133624315262
    2. ':
' → logprob: -5.877840995788574
    3. ' :' → logprob: -11.377840995788574
    4. '<|end|>' → logprob: -12.002840995788574
    5. '():' → logprob: -12.252840995788574
    6. '):' → logprob: -12.252840995788574
    7. ':def' → logprob: -13.002840995788574
    8. '(object' → logprob: -13.502840995788574
    9. ':

' → logprob: -13.627840995788574
    10. '():
' → logprob: -14.377840995788574

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008755200542509556
    2. ' def' → logprob: -4.758755207061768
    3. 'def' → logprob: -9.25875473022461
    4. '<|end|>' → logprob: -10.75875473022461
    5. ' class' → logprob: -11.88375473022461
    6. '    
' → logprob: -12.63375473022461
    7. '```' → logprob: -12.63375473022461
    8. 'class' → logprob: -13.25875473022461
    9. '	def' → logprob: -13.25875473022461
    10. '    ' → logprob: -13.25875473022461

Token 437: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17595191299915314
    2. ' def' → logprob: -2.4259519577026367
    3. '@' → logprob: -2.6759519577026367
    4. ' @' → logprob: -5.675951957702637
    5. '   ' → logprob: -7.300951957702637
    6. 'staticmethod' → logprob: -12.800951957702637
    7. '```' → logprob: -14.300951957702637
    8. '	def' → logprob: -15.175951957702637
    9. 'class' → logprob: -15.675951957702637
    10. 'import' → logprob: -16.80095100402832

Token 438: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.24882625043392181
    2. 'staticmethod' → logprob: -1.998826265335083
    3. ' static' → logprob: -2.748826265335083
    4. ' __' → logprob: -4.373826026916504
    5. 'def' → logprob: -5.248826026916504
    6. ' parse' → logprob: -6.248826026916504
    7. 'static' → logprob: -7.998826026916504
    8. 'classmethod' → logprob: -8.123826026916504
    9. ' ' → logprob: -8.998826026916504
    10. ' init' → logprob: -9.748826026916504

Token 439: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'iter' → logprob: -14.750000953674316
    3. 'int' → logprob: -15.000000953674316
    4. 'Init' → logprob: -15.875000953674316
    5. ' init' → logprob: -16.000001907348633
    6. 'new' → logprob: -16.250001907348633
    7. 'nit' → logprob: -16.375001907348633
    8. '_init' → logprob: -16.500001907348633
    9. 'ini' → logprob: -16.875001907348633
    10. '__' → logprob: -17.125001907348633

Token 440: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06398963183164597
    2. '<|end|>' → logprob: -3.6889896392822266
    3. 'self' → logprob: -4.063989639282227
    4. '(' → logprob: -4.313989639282227
    5. '__(' → logprob: -5.938989639282227
    6. ' (' → logprob: -6.188989639282227
    7. '<|end|>' → logprob: -8.188989639282227
    8. ' self' → logprob: -8.501489639282227
    9. '__(
' → logprob: -8.751489639282227
    10. ')' → logprob: -8.813989639282227

Token 441: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.040457421680912e-05
    2. ' self' → logprob: -10.000070571899414
    3. ')' → logprob: -11.125070571899414
    4. '   ' → logprob: -12.375070571899414
    5. '):
' → logprob: -13.000070571899414
    6. '
' → logprob: -13.250070571899414
    7. '(self' → logprob: -14.125070571899414
    8. '       ' → logprob: -14.750070571899414
    9. '	self' → logprob: -15.375070571899414
    10. 'elf' → logprob: -15.500070571899414

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5573639869689941
    2. ',' → logprob: -0.9323639869689941
    3. '):
' → logprob: -3.432363986968994
    4. ',input' → logprob: -7.682363986968994
    5. 'self' → logprob: -8.057363510131836
    6. '   ' → logprob: -8.307363510131836
    7. ')' → logprob: -8.807363510131836
    8. '():' → logprob: -10.307363510131836
    9. ',file' → logprob: -11.057363510131836
    10. ',data' → logprob: -11.432363510131836

Token 443: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011496806517243385
    2. '   ' → logprob: -5.0114970207214355
    3. ' self' → logprob: -5.5114970207214355
    4. 'def' → logprob: -7.8864970207214355
    5. '       ' → logprob: -8.261496543884277
    6. '(self' → logprob: -10.136496543884277
    7. '	self' → logprob: -10.761496543884277
    8. '
' → logprob: -12.011496543884277
    9. '    ' → logprob: -12.011496543884277
    10. ' def' → logprob: -12.136496543884277

Token 444: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.10898197442293167
    2. 'self' (adapté à ' self') → logprob: -2.3589820861816406
    3. ' pass' → logprob: -4.858982086181641
    4. '   ' → logprob: -7.733982086181641
    5. '       ' → logprob: -8.35898208618164
    6. ' self' → logprob: -8.60898208618164
    7. '	pass' → logprob: -9.60898208618164
    8. 'def' → logprob: -10.35898208618164
    9. '
' → logprob: -11.10898208618164
    10. 'import' → logprob: -12.23398208618164

Token 445: '.N' (ID: 4439)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.6473803520202637
    2. '.buffer' → logprob: -2.0223803520202637
    3. '.lines' → logprob: -2.1473803520202637
    4. '.' → logprob: -2.3973803520202637
    5. '.input' → logprob: -2.5223803520202637
    6. '.rows' → logprob: -3.6473803520202637
    7. '.inputs' → logprob: -3.8973803520202637
    8. '._' → logprob: -6.272380352020264
    9. '.test' → logprob: -6.522380352020264
    10. '.results' → logprob: -6.647380352020264

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25584617257118225
    2. '=' → logprob: -1.5058461427688599
    3. ',' → logprob: -5.88084602355957
    4. '<|end|>' → logprob: -6.88084602355957
    5. '   ' → logprob: -10.75584602355957
    6. ' ' → logprob: -10.88084602355957
    7. '<|end|>' → logprob: -11.63084602355957
    8. ')' → logprob: -11.63084602355957
    9. ' ,' → logprob: -11.75584602355957
    10. ' =
' → logprob: -12.13084602355957

Token 447: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21735063195228577
    2. 'int' → logprob: -1.9673506021499634
    3. ' int' → logprob: -3.342350721359253
    4. ' None' → logprob: -4.717350482940674
    5. 'None' → logprob: -4.967350482940674
    6. ' ' → logprob: -5.467350482940674
    7. '10' → logprob: -11.092350959777832
    8. '1' → logprob: -11.717350959777832
    9. '<int' → logprob: -11.717350959777832
    10. '[int' → logprob: -11.842350959777832

Token 448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06328939646482468
    2. 'int' → logprob: -2.8132894039154053
    3. 'None' → logprob: -6.688289165496826
    4. ' int' → logprob: -10.063289642333984
    5. ' ' → logprob: -10.563289642333984
    6. ' None' → logprob: -12.063289642333984
    7. '10' → logprob: -15.063289642333984
    8. '[int' → logprob: -15.188289642333984
    9. '[]' → logprob: -15.813289642333984
    10. '1' → logprob: -15.938289642333984

Token 449: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002649119414854795
    2. ' self' → logprob: -9.125265121459961
    3. 'def' → logprob: -9.125265121459961
    4. '       ' → logprob: -10.625265121459961
    5. '
' → logprob: -11.250265121459961
    6. '   ' → logprob: -12.750265121459961
    7. '<|end|>' → logprob: -13.250265121459961
    8. '	self' → logprob: -13.625265121459961
    9. 's' → logprob: -13.625265121459961
    10. 'pass' → logprob: -14.250265121459961

Token 452: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.15642081201076508
    2. '.rows' → logprob: -2.1564207077026367
    3. '.flags' → logprob: -4.656420707702637
    4. '.flag' → logprob: -4.906420707702637
    5. 'rows' → logprob: -5.406420707702637
    6. '.lines' → logprob: -6.031420707702637
    7. '.colors' → logprob: -6.281420707702637
    8. 'flag' → logprob: -6.781420707702637
    9. '.data' → logprob: -7.531420707702637
    10. 'flags' → logprob: -7.656420707702637

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07898826897144318
    2. ' =' → logprob: -2.5789883136749268
    3. '<|end|>' → logprob: -9.453988075256348
    4. '=None' → logprob: -11.828988075256348
    5. ':' → logprob: -12.703988075256348
    6. '   ' → logprob: -12.828988075256348
    7. ',' → logprob: -12.953988075256348
    8. '<|end|>' → logprob: -13.203988075256348
    9. ' ' → logprob: -13.453988075256348
    10. ')' → logprob: -15.078988075256348

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -16.250179290771484
    4. '  ' → logprob: -17.312679290771484
    5. 'None' → logprob: -17.625179290771484
    6. '۰' → logprob: -18.187679290771484
    7. '<|end|>' → logprob: -18.375179290771484
    8. '=' → logprob: -18.562679290771484
    9. '```' → logprob: -18.750179290771484
    10. ' ' → logprob: -18.875179290771484

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -17.125003814697266
    4. 'None' → logprob: -17.375003814697266
    5. '०' → logprob: -18.062503814697266
    6. '   ' → logprob: -18.437503814697266
    7. 'int' → logprob: -18.437503814697266
    8. '[]' → logprob: -19.062503814697266
    9. '০' → logprob: -19.187503814697266
    10. '  ' → logprob: -19.375003814697266

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8444934487342834
    2. '
' → logprob: -1.3444933891296387
    3. 'def' → logprob: -1.9694933891296387
    4. '<|end|>' → logprob: -2.0944933891296387
    5. ' def' → logprob: -3.4694933891296387
    6. '	def' → logprob: -4.344493389129639
    7. '<|end|>' → logprob: -6.219493389129639
    8. '       ' → logprob: -7.844493389129639
    9. '    
' → logprob: -8.469493865966797
    10. '```' → logprob: -9.594493865966797

Token 457: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1554778516292572
    2. 'def' → logprob: -2.03047776222229
    3. ' def' → logprob: -4.780478000640869
    4. '
' → logprob: -5.780478000640869
    5. '<|end|>' → logprob: -7.405478000640869
    6. '	def' → logprob: -7.530478000640869
    7. '    
' → logprob: -9.530477523803711
    8. '<|end|>' → logprob: -11.655477523803711
    9. '       ' → logprob: -12.405477523803711
    10. '```' → logprob: -12.405477523803711

Token 458: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024543688632547855
    2. 'self' (adapté à ' self') → logprob: -6.2524542808532715
    3. ' def' → logprob: -8.25245475769043
    4. '   ' → logprob: -8.75245475769043
    5. '
' → logprob: -9.25245475769043
    6. '<|end|>' → logprob: -12.75245475769043
    7. '	def' → logprob: -13.00245475769043
    8. '       ' → logprob: -13.37745475769043
    9. '    
' → logprob: -13.75245475769043
    10. ' self' → logprob: -14.00245475769043

Token 459: '.raw' (ID: 36636)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.25718119740486145
    2. 'rows' → logprob: -2.257181167602539
    3. '.flags' → logprob: -3.382181167602539
    4. ' rows' → logprob: -3.757181167602539
    5. '.flag' → logprob: -3.882181167602539
    6. 'flag' → logprob: -4.257181167602539
    7. 'flags' → logprob: -4.757181167602539
    8. ' flag' → logprob: -4.882181167602539
    9. '.' → logprob: -5.882181167602539
    10. '.lines' → logprob: -6.382181167602539

Token 460: '_rows' (ID: 26013)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.8535696864128113
    2. '_data' → logprob: -1.228569746017456
    3. '_lines' → logprob: -1.353569746017456
    4. '_rows' → logprob: -4.353569507598877
    5. 'data' → logprob: -5.853569507598877
    6. '_text' → logprob: -6.353569507598877
    7. '_' → logprob: -6.728569507598877
    8. 'input' → logprob: -7.103569507598877
    9. '_strings' → logprob: -7.103569507598877
    10. '<|end|>' → logprob: -7.228569507598877

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011367641389369965
    2. ' =' → logprob: -4.5113677978515625
    3. ':' → logprob: -8.386367797851562
    4. '=[]' → logprob: -9.386367797851562
    5. '<|end|>' → logprob: -12.886367797851562
    6. ' ' → logprob: -13.511367797851562
    7. 's' → logprob: -13.761367797851562
    8. '   ' → logprob: -14.011367797851562
    9. '=None' → logprob: -14.636367797851562
    10. '=[]
' → logprob: -14.636367797851562

Token 462: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.65707261255011e-06
    2. ' []' → logprob: -11.750008583068848
    3. '[' → logprob: -15.000008583068848
    4. '[]
' → logprob: -15.500008583068848
    5. '[]}' → logprob: -16.125009536743164
    6. '[]

' → logprob: -17.625009536743164
    7. '[],' → logprob: -18.125009536743164
    8. '[]"' → logprob: -18.750009536743164
    9. '[])' → logprob: -19.000009536743164
    10. '[]>' → logprob: -19.625009536743164

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029924970120191574
    2. ' def' → logprob: -3.7799248695373535
    3. 'def' → logprob: -5.0299248695373535
    4. '
' → logprob: -9.779925346374512
    5. '<|end|>' → logprob: -10.404925346374512
    6. '	def' → logprob: -11.029925346374512
    7. '    
' → logprob: -11.279925346374512
    8. '<|end|>' → logprob: -14.029925346374512
    9. '```' → logprob: -14.654925346374512
    10. ' 
' → logprob: -15.404925346374512

Token 464: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.253713218029588e-05
    2. ' def' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.375062942504883
    4. '	def' → logprob: -17.750062942504883
    5. '
' → logprob: -18.500062942504883
    6. 'de' → logprob: -20.500062942504883
    7. '    
' → logprob: -21.250062942504883
    8. 'class' → logprob: -22.125062942504883
    9. ' ' → logprob: -22.250062942504883
    10. '```' → logprob: -22.250062942504883

Token 465: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.25240933895111084
    2. 'read' → logprob: -1.5024093389511108
    3. ' parse' → logprob: -8.127408981323242
    4. ' read' → logprob: -9.002408981323242
    5. 'load' → logprob: -10.627408981323242
    6. 'add' → logprob: -10.752408981323242
    7. 'def' → logprob: -11.252408981323242
    8. 'set' → logprob: -14.002408981323242
    9. 'feed' → logprob: -14.627408981323242
    10. 'reset' → logprob: -14.752408981323242

Token 466: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019746100588236004
    2. '(' → logprob: -8.875197410583496
    3. 'self' → logprob: -10.250197410583496
    4. '_input' → logprob: -11.250197410583496
    5. '_line' → logprob: -11.875197410583496
    6. '_raw' → logprob: -14.375197410583496
    7. '_row' → logprob: -14.875197410583496
    8. '_self' → logprob: -15.250197410583496
    9. '(
' → logprob: -15.500197410583496
    10. ' self' → logprob: -15.500197410583496

Token 467: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11679215729236603
    2. 'self' → logprob: -2.3667922019958496
    3. '_input' → logprob: -4.99179220199585
    4. '_line' → logprob: -5.99179220199585
    5. '(self' → logprob: -6.74179220199585
    6. ',self' → logprob: -6.74179220199585
    7. '_lines' → logprob: -6.99179220199585
    8. ',input' → logprob: -6.99179220199585
    9. ')' → logprob: -7.49179220199585
    10. ' ,' → logprob: -7.74179220199585

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018339496455155313
    2. ' for' → logprob: -9.62518310546875
    3. 'self' → logprob: -10.12518310546875
    4. '   ' → logprob: -10.62518310546875
    5. ' self' → logprob: -10.87518310546875
    6. 'import' → logprob: -11.37518310546875
    7. ' lines' → logprob: -11.87518310546875
    8. 'for' → logprob: -12.37518310546875
    9. ' line' → logprob: -13.12518310546875
    10. '()' → logprob: -13.87518310546875

Token 469: ' first' (ID: 1577)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0194847583770752
    2. 'self' → logprob: -1.0194847583770752
    3. 'import' → logprob: -1.6444847583770752
    4. '       ' → logprob: -3.519484758377075
    5. ' import' → logprob: -3.769484758377075
    6. 'n' → logprob: -4.019484519958496
    7. ' n' → logprob: -4.269484519958496
    8. ' lines' → logprob: -7.769484519958496
    9. '```' → logprob: -9.019484519958496
    10. 'lines' → logprob: -10.394484519958496

Token 470: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.053601015359163284
    2. ' =' → logprob: -3.553601026535034
    3. '()' → logprob: -4.428600788116455
    4. 'line' → logprob: -4.803600788116455
    5. '_token' → logprob: -7.178600788116455
    6. '_input' → logprob: -7.178600788116455
    7. '=' → logprob: -7.303600788116455
    8. ' line' → logprob: -7.428600788116455
    9. '_' → logprob: -8.803601264953613
    10. '<|end|>' → logprob: -9.178601264953613

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918795943260193
    2. '=' → logprob: -2.5791878700256348
    3. '()' → logprob: -8.204188346862793
    4. '_line' → logprob: -11.704188346862793
    5. '   ' → logprob: -12.579188346862793
    6. '=line' → logprob: -12.579188346862793
    7. '_tokens' → logprob: -13.079188346862793
    8. 'line' → logprob: -13.079188346862793
    9. '(' → logprob: -13.954188346862793
    10. '()
' → logprob: -14.204188346862793

Token 472: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014133334159851
    2. ' input' → logprob: -1.7014133930206299
    3. '	input' → logprob: -18.701414108276367
    4. '=input' → logprob: -18.826414108276367
    5. '(input' → logprob: -20.326414108276367
    6. '<input' → logprob: -20.701414108276367
    7. 'int' → logprob: -21.326414108276367
    8. ' ' → logprob: -22.201414108276367
    9. '_input' → logprob: -22.576414108276367
    10. '.input' → logprob: -22.701414108276367

Token 473: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062034230679273605
    2. '().' → logprob: -2.8120341300964355
    3. '()
' → logprob: -9.687034606933594
    4. '(' → logprob: -13.187034606933594
    5. '())' → logprob: -14.062034606933594
    6. '()

' → logprob: -14.687034606933594
    7. '()`' → logprob: -15.312034606933594
    8. '()
' → logprob: -15.812034606933594
    9. ' ()' → logprob: -15.937034606933594
    10. '.strip' → logprob: -16.062034606933594

Token 474: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20145046710968018
    2. 'split' → logprob: -1.7014504671096802
    3. 'rstrip' → logprob: -10.20145034790039
    4. 'spl' → logprob: -16.70145034790039
    5. ' strip' → logprob: -17.32645034790039
    6. ' split' → logprob: -18.95145034790039
    7. 's' → logprob: -19.95145034790039
    8. '(split' → logprob: -20.20145034790039
    9. 'str' → logprob: -20.45145034790039
    10. '-strip' → logprob: -20.82645034790039

Token 475: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002046294044703245
    2. '().' → logprob: -6.25204610824585
    3. '()
' → logprob: -9.252046585083008
    4. '(' → logprob: -10.877046585083008
    5. '()`' → logprob: -14.502046585083008
    6. '（）' → logprob: -14.502046585083008
    7. '()

' → logprob: -15.127046585083008
    8. ' ()' → logprob: -15.252046585083008
    9. 'split' → logprob: -15.627046585083008
    10. '()
' → logprob: -15.752046585083008

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01081788819283247
    2. '<|end|>' → logprob: -4.885818004608154
    3. 'self' → logprob: -6.385818004608154
    4. 'tokens' → logprob: -7.385818004608154
    5. ',' → logprob: -8.010817527770996
    6. ' self' → logprob: -9.510817527770996
    7. '
' → logprob: -9.885817527770996
    8. '        
' → logprob: -9.885817527770996
    9. '<|end|>' → logprob: -9.885817527770996
    10. 'split' → logprob: -10.135817527770996

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4855663721391466e-05
    2. ' self' → logprob: -11.500015258789062
    3. '       ' → logprob: -12.750015258789062
    4. 'if' → logprob: -13.750015258789062
    5. 'n' → logprob: -15.250015258789062
    6. '```' → logprob: -15.375015258789062
    7. 'tokens' → logprob: -15.750015258789062
    8. 'parts' → logprob: -16.750015258789062
    9. '[self' → logprob: -17.750015258789062
    10. '	self' → logprob: -17.750015258789062

Token 478: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0003124632057733834
    2. '.' → logprob: -8.250312805175781
    3. 'N' → logprob: -10.000312805175781
    4. ' .' → logprob: -13.125312805175781
    5. '.
' → logprob: -13.500312805175781
    6. ' N' → logprob: -13.750312805175781
    7. '	N' → logprob: -14.625312805175781
    8. '.M' → logprob: -15.875312805175781
    9. '.Н' → logprob: -15.875312805175781
    10. '
' → logprob: -16.50031280517578

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018342763651162386
    2. ' ,' → logprob: -6.751834392547607
    3. '=' → logprob: -7.751834392547607
    4. ' =' → logprob: -8.37683391571045
    5. ',
' → logprob: -13.25183391571045
    6. ' ' → logprob: -14.75183391571045
    7. ' =
' → logprob: -15.37683391571045
    8. '‌,' → logprob: -15.50183391571045
    9. ',self' → logprob: -15.75183391571045
    10. ',\
' → logprob: -15.87683391571045

Token 480: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008627697825431824
    2. ' self' → logprob: -4.758627891540527
    3. '<|end|>' → logprob: -11.883627891540527
    4. ' ' → logprob: -12.383627891540527
    5. '*self' → logprob: -14.258627891540527
    6. '  ' → logprob: -15.008627891540527
    7. '=self' → logprob: -15.508627891540527
    8. ' 
' → logprob: -15.633627891540527
    9. ',self' → logprob: -16.25862693786621
    10. 'space' → logprob: -16.25862693786621

Token 481: '.M' (ID: 2015)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7372528910636902
    2. '.M' → logprob: -0.9872528910636902
    3. ',' → logprob: -1.987252950668335
    4. 'M' → logprob: -5.112252712249756
    5. '.' → logprob: -5.987252712249756
    6. ',M' → logprob: -6.487252712249756
    7. ' =' → logprob: -7.112252712249756
    8. ' M' → logprob: -7.362252712249756
    9. '=M' → logprob: -8.362253189086914
    10. ' ,' → logprob: -9.987253189086914

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '＝' → logprob: -15.953889846801758
    4. ',' → logprob: -16.078889846801758
    5. '=
' → logprob: -16.203889846801758
    6. '=

' → logprob: -16.953889846801758
    7. '=line' → logprob: -17.328889846801758
    8. '=int' → logprob: -17.453889846801758
    9. ' ' → logprob: -17.453889846801758
    10. '=input' → logprob: -17.828889846801758

Token 483: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008615399710834026
    2. ' map' → logprob: -4.758615493774414
    3. '(map' → logprob: -14.133615493774414
    4. '	map' → logprob: -16.133615493774414
    5. '   ' → logprob: -17.633615493774414
    6. '[' → logprob: -17.758615493774414
    7. 'first' → logprob: -17.883615493774414
    8. '
' → logprob: -18.258615493774414
    9. 'm' → logprob: -18.258615493774414
    10. '  ' → logprob: -18.508615493774414

Token 484: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.909333023941144e-05
    2. 'int' → logprob: -10.125068664550781
    3. '(str' → logprob: -11.125068664550781
    4. '(' → logprob: -12.000068664550781
    5. '(lambda' → logprob: -12.000068664550781
    6. '[int' → logprob: -13.500068664550781
    7. '<int' → logprob: -14.875068664550781
    8. '=int' → logprob: -16.87506866455078
    9. '(
' → logprob: -17.12506866455078
    10. '(tuple' → logprob: -18.25006866455078

Token 485: ',' (ID: 11)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.21671976149082184
    2. 'first' → logprob: -1.9667197465896606
    3. ',' → logprob: -3.34171986579895
    4. ' first' → logprob: -4.341719627380371
    5. ')' → logprob: -5.216719627380371
    6. '(' → logprob: -7.466719627380371
    7. '[first' → logprob: -8.716719627380371
    8. '(input' → logprob: -9.216719627380371
    9. ',input' → logprob: -9.341719627380371
    10. ' (' → logprob: -10.216719627380371

Token 486: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.12692810595035553
    2. ' first' → logprob: -2.1269280910491943
    3. '	first' → logprob: -17.501928329467773
    4. '[first' → logprob: -18.251928329467773
    5. '(first' → logprob: -19.126928329467773
    6. ')' → logprob: -19.626928329467773
    7. 'First' → logprob: -20.126928329467773
    8. '_first' → logprob: -20.501928329467773
    9. ' ' → logprob: -20.626928329467773
    10. '.first' → logprob: -20.876928329467773

Token 487: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.007418726105242968
    2. 'first' → logprob: -5.632418632507324
    3. '().' → logprob: -5.757418632507324
    4. 'line' → logprob: -7.757418632507324
    5. '()' → logprob: -9.757418632507324
    6. 'split' → logprob: -9.757418632507324
    7. '_LINE' → logprob: -10.882418632507324
    8. ')' → logprob: -11.007418632507324
    9. '_first' → logprob: -11.382418632507324
    10. '_.' → logprob: -12.132418632507324

Token 488: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014213806949555874
    2. '.split' → logprob: -4.264214038848877
    3. '.strip' → logprob: -10.389213562011719
    4. ' .' → logprob: -11.389213562011719
    5. '()' → logprob: -12.514213562011719
    6. '.' → logprob: -13.139213562011719
    7. 'split' → logprob: -13.389213562011719
    8. ' ().' → logprob: -14.639213562011719
    9. 'input' → logprob: -14.764213562011719
    10. '   ' → logprob: -16.01421356201172

Token 489: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008821024559438229
    2. '()' → logprob: -4.7588210105896
    3. '('' → logprob: -8.883821487426758
    4. '())
' → logprob: -10.008821487426758
    5. ')' → logprob: -11.258821487426758
    6. '(' → logprob: -11.883821487426758
    7. '()
' → logprob: -13.258821487426758
    8. ' ())' → logprob: -14.883821487426758
    9. '()]' → logprob: -15.133821487426758
    10. '())

' → logprob: -15.258821487426758

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5825520157814026
    2. 'for' → logprob: -0.8325520157814026
    3. ' for' → logprob: -5.457551956176758
    4. '
' → logprob: -6.207551956176758
    5. 'self' → logprob: -8.707551956176758
    6. '   ' → logprob: -9.582551956176758
    7. '	for' → logprob: -10.332551956176758
    8. '```' → logprob: -10.457551956176758
    9. '        
' → logprob: -11.832551956176758
    10. 'while' → logprob: -12.957551956176758

Token 491: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00039254239527508616
    2. 'self' → logprob: -8.25039291381836
    3. ' for' → logprob: -9.37539291381836
    4. '       ' → logprob: -10.00039291381836
    5. '	for' → logprob: -14.12539291381836
    6. '```' → logprob: -15.87539291381836
    7. '
' → logprob: -16.00039291381836
    8. '        
' → logprob: -16.62539291381836
    9. ' self' → logprob: -17.75039291381836
    10. 'while' → logprob: -18.62539291381836

Token 492: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.392202976712724e-06
    2. '_range' → logprob: -12.000006675720215
    3. ' in' → logprob: -16.7500057220459
    4. '_in' → logprob: -16.7500057220459
    5. '_i' → logprob: -17.0000057220459
    6. ' _' → logprob: -17.1250057220459
    7. 'range' → logprob: -17.2500057220459
    8. ' range' → logprob: -17.6250057220459
    9. '_=' → logprob: -19.5000057220459
    10. '_
' → logprob: -21.0000057220459

Token 493: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09807471185922623
    2. ' range' → logprob: -2.8480746746063232
    3. ' in' → logprob: -3.9730746746063232
    4. 'in' → logprob: -4.098074913024902
    5. ' ' → logprob: -11.473074913024902
    6. '_' → logprob: -11.973074913024902
    7. '_range' → logprob: -12.348074913024902
    8. '  ' → logprob: -12.598074913024902
    9. '   ' → logprob: -12.723074913024902
    10. '(range' → logprob: -12.723074913024902

Token 494: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -17.250045776367188
    4. '	range' → logprob: -17.750045776367188
    5. '
' → logprob: -18.375045776367188
    6. '   ' → logprob: -18.750045776367188
    7. ' ' → logprob: -19.250045776367188
    8. '  ' → logprob: -19.250045776367188
    9. '```' → logprob: -19.375045776367188
    10. 'input' → logprob: -19.750045776367188

Token 495: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.374227425316349e-05
    2. 'self' → logprob: -10.000073432922363
    3. '(' → logprob: -10.500073432922363
    4. ' (' → logprob: -15.500073432922363
    5. 'range' → logprob: -15.875073432922363
    6. '(range' → logprob: -16.00007438659668
    7. ' self' → logprob: -16.37507438659668
    8. '(s' → logprob: -16.37507438659668
    9. '(
' → logprob: -16.75007438659668
    10. '(int' → logprob: -17.87507438659668

Token 496: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -2.2200749754119897e-06
    2. 'N' → logprob: -13.375001907348633
    3. '.' → logprob: -14.500001907348633
    4. 'self' → logprob: -17.500001907348633
    5. ' .' → logprob: -18.500001907348633
    6. '	N' → logprob: -19.000001907348633
    7. ').' → logprob: -19.750001907348633
    8. '<N' → logprob: -20.125001907348633
    9. '.Н' → logprob: -20.500001907348633
    10. '.
' → logprob: -21.000001907348633

Token 497: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06679508835077286
    2. '):' → logprob: -2.8167951107025146
    3. '():
' → logprob: -6.1917948722839355
    4. '       ' → logprob: -6.8167948722839355
    5. ':' → logprob: -7.6917948722839355
    6. '   ' → logprob: -7.9417948722839355
    7. ':
' → logprob: -8.066795349121094
    8. ' ):
' → logprob: -8.441795349121094
    9. '):
' → logprob: -9.441795349121094
    10. '           ' → logprob: -9.566795349121094

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010699660051614046
    2. '   ' → logprob: -8.001070022583008
    3. ' lines' → logprob: -8.376070022583008
    4. 'row' → logprob: -8.751070022583008
    5. ' row' → logprob: -9.126070022583008
    6. ' self' → logprob: -10.001070022583008
    7. ' line' → logprob: -10.126070022583008
    8. ' rows' → logprob: -10.251070022583008
    9. 'self' → logprob: -10.876070022583008
    10. 'rows' → logprob: -11.001070022583008

Token 499: ' self' (ID: 1051)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6426425576210022
    2. ' row' → logprob: -1.1426424980163574
    3. 'line' → logprob: -2.3926424980163574
    4. 'self' (adapté à ' self') → logprob: -3.5176424980163574
    5. ' line' → logprob: -3.7676424980163574
    6. ' self' → logprob: -5.142642498016357
    7. 'colors' → logprob: -5.892642498016357
    8. '           ' → logprob: -6.517642498016357
    9. ' colors' → logprob: -7.392642498016357
    10. 'raw' → logprob: -9.267642974853516

Token 500: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.00037347347824834287
    2. 'raw' → logprob: -8.125373840332031
    3. '.rows' → logprob: -9.625373840332031
    4. '_raw' → logprob: -12.000373840332031
    5. '.colors' → logprob: -13.500373840332031
    6. '	raw' → logprob: -14.125373840332031
    7. '.readline' → logprob: -14.500373840332031
    8. '.' → logprob: -14.500373840332031
    9. '.lines' → logprob: -14.625373840332031
    10. ' .' → logprob: -15.375373840332031

Token 501: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.011139309965074062
    2. '_row' → logprob: -5.011139392852783
    3. 'row' → logprob: -6.136139392852783
    4. 'rows' → logprob: -6.511139392852783
    5. '_line' → logprob: -8.636138916015625
    6. '=' → logprob: -8.636138916015625
    7. 'input' → logprob: -9.386138916015625
    8. '_lines' → logprob: -9.386138916015625
    9. '_colors' → logprob: -9.511138916015625
    10. '_input' → logprob: -10.011138916015625

Token 502: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0016553020104765892
    2. '.' → logprob: -6.501655101776123
    3. '=' → logprob: -9.001655578613281
    4. ' .' → logprob: -11.126655578613281
    5. '+=' → logprob: -12.501655578613281
    6. 'append' → logprob: -12.501655578613281
    7. '.=' → logprob: -12.876655578613281
    8. ' =' → logprob: -13.126655578613281
    9. '.extend' → logprob: -14.001655578613281
    10. ' +=' → logprob: -14.376655578613281

Token 503: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002783783129416406
    2. ' input' → logprob: -8.50027847290039
    3. '(input' → logprob: -9.50027847290039
    4. '	input' → logprob: -19.00027847290039
    5. 'str' → logprob: -19.12527847290039
    6. '<input' → logprob: -19.37527847290039
    7. '   ' → logprob: -19.62527847290039
    8. '=input' → logprob: -19.62527847290039
    9. '(' → logprob: -19.87527847290039
    10. ',input' → logprob: -20.00027847290039

Token 504: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009043501690030098
    2. '())' → logprob: -4.7590436935424805
    3. '()' → logprob: -7.7590436935424805
    4. '())
' → logprob: -14.00904369354248
    5. ' ())' → logprob: -15.25904369354248
    6. '()
' → logprob: -15.50904369354248
    7. ' ().' → logprob: -15.50904369354248
    8. '(' → logprob: -15.50904369354248
    9. ')' → logprob: -15.88404369354248
    10. '()))' → logprob: -16.259042739868164

Token 505: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'rstrip' → logprob: -16.75
    3. ' strip' → logprob: -17.75
    4. '_strip' → logprob: -21.5
    5. '.strip' → logprob: -22.0
    6. 'str' → logprob: -23.25
    7. '(strip' → logprob: -24.375
    8. '-strip' → logprob: -24.75
    9. 'Strip' → logprob: -25.125
    10. 'stripe' → logprob: -25.5

Token 506: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1007913202047348
    2. '())' → logprob: -2.3507912158966064
    3. '))' → logprob: -8.100790977478027
    4. '()' → logprob: -8.225790977478027
    5. '()))' → logprob: -12.725790977478027
    6. ')
' → logprob: -12.725790977478027
    7. ' )' → logprob: -12.850790977478027
    8. '())
' → logprob: -12.975790977478027
    9. '')' → logprob: -14.225790977478027
    10. '       ' → logprob: -14.600790977478027

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6946305632591248
    2. '       ' → logprob: -0.8196305632591248
    3. '
' → logprob: -3.1946306228637695
    4. 'def' → logprob: -5.0696306228637695
    5. ' def' → logprob: -5.1946306228637695
    6. ' return' → logprob: -6.3196306228637695
    7. '        
' → logprob: -6.6946306228637695
    8. '```' → logprob: -6.9446306228637695
    9. 'return' → logprob: -7.0696306228637695
    10. '    
' → logprob: -7.3196306228637695

Token 508: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04217074066400528
    2. ' def' → logprob: -3.292170763015747
    3. '   ' → logprob: -5.542170524597168
    4. '	def' → logprob: -9.292170524597168
    5. '
' → logprob: -9.542170524597168
    6. ' ' → logprob: -10.667170524597168
    7. '    
' → logprob: -12.292170524597168
    8. '<|end|>' → logprob: -12.542170524597168
    9. 'from' → logprob: -13.292170524597168
    10. '```' → logprob: -13.792170524597168

Token 509: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6371081471443176
    2. 'get' → logprob: -1.1371080875396729
    3. 'build' → logprob: -2.387108087539673
    4. ' get' → logprob: -3.762108087539673
    5. ' to' → logprob: -4.012108325958252
    6. ' build' → logprob: -4.262108325958252
    7. 'parse' → logprob: -6.387108325958252
    8. 'convert' → logprob: -7.387108325958252
    9. 'create' → logprob: -7.512108325958252
    10. ' parse' → logprob: -9.637107849121094

Token 510: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.012618659064173698
    2. 'Flag' → logprob: -4.512618541717529
    3. '_F' → logprob: -7.637618541717529
    4. 'flag' → logprob: -7.762618541717529
    5. '_flags' → logprob: -7.887618541717529
    6. '_list' → logprob: -9.262619018554688
    7. '_' → logprob: -9.762619018554688
    8. '```' → logprob: -10.137619018554688
    9. '_f' → logprob: -10.262619018554688
    10. '_rows' → logprob: -10.887619018554688

Token 511: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -12.375014305114746
    3. 'self' → logprob: -12.500014305114746
    4. ' (' → logprob: -13.125014305114746
    5. '   ' → logprob: -13.750014305114746
    6. '_rows' → logprob: -14.375014305114746
    7. '(
' → logprob: -14.500014305114746
    8. '(s' → logprob: -14.625014305114746
    9. '       ' → logprob: -14.750014305114746
    10. 'rows' → logprob: -15.250014305114746

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056323494762182236
    2. '):' → logprob: -3.306323528289795
    3. '):
' → logprob: -4.056323528289795
    4. 'self' → logprob: -7.931323528289795
    5. '(self' → logprob: -8.056323051452637
    6. ')->' → logprob: -9.681323051452637
    7. '   ' → logprob: -10.556323051452637
    8. '):
' → logprob: -11.306323051452637
    9. '):

' → logprob: -11.431323051452637
    10. '       ' → logprob: -12.556323051452637

Token 513: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.081584716506768e-05
    2. '->' → logprob: -12.000020980834961
    3. 'self' → logprob: -12.500020980834961
    4. '   ' → logprob: -12.875020980834961
    5. ' ->' → logprob: -12.875020980834961
    6. '       ' → logprob: -13.000020980834961
    7. '(' → logprob: -13.500020980834961
    8. ' self' → logprob: -14.125020980834961
    9. ' (' → logprob: -14.625020980834961
    10. 's' → logprob: -15.750020980834961

Token 514: ' Flag' (ID: 40343)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.02641988918185234
    2. ' Flag' → logprob: -3.6514198780059814
    3. 'list' → logprob: -9.401419639587402
    4. ' list' → logprob: -11.651419639587402
    5. 'List' → logprob: -11.901419639587402
    6. '   ' → logprob: -12.151419639587402
    7. 'flag' → logprob: -12.276419639587402
    8. 'self' → logprob: -12.901419639587402
    9. ''' → logprob: -13.401419639587402
    10. '
' → logprob: -13.901419639587402

Token 515: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002430120948702097
    2. '       ' → logprob: -6.627429962158203
    3. '():
' → logprob: -7.752429962158203
    4. '(' → logprob: -8.127429962158203
    5. ':
' → logprob: -8.627429962158203
    6. '(
' → logprob: -9.752429962158203
    7. ':' → logprob: -10.127429962158203
    8. '   ' → logprob: -10.127429962158203
    9. 'self' → logprob: -10.627429962158203
    10. '():' → logprob: -11.502429962158203

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025287605240009725
    2. 'rows' → logprob: -8.500252723693848
    3. 'return' → logprob: -10.625252723693848
    4. ' rows' → logprob: -11.500252723693848
    5. '   ' → logprob: -12.000252723693848
    6. ' return' → logprob: -12.250252723693848
    7. 'row' → logprob: -13.750252723693848
    8. '(rows' → logprob: -14.375252723693848
    9. '```' → logprob: -14.750252723693848
    10. '	rows' → logprob: -15.375252723693848

Token 517: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' (adapté à ' rows') → logprob: -0.0694117471575737
    2. '       ' → logprob: -2.8194117546081543
    3. 'return' → logprob: -5.069411754608154
    4. ' rows' → logprob: -6.819411754608154
    5. ' return' → logprob: -10.444411277770996
    6. 'flag' → logprob: -12.569411277770996
    7. 'row' → logprob: -13.319411277770996
    8. '   ' → logprob: -13.319411277770996
    9. '	rows' → logprob: -13.944411277770996
    10. '```' → logprob: -14.444411277770996

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023655958473682404
    2. '=' → logprob: -3.773655891418457
    3. '=[' → logprob: -8.523655891418457
    4. '=[]' → logprob: -8.648655891418457
    5. '=[]
' → logprob: -11.273655891418457
    6. '       ' → logprob: -11.898655891418457
    7. '   ' → logprob: -11.898655891418457
    8. '_list' → logprob: -12.648655891418457
    9. ' =[' → logprob: -12.648655891418457
    10. '=[
' → logprob: -13.023655891418457

Token 519: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025963459629565477
    2. ' [' → logprob: -6.002596378326416
    3. '[list' → logprob: -10.502595901489258
    4. '[List' → logprob: -10.627595901489258
    5. '[self' → logprob: -10.752595901489258
    6. '[class' → logprob: -11.127595901489258
    7. '[row' → logprob: -12.502595901489258
    8. '[line' → logprob: -12.627595901489258
    9. '[result' → logprob: -12.877595901489258
    10. '[Index' → logprob: -13.002595901489258

Token 520: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -1.5048530030981055e-06
    2. ' Flag' → logprob: -13.500001907348633
    3. '.Flag' → logprob: -22.375001907348633
    4. '       ' → logprob: -23.000001907348633
    5. '   ' → logprob: -23.500001907348633
    6. 'Flags' → logprob: -23.625001907348633
    7. 'FLAG' → logprob: -24.250001907348633
    8. '_flag' → logprob: -24.625001907348633
    9. 'flag' → logprob: -25.750001907348633
    10. '     ' → logprob: -26.375001907348633

Token 521: 'Row' (ID: 5513)
  Prédit: 'Row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Row' → logprob: -1.9361264946837764e-07
    2. 'row' → logprob: -16.75
    3. 'Color' → logprob: -18.375
    4. 'Flag' → logprob: -18.75
    5. '<Row' → logprob: -19.25
    6. 'Rows' → logprob: -20.0
    7. '_Row' → logprob: -20.125
    8. '_row' → logprob: -20.5
    9. '[' → logprob: -21.125
    10. '```' → logprob: -22.0

Token 522: '(colors' (ID: 131922)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.2674793303012848
    2. '(colors' → logprob: -1.5174793004989624
    3. '(line' → logprob: -5.392479419708252
    4. 'colors' → logprob: -5.642479419708252
    5. '(raw' → logprob: -5.767479419708252
    6. '(r' → logprob: -6.392479419708252
    7. 'row' → logprob: -6.642479419708252
    8. '(color' → logprob: -7.142479419708252
    9. '(s' → logprob: -8.642478942871094
    10. '(' → logprob: -8.892478942871094

Token 523: ')' (ID: 8)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.013137167319655418
    2. 'row' → logprob: -5.388137340545654
    3. '(line' → logprob: -5.388137340545654
    4. ')' → logprob: -6.763137340545654
    5. '(raw' → logprob: -7.138137340545654
    6. '(color' → logprob: -7.263137340545654
    7. '(r' → logprob: -7.763137340545654
    8. '(c' → logprob: -8.013136863708496
    9. '(' → logprob: -8.388136863708496
    10. '=' → logprob: -9.263136863708496

Token 524: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8162110447883606
    2. ' for' → logprob: -0.9412110447883606
    3. '(colors' → logprob: -1.9412109851837158
    4. 'for' → logprob: -3.816210985183716
    5. 'colors' → logprob: -6.316211223602295
    6. ' colors' → logprob: -9.066210746765137
    7. ' in' → logprob: -9.566210746765137
    8. ']' → logprob: -10.066210746765137
    9. '(rows' → logprob: -10.566210746765137
    10. '(lines' → logprob: -10.566210746765137

Token 525: ' colors' (ID: 10803)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.059667706489563
    2. 'colors' → logprob: -1.309667706489563
    3. ' colors' → logprob: -1.434667706489563
    4. ' self' → logprob: -1.934667706489563
    5. 'color' → logprob: -7.684667587280273
    6. ' color' → logprob: -8.559667587280273
    7. 'row' → logprob: -9.184667587280273
    8. ' row' → logprob: -9.559667587280273
    9. ' ' → logprob: -11.934667587280273
    10. '_colors' → logprob: -12.184667587280273

Token 526: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931498050689697
    2. ' in' → logprob: -0.6931498050689697
    3. 'self' → logprob: -12.94314956665039
    4. '    ' → logprob: -16.56814956665039
    5. '   ' → logprob: -17.06814956665039
    6. ' ' → logprob: -17.06814956665039
    7. '        ' → logprob: -17.56814956665039
    8. '
' → logprob: -17.81814956665039
    9. '  ' → logprob: -18.06814956665039
    10. ')' → logprob: -18.19314956665039

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476135268807411
    2. ' self' → logprob: -6.002476215362549
    3. '(self' → logprob: -15.12747573852539
    4. '[self' → logprob: -16.62747573852539
    5. '       ' → logprob: -17.00247573852539
    6. '   ' → logprob: -17.50247573852539
    7. '
' → logprob: -17.62747573852539
    8. '	self' → logprob: -18.12747573852539
    9. '           ' → logprob: -18.37747573852539
    10. '=self' → logprob: -18.62747573852539

Token 528: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.00034261439577676356
    2. 'raw' → logprob: -8.00034236907959
    3. '.user' → logprob: -11.87534236907959
    4. 'user' → logprob: -15.75034236907959
    5. '	raw' → logprob: -16.500343322753906
    6. ' raw' → logprob: -17.250343322753906
    7. '_raw' → logprob: -18.000343322753906
    8. 'Raw' → logprob: -19.375343322753906
    9. '.Raw' → logprob: -20.250343322753906
    10. '(raw' → logprob: -21.250343322753906

Token 529: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -7.3458322731312364e-06
    2. 'rows' → logprob: -11.875007629394531
    3. '_row' → logprob: -16.50000762939453
    4. '_ROWS' → logprob: -16.87500762939453
    5. '	rows' → logprob: -17.25000762939453
    6. '_lines' → logprob: -17.75000762939453
    7. '_' → logprob: -17.87500762939453
    8. ' rows' → logprob: -18.25000762939453
    9. 'Rows' → logprob: -18.37500762939453
    10. 's' → logprob: -18.62500762939453

Token 530: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029848720878362656
    2. ']
' → logprob: -3.52984881401062
    3. '       ' → logprob: -9.6548490524292
    4. ']
' → logprob: -10.4048490524292
    5. ' ]' → logprob: -12.7798490524292
    6. ']

' → logprob: -14.2798490524292
    7. ' ]
' → logprob: -15.7798490524292
    8. ')' → logprob: -16.154848098754883
    9. '   ' → logprob: -16.404848098754883
    10. ')]' → logprob: -17.404848098754883

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019003171473741531
    2. 'return' → logprob: -6.8769001960754395
    3. '   ' → logprob: -7.8769001960754395
    4. '	' → logprob: -8.376900672912598
    5. ' return' → logprob: -8.751900672912598
    6. '	return' → logprob: -9.501900672912598
    7. '<|end|>' → logprob: -11.626900672912598
    8. '
' → logprob: -11.876900672912598
    9. '	   ' → logprob: -12.251900672912598
    10. '	       ' → logprob: -14.126900672912598

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029007218778133392
    2. '       ' → logprob: -4.029007434844971
    3. ' return' → logprob: -4.529007434844971
    4. '
' → logprob: -12.279006958007812
    5. '	return' → logprob: -13.404006958007812
    6. '   ' → logprob: -14.279006958007812
    7. '	' → logprob: -16.154006958007812
    8. '        
' → logprob: -16.654006958007812
    9. ':return' → logprob: -17.279006958007812
    10. ')return' → logprob: -17.279006958007812

Token 533: ' Flag' (ID: 40343)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.16022422909736633
    2. ' Flag' → logprob: -1.910224199295044
    3. '.Flag' → logprob: -17.78522491455078
    4. '_flag' → logprob: -17.91022491455078
    5. 'flag' → logprob: -19.03522491455078
    6. 'FLAG' → logprob: -19.28522491455078
    7. ' flag' → logprob: -19.41022491455078
    8. '   ' → logprob: -19.91022491455078
    9. '_FLAG' → logprob: -20.41022491455078
    10. ' ' → logprob: -21.28522491455078

Token 534: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -2.935296834039036e-06
    2. 'rows' → logprob: -12.75000286102295
    3. '(' → logprob: -17.125003814697266
    4. '(lines' → logprob: -18.250003814697266
    5. ' (' → logprob: -18.875003814697266
    6. ' rows' → logprob: -19.375003814697266
    7. '(
' → logprob: -19.500003814697266
    8. '(row' → logprob: -20.500003814697266
    9. '	rows' → logprob: -20.500003814697266
    10. '((' → logprob: -21.375003814697266

Token 535: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -16.25
    4. '<|end|>' → logprob: -16.625
    5. '())' → logprob: -18.625
    6. '[' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. '),' → logprob: -19.625
    9. ')}' → logprob: -19.75
    10. ')

' → logprob: -20.0

Token 536: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02325829118490219
    2. 'def' → logprob: -3.7732582092285156
    3. '```' → logprob: -12.023258209228516
    4. '#' → logprob: -12.398258209228516
    5. 'flag' → logprob: -13.773258209228516
    6. ' if' → logprob: -14.023258209228516
    7. '
' → logprob: -14.523258209228516
    8. 'import' → logprob: -15.648258209228516
    9. 'parser' → logprob: -16.273258209228516
    10. '    
' → logprob: -18.148258209228516

Token 537: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006103220395743847
    2. 'main' → logprob: -5.131103038787842
    3. ' solve' → logprob: -8.756103515625
    4. ' run' → logprob: -11.756103515625
    5. '_main' → logprob: -12.381103515625
    6. 'solve' → logprob: -13.256103515625
    7. ' solution' → logprob: -14.006103515625
    8. ' __' → logprob: -14.381103515625
    9. '	main' → logprob: -14.381103515625
    10. '__' → logprob: -14.756103515625

Token 538: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.7491250875755213e-05
    2. '():
' → logprob: -10.750027656555176
    3. '()' → logprob: -12.375027656555176
    4. ' ():' → logprob: -13.375027656555176
    5. '(' → logprob: -16.37502670288086
    6. ':' → logprob: -17.37502670288086
    7. '():
' → logprob: -17.62502670288086
    8. '()>' → logprob: -17.87502670288086
    9. '():

' → logprob: -18.25002670288086
    10. '().' → logprob: -18.50002670288086

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08686109632253647
    2. 'parser' → logprob: -2.5868611335754395
    3. ' parser' → logprob: -4.8368611335754395
    4. '	parser' → logprob: -12.086860656738281
    5. 'input' → logprob: -14.211860656738281
    6. '_parser' → logprob: -15.211860656738281
    7. 'ip' → logprob: -15.461860656738281
    8. '
' → logprob: -15.586860656738281
    9. '.parser' → logprob: -15.586860656738281
    10. ' ' → logprob: -15.836860656738281

Token 540: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.03487677872180939
    2. ' parser' → logprob: -3.534876823425293
    3. '   ' → logprob: -5.284876823425293
    4. 'input' → logprob: -11.034876823425293
    5. 'import' → logprob: -11.284876823425293
    6. 'ip' → logprob: -12.409876823425293
    7. ' ' → logprob: -12.409876823425293
    8. 'parse' → logprob: -13.159876823425293
    9. '	parser' → logprob: -13.284876823425293
    10. 'p' → logprob: -13.659876823425293

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010403759777545929
    2. '.parse' → logprob: -5.135403633117676
    3. '=' → logprob: -5.635403633117676
    4. '.' → logprob: -7.260403633117676
    5. '=parse' → logprob: -8.885403633117676
    6. '().' → logprob: -11.260403633117676
    7. '.parser' → logprob: -11.635403633117676
    8. '   ' → logprob: -11.635403633117676
    9. ' .' → logprob: -11.760403633117676
    10. ' ' → logprob: -12.385403633117676

Token 542: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -5.836499985889532e-05
    2. ' Input' → logprob: -9.7500581741333
    3. '	Input' → logprob: -21.375059127807617
    4. '<Input' → logprob: -22.125059127807617
    5. '_Input' → logprob: -22.625059127807617
    6. '_input' → logprob: -23.000059127807617
    7. '\Input' → logprob: -23.500059127807617
    8. ' input' → logprob: -24.500059127807617
    9. 'input' → logprob: -24.875059127807617
    10. '.Input' → logprob: -26.000059127807617

Token 543: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -17.25
    3. '_parser' → logprob: -19.875
    4. 'Parse' → logprob: -20.25
    5. '(Parser' → logprob: -20.375
    6. '.Parser' → logprob: -21.125
    7. ' Parser' → logprob: -21.375
    8. ' parser' → logprob: -22.5
    9. '-parser' → logprob: -22.625
    10. 'Parsed' → logprob: -23.0

Token 544: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1017061397433281
    2. '
' → logprob: -2.726706027984619
    3. 'parser' → logprob: -4.101706027984619
    4. '	parser' → logprob: -5.101706027984619
    5. '(parser' → logprob: -5.351706027984619
    6. ' parser' → logprob: -5.851706027984619
    7. '.parser' → logprob: -7.351706027984619
    8. '    
' → logprob: -8.601706504821777
    9. '_parser' → logprob: -9.976706504821777
    10. '/parser' → logprob: -10.101706504821777

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0470859631896019
    2. 'parser' → logprob: -3.297086000442505
    3. '
' → logprob: -4.922085762023926
    4. '	parser' → logprob: -6.672085762023926
    5. ' parser' → logprob: -7.797085762023926
    6. '(parser' → logprob: -10.797085762023926
    7. '    
' → logprob: -11.672085762023926
    8. '
' → logprob: -12.422085762023926
    9. '.parser' → logprob: -13.047085762023926
    10. '_parser' → logprob: -13.297085762023926

Token 546: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -5.88418151892256e-05
    2. ' parser' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.625059127807617
    4. '	parser' → logprob: -18.000059127807617
    5. '(parser' → logprob: -19.250059127807617
    6. 'parse' → logprob: -19.250059127807617
    7. '.parser' → logprob: -20.750059127807617
    8. '
' → logprob: -21.125059127807617
    9. '/parser' → logprob: -21.625059127807617
    10. 'Parser' → logprob: -21.625059127807617

Token 547: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00043126524542458355
    2. '.' → logprob: -7.750431060791016
    3. '.parser' → logprob: -15.500431060791016
    4. ' .' → logprob: -16.250431060791016
    5. '.
' → logprob: -16.250431060791016
    6. '=parse' → logprob: -16.750431060791016
    7. '.Parse' → logprob: -17.125431060791016
    8. '   ' → logprob: -18.000431060791016
    9. '
' → logprob: -18.375431060791016
    10. 'parse' → logprob: -19.125431060791016

Token 548: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001997273648157716
    2. '
' → logprob: -6.251997470855713
    3. '    
' → logprob: -10.251996994018555
    4. 'flag' → logprob: -10.376996994018555
    5. ' flag' → logprob: -13.501996994018555
    6. '	flag' → logprob: -14.751996994018555
    7. '
' → logprob: -15.376996994018555
    8. '   
' → logprob: -16.876996994018555
    9. '(flag' → logprob: -16.876996994018555
    10. '  
' → logprob: -17.001996994018555

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139588236808777
    2. 'flag' → logprob: -1.3139588832855225
    3. ' flag' → logprob: -7.313958644866943
    4. '
' → logprob: -10.938959121704102
    5. '```' → logprob: -12.313959121704102
    6. '    
' → logprob: -12.688959121704102
    7. '	flag' → logprob: -12.688959121704102
    8. '   ' → logprob: -13.313959121704102
    9. '(flag' → logprob: -15.438959121704102
    10. 'flags' → logprob: -16.1889591217041

Token 550: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -1.2471589798224159e-05
    2. '   ' → logprob: -12.000012397766113
    3. ' flag' → logprob: -12.000012397766113
    4. '	flag' → logprob: -18.75001335144043
    5. 'fl' → logprob: -19.25001335144043
    6. '_flag' → logprob: -19.50001335144043
    7. 'f' → logprob: -20.50001335144043
    8. 'flags' → logprob: -20.62501335144043
    9. '
' → logprob: -21.12501335144043
    10. '```' → logprob: -21.50001335144043

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001171056181192398
    2. '=' → logprob: -6.751171112060547
    3. '_flag' → logprob: -14.876171112060547
    4. 'flag' → logprob: -15.251171112060547
    5. '   ' → logprob: -16.376171112060547
    6. ' ' → logprob: -16.876171112060547
    7. '_' → logprob: -17.376171112060547
    8. '  ' → logprob: -17.751171112060547
    9. ':' → logprob: -18.376171112060547
    10. '_obj' → logprob: -18.626171112060547

Token 552: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.2561328411102295
    2. 'parser' → logprob: -1.5061328411102295
    3. ' flag' → logprob: -5.756133079528809
    4. 'flag' → logprob: -6.881133079528809
    5. '(parser' → logprob: -12.506133079528809
    6. '	parser' → logprob: -14.131133079528809
    7. '   ' → logprob: -17.131132125854492
    8. '/parser' → logprob: -17.256132125854492
    9. '.parser' → logprob: -17.381132125854492
    10. ' ' → logprob: -17.506132125854492

Token 553: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.750000953674316
    3. ' .' → logprob: -16.5
    4. '.To' → logprob: -19.0
    5. 'to' → logprob: -20.625
    6. '   ' → logprob: -21.0
    7. '.te' → logprob: -21.0
    8. '.t' → logprob: -21.25
    9. '.from' → logprob: -21.625
    10. '.tolist' → logprob: -22.25

Token 554: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.003177952254191041
    2. 'flag' → logprob: -5.753178119659424
    3. 'Flag' → logprob: -15.878177642822266
    4. 'f' → logprob: -17.378177642822266
    5. ' flag' → logprob: -17.378177642822266
    6. '	flag' → logprob: -17.753177642822266
    7. '_FLAG' → logprob: -17.753177642822266
    8. '(flag' → logprob: -20.253177642822266
    9. 'g' → logprob: -20.503177642822266
    10. '_flags' → logprob: -21.128177642822266

Token 555: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1405942142009735
    2. '
' → logprob: -2.140594244003296
    3. '   ' → logprob: -4.765594005584717
    4. '()
' → logprob: -5.890594005584717
    5. ' print' → logprob: -6.640594005584717
    6. 'flag' → logprob: -7.390594005584717
    7. '
' → logprob: -9.140594482421875
    8. 'min' → logprob: -9.140594482421875
    9. '()' → logprob: -9.765594482421875
    10. '```' → logprob: -10.140594482421875

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2539962828159332
    2. 'print' → logprob: -1.5039962530136108
    3. 'result' → logprob: -6.2539963722229
    4. ' print' → logprob: -8.878995895385742
    5. ' result' → logprob: -13.503995895385742
    6. '```' → logprob: -13.878995895385742
    7. '	print' → logprob: -15.378995895385742
    8. '
' → logprob: -15.503995895385742
    9. '    
' → logprob: -15.878995895385742
    10. 'min' → logprob: -16.378995895385742

Token 557: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007167612202465534
    2. 'result' → logprob: -5.007167816162109
    3. '   ' → logprob: -8.00716781616211
    4. 'min' → logprob: -9.13216781616211
    5. ' print' → logprob: -11.88216781616211
    6. 'cost' → logprob: -12.88216781616211
    7. 'answer' → logprob: -14.63216781616211
    8. '```' → logprob: -14.75716781616211
    9. 'res' → logprob: -15.00716781616211
    10. '    
' → logprob: -16.25716781616211

Token 558: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.00033546582562848926
    2. 'flag' → logprob: -8.000335693359375
    3. '(' → logprob: -17.250335693359375
    4. ' flag' → logprob: -17.500335693359375
    5. '	flag' → logprob: -20.500335693359375
    6. '(flags' → logprob: -21.250335693359375
    7. 'Flag' → logprob: -21.875335693359375
    8. '(
' → logprob: -22.250335693359375
    9. '_flag' → logprob: -23.500335693359375
    10. '旗' → logprob: -24.000335693359375

Token 559: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -9.088346359931165e-07
    2. ' .' → logprob: -15.000000953674316
    3. '.max' → logprob: -15.250000953674316
    4. '.' → logprob: -15.500000953674316
    5. ').' → logprob: -16.25
    6. '.m' → logprob: -18.5
    7. '.minimum' → logprob: -19.0
    8. '.Min' → logprob: -19.75
    9. 'min' → logprob: -20.5
    10. '	min' → logprob: -20.625

Token 560: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.625000953674316
    3. 're' → logprob: -17.0
    4. '_r' → logprob: -17.375
    5. '_rep' → logprob: -17.75
    6. 'Re' → logprob: -19.5
    7. '_res' → logprob: -20.25
    8. '_rem' → logprob: -20.5
    9. '_RE' → logprob: -20.625
    10. ')' → logprob: -20.875

Token 561: 'painting' (ID: 168134)
  Prédit: 'painting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'painting' → logprob: -0.0012842832366004586
    2. 'p' → logprob: -6.751284122467041
    3. 'pa' → logprob: -9.8762845993042
    4. 'paint' → logprob: -10.2512845993042
    5. 'pair' → logprob: -11.2512845993042
    6. 'pain' → logprob: -11.2512845993042
    7. '_p' → logprob: -14.7512845993042
    8. 'Painting' → logprob: -15.0012845993042
    9. ' painting' → logprob: -15.5012845993042
    10. 'pay' → logprob: -16.126283645629883

Token 562: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2664456789934775e-06
    2. '_cost' → logprob: -14.375000953674316
    3. '_t' → logprob: -15.250000953674316
    4. ' _' → logprob: -15.625000953674316
    5. '_' → logprob: -16.875001907348633
    6. ')_' → logprob: -16.875001907348633
    7. '```' → logprob: -18.750001907348633
    8. ')' → logprob: -18.750001907348633
    9. '_for' → logprob: -19.000001907348633
    10. '__' → logprob: -19.750001907348633

Token 563: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.658901035785675
    2. 'r' → logprob: -0.783901035785675
    3. 'ussian' → logprob: -3.6589009761810303
    4. ' russian' → logprob: -9.40890121459961
    5. 'Russian' → logprob: -10.40890121459961
    6. 'rus' → logprob: -10.53390121459961
    7. 'f' → logprob: -11.28390121459961
    8. 'python' → logprob: -11.90890121459961
    9. '```' → logprob: -12.15890121459961
    10. 's' → logprob: -12.53390121459961

Token 564: 'ussian' (ID: 28810)
  Prédit: 'ussian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ussian' → logprob: -1.7432603272027336e-06
    2. 'uss' → logprob: -14.125001907348633
    3. 'ussi' → logprob: -14.625001907348633
    4. 'ussia' → logprob: -15.125001907348633
    5. 'ussion' → logprob: -15.625001907348633
    6. 'us' → logprob: -17.125001907348633
    7. ' us' → logprob: -18.625001907348633
    8. 'u' → logprob: -19.750001907348633
    9. '```' → logprob: -20.125001907348633
    10. '#' → logprob: -20.250001907348633

Token 565: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.375000953674316
    3. 'flag' → logprob: -15.250000953674316
    4. '_color' → logprob: -15.625000953674316
    5. ' _' → logprob: -16.125001907348633
    6. '_f' → logprob: -17.500001907348633
    7. '_flags' → logprob: -17.875001907348633
    8. '_fl' → logprob: -18.125001907348633
    9. '_code' → logprob: -18.500001907348633
    10. '```' → logprob: -18.500001907348633

Token 566: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011889220913872123
    2. '()' → logprob: -6.7511887550354
    3. ')' → logprob: -11.251189231872559
    4. '())
' → logprob: -12.751189231872559
    5. ' ())' → logprob: -13.126189231872559
    6. '();)' → logprob: -14.751189231872559
    7. '()
' → logprob: -15.876189231872559
    8. '()))' → logprob: -16.001188278198242
    9. '()]' → logprob: -16.501188278198242
    10. '())

' → logprob: -16.876188278198242

Token 567: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.512236498361744e-07
    2. ' if' → logprob: -14.625000953674316
    3. '
' → logprob: -18.125
    4. '```' → logprob: -19.125
    5. '#' → logprob: -21.75
    6. '	if' → logprob: -22.5
    7. '\' → logprob: -22.75
    8. '

' → logprob: -23.25
    9. 'for' → logprob: -23.625
    10. '__' → logprob: -23.625

Token 568: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20239606499671936
    2. '__' → logprob: -1.702396035194397
    3. 'name' → logprob: -7.577395915985107
    4. '_name' → logprob: -8.077396392822266
    5. '_' → logprob: -9.327396392822266
    6. ' ' → logprob: -10.577396392822266
    7. ' ' → logprob: -11.202396392822266
    8. '___' → logprob: -11.452396392822266
    9. ' name' → logprob: -12.327396392822266
    10. ' _' → logprob: -12.702396392822266

Token 569: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004764041863381863
    2. ' ==' → logprob: -6.004764080047607
    3. '==' → logprob: -6.254764080047607
    4. '__.__' → logprob: -9.37976360321045
    5. ' __' → logprob: -9.50476360321045
    6. '.__' → logprob: -9.62976360321045
    7. '=="' → logprob: -10.50476360321045
    8. '_' → logprob: -10.62976360321045
    9. '__.' → logprob: -10.75476360321045
    10. '=='' → logprob: -11.00476360321045

Token 570: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016384923947043717
    2. '==' → logprob: -8.875164031982422
    3. '__.__' → logprob: -11.250164031982422
    4. ' ==' → logprob: -11.750164031982422
    5. '=="' → logprob: -13.375164031982422
    6. '=='' → logprob: -15.250164031982422
    7. '__["' → logprob: -15.250164031982422
    8. '__('' → logprob: -15.625164031982422
    9. '____' → logprob: -15.625164031982422
    10. '"' → logprob: -15.625164031982422

Token 571: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03106982633471489
    2. '==' → logprob: -3.531069755554199
    3. ' ==' → logprob: -6.906069755554199
    4. '=="' → logprob: -8.1560697555542
    5. '=='' → logprob: -11.1560697555542
    6. '__.__' → logprob: -11.7810697555542
    7. '===' → logprob: -13.6560697555542
    8. '_' → logprob: -14.1560697555542
    9. '___' → logprob: -14.2810697555542
    10. '=' → logprob: -14.4060697555542

Token 572: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694668769836426
    2. ''' → logprob: -2.1269466876983643
    3. ' "__' → logprob: -11.126946449279785
    4. ' '__' → logprob: -13.001946449279785
    5. '__' → logprob: -13.501946449279785
    6. ''"' → logprob: -16.2519474029541
    7. '("__' → logprob: -17.2519474029541
    8. '('__' → logprob: -17.2519474029541
    9. '"'' → logprob: -17.5019474029541
    10. '"name' → logprob: -17.6269474029541

Token 573: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.1008713702030946e-06
    2. 'name' → logprob: -13.500001907348633
    3. '__' → logprob: -14.375001907348633
    4. '_main' → logprob: -16.125001907348633
    5. 'm' → logprob: -17.125001907348633
    6. ' main' → logprob: -17.250001907348633
    7. 'ma' → logprob: -18.250001907348633
    8. '-main' → logprob: -19.750001907348633
    9. '	main' → logprob: -20.750001907348633
    10. 'built' → logprob: -20.750001907348633

Token 574: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07892493158578873
    2. '__' → logprob: -2.5789248943328857
    3. '__":
' → logprob: -10.703925132751465
    4. '__.' → logprob: -11.953925132751465
    5. '_' → logprob: -12.578925132751465
    6. '__.__' → logprob: -13.453925132751465
    7. '__:' → logprob: -13.953925132751465
    8. '___' → logprob: -15.578925132751465
    9. '':' → logprob: -16.45392417907715
    10. ''' → logprob: -16.57892417907715

Token 575: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.027294684201478958
    2. ' main' → logprob: -3.652294635772705
    3. '	main' → logprob: -7.277294635772705
    4. '   ' → logprob: -8.277295112609863
    5. '__' → logprob: -10.402295112609863
    6. '_main' → logprob: -11.652295112609863
    7. '
' → logprob: -11.902295112609863
    8. '    
' → logprob: -14.277295112609863
    9. '(main' → logprob: -14.527295112609863
    10. 'import' → logprob: -14.777295112609863

Token 576: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.625
    4. '   ' → logprob: -22.5
    5. 'import' → logprob: -22.5
    6. '(main' → logprob: -25.5
    7. '_main' → logprob: -25.5
    8. '.main' → logprob: -25.75
    9. '
' → logprob: -27.5
    10. '  ' → logprob: -28.0

Token 577: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 575
Tokens correctement prédits (1ère position, stricte): 278
Tokens correctement prédits (1ère position, avec adaptation): 306
Tokens correctement prédits (top 10): 508
Précision stricte (1ère position): 48.35%
Précision adaptée (1ère position): 53.22%
Précision (top 10): 88.35%
================================================================================
