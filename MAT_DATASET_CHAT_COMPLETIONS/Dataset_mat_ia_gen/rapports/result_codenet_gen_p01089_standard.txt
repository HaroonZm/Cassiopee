================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def parse_blocks(s):
    blocks = []
    i = 0
    n = len(s)
    while i < n:
        acquired = []
        while i < n and s[i] != 'u':
            acquired.append(int(s[i]))
            i += 1
        i += 1  # skip 'u'
        blocks.append(acquired)
    return blocks

def build_wait_for_graph(blocks):
    m = len(blocks)
    g = [[] for _ in range(10)]
    # For each lock, find the set of blocks that acquire it
    lock_to_blocks = [[] for _ in range(10)]
    for i,b in enumerate(blocks):
        for l in b:
            lock_to_blocks[l].append(i)
    # Build dependency (wait-for) edges between locks
    # Check pairs of blocks that share locks to create wait edges between locks
    # If lock A is held by a thread in block i, and in block i another thread tries to acquire lock B which is held by block j,
    # then lock A waits for lock B, meaning edge from A to B
    for i in range(m):
        blocks_locks = set(blocks[i])
        # Each block holds all locks in blocks[i] simultaneously and releases all at u
        # The lock acquisition order in the block is linear, but since instructions are executed sequentially,
        # a thread holds the locks accumulated until the next u.
        # To simulate wait-for, for each lock in block i,
        # the thread tries to acquire locks in order in that block, so for subsequent locks in the block, 
        # the thread holds previous locks and tries to acquire next lock, generating edges.

    # Instead of modeling threads, we model a lock allocation graph:
    # For each block, locks are acquired in order, so within the block:
    # lock acquired later waits for locks held earlier in the block.
    # Outside the block, two blocks can cause waits if one tries to acquire a lock held by the other.
    # Because each thread acquires locks in sequence in the block until u.

    # Build edges within block: for locks acquired in order, later lock waits for earlier lock
    for b in blocks:
        for i in range(1,len(b)):
            g[b[i]].append(b[i-1])
    # Build edges between blocks: if two blocks share locks, cross edges possible
    # For each pair of locks (l1,l2), if l1 in block A and l2 in block B, and l2 is acquired later in block B, conflict may occur
    # But conflicts arise only if locks are used in different blocks and may cause circular waits.
    # We add edges from lock2 to lock1 if there exists blocks where lock1 is acquired before lock2.

    # To detect unsafe, we check if the graph (of locks) has cycles.

    return g

def dfs(u, g, visited, stack):
    visited[u] = 1
    for v in g[u]:
        if visited[v] == 0:
            if dfs(v, g, visited, stack):
                return True
        elif visited[v] == 1:
            return True
    visited[u] = 2
    stack.append(u)
    return False

def is_unsafe(s):
    blocks = parse_blocks(s)
    g = [[] for _ in range(10)]
    # Within each block, lock i+1 waits for lock i
    for b in blocks:
        for i in range(1,len(b)):
            g[b[i]].append(b[i-1])
    # Between blocks, if a lock l1 is acquired in a block after some other lock l2 is acquired in another block,
    # and lock l1 and l2 appear in different order in the sequence, this can generate waits.
    # But more generally, consider lock conflicts.
    # For each pair of locks (a,b), if there exists blocks containing a and b, where a waits for b indirectly, add edges accordingly.

    # Since all threads execute the same sequence from beginning,
    # cycles in lock dependency graph can happen if dependency graph formed by edges (latter lock waits for earlier lock) has cycle.

    visited = [0]*10
    for i in range(10):
        if visited[i]==0:
            if dfs(i, g, visited, []):
                return True
    return False

while True:
    n = sys.stdin.readline()
    if not n:
        break
    n = n.strip()
    if n == '0':
        break
    s = sys.stdin.readline().strip()
    if is_unsafe(s):
        print("UNSAFE")
    else:
        print("SAFE")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.1644556075334549
    2. 'limit' → logprob: -1.9144556522369385
    3. '_depth' → logprob: -5.539455413818359
    4. 'depth' → logprob: -9.53945541381836
    5. '_' → logprob: -9.66445541381836
    6. '_lim' → logprob: -10.53945541381836
    7. ' limit' → logprob: -10.91445541381836
    8. '_rate' → logprob: -11.16445541381836
    9. '_error' → logprob: -11.53945541381836
    10. 'lim' → logprob: -11.78945541381836

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.676292231422849e-05
    2. ' (' → logprob: -11.625017166137695
    3. '(
' → logprob: -12.250017166137695
    4. '(

' → logprob: -13.250017166137695
    5. '("("' → logprob: -14.750017166137695
    6. '((' → logprob: -15.125017166137695
    7. '('' → logprob: -15.500017166137695
    8. '(.' → logprob: -16.125017166137695
    9. '```' → logprob: -16.875017166137695
    10. '(
' → logprob: -17.375017166137695

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16084302961826324
    2. ' factorial' → logprob: -2.1608431339263916
    3. ' dfs' → logprob: -3.7858431339263916
    4. ' fibonacci' → logprob: -5.6608428955078125
    5. ' space' → logprob: -6.6608428955078125
    6. ' factor' → logprob: -6.7858428955078125
    7. ' recursive' → logprob: -7.5358428955078125
    8. ' fib' → logprob: -7.6608428955078125
    9. ' main' → logprob: -7.7858428955078125
    10. '_' → logprob: -7.9108428955078125

Token 15: '_blocks' (ID: 60244)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04150262847542763
    2. '(' → logprob: -3.7915027141571045
    3. '_input' → logprob: -5.791502475738525
    4. '_token' → logprob: -6.166502475738525
    5. '_line' → logprob: -6.291502475738525
    6. '_query' → logprob: -6.791502475738525
    7. '_args' → logprob: -7.041502475738525
    8. '_tree' → logprob: -7.041502475738525
    9. '_expression' → logprob: -7.166502475738525
    10. '_code' → logprob: -7.666502475738525

Token 16: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005412388709373772
    2. '_' → logprob: -7.8755412101745605
    3. '```' → logprob: -10.250541687011719
    4. '("("' → logprob: -10.500541687011719
    5. ' (' → logprob: -11.125541687011719
    6. '(_' → logprob: -11.250541687011719
    7. ':' → logprob: -11.375541687011719
    8. '('' → logprob: -12.375541687011719
    9. '(user' → logprob: -12.375541687011719
    10. '((' → logprob: -12.500541687011719

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007996252737939358
    2. ')' → logprob: -5.257996082305908
    3. ',' → logprob: -6.132996082305908
    4. ':' → logprob: -7.507996082305908
    5. '):
' → logprob: -11.007996559143066
    6. ' ):' → logprob: -11.507996559143066
    7. '[' → logprob: -12.757996559143066
    8. ' :' → logprob: -13.382996559143066
    9. '_' → logprob: -13.632996559143066
    10. '   ' → logprob: -14.007996559143066

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32211536169052124
    2. ':' → logprob: -1.322115421295166
    3. '    ' → logprob: -5.697115421295166
    4. '```' → logprob: -6.197115421295166
    5. ' :' → logprob: -6.697115421295166
    6. ':
' → logprob: -7.572115421295166
    7. ' ' → logprob: -7.822115421295166
    8. 'tokens' → logprob: -8.697114944458008
    9. ':\' → logprob: -8.947114944458008
    10. '  ' → logprob: -9.447114944458008

Token 19: ' blocks' (ID: 18125)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5953364372253418
    2. ' blocks' → logprob: -2.345336437225342
    3. ' stack' → logprob: -2.595336437225342
    4. ' n' → logprob: -2.720336437225342
    5. ' tokens' → logprob: -2.720336437225342
    6. 'tokens' → logprob: -2.970336437225342
    7. 'stack' → logprob: -4.095336437225342
    8. '    ' → logprob: -4.220336437225342
    9. 'blocks' (adapté à ' blocks') → logprob: -4.345336437225342
    10. ' pos' → logprob: -5.095336437225342

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05562305077910423
    2. '=' → logprob: -2.9306230545043945
    3. '=[]' → logprob: -8.055623054504395
    4. '   ' → logprob: -8.555623054504395
    5. '[]' → logprob: -9.930623054504395
    6. '[' → logprob: -9.930623054504395
    7. ' ' → logprob: -10.430623054504395
    8. '[:]' → logprob: -10.555623054504395
    9. ')' → logprob: -11.180623054504395
    10. '.' → logprob: -11.680623054504395

Token 21: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5761133432388306
    2. ' []' → logprob: -0.8261133432388306
    3. '{}' → logprob: -9.7011137008667
    4. '[' → logprob: -9.9511137008667
    5. '[]
' → logprob: -10.8261137008667
    6. ' {}' → logprob: -11.5761137008667
    7. ' ' → logprob: -11.5761137008667
    8. ' []
' → logprob: -12.0761137008667
    9. ' [' → logprob: -12.2011137008667
    10. '[]}' → logprob: -12.5761137008667

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020443083718419075
    2. '    
' → logprob: -4.395442962646484
    3. 'current' → logprob: -6.020442962646484
    4. '    ' → logprob: -6.270442962646484
    5. ' current' → logprob: -6.395442962646484
    6. '
' → logprob: -7.895442962646484
    7. 'i' → logprob: -8.645442962646484
    8. '     
' → logprob: -8.645442962646484
    9. 'n' → logprob: -8.770442962646484
    10. ' =' → logprob: -9.270442962646484

Token 23: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.153817892074585
    2. 'current' → logprob: -1.278817892074585
    3. ' current' → logprob: -1.903817892074585
    4. 'stack' → logprob: -2.403817892074585
    5. ' stack' → logprob: -3.153817892074585
    6. ' i' → logprob: -3.153817892074585
    7. '   ' → logprob: -3.903817892074585
    8. 'token' → logprob: -4.403818130493164
    9. 'start' → logprob: -4.778818130493164
    10. 'block' → logprob: -5.028818130493164

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5780913233757019
    2. ' =' → logprob: -0.8280913233757019
    3. ' ' → logprob: -6.828091144561768
    4. ' +=' → logprob: -7.578091144561768
    5. 'n' → logprob: -8.203091621398926
    6. '+' → logprob: -9.703091621398926
    7. '+=' → logprob: -9.703091621398926
    8. '<|end|>' → logprob: -10.328091621398926
    9. ',' → logprob: -10.578091621398926
    10. ')' → logprob: -10.953091621398926

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07897967845201492
    2. ' ' → logprob: -2.578979730606079
    3. '1' → logprob: -9.3289794921875
    4. '2' → logprob: -14.5789794921875
    5. ' ' → logprob: -16.0789794921875
    6. '  ' → logprob: -16.9539794921875
    7. '```' → logprob: -17.0164794921875
    8. '3' → logprob: -17.0789794921875
    9. '   ' → logprob: -17.2664794921875
    10. 's' → logprob: -17.3914794921875

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -9.125161170959473
    3. '1' → logprob: -9.875161170959473
    4. '2' → logprob: -14.750161170959473
    5. '   ' → logprob: -16.12516212463379
    6. '```' → logprob: -16.75016212463379
    7. 's' → logprob: -16.81266212463379
    8. 'len' → logprob: -16.87516212463379
    9. '-' → logprob: -17.25016212463379
    10. '=' → logprob: -17.43766212463379

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.763929009437561
    2. '<|end|>' → logprob: -0.763929009437561
    3. ' ' → logprob: -3.0139288902282715
    4. ' 
' → logprob: -5.5139288902282715
    5. '<|end|>' → logprob: -5.7639288902282715
    6. '  ' → logprob: -5.7639288902282715
    7. '   ' → logprob: -6.1389288902282715
    8. '    
' → logprob: -6.5139288902282715
    9. '  
' → logprob: -6.6389288902282715
    10. '   
' → logprob: -7.1389288902282715

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.251158356666565
    2. 'while' → logprob: -1.376158356666565
    3. '
' → logprob: -1.751158356666565
    4. ' while' → logprob: -1.751158356666565
    5. ' ' → logprob: -2.3761582374572754
    6. '    
' → logprob: -5.751158237457275
    7. '  ' → logprob: -5.751158237457275
    8. '<|end|>' → logprob: -5.751158237457275
    9. ')' → logprob: -6.001158237457275
    10. ' 
' → logprob: -6.126158237457275

Token 29: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3689330220222473
    2. ' while' → logprob: -1.3689329624176025
    3. 'n' (adapté à ' n') → logprob: -2.9939329624176025
    4. ' n' → logprob: -5.618933200836182
    5. 'len' → logprob: -8.868932723999023
    6. '   ' → logprob: -9.118932723999023
    7. 'length' → logprob: -9.368932723999023
    8. ' ' → logprob: -9.993932723999023
    9. ' length' → logprob: -11.618932723999023
    10. '	while' → logprob: -11.618932723999023

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11700956523418427
    2. '=' → logprob: -2.2420096397399902
    3. ' ' → logprob: -5.86700963973999
    4. '<|end|>' → logprob: -6.99200963973999
    5. ')' → logprob: -9.242009162902832
    6. 's' → logprob: -9.617009162902832
    7. '<|end|>' → logprob: -10.117009162902832
    8. ' s' → logprob: -10.117009162902832
    9. ',' → logprob: -10.242009162902832
    10. '>' → logprob: -10.742009162902832

Token 31: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04858816787600517
    2. 'len' → logprob: -3.048588275909424
    3. '(len' → logprob: -15.048587799072266
    4. '=len' → logprob: -15.298587799072266
    5. ' ' → logprob: -16.423587799072266
    6. '[len' → logprob: -16.923587799072266
    7. '<len' → logprob: -17.423587799072266
    8. '	len' → logprob: -17.548587799072266
    9. ',len' → logprob: -17.673587799072266
    10. 's' → logprob: -18.548587799072266

Token 32: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001422770437784493
    2. '(' → logprob: -8.875142097473145
    3. 's' → logprob: -13.000142097473145
    4. ' (' → logprob: -16.50014305114746
    5. ')' → logprob: -17.75014305114746
    6. '(n' → logprob: -18.50014305114746
    7. '(
' → logprob: -19.50014305114746
    8. '```' → logprob: -19.62514305114746
    9. '(i' → logprob: -20.37514305114746
    10. '(S' → logprob: -20.37514305114746

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4285862057004124e-05
    2. ')
' → logprob: -10.50003433227539
    3. ' )' → logprob: -12.75003433227539
    4. '   ' → logprob: -13.00003433227539
    5. ' ' → logprob: -14.75003433227539
    6. ')i' → logprob: -15.37503433227539
    7. ')s' → logprob: -15.37503433227539
    8. ')n' → logprob: -15.62503433227539
    9. ')

' → logprob: -16.12503433227539
    10. '```' → logprob: -16.62503433227539

Token 34: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7080341577529907
    2. ' ' → logprob: -2.083034038543701
    3. '   ' → logprob: -2.083034038543701
    4. '    
' → logprob: -2.458034038543701
    5. '
' → logprob: -2.583034038543701
    6. '<|end|>' → logprob: -3.583034038543701
    7. '  
' → logprob: -4.083034038543701
    8. ' while' → logprob: -4.333034038543701
    9. ':' → logprob: -4.583034038543701
    10. '   
' → logprob: -4.833034038543701

Token 35: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.18355697393417358
    2. 'while' (adapté à ' while') → logprob: -1.8085570335388184
    3. '   ' → logprob: -6.058557033538818
    4. ' ' → logprob: -7.433557033538818
    5. '```' → logprob: -8.43355655670166
    6. 'While' → logprob: -8.80855655670166
    7. '	while' → logprob: -9.05855655670166
    8. '<|end|>' → logprob: -9.30855655670166
    9. '    
' → logprob: -9.43355655670166
    10. ' 
' → logprob: -9.68355655670166

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03805606812238693
    2. 'i' → logprob: -3.2880561351776123
    3. ' ' → logprob: -11.663056373596191
    4. ' True' → logprob: -12.663056373596191
    5. '   ' → logprob: -14.163056373596191
    6. '    ' → logprob: -14.413056373596191
    7. '(i' → logprob: -14.913056373596191
    8. 'True' → logprob: -15.163056373596191
    9. '	i' → logprob: -15.288056373596191
    10. '  ' → logprob: -15.913056373596191

Token 37: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6934835910797119
    2. ' <' → logprob: -0.6934835910797119
    3. ' ' → logprob: -8.693483352661133
    4. '<len' → logprob: -9.068483352661133
    5. '<n' → logprob: -10.693483352661133
    6. '<=' → logprob: -11.568483352661133
    7. ' <=' → logprob: -11.943483352661133
    8. '[' → logprob: -13.193483352661133
    9. '<size' → logprob: -13.193483352661133
    10. '<s' → logprob: -13.443483352661133

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47407791018486023
    2. ' n' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.099078178405762
    4. '	n' → logprob: -15.599078178405762
    5. '<n' → logprob: -18.099077224731445
    6. ')n' → logprob: -18.224077224731445
    7. 'len' → logprob: -18.599077224731445
    8. '   ' → logprob: -18.974077224731445
    9. '```' → logprob: -19.099077224731445
    10. ' ' → logprob: -19.599077224731445

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007523320964537561
    2. ':
' → logprob: -7.2507524490356445
    3. ' and' → logprob: -11.125752449035645
    4. ' :' → logprob: -11.250752449035645
    5. '   ' → logprob: -12.250752449035645
    6. ':**' → logprob: -12.500752449035645
    7. '):' → logprob: -13.125752449035645
    8. ':def' → logprob: -14.125752449035645
    9. 'and' → logprob: -14.375752449035645
    10. ':

' → logprob: -14.750752449035645

Token 40: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5280501246452332
    2. ' ' → logprob: -1.028050184249878
    3. '   ' → logprob: -4.278049945831299
    4. ' if' → logprob: -4.403049945831299
    5. '       ' → logprob: -4.653049945831299
    6. 'if' → logprob: -4.778049945831299
    7. '     
' → logprob: -5.278049945831299
    8. '  ' → logprob: -7.028049945831299
    9. '     ' → logprob: -7.778049945831299
    10. '        ' → logprob: -8.028050422668457

Token 41: ' acquired' (ID: 27937)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5776510834693909
    2. 'if' → logprob: -1.327651023864746
    3. ' ' → logprob: -1.827651023864746
    4. 'c' → logprob: -4.952651023864746
    5. '    ' → logprob: -5.702651023864746
    6. '   ' → logprob: -7.327651023864746
    7. '  ' → logprob: -7.827651023864746
    8. 'j' → logprob: -8.077651023864746
    9. ' c' → logprob: -8.202651023864746
    10. ' 
' → logprob: -8.827651023864746

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4849066734313965
    2. '=' → logprob: -1.3599066734313965
    3. '_' → logprob: -2.6099066734313965
    4. '_token' → logprob: -3.8599066734313965
    5. '_block' → logprob: -4.7349066734313965
    6. ' ' → logprob: -5.3599066734313965
    7. '_space' → logprob: -5.8599066734313965
    8. '_char' → logprob: -5.9849066734313965
    9. ',' → logprob: -6.3599066734313965
    10. 'if' → logprob: -6.4849066734313965

Token 43: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3182283639907837
    2. '''' → logprob: -1.9432283639907837
    3. 'False' → logprob: -1.9432283639907837
    4. '1' → logprob: -2.068228244781494
    5. ' False' → logprob: -2.318228244781494
    6. ' ' → logprob: -2.568228244781494
    7. ' ''' → logprob: -3.318228244781494
    8. ''' → logprob: -3.443228244781494
    9. '""' → logprob: -4.318228244781494
    10. 's' → logprob: -4.568228244781494

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06406812369823456
    2. ' if' → logprob: -4.31406831741333
    3. '        
' → logprob: -4.56406831741333
    4. 'while' → logprob: -4.68906831741333
    5. ' while' → logprob: -4.81406831741333
    6. '   ' → logprob: -4.81406831741333
    7. 'if' → logprob: -5.68906831741333
    8. ' ' → logprob: -5.93906831741333
    9. '    ' → logprob: -6.56406831741333
    10. '           ' → logprob: -7.56406831741333

Token 45: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3447821140289307
    2. ' while' → logprob: -1.3447821140289307
    3. ' if' → logprob: -1.4697821140289307
    4. 'while' (adapté à ' while') → logprob: -1.4697821140289307
    5. '       ' → logprob: -4.969781875610352
    6. '   ' → logprob: -5.219781875610352
    7. '    ' → logprob: -5.719781875610352
    8. ' ' → logprob: -7.219781875610352
    9. '        ' → logprob: -7.844781875610352
    10. 'c' → logprob: -7.844781875610352

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23548106849193573
    2. 'i' → logprob: -1.6104810237884521
    3. ' s' → logprob: -5.235481262207031
    4. 's' → logprob: -5.985481262207031
    5. ' True' → logprob: -6.985481262207031
    6. ' not' → logprob: -7.485481262207031
    7. ' ' → logprob: -7.860481262207031
    8. 'True' → logprob: -8.360481262207031
    9. 'not' → logprob: -11.235481262207031
    10. '   ' → logprob: -11.235481262207031

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4839133024215698
    2. '<' → logprob: -1.1089133024215698
    3. '<n' → logprob: -2.9839134216308594
    4. '<len' → logprob: -6.483913421630859
    5. 'n' → logprob: -6.858913421630859
    6. ' ' → logprob: -8.23391342163086
    7. '<|end|>' → logprob: -9.60891342163086
    8. 's' → logprob: -10.73391342163086
    9. '+' → logprob: -10.73391342163086
    10. '[' → logprob: -10.85891342163086

Token 48: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519320547580719
    2. ' n' → logprob: -1.5019320249557495
    3. ')n' → logprob: -14.001932144165039
    4. 'len' → logprob: -14.751932144165039
    5. '	n' → logprob: -15.001932144165039
    6. ' ' → logprob: -15.001932144165039
    7. '<|end|>' → logprob: -15.251932144165039
    8. '<n' → logprob: -15.876932144165039
    9. '```' → logprob: -16.12693214416504
    10. '<|end|>' → logprob: -16.37693214416504

Token 49: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026309354230761528
    2. 'and' → logprob: -3.6513092517852783
    3. ' ' → logprob: -12.2763090133667
    4. '   ' → logprob: -13.0263090133667
    5. '    ' → logprob: -14.5263090133667
    6. '       ' → logprob: -15.1513090133667
    7. '           ' → logprob: -15.1513090133667
    8. '  ' → logprob: -16.151309967041016
    9. '        ' → logprob: -16.401309967041016
    10. ' и' → logprob: -16.401309967041016

Token 50: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20033207535743713
    2. 's' → logprob: -1.8253320455551147
    3. ' not' → logprob: -4.200332164764404
    4. ' (' → logprob: -5.825332164764404
    5. '(s' → logprob: -6.700332164764404
    6. ' ' → logprob: -7.325332164764404
    7. 'not' → logprob: -7.950332164764404
    8. ' ' → logprob: -10.012831687927246
    9. '(not' → logprob: -10.387831687927246
    10. '   ' → logprob: -10.575331687927246

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.87501049041748
    3. '[
' → logprob: -14.25001049041748
    4. '[I' → logprob: -14.25001049041748
    5. '   ' → logprob: -14.62501049041748
    6. ' [' → logprob: -14.75001049041748
    7. 'i' → logprob: -15.87501049041748
    8. ' !=' → logprob: -16.000011444091797
    9. '```' → logprob: -16.000011444091797
    10. '[j' → logprob: -16.000011444091797

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13031913340091705
    2. ' not' → logprob: -3.130319118499756
    3. '!=' → logprob: -3.755319118499756
    4. ']!=' → logprob: -4.255319118499756
    5. '].' → logprob: -4.380319118499756
    6. ' !=' → logprob: -4.630319118499756
    7. '.is' → logprob: -5.755319118499756
    8. 'is' → logprob: -6.005319118499756
    9. ']!='' → logprob: -6.130319118499756
    10. ']==' → logprob: -6.130319118499756

Token 53: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4364064931869507
    2. '!=' → logprob: -1.6864064931869507
    3. ' !=' → logprob: -2.4364066123962402
    4. ' in' → logprob: -4.06140661239624
    5. '==' → logprob: -4.31140661239624
    6. '.' → logprob: -4.43640661239624
    7. 'is' → logprob: -4.68640661239624
    8. 'not' → logprob: -4.81140661239624
    9. '.is' → logprob: -5.06140661239624
    10. ' ==' → logprob: -5.06140661239624

Token 54: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06565381586551666
    2. '','' → logprob: -3.9406538009643555
    3. ''{' → logprob: -4.3156538009643555
    4. '':'' → logprob: -5.3156538009643555
    5. '';' → logprob: -5.6906538009643555
    6. '',' → logprob: -5.6906538009643555
    7. ''\' → logprob: -5.8156538009643555
    8. '"' → logprob: -6.3156538009643555
    9. ''.' → logprob: -6.5656538009643555
    10. '')' → logprob: -6.5656538009643555

Token 55: 'u' (ID: 84)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5976068377494812
    2. ''' → logprob: -1.847606897354126
    3. ';' → logprob: -3.347606897354126
    4. '\n' → logprob: -3.347606897354126
    5. ' ':' → logprob: -3.472606897354126
    6. ',' → logprob: -3.472606897354126
    7. '{' → logprob: -3.847606897354126
    8. ':' → logprob: -3.847606897354126
    9. '#' → logprob: -4.097606658935547
    10. '('' → logprob: -4.222606658935547

Token 56: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33913299441337585
    2. ''u' → logprob: -2.5891330242156982
    3. '':' → logprob: -3.2141330242156982
    4. ''s' → logprob: -3.2141330242156982
    5. ''p' → logprob: -3.9641330242156982
    6. ''n' → logprob: -4.339132785797119
    7. '')' → logprob: -4.464132785797119
    8. ''r' → logprob: -4.589132785797119
    9. '';' → logprob: -4.839132785797119
    10. ''\' → logprob: -4.964132785797119

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1696110963821411
    2. 'ac' → logprob: -3.1696109771728516
    3. ' acquired' → logprob: -3.1696109771728516
    4. '   ' → logprob: -3.7946109771728516
    5. '       ' → logprob: -4.044610977172852
    6. ' and' → logprob: -4.919610977172852
    7. ' ' → logprob: -5.044610977172852
    8. 'u' → logprob: -5.794610977172852
    9. 'i' → logprob: -6.044610977172852
    10. ':' → logprob: -6.544610977172852

Token 58: ' acquired' (ID: 27937)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.590482771396637
    2. ' acquired' → logprob: -0.840482771396637
    3. '           ' → logprob: -4.590482711791992
    4. ' ac' → logprob: -6.090482711791992
    5. '               ' → logprob: -7.590482711791992
    6. '   ' → logprob: -7.840482711791992
    7. '	ac' → logprob: -8.340482711791992
    8. ' acqu' → logprob: -8.590482711791992
    9. '            ' → logprob: -8.965482711791992
    10. '```' → logprob: -9.340482711791992

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006988753564655781
    2. '.' → logprob: -5.131988525390625
    3. '+=' → logprob: -7.256988525390625
    4. '+' → logprob: -8.881988525390625
    5. ' +=' → logprob: -8.881988525390625
    6. ' .' → logprob: -10.381988525390625
    7. '.add' → logprob: -10.881988525390625
    8. '.extend' → logprob: -12.131988525390625
    9. 'append' → logprob: -12.131988525390625
    10. '.ap' → logprob: -12.881988525390625

Token 60: '(int' (ID: 2742)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00324378558434546
    2. '(' → logprob: -5.878243923187256
    3. 's' → logprob: -7.753243923187256
    4. '('' → logprob: -11.753243446350098
    5. '(
' → logprob: -14.253243446350098
    6. '((' → logprob: -15.253243446350098
    7. '(i' → logprob: -15.378243446350098
    8. ' (' → logprob: -15.503243446350098
    9. '(ord' → logprob: -16.378244400024414
    10. '(ss' → logprob: -16.628244400024414

Token 61: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0026887289714068174
    2. '(' → logprob: -6.002688884735107
    3. 's' → logprob: -8.50268840789795
    4. ' (' → logprob: -12.37768840789795
    5. ')' → logprob: -13.12768840789795
    6. '('' → logprob: -13.75268840789795
    7. '(
' → logprob: -14.12768840789795
    8. ' ' → logprob: -14.87768840789795
    9. '(i' → logprob: -14.87768840789795
    10. '((' → logprob: -15.50268840789795

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023131117632146925
    2. '[' → logprob: -8.500231742858887
    3. ')' → logprob: -11.875231742858887
    4. 'i' → logprob: -12.000231742858887
    5. '```' → logprob: -12.250231742858887
    6. '[
' → logprob: -13.250231742858887
    7. ' [' → logprob: -13.500231742858887
    8. '   ' → logprob: -13.750231742858887
    9. ')i' → logprob: -14.000231742858887
    10. ' ' → logprob: -14.250231742858887

Token 63: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00900557916611433
    2. ']))
' → logprob: -5.009005546569824
    3. '']))' → logprob: -6.884005546569824
    4. ']' → logprob: -7.134005546569824
    5. '])' → logprob: -8.259005546569824
    6. ']))
' → logprob: -9.759005546569824
    7. '])))' → logprob: -9.884005546569824
    8. ')))' → logprob: -10.509005546569824
    9. '))' → logprob: -10.759005546569824
    10. ')])' → logprob: -11.884005546569824

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016049737110733986
    2. 'i' → logprob: -5.141049861907959
    3. '       ' → logprob: -5.266049861907959
    4. '               ' → logprob: -6.391049861907959
    5. '   ' → logprob: -7.016049861907959
    6. ' i' → logprob: -7.266049861907959
    7. ')' → logprob: -7.266049861907959
    8. ' ' → logprob: -9.1410493850708
    9. '
' → logprob: -9.2660493850708
    10. ',' → logprob: -9.3910493850708

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.07582636922597885
    2. ' i' → logprob: -2.700826406478882
    3. '           ' → logprob: -5.200826168060303
    4. ')' → logprob: -9.075826644897461
    5. '   ' → logprob: -9.700826644897461
    6. ' ' → logprob: -9.825826644897461
    7. '               ' → logprob: -10.825826644897461
    8. '       ' → logprob: -11.200826644897461
    9. ',' → logprob: -11.450826644897461
    10. ',i' → logprob: -11.575826644897461

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15657229721546173
    2. '+' → logprob: -2.4065723419189453
    3. ' +=' → logprob: -2.9065723419189453
    4. '++' → logprob: -9.906572341918945
    5. '<|end|>' → logprob: -10.281572341918945
    6. ')' → logprob: -11.156572341918945
    7. '=' → logprob: -11.281572341918945
    8. ' +' → logprob: -11.781572341918945
    9. '+='' → logprob: -11.781572341918945
    10. '<|end|>' → logprob: -12.281572341918945

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '+' → logprob: -16.130929946899414
    4. '   ' → logprob: -16.568429946899414
    5. '```' → logprob: -16.693429946899414
    6. '  ' → logprob: -17.068429946899414
    7. ' ' → logprob: -17.130929946899414
    8. '2' → logprob: -17.943429946899414
    9. '<|end|>' → logprob: -18.505929946899414
    10. '0' → logprob: -18.505929946899414

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.375036239624023
    4. '0' → logprob: -17.625036239624023
    5. '   ' → logprob: -17.812536239624023
    6. '2' → logprob: -18.437536239624023
    7. '  ' → logprob: -18.562536239624023
    8. '+' → logprob: -18.687536239624023
    9. '
' → logprob: -19.062536239624023
    10. '3' → logprob: -19.062536239624023

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4740417003631592
    2. '
' → logprob: -1.4740417003631592
    3. ' 
' → logprob: -3.099041700363159
    4. '        
' → logprob: -3.349041700363159
    5. '\n' → logprob: -3.474041700363159
    6. '<|end|>' → logprob: -3.849041700363159
    7. 'u' → logprob: -6.099041938781738
    8. '+' → logprob: -6.474041938781738
    9. '    
' → logprob: -6.849041938781738
    10. ' ' → logprob: -6.849041938781738

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011565152555704117
    2. '
' → logprob: -5.636565208435059
    3. '        
' → logprob: -6.261565208435059
    4. '<|end|>' → logprob: -6.511565208435059
    5. '   ' → logprob: -7.136565208435059
    6. ',' → logprob: -7.886565208435059
    7. ')' → logprob: -7.886565208435059
    8. 'u' → logprob: -8.011565208435059
    9. ' ' → logprob: -8.011565208435059
    10. '           ' → logprob: -8.136565208435059

Token 71: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7444852590560913
    2. '<|end|>' → logprob: -0.8694852590560913
    3. ' if' → logprob: -3.119485378265381
    4. ' ' → logprob: -3.744485378265381
    5. '        
' → logprob: -4.619485378265381
    6. '
' → logprob: -4.869485378265381
    7. '<|end|>' → logprob: -4.869485378265381
    8. ' 
' → logprob: -5.244485378265381
    9. 'if' → logprob: -5.994485378265381
    10. 'u' → logprob: -6.619485378265381

Token 72: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.290356308221817
    2. '+' → logprob: -1.5403562784194946
    3. ' +=' → logprob: -3.290356397628784
    4. '<|end|>' → logprob: -8.415356636047363
    5. '++' → logprob: -8.665356636047363
    6. '=' → logprob: -10.040356636047363
    7. '+++' → logprob: -11.915356636047363
    8. '+='' → logprob: -12.790356636047363
    9. ')' → logprob: -13.165356636047363
    10. '```' → logprob: -13.665356636047363

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '2' → logprob: -18.12537956237793
    4. '   ' → logprob: -18.43787956237793
    5. '3' → logprob: -18.81287956237793
    6. '  ' → logprob: -18.87537956237793
    7. '```' → logprob: -18.93787956237793
    8. '0' → logprob: -19.06287956237793
    9. '１' → logprob: -19.12537956237793
    10. ' ' → logprob: -19.25037956237793

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -16.250051498413086
    4. 'len' → logprob: -17.000051498413086
    5. '0' → logprob: -17.312551498413086
    6. '3' → logprob: -17.562551498413086
    7. '4' → logprob: -18.562551498413086
    8. '１' → logprob: -18.625051498413086
    9. '7' → logprob: -18.937551498413086
    10. '```' → logprob: -19.125051498413086

Token 75: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1861371397972107
    2. '<|end|>' → logprob: -1.8111371994018555
    3. ')' → logprob: -6.1861371994018555
    4. '   ' → logprob: -6.6861371994018555
    5. '[' → logprob: -6.6861371994018555
    6. ' ' → logprob: -8.186137199401855
    7. '```' → logprob: -8.186137199401855
    8. '#' → logprob: -8.186137199401855
    9. '<|end|>' → logprob: -8.436137199401855
    10. '
' → logprob: -8.561137199401855

Token 77: ' skip' (ID: 16677)
  Prédit: 'Skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Skip' → logprob: -0.8933796286582947
    2. ' Skip' → logprob: -1.0183796882629395
    3. '#' → logprob: -2.5183796882629395
    4. 'Skipping' → logprob: -3.2683796882629395
    5. 'skip' → logprob: -3.6433796882629395
    6. 'continue' → logprob: -4.0183796882629395
    7. ' skip' → logprob: -4.3933796882629395
    8. '<|end|>' → logprob: -4.5183796882629395
    9. 'pass' → logprob: -4.6433796882629395
    10. 'Continue' → logprob: -5.0183796882629395

Token 78: ' '' (ID: 461)
  Prédit: ''u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''u' → logprob: -0.8478015661239624
    2. '<|end|>' → logprob: -0.9728015661239624
    3. ''s' → logprob: -2.347801685333252
    4. 'u' → logprob: -3.347801685333252
    5. ' the' → logprob: -3.722801685333252
    6. ' ' → logprob: -4.597801685333252
    7. 'the' → logprob: -4.972801685333252
    8. ''user' → logprob: -5.222801685333252
    9. ' '' → logprob: -5.472801685333252
    10. '<|end|>' → logprob: -6.097801685333252

Token 79: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00019567293929867446
    2. ''u' → logprob: -8.875195503234863
    3. ' u' → logprob: -10.500195503234863
    4. ''' → logprob: -11.875195503234863
    5. '<|end|>' → logprob: -11.875195503234863
    6. ')' → logprob: -12.750195503234863
    7. ' ' → logprob: -12.875195503234863
    8. '')' → logprob: -13.250195503234863
    9. '[u' → logprob: -13.625195503234863
    10. '	u' → logprob: -13.875195503234863

Token 80: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009812753647565842
    2. '')' → logprob: -5.384812831878662
    3. '<|end|>' → logprob: -6.134812831878662
    4. ')' → logprob: -6.509812831878662
    5. ''
' → logprob: -6.634812831878662
    6. ')'' → logprob: -9.509812355041504
    7. '<|end|>' → logprob: -10.259812355041504
    8. '\n' → logprob: -10.509812355041504
    9. '```' → logprob: -11.259812355041504
    10. '"' → logprob: -11.509812355041504

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02144937962293625
    2. ' if' → logprob: -4.646449565887451
    3. 'blocks' → logprob: -5.146449565887451
    4. '<|end|>' → logprob: -6.021449565887451
    5. 'if' → logprob: -6.146449565887451
    6. ' blocks' → logprob: -7.271449565887451
    7. '   ' → logprob: -8.146449089050293
    8. '        
' → logprob: -9.646449089050293
    9. ',' → logprob: -10.146449089050293
    10. '<|end|>' → logprob: -10.646449089050293

Token 82: ' blocks' (ID: 18125)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2132917195558548
    2. 'if' → logprob: -2.213291645050049
    3. 'blocks' (adapté à ' blocks') → logprob: -2.713291645050049
    4. ' if' → logprob: -4.463291645050049
    5. '   ' → logprob: -5.838291645050049
    6. ' blocks' → logprob: -6.838291645050049
    7. '```' → logprob: -7.588291645050049
    8. 'block' → logprob: -9.338292121887207
    9. 'return' → logprob: -9.713292121887207
    10. '        
' → logprob: -10.213292121887207

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006733130197972059
    2. '.' → logprob: -5.006732940673828
    3. '.extend' → logprob: -11.006732940673828
    4. ' .' → logprob: -14.381732940673828
    5. '.app' → logprob: -15.381732940673828
    6. '.push' → logprob: -16.256732940673828
    7. ').' → logprob: -16.506732940673828
    8. 'append' → logprob: -16.631732940673828
    9. '.ap' → logprob: -16.756732940673828
    10. '.add' → logprob: -17.006732940673828

Token 84: '(ac' (ID: 95204)
  Prédit: '(ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -0.0012510620290413499
    2. '(tuple' → logprob: -7.001251220703125
    3. '((' → logprob: -8.376251220703125
    4. '(' → logprob: -10.001251220703125
    5. '(list' → logprob: -10.751251220703125
    6. 'ac' → logprob: -11.376251220703125
    7. '(len' → logprob: -11.751251220703125
    8. '(a' → logprob: -12.376251220703125
    9. '(int' → logprob: -12.501251220703125
    10. ' (' → logprob: -13.126251220703125

Token 85: 'quired' (ID: 5176)
  Prédit: 'quired'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quired' → logprob: -0.746841311454773
    2. 'q' → logprob: -1.746841311454773
    3. 'u' → logprob: -2.4968414306640625
    4. '(' → logprob: -2.6218414306640625
    5. 'ur' → logprob: -2.8718414306640625
    6. '```' → logprob: -3.1218414306640625
    7. 'um' → logprob: -3.3718414306640625
    8. '(ac' → logprob: -4.8718414306640625
    9. '[' → logprob: -5.1218414306640625
    10. 'quire' → logprob: -5.1218414306640625

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')
' → logprob: -12.000006675720215
    3. ']' → logprob: -15.500006675720215
    4. '[' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.25000762939453
    6. '))' → logprob: -16.62500762939453
    7. ' )' → logprob: -17.25000762939453
    8. ')

' → logprob: -17.25000762939453
    9. '),' → logprob: -17.25000762939453
    10. ')return' → logprob: -17.37500762939453

Token 87: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24744874238967896
    2. '<|end|>' → logprob: -1.9974486827850342
    3. 'return' (adapté à ' return') → logprob: -3.372448682785034
    4. '```' → logprob: -3.997448682785034
    5. ' ' → logprob: -4.622448921203613
    6. '
' → logprob: -5.622448921203613
    7. ' return' → logprob: -5.622448921203613
    8. '    
' → logprob: -5.997448921203613
    9. ' 
' → logprob: -6.372448921203613
    10. '\n' → logprob: -6.372448921203613

Token 89: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.06196891888976097
    2. ' blocks' → logprob: -2.8119688034057617
    3. 'block' → logprob: -14.186968803405762
    4. '.blocks' → logprob: -15.061968803405762
    5. '_blocks' → logprob: -15.811968803405762
    6. 'b' → logprob: -16.811969757080078
    7. 'Blocks' → logprob: -17.311969757080078
    8. '```' → logprob: -18.311969757080078
    9. '(block' → logprob: -18.686969757080078
    10. 'blo' → logprob: -18.936969757080078

Token 90: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2972877323627472
    2. '
' → logprob: -2.297287702560425
    3. '<|end|>' → logprob: -2.672287702560425
    4. '[' → logprob: -3.547287702560425
    5. '```' → logprob: -4.047287940979004
    6. 'def' → logprob: -4.047287940979004
    7. ')' → logprob: -5.172287940979004
    8. '\' → logprob: -5.422287940979004
    9. '_' → logprob: -5.797287940979004
    10. ':' → logprob: -6.172287940979004

Token 92: ' build' (ID: 3024)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.8272653222084045
    2. ' factorial' → logprob: -1.9522652626037598
    3. ' solve' → logprob: -2.0772652626037598
    4. ' dfs' → logprob: -2.3272652626037598
    5. ' main' → logprob: -2.5772652626037598
    6. ' process' → logprob: -3.3272652626037598
    7. ' find' → logprob: -4.82726526260376
    8. ' calculate' → logprob: -4.82726526260376
    9. ' block' → logprob: -5.07726526260376
    10. ' analyze' → logprob: -5.20226526260376

Token 93: '_wait' (ID: 44250)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.08132053166627884
    2. '(' → logprob: -3.4563205242156982
    3. '_' → logprob: -3.9563205242156982
    4. '_blocks' → logprob: -4.206320762634277
    5. '_graph' → logprob: -5.206320762634277
    6. '_block' → logprob: -6.206320762634277
    7. '_map' → logprob: -7.081320762634277
    8. '_stack' → logprob: -7.456320762634277
    9. '_chain' → logprob: -7.581320762634277
    10. 'tree' → logprob: -7.706320762634277

Token 94: '_for' (ID: 11903)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.1502965688705444
    2. '_times' → logprob: -1.1502965688705444
    3. '_stack' → logprob: -2.150296688079834
    4. '_list' → logprob: -2.275296688079834
    5. '_time' → logprob: -3.900296688079834
    6. '_for' → logprob: -4.150296688079834
    7. 'list' → logprob: -4.150296688079834
    8. 's' → logprob: -4.150296688079834
    9. '(' → logprob: -4.525296688079834
    10. '_tree' → logprob: -4.900296688079834

Token 95: '_graph' (ID: 33441)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18337330222129822
    2. '_graph' → logprob: -2.183373212814331
    3. '(' → logprob: -3.683373212814331
    4. '(graph' → logprob: -4.93337345123291
    5. '_nodes' → logprob: -5.80837345123291
    6. 'dict' → logprob: -5.80837345123291
    7. '_tree' → logprob: -5.93337345123291
    8. ' graph' → logprob: -6.05837345123291
    9. '_chain' → logprob: -6.80837345123291
    10. '_blocks' → logprob: -7.18337345123291

Token 96: '(block' (ID: 36179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7482933402061462
    2. '(s' → logprob: -0.7482933402061462
    3. '(block' → logprob: -3.123293399810791
    4. ' (' → logprob: -5.373293399810791
    5. '(n' → logprob: -7.123293399810791
    6. '(nodes' → logprob: -7.248293399810791
    7. '(node' → logprob: -7.248293399810791
    8. '(parent' → logprob: -7.498293399810791
    9. '(depth' → logprob: -8.373292922973633
    10. '(graph' → logprob: -8.873292922973633

Token 97: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003066222125198692
    2. '):' → logprob: -8.500307083129883
    3. '_blocks' → logprob: -10.000307083129883
    4. ')' → logprob: -10.375307083129883
    5. ')s' → logprob: -11.750307083129883
    6. '_ids' → logprob: -12.250307083129883
    7. '):
' → logprob: -12.625307083129883
    8. 'blocks' → logprob: -12.625307083129883
    9. '_list' → logprob: -13.750307083129883
    10. 'ed' → logprob: -13.750307083129883

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1604650914669037
    2. ',' → logprob: -1.910465121269226
    3. ')' → logprob: -9.910465240478516
    4. '):
' → logprob: -10.035465240478516
    5. ' ):' → logprob: -10.160465240478516
    6. '_blocks' → logprob: -10.660465240478516
    7. ':' → logprob: -10.785465240478516
    8. ',b' → logprob: -10.785465240478516
    9. '   ' → logprob: -10.785465240478516
    10. ' ,' → logprob: -12.410465240478516

Token 99: '   ' (ID: 271)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.47090840339660645
    2. '   ' → logprob: -1.2209084033966064
    3. 'graph' → logprob: -2.5959084033966064
    4. '	graph' → logprob: -5.720908164978027
    5. ' n' → logprob: -6.470908164978027
    6. 'n' → logprob: -7.220908164978027
    7. ' g' → logprob: -9.845908164978027
    8. ' G' → logprob: -9.970908164978027
    9. 'g' → logprob: -9.970908164978027
    10. ' wait' → logprob: -10.220908164978027

Token 100: ' m' (ID: 284)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6162729859352112
    2. ' graph' → logprob: -0.8662729859352112
    3. ' n' → logprob: -4.616272926330566
    4. 'n' → logprob: -4.866272926330566
    5. '   ' → logprob: -4.866272926330566
    6. 'wait' → logprob: -5.116272926330566
    7. ' wait' → logprob: -5.741272926330566
    8. 'g' → logprob: -6.741272926330566
    9. ' waiting' → logprob: -7.741272926330566
    10. ' g' → logprob: -7.741272926330566

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019845712929964066
    2. '=' → logprob: -4.144845485687256
    3. 'ap' → logprob: -6.394845485687256
    4. 'a' → logprob: -7.269845485687256
    5. 'apping' → logprob: -7.394845485687256
    6. 'aps' → logprob: -8.144845962524414
    7. 'appings' → logprob: -8.894845962524414
    8. '_' → logprob: -9.019845962524414
    9. ' ' → logprob: -9.894845962524414
    10. '   ' → logprob: -10.019845962524414

Token 102: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6933103203773499
    2. ' len' → logprob: -0.6933103203773499
    3. '[len' → logprob: -9.068310737609863
    4. '{}' → logprob: -10.943310737609863
    5. '(len' → logprob: -11.443310737609863
    6. '[]' → logprob: -12.318310737609863
    7. ' []' → logprob: -12.443310737609863
    8. '0' → logprob: -12.818310737609863
    9. '=len' → logprob: -13.193310737609863
    10. ' ' → logprob: -13.318310737609863

Token 103: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'blocks' → logprob: -14.87501335144043
    4. '(branch' → logprob: -17.12501335144043
    5. ' blocks' → logprob: -17.87501335144043
    6. '(b' → logprob: -18.12501335144043
    7. '(nodes' → logprob: -18.12501335144043
    8. '(parts' → logprob: -18.25001335144043
    9. '(bounds' → logprob: -18.62501335144043
    10. '.blocks' → logprob: -18.75001335144043

Token 104: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032551924232393503
    2. 'locks' → logprob: -6.003255367279053
    3. 'ocks' → logprob: -7.253255367279053
    4. 'blocks' → logprob: -9.628254890441895
    5. ')' → logprob: -12.628254890441895
    6. 'cks' → logprob: -14.128254890441895
    7. ')s' → logprob: -14.753254890441895
    8. '_blocks' → logprob: -15.628254890441895
    9. '```' → logprob: -15.878254890441895
    10. 'acks' → logprob: -16.12825584411621

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010330478107789531
    2. ')
' → logprob: -9.500102996826172
    3. '   ' → logprob: -11.000102996826172
    4. ' )' → logprob: -11.625102996826172
    5. '))' → logprob: -14.250102996826172
    6. '[' → logprob: -14.250102996826172
    7. ')m' → logprob: -15.250102996826172
    8. '`)' → logprob: -15.750102996826172
    9. ' ' → logprob: -16.250102996826172
    10. '),' → logprob: -16.250102996826172

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9567229151725769
    2. '
' → logprob: -1.2067229747772217
    3. ' graph' → logprob: -1.9567229747772217
    4. 'graph' → logprob: -2.0817229747772217
    5. '    
' → logprob: -4.081722736358643
    6. 'wait' → logprob: -4.456722736358643
    7. ' 
' → logprob: -5.331722736358643
    8. ' wait' → logprob: -5.456722736358643
    9. '	graph' → logprob: -5.706722736358643
    10. 'w' → logprob: -6.331722736358643

Token 107: ' g' (ID: 329)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.593144416809082
    2. 'graph' → logprob: -1.218144416809082
    3. ' graph' → logprob: -2.468144416809082
    4. ' wait' → logprob: -3.093144416809082
    5. 'adj' → logprob: -4.968144416809082
    6. 'g' (adapté à ' g') → logprob: -5.093144416809082
    7. ' adj' → logprob: -6.093144416809082
    8. '   ' → logprob: -6.968144416809082
    9. 'waiting' → logprob: -7.218144416809082
    10. 'w' → logprob: -7.343144416809082

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14296658337116241
    2. '=' → logprob: -2.0179665088653564
    3. 'raph' → logprob: -8.267966270446777
    4. '[' → logprob: -11.892966270446777
    5. '=[]' → logprob: -11.892966270446777
    6. ',' → logprob: -12.767966270446777
    7. ' ' → logprob: -12.892966270446777
    8. 'enerate' → logprob: -13.142966270446777
    9. ')' → logprob: -13.267966270446777
    10. '[]' → logprob: -13.642966270446777

Token 109: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018515000119805336
    2. ' [[]' → logprob: -4.018515110015869
    3. ' [' → logprob: -8.268514633178711
    4. '{' → logprob: -9.768514633178711
    5. '[[' → logprob: -10.018514633178711
    6. '[]' → logprob: -12.893514633178711
    7. '{}' → logprob: -13.268514633178711
    8. 'default' → logprob: -14.018514633178711
    9. ' {' → logprob: -14.518514633178711
    10. '[{' → logprob: -15.018514633178711

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47633111476898193
    2. 'for' → logprob: -0.9763311147689819
    3. ')' → logprob: -6.2263312339782715
    4. 'm' → logprob: -8.476330757141113
    5. ']' → logprob: -10.601330757141113
    6. ',' → logprob: -10.976330757141113
    7. ',m' → logprob: -11.351330757141113
    8. ')m' → logprob: -12.726330757141113
    9. ' ' → logprob: -12.976330757141113
    10. '	for' → logprob: -13.351330757141113

Token 111: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1356850415468216
    2. 'range' → logprob: -2.1356849670410156
    3. '_' → logprob: -5.010684967041016
    4. '_range' → logprob: -6.635684967041016
    5. ' in' → logprob: -7.635684967041016
    6. '(range' → logprob: -8.760684967041016
    7. 'in' → logprob: -9.635684967041016
    8. ' _' → logprob: -10.510684967041016
    9. '_in' → logprob: -12.510684967041016
    10. '	range' → logprob: -13.885684967041016

Token 112: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004998090211302042
    2. ' range' → logprob: -5.504998207092285
    3. ' in' → logprob: -7.629998207092285
    4. 'in' → logprob: -7.754998207092285
    5. 'm' → logprob: -12.879998207092285
    6. '(range' → logprob: -13.129998207092285
    7. ' ' → logprob: -15.254998207092285
    8. '	range' → logprob: -16.37999725341797
    9. 'ange' → logprob: -16.62999725341797
    10. '   ' → logprob: -17.12999725341797

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011705794604495168
    2. ' range' → logprob: -6.751170635223389
    3. '(range' → logprob: -14.87617015838623
    4. '	range' → logprob: -19.001171112060547
    5. '   ' → logprob: -19.376171112060547
    6. ' ' → logprob: -20.751171112060547
    7. 'ranges' → logprob: -20.876171112060547
    8. 'rang' → logprob: -21.126171112060547
    9. '_range' → logprob: -21.126171112060547
    10. 'ran' → logprob: -21.376171112060547

Token 114: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. ')m' → logprob: -16.75
    4. ' (' → logprob: -17.125
    5. ')(' → logprob: -18.875
    6. 'm' → logprob: -18.875
    7. '](' → logprob: -20.0
    8. '=m' → logprob: -20.375
    9. '/m' → logprob: -20.375
    10. ')' → logprob: -20.5

Token 115: '10' (ID: 702)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.088346359931165e-07
    2. ' m' → logprob: -14.750000953674316
    3. '(m' → logprob: -15.000000953674316
    4. '   ' → logprob: -17.25
    5. ')m' → logprob: -17.5
    6. ')' → logprob: -21.625
    7. '	m' → logprob: -22.0
    8. '
' → logprob: -22.0
    9. '       ' → logprob: -22.0
    10. ' (' → logprob: -23.0

Token 116: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00047356789582408965
    2. '**' → logprob: -8.625473976135254
    3. ' )' → logprob: -9.625473976135254
    4. '*m' → logprob: -10.000473976135254
    5. '+' → logprob: -10.250473976135254
    6. '0' → logprob: -10.375473976135254
    7. ')' → logprob: -10.375473976135254
    8. ')]
' → logprob: -10.750473976135254
    9. '*' → logprob: -10.750473976135254
    10. 'm' → logprob: -10.875473976135254

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5379930138587952
    2. '<|end|>' → logprob: -2.0379929542541504
    3. 'for' → logprob: -2.2879929542541504
    4. 'm' → logprob: -2.2879929542541504
    5. ' for' → logprob: -2.9129929542541504
    6. ' ' → logprob: -4.28799295425415
    7. ')' → logprob: -5.41299295425415
    8. '
' → logprob: -5.78799295425415
    9. '<|end|>' → logprob: -6.78799295425415
    10. '  ' → logprob: -6.78799295425415

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17297381162643433
    2. ' for' → logprob: -1.922973871231079
    3. '   ' → logprob: -4.7979736328125
    4. 'm' → logprob: -5.7979736328125
    5. 'block' → logprob: -7.9229736328125
    6. 'i' → logprob: -8.2979736328125
    7. 'return' → logprob: -8.5479736328125
    8. ' ' → logprob: -9.5479736328125
    9. 'blocks' → logprob: -9.6729736328125
    10. ')' → logprob: -9.6729736328125

Token 119: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2532469928264618
    2. ' for' → logprob: -1.5032470226287842
    3. '#' → logprob: -6.753246784210205
    4. ' #' → logprob: -10.003247261047363
    5. 'range' → logprob: -10.253247261047363
    6. 'return' → logprob: -11.253247261047363
    7. '   ' → logprob: -11.628247261047363
    8. 'For' → logprob: -12.003247261047363
    9. '<|end|>' → logprob: -12.128247261047363
    10. 'm' → logprob: -12.378247261047363

Token 120: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9468989372253418
    2. ' block' → logprob: -1.1968989372253418
    3. ' b' → logprob: -1.6968989372253418
    4. 'i' → logprob: -3.071898937225342
    5. 'block' → logprob: -3.071898937225342
    6. 'b' → logprob: -3.821898937225342
    7. ' j' → logprob: -5.821898937225342
    8. ' idx' → logprob: -6.321898937225342
    9. ' _' → logprob: -6.821898937225342
    10. ' m' → logprob: -6.946898937225342

Token 121: ' lock' (ID: 8109)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.2125098556280136
    2. ' block' → logprob: -1.7125098705291748
    3. 'm' → logprob: -5.087509632110596
    4. 'thread' → logprob: -6.587509632110596
    5. 'i' → logprob: -7.337509632110596
    6. ' thread' → logprob: -7.587509632110596
    7. ' m' → logprob: -7.962509632110596
    8. ' i' → logprob: -8.337510108947754
    9. ' task' → logprob: -8.462510108947754
    10. 'task' → logprob: -8.462510108947754

Token 122: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05496589466929436
    2. ',' → logprob: -3.9299659729003906
    3. 'in' → logprob: -4.554965972900391
    4. ' for' → logprob: -5.054965972900391
    5. ' and' → logprob: -5.554965972900391
    6. 'block' → logprob: -5.679965972900391
    7. ' block' → logprob: -6.054965972900391
    8. '<|end|>' → logprob: -6.179965972900391
    9. 'for' → logprob: -7.304965972900391
    10. 'index' → logprob: -7.554965972900391

Token 123: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14396701753139496
    2. 'for' → logprob: -2.0189669132232666
    3. '<|end|>' → logprob: -7.268967151641846
    4. '#' → logprob: -9.393966674804688
    5. '<|end|>' → logprob: -9.518966674804688
    6. '...' → logprob: -9.768966674804688
    7. ' you' → logprob: -10.268966674804688
    8. ' and' → logprob: -10.268966674804688
    9. ' we' → logprob: -10.393966674804688
    10. 'range' → logprob: -10.393966674804688

Token 124: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4628961384296417
    2. 'the' → logprob: -1.4628961086273193
    3. ' which' → logprob: -3.0878961086273193
    4. ' all' → logprob: -3.8378961086273193
    5. '<|end|>' → logprob: -4.087896347045898
    6. 'all' → logprob: -4.462896347045898
    7. ' its' → logprob: -4.587896347045898
    8. 'which' → logprob: -4.837896347045898
    9. 'locks' → logprob: -4.962896347045898
    10. ' blocks' → logprob: -5.337896347045898

Token 125: ' set' (ID: 920)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.3566745519638062
    2. 'first' → logprob: -1.7316745519638062
    3. ' next' → logprob: -1.9816745519638062
    4. ' last' → logprob: -2.1066746711730957
    5. 'next' → logprob: -2.6066746711730957
    6. 'last' → logprob: -2.6066746711730957
    7. 'locks' → logprob: -2.8566746711730957
    8. 'blocks' → logprob: -3.8566746711730957
    9. 'indices' → logprob: -4.231674671173096
    10. ' blocks' → logprob: -4.606674671173096

Token 126: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.09589086472988129
    2. '<|end|>' → logprob: -2.845890760421753
    3. 'of' → logprob: -4.470890998840332
    4. '(block' → logprob: -5.345890998840332
    5. 'locks' → logprob: -5.470890998840332
    6. '<|end|>' → logprob: -5.595890998840332
    7. '(s' → logprob: -5.720890998840332
    8. 's' → logprob: -6.220890998840332
    9. 'blocks' → logprob: -6.470890998840332
    10. ' blocks' → logprob: -7.220890998840332

Token 127: ' blocks' (ID: 18125)
  Prédit: ' threads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threads' → logprob: -0.9579635858535767
    2. 'locks' → logprob: -1.5829635858535767
    3. 'threads' → logprob: -1.5829635858535767
    4. 'blocks' → logprob: -2.707963466644287
    5. ' blocks' → logprob: -3.207963466644287
    6. ' processes' → logprob: -3.582963466644287
    7. 'process' → logprob: -3.957963466644287
    8. 'tasks' → logprob: -4.457963466644287
    9. ' locks' → logprob: -5.082963466644287
    10. 'holders' → logprob: -5.082963466644287

Token 128: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.28693681955337524
    2. 'that' → logprob: -1.9119367599487305
    3. 'for' → logprob: -4.0369367599487305
    4. ' for' → logprob: -4.0369367599487305
    5. '   ' → logprob: -4.5369367599487305
    6. ' containing' → logprob: -5.0369367599487305
    7. 'with' → logprob: -5.1619367599487305
    8. '<|end|>' → logprob: -5.1619367599487305
    9. 's' → logprob: -5.2869367599487305
    10. ' and' → logprob: -5.2869367599487305

Token 129: ' acquire' (ID: 25145)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.6186401844024658
    2. ' hold' → logprob: -1.6186401844024658
    3. 'contain' → logprob: -2.868640184402466
    4. 'hold' → logprob: -2.993640184402466
    5. 'ac' → logprob: -3.243640184402466
    6. ' acquire' → logprob: -3.493640184402466
    7. ' use' → logprob: -4.118639945983887
    8. ' have' → logprob: -4.993639945983887
    9. ' it' → logprob: -5.118639945983887
    10. ' acquired' → logprob: -5.243639945983887

Token 130: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.29864245653152466
    2. 'it' → logprob: -1.4236423969268799
    3. ' that' → logprob: -4.798642635345459
    4. 'that' → logprob: -5.548642635345459
    5. 'the' → logprob: -6.798642635345459
    6. 'them' → logprob: -7.048642635345459
    7. 'locks' → logprob: -7.173642635345459
    8. ' the' → logprob: -7.298642635345459
    9. ' them' → logprob: -7.423642635345459
    10. 'this' → logprob: -8.1736421585083

Token 131: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6678701043128967
    2. ' for' → logprob: -0.7928701043128967
    3. '   ' → logprob: -3.792870044708252
    4. '<|end|>' → logprob: -5.417870044708252
    5. '```' → logprob: -6.417870044708252
    6. 'm' → logprob: -6.792870044708252
    7. ')' → logprob: -6.917870044708252
    8. '
' → logprob: -7.042870044708252
    9. 'locks' → logprob: -7.292870044708252
    10. ' and' → logprob: -7.792870044708252

Token 132: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5258400440216064
    2. '   ' → logprob: -1.1508400440216064
    3. '<|end|>' → logprob: -2.6508400440216064
    4. 'for' → logprob: -4.025839805603027
    5. '```' → logprob: -7.150839805603027
    6. '<|end|>' → logprob: -7.150839805603027
    7. ' and' → logprob: -7.525839805603027
    8. ',' → logprob: -7.525839805603027
    9. '
' → logprob: -8.025839805603027
    10. ')' → logprob: -8.025839805603027

Token 133: ' lock' (ID: 8109)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.39678800106048584
    2. 'lock' (adapté à ' lock') → logprob: -1.1467880010604858
    3. 'for' → logprob: -5.271788120269775
    4. 'ac' → logprob: -6.396788120269775
    5. ' lock' → logprob: -7.271788120269775
    6. 'block' → logprob: -7.521788120269775
    7. ' locks' → logprob: -7.896788120269775
    8. 'from' → logprob: -8.146787643432617
    9. 'blocks' → logprob: -8.521787643432617
    10. 'locked' → logprob: -8.521787643432617

Token 134: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.20491792261600494
    2. '_blocks' → logprob: -2.5799179077148438
    3. '_' → logprob: -2.8299179077148438
    4. 's' → logprob: -4.329917907714844
    5. '_users' → logprob: -4.454917907714844
    6. '_h' → logprob: -4.704917907714844
    7. '_ac' → logprob: -5.204917907714844
    8. '_sets' → logprob: -5.329917907714844
    9. '_l' → logprob: -6.204917907714844
    10. '_map' → logprob: -6.454917907714844

Token 135: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.02079457975924015
    2. 'blocks' → logprob: -3.895794630050659
    3. 'locks' → logprob: -8.895794868469238
    4. ' blocks' → logprob: -9.270794868469238
    5. '_block' → logprob: -11.270794868469238
    6. 'block' → logprob: -12.270794868469238
    7. '_nodes' → logprob: -14.020794868469238
    8. '```' → logprob: -14.645794868469238
    9. 'Blocks' → logprob: -14.770794868469238
    10. '-block' → logprob: -15.145794868469238

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313265860080719
    2. '=' → logprob: -1.3132658004760742
    3. 's' → logprob: -13.563265800476074
    4. ')' → logprob: -13.813265800476074
    5. '=[]' → logprob: -14.313265800476074
    6. '[' → logprob: -14.938265800476074
    7. ']' → logprob: -15.313265800476074
    8. ' ' → logprob: -15.438265800476074
    9. ':' → logprob: -16.31326675415039
    10. ',' → logprob: -16.56326675415039

Token 137: ' [[]' (ID: 182908)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03777715936303139
    2. ' {}' → logprob: -3.7877771854400635
    3. '[' → logprob: -4.412776947021484
    4. '{' → logprob: -6.662776947021484
    5. ' [[]' → logprob: -7.662776947021484
    6. ' [' → logprob: -8.162776947021484
    7. ' defaultdict' → logprob: -9.162776947021484
    8. 'default' → logprob: -9.412776947021484
    9. 'collections' → logprob: -10.662776947021484
    10. ' {' → logprob: -11.037776947021484

Token 138: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2623050808906555
    2. ' for' → logprob: -2.1373050212860107
    3. '<|end|>' → logprob: -3.1373050212860107
    4. ']' → logprob: -3.2623050212860107
    5. '(m' → logprob: -4.51230525970459
    6. 'm' → logprob: -5.26230525970459
    7. ')' → logprob: -5.26230525970459
    8. '(' → logprob: -5.38730525970459
    9. ',' → logprob: -6.01230525970459
    10. '<|end|>' → logprob: -6.88730525970459

Token 139: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26172158122062683
    2. 'range' → logprob: -1.7617216110229492
    3. ' range' → logprob: -3.011721611022949
    4. ' (' → logprob: -5.636721611022949
    5. '(range' → logprob: -5.761721611022949
    6. '_' → logprob: -6.011721611022949
    7. '10' → logprob: -9.38672161102295
    8. '_range' → logprob: -10.01172161102295
    9. ' _' → logprob: -11.38672161102295
    10. ' in' → logprob: -12.13672161102295

Token 140: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020216351374983788
    2. ' range' → logprob: -4.145216464996338
    3. '(range' → logprob: -5.770216464996338
    4. '(' → logprob: -7.145216464996338
    5. 'in' → logprob: -8.64521598815918
    6. ' in' → logprob: -9.52021598815918
    7. '_' → logprob: -11.77021598815918
    8. '_range' → logprob: -12.64521598815918
    9. 'for' → logprob: -13.27021598815918
    10. ' (' → logprob: -13.89521598815918

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011078237555921078
    2. ' range' → logprob: -4.511078357696533
    3. 'blocks' → logprob: -10.761077880859375
    4. '(range' → logprob: -11.886077880859375
    5. 'block' → logprob: -13.886077880859375
    6. 'm' → logprob: -14.386077880859375
    7. ' blocks' → logprob: -15.261077880859375
    8. '
' → logprob: -16.136077880859375
    9. ' xrange' → logprob: -16.261077880859375
    10. '[' → logprob: -16.761077880859375

Token 142: '(' (ID: 7)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008177289739251137
    2. '(m' → logprob: -5.633177280426025
    3. '10' → logprob: -5.633177280426025
    4. '(' → logprob: -7.383177280426025
    5. ' m' → logprob: -8.008177757263184
    6. 'n' → logprob: -12.008177757263184
    7. ' ' → logprob: -12.133177757263184
    8. 'len' → logprob: -12.258177757263184
    9. ' (' → logprob: -12.383177757263184
    10. '9' → logprob: -12.508177757263184

Token 143: '10' (ID: 702)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001070919563062489
    2. '10' → logprob: -6.876070976257324
    3. ' m' → logprob: -10.376070976257324
    4. 'n' → logprob: -12.751070976257324
    5. 'len' → logprob: -13.376070976257324
    6. '100' → logprob: -14.251070976257324
    7. ' ' → logprob: -14.501070976257324
    8. 'max' → logprob: -15.126070976257324
    9. '(' → logprob: -15.126070976257324
    10. '9' → logprob: -15.251070976257324

Token 144: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25832778215408325
    2. ']' → logprob: -1.5083277225494385
    3. ')' → logprob: -5.383327960968018
    4. ']
' → logprob: -6.883327960968018
    5. ')]
' → logprob: -7.383327960968018
    6. ']

' → logprob: -9.75832748413086
    7. ')]

' → logprob: -10.13332748413086
    8. '])' → logprob: -10.38332748413086
    9. ')
' → logprob: -12.38332748413086
    10. '])]' → logprob: -13.88332748413086

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.494759738445282
    2. '<|end|>' → logprob: -1.8697597980499268
    3. '
' → logprob: -2.1197597980499268
    4. ' for' → logprob: -2.3697597980499268
    5. 'for' → logprob: -4.369759559631348
    6. '    
' → logprob: -5.744759559631348
    7. '<|end|>' → logprob: -6.244759559631348
    8. ' ' → logprob: -6.619759559631348
    9. ')' → logprob: -6.744759559631348
    10. '	for' → logprob: -7.494759559631348

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.043187472969293594
    2. ' for' → logprob: -3.168187379837036
    3. '<|end|>' → logprob: -9.168187141418457
    4. '   ' → logprob: -10.418187141418457
    5. ')' → logprob: -11.043187141418457
    6. '```' → logprob: -11.168187141418457
    7. '#' → logprob: -12.418187141418457
    8. 'def' → logprob: -12.543187141418457
    9. '
' → logprob: -12.543187141418457
    10. '<|end|>' → logprob: -12.668187141418457

Token 147: ' i' (ID: 575)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5291397571563721
    2. ' block' → logprob: -1.904139757156372
    3. 'b' → logprob: -2.279139757156372
    4. ' i' → logprob: -2.779139757156372
    5. ' idx' → logprob: -3.279139757156372
    6. 'block' → logprob: -3.654139757156372
    7. 'i' → logprob: -3.779139757156372
    8. 'idx' → logprob: -5.279139518737793
    9. ' bi' → logprob: -6.154139518737793
    10. 'bid' → logprob: -7.404139518737793

Token 148: ',b' (ID: 17568)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28564539551734924
    2. 'in' → logprob: -1.4106453657150269
    3. ',' → logprob: -5.410645484924316
    4. ' ,' → logprob: -11.785645484924316
    5. ' ' → logprob: -12.535645484924316
    6. 'range' → logprob: -13.285645484924316
    7. ',in' → logprob: -13.910645484924316
    8. '	in' → logprob: -15.035645484924316
    9. '_in' → logprob: -15.285645484924316
    10. 'n' → logprob: -15.410645484924316

Token 149: ' in' (ID: 306)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -1.0403577089309692
    2. ' in' → logprob: -1.4153577089309692
    3. 'in' → logprob: -1.7903577089309692
    4. ',' → logprob: -1.9153577089309692
    5. 'lock' → logprob: -2.4153575897216797
    6. 'blocks' → logprob: -9.54035758972168
    7. 'i' → logprob: -9.91535758972168
    8. '_blocks' → logprob: -10.04035758972168
    9. ',in' → logprob: -10.91535758972168
    10. ',b' → logprob: -11.04035758972168

Token 150: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.6457614898681641
    2. ' enumerate' → logprob: -1.020761489868164
    3. 'range' → logprob: -2.395761489868164
    4. ' range' → logprob: -3.770761489868164
    5. 'in' → logprob: -7.520761489868164
    6. '(range' → logprob: -7.645761489868164
    7. ' ' → logprob: -10.145761489868164
    8. 'en' → logprob: -10.270761489868164
    9. ' in' → logprob: -10.395761489868164
    10. 'lock' → logprob: -10.520761489868164

Token 151: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -2.696889623621246e-06
    2. 'blocks' → logprob: -13.75000286102295
    3. ' blocks' → logprob: -13.87500286102295
    4. ' (' → logprob: -15.25000286102295
    5. 's' → logprob: -16.125001907348633
    6. '(' → logprob: -16.250001907348633
    7. '_blocks' → logprob: -16.625001907348633
    8. '.blocks' → logprob: -16.875001907348633
    9. '(b' → logprob: -17.250001907348633
    10. '(branch' → logprob: -17.875001907348633

Token 152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2631222903728485
    2. 'locks' → logprob: -1.513122320175171
    3. 'ocks' → logprob: -4.513122081756592
    4. 'lock' → logprob: -9.88812255859375
    5. ')' → logprob: -10.01312255859375
    6. 'blocks' → logprob: -10.26312255859375
    7. ')s' → logprob: -11.38812255859375
    8. ']' → logprob: -12.51312255859375
    9. '```' → logprob: -12.63812255859375
    10. ')]' → logprob: -13.13812255859375

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010559145594015718
    2. '):
' → logprob: -6.876055717468262
    3. ':' → logprob: -11.251055717468262
    4. ' ):' → logprob: -12.001055717468262
    5. '):
' → logprob: -12.876055717468262
    6. ']:' → logprob: -14.126055717468262
    7. ')' → logprob: -15.376055717468262
    8. '}:' → logprob: -15.876055717468262
    9. '():' → logprob: -16.001056671142578
    10. '):

' → logprob: -17.001056671142578

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13454052805900574
    2. ' for' → logprob: -2.884540557861328
    3. '   ' → logprob: -3.134540557861328
    4. 'for' → logprob: -4.259540557861328
    5. ':' → logprob: -4.509540557861328
    6. ':
' → logprob: -7.009540557861328
    7. '):' → logprob: -8.759540557861328
    8. '):
' → logprob: -9.384540557861328
    9. ' ' → logprob: -9.509540557861328
    10. ',' → logprob: -10.009540557861328

Token 155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20415200293064117
    2. 'for' (adapté à ' for') → logprob: -2.3291521072387695
    3. '       ' → logprob: -2.4541521072387695
    4. '   ' → logprob: -6.8291521072387695
    5. ' ' → logprob: -9.20415210723877
    6. '	for' → logprob: -9.45415210723877
    7. '           ' → logprob: -9.82915210723877
    8. '	   ' → logprob: -12.07915210723877
    9. '<|end|>' → logprob: -12.57915210723877
    10. '    ' → logprob: -12.57915210723877

Token 156: ' l' (ID: 305)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.7387222647666931
    2. 'x' → logprob: -1.613722324371338
    3. 'l' → logprob: -2.113722324371338
    4. ' lock' → logprob: -2.113722324371338
    5. ' l' → logprob: -3.363722324371338
    6. ' x' → logprob: -3.488722324371338
    7. 'b' → logprob: -5.363722324371338
    8. 'v' → logprob: -6.238722324371338
    9. 'num' → logprob: -6.488722324371338
    10. ' v' → logprob: -6.863722324371338

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00764851039275527
    2. 'ock' → logprob: -4.882648468017578
    3. 'in' → logprob: -10.757648468017578
    4. ' ' → logprob: -11.757648468017578
    5. ' lock' → logprob: -12.007648468017578
    6. 'lock' → logprob: -12.507648468017578
    7. 'ocket' → logprob: -13.757648468017578
    8. '_lock' → logprob: -14.882648468017578
    9. 'l' → logprob: -15.007648468017578
    10. ' l' → logprob: -15.007648468017578

Token 158: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20145076513290405
    2. ' b' → logprob: -1.7014508247375488
    3. 'set' → logprob: -11.07645034790039
    4. ' set' → logprob: -11.32645034790039
    5. ' ' → logprob: -12.32645034790039
    6. '[b' → logprob: -13.70145034790039
    7. '	b' → logprob: -13.82645034790039
    8. '   ' → logprob: -14.07645034790039
    9. '(b' → logprob: -14.70145034790039
    10. ' range' → logprob: -14.82645034790039

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017521932721138
    2. '):' → logprob: -4.642521858215332
    3. ':
' → logprob: -4.892521858215332
    4. '):
' → logprob: -8.642521858215332
    5. ']:' → logprob: -10.142521858215332
    6. ' :' → logprob: -12.392521858215332
    7. '():' → logprob: -12.892521858215332
    8. '           ' → logprob: -12.892521858215332
    9. '       ' → logprob: -13.017521858215332
    10. '}:' → logprob: -13.517521858215332

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09571767598390579
    2. ' lock' → logprob: -2.720717668533325
    3. 'lock' → logprob: -3.845717668533325
    4. '       ' → logprob: -5.595717906951904
    5. '   ' → logprob: -8.720717430114746
    6. '.lock' → logprob: -9.595717430114746
    7. '(lock' → logprob: -10.720717430114746
    8. '	lock' → logprob: -10.845717430114746
    9. ' if' → logprob: -11.220717430114746
    10. '
' → logprob: -11.220717430114746

Token 161: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' (adapté à ' lock') → logprob: -0.34884634613990784
    2. ' lock' → logprob: -1.2238463163375854
    3. '           ' → logprob: -7.973846435546875
    4. 'locks' → logprob: -11.223846435546875
    5. '   ' → logprob: -11.348846435546875
    6. '	lock' → logprob: -11.473846435546875
    7. '.lock' → logprob: -12.223846435546875
    8. '               ' → logprob: -12.723846435546875
    9. ' locks' → logprob: -12.848846435546875
    10. ' ' → logprob: -13.098846435546875

Token 162: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.004696090007201e-05
    2. 'to' → logprob: -9.625069618225098
    3. 'To' → logprob: -13.750069618225098
    4. ' to' → logprob: -14.250069618225098
    5. 's' → logprob: -14.750069618225098
    6. '```' → logprob: -15.375069618225098
    7. '_' → logprob: -15.500069618225098
    8. '=' → logprob: -15.625069618225098
    9. '<|end|>' → logprob: -16.000070571899414
    10. '_for' → logprob: -16.000070571899414

Token 163: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.47223079204559326
    2. 'l' → logprob: -1.5972307920455933
    3. 'blocks' → logprob: -2.472230911254883
    4. 'locks' → logprob: -2.722230911254883
    5. '[l' → logprob: -3.972230911254883
    6. 'b' → logprob: -5.972230911254883
    7. ' l' → logprob: -7.472230911254883
    8. ' blocks' → logprob: -7.847230911254883
    9. '[i' → logprob: -8.097230911254883
    10. '[' → logprob: -8.472230911254883

Token 164: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0003034074034076184
    2. '[' → logprob: -8.125303268432617
    3. '```' → logprob: -13.375303268432617
    4. '[
' → logprob: -13.750303268432617
    5. '[i' → logprob: -14.375303268432617
    6. ' [' → logprob: -14.375303268432617
    7. ')[' → logprob: -14.500303268432617
    8. '[int' → logprob: -14.500303268432617
    9. 'l' → logprob: -14.625303268432617
    10. '
' → logprob: -15.250303268432617

Token 165: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012737659562844783
    2. ' ].' → logprob: -9.375127792358398
    3. ']' → logprob: -10.250127792358398
    4. '.append' → logprob: -12.750127792358398
    5. '()].' → logprob: -13.250127792358398
    6. ').' → logprob: -13.875127792358398
    7. ''].' → logprob: -14.750127792358398
    8. '   ' → logprob: -15.375127792358398
    9. '][' → logprob: -15.500127792358398
    10. 'append' → logprob: -15.750127792358398

Token 166: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.253090865968261e-06
    2. ' append' → logprob: -12.125009536743164
    3. '.append' → logprob: -12.875009536743164
    4. 'appen' → logprob: -13.875009536743164
    5. 'Append' → logprob: -15.625009536743164
    6. '_append' → logprob: -16.250009536743164
    7. 'p' → logprob: -17.000009536743164
    8. '	append' → logprob: -17.000009536743164
    9. 'pp' → logprob: -17.125009536743164
    10. 'add' → logprob: -18.125009536743164

Token 167: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.85366350505501e-05
    2. 'i' → logprob: -9.25009822845459
    3. '(' → logprob: -13.25009822845459
    4. ' i' → logprob: -14.50009822845459
    5. ' (' → logprob: -16.125099182128906
    6. ')i' → logprob: -16.875099182128906
    7. '(
' → logprob: -17.250099182128906
    8. '[i' → logprob: -18.875099182128906
    9. ')' → logprob: -19.250099182128906
    10. ',i' → logprob: -19.500099182128906

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.745069499127567e-05
    2. ')
' → logprob: -9.37508773803711
    3. ' )' → logprob: -13.12508773803711
    4. ')return' → logprob: -15.50008773803711
    5. ')

' → logprob: -16.12508773803711
    6. '   ' → logprob: -16.37508773803711
    7. '       ' → logprob: -16.62508773803711
    8. '<|end|>' → logprob: -18.12508773803711
    9. '),' → logprob: -18.25008773803711
    10. ')i' → logprob: -18.37508773803711

Token 169: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.833044171333313
    2. '   ' → logprob: -0.958044171333313
    3. '<|end|>' → logprob: -1.833044171333313
    4. '    
' → logprob: -4.833044052124023
    5. '\n' → logprob: -5.208044052124023
    6. '  
' → logprob: -5.958044052124023
    7. '<|end|>' → logprob: -6.333044052124023
    8. ' ' → logprob: -7.208044052124023
    9. ')' → logprob: -7.333044052124023
    10. '\' → logprob: -7.583044052124023

Token 170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46870744228363037
    2. '
' → logprob: -1.5937074422836304
    3. 'for' → logprob: -2.34370756149292
    4. ' for' → logprob: -2.84370756149292
    5. '    
' → logprob: -4.96870756149292
    6. '<|end|>' → logprob: -5.21870756149292
    7. '  
' → logprob: -6.84370756149292
    8. '	for' → logprob: -7.46870756149292
    9. '#' (adapté à ' #') → logprob: -7.59370756149292
    10. 'return' → logprob: -7.71870756149292

Token 171: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009970217011868954
    2. ' for' → logprob: -4.634970188140869
    3. '   ' → logprob: -9.009970664978027
    4. '#' → logprob: -9.634970664978027
    5. 'return' → logprob: -10.759970664978027
    6. 'def' → logprob: -13.259970664978027
    7. '```' → logprob: -13.509970664978027
    8. ')' → logprob: -14.884970664978027
    9. 'For' → logprob: -14.884970664978027
    10. '
' → logprob: -15.134970664978027

Token 172: ' dependency' (ID: 50228)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5305859446525574
    2. 'for' → logprob: -0.9055859446525574
    3. ' edges' → logprob: -5.780585765838623
    4. 'g' → logprob: -6.780585765838623
    5. '   ' → logprob: -6.780585765838623
    6. 'edges' → logprob: -7.530585765838623
    7. ' g' → logprob: -8.030586242675781
    8. ' the' → logprob: -8.405586242675781
    9. ' graph' → logprob: -8.530586242675781
    10. 'graph' → logprob: -8.780586242675781

Token 173: ' (' (ID: 350)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6581127643585205
    2. 'for' → logprob: -1.9081127643585205
    3. '   ' → logprob: -2.1581127643585205
    4. ' for' → logprob: -2.4081127643585205
    5. ' graph' → logprob: -2.7831127643585205
    6. 's' → logprob: -3.2831127643585205
    7. 'g' → logprob: -4.408112525939941
    8. 'edges' → logprob: -5.658112525939941
    9. ' edges' → logprob: -5.783112525939941
    10. '       ' → logprob: -6.533112525939941

Token 174: 'wait' (ID: 29126)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9514250159263611
    2. 'g' → logprob: -1.3264250755310059
    3. ')' → logprob: -1.4514250755310059
    4. 'for' → logprob: -3.451425075531006
    5. ' graph' → logprob: -3.451425075531006
    6. 'edges' → logprob: -4.201425075531006
    7. ' for' → logprob: -4.201425075531006
    8. ' edges' → logprob: -4.701425075531006
    9. 's' → logprob: -4.951425075531006
    10. '   ' → logprob: -7.201425075531006

Token 175: '-for' (ID: 26116)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.019515041261911392
    2. 'for' → logprob: -4.644515037536621
    3. '-for' → logprob: -4.769515037536621
    4. ')' → logprob: -7.144515037536621
    5. '   ' → logprob: -9.394515037536621
    6. '_' → logprob: -9.519515037536621
    7. 'For' → logprob: -9.894515037536621
    8. 's' → logprob: -9.894515037536621
    9. ')-' → logprob: -10.019515037536621
    10. ')_' → logprob: -10.269515037536621

Token 176: ')' (ID: 8)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7838510870933533
    2. 'graph' → logprob: -0.9088510870933533
    3. ')' → logprob: -2.033851146697998
    4. ' edges' → logprob: -5.283851146697998
    5. 'g' → logprob: -6.658851146697998
    6. 'edges' → logprob: -6.908851146697998
    7. '_graph' → logprob: -7.158851146697998
    8. ' graphs' → logprob: -8.53385066986084
    9. 'graphs' → logprob: -8.53385066986084
    10. ' relationships' → logprob: -9.15885066986084

Token 177: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9958043098449707
    2. 'for' → logprob: -1.2458043098449707
    3. 'graph' → logprob: -1.4958043098449707
    4. '   ' → logprob: -3.1208043098449707
    5. ' graph' → logprob: -3.1208043098449707
    6. 'edges' → logprob: -4.370804309844971
    7. ' edges' → logprob: -4.870804309844971
    8. '<|end|>' → logprob: -5.995804309844971
    9. 'g' → logprob: -6.120804309844971
    10. 's' → logprob: -6.245804309844971

Token 178: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4761643409729004
    2. ' for' → logprob: -1.1011643409729004
    3. '   ' → logprob: -3.1011643409729004
    4. '<|end|>' → logprob: -6.8511643409729
    5. ')' → logprob: -8.601163864135742
    6. '	for' → logprob: -9.601163864135742
    7. '<|end|>' → logprob: -11.601163864135742
    8. ' ' → logprob: -11.851163864135742
    9. '
' → logprob: -11.976163864135742
    10. 'def' → logprob: -12.351163864135742

Token 179: ' locks' (ID: 50098)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2673256993293762
    2. 'locks' → logprob: -2.1423256397247314
    3. ' blocks' → logprob: -2.6423256397247314
    4. 'block' → logprob: -4.2673258781433105
    5. 'b' → logprob: -4.5173258781433105
    6. 'threads' → logprob: -5.2673258781433105
    7. 'the' → logprob: -5.7673258781433105
    8. 'range' → logprob: -6.5173258781433105
    9. 'for' → logprob: -6.6423258781433105
    10. ' locks' → logprob: -6.8923258781433105

Token 180: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6228458881378174
    2. '   ' → logprob: -1.2478458881378174
    3. ' for' → logprob: -1.8728458881378174
    4. '
' → logprob: -4.247845649719238
    5. '<|end|>' → logprob: -5.247845649719238
    6. ' ' → logprob: -7.122845649719238
    7. '    
' → logprob: -7.122845649719238
    8. '	for' → logprob: -7.247845649719238
    9. ')' → logprob: -8.247845649719238
    10. '  
' → logprob: -8.997845649719238

Token 181: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8302757740020752
    2. ' for' → logprob: -1.2052757740020752
    3. '   ' → logprob: -1.3302757740020752
    4. '<|end|>' → logprob: -11.080275535583496
    5. ')' → logprob: -11.580275535583496
    6. ' ' → logprob: -11.830275535583496
    7. '	for' → logprob: -11.955275535583496
    8. 'def' → logprob: -12.205275535583496
    9. '  ' → logprob: -12.580275535583496
    10. '
' → logprob: -12.830275535583496

Token 182: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12274067848920822
    2. ' for' → logprob: -2.2477407455444336
    3. '   ' → logprob: -4.622740745544434
    4. ' ' → logprob: -10.997740745544434
    5. '	for' → logprob: -11.747740745544434
    6. '```' → logprob: -12.872740745544434
    7. ')' → logprob: -12.997740745544434
    8. '    
' → logprob: -12.997740745544434
    9. '  ' → logprob: -13.247740745544434
    10. '       ' → logprob: -13.497740745544434

Token 183: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18616050481796265
    2. ' for' → logprob: -1.8111605644226074
    3. '   ' → logprob: -5.061160564422607
    4. 'return' → logprob: -9.93616008758545
    5. ' return' → logprob: -13.18616008758545
    6. '#' → logprob: -13.31116008758545
    7. ' ' → logprob: -13.81116008758545
    8. '	for' → logprob: -13.81116008758545
    9. 'def' → logprob: -14.18616008758545
    10. '  ' → logprob: -14.43616008758545

Token 184: ' pairs' (ID: 24702)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.316893994808197
    2. 'for' → logprob: -1.3168940544128418
    3. ' range' → logprob: -6.566894054412842
    4. 'range' → logprob: -6.941894054412842
    5. 'm' → logprob: -7.191894054412842
    6. '   ' → logprob: -8.691893577575684
    7. ' m' → logprob: -8.941893577575684
    8. ' in' → logprob: -9.941893577575684
    9. ' i' → logprob: -10.191893577575684
    10. '       ' → logprob: -10.816893577575684

Token 185: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1090728044509888
    2. ' for' → logprob: -1.3590728044509888
    3. '(' → logprob: -2.109072685241699
    4. ' (' → logprob: -2.484072685241699
    5. ' of' → logprob: -2.609072685241699
    6. ' in' → logprob: -2.859072685241699
    7. '(i' → logprob: -3.484072685241699
    8. '(l' → logprob: -3.859072685241699
    9. '(range' → logprob: -4.859072685241699
    10. '(block' → logprob: -5.234072685241699

Token 186: ' blocks' (ID: 18125)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.8526833653450012
    2. 'blocks' → logprob: -0.9776833653450012
    3. ' blocks' → logprob: -2.3526833057403564
    4. 'range' → logprob: -2.7276833057403564
    5. ' locks' → logprob: -4.4776835441589355
    6. ' range' → logprob: -4.7276835441589355
    7. 'i' → logprob: -5.7276835441589355
    8. 'lock' → logprob: -5.8526835441589355
    9. 'block' → logprob: -5.9776835441589355
    10. ' i' → logprob: -6.4776835441589355

Token 187: ' that' (ID: 484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06070089340209961
    2. 'for' → logprob: -3.0607008934020996
    3. '   ' → logprob: -5.0607008934021
    4. '<|end|>' → logprob: -5.4357008934021
    5. ',' → logprob: -8.185701370239258
    6. ' and' → logprob: -8.560701370239258
    7. ' in' → logprob: -8.810701370239258
    8. ' between' → logprob: -8.935701370239258
    9. '<|end|>' → logprob: -9.185701370239258
    10. '       ' → logprob: -9.435701370239258

Token 188: ' share' (ID: 5143)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.13335682451725006
    2. ' acquire' → logprob: -2.383356809616089
    3. ' share' → logprob: -4.758357048034668
    4. 'for' → logprob: -5.133357048034668
    5. 'hold' → logprob: -5.383357048034668
    6. 'share' → logprob: -5.508357048034668
    7. ' for' → logprob: -6.258357048034668
    8. ' hold' → logprob: -6.758357048034668
    9. '
' → logprob: -6.883357048034668
    10. '```' → logprob: -7.258357048034668

Token 189: ' locks' (ID: 50098)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0220087766647339
    2. ' at' → logprob: -1.1470087766647339
    3. ' a' → logprob: -1.7720087766647339
    4. 'locks' → logprob: -2.5220088958740234
    5. ' locks' → logprob: -2.8970088958740234
    6. 'at' → logprob: -4.397008895874023
    7. ' common' → logprob: -6.647008895874023
    8. ' any' → logprob: -6.772008895874023
    9. ' the' → logprob: -7.647008895874023
    10. 'lock' → logprob: -7.897008895874023

Token 190: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605278491973877
    2. ' for' → logprob: -1.8855278491973877
    3. 'for' → logprob: -3.1355278491973877
    4. '
' → logprob: -3.8855278491973877
    5. '<|end|>' → logprob: -4.635527610778809
    6. '    
' → logprob: -6.760527610778809
    7. '       ' → logprob: -7.260527610778809
    8. ' ' → logprob: -7.760527610778809
    9. '  
' → logprob: -7.760527610778809
    10. '<|end|>' → logprob: -8.135527610778809

Token 191: ' create' (ID: 2501)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8915254473686218
    2. ' for' → logprob: -1.6415255069732666
    3. 'for' → logprob: -2.2665255069732666
    4. ' continue' → logprob: -2.8915255069732666
    5. '       ' → logprob: -3.3915255069732666
    6. 'find' → logprob: -3.3915255069732666
    7. ' add' → logprob: -3.8915255069732666
    8. '           ' → logprob: -4.0165252685546875
    9. '   ' → logprob: -4.1415252685546875
    10. 'continue' → logprob: -4.2665252685546875

Token 192: ' wait' (ID: 5238)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.2408721148967743
    2. 'edges' → logprob: -2.1158721446990967
    3. ' for' → logprob: -3.7408721446990967
    4. ' dependencies' → logprob: -3.9908721446990967
    5. 'for' → logprob: -4.240871906280518
    6. 'dependencies' → logprob: -4.740871906280518
    7. 'locks' → logprob: -5.115871906280518
    8. ' locks' → logprob: -5.740871906280518
    9. ' wait' → logprob: -5.990871906280518
    10. ' the' → logprob: -6.115871906280518

Token 193: ' edges' (ID: 22569)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.020878300070762634
    2. 'for' → logprob: -4.395878314971924
    3. '-for' → logprob: -5.270878314971924
    4. '   ' → logprob: -6.645878314971924
    5. '_' → logprob: -7.395878314971924
    6. '_f' → logprob: -7.645878314971924
    7. '_edges' → logprob: -8.645877838134766
    8. 's' → logprob: -8.895877838134766
    9. 'edges' → logprob: -9.895877838134766
    10. '-' → logprob: -9.895877838134766

Token 194: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14902086555957794
    2. ' for' → logprob: -2.8990209102630615
    3. 'for' → logprob: -3.0240209102630615
    4. '       ' → logprob: -4.399020671844482
    5. '
' → logprob: -4.524020671844482
    6. '    
' → logprob: -5.149020671844482
    7. '<|end|>' → logprob: -5.774020671844482
    8. '  
' → logprob: -7.524020671844482
    9. ' ' → logprob: -7.774020671844482
    10. '        
' → logprob: -7.899020671844482

Token 195: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.04192819818854332
    2. 'blocks' → logprob: -4.791928291320801
    3. 'the' → logprob: -5.166928291320801
    4. 'them' → logprob: -5.416928291320801
    5. 'different' → logprob: -5.416928291320801
    6. ' locks' → logprob: -5.666928291320801
    7. 'their' → logprob: -5.916928291320801
    8. ' them' → logprob: -6.041928291320801
    9. 'lock' → logprob: -6.541928291320801
    10. ' the' → logprob: -6.666928291320801

Token 196: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18056635558605194
    2. ' for' → logprob: -2.9305663108825684
    3. 'for' → logprob: -3.5555663108825684
    4. '
' → logprob: -3.5555663108825684
    5. '<|end|>' → logprob: -3.5555663108825684
    6. ' ' → logprob: -4.805566310882568
    7. '    
' → logprob: -4.930566310882568
    8. '       ' → logprob: -5.555566310882568
    9. '  
' → logprob: -6.430566310882568
    10. '<|end|>' → logprob: -6.930566310882568

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0401659831404686
    2. '<|end|>' → logprob: -3.415165901184082
    3. ' for' → logprob: -5.415165901184082
    4. '       ' → logprob: -6.665165901184082
    5. 'for' → logprob: -8.290165901184082
    6. '<|end|>' → logprob: -9.165165901184082
    7. ')' → logprob: -9.290165901184082
    8. '    
' → logprob: -9.790165901184082
    9. ' ' → logprob: -9.915165901184082
    10. '
' → logprob: -10.040165901184082

Token 198: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.917843222618103
    2. '   ' → logprob: -1.042843222618103
    3. ' for' → logprob: -1.417843222618103
    4. '<|end|>' → logprob: -5.792843341827393
    5. ' ' → logprob: -6.667843341827393
    6. '
' → logprob: -8.167842864990234
    7. '  ' → logprob: -8.292842864990234
    8. '#' → logprob: -8.292842864990234
    9. ')' → logprob: -8.542842864990234
    10. '    ' → logprob: -8.792842864990234

Token 200: ' lock' (ID: 8109)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5750223398208618
    2. 'i' → logprob: -1.8250223398208618
    3. ' len' → logprob: -2.5750222206115723
    4. ' i' → logprob: -2.7000222206115723
    5. 'lock' → logprob: -4.200022220611572
    6. 'b' → logprob: -4.575022220611572
    7. 'blocks' → logprob: -4.575022220611572
    8. ' blocks' → logprob: -4.700022220611572
    9. 'l' → logprob: -4.700022220611572
    10. 'a' → logprob: -4.950022220611572

Token 201: ' A' (ID: 355)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3778652548789978
    2. 'a' → logprob: -2.0028653144836426
    3. '_a' → logprob: -3.2528653144836426
    4. ' l' → logprob: -3.3778653144836426
    5. ' a' → logprob: -3.5028653144836426
    6. 'to' → logprob: -4.502865314483643
    7. 'l' → logprob: -4.627865314483643
    8. ' in' → logprob: -4.752865314483643
    9. 's' → logprob: -5.002865314483643
    10. 'x' → logprob: -5.002865314483643

Token 202: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6220245957374573
    2. ' in' → logprob: -0.9970245957374573
    3. ' appears' → logprob: -3.6220245361328125
    4. ' has' → logprob: -4.4970245361328125
    5. ' acquired' → logprob: -4.7470245361328125
    6. ' blocks' → logprob: -5.2470245361328125
    7. ' and' → logprob: -5.3720245361328125
    8. ' ' → logprob: -5.3720245361328125
    9. ' depends' → logprob: -5.7470245361328125
    10. ')' → logprob: -5.8720245361328125

Token 203: ' held' (ID: 7504)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.4192568361759186
    2. ' acquired' → logprob: -1.6692568063735962
    3. 'in' → logprob: -3.2942569255828857
    4. ' in' → logprob: -3.2942569255828857
    5. 'held' → logprob: -3.4192569255828857
    6. ' held' → logprob: -3.9192569255828857
    7. ' first' → logprob: -5.419256687164307
    8. 'first' → logprob: -5.669256687164307
    9. 'a' → logprob: -6.044256687164307
    10. '```' → logprob: -6.044256687164307

Token 204: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.2684057354927063
    2. 'by' → logprob: -1.5184056758880615
    3. 'while' → logprob: -5.768405914306641
    4. 'and' → logprob: -6.018405914306641
    5. ' and' → logprob: -6.143405914306641
    6. ' while' → logprob: -6.393405914306641
    7. ',' → logprob: -6.393405914306641
    8. '   ' → logprob: -6.518405914306641
    9. '  ' → logprob: -7.143405914306641
    10. ' ' → logprob: -7.143405914306641

Token 205: ' a' (ID: 261)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.5690178871154785
    2. ' block' → logprob: -1.0690178871154785
    3. 'a' → logprob: -3.8190178871154785
    4. 'lock' → logprob: -3.9440178871154785
    5. 'one' → logprob: -4.4440178871154785
    6. ' one' → logprob: -4.8190178871154785
    7. ' a' → logprob: -4.9440178871154785
    8. 'some' → logprob: -5.0690178871154785
    9. 'blocks' → logprob: -5.5690178871154785
    10. ' lock' → logprob: -5.9440178871154785

Token 206: ' thread' (ID: 8591)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.23350396752357483
    2. 'block' → logprob: -1.6085039377212524
    3. 'b' → logprob: -5.483503818511963
    4. 'lock' → logprob: -6.483503818511963
    5. ' lock' → logprob: -7.608503818511963
    6. ' different' → logprob: -7.858503818511963
    7. ' blocks' → logprob: -8.358504295349121
    8. ' user' → logprob: -8.733504295349121
    9. 'different' → logprob: -9.108504295349121
    10. 'blocks' → logprob: -9.108504295349121

Token 207: ' in' (ID: 306)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.244544267654419
    2. ' and' → logprob: -1.369544267654419
    3. ' that' → logprob: -1.369544267654419
    4. ',' → logprob: -2.244544267654419
    5. 'and' → logprob: -3.869544267654419
    6. 'while' → logprob: -4.24454402923584
    7. ')' → logprob: -4.61954402923584
    8. '   ' → logprob: -4.86954402923584
    9. ' ,' → logprob: -5.11954402923584
    10. ' ' → logprob: -5.11954402923584

Token 208: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.1876524686813354
    2. 'blocks' → logprob: -1.4376524686813354
    3. ' one' → logprob: -2.562652587890625
    4. 'one' → logprob: -2.562652587890625
    5. 'a' → logprob: -2.687652587890625
    6. ' block' → logprob: -3.062652587890625
    7. 'the' → logprob: -3.312652587890625
    8. ' blocks' → logprob: -3.312652587890625
    9. 'b' → logprob: -3.312652587890625
    10. 'some' → logprob: -3.812652587890625

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4953486919403076
    2. 's' → logprob: -2.6203486919403076
    3. ' i' → logprob: -2.6203486919403076
    4. ',' → logprob: -2.8703486919403076
    5. '0' → logprob: -2.9953486919403076
    6. 'b' → logprob: -3.2453486919403076
    7. '[i' → logprob: -4.120348930358887
    8. ' and' → logprob: -4.120348930358887
    9. '   ' → logprob: -4.620348930358887
    10. ' that' → logprob: -4.995348930358887

Token 210: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5341265797615051
    2. ',' → logprob: -1.0341265201568604
    3. 'and' → logprob: -3.7841265201568604
    4. ' while' → logprob: -4.2841267585754395
    5. ' ,' → logprob: -5.1591267585754395
    6. '   ' → logprob: -5.5341267585754395
    7. '       ' → logprob: -5.5341267585754395
    8. ')' → logprob: -6.6591267585754395
    9. 'while' → logprob: -6.6591267585754395
    10. ' for' → logprob: -6.9091267585754395

Token 211: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5333681106567383
    2. ' for' → logprob: -1.2833681106567383
    3. 'and' → logprob: -3.1583681106567383
    4. 'for' → logprob: -3.1583681106567383
    5. ' then' → logprob: -3.6583681106567383
    6. ' if' → logprob: -5.033368110656738
    7. '   ' → logprob: -5.533368110656738
    8. ' while' → logprob: -5.658368110656738
    9. ' the' → logprob: -6.158368110656738
    10. '       ' → logprob: -6.908368110656738

Token 212: ' in' (ID: 306)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.3184265196323395
    2. ' lock' → logprob: -1.818426489830017
    3. 'block' → logprob: -3.8184266090393066
    4. ' block' → logprob: -4.193426609039307
    5. 'A' → logprob: -4.443426609039307
    6. 'B' → logprob: -4.568426609039307
    7. ' that' → logprob: -5.318426609039307
    8. ' for' → logprob: -5.443426609039307
    9. 'for' → logprob: -5.568426609039307
    10. '   ' → logprob: -5.693426609039307

Token 213: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.583886981010437
    2. 'block' → logprob: -0.833886981010437
    3. 'b' → logprob: -5.958887100219727
    4. ' i' → logprob: -6.833887100219727
    5. '   ' → logprob: -7.833887100219727
    6. ' the' → logprob: -7.833887100219727
    7. 'the' → logprob: -7.833887100219727
    8. 'i' → logprob: -7.833887100219727
    9. 'lock' → logprob: -8.208887100219727
    10. ' a' → logprob: -8.208887100219727

Token 214: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2811663746833801
    2. ' j' → logprob: -1.9061663150787354
    3. 'i' → logprob: -2.6561663150787354
    4. ' i' → logprob: -3.7811663150787354
    5. '   ' → logprob: -5.9061665534973145
    6. 's' → logprob: -8.656166076660156
    7. '       ' → logprob: -9.406166076660156
    8. ' ' → logprob: -9.781166076660156
    9. '    ' → logprob: -10.156166076660156
    10. ')' → logprob: -10.281166076660156

Token 215: ' another' (ID: 3613)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2594708800315857
    2. ',' → logprob: -1.8844709396362305
    3. ' +' → logprob: -3.7594709396362305
    4. ' and' → logprob: -4.2594709396362305
    5. 'j' → logprob: -4.8844709396362305
    6. '   ' → logprob: -5.0094709396362305
    7. 'and' → logprob: -5.1344709396362305
    8. ''s' → logprob: -5.8844709396362305
    9. ' ,' → logprob: -6.1344709396362305
    10. ' j' → logprob: -6.2594709396362305

Token 216: ' thread' (ID: 8591)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.7209303975105286
    2. ' lock' → logprob: -2.095930337905884
    3. 'for' → logprob: -3.095930337905884
    4. ' for' → logprob: -3.220930337905884
    5. 'l' → logprob: -3.595930337905884
    6. 'locks' → logprob: -3.720930337905884
    7. ' l' → logprob: -3.845930337905884
    8. ' block' → logprob: -3.970930337905884
    9. ' thread' → logprob: -3.970930337905884
    10. '   ' → logprob: -4.095930576324463

Token 217: ' tries' (ID: 30519)
  Prédit: ' acqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acqu' → logprob: -1.588442325592041
    2. 's' → logprob: -1.838442325592041
    3. ' holds' → logprob: -2.213442325592041
    4. ',' → logprob: -2.213442325592041
    5. ' has' → logprob: -2.213442325592041
    6. 'has' → logprob: -3.213442325592041
    7. ' s' → logprob: -3.463442325592041
    8. 'ac' → logprob: -3.463442325592041
    9. ''s' → logprob: -3.463442325592041
    10. ' that' → logprob: -3.838442325592041

Token 218: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3903362452983856
    2. 'to' → logprob: -1.140336275100708
    3. '   ' → logprob: -7.015336036682129
    4. '       ' → logprob: -7.140336036682129
    5. '    ' → logprob: -7.765336036682129
    6. '           ' → logprob: -8.015336036682129
    7. ' l' → logprob: -8.015336036682129
    8. '        ' → logprob: -8.765336036682129
    9. ' ' → logprob: -9.015336036682129
    10. 'l' → logprob: -9.765336036682129

Token 219: ' acquire' (ID: 25145)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.016649937257170677
    2. ' acquire' → logprob: -4.8916497230529785
    3. 'hold' → logprob: -5.6416497230529785
    4. 'wait' → logprob: -6.3916497230529785
    5. 'append' → logprob: -6.6416497230529785
    6. 'lock' → logprob: -7.0166497230529785
    7. 'block' → logprob: -8.266650199890137
    8. 'ob' → logprob: -8.641650199890137
    9. '#ac' → logprob: -8.641650199890137
    10. '
' → logprob: -9.016650199890137

Token 220: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.0055160522460938
    2. ' l' → logprob: -1.3805160522460938
    3. 'l' → logprob: -1.8805160522460938
    4. ' lock' → logprob: -2.1305160522460938
    5. 'A' → logprob: -2.7555160522460938
    6. ' A' → logprob: -4.255516052246094
    7. ' the' → logprob: -4.380516052246094
    8. ' a' → logprob: -5.005516052246094
    9. 'the' → logprob: -5.380516052246094
    10. 'locks' → logprob: -5.630516052246094

Token 221: ' B' (ID: 418)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.841586709022522
    2. 'A' → logprob: -1.341586709022522
    3. ' B' → logprob: -2.5915865898132324
    4. ' l' → logprob: -2.5915865898132324
    5. 's' → logprob: -2.9665865898132324
    6. 'B' → logprob: -3.5915865898132324
    7. ',' → logprob: -3.5915865898132324
    8. ' j' → logprob: -4.841586589813232
    9. ' s' → logprob: -5.091586589813232
    10. ' ' → logprob: -5.216586589813232

Token 222: ' which' (ID: 1118)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44556522369384766
    2. '   ' → logprob: -1.6955652236938477
    3. '       ' → logprob: -2.8205652236938477
    4. ')' → logprob: -3.0705652236938477
    5. '[' → logprob: -3.4455652236938477
    6. '),' → logprob: -4.945565223693848
    7. '[i' → logprob: -5.070565223693848
    8. '           ' → logprob: -5.320565223693848
    9. ' ,' → logprob: -5.570565223693848
    10. ' for' → logprob: -6.070565223693848

Token 223: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3478682041168213
    2. 'is' → logprob: -1.8478682041168213
    3. ' was' → logprob: -3.2228682041168213
    4. ' has' → logprob: -3.7228682041168213
    5. 'has' → logprob: -4.472867965698242
    6. ' i' → logprob: -4.472867965698242
    7. 'was' → logprob: -4.972867965698242
    8. 'already' → logprob: -4.972867965698242
    9. ' ' → logprob: -5.472867965698242
    10. 'currently' → logprob: -5.847867965698242

Token 224: ' held' (ID: 7504)
  Prédit: ' held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' held' → logprob: -1.0729305744171143
    2. 'held' → logprob: -1.5729305744171143
    3. 'already' → logprob: -1.6979305744171143
    4. ' already' → logprob: -2.5729305744171143
    5. ' not' → logprob: -3.6979305744171143
    6. ' acquired' → logprob: -3.8229305744171143
    7. 'currently' → logprob: -3.9479305744171143
    8. ' also' → logprob: -3.9479305744171143
    9. 'also' → logprob: -4.197930335998535
    10. 'ac' → logprob: -4.322930335998535

Token 225: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.7237939238548279
    2. ' by' → logprob: -0.8487939238548279
    3. '   ' → logprob: -2.7237939834594727
    4. '       ' → logprob: -4.848793983459473
    5. ' in' → logprob: -5.723793983459473
    6. 'in' → logprob: -5.723793983459473
    7. '           ' → logprob: -6.348793983459473
    8. '    ' → logprob: -6.848793983459473
    9. ' ' → logprob: -6.848793983459473
    10. '  ' → logprob: -7.098793983459473

Token 226: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.761826515197754
    2. 'lock' → logprob: -1.886826515197754
    3. 'the' → logprob: -2.136826515197754
    4. 'another' → logprob: -2.261826515197754
    5. 'that' → logprob: -2.636826515197754
    6. 'a' → logprob: -2.886826515197754
    7. ' block' → logprob: -3.011826515197754
    8. ' that' → logprob: -3.011826515197754
    9. ' another' → logprob: -3.011826515197754
    10. ' the' → logprob: -3.136826515197754

Token 227: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4631898105144501
    2. ' j' → logprob: -1.7131898403167725
    3. 'i' → logprob: -2.4631898403167725
    4. 'j' → logprob: -2.7131898403167725
    5. 's' → logprob: -3.8381898403167725
    6. ' ' → logprob: -5.338189601898193
    7. '[i' → logprob: -6.088189601898193
    8. ')' → logprob: -6.338189601898193
    9. ' s' → logprob: -6.588189601898193
    10. '   ' → logprob: -6.588189601898193

Token 228: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38901615142822266
    2. '       ' → logprob: -2.0140161514282227
    3. ')' → logprob: -2.3890161514282227
    4. '   ' → logprob: -3.2640161514282227
    5. '),' → logprob: -4.264016151428223
    6. '):' → logprob: -4.264016151428223
    7. ' ,' → logprob: -5.014016151428223
    8. ':' → logprob: -5.389016151428223
    9. ',
' → logprob: -5.639016151428223
    10. '.' → logprob: -5.639016151428223

Token 229: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9131299257278442
    2. ' ' → logprob: -1.2881299257278442
    3. '   ' → logprob: -1.6631299257278442
    4. '    ' → logprob: -3.2881298065185547
    5. '<|end|>' → logprob: -3.4131298065185547
    6. ')' → logprob: -3.7881298065185547
    7. '           ' → logprob: -3.9131298065185547
    8. '        ' → logprob: -5.788129806518555
    9. ' 
' → logprob: -6.163129806518555
    10. ',' → logprob: -6.413129806518555

Token 230: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3168792128562927
    2. '       ' → logprob: -2.3168792724609375
    3. '   ' → logprob: -3.1918792724609375
    4. ')' → logprob: -3.4418792724609375
    5. '    ' → logprob: -3.6918792724609375
    6. ' 
' → logprob: -3.9418792724609375
    7. '<|end|>' → logprob: -4.3168792724609375
    8. ' )' → logprob: -4.9418792724609375
    9. '    
' → logprob: -5.3168792724609375
    10. '        ' → logprob: -5.5668792724609375

Token 231: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.181889295578003
    2. ' for' → logprob: -1.181889295578003
    3. ' ' → logprob: -1.931889295578003
    4. '       ' → logprob: -2.181889295578003
    5. '           ' → logprob: -3.056889295578003
    6. '<|end|>' → logprob: -3.681889295578003
    7. '    ' → logprob: -4.181889533996582
    8. 'for' → logprob: -4.806889533996582
    9. ')' → logprob: -5.056889533996582
    10. ' continue' → logprob: -5.431889533996582

Token 232: ' lock' (ID: 8109)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4407176375389099
    2. 'for' → logprob: -1.0657176971435547
    3. ' pass' → logprob: -5.565717697143555
    4. 'g' → logprob: -5.940717697143555
    5. 'pass' → logprob: -6.440717697143555
    6. ' g' → logprob: -6.690717697143555
    7. 'continue' → logprob: -7.315717697143555
    8. '#' → logprob: -7.315717697143555
    9. ' continue' → logprob: -7.940717697143555
    10. ' if' → logprob: -8.315717697143555

Token 233: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.43755123019218445
    2. 'A' → logprob: -1.6875512599945068
    3. ' B' → logprob: -2.687551259994507
    4. '_to' → logprob: -3.062551259994507
    5. 's' → logprob: -3.187551259994507
    6. 'B' → logprob: -5.187551021575928
    7. '_' → logprob: -6.562551021575928
    8. ' s' → logprob: -7.187551021575928
    9. ' edges' → logprob: -7.312551021575928
    10. 'to' → logprob: -7.312551021575928

Token 234: ' waits' (ID: 99777)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0726523399353027
    2. ')' → logprob: -1.5726523399353027
    3. '   ' → logprob: -1.8226523399353027
    4. ''s' → logprob: -3.3226523399353027
    5. ',' → logprob: -3.8226523399353027
    6. '[i' → logprob: -3.8226523399353027
    7. ' ' → logprob: -4.072652339935303
    8. ' can' → logprob: -4.197652339935303
    9. ' and' → logprob: -4.197652339935303
    10. ' has' → logprob: -4.197652339935303

Token 235: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6504044532775879
    2. ' for' → logprob: -1.400404453277588
    3. '_for' → logprob: -1.775404453277588
    4. '<|end|>' → logprob: -3.775404453277588
    5. '   ' → logprob: -4.025404453277588
    6. ')' → logprob: -4.525404453277588
    7. 'For' → logprob: -5.150404453277588
    8. ' ' → logprob: -6.650404453277588
    9. '_' → logprob: -7.150404453277588
    10. '    ' → logprob: -7.525404453277588

Token 236: ' lock' (ID: 8109)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7223414778709412
    2. 'lock' → logprob: -1.472341537475586
    3. ' B' → logprob: -1.597341537475586
    4. ' lock' → logprob: -2.972341537475586
    5. ')' → logprob: -4.472341537475586
    6. '<|end|>' → logprob: -4.847341537475586
    7. ' ' → logprob: -5.722341537475586
    8. 'locks' → logprob: -5.847341537475586
    9. ' )' → logprob: -6.722341537475586
    10. '(lock' → logprob: -6.847341537475586

Token 237: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.02649768255650997
    2. 'B' → logprob: -3.6514976024627686
    3. ' ' → logprob: -8.901497840881348
    4. 's' → logprob: -10.026497840881348
    5. '_' → logprob: -11.901497840881348
    6. '<|end|>' → logprob: -13.026497840881348
    7. ' ' → logprob: -13.151497840881348
    8. '_B' → logprob: -13.276497840881348
    9. ' A' → logprob: -14.526497840881348
    10. 'A' → logprob: -14.651497840881348

Token 238: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13567516207695007
    2. '
' → logprob: -2.1356751918792725
    3. '    
' → logprob: -6.010674953460693
    4. '  
' → logprob: -6.885674953460693
    5. '\n' → logprob: -7.010674953460693
    6. '       ' → logprob: -7.260674953460693
    7. ' for' → logprob: -7.260674953460693
    8. ':' → logprob: -7.385674953460693
    9. '<|end|>' → logprob: -7.385674953460693
    10. ' ' → logprob: -7.760674953460693

Token 239: ' meaning' (ID: 10915)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1709425449371338
    2. '       ' → logprob: -1.4209425449371338
    3. '   ' → logprob: -1.7959425449371338
    4. '    ' → logprob: -2.045942544937134
    5. '<|end|>' → logprob: -3.295942544937134
    6. ' 
' → logprob: -3.920942544937134
    7. '           ' → logprob: -4.045942306518555
    8. '    
' → logprob: -4.045942306518555
    9. ' i' → logprob: -4.295942306518555
    10. '        ' → logprob: -4.920942306518555

Token 240: ' edge' (ID: 11165)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.552907943725586
    2. ' g' → logprob: -1.677907943725586
    3. 'lock' → logprob: -1.677907943725586
    4. ' lock' → logprob: -1.677907943725586
    5. ' for' → logprob: -2.927907943725586
    6. 'for' → logprob: -3.302907943725586
    7. ' that' → logprob: -3.427907943725586
    8. ' the' → logprob: -3.677907943725586
    9. 'A' → logprob: -3.677907943725586
    10. ' A' → logprob: -4.177907943725586

Token 241: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5676823258399963
    2. ' =' → logprob: -1.1926822662353516
    3. 'from' → logprob: -3.3176822662353516
    4. ' between' → logprob: -3.3176822662353516
    5. 's' → logprob: -4.192682266235352
    6. ')' → logprob: -4.567682266235352
    7. '[' → logprob: -4.817682266235352
    8. '   ' → logprob: -5.567682266235352
    9. ' ' → logprob: -5.692682266235352
    10. ' A' → logprob: -5.817682266235352

Token 242: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29887935519218445
    2. ' A' → logprob: -1.5488793849945068
    3. 'l' → logprob: -3.923879384994507
    4. ' l' → logprob: -4.798879146575928
    5. 'lock' → logprob: -4.923879146575928
    6. 'g' → logprob: -5.673879146575928
    7. ' lock' → logprob: -6.423879146575928
    8. 'locks' → logprob: -6.548879146575928
    9. ' g' → logprob: -7.048879146575928
    10. '   ' → logprob: -7.048879146575928

Token 243: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.055123962461948395
    2. ' ->' → logprob: -3.180124044418335
    3. 'to' → logprob: -5.430123805999756
    4. ' ' → logprob: -5.555123805999756
    5. ')' → logprob: -6.930123805999756
    6. ' for' → logprob: -7.555123805999756
    7. ' -->' → logprob: -7.555123805999756
    8. '->' → logprob: -7.805123805999756
    9. ' =' → logprob: -8.430124282836914
    10. '   ' → logprob: -8.805124282836914

Token 244: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11291824281215668
    2. ' B' → logprob: -2.2379181385040283
    3. ' lock' → logprob: -10.36291790008545
    4. 'lock' → logprob: -10.48791790008545
    5. 'A' → logprob: -11.86291790008545
    6. 'b' → logprob: -11.98791790008545
    7. 'locks' → logprob: -12.11291790008545
    8. ' ' → logprob: -12.36291790008545
    9. ' locks' → logprob: -12.86291790008545
    10. ')' → logprob: -13.48791790008545

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3589119613170624
    2. '   ' → logprob: -1.2339119911193848
    3. '    
' → logprob: -5.483911991119385
    4. '\n' → logprob: -5.733911991119385
    5. '  
' → logprob: -6.858911991119385
    6. '
' → logprob: -7.483911991119385
    7. '<|end|>' → logprob: -8.108911514282227
    8. '       ' → logprob: -8.983911514282227
    9. ' for' → logprob: -8.983911514282227
    10. ' ' → logprob: -9.233911514282227

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0140145905315876
    2. ' for' → logprob: -4.639014720916748
    3. '
' → logprob: -6.139014720916748
    4. 'for' → logprob: -7.639014720916748
    5. '<|end|>' → logprob: -7.764014720916748
    6. '    
' → logprob: -7.889014720916748
    7. '	for' → logprob: -8.38901424407959
    8. ' ' → logprob: -8.76401424407959
    9. '  
' → logprob: -9.13901424407959
    10. '       ' → logprob: -9.63901424407959

Token 247: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05900706723332405
    2. '
' → logprob: -4.559007167816162
    3. ' 
' → logprob: -4.559007167816162
    4. '    
' → logprob: -4.684007167816162
    5. ' ' → logprob: -4.934007167816162
    6. '\n' → logprob: -5.309007167816162
    7. '       ' → logprob: -5.309007167816162
    8. '  
' → logprob: -6.059007167816162
    9. ' \' → logprob: -6.434007167816162
    10. '<|end|>' → logprob: -6.559007167816162

Token 248: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6401560306549072
    2. ' i' → logprob: -0.7651560306549072
    3. ' b' → logprob: -5.640155792236328
    4. 'b' → logprob: -5.890155792236328
    5. '   ' → logprob: -7.890155792236328
    6. 'm' → logprob: -8.890155792236328
    7. ' m' → logprob: -9.140155792236328
    8. ' range' → logprob: -9.265155792236328
    9. ' block' → logprob: -9.390155792236328
    10. 'block' → logprob: -9.515155792236328

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02164083905518055
    2. 'in' → logprob: -3.8966407775878906
    3. ',' → logprob: -6.896640777587891
    4. ' ,' → logprob: -9.77164077758789
    5. ' ' → logprob: -11.64664077758789
    6. ',in' → logprob: -12.27164077758789
    7. '   ' → logprob: -12.39664077758789
    8. 'import' → logprob: -12.39664077758789
    9. '	in' → logprob: -12.77164077758789
    10. '_in' → logprob: -14.02164077758789

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004556034691631794
    2. ' range' → logprob: -5.504556179046631
    3. 'm' → logprob: -7.879556179046631
    4. 'blocks' → logprob: -9.504555702209473
    5. 'block' → logprob: -12.254555702209473
    6. '   ' → logprob: -12.504555702209473
    7. '(range' → logprob: -12.754555702209473
    8. 'ranges' → logprob: -13.129555702209473
    9. ' ' → logprob: -13.254555702209473
    10. ')' → logprob: -13.629555702209473

Token 251: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02211424894630909
    2. '(m' → logprob: -3.8971142768859863
    3. ' m' → logprob: -6.772114276885986
    4. 'len' → logprob: -8.272113800048828
    5. '(len' → logprob: -9.897113800048828
    6. '   ' → logprob: -10.022113800048828
    7. '(' → logprob: -10.022113800048828
    8. '1' → logprob: -11.397113800048828
    9. '       ' → logprob: -12.647113800048828
    10. '10' → logprob: -12.897113800048828

Token 252: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1432085484266281
    2. '):' → logprob: -2.0182085037231445
    3. '   ' → logprob: -8.393208503723145
    4. '-' → logprob: -8.643208503723145
    5. ' -' → logprob: -10.268208503723145
    6. ')' → logprob: -10.393208503723145
    7. '):
' → logprob: -10.518208503723145
    8. '+' → logprob: -11.518208503723145
    9. '       ' → logprob: -11.518208503723145
    10. ' ):
' → logprob: -12.018208503723145

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000122608442325145
    2. ' for' → logprob: -9.875123023986816
    3. '   ' → logprob: -11.125123023986816
    4. '        
' → logprob: -11.250123023986816
    5. ',' → logprob: -11.375123023986816
    6. '<|end|>' → logprob: -12.125123023986816
    7. ' block' → logprob: -12.375123023986816
    8. '           ' → logprob: -12.750123023986816
    9. '        ' → logprob: -13.125123023986816
    10. '```' → logprob: -13.250123023986816

Token 254: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44261646270751953
    2. 'b' → logprob: -1.1926164627075195
    3. '       ' → logprob: -3.5676164627075195
    4. 'block' → logprob: -4.1926164627075195
    5. 'ac' → logprob: -6.3176164627075195
    6. 'bs' → logprob: -6.4426164627075195
    7. 'length' → logprob: -6.4426164627075195
    8. ' for' → logprob: -6.9426164627075195
    9. 'l' → logprob: -7.1926164627075195
    10. '   ' → logprob: -7.4426164627075195

Token 255: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5295149683952332
    2. '[i' → logprob: -1.279515027999878
    3. '_len' → logprob: -3.404515027999878
    4. '<|end|>' → logprob: -4.279514789581299
    5. '<|end|>' → logprob: -4.529514789581299
    6. '=' → logprob: -4.529514789581299
    7. '       ' → logprob: -4.654514789581299
    8. '_length' → logprob: -4.904514789581299
    9. '[' → logprob: -4.904514789581299
    10. ')' → logprob: -4.904514789581299

Token 256: 'ocks' (ID: 14622)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5472356081008911
    2. '=' → logprob: -1.1722356081008911
    3. 'ength' → logprob: -2.2972354888916016
    4. '   ' → logprob: -6.422235488891602
    5. 'en' → logprob: -6.422235488891602
    6. ')' → logprob: -6.672235488891602
    7. '       ' → logprob: -6.922235488891602
    8. '=len' → logprob: -7.047235488891602
    9. 'ist' → logprob: -7.297235488891602
    10. '[' → logprob: -7.422235488891602

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22715085744857788
    2. '=' → logprob: -1.6021509170532227
    3. '   ' → logprob: -8.227150917053223
    4. '<|end|>' → logprob: -8.477150917053223
    5. '[' → logprob: -8.727150917053223
    6. ')' → logprob: -8.852150917053223
    7. '[i' → logprob: -8.852150917053223
    8. '       ' → logprob: -8.977150917053223
    9. 's' → logprob: -9.352150917053223
    10. '=[' → logprob: -9.477150917053223

Token 258: ' set' (ID: 920)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.12625031173229218
    2. ' blocks' → logprob: -2.6262502670288086
    3. 'set' → logprob: -3.1262502670288086
    4. ' set' → logprob: -6.126250267028809
    5. 'block' → logprob: -10.001250267028809
    6. '{' → logprob: -10.126250267028809
    7. 'len' → logprob: -10.376250267028809
    8. '[' → logprob: -10.876250267028809
    9. '   ' → logprob: -11.751250267028809
    10. 'list' → logprob: -11.751250267028809

Token 259: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -7.588793960167095e-05
    2. 'blocks' → logprob: -9.500076293945312
    3. '(b' → logprob: -14.875076293945312
    4. '(' → logprob: -15.125076293945312
    5. ' (' → logprob: -16.750076293945312
    6. 'block' → logprob: -16.875076293945312
    7. '.blocks' → logprob: -17.125076293945312
    8. '```' → logprob: -17.125076293945312
    9. '()' → logprob: -17.250076293945312
    10. '([' → logprob: -17.250076293945312

Token 260: 's' (ID: 82)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.36237314343452454
    2. '(block' → logprob: -1.9873731136322021
    3. '[i' → logprob: -2.112373113632202
    4. 's' → logprob: -3.612373113632202
    5. '[' → logprob: -4.362373352050781
    6. '[b' → logprob: -6.612373352050781
    7. 'locks' → logprob: -6.612373352050781
    8. 'ocks' → logprob: -6.987373352050781
    9. ' blocks' → logprob: -7.112373352050781
    10. ')' → logprob: -7.112373352050781

Token 261: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -13.500001907348633
    3. '[' → logprob: -16.625001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.000001907348633
    6. 's' → logprob: -18.125001907348633
    7. '       ' → logprob: -18.250001907348633
    8. ')[' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '[
' → logprob: -18.625001907348633

Token 262: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005331947468221188
    2. '])
' → logprob: -5.255331993103027
    3. ' ])' → logprob: -10.755331993103027
    4. '       ' → logprob: -10.880331993103027
    5. '[i' → logprob: -11.005331993103027
    6. '   ' → logprob: -11.630331993103027
    7. ')' → logprob: -11.880331993103027
    8. '][' → logprob: -12.005331993103027
    9. ']' → logprob: -12.005331993103027
    10. '[' → logprob: -13.005331993103027

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005536827724426985
    2. '   ' → logprob: -6.755537033081055
    3. '
' → logprob: -6.755537033081055
    4. '<|end|>' → logprob: -7.005537033081055
    5. ',' → logprob: -7.630537033081055
    6. ')' → logprob: -8.005537033081055
    7. '        
' → logprob: -8.130537033081055
    8. ' for' → logprob: -8.255537033081055
    9. '[' → logprob: -8.380537033081055
    10. '<|end|>' → logprob: -9.255537033081055

Token 264: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10295270383358002
    2. '       ' → logprob: -2.352952718734741
    3. ' for' → logprob: -6.227952480316162
    4. 'locks' → logprob: -7.727952480316162
    5. '   ' → logprob: -8.97795295715332
    6. 'next' → logprob: -9.22795295715332
    7. 'prev' → logprob: -10.60295295715332
    8. 'j' → logprob: -11.10295295715332
    9. 'blocks' → logprob: -11.72795295715332
    10. 'positions' → logprob: -11.85295295715332

Token 265: ' Each' (ID: 11555)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03140777722001076
    2. '       ' → logprob: -3.6564078330993652
    3. ' for' → logprob: -5.531407833099365
    4. 'locks' → logprob: -7.156407833099365
    5. 'prev' → logprob: -8.781407356262207
    6. '   ' → logprob: -9.156407356262207
    7. 'next' → logprob: -10.656407356262207
    8. 'block' → logprob: -11.031407356262207
    9. 'blocks' → logprob: -11.281407356262207
    10. 'ac' → logprob: -11.906407356262207

Token 266: ' block' (ID: 4355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7327911853790283
    2. 'j' → logprob: -1.8577911853790283
    3. ' for' → logprob: -1.9827911853790283
    4. 'lock' → logprob: -2.6077911853790283
    5. '       ' → logprob: -3.2327911853790283
    6. 'block' → logprob: -3.6077911853790283
    7. ' j' → logprob: -3.6077911853790283
    8. 'l' → logprob: -3.7327911853790283
    9. ' l' → logprob: -4.482790946960449
    10. ' lock' → logprob: -5.107790946960449

Token 267: ' holds' (ID: 18305)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.716468870639801
    2. '_l' → logprob: -1.5914688110351562
    3. ' =' → logprob: -2.2164688110351562
    4. ' locks' → logprob: -2.4664688110351562
    5. '       ' → logprob: -3.3414688110351562
    6. '=' → logprob: -4.591468811035156
    7. ' has' → logprob: -4.841468811035156
    8. 'for' → logprob: -5.091468811035156
    9. '_len' → logprob: -5.341468811035156
    10. ' can' → logprob: -5.466468811035156

Token 268: ' all' (ID: 722)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.4967820346355438
    2. 'for' → logprob: -1.4967820644378662
    3. ' for' → logprob: -2.371782064437866
    4. ' the' → logprob: -3.746782064437866
    5. 'blocks' → logprob: -4.371781826019287
    6. 'the' → logprob: -4.371781826019287
    7. ' blocks' → logprob: -5.371781826019287
    8. ' locks' → logprob: -5.496781826019287
    9. '       ' → logprob: -5.621781826019287
    10. '   ' → logprob: -5.996781826019287

Token 269: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.11457563936710358
    2. ' locks' → logprob: -2.4895756244659424
    3. ' the' → logprob: -4.1145758628845215
    4. 'the' → logprob: -5.4895758628845215
    5. ' its' → logprob: -6.1145758628845215
    6. ' acquired' → logprob: -6.9895758628845215
    7. ' blocks' → logprob: -7.6145758628845215
    8. ' previous' → logprob: -8.239575386047363
    9. 'blocks' → logprob: -8.364575386047363
    10. 'its' → logprob: -9.114575386047363

Token 270: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17394977807998657
    2. ' and' → logprob: -2.548949718475342
    3. ' for' → logprob: -3.798949718475342
    4. ',' → logprob: -4.048949718475342
    5. ' until' → logprob: -4.798949718475342
    6. ' at' → logprob: -4.923949718475342
    7. '   ' → logprob: -5.298949718475342
    8. ' in' → logprob: -5.423949718475342
    9. 'for' → logprob: -5.548949718475342
    10. ' that' → logprob: -5.798949718475342

Token 271: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1436225026845932
    2. ' blocks' → logprob: -2.018622398376465
    3. '   ' → logprob: -8.143622398376465
    4. 'the' → logprob: -8.768622398376465
    5. '       ' → logprob: -9.268622398376465
    6. 'block' → logprob: -9.518622398376465
    7. ' the' → logprob: -9.518622398376465
    8. 'locks' → logprob: -9.643622398376465
    9. '           ' → logprob: -9.893622398376465
    10. 'ac' → logprob: -10.768622398376465

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005853655282407999
    2. '       ' → logprob: -5.380853652954102
    3. '   ' → logprob: -8.005853652954102
    4. 'for' → logprob: -8.380853652954102
    5. '[l' → logprob: -9.130853652954102
    6. '(i' → logprob: -9.380853652954102
    7. ' for' → logprob: -9.630853652954102
    8. '[' → logprob: -9.755853652954102
    9. ')' → logprob: -10.130853652954102
    10. 'i' → logprob: -10.255853652954102

Token 273: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.488125205039978
    2. '])
' → logprob: -1.488125205039978
    3. ']' → logprob: -2.2381253242492676
    4. ']
' → logprob: -3.7381253242492676
    5. '       ' → logprob: -4.363125324249268
    6. '],' → logprob: -5.238125324249268
    7. '   ' → logprob: -5.988125324249268
    8. '[i' → logprob: -6.238125324249268
    9. ')
' → logprob: -6.363125324249268
    10. '][' → logprob: -6.488125324249268

Token 274: ' simultaneously' (ID: 38328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008311606012284756
    2. ' for' → logprob: -5.633311748504639
    3. ',' → logprob: -6.133311748504639
    4. '   ' → logprob: -7.383311748504639
    5. ' and' → logprob: -7.633311748504639
    6. '
' → logprob: -7.633311748504639
    7. '        
' → logprob: -8.50831127166748
    8. '<|end|>' → logprob: -8.50831127166748
    9. 'for' → logprob: -8.63331127166748
    10. ')' → logprob: -9.75831127166748

Token 275: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063621969893574715
    2. ' for' → logprob: -5.631361961364746
    3. ',' → logprob: -6.881361961364746
    4. '
' → logprob: -7.756361961364746
    5. ' and' → logprob: -8.131361961364746
    6. '   ' → logprob: -8.381361961364746
    7. '<|end|>' → logprob: -8.506361961364746
    8. '        
' → logprob: -8.756361961364746
    9. 'for' → logprob: -8.756361961364746
    10. '.' → logprob: -9.881361961364746

Token 276: ' releases' (ID: 30979)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.2198272943496704
    2. '       ' → logprob: -1.9698272943496704
    3. 'for' → logprob: -2.094827175140381
    4. '   ' → logprob: -2.969827175140381
    5. ' acqu' → logprob: -3.094827175140381
    6. '           ' → logprob: -3.219827175140381
    7. 'can' → logprob: -3.469827175140381
    8. ' tries' → logprob: -3.469827175140381
    9. 'tries' → logprob: -3.594827175140381
    10. ' can' → logprob: -3.594827175140381

Token 277: ' all' (ID: 722)
  Prédit: ' them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.5592831969261169
    2. 'them' → logprob: -1.5592832565307617
    3. ' all' → logprob: -2.4342832565307617
    4. 'all' → logprob: -3.0592832565307617
    5. ' after' → logprob: -3.9342832565307617
    6. '   ' → logprob: -4.184283256530762
    7. ' at' → logprob: -4.434283256530762
    8. 'after' → logprob: -4.559283256530762
    9. 'locks' → logprob: -5.059283256530762
    10. '       ' → logprob: -5.809283256530762

Token 278: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7733447551727295
    2. '       ' → logprob: -1.5233447551727295
    3. ' after' → logprob: -2.6483447551727295
    4. ' before' → logprob: -2.6483447551727295
    5. 'locks' → logprob: -2.6483447551727295
    6. '   ' → logprob: -3.2733447551727295
    7. 'before' → logprob: -4.273344993591309
    8. 'at' → logprob: -4.523344993591309
    9. 'after' → logprob: -4.773344993591309
    10. ' locks' → logprob: -4.898344993591309

Token 279: ' u' (ID: 337)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.29813551902770996
    2. 'the' → logprob: -1.67313551902771
    3. ' once' → logprob: -3.17313551902771
    4. ' the' → logprob: -3.79813551902771
    5. 'end' → logprob: -6.048135757446289
    6. '   ' → logprob: -6.048135757446289
    7. '```' → logprob: -8.048135757446289
    8. '       ' → logprob: -9.173135757446289
    9. ' ' → logprob: -9.298135757446289
    10. ' end' → logprob: -9.298135757446289

Token 280: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25166189670562744
    2. '[i' → logprob: -2.376661777496338
    3. '   ' → logprob: -3.251661777496338
    4. ')' → logprob: -4.501661777496338
    5. '        ' → logprob: -4.751661777496338
    6. '
' → logprob: -4.876661777496338
    7. ',' → logprob: -4.876661777496338
    8. 's' → logprob: -5.126661777496338
    9. '           ' → logprob: -5.501661777496338
    10. ' ' → logprob: -5.501661777496338

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013153409585356712
    2. '   ' → logprob: -5.013153553009033
    3. ' for' → logprob: -5.513153553009033
    4. ',' → logprob: -7.138153553009033
    5. '        
' → logprob: -7.888153553009033
    6. '
' → logprob: -8.013153076171875
    7. 'for' → logprob: -8.388153076171875
    8. '<|end|>' → logprob: -9.138153076171875
    9. ' ' → logprob: -9.263153076171875
    10. '  
' → logprob: -9.263153076171875

Token 282: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30673977732658386
    2. 'for' → logprob: -1.8067398071289062
    3. ' for' → logprob: -2.3067398071289062
    4. '   ' → logprob: -8.681739807128906
    5. 'locks' → logprob: -9.681739807128906
    6. 'next' → logprob: -10.056739807128906
    7. ',' → logprob: -10.806739807128906
    8. '           ' → logprob: -10.931739807128906
    9. '        
' → logprob: -11.306739807128906
    10. ' ' → logprob: -11.931739807128906

Token 283: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7838842868804932
    2. '       ' → logprob: -0.9088842868804932
    3. ' for' → logprob: -2.283884286880493
    4. 'locks' → logprob: -3.283884286880493
    5. '   ' → logprob: -8.408884048461914
    6. ' locks' → logprob: -8.533884048461914
    7. 'next' → logprob: -8.908884048461914
    8. '           ' → logprob: -9.033884048461914
    9. 'ac' → logprob: -10.158884048461914
    10. 'block' → logprob: -10.283884048461914

Token 284: ' lock' (ID: 8109)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2573314607143402
    2. ' for' → logprob: -2.007331371307373
    3. 'locks' → logprob: -3.507331371307373
    4. '       ' → logprob: -3.757331371307373
    5. '#' → logprob: -4.257331371307373
    6. 'next' → logprob: -5.257331371307373
    7. ' next' → logprob: -5.632331371307373
    8. 'ac' → logprob: -6.132331371307373
    9. 'following' → logprob: -6.257331371307373
    10. ' acquired' → logprob: -6.382331371307373

Token 285: ' acquisition' (ID: 32621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.035742249339818954
    2. ' s' → logprob: -4.410742282867432
    3. ' in' → logprob: -4.910742282867432
    4. '[i' → logprob: -5.910742282867432
    5. '   ' → logprob: -6.535742282867432
    6. ' for' → logprob: -6.785742282867432
    7. '       ' → logprob: -7.160742282867432
    8. 'for' → logprob: -7.285742282867432
    9. ' sequence' → logprob: -7.410742282867432
    10. 'set' → logprob: -7.535742282867432

Token 286: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.1303175687789917
    2. 'order' → logprob: -2.3803176879882812
    3. ' sequence' → logprob: -5.005317687988281
    4. 's' → logprob: -5.380317687988281
    5. ' is' → logprob: -5.630317687988281
    6. ' continues' → logprob: -5.630317687988281
    7. ' process' → logprob: -6.005317687988281
    8. '   ' → logprob: -6.505317687988281
    9. 'sequence' → logprob: -6.755317687988281
    10. ' pattern' → logprob: -6.880317687988281

Token 287: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5553460121154785
    2. '       ' → logprob: -2.3053460121154785
    3. ' is' → logprob: -2.3053460121154785
    4. ' for' → logprob: -2.8053460121154785
    5. ' +=' → logprob: -2.9303460121154785
    6. ':' → logprob: -3.9303460121154785
    7. '=' → logprob: -3.9303460121154785
    8. '   ' → logprob: -4.0553460121154785
    9. ' in' → logprob: -4.8053460121154785
    10. 'for' → logprob: -5.3053460121154785

Token 288: ' the' (ID: 290)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.1838923692703247
    2. ' blocks' → logprob: -1.8088923692703247
    3. 'the' → logprob: -6.433892250061035
    4. 'ac' → logprob: -7.058892250061035
    5. ' acquired' → logprob: -7.683892250061035
    6. 'block' → logprob: -7.808892250061035
    7. ' the' → logprob: -8.308892250061035
    8. 'b' → logprob: -8.808892250061035
    9. '   ' → logprob: -10.058892250061035
    10. '```' → logprob: -10.058892250061035

Token 289: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.16730058193206787
    2. 'blocks' → logprob: -2.2923007011413574
    3. 'current' → logprob: -3.5423007011413574
    4. 'code' → logprob: -4.542300701141357
    5. 'same' → logprob: -5.542300701141357
    6. ' block' → logprob: -6.542300701141357
    7. 'ac' → logprob: -6.667300701141357
    8. ' code' → logprob: -6.917300701141357
    9. '[i' → logprob: -7.167300701141357
    10. ' blocks' → logprob: -7.292300701141357

Token 290: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.125724196434021
    2. ' for' → logprob: -3.3757243156433105
    3. 'for' → logprob: -4.1257243156433105
    4. '       ' → logprob: -4.5007243156433105
    5. '   ' → logprob: -4.6257243156433105
    6. 'is' → logprob: -5.2507243156433105
    7. ' can' → logprob: -5.3757243156433105
    8. ' appears' → logprob: -5.5007243156433105
    9. ' =' → logprob: -5.6257243156433105
    10. ' seems' → logprob: -5.7507243156433105

Token 291: ' linear' (ID: 23876)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.270181804895401
    2. 'blocks' → logprob: -1.5201817750930786
    3. ' len' → logprob: -5.270181655883789
    4. '[' → logprob: -5.520181655883789
    5. 'len' → logprob: -5.645181655883789
    6. ' [' → logprob: -6.770181655883789
    7. '   ' → logprob: -7.520181655883789
    8. ' ' → logprob: -7.520181655883789
    9. 'sorted' → logprob: -7.645181655883789
    10. '       ' → logprob: -8.020181655883789

Token 292: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13495901226997375
    2. '   ' → logprob: -2.7599589824676514
    3. ' for' → logprob: -4.0099592208862305
    4. '
' → logprob: -4.2599592208862305
    5. ',' → logprob: -5.0099592208862305
    6. '<|end|>' → logprob: -5.2599592208862305
    7. '        
' → logprob: -5.3849592208862305
    8. ' and' → logprob: -6.0099592208862305
    9. '    
' → logprob: -6.1349592208862305
    10. '  
' → logprob: -6.2599592208862305

Token 293: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.16761909425258636
    2. ' but' → logprob: -2.667618989944458
    3. ' and' → logprob: -3.167618989944458
    4. '       ' → logprob: -4.167619228363037
    5. ' i' → logprob: -4.167619228363037
    6. ' not' → logprob: -6.667619228363037
    7. ' for' → logprob: -6.792619228363037
    8. ' ' → logprob: -6.917619228363037
    9. ' with' → logprob: -7.167619228363037
    10. ' allowing' → logprob: -7.167619228363037

Token 294: ' since' (ID: 3630)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0823994874954224
    2. ' the' → logprob: -1.3323994874954224
    3. 'for' → logprob: -1.3323994874954224
    4. 'the' → logprob: -2.707399368286133
    5. ' not' → logprob: -4.957399368286133
    6. '       ' → logprob: -5.082399368286133
    7. 'locks' → logprob: -5.207399368286133
    8. 'each' → logprob: -5.332399368286133
    9. ' there' → logprob: -5.332399368286133
    10. '#' → logprob: -5.582399368286133

Token 295: ' instructions' (ID: 15543)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1889978647232056
    2. 'the' → logprob: -1.9389978647232056
    3. 'locks' → logprob: -2.063997745513916
    4. ' blocks' → logprob: -2.313997745513916
    5. ' all' → logprob: -2.438997745513916
    6. 'they' → logprob: -2.813997745513916
    7. 'all' → logprob: -3.063997745513916
    8. 'blocks' → logprob: -3.438997745513916
    9. ' they' → logprob: -3.938997745513916
    10. ' locks' → logprob: -3.938997745513916

Token 296: ' are' (ID: 553)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9691391587257385
    2. ' continue' → logprob: -1.3441390991210938
    3. ' are' → logprob: -1.8441390991210938
    4. ' in' → logprob: -2.0941390991210938
    5. 'continue' → logprob: -3.7191390991210938
    6. ' that' → logprob: -4.969139099121094
    7. ',' → logprob: -5.594139099121094
    8. '       ' → logprob: -5.719139099121094
    9. '[' → logprob: -5.719139099121094
    10. '=' → logprob: -6.094139099121094

Token 297: ' executed' (ID: 30830)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.9127791523933411
    2. 'se' → logprob: -1.2877790927886963
    3. 'not' → logprob: -2.5377790927886963
    4. 'in' → logprob: -2.7877790927886963
    5. 'given' → logprob: -3.5377790927886963
    6. 'linear' → logprob: -3.7877790927886963
    7. 'atomic' → logprob: -4.162779331207275
    8. 'all' → logprob: -4.287779331207275
    9. 'processed' → logprob: -4.287779331207275
    10. 'strict' → logprob: -4.787779331207275

Token 298: ' sequential' (ID: 83182)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5406686067581177
    2. ' in' → logprob: -1.6656686067581177
    3. 'in' → logprob: -2.790668487548828
    4. ' sequential' → logprob: -2.790668487548828
    5. 'one' → logprob: -3.415668487548828
    6. '       ' → logprob: -3.540668487548828
    7. '   ' → logprob: -4.415668487548828
    8. 'se' → logprob: -5.165668487548828
    9. ',' → logprob: -5.165668487548828
    10. ' ' → logprob: -5.915668487548828

Token 299: 'ly' (ID: 423)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.830192506313324
    2. 'ly' → logprob: -0.830192506313324
    3. '       ' → logprob: -2.2051925659179688
    4. '           ' → logprob: -5.205192565917969
    5. ',
' → logprob: -5.580192565917969
    6. ' and' → logprob: -6.205192565917969
    7. '   ' → logprob: -6.580192565917969
    8. ':
' → logprob: -6.580192565917969
    9. ' in' → logprob: -7.330192565917969
    10. ' ,' → logprob: -7.580192565917969

Token 300: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03457118943333626
    2. '       ' → logprob: -4.284571170806885
    3. ' and' → logprob: -4.784571170806885
    4. ' in' → logprob: -5.909571170806885
    5. ' ,' → logprob: -6.159571170806885
    6. '<|end|>' → logprob: -6.909571170806885
    7. 'and' → logprob: -7.034571170806885
    8. '   ' → logprob: -7.159571170806885
    9. ' while' → logprob: -7.284571170806885
    10. ',
' → logprob: -7.534571170806885

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15899014472961426
    2. '<|end|>' → logprob: -2.6589901447296143
    3. ' ' → logprob: -3.6589901447296143
    4. '        ' → logprob: -4.408989906311035
    5. ' i' → logprob: -4.783989906311035
    6. '           ' → logprob: -4.783989906311035
    7. '   ' → logprob: -5.158989906311035
    8. ',' → logprob: -5.533989906311035
    9. '    ' → logprob: -6.283989906311035
    10. ' there' → logprob: -6.658989906311035

Token 302: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8371719717979431
    2. ' for' → logprob: -1.712172031402588
    3. ' the' → logprob: -2.462172031402588
    4. ' i' → logprob: -2.837172031402588
    5. '   ' → logprob: -3.087172031402588
    6. ' there' → logprob: -3.212172031402588
    7. '           ' → logprob: -3.462172031402588
    8. 'for' → logprob: -3.462172031402588
    9. 'the' → logprob: -4.337172031402588
    10. 'i' → logprob: -4.337172031402588

Token 303: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29951396584510803
    2. 'for' → logprob: -1.6745139360427856
    3. '       ' → logprob: -3.299514055252075
    4. ' acquired' → logprob: -4.799513816833496
    5. ' prev' → logprob: -5.049513816833496
    6. ' last' → logprob: -5.299513816833496
    7. 'prev' → logprob: -5.424513816833496
    8. ' if' → logprob: -6.924513816833496
    9. ' previous' → logprob: -6.924513816833496
    10. 'last' → logprob: -6.924513816833496

Token 304: ' thread' (ID: 8591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6376049518585205
    2. ' for' → logprob: -1.5126049518585205
    3. '       ' → logprob: -2.3876049518585205
    4. 'c' → logprob: -2.6376049518585205
    5. 'for' → logprob: -3.8876049518585205
    6. '        ' → logprob: -4.012604713439941
    7. '<|end|>' → logprob: -4.262604713439941
    8. ' 
' → logprob: -4.637604713439941
    9. ' ' → logprob: -5.387604713439941
    10. '   ' → logprob: -6.137604713439941

Token 305: ' holds' (ID: 18305)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' may' → logprob: -1.1293785572052002
    2. ' acqu' → logprob: -1.3793785572052002
    3. ' might' → logprob: -2.3793785572052
    4. ' can' → logprob: -2.7543785572052
    5. ' tries' → logprob: -3.1293785572052
    6. 'may' → logprob: -3.5043785572052
    7. ' that' → logprob: -4.129378318786621
    8. 'ac' → logprob: -4.254378318786621
    9. ' must' → logprob: -4.254378318786621
    10. '   ' → logprob: -4.379378318786621

Token 306: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6691762208938599
    2. ' all' → logprob: -2.0441761016845703
    3. 'the' → logprob: -2.1691761016845703
    4. 'locks' → logprob: -2.2941761016845703
    5. 'all' → logprob: -3.0441761016845703
    6. ' onto' → logprob: -3.6691761016845703
    7. ' a' → logprob: -3.9191761016845703
    8. ' locks' → logprob: -4.54417610168457
    9. ' on' → logprob: -5.16917610168457
    10. 'a' → logprob: -5.41917610168457

Token 307: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.761224627494812
    2. 'lock' → logprob: -1.011224627494812
    3. 'first' → logprob: -2.5112247467041016
    4. 'previous' → logprob: -3.6362247467041016
    5. 'block' → logprob: -3.8862247467041016
    6. 'blocks' → logprob: -4.136224746704102
    7. 'current' → logprob: -4.886224746704102
    8. ' first' → logprob: -5.636224746704102
    9. ' lock' → logprob: -5.761224746704102
    10. 'prefix' → logprob: -6.386224746704102

Token 308: ' accumulated' (ID: 64757)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1882892847061157
    2. ' in' → logprob: -1.3132892847061157
    3. ' acquired' → logprob: -2.188289165496826
    4. ' only' → logprob: -3.438289165496826
    5. '[i' → logprob: -3.563289165496826
    6. 'while' → logprob: -3.563289165496826
    7. '[' → logprob: -3.813289165496826
    8. 'ac' → logprob: -3.813289165496826
    9. '   ' → logprob: -3.938289165496826
    10. 'only' → logprob: -4.313289165496826

Token 309: ' until' (ID: 4609)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.07369054108858109
    2. 'so' → logprob: -2.82369065284729
    3. ' until' → logprob: -6.073690414428711
    4. ' at' → logprob: -6.448690414428711
    5. ' while' → logprob: -6.573690414428711
    6. 'while' → logprob: -7.073690414428711
    7. ' before' → logprob: -7.073690414428711
    8. ' up' → logprob: -7.198690414428711
    9. 'until' → logprob: -7.323690414428711
    10. ' after' → logprob: -7.573690414428711

Token 310: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.1827373504638672
    2. ' the' → logprob: -1.3077373504638672
    3. 'that' → logprob: -1.8077373504638672
    4. 'the' → logprob: -2.432737350463867
    5. ' now' → logprob: -2.932737350463867
    6. 'now' → logprob: -2.932737350463867
    7. 'next' → logprob: -4.307737350463867
    8. ' next' → logprob: -4.307737350463867
    9. ' acquiring' → logprob: -4.307737350463867
    10. ' then' → logprob: -5.182737350463867

Token 311: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.09141206741333
    2. 'next' → logprob: -1.21641206741333
    3. ' next' → logprob: -1.46641206741333
    4. ' current' → logprob: -2.09141206741333
    5. ' end' → logprob: -4.71641206741333
    6. 'end' → logprob: -6.21641206741333
    7. 'point' → logprob: -7.34141206741333
    8. 'ac' → logprob: -7.84141206741333
    9. 'i' → logprob: -8.216411590576172
    10. ' point' → logprob: -8.591411590576172

Token 312: ' u' (ID: 337)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.15005624294281
    2. ' lock' → logprob: -1.27505624294281
    3. ' acquisition' → logprob: -1.77505624294281
    4. 'ac' → logprob: -2.4000563621520996
    5. 'instruction' → logprob: -3.1500563621520996
    6. 'token' → logprob: -3.5250563621520996
    7. ' token' → logprob: -3.5250563621520996
    8. ' instruction' → logprob: -4.1500563621521
    9. ' acquired' → logprob: -4.5250563621521
    10. ' acquire' → logprob: -5.5250563621521

Token 313: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21091803908348083
    2. ' while' → logprob: -2.5859179496765137
    3. '<|end|>' → logprob: -3.8359179496765137
    4. '   ' → logprob: -3.9609179496765137
    5. ',' → logprob: -3.9609179496765137
    6. 'while' → logprob: -4.710917949676514
    7. ' until' → logprob: -5.085917949676514
    8. ' for' → logprob: -5.210917949676514
    9. ' and' → logprob: -5.335917949676514
    10. '        
' → logprob: -5.710917949676514

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05810944363474846
    2. ' for' → logprob: -2.9331095218658447
    3. 'for' → logprob: -6.183109283447266
    4. '<|end|>' → logprob: -8.058109283447266
    5. '   ' → logprob: -8.933109283447266
    6. ',' → logprob: -9.058109283447266
    7. '```' → logprob: -9.183109283447266
    8. ' ' → logprob: -9.308109283447266
    9. '        
' → logprob: -9.433109283447266
    10. ' ' → logprob: -9.683109283447266

Token 315: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16532579064369202
    2. '   ' → logprob: -2.915325880050659
    3. '<|end|>' → logprob: -3.165325880050659
    4. ' for' → logprob: -4.16532564163208
    5. ' ' → logprob: -4.91532564163208
    6. '
' → logprob: -5.16532564163208
    7. ' 
' → logprob: -5.41532564163208
    8. 'for' → logprob: -5.41532564163208
    9. '<|end|>' → logprob: -5.66532564163208
    10. ' while' → logprob: -5.79032564163208

Token 316: ' To' (ID: 2514)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5270286202430725
    2. 'for' → logprob: -1.6520285606384277
    3. '       ' → logprob: -1.7770285606384277
    4. ' prev' → logprob: -3.9020285606384277
    5. 'prev' → logprob: -3.9020285606384277
    6. ' last' → logprob: -6.527028560638428
    7. 'next' → logprob: -7.027028560638428
    8. '   ' → logprob: -7.152028560638428
    9. 'j' → logprob: -7.277028560638428
    10. 'current' → logprob: -7.402028560638428

Token 317: ' simulate' (ID: 66687)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1859016418457031
    2. 'continue' → logprob: -2.060901641845703
    3. ' for' → logprob: -2.310901641845703
    4. 'ac' → logprob: -2.435901641845703
    5. ' acquire' → logprob: -2.935901641845703
    6. '       ' → logprob: -3.060901641845703
    7. 'for' → logprob: -3.185901641845703
    8. ' create' → logprob: -3.685901641845703
    9. '   ' → logprob: -3.810901641845703
    10. ' ' → logprob: -3.810901641845703

Token 318: ' wait' (ID: 5238)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7614721655845642
    2. 'the' → logprob: -1.761472225189209
    3. 'lock' → logprob: -2.636472225189209
    4. 'for' → logprob: -3.136472225189209
    5. ' acquiring' → logprob: -3.136472225189209
    6. ' for' → logprob: -3.636472225189209
    7. ' that' → logprob: -3.636472225189209
    8. ' lock' → logprob: -4.136472225189209
    9. 'locks' → logprob: -4.136472225189209
    10. '   ' → logprob: -4.136472225189209

Token 319: '-for' (ID: 26116)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.5766568779945374
    2. 'for' → logprob: -1.4516568183898926
    3. ' for' → logprob: -2.7016568183898926
    4. '   ' → logprob: -2.9516568183898926
    5. 'ing' → logprob: -3.0766568183898926
    6. '       ' → logprob: -4.201656818389893
    7. '_' → logprob: -4.326656818389893
    8. 's' → logprob: -5.826656818389893
    9. '           ' → logprob: -6.326656818389893
    10. '    ' → logprob: -6.826656818389893

Token 320: ',' (ID: 11)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.360975444316864
    2. ' graph' → logprob: -2.235975503921509
    3. 'edges' → logprob: -3.235975503921509
    4. 's' → logprob: -3.860975503921509
    5. '_edges' → logprob: -3.860975503921509
    6. 'graph' → logprob: -3.860975503921509
    7. ' ' → logprob: -3.985975503921509
    8. ' s' → logprob: -4.11097526550293
    9. ' for' → logprob: -4.61097526550293
    10. ' loops' → logprob: -4.86097526550293

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10340439528226852
    2. 'for' → logprob: -2.8534042835235596
    3. ' acquired' → logprob: -3.6034042835235596
    4. ' prev' → logprob: -5.353404521942139
    5. '       ' → logprob: -5.478404521942139
    6. 'locks' → logprob: -6.978404521942139
    7. 'prev' → logprob: -7.228404521942139
    8. ' last' → logprob: -7.353404521942139
    9. ' if' → logprob: -8.10340404510498
    10. ' locks' → logprob: -8.10340404510498

Token 322: ' each' (ID: 2454)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5307473540306091
    2. 'j' → logprob: -1.655747413635254
    3. ' l' → logprob: -2.155747413635254
    4. ' each' → logprob: -3.280747413635254
    5. 'each' → logprob: -4.155747413635254
    6. ' idx' → logprob: -4.530747413635254
    7. 'lock' → logprob: -4.655747413635254
    8. 'l' → logprob: -4.905747413635254
    9. ' lock' → logprob: -5.280747413635254
    10. ' block' → logprob: -5.530747413635254

Token 323: ' lock' (ID: 8109)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.645869255065918
    2. ' j' → logprob: -1.770869255065918
    3. 'lock' → logprob: -3.145869255065918
    4. ' l' → logprob: -3.520869255065918
    5. 'l' → logprob: -3.520869255065918
    6. ' acquired' → logprob: -3.520869255065918
    7. 'block' → logprob: -3.770869255065918
    8. 'i' → logprob: -3.895869255065918
    9. 'idx' → logprob: -4.020869255065918
    10. ' block' → logprob: -4.020869255065918

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4375593066215515
    2. ' l' → logprob: -1.0625593662261963
    3. 'in' → logprob: -5.937559127807617
    4. 'l' → logprob: -6.062559127807617
    5. ' that' → logprob: -7.062559127807617
    6. ' acquired' → logprob: -7.187559127807617
    7. ',' → logprob: -7.562559127807617
    8. ' after' → logprob: -8.312559127807617
    9. '   ' → logprob: -8.562559127807617
    10. ' ' → logprob: -8.812559127807617

Token 325: ' block' (ID: 4355)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.16460204124450684
    2. ' blocks' → logprob: -2.539602041244507
    3. 'range' → logprob: -2.789602041244507
    4. ' range' → logprob: -4.539602279663086
    5. 'block' → logprob: -8.289602279663086
    6. '   ' → logprob: -9.664602279663086
    7. '[' → logprob: -9.789602279663086
    8. 'set' → logprob: -10.039602279663086
    9. 'sorted' → logprob: -10.039602279663086
    10. ' acquired' → logprob: -10.164602279663086

Token 326: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07976456731557846
    2. ',' → logprob: -2.9547646045684814
    3. ' i' → logprob: -5.204764366149902
    4. 's' → logprob: -5.704764366149902
    5. '   ' → logprob: -5.954764366149902
    6. ':
' → logprob: -5.954764366149902
    7. '       ' → logprob: -6.079764366149902
    8. ':' → logprob: -6.204764366149902
    9. 'blocks' → logprob: -6.704764366149902
    10. ' blocks' → logprob: -6.954764366149902

Token 327: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2968527674674988
    2. ':' → logprob: -2.1718528270721436
    3. ':
' → logprob: -2.6718528270721436
    4. '           ' → logprob: -3.5468528270721436
    5. '       ' → logprob: -3.6718528270721436
    6. ' for' → logprob: -5.2968525886535645
    7. ' ,' → logprob: -5.5468525886535645
    8. '   ' → logprob: -5.7968525886535645
    9. ' that' → logprob: -5.7968525886535645
    10. ',
' → logprob: -6.4218525886535645

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017995405942201614
    2. '           ' → logprob: -4.642995357513428
    3. ' for' → logprob: -5.392995357513428
    4. '   ' → logprob: -6.767995357513428
    5. ' ' → logprob: -7.267995357513428
    6. '<|end|>' → logprob: -7.267995357513428
    7. ',' → logprob: -7.892995357513428
    8. '        ' → logprob: -8.892995834350586
    9. '               ' → logprob: -9.017995834350586
    10. '    ' → logprob: -9.642995834350586

Token 329: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9252673983573914
    2. '       ' → logprob: -1.0502674579620361
    3. '           ' → logprob: -1.4252674579620361
    4. 'for' → logprob: -4.550267219543457
    5. '   ' → logprob: -6.175267219543457
    6. '               ' → logprob: -8.925267219543457
    7. ' ' → logprob: -9.300267219543457
    8. '        ' → logprob: -9.550267219543457
    9. '    ' → logprob: -9.800267219543457
    10. ',' → logprob: -9.925267219543457

Token 330: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.052067264914512634
    2. 'for' → logprob: -3.677067279815674
    3. '       ' → logprob: -4.552067279815674
    4. ' acquired' → logprob: -4.802067279815674
    5. '           ' → logprob: -6.177067279815674
    6. ' locks' → logprob: -6.802067279815674
    7. ' prev' → logprob: -6.927067279815674
    8. '        ' → logprob: -7.802067279815674
    9. 'locks' → logprob: -7.802067279815674
    10. '   ' → logprob: -7.927067279815674

Token 331: ' thread' (ID: 8591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4785238206386566
    2. ' for' → logprob: -0.978523850440979
    3. '       ' → logprob: -6.3535237312316895
    4. ' acquired' → logprob: -7.4785237312316895
    5. ' next' → logprob: -8.353524208068848
    6. 'next' → logprob: -8.478524208068848
    7. 'prev' → logprob: -8.603524208068848
    8. 'j' → logprob: -8.728524208068848
    9. ' if' → logprob: -8.978524208068848
    10. 'if' → logprob: -9.103524208068848

Token 332: ' tries' (ID: 30519)
  Prédit: ' acqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acqu' → logprob: -1.0868256092071533
    2. ' tries' → logprob: -1.8368256092071533
    3. '       ' → logprob: -2.5868256092071533
    4. ' may' → logprob: -2.7118256092071533
    5. ' might' → logprob: -2.7118256092071533
    6. 'ac' → logprob: -3.2118256092071533
    7. ' for' → logprob: -3.3368256092071533
    8. 'for' → logprob: -3.7118256092071533
    9. ' holds' → logprob: -3.8368256092071533
    10. 'tries' → logprob: -3.8368256092071533

Token 333: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17485857009887695
    2. 'to' → logprob: -1.924858570098877
    3. ' next' → logprob: -5.174858570098877
    4. '   ' → logprob: -6.049858570098877
    5. '       ' → logprob: -6.174858570098877
    6. '    ' → logprob: -6.549858570098877
    7. 'next' → logprob: -6.799858570098877
    8. '           ' → logprob: -7.924858570098877
    9. ' for' → logprob: -8.174858093261719
    10. '        ' → logprob: -8.174858093261719

Token 334: ' acquire' (ID: 25145)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.08084873110055923
    2. ' acquire' → logprob: -2.5808486938476562
    3. 'hold' → logprob: -7.205848693847656
    4. 'lock' → logprob: -8.955848693847656
    5. 'wait' → logprob: -9.080848693847656
    6. '   ' → logprob: -9.205848693847656
    7. 'for' → logprob: -9.580848693847656
    8. ' hold' → logprob: -9.705848693847656
    9. '```' → logprob: -9.705848693847656
    10. '.acquire' → logprob: -9.830848693847656

Token 335: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.7535607814788818
    2. ' the' → logprob: -1.3785607814788818
    3. 'the' → logprob: -2.128560781478882
    4. ' locks' → logprob: -3.378560781478882
    5. ' all' → logprob: -3.628560781478882
    6. 'all' → logprob: -3.878560781478882
    7. ' any' → logprob: -4.503561019897461
    8. ' next' → logprob: -4.628561019897461
    9. 'previous' → logprob: -5.003561019897461
    10. ' previous' → logprob: -5.003561019897461

Token 336: ' in' (ID: 306)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9361531734466553
    2. ' after' → logprob: -2.0611531734466553
    3. 'already' → logprob: -2.4361531734466553
    4. ' later' → logprob: -2.5611531734466553
    5. 'that' → logprob: -2.8111531734466553
    6. ' earlier' → logprob: -3.4361531734466553
    7. ' acquired' → logprob: -3.4361531734466553
    8. ' in' → logprob: -3.5611531734466553
    9. 'ear' → logprob: -3.6861531734466553
    10. 'after' → logprob: -3.6861531734466553

Token 337: ' order' (ID: 2569)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5425577163696289
    2. 'order' → logprob: -1.417557716369629
    3. 'the' → logprob: -2.792557716369629
    4. ' blocks' → logprob: -3.417557716369629
    5. 'range' → logprob: -3.542557716369629
    6. ' order' → logprob: -3.542557716369629
    7. 'sequence' → logprob: -4.292557716369629
    8. ' the' → logprob: -5.667557716369629
    9. 'ac' → logprob: -6.042557716369629
    10. ' range' → logprob: -6.417557716369629

Token 338: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7340978384017944
    2. ',' → logprob: -1.7340978384017944
    3. ' for' → logprob: -3.109097957611084
    4. ' in' → logprob: -3.234097957611084
    5. ' after' → logprob: -3.484097957611084
    6. '   ' → logprob: -3.484097957611084
    7. '           ' → logprob: -3.609097957611084
    8. ' +' → logprob: -3.609097957611084
    9. ' while' → logprob: -3.734097957611084
    10. '[' → logprob: -4.109097957611084

Token 339: ' that' (ID: 484)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.4961421489715576
    2. 'blocks' → logprob: -1.6211421489715576
    3. ' range' → logprob: -2.3711421489715576
    4. 'range' → logprob: -2.6211421489715576
    5. 'the' → logprob: -4.371142387390137
    6. ' the' → logprob: -4.621142387390137
    7. ' acquired' → logprob: -6.246142387390137
    8. 'block' → logprob: -7.246142387390137
    9. 's' → logprob: -7.746142387390137
    10. ' block' → logprob: -8.121142387390137

Token 340: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.6703388094902039
    2. 'block' → logprob: -0.7953388094902039
    3. ' line' → logprob: -4.9203386306762695
    4. 'line' → logprob: -5.0453386306762695
    5. 's' → logprob: -5.7953386306762695
    6. 'i' → logprob: -5.9203386306762695
    7. ' list' → logprob: -6.1703386306762695
    8. 'for' → logprob: -6.4203386306762695
    9. ' i' → logprob: -6.4203386306762695
    10. '[i' → logprob: -6.6703386306762695

Token 341: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16866528987884521
    2. '<|end|>' → logprob: -2.5436654090881348
    3. '   ' → logprob: -3.2936654090881348
    4. ',' → logprob: -4.293665409088135
    5. '           ' → logprob: -5.043665409088135
    6. '<|end|>' → logprob: -5.293665409088135
    7. ' ' → logprob: -5.418665409088135
    8. ' for' → logprob: -6.918665409088135
    9. ' while' → logprob: -7.293665409088135
    10. ':' → logprob: -7.418665409088135

Token 342: ' so' (ID: 813)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.728796124458313
    2. ' i' → logprob: -1.853796124458313
    3. ' ' → logprob: -2.2287960052490234
    4. ' so' → logprob: -2.7287960052490234
    5. '           ' → logprob: -3.1037960052490234
    6. ' but' → logprob: -3.4787960052490234
    7. '       ' → logprob: -3.4787960052490234
    8. 'and' → logprob: -4.478796005249023
    9. '        ' → logprob: -4.603796005249023
    10. '            ' → logprob: -4.603796005249023

Token 343: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5326535701751709
    2. 'for' → logprob: -1.032653570175171
    3. ' acquired' → logprob: -4.03265380859375
    4. '       ' → logprob: -4.65765380859375
    5. ' held' → logprob: -5.15765380859375
    6. ' prev' → logprob: -5.28265380859375
    7. 'prev' → logprob: -5.65765380859375
    8. ' last' → logprob: -6.03265380859375
    9. '           ' → logprob: -6.03265380859375
    10. 'held' → logprob: -6.15765380859375

Token 344: ' subsequent' (ID: 29068)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43425294756889343
    2. ' j' → logprob: -1.0592529773712158
    3. ' idx' → logprob: -6.559252738952637
    4. 'idx' → logprob: -6.684252738952637
    5. 'range' → logprob: -7.559252738952637
    6. '   ' → logprob: -7.684252738952637
    7. ' range' → logprob: -7.934252738952637
    8. ' ' → logprob: -8.184252738952637
    9. 'prev' → logprob: -8.309252738952637
    10. 'k' → logprob: -8.309252738952637

Token 345: ' locks' (ID: 50098)
  Prédit: ' locks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' locks' → logprob: -0.574465811252594
    2. 'locks' → logprob: -1.6994657516479492
    3. ' l' → logprob: -2.074465751647949
    4. '_l' → logprob: -3.449465751647949
    5. ' lock' → logprob: -3.699465751647949
    6. ' _' → logprob: -4.324465751647949
    7. '_lock' → logprob: -4.449465751647949
    8. ' tokens' → logprob: -4.574465751647949
    9. '_' → logprob: -4.699465751647949
    10. 'lock' → logprob: -5.074465751647949

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5493711829185486
    2. ',' → logprob: -1.0493712425231934
    3. '       ' → logprob: -3.7993712425231934
    4. ' ,' → logprob: -4.424371242523193
    5. '<|end|>' → logprob: -4.924371242523193
    6. '   ' → logprob: -5.299371242523193
    7. '[' → logprob: -5.424371242523193
    8. '[i' → logprob: -5.549371242523193
    9. '<|end|>' → logprob: -5.799371242523193
    10. '           ' → logprob: -5.799371242523193

Token 347: ' the' (ID: 290)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.3264981806278229
    2. 'the' → logprob: -2.07649827003479
    3. ' blocks' → logprob: -2.82649827003479
    4. 'range' → logprob: -3.07649827003479
    5. ' the' → logprob: -3.95149827003479
    6. 'block' → logprob: -4.451498031616211
    7. ' range' → logprob: -4.951498031616211
    8. 'that' → logprob: -5.576498031616211
    9. ' that' → logprob: -5.951498031616211
    10. '   ' → logprob: -6.576498031616211

Token 348: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.13696083426475525
    2. 'blocks' → logprob: -2.636960744857788
    3. 'list' → logprob: -3.636960744857788
    4. 'ac' → logprob: -5.136960983276367
    5. ' list' → logprob: -5.136960983276367
    6. ' block' → logprob: -5.261960983276367
    7. 'same' → logprob: -5.636960983276367
    8. 'range' → logprob: -5.761960983276367
    9. ' blocks' → logprob: -6.636960983276367
    10. 'current' → logprob: -6.636960983276367

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27820172905921936
    2. '<|end|>' → logprob: -2.4032018184661865
    3. '       ' → logprob: -2.5282018184661865
    4. '           ' → logprob: -3.7782018184661865
    5. ' in' → logprob: -4.403201580047607
    6. ' ,' → logprob: -4.778201580047607
    7. '<|end|>' → logprob: -4.778201580047607
    8. ':' → logprob: -5.153201580047607
    9. '   ' → logprob: -5.903201580047607
    10. '               ' → logprob: -6.653201580047607

Token 350: ' 
' (ID: 793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.877590537071228
    2. '       ' → logprob: -2.0025906562805176
    3. '<|end|>' → logprob: -2.1275906562805176
    4. ' if' → logprob: -2.2525906562805176
    5. ' i' → logprob: -3.2525906562805176
    6. ' g' → logprob: -3.6275906562805176
    7. '        ' → logprob: -3.7525906562805176
    8. '            ' → logprob: -3.8775906562805176
    9. ' ' → logprob: -4.502590656280518
    10. ' for' → logprob: -4.627590656280518

Token 351: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6037851572036743
    2. ' ' → logprob: -1.3537851572036743
    3. '            ' → logprob: -2.3537850379943848
    4. '               ' → logprob: -4.103785037994385
    5. '       ' → logprob: -4.478785037994385
    6. ' i' → logprob: -4.478785037994385
    7. '<|end|>' → logprob: -4.478785037994385
    8. ' 
' → logprob: -4.728785037994385
    9. '        ' → logprob: -4.978785037994385
    10. ' continue' → logprob: -5.228785037994385

Token 352: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4212678074836731
    2. 'for' → logprob: -2.0462677478790283
    3. ' for' → logprob: -2.4212677478790283
    4. '       ' → logprob: -3.1712677478790283
    5. ' i' → logprob: -4.296267986297607
    6. '               ' → logprob: -4.421267986297607
    7. ' if' → logprob: -4.671267986297607
    8. 'i' → logprob: -5.296267986297607
    9. '   ' → logprob: -5.296267986297607
    10. ' ' → logprob: -5.296267986297607

Token 353: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2697034776210785
    2. ' for' → logprob: -1.6447035074234009
    3. 'if' → logprob: -4.144703388214111
    4. ' if' → logprob: -4.644703388214111
    5. '       ' → logprob: -5.019703388214111
    6. 'prev' → logprob: -5.519703388214111
    7. '           ' → logprob: -5.894703388214111
    8. ' acquired' → logprob: -6.519703388214111
    9. 'pass' → logprob: -7.644703388214111
    10. ' prev' → logprob: -7.769703388214111

Token 354: ' thread' (ID: 8591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7996480464935303
    2. ' for' → logprob: -1.4246480464935303
    3. 'previous' → logprob: -2.6746480464935303
    4. ' next' → logprob: -3.9246480464935303
    5. ' previous' → logprob: -3.9246480464935303
    6. 'next' → logprob: -4.049648284912109
    7. 'first' → logprob: -4.049648284912109
    8. ' code' → logprob: -4.049648284912109
    9. '       ' → logprob: -4.174648284912109
    10. ' first' → logprob: -4.299648284912109

Token 355: ' holds' (ID: 18305)
  Prédit: ' tries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tries' → logprob: -0.5686945915222168
    2. ' acqu' → logprob: -2.068694591522217
    3. 'tries' → logprob: -2.943694591522217
    4. ' waits' → logprob: -3.068694591522217
    5. '   ' → logprob: -3.318694591522217
    6. ' ' → logprob: -3.693694591522217
    7. ' continues' → logprob: -3.693694591522217
    8. '       ' → logprob: -4.068694591522217
    9. '    ' → logprob: -4.193694591522217
    10. 'ac' → logprob: -4.443694591522217

Token 356: ' previous' (ID: 5880)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.29181307554244995
    2. 'blocks' → logprob: -2.4168131351470947
    3. 'locks' → logprob: -2.5418131351470947
    4. ' the' → logprob: -3.9168131351470947
    5. ' locks' → logprob: -4.041812896728516
    6. ' previous' → logprob: -4.916812896728516
    7. 'the' → logprob: -5.041812896728516
    8. ' acquired' → logprob: -5.166812896728516
    9. ' l' → logprob: -5.666812896728516
    10. '[' → logprob: -5.791812896728516

Token 357: ' locks' (ID: 50098)
  Prédit: ' locks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' locks' → logprob: -1.0036417245864868
    2. ' _' → logprob: -1.6286417245864868
    3. 'locks' → logprob: -1.6286417245864868
    4. '_' → logprob: -2.0036416053771973
    5. '_l' → logprob: -2.5036416053771973
    6. '_lock' → logprob: -4.753641605377197
    7. ' ' → logprob: -6.378641605377197
    8. ' blocks' → logprob: -6.378641605377197
    9. '_tokens' → logprob: -6.378641605377197
    10. ' lock' → logprob: -6.503641605377197

Token 358: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3589630722999573
    2. '   ' → logprob: -1.3589630126953125
    3. ' for' → logprob: -4.1089630126953125
    4. ',' → logprob: -4.6089630126953125
    5. 'for' → logprob: -5.8589630126953125
    6. '        
' → logprob: -5.9839630126953125
    7. '<|end|>' → logprob: -6.3589630126953125
    8. '    
' → logprob: -6.4839630126953125
    9. ':' → logprob: -6.7339630126953125
    10. '
' → logprob: -6.7339630126953125

Token 359: ' tries' (ID: 30519)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.696310818195343
    2. ' waits' → logprob: -1.8213107585906982
    3. 'tries' → logprob: -2.0713107585906982
    4. ' for' → logprob: -2.9463107585906982
    5. ' tries' → logprob: -3.3213107585906982
    6. 'wait' → logprob: -4.071310997009277
    7. '   ' → logprob: -4.071310997009277
    8. '       ' → logprob: -4.321310997009277
    9. '           ' → logprob: -4.321310997009277
    10. 'adds' → logprob: -4.321310997009277

Token 360: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14682306349277496
    2. ' to' → logprob: -2.0218231678009033
    3. '       ' → logprob: -6.771822929382324
    4. '           ' → logprob: -7.021822929382324
    5. '   ' → logprob: -7.271822929382324
    6. '        ' → logprob: -7.271822929382324
    7. '    ' → logprob: -8.396822929382324
    8. '            ' → logprob: -9.021822929382324
    9. '          ' → logprob: -9.521822929382324
    10. ' ' → logprob: -10.021822929382324

Token 361: ' acquire' (ID: 25145)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.11367727816104889
    2. ' acquire' → logprob: -2.2386772632598877
    3. 'wait' → logprob: -8.363677024841309
    4. 'get' → logprob: -8.613677024841309
    5. '.acquire' → logprob: -9.238677024841309
    6. 'lock' → logprob: -9.488677024841309
    7. '   ' → logprob: -10.238677024841309
    8. ' ' → logprob: -10.238677024841309
    9. ' ac' → logprob: -10.613677024841309
    10. 'hold' → logprob: -10.988677024841309

Token 362: ' next' (ID: 2613)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.553700864315033
    2. ' subsequent' → logprob: -1.3037009239196777
    3. ' next' → logprob: -2.9287009239196777
    4. 'the' → logprob: -3.4287009239196777
    5. ' locks' → logprob: -4.178700923919678
    6. ' ' → logprob: -4.303700923919678
    7. 'locks' → logprob: -4.928700923919678
    8. ' previous' → logprob: -4.928700923919678
    9. ' them' → logprob: -5.053700923919678
    10. ' blocks' → logprob: -5.428700923919678

Token 363: ' lock' (ID: 8109)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -1.8914086818695068
    2. '_token' → logprob: -2.016408681869507
    3. ' locks' → logprob: -2.141408681869507
    4. 'token' → logprob: -2.266408681869507
    5. '_lock' → logprob: -2.391408681869507
    6. ' token' → logprob: -2.766408681869507
    7. '           ' → logprob: -2.891408681869507
    8. '_tokens' → logprob: -3.266408681869507
    9. 'lock' → logprob: -3.391408681869507
    10. ' lock' → logprob: -3.641408681869507

Token 364: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02255876176059246
    2. ',' → logprob: -4.522558689117432
    3. '           ' → logprob: -5.897558689117432
    4. '        
' → logprob: -5.897558689117432
    5. '<|end|>' → logprob: -6.772558689117432
    6. ' for' → logprob: -6.772558689117432
    7. '   ' → logprob: -7.022558689117432
    8. '.' → logprob: -7.397558689117432
    9. ' in' → logprob: -8.02255916595459
    10. '<|end|>' → logprob: -8.02255916595459

Token 365: ' generating' (ID: 36766)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.1281144618988037
    2. '           ' → logprob: -1.3781144618988037
    3. ' i' → logprob: -2.1281144618988037
    4. '       ' → logprob: -2.5031144618988037
    5. ' ' → logprob: -3.2531144618988037
    6. '        
' → logprob: -3.2531144618988037
    7. ' and' → logprob: -3.5031144618988037
    8. ' which' → logprob: -3.6281144618988037
    9. '        ' → logprob: -4.003114700317383
    10. '            ' → logprob: -4.503114700317383

Token 366: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3701474666595459
    2. 'edges' → logprob: -1.620147466659546
    3. 'wait' → logprob: -3.120147466659546
    4. ' wait' → logprob: -3.495147466659546
    5. ' an' → logprob: -3.620147466659546
    6. 'an' → logprob: -5.245147705078125
    7. 'dependencies' → logprob: -6.745147705078125
    8. ' dependencies' → logprob: -6.995147705078125
    9. ' waits' → logprob: -7.995147705078125
    10. 'lock' → logprob: -8.245147705078125

Token 367: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3686216473579407
    2. ' for' → logprob: -1.868621587753296
    3. ' from' → logprob: -2.743621587753296
    4. 'from' → logprob: -3.493621587753296
    5. 'for' → logprob: -4.118621826171875
    6. ' in' → logprob: -4.368621826171875
    7. '   ' → logprob: -4.618621826171875
    8. '           ' → logprob: -4.743621826171875
    9. ' between' → logprob: -5.618621826171875
    10. '        
' → logprob: -6.243621826171875

Token 368: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003346920944750309
    2. '   ' → logprob: -6.128346920013428
    3. ' for' → logprob: -7.628346920013428
    4. ' ' → logprob: -8.878347396850586
    5. 'for' → logprob: -9.128347396850586
    6. '           ' → logprob: -9.128347396850586
    7. '        
' → logprob: -9.128347396850586
    8. ',' → logprob: -10.378347396850586
    9. '  
' → logprob: -10.628347396850586
    10. '```' → logprob: -10.878347396850586

Token 369: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12056880444288254
    2. ' for' → logprob: -2.4955687522888184
    3. 'for' → logprob: -3.4955687522888184
    4. '           ' → logprob: -8.370569229125977
    5. '```' → logprob: -8.620569229125977
    6. 'prev' → logprob: -8.870569229125977
    7. '        
' → logprob: -9.495569229125977
    8. '   ' → logprob: -9.620569229125977
    9. ' prev' → logprob: -10.495569229125977
    10. 'locks' → logprob: -11.245569229125977

Token 370: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18147233128547668
    2. ' for' → logprob: -1.9314723014831543
    3. 'for' → logprob: -3.9314723014831543
    4. '   ' → logprob: -6.806472301483154
    5. ' ' → logprob: -8.931472778320312
    6. '           ' → logprob: -9.681472778320312
    7. '    ' → logprob: -9.806472778320312
    8. '        ' → logprob: -11.306472778320312
    9. '      ' → logprob: -11.931472778320312
    10. '     ' → logprob: -11.931472778320312

Token 371: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04809305816888809
    2. ' for' → logprob: -3.67309308052063
    3. 'for' → logprob: -4.423092842102051
    4. '   ' → logprob: -4.798092842102051
    5. '           ' → logprob: -7.673092842102051
    6. '    ' → logprob: -8.17309284210205
    7. ' of' → logprob: -8.79809284210205
    8. '      ' → logprob: -9.67309284210205
    9. '        ' → logprob: -9.79809284210205
    10. '        
' → logprob: -10.17309284210205

Token 372: ' modeling' (ID: 44384)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6414243578910828
    2. ' for' → logprob: -1.1414244174957275
    3. '       ' → logprob: -1.8914244174957275
    4. '   ' → logprob: -6.016424179077148
    5. '```' → logprob: -7.766424179077148
    6. 'prev' → logprob: -9.141424179077148
    7. ' ' → logprob: -9.891424179077148
    8. '    ' → logprob: -10.266424179077148
    9. 'range' → logprob: -10.391424179077148
    10. '
' → logprob: -10.516424179077148

Token 373: ' threads' (ID: 29249)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10303862392902374
    2. 'for' → logprob: -2.9780385494232178
    3. ' for' → logprob: -3.1030385494232178
    4. '   ' → logprob: -6.478038787841797
    5. '           ' → logprob: -8.103038787841797
    6. ' ' → logprob: -9.978038787841797
    7. '        
' → logprob: -10.228038787841797
    8. '        ' → logprob: -10.978038787841797
    9. '    ' → logprob: -10.978038787841797
    10. '               ' → logprob: -10.978038787841797

Token 374: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02090958133339882
    2. '   ' → logprob: -4.395909786224365
    3. ' for' → logprob: -5.395909786224365
    4. 'for' → logprob: -6.395909786224365
    5. '        
' → logprob: -7.645909786224365
    6. '<|end|>' → logprob: -7.770909786224365
    7. ',' → logprob: -7.895909786224365
    8. ' =' → logprob: -9.020909309387207
    9. '           ' → logprob: -9.020909309387207
    10. ' ' → logprob: -9.395909309387207

Token 375: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6713019609451294
    2. '       ' → logprob: -0.9213019609451294
    3. 'for' → logprob: -2.42130184173584
    4. '   ' → logprob: -6.67130184173584
    5. ' ' → logprob: -8.54630184173584
    6. '           ' → logprob: -8.67130184173584
    7. '        ' → logprob: -9.67130184173584
    8. ' j' → logprob: -9.67130184173584
    9. '```' → logprob: -9.79630184173584
    10. '        
' → logprob: -10.04630184173584

Token 376: ' model' (ID: 2359)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6103535890579224
    2. ' for' → logprob: -1.1103535890579224
    3. '       ' → logprob: -2.110353469848633
    4. '   ' → logprob: -5.360353469848633
    5. ' continue' → logprob: -7.360353469848633
    6. 'continue' → logprob: -7.860353469848633
    7. '
' → logprob: -8.735353469848633
    8. ' ' → logprob: -9.735353469848633
    9. ' can' → logprob: -9.735353469848633
    10. '        
' → logprob: -10.485353469848633

Token 377: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8863236904144287
    2. ' for' → logprob: -1.3863236904144287
    3. '       ' → logprob: -1.6363236904144287
    4. '   ' → logprob: -2.3863236904144287
    5. ' the' → logprob: -3.6363236904144287
    6. 'locks' → logprob: -4.761323928833008
    7. 'the' → logprob: -5.011323928833008
    8. ' each' → logprob: -6.136323928833008
    9. 'each' → logprob: -6.261323928833008
    10. ' locks' → logprob: -6.636323928833008

Token 378: ' lock' (ID: 8109)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5610621571540833
    2. '       ' → logprob: -1.4360620975494385
    3. ' for' → logprob: -1.6860620975494385
    4. '   ' → logprob: -5.311062335968018
    5. ' ' → logprob: -7.311062335968018
    6. '```' → logprob: -9.18606185913086
    7. '
' → logprob: -9.68606185913086
    8. '        
' → logprob: -9.68606185913086
    9. 'prev' → logprob: -9.68606185913086
    10. '        ' → logprob: -10.06106185913086

Token 379: ' allocation' (ID: 45311)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6649990677833557
    2. '   ' → logprob: -0.7899990677833557
    3. ' for' → logprob: -4.164999008178711
    4. 'for' → logprob: -5.164999008178711
    5. '    
' → logprob: -6.289999008178711
    6. '        
' → logprob: -6.289999008178711
    7. '<|end|>' → logprob: -6.664999008178711
    8. ' ' → logprob: -7.039999008178711
    9. ')' → logprob: -7.539999008178711
    10. '           ' → logprob: -7.539999008178711

Token 380: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17551732063293457
    2. '   ' → logprob: -2.0505173206329346
    3. 'for' → logprob: -4.1755170822143555
    4. ' for' → logprob: -5.0505170822143555
    5. '        
' → logprob: -5.6755170822143555
    6. '    
' → logprob: -6.4255170822143555
    7. '
' → logprob: -6.9255170822143555
    8. '[i' → logprob: -7.6755170822143555
    9. '           ' → logprob: -7.9255170822143555
    10. '<|end|>' → logprob: -7.9255170822143555

Token 381: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004509869497269392
    2. ' for' → logprob: -5.879509925842285
    3. 'for' → logprob: -6.629509925842285
    4. '   ' → logprob: -8.254509925842285
    5. '           ' → logprob: -10.129509925842285
    6. '        
' → logprob: -10.504509925842285
    7. ' ' → logprob: -11.629509925842285
    8. ',' → logprob: -11.629509925842285
    9. '      ' → logprob: -12.004509925842285
    10. '    ' → logprob: -12.379509925842285

Token 382: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01724568009376526
    2. ' for' → logprob: -5.017245769500732
    3. '   ' → logprob: -5.267245769500732
    4. 'for' → logprob: -6.017245769500732
    5. '           ' → logprob: -7.142245769500732
    6. '        
' → logprob: -7.142245769500732
    7. ' ' → logprob: -8.517245292663574
    8. '
' → logprob: -8.767245292663574
    9. '    
' → logprob: -9.017245292663574
    10. '  
' → logprob: -9.267245292663574

Token 383: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8571770787239075
    2. ' for' → logprob: -0.9821770787239075
    3. '       ' → logprob: -1.6071770191192627
    4. '   ' → logprob: -8.232176780700684
    5. 'pass' → logprob: -9.232176780700684
    6. ' pass' → logprob: -9.357176780700684
    7. '           ' → logprob: -9.732176780700684
    8. '```' → logprob: -9.982176780700684
    9. ' ' → logprob: -10.732176780700684
    10. 'prev' → logprob: -11.107176780700684

Token 384: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6263787746429443
    2. ' for' → logprob: -0.8763787746429443
    3. 'for' → logprob: -3.2513787746429443
    4. '   ' → logprob: -5.501379013061523
    5. '        ' → logprob: -6.126379013061523
    6. '    ' → logprob: -6.501379013061523
    7. ' ' → logprob: -6.626379013061523
    8. '           ' → logprob: -7.001379013061523
    9. '```' → logprob: -9.501379013061523
    10. '  ' → logprob: -9.876379013061523

Token 385: ' each' (ID: 2454)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.30622589588165283
    2. 'j' → logprob: -2.4312257766723633
    3. '       ' → logprob: -2.5562257766723633
    4. ' for' → logprob: -3.9312257766723633
    5. '   ' → logprob: -4.056225776672363
    6. ' idx' → logprob: -4.181225776672363
    7. ' l' → logprob: -4.806225776672363
    8. ' block' → logprob: -5.056225776672363
    9. ' i' → logprob: -5.056225776672363
    10. 'for' → logprob: -5.306225776672363

Token 386: ' block' (ID: 4355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7099403142929077
    2. 'for' → logprob: -0.7099403142929077
    3. '   ' → logprob: -5.334940433502197
    4. '       ' → logprob: -5.834940433502197
    5. 'b' → logprob: -6.209940433502197
    6. 'j' → logprob: -6.459940433502197
    7. ' j' → logprob: -7.084940433502197
    8. 'block' → logprob: -7.209940433502197
    9. 'range' → logprob: -7.334940433502197
    10. ' block' → logprob: -7.459940433502197

Token 387: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2744302749633789
    2. 'for' → logprob: -2.024430274963379
    3. ' =' → logprob: -3.024430274963379
    4. ' for' → logprob: -3.399430274963379
    5. '   ' → logprob: -4.399430274963379
    6. '[i' → logprob: -5.524430274963379
    7. ' in' → logprob: -6.399430274963379
    8. '        
' → logprob: -6.649430274963379
    9. ',' → logprob: -7.149430274963379
    10. '           ' → logprob: -7.274430274963379

Token 388: ' locks' (ID: 50098)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2555624842643738
    2. 'for' → logprob: -2.1305625438690186
    3. '       ' → logprob: -2.2555625438690186
    4. ' prev' → logprob: -7.8805623054504395
    5. 'locks' → logprob: -8.005562782287598
    6. 'prev' → logprob: -8.255562782287598
    7. '   ' → logprob: -8.505562782287598
    8. ' locks' → logprob: -9.005562782287598
    9. '        ' → logprob: -9.130562782287598
    10. '           ' → logprob: -9.255562782287598

Token 389: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8407636880874634
    2. '=' → logprob: -1.3407636880874634
    3. '[i' → logprob: -1.7157636880874634
    4. ' in' → logprob: -3.090763568878174
    5. '   ' → logprob: -3.715763568878174
    6. '       ' → logprob: -4.090763568878174
    7. 'for' → logprob: -4.465763568878174
    8. 'in' → logprob: -4.840763568878174
    9. '=[]' → logprob: -5.340763568878174
    10. '=[' → logprob: -6.215763568878174

Token 390: ' acquired' (ID: 27937)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5837234854698181
    2. ' acquired' → logprob: -1.208723545074463
    3. '   ' → logprob: -2.708723545074463
    4. '       ' → logprob: -3.458723545074463
    5. 'for' → logprob: -4.458723545074463
    6. ' for' → logprob: -5.333723545074463
    7. ' ac' → logprob: -5.458723545074463
    8. ' in' → logprob: -5.833723545074463
    9. 'in' → logprob: -6.083723545074463
    10. 'held' → logprob: -6.083723545074463

Token 391: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3554488718509674
    2. 'for' → logprob: -2.1054489612579346
    3. 'in' → logprob: -2.4804489612579346
    4. ' for' → logprob: -2.9804489612579346
    5. '       ' → logprob: -3.8554489612579346
    6. '   ' → logprob: -4.7304487228393555
    7. '[j' → logprob: -4.8554487228393555
    8. '[i' → logprob: -6.7304487228393555
    9. '[' → logprob: -6.9804487228393555
    10. ',' → logprob: -7.6054487228393555

Token 392: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4522245228290558
    2. 'range' → logprob: -1.5772244930267334
    3. ' order' → logprob: -2.2022244930267334
    4. ' range' → logprob: -4.0772247314453125
    5. 'sequence' → logprob: -4.4522247314453125
    6. 'the' → logprob: -4.7022247314453125
    7. '   ' → logprob: -6.0772247314453125
    8. 'enumer' → logprob: -6.3272247314453125
    9. ' the' → logprob: -6.7022247314453125
    10. 'a' → logprob: -7.4522247314453125

Token 393: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02547425590455532
    2. 'for' → logprob: -4.4004740715026855
    3. ' for' → logprob: -4.4004740715026855
    4. ',' → logprob: -8.650474548339844
    5. '
' → logprob: -9.025474548339844
    6. '   ' → logprob: -9.150474548339844
    7. '        
' → logprob: -9.525474548339844
    8. '           ' → logprob: -10.150474548339844
    9. '```' → logprob: -10.400474548339844
    10. 'prev' → logprob: -11.525474548339844

Token 394: ' so' (ID: 813)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4200321435928345
    2. 'for' → logprob: -1.4200321435928345
    3. '       ' → logprob: -2.295032024383545
    4. '           ' → logprob: -8.170032501220703
    5. '   ' → logprob: -9.295032501220703
    6. 'prev' → logprob: -10.170032501220703
    7. ' ' → logprob: -11.170032501220703
    8. '        
' → logprob: -11.420032501220703
    9. '      ' → logprob: -11.545032501220703
    10. '        ' → logprob: -11.670032501220703

Token 395: ' within' (ID: 3518)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29014450311660767
    2. '       ' → logprob: -1.665144443511963
    3. 'for' → logprob: -2.790144443511963
    4. '           ' → logprob: -7.415144443511963
    5. '   ' → logprob: -8.040144920349121
    6. '    ' → logprob: -9.540144920349121
    7. '        ' → logprob: -9.540144920349121
    8. ' ' → logprob: -9.915144920349121
    9. 'n' → logprob: -10.540144920349121
    10. 'prev' → logprob: -10.540144920349121

Token 396: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.136055827140808
    2. 'range' → logprob: -1.761055827140808
    3. ' the' → logprob: -2.1360559463500977
    4. '       ' → logprob: -2.1360559463500977
    5. 'the' → logprob: -2.2610559463500977
    6. ' range' → logprob: -2.7610559463500977
    7. 'for' → logprob: -3.0110559463500977
    8. 'block' → logprob: -4.511055946350098
    9. 'blocks' → logprob: -4.511055946350098
    10. ' blocks' → logprob: -4.636055946350098

Token 397: ' block' (ID: 4355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46652841567993164
    2. 'block' → logprob: -1.3415284156799316
    3. 'range' → logprob: -3.5915284156799316
    4. ' for' → logprob: -3.8415284156799316
    5. 'b' → logprob: -3.9665284156799316
    6. '   ' → logprob: -4.341528415679932
    7. 'blocks' → logprob: -4.466528415679932
    8. '       ' → logprob: -4.966528415679932
    9. ' block' → logprob: -5.091528415679932
    10. ' range' → logprob: -6.591528415679932

Token 398: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04192567989230156
    2. ',' → logprob: -3.7919256687164307
    3. ' for' → logprob: -4.91692590713501
    4. ':' → logprob: -5.54192590713501
    5. 'for' → logprob: -5.66692590713501
    6. '   ' → logprob: -5.91692590713501
    7. ':
' → logprob: -8.166925430297852
    8. '           ' → logprob: -8.291925430297852
    9. '
' → logprob: -9.541925430297852
    10. '        
' → logprob: -9.541925430297852

Token 399: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13227617740631104
    2. ' for' → logprob: -2.3822760581970215
    3. 'for' → logprob: -3.5072760581970215
    4. '           ' → logprob: -7.0072760581970215
    5. '   ' → logprob: -7.7572760581970215
    6. '```' → logprob: -10.00727653503418
    7. '    ' → logprob: -10.50727653503418
    8. ',' → logprob: -10.50727653503418
    9. '     ' → logprob: -10.63227653503418
    10. '      ' → logprob: -10.75727653503418

Token 400: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5870541334152222
    2. '       ' → logprob: -1.3370541334152222
    3. 'for' → logprob: -1.7120541334152222
    4. '           ' → logprob: -7.962054252624512
    5. '   ' → logprob: -8.087054252624512
    6. '    ' → logprob: -9.837054252624512
    7. '        ' → logprob: -10.212054252624512
    8. 'prev' → logprob: -10.337054252624512
    9. '```' → logprob: -10.462054252624512
    10. ' prev' → logprob: -10.837054252624512

Token 401: ' lock' (ID: 8109)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33881881833076477
    2. 'for' → logprob: -1.3388187885284424
    3. '       ' → logprob: -3.7138187885284424
    4. 'prev' → logprob: -7.9638190269470215
    5. '   ' → logprob: -8.338818550109863
    6. ' prev' → logprob: -8.713818550109863
    7. '    ' → logprob: -10.338818550109863
    8. '           ' → logprob: -11.088818550109863
    9. ' ' → logprob: -11.463818550109863
    10. '        ' → logprob: -11.713818550109863

Token 402: ' acquired' (ID: 27937)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.276155710220337
    2. 's' → logprob: -1.401155710220337
    3. ' A' → logprob: -2.776155710220337
    4. ' for' → logprob: -2.776155710220337
    5. 'for' → logprob: -2.901155710220337
    6. '_a' → logprob: -3.026155710220337
    7. ' in' → logprob: -3.276155710220337
    8. '_' → logprob: -4.026155471801758
    9. '   ' → logprob: -4.026155471801758
    10. 'from' → logprob: -4.151155471801758

Token 403: ' later' (ID: 4849)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3139113187789917
    2. 'for' → logprob: -1.5639113187789917
    3. ' in' → logprob: -1.6889113187789917
    4. ' =' → logprob: -1.8139113187789917
    5. ' for' → logprob: -2.9389114379882812
    6. '   ' → logprob: -3.1889114379882812
    7. 'in' → logprob: -3.8139114379882812
    8. ' at' → logprob: -4.688911437988281
    9. '       ' → logprob: -5.188911437988281
    10. '[i' → logprob: -5.188911437988281

Token 404: ' waits' (ID: 99777)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7759100198745728
    2. ' for' → logprob: -1.2759100198745728
    3. '       ' → logprob: -2.025909900665283
    4. '   ' → logprob: -2.900909900665283
    5. ' in' → logprob: -3.775909900665283
    6. '           ' → logprob: -4.025909900665283
    7. ' =' → logprob: -4.775909900665283
    8. ':' → logprob: -5.400909900665283
    9. ',' → logprob: -5.400909900665283
    10. '[i' → logprob: -5.900909900665283

Token 405: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4970289170742035
    2. ' for' → logprob: -0.9970289468765259
    3. '_for' → logprob: -4.372028827667236
    4. '   ' → logprob: -4.747028827667236
    5. '       ' → logprob: -7.622028827667236
    6. '    ' → logprob: -7.997028827667236
    7. ' ' → logprob: -8.497029304504395
    8. 'For' → logprob: -9.122029304504395
    9. '  ' → logprob: -10.122029304504395
    10. ' For' → logprob: -10.372029304504395

Token 406: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.1331627517938614
    2. 'lock' → logprob: -2.3831627368927
    3. ' the' → logprob: -4.383162975311279
    4. ' locks' → logprob: -5.508162975311279
    5. ' lock' → logprob: -5.758162975311279
    6. 'ear' → logprob: -5.758162975311279
    7. 'all' → logprob: -5.758162975311279
    8. 'the' → logprob: -6.133162975311279
    9. 'previous' → logprob: -6.633162975311279
    10. ' all' → logprob: -6.633162975311279

Token 407: ' held' (ID: 7504)
  Prédit: ' acquired'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acquired' → logprob: -1.3825558423995972
    2. ' in' → logprob: -1.7575558423995972
    3. '[i' → logprob: -2.1325559616088867
    4. 'ac' → logprob: -2.1325559616088867
    5. '[' → logprob: -2.5075559616088867
    6. '   ' → logprob: -2.7575559616088867
    7. 'in' → logprob: -3.5075559616088867
    8. '       ' → logprob: -3.5075559616088867
    9. ' that' → logprob: -4.007555961608887
    10. '[j' → logprob: -4.132555961608887

Token 408: ' earlier' (ID: 11965)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.592823326587677
    2. '       ' → logprob: -1.5928232669830322
    3. 'for' → logprob: -1.5928232669830322
    4. '[i' → logprob: -3.8428232669830322
    5. ' for' → logprob: -4.717823505401611
    6. '[' → logprob: -6.217823505401611
    7. '    ' → logprob: -6.592823505401611
    8. 'by' → logprob: -6.967823505401611
    9. '           ' → logprob: -7.217823505401611
    10. 'from' → logprob: -7.342823505401611

Token 409: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006604056339710951
    2. '   ' → logprob: -5.131604194641113
    3. ' for' → logprob: -8.381604194641113
    4. 'for' → logprob: -8.506604194641113
    5. '
' → logprob: -9.006604194641113
    6. '           ' → logprob: -10.006604194641113
    7. ',' → logprob: -10.881604194641113
    8. '        
' → logprob: -11.131604194641113
    9. '```' → logprob: -11.881604194641113
    10. '    ' → logprob: -12.006604194641113

Token 410: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1346011608839035
    2. 'that' → logprob: -2.88460111618042
    3. ' the' → logprob: -3.13460111618042
    4. ' that' → logprob: -4.75960111618042
    5. 'range' → logprob: -5.38460111618042
    6. 'block' → logprob: -5.38460111618042
    7. 'blocks' → logprob: -5.63460111618042
    8. '   ' → logprob: -6.13460111618042
    9. '       ' → logprob: -7.50960111618042
    10. ' range' → logprob: -7.50960111618042

Token 411: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.028997834771871567
    2. ' block' → logprob: -3.7789978981018066
    3. 'blocks' → logprob: -6.653997898101807
    4. '[i' → logprob: -7.028997898101807
    5. '   ' → logprob: -7.278997898101807
    6. 'list' → logprob: -7.903997898101807
    7. 'ac' → logprob: -7.903997898101807
    8. 'order' → logprob: -8.153997421264648
    9. 'same' → logprob: -8.528997421264648
    10. ' ' → logprob: -8.528997421264648

Token 412: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011158527806401253
    2. '   ' → logprob: -5.136158466339111
    3. ' for' → logprob: -5.761158466339111
    4. 'for' → logprob: -6.261158466339111
    5. '           ' → logprob: -10.26115894317627
    6. '
' → logprob: -10.63615894317627
    7. '        
' → logprob: -10.88615894317627
    8. ',' → logprob: -11.01115894317627
    9. '      ' → logprob: -11.63615894317627
    10. '    ' → logprob: -11.63615894317627

Token 413: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037638552021235228
    2. 'for' → logprob: -6.503763675689697
    3. ' for' → logprob: -6.503763675689697
    4. '   ' → logprob: -7.378763675689697
    5. '           ' → logprob: -9.378764152526855
    6. '```' → logprob: -10.753764152526855
    7. '        
' → logprob: -11.628764152526855
    8. '     ' → logprob: -12.503764152526855
    9. '    ' → logprob: -13.128764152526855
    10. '        ' → logprob: -13.253764152526855

Token 414: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009993823245167732
    2. '   ' → logprob: -4.884994029998779
    3. ' for' → logprob: -6.384994029998779
    4. 'for' → logprob: -7.384994029998779
    5. '           ' → logprob: -10.634993553161621
    6. '    ' → logprob: -11.384993553161621
    7. '
' → logprob: -11.509993553161621
    8. '     ' → logprob: -11.759993553161621
    9. '        
' → logprob: -11.759993553161621
    10. '  ' → logprob: -12.509993553161621

Token 415: ' Outside' (ID: 67126)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07207345962524414
    2. 'for' → logprob: -3.197073459625244
    3. ' for' → logprob: -3.572073459625244
    4. '   ' → logprob: -7.572073459625244
    5. '           ' → logprob: -10.572072982788086
    6. '```' → logprob: -12.572072982788086
    7. '     ' → logprob: -12.697072982788086
    8. '    ' → logprob: -12.822072982788086
    9. '      ' → logprob: -12.822072982788086
    10. '
' → logprob: -13.447072982788086

Token 416: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12834018468856812
    2. 'for' → logprob: -3.003340244293213
    3. ' for' → logprob: -3.253340244293213
    4. '   ' → logprob: -3.503340244293213
    5. ' of' → logprob: -7.128340244293213
    6. '           ' → logprob: -8.253339767456055
    7. ':' → logprob: -8.503339767456055
    8. '[i' → logprob: -8.628339767456055
    9. '
' → logprob: -9.253339767456055
    10. 'of' → logprob: -9.628339767456055

Token 417: ' block' (ID: 4355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5402641296386719
    2. ' block' → logprob: -2.165264129638672
    3. 'block' → logprob: -2.415264129638672
    4. ' for' → logprob: -2.415264129638672
    5. '   ' → logprob: -2.540264129638672
    6. '       ' → logprob: -3.915264129638672
    7. 'def' → logprob: -4.540264129638672
    8. 'i' → logprob: -5.290264129638672
    9. 'range' → logprob: -6.665264129638672
    10. ' i' → logprob: -6.790264129638672

Token 418: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003149438416585326
    2. ' for' → logprob: -6.878149509429932
    3. '   ' → logprob: -7.378149509429932
    4. ',' → logprob: -7.878149509429932
    5. 'for' → logprob: -7.878149509429932
    6. ':' → logprob: -8.128149032592773
    7. ':
' → logprob: -9.128149032592773
    8. '
' → logprob: -9.253149032592773
    9. '        
' → logprob: -9.253149032592773
    10. '           ' → logprob: -9.878149032592773

Token 419: ' two' (ID: 1920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7276126146316528
    2. ' for' → logprob: -0.8526126146316528
    3. 'for' → logprob: -2.4776124954223633
    4. '   ' → logprob: -5.102612495422363
    5. '           ' → logprob: -8.602612495422363
    6. '        
' → logprob: -9.352612495422363
    7. ' ' → logprob: -9.477612495422363
    8. '    ' → logprob: -9.977612495422363
    9. '        ' → logprob: -10.102612495422363
    10. '```' → logprob: -10.727612495422363

Token 420: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21915817260742188
    2. ' for' → logprob: -1.7191581726074219
    3. '   ' → logprob: -4.344158172607422
    4. '       ' → logprob: -6.469158172607422
    5. 'locks' → logprob: -6.719158172607422
    6. ' locks' → logprob: -7.844158172607422
    7. ' j' → logprob: -8.219158172607422
    8. 'j' → logprob: -8.344158172607422
    9. '
' → logprob: -8.719158172607422
    10. ' ' → logprob: -8.969158172607422

Token 421: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40896841883659363
    2. '   ' → logprob: -2.283968448638916
    3. ':' → logprob: -2.533968448638916
    4. 'for' → logprob: -2.908968448638916
    5. '[i' → logprob: -3.158968448638916
    6. ' for' → logprob: -3.533968448638916
    7. ':
' → logprob: -4.408968448638916
    8. '        
' → logprob: -6.158968448638916
    9. '<|end|>' → logprob: -6.283968448638916
    10. ' =' → logprob: -6.283968448638916

Token 422: ' cause' (ID: 7075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6680577397346497
    2. '       ' → logprob: -1.1680576801300049
    3. ' for' → logprob: -1.7930576801300049
    4. '   ' → logprob: -5.418057918548584
    5. '           ' → logprob: -6.168057918548584
    6. '
' → logprob: -7.293057918548584
    7. ' ' → logprob: -7.668057918548584
    8. '```' → logprob: -8.543057441711426
    9. 'continue' → logprob: -8.543057441711426
    10. 'range' → logprob: -8.668057441711426

Token 423: ' waits' (ID: 99777)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.480497270822525
    2. ' for' → logprob: -1.4804972410202026
    3. '       ' → logprob: -1.9804972410202026
    4. '   ' → logprob: -4.355497360229492
    5. '           ' → logprob: -6.855497360229492
    6. '
' → logprob: -7.480497360229492
    7. 'range' → logprob: -7.480497360229492
    8. ' range' → logprob: -8.355497360229492
    9. '```' → logprob: -8.730497360229492
    10. ' j' → logprob: -9.230497360229492

Token 424: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007249988149851561
    2. ' for' → logprob: -5.50724983215332
    3. 'for' → logprob: -5.88224983215332
    4. '   ' → logprob: -8.63224983215332
    5. '```' → logprob: -9.88224983215332
    6. '        
' → logprob: -10.00724983215332
    7. '
' → logprob: -10.38224983215332
    8. '           ' → logprob: -10.75724983215332
    9. ',' → logprob: -11.88224983215332
    10. '#' → logprob: -12.00724983215332

Token 425: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6601909399032593
    2. ' for' → logprob: -1.9101909399032593
    3. ' i' → logprob: -2.035191059112549
    4. ' l' → logprob: -2.035191059112549
    5. 'for' → logprob: -2.910191059112549
    6. '       ' → logprob: -3.160191059112549
    7. 'the' → logprob: -3.535191059112549
    8. 'i' → logprob: -3.535191059112549
    9. '   ' → logprob: -3.660191059112549
    10. 'l' → logprob: -3.785191059112549

Token 426: ' tries' (ID: 30519)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8565889000892639
    2. 'for' → logprob: -1.3565888404846191
    3. ' for' → logprob: -1.3565888404846191
    4. '   ' → logprob: -3.231588840484619
    5. ' in' → logprob: -5.481588840484619
    6. '           ' → logprob: -6.481588840484619
    7. ' ' → logprob: -6.481588840484619
    8. '[i' → logprob: -6.606588840484619
    9. ':' → logprob: -6.856588840484619
    10. ')' → logprob: -7.106588840484619

Token 427: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37031906843185425
    2. ' to' → logprob: -1.870319128036499
    3. 'to' → logprob: -1.995319128036499
    4. '   ' → logprob: -4.37031888961792
    5. ':' → logprob: -6.37031888961792
    6. 'for' → logprob: -6.37031888961792
    7. ' for' → logprob: -6.74531888961792
    8. '           ' → logprob: -6.99531888961792
    9. '        ' → logprob: -8.370319366455078
    10. ' ' → logprob: -8.870319366455078

Token 428: ' acquire' (ID: 25145)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.3241347074508667
    2. 'for' → logprob: -2.3241348266601562
    3. ' acquire' → logprob: -2.4491348266601562
    4. ' for' → logprob: -3.3241348266601562
    5. '       ' → logprob: -3.6991348266601562
    6. '   ' → logprob: -4.574134826660156
    7. 'continue' → logprob: -5.074134826660156
    8. '           ' → logprob: -5.574134826660156
    9. ' continue' → logprob: -6.199134826660156
    10. ' ' → logprob: -6.949134826660156

Token 429: ' a' (ID: 261)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.441768616437912
    2. ' locks' → logprob: -2.6917686462402344
    3. ' a' → logprob: -2.8167686462402344
    4. 'lock' → logprob: -3.4417686462402344
    5. 'a' → logprob: -3.5667686462402344
    6. '       ' → logprob: -3.6917686462402344
    7. ' l' → logprob: -3.8167686462402344
    8. ' the' → logprob: -4.066768646240234
    9. 'for' → logprob: -4.191768646240234
    10. ' for' → logprob: -4.316768646240234

Token 430: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.2417978197336197
    2. ' lock' → logprob: -1.6167978048324585
    3. 'l' → logprob: -5.741797924041748
    4. 'different' → logprob: -6.241797924041748
    5. ' later' → logprob: -6.366797924041748
    6. ' different' → logprob: -6.366797924041748
    7. ' l' → logprob: -6.616797924041748
    8. ' for' → logprob: -7.366797924041748
    9. 'later' → logprob: -7.366797924041748
    10. 'previous' → logprob: -7.366797924041748

Token 431: ' held' (ID: 7504)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07332969456911087
    2. ' for' → logprob: -3.3233296871185303
    3. 'for' → logprob: -3.6983296871185303
    4. ' in' → logprob: -5.198329925537109
    5. '   ' → logprob: -5.698329925537109
    6. '           ' → logprob: -8.19832992553711
    7. 'from' → logprob: -8.82332992553711
    8. ' at' → logprob: -9.44832992553711
    9. ' and' → logprob: -9.57332992553711
    10. ',' → logprob: -9.57332992553711

Token 432: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6357530355453491
    2. '       ' → logprob: -0.8857530355453491
    3. 'by' → logprob: -4.010753154754639
    4. '   ' → logprob: -4.010753154754639
    5. ' for' → logprob: -4.635753154754639
    6. ' by' → logprob: -4.885753154754639
    7. '=' → logprob: -7.135753154754639
    8. ' in' → logprob: -7.135753154754639
    9. '           ' → logprob: -7.260753154754639
    10. 'in' → logprob: -7.260753154754639

Token 433: ' the' (ID: 290)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'another' → logprob: -0.5568210482597351
    2. ' another' → logprob: -0.9318210482597351
    3. 'the' → logprob: -4.556820869445801
    4. ' the' → logprob: -4.931820869445801
    5. 'previous' → logprob: -5.056820869445801
    6. ' a' → logprob: -5.931820869445801
    7. 'a' → logprob: -6.306820869445801
    8. ' previous' → logprob: -6.556820869445801
    9. 'other' → logprob: -6.681820869445801
    10. ' other' → logprob: -7.431820869445801

Token 434: ' other' (ID: 1273)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0971081256866455
    2. ' next' → logprob: -1.4721081256866455
    3. 'for' → logprob: -1.5971081256866455
    4. 'next' → logprob: -3.0971081256866455
    5. 'previous' → logprob: -3.2221081256866455
    6. ' previous' → logprob: -3.7221081256866455
    7. '#' → logprob: -3.8471081256866455
    8. 'locks' → logprob: -3.8471081256866455
    9. ' locks' → logprob: -4.722107887268066
    10. '   ' → logprob: -4.972107887268066

Token 435: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2029760181903839
    2. ' for' → logprob: -2.3279759883880615
    3. 'for' → logprob: -2.4529759883880615
    4. '   ' → logprob: -9.45297622680664
    5. '           ' → logprob: -10.45297622680664
    6. '        
' → logprob: -10.95297622680664
    7. '
' → logprob: -11.07797622680664
    8. '```' → logprob: -11.95297622680664
    9. '#' → logprob: -12.70297622680664
    10. 'def' → logprob: -12.95297622680664

Token 436: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06373565644025803
    2. 'for' → logprob: -3.3137357234954834
    3. ' for' → logprob: -3.6887357234954834
    4. '   ' → logprob: -8.438735961914062
    5. '           ' → logprob: -9.688735961914062
    6. '```' → logprob: -9.813735961914062
    7. '        
' → logprob: -12.063735961914062
    8. '     ' → logprob: -12.688735961914062
    9. '      ' → logprob: -12.813735961914062
    10. '#' → logprob: -12.813735961914062

Token 437: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035103894770145416
    2. 'for' → logprob: -3.7851037979125977
    3. ' for' → logprob: -4.535103797912598
    4. '   ' → logprob: -7.785103797912598
    5. '<|end|>' → logprob: -8.535103797912598
    6. '        
' → logprob: -8.785103797912598
    7. '           ' → logprob: -9.535103797912598
    8. '        ' → logprob: -9.910103797912598
    9. '```' → logprob: -10.535103797912598
    10. ' ' → logprob: -10.910103797912598

Token 438: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3555091917514801
    2. ' for' → logprob: -1.7305091619491577
    3. 'for' → logprob: -2.1055092811584473
    4. '   ' → logprob: -9.355508804321289
    5. '           ' → logprob: -9.605508804321289
    6. '```' → logprob: -11.605508804321289
    7. '        
' → logprob: -11.855508804321289
    8. '      ' → logprob: -12.105508804321289
    9. '#' → logprob: -12.230508804321289
    10. 'def' → logprob: -12.855508804321289

Token 439: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.541240930557251
    2. ' for' → logprob: -1.041240930557251
    3. 'for' → logprob: -2.916240930557251
    4. '   ' → logprob: -4.791240692138672
    5. '    ' → logprob: -7.291240692138672
    6. '           ' → logprob: -7.541240692138672
    7. '        ' → logprob: -7.916240692138672
    8. ' ' → logprob: -8.041240692138672
    9. '        
' → logprob: -9.291240692138672
    10. 'n' → logprob: -9.916240692138672

Token 440: ' thread' (ID: 8591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8014488816261292
    2. 'for' → logprob: -0.8014488816261292
    3. '       ' → logprob: -2.3014488220214844
    4. '   ' → logprob: -6.301448822021484
    5. '           ' → logprob: -8.801448822021484
    6. ' ' → logprob: -9.551448822021484
    7. '#' → logprob: -9.801448822021484
    8. ' block' → logprob: -10.051448822021484
    9. '
' → logprob: -10.176448822021484
    10. '        ' → logprob: -10.426448822021484

Token 441: ' acqu' (ID: 22161)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7133375406265259
    2. 'for' → logprob: -1.2133375406265259
    3. ' for' → logprob: -1.7133375406265259
    4. ' =' → logprob: -4.838337421417236
    5. '           ' → logprob: -5.213337421417236
    6. '   ' → logprob: -5.338337421417236
    7. ' in' → logprob: -5.338337421417236
    8. '
' → logprob: -6.588337421417236
    9. '=' → logprob: -6.588337421417236
    10. ':
' → logprob: -7.088337421417236

Token 442: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.0003884894831571728
    2. 'ire' → logprob: -8.375388145446777
    3. 'ired' → logprob: -8.875388145446777
    4. 'i' → logprob: -12.250388145446777
    5. '   ' → logprob: -12.875388145446777
    6. 'is' → logprob: -13.125388145446777
    7. 'quires' → logprob: -13.375388145446777
    8. '```' → logprob: -13.625388145446777
    9. 'uire' → logprob: -13.625388145446777
    10. 'quired' → logprob: -13.750388145446777

Token 443: ' locks' (ID: 50098)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4510102272033691
    2. 'for' → logprob: -1.8260102272033691
    3. '       ' → logprob: -1.9510102272033691
    4. 'range' → logprob: -2.076010227203369
    5. ' range' → logprob: -2.701010227203369
    6. '   ' → logprob: -2.701010227203369
    7. ' j' → logprob: -2.951010227203369
    8. ' in' → logprob: -3.076010227203369
    9. ' l' → logprob: -3.951010227203369
    10. 'locks' → logprob: -4.201010227203369

Token 444: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33242976665496826
    2. 'for' → logprob: -1.8324297666549683
    3. ' for' → logprob: -2.332429885864258
    4. ' in' → logprob: -4.832429885864258
    5. '   ' → logprob: -4.832429885864258
    6. '           ' → logprob: -5.207429885864258
    7. ',' → logprob: -7.707429885864258
    8. '[i' → logprob: -7.832429885864258
    9. 'from' → logprob: -7.957429885864258
    10. '[j' → logprob: -7.957429885864258

Token 445: ' sequence' (ID: 16281)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2699239253997803
    2. ' range' → logprob: -2.0199239253997803
    3. 'order' → logprob: -2.6449239253997803
    4. ' order' → logprob: -4.269924163818359
    5. 'the' → logprob: -4.894924163818359
    6. '   ' → logprob: -5.769924163818359
    7. 'blocks' → logprob: -6.019924163818359
    8. '       ' → logprob: -6.519924163818359
    9. ' the' → logprob: -6.644924163818359
    10. 'block' → logprob: -6.894924163818359

Token 446: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031086693052202463
    2. ' for' → logprob: -6.753108501434326
    3. 'for' → logprob: -6.878108501434326
    4. '        
' → logprob: -7.503108501434326
    5. '   ' → logprob: -9.253108978271484
    6. '           ' → logprob: -9.503108978271484
    7. ',' → logprob: -9.503108978271484
    8. '        ' → logprob: -11.628108978271484
    9. '<|end|>' → logprob: -11.628108978271484
    10. '
' → logprob: -11.753108978271484

Token 447: ' the' (ID: 290)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759404897689819
    2. 'range' → logprob: -0.9509404897689819
    3. '   ' → logprob: -3.9509406089782715
    4. 'for' → logprob: -4.2009406089782715
    5. '       ' → logprob: -4.9509406089782715
    6. ' blocks' → logprob: -5.5759406089782715
    7. 'blocks' → logprob: -6.0759406089782715
    8. 'the' → logprob: -6.8259406089782715
    9. ' the' → logprob: -7.0759406089782715
    10. ' for' → logprob: -7.0759406089782715

Token 448: ' block' (ID: 4355)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8810696601867676
    2. '       ' → logprob: -1.8810696601867676
    3. '   ' → logprob: -2.0060696601867676
    4. 'range' → logprob: -2.1310696601867676
    5. 'for' → logprob: -2.2560696601867676
    6. ' for' → logprob: -3.1310696601867676
    7. ' blocks' → logprob: -4.506069660186768
    8. '           ' → logprob: -5.131069660186768
    9. ' block' → logprob: -5.631069660186768
    10. 'blocks' → logprob: -5.631069660186768

Token 449: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030927436891943216
    2. ' for' → logprob: -6.5030927658081055
    3. 'for' → logprob: -6.8780927658081055
    4. ',' → logprob: -8.753092765808105
    5. '        
' → logprob: -9.003092765808105
    6. '   ' → logprob: -9.128092765808105
    7. '
' → logprob: -10.003092765808105
    8. '           ' → logprob: -10.503092765808105
    9. '<|end|>' → logprob: -10.878092765808105
    10. '[' → logprob: -11.503092765808105

Token 450: ' u' (ID: 337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1490384340286255
    2. 'range' → logprob: -2.899038314819336
    3. ' range' → logprob: -3.524038314819336
    4. ' ' → logprob: -3.649038314819336
    5. 'len' → logprob: -4.024038314819336
    6. '   ' → logprob: -6.149038314819336
    7. ' len' → logprob: -6.399038314819336
    8. '       ' → logprob: -6.524038314819336
    9. 'for' → logprob: -6.649038314819336
    10. '0' → logprob: -7.399038314819336

Token 451: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007440747693181038
    2. ' for' → logprob: -5.632440567016602
    3. 'for' → logprob: -5.757440567016602
    4. '           ' → logprob: -8.757440567016602
    5. '   ' → logprob: -8.757440567016602
    6. '        
' → logprob: -9.132440567016602
    7. '
' → logprob: -9.507440567016602
    8. ',' → logprob: -9.632440567016602
    9. '	' → logprob: -10.757440567016602
    10. '[' → logprob: -11.257440567016602

Token 452: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03300970420241356
    2. 'for' → logprob: -3.9080097675323486
    3. ' for' → logprob: -4.4080095291137695
    4. '```' → logprob: -9.53300952911377
    5. '           ' → logprob: -9.65800952911377
    6. '   ' → logprob: -9.65800952911377
    7. '        
' → logprob: -13.03300952911377
    8. '      ' → logprob: -13.78300952911377
    9. '	for' → logprob: -13.78300952911377
    10. '#' → logprob: -14.03300952911377

Token 453: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6690967679023743
    2. 'for' → logprob: -1.2940967082977295
    3. ' for' → logprob: -1.5440967082977295
    4. '   ' → logprob: -9.544096946716309
    5. '           ' → logprob: -10.294096946716309
    6. 'prev' → logprob: -11.044096946716309
    7. '```' → logprob: -11.169096946716309
    8. '        
' → logprob: -11.544096946716309
    9. '        ' → logprob: -12.169096946716309
    10. '      ' → logprob: -12.294096946716309

Token 454: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2577720880508423
    2. ' for' → logprob: -2.0077719688415527
    3. '       ' → logprob: -2.3827719688415527
    4. 'j' → logprob: -8.132772445678711
    5. 'prev' → logprob: -8.632772445678711
    6. '   ' → logprob: -9.132772445678711
    7. ' j' → logprob: -10.507772445678711
    8. ' prev' → logprob: -12.132772445678711
    9. 'start' → logprob: -12.132772445678711
    10. '           ' → logprob: -12.257772445678711

Token 455: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1803922951221466
    2. '       ' → logprob: -2.180392265319824
    3. ' for' → logprob: -3.430392265319824
    4. '   ' → logprob: -3.930392265319824
    5. '
' → logprob: -11.180392265319824
    6. '        
' → logprob: -11.555392265319824
    7. '```' → logprob: -12.055392265319824
    8. '           ' → logprob: -12.055392265319824
    9. '    
' → logprob: -12.680392265319824
    10. ' ' → logprob: -12.805392265319824

Token 456: ' within' (ID: 3518)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008028296753764153
    2. 'for' → logprob: -5.383028507232666
    3. ' for' → logprob: -6.383028507232666
    4. '   ' → logprob: -6.633028507232666
    5. '
' → logprob: -8.633028030395508
    6. '        
' → logprob: -8.883028030395508
    7. '           ' → logprob: -10.633028030395508
    8. '    
' → logprob: -10.758028030395508
    9. '    ' → logprob: -12.633028030395508
    10. ' ' → logprob: -12.758028030395508

Token 457: ' block' (ID: 4355)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.732406735420227
    2. 'block' → logprob: -1.357406735420227
    3. 'for' → logprob: -2.3574066162109375
    4. 'b' → logprob: -2.6074066162109375
    5. 'range' → logprob: -2.9824066162109375
    6. '   ' → logprob: -3.7324066162109375
    7. ' blocks' → logprob: -4.8574066162109375
    8. 'the' → logprob: -5.4824066162109375
    9. ' for' → logprob: -5.9824066162109375
    10. '       ' → logprob: -6.3574066162109375

Token 458: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3041192591190338
    2. '       ' → logprob: -1.9291192293167114
    3. 'for' → logprob: -2.429119348526001
    4. ' for' → logprob: -3.554119348526001
    5. '
' → logprob: -9.929119110107422
    6. '    
' → logprob: -10.054119110107422
    7. ' ' → logprob: -10.304119110107422
    8. '    ' → logprob: -10.679119110107422
    9. '  ' → logprob: -10.804119110107422
    10. '           ' → logprob: -11.179119110107422

Token 459: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.707369327545166
    2. 'for' → logprob: -1.207369327545166
    3. ' for' → logprob: -1.957369327545166
    4. '   ' → logprob: -2.707369327545166
    5. '    ' → logprob: -10.082368850708008
    6. '  ' → logprob: -10.707368850708008
    7. '           ' → logprob: -11.082368850708008
    8. ' ' → logprob: -11.207368850708008
    9. '     ' → logprob: -11.582368850708008
    10. '```' → logprob: -11.832368850708008

Token 460: ' locks' (ID: 50098)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.52585369348526
    2. 'j' → logprob: -1.6508536338806152
    3. 'b' → logprob: -2.9008536338806152
    4. 'idx' → logprob: -3.2758536338806152
    5. 'block' → logprob: -3.5258536338806152
    6. ' i' → logprob: -3.5258536338806152
    7. ' j' → logprob: -3.5258536338806152
    8. ' idx' → logprob: -4.025853633880615
    9. ' b' → logprob: -5.150853633880615
    10. ' block' → logprob: -5.400853633880615

Token 461: ' acquired' (ID: 27937)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3123687207698822
    2. 'in' → logprob: -1.5623687505722046
    3. 'i' → logprob: -4.312368869781494
    4. ' j' → logprob: -4.812368869781494
    5. '_idx' → logprob: -4.937368869781494
    6. '   ' → logprob: -5.187368869781494
    7. 'for' → logprob: -5.312368869781494
    8. 'idx' → logprob: -5.812368869781494
    9. 'j' → logprob: -5.937368869781494
    10. ' i' → logprob: -6.187368869781494

Token 462: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.429587960243225
    2. ' later' → logprob: -1.429587960243225
    3. 'later' → logprob: -1.429587960243225
    4. ' in' → logprob: -1.679587960243225
    5. '   ' → logprob: -3.4295878410339355
    6. '[j' → logprob: -3.6795878410339355
    7. '[i' → logprob: -4.4295878410339355
    8. '       ' → logprob: -5.3045878410339355
    9. ' earlier' → logprob: -5.6795878410339355
    10. ',' → logprob: -6.1795878410339355

Token 463: ' order' (ID: 2569)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030487997457385063
    2. ' range' → logprob: -3.6554880142211914
    3. 'blocks' → logprob: -6.155488014221191
    4. 'order' → logprob: -7.405488014221191
    5. 'block' → logprob: -7.780488014221191
    6. 'i' → logprob: -8.280488014221191
    7. '   ' → logprob: -8.655488014221191
    8. 'enumer' → logprob: -8.905488014221191
    9. ' blocks' → logprob: -9.030488014221191
    10. 'b' → logprob: -9.280488014221191

Token 464: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7720986008644104
    2. '   ' → logprob: -1.1470985412597656
    3. ' for' → logprob: -2.1470985412597656
    4. 'for' → logprob: -2.2720985412597656
    5. ',' → logprob: -9.022098541259766
    6. '    ' → logprob: -9.397098541259766
    7. '
' → logprob: -10.272098541259766
    8. ' ' → logprob: -10.397098541259766
    9. ' =' → logprob: -10.397098541259766
    10. '  ' → logprob: -10.522098541259766

Token 465: ' later' (ID: 4849)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3201597034931183
    2. ' for' → logprob: -1.445159673690796
    3. '       ' → logprob: -3.320159673690796
    4. '   ' → logprob: -6.195159912109375
    5. 'n' → logprob: -10.695159912109375
    6. '	for' → logprob: -11.820159912109375
    7. '```' → logprob: -11.820159912109375
    8. '           ' → logprob: -11.945159912109375
    9. 'j' → logprob: -11.945159912109375
    10. 'prev' → logprob: -12.070159912109375

Token 466: ' lock' (ID: 8109)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.3634284436702728
    2. '_l' → logprob: -1.9884284734725952
    3. '_lock' → logprob: -3.1134283542633057
    4. ' locks' → logprob: -3.2384283542633057
    5. 'for' → logprob: -3.9884283542633057
    6. ' in' → logprob: -3.9884283542633057
    7. '_idx' → logprob: -4.363428592681885
    8. ' for' → logprob: -4.613428592681885
    9. 'lock' → logprob: -5.113428592681885
    10. '_index' → logprob: -5.613428592681885

Token 467: ' waits' (ID: 99777)
  Prédit: ' waits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' waits' → logprob: -0.9546178579330444
    2. '_index' → logprob: -1.9546178579330444
    3. '_idx' → logprob: -1.9546178579330444
    4. 'for' → logprob: -2.079617977142334
    5. ' for' → logprob: -2.829617977142334
    6. 'wait' → logprob: -2.954617977142334
    7. ' in' → logprob: -3.579617977142334
    8. 's' → logprob: -3.829617977142334
    9. '_wait' → logprob: -4.579617977142334
    10. '   ' → logprob: -4.829617977142334

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017855016514658928
    2. ' for' → logprob: -4.767855167388916
    3. '   ' → logprob: -4.767855167388916
    4. '_for' → logprob: -7.642855167388916
    5. '    ' → logprob: -9.517854690551758
    6. '       ' → logprob: -9.642854690551758
    7. 'from' → logprob: -10.392854690551758
    8. ' ' → logprob: -11.267854690551758
    9. ' =' → logprob: -11.517854690551758
    10. '  ' → logprob: -11.642854690551758

Token 469: ' earlier' (ID: 11965)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.7559868097305298
    2. 'previous' → logprob: -1.2559868097305298
    3. 'ear' → logprob: -2.3809866905212402
    4. 'all' → logprob: -3.2559866905212402
    5. ' previous' → logprob: -3.6309866905212402
    6. 'lock' → logprob: -3.7559866905212402
    7. ' earlier' → logprob: -3.8809866905212402
    8. 'the' → logprob: -4.25598669052124
    9. ' the' → logprob: -4.63098669052124
    10. ' all' → logprob: -5.25598669052124

Token 470: ' lock' (ID: 8109)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34014952182769775
    2. 'for' → logprob: -1.5901495218276978
    3. ' for' → logprob: -2.965149402618408
    4. '       ' → logprob: -3.465149402618408
    5. '
' → logprob: -6.715149402618408
    6. '    
' → logprob: -8.590149879455566
    7. '    ' → logprob: -10.090149879455566
    8. ' ' → logprob: -10.465149879455566
    9. '           ' → logprob: -10.590149879455566
    10. '  ' → logprob: -10.715149879455566

Token 471: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009936699643731117
    2. '   ' → logprob: -5.384936809539795
    3. 'for' → logprob: -5.634936809539795
    4. ' for' → logprob: -6.384936809539795
    5. '
' → logprob: -11.009936332702637
    6. '           ' → logprob: -11.634936332702637
    7. ',' → logprob: -12.509936332702637
    8. '        
' → logprob: -12.509936332702637
    9. ' ' → logprob: -13.634936332702637
    10. '    ' → logprob: -13.634936332702637

Token 472: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.040433645248413
    2. 'for' → logprob: -1.040433645248413
    3. '   ' → logprob: -1.540433645248413
    4. ' for' → logprob: -2.540433645248413
    5. '```' → logprob: -8.540433883666992
    6. '           ' → logprob: -10.540433883666992
    7. '    ' → logprob: -11.290433883666992
    8. ' ' → logprob: -12.040433883666992
    9. '     ' → logprob: -12.040433883666992
    10. '  ' → logprob: -12.165433883666992

Token 473: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37170058488845825
    2. 'for' (adapté à ' for') → logprob: -1.7467005252838135
    3. ' for' → logprob: -2.2467005252838135
    4. '   ' → logprob: -3.4967005252838135
    5. '           ' → logprob: -11.121700286865234
    6. '    ' → logprob: -11.746700286865234
    7. '     ' → logprob: -12.246700286865234
    8. '  ' → logprob: -12.496700286865234
    9. ' ' → logprob: -12.746700286865234
    10. '```' → logprob: -12.746700286865234

Token 474: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8604658246040344
    2. 'b' → logprob: -1.3604657649993896
    3. ' b' → logprob: -1.8604657649993896
    4. ' i' → logprob: -2.3604657649993896
    5. 'block' → logprob: -3.2354657649993896
    6. ' block' → logprob: -3.8604657649993896
    7. 'idx' → logprob: -6.110466003417969
    8. ' idx' → logprob: -6.485466003417969
    9. '   ' → logprob: -6.610466003417969
    10. 'j' → logprob: -6.860466003417969

Token 475: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1139226034283638
    2. ' in' → logprob: -2.238922595977783
    3. 'i' → logprob: -7.863922595977783
    4. '_idx' → logprob: -7.863922595977783
    5. '_index' → logprob: -8.863923072814941
    6. 'idx' → logprob: -9.738923072814941
    7. 'index' → logprob: -10.113923072814941
    8. ' ' → logprob: -10.738923072814941
    9. '_in' → logprob: -11.738923072814941
    10. '[' → logprob: -11.863923072814941

Token 476: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.18120405077934265
    2. 'range' → logprob: -1.931204080581665
    3. ' blocks' → logprob: -4.181203842163086
    4. ' range' → logprob: -5.306203842163086
    5. 'block' → logprob: -7.806203842163086
    6. '[' → logprob: -10.431203842163086
    7. 'build' → logprob: -10.931203842163086
    8. '[]' → logprob: -11.556203842163086
    9. 'b' → logprob: -11.806203842163086
    10. 'ranges' → logprob: -11.806203842163086

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0545296669006348
    2. '[i' → logprob: -1.6795296669006348
    3. ' in' → logprob: -2.0545296669006348
    4. '[' → logprob: -2.1795296669006348
    5. '   ' → logprob: -2.5545296669006348
    6. 'in' → logprob: -2.8045296669006348
    7. ':
' → logprob: -3.1795296669006348
    8. '):' → logprob: -3.4295296669006348
    9. '       ' → logprob: -5.429529666900635
    10. '[in' → logprob: -6.679529666900635

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06297378987073898
    2. ' for' → logprob: -3.187973737716675
    3. 'for' → logprob: -4.437973976135254
    4. '   ' → logprob: -4.937973976135254
    5. ':' → logprob: -7.812973976135254
    6. ',' → logprob: -8.312973976135254
    7. '[' → logprob: -10.437973976135254
    8. '    ' → logprob: -11.062973976135254
    9. '	   ' → logprob: -11.562973976135254
    10. ' =' → logprob: -11.687973976135254

Token 479: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008705805987119675
    2. ' for' → logprob: -4.7587056159973145
    3. '   ' → logprob: -9.758706092834473
    4. '       ' → logprob: -10.758706092834473
    5. 'prev' → logprob: -12.008706092834473
    6. 'n' → logprob: -12.633706092834473
    7. '	for' → logprob: -13.883706092834473
    8. 'l' → logprob: -14.008706092834473
    9. 'length' → logprob: -14.508706092834473
    10. 'range' → logprob: -16.383705139160156

Token 480: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5885688662528992
    2. 'i' → logprob: -1.588568925857544
    3. ' j' → logprob: -1.838568925857544
    4. ' i' → logprob: -3.213568925857544
    5. 'idx' → logprob: -3.338568925857544
    6. ' idx' → logprob: -5.213568687438965
    7. 'range' → logprob: -8.838568687438965
    8. '   ' → logprob: -9.088568687438965
    9. '_j' → logprob: -9.588568687438965
    10. 'index' → logprob: -9.838568687438965

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07184793800115585
    2. 'in' → logprob: -2.696847915649414
    3. '1' → logprob: -6.446847915649414
    4. ' ' → logprob: -8.571847915649414
    5. '+' → logprob: -9.821847915649414
    6. '(' → logprob: -10.821847915649414
    7. '   ' → logprob: -11.196847915649414
    8. ',' → logprob: -11.571847915649414
    9. '0' → logprob: -11.696847915649414
    10. '[' → logprob: -12.071847915649414

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234594456851482
    2. ' range' → logprob: -5.255234718322754
    3. '1' → logprob: -14.505234718322754
    4. ' ' → logprob: -16.005233764648438
    5. '   ' → logprob: -16.630233764648438
    6. '(range' → logprob: -17.130233764648438
    7. '	range' → logprob: -17.255233764648438
    8. '
' → logprob: -18.255233764648438
    9. '  ' → logprob: -18.380233764648438
    10. '```' → logprob: -19.130233764648438

Token 483: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000693016336299479
    2. 'len' → logprob: -7.625692844390869
    3. ' ' → logprob: -8.875693321228027
    4. '(len' → logprob: -10.250693321228027
    5. '(' → logprob: -10.875693321228027
    6. '   ' → logprob: -11.625693321228027
    7. ' len' → logprob: -13.125693321228027
    8. '       ' → logprob: -17.25069236755371
    9. '  ' → logprob: -17.37569236755371
    10. '0' → logprob: -17.75069236755371

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002980432182084769
    2. 'len' → logprob: -8.125298500061035
    3. ' ' → logprob: -14.000298500061035
    4. '   ' → logprob: -14.500298500061035
    5. '0' → logprob: -14.625298500061035
    6. '(len' → logprob: -16.75029754638672
    7. 'range' → logprob: -16.75029754638672
    8. '(' → logprob: -17.00029754638672
    9. ' len' → logprob: -17.62529754638672
    10. '+' → logprob: -18.12529754638672

Token 485: ',len' (ID: 73338)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03764961659908295
    2. ',len' → logprob: -4.037649631500244
    3. ',' → logprob: -4.412649631500244
    4. '(' → logprob: -5.162649631500244
    5. ' ' → logprob: -7.787649631500244
    6. 'len' → logprob: -7.912649631500244
    7. '<len' → logprob: -8.162649154663086
    8. ' len' → logprob: -8.912649154663086
    9. ' ,' → logprob: -9.287649154663086
    10. '   ' → logprob: -9.787649154663086

Token 486: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003373694489710033
    2. 'b' → logprob: -8.000337600708008
    3. '(block' → logprob: -13.625337600708008
    4. ' b' → logprob: -15.375337600708008
    5. ')b' → logprob: -16.000337600708008
    6. '	b' → logprob: -16.250337600708008
    7. '[b' → logprob: -16.375337600708008
    8. '(' → logprob: -16.625337600708008
    9. '=b' → logprob: -18.000337600708008
    10. '   ' → logprob: -18.250337600708008

Token 487: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06214302033185959
    2. '):
' → logprob: -2.812143087387085
    3. ' ):' → logprob: -9.562143325805664
    4. ')' → logprob: -10.687143325805664
    5. ')):' → logprob: -10.687143325805664
    6. '()):
' → logprob: -11.437143325805664
    7. '   ' → logprob: -11.562143325805664
    8. '):

' → logprob: -12.062143325805664
    9. '       ' → logprob: -12.187143325805664
    10. '):
' → logprob: -12.187143325805664

Token 488: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6241799592971802
    2. '           ' → logprob: -0.8741799592971802
    3. ' g' → logprob: -3.4991798400878906
    4. 'g' → logprob: -4.624179840087891
    5. ' for' → logprob: -5.874179840087891
    6. 'for' → logprob: -6.624179840087891
    7. '   ' → logprob: -6.624179840087891
    8. '[g' → logprob: -7.999179840087891
    9. '[' → logprob: -8.37417984008789
    10. '        ' → logprob: -8.49917984008789

Token 489: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.00805715098977089
    2. ' g' → logprob: -5.383057117462158
    3. '           ' → logprob: -6.008057117462158
    4. '   ' → logprob: -7.508057117462158
    5. 'for' → logprob: -8.758057594299316
    6. '       ' → logprob: -8.883057594299316
    7. ' for' → logprob: -10.883057594299316
    8. 'print' → logprob: -11.133057594299316
    9. '               ' → logprob: -11.258057594299316
    10. 'prev' → logprob: -11.508057594299316

Token 490: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0001612267515156418
    2. 'b' → logprob: -9.125161170959473
    3. '[' → logprob: -10.375161170959473
    4. '   ' → logprob: -12.000161170959473
    5. '       ' → logprob: -12.500161170959473
    6. ' [' → logprob: -12.500161170959473
    7. '[g' → logprob: -12.500161170959473
    8. '           ' → logprob: -14.000161170959473
    9. '```' → logprob: -14.875161170959473
    10. '[[' → logprob: -15.375161170959473

Token 491: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.034421827644109726
    2. '[b' → logprob: -3.659421920776367
    3. 'b' → logprob: -5.409421920776367
    4. 'i' → logprob: -5.909421920776367
    5. '][' → logprob: -7.909421920776367
    6. '   ' → logprob: -8.784421920776367
    7. ']' → logprob: -9.034421920776367
    8. '[' → logprob: -9.034421920776367
    9. '_i' → logprob: -10.659421920776367
    10. '       ' → logprob: -10.784421920776367

Token 492: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0199182890355587
    2. '[' → logprob: -4.519918441772461
    3. '][' → logprob: -5.269918441772461
    4. '-' → logprob: -6.769918441772461
    5. '[i' → logprob: -6.769918441772461
    6. ']' → logprob: -7.269918441772461
    7. '()].' → logprob: -8.644918441772461
    8. ' ].' → logprob: -8.894918441772461
    9. '[b' → logprob: -9.144918441772461
    10. '   ' → logprob: -9.644918441772461

Token 493: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.5
    3. ' append' → logprob: -15.5
    4. '_append' → logprob: -20.375
    5. '	append' → logprob: -21.25
    6. 'extend' → logprob: -21.25
    7. 'app' → logprob: -21.625
    8. 'Append' → logprob: -21.75
    9. 'appen' → logprob: -22.875
    10. 'add' → logprob: -24.125

Token 494: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5759445428848267
    2. 'b' → logprob: -0.8259445428848267
    3. ' b' → logprob: -12.825944900512695
    4. '(
' → logprob: -13.700944900512695
    5. '(' → logprob: -13.825944900512695
    6. '	b' → logprob: -15.575944900512695
    7. ' (' → logprob: -16.575944900512695
    8. ')b' → logprob: -16.950944900512695
    9. '   ' → logprob: -17.450944900512695
    10. '[b' → logprob: -18.200944900512695

Token 495: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.048601455986499786
    2. 'i' → logprob: -3.0486013889312744
    3. '[' → logprob: -11.923601150512695
    4. '{i' → logprob: -12.923601150512695
    5. '(i' → logprob: -13.673601150512695
    6. ' i' → logprob: -13.923601150512695
    7. '0' → logprob: -14.423601150512695
    8. '   ' → logprob: -14.423601150512695
    9. '[
' → logprob: -14.423601150512695
    10. '
' → logprob: -14.673601150512695

Token 496: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01616879738867283
    2. '-' → logprob: -4.141168594360352
    3. 'i' → logprob: -9.391168594360352
    4. '[' → logprob: -10.766168594360352
    5. ' -' → logprob: -11.016168594360352
    6. '(i' → logprob: -11.766168594360352
    7. '1' → logprob: -13.391168594360352
    8. '[-' → logprob: -13.891168594360352
    9. '0' → logprob: -14.016168594360352
    10. '[j' → logprob: -14.391168594360352

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.50000286102295
    3. '```' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.75000286102295
    5. ']' → logprob: -15.62500286102295
    6. '])' → logprob: -16.875001907348633
    7. 'i' → logprob: -17.812501907348633
    8. '`' → logprob: -17.812501907348633
    9. '  ' → logprob: -17.937501907348633
    10. '``' → logprob: -18.000001907348633

Token 498: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017373013542965055
    2. ')' → logprob: -6.376737117767334
    3. ' ])' → logprob: -11.251737594604492
    4. ']' → logprob: -12.001737594604492
    5. ')])' → logprob: -12.126737594604492
    6. '])
' → logprob: -12.501737594604492
    7. ')]' → logprob: -13.376737594604492
    8. '   ' → logprob: -13.626737594604492
    9. '       ' → logprob: -13.626737594604492
    10. ' )' → logprob: -14.126737594604492

Token 499: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15104305744171143
    2. '
' → logprob: -2.526042938232422
    3. '<|end|>' → logprob: -3.026042938232422
    4. 'for' → logprob: -5.276042938232422
    5. '    
' → logprob: -5.901042938232422
    6. ' for' → logprob: -6.651042938232422
    7. 'return' → logprob: -6.901042938232422
    8. '<|end|>' → logprob: -7.901042938232422
    9. ' ' → logprob: -8.026042938232422
    10. ')' → logprob: -8.526042938232422

Token 501: ' Build' (ID: 10885)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09701839089393616
    2. '   ' → logprob: -2.5970184803009033
    3. 'for' → logprob: -4.222018241882324
    4. '#' → logprob: -5.722018241882324
    5. ' return' → logprob: -11.347018241882324
    6. '```' → logprob: -12.347018241882324
    7. '
' → logprob: -13.597018241882324
    8. 'from' → logprob: -13.847018241882324
    9. 'Return' → logprob: -13.847018241882324
    10. '    
' → logprob: -14.097018241882324

Token 502: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.169798731803894
    2. ' edges' → logprob: -1.419798731803894
    3. 'for' → logprob: -1.794798731803894
    4. '   ' → logprob: -2.4197988510131836
    5. '#' → logprob: -3.2947988510131836
    6. 'lock' → logprob: -3.2947988510131836
    7. ' for' → logprob: -3.5447988510131836
    8. ' lock' → logprob: -3.9197988510131836
    9. '_edges' → logprob: -4.419798851013184
    10. ' the' → logprob: -4.919798851013184

Token 503: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7379648685455322
    2. 'from' → logprob: -1.1129648685455322
    3. ' for' → logprob: -2.2379648685455322
    4. '   ' → logprob: -3.2379648685455322
    5. ' between' → logprob: -3.6129648685455322
    6. 'between' → logprob: -4.987964630126953
    7. ' from' → logprob: -4.987964630126953
    8. '<|end|>' → logprob: -6.362964630126953
    9. '_between' → logprob: -6.862964630126953
    10. '(' → logprob: -6.987964630126953

Token 504: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.37484291195869446
    2. 'blocks' → logprob: -1.249842882156372
    3. 'b' → logprob: -4.499843120574951
    4. ' b' → logprob: -5.249843120574951
    5. 'range' → logprob: -6.249843120574951
    6. ' range' → logprob: -6.374843120574951
    7. 'for' → logprob: -6.374843120574951
    8. 'locks' → logprob: -6.999843120574951
    9. 'block' → logprob: -7.124843120574951
    10. ' for' → logprob: -7.249843120574951

Token 505: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3555890619754791
    2. ' for' → logprob: -1.7305890321731567
    3. 'for' → logprob: -2.1055891513824463
    4. '       ' → logprob: -8.730588912963867
    5. '```' → logprob: -9.605588912963867
    6. '	for' → logprob: -9.980588912963867
    7. '
' → logprob: -12.480588912963867
    8. '    
' → logprob: -12.980588912963867
    9. ' ' → logprob: -13.730588912963867
    10. 'from' → logprob: -14.480588912963867

Token 506: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22582510113716125
    2. ' for' → logprob: -1.7258250713348389
    3. '   ' → logprob: -3.725825071334839
    4. 'from' → logprob: -11.725825309753418
    5. '```' → logprob: -12.225825309753418
    6. '#' → logprob: -12.600825309753418
    7. '
' → logprob: -13.225825309753418
    8. '	for' → logprob: -13.600825309753418
    9. 'locks' → logprob: -14.350825309753418
    10. '       ' → logprob: -14.350825309753418

Token 507: ' two' (ID: 1920)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7331395745277405
    2. 'l' → logprob: -1.8581395149230957
    3. 'i' → logprob: -2.2331395149230957
    4. ' l' → logprob: -2.4831395149230957
    5. ' i' → logprob: -3.1081395149230957
    6. ' b' → logprob: -3.1081395149230957
    7. 'len' → logprob: -3.7331395149230957
    8. 'lock' → logprob: -4.233139514923096
    9. 'blocks' → logprob: -4.983139514923096
    10. ' len' → logprob: -5.108139514923096

Token 508: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.27106136083602905
    2. 'blocks' → logprob: -1.5210614204406738
    3. 'b' → logprob: -4.146061420440674
    4. ' different' → logprob: -7.021061420440674
    5. ' b' → logprob: -7.146061420440674
    6. 'for' → logprob: -7.396061420440674
    7. ' for' → logprob: -8.146060943603516
    8. 'block' → logprob: -8.896060943603516
    9. 'different' → logprob: -9.271060943603516
    10. ' block' → logprob: -9.396060943603516

Token 509: ' share' (ID: 5143)
  Prédit: ' share'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' share' → logprob: -0.33066993951797485
    2. 'share' → logprob: -2.70566987991333
    3. ' have' → logprob: -3.20566987991333
    4. '       ' → logprob: -3.33066987991333
    5. ' differ' → logprob: -3.33066987991333
    6. ' are' → logprob: -4.08066987991333
    7. '   ' → logprob: -4.45566987991333
    8. 'different' → logprob: -4.58066987991333
    9. 'ac' → logprob: -4.83066987991333
    10. ' both' → logprob: -4.95566987991333

Token 510: ' locks' (ID: 50098)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14538443088531494
    2. 'locks' → logprob: -2.6453843116760254
    3. ' a' → logprob: -3.1453843116760254
    4. ' locks' → logprob: -4.645384311676025
    5. 'l' → logprob: -5.770384311676025
    6. ' at' → logprob: -5.770384311676025
    7. 'any' → logprob: -6.520384311676025
    8. 'lock' → logprob: -6.645384311676025
    9. ' any' → logprob: -7.020384311676025
    10. 'at' → logprob: -7.145384311676025

Token 511: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5261234045028687
    2. ' for' → logprob: -1.6511234045028687
    3. '       ' → logprob: -2.026123523712158
    4. ':' → logprob: -2.026123523712158
    5. ',' → logprob: -2.151123523712158
    6. ':
' → logprob: -2.151123523712158
    7. 'for' → logprob: -3.026123523712158
    8. ' and' → logprob: -3.151123523712158
    9. '           ' → logprob: -7.026123523712158
    10. 'and' → logprob: -7.151123523712158

Token 512: ' cross' (ID: 8088)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5065979957580566
    2. 'for' → logprob: -1.0065979957580566
    3. '       ' → logprob: -3.5065979957580566
    4. '   ' → logprob: -6.256597995758057
    5. '	for' → logprob: -10.756597518920898
    6. '           ' → logprob: -11.006597518920898
    7. 'continue' → logprob: -11.006597518920898
    8. '```' → logprob: -11.381597518920898
    9. ' ' → logprob: -12.381597518920898
    10. ' continue' → logprob: -12.756597518920898

Token 513: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5483714938163757
    2. 'for' → logprob: -1.6733715534210205
    3. ' edges' → logprob: -2.0483715534210205
    4. '-' → logprob: -3.9233715534210205
    5. 'edges' → logprob: -3.9233715534210205
    6. 'block' → logprob: -4.298371315002441
    7. '-block' → logprob: -4.423371315002441
    8. 'blocks' → logprob: -4.923371315002441
    9. ' for' → logprob: -5.048371315002441
    10. 'links' → logprob: -5.048371315002441

Token 514: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1719418615102768
    2. ' for' → logprob: -2.0469417572021484
    3. '       ' → logprob: -4.046941757202148
    4. 'for' → logprob: -4.796941757202148
    5. '
' → logprob: -6.796941757202148
    6. '<|end|>' → logprob: -7.046941757202148
    7. '           ' → logprob: -8.421941757202148
    8. '    ' → logprob: -8.546941757202148
    9. ',' → logprob: -9.046941757202148
    10. '    
' → logprob: -9.171941757202148

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030115146189928055
    2. '       ' → logprob: -4.280115127563477
    3. ' for' → logprob: -4.405115127563477
    4. 'for' → logprob: -5.655115127563477
    5. '
' → logprob: -10.405115127563477
    6. '           ' → logprob: -10.780115127563477
    7. '<|end|>' → logprob: -10.780115127563477
    8. '```' → logprob: -11.530115127563477
    9. '    
' → logprob: -12.280115127563477
    10. '    ' → logprob: -12.530115127563477

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023180482909083366
    2. '       ' → logprob: -4.2731804847717285
    3. ' for' → logprob: -4.8981804847717285
    4. 'for' → logprob: -6.5231804847717285
    5. '<|end|>' → logprob: -11.02318000793457
    6. '```' → logprob: -11.64818000793457
    7. '           ' → logprob: -12.02318000793457
    8. '	for' → logprob: -12.64818000793457
    9. '
' → logprob: -12.64818000793457
    10. '     ' → logprob: -12.89818000793457

Token 517: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6389039158821106
    2. ' for' → logprob: -1.1389038562774658
    3. 'for' → logprob: -1.8889038562774658
    4. '       ' → logprob: -7.263904094696045
    5. '```' → logprob: -11.638903617858887
    6. '	for' → logprob: -12.013903617858887
    7. ' ' → logprob: -12.763903617858887
    8. '
' → logprob: -14.138903617858887
    9. '           ' → logprob: -14.263903617858887
    10. '  ' → logprob: -14.388903617858887

Token 518: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3064888119697571
    2. '   ' → logprob: -1.8064887523651123
    3. ' for' → logprob: -2.3064887523651123
    4. '       ' → logprob: -9.431488990783691
    5. '```' → logprob: -10.306488990783691
    6. '	for' → logprob: -12.056488990783691
    7. '
' → logprob: -12.306488990783691
    8. '  ' → logprob: -13.056488990783691
    9. ' ' → logprob: -13.181488990783691
    10. '#' → logprob: -13.556488990783691

Token 519: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0104490518569946
    2. 'l' → logprob: -1.3854490518569946
    3. ' l' → logprob: -1.6354490518569946
    4. ' i' → logprob: -2.260448932647705
    5. 'b' → logprob: -3.510448932647705
    6. 'lock' → logprob: -3.760448932647705
    7. ' b' → logprob: -4.385448932647705
    8. 'j' → logprob: -5.010448932647705
    9. ' lock' → logprob: -5.260448932647705
    10. ' j' → logprob: -5.510448932647705

Token 520: ' pair' (ID: 10610)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.8208969831466675
    2. 'l' → logprob: -1.4458969831466675
    3. ' l' → logprob: -2.320897102355957
    4. 'block' → logprob: -2.445897102355957
    5. ' lock' → logprob: -2.820897102355957
    6. ' block' → logprob: -3.695897102355957
    7. 'i' → logprob: -3.820897102355957
    8. 'b' → logprob: -3.945897102355957
    9. ' b' → logprob: -5.195897102355957
    10. ' i' → logprob: -5.570897102355957

Token 521: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.17568404972553253
    2. ' i' → logprob: -2.1756839752197266
    3. 'of' → logprob: -4.175683975219727
    4. ' (' → logprob: -4.675683975219727
    5. ' for' → logprob: -5.425683975219727
    6. 'i' → logprob: -5.550683975219727
    7. '   ' → logprob: -5.550683975219727
    8. 'for' → logprob: -5.925683975219727
    9. ' in' → logprob: -6.300683975219727
    10. ' range' → logprob: -6.425683975219727

Token 522: ' locks' (ID: 50098)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1611342877149582
    2. ' range' → logprob: -2.1611342430114746
    3. 'locks' → logprob: -4.286134243011475
    4. 'blocks' → logprob: -4.661134243011475
    5. ' blocks' → logprob: -5.911134243011475
    6. 'i' → logprob: -5.911134243011475
    7. 'lock' → logprob: -6.286134243011475
    8. ' locks' → logprob: -6.911134243011475
    9. 'block' → logprob: -7.286134243011475
    10. 'ranges' → logprob: -7.786134243011475

Token 523: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11324423551559448
    2. ' l' → logprob: -2.9882442951202393
    3. ' for' → logprob: -3.6132442951202393
    4. '   ' → logprob: -4.61324405670166
    5. 'for' → logprob: -4.61324405670166
    6. ',' → logprob: -5.36324405670166
    7. 'l' → logprob: -6.48824405670166
    8. 'a' → logprob: -7.48824405670166
    9. '       ' → logprob: -7.98824405670166
    10. 'in' → logprob: -8.23824405670166

Token 524: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18919478356838226
    2. ' l' → logprob: -2.064194679260254
    3. 'i' → logprob: -4.064194679260254
    4. 'a' → logprob: -5.439194679260254
    5. 'u' → logprob: -5.564194679260254
    6. 'for' → logprob: -5.564194679260254
    7. ')' → logprob: -5.689194679260254
    8. 'x' → logprob: -5.814194679260254
    9. ' for' → logprob: -6.314194679260254
    10. ' i' → logprob: -6.564194679260254

Token 525: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0010298490524292
    2. ' in' → logprob: -1.3760298490524292
    3. ')' → logprob: -1.8760298490524292
    4. '1' → logprob: -2.2510299682617188
    5. ' ,' → logprob: -2.5010299682617188
    6. 'in' → logprob: -4.626029968261719
    7. 'i' → logprob: -4.626029968261719
    8. '),' → logprob: -5.626029968261719
    9. '   ' → logprob: -6.001029968261719
    10. ' ' → logprob: -6.376029968261719

Token 526: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02355734258890152
    2. 'for' → logprob: -5.148557186126709
    3. ')' → logprob: -5.398557186126709
    4. ' in' → logprob: -5.648557186126709
    5. ',l' → logprob: -6.023557186126709
    6. '),' → logprob: -6.273557186126709
    7. ' ,' → logprob: -6.398557186126709
    8. ' for' → logprob: -7.148557186126709
    9. '   ' → logprob: -7.398557186126709
    10. ',j' → logprob: -7.898557186126709

Token 527: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0882294550538063
    2. '1' → logprob: -2.7132294178009033
    3. ')' → logprob: -4.588229656219482
    4. '),' → logprob: -5.963229656219482
    5. '_to' → logprob: -7.213229656219482
    6. '[' → logprob: -7.338229656219482
    7. '0' → logprob: -7.588229656219482
    8. 'o' → logprob: -7.838229656219482
    9. 'ock' → logprob: -7.838229656219482
    10. 'for' → logprob: -7.963229656219482

Token 528: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15872228145599365
    2. '):
' → logprob: -2.908722400665283
    3. '):' → logprob: -2.908722400665283
    4. ' in' → logprob: -4.283722400665283
    5. '   ' → logprob: -4.783722400665283
    6. 'in' → logprob: -5.408722400665283
    7. ',' → logprob: -5.408722400665283
    8. '),' → logprob: -5.658722400665283
    9. '       ' → logprob: -6.533722400665283
    10. 'for' → logprob: -7.783722400665283

Token 529: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2256830781698227
    2. 'for' → logprob: -2.1006829738616943
    3. '   ' → logprob: -2.9756829738616943
    4. '       ' → logprob: -3.7256829738616943
    5. '    ' → logprob: -6.475683212280273
    6. '           ' → logprob: -6.600683212280273
    7. ' ' → logprob: -7.225683212280273
    8. '        ' → logprob: -8.725683212280273
    9. '<|end|>' → logprob: -8.850683212280273
    10. ' 
' → logprob: -9.225683212280273

Token 530: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1423756629228592
    2. ' l' → logprob: -2.3923757076263428
    3. 'lock' → logprob: -3.3923757076263428
    4. 'i' → logprob: -6.142375469207764
    5. ' lock' → logprob: -6.142375469207764
    6. 'len' → logprob: -6.267375469207764
    7. 'locks' → logprob: -7.517375469207764
    8. ' i' → logprob: -7.642375469207764
    9. ' len' → logprob: -9.642375946044922
    10. 'g' → logprob: -9.767375946044922

Token 531: '1' (ID: 16)
  Prédit: 'ock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ock' → logprob: -0.14294137060642242
    2. '_to' → logprob: -2.642941474914551
    3. '1' → logprob: -2.892941474914551
    4. '2' → logprob: -5.892941474914551
    5. 'o' → logprob: -6.767941474914551
    6. '[' → logprob: -8.14294147491455
    7. '```' → logprob: -8.14294147491455
    8. '#' → logprob: -8.64294147491455
    9. 'et' → logprob: -8.89294147491455
    10. 'e' → logprob: -8.89294147491455

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29464882612228394
    2. ' !=' → logprob: -2.0446488857269287
    3. 'in' → logprob: -2.1696488857269287
    4. '!=' → logprob: -4.79464864730835
    5. ' is' → logprob: -6.54464864730835
    6. '_to' → logprob: -7.79464864730835
    7. '   ' → logprob: -8.169649124145508
    8. ' ==' → logprob: -8.544649124145508
    9. ' ' → logprob: -8.544649124145508
    10. ' for' → logprob: -8.919649124145508

Token 533: ' block' (ID: 4355)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.01580031029880047
    2. 'block' → logprob: -4.890800476074219
    3. 'blocks' → logprob: -5.515800476074219
    4. 'range' → logprob: -6.140800476074219
    5. 'locks' → logprob: -6.890800476074219
    6. ' lock' → logprob: -7.515800476074219
    7. 'b' → logprob: -8.640800476074219
    8. '   ' → logprob: -9.640800476074219
    9. 'set' → logprob: -10.265800476074219
    10. '[' → logprob: -10.390800476074219

Token 534: ' A' (ID: 355)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8567248582839966
    2. '[i' → logprob: -0.8567248582839966
    3. 'i' → logprob: -2.481724739074707
    4. '   ' → logprob: -3.981724739074707
    5. ' and' → logprob: -4.231724739074707
    6. ',' → logprob: -4.606724739074707
    7. ' i' → logprob: -4.856724739074707
    8. 'and' → logprob: -5.856724739074707
    9. '[j' → logprob: -6.231724739074707
    10. ' !=' → logprob: -6.356724739074707

Token 535: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6995713114738464
    2. ' and' → logprob: -1.1995713710784912
    3. ':
' → logprob: -2.449571371078491
    4. ':' → logprob: -2.824571371078491
    5. ',' → logprob: -3.949571371078491
    6. '   ' → logprob: -4.324571132659912
    7. '           ' → logprob: -4.699571132659912
    8. 'and' → logprob: -5.324571132659912
    9. ' for' → logprob: -5.574571132659912
    10. '):
' → logprob: -6.824571132659912

Token 536: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.030703851953148842
    2. ' l' → logprob: -3.5307037830352783
    3. 'lock' → logprob: -7.030704021453857
    4. ' lock' → logprob: -10.0307035446167
    5. '   ' → logprob: -11.5307035446167
    6. 'block' → logprob: -12.2807035446167
    7. ' ' → logprob: -12.7807035446167
    8. ' block' → logprob: -13.4057035446167
    9. '	l' → logprob: -13.6557035446167
    10. '
' → logprob: -14.0307035446167

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.2987729102605954e-05
    2. ' in' → logprob: -10.625042915344238
    3. '1' → logprob: -11.750042915344238
    4. 'l' → logprob: -12.875042915344238
    5. 'ock' → logprob: -13.000042915344238
    6. 'not' → logprob: -13.250042915344238
    7. 'in' → logprob: -14.125042915344238
    8. '[' → logprob: -14.750042915344238
    9. 'm' → logprob: -15.000042915344238
    10. '[l' → logprob: -15.250042915344238

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10070595890283585
    2. 'in' → logprob: -2.350705862045288
    3. ' !=' → logprob: -8.725706100463867
    4. ' ' → logprob: -9.350706100463867
    5. '   ' → logprob: -9.725706100463867
    6. ')' → logprob: -10.225706100463867
    7. '!=' → logprob: -10.600706100463867
    8. ' not' → logprob: -10.725706100463867
    9. '[in' → logprob: -10.850706100463867
    10. '
' → logprob: -11.225706100463867

Token 539: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.021421028301119804
    2. 'lock' → logprob: -4.146420955657959
    3. ' block' → logprob: -5.271420955657959
    4. 'b' → logprob: -8.896421432495117
    5. ' lock' → logprob: -10.271421432495117
    6. 'blocks' → logprob: -10.521421432495117
    7. '
' → logprob: -12.021421432495117
    8. '   ' → logprob: -12.271421432495117
    9. 'range' → logprob: -12.771421432495117
    10. '[' → logprob: -12.771421432495117

Token 540: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05357921123504639
    2. 'blocks' → logprob: -3.428579330444336
    3. '_blocks' → logprob: -5.303579330444336
    4. 'b' → logprob: -5.428579330444336
    5. 'A' → logprob: -5.678579330444336
    6. 'block' → logprob: -5.678579330444336
    7. ' B' → logprob: -7.053579330444336
    8. '   ' → logprob: -7.303579330444336
    9. '[]' → logprob: -7.928579330444336
    10. '[' → logprob: -8.178579330444336

Token 541: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3758050799369812
    2. '   ' → logprob: -2.375805139541626
    3. ' for' → logprob: -2.625805139541626
    4. ':' → logprob: -2.750805139541626
    5. '           ' → logprob: -3.625805139541626
    6. ':
' → logprob: -4.000804901123047
    7. 'for' → logprob: -4.625804901123047
    8. ',' → logprob: -5.125804901123047
    9. '               ' → logprob: -5.750804901123047
    10. ' =' → logprob: -5.875804901123047

Token 542: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3218984305858612
    2. '           ' → logprob: -2.0718984603881836
    3. ' for' → logprob: -2.9468984603881836
    4. '<|end|>' → logprob: -3.0718984603881836
    5. ' ' → logprob: -3.8218984603881836
    6. '   ' → logprob: -4.321898460388184
    7. '        ' → logprob: -5.446898460388184
    8. '    ' → logprob: -6.196898460388184
    9. '               ' → logprob: -6.196898460388184
    10. 'for' → logprob: -6.446898460388184

Token 543: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08941081911325455
    2. ' l' → logprob: -2.4644107818603516
    3. ' (' → logprob: -9.214410781860352
    4. 'i' → logprob: -9.339410781860352
    5. '(l' → logprob: -9.714410781860352
    6. ' i' → logprob: -10.089410781860352
    7. 'lock' → logprob: -10.089410781860352
    8. 'len' → logprob: -10.214410781860352
    9. '   ' → logprob: -11.214410781860352
    10. 'block' → logprob: -11.339410781860352

Token 544: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019601555541157722
    2. '2' → logprob: -6.251960277557373
    3. 'l' → logprob: -12.001959800720215
    4. '[l' → logprob: -12.501959800720215
    5. '!=' → logprob: -12.564459800720215
    6. '[' → logprob: -12.626959800720215
    7. ' !=' → logprob: -13.064459800720215
    8. 'b' → logprob: -13.501959800720215
    9. '[i' → logprob: -13.626959800720215
    10. '==' → logprob: -13.876959800720215

Token 545: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04735817387700081
    2. 'in' → logprob: -3.297358274459839
    3. ' !=' → logprob: -5.29735803604126
    4. ' not' → logprob: -5.79735803604126
    5. '!=' → logprob: -7.42235803604126
    6. ' is' → logprob: -7.67235803604126
    7. 'not' → logprob: -9.297358512878418
    8. ' ' → logprob: -10.797358512878418
    9. ')' → logprob: -11.422358512878418
    10. '
' → logprob: -11.797358512878418

Token 546: ' acquired' (ID: 27937)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9809725284576416
    2. 'ac' → logprob: -1.4809725284576416
    3. ' acquired' → logprob: -1.4809725284576416
    4. ' in' → logprob: -2.4809725284576416
    5. 'not' → logprob: -3.3559725284576416
    6. ' not' → logprob: -3.7309725284576416
    7. 'held' → logprob: -4.7309722900390625
    8. 'before' → logprob: -5.4809722900390625
    9. 'different' → logprob: -5.9809722900390625
    10. 'locked' → logprob: -6.3559722900390625

Token 547: ' later' (ID: 4849)
  Prédit: ' later'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' later' → logprob: -1.0023635625839233
    2. ' earlier' → logprob: -1.2523635625839233
    3. 'later' → logprob: -2.252363681793213
    4. 'before' → logprob: -2.502363681793213
    5. ' before' → logprob: -2.627363681793213
    6. 'after' → logprob: -3.377363681793213
    7. ' after' → logprob: -4.127363681793213
    8. 'ear' → logprob: -4.502363681793213
    9. ' first' → logprob: -4.752363681793213
    10. '   ' → logprob: -5.127363681793213

Token 548: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.443568617105484
    2. '           ' → logprob: -1.8185685873031616
    3. 'in' → logprob: -2.568568706512451
    4. '       ' → logprob: -2.943568706512451
    5. ' and' → logprob: -3.193568706512451
    6. ',' → logprob: -4.943568706512451
    7. ':' → logprob: -5.943568706512451
    8. ':
' → logprob: -6.068568706512451
    9. 'and' → logprob: -6.068568706512451
    10. '               ' → logprob: -6.068568706512451

Token 549: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.8057981729507446
    2. 'blocks' → logprob: -1.1807981729507446
    3. 'b' → logprob: -1.8057981729507446
    4. ' block' → logprob: -3.680798053741455
    5. 'the' → logprob: -3.805798053741455
    6. ' blocks' → logprob: -4.055798053741455
    7. 'range' → logprob: -5.055798053741455
    8. ' the' → logprob: -5.555798053741455
    9. ' b' → logprob: -5.805798053741455
    10. 'A' → logprob: -6.680798053741455

Token 550: ' B' (ID: 418)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15062272548675537
    2. 'A' → logprob: -2.900622844696045
    3. '   ' → logprob: -3.400622844696045
    4. '[' → logprob: -4.650622844696045
    5. '[j' → logprob: -4.650622844696045
    6. 's' → logprob: -5.025622844696045
    7. 'i' → logprob: -5.400622844696045
    8. '       ' → logprob: -5.650622844696045
    9. ')' → logprob: -6.025622844696045
    10. ' ' → logprob: -6.025622844696045

Token 551: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4183815121650696
    2. '       ' → logprob: -2.043381452560425
    3. ':' → logprob: -2.293381452560425
    4. ':
' → logprob: -3.418381452560425
    5. ',' → logprob: -3.668381452560425
    6. ' for' → logprob: -4.043381690979004
    7. '               ' → logprob: -4.793381690979004
    8. ' and' → logprob: -5.168381690979004
    9. '):
' → logprob: -5.543381690979004
    10. ')' → logprob: -5.543381690979004

Token 552: ' conflict' (ID: 21461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6384389996528625
    2. '<|end|>' → logprob: -1.2634389400482178
    3. '           ' → logprob: -2.2634389400482178
    4. ' ' → logprob: -2.8884389400482178
    5. '        ' → logprob: -4.513439178466797
    6. '   ' → logprob: -5.013439178466797
    7. ' for' → logprob: -5.888439178466797
    8. '               ' → logprob: -6.263439178466797
    9. '    ' → logprob: -6.638439178466797
    10. '<|end|>' → logprob: -6.888439178466797

Token 553: ' may' (ID: 1340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1829028129577637
    2. ' for' → logprob: -1.1829028129577637
    3. 'for' → logprob: -1.5579028129577637
    4. '       ' → logprob: -2.8079028129577637
    5. '           ' → logprob: -3.5579028129577637
    6. '<|end|>' → logprob: -3.8079028129577637
    7. '[i' → logprob: -4.432902812957764
    8. '               ' → logprob: -4.682902812957764
    9. '[' → logprob: -5.057902812957764
    10. '                   ' → logprob: -5.182902812957764

Token 554: ' occur' (ID: 11416)
  Prédit: 'occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occur' → logprob: -0.3106217682361603
    2. 'continue' → logprob: -2.060621738433838
    3. ' occur' → logprob: -2.810621738433838
    4. '   ' → logprob: -4.435621738433838
    5. 'exist' → logprob: -4.435621738433838
    6. ' arise' → logprob: -4.560621738433838
    7. 'appear' → logprob: -4.560621738433838
    8. ' continue' → logprob: -5.060621738433838
    9. ' be' → logprob: -5.435621738433838
    10. '.append' → logprob: -5.810621738433838

Token 555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07622619718313217
    2. '       ' → logprob: -2.951226234436035
    3. ' for' → logprob: -4.701226234436035
    4. '           ' → logprob: -5.076226234436035
    5. 'for' → logprob: -6.326226234436035
    6. '    
' → logprob: -6.576226234436035
    7. ',' → logprob: -7.326226234436035
    8. '
' → logprob: -7.701226234436035
    9. '    ' → logprob: -8.076226234436035
    10. '        
' → logprob: -8.326226234436035

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022811409085989
    2. '       ' → logprob: -4.397811412811279
    3. ' for' → logprob: -5.272811412811279
    4. '    
' → logprob: -6.397811412811279
    5. 'for' → logprob: -6.897811412811279
    6. '    ' → logprob: -7.022811412811279
    7. '```' → logprob: -7.772811412811279
    8. '
' → logprob: -8.022810935974121
    9. ' ' → logprob: -8.647810935974121
    10. '<|end|>' → logprob: -9.147810935974121

Token 557: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10290142148733139
    2. 'for' → logprob: -2.8529014587402344
    3. ' for' → logprob: -3.2279014587402344
    4. '
' → logprob: -8.602901458740234
    5. 'from' → logprob: -8.852901458740234
    6. '    
' → logprob: -9.977901458740234
    7. '       ' → logprob: -10.477901458740234
    8. '	for' → logprob: -10.727901458740234
    9. '```' → logprob: -10.852901458740234
    10. ' from' → logprob: -11.852901458740234

Token 558: ' But' (ID: 3072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7079310417175293
    2. 'for' → logprob: -1.2079310417175293
    3. '   ' → logprob: -1.5829310417175293
    4. '    
' → logprob: -7.207931041717529
    5. ' 
' → logprob: -7.457931041717529
    6. '
' → logprob: -7.707931041717529
    7. '       ' → logprob: -7.957931041717529
    8. 'from' → logprob: -8.082931518554688
    9. '```' → logprob: -8.707931518554688
    10. '    ' → logprob: -9.082931518554688

Token 559: ' conflicts' (ID: 50037)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26883989572525024
    2. 'for' → logprob: -2.6438398361206055
    3. '       ' → logprob: -3.2688398361206055
    4. '   ' → logprob: -3.6438398361206055
    5. '    ' → logprob: -3.7688398361206055
    6. ' continue' → logprob: -4.0188398361206055
    7. 'continue' → logprob: -4.3938398361206055
    8. '<|end|>' → logprob: -4.5188398361206055
    9. ' not' → logprob: -4.7688398361206055
    10. ' ' → logprob: -4.8938398361206055

Token 560: ' arise' (ID: 46435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.888204574584961
    2. 'continue' → logprob: -2.138204574584961
    3. ' continue' → logprob: -2.138204574584961
    4. 'for' → logprob: -2.263204574584961
    5. ' =' → logprob: -2.388204574584961
    6. ' are' → logprob: -2.638204574584961
    7. ' may' → logprob: -2.763204574584961
    8. ' can' → logprob: -3.138204574584961
    9. ' between' → logprob: -3.388204574584961
    10. '=' → logprob: -3.388204574584961

Token 561: ' only' (ID: 1606)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1293017864227295
    2. ' from' → logprob: -1.3793017864227295
    3. '   ' → logprob: -1.7543017864227295
    4. '       ' → logprob: -2.8793017864227295
    5. ' only' → logprob: -3.1293017864227295
    6. ' if' → logprob: -3.1293017864227295
    7. ' between' → logprob: -3.2543017864227295
    8. ' for' → logprob: -4.004302024841309
    9. ' when' → logprob: -4.504302024841309
    10. 'for' → logprob: -4.629302024841309

Token 562: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9880359768867493
    2. ' when' → logprob: -1.1130359172821045
    3. 'from' → logprob: -1.9880359172821045
    4. ' from' → logprob: -2.3630359172821045
    5. 'when' → logprob: -3.9880359172821045
    6. '       ' → logprob: -4.363036155700684
    7. ' between' → logprob: -4.738036155700684
    8. '   ' → logprob: -4.988036155700684
    9. ' in' → logprob: -5.113036155700684
    10. 'if' → logprob: -5.113036155700684

Token 563: ' locks' (ID: 50098)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.788305401802063
    2. 'l' → logprob: -0.913305401802063
    3. ' there' → logprob: -3.9133052825927734
    4. 'b' → logprob: -3.9133052825927734
    5. ' the' → logprob: -4.413305282592773
    6. 'i' → logprob: -4.538305282592773
    7. ' i' → logprob: -4.913305282592773
    8. 'len' → logprob: -4.913305282592773
    9. ' b' → logprob: -5.163305282592773
    10. '   ' → logprob: -5.163305282592773

Token 564: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6177321672439575
    2. ' acquired' → logprob: -1.6177321672439575
    3. '[i' → logprob: -2.492732048034668
    4. '[l' → logprob: -3.242732048034668
    5. 'are' → logprob: -3.242732048034668
    6. ' in' → logprob: -3.617732048034668
    7. '[' → logprob: -3.992732048034668
    8. '   ' → logprob: -4.742732048034668
    9. 'in' → logprob: -4.867732048034668
    10. 'ac' → logprob: -4.992732048034668

Token 565: ' used' (ID: 2061)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7297288775444031
    2. 'held' → logprob: -1.4797289371490479
    3. ' acquired' → logprob: -1.8547289371490479
    4. ' held' → logprob: -3.729728937149048
    5. 'shared' → logprob: -3.854728937149048
    6. 'already' → logprob: -3.979728937149048
    7. 'different' → logprob: -3.979728937149048
    8. 'currently' → logprob: -4.729728698730469
    9. 'in' → logprob: -5.104728698730469
    10. '```' → logprob: -5.229728698730469

Token 566: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3292640447616577
    2. '   ' → logprob: -1.4542640447616577
    3. ' in' → logprob: -2.0792641639709473
    4. ' ' → logprob: -2.5792641639709473
    5. '           ' → logprob: -2.7042641639709473
    6. ' by' → logprob: -3.2042641639709473
    7. '[' → logprob: -3.4542641639709473
    8. '    ' → logprob: -3.7042641639709473
    9. 'in' → logprob: -4.204264163970947
    10. '  ' → logprob: -4.329264163970947

Token 567: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.05002031475305557
    2. ' different' → logprob: -4.175020217895508
    3. 'multiple' → logprob: -4.550020217895508
    4. 'other' → logprob: -5.175020217895508
    5. 'both' → logprob: -5.675020217895508
    6. 'conf' → logprob: -5.675020217895508
    7. 'order' → logprob: -6.550020217895508
    8. 'more' → logprob: -6.550020217895508
    9. 'the' → logprob: -6.550020217895508
    10. 'a' → logprob: -6.550020217895508

Token 568: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.7020346522331238
    2. 'blocks' → logprob: -0.8270346522331238
    3. ' threads' → logprob: -3.2020347118377686
    4. 'threads' → logprob: -3.7020347118377686
    5. 'b' → logprob: -7.2020344734191895
    6. 'block' → logprob: -7.8270344734191895
    7. ' block' → logprob: -9.452034950256348
    8. 'thread' → logprob: -10.077034950256348
    9. '```' → logprob: -10.077034950256348
    10. '.blocks' → logprob: -10.452034950256348

Token 569: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01669073849916458
    2. '<|end|>' → logprob: -5.016690731048584
    3. '    
' → logprob: -5.516690731048584
    4. ' for' → logprob: -6.016690731048584
    5. '
' → logprob: -6.266690731048584
    6. 'for' → logprob: -7.141690731048584
    7. '       ' → logprob: -7.891690731048584
    8. '<|end|>' → logprob: -9.016691207885742
    9. ' 
' → logprob: -9.516691207885742
    10. '    ' → logprob: -10.266691207885742

Token 570: ' may' (ID: 1340)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17633524537086487
    2. 'l' → logprob: -2.801335334777832
    3. ' not' → logprob: -3.301335334777832
    4. ' i' → logprob: -4.301335334777832
    5. ' the' → logprob: -5.426335334777832
    6. ' for' → logprob: -5.426335334777832
    7. ' different' → logprob: -5.551335334777832
    8. 'different' → logprob: -5.676335334777832
    9. '   ' → logprob: -5.801335334777832
    10. ' used' → logprob: -5.801335334777832

Token 571: ' cause' (ID: 7075)
  Prédit: ' conflict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflict' → logprob: -1.4670051336288452
    2. ' be' → logprob: -1.7170051336288452
    3. ' overlap' → logprob: -1.9670051336288452
    4. ' cause' → logprob: -2.3420052528381348
    5. '       ' → logprob: -2.4670052528381348
    6. 'be' → logprob: -3.0920052528381348
    7. 'cause' → logprob: -3.3420052528381348
    8. 'wait' → logprob: -3.5920052528381348
    9. '           ' → logprob: -3.8420052528381348
    10. 'conf' → logprob: -3.8420052528381348

Token 572: ' circular' (ID: 37626)
  Prédit: 'dead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dead' → logprob: -0.652043342590332
    2. ' dead' → logprob: -0.777043342590332
    3. 'a' → logprob: -4.777043342590332
    4. ' a' → logprob: -5.152043342590332
    5. 'wait' → logprob: -6.277043342590332
    6. ' waits' → logprob: -7.027043342590332
    7. 'cycles' → logprob: -7.652043342590332
    8. ' wait' → logprob: -7.652043342590332
    9. '   ' → logprob: -7.777043342590332
    10. ' cycles' → logprob: -8.402043342590332

Token 573: ' waits' (ID: 99777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0457099974155426
    2. '<|end|>' → logprob: -3.1707100868225098
    3. '       ' → logprob: -6.42071008682251
    4. '<|end|>' → logprob: -8.170709609985352
    5. '    
' → logprob: -8.295709609985352
    6. ' for' → logprob: -8.920709609985352
    7. '    ' → logprob: -9.170709609985352
    8. ' ' → logprob: -9.420709609985352
    9. '
' → logprob: -9.670709609985352
    10. ')' → logprob: -10.170709609985352

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027634156867861748
    2. '       ' → logprob: -4.652634143829346
    3. ' for' → logprob: -4.652634143829346
    4. 'for' → logprob: -5.277634143829346
    5. '    
' → logprob: -6.527634143829346
    6. '    ' → logprob: -7.527634143829346
    7. '
' → logprob: -8.527634620666504
    8. ' ' → logprob: -8.777634620666504
    9. '<|end|>' → logprob: -8.777634620666504
    10. '        
' → logprob: -9.152634620666504

Token 576: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009877204895019531
    2. ' for' → logprob: -5.1348772048950195
    3. 'for' → logprob: -5.6348772048950195
    4. '    
' → logprob: -8.25987720489502
    5. '       ' → logprob: -10.25987720489502
    6. '
' → logprob: -10.50987720489502
    7. '    ' → logprob: -10.88487720489502
    8. '<|end|>' → logprob: -11.25987720489502
    9. '	for' → logprob: -12.38487720489502
    10. '```' → logprob: -13.00987720489502

Token 577: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.528611958026886
    2. 'for' → logprob: -1.2786118984222412
    3. ' for' → logprob: -2.028611898422241
    4. '       ' → logprob: -7.77861213684082
    5. '
' → logprob: -9.52861213684082
    6. '```' → logprob: -9.90361213684082
    7. '    
' → logprob: -10.27861213684082
    8. '           ' → logprob: -10.90361213684082
    9. '    ' → logprob: -11.27861213684082
    10. 'from' → logprob: -11.52861213684082

Token 578: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5428551435470581
    2. ' continue' → logprob: -1.417855143547058
    3. ' for' → logprob: -2.0428552627563477
    4. 'continue' → logprob: -4.167855262756348
    5. '   ' → logprob: -4.917855262756348
    6. ' ' → logprob: -5.042855262756348
    7. ' =' → logprob: -5.292855262756348
    8. ' need' → logprob: -5.667855262756348
    9. ' can' → logprob: -6.042855262756348
    10. '       ' → logprob: -6.292855262756348

Token 579: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41973981261253357
    2. ' for' → logprob: -1.419739842414856
    3. ' edges' → logprob: -2.6697397232055664
    4. 'edges' → logprob: -3.6697397232055664
    5. '   ' → logprob: -5.794739723205566
    6. ' code' → logprob: -6.544739723205566
    7. 'from' → logprob: -7.794739723205566
    8. '_edges' → logprob: -7.919739723205566
    9. '       ' → logprob: -8.044739723205566
    10. 'import' → logprob: -9.544739723205566

Token 580: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34262749552726746
    2. ' between' → logprob: -1.7176275253295898
    3. ' from' → logprob: -2.71762752532959
    4. 'for' → logprob: -4.21762752532959
    5. 'between' → logprob: -4.21762752532959
    6. ' for' → logprob: -4.34262752532959
    7. '[from' → logprob: -7.46762752532959
    8. '_between' → logprob: -8.21762752532959
    9. '   ' → logprob: -8.34262752532959
    10. '[l' → logprob: -8.71762752532959

Token 581: ' lock' (ID: 8109)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20377324521541595
    2. 'lock' → logprob: -2.078773260116577
    3. ' l' → logprob: -3.078773260116577
    4. ' lock' → logprob: -5.203773021697998
    5. 'b' → logprob: -5.453773021697998
    6. 'locks' → logprob: -6.203773021697998
    7. 'block' → logprob: -7.703773021697998
    8. ' b' → logprob: -8.203773498535156
    9. 'blocks' → logprob: -9.078773498535156
    10. '   ' → logprob: -9.203773498535156

Token 582: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7039212584495544
    2. '[l' → logprob: -1.5789213180541992
    3. '_to' → logprob: -2.328921318054199
    4. 'l' → logprob: -3.203921318054199
    5. 'to' → logprob: -4.078921318054199
    6. 'in' → logprob: -4.328921318054199
    7. '1' → logprob: -4.328921318054199
    8. 'for' → logprob: -4.328921318054199
    9. '   ' → logprob: -4.453921318054199
    10. 'from' → logprob: -4.578921318054199

Token 583: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1911029815673828
    2. '_to' → logprob: -1.3161029815673828
    3. 'to' → logprob: -1.6911029815673828
    4. ' in' → logprob: -2.066102981567383
    5. 's' → logprob: -3.816102981567383
    6. 'for' → logprob: -3.941102981567383
    7. '[' → logprob: -4.316102981567383
    8. 'in' → logprob: -4.566102981567383
    9. '[l' → logprob: -4.691102981567383
    10. ' for' → logprob: -4.941102981567383

Token 584: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.0013772567035630345
    2. ' lock' → logprob: -6.876377105712891
    3. 'l' → logprob: -8.75137710571289
    4. 'locks' → logprob: -8.75137710571289
    5. 'b' → logprob: -10.75137710571289
    6. 'block' → logprob: -13.12637710571289
    7. '   ' → logprob: -13.62637710571289
    8. ' l' → logprob: -14.25137710571289
    9. '	lock' → logprob: -14.50137710571289
    10. 'locked' → logprob: -14.87637710571289

Token 585: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2226544618606567
    2. ']' → logprob: -1.9726544618606567
    3. '[i' → logprob: -2.097654342651367
    4. '[' → logprob: -2.097654342651367
    5. 's' → logprob: -2.722654342651367
    6. '_to' → logprob: -3.222654342651367
    7. '[s' → logprob: -3.847654342651367
    8. '   ' → logprob: -4.097654342651367
    9. ')' → logprob: -4.097654342651367
    10. '       ' → logprob: -4.222654342651367

Token 586: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10010744631290436
    2. '<|end|>' → logprob: -2.600107431411743
    3. '
' → logprob: -4.600107669830322
    4. ' for' → logprob: -5.475107669830322
    5. '       ' → logprob: -6.225107669830322
    6. ' ' → logprob: -6.350107669830322
    7. '<|end|>' → logprob: -6.975107669830322
    8. '    
' → logprob: -7.600107669830322
    9. 'for' → logprob: -7.975107669830322
    10. '    ' → logprob: -8.225107192993164

Token 587: ' there' (ID: 1354)
  Prédit: ' lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lock' → logprob: -0.8332357406616211
    2. 'lock' → logprob: -1.083235740661621
    3. ' l' → logprob: -1.583235740661621
    4. 'l' → logprob: -3.958235740661621
    5. ' any' → logprob: -7.208235740661621
    6. ' block' → logprob: -8.333235740661621
    7. 'len' → logprob: -8.583235740661621
    8. '(lock' → logprob: -8.708235740661621
    9. 'locks' → logprob: -8.708235740661621
    10. ' blocks' → logprob: -8.958235740661621

Token 588: ' exists' (ID: 13031)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5433834791183472
    2. 'is' → logprob: -1.0433834791183472
    3. ' in' → logprob: -3.6683835983276367
    4. ' exists' → logprob: -4.293383598327637
    5. 'in' → logprob: -4.793383598327637
    6. 'exists' → logprob: -5.043383598327637
    7. ' are' → logprob: -5.418383598327637
    8. ''s' → logprob: -6.168383598327637
    9. 's' → logprob: -6.668383598327637
    10. 'are' → logprob: -6.918383598327637

Token 589: ' blocks' (ID: 18125)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2663061618804932
    2. 'b' → logprob: -2.141306161880493
    3. ' b' → logprob: -2.141306161880493
    4. ' another' → logprob: -2.141306161880493
    5. ' l' → logprob: -2.266306161880493
    6. 'a' → logprob: -2.891306161880493
    7. ' block' → logprob: -3.391306161880493
    8. ' blocks' → logprob: -3.391306161880493
    9. ' i' → logprob: -3.891306161880493
    10. 'i' → logprob: -4.391305923461914

Token 590: ' where' (ID: 1919)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3792375326156616
    2. 'for' → logprob: -1.7542375326156616
    3. ' that' → logprob: -1.7542375326156616
    4. ' for' → logprob: -2.754237651824951
    5. '   ' → logprob: -3.129237651824951
    6. ' in' → logprob: -3.129237651824951
    7. 'that' → logprob: -3.379237651824951
    8. 'with' → logprob: -3.504237651824951
    9. '[l' → logprob: -3.879237651824951
    10. 'from' → logprob: -4.129237651824951

Token 591: ' lock' (ID: 8109)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2964836359024048
    2. 'lock' → logprob: -1.4214836359024048
    3. ' l' → logprob: -4.296483516693115
    4. ' lock' → logprob: -7.171483516693115
    5. 'locks' → logprob: -8.296483993530273
    6. 'i' → logprob: -8.671483993530273
    7. '   ' → logprob: -9.296483993530273
    8. '           ' → logprob: -9.421483993530273
    9. 'b' → logprob: -10.171483993530273
    10. 'block' → logprob: -10.296483993530273

Token 592: '1' (ID: 16)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.04318222403526306
    2. '2' → logprob: -4.418182373046875
    3. 's' → logprob: -4.418182373046875
    4. '[i' → logprob: -5.043182373046875
    5. '[l' → logprob: -6.043182373046875
    6. '_' → logprob: -6.418182373046875
    7. 'to' → logprob: -6.418182373046875
    8. '   ' → logprob: -6.668182373046875
    9. '[s' → logprob: -7.043182373046875
    10. '1' → logprob: -7.293182373046875

Token 593: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24344046413898468
    2. ' is' → logprob: -1.9934405088424683
    3. 'in' → logprob: -3.7434403896331787
    4. 's' → logprob: -4.368440628051758
    5. ' !=' → logprob: -4.743440628051758
    6. ' appears' → logprob: -4.868440628051758
    7. '[i' → logprob: -5.118440628051758
    8. ' and' → logprob: -5.743440628051758
    9. 'is' → logprob: -6.118440628051758
    10. '   ' → logprob: -6.243440628051758

Token 594: ' acquired' (ID: 27937)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.031298719346523285
    2. ' acquired' → logprob: -3.5312986373901367
    3. 'held' → logprob: -7.656298637390137
    4. '   ' → logprob: -8.281298637390137
    5. '```' → logprob: -9.031298637390137
    6. '_ac' → logprob: -9.281298637390137
    7. ' ac' → logprob: -9.531298637390137
    8. '[i' → logprob: -9.781298637390137
    9. '	ac' → logprob: -9.906298637390137
    10. '#ac' → logprob: -10.031298637390137

Token 595: ' before' (ID: 2254)
  Prédit: ' later'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' later' → logprob: -0.36457717418670654
    2. ' earlier' → logprob: -2.114577293395996
    3. ' in' → logprob: -2.989577293395996
    4. 'later' → logprob: -3.489577293395996
    5. ' and' → logprob: -3.614577293395996
    6. ' after' → logprob: -3.864577293395996
    7. 'in' → logprob: -4.614577293395996
    8. 'after' → logprob: -4.989577293395996
    9. '   ' → logprob: -5.239577293395996
    10. ' before' → logprob: -5.364577293395996

Token 596: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.15355756878852844
    2. 'l' → logprob: -2.278557538986206
    3. 'b' → logprob: -3.403557538986206
    4. 'locks' → logprob: -6.403557777404785
    5. ' l' → logprob: -7.028557777404785
    6. ' lock' → logprob: -7.028557777404785
    7. ' b' → logprob: -7.153557777404785
    8. 'the' → logprob: -7.653557777404785
    9. '   ' → logprob: -7.653557777404785
    10. 'block' → logprob: -7.903557777404785

Token 597: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05065818876028061
    2. 's' → logprob: -3.8006582260131836
    3. '[i' → logprob: -3.8006582260131836
    4. '[' → logprob: -6.175658226013184
    5. '   ' → logprob: -6.675658226013184
    6. '(s' → logprob: -7.800658226013184
    7. '[
' → logprob: -8.550658226013184
    8. '[s' → logprob: -8.550658226013184
    9. '[j' → logprob: -9.175658226013184
    10. ' ' → logprob: -9.800658226013184

Token 598: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03477109223604202
    2. ' for' → logprob: -4.159770965576172
    3. '<|end|>' → logprob: -4.659770965576172
    4. '       ' → logprob: -5.659770965576172
    5. '
' → logprob: -6.159770965576172
    6. 'for' → logprob: -6.659770965576172
    7. '           ' → logprob: -7.784770965576172
    8. '    
' → logprob: -8.159770965576172
    9. '<|end|>' → logprob: -8.534770965576172
    10. 'from' → logprob: -8.534770965576172

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4424213469028473
    2. 'for' → logprob: -2.0674214363098145
    3. '       ' → logprob: -2.0674214363098145
    4. ' for' → logprob: -2.4424214363098145
    5. '    
' → logprob: -5.4424214363098145
    6. '<|end|>' → logprob: -5.4424214363098145
    7. '    ' → logprob: -6.4424214363098145
    8. '           ' → logprob: -6.8174214363098145
    9. '        
' → logprob: -6.9424214363098145
    10. ' ' → logprob: -6.9424214363098145

Token 600: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.602200448513031
    2. '   ' → logprob: -0.852200448513031
    3. ' for' → logprob: -3.727200508117676
    4. 'from' → logprob: -6.477200508117676
    5. '
' → logprob: -8.602200508117676
    6. '```' → logprob: -10.352200508117676
    7. '#' (adapté à ' #') → logprob: -10.477200508117676
    8. 'lock' → logprob: -10.852200508117676
    9. '    
' → logprob: -11.102200508117676
    10. ' from' → logprob: -11.102200508117676

Token 601: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15685778856277466
    2. '   ' → logprob: -2.15685772895813
    3. ' for' → logprob: -3.53185772895813
    4. '       ' → logprob: -9.90685749053955
    5. 'from' → logprob: -9.90685749053955
    6. '
' → logprob: -10.28185749053955
    7. '    
' → logprob: -10.65685749053955
    8. 'lock' → logprob: -10.65685749053955
    9. '```' → logprob: -11.15685749053955
    10. '    ' → logprob: -11.65685749053955

Token 602: ' detect' (ID: 11839)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7211986780166626
    2. 'for' → logprob: -1.7211986780166626
    3. ' for' → logprob: -2.221198558807373
    4. ' l' → logprob: -2.346198558807373
    5. ' continue' → logprob: -2.846198558807373
    6. 'continue' → logprob: -4.221198558807373
    7. 'i' → logprob: -4.471198558807373
    8. ' range' → logprob: -4.596198558807373
    9. 'range' → logprob: -4.846198558807373
    10. ' in' → logprob: -4.971198558807373

Token 603: ' unsafe' (ID: 37750)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6544061303138733
    2. 'l' → logprob: -0.7794061303138733
    3. 'i' → logprob: -5.5294060707092285
    4. ' i' → logprob: -5.5294060707092285
    5. 'lock' → logprob: -5.7794060707092285
    6. 'for' → logprob: -6.4044060707092285
    7. ' for' → logprob: -6.5294060707092285
    8. ' lock' → logprob: -6.6544060707092285
    9. '   ' → logprob: -6.9044060707092285
    10. 'b' → logprob: -7.1544060707092285

Token 604: ',' (ID: 11)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -1.1310832500457764
    2. 'for' → logprob: -1.6310832500457764
    3. 'states' → logprob: -1.8810832500457764
    4. 'locks' → logprob: -2.6310832500457764
    5. '#' → logprob: -3.5060832500457764
    6. ' states' → logprob: -3.6310832500457764
    7. 'edges' → logprob: -3.6310832500457764
    8. '_cycles' → logprob: -3.8810832500457764
    9. 'state' → logprob: -4.0060834884643555
    10. '   ' → logprob: -4.0060834884643555

Token 605: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49722281098365784
    2. 'for' → logprob: -1.1222227811813354
    3. 'visited' → logprob: -3.122222900390625
    4. ' visited' → logprob: -4.372222900390625
    5. 'from' → logprob: -5.622222900390625
    6. 'import' → logprob: -6.372222900390625
    7. ' from' → logprob: -6.997222900390625
    8. '   ' → logprob: -7.247222900390625
    9. 'return' → logprob: -7.372222900390625
    10. '#' → logprob: -7.997222900390625

Token 606: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5398902297019958
    2. ' continue' → logprob: -2.2898902893066406
    3. 'for' → logprob: -2.4148902893066406
    4. 'need' → logprob: -2.6648902893066406
    5. 'def' → logprob: -3.4148902893066406
    6. 'return' → logprob: -3.4148902893066406
    7. ' need' → logprob: -3.6648902893066406
    8. '   ' → logprob: -4.289890289306641
    9. ' for' → logprob: -4.289890289306641
    10. '#' → logprob: -4.414890289306641

Token 607: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7763433456420898
    2. 'for' → logprob: -0.7763433456420898
    3. 'def' → logprob: -3.77634334564209
    4. 'cycles' → logprob: -3.77634334564209
    5. ' if' → logprob: -4.40134334564209
    6. ' cycles' → logprob: -4.52634334564209
    7. 'if' → logprob: -4.90134334564209
    8. ' def' → logprob: -7.77634334564209
    9. ' all' → logprob: -8.02634334564209
    10. '#' → logprob: -8.02634334564209

Token 608: ' the' (ID: 290)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.7328901886940002
    2. ' any' → logprob: -1.3578901290893555
    3. 'any' → logprob: -2.3578901290893555
    4. 'there' → logprob: -2.3578901290893555
    5. ' a' → logprob: -3.7328901290893555
    6. 'a' → logprob: -4.3578901290893555
    7. ' the' → logprob: -5.1078901290893555
    8. 'len' → logprob: -5.2328901290893555
    9. 'the' → logprob: -5.4828901290893555
    10. ' cycles' → logprob: -5.6078901290893555

Token 609: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3731326460838318
    2. 'next' → logprob: -2.4981327056884766
    3. 'g' → logprob: -2.6231327056884766
    4. 'def' → logprob: -3.4981327056884766
    5. ' graph' → logprob: -3.4981327056884766
    6. '#' → logprob: -3.9981327056884766
    7. ' next' → logprob: -3.9981327056884766
    8. 'visited' → logprob: -4.623132705688477
    9. 'import' → logprob: -5.373132705688477
    10. 'lock' → logprob: -5.373132705688477

Token 610: ' (' (ID: 350)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.5100409388542175
    2. ' has' → logprob: -1.0100409984588623
    3. ' contains' → logprob: -3.7600409984588623
    4. 'contains' → logprob: -5.010040760040283
    5. '_has' → logprob: -5.760040760040283
    6. '#' → logprob: -7.010040760040283
    7. '.has' → logprob: -7.010040760040283
    8. '   ' → logprob: -8.260041236877441
    9. ' ' → logprob: -10.010041236877441
    10. '
' → logprob: -11.135041236877441

Token 611: 'of' (ID: 1440)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.547914445400238
    2. 'has' → logprob: -1.5479145050048828
    3. ' has' → logprob: -2.172914505004883
    4. 'any' → logprob: -3.922914505004883
    5. ' any' → logprob: -3.922914505004883
    6. '#' → logprob: -4.047914505004883
    7. ' contains' → logprob: -4.922914505004883
    8. 'def' → logprob: -5.422914505004883
    9. ' there' → logprob: -5.422914505004883
    10. 'contains' → logprob: -5.672914505004883

Token 612: ' locks' (ID: 50098)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.09393124282360077
    2. ' locks' → logprob: -3.093931198120117
    3. ')' → logprob: -4.093931198120117
    4. 'lock' → logprob: -5.218931198120117
    5. 'g' → logprob: -5.343931198120117
    6. '10' → logprob: -5.593931198120117
    7. 'def' → logprob: -5.968931198120117
    8. 'the' → logprob: -6.343931198120117
    9. ' g' → logprob: -6.468931198120117
    10. 'all' → logprob: -6.968931198120117

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05217963084578514
    2. 'has' → logprob: -3.4271795749664307
    3. ' has' → logprob: -5.05217981338501
    4. '   ' → logprob: -5.30217981338501
    5. ' contains' → logprob: -5.92717981338501
    6. 'contains' → logprob: -6.67717981338501
    7. ')
' → logprob: -7.55217981338501
    8. ',' → logprob: -7.80217981338501
    9. ' is' → logprob: -7.92717981338501
    10. 'is' → logprob: -8.552179336547852

Token 614: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.47999730706214905
    2. ' contains' → logprob: -1.6049972772598267
    3. 'has' → logprob: -1.9799972772598267
    4. 'contains' → logprob: -3.729997396469116
    5. '   ' → logprob: -4.979997158050537
    6. '#' → logprob: -5.604997158050537
    7. ')' → logprob: -6.104997158050537
    8. '_has' → logprob: -6.104997158050537
    9. ' is' → logprob: -6.729997158050537
    10. '.has' → logprob: -7.479997158050537

Token 615: ' cycles' (ID: 41478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14900946617126465
    2. ' a' → logprob: -2.7740094661712646
    3. ' cycles' → logprob: -3.2740094661712646
    4. 'cycles' → logprob: -3.3990094661712646
    5. ' any' → logprob: -6.024009704589844
    6. 'any' → logprob: -6.149009704589844
    7. 'cycle' → logprob: -9.649009704589844
    8. '_cycles' → logprob: -9.649009704589844
    9. ' cycle' → logprob: -9.899009704589844
    10. '_cycle' → logprob: -11.149009704589844

Token 616: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5852237939834595
    2. '<|end|>' → logprob: -0.8352237939834595
    3. '       ' → logprob: -5.33522367477417
    4. '
' → logprob: -6.71022367477417
    5. ')' → logprob: -6.96022367477417
    6. '<|end|>' → logprob: -7.21022367477417
    7. '    ' → logprob: -8.335224151611328
    8. '    
' → logprob: -8.335224151611328
    9. ' for' → logprob: -8.460224151611328
    10. ' ' → logprob: -8.960224151611328

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014907071366906166
    2. 'for' → logprob: -5.014906883239746
    3. ' for' → logprob: -5.389906883239746
    4. '       ' → logprob: -6.264906883239746
    5. '<|end|>' → logprob: -7.139906883239746
    6. '
' → logprob: -8.139906883239746
    7. '    
' → logprob: -8.514906883239746
    8. '    ' → logprob: -9.264906883239746
    9. 'def' → logprob: -9.514906883239746
    10. ')' → logprob: -10.389906883239746

Token 618: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15592186152935028
    2. 'def' → logprob: -2.2809219360351562
    3. 'return' (adapté à ' return') → logprob: -3.2809219360351562
    4. 'for' → logprob: -6.155921936035156
    5. 'import' → logprob: -6.780921936035156
    6. '    
' → logprob: -8.030921936035156
    7. 'from' → logprob: -8.405921936035156
    8. '
' → logprob: -8.405921936035156
    9. ' for' → logprob: -8.905921936035156
    10. '<|end|>' → logprob: -8.905921936035156

Token 619: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009120595059357584
    2. ' g' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.750911712646484
    4. '[g' → logprob: -15.875911712646484
    5. '(g' → logprob: -16.125911712646484
    6. 'graph' → logprob: -16.500911712646484
    7. '```' → logprob: -17.125911712646484
    8. 'None' → logprob: -17.500911712646484
    9. '	g' → logprob: -17.625911712646484
    10. 'deque' → logprob: -18.000911712646484

Token 620: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 621: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594960927963257
    2. '       ' → logprob: -1.5094960927963257
    3. '    
' → logprob: -6.009496212005615
    4. '        
' → logprob: -6.634496212005615
    5. 'for' → logprob: -6.759496212005615
    6. '
' → logprob: -7.509496212005615
    7. '```' → logprob: -7.634496212005615
    8. '<|end|>' → logprob: -7.759496212005615
    9. ' for' → logprob: -8.009495735168457
    10. '           ' → logprob: -8.509495735168457

Token 622: ' dfs' (ID: 51252)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.3069583773612976
    2. 'has' → logprob: -1.6819584369659424
    3. ' detect' → logprob: -3.0569584369659424
    4. ' has' → logprob: -3.6819584369659424
    5. 'dfs' → logprob: -6.056958198547363
    6. 'top' → logprob: -6.556958198547363
    7. 'build' → logprob: -6.931958198547363
    8. 'find' → logprob: -7.806958198547363
    9. ' find' → logprob: -8.431958198547363
    10. ' dfs' → logprob: -8.431958198547363

Token 623: '(u' (ID: 17057)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.5531248450279236
    2. '(' → logprob: -1.5531249046325684
    3. '(v' → logprob: -2.3031249046325684
    4. '(graph' → logprob: -2.5531249046325684
    5. '(u' → logprob: -3.6781249046325684
    6. '(g' → logprob: -5.803124904632568
    7. '(vertex' → logprob: -5.928124904632568
    8. '(stack' → logprob: -6.928124904632568
    9. '(lock' → logprob: -7.053124904632568
    10. '(t' → logprob: -7.803124904632568

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.888114098226652e-05
    2. ',u' → logprob: -10.000088691711426
    3. ',v' → logprob: -10.375088691711426
    4. ',g' → logprob: -12.375088691711426
    5. ',
' → logprob: -13.125088691711426
    6. ',p' → logprob: -13.625088691711426
    7. ',d' → logprob: -13.625088691711426
    8. '):' → logprob: -13.875088691711426
    9. ' ,' → logprob: -14.125088691711426
    10. ',k' → logprob: -15.125088691711426

Token 625: ' g' (ID: 329)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.018170781433582306
    2. ' visited' → logprob: -4.1431708335876465
    3. 'vis' → logprob: -6.2681708335876465
    4. 'stack' → logprob: -8.893170356750488
    5. 'v' → logprob: -10.518170356750488
    6. 'g' → logprob: -10.893170356750488
    7. 'color' → logprob: -11.393170356750488
    8. ' stack' → logprob: -11.518170356750488
    9. ' g' → logprob: -11.518170356750488
    10. 'seen' → logprob: -11.768170356750488

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',u' → logprob: -16.250001907348633
    4. ',
' → logprob: -17.000001907348633
    5. ',int' → logprob: -18.000001907348633
    6. ',v' → logprob: -18.000001907348633
    7. ',state' → logprob: -18.125001907348633
    8. ',d' → logprob: -18.125001907348633
    9. '‌,' → logprob: -18.250001907348633
    10. ',p' → logprob: -18.625001907348633

Token 627: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.008958326652646065
    2. ' visited' → logprob: -4.758958339691162
    3. 'vis' → logprob: -8.133957862854004
    4. 'stack' → logprob: -10.883957862854004
    5. 'color' → logprob: -11.133957862854004
    6. 'seen' → logprob: -12.008957862854004
    7. 'v' → logprob: -13.133957862854004
    8. '```' → logprob: -13.383957862854004
    9. 'colors' → logprob: -13.508957862854004
    10. 'used' → logprob: -13.508957862854004

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -12.000011444091797
    3. '):
' → logprob: -13.000011444091797
    4. ',u' → logprob: -13.750011444091797
    5. '):' → logprob: -14.500011444091797
    6. ',
' → logprob: -15.125011444091797
    7. ',state' → logprob: -15.875011444091797
    8. ',k' → logprob: -16.250011444091797
    9. ',status' → logprob: -17.125011444091797
    10. ',v' → logprob: -17.250011444091797

Token 629: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.08190546929836273
    2. ' stack' → logprob: -3.0819053649902344
    3. 'rec' → logprob: -3.5819053649902344
    4. 'on' → logprob: -5.706905364990234
    5. 'path' → logprob: -6.831905364990234
    6. ' rec' → logprob: -8.331905364990234
    7. ' recursion' → logprob: -9.206905364990234
    8. ' on' → logprob: -9.331905364990234
    9. ' path' → logprob: -10.206905364990234
    10. '_stack' → logprob: -10.956905364990234

Token 630: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6690642237663269
    2. ',' → logprob: -1.2940642833709717
    3. '):
' → logprob: -1.5440642833709717
    4. '):
' → logprob: -9.04406452178955
    5. '):

' → logprob: -11.29406452178955
    6. ',u' → logprob: -12.16906452178955
    7. ')' → logprob: -12.54406452178955
    8. ':' → logprob: -13.29406452178955
    9. ' ,' → logprob: -13.66906452178955
    10. '[]):' → logprob: -13.91906452178955

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007850776426494122
    2. 'visited' → logprob: -5.632850646972656
    3. ' visited' → logprob: -6.632850646972656
    4. ':' → logprob: -6.757850646972656
    5. ' if' → logprob: -7.257850646972656
    6. ' True' → logprob: -8.007850646972656
    7. 'True' → logprob: -8.507850646972656
    8. '    ' → logprob: -9.007850646972656
    9. '```' → logprob: -9.382850646972656
    10. 'if' → logprob: -9.632850646972656

Token 632: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0019117422634735703
    2. '   ' → logprob: -6.501911640167236
    3. 'stack' → logprob: -8.501912117004395
    4. ' visited' → logprob: -9.126912117004395
    5. 'if' → logprob: -9.251912117004395
    6. '  ' → logprob: -14.376912117004395
    7. '    ' → logprob: -15.001912117004395
    8. '    
' → logprob: -15.626912117004395
    9. ' if' → logprob: -15.751912117004395
    10. ' stack' → logprob: -16.126911163330078

Token 633: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.8961017202818766e-05
    2. '[' → logprob: -9.750059127807617
    3. '[user' → logprob: -15.500059127807617
    4. 'u' → logprob: -16.000059127807617
    5. '[
' → logprob: -16.250059127807617
    6. '```' → logprob: -16.625059127807617
    7. '[]' → logprob: -17.250059127807617
    8. '[node' → logprob: -17.625059127807617
    9. '<|end|>' → logprob: -17.750059127807617
    10. '\[' → logprob: -17.875059127807617

Token 634: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027920426800847054
    2. ']=' → logprob: -3.9029204845428467
    3. '[u' → logprob: -5.402920246124268
    4. ')' → logprob: -6.277920246124268
    5. '[' → logprob: -7.902920246124268
    6. '=' → logprob: -8.152920722961426
    7. ']==' → logprob: -8.902920722961426
    8. ' =' → logprob: -9.777920722961426
    9. ')=' → logprob: -10.777920722961426
    10. ']+=' → logprob: -11.152920722961426

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000940046738833189
    2. ' =' → logprob: -7.000939846038818
    3. '[' → logprob: -11.000940322875977
    4. '[u' → logprob: -12.000940322875977
    5. '=True' → logprob: -12.750940322875977
    6. '+=' → logprob: -13.875940322875977
    7. '.add' → logprob: -14.250940322875977
    8. '.append' → logprob: -14.500940322875977
    9. ',' → logprob: -15.250940322875977
    10. ')' → logprob: -15.625940322875977

Token 636: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014708814211189747
    2. '1' → logprob: -4.264708995819092
    3. ' True' → logprob: -7.514708995819092
    4. ' ' → logprob: -16.88970947265625
    5. '(True' → logprob: -17.88970947265625
    6. '2' → logprob: -18.13970947265625
    7. '
' → logprob: -19.63970947265625
    8. '   ' → logprob: -19.76470947265625
    9. 'true' → logprob: -21.01470947265625
    10. '0' → logprob: -21.38970947265625

Token 637: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029794003814458847
    2. '1' → logprob: -3.5297939777374268
    3. ' True' → logprob: -10.404793739318848
    4. '2' → logprob: -11.404793739318848
    5. '0' → logprob: -13.654793739318848
    6. '(True' → logprob: -14.529793739318848
    7. 'False' → logprob: -15.154793739318848
    8. '-' → logprob: -16.154794692993164
    9. ''' → logprob: -16.654794692993164
    10. '3' → logprob: -17.654794692993164

Token 638: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2340463548898697
    2. 'for' → logprob: -1.9840463399887085
    3. '<|end|>' → logprob: -3.234046459197998
    4. ' for' → logprob: -4.359046459197998
    5. '
' → logprob: -4.359046459197998
    6. 'stack' → logprob: -6.609046459197998
    7. 'if' → logprob: -6.859046459197998
    8. '       ' → logprob: -7.234046459197998
    9. '	for' → logprob: -7.484046459197998
    10. '    
' → logprob: -7.609046459197998

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7065465450286865
    2. ' for' → logprob: -1.2065465450286865
    3. 'for' → logprob: -1.5815465450286865
    4. 'stack' → logprob: -6.831546783447266
    5. ' stack' → logprob: -8.331546783447266
    6. '	for' → logprob: -8.706546783447266
    7. '       ' → logprob: -9.206546783447266
    8. '<|end|>' → logprob: -10.081546783447266
    9. '	stack' → logprob: -10.706546783447266
    10. '  ' → logprob: -11.206546783447266

Token 640: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.694766489090398e-05
    2. 'stack' → logprob: -9.875066757202148
    3. ' for' → logprob: -11.125066757202148
    4. '   ' → logprob: -14.250066757202148
    5. '```' → logprob: -17.37506675720215
    6. '	for' → logprob: -17.75006675720215
    7. '    
' → logprob: -18.12506675720215
    8. 'return' → logprob: -18.25006675720215
    9. '
' → logprob: -18.75006675720215
    10. 'g' → logprob: -19.37506675720215

Token 641: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00043353010551072657
    2. ' v' → logprob: -7.750433444976807
    3. '(v' → logprob: -13.500433921813965
    4. 'w' → logprob: -14.375433921813965
    5. '```' → logprob: -15.000433921813965
    6. '	v' → logprob: -15.500433921813965
    7. '[v' → logprob: -16.62543296813965
    8. 'nv' → logprob: -16.62543296813965
    9. '`' → logprob: -17.50043296813965
    10. 'vv' → logprob: -17.87543296813965

Token 642: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931694149971008
    2. ' in' → logprob: -0.6931694149971008
    3. '	in' → logprob: -11.318169593811035
    4. '[' → logprob: -12.943169593811035
    5. ')' → logprob: -13.068169593811035
    6. '[in' → logprob: -13.318169593811035
    7. ' ' → logprob: -13.818169593811035
    8. '<|end|>' → logprob: -14.193169593811035
    9. '   ' → logprob: -14.818169593811035
    10. '_in' → logprob: -15.318169593811035

Token 643: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0005000127712264657
    2. ' g' → logprob: -7.625500202178955
    3. '[g' → logprob: -11.375499725341797
    4. '	g' → logprob: -15.000499725341797
    5. '(g' → logprob: -16.875499725341797
    6. 'range' → logprob: -17.250499725341797
    7. '_g' → logprob: -17.875499725341797
    8. 's' → logprob: -18.125499725341797
    9. '.g' → logprob: -18.375499725341797
    10. ')' → logprob: -18.375499725341797

Token 644: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.2664456789934775e-06
    2. 'u' → logprob: -14.125000953674316
    3. '):' → logprob: -16.375001907348633
    4. ')' → logprob: -16.625001907348633
    5. '[' → logprob: -16.625001907348633
    6. ':' → logprob: -16.625001907348633
    7. ']' → logprob: -16.875001907348633
    8. '	u' → logprob: -17.000001907348633
    9. '(u' → logprob: -17.125001907348633
    10. ' in' → logprob: -17.250001907348633

Token 645: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0009275413467548788
    2. ']:
' → logprob: -7.000927448272705
    3. ']' → logprob: -12.000927925109863
    4. ':' → logprob: -12.750927925109863
    5. ']:
' → logprob: -12.750927925109863
    6. '):' → logprob: -13.375927925109863
    7. ']:

' → logprob: -14.000927925109863
    8. ']>' → logprob: -14.750927925109863
    9. '']:' → logprob: -15.125927925109863
    10. ']):' → logprob: -15.375927925109863

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2762754559516907
    2. ' if' → logprob: -1.901275396347046
    3. 'if' → logprob: -2.401275396347046
    4. '```' → logprob: -6.651275634765625
    5. '   ' → logprob: -9.151275634765625
    6. '
' → logprob: -12.526275634765625
    7. '``' → logprob: -13.526275634765625
    8. '[' → logprob: -13.651275634765625
    9. '      ' → logprob: -13.776275634765625
    10. '    ' → logprob: -13.776275634765625

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006787605118006468
    2. ' if' → logprob: -5.0067877769470215
    3. '       ' → logprob: -9.756787300109863
    4. '           ' → logprob: -11.881787300109863
    5. '```' → logprob: -12.006787300109863
    6. '	if' → logprob: -14.381787300109863
    7. 'If' → logprob: -14.756787300109863
    8. ';if' → logprob: -15.631787300109863
    9. '0' → logprob: -16.75678825378418
    10. '
' → logprob: -17.00678825378418

Token 648: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.005296485032886267
    2. ' visited' → logprob: -5.25529670715332
    3. 'not' → logprob: -10.25529670715332
    4. ' not' → logprob: -10.50529670715332
    5. '   ' → logprob: -16.00529670715332
    6. ' ' → logprob: -18.00529670715332
    7. 'v' → logprob: -18.50529670715332
    8. 'vis' → logprob: -19.00529670715332
    9. ' ' → logprob: -19.38029670715332
    10. '!' → logprob: -19.50529670715332

Token 649: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.531315314830863e-06
    2. '[u' → logprob: -12.750003814697266
    3. 'v' → logprob: -14.750003814697266
    4. '```' → logprob: -16.750003814697266
    5. '[' → logprob: -17.375003814697266
    6. '==' → logprob: -17.625003814697266
    7. '	v' → logprob: -19.500003814697266
    8. '<v' → logprob: -20.250003814697266
    9. '[x' → logprob: -21.125003814697266
    10. '\[' → logprob: -21.875003814697266

Token 650: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4757266044616699
    2. ']==' → logprob: -0.9757266044616699
    3. '==' → logprob: -6.47572660446167
    4. '[' → logprob: -9.850727081298828
    5. ' ]' → logprob: -10.725727081298828
    6. ' ==' → logprob: -11.100727081298828
    7. '']==' → logprob: -12.100727081298828
    8. ')==' → logprob: -12.475727081298828
    9. '[]' → logprob: -12.975727081298828
    10. ')' → logprob: -13.850727081298828

Token 651: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009815827012062073
    2. ' ==' → logprob: -4.634815692901611
    3. ']==' → logprob: -10.50981616973877
    4. '[' → logprob: -11.63481616973877
    5. '()==' → logprob: -11.75981616973877
    6. '==-' → logprob: -11.75981616973877
    7. ')==' → logprob: -13.25981616973877
    8. '0' → logprob: -13.38481616973877
    9. '```' → logprob: -13.75981616973877
    10. '===' → logprob: -14.00981616973877

Token 652: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.000021934509277
    3. '1' → logprob: -12.250021934509277
    4. '   ' → logprob: -15.625021934509277
    5. '```' → logprob: -17.50002098083496
    6. '    ' → logprob: -19.12502098083496
    7. 'None' → logprob: -19.37502098083496
    8. '     ' → logprob: -19.37502098083496
    9. '
' → logprob: -19.62502098083496
    10. '  ' → logprob: -20.12502098083496

Token 653: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245595395565033
    2. '1' → logprob: -3.7732455730438232
    3. ' ' → logprob: -15.898245811462402
    4. 'False' → logprob: -17.898244857788086
    5. '```' → logprob: -18.148244857788086
    6. '   ' → logprob: -18.273244857788086
    7. 'None' → logprob: -19.023244857788086
    8. ''' → logprob: -19.148244857788086
    9. '"' → logprob: -19.773244857788086
    10. '
' → logprob: -20.023244857788086

Token 654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00042102107545360923
    2. ':
' → logprob: -8.125420570373535
    3. ' and' → logprob: -10.000420570373535
    4. ':return' → logprob: -10.750420570373535
    5. ' or' → logprob: -10.875420570373535
    6. '<|end|>' → logprob: -11.125420570373535
    7. '):' → logprob: -12.250420570373535
    8. ',' → logprob: -12.250420570373535
    9. 'and' → logprob: -12.500420570373535
    10. '       ' → logprob: -12.875420570373535

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023701780010014772
    2. '               ' → logprob: -6.877370357513428
    3. ':' → logprob: -7.627370357513428
    4. 'return' → logprob: -8.00236988067627
    5. '```' → logprob: -9.12736988067627
    6. '       ' → logprob: -9.62736988067627
    7. 'if' → logprob: -9.87736988067627
    8. ' return' → logprob: -10.00236988067627
    9. ':return' → logprob: -10.37736988067627
    10. ' if' → logprob: -10.37736988067627

Token 656: ' if' (ID: 538)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1535143107175827
    2. 'if' (adapté à ' if') → logprob: -2.0285143852233887
    3. 'stack' → logprob: -5.278514385223389
    4. 'yield' → logprob: -5.903514385223389
    5. 'res' → logprob: -6.903514385223389
    6. ' if' → logprob: -7.278514385223389
    7. 'token' → logprob: -8.02851390838623
    8. 'return' → logprob: -8.40351390838623
    9. ' dfs' → logprob: -8.40351390838623
    10. '   ' → logprob: -8.52851390838623

Token 657: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0009126556105911732
    2. ' dfs' → logprob: -7.000912666320801
    3. 'not' → logprob: -13.8759126663208
    4. ' not' → logprob: -15.7509126663208
    5. 'df' → logprob: -16.250911712646484
    6. '   ' → logprob: -17.875911712646484
    7. 'DFS' → logprob: -19.750911712646484
    8. ' ' → logprob: -19.875911712646484
    9. '```' → logprob: -19.875911712646484
    10. 'd' → logprob: -20.125911712646484

Token 658: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.620622712536715e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.250045776367188
    4. 'v' → logprob: -15.625045776367188
    5. '<|end|>' → logprob: -16.250045776367188
    6. '(u' → logprob: -16.375045776367188
    7. '[v' → logprob: -16.750045776367188
    8. ')v' → logprob: -17.250045776367188
    9. ' (' → logprob: -17.750045776367188
    10. ')' → logprob: -18.000045776367188

Token 659: ',' (ID: 11)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00019018957391381264
    2. '(' → logprob: -9.375189781188965
    3. '[v' → logprob: -10.125189781188965
    4. '(u' → logprob: -10.750189781188965
    5. 'v' → logprob: -10.750189781188965
    6. ')' → logprob: -11.500189781188965
    7. ',v' → logprob: -12.250189781188965
    8. '```' → logprob: -13.000189781188965
    9. ')(' → logprob: -13.500189781188965
    10. ')v' → logprob: -13.625189781188965

Token 660: ' g' (ID: 329)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.438573680294212e-06
    2. ' v' → logprob: -12.250005722045898
    3. ')v' → logprob: -14.875005722045898
    4. '[v' → logprob: -16.1250057220459
    5. '	v' → logprob: -16.3750057220459
    6. '(v' → logprob: -17.6250057220459
    7. '<v' → logprob: -19.8750057220459
    8. 'g' → logprob: -20.5000057220459
    9. ',v' → logprob: -20.5000057220459
    10. '```' → logprob: -20.6250057220459

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14857544004917145
    2. ',v' → logprob: -2.3985755443573
    3. '(v' → logprob: -3.3985755443573
    4. '[v' → logprob: -4.398575305938721
    5. 'v' → logprob: -7.023575305938721
    6. ' ,' → logprob: -8.773575782775879
    7. ',u' → logprob: -8.898575782775879
    8. ' (' → logprob: -9.523575782775879
    9. '(u' → logprob: -9.523575782775879
    10. '[u' → logprob: -9.648575782775879

Token 662: ' visited' (ID: 18416)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.274932143744081e-05
    2. 'g' → logprob: -10.250042915344238
    3. ' v' → logprob: -11.875042915344238
    4. '[v' → logprob: -16.000041961669922
    5. ')v' → logprob: -16.500041961669922
    6. '```' → logprob: -16.750041961669922
    7. '   ' → logprob: -18.000041961669922
    8. ')' → logprob: -18.625041961669922
    9. '	v' → logprob: -18.875041961669922
    10. '(v' → logprob: -19.000041961669922

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02340317703783512
    2. ',v' → logprob: -3.7734031677246094
    3. '[v' → logprob: -8.89840316772461
    4. ' ,' → logprob: -11.52340316772461
    5. 'v' → logprob: -11.64840316772461
    6. ',u' → logprob: -13.77340316772461
    7. '(v' → logprob: -15.14840316772461
    8. ')' → logprob: -15.27340316772461
    9. ',g' → logprob: -15.39840316772461
    10. '```' → logprob: -16.14840316772461

Token 664: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.004078401252627373
    2. ' stack' → logprob: -5.504078388214111
    3. '	stack' → logprob: -18.879077911376953
    4. '(stack' → logprob: -20.004077911376953
    5. '_stack' → logprob: -20.254077911376953
    6. 'Stack' → logprob: -20.379077911376953
    7. '   ' → logprob: -20.504077911376953
    8. ' ' → logprob: -20.504077911376953
    9. 'v' → logprob: -20.879077911376953
    10. ')' → logprob: -21.504077911376953

Token 665: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11269833147525787
    2. '):
' → logprob: -2.7376983165740967
    3. ',' → logprob: -3.2376983165740967
    4. ')' → logprob: -6.737698554992676
    5. ',u' → logprob: -7.112698554992676
    6. ',v' → logprob: -8.487698554992676
    7. '[u' → logprob: -9.237698554992676
    8. '(u' → logprob: -9.362698554992676
    9. ' ):' → logprob: -10.237698554992676
    10. ')==' → logprob: -10.362698554992676

Token 666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018483203602954745
    2. '```' → logprob: -7.251848220825195
    3. ':return' → logprob: -7.376848220825195
    4. 'return' → logprob: -9.251848220825195
    5. '                       ' → logprob: -9.376848220825195
    6. ':' → logprob: -9.376848220825195
    7. ' return' → logprob: -9.876848220825195
    8. '           ' → logprob: -10.126848220825195
    9. '              ' → logprob: -10.251848220825195
    10. '=True' → logprob: -10.501848220825195

Token 667: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7080239057540894
    2. 'return' (adapté à ' return') → logprob: -0.7080239057540894
    3. 'True' → logprob: -4.958024024963379
    4. ' return' → logprob: -5.083024024963379
    5. '                   ' → logprob: -6.958024024963379
    6. '```' → logprob: -8.583024024963379
    7. ' True' → logprob: -8.833024024963379
    8. ':return' → logprob: -9.333024024963379
    9. '   ' → logprob: -10.083024024963379
    10. '                       ' → logprob: -10.208024024963379

Token 668: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.8889261304575484e-06
    2. ' True' → logprob: -12.500003814697266
    3. '1' → logprob: -15.750003814697266
    4. 'true' → logprob: -19.250003814697266
    5. '   ' → logprob: -20.125003814697266
    6. '(True' → logprob: -21.625003814697266
    7. '=True' → logprob: -22.625003814697266
    8. '           ' → logprob: -22.750003814697266
    9. 'TRUE' → logprob: -22.875003814697266
    10. '                   ' → logprob: -23.375003814697266

Token 669: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008055794751271605
    2. '           ' → logprob: -8.000805854797363
    3. '```' → logprob: -8.125805854797363
    4. '
' → logprob: -10.000805854797363
    5. '   ' → logprob: -10.375805854797363
    6. '               ' → logprob: -10.500805854797363
    7. '<|end|>' → logprob: -10.750805854797363
    8. '      ' → logprob: -11.625805854797363
    9. ')' → logprob: -12.375805854797363
    10. 'True' → logprob: -12.500805854797363

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004033402539789677
    2. '           ' → logprob: -6.12903356552124
    3. '```' → logprob: -6.62903356552124
    4. '	' → logprob: -8.129033088684082
    5. '               ' → logprob: -9.004033088684082
    6. '[' → logprob: -10.629033088684082
    7. '
' → logprob: -10.754033088684082
    8. '   ' → logprob: -11.379033088684082
    9. '		' → logprob: -11.504033088684082
    10. '<|end|>' → logprob: -12.004033088684082

Token 671: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025969420094043016
    2. 'elif' (adapté à ' elif') → logprob: -6.127596855163574
    3. 'if' → logprob: -8.752596855163574
    4. '           ' → logprob: -9.252596855163574
    5. '   ' → logprob: -9.752596855163574
    6. ' if' → logprob: -10.127596855163574
    7. ' elif' → logprob: -10.377596855163574
    8. '
' → logprob: -11.877596855163574
    9. '```' → logprob: -12.252596855163574
    10. '     ' → logprob: -12.377596855163574

Token 672: ' visited' (ID: 18416)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2528824806213379
    2. 'visited' → logprob: -1.502882480621338
    3. ' stack' → logprob: -7.002882480621338
    4. ' visited' → logprob: -10.25288200378418
    5. 'v' → logprob: -11.75288200378418
    6. ' v' → logprob: -15.12788200378418
    7. '(stack' → logprob: -16.12788200378418
    8. '   ' → logprob: -16.50288200378418
    9. '	stack' → logprob: -17.37788200378418
    10. ' ' → logprob: -17.37788200378418

Token 673: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -15.75
    3. '[u' → logprob: -17.25
    4. '```' → logprob: -18.375
    5. '[' → logprob: -18.5
    6. ' [' → logprob: -20.125
    7. '	v' → logprob: -21.375
    8. '   ' → logprob: -21.75
    9. '(v' → logprob: -22.0
    10. '       ' → logprob: -22.25

Token 674: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.003883215133100748
    2. '[u' → logprob: -6.128883361816406
    3. ']==' → logprob: -6.878883361816406
    4. '==' → logprob: -7.878883361816406
    5. ']' → logprob: -8.253883361816406
    6. '[' → logprob: -11.003883361816406
    7. 'v' → logprob: -11.753883361816406
    8. ' ==' → logprob: -14.003883361816406
    9. '```' → logprob: -14.003883361816406
    10. ')==' → logprob: -15.378883361816406

Token 675: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020527411252260208
    2. '[' → logprob: -4.770527362823486
    3. '[u' → logprob: -5.395527362823486
    4. ']==' → logprob: -5.520527362823486
    5. ' ==' → logprob: -5.895527362823486
    6. '[v' → logprob: -8.020527839660645
    7. ')==' → logprob: -9.520527839660645
    8. ']' → logprob: -9.770527839660645
    9. '```' → logprob: -10.270527839660645
    10. '           ' → logprob: -11.770527839660645

Token 676: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -18.125003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '```' → logprob: -20.125003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '
' → logprob: -20.875003814697266
    8. '    ' → logprob: -22.125003814697266
    9. '۱' → logprob: -22.125003814697266
    10. '１' → logprob: -22.375003814697266

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '-' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. '{' → logprob: -19.000001907348633
    9. ''' → logprob: -19.625001907348633
    10. '  ' → logprob: -20.625001907348633

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2576882541179657
    2. '           ' → logprob: -1.632688283920288
    3. ':
' → logprob: -3.632688283920288
    4. ':return' → logprob: -5.257688045501709
    5. '          ' → logprob: -10.632688522338867
    6. '               ' → logprob: -10.632688522338867
    7. '       ' → logprob: -11.507688522338867
    8. '		' → logprob: -11.757688522338867
    9. 'return' → logprob: -11.882688522338867
    10. ':

' → logprob: -11.882688522338867

Token 679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003038797527551651
    2. 'return' → logprob: -6.3780388832092285
    3. '               ' → logprob: -6.8780388832092285
    4. ' return' → logprob: -8.12803840637207
    5. '	       ' → logprob: -13.12803840637207
    6. '   ' → logprob: -13.12803840637207
    7. '		' → logprob: -13.25303840637207
    8. '          ' → logprob: -13.75303840637207
    9. '```' → logprob: -13.75303840637207
    10. '       ' → logprob: -14.62803840637207

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06730487197637558
    2. ' return' → logprob: -3.067304849624634
    3. '               ' → logprob: -4.067305088043213
    4. '           ' → logprob: -6.567305088043213
    5. '   ' → logprob: -11.567304611206055
    6. '	return' → logprob: -12.817304611206055
    7. '       ' → logprob: -14.317304611206055
    8. '```' → logprob: -14.817304611206055
    9. '                   ' → logprob: -14.942304611206055
    10. '
' → logprob: -15.567304611206055

Token 681: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '   ' → logprob: -23.125001907348633
    4. '(True' → logprob: -23.375001907348633
    5. 'true' → logprob: -23.500001907348633
    6. '           ' → logprob: -23.875001907348633
    7. '=True' → logprob: -24.125001907348633
    8. 'False' → logprob: -25.000001907348633
    9. '1' → logprob: -26.250001907348633
    10. '       ' → logprob: -26.375001907348633

Token 682: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.566264295950532e-05
    2. 'return' → logprob: -10.375085830688477
    3. '       ' → logprob: -10.500085830688477
    4. '           ' → logprob: -11.750085830688477
    5. '  ' → logprob: -12.000085830688477
    6. '
' → logprob: -12.250085830688477
    7. '```' → logprob: -13.125085830688477
    8. 'continue' → logprob: -13.625085830688477
    9. ' return' → logprob: -14.125085830688477
    10. '    
' → logprob: -14.125085830688477

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004785744531545788
    2. '       ' → logprob: -7.875478744506836
    3. '           ' → logprob: -10.250478744506836
    4. '```' → logprob: -10.750478744506836
    5. ' return' → logprob: -11.000478744506836
    6. 'return' → logprob: -11.375478744506836
    7. '	return' → logprob: -12.375478744506836
    8. '
' → logprob: -12.875478744506836
    9. ')' → logprob: -13.625478744506836
    10. '[' → logprob: -13.750478744506836

Token 684: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5444574952125549
    2. 'stack' → logprob: -0.9194574952125549
    3. ' stack' → logprob: -3.91945743560791
    4. 'return' → logprob: -7.66945743560791
    5. ' ' → logprob: -8.29445743560791
    6. ' return' → logprob: -9.16945743560791
    7. '
' → logprob: -9.29445743560791
    8. '	stack' → logprob: -9.29445743560791
    9. ' for' → logprob: -10.04445743560791
    10. '(stack' → logprob: -10.16945743560791

Token 685: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0015129582025110722
    2. '[' → logprob: -6.7515130043029785
    3. '[v' → logprob: -8.12651252746582
    4. '<|end|>' → logprob: -10.75151252746582
    5. '```' → logprob: -11.00151252746582
    6. 'u' → logprob: -12.62651252746582
    7. '[user' → logprob: -12.87651252746582
    8. '\[' → logprob: -13.25151252746582
    9. '[s' → logprob: -15.25151252746582
    10. ']' → logprob: -15.50151252746582

Token 686: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1819882094860077
    2. '=' → logprob: -2.05698823928833
    3. ']=' → logprob: -3.30698823928833
    4. ' =' → logprob: -6.55698823928833
    5. '[u' → logprob: -7.93198823928833
    6. '[' → logprob: -9.681987762451172
    7. ' ]' → logprob: -10.306987762451172
    8. ')' → logprob: -10.306987762451172
    9. ')=' → logprob: -11.931987762451172
    10. ']==' → logprob: -12.556987762451172

Token 687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078997299075127
    2. ' =' → logprob: -5.5040788650512695
    3. '[' → logprob: -15.00407886505127
    4. '<|end|>' → logprob: -16.379079818725586
    5. '[u' → logprob: -16.879079818725586
    6. ')' → logprob: -17.379079818725586
    7. ']' → logprob: -17.754079818725586
    8. ',' → logprob: -18.129079818725586
    9. '.=' → logprob: -18.629079818725586
    10. '==' → logprob: -19.004079818725586

Token 688: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '0' → logprob: -18.125
    4. '-' → logprob: -20.125
    5. '
' → logprob: -20.375
    6. '２' → logprob: -22.125
    7. '```' → logprob: -22.375
    8. '   ' → logprob: -22.875
    9. '=' → logprob: -23.0
    10. '۲' → logprob: -24.25

Token 689: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '0' → logprob: -17.25
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -22.875
    5. '２' → logprob: -23.125
    6. '-' → logprob: -23.125
    7. '
' → logprob: -23.5
    8. '   ' → logprob: -24.25
    9. '3' → logprob: -24.625
    10. '۲' → logprob: -24.75

Token 690: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016410232055932283
    2. ' return' → logprob: -7.126640796661377
    3. '<|end|>' → logprob: -7.876640796661377
    4. '	return' → logprob: -8.876641273498535
    5. 'return' → logprob: -9.626641273498535
    6. '	stack' → logprob: -9.751641273498535
    7. '   ' → logprob: -9.751641273498535
    8. '
' → logprob: -10.626641273498535
    9. '    
' → logprob: -11.501641273498535
    10. ',' → logprob: -11.626641273498535

Token 691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01837058924138546
    2. '	return' → logprob: -5.143370628356934
    3. ' return' → logprob: -5.268370628356934
    4. 'return' → logprob: -5.393370628356934
    5. '```' → logprob: -6.768370628356934
    6. '	stack' → logprob: -6.893370628356934
    7. 'stack' → logprob: -9.018370628356934
    8. ' stack' → logprob: -9.018370628356934
    9. '
' → logprob: -9.018370628356934
    10. '[' → logprob: -10.768370628356934

Token 692: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -1.1517960956552997e-05
    2. ' stack' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.875011444091797
    4. 'return' → logprob: -15.250011444091797
    5. '	stack' → logprob: -16.500011444091797
    6. '
' → logprob: -17.750011444091797
    7. '(stack' → logprob: -18.500011444091797
    8. '```' → logprob: -18.875011444091797
    9. 'False' → logprob: -19.375011444091797
    10. 'Stack' → logprob: -19.875011444091797

Token 693: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032027887646108866
    2. '.' → logprob: -5.75320291519165
    3. '.pop' → logprob: -10.878202438354492
    4. 'append' → logprob: -12.753202438354492
    5. '.push' → logprob: -13.753202438354492
    6. ' .' → logprob: -13.878202438354492
    7. '.app' → logprob: -14.253202438354492
    8. '.extend' → logprob: -15.753202438354492
    9. ').' → logprob: -16.253202438354492
    10. '.add' → logprob: -16.253202438354492

Token 694: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. '(v' → logprob: -17.0
    4. 'u' → logprob: -17.375
    5. '[u' → logprob: -18.25
    6. '((' → logprob: -20.625
    7. '(i' → logprob: -21.25
    8. '<u' → logprob: -21.5
    9. '	u' → logprob: -22.375
    10. 'left' → logprob: -22.5

Token 695: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.375011444091797
    3. ')`' → logprob: -17.250011444091797
    4. '),' → logprob: -17.875011444091797
    5. ')return' → logprob: -17.875011444091797
    6. ' )' → logprob: -18.000011444091797
    7. ']' → logprob: -18.375011444091797
    8. '))' → logprob: -18.500011444091797
    9. '[' → logprob: -18.625011444091797
    10. '   ' → logprob: -19.375011444091797

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0075620259158313274
    2. 'return' → logprob: -6.132562160491943
    3. '
' → logprob: -6.257562160491943
    4. '```' → logprob: -6.382562160491943
    5. '    
' → logprob: -7.132562160491943
    6. '	return' → logprob: -7.882562160491943
    7. '<|end|>' → logprob: -8.257561683654785
    8. ' return' → logprob: -9.382561683654785
    9. ')' → logprob: -9.632561683654785
    10. ':return' → logprob: -9.757561683654785

Token 697: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014594977721571922
    2. 'return' (adapté à ' return') → logprob: -4.264595031738281
    3. ' return' → logprob: -8.014595031738281
    4. '	return' → logprob: -9.889595031738281
    5. '```' → logprob: -10.764595031738281
    6. 'False' → logprob: -11.639595031738281
    7. ':return' → logprob: -12.014595031738281
    8. '
' → logprob: -12.514595031738281
    9. '       ' → logprob: -12.639595031738281
    10. '  ' → logprob: -13.139595031738281

Token 698: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. '(False' → logprob: -22.250001907348633
    4. 'True' → logprob: -25.875001907348633
    5. 'false' → logprob: -26.250001907348633
    6. '0' → logprob: -26.500001907348633
    7. '   ' → logprob: -27.000001907348633
    8. '=False' → logprob: -27.375001907348633
    9. '_false' → logprob: -27.750001907348633
    10. 'FALSE' → logprob: -28.250001907348633

Token 699: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 700: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4915901720523834
    2. '   ' → logprob: -0.991590142250061
    3. '#' → logprob: -4.6165900230407715
    4. 'def' → logprob: -5.7415900230407715
    5. '```' → logprob: -5.9915900230407715
    6. ' for' → logprob: -7.4915900230407715
    7. 'locks' → logprob: -8.49159049987793
    8. 'lock' → logprob: -8.49159049987793
    9. 'block' → logprob: -8.86659049987793
    10. 'from' → logprob: -9.24159049987793

Token 701: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.615993320941925
    2. 'detect' → logprob: -1.1159932613372803
    3. 'main' → logprob: -2.2409932613372803
    4. 'top' → logprob: -4.740993499755859
    5. 'has' → logprob: -5.240993499755859
    6. 'check' → logprob: -5.490993499755859
    7. 'can' → logprob: -5.490993499755859
    8. ' is' → logprob: -6.240993499755859
    9. 'solve' → logprob: -7.490993499755859
    10. 'safe' → logprob: -8.24099349975586

Token 702: '_' (ID: 62)
  Prédit: '_safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.5019556283950806
    2. '_dead' → logprob: -1.0019556283950806
    3. '_' → logprob: -3.751955509185791
    4. '_c' → logprob: -5.626955509185791
    5. '_d' → logprob: -9.25195598602295
    6. '_cycle' → logprob: -9.37695598602295
    7. '_possible' → logprob: -9.75195598602295
    8. 'unsafe' → logprob: -10.00195598602295
    9. 'safe' → logprob: -10.25195598602295
    10. '_in' → logprob: -10.25195598602295

Token 703: 'unsafe' (ID: 66907)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.6654639840126038
    2. 'safe' → logprob: -1.665463924407959
    3. 'unsafe' → logprob: -1.915463924407959
    4. 'dead' → logprob: -1.915463924407959
    5. 'possible' → logprob: -6.915463924407959
    6. 'danger' → logprob: -7.290463924407959
    7. 'cycle' → logprob: -8.290464401245117
    8. 'acy' → logprob: -8.540464401245117
    9. '_safe' → logprob: -9.165464401245117
    10. 'reachable' → logprob: -10.790464401245117

Token 704: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011848396621644497
    2. '(s' → logprob: -4.636848449707031
    3. '():' → logprob: -7.261848449707031
    4. '(_' → logprob: -7.636848449707031
    5. '_' → logprob: -8.011848449707031
    6. '("("' → logprob: -8.886848449707031
    7. '(u' → logprob: -9.136848449707031
    8. '_parent' → logprob: -10.011848449707031
    9. '(user' → logprob: -10.136848449707031
    10. ':' → logprob: -10.636848449707031

Token 705: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004730822052806616
    2. '):
' → logprob: -5.379730701446533
    3. ')' → logprob: -10.504731178283691
    4. '):
' → logprob: -10.504731178283691
    5. '(s' → logprob: -11.379731178283691
    6. ':' → logprob: -11.379731178283691
    7. 's' → logprob: -11.629731178283691
    8. '):

' → logprob: -12.254731178283691
    9. '(' → logprob: -12.754731178283691
    10. ',' → logprob: -12.879731178283691

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020007232669740915
    2. ' blocks' → logprob: -7.25200080871582
    3. 'blocks' → logprob: -7.25200080871582
    4. '(block' → logprob: -7.62700080871582
    5. '_blocks' → logprob: -9.87700080871582
    6. '```' → logprob: -10.37700080871582
    7. '.blocks' → logprob: -11.75200080871582
    8. '-block' → logprob: -14.12700080871582
    9. '    
' → logprob: -14.87700080871582
    10. 'Blocks' → logprob: -15.00200080871582

Token 707: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' (adapté à ' blocks') → logprob: -0.13477297127246857
    2. '   ' → logprob: -2.384773015975952
    3. ' blocks' → logprob: -3.384773015975952
    4. '_blocks' → logprob: -10.134773254394531
    5. '```' → logprob: -10.759773254394531
    6. 'block' → logprob: -11.134773254394531
    7. '.blocks' → logprob: -11.634773254394531
    8. '(block' → logprob: -13.759773254394531
    9. 'b' → logprob: -13.884773254394531
    10. 'Blocks' → logprob: -14.009773254394531

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4755302667617798
    2. ' =' → logprob: -0.9755302667617798
    3. ')' → logprob: -7.10053014755249
    4. '(' → logprob: -8.100530624389648
    5. '(s' → logprob: -9.350530624389648
    6. '   ' → logprob: -9.475530624389648
    7. 's' → logprob: -9.600530624389648
    8. '_' → logprob: -10.975530624389648
    9. ')=' → logprob: -11.350530624389648
    10. '=[]' → logprob: -11.350530624389648

Token 709: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0001242772996192798
    2. ' parse' → logprob: -9.000123977661133
    3. '(parse' → logprob: -14.000123977661133
    4. '	parse' → logprob: -20.625123977661133
    5. '=parse' → logprob: -20.625123977661133
    6. '.parse' → logprob: -21.375123977661133
    7. '_parse' → logprob: -21.625123977661133
    8. '   ' → logprob: -21.750123977661133
    9. 'parser' → logprob: -21.875123977661133
    10. 'par' → logprob: -23.250123977661133

Token 710: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -8.625866030342877e-05
    2. 'blocks' → logprob: -9.375085830688477
    3. '(block' → logprob: -14.125085830688477
    4. '(s' → logprob: -15.500085830688477
    5. '_' → logprob: -16.000085830688477
    6. 'Blocks' → logprob: -16.125085830688477
    7. '(' → logprob: -16.875085830688477
    8. '```' → logprob: -16.875085830688477
    9. '_(' → logprob: -17.250085830688477
    10. '_block' → logprob: -17.250085830688477

Token 711: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.031157969729975e-05
    2. '(' → logprob: -9.375090599060059
    3. 's' → logprob: -12.500090599060059
    4. ' (' → logprob: -13.875090599060059
    5. '```' → logprob: -15.000090599060059
    6. '((' → logprob: -15.750090599060059
    7. 'blocks' → logprob: -16.625089645385742
    8. '("("' → logprob: -17.125089645385742
    9. ''(' → logprob: -17.500089645385742
    10. '(str' → logprob: -17.875089645385742

Token 712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002003218833124265
    2. '(s' → logprob: -9.125200271606445
    3. '   ' → logprob: -9.875200271606445
    4. ')
' → logprob: -10.625200271606445
    5. ',' → logprob: -12.625200271606445
    6. ')`' → logprob: -12.875200271606445
    7. '))' → logprob: -13.000200271606445
    8. '[' → logprob: -13.000200271606445
    9. '(block' → logprob: -14.250200271606445
    10. ')s' → logprob: -14.500200271606445

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018763642758131027
    2. 'g' → logprob: -4.143763542175293
    3. ' g' → logprob: -6.143763542175293
    4. '
' → logprob: -8.643763542175293
    5. '```' → logprob: -8.768763542175293
    6. 'graph' → logprob: -8.893763542175293
    7. '_g' → logprob: -10.518763542175293
    8. '    
' → logprob: -10.643763542175293
    9. '    ' → logprob: -11.018763542175293
    10. 'blocks' → logprob: -11.643763542175293

Token 714: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -7.147740689106286e-05
    2. 'graph' → logprob: -10.00007152557373
    3. 'wait' → logprob: -10.62507152557373
    4. '```' → logprob: -14.12507152557373
    5. ' g' → logprob: -14.75007152557373
    6. 'for' → logprob: -15.12507152557373
    7. '
' → logprob: -16.125070571899414
    8. 'waiting' → logprob: -17.125070571899414
    9. '    
' → logprob: -17.500070571899414
    10. '   ' → logprob: -17.500070571899414

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485197126865387
    2. ' =' → logprob: -1.2235196828842163
    3. ')' → logprob: -10.223519325256348
    4. ',' → logprob: -10.598519325256348
    5. '[' → logprob: -11.973519325256348
    6. ')=' → logprob: -14.098519325256348
    7. 'g' → logprob: -14.223519325256348
    8. '.' → logprob: -14.473519325256348
    9. '=g' → logprob: -14.473519325256348
    10. '   ' → logprob: -14.598519325256348

Token 716: ' [[]' (ID: 182908)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0004306692280806601
    2. ' build' → logprob: -7.750430583953857
    3. '(build' → logprob: -18.125431060791016
    4. '	build' → logprob: -20.000431060791016
    5. '_build' → logprob: -21.750431060791016
    6. '.build' → logprob: -22.500431060791016
    7. 'b' → logprob: -22.875431060791016
    8. 'building' → logprob: -23.000431060791016
    9. '   ' → logprob: -23.250431060791016
    10. 'Build' → logprob: -23.875431060791016

Token 717: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3091873526573181
    2. ')' → logprob: -2.809187412261963
    3. '(g' → logprob: -2.809187412261963
    4. '(block' → logprob: -3.309187412261963
    5. '(' → logprob: -3.434187412261963
    6. '   ' → logprob: -3.559187412261963
    7. ',' → logprob: -3.934187412261963
    8. ' for' → logprob: -4.059187412261963
    9. ']' → logprob: -5.309187412261963
    10. '       ' → logprob: -6.934187412261963

Token 718: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02815445512533188
    2. '(' → logprob: -3.7781543731689453
    3. ' _' → logprob: -6.403154373168945
    4. ' (' → logprob: -6.653154373168945
    5. '10' → logprob: -6.653154373168945
    6. 'range' → logprob: -7.778154373168945
    7. '_(' → logprob: -10.028154373168945
    8. ' in' → logprob: -10.028154373168945
    9. '(range' → logprob: -10.153154373168945
    10. 'in' → logprob: -10.528154373168945

Token 719: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02987891621887684
    2. '(' → logprob: -3.904878854751587
    3. ' range' → logprob: -4.779879093170166
    4. '(range' → logprob: -7.529879093170166
    5. '10' → logprob: -8.779878616333008
    6. ' (' → logprob: -8.904878616333008
    7. '   ' → logprob: -10.279878616333008
    8. '=' → logprob: -11.404878616333008
    9. '    ' → logprob: -11.904878616333008
    10. 'len' → logprob: -12.904878616333008

Token 720: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016692342469468713
    2. ' range' → logprob: -6.501669406890869
    3. '(' → logprob: -8.751668930053711
    4. '(range' → logprob: -11.876668930053711
    5. '10' → logprob: -13.376668930053711
    6. ' (' → logprob: -16.37666893005371
    7. '   ' → logprob: -18.50166893005371
    8. '
' → logprob: -18.50166893005371
    9. ' ' → logprob: -18.87666893005371
    10. '
' → logprob: -19.75166893005371

Token 721: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31326693296432495
    2. '(' → logprob: -1.3132669925689697
    3. ' (' → logprob: -12.93826675415039
    4. ' ' → logprob: -13.31326675415039
    5. '   ' → logprob: -14.18826675415039
    6. '```' → logprob: -15.81326675415039
    7. '(
' → logprob: -16.06326675415039
    8. '
' → logprob: -16.43826675415039
    9. ']' → logprob: -17.31326675415039
    10. '0' → logprob: -17.43826675415039

Token 722: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. '```' → logprob: -17.000001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '0' → logprob: -18.000001907348633
    6. '
' → logprob: -18.250001907348633
    7. ' ' → logprob: -18.500001907348633
    8. '100' → logprob: -18.875001907348633
    9. ')' → logprob: -20.000001907348633
    10. 'range' → logprob: -20.125001907348633

Token 723: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.26136112213134766
    2. ']' → logprob: -1.5113611221313477
    3. ')]
' → logprob: -5.261361122131348
    4. ']
' → logprob: -5.511361122131348
    5. ')' → logprob: -9.386361122131348
    6. '()]' → logprob: -10.011361122131348
    7. '   ' → logprob: -11.511361122131348
    8. '])' → logprob: -11.761361122131348
    9. ')]
' → logprob: -12.886361122131348
    10. ')
' → logprob: -12.886361122131348

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3636321723461151
    2. 'lock' → logprob: -2.1136322021484375
    3. 'm' → logprob: -2.4886322021484375
    4. 'for' → logprob: -2.6136322021484375
    5. 'blocks' → logprob: -4.4886322021484375
    6. ' for' → logprob: -5.2386322021484375
    7. 'locks' → logprob: -5.4886322021484375
    8. '#' → logprob: -5.9886322021484375
    9. 'block' → logprob: -6.2386322021484375
    10. ' lock' → logprob: -6.7386322021484375

Token 725: ' #' (ID: 1069)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.12842553853988647
    2. 'for' → logprob: -2.2534255981445312
    3. 'm' → logprob: -5.503425598144531
    4. '#' (adapté à ' #') → logprob: -5.753425598144531
    5. 'blocks' → logprob: -5.753425598144531
    6. 'locks' → logprob: -6.003425598144531
    7. 'block' → logprob: -6.628425598144531
    8. '   ' → logprob: -6.878425598144531
    9. 'ac' → logprob: -10.128425598144531
    10. 'locked' → logprob: -10.503425598144531

Token 726: ' Within' (ID: 35552)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.14290179312229156
    2. 'm' → logprob: -2.14290189743042
    3. 'for' → logprob: -5.51790189743042
    4. 'blocks' → logprob: -5.64290189743042
    5. 'locks' → logprob: -5.89290189743042
    6. '#' → logprob: -5.89290189743042
    7. '   ' → logprob: -6.14290189743042
    8. 'block' → logprob: -7.89290189743042
    9. ' lock' → logprob: -9.142901420593262
    10. 'g' → logprob: -10.017901420593262

Token 727: ' each' (ID: 2454)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.43953797221183777
    2. 'range' → logprob: -1.1895380020141602
    3. 'for' → logprob: -3.56453800201416
    4. 'len' → logprob: -4.93953800201416
    5. 'build' → logprob: -5.06453800201416
    6. 'g' → logprob: -5.56453800201416
    7. ' blocks' → logprob: -5.93953800201416
    8. 'the' → logprob: -7.18953800201416
    9. 'block' → logprob: -7.31453800201416
    10. ' range' → logprob: -7.56453800201416

Token 728: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.16788500547409058
    2. 'for' → logprob: -2.0428850650787354
    3. 'b' → logprob: -3.9178850650787354
    4. 'range' → logprob: -6.292884826660156
    5. 'blocks' → logprob: -7.167884826660156
    6. ' for' → logprob: -7.417884826660156
    7. ' block' → logprob: -7.542884826660156
    8. '   ' → logprob: -8.042884826660156
    9. 'def' → logprob: -8.167884826660156
    10. 's' → logprob: -8.917884826660156

Token 729: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1045040637254715
    2. ' for' → logprob: -2.979504108428955
    3. '   ' → logprob: -3.104504108428955
    4. ':' → logprob: -6.854504108428955
    5. ',' → logprob: -7.104504108428955
    6. 'blocks' → logprob: -7.104504108428955
    7. '
' → logprob: -8.229503631591797
    8. '```' → logprob: -8.854503631591797
    9. 's' → logprob: -8.979503631591797
    10. 'locks' → logprob: -9.354503631591797

Token 730: ' lock' (ID: 8109)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01506173424422741
    2. '   ' → logprob: -5.015061855316162
    3. ' for' → logprob: -5.390061855316162
    4. 'blocks' → logprob: -5.765061855316162
    5. 'locks' → logprob: -8.015061378479004
    6. 'g' → logprob: -8.640061378479004
    7. 'b' → logprob: -11.015061378479004
    8. ' blocks' → logprob: -11.140061378479004
    9. 'n' → logprob: -11.765061378479004
    10. 'block' → logprob: -11.765061378479004

Token 731: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16394779086112976
    2. 'ac' → logprob: -3.413947820663452
    3. ' =' → logprob: -4.038947582244873
    4. '_indices' → logprob: -4.163947582244873
    5. '_ac' → logprob: -4.288947582244873
    6. '_to' → logprob: -4.288947582244873
    7. '   ' → logprob: -4.538947582244873
    8. 'for' → logprob: -4.663947582244873
    9. '=' → logprob: -5.038947582244873
    10. 'indices' → logprob: -5.913947582244873

Token 732: '+' (ID: 10)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2241518497467041
    2. 'n' → logprob: -2.849151849746704
    3. 'for' → logprob: -3.724151849746704
    4. 'f' → logprob: -3.849151849746704
    5. ' =' → logprob: -3.849151849746704
    6. 'nd' → logprob: -4.099151611328125
    7. '   ' → logprob: -4.974151611328125
    8. ' for' → logprob: -5.224151611328125
    9. ' in' → logprob: -5.349151611328125
    10. ']' → logprob: -5.349151611328125

Token 733: '1' (ID: 16)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.13551485538482666
    2. 'n' → logprob: -2.260514736175537
    3. '1' → logprob: -4.760514736175537
    4. 'nds' → logprob: -6.010514736175537
    5. ']' → logprob: -6.135514736175537
    6. 'nt' → logprob: -6.510514736175537
    7. 's' → logprob: -7.010514736175537
    8. 'tems' → logprob: -7.135514736175537
    9. 'index' → logprob: -7.510514736175537
    10. 'dx' → logprob: -7.510514736175537

Token 734: ' waits' (ID: 99777)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4030189514160156
    2. 'for' → logprob: -1.9030189514160156
    3. ']' → logprob: -2.2780189514160156
    4. '][' → logprob: -2.5280189514160156
    5. ''s' → logprob: -3.1530189514160156
    6. '[' → logprob: -3.2780189514160156
    7. 'ac' → logprob: -3.4030189514160156
    8. '   ' → logprob: -3.5280189514160156
    9. 'def' → logprob: -3.6530189514160156
    10. ' for' → logprob: -3.9030189514160156

Token 735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009323690086603165
    2. '_for' → logprob: -4.759323596954346
    3. '   ' → logprob: -7.759323596954346
    4. ' for' → logprob: -8.509324073791504
    5. 'For' → logprob: -10.009324073791504
    6. '[' → logprob: -11.509324073791504
    7. '```' → logprob: -11.759324073791504
    8. '_' → logprob: -12.134324073791504
    9. ')' → logprob: -13.009324073791504
    10. '	for' → logprob: -13.134324073791504

Token 736: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.15893888473510742
    2. 'b' → logprob: -2.7839388847351074
    3. 'block' → logprob: -3.7839388847351074
    4. 'blocks' → logprob: -4.033938884735107
    5. ' lock' → logprob: -4.033938884735107
    6. 'locks' → logprob: -4.033938884735107
    7. ' b' → logprob: -5.283938884735107
    8. ' blocks' → logprob: -6.033938884735107
    9. ' block' → logprob: -6.908938884735107
    10. ' locks' → logprob: -8.408939361572266

Token 737: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.032387033104896545
    2. '[' → logprob: -3.6573870182037354
    3. 's' → logprob: -5.9073872566223145
    4. '[s' → logprob: -7.4073872566223145
    5. 'i' → logprob: -7.5323872566223145
    6. ' i' → logprob: -7.9073872566223145
    7. 'blocks' → logprob: -7.9073872566223145
    8. ' blocks' → logprob: -8.282386779785156
    9. ' [' → logprob: -8.282386779785156
    10. '(i' → logprob: -8.657386779785156

Token 738: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12289302796125412
    2. 'for' → logprob: -2.2478930950164795
    3. ' for' → logprob: -4.6228928565979
    4. '
' → logprob: -8.747893333435059
    5. 'def' → logprob: -11.247893333435059
    6. '```' → logprob: -12.122893333435059
    7. '	for' → logprob: -12.497893333435059
    8. '       ' → logprob: -12.622893333435059
    9. ',' → logprob: -12.872893333435059
    10. '    
' → logprob: -12.997893333435059

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03141182288527489
    2. 'for' → logprob: -3.90641188621521
    3. ' for' → logprob: -4.531411647796631
    4. ' ' → logprob: -11.531412124633789
    5. '```' → logprob: -12.156412124633789
    6. ' =' → logprob: -12.531412124633789
    7. '[' → logprob: -12.531412124633789
    8. '  ' → logprob: -12.656412124633789
    9. '
' → logprob: -12.656412124633789
    10. ')' → logprob: -12.906412124633789

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001037214300595224
    2. '   ' → logprob: -7.126037120819092
    3. ' for' → logprob: -8.37603759765625
    4. 'blocks' → logprob: -14.00103759765625
    5. 'lock' → logprob: -14.75103759765625
    6. '```' → logprob: -15.62603759765625
    7. 'from' → logprob: -15.87603759765625
    8. 'block' → logprob: -16.00103759765625
    9. 'locks' → logprob: -16.12603759765625
    10. '#' → logprob: -16.25103759765625

Token 741: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.049777399748563766
    2. 'block' → logprob: -3.5497775077819824
    3. ' b' → logprob: -4.174777507781982
    4. ' block' → logprob: -5.799777507781982
    5. 'blocks' → logprob: -7.299777507781982
    6. 'i' → logprob: -7.549777507781982
    7. ' blocks' → logprob: -9.174777030944824
    8. ' i' → logprob: -10.049777030944824
    9. '   ' → logprob: -10.424777030944824
    10. 's' → logprob: -11.424777030944824

Token 742: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485970199108124
    2. 'in' → logprob: -1.2235970497131348
    3. '   ' → logprob: -9.598596572875977
    4. '[' → logprob: -10.848596572875977
    5. 'i' → logprob: -10.848596572875977
    6. ')' → logprob: -11.723596572875977
    7. '```' → logprob: -11.848596572875977
    8. ' ' → logprob: -12.223596572875977
    9. '[i' → logprob: -12.348596572875977
    10. 'index' → logprob: -12.723596572875977

Token 743: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.2111051231622696
    2. 'range' → logprob: -1.9611051082611084
    3. ' blocks' → logprob: -3.2111051082611084
    4. ' range' → logprob: -4.8361053466796875
    5. 'b' → logprob: -6.8361053466796875
    6. 'block' → logprob: -8.586105346679688
    7. '[' → logprob: -10.211105346679688
    8. 'g' → logprob: -10.961105346679688
    9. ' b' → logprob: -11.211105346679688
    10. 's' → logprob: -11.961105346679688

Token 744: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2671704888343811
    2. ':' → logprob: -1.6421704292297363
    3. ':
' → logprob: -3.6421704292297363
    4. '[' → logprob: -4.267170429229736
    5. '   ' → logprob: -8.142170906066895
    6. '[:-' → logprob: -8.267170906066895
    7. '[:' → logprob: -10.892170906066895
    8. ',' → logprob: -10.892170906066895
    9. '[i' → logprob: -11.142170906066895
    10. ' for' → logprob: -11.142170906066895

Token 745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004424301441758871
    2. '   ' → logprob: -5.629424095153809
    3. ' for' → logprob: -7.129424095153809
    4. 'for' → logprob: -11.254424095153809
    5. '```' → logprob: -11.754424095153809
    6. '	   ' → logprob: -14.379424095153809
    7. '[' → logprob: -15.004424095153809
    8. ',' → logprob: -15.379424095153809
    9. '	' → logprob: -15.504424095153809
    10. '           ' → logprob: -15.754424095153809

Token 746: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018812546506524086
    2. ' for' → logprob: -4.018812656402588
    3. '   ' → logprob: -7.643812656402588
    4. '       ' → logprob: -8.64381217956543
    5. '	for' → logprob: -12.26881217956543
    6. 'if' → logprob: -13.51881217956543
    7. '```' → logprob: -13.89381217956543
    8. ' ' → logprob: -16.64381217956543
    9. '           ' → logprob: -16.64381217956543
    10. '``' → logprob: -17.14381217956543

Token 747: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5266619324684143
    2. 'i' → logprob: -0.9016619324684143
    3. '1' → logprob: -6.1516618728637695
    4. 'range' → logprob: -7.4016618728637695
    5. ' range' → logprob: -7.5266618728637695
    6. ' ' → logprob: -8.77666187286377
    7. '(' → logprob: -10.77666187286377
    8. '(i' → logprob: -11.02666187286377
    9. '_i' → logprob: -11.27666187286377
    10. ' _' → logprob: -11.65166187286377

Token 748: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7952293157577515
    2. ' in' → logprob: -0.9202293157577515
    3. 'in' → logprob: -2.170229434967041
    4. '+' → logprob: -3.795229434967041
    5. ' (' → logprob: -4.920229434967041
    6. '1' → logprob: -5.545229434967041
    7. '   ' → logprob: -7.045229434967041
    8. '[' → logprob: -7.670229434967041
    9. ' +' → logprob: -7.920229434967041
    10. ' ' → logprob: -8.670228958129883

Token 749: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005372729618102312
    2. ' range' → logprob: -5.505372524261475
    3. '(' → logprob: -6.755372524261475
    4. '1' → logprob: -9.005373001098633
    5. '(range' → logprob: -12.255373001098633
    6. 'in' → logprob: -13.880373001098633
    7. ' ' → logprob: -14.755373001098633
    8. ' in' → logprob: -17.505373001098633
    9. '0' → logprob: -18.005373001098633
    10. '	range' → logprob: -18.505373001098633

Token 750: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000431861262768507
    2. '1' → logprob: -7.750432014465332
    3. 'range' → logprob: -14.250432014465332
    4. '(len' → logprob: -14.625432014465332
    5. ' (' → logprob: -17.250431060791016
    6. 'len' → logprob: -17.750431060791016
    7. '   ' → logprob: -18.250431060791016
    8. ' ' → logprob: -19.000431060791016
    9. ' range' → logprob: -19.125431060791016
    10. '(range' → logprob: -19.625431060791016

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'len' → logprob: -15.375000953674316
    4. '(' → logprob: -17.875
    5. '   ' → logprob: -17.875
    6. 'range' → logprob: -19.0
    7. '0' → logprob: -20.0
    8. '(len' → logprob: -20.875
    9. '       ' → logprob: -22.0
    10. ' len' → logprob: -22.0

Token 752: ',len' (ID: 73338)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.02768993005156517
    2. '(b' → logprob: -3.9026899337768555
    3. ',len' → logprob: -5.9026899337768555
    4. '(' → logprob: -6.1526899337768555
    5. 'len' → logprob: -7.1526899337768555
    6. ',' → logprob: -7.9026899337768555
    7. ' (' → logprob: -8.402689933776855
    8. '):' → logprob: -8.652689933776855
    9. '<len' → logprob: -8.777689933776855
    10. '   ' → logprob: -9.152689933776855

Token 753: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.304016228066757e-05
    2. 'b' → logprob: -9.500082969665527
    3. '[b' → logprob: -11.875082969665527
    4. '(' → logprob: -14.750082969665527
    5. ' (' → logprob: -15.125082969665527
    6. '(block' → logprob: -15.125082969665527
    7. '```' → logprob: -16.750083923339844
    8. '[' → logprob: -16.875083923339844
    9. ' b' → logprob: -16.875083923339844
    10. ')b' → logprob: -17.250083923339844

Token 754: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762937664985657
    2. '):' → logprob: -0.8262937664985657
    3. ']):' → logprob: -8.9512939453125
    4. ')' → logprob: -9.8262939453125
    5. ']):
' → logprob: -10.0762939453125
    6. '   ' → logprob: -10.0762939453125
    7. '):
' → logprob: -10.7012939453125
    8. '[i' → logprob: -10.9512939453125
    9. ']:' → logprob: -11.9512939453125
    10. '[' → logprob: -11.9512939453125

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057072196155786514
    2. ' g' → logprob: -3.682072162628174
    3. '       ' → logprob: -4.182072162628174
    4. 'g' → logprob: -4.432072162628174
    5. '```' → logprob: -6.057072162628174
    6. '   ' → logprob: -8.057072639465332
    7. 'b' → logprob: -9.182072639465332
    8. '               ' → logprob: -9.432072639465332
    9. '(g' → logprob: -9.807072639465332
    10. '	       ' → logprob: -10.307072639465332

Token 756: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -4.320199877838604e-07
    2. ' g' → logprob: -15.0
    3. 'b' → logprob: -18.375
    4. '           ' → logprob: -18.625
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '       ' → logprob: -19.5
    8. '	g' → logprob: -20.875
    9. '[g' → logprob: -21.375
    10. '_g' → logprob: -21.5

Token 757: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0002479886752553284
    2. 'b' → logprob: -8.500247955322266
    3. '[g' → logprob: -10.125247955322266
    4. '[' → logprob: -12.625247955322266
    5. ' [' → logprob: -14.750247955322266
    6. '```' → logprob: -15.000247955322266
    7. '[
' → logprob: -16.500247955322266
    8. ' b' → logprob: -16.500247955322266
    9. '][' → logprob: -17.000247955322266
    10. '[[' → logprob: -17.000247955322266

Token 758: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.629921436891891e-05
    2. 'i' → logprob: -11.62502670288086
    3. '[' → logprob: -11.87502670288086
    4. ' [' → logprob: -12.37502670288086
    5. '[b' → logprob: -13.37502670288086
    6. '][' → logprob: -13.75002670288086
    7. '   ' → logprob: -14.00002670288086
    8. '(i' → logprob: -14.25002670288086
    9. ']' → logprob: -14.75002670288086
    10. '[
' → logprob: -15.25002670288086

Token 759: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05816040188074112
    2. ']].' → logprob: -3.0581603050231934
    3. ']' → logprob: -5.058160305023193
    4. '-' → logprob: -6.058160305023193
    5. ')].' → logprob: -7.433160305023193
    6. '[i' → logprob: -9.683160781860352
    7. ']).' → logprob: -9.808160781860352
    8. '   ' → logprob: -10.433160781860352
    9. ']]' → logprob: -10.933160781860352
    10. ' ].' → logprob: -10.933160781860352

Token 760: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.25
    3. ' append' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '.append' → logprob: -17.25
    6. '	append' → logprob: -18.25
    7. 'app' → logprob: -20.5
    8. 'Append' → logprob: -21.75
    9. '_append' → logprob: -22.0
    10. 'add' → logprob: -22.0

Token 761: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.961759259458631e-06
    2. ' b' → logprob: -12.250004768371582
    3. '(b' → logprob: -15.750004768371582
    4. '   ' → logprob: -19.8750057220459
    5. '	b' → logprob: -21.2500057220459
    6. '```' → logprob: -21.6250057220459
    7. ''b' → logprob: -22.6250057220459
    8. ' ' → logprob: -23.2500057220459
    9. ')b' → logprob: -23.2500057220459
    10. '       ' → logprob: -23.3750057220459

Token 762: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006382156861945987
    2. 'i' → logprob: -7.375638008117676
    3. 'b' → logprob: -11.625638008117676
    4. '{i' → logprob: -13.750638008117676
    5. '(i' → logprob: -14.000638008117676
    6. '[' → logprob: -14.250638008117676
    7. '[b' → logprob: -17.000638961791992
    8. '
' → logprob: -17.125638961791992
    9. '   ' → logprob: -17.250638961791992
    10. '[
' → logprob: -18.750638961791992

Token 763: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011495040729641914
    2. '-' → logprob: -4.511495113372803
    3. 'i' → logprob: -7.761495113372803
    4. '(i' → logprob: -11.511494636535645
    5. ' -' → logprob: -11.886494636535645
    6. '{i' → logprob: -12.886494636535645
    7. '1' → logprob: -14.011494636535645
    8. '[-' → logprob: -14.886494636535645
    9. '[' → logprob: -15.011494636535645
    10. '   ' → logprob: -16.13649559020996

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -15.250000953674316
    4. 'i' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '-' → logprob: -16.375001907348633
    7. '0' → logprob: -18.187501907348633
    8. '{' → logprob: -18.437501907348633
    9. ']' → logprob: -18.562501907348633
    10. '(i' → logprob: -19.375001907348633

Token 765: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.500007629394531
    3. '       ' → logprob: -13.250007629394531
    4. '   ' → logprob: -15.000007629394531
    5. '           ' → logprob: -15.125007629394531
    6. ')]' → logprob: -15.375007629394531
    7. ' )' → logprob: -15.375007629394531
    8. '])' → logprob: -15.750007629394531
    9. ']' → logprob: -15.875007629394531
    10. '<|end|>' → logprob: -16.37500762939453

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030195412691682577
    2. 'for' → logprob: -6.253019332885742
    3. '
' → logprob: -7.628019332885742
    4. '#' → logprob: -8.003019332885742
    5. '```' → logprob: -8.753019332885742
    6. '       ' → logprob: -9.753019332885742
    7. ' for' → logprob: -10.128019332885742
    8. '    
' → logprob: -12.128019332885742
    9. '           ' → logprob: -12.628019332885742
    10. 'from' → logprob: -13.128019332885742

Token 767: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2504260838031769
    2. '#' (adapté à ' #') → logprob: -2.0004260540008545
    3. '   ' → logprob: -3.2504260540008545
    4. 'lock' → logprob: -3.5004260540008545
    5. 'locks' → logprob: -5.125426292419434
    6. 'block' → logprob: -5.750426292419434
    7. 'all' → logprob: -5.750426292419434
    8. ' for' → logprob: -6.000426292419434
    9. 'm' → logprob: -6.875426292419434
    10. 'blocks' → logprob: -7.250426292419434

Token 768: ' Between' (ID: 43355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5133633017539978
    2. 'm' → logprob: -1.5133633613586426
    3. 'lock' → logprob: -1.8883633613586426
    4. '#' → logprob: -3.6383633613586426
    5. 'block' → logprob: -6.763363361358643
    6. 'locks' → logprob: -6.888363361358643
    7. 'n' → logprob: -7.263363361358643
    8. 'num' → logprob: -8.638362884521484
    9. 'all' → logprob: -8.638362884521484
    10. 'blocks' → logprob: -8.888362884521484

Token 769: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.8667447566986084
    2. 'b' → logprob: -1.2417447566986084
    3. ' blocks' → logprob: -1.6167447566986084
    4. 'block' → logprob: -3.4917447566986084
    5. ' b' → logprob: -3.4917447566986084
    6. 'i' → logprob: -4.7417449951171875
    7. ' i' → logprob: -5.1167449951171875
    8. ' block' → logprob: -5.3667449951171875
    9. 'for' → logprob: -5.4917449951171875
    10. '_blocks' → logprob: -5.7417449951171875

Token 770: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008373793214559555
    2. ' for' → logprob: -5.258373737335205
    3. '
' → logprob: -6.258373737335205
    4. 'for' → logprob: -6.883373737335205
    5. '#' → logprob: -9.508374214172363
    6. '    
' → logprob: -10.008374214172363
    7. ':' → logprob: -11.133374214172363
    8. '	for' → logprob: -11.633374214172363
    9. '```' → logprob: -11.758374214172363
    10. ' #' → logprob: -11.758374214172363

Token 771: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.535018801689148
    2. ' for' → logprob: -0.910018801689148
    3. 'lock' → logprob: -5.1600189208984375
    4. ' lock' → logprob: -5.4100189208984375
    5. '   ' → logprob: -7.0350189208984375
    6. 'locks' → logprob: -7.6600189208984375
    7. ' locks' → logprob: -9.535018920898438
    8. '#' → logprob: -10.035018920898438
    9. ' #' → logprob: -10.785018920898438
    10. ' m' → logprob: -10.910018920898438

Token 772: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0232484340667725
    2. ' b' → logprob: -1.7732484340667725
    3. ' l' → logprob: -2.0232484340667725
    4. 'i' → logprob: -2.5232484340667725
    5. 'l' → logprob: -2.6482484340667725
    6. ' i' → logprob: -2.6482484340667725
    7. 'lock' → logprob: -3.8982484340667725
    8. 'blocks' → logprob: -4.148248672485352
    9. ' blocks' → logprob: -4.273248672485352
    10. 'len' → logprob: -4.398248672485352

Token 773: ' lock' (ID: 8109)
  Prédit: ' lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lock' → logprob: -0.6419790387153625
    2. 'lock' → logprob: -1.2669789791107178
    3. 'b' → logprob: -2.5169789791107178
    4. ' block' → logprob: -3.6419789791107178
    5. ' b' → logprob: -3.7669789791107178
    6. 'l' → logprob: -3.7669789791107178
    7. ' l' → logprob: -4.266979217529297
    8. 'block' → logprob: -4.766979217529297
    9. 'c' → logprob: -5.141979217529297
    10. ' for' → logprob: -6.141979217529297

Token 774: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1764435768127441
    2. ' in' → logprob: -1.1764435768127441
    3. '   ' → logprob: -2.676443576812744
    4. '1' → logprob: -2.801443576812744
    5. 'in' → logprob: -2.926443576812744
    6. ' is' → logprob: -3.551443576812744
    7. ' appears' → logprob: -3.676443576812744
    8. 'l' → logprob: -4.176443576812744
    9. ' l' → logprob: -4.301443576812744
    10. 'for' → logprob: -4.676443576812744

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7351889610290527
    2. ' in' → logprob: -1.8601889610290527
    3. '[i' → logprob: -1.9851889610290527
    4. '[' → logprob: -2.7351889610290527
    5. 'in' → logprob: -3.4851889610290527
    6. '   ' → logprob: -3.7351889610290527
    7. 'for' → logprob: -3.7351889610290527
    8. '2' → logprob: -3.9851889610290527
    9. ' is' → logprob: -4.860188961029053
    10. '_to' → logprob: -4.985188961029053

Token 776: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07032941281795502
    2. ' !=' → logprob: -3.320329427719116
    3. ' for' → logprob: -4.820329189300537
    4. 'for' → logprob: -4.945329189300537
    5. 'in' → logprob: -5.195329189300537
    6. ' is' → logprob: -5.695329189300537
    7. '!=' → logprob: -6.195329189300537
    8. ' appears' → logprob: -6.570329189300537
    9. '   ' → logprob: -6.820329189300537
    10. ' not' → logprob: -6.945329189300537

Token 777: ' acquired' (ID: 27937)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.26369526982307434
    2. ' acquired' → logprob: -2.263695240020752
    3. 'in' → logprob: -2.638695240020752
    4. 'held' → logprob: -3.263695240020752
    5. ' in' → logprob: -5.138695240020752
    6. ' held' → logprob: -5.513695240020752
    7. 'used' → logprob: -5.888695240020752
    8. 'found' → logprob: -6.138695240020752
    9. '```' → logprob: -7.263695240020752
    10. ' used' → logprob: -7.888695240020752

Token 778: ' in' (ID: 306)
  Prédit: ' earlier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' earlier' → logprob: -1.0670270919799805
    2. 'before' → logprob: -1.4420270919799805
    3. 'after' → logprob: -2.1920270919799805
    4. 'later' → logprob: -2.3170270919799805
    5. ' later' → logprob: -2.6920270919799805
    6. 'in' → logprob: -2.8170270919799805
    7. ' before' → logprob: -3.3170270919799805
    8. ' after' → logprob: -4.3170270919799805
    9. ' in' → logprob: -4.3170270919799805
    10. 'ear' → logprob: -4.5670270919799805

Token 779: ' a' (ID: 261)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'another' → logprob: -1.3811904191970825
    2. 'block' → logprob: -1.5061904191970825
    3. 'blocks' → logprob: -2.131190299987793
    4. 'b' → logprob: -2.131190299987793
    5. 'different' → logprob: -2.256190299987793
    6. 'a' → logprob: -2.256190299987793
    7. 'some' → logprob: -3.131190299987793
    8. 'one' → logprob: -4.131190299987793
    9. ' another' → logprob: -5.256190299987793
    10. 'other' → logprob: -5.506190299987793

Token 780: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.19620855152606964
    2. ' block' → logprob: -1.8212085962295532
    3. 'b' → logprob: -4.696208477020264
    4. 'different' → logprob: -5.321208477020264
    5. ' different' → logprob: -7.446208477020264
    6. 'for' → logprob: -7.571208477020264
    7. 'n' → logprob: -8.196208953857422
    8. ' for' → logprob: -8.696208953857422
    9. 'blocks' → logprob: -9.446208953857422
    10. 'def' → logprob: -9.446208953857422

Token 781: ' after' (ID: 1934)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0770007371902466
    2. ':
' → logprob: -1.7020007371902466
    3. ' that' → logprob: -2.202000617980957
    4. ' in' → logprob: -2.202000617980957
    5. ',' → logprob: -2.827000617980957
    6. '       ' → logprob: -3.077000617980957
    7. 'and' → logprob: -3.202000617980957
    8. ' for' → logprob: -3.702000617980957
    9. 'in' → logprob: -4.077000617980957
    10. '   ' → logprob: -4.077000617980957

Token 782: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9025924205780029
    2. 'l' → logprob: -1.777592420578003
    3. 'another' → logprob: -1.902592420578003
    4. 'lock' → logprob: -2.277592420578003
    5. ' a' → logprob: -2.777592420578003
    6. ' another' → logprob: -3.027592420578003
    7. ' l' → logprob: -3.402592420578003
    8. 'b' → logprob: -3.902592420578003
    9. ' lock' → logprob: -4.902592658996582
    10. 'block' → logprob: -7.777592658996582

Token 783: ' other' (ID: 1273)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.563223659992218
    2. ' lock' → logprob: -1.6882236003875732
    3. 'l' → logprob: -2.5632236003875732
    4. ' l' → logprob: -3.0632236003875732
    5. ' block' → logprob: -3.0632236003875732
    6. 'locks' → logprob: -3.3132236003875732
    7. 'block' → logprob: -3.9382236003875732
    8. ' locks' → logprob: -5.563223838806152
    9. 'b' → logprob: -5.688223838806152
    10. 's' → logprob: -6.438223838806152

Token 784: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.7378441691398621
    2. 'locks' → logprob: -1.4878442287445068
    3. 'l' → logprob: -2.487844228744507
    4. ' lock' → logprob: -2.737844228744507
    5. ' block' → logprob: -3.112844228744507
    6. ' l' → logprob: -3.487844228744507
    7. ' locks' → logprob: -3.862844228744507
    8. 'block' → logprob: -3.862844228744507
    9. '   ' → logprob: -5.487843990325928
    10. 's' → logprob: -5.737843990325928

Token 785: ' l' (ID: 305)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1646796464920044
    2. ',' → logprob: -1.7896796464920044
    3. 'in' → logprob: -2.039679527282715
    4. '[l' → logprob: -3.164679527282715
    5. '[' → logprob: -3.414679527282715
    6. '   ' → logprob: -3.414679527282715
    7. '```' → logprob: -3.414679527282715
    8. 'l' → logprob: -3.539679527282715
    9. 's' → logprob: -3.539679527282715
    10. 'for' → logprob: -3.789679527282715

Token 786: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015483666211366653
    2. ']' → logprob: -5.515483856201172
    3. '[' → logprob: -5.890483856201172
    4. '2' → logprob: -6.265483856201172
    5. '[i' → logprob: -6.265483856201172
    6. '```' → logprob: -6.265483856201172
    7. '[
' → logprob: -7.890483856201172
    8. ' in' → logprob: -8.265483856201172
    9. '[j' → logprob: -8.265483856201172
    10. ')' → logprob: -8.765483856201172

Token 787: ' is' (ID: 382)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.376177430152893
    2. ' in' → logprob: -1.501177430152893
    3. '           ' → logprob: -2.6261773109436035
    4. ' for' → logprob: -2.6261773109436035
    5. '   ' → logprob: -2.7511773109436035
    6. '       ' → logprob: -3.0011773109436035
    7. 'for' → logprob: -3.1261773109436035
    8. '):
' → logprob: -3.2511773109436035
    9. '.' → logprob: -3.3761773109436035
    10. ' and' → logprob: -3.3761773109436035

Token 788: ' acquired' (ID: 27937)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0233819484710693
    2. ' not' → logprob: -1.5233819484710693
    3. 'ac' → logprob: -2.0233819484710693
    4. ' acquired' → logprob: -2.3983819484710693
    5. 'in' → logprob: -2.6483819484710693
    6. 'not' → logprob: -3.3983819484710693
    7. '   ' → logprob: -3.8983819484710693
    8. ' and' → logprob: -4.273382186889648
    9. ' block' → logprob: -4.898382186889648
    10. '.append' → logprob: -5.023382186889648

Token 789: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1187831163406372
    2. '       ' → logprob: -1.6187831163406372
    3. 'in' → logprob: -1.8687831163406372
    4. '           ' → logprob: -2.1187829971313477
    5. ',' → logprob: -2.8687829971313477
    6. ':
' → logprob: -3.1187829971313477
    7. ' and' → logprob: -3.9937829971313477
    8. '   ' → logprob: -4.118782997131348
    9. '):
' → logprob: -4.618782997131348
    10. ':' → logprob: -5.118782997131348

Token 790: ' another' (ID: 3613)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'another' → logprob: -0.5366572737693787
    2. ' another' → logprob: -1.5366573333740234
    3. 'a' → logprob: -2.4116573333740234
    4. ' a' → logprob: -3.4116573333740234
    5. 'different' → logprob: -3.4116573333740234
    6. 'b' → logprob: -4.536657333374023
    7. 'block' → logprob: -5.036657333374023
    8. 'the' → logprob: -5.161657333374023
    9. 'that' → logprob: -5.411657333374023
    10. ' different' → logprob: -5.661657333374023

Token 791: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7280906438827515
    2. ' block' → logprob: -1.2280906438827515
    3. '   ' → logprob: -2.978090763092041
    4. '[i' → logprob: -2.978090763092041
    5. '       ' → logprob: -3.353090763092041
    6. ')' → logprob: -3.853090763092041
    7. '[' → logprob: -4.103090763092041
    8. '):
' → logprob: -5.103090763092041
    9. '[b' → logprob: -5.103090763092041
    10. '[
' → logprob: -5.353090763092041

Token 792: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4912911653518677
    2. 'for' → logprob: -2.116291046142578
    3. ' for' → logprob: -2.366291046142578
    4. '       ' → logprob: -2.616291046142578
    5. ':' → logprob: -2.741291046142578
    6. '   ' → logprob: -3.616291046142578
    7. ' and' → logprob: -5.866291046142578
    8. '           ' → logprob: -6.741291046142578
    9. ':
' → logprob: -6.866291046142578
    10. 'and' → logprob: -6.991291046142578

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29987993836402893
    2. '       ' → logprob: -1.4248799085617065
    3. ' for' → logprob: -4.299880027770996
    4. '           ' → logprob: -6.174880027770996
    5. 'for' → logprob: -7.174880027770996
    6. '    ' → logprob: -7.299880027770996
    7. ',' → logprob: -7.424880027770996
    8. '<|end|>' → logprob: -8.549880027770996
    9. ')' → logprob: -8.924880027770996
    10. '     ' → logprob: -9.299880027770996

Token 794: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6592230796813965
    2. ' for' → logprob: -0.7842230796813965
    3. 'for' → logprob: -3.6592230796813965
    4. '#' (adapté à ' #') → logprob: -8.909223556518555
    5. ' #' → logprob: -9.284223556518555
    6. '       ' → logprob: -9.909223556518555
    7. '    
' → logprob: -10.409223556518555
    8. ' locks' → logprob: -10.534223556518555
    9. ' lock' → logprob: -10.534223556518555
    10. '    ' → logprob: -10.659223556518555

Token 795: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.548419713973999
    2. ' for' → logprob: -1.423419713973999
    3. '   ' → logprob: -1.923419713973999
    4. 'locks' → logprob: -3.673419713973999
    5. '#' → logprob: -5.548419952392578
    6. 'lock' → logprob: -6.048419952392578
    7. ' locks' → logprob: -6.673419952392578
    8. 'counts' → logprob: -7.923419952392578
    9. ' lock' → logprob: -8.173419952392578
    10. ' #' → logprob: -8.173419952392578

Token 796: ' lock' (ID: 8109)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5930400490760803
    2. 'l' → logprob: -0.8430400490760803
    3. 'for' → logprob: -4.5930399894714355
    4. ' for' → logprob: -5.4680399894714355
    5. ' any' → logprob: -7.0930399894714355
    6. 'len' → logprob: -7.2180399894714355
    7. ' len' → logprob: -8.843040466308594
    8. '   ' → logprob: -8.968040466308594
    9. ' (' → logprob: -9.093040466308594
    10. 'lock' → logprob: -9.343040466308594

Token 797: ' l' (ID: 305)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.1434631645679474
    2. 's' → logprob: -2.143463134765625
    3. ' s' → logprob: -5.643463134765625
    4. ' l' → logprob: -6.143463134765625
    5. 'to' → logprob: -6.143463134765625
    6. '   ' → logprob: -6.643463134765625
    7. '1' → logprob: -7.143463134765625
    8. 'To' → logprob: -7.143463134765625
    9. 'l' → logprob: -7.393463134765625
    10. '_s' → logprob: -7.518463134765625

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23060867190361023
    2. '2' → logprob: -1.7306087017059326
    3. '[' → logprob: -3.6056087017059326
    4. ']' → logprob: -7.4806084632873535
    5. '[i' → logprob: -7.7306084632873535
    6. '```' → logprob: -8.855608940124512
    7. '   ' → logprob: -9.855608940124512
    8. 'l' → logprob: -9.980608940124512
    9. 'inks' → logprob: -10.480608940124512
    10. '[
' → logprob: -10.605608940124512

Token 799: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38954129815101624
    2. 'in' → logprob: -2.1395413875579834
    3. ' is' → logprob: -3.0145413875579834
    4. 's' → logprob: -3.0145413875579834
    5. '   ' → logprob: -3.6395413875579834
    6. ' !=' → logprob: -3.8895413875579834
    7. ')' → logprob: -4.764541149139404
    8. 'is' → logprob: -5.264541149139404
    9. 'for' → logprob: -5.514541149139404
    10. ''s' → logprob: -5.514541149139404

Token 800: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01817394234240055
    2. ' l' → logprob: -4.018174171447754
    3. 'lock' → logprob: -10.643174171447754
    4. ' lock' → logprob: -16.393173217773438
    5. '	l' → logprob: -16.643173217773438
    6. ' ' → logprob: -16.893173217773438
    7. ' ' → logprob: -17.893173217773438
    8. '```' → logprob: -18.018173217773438
    9. '_l' → logprob: -18.643173217773438
    10. 'll' → logprob: -19.643173217773438

Token 801: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004475924652069807
    2. '1' → logprob: -7.750447750091553
    3. 'l' → logprob: -12.625447273254395
    4. '```' → logprob: -12.625447273254395
    5. '[' → logprob: -12.750447273254395
    6. 's' → logprob: -13.750447273254395
    7. '_' → logprob: -14.437947273254395
    8. ' ' → logprob: -14.500447273254395
    9. '``' → logprob: -14.937947273254395
    10. 'continue' → logprob: -15.000447273254395

Token 802: ' appear' (ID: 7680)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5646929144859314
    2. ' in' → logprob: -1.5646929740905762
    3. 'are' → logprob: -2.814692974090576
    4. ' appear' → logprob: -2.814692974090576
    5. ')' → logprob: -3.689692974090576
    6. 'in' → logprob: -4.314692974090576
    7. 'appear' → logprob: -4.314692974090576
    8. '
' → logprob: -4.439692974090576
    9. ' share' → logprob: -5.314692974090576
    10. '.append' → logprob: -5.439692974090576

Token 803: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3687983453273773
    2. ' together' → logprob: -1.6187983751296997
    3. 'in' → logprob: -2.24379825592041
    4. 't' → logprob: -6.11879825592041
    5. '   ' → logprob: -6.61879825592041
    6. ' at' → logprob: -8.49379825592041
    7. ' ' → logprob: -9.24379825592041
    8. ' both' → logprob: -9.74379825592041
    9. 's' → logprob: -9.86879825592041
    10. '    ' → logprob: -10.11879825592041

Token 804: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.013216708786785603
    2. 'the' → logprob: -5.013216495513916
    3. ' different' → logprob: -5.513216495513916
    4. 'blocks' → logprob: -6.388216495513916
    5. 'multiple' → logprob: -8.763216972351074
    6. ' the' → logprob: -8.763216972351074
    7. 'diff' → logprob: -9.388216972351074
    8. 'two' → logprob: -9.888216972351074
    9. 'same' → logprob: -9.888216972351074
    10. 'distinct' → logprob: -10.263216972351074

Token 805: ' order' (ID: 2569)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.2045212984085083
    2. 'blocks' → logprob: -1.7045212984085083
    3. ' s' → logprob: -7.329521179199219
    4. 's' → logprob: -7.329521179199219
    5. 'for' → logprob: -7.704521179199219
    6. 'b' → logprob: -7.954521179199219
    7. '_blocks' → logprob: -8.329521179199219
    8. ' for' → logprob: -8.579521179199219
    9. 'block' → logprob: -9.704521179199219
    10. '[' → logprob: -9.829521179199219

Token 806: ' in' (ID: 306)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9918864965438843
    2. ' in' → logprob: -1.3668864965438843
    3. ':' → logprob: -1.6168864965438843
    4. ',' → logprob: -2.366886615753174
    5. '   ' → logprob: -3.241886615753174
    6. '       ' → logprob: -4.866886615753174
    7. '):
' → logprob: -4.866886615753174
    8. ' and' → logprob: -4.991886615753174
    9. 's' → logprob: -5.991886615753174
    10. ')' → logprob: -6.116886615753174

Token 807: ' the' (ID: 290)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5430819392204285
    2. ' blocks' → logprob: -1.4180819988250732
    3. 'the' → logprob: -2.9180819988250732
    4. 'different' → logprob: -2.9180819988250732
    5. ' the' → logprob: -3.5430819988250732
    6. ' different' → logprob: -4.293081760406494
    7. 'b' → logprob: -5.043081760406494
    8. 's' → logprob: -5.668081760406494
    9. 'block' → logprob: -5.793081760406494
    10. ' s' → logprob: -5.918081760406494

Token 808: ' sequence' (ID: 16281)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.017218735069036484
    2. ' blocks' → logprob: -5.142218589782715
    3. 'for' → logprob: -5.642218589782715
    4. 'b' → logprob: -6.017218589782715
    5. 'locks' → logprob: -6.017218589782715
    6. 'block' → logprob: -7.767218589782715
    7. '#' → logprob: -7.767218589782715
    8. 's' → logprob: -7.892218589782715
    9. '```' → logprob: -8.517218589782715
    10. 'g' → logprob: -8.642218589782715

Token 809: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9862056374549866
    2. '   ' → logprob: -1.3612055778503418
    3. ':' → logprob: -2.486205577850342
    4. ' for' → logprob: -2.861205577850342
    5. ',' → logprob: -2.986205577850342
    6. '       ' → logprob: -3.111205577850342
    7. ' in' → logprob: -3.111205577850342
    8. 's' → logprob: -3.736205577850342
    9. 'for' → logprob: -3.861205577850342
    10. '):
' → logprob: -3.986205577850342

Token 810: ' this' (ID: 495)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8498883247375488
    2. '   ' → logprob: -0.9748883247375488
    3. '       ' → logprob: -1.7248883247375488
    4. 'for' → logprob: -4.599888324737549
    5. '           ' → logprob: -5.349888324737549
    6. '    ' → logprob: -7.099888324737549
    7. ',' → logprob: -8.34988784790039
    8. ' then' → logprob: -8.59988784790039
    9. ' continue' → logprob: -8.72488784790039
    10. ' if' → logprob: -9.22488784790039

Token 811: ' can' (ID: 665)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5912350416183472
    2. '[' → logprob: -1.7162350416183472
    3. ' continues' → logprob: -1.9662350416183472
    4. '.append' → logprob: -2.3412351608276367
    5. 'for' → logprob: -3.2162351608276367
    6. '   ' → logprob: -3.5912351608276367
    7. ' for' → logprob: -3.5912351608276367
    8. '[g' → logprob: -3.7162351608276367
    9. ' ' → logprob: -3.8412351608276367
    10. '.' → logprob: -3.9662351608276367

Token 812: ' generate' (ID: 10419)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2382694482803345
    2. 'continue' → logprob: -1.6132694482803345
    3. ' cause' → logprob: -1.8632694482803345
    4. ' continue' → logprob: -2.613269329071045
    5. ' create' → logprob: -3.113269329071045
    6. '.append' → logprob: -3.238269329071045
    7. '       ' → logprob: -3.488269329071045
    8. 'cause' → logprob: -3.488269329071045
    9. '
' → logprob: -3.988269329071045
    10. ' for' → logprob: -4.363269329071045

Token 813: ' waits' (ID: 99777)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6619681715965271
    2. ' an' → logprob: -1.1619682312011719
    3. ' a' → logprob: -2.536968231201172
    4. 'edges' → logprob: -3.286968231201172
    5. ' cross' → logprob: -4.286968231201172
    6. ' cycles' → logprob: -4.661968231201172
    7. 'cycles' → logprob: -4.911968231201172
    8. 'a' → logprob: -5.036968231201172
    9. 'an' → logprob: -5.286968231201172
    10. 'g' → logprob: -5.536968231201172

Token 814: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4189735949039459
    2. '<|end|>' → logprob: -1.6689735651016235
    3. ' for' → logprob: -2.168973684310913
    4. 'for' → logprob: -3.918973684310913
    5. '       ' → logprob: -5.293973445892334
    6. '.' → logprob: -5.418973445892334
    7. '           ' → logprob: -5.668973445892334
    8. ',' → logprob: -5.793973445892334
    9. '<|end|>' → logprob: -6.418973445892334
    10. ' and' → logprob: -7.543973445892334

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009287334396503866
    2. ' for' → logprob: -7.87592887878418
    3. 'for' → logprob: -8.12592887878418
    4. '<|end|>' → logprob: -8.50092887878418
    5. '
' → logprob: -10.87592887878418
    6. '       ' → logprob: -11.37592887878418
    7. '    
' → logprob: -12.25092887878418
    8. '```' → logprob: -12.37592887878418
    9. '<|end|>' → logprob: -12.37592887878418
    10. ')' → logprob: -14.00092887878418

Token 816: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07752621173858643
    2. ' for' → logprob: -2.952526092529297
    3. 'for' → logprob: -3.827526092529297
    4. '
' → logprob: -7.952526092529297
    5. '    
' → logprob: -9.327526092529297
    6. '```' → logprob: -10.702526092529297
    7. '#' (adapté à ' #') → logprob: -10.827526092529297
    8. '       ' → logprob: -10.827526092529297
    9. ' lock' → logprob: -10.827526092529297
    10. '    ' → logprob: -10.952526092529297

Token 817: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12571114301681519
    2. '   ' → logprob: -2.50071120262146
    3. 'locks' → logprob: -4.125710964202881
    4. ' for' → logprob: -4.500710964202881
    5. 'lock' → logprob: -5.875710964202881
    6. 'all' → logprob: -6.375710964202881
    7. 'used' → logprob: -6.875710964202881
    8. 'ac' → logprob: -7.000710964202881
    9. 'from' → logprob: -7.625710964202881
    10. '#' → logprob: -7.875710964202881

Token 818: ' more' (ID: 945)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08852909505367279
    2. 'for' → logprob: -2.838529109954834
    3. '   ' → logprob: -3.963529109954834
    4. ' m' → logprob: -6.213529109954834
    5. ' lock' → logprob: -6.838529109954834
    6. '```' → logprob: -7.713529109954834
    7. ' n' → logprob: -7.838529109954834
    8. ' #' → logprob: -7.838529109954834
    9. '    ' → logprob: -7.838529109954834
    10. 'm' → logprob: -8.088528633117676

Token 819: ' generally' (ID: 12190)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0723721981048584
    2. 'for' → logprob: -1.4473721981048584
    3. ' code' → logprob: -1.5723721981048584
    4. '   ' → logprob: -2.9473721981048584
    5. ' lines' → logprob: -3.3223721981048584
    6. '       ' → logprob: -3.8223721981048584
    7. 'code' → logprob: -4.4473724365234375
    8. '...' → logprob: -4.9473724365234375
    9. 'details' → logprob: -5.0723724365234375
    10. '_code' → logprob: -5.1973724365234375

Token 820: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19854599237442017
    2. '   ' → logprob: -1.8235459327697754
    3. 'for' → logprob: -4.323545932769775
    4. '<|end|>' → logprob: -5.698545932769775
    5. ',' → logprob: -7.198545932769775
    6. '
' → logprob: -7.823545932769775
    7. '<|end|>' → logprob: -8.823546409606934
    8. '    
' → logprob: -9.073546409606934
    9. '    ' → logprob: -9.198546409606934
    10. '       ' → logprob: -9.323546409606934

Token 821: ' consider' (ID: 3331)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3713633418083191
    2. 'for' → logprob: -1.2463634014129639
    3. 'locks' → logprob: -5.121363162994385
    4. '   ' → logprob: -5.246363162994385
    5. ' lock' → logprob: -5.996363162994385
    6. ' m' → logprob: -5.996363162994385
    7. ' locks' → logprob: -5.996363162994385
    8. 'lock' → logprob: -7.246363162994385
    9. 'm' → logprob: -7.496363162994385
    10. ' sets' → logprob: -7.871363162994385

Token 822: ' lock' (ID: 8109)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.0097439289093018
    2. '   ' → logprob: -2.0097439289093018
    3. ' range' → logprob: -2.1347439289093018
    4. ' for' → logprob: -2.3847439289093018
    5. ' m' → logprob: -2.5097439289093018
    6. 'locks' → logprob: -2.6347439289093018
    7. 'for' → logprob: -2.7597439289093018
    8. ' lock' → logprob: -2.7597439289093018
    9. 'range' → logprob: -3.1347439289093018
    10. ' blocks' → logprob: -3.2597439289093018

Token 823: ' conflicts' (ID: 50037)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.012178314849734306
    2. 's' → logprob: -4.762178421020508
    3. '_sets' → logprob: -7.012178421020508
    4. '_indices' → logprob: -7.512178421020508
    5. '_set' → logprob: -7.887178421020508
    6. 'to' → logprob: -8.012178421020508
    7. '_counts' → logprob: -8.137178421020508
    8. '_positions' → logprob: -8.637178421020508
    9. '_lists' → logprob: -9.387178421020508
    10. 'for' → logprob: -9.387178421020508

Token 824: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03230312839150429
    2. ' for' → logprob: -3.7823030948638916
    3. '<|end|>' → logprob: -5.532303333282471
    4. 'for' → logprob: -6.532303333282471
    5. ' and' → logprob: -6.657303333282471
    6. ',' → logprob: -7.532303333282471
    7. '.' → logprob: -7.657303333282471
    8. '<|end|>' → logprob: -8.907302856445312
    9. '#' → logprob: -9.032302856445312
    10. ' in' → logprob: -9.157302856445312

Token 825: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007395310327410698
    2. 'for' → logprob: -5.132395267486572
    3. 'lock' → logprob: -7.257395267486572
    4. '#' → logprob: -8.13239574432373
    5. ' for' → logprob: -8.50739574432373
    6. 'locks' → logprob: -9.50739574432373
    7. 'from' → logprob: -9.63239574432373
    8. '
' → logprob: -10.13239574432373
    9. 'm' → logprob: -10.63239574432373
    10. '```' → logprob: -11.00739574432373

Token 826: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0440172404050827
    2. 'for' → logprob: -3.4190173149108887
    3. 'lock' → logprob: -5.794017314910889
    4. '#' (adapté à ' #') → logprob: -5.794017314910889
    5. ' for' → logprob: -6.044017314910889
    6. 'locks' → logprob: -7.294017314910889
    7. 'from' → logprob: -7.919017314910889
    8. ' #' → logprob: -8.29401683807373
    9. ' lock' → logprob: -8.66901683807373
    10. 'all' → logprob: -9.41901683807373

Token 827: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6385878324508667
    2. 'for' → logprob: -1.1385878324508667
    3. 'lock' → logprob: -2.6385879516601562
    4. 'locks' → logprob: -3.1385879516601562
    5. '#' → logprob: -4.763587951660156
    6. ' for' → logprob: -5.013587951660156
    7. 'all' → logprob: -5.388587951660156
    8. 'ac' → logprob: -5.638587951660156
    9. 'used' → logprob: -6.138587951660156
    10. 'max' → logprob: -6.263587951660156

Token 828: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2274261713027954
    2. ' i' → logprob: -2.852426052093506
    3. 'b' → logprob: -2.977426052093506
    4. 'l' → logprob: -3.102426052093506
    5. 'block' → logprob: -4.102426052093506
    6. ' l' → logprob: -4.352426052093506
    7. ' b' → logprob: -4.852426052093506
    8. 'lock' → logprob: -5.352426052093506
    9. ' block' → logprob: -6.102426052093506
    10. '   ' → logprob: -6.227426052093506

Token 829: ' pair' (ID: 10610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11142159253358841
    2. ' i' → logprob: -2.986421585083008
    3. 'l' → logprob: -3.486421585083008
    4. 'b' → logprob: -4.736421585083008
    5. ' l' → logprob: -4.986421585083008
    6. 'block' → logprob: -5.486421585083008
    7. 'lock' → logprob: -6.111421585083008
    8. ' b' → logprob: -6.986421585083008
    9. '   ' → logprob: -7.236421585083008
    10. ' block' → logprob: -7.861421585083008

Token 830: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6927541494369507
    2. 'for' → logprob: -1.6927541494369507
    3. ' of' → logprob: -2.0677542686462402
    4. ' for' → logprob: -2.9427542686462402
    5. ' =' → logprob: -2.9427542686462402
    6. 'of' → logprob: -3.4427542686462402
    7. ' in' → logprob: -4.69275426864624
    8. '       ' → logprob: -5.31775426864624
    9. '_' → logprob: -5.56775426864624
    10. '=' → logprob: -5.56775426864624

Token 831: ' locks' (ID: 50098)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.23913580179214478
    2. ' blocks' → logprob: -2.2391357421875
    3. 'b' → logprob: -3.2391357421875
    4. 'i' → logprob: -3.4891357421875
    5. ' i' → logprob: -4.7391357421875
    6. 'range' → logprob: -4.7391357421875
    7. 'locks' → logprob: -4.7391357421875
    8. ' range' → logprob: -5.6141357421875
    9. 'block' → logprob: -6.1141357421875
    10. ' b' → logprob: -6.1141357421875

Token 832: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03167575225234032
    2. '   ' → logprob: -4.531675815582275
    3. ',' → logprob: -4.906675815582275
    4. ' for' → logprob: -5.281675815582275
    5. ' l' → logprob: -6.281675815582275
    6. ':' → logprob: -6.406675815582275
    7. ' (' → logprob: -6.531675815582275
    8. 'in' → logprob: -6.906675815582275
    9. ':
' → logprob: -7.656675815582275
    10. 'for' → logprob: -8.031675338745117

Token 833: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7126357555389404
    2. ' in' → logprob: -1.7126357555389404
    3. 'l' → logprob: -1.9626357555389404
    4. ' l' → logprob: -2.4626357555389404
    5. ',' → logprob: -3.5876357555389404
    6. ' )' → logprob: -3.7126357555389404
    7. '),' → logprob: -3.9626357555389404
    8. 'i' → logprob: -4.7126359939575195
    9. ' i' → logprob: -5.2126359939575195
    10. 'in' → logprob: -5.3376359939575195

Token 834: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8406296968460083
    2. '),' → logprob: -1.9656296968460083
    3. ')' → logprob: -2.0906295776367188
    4. ',b' → logprob: -2.5906295776367188
    5. ' in' → logprob: -3.0906295776367188
    6. ' ,' → logprob: -3.3406295776367188
    7. ',i' → logprob: -3.5906295776367188
    8. 'for' → logprob: -3.8406295776367188
    9. ',j' → logprob: -4.215629577636719
    10. '[i' → logprob: -4.340629577636719

Token 835: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.033762916922569275
    2. ')' → logprob: -4.1587629318237305
    3. '):' → logprob: -4.1587629318237305
    4. '   ' → logprob: -7.1587629318237305
    5. '       ' → logprob: -8.03376293182373
    6. '),' → logprob: -8.28376293182373
    7. '):
' → logprob: -9.53376293182373
    8. ')
' → logprob: -9.53376293182373
    9. ' ):
' → logprob: -9.65876293182373
    10. '           ' → logprob: -10.03376293182373

Token 836: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.145778626203537
    2. '   ' → logprob: -2.2707786560058594
    3. 'for' → logprob: -3.5207786560058594
    4. ' if' → logprob: -7.145778656005859
    5. '       ' → logprob: -7.270778656005859
    6. '    ' → logprob: -7.520778656005859
    7. '	for' → logprob: -9.02077865600586
    8. ' n' → logprob: -9.52077865600586
    9. ' continue' → logprob: -9.52077865600586
    10. ' found' → logprob: -9.52077865600586

Token 837: ' there' (ID: 1354)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6050609350204468
    2. 'a' → logprob: -0.8550609350204468
    3. ' any' → logprob: -4.105061054229736
    4. 'lock' → logprob: -6.855061054229736
    5. ' g' → logprob: -6.980061054229736
    6. 'any' → logprob: -7.105061054229736
    7. 'locks' → logprob: -7.105061054229736
    8. ' lock' → logprob: -7.230061054229736
    9. ')' → logprob: -7.480061054229736
    10. 'g' → logprob: -7.605061054229736

Token 838: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6168777346611023
    2. 'in' → logprob: -2.241877794265747
    3. ')' → logprob: -2.741877794265747
    4. '[a' → logprob: -2.866877794265747
    5. 'a' → logprob: -3.366877794265747
    6. '[i' → logprob: -3.616877794265747
    7. ' appears' → logprob: -3.741877794265747
    8. '[' → logprob: -3.866877794265747
    9. '   ' → logprob: -4.366877555847168
    10. ' a' → logprob: -4.366877555847168

Token 839: ' blocks' (ID: 18125)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3103964030742645
    2. ' s' → logprob: -2.810396432876587
    3. ' blocks' → logprob: -2.810396432876587
    4. ' b' → logprob: -3.185396432876587
    5. 'a' → logprob: -3.810396432876587
    6. ' i' → logprob: -4.060396194458008
    7. ' in' → logprob: -4.560396194458008
    8. 's' → logprob: -4.935396194458008
    9. 'b' → logprob: -4.935396194458008
    10. ' ' → logprob: -5.060396194458008

Token 840: ' containing' (ID: 15683)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4807414710521698
    2. ' that' → logprob: -2.355741500854492
    3. 'in' → logprob: -2.480741500854492
    4. ':' → logprob: -3.355741500854492
    5. '       ' → logprob: -3.605741500854492
    6. '   ' → logprob: -3.980741500854492
    7. ' where' → logprob: -4.105741500854492
    8. ':
' → logprob: -4.105741500854492
    9. ' for' → logprob: -4.605741500854492
    10. 'that' → logprob: -4.605741500854492

Token 841: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014624472707509995
    2. ' a' → logprob: -4.26462459564209
    3. 'b' → logprob: -8.01462459564209
    4. '[a' → logprob: -9.76462459564209
    5. ' b' → logprob: -10.51462459564209
    6. '   ' → logprob: -11.13962459564209
    7. '
' → logprob: -12.01462459564209
    8. '(a' → logprob: -12.38962459564209
    9. '[' → logprob: -12.38962459564209
    10. 'l' → logprob: -12.88962459564209

Token 842: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08826633542776108
    2. ')' → logprob: -2.838266372680664
    3. 'and' → logprob: -3.838266372680664
    4. '):
' → logprob: -6.088266372680664
    5. ' for' → logprob: -8.088266372680664
    6. ' in' → logprob: -8.213266372680664
    7. ' )' → logprob: -8.463266372680664
    8. '   ' → logprob: -8.588266372680664
    9. ',' → logprob: -8.588266372680664
    10. '),' → logprob: -8.713266372680664

Token 843: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759732127189636
    2. ' b' → logprob: -0.8259732127189636
    3. ' ' → logprob: -10.575973510742188
    4. ' 
' → logprob: -12.950973510742188
    5. ' ' → logprob: -12.950973510742188
    6. ' a' → logprob: -14.325973510742188
    7. '
' → logprob: -14.825973510742188
    8. ',b' → logprob: -15.200973510742188
    9. '    ' → logprob: -15.325973510742188
    10. ',' → logprob: -15.450973510742188

Token 844: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7522463202476501
    2. ',' → logprob: -1.502246379852295
    3. ' and' → logprob: -2.502246379852295
    4. ':
' → logprob: -2.627246379852295
    5. '       ' → logprob: -2.877246379852295
    6. '   ' → logprob: -3.377246379852295
    7. ' in' → logprob: -4.377246379852295
    8. '):' → logprob: -4.502246379852295
    9. ' for' → logprob: -4.627246379852295
    10. '):
' → logprob: -4.627246379852295

Token 845: ' where' (ID: 1919)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2253931164741516
    2. '   ' → logprob: -2.350393056869507
    3. '       ' → logprob: -2.600393056869507
    4. 'for' → logprob: -3.975393056869507
    5. '           ' → logprob: -5.100393295288086
    6. '               ' → logprob: -6.225393295288086
    7. ' if' → logprob: -6.225393295288086
    8. ' and' → logprob: -6.850393295288086
    9. '                   ' → logprob: -6.975393295288086
    10. ',' → logprob: -8.100393295288086

Token 846: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6497779488563538
    2. ' a' → logprob: -0.7747779488563538
    3. ' b' → logprob: -5.399777889251709
    4. ' s' → logprob: -5.774777889251709
    5. 'b' → logprob: -6.149777889251709
    6. ' the' → logprob: -6.649777889251709
    7. ' blocks' → logprob: -6.649777889251709
    8. ' (' → logprob: -7.274777889251709
    9. ' not' → logprob: -7.524777889251709
    10. 's' → logprob: -7.524777889251709

Token 847: ' waits' (ID: 99777)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8426173329353333
    2. ' and' → logprob: -1.9676172733306885
    3. ')' → logprob: -2.0926172733306885
    4. ' appears' → logprob: -2.3426172733306885
    5. ' !=' → logprob: -2.7176172733306885
    6. ' is' → logprob: -3.2176172733306885
    7. 'in' → logprob: -3.2176172733306885
    8. 's' → logprob: -4.967617511749268
    9. '[i' → logprob: -4.967617511749268
    10. 'and' → logprob: -5.092617511749268

Token 848: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042399171739816666
    2. ' for' → logprob: -3.4173991680145264
    3. '_for' → logprob: -5.1673994064331055
    4. '   ' → logprob: -6.0423994064331055
    5. ')' → logprob: -8.792399406433105
    6. '       ' → logprob: -9.167399406433105
    7. '```' → logprob: -9.167399406433105
    8. ' ' → logprob: -9.542399406433105
    9. 'For' → logprob: -10.042399406433105
    10. '
' → logprob: -10.292399406433105

Token 849: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38688555359840393
    2. ' b' → logprob: -1.1368855237960815
    3. ' ' → logprob: -11.761885643005371
    4. ' 
' → logprob: -13.136885643005371
    5. '    ' → logprob: -14.261885643005371
    6. '(b' → logprob: -14.261885643005371
    7. ')b' → logprob: -14.261885643005371
    8. '	b' → logprob: -14.511885643005371
    9. '
' → logprob: -14.511885643005371
    10. ')' → logprob: -14.636885643005371

Token 850: ' indirectly' (ID: 86512)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7420651912689209
    2. '           ' → logprob: -1.367065191268921
    3. ',' → logprob: -1.867065191268921
    4. '       ' → logprob: -3.867065191268921
    5. ' for' → logprob: -3.867065191268921
    6. 'and' → logprob: -3.867065191268921
    7. ':' → logprob: -4.3670654296875
    8. '   ' → logprob: -4.8670654296875
    9. '               ' → logprob: -4.9920654296875
    10. ')' → logprob: -5.3670654296875

Token 851: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.46447938680648804
    2. ':' → logprob: -2.089479446411133
    3. '   ' → logprob: -2.839479446411133
    4. '       ' → logprob: -3.089479446411133
    5. 'and' → logprob: -3.589479446411133
    6. ':
' → logprob: -3.589479446411133
    7. '           ' → logprob: -3.714479446411133
    8. ',' → logprob: -3.839479446411133
    9. ' for' → logprob: -3.964479446411133
    10. 'for' → logprob: -5.464479446411133

Token 852: ' add' (ID: 1147)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5222374200820923
    2. '   ' → logprob: -1.1472374200820923
    3. '           ' → logprob: -3.6472373008728027
    4. '       ' → logprob: -3.6472373008728027
    5. '                   ' → logprob: -4.897237300872803
    6. 'for' → logprob: -4.897237300872803
    7. ' and' → logprob: -5.022237300872803
    8. '               ' → logprob: -5.022237300872803
    9. ' continue' → logprob: -5.897237300872803
    10. ' if' → logprob: -6.272237300872803

Token 853: ' edges' (ID: 22569)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4643019437789917
    2. ' b' → logprob: -1.5893019437789917
    3. ' edges' → logprob: -2.3393020629882812
    4. ' an' → logprob: -3.8393020629882812
    5. ' a' → logprob: -4.089302062988281
    6. 'a' → logprob: -4.089302062988281
    7. 'edges' → logprob: -5.214302062988281
    8. '[b' → logprob: -6.214302062988281
    9. ' edge' → logprob: -6.339302062988281
    10. '(b' → logprob: -6.464302062988281

Token 854: ' accordingly' (ID: 44041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8918352127075195
    2. '<|end|>' → logprob: -0.8918352127075195
    3. ' for' → logprob: -1.8918352127075195
    4. ' ' → logprob: -5.2668352127075195
    5. '<|end|>' → logprob: -5.3918352127075195
    6. ' from' → logprob: -5.5168352127075195
    7. 'for' → logprob: -5.6418352127075195
    8. ' in' → logprob: -5.8918352127075195
    9. 'from' → logprob: -6.0168352127075195
    10. '    ' → logprob: -6.8918352127075195

Token 855: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040711261332035065
    2. ' for' → logprob: -4.040711402893066
    3. '    
' → logprob: -4.915711402893066
    4. '       ' → logprob: -5.540711402893066
    5. '           ' → logprob: -5.790711402893066
    6. 'for' → logprob: -6.665711402893066
    7. '
' → logprob: -6.790711402893066
    8. ',' → logprob: -6.790711402893066
    9. '<|end|>' → logprob: -6.790711402893066
    10. '    ' → logprob: -7.415711402893066

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0250852108001709
    2. 'for' → logprob: -4.15008544921875
    3. ' for' → logprob: -4.90008544921875
    4. '#' → logprob: -7.52508544921875
    5. 'from' → logprob: -8.77508544921875
    6. 'lock' → logprob: -8.90008544921875
    7. ' locks' → logprob: -8.90008544921875
    8. 'locks' → logprob: -9.15008544921875
    9. ' #' → logprob: -9.40008544921875
    10. '```' → logprob: -9.52508544921875

Token 857: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1188056617975235
    2. 'locks' → logprob: -2.3688056468963623
    3. 'for' → logprob: -4.493805885314941
    4. ' locks' → logprob: -5.993805885314941
    5. 'lock' → logprob: -6.993805885314941
    6. ' for' → logprob: -6.993805885314941
    7. 'all' → logprob: -6.993805885314941
    8. 'from' → logprob: -7.243805885314941
    9. '#' (adapté à ' #') → logprob: -8.118805885314941
    10. 'counts' → logprob: -8.243805885314941

Token 858: ' Since' (ID: 12265)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.2240496128797531
    2. 'lock' → logprob: -2.5990495681762695
    3. 'for' → logprob: -2.9740495681762695
    4. '   ' → logprob: -3.0990495681762695
    5. 'm' → logprob: -4.9740495681762695
    6. 'from' → logprob: -5.4740495681762695
    7. 'n' → logprob: -5.5990495681762695
    8. '#' → logprob: -5.9740495681762695
    9. 'all' → logprob: -6.0990495681762695
    10. 'ac' → logprob: -6.2240495681762695

Token 859: ' all' (ID: 722)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3767748177051544
    2. ' i' → logprob: -2.126774787902832
    3. 'm' → logprob: -2.376774787902832
    4. ' blocks' → logprob: -3.376774787902832
    5. ' len' → logprob: -4.001774787902832
    6. ' lock' → logprob: -4.251774787902832
    7. ' for' → logprob: -4.751774787902832
    8. 'blocks' → logprob: -5.376774787902832
    9. 'i' → logprob: -5.501774787902832
    10. ' n' → logprob: -5.876774787902832

Token 860: ' threads' (ID: 29249)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2971152067184448
    2. ' l' → logprob: -1.6721152067184448
    3. ' i' → logprob: -2.0471153259277344
    4. 'for' → logprob: -2.4221153259277344
    5. ' for' → logprob: -2.7971153259277344
    6. 'i' → logprob: -2.7971153259277344
    7. ' locks' → logprob: -2.9221153259277344
    8. 'l' → logprob: -3.9221153259277344
    9. 'locks' → logprob: -4.047115325927734
    10. ' pairs' → logprob: -4.172115325927734

Token 861: ' execute' (ID: 15792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8157563209533691
    2. 'for' → logprob: -1.6907563209533691
    3. ' for' → logprob: -1.9407563209533691
    4. ' in' → logprob: -2.690756320953369
    5. ' are' → logprob: -3.565756320953369
    6. '       ' → logprob: -3.690756320953369
    7. ' =' → logprob: -3.815756320953369
    8. ' continue' → logprob: -4.315756320953369
    9. 'in' → logprob: -5.065756320953369
    10. 's' → logprob: -5.065756320953369

Token 862: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1516140699386597
    2. ' for' → logprob: -1.5266140699386597
    3. ' in' → logprob: -1.9016140699386597
    4. 'for' → logprob: -2.526614189147949
    5. ' the' → logprob: -2.651614189147949
    6. 'in' → logprob: -3.526614189147949
    7. '```' → logprob: -3.651614189147949
    8. ' i' → logprob: -4.151614189147949
    9. ' a' → logprob: -4.776614189147949
    10. 's' → logprob: -4.776614189147949

Token 863: ' same' (ID: 2684)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5305464267730713
    2. ' same' → logprob: -2.2805464267730713
    3. ' s' → logprob: -2.7805464267730713
    4. ' blocks' → logprob: -2.9055464267730713
    5. ' next' → logprob: -3.4055464267730713
    6. ' first' → logprob: -3.4055464267730713
    7. ' previous' → logprob: -4.655546188354492
    8. ' following' → logprob: -4.780546188354492
    9. ' rest' → logprob: -4.780546188354492
    10. ' for' → logprob: -4.905546188354492

Token 864: ' sequence' (ID: 16281)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.22251814603805542
    2. ' logic' → logprob: -3.0975182056427
    3. ' line' → logprob: -3.3475182056427
    4. '   ' → logprob: -3.9725182056427
    5. ' lines' → logprob: -4.097517967224121
    6. ' way' → logprob: -4.222517967224121
    7. ' sequence' → logprob: -4.597517967224121
    8. ' time' → logprob: -4.597517967224121
    9. 'code' → logprob: -4.722517967224121
    10. ' s' → logprob: -5.847517967224121

Token 865: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08222877234220505
    2. '<|end|>' → logprob: -3.207228660583496
    3. ' for' → logprob: -3.707228660583496
    4. '
' → logprob: -5.582228660583496
    5. 'for' → logprob: -5.957228660583496
    6. ',' → logprob: -6.332228660583496
    7. '#' → logprob: -6.707228660583496
    8. 'import' → logprob: -6.832228660583496
    9. '<|end|>' → logprob: -6.957228660583496
    10. ')' → logprob: -6.957228660583496

Token 866: ' beginning' (ID: 10526)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7920610904693604
    2. 'blocks' → logprob: -2.5420610904693604
    3. 'def' → logprob: -2.9170610904693604
    4. 's' → logprob: -2.9170610904693604
    5. 'parse' → logprob: -3.0420610904693604
    6. 'here' → logprob: -3.0420610904693604
    7. 'start' → logprob: -3.1670610904693604
    8. 'scratch' → logprob: -3.4170610904693604
    9. ' the' → logprob: -3.6670610904693604
    10. 'each' → logprob: -3.9170610904693604

Token 867: ',
' (ID: 412)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4104619026184082
    2. '   ' → logprob: -2.285461902618408
    3. ',' → logprob: -2.535461902618408
    4. ':' → logprob: -3.285461902618408
    5. 's' → logprob: -3.660461902618408
    6. '<|end|>' → logprob: -4.160461902618408
    7. ' for' → logprob: -4.285461902618408
    8. ' and' → logprob: -5.035461902618408
    9. 'to' → logprob: -5.285461902618408
    10. ' s' → logprob: -5.285461902618408

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2638254761695862
    2. ' for' → logprob: -1.5138254165649414
    3. 'for' → logprob: -4.888825416564941
    4. ' and' → logprob: -7.013825416564941
    5. '#' → logprob: -7.513825416564941
    6. ' we' → logprob: -7.888825416564941
    7. '    ' → logprob: -8.263825416564941
    8. ' i' → logprob: -8.388825416564941
    9. ' #' → logprob: -8.513825416564941
    10. '       ' → logprob: -8.638825416564941

Token 869: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07211383432149887
    2. '#' (adapté à ' #') → logprob: -3.3221137523651123
    3. ' for' → logprob: -4.072113990783691
    4. 'for' → logprob: -4.322113990783691
    5. ' #' → logprob: -6.197113990783691
    6. '       ' → logprob: -8.072113990783691
    7. ' ' → logprob: -8.947113990783691
    8. '  ' → logprob: -8.947113990783691
    9. '    ' → logprob: -9.197113990783691
    10. ' and' → logprob: -9.947113990783691

Token 870: ' cycles' (ID: 41478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2112921476364136
    2. ' for' → logprob: -1.3362921476364136
    3. '   ' → logprob: -1.9612921476364136
    4. 'locks' → logprob: -2.086292266845703
    5. ' locks' → logprob: -2.336292266845703
    6. '#' → logprob: -3.086292266845703
    7. ' #' → logprob: -3.961292266845703
    8. 'lock' → logprob: -5.961292266845703
    9. 'from' → logprob: -6.336292266845703
    10. ' lock' → logprob: -6.711292266845703

Token 871: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1637463569641113
    2. '   ' → logprob: -1.2887463569641113
    3. ' are' → logprob: -2.0387463569641113
    4. ' may' → logprob: -2.7887463569641113
    5. ' can' → logprob: -2.9137463569641113
    6. ')' → logprob: -3.2887463569641113
    7. ':' → logprob: -3.4137463569641113
    8. ' continue' → logprob: -3.7887463569641113
    9. ' and' → logprob: -4.663746356964111
    10. ' could' → logprob: -5.038746356964111

Token 872: ' lock' (ID: 8109)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3549131751060486
    2. ' the' → logprob: -1.8549132347106934
    3. ' g' → logprob: -2.4799132347106934
    4. 'the' → logprob: -2.8549132347106934
    5. 's' → logprob: -8.104912757873535
    6. ' s' → logprob: -8.854912757873535
    7. 'graph' → logprob: -8.979912757873535
    8. 'lock' → logprob: -9.229912757873535
    9. '   ' → logprob: -10.104912757873535
    10. '```' → logprob: -10.229912757873535

Token 873: ' dependency' (ID: 50228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5635110139846802
    2. '_to' → logprob: -1.6885110139846802
    3. 'graph' → logprob: -3.0635108947753906
    4. ')' → logprob: -3.9385108947753906
    5. 'ac' → logprob: -3.9385108947753906
    6. 's' → logprob: -4.188510894775391
    7. ' acquisition' → logprob: -4.313510894775391
    8. 'g' → logprob: -4.313510894775391
    9. ' graph' → logprob: -4.313510894775391
    10. ' usage' → logprob: -4.563510894775391

Token 874: ' graph' (ID: 7465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6726011633872986
    2. 'graph' → logprob: -1.1726012229919434
    3. ' graph' → logprob: -2.2976012229919434
    4. 'g' → logprob: -4.172601222991943
    5. 's' → logprob: -4.547601222991943
    6. ')' → logprob: -4.922601222991943
    7. '_graph' → logprob: -5.172601222991943
    8. 'for' → logprob: -5.172601222991943
    9. ' can' → logprob: -5.422601222991943
    10. ' will' → logprob: -5.422601222991943

Token 875: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37020808458328247
    2. '   ' → logprob: -1.8702080249786377
    3. '<|end|>' → logprob: -3.1202080249786377
    4. ':' → logprob: -3.3702080249786377
    5. '):' → logprob: -4.120208263397217
    6. ' are' → logprob: -4.995208263397217
    7. ' will' → logprob: -5.120208263397217
    8. '<|end|>' → logprob: -5.245208263397217
    9. ' can' → logprob: -5.370208263397217
    10. ' would' → logprob: -5.370208263397217

Token 876: ' happen' (ID: 5659)
  Prédit: 'cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cause' → logprob: -1.116826057434082
    2. ' cause' → logprob: -1.366826057434082
    3. 'appear' → logprob: -1.616826057434082
    4. '   ' → logprob: -2.866826057434082
    5. 'occur' → logprob: -3.366826057434082
    6. 'form' → logprob: -3.616826057434082
    7. ' form' → logprob: -4.116826057434082
    8. 'create' → logprob: -4.241826057434082
    9. ' lead' → logprob: -4.241826057434082
    10. 'generate' → logprob: -4.491826057434082

Token 877: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14166243374347687
    2. '<|end|>' → logprob: -2.516662359237671
    3. ' for' → logprob: -3.141662359237671
    4. '<|end|>' → logprob: -6.14166259765625
    5. '.' → logprob: -6.76666259765625
    6. 'for' → logprob: -6.89166259765625
    7. ')' → logprob: -6.89166259765625
    8. ',' → logprob: -6.89166259765625
    9. '    
' → logprob: -8.39166259765625
    10. ' in' → logprob: -8.76666259765625

Token 878: ' dependency' (ID: 50228)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.41530999541282654
    2. ' any' → logprob: -1.790310025215149
    3. ' for' → logprob: -2.6653099060058594
    4. ' a' → logprob: -3.1653099060058594
    5. 'for' → logprob: -4.415309906005859
    6. 'a' → logprob: -4.790309906005859
    7. 'there' → logprob: -4.790309906005859
    8. 'any' → logprob: -5.040309906005859
    9. ' the' → logprob: -5.540309906005859
    10. '   ' → logprob: -5.915309906005859

Token 879: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1729559600353241
    2. ' edges' → logprob: -2.7979559898376465
    3. '   ' → logprob: -3.4229559898376465
    4. ' s' → logprob: -3.6729559898376465
    5. ' exists' → logprob: -4.9229559898376465
    6. ' between' → logprob: -5.0479559898376465
    7. ' ' → logprob: -5.1729559898376465
    8. '[s' → logprob: -6.0479559898376465
    9. '[' → logprob: -6.2979559898376465
    10. '_' → logprob: -6.6729559898376465

Token 880: ' formed' (ID: 20680)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.10880491882562637
    2. 'has' → logprob: -3.108804941177368
    3. ' contains' → logprob: -3.358804941177368
    4. '   ' → logprob: -4.733804702758789
    5. ' is' → logprob: -4.983804702758789
    6. '#' → logprob: -6.858804702758789
    7. 'contains' → logprob: -6.983804702758789
    8. '.has' → logprob: -7.108804702758789
    9. '[u' → logprob: -7.108804702758789
    10. 's' → logprob: -7.983804702758789

Token 881: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8030306696891785
    2. 'by' → logprob: -1.1780307292938232
    3. '   ' → logprob: -2.5530307292938232
    4. 'from' → logprob: -3.1780307292938232
    5. '[u' → logprob: -3.9280307292938232
    6. '[' → logprob: -4.303030490875244
    7. '=' → logprob: -4.303030490875244
    8. 'for' → logprob: -4.678030490875244
    9. '```' → logprob: -4.928030490875244
    10. '       ' → logprob: -4.928030490875244

Token 882: ' edges' (ID: 22569)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.3413906991481781
    2. 'the' → logprob: -2.591390609741211
    3. 'g' → logprob: -2.841390609741211
    4. 'edges' → logprob: -3.216390609741211
    5. 'adding' → logprob: -3.841390609741211
    6. '   ' → logprob: -3.966390609741211
    7. 'lock' → logprob: -4.091390609741211
    8. 'blocks' → logprob: -4.966390609741211
    9. ' the' → logprob: -4.966390609741211
    10. 'all' → logprob: -5.341390609741211

Token 883: ' (' (ID: 350)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.45010945200920105
    2. 'from' → logprob: -1.9501094818115234
    3. '   ' → logprob: -2.9501094818115234
    4. ' from' → logprob: -2.9501094818115234
    5. 'between' → logprob: -3.5751094818115234
    6. ' is' → logprob: -4.075109481811523
    7. ' in' → logprob: -4.700109481811523
    8. ' for' → logprob: -4.825109481811523
    9. ' generated' → logprob: -5.575109481811523
    10. ' continues' → logprob: -5.575109481811523

Token 884: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6115904450416565
    2. ' between' → logprob: -2.8615903854370117
    3. 'from' → logprob: -3.1115903854370117
    4. 'between' → logprob: -3.1115903854370117
    5. 'l' → logprob: -3.6115903854370117
    6. 'a' → logprob: -3.6115903854370117
    7. 'locks' → logprob: -3.7365903854370117
    8. '   ' → logprob: -3.9865903854370117
    9. ' in' → logprob: -4.111590385437012
    10. ' locks' → logprob: -4.111590385437012

Token 885: 'atter' (ID: 4612)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40819695591926575
    2. ')' → logprob: -2.6581969261169434
    3. '[' → logprob: -2.9081969261169434
    4. 'ocks' → logprob: -3.0331969261169434
    5. ']' → logprob: -3.7831969261169434
    6. '   ' → logprob: -3.7831969261169434
    7. 'inks' → logprob: -3.7831969261169434
    8. '])' → logprob: -4.283196926116943
    9. 's' → logprob: -4.533196926116943
    10. ')]' → logprob: -4.783196926116943

Token 886: ' lock' (ID: 8109)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -1.013632893562317
    2. ')' → logprob: -1.388632893562317
    3. ' in' → logprob: -2.1386327743530273
    4. ',' → logprob: -2.2636327743530273
    5. ' )' → logprob: -3.1386327743530273
    6. ' and' → logprob: -3.1386327743530273
    7. ' ' → logprob: -4.888632774353027
    8. '   ' → logprob: -4.888632774353027
    9. '[i' → logprob: -5.138632774353027
    10. ' of' → logprob: -5.513632774353027

Token 887: ' waits' (ID: 99777)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0674892663955688
    2. ')' → logprob: -1.6924892663955688
    3. ',' → logprob: -1.6924892663955688
    4. 's' → logprob: -2.3174891471862793
    5. ' waits' → logprob: -2.8174891471862793
    6. ' acquired' → logprob: -3.6924891471862793
    7. ' and' → logprob: -4.067489147186279
    8. ' ,' → logprob: -4.192489147186279
    9. '```' → logprob: -4.317489147186279
    10. '   ' → logprob: -4.942489147186279

Token 888: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06134956702589989
    2. ' for' → logprob: -2.936349630355835
    3. '_for' → logprob: -5.936349391937256
    4. ')' → logprob: -6.186349391937256
    5. '   ' → logprob: -6.686349391937256
    6. ' ' → logprob: -9.186349868774414
    7. '    ' → logprob: -9.436349868774414
    8. '_' → logprob: -9.936349868774414
    9. '[' → logprob: -9.936349868774414
    10. '       ' → logprob: -10.186349868774414

Token 889: ' earlier' (ID: 11965)
  Prédit: 'ear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.15484601259231567
    2. ' earlier' → logprob: -2.654845952987671
    3. 'former' → logprob: -3.029845952987671
    4. 'previous' → logprob: -4.40484619140625
    5. ' former' → logprob: -4.90484619140625
    6. ' previous' → logprob: -5.77984619140625
    7. ')' → logprob: -7.27984619140625
    8. 'prior' → logprob: -7.77984619140625
    9. '   ' → logprob: -7.90484619140625
    10. ' prior' → logprob: -8.40484619140625

Token 890: ' lock' (ID: 8109)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.8269637227058411
    2. ')' → logprob: -1.7019636631011963
    3. ' lock' → logprob: -1.8269636631011963
    4. 'locks' → logprob: -2.0769636631011963
    5. ' locks' → logprob: -2.7019636631011963
    6. ' in' → logprob: -5.076963901519775
    7. ')
' → logprob: -5.451963901519775
    8. ' )' → logprob: -5.576963901519775
    9. '_lock' → logprob: -6.076963901519775
    10. '_l' → logprob: -6.576963901519775

Token 891: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01352475956082344
    2. 's' → logprob: -4.888524532318115
    3. ')
' → logprob: -5.888524532318115
    4. ')s' → logprob: -7.263524532318115
    5. '):' → logprob: -7.513524532318115
    6. '   ' → logprob: -7.763524532318115
    7. '):
' → logprob: -8.138525009155273
    8. '[i' → logprob: -8.263525009155273
    9. '[s' → logprob: -8.388525009155273
    10. ')`' → logprob: -9.013525009155273

Token 892: ' has' (ID: 853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: ' cycle' (ID: 15839)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.30131858587265015
    2. 'a' → logprob: -2.176318645477295
    3. ' cycles' → logprob: -2.301318645477295
    4. ' a' → logprob: -3.801318645477295
    5. ' at' → logprob: -4.301318645477295
    6. 'at' → logprob: -5.551318645477295
    7. 'cycle' → logprob: -6.051318645477295
    8. 'any' → logprob: -6.551318645477295
    9. 'edges' → logprob: -7.551318645477295
    10. 'back' → logprob: -7.551318645477295

Token 894: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06241105869412422
    2. '<|end|>' → logprob: -2.937411069869995
    3. ' for' → logprob: -5.437410831451416
    4. '<|end|>' → logprob: -7.062410831451416
    5. ')' → logprob: -7.187410831451416
    6. 'for' → logprob: -8.187411308288574
    7. '       ' → logprob: -8.312411308288574
    8. '    
' → logprob: -8.562411308288574
    9. '    ' → logprob: -8.812411308288574
    10. '
' → logprob: -8.937411308288574

Token 895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03156452998518944
    2. '<|end|>' → logprob: -4.281564712524414
    3. ' for' → logprob: -4.656564712524414
    4. 'for' → logprob: -5.531564712524414
    5. '
' → logprob: -5.906564712524414
    6. '#' → logprob: -8.531564712524414
    7. '```' → logprob: -8.656564712524414
    8. '    
' → logprob: -8.656564712524414
    9. ')' → logprob: -9.156564712524414
    10. '<|end|>' → logprob: -10.031564712524414

Token 896: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06338796764612198
    2. 'for' → logprob: -3.813387870788574
    3. ' for' → logprob: -3.938387870788574
    4. 'locks' → logprob: -4.438387870788574
    5. ' locks' → logprob: -5.688387870788574
    6. 'from' → logprob: -6.688387870788574
    7. 'lock' → logprob: -6.813387870788574
    8. '```' → logprob: -7.688387870788574
    9. ' from' → logprob: -7.813387870788574
    10. '#' → logprob: -7.938387870788574

Token 897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5031896829605103
    2. ' =' → logprob: -1.6281896829605103
    3. '[' → logprob: -1.7531896829605103
    4. '[u' → logprob: -3.8781895637512207
    5. '=[' → logprob: -5.878189563751221
    6. '```' → logprob: -7.253189563751221
    7. '<|end|>' → logprob: -7.378189563751221
    8. '[:]' → logprob: -8.753190040588379
    9. '[]' → logprob: -9.003190040588379
    10. '[v' → logprob: -9.378190040588379

Token 898: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. ' [' → logprob: -12.375004768371582
    3. '10' → logprob: -16.875003814697266
    4. '[len' → logprob: -20.250003814697266
    5. '0' → logprob: -21.250003814697266
    6. '[int' → logprob: -21.875003814697266
    7. '   ' → logprob: -22.000003814697266
    8. '{' → logprob: -22.375003814697266
    9. '[-' → logprob: -22.375003814697266
    10. '```' → logprob: -22.625003814697266

Token 899: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.0
    4. 'False' → logprob: -19.75
    5. '[' → logprob: -20.125
    6. '-' → logprob: -21.25
    7. '000' → logprob: -21.625
    8. '۰' → logprob: -22.125
    9. '```' → logprob: -22.25
    10. '10' → logprob: -22.75

Token 900: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.60986328125
    2. ' for' → logprob: -0.98486328125
    3. '[u' → logprob: -2.85986328125
    4. 'for' → logprob: -4.23486328125
    5. '(u' → logprob: -5.10986328125
    6. '   ' → logprob: -6.35986328125
    7. '[:]' → logprob: -6.60986328125
    8. '[' → logprob: -6.73486328125
    9. ' ]' → logprob: -8.35986328125
    10. ']
' → logprob: -9.23486328125

Token 901: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. 'len' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.75
    4. 'g' → logprob: -19.5
    5. '(' → logprob: -19.875
    6. '```' → logprob: -20.0
    7. '[' → logprob: -20.5
    8. '(len' → logprob: -20.75
    9. '   ' → logprob: -21.5
    10. '100' → logprob: -22.625

Token 902: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7422770857810974
    2. '<|end|>' → logprob: -0.7422770857810974
    3. '   ' → logprob: -3.367277145385742
    4. '<|end|>' → logprob: -5.742277145385742
    5. ' for' → logprob: -6.117277145385742
    6. 'for' → logprob: -6.242277145385742
    7. '[' → logprob: -6.742277145385742
    8. '```' → logprob: -6.867277145385742
    9. '    
' → logprob: -6.867277145385742
    10. ')' → logprob: -7.492277145385742

Token 903: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6642497181892395
    2. '   ' → logprob: -1.1642496585845947
    3. 'for' → logprob: -2.0392496585845947
    4. 'stack' → logprob: -3.2892496585845947
    5. ' stack' → logprob: -5.289249897003174
    6. '```' → logprob: -7.414249897003174
    7. '	stack' → logprob: -10.164249420166016
    8. ',' → logprob: -10.664249420166016
    9. 'def' → logprob: -11.789249420166016
    10. '(stack' → logprob: -11.914249420166016

Token 904: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023056311532855034
    2. ' for' → logprob: -4.023056507110596
    3. '   ' → logprob: -5.523056507110596
    4. 'stack' → logprob: -7.023056507110596
    5. ' stack' → logprob: -12.523056030273438
    6. '```' → logprob: -13.023056030273438
    7. '	for' → logprob: -13.273056030273438
    8. '  ' → logprob: -14.773056030273438
    9. '    
' → logprob: -15.023056030273438
    10. '    ' → logprob: -15.148056030273438

Token 905: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1277470737695694
    2. 'i' → logprob: -2.127747058868408
    3. ' u' → logprob: -7.252747058868408
    4. ' i' → logprob: -9.252747535705566
    5. 'node' → logprob: -12.002747535705566
    6. 'x' → logprob: -12.752747535705566
    7. 'l' → logprob: -12.877747535705566
    8. 'lock' → logprob: -13.627747535705566
    9. 'v' → logprob: -13.752747535705566
    10. '```' → logprob: -15.377747535705566

Token 906: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3871024250984192
    2. 'in' → logprob: -1.1371023654937744
    3. '0' → logprob: -9.012102127075195
    4. ' ' → logprob: -10.387102127075195
    5. 'i' → logprob: -11.012102127075195
    6. '
' → logprob: -11.262102127075195
    7. '```' → logprob: -11.262102127075195
    8. '(' → logprob: -11.387102127075195
    9. '	in' → logprob: -11.887102127075195
    10. 'u' → logprob: -12.637102127075195

Token 907: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '10' → logprob: -18.000036239624023
    4. '(range' → logprob: -18.500036239624023
    5. '   ' → logprob: -19.250036239624023
    6. '	range' → logprob: -20.000036239624023
    7. '```' → logprob: -20.125036239624023
    8. '
' → logprob: -20.375036239624023
    9. 'r' → logprob: -20.750036239624023
    10. ' ' → logprob: -21.250036239624023

Token 908: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.875009536743164
    3. '0' → logprob: -13.250009536743164
    4. '   ' → logprob: -15.250009536743164
    5. ' ' → logprob: -15.625009536743164
    6. '1' → logprob: -16.125009536743164
    7. 'g' → logprob: -17.750009536743164
    8. 'range' → logprob: -19.625009536743164
    9. '```' → logprob: -19.750009536743164
    10. '
' → logprob: -20.000009536743164

Token 909: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '0' → logprob: -19.125
    3. '１０' → logprob: -20.625
    4. 'g' → logprob: -20.75
    5. '1' → logprob: -21.0
    6. '```' → logprob: -21.875
    7. '
' → logprob: -22.25
    8. ' ' → logprob: -22.375
    9. '۱۰' → logprob: -22.625
    10. 'len' → logprob: -23.375

Token 910: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20147162675857544
    2. '):' → logprob: -1.7014715671539307
    3. '   ' → logprob: -10.576471328735352
    4. '):
' → logprob: -11.451471328735352
    5. ':' → logprob: -11.701471328735352
    6. ')' → logprob: -12.576471328735352
    7. ' ):
' → logprob: -12.826471328735352
    8. ':
' → logprob: -13.451471328735352
    9. ' ):' → logprob: -13.576471328735352
    10. '):

' → logprob: -14.076471328735352

Token 911: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08320408314466476
    2. 'if' → logprob: -3.0832040309906006
    3. ' if' → logprob: -3.4582040309906006
    4. '       ' → logprob: -6.33320426940918
    5. '```' → logprob: -8.33320426940918
    6. '	if' → logprob: -8.95820426940918
    7. ':' → logprob: -9.45820426940918
    8. ' ' → logprob: -9.95820426940918
    9. '    
' → logprob: -9.95820426940918
    10. ':
' → logprob: -10.20820426940918

Token 912: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08119513094425201
    2. ' if' → logprob: -2.581195116043091
    3. '   ' → logprob: -6.08119535446167
    4. '       ' → logprob: -11.956194877624512
    5. '```' → logprob: -12.706194877624512
    6. 'for' → logprob: -13.081194877624512
    7. '    ' → logprob: -13.456194877624512
    8. '
' → logprob: -13.456194877624512
    9. '	if' → logprob: -14.081194877624512
    10. ' ' → logprob: -14.331194877624512

Token 913: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04854399338364601
    2. ' visited' → logprob: -3.298543930053711
    3. 'dfs' → logprob: -5.423543930053711
    4. ' dfs' → logprob: -5.673543930053711
    5. ' not' → logprob: -6.673543930053711
    6. 'not' → logprob: -7.548543930053711
    7. '   ' → logprob: -8.423543930053711
    8. 'is' → logprob: -8.673543930053711
    9. ' is' → logprob: -8.923543930053711
    10. ' i' → logprob: -9.548543930053711

Token 914: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029025744646787643
    2. '[u' → logprob: -3.6540257930755615
    3. '[' → logprob: -6.529025554656982
    4. '[v' → logprob: -7.029025554656982
    5. '==' → logprob: -8.02902603149414
    6. '```' → logprob: -11.15402603149414
    7. ' ==' → logprob: -11.77902603149414
    8. '[
' → logprob: -12.27902603149414
    9. '[user' → logprob: -12.27902603149414
    10. '[j' → logprob: -12.65402603149414

Token 915: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6311224699020386
    2. '==' → logprob: -1.1311224699020386
    3. ']' → logprob: -2.131122589111328
    4. ' ==' → logprob: -3.631122589111328
    5. '[' → logprob: -9.756122589111328
    6. ')==' → logprob: -10.381122589111328
    7. ' ]' → logprob: -11.381122589111328
    8. '']==' → logprob: -11.381122589111328
    9. '==
' → logprob: -11.506122589111328
    10. '===' → logprob: -12.131122589111328

Token 916: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.5000057220459
    4. '```' → logprob: -18.3750057220459
    5. '=' → logprob: -19.1250057220459
    6. '[' → logprob: -19.8750057220459
    7. '۰' → logprob: -20.3750057220459
    8. '       ' → logprob: -20.5000057220459
    9. '
' → logprob: -20.8750057220459
    10. '00' → logprob: -21.1250057220459

Token 917: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3896559178829193
    2. ':
' → logprob: -1.1396559476852417
    3. '       ' → logprob: -6.139656066894531
    4. '           ' → logprob: -8.389656066894531
    5. ' and' → logprob: -8.764656066894531
    6. '):
' → logprob: -9.264656066894531
    7. '   ' → logprob: -9.639656066894531
    8. '():
' → logprob: -10.389656066894531
    9. '               ' → logprob: -12.139656066894531
    10. ',' → logprob: -12.139656066894531

Token 918: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3111867904663086
    2. '   ' → logprob: -2.1861867904663086
    3. ' if' → logprob: -2.1861867904663086
    4. '           ' → logprob: -3.9361867904663086
    5. 'if' → logprob: -4.811186790466309
    6. '        
' → logprob: -5.186186790466309
    7. '
' → logprob: -6.811186790466309
    8. ' for' → logprob: -6.936186790466309
    9. '```' → logprob: -6.936186790466309
    10. '<|end|>' → logprob: -7.061186790466309

Token 919: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17213015258312225
    2. '       ' → logprob: -2.4221301078796387
    3. ' if' → logprob: -2.6721301078796387
    4. '   ' → logprob: -8.672130584716797
    5. '           ' → logprob: -9.172130584716797
    6. '```' → logprob: -11.797130584716797
    7. '	if' → logprob: -12.047130584716797
    8. '
' → logprob: -14.047130584716797
    9. '     ' → logprob: -14.297130584716797
    10. '      ' → logprob: -14.547130584716797

Token 920: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0024788661394268274
    2. ' dfs' → logprob: -6.002479076385498
    3. '   ' → logprob: -13.62747859954834
    4. 'df' → logprob: -13.75247859954834
    5. 'DFS' → logprob: -15.75247859954834
    6. ' ' → logprob: -15.87747859954834
    7. '  ' → logprob: -15.87747859954834
    8. '    ' → logprob: -16.252479553222656
    9. '
' → logprob: -16.502479553222656
    10. 'dfa' → logprob: -17.252479553222656

Token 921: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. '(
' → logprob: -14.875004768371582
    4. '   ' → logprob: -17.6250057220459
    5. ' (' → logprob: -18.0000057220459
    6. '<|end|>' → logprob: -19.7500057220459
    7. '
' → logprob: -19.8750057220459
    8. '           ' → logprob: -20.1250057220459
    9. '(ii' → logprob: -20.1250057220459
    10. '```' → logprob: -20.2500057220459

Token 922: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.021331293508410454
    2. ',' → logprob: -4.021331310272217
    3. '(' → logprob: -6.521331310272217
    4. '(g' → logprob: -6.896331310272217
    5. ',i' → logprob: -8.521330833435059
    6. '           ' → logprob: -8.896330833435059
    7. ')' → logprob: -9.271330833435059
    8. '               ' → logprob: -10.021330833435059
    9. ')(' → logprob: -10.146330833435059
    10. '       ' → logprob: -10.271330833435059

Token 923: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.166338137816638e-05
    2. ' g' → logprob: -11.625031471252441
    3. 'i' → logprob: -11.750031471252441
    4. '0' → logprob: -11.750031471252441
    5. '10' → logprob: -12.375031471252441
    6. '   ' → logprob: -13.875031471252441
    7. ')' → logprob: -14.750031471252441
    8. '           ' → logprob: -15.250031471252441
    9. '9' → logprob: -15.875031471252441
    10. '```' → logprob: -15.875031471252441

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028022676706314087
    2. ',g' → logprob: -6.50280237197876
    3. ',i' → logprob: -6.75280237197876
    4. '):' → logprob: -10.002801895141602
    5. 'g' → logprob: -10.752801895141602
    6. ' ,' → logprob: -10.877801895141602
    7. ',s' → logprob: -11.377801895141602
    8. '[i' → logprob: -11.377801895141602
    9. ',u' → logprob: -11.502801895141602
    10. '(i' → logprob: -12.502801895141602

Token 925: ' visited' (ID: 18416)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.028390053659677505
    2. 'i' → logprob: -4.028389930725098
    3. '0' → logprob: -5.403389930725098
    4. ' g' → logprob: -5.653389930725098
    5. 'True' → logprob: -6.778389930725098
    6. 's' → logprob: -7.653389930725098
    7. 'None' → logprob: -8.403389930725098
    8. ' i' → logprob: -9.028389930725098
    9. '10' → logprob: -9.903389930725098
    10. '   ' → logprob: -10.653389930725098

Token 926: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03958245366811752
    2. '):
' → logprob: -3.4145824909210205
    3. ',' → logprob: -5.164582252502441
    4. '               ' → logprob: -9.914582252502441
    5. '   ' → logprob: -10.164582252502441
    6. '       ' → logprob: -10.664582252502441
    7. '           ' → logprob: -10.664582252502441
    8. '):
' → logprob: -11.289582252502441
    9. ' ):' → logprob: -11.414582252502441
    10. ')' → logprob: -11.789582252502441

Token 927: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029873713850975037
    2. '[]):' → logprob: -3.5298736095428467
    3. ' []' → logprob: -9.904873847961426
    4. '[])' → logprob: -10.154873847961426
    5. 'stack' → logprob: -10.904873847961426
    6. '[]
' → logprob: -11.654873847961426
    7. '[]>' → logprob: -13.404873847961426
    8. '[]}' → logprob: -13.779873847961426
    9. ' ' → logprob: -14.029873847961426
    10. '   ' → logprob: -14.404873847961426

Token 928: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47467631101608276
    2. '):
' → logprob: -0.9746763110160828
    3. ')' → logprob: -7.599676132202148
    4. '):
' → logprob: -9.849676132202148
    5. ')==' → logprob: -10.849676132202148
    6. '       ' → logprob: -11.849676132202148
    7. '               ' → logprob: -12.099676132202148
    8. '   ' → logprob: -12.349676132202148
    9. '           ' → logprob: -12.474676132202148
    10. ')>' → logprob: -13.974676132202148

Token 929: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000104616025055293
    2. ' return' → logprob: -9.750104904174805
    3. 'return' → logprob: -10.875104904174805
    4. '       ' → logprob: -11.625104904174805
    5. '           ' → logprob: -11.750104904174805
    6. '                   ' → logprob: -12.625104904174805
    7. '                       ' → logprob: -13.750104904174805
    8. '```' → logprob: -13.750104904174805
    9. ':return' → logprob: -13.875104904174805
    10. '              ' → logprob: -13.875104904174805

Token 930: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5321896076202393
    2. ' return' → logprob: -1.2821896076202393
    3. '               ' → logprob: -2.0321896076202393
    4. '       ' → logprob: -6.15718936920166
    5. '                   ' → logprob: -6.90718936920166
    6. '   ' → logprob: -7.78218936920166
    7. '	return' → logprob: -8.15718936920166
    8. '           ' → logprob: -8.90718936920166
    9. ':return' → logprob: -8.90718936920166
    10. '                       ' → logprob: -9.90718936920166

Token 931: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00026169343618676066
    2. ' True' → logprob: -8.250261306762695
    3. '"' → logprob: -15.500261306762695
    4. '   ' → logprob: -15.750261306762695
    5. '(True' → logprob: -19.125261306762695
    6. 'False' → logprob: -19.375261306762695
    7. ''' → logprob: -20.500261306762695
    8. '1' → logprob: -21.125261306762695
    9. '       ' → logprob: -21.375261306762695
    10. '           ' → logprob: -21.500261306762695

Token 932: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.399378566537052e-05
    2. '
' → logprob: -10.000083923339844
    3. '    
' → logprob: -11.125083923339844
    4. 'return' → logprob: -11.750083923339844
    5. '       ' → logprob: -12.125083923339844
    6. '<|end|>' → logprob: -12.375083923339844
    7. ' return' → logprob: -13.125083923339844
    8. '```' → logprob: -13.500083923339844
    9. '	return' → logprob: -14.250083923339844
    10. '<|end|>' → logprob: -15.250083923339844

Token 933: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024512779782526195
    2. 'return' → logprob: -9.000245094299316
    3. '
' → logprob: -9.500245094299316
    4. '       ' → logprob: -10.750245094299316
    5. '```' → logprob: -11.625245094299316
    6. '    
' → logprob: -12.125245094299316
    7. 'None' → logprob: -12.625245094299316
    8. ' return' → logprob: -12.625245094299316
    9. '           ' → logprob: -13.750245094299316
    10. '<|end|>' → logprob: -14.500245094299316

Token 934: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09005758166313171
    2. 'return' (adapté à ' return') → logprob: -2.465057611465454
    3. ' return' → logprob: -7.340057373046875
    4. '
' → logprob: -8.465057373046875
    5. '```' → logprob: -9.340057373046875
    6. '	return' → logprob: -10.215057373046875
    7. 'None' → logprob: -10.590057373046875
    8. '  ' → logprob: -10.840057373046875
    9. '    
' → logprob: -10.965057373046875
    10. '<|end|>' → logprob: -11.090057373046875

Token 935: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26382046937942505
    2. ' False' → logprob: -1.5138204097747803
    3. 'True' → logprob: -5.013820648193359
    4. ' True' → logprob: -5.263820648193359
    5. '(False' → logprob: -17.38882064819336
    6. '   ' → logprob: -18.88882064819336
    7. ' ' → logprob: -19.51382064819336
    8. '(True' → logprob: -19.51382064819336
    9. '_false' → logprob: -19.88882064819336
    10. ' ' → logprob: -20.76382064819336

Token 936: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: 'while' (ID: 7032)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04094437509775162
    2. '#' → logprob: -3.5409443378448486
    3. '       ' → logprob: -5.165944576263428
    4. 'for' → logprob: -5.540944576263428
    5. ' for' → logprob: -7.790944576263428
    6. 'def' → logprob: -8.04094409942627
    7. '           ' → logprob: -8.41594409942627
    8. ')' → logprob: -8.79094409942627
    9. '```' → logprob: -9.54094409942627
    10. 'import' → logprob: -9.91594409942627

Token 938: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.31326231360435486
    2. 'True' → logprob: -1.3132623434066772
    3. '(True' → logprob: -14.688261985778809
    4. '1' → logprob: -16.313262939453125
    5. '=True' → logprob: -17.313262939453125
    6. 'true' → logprob: -17.563262939453125
    7. ' ' → logprob: -17.563262939453125
    8. '   ' → logprob: -19.188262939453125
    9. ' line' → logprob: -20.063262939453125
    10. '  ' → logprob: -20.063262939453125

Token 939: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057269562035799026
    2. ':' → logprob: -3.80726957321167
    3. '():' → logprob: -4.93226957321167
    4. '(' → logprob: -5.43226957321167
    5. ' s' → logprob: -5.68226957321167
    6. '():
' → logprob: -5.80726957321167
    7. ':
' → logprob: -6.18226957321167
    8. ' (' → logprob: -6.30726957321167
    9. 's' → logprob: -6.30726957321167
    10. ' line' → logprob: -6.55726957321167

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09986366331577301
    2. ' line' → logprob: -2.4748637676239014
    3. ' s' → logprob: -4.724863529205322
    4. ' try' → logprob: -6.349863529205322
    5. 'line' → logprob: -9.84986400604248
    6. 'try' → logprob: -9.84986400604248
    7. 's' → logprob: -9.84986400604248
    8. '```' → logprob: -10.09986400604248
    9. '   ' → logprob: -10.97486400604248
    10. '	line' → logprob: -11.72486400604248

Token 941: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.21608223021030426
    2. 's' → logprob: -2.2160823345184326
    3. 'line' → logprob: -2.4660823345184326
    4. ' line' → logprob: -8.966082572937012
    5. ' try' → logprob: -9.091082572937012
    6. 'l' → logprob: -9.716082572937012
    7. '   ' → logprob: -9.966082572937012
    8. '```' → logprob: -11.216082572937012
    9. ' s' → logprob: -11.716082572937012
    10. 't' → logprob: -12.341082572937012

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0900573655962944
    2. ' =' → logprob: -2.465057373046875
    3. '=input' → logprob: -7.215057373046875
    4. '   ' → logprob: -8.965057373046875
    5. ' ' → logprob: -8.965057373046875
    6. '=int' → logprob: -9.715057373046875
    7. '=
' → logprob: -11.090057373046875
    8. '_' → logprob: -11.340057373046875
    9. '  ' → logprob: -11.965057373046875
    10. '>' → logprob: -12.465057373046875

Token 943: ' sys' (ID: 12228)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6957293748855591
    2. 'input' → logprob: -0.6957293748855591
    3. ' input' → logprob: -6.1957292556762695
    4. 'sys' → logprob: -7.6957292556762695
    5. ' int' → logprob: -9.44572925567627
    6. ' sys' → logprob: -12.44572925567627
    7. 'len' → logprob: -13.19572925567627
    8. '=input' → logprob: -14.32072925567627
    9. '=int' → logprob: -15.32072925567627
    10. '(input' → logprob: -15.82072925567627

Token 944: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.25283026695251465
    2. '.readline' → logprob: -1.5028302669525146
    3. '.' → logprob: -7.877830505371094
    4. '.stdout' → logprob: -8.502830505371094
    5. '=input' → logprob: -9.127830505371094
    6. '.read' → logprob: -9.877830505371094
    7. 'input' → logprob: -10.002830505371094
    8. 'stdin' → logprob: -10.127830505371094
    9. '.argv' → logprob: -11.377830505371094
    10. '   ' → logprob: -11.502830505371094

Token 945: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0087516784551553e-05
    2. '.read' → logprob: -11.87501049041748
    3. '.' → logprob: -13.25001049041748
    4. 'read' → logprob: -14.12501049041748
    5. '.stdin' → logprob: -15.37501049041748
    6. '().' → logprob: -15.62501049041748
    7. ' readline' → logprob: -16.250009536743164
    8. '.readlines' → logprob: -16.625009536743164
    9. '_read' → logprob: -17.250009536743164
    10. '_line' → logprob: -18.750009536743164

Token 946: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2821725010871887
    2. '().' → logprob: -1.407172441482544
    3. '()
' → logprob: -7.157172679901123
    4. '(' → logprob: -8.907172203063965
    5. '()>' → logprob: -11.157172203063965
    6. '```' → logprob: -11.282172203063965
    7. '())' → logprob: -11.407172203063965
    8. '()\' → logprob: -11.532172203063965
    9. '=' → logprob: -11.782172203063965
    10. '()!=' → logprob: -12.282172203063965

Token 947: '   ' (ID: 271)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.11869387328624725
    2. '.rstrip' → logprob: -2.3686938285827637
    3. '().' → logprob: -4.618693828582764
    4. 'rstrip' → logprob: -6.118693828582764
    5. 'strip' → logprob: -6.493693828582764
    6. '[:-' → logprob: -6.493693828582764
    7. 'if' → logprob: -6.868693828582764
    8. '.readline' → logprob: -6.993693828582764
    9. '   ' → logprob: -7.493693828582764
    10. '
' → logprob: -8.618694305419922

Token 948: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007686520111747086
    2. ' if' → logprob: -7.250768661499023
    3. 's' → logprob: -9.875768661499023
    4. 'n' → logprob: -12.625768661499023
    5. 'line' → logprob: -12.875768661499023
    6. '```' → logprob: -14.875768661499023
    7. 'strip' → logprob: -14.875768661499023
    8. 'code' → logprob: -15.125768661499023
    9. '   ' → logprob: -15.250768661499023
    10. 'b' → logprob: -16.000768661499023

Token 949: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.030013933777809143
    2. 'not' → logprob: -3.5300140380859375
    3. 'n' → logprob: -8.280014038085938
    4. ' n' → logprob: -11.530014038085938
    5. ' ' → logprob: -18.530014038085938
    6. '	not' → logprob: -19.280014038085938
    7. '   ' → logprob: -20.030014038085938
    8. '
' → logprob: -20.655014038085938
    9. 'n't' → logprob: -20.780014038085938
    10. '!' → logprob: -20.905014038085938

Token 950: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007099286303855479
    2. ' n' → logprob: -7.2507100105285645
    3. '_n' → logprob: -18.250709533691406
    4. '	n' → logprob: -18.750709533691406
    5. ' ' → logprob: -21.625709533691406
    6. ')n' → logprob: -21.750709533691406
    7. '$n' → logprob: -22.000709533691406
    8. '(n' → logprob: -22.250709533691406
    9. '
' → logprob: -22.500709533691406
    10. '.n' → logprob: -23.125709533691406

Token 951: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44168177247047424
    2. ':' → logprob: -1.3166817426681519
    3. '.strip' → logprob: -2.4416818618774414
    4. '   ' → logprob: -6.566681861877441
    5. '```' → logprob: -8.316681861877441
    6. ':return' → logprob: -9.316681861877441
    7. '.startswith' → logprob: -9.566681861877441
    8. 'strip' → logprob: -10.191681861877441
    9. '.' → logprob: -10.566681861877441
    10. '.rstrip' → logprob: -10.566681861877441

Token 952: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01815931126475334
    2. '       ' → logprob: -4.01815938949585
    3. ':' → logprob: -12.643158912658691
    4. '   ' → logprob: -13.018158912658691
    5. ' break' → logprob: -13.518158912658691
    6. 'break' → logprob: -14.518158912658691
    7. '```' → logprob: -14.518158912658691
    8. '	break' → logprob: -14.893158912658691
    9. ':
' → logprob: -15.018158912658691
    10. ' ' → logprob: -15.268158912658691

Token 953: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.18027223646640778
    2. '   ' → logprob: -1.9302722215652466
    3. '       ' → logprob: -4.430272102355957
    4. ' break' → logprob: -4.930272102355957
    5. '	break' → logprob: -7.305272102355957
    6. '```' → logprob: -10.930272102355957
    7. '_break' → logprob: -11.555272102355957
    8. '           ' → logprob: -12.555272102355957
    9. '   ' → logprob: -12.805272102355957
    10. '
' → logprob: -13.055272102355957

Token 954: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07918256521224976
    2. 's' → logprob: -2.5791826248168945
    3. '```' → logprob: -8.579182624816895
    4. ' s' → logprob: -9.579182624816895
    5. 'n' → logprob: -10.954182624816895
    6. 'line' → logprob: -11.329182624816895
    7. '``' → logprob: -13.204182624816895
    8. '`s' → logprob: -13.579182624816895
    9. '    
' → logprob: -14.329182624816895
    10. ' line' → logprob: -14.704182624816895

Token 955: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4767686128616333
    2. '   ' → logprob: -0.9767686128616333
    3. '```' → logprob: -5.976768493652344
    4. ' s' → logprob: -9.226768493652344
    5. 'n' → logprob: -10.851768493652344
    6. '``' → logprob: -11.101768493652344
    7. 'line' → logprob: -12.101768493652344
    8. '`s' → logprob: -12.226768493652344
    9. '    
' → logprob: -13.476768493652344
    10. 'input' → logprob: -13.476768493652344

Token 956: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003754999197553843
    2. '   ' → logprob: -8.125375747680664
    3. 'line' → logprob: -9.750375747680664
    4. '```' → logprob: -10.875375747680664
    5. 'seq' → logprob: -14.125375747680664
    6. ' s' → logprob: -14.500375747680664
    7. '``' → logprob: -15.000375747680664
    8. 'sequence' → logprob: -15.125375747680664
    9. 'n' (adapté à ' n') → logprob: -15.375375747680664
    10. '`s' → logprob: -16.250375747680664

Token 957: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008903791895136237
    2. ' =' → logprob: -7.125890254974365
    3. '=s' → logprob: -10.375890731811523
    4. '=line' → logprob: -10.875890731811523
    5. '=n' → logprob: -11.125890731811523
    6. '.strip' → logprob: -11.625890731811523
    7. 's' → logprob: -12.250890731811523
    8. 'strip' → logprob: -12.750890731811523
    9. '_strip' → logprob: -13.500890731811523
    10. '=int' → logprob: -14.250890731811523

Token 958: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011703446507453918
    2. 'int' → logprob: -6.7511701583862305
    3. ' n' → logprob: -16.501171112060547
    4. 'len' → logprob: -19.126171112060547
    5. ' int' → logprob: -20.251171112060547
    6. '(n' → logprob: -21.626171112060547
    7. '=int' → logprob: -21.876171112060547
    8. '[int' → logprob: -22.376171112060547
    9. '$n' → logprob: -22.501171112060547
    10. '_n' → logprob: -22.626171112060547

Token 959: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.005394553299993277
    2. 'strip' → logprob: -5.755394458770752
    3. '.rstrip' → logprob: -6.255394458770752
    4. '().' → logprob: -8.88039493560791
    5. '.readline' → logprob: -9.38039493560791
    6. '.' → logprob: -10.75539493560791
    7. 'rstrip' → logprob: -10.75539493560791
    8. 'int' → logprob: -11.88039493560791
    9. '   ' → logprob: -12.63039493560791
    10. '(strip' → logprob: -12.63039493560791

Token 960: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25227805972099304
    2. '()
' → logprob: -1.5022780895233154
    3. '())' → logprob: -8.627278327941895
    4. '()==' → logprob: -10.502278327941895
    5. '())
' → logprob: -10.877278327941895
    6. '=' → logprob: -11.127278327941895
    7. ')' → logprob: -11.127278327941895
    8. '():
' → logprob: -11.127278327941895
    9. '()\' → logprob: -11.127278327941895
    10. '   ' → logprob: -11.127278327941895

Token 961: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8772996068000793
    2. 'if' → logprob: -1.1272995471954346
    3. 's' → logprob: -1.3772995471954346
    4. '```' → logprob: -4.877299785614014
    5. ' if' → logprob: -8.627299308776855
    6. '``' → logprob: -9.377299308776855
    7. ' s' → logprob: -10.877299308776855
    8. '`s' → logprob: -12.127299308776855
    9. 'n' → logprob: -12.377299308776855
    10. 'try' → logprob: -13.127299308776855

Token 962: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24580097198486328
    2. 's' → logprob: -2.1208009719848633
    3. 'print' → logprob: -2.7458009719848633
    4. 'g' → logprob: -3.7458009719848633
    5. 'blocks' → logprob: -5.120800971984863
    6. 'result' → logprob: -6.245800971984863
    7. 'unsafe' → logprob: -7.120800971984863
    8. 'res' → logprob: -7.620800971984863
    9. 'graph' → logprob: -8.120800971984863
    10. 'locks' → logprob: -8.620800971984863

Token 963: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05620010197162628
    2. 'n' → logprob: -3.5562000274658203
    3. ' n' → logprob: -3.8062000274658203
    4. 'not' → logprob: -5.55620002746582
    5. 'n't' → logprob: -12.18120002746582
    6. ' ' → logprob: -13.68120002746582
    7. '	n' → logprob: -14.80620002746582
    8. 'len' → logprob: -16.18120002746582
    9. '	not' → logprob: -16.80620002746582
    10. ' len' → logprob: -16.93120002746582

Token 964: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133985996246338
    2. ' ==' → logprob: -1.3133985996246338
    3. '()==' → logprob: -9.438398361206055
    4. '=='' → logprob: -10.563398361206055
    5. '=' → logprob: -12.188398361206055
    6. ')==' → logprob: -12.438398361206055
    7. '```' → logprob: -12.563398361206055
    8. ']==' → logprob: -12.813398361206055
    9. '.startswith' → logprob: -12.813398361206055
    10. '=="' → logprob: -12.938398361206055

Token 965: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.7937284708023071
    2. ''' → logprob: -1.2937284708023071
    3. ''ex' → logprob: -1.9187284708023071
    4. '"' → logprob: -2.2937283515930176
    5. ''end' → logprob: -4.043728351593018
    6. '""' → logprob: -5.793728351593018
    7. ''q' → logprob: -6.043728351593018
    8. '"":' → logprob: -6.918728351593018
    9. ''u' → logprob: -7.418728351593018
    10. ''e' → logprob: -7.543728351593018

Token 966: '0' (ID: 15)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.515141487121582
    2. '':
' → logprob: -1.515141487121582
    3. '"' → logprob: -1.765141487121582
    4. '""' → logprob: -1.765141487121582
    5. '':' → logprob: -2.265141487121582
    6. ''' → logprob: -2.390141487121582
    7. '"'' → logprob: -5.140141487121582
    8. '\n' → logprob: -5.515141487121582
    9. '"":' → logprob: -6.265141487121582
    10. 'u' → logprob: -6.890141487121582

Token 967: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.034617602825164795
    2. '':' → logprob: -3.4096176624298096
    3. ':
' → logprob: -7.5346174240112305
    4. ':' → logprob: -8.53461742401123
    5. ''' → logprob: -9.03461742401123
    6. '   ' → logprob: -9.78461742401123
    7. '':
' → logprob: -10.78461742401123
    8. '\n' → logprob: -11.15961742401123
    9. ''):
' → logprob: -11.15961742401123
    10. '():
' → logprob: -12.53461742401123

Token 968: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25206121802330017
    2. '       ' → logprob: -1.5020612478256226
    3. ' break' → logprob: -10.127060890197754
    4. 'break' → logprob: -10.127060890197754
    5. '```' → logprob: -10.877060890197754
    6. '	break' → logprob: -11.002060890197754
    7. '   ' → logprob: -11.877060890197754
    8. '
' → logprob: -12.502060890197754
    9. ' ' → logprob: -13.502060890197754
    10. '	' → logprob: -14.127060890197754

Token 969: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03191525116562843
    2. ' break' → logprob: -3.5319151878356934
    3. '   ' → logprob: -6.281915187835693
    4. '	break' → logprob: -8.281915664672852
    5. '       ' → logprob: -10.156915664672852
    6. ' ' → logprob: -15.656915664672852
    7. '
' → logprob: -15.906915664672852
    8. '```' → logprob: -16.03191566467285
    9. '_break' → logprob: -16.15691566467285
    10. '           ' → logprob: -16.15691566467285

Token 970: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007229158189147711
    2. 's' → logprob: -5.007229328155518
    3. '```' → logprob: -7.882229328155518
    4. '    
' → logprob: -9.50722885131836
    5. ' s' → logprob: -10.38222885131836
    6. '``' → logprob: -11.75722885131836
    7. 'input' → logprob: -11.75722885131836
    8. 'code' → logprob: -12.75722885131836
    9. 'n' → logprob: -13.38222885131836
    10. 'line' → logprob: -13.50722885131836

Token 971: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3537101447582245
    2. 's' → logprob: -1.2287101745605469
    3. '```' → logprob: -5.353710174560547
    4. 'line' → logprob: -8.353710174560547
    5. 'code' → logprob: -8.853710174560547
    6. '``' → logprob: -9.728710174560547
    7. ' s' → logprob: -10.228710174560547
    8. '`s' → logprob: -11.478710174560547
    9. '	s' → logprob: -12.103710174560547
    10. '    
' → logprob: -12.728710174560547

Token 972: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.012018018402159214
    2. '   ' → logprob: -5.137018203735352
    3. 'blocks' → logprob: -5.262018203735352
    4. 'locks' → logprob: -7.262018203735352
    5. 'sequence' → logprob: -9.887018203735352
    6. 'g' → logprob: -10.137018203735352
    7. 'seq' → logprob: -10.387018203735352
    8. 'print' → logprob: -11.012018203735352
    9. 'line' → logprob: -11.512018203735352
    10. 'block' → logprob: -11.637018203735352

Token 973: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023963743820786476
    2. ' =' → logprob: -3.773963689804077
    3. '=sys' → logprob: -7.273963928222656
    4. '=s' → logprob: -11.523963928222656
    5. '   ' → logprob: -11.898963928222656
    6. '=input' → logprob: -12.273963928222656
    7. '=line' → logprob: -13.773963928222656
    8. 'tokens' → logprob: -15.023963928222656
    9. '=int' → logprob: -15.148963928222656
    10. 's' → logprob: -15.523963928222656

Token 974: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0015996063593775034
    2. 'n' → logprob: -6.6265997886657715
    3. ' sys' → logprob: -8.251599311828613
    4. 'input' → logprob: -11.501599311828613
    5. '   ' → logprob: -13.251599311828613
    6. '	sys' → logprob: -15.251599311828613
    7. '(sys' → logprob: -15.376599311828613
    8. ' n' → logprob: -15.626599311828613
    9. '=sys' → logprob: -15.751599311828613
    10. 's' → logprob: -15.876599311828613

Token 975: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.21354663372039795
    2. '.readline' → logprob: -1.713546633720398
    3. 'stdin' → logprob: -5.0885467529296875
    4. 'sys' → logprob: -5.7135467529296875
    5. '(stdin' → logprob: -6.7135467529296875
    6. '=sys' → logprob: -7.8385467529296875
    7. 'in' → logprob: -7.8385467529296875
    8. 's' → logprob: -8.088546752929688
    9. '.stdout' → logprob: -9.213546752929688
    10. '(sys' → logprob: -10.088546752929688

Token 976: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2695753276348114
    2. '.strip' → logprob: -1.5195753574371338
    3. '.readline' → logprob: -4.519575119018555
    4. '.rstrip' → logprob: -5.769575119018555
    5. '()' → logprob: -6.394575119018555
    6. '(strip' → logprob: -7.894575119018555
    7. '_strip' → logprob: -8.019575119018555
    8. '.' → logprob: -8.144575119018555
    9. 'strip' → logprob: -8.269575119018555
    10. 'rstrip' → logprob: -8.644575119018555

Token 977: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14313726127147675
    2. '()' → logprob: -2.018137216567993
    3. '()
' → logprob: -9.393136978149414
    4. '.rstrip' → logprob: -9.518136978149414
    5. '(' → logprob: -9.643136978149414
    6. '.strip' → logprob: -9.643136978149414
    7. 'rstrip' → logprob: -10.143136978149414
    8. '   ' → logprob: -10.768136978149414
    9. '()\' → logprob: -10.893136978149414
    10. '<|end|>' → logprob: -10.893136978149414

Token 978: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.7848862373502925e-05
    2. 'rstrip' → logprob: -10.500027656555176
    3. ' strip' → logprob: -15.625027656555176
    4. 's' → logprob: -16.875028610229492
    5. '_strip' → logprob: -16.875028610229492
    6. '.strip' → logprob: -18.375028610229492
    7. '```' → logprob: -20.125028610229492
    8. '(strip' → logprob: -20.250028610229492
    9. 'str' → logprob: -20.375028610229492
    10. 'r' → logprob: -20.500028610229492

Token 979: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32101184129714966
    2. '()' → logprob: -1.3210117816925049
    3. '()
' → logprob: -5.696012020111084
    4. ')' → logprob: -6.821012020111084
    5. '    
' → logprob: -7.071012020111084
    6. '<|end|>' → logprob: -7.821012020111084
    7. '().' → logprob: -7.946012020111084
    8. '(' → logprob: -8.071011543273926
    9. 'tokens' → logprob: -8.571011543273926
    10. '())' → logprob: -8.821011543273926

Token 980: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016603049589321017
    2. 'if' → logprob: -7.251660346984863
    3. 'result' → logprob: -7.376660346984863
    4. '```' → logprob: -8.626660346984863
    5. '    
' → logprob: -10.251660346984863
    6. 'is' → logprob: -10.501660346984863
    7. ' if' → logprob: -11.001660346984863
    8. '<|end|>' → logprob: -11.251660346984863
    9. '
' → logprob: -11.876660346984863
    10. '``' → logprob: -11.876660346984863

Token 981: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16570472717285156
    2. 'if' (adapté à ' if') → logprob: -2.1657047271728516
    3. '   ' → logprob: -3.9157047271728516
    4. 'result' → logprob: -4.040704727172852
    5. 'res' → logprob: -8.165704727172852
    6. 'unsafe' → logprob: -9.165704727172852
    7. ' if' → logprob: -9.915704727172852
    8. 'r' → logprob: -10.665704727172852
    9. 'ans' → logprob: -10.790704727172852
    10. ' print' → logprob: -11.040704727172852

Token 982: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4741339087486267
    2. ' is' → logprob: -0.9741339087486267
    3. 's' → logprob: -10.849133491516113
    4. 'len' → logprob: -10.849133491516113
    5. ' not' → logprob: -11.599133491516113
    6. 'not' → logprob: -12.224133491516113
    7. ' len' → logprob: -13.224133491516113
    8. ' s' → logprob: -13.849133491516113
    9. '   ' → logprob: -14.099133491516113
    10. ' ' → logprob: -15.724133491516113

Token 983: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9027791495318525e-05
    2. 'unsafe' → logprob: -11.125019073486328
    3. '_safe' → logprob: -13.500019073486328
    4. '_uns' → logprob: -13.625019073486328
    5. 'Unsafe' → logprob: -13.875019073486328
    6. 's' → logprob: -15.500019073486328
    7. '_s' → logprob: -15.750019073486328
    8. ' unsafe' → logprob: -15.750019073486328
    9. ' _' → logprob: -17.250019073486328
    10. '(' → logprob: -17.250019073486328

Token 984: 'unsafe' (ID: 66907)
  Prédit: 'unsafe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unsafe' → logprob: -1.9623810658231378e-05
    2. '_' → logprob: -10.875020027160645
    3. ' unsafe' → logprob: -15.125020027160645
    4. 's' → logprob: -15.875020027160645
    5. 'safe' → logprob: -16.250019073486328
    6. 'uns' → logprob: -16.750019073486328
    7. 'Unsafe' → logprob: -17.125019073486328
    8. 'unst' → logprob: -17.875019073486328
    9. 'unsupported' → logprob: -18.000019073486328
    10. '```' → logprob: -18.000019073486328

Token 985: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0021926139015704393
    2. '(' → logprob: -6.127192497253418
    3. ' (' → logprob: -12.377192497253418
    4. '(n' → logprob: -13.502192497253418
    5. 's' → logprob: -14.127192497253418
    6. '((' → logprob: -15.127192497253418
    7. '('' → logprob: -15.627192497253418
    8. '(
' → logprob: -15.752192497253418
    9. '(`' → logprob: -16.252193450927734
    10. '   ' → logprob: -16.252193450927734

Token 986: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06206784024834633
    2. '):
' → logprob: -2.812067747116089
    3. ':' → logprob: -9.687067985534668
    4. '():
' → logprob: -11.437067985534668
    5. '():' → logprob: -11.562067985534668
    6. ')' → logprob: -12.187067985534668
    7. '   ' → logprob: -12.312067985534668
    8. ':
' → logprob: -12.312067985534668
    9. '):
' → logprob: -13.312067985534668
    10. ' ):' → logprob: -14.187067985534668

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013925834558904171
    2. '   ' → logprob: -4.388926029205322
    3. 'print' → logprob: -6.638926029205322
    4. ' print' → logprob: -9.388925552368164
    5. '	print' → logprob: -11.138925552368164
    6. '	' → logprob: -12.513925552368164
    7. '
' → logprob: -13.388925552368164
    8. '```' → logprob: -13.763925552368164
    9. '	   ' → logprob: -14.138925552368164
    10. '           ' → logprob: -14.638925552368164

Token 988: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00024548539659008384
    2. '       ' → logprob: -9.000245094299316
    3. '   ' → logprob: -9.500245094299316
    4. ' print' → logprob: -10.000245094299316
    5. '	print' → logprob: -13.500245094299316
    6. 'sys' → logprob: -15.500245094299316
    7. '```' → logprob: -15.875245094299316
    8. '           ' → logprob: -16.125246047973633
    9. 'printf' → logprob: -19.500246047973633
    10. 'import' → logprob: -19.500246047973633

Token 989: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21161219477653503
    2. '"' → logprob: -2.2116122245788574
    3. '('' → logprob: -3.3366122245788574
    4. 'Unsafe' → logprob: -3.7116122245788574
    5. 'unsafe' → logprob: -4.336612224578857
    6. ''' → logprob: -5.586612224578857
    7. '(' → logprob: -6.336612224578857
    8. 'Yes' → logprob: -7.086612224578857
    9. 'YES' → logprob: -8.0866117477417
    10. 'Safe' → logprob: -8.3366117477417

Token 990: 'UN' (ID: 2926)
  Prédit: 'Unsafe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unsafe' → logprob: -0.5804988741874695
    2. 'UN' → logprob: -1.5804989337921143
    3. 'unsafe' → logprob: -1.5804989337921143
    4. 'Safe' → logprob: -4.705498695373535
    5. 'YES' → logprob: -5.080498695373535
    6. 'SAFE' → logprob: -5.205498695373535
    7. 'safe' → logprob: -6.080498695373535
    8. 'DE' → logprob: -6.330498695373535
    9. 'Yes' → logprob: -6.580498695373535
    10. '"' → logprob: -7.330498695373535

Token 991: 'SAFE' (ID: 147772)
  Prédit: 'SAFE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SAFE' → logprob: -0.0009174126898869872
    2. 'SA' → logprob: -7.000917434692383
    3. 'S' → logprob: -12.500917434692383
    4. 'safe' → logprob: -14.750917434692383
    5. 'SAT' → logprob: -14.750917434692383
    6. 'LOCK' → logprob: -15.000917434692383
    7. 'SAVE' → logprob: -15.500917434692383
    8. 'DE' → logprob: -15.625917434692383
    9. 'Safe' → logprob: -15.750917434692383
    10. '_SAFE' → logprob: -15.875917434692383

Token 992: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014295017346739769
    2. '")
' → logprob: -4.2642951011657715
    3. ')' → logprob: -9.514294624328613
    4. ')")' → logprob: -10.139294624328613
    5. '")
' → logprob: -11.514294624328613
    6. ')")
' → logprob: -12.264294624328613
    7. '!")' → logprob: -13.889294624328613
    8. 'LOCK' → logprob: -14.389294624328613
    9. 'SAFE' → logprob: -14.514294624328613
    10. ')
' → logprob: -14.889294624328613

Token 993: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004384174826554954
    2. 'else' → logprob: -7.750438213348389
    3. ' else' → logprob: -12.500438690185547
    4. '       ' → logprob: -12.625438690185547
    5. '```' → logprob: -15.375438690185547
    6. '<|end|>' → logprob: -15.625438690185547
    7. '	else' → logprob: -16.250438690185547
    8. 'continue' → logprob: -17.125438690185547
    9. '   ' → logprob: -18.000438690185547
    10. '}else' → logprob: -18.250438690185547

Token 994: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02333236299455166
    2. 'else' (adapté à ' else') → logprob: -3.773332357406616
    3. ' else' → logprob: -9.398332595825195
    4. '	else' → logprob: -13.148332595825195
    5. '       ' → logprob: -13.398332595825195
    6. '```' → logprob: -14.773332595825195
    7. '<|end|>' → logprob: -16.523332595825195
    8. '  ' → logprob: -17.273332595825195
    9. 'elif' → logprob: -17.648332595825195
    10. ' ' → logprob: -18.523332595825195

Token 995: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13651207089424133
    2. ':' → logprob: -2.261512041091919
    3. ':
' → logprob: -3.761512041091919
    4. '{' → logprob: -10.01151180267334
    5. '   ' → logprob: -10.26151180267334
    6. '      ' → logprob: -11.51151180267334
    7. '():
' → logprob: -11.63651180267334
    8. '<|end|>' → logprob: -11.63651180267334
    9. '```' → logprob: -11.76151180267334
    10. '           ' → logprob: -12.01151180267334

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013570250011980534
    2. 'print' → logprob: -6.626357078552246
    3. ' print' → logprob: -10.501357078552246
    4. '   ' → logprob: -13.126357078552246
    5. '	print' → logprob: -14.251357078552246
    6. '	' → logprob: -14.876357078552246
    7. '           ' → logprob: -15.501357078552246
    8. '	   ' → logprob: -15.876357078552246
    9. '```' → logprob: -16.75135612487793
    10. '     ' → logprob: -16.87635612487793

Token 997: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00019030878320336342
    2. '       ' → logprob: -9.000190734863281
    3. ' print' → logprob: -9.625190734863281
    4. '   ' → logprob: -14.875190734863281
    5. '	print' → logprob: -15.000190734863281
    6. '```' → logprob: -16.12519073486328
    7. '.print' → logprob: -18.12519073486328
    8. '           ' → logprob: -18.87519073486328
    9. '(print' → logprob: -19.12519073486328
    10. '``' → logprob: -19.12519073486328

Token 998: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.375011444091797
    3. '('' → logprob: -17.375011444091797
    4. '(
' → logprob: -17.875011444091797
    5. '("("' → logprob: -20.625011444091797
    6. '"' → logprob: -21.125011444091797
    7. '()' → logprob: -21.875011444091797
    8. ' ("' → logprob: -21.875011444091797
    9. '(("' → logprob: -22.000011444091797
    10. '("""' → logprob: -22.375011444091797

Token 999: 'SAFE' (ID: 147772)
  Prédit: 'SAFE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SAFE' → logprob: -4.9424725148128346e-05
    2. '"' → logprob: -10.125049591064453
    3. 'safe' → logprob: -12.375049591064453
    4. 'Safe' → logprob: -13.000049591064453
    5. 'OK' → logprob: -13.375049591064453
    6. ' SAFE' → logprob: -14.000049591064453
    7. '_SAFE' → logprob: -15.875049591064453
    8. 'SA' → logprob: -16.500049591064453
    9. ''' → logprob: -16.875049591064453
    10. 'PASS' → logprob: -17.000049591064453

Token 1000: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.038368381559848785
    2. ')' → logprob: -3.2883684635162354
    3. ')")' → logprob: -8.038368225097656
    4. '')' → logprob: -13.538368225097656
    5. '")
' → logprob: -13.538368225097656
    6. '}")' → logprob: -13.788368225097656
    7. '```' → logprob: -16.788368225097656
    8. '")}' → logprob: -16.913368225097656
    9. '!")' → logprob: -16.913368225097656
    10. ')")
' → logprob: -17.163368225097656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 998
Tokens correctement prédits (1ère position, stricte): 244
Tokens correctement prédits (1ère position, avec adaptation): 271
Tokens correctement prédits (top 10): 686
Précision stricte (1ère position): 24.45%
Précision adaptée (1ère position): 27.15%
Précision (top 10): 68.74%
================================================================================
